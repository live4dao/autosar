	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 09003395"
	.compiler_invocation	"ctc -f cc31476a --dep-file=Mcal\\Tricore\\McalLib\\ssc\\src\\.McalLib.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --fp-model=+float -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Lib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\App_Func -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\demo -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Adc_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Gtm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\AscLin_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Can_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\EthV2_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Stm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Main -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\APP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\BswM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanSm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Com -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\ComM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Common -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Crc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Det -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\DoIP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EcuM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Eth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthSM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTrcv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FiM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FlsTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Nm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\PduR -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\RamTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\StbM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\arpa -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\net -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\sys -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\stdc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\apps -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\priv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\UdpNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Cal -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Daq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pag -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pgm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Std -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\XcpOnEth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Library\\Vfx_ComE2E -g2 --make-target=Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O1 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.src ..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c"
	.compiler_name		"ctc"
	;source	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c'

	
$TC162
	
	.sdecl	'.text.Mcal_GetCpuWdgPassword.Code.Cpu0',code,cluster('Mcal_GetCpuWdgPassword')
	.sect	'.text.Mcal_GetCpuWdgPassword.Code.Cpu0'
	.align	2
	
	.global	Mcal_GetCpuWdgPassword

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	     1  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	     2  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	     3  ** Copyright (C) Infineon Technologies (2023)                                 **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	     4  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	     5  ** All rights reserved.                                                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	     6  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	     7  ** This document contains proprietary information belonging to Infineon       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	     8  ** Technologies. Passing on and copying of this document, and communication   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	     9  ** of its contents is not permitted without prior written authorization.      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    10  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    11  ********************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    12  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    13  **  FILENAME     : McalLib.c                                                  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    14  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    15  **  VERSION      : 41.0.0                                                     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    16  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    17  **  DATE         : 2023-05-16                                                 **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    18  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    19  **  VARIANT      : Variant PC                                                 **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    20  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    21  **  PLATFORM     : Infineon AURIX2G                                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    22  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    23  **  AUTHOR       : DL-AUTOSAR-Engineering                                     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    24  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    25  **  VENDOR       : Infineon Technologies                                      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    26  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    27  **  DESCRIPTION  : MCAL Library source file                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    28  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    29  **  SPECIFICATION(S) : NA                                                     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    30  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    31  **  MAY BE CHANGED BY USER : no                                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    32  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    33  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    34  /* [cover parentID={4C08C419-6659-4ae1-A70F-A5C8FC62A22B}][/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    35  /* [cover parentID={EBC12FA6-C2FB-416e-8518-7337947C6D63}][/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    36  /* [cover parentID={ACBBD55B-CDB7-4936-BF3A-D2A247B8A6DF}][/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    37  /* [cover parentID={F5CF0050-FA3F-4e14-8C3E-FD0E8CB08831}][/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    38  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    39  **                      Includes                                              **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    40  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    41  #include "IfxScu_reg.h"
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    42  #include "IfxScu_bf.h"
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    43  #include "IfxStm_reg.h"
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    44  #include "IfxCpu_reg.h"
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    45  #include "McalLib.h"
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    46  #include "SchM_McalLib.h"
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    47  /* Include Safety Error header definition */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    48  #if(MCALLIB_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    49  #include "Mcal_SafetyError.h"
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    50  #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    51  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    52  **                      Imported Compiler Switch Check                        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    53  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    54  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    55  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    56  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    57  **                      Private Macro Definitions                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    58  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    59  #define MCAL_PASSEQSHIFT                           (0xBU)  /* 11U */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    60  #define MCAL_PASSWORD_SHIFT                        (0xCU)  /* 12U */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    61  #define MCAL_LFSR_SHIFT                            (0xDU)  /* 13U */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    62  #define MCAL_INVALID_ARGUMENT                      (0x0U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    63  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    64  /* Macros for Mcal_GetGlobalDsprAddress/Mcal_GetLocalDsprAddress */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    65  #define MCAL_VALID_DSPR_MSB                        (0xDU)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    66  /* Macros for Mcal_GetGlobalPsprAddress/Mcal_GetLocalPsprAddress */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    67  #define MCAL_VALID_PSPR_MSB                        (0xCU)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    68  #define MCAL_PSPR_ADDRESS_MASK                     (0xF0100000U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    69  #define MCAL_PSPR_ADDRESS_MASK_N                   (~MCAL_PSPR_ADDRESS_MASK)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    70  #define MCAL_INVALID_CPU_ID_5                      (0x5U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    71  #define MCAL_SHIFT_UPPER_NIBBLE                    (0x1CU)/* Bit position 28 */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    72  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    73  #if (MCAL_NO_OF_CORES > 5U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    74  #define MCAL_INVALID_PSPR_ADDR                     (0x0U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    75  #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    76  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    77  #if (MCAL_NO_OF_CORES > 5U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    78  #define MCAL_INVALID_DSPR_ADDR                     (0x0U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    79  #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    80  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    81  /* Macros for ENDINIT protection */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    82  #define MCAL_ENDINIT_WDT_PWD_INV                   (0x3FU)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    83  #define MCAL_ENDINIT_WDT_PWD_MASK                  (0x0000FFFCU)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    84  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    85  /* Macros for Peripheral ENDINIT protection */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    86  #define MCAL_PER_ENDINIT_PROTECTED                 (0x1U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    87  #define MCAL_PER_ENDINIT_WDT_TIMER_REL             (0xFFFC0000U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    88  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    89  /* Macros for Safety ENDINIT protection */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    90  #define MCAL_SAFETY_ENDINIT_PROTECTED              (0x1U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    91  #define MCAL_SAFETY_ENDINIT_WDT_TIMER_REL          (0xFFFC0000U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    92  #define MCAL_DEFAULT_MASK_VALUE                    (uint32)(0xFFFFFFFFU)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    93  #define MCAL_SPINLOCK_DEFAULT_TIMEOUT              (uint32)(0x2710U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    94  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    95  /* Macros for CPUWDT ENDINIT protection */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    96  #define MCAL_ENDINIT_RELOAD_MASK                   (0xFFFF0000U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    97  #define MCAL_CPUWDTSR_TIMER_MASK                   (0xFFFF0000U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    98  #define MCAL_ENDINIT_TIMEOUT_VALUE                 (0x0000FFFCU)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	    99  #define MCAL_CPUWDT_TIMER_VALUE_MAX                (0xFFFFU)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   100  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   101  #define MCAL_CPUWDTCON0_UNLOCK                     (0x1U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   102  #define MCAL_CPUWDTCON0_LOCK                       (0x3U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   103  #define MCAL_CPUWDTCON0_DISABLE_ENDINIT            (0x2U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   104  #define MCAL_CPUWDTCON0_ENABLE_ENDINIT             (0x3U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   105  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   106  #define MCAL_AUTO_PWD_SEQ_ENABLED                  (0x1U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   107  #define MCAL_TIMER_CHECK_ENABLED                   (0x1U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   108  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   109  /* Macros for STM frequency calculation */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   110  #define MCAL_STM_TIMER_RESOL_ZERO                  (0x0U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   111  #define MCAL_STMCLK_DISABLED                       (0x0U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   112  #define MCAL_PLL0_CLK_SRC0_FREQ                    (0x1U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   113  #define MCAL_OSC0_CLK_PLL0_FREQ                    (0x1U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   114  #define MCAL_SYS_CLK_PLL0_FREQ                     (0x2U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   115  #define MCAL_RESOLUTION_U                          (0x3E8U) /* 1000U  */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   116  #define MCAL_OSCVAL_MHz                            (0x10U)  /* 16 Mhz */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   117  #define MCAL_OSCFREQ_MHz                           (0x1U)   /* 1 Mhz  */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   118  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   119  /* Macros for Spinlock address*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   120  #define SPINLOCKFREE                               (0x0U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   121  /*SpinLock is Available*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   122  #define SPINLOCKBUSY                               (0x1U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   123  /*SpinLock is Not Available*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   124  #define MCAL_TIMEOUT                               (0x3E8U) /* 1000U */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   125  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   126  #define MCAL_UPDATE_NEWPASSWORD                    (0x1U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   127  #define MCAL_NOUPDATE_PASSWORD                     (0x0U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   128  #define MCAL_DUMMY_PASSWORD                        (0x0U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   129  #define MCAL_SETENDINITPROTECTION                  (0x1U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   130  #define MCAL_RESETENDINITPROTECTION                (0x0U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   131  #define MCAL_32BIT_ACCESS                          (0x0U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   132  #define MCAL_16BIT_ACCESS                          (0x1U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   133  #define MCAL_16BIT_MAX_ADDR                        (0xFFFFU)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   134  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   135  /* Get the current STM Tick */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   136  /* MISRA2012_RULE_4_9_JUSTIFICATION: Function like macro defined for easy
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   137   * readability in code. No side effects foreseen by violating this MISRA rule.
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   138   */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   139  #define MCAL_GET_STM_TICK()                        (MODULE_STM0.TIM0.U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   140  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   141  **                      Imported Compiler Switch Checks                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   142  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   143  /* [cover parentID={491F788E-197E-4a54-B1C8-2902F835C275}]McalLib version
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   144     check[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   145  #ifndef MCALLIB_SW_MAJOR_VERSION
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   146   #error "MCALLIB_SW_MAJOR_VERSION is not defined. "
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   147  #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   148  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   149  #ifndef MCALLIB_SW_MINOR_VERSION
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   150   #error "MCALLIB_SW_MINOR_VERSION is not defined. "
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   151  #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   152  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   153  #ifndef MCALLIB_SW_PATCH_VERSION
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   154   #error "MCALLIB_SW_PATCH_VERSION is not defined. "
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   155  #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   156  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   157  /* Check for Correct inclusion of headers */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   158  #if ( MCALLIB_SW_MAJOR_VERSION != 20U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   159   #error "MCALLIB_SW_MAJOR_VERSION does not match. "
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   160  #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   161  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   162  #if ( MCALLIB_SW_MINOR_VERSION != 25U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   163   #error "MCALLIB_SW_MINOR_VERSION does not match. "
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   164  #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   165  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   166  #if (MCALLIB_SW_PATCH_VERSION != 0U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   167   #error "MCALLIB_SW_PATCH_VERSION does not match."
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   168  #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   169  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   170  **                      Private Variable Definitions                          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   171  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   172  /* [cover parentID={EA0715EE-3E3C-4aac-A42E-4B5CFC96CEED}]Memory Mapping
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   173     [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   174  /* [cover parentID={566ED99C-0D96-46ac-97BF-E97B04E2C700}]Memory mapping for
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   175     callout code is not applicable for McalLib[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   176  /* [cover parentID={E4047F9A-8865-4b2c-9D3C-385479854EAD}]Memory mapping for
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   177      configuration data is not applicable for McalLib[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   178  /* [cover parentID={72DABBEB-F27B-4677-B6B4-B53F634341BA}]Memory mapping for
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   179      variables[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   180  /* [cover parentID={D11431C7-DF20-470b-8994-6A31F882BA7C}][/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   181  #define MCALLIB_START_SEC_VAR_CLEARED_ASIL_B_GLOBAL_32
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   182  /* MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   183     without safeguard. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   184  /* MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   185     guideline. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   186  #include "McalLib_MemMap.h"
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   187  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   188  static uint32 Mcal_StmTimerResolution;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   189  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   190  static volatile uint32 Mcal_LockAddressSiecon0;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   191  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   192  static volatile uint32 Mcal_LockAddressEicon0;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   193  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   194  /* [cover parentID={72DABBEB-F27B-4677-B6B4-B53F634341BA}]Memory mapping for
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   195      variables[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   196  #define MCALLIB_STOP_SEC_VAR_CLEARED_ASIL_B_GLOBAL_32
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   197  /* MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   198     without safeguard. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   199  /* MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   200     guideline. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   201  #include "McalLib_MemMap.h"
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   202  /* [cover parentID={1A65EADD-AFD0-4845-B2D2-8257E086DD67}]No user mode macro
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   203  used [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   204  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   205  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   206  **                      Private Constant Definitions                          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   207  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   208  /* [cover parentID={5713A17A-3FA1-427f-A0B6-89125A17689A}]No user mode macro
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   209  used [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   210  #define MCALLIB_START_SEC_CONST_ASIL_B_GLOBAL_8
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   211  /* MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   212     without safeguard. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   213  /* MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   214     guideline. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   215  #include "McalLib_MemMap.h"
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   216  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   217  static const uint8 Mcal_kCoreXMemSegment[MCAL_COREID_MAX_VALUE + 0x1U] =
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   218  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   219    MCAL_CORE0_MEM_SEGMENT, /* Index 0 */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   220    #if ( MCAL_NO_OF_CORES > 1U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   221    MCAL_CORE1_MEM_SEGMENT, /* Index 1 */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   222    #if ( MCAL_NO_OF_CORES > 2U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   223    MCAL_CORE2_MEM_SEGMENT, /* Index 2 */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   224    #if ( MCAL_NO_OF_CORES > 3U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   225    MCAL_CORE3_MEM_SEGMENT, /* Index 3 */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   226    #if ( MCAL_NO_OF_CORES > 4U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   227    MCAL_CORE4_MEM_SEGMENT, /* Index 4 */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   228    #if ( MCAL_NO_OF_CORES > 5U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   229    MCAL_MEM_SEGMENT2_MSB,  /* Index 5 */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   230    MCAL_CORE5_MEM_SEGMENT  /* Index 6 */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   231    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   232    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   233    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   234    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   235    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   236  };
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   237  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   238  #define MCALLIB_STOP_SEC_CONST_ASIL_B_GLOBAL_8
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   239  /* MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   240     without safeguard. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   241  /* MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   242     guideline. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   243  #include "McalLib_MemMap.h"
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   244  /* MISRA2012_RULE_5_1_JUSTIFICATION: External identifiers going beyond
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   245    32 characters in generated code due to Autosar Naming constraints.*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   246  /* MISRA2012_RULE_5_2_JUSTIFICATION: External identifiers going beyond
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   247    32 characters in generated code due to Autosar Naming constraints.*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   248  /* MISRA2012_RULE_5_4_JUSTIFICATION: External identifiers going beyond
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   249    32 characters in generated code due to Autosar Naming constraints.*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   250  /* MISRA2012_RULE_5_5_JUSTIFICATION: External identifiers going beyond
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   251    32 characters in generated code due to Autosar Naming constraints.*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   252  #define MCALLIB_START_SEC_CONST_ASIL_B_GLOBAL_32
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   253  /* MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   254     without safeguard. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   255  /* MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   256     guideline. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   257  #include "McalLib_MemMap.h"
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   258  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   259  static const uint32 Mcal_kDsprEndAddress[MCAL_COREID_MAX_VALUE + 0x1U] =
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   260  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   261    MCAL_DSPR0_END_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   262    #if ( MCAL_NO_OF_CORES > 1U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   263    MCAL_DSPR1_END_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   264    #if ( MCAL_NO_OF_CORES > 2U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   265    MCAL_DSPR2_END_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   266    #if ( MCAL_NO_OF_CORES > 3U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   267    MCAL_DSPR3_END_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   268    #if ( MCAL_NO_OF_CORES > 4U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   269    MCAL_DSPR4_END_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   270    #if ( MCAL_NO_OF_CORES > 5U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   271    MCAL_INVALID_DSPR_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   272    MCAL_DSPR5_END_ADDR
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   273    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   274    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   275    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   276    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   277    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   278  };
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   279  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   280  static const uint32 Mcal_kPsprLocalEndAddress[MCAL_COREID_MAX_VALUE + 0x1U] =
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   281  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   282    MCAL_LOCAL_PSPR0_END_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   283    #if ( MCAL_NO_OF_CORES > 1U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   284    MCAL_LOCAL_PSPR1_END_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   285    #if ( MCAL_NO_OF_CORES > 2U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   286    MCAL_LOCAL_PSPR2_END_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   287    #if ( MCAL_NO_OF_CORES > 3U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   288    MCAL_LOCAL_PSPR3_END_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   289    #if ( MCAL_NO_OF_CORES > 4U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   290    MCAL_LOCAL_PSPR4_END_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   291    #if ( MCAL_NO_OF_CORES > 5U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   292    MCAL_INVALID_PSPR_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   293    MCAL_LOCAL_PSPR5_END_ADDR
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   294    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   295    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   296    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   297    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   298    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   299  };
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   300  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   301  static const uint32 Mcal_kPsprGlobalEndAddress[MCAL_COREID_MAX_VALUE + 0x1U] =
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   302  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   303    MCAL_PSPR0_END_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   304    #if ( MCAL_NO_OF_CORES > 1U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   305    MCAL_PSPR1_END_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   306    #if ( MCAL_NO_OF_CORES > 2U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   307    MCAL_PSPR2_END_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   308    #if ( MCAL_NO_OF_CORES > 3U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   309    MCAL_PSPR3_END_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   310    #if ( MCAL_NO_OF_CORES > 4U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   311    MCAL_PSPR4_END_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   312    #if ( MCAL_NO_OF_CORES > 5U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   313    MCAL_INVALID_PSPR_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   314    MCAL_PSPR5_END_ADDR
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   315    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   316    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   317    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   318    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   319    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   320  };
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   321  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   322  static const uint32 Mcal_kPsprGlobalBaseAddress[MCAL_COREID_MAX_VALUE + 0x1U] =
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   323  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   324    MCAL_PSPR0_BASE_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   325    #if ( MCAL_NO_OF_CORES > 1U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   326    MCAL_PSPR1_BASE_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   327    #if ( MCAL_NO_OF_CORES > 2U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   328    MCAL_PSPR2_BASE_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   329    #if ( MCAL_NO_OF_CORES > 3U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   330    MCAL_PSPR3_BASE_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   331    #if ( MCAL_NO_OF_CORES > 4U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   332    MCAL_PSPR4_BASE_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   333    #if ( MCAL_NO_OF_CORES > 5U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   334    MCAL_INVALID_PSPR_ADDR,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   335    MCAL_PSPR5_BASE_ADDR
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   336    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   337    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   338    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   339    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   340    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   341  };
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   342  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   343  /* MISRA2012_RULE_5_1_JUSTIFICATION: External identifiers going beyond
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   344    32 characters in generated code due to Autosar Naming constraints.*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   345  /* MISRA2012_RULE_5_2_JUSTIFICATION: External identifiers going beyond
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   346    32 characters in generated code due to Autosar Naming constraints.*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   347  /* MISRA2012_RULE_5_4_JUSTIFICATION: External identifiers going beyond
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   348    32 characters in generated code due to Autosar Naming constraints.*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   349  /* MISRA2012_RULE_5_5_JUSTIFICATION: External identifiers going beyond
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   350    32 characters in generated code due to Autosar Naming constraints.*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   351  #define MCALLIB_STOP_SEC_CONST_ASIL_B_GLOBAL_32
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   352  /* MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   353     without safeguard. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   354  /* MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   355     guideline. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   356  #include "McalLib_MemMap.h"
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   357  /* [cover parentID={1A65EADD-AFD0-4845-B2D2-8257E086DD67}]No user mode macro
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   358    used [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   359  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   360  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   361  **                      Private Type Definitions                              **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   362  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   363  /* Internal Structure definition for McalLib driver
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   364   * McalLib_CpuEndInitRetType is used to store the timer reload value at the
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   365   * time of EndInit reset and the current password in CON0 SFR.
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   366   */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   367  /*[cover parentID={D3F3A208-D26C-47a1-BDF9-5BFAF6406291}][/cover]*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   368  typedef struct
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   369  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   370    uint32 TimerRelValAtReset; /* Holds timer reload value at reset */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   371    uint32 Password;           /* Decrypted Password read from SFR */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   372  } McalLib_CpuEndInitRetType;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   373  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   374  **                      Private Function Declarations                         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   375  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   376  /*[cover parentID={4579FE20-92DA-4848-93DB-7AD4FD35DD50}]Memory mapping for
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   377     code[/cover]*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   378  #define MCALLIB_START_SEC_CODE_ASIL_B_GLOBAL
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   379  /* MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   380     without safeguard. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   381  /* MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   382     guideline. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   383  #include "McalLib_MemMap.h"
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   384  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   385  LOCAL_INLINE uint32 Mcal_lGetCpuIndex(void);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   386  LOCAL_INLINE uint16 Mcal_lDecryptPw(const uint32 Value);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   387  LOCAL_INLINE uint32 Mcal_lDelayResetTickCalibration(const uint8 ApiId);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   388  LOCAL_INLINE uint32 Mcal_lCpuRelValue(const uint32 CpuIndex,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   389                                        const uint32 WdtCpuCon0Value);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   390  LOCAL_INLINE uint32 Mcal_lCpuPwSequence(const uint32 CpuIndex,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   391                                          const uint32 WdtCpuCon0Value);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   392  LOCAL_INLINE void Mcal_lWriteSafetyEndInitProtection
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   393                                      (volatile void* const RegAddress,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   394                                       const uint32 DataValue,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   395                                       const uint32 Mask,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   396                                       const uint8  Accesstype,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   397                                       const uint8  ApiId);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   398  static McalLib_CpuEndInitRetType Mcal_lUpdateCpuEndInit(const uint32  NewPassword,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   399                                       const uint32  CoreIdIndex,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   400                                       const uint32  TimerRelValAtReset,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   401                                       const boolean UpdatePassword,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   402                                       const boolean SetResetProtection);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   403  static uint32 Mcal_lUpdatePeripheralEndInit(const uint32 NewPassword,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   404                                              const boolean UpdatePassword,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   405                                              const boolean SetResetProtection);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   406  static uint32 Mcal_lUpdateSafetyEndInit(const uint32 NewPassword,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   407                                          const boolean UpdatePassword,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   408                                          const boolean SetResetProtection);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   409  LOCAL_INLINE uint32 Mcal_lCalculateTimerReloadVal(const uint32 CoreId,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   410                                       const uint32 TimerRelValAtReset,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   411                                       const boolean SetResetProtection);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   412  static void Mcal_lGetSpinlock(volatile uint32 *const LockAddress,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   413                                const uint32 Timeout, const uint8 ApiId);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   414  LOCAL_INLINE void Mcal_lReleaseSpinlock(volatile uint32 * const LockAddress);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   415  #if (MCALLIB_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   416  static void Mcal_lReportError(const uint8 ApiId, const uint8 ErrorId);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   417  #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   418  /*[cover parentID={4579FE20-92DA-4848-93DB-7AD4FD35DD50}]Memory mapping for
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   419     code[/cover]*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   420  #define MCALLIB_STOP_SEC_CODE_ASIL_B_GLOBAL
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   421  /* MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   422     without safeguard. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   423  /* MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   424     guideline. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   425  #include "McalLib_MemMap.h"
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   426  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   427  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   428  **                      Global Constant Declarations                          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   429  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   430  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   431  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   432  **                      Global Variable Declarations                          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   433  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   434  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   435  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   436  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   437  **                      Global Function Definitions                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   438  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   439  /*[cover parentID={4579FE20-92DA-4848-93DB-7AD4FD35DD50}]Memory mapping for
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   440     code[/cover]*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   441  #define MCALLIB_START_SEC_CODE_ASIL_B_GLOBAL
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   442  /* MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   443     without safeguard. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   444  /* MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   445     guideline. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   446  #include "McalLib_MemMap.h"
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   447  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   448  ** Traceability     : [cover parentID={8366FBD5-CC94-4b46-84C1-1587582733A4}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   449  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   450  ** Syntax           : uint32 Mcal_GetCpuWdgPassword (void)                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   451  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   452  ** Description      : This interface is used by applications to retrieve the  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   453  **                    endinit password currently installed in the watchdog of **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   454  **                    the CPU they are currently executing on.                **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   455  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   456  ** Service ID       : 0x88                                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   457  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   458  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   459  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   460  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   461  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   462  ** Parameters(in)   : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   463  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   464  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   465  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   466  ** Return value     : Currently installed password                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   467  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   468  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   469  uint32 Mcal_GetCpuWdgPassword(void)
; Function Mcal_GetCpuWdgPassword
.L164:
Mcal_GetCpuWdgPassword:	.type	func

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   470  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   471    uint32 Password;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   472    /*[cover parentID={7ABA6FAF-7F08-48b8-B059-2F99F2798124}]Retrieve cpuindex
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   473       of current core[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   474    uint32 CoreIdIndex = Mcal_lGetCpuIndex();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   475  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   476    /* Retrieve the encrypted(partially inverted) password from the register */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   477    /* [cover parentID={714F01A3-0913-4052-9F62-D4E907791D82}]Extract the
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   478        password content from WDTCPUxCON0 reg PW bit[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   479    Password = Mcal_GetBitAtomic(MODULE_SCU.WDTCPU[CoreIdIndex].CON0.U,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   480                                 IFX_SCU_WDTCPU_CON0_PW_OFF,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   481                                 IFX_SCU_WDTCPU_CON0_PW_LEN);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   482    /* Decrypt the password (invert bits 0:5) */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   483    /* password by inverting bits 0:5[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   484    /* [cover parentID={A820A825-B92B-4ff8-87F0-D28F16C2F619}]Decrypt the
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   485        password by inverting bits 0:5[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   486    Password = Password ^ (uint32)MCAL_ENDINIT_WDT_PWD_INV;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   487    /* [cover parentID={E9117C0D-92CC-41a9-90CB-BE6DBC90F5C3}]Return  password
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   488       [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   489    return (Password);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   490  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   491  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   492  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   493  ** Traceability     : [cover parentID={C5FA4346-076A-4fce-AC48-91FD7E7C4CBF}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   494  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   495  ** Syntax           : uint32 Mcal_SetCpuWdgPassword (const uint32 Password)   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   496  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   497  ** Description      : This interface is used by applications to install a     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   498  **                    specified endinit password in the endinit registers of  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   499  **                    the watchdog of the CPU they are executing on.          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   500  **                    Previously stored data in the PW bitfield of            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   501  **                    WDTCPUxCON0 register is returned back to the caller     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   502  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   503  ** Service ID       : 0x85                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   504  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   505  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   506  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   507  ** Reentrancy       : Non Reentrant on same CPU, Reentrant on other CPUs      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   508  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   509  ** Parameters(in)   : Password - New password to be installed into            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   510  **                    WDTCPUxCON0 register                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   511  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   512  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   513  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   514  ** Return value     : return the previous installed password                  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   515  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   516  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   517  uint32 Mcal_SetCpuWdgPassword(const uint32 Password)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   518  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   519    McalLib_CpuEndInitRetType CpuEndInitRet;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   520    uint32 UpdatedPassword = (Password & (uint32)IFX_SCU_WDTCPU_CON0_PW_MSK);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   521    /* [cover parentID={C3A1147A-CF1C-480d-8134-75BEDE663A14}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   522     * Reterive CoreIdIndex
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   523     * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   524    uint32 CoreId = Mcal_lGetCpuIndex();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   525  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   526    /* Enter critical section */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   527    /* [cover parentID={4D3611DD-6749-4cc3-81CB-EADA6F27831F}]Enter crtical
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   528          section for updating CpuWdg password[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   529    SchM_Enter_McalLib_CpuEndInit();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   530  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   531    /* Update the new password */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   532    /* [cover parentID={D48BC0AA-A835-4f73-9183-5A9BB88B8066}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   533     * Update the new password
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   534     * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   535    CpuEndInitRet = Mcal_lUpdateCpuEndInit(UpdatedPassword, CoreId, 0x0U,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   536                                           MCAL_UPDATE_NEWPASSWORD,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   537                                           MCAL_RESETENDINITPROTECTION);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   538  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   539    /* Exit critical section */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   540    /* [cover parentID={3A2FCF58-EB50-44b4-AF19-75E0C63B690D}]Exit critical
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   541       section[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   542    SchM_Exit_McalLib_CpuEndInit();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   543  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   544    /* [cover parentID={B493E147-E76E-4186-9FDC-70714AA64E31}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   545     * Return Previously installed password
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   546     * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   547    return (CpuEndInitRet.Password);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   548  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   549  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   550  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   551  ** Traceability     : [cover parentID={1619BFC3-44C7-4fe5-84B7-EA6DC8570B6A}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   552  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   553  ** Syntax           : void Mcal_WriteCpuEndInitProtReg                        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   554  **                   (volatile void* const RegAddress, const uint32 DataValue)**
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   555  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   556  ** Description      : This interface is used by applications to resume        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   557  **                    protection of CPU endinit protected registers of the    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   558  **                    CPU they are executing on. This interface also supports **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   559  **                    write access to CPU endinit protected CSFRs.            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   560  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   561  ** Service ID       : 0x7E                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   562  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   563  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   564  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   565  ** Reentrancy       : Non Reentrant                                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   566  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   567  ** Parameters(in)   : RegAddress - CPU Endinit protected register address     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   568  **                    DataValue - Value to be written to the register located **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   569  **                    at RegAddress.                                          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   570  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   571  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   572  ** Return value     : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   573  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   574  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   575  void Mcal_WriteCpuEndInitProtReg(volatile void* const RegAddress,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   576                                    const uint32 DataValue)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   577  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   578    McalLib_CpuEndInitRetType CpuEndInitRet;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   579    uint32 CoreId;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   580    /* MISRA2012_RULE_11_6_JUSTIFICATION: The address of the register is
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   581     * compared against CSFR register offset.
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   582     * There are no other operation performed, hence this convesion
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   583     * does not cause any issue */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   584    uint32 TempAddr = (uint32)RegAddress;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   585  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   586    /* [cover parentID={E178D5D6-9647-4bde-9B6D-A42416AC714B}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   587       If SAFETY Error Check is Enabled[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   588    #if (MCALLIB_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   589    /* [cover parentID={AC213D25-D820-4cef-A724-CA3EB87EB2C6}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   590        Check if input address is null pointer[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   591    if ((RegAddress) == NULL_PTR)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   592    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   593      /* [cover parentID={8AA5A630-14E4-444b-AF64-6702217F5C39}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   594          Report error MCALLIB_E_PARAM_POINTER[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   595      Mcal_lReportError(MCALLIB_SID_CPUENDINIT, MCALLIB_E_PARAM_POINTER);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   596    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   597    /* [cover parentID={FE4D45F8-C269-41d8-A66C-28BF60649F7D}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   598       If address is not null pointer [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   599    else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   600    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   601    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   602      /* [cover parentID={5FC8A013-625D-433a-9381-7C74D60AA759}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   603       * Retrieve cpuindex of current core
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   604       * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   605      CoreId = Mcal_lGetCpuIndex();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   606  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   607      /* Enter critical section */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   608      /* [cover parentID={461765B3-4C5C-4a93-9F2B-8E85946F13B0}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   609       * Enter critical section
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   610       * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   611      SchM_Enter_McalLib_CpuEndInit();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   612  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   613      /* Reset CpuEndInit Protection */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   614      /* [cover parentID={2449C750-888D-4215-92C7-89A336D2BCF6}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   615       * Reset CpuEndInit Protection
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   616       * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   617      CpuEndInitRet = Mcal_lUpdateCpuEndInit(MCAL_DUMMY_PASSWORD, CoreId, 0x0U,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   618                                             MCAL_NOUPDATE_PASSWORD,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   619                                             MCAL_RESETENDINITPROTECTION);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   620  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   621      /* Update CPU Endinit protected register
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   622       * Note: CPU specific registers are updated using MTCR
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   623       */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   624      /* [cover parentID={FC76C818-3B35-46e8-8F71-06CAAA9B972B}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   625       * Update CPU Endinit protected register
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   626       * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   627      /* [cover parentID={9AB7EC4B-1C37-4b90-9D90-F7B9FE87F06E}][/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   628      if (TempAddr > MCAL_16BIT_MAX_ADDR)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   629      {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   630        /* MISRA2012_RULE_11_5_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   631         * pointer to void and pointer to object due to SFR access. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   632        /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   633         * pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   634        *((volatile uint32*)RegAddress) = (uint32)DataValue;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   635      }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   636      else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   637      {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   638        /* [cover parentID={33F5D436-8491-4d1b-B32F-EEDD8A451900}][/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   639        /* CPU specific registers are updated using MTCR */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   640        switch(TempAddr)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   641        {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   642          case CPU_PMA0:
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   643              MTCR(CPU_PMA0, DataValue);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   644              break;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   645          case CPU_PMA1:
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   646              MTCR(CPU_PMA1, DataValue);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   647              break;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   648          case CPU_ISP:
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   649              MTCR(CPU_ISP, DataValue);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   650              break;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   651          case CPU_BIV:
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   652              MTCR(CPU_BIV, DataValue);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   653              break;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   654          case CPU_BTV:
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   655              MTCR(CPU_BTV, DataValue);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   656              break;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   657          case CPU_SEGEN:
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   658              MTCR(CPU_SEGEN, DataValue);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   659              break;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   660          case CPU_DCON0:
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   661              MTCR(CPU_DCON0, DataValue);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   662              break;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   663          case CPU_PCON0:
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   664              MTCR(CPU_PCON0, DataValue);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   665              break;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   666          default:
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   667              /* This case is not possible, kept only for MISRA compliance */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   668              break;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   669        }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   670      }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   671  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   672      /* Set CpuEndInit Protection */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   673      /* [cover parentID={34F6FD8A-A61F-4636-B594-A600DB5FAC5F}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   674       * Set CpuEndInit Protection
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   675       * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   676      (void)Mcal_lUpdateCpuEndInit(MCAL_DUMMY_PASSWORD, CoreId,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   677                                   CpuEndInitRet.TimerRelValAtReset,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   678                                   MCAL_NOUPDATE_PASSWORD,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   679                                   MCAL_SETENDINITPROTECTION);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   680  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   681      /* Exit critical section */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   682      /* [cover parentID={60F5FA05-4D84-400c-9E59-108DA8315CE8}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   683       * Exit critical section
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   684       * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   685      SchM_Exit_McalLib_CpuEndInit();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   686    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   687  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   688  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   689  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   690  ** Traceability     : [cover parentID={5BE87D93-DC0C-4989-A16E-CE49AEE7BF0D}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   691  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   692  ** Syntax           : uint32 Mcal_GetSafetyEndInitPassword (void)             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   693  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   694  ** Description      : This interface is used by applications to retrieve the  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   695  **                    Safety endinit password currently installed in the      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   696  **                    Global ENDINIT control register (SEICON0 register).     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   697  **                    The password corresponds to EPW bitfield in register    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   698  **                    SEICON0.                                                **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   699  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   700  ** Service ID       : 0x87                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   701  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   702  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   703  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   704  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   705  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   706  ** Parameters(in)   : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   707  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   708  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   709  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   710  ** Return value     : Currently installed password                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   711  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   712  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   713  uint32 Mcal_GetSafetyEndInitPassword(void)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   714  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   715    uint32 Password;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   716  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   717    /* Retrieve the encrypted(partially inverted) password from the register */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   718    /* [cover parentID={7C4FBB47-84FA-4491-BE2D-D07F7C6AA2D1}]Retrieve the
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   719        encrypted  password from the register[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   720    Password = Mcal_GetBitAtomic(MODULE_SCU.SEICON0.U,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   721                                 IFX_SCU_SEICON0_EPW_OFF,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   722                                 IFX_SCU_SEICON0_EPW_LEN);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   723  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   724    /* Decrypt the password (invert bits 0:5) */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   725    /* [cover parentID={6180D731-B725-466c-8DC7-5CC0D41BB597}]Decrypt the
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   726        password[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   727    Password = Password ^ (uint32)MCAL_ENDINIT_WDT_PWD_INV;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   728    /* [cover parentID={50367A61-FB21-4c2e-9258-9AA88D7CA8AC}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   729        Return password[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   730    return (Password);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   731  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   732  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   733  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   734  ** Traceability     : [cover parentID={1D74AAF8-8492-4b33-B8D8-B865ECB04396}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   735  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   736  ** Syntax           : uint32 Mcal_SetSafetyEndInitPassword                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   737  **                                               (const uint32 Password)      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   738  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   739  ** Description      : This interface is used by applications to install a     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   740  **                    password for Safety endinit protection. The interface   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   741  **                    internally prepares the password (shifting, inversion   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   742  **                    etc.), installs the password and returns the previously **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   743  **                    installed password (from the EPW bitfield).             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   744  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   745  ** Service ID       : 0x80                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   746  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   747  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   748  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   749  ** Reentrancy       : Non Reentrant                                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   750  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   751  ** Parameters(in)   : Password - New password to be installed into            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   752  **                    SEICON0 register                                        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   753  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   754  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   755  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   756  ** Return value     : Returns the last installed password                     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   757  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   758  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   759  uint32 Mcal_SetSafetyEndInitPassword(const uint32 Password)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   760  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   761    uint32 OldPassword;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   762    uint32 NewPassword = (Password & (uint32)IFX_SCU_SEICON0_EPW_MSK);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   763  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   764    /* Critical section to protect SCU_SEICON0 register*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   765    /* [cover parentID={E6F5A6B8-5E08-496d-B4C3-EB42D886A1F7}]Enter Critical
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   766       Section for updating safety endinit password[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   767    SchM_Enter_McalLib_SafetyEndInit();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   768  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   769    /* Acquire the lock for SCU_SEICON0 register */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   770    /* [cover parentID={C098B134-9F92-4803-ABCD-54C25B8A9A8F}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   771     * Acquire the lock for SCU_SEICON0 register
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   772     * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   773    Mcal_lGetSpinlock(&Mcal_LockAddressSiecon0, \ 
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   774                     (uint32)MCAL_SPINLOCK_DEFAULT_TIMEOUT,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   775                     MCALLIB_SID_SETSAFETYENDINIT);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   776    /* [cover parentID={6CFA30E3-B332-47a0-9779-39A715C02A47}][/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   777    /* Reset ENDINIT protection and update the new password */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   778    OldPassword = Mcal_lUpdateSafetyEndInit(NewPassword,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   779                                            MCAL_UPDATE_NEWPASSWORD,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   780                                            MCAL_RESETENDINITPROTECTION);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   781  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   782    /* Release the lock for SCU_SEICCON0 register */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   783    /* [cover parentID={E81DDB92-1211-407b-A0C4-7CC4EA7E03B9}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   784     * Release the lock for SCU_SEICCON0 register
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   785     * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   786    Mcal_lReleaseSpinlock(&Mcal_LockAddressSiecon0);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   787  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   788    /* [cover parentID={EA17FFF8-6438-4167-80A3-470F8B14D1C4}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   789     * Exit critical section
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   790     * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   791    SchM_Exit_McalLib_SafetyEndInit();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   792  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   793    /* Return old password */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   794    /* [cover parentID={567C341C-482C-4c37-9651-52F4095AA60E}]Return old
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   795       password [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   796    return (OldPassword);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   797  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   798  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   799  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   800  ** Traceability     :[cover parentID={49C5FBA9-0673-47dd-8182-DE8AED479123}]  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   801  ** [/cover]                                                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   802  ** Syntax           : void Mcal_WriteSafetyEndInitProtReg                     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   803                       (volatile void* const RegAddress, const uint32 DataValue)**
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   804  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   805  ** Description      : This API is needed to write required values to safety   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   806  **                    end-init protected registers by unprotecting to write   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   807  **                    and protecting back to keep protection intact. This     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   808  **                    interface also supports write access to safety endinit  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   809  **                    protected CSFRs.                                        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   810  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   811  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   812  ** Service ID       : 0x7F                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   813  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   814  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   815  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   816  ** Reentrancy       : Non Reentrant                                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   817  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   818  ** Parameters(in)   : RegAddress - Safety Endinit protected register address  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   819  **                    DataValue - Value to be written to the register located **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   820  **                    at RegAddress                                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   821  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   822  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   823  ** Return value     : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   824  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   825  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   826  void Mcal_WriteSafetyEndInitProtReg(volatile void* const RegAddress,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   827                                      const uint32 DataValue)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   828  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   829    /* [cover parentID={4035DB5A-D359-4547-B3D4-AD4A8475F6EE}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   830     * If SAFETY Error Check is Enabled
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   831     * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   832    #if (MCALLIB_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   833    /* [cover parentID={2C16B817-914C-46a6-8232-4EE20FC3FDAA}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   834        Check if input address is null pointer[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   835    if ((RegAddress) == NULL_PTR)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   836    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   837      /* [cover parentID={27FF0329-1BC1-4339-91A7-E02687B80671}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   838       * Report error MCALLIB_E_PARAM_POINTER[/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   839       */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   840      Mcal_lReportError(MCALLIB_SID_SAFETYENDINIT,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   841                        MCALLIB_E_PARAM_POINTER);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   842    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   843    /* [cover parentID={AB76685F-687F-4e66-9DAC-E28B0DBCAFCE}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   844     * If address is not null pointer[/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   845     */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   846    else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   847    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   848    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   849      /* Write the data into safetyendinit register with default mask */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   850      /* [cover parentID={0AB9676C-BE6A-4851-AC15-612F9E23A897}][/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   851      Mcal_lWriteSafetyEndInitProtection(
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   852                                          RegAddress,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   853                                          DataValue,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   854                                          MCAL_DEFAULT_MASK_VALUE,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   855                                          MCAL_32BIT_ACCESS,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   856                                          MCALLIB_SID_SAFETYENDINIT
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   857                                        );
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   858    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   859  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   860  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   861  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   862  ** Traceability     :[cover parentID={D41CCA16-D6E9-473e-A7FD-96E5F50DA961}]  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   863  ** [/cover]                                                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   864  ** Syntax           : void Mcal_WriteSafetyEndInitProtReg16                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   865                       (volatile void* const RegAddress, const uint16 DataValue)**
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   866  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   867  ** Description      : This API is needed to write required values to safety   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   868  **                    end-init protected registers by unprotecting to write   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   869  **                    and protecting back to keep protection intact           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   870  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   871  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   872  ** Service ID       : 0x81                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   873  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   874  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   875  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   876  ** Reentrancy       : Non Reentrant                                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   877  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   878  ** Parameters(in)   : RegAddress - Safety Endinit protected register address  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   879  **                    DataValue - Value to be written to the register located **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   880  **                    at RegAddress                                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   881  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   882  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   883  ** Return value     : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   884  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   885  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   886  void Mcal_WriteSafetyEndInitProtReg16(volatile void* const RegAddress,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   887                                        const uint16 DataValue)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   888  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   889    /* [cover parentID={93B23F99-B0D3-4e77-B2DE-B7CA148C79AB}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   890        If SAFETY Error Check is Enabled[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   891    #if (MCALLIB_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   892    /* [cover parentID={5C03C912-F7C2-4380-9502-839E329DD953}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   893        Check if input address is null pointer[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   894    if ((RegAddress) == NULL_PTR)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   895    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   896      /* [cover parentID={8125DCB6-5FA7-4be5-B5AD-C214218F543A}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   897       * Report error MCALLIB_E_PARAM_POINTER[/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   898       */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   899      Mcal_lReportError(MCALLIB_SID_SAFETYENDINIT_16, \ 
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   900                        MCALLIB_E_PARAM_POINTER);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   901    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   902    /* [cover parentID={252C1D0A-F50F-4f7b-A454-567D7E438D0C}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   903     * If address is not null pointer[/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   904     */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   905    else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   906    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   907    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   908      /* [cover parentID={7FEB1C5E-2EFD-4f08-BE4C-84C4E63B6C7A}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   909         Write the data into safetyendinit register with default mask
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   910         [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   911      Mcal_lWriteSafetyEndInitProtection(
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   912                                          RegAddress,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   913                                          DataValue,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   914                                          MCAL_DEFAULT_MASK_VALUE,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   915                                          MCAL_16BIT_ACCESS,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   916                                          MCALLIB_SID_SAFETYENDINIT_16
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   917                                        );
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   918    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   919  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   920  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   921  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   922  ** Traceability     : [cover parentID={C056F09A-B74A-4ac8-A7E8-9B8D40D8C8E2}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   923  ** [/cover]                                                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   924  ** Syntax           : void Mcal_WriteSafetyEndInitProtRegMask                 **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   925  **                      (volatile void* const RegAddress,                     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   926  **                      const uint32 DataValue,                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   927  **                      uint32 Mask)                                          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   928  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   929  ** Description      : This API is needed to write required values to safety   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   930  **                    end-init protected register bits by unprotecting to     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   931  **                    write and protecting back to keep protection intact.    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   932  **                    This interface also supports write access to safety     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   933  **                    endinit protected CSFRs.                                **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   934  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   935  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   936  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   937  ** Service ID       : 0x8F                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   938  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   939  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   940  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   941  ** Reentrancy       : Non Reentrant                                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   942  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   943  ** Parameters(in)   : RegAddress - Safety Endinit protected register address  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   944  **                    DataValue - Value to be written to the register located **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   945  **                    at RegAddress                                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   946  **                    Mask - Value to be written to mask the register value   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   947  **                    need to be changed.                                     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   948  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   949  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   950  ** Return value     : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   951  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   952  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   953  void Mcal_WriteSafetyEndInitProtRegMask(volatile void* const RegAddress,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   954                                           const uint32 DataValue, uint32 Mask)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   955  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   956    /* [cover parentID={5974CFB6-87C9-4794-B9F9-0EC6DD775F98}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   957        If SAFETY Error Check is Enabled[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   958    #if (MCALLIB_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   959    /* [cover parentID={CBE8BCA9-7698-4c9d-8E65-EE8C1F75B35D}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   960        Check if input address is null pointer[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   961    if ((RegAddress) == NULL_PTR)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   962    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   963      /* [cover parentID={E2348FD8-212E-4299-88D4-3849DBE60CCF}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   964         Report error MCALLIB_E_PARAM_POINTER[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   965      Mcal_lReportError(MCALLIB_SID_SAFETYENDINITMASK,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   966                        MCALLIB_E_PARAM_POINTER);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   967    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   968    /* [cover parentID={1348778A-0EA6-4fb3-B370-4751F20C57D0}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   969       If address is not null pointer[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   970    else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   971    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   972    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   973      /* [cover parentID={D8F923BB-96E0-441d-A9F8-BA1A6D865DE4}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   974         Mcal_WriteSafetyEndInitProtRegMask[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   975      /* [cover parentID={F67D85E8-2ED7-481e-AA31-B1BC3FC37866}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   976         Write the data into safetyendinit register with mask[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   977      Mcal_lWriteSafetyEndInitProtection(
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   978                                          RegAddress,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   979                                          DataValue,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   980                                          Mask,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   981                                          MCAL_32BIT_ACCESS,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   982                                          MCALLIB_SID_SAFETYENDINITMASK
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   983                                        );
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   984    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   985  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   986  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   987  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   988  ** Traceability     : [cover parentID={E0C11962-A636-4404-B096-E13741CF52ED}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   989  ** [/cover]                                                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   990  ** Syntax           : uint32 Mcal_GetPeripheralEndInitPassword (void)         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   991  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   992  ** Description      : This interface is used by applications to retrieve the  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   993  **                    peripheral endinit password currently installed in the  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   994  **                    Global ENDINIT control register (EICON0 register).      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   995  **                    The password corresponds to bits 15:2 in register EICON0**
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   996  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   997  ** Service ID       : 0x82                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   998  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	   999  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1000  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1001  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1002  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1003  ** Parameters(in)   : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1004  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1005  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1006  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1007  ** Return value     : Currently installed password                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1008  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1009  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1010  uint32 Mcal_GetPeripheralEndInitPassword(void)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1011  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1012    uint32 Password;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1013  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1014    /* Retrieve the encrypted(partially inverted) password from the register */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1015    /* [cover parentID={C2FA35C2-FD4F-42ab-81A5-3CB77AB6293F}]Retrieve the
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1016       encrypted  password from the register[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1017    Password = Mcal_GetBitAtomic(MODULE_SCU.EICON0.U,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1018                                 IFX_SCU_EICON0_EPW_OFF,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1019                                 IFX_SCU_EICON0_EPW_LEN);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1020  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1021    /* Decrypt the password (invert bits 0:5) */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1022    /* [cover parentID={B8B47083-237D-44e7-8286-FAD882674D90}]Decrypt the
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1023       password[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1024    Password = Password ^ (uint32)MCAL_ENDINIT_WDT_PWD_INV;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1025  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1026    /* [cover parentID={8E0B1A74-D0AD-4d98-A6D4-7AB519A9F963}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1027       Return password[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1028    return (Password);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1029  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1030  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1031  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1032  ** Traceability     :[cover parentID={1C3749D6-0FFF-4339-B267-3167F5938B13}]  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1033  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1034  ** Syntax           : uint32 Mcal_SetPeripheralEndInitPassword                **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1035  **                   (const uint32 Password)                                  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1036  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1037  ** Description      : This interface is used by applications to install a     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1038  **                    password for peripheral endinit protection. The         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1039  **                    interface internally prepares the password (shifting,   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1040  **                    inversion etc.), installs the password and returns the  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1041  **                    previously installed password.                          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1042  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1043  ** Service ID       : 0x7C                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1044  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1045  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1046  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1047  ** Reentrancy       : Non Reentrant                                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1048  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1049  ** Parameters(in)   : Password - New password to be installed into            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1050  **                    EICON0 register                                         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1051  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1052  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1053  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1054  ** Return value     : Returns the last installed password                     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1055  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1056  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1057  uint32 Mcal_SetPeripheralEndInitPassword(const uint32 Password)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1058  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1059    uint32 OldPassword;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1060    uint32 NewPassword = (Password & (uint32)IFX_SCU_EICON0_EPW_MSK);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1061  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1062    /* Enter Critical section, to protect write to SCU_EICON0 register */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1063    /* [cover parentID={B0865877-FB51-4389-B51E-F3BECC0CD3F0}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1064     * Enter crtical section for updating peripheral endinit password
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1065     * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1066    SchM_Enter_McalLib_PeripheralEndInit();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1067  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1068    /* Acquire the Spinlock for writing tp SCU_EICCON0 register */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1069    /* [cover parentID={BA6A8376-519A-4681-9898-32B3C9AA155A}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1070     * Acquire the Spinlock for writing tp SCU_EICCON0 register
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1071     * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1072    Mcal_lGetSpinlock(&Mcal_LockAddressEicon0,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1073                     (uint32)MCAL_SPINLOCK_DEFAULT_TIMEOUT,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1074                     MCALLIB_SID_SETPERIPHERALENDINIT);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1075  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1076     /* [cover parentID={B2497D28-4A5A-4a41-89E8-B6549080E1E4}][/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1077    /* Reset ENDINIT protection and update the new password */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1078    OldPassword = Mcal_lUpdatePeripheralEndInit(NewPassword,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1079                                                MCAL_UPDATE_NEWPASSWORD,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1080                                                MCAL_RESETENDINITPROTECTION);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1081  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1082    /* Release the Spinlock */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1083    /* [cover parentID={7831D1EA-89DF-4b15-BBAB-425FACCE408B}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1084       Release the Spinlock
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1085       [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1086    Mcal_lReleaseSpinlock(&Mcal_LockAddressEicon0);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1087  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1088    /* Exit Critical section */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1089    /* [cover parentID={FA823BDD-51FD-4043-8D96-8D43F4109756}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1090     * Exit critical section
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1091     * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1092    SchM_Exit_McalLib_PeripheralEndInit();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1093  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1094    /*Return old password*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1095    /* [cover parentID={61C56107-C8EB-4fbf-9A29-8BEA6DEDBADF}]Return old
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1096       password [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1097    return (OldPassword);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1098  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1099  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1100  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1101  ** Traceability     : [cover parentID={382E875A-A388-4f3f-842B-BBD7143DEE70}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1102  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1103  ** Syntax           : Mcal_WritePeripEndInitProtReg                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1104  **                   (volatile void* const RegAddress, const uint32 DataValue)**
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1105  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1106  ** Description      :This API is needed to write required values to peripheral**
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1107  **                   protected registers by unprotecting to write end-init    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1108  **                   and protecting back to keep protection intact.           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1109  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1110  ** Service ID       : 0x7A                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1111  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1112  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1113  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1114  ** Reentrancy       : Non Reentrant                                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1115  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1116  ** Parameters(in)   : RegAddress - Peripheral Endinit protected register      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1117  **                    address.                                                **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1118  **                    DataValue - Value to be written to the register         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1119  **                    located at RegAddress.                                  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1120  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1121  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1122  ** Return value     : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1123  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1124  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1125  void Mcal_WritePeripEndInitProtReg(volatile void* const RegAddress,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1126                                     const uint32 DataValue)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1127  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1128    /* [cover parentID={AFFF6EC8-965F-4f68-A3DA-BBCC7AE589B1}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1129       If SAFETY Error Check is Enabled[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1130    #if (MCALLIB_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1131    /* [cover parentID={E437DC4F-781A-4f79-B1CC-4C6D0557C31D}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1132        Check if input address is null pointer[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1133    if ((RegAddress) == NULL_PTR)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1134    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1135      /* [cover parentID={55F2F56D-E927-47b0-9B15-38874239EA8D}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1136         Report error MCALLIB_E_PARAM_POINTER[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1137      Mcal_lReportError(MCALLIB_SID_PERIPHERALENDINIT,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1138                        MCALLIB_E_PARAM_POINTER);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1139    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1140    /* [cover parentID={68C78085-FCDC-4bf6-8D36-F75B06543DB5}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1141       If address is not null pointer [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1142    else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1143    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1144    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1145      /*Critical section to protect SCU_EICON0 ans SCU_EICON1 registers */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1146      /* [cover parentID={3B162CFE-48A4-41d9-A974-4EB51BFD64AD}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1147       * Enter critical section for write peripheral endinit protection reg
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1148       * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1149      SchM_Enter_McalLib_PeripheralEndInit();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1150  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1151      /* Acquire the Spinlock for writing tp SCU_EICCON0 register */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1152      /* [cover parentID={4AA7F08A-A41E-4f23-85D5-507F6D2CA4DE}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1153       * Acquire the Spinlock for writing tp SCU_EICCON0 register
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1154       * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1155      Mcal_lGetSpinlock(&Mcal_LockAddressEicon0,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1156                       (uint32)MCAL_SPINLOCK_DEFAULT_TIMEOUT,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1157                       MCALLIB_SID_PERIPHERALENDINIT);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1158  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1159      /* Reset Peripheral EndInit protection */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1160      /* [cover parentID={511EE30E-EAD8-4cff-BBF9-E6D3FC004DEB}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1161       * Reset Peripheral EndInit protection
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1162       * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1163      (void)Mcal_lUpdatePeripheralEndInit(MCAL_DUMMY_PASSWORD,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1164                                          MCAL_NOUPDATE_PASSWORD,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1165                                          MCAL_RESETENDINITPROTECTION);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1166  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1167      /* Update the register */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1168      /* [cover parentID={444D88B6-6F28-42d8-A9B3-DC73B0B2CD23}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1169       * Update the register
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1170       * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1171      /* MISRA2012_RULE_11_5_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1172       * pointer to void and pointer to object due to SFR access. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1173      /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1174       * pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1175      *((volatile uint32*)RegAddress) = DataValue;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1176  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1177      /* Set Peripheral EndInit protection */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1178      /* [cover parentID={DD8D453E-0FD7-4e1a-B2C2-C207595CC876}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1179       * Set Peripheral EndInit protection
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1180       * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1181      (void)Mcal_lUpdatePeripheralEndInit(MCAL_DUMMY_PASSWORD,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1182                                          MCAL_NOUPDATE_PASSWORD,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1183                                          MCAL_SETENDINITPROTECTION);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1184      /* Release the Spinlock */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1185      /* [cover parentID={0B9059B2-B68B-4462-92AF-41E0C00856B3}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1186       * Release the Spinlock
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1187       * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1188      Mcal_lReleaseSpinlock(&Mcal_LockAddressEicon0);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1189  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1190      /* [cover parentID={1363313D-5FAA-4a8f-853E-AF5A75668F77}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1191       * Exit critical section
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1192       * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1193      SchM_Exit_McalLib_PeripheralEndInit();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1194    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1195  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1196  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1197  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1198  ** Traceability     : [cover parentID={32C6BD4E-84D4-4d99-9939-40ACDFBADF92}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1199  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1200  ** Syntax           : uint32 Mcal_GetCpuPhysicalId(void)                      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1201  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1202  ** Description      : This interface is used by applications in a multicore   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1203  **                    environment to determine the CPU they are executing on. **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1204  **                    The API returns the contents of CORE_ID register, for   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1205  **                    the core on which it is invoked.                        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1206  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1207  ** Service ID       : 0x8B                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1208  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1209  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1210  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1211  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1212  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1213  ** Parameters(in)   : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1214  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1215  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1216  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1217  ** Return value     : Physical Core ID for the CPU on which this API is called**
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1218  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1219  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1220  uint32 Mcal_GetCpuPhysicalId(void)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1221  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1222    /* [cover parentID={67B47B7B-BCC4-4e5f-9A7E-1E171742E615}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1223       Read the CPU_CORE_ID register to retrieve the CoreId [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1224    uint32 CoreId = (uint32)MFCR(CPU_CORE_ID);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1225    /* [cover parentID={2E22F876-FA68-47b1-BFFC-3EBDC68F5C10}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1226       Return CoreId[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1227    return(CoreId);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1228  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1229  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1230  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1231  ** Traceability     : [cover parentID={19A3024B-65AF-4139-95D6-AF25CB4A476E}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1232  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1233  ** Syntax           : uint32 Mcal_GetGlobalDsprAddress                        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1234  **                    (                                                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1235  **                     const uint32 CpuId,                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1236  **                     const uint32 LocalDsprAddress                          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1237  **                    )                                                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1238  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1239  ** Description      : This interface is used by applications in a multicore   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1240  **                    environment to determine the global address of a local  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1241  **                    DSPR address of a specified CPU. A value 0 is returned  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1242  **                    in case an invalid input argument is passed             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1243  **                    (incorrect CpuId, local DSPR address)                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1244  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1245  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1246  ** Service ID       : 0x7B                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1247  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1248  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1249  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1250  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1251  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1252  ** Parameters(in)   : CpuId - Physical Core ID                                **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1253  **                    LocalDsprAddress - Local DSPR address for which global  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1254  **                    DSPR address is returned                                **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1255  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1256  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1257  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1258  ** Return value     : 0: Invalid input parameter passed                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1259  **                    Else, value returned the Global DSPR address            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1260  **                    If passed parameter is valid global DSPR address        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1261  **                    corresponding to passed CPU id then return              **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1262  **                    passed address as is.                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1263  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1264  uint32 Mcal_GetGlobalDsprAddress
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1265  (const uint32 CpuId, const uint32 LocalDsprAddress)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1266  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1267    /* Obtain the memory segment information to which
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1268     * LocalDsprAddress belongs to */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1269    /* [cover parentID={5AB06FBB-9343-4fe2-AEC4-6F40F2290CA4}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1270     * Extract the memory segment to which DSPR address belongs
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1271     * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1272    uint8 DsprMsb = (uint8)((LocalDsprAddress & (uint32)MCAL_DSPR_GLOBAL_MASK) >>
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1273                            MCAL_SHIFT_UPPER_NIBBLE);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1274  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1275    uint32  RetGlobalAddress = MCAL_INVALID_ARGUMENT;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1276  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1277    /* Is the input physical CpuId a valid value */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1278    /* [cover parentID={4601D034-5B02-4e38-8306-3B0B47BFD6E2}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1279     * Check the CpuID is not invalid (Core 5 or greater than or equal
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1280     * to maximum number of cores)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1281     * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1282    if((CpuId != (uint32)MCAL_INVALID_CPU_ID_5) &&
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1283        (CpuId <= (uint32)MCAL_COREID_MAX_VALUE))
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1284    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1285      /* Is LocalDsprAddress within the DSPR address range */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1286      /* The check against the starting address of DSPR memory range isnlt
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1287       * done as its base address starts from 0xM0000000 - 0xM0018000,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1288       * where 'M' corresponds to memory segment
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1289       */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1290      /* [cover parentID={7584D010-0D1C-4cec-8371-A89B322A1E92}]Local
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1291         DsprAddress within the DSPR address range[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1292      if((LocalDsprAddress & (uint32)MCAL_DSPR_GLOBAL_MASK_N) <=
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1293          Mcal_kDsprEndAddress[CpuId])
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1294      {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1295        /* Does LocalDsprAddress belong to memory segment 0xD */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1296        /* [cover parentID={C021555F-7DEF-4011-8235-C90C2DE91FF3}]LocalDspr
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1297           Address belong to memory segment 0xD[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1298        if (DsprMsb == (uint8)MCAL_VALID_DSPR_MSB)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1299        {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1300          /* Compute the Global DSPR address */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1301          /* [cover parentID={68068C41-3E2A-4f2c-ADF7-D527D8A53EF7}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1302              Compute globalDspraddress[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1303          RetGlobalAddress =
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1304                          ((LocalDsprAddress & (uint32)MCAL_DSPR_GLOBAL_MASK_N) |
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1305                          ((uint32)Mcal_kCoreXMemSegment[CpuId] <<
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1306                            MCAL_SHIFT_UPPER_NIBBLE));
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1307        }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1308        else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1309        {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1310          /* Validate if DSPR address's memory segment belongs to a
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1311           * valid CPUx memory segment */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1312          /*if ((DsprMsb != (uint8)MCAL_MEM_SEGMENT2_MSB) &&
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1313              (DsprMsb <= (uint8)MCAL_CORE0_MEM_SEGMENT) &&
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1314              (DsprMsb >= Mcal_kCoreXMemSegment[MCAL_COREID_MAX_VALUE]))*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1315          /* [cover parentID={B6E52E52-6E44-4bdf-95CD-25E11748601C}]GlobalDspr
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1316          address memory segment belong to valid CPU memory segment[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1317          if(DsprMsb == Mcal_kCoreXMemSegment[CpuId])
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1318          {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1319            /*[cover parentID={EA7BB3D2-D189-4931-80BF-6C6E091157F4}]Return
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1320                   GlobalDsprAddress[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1321            RetGlobalAddress = LocalDsprAddress;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1322          }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1323        }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1324      }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1325    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1326    /* [cover parentID={EA7BB3D2-D189-4931-80BF-6C6E091157F4}]Return
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1327       GlobalDsprAddress[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1328    /* [cover parentID={9E058E8D-CE5F-4aeb-A4ED-BA0B0CCFE5B6}]Return
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1329       GlobalDspraddress 0[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1330    return (RetGlobalAddress);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1331  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1332  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1333  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1334  ** Traceability     : [cover parentID={6A4C10C1-2C3C-468f-8F33-C02634550889}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1335  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1336  ** Syntax           : uint32 Mcal_GetLocalDsprAddress                         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1337  **                    (                                                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1338  **                     const uint32 GlobalDsprAddress                         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1339  **                    )                                                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1340  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1341  ** Description      : This API is used by applications in a multicore         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1342  **                    environment to determine the local CPU address of a     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1343  **                    global DSPR address of the CPU, this interface is       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1344  **                    invoked on. A value 0 is returned in case an invalid    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1345  **                    input argument is passed(incorrect global DSPR address) **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1346  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1347  ** Service ID       : 0x83                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1348  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1349  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1350  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1351  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1352  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1353  ** Parameters(in)   : GlobalDsprAddress - Global DSPR address                 **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1354  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1355  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1356  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1357  ** Return value     : 0: Invalid input parameter passed                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1358  **                    Else, value returned the local DSPR address             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1359  **                    If passed parameter is valid local DSPR address         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1360  **                    corresponding to currently executing CPU then routine   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1361  **                    shall return passed address as is                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1362  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1363  uint32 Mcal_GetLocalDsprAddress(const uint32 GlobalDsprAddress)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1364  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1365    uint32 DsprEndAddress;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1366    /* Obtain the memory segment information to which
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1367     * GlobalDsprAddress belongs to */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1368    /* [cover parentID={F43CEA65-A9BE-4051-99B2-D7AA361231AB}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1369     * Extract the memory segment to which DSPR address belongs
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1370     * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1371    uint8 DsprMsb = (uint8)((GlobalDsprAddress & (uint32)MCAL_DSPR_GLOBAL_MASK) >>
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1372                            MCAL_SHIFT_UPPER_NIBBLE);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1373  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1374    uint32 RetLocalAddress = MCAL_INVALID_ARGUMENT;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1375    /* [cover parentID={F1D77D46-E71E-461c-BB86-B438B9716DAC}]Check for CPUIndex
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1376       [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1377    uint32 CoreIndex = Mcal_lGetCpuIndex();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1378  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1379    /* Validate if Global DSPR address's memory segment is a
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1380     *  valid CPUx memory segment */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1381    /* [cover parentID={E163BFCC-7444-4c74-9762-D50D80ACA3B9}]Is
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1382       GlobalDsprAddress's memory segment a valid CPU memory segment[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1383    if ((DsprMsb != (uint8)MCAL_MEM_SEGMENT2_MSB) &&
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1384        (DsprMsb <= (uint8)MCAL_CORE0_MEM_SEGMENT) &&
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1385        (DsprMsb >= Mcal_kCoreXMemSegment[MCAL_COREID_MAX_VALUE]))
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1386    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1387      /* Is GlobalDsprAddress within the DSPR address range */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1388      /* The check against the starting address of DSPR memory range isn't
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1389       * done as its base address starts from 0xM0000000 - 0xM0018000, where
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1390       * 'M' corresponds to memory segment
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1391       */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1392      /* [cover parentID={F490A20E-4BB0-46d3-9E7E-78D3E82E289D}]Is
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1393         GlobalDsprAddress address within the DSPR address range[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1394      if((GlobalDsprAddress & (uint32)MCAL_DSPR_GLOBAL_MASK_N) <=
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1395          Mcal_kDsprEndAddress[MCAL_CORE0_MEM_SEGMENT - DsprMsb])
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1396      {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1397        /* Compute Local DSPR address */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1398        /* [cover parentID={CE9639D9-9374-49f3-950A-A8E65048B103}]Compute
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1399            Local DSPR address[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1400        RetLocalAddress =
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1401                          ((GlobalDsprAddress & (uint32)MCAL_DSPR_GLOBAL_MASK_N) |
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1402                           (uint32)MCAL_LOCAL_DSPR_BASE_ADDR);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1403      }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1404  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1405    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1406    else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1407    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1408      /* [cover parentID={26D4B584-E7D8-493b-B524-16A6C479D2BF}]GlobalDspr
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1409          Address belong to memory segment 0xD[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1410      if(DsprMsb == (uint8)MCAL_VALID_DSPR_MSB)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1411      {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1412        /* Calculate the DSPR end address */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1413        #if ( MCAL_NO_OF_CORES > 5U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1414        if (CoreIndex == MCAL_INVALID_CPU_ID_5)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1415        {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1416          DsprEndAddress = Mcal_kDsprEndAddress[MCAL_MAX_CORES];
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1417        }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1418        else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1419        #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1420        {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1421          DsprEndAddress = Mcal_kDsprEndAddress[CoreIndex];
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1422        }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1423  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1424        /* [cover parentID={7056C288-3337-4661-9838-32727B69CAED}]Input
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1425            parameter is valid localDspraddress with executing CPU
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1426            [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1427        if((GlobalDsprAddress & (uint32)MCAL_DSPR_GLOBAL_MASK_N) <=
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1428           DsprEndAddress)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1429        {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1430          /* [cover parentID={A13DD372-FA55-4fa2-9DE6-A9BE2182505B}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1431             Return LocalDsprAddress[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1432          RetLocalAddress = GlobalDsprAddress;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1433        }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1434  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1435      }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1436    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1437    /* [cover parentID={A13DD372-FA55-4fa2-9DE6-A9BE2182505B}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1438       Return LocalDsprAddress[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1439    /* [cover parentID={C8838677-BE78-49d8-8448-7EEE5C587AC8}]Return
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1440       LocalDsprAddress 0[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1441    return (RetLocalAddress);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1442  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1443  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1444  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1445  ** Traceability     : [cover parentID={3FCAA99A-4260-4c7e-9224-EAE68F1461C6}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1446  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1447  ** Syntax           : uint32 Mcal_GetGlobalPsprAddress                        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1448  **                    (                                                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1449  **                     const uint32 CpuId,                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1450  **                     const uint32 LocalPsprAddress                          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1451  **                    )                                                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1452  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1453  ** Description      : This interface is used by applications in a multicore   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1454  **                    environment to determine the global address of a local  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1455  **                    PSPR address of a specified CPU. A value 0 is returned  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1456  **                    in case an invalid input argument is passed             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1457  **                    (incorrect CpuId, local PSPR address)                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1458  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1459  ** Service ID       : 0x7D                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1460  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1461  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1462  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1463  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1464  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1465  ** Parameters(in)   : CpuId - Physical Core ID                                **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1466  **                    LocalPsprAddress - Local PSPR address for which global  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1467  **                    PSPR address is returned                                **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1468  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1469  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1470  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1471  ** Return value     : 0: Invalid input parameter passed                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1472  **                    Else, value returned the Global PSPR address            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1473  **                    If passed parameter is valid Global PSPR address        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1474  **                    corresponding to currently executing CPU then routine   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1475  **                    shall return passed address as is                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1476  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1477  uint32 Mcal_GetGlobalPsprAddress(const uint32 CpuId,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1478                                   const uint32 LocalPsprAddress)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1479  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1480    /* Obtain the memory segment information to which
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1481     * LocalPsprAddress belongs to */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1482    /* [cover parentID={403F7F86-1A80-48c4-A0EA-8E26D88266DB}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1483     * Extract the memory segment to which PSPR address belongs
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1484     * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1485    uint8 PsprMsb = (uint8)((LocalPsprAddress & (uint32)MCAL_PSPR_GLOBAL_MASK) >>
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1486                            MCAL_SHIFT_UPPER_NIBBLE);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1487    uint32 RetGlobalAddress = MCAL_INVALID_ARGUMENT;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1488    uint32 LocalRetAddress = LocalPsprAddress;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1489  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1490    /* Is the input physical CpuId a valid value */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1491    /* [cover parentID={7107E3A8-43A4-4d74-9810-7883B9E33371}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1492     * Check the CpuID is not invalid (Core 5 or greater than or equal to maximum
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1493     * number of cores)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1494     * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1495    if((CpuId != (uint32)MCAL_INVALID_CPU_ID_5) &&
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1496        (CpuId <= (uint32)MCAL_COREID_MAX_VALUE))
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1497    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1498      /* Does LocalPsprAddress belong to memory segment 0xC */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1499      /* [cover parentID={3B145523-EEA5-4b96-9540-53E3228BB612}]Local
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1500          PsprAddress belong to memory segment 0xC[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1501      if (PsprMsb == (uint8)MCAL_VALID_PSPR_MSB)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1502      {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1503        /* Is LocalPsprAddress within the PSPR address range */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1504        /* [cover parentID={E2C43B5E-E279-404a-8AD6-1919A5A32CE7}]Local
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1505           PsprAddress within the PSPR address range[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1506        if (LocalRetAddress <= Mcal_kPsprLocalEndAddress[CpuId])
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1507        {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1508          /* Compute the Global PSPR address */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1509          /* [cover parentID={9718F7E1-972D-4d85-B1D3-19833108A29D}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1510              Compute GlobalPSPR address[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1511          RetGlobalAddress =
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1512            (uint32)((LocalRetAddress & (uint32)MCAL_PSPR_GLOBAL_MASK_N) |
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1513            (((uint32)Mcal_kCoreXMemSegment[CpuId] << MCAL_SHIFT_UPPER_NIBBLE)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1514            | Mcal_kPsprGlobalBaseAddress[CpuId]));
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1515        }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1516      }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1517      else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1518      {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1519        /* Validate if PSPR address's memory segment is a
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1520         * valid Global CPUx memory segment */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1521        /*[cover parentID={D48BCD3E-A39E-41fd-ADE8-80102F454106}]PSPR address
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1522            memory segment is a valid Global CPUx memory segment[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1523        if (PsprMsb == Mcal_kCoreXMemSegment[CpuId])
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1524        {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1525          LocalRetAddress = (LocalRetAddress &
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1526                             (uint32)MCAL_PSPR_GLOBAL_MASK_N);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1527          /* [cover parentID={373CFC21-BBFA-422f-B29A-345340C106B9}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1528             Check if local PSPR address is more than or equal to global
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1529             PSPR base address and less than or equal to global PSPR end
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1530             address [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1531          if((LocalRetAddress >= Mcal_kPsprGlobalBaseAddress[CpuId])  &&
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1532              (LocalRetAddress <= Mcal_kPsprGlobalEndAddress[CpuId]))
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1533          {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1534            /* [cover parentID={14A6F0A2-A944-4aaa-854F-0E8C66FEA20A}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1535                Return GlobalPSPR address[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1536            RetGlobalAddress = LocalPsprAddress;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1537          }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1538        }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1539      }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1540    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1541    /* [cover parentID={14A6F0A2-A944-4aaa-854F-0E8C66FEA20A}]Return GlobalPSPR
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1542       address[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1543    /* [cover parentID={B3D4FDB4-1431-4344-8002-3B3FD3DBE383}]Return GlobalPSPR
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1544       address 0[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1545    return (RetGlobalAddress);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1546  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1547  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1548  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1549  ** Traceability     : [cover parentID={CD35B780-C410-4f80-98F4-722831388424}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1550  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1551  ** Syntax           : uint32 Mcal_GetLocalPsprAddress                         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1552  **                    (                                                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1553  **                     const  uint32 GlobalPsprAddress                        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1554  **                    )                                                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1555  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1556  ** Description      : This API is used by applications in a multicore         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1557  **                    environment to determine the local CPU address of a     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1558  **                    global PSPR address of the CPU, this interface is       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1559  **                    invoked on. A value 0 is returned in case an invalid    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1560  **                    input argument is passed(incorrect global PSPR address) **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1561  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1562  ** Service ID       : 0x84                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1563  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1564  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1565  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1566  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1567  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1568  ** Parameters(in)   : GlobalPsprAddress - Global PSPR address                 **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1569  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1570  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1571  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1572  ** Return value     : 0: Invalid input parameter passed                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1573  **                    Else, value returned the local PSPR address             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1574  **                    If passed parameter is valid local PSPR address         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1575  **                    corresponding to currently executing CPU then routine   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1576  **                    shall return passed address as is                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1577  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1578  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1579  uint32 Mcal_GetLocalPsprAddress(const uint32 GlobalPsprAddress)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1580  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1581    /* Obtain the memory segment information to which
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1582     * GlobalPsprAddress belongs to */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1583    /* [cover parentID={C88A6DFC-0AA1-4b7f-92E2-D40B9CEBF72B}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1584     * Compute an PSPR global end address based on available core
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1585     * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1586    /* [cover parentID={8D55C24F-2536-4651-B221-B3C2E1DAF6BF}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1587     *  Compute an PSPR global start address based on available core
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1588     * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1589    /* [cover parentID={3A0405BB-A65F-46b5-A4DC-64363E713D9F}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1590     * Compute an PSPR local end address based on available core
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1591     * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1592    /* [cover parentID={2C9717B8-872D-46ac-88C1-195339372B6E}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1593     * Compute Local PSPR address
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1594     * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1595    uint8 PsprMsb = (uint8)((GlobalPsprAddress & (uint32)MCAL_PSPR_GLOBAL_MASK) >>
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1596                            MCAL_SHIFT_UPPER_NIBBLE);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1597    uint32 RetLocalAddress = MCAL_INVALID_ARGUMENT;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1598    uint32 LocalRetAddress = GlobalPsprAddress;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1599    /* [cover parentID={88AD1AD5-66D4-4114-BC45-CB7F0111D626}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1600       Retrieve CPU index[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1601    uint32 CpuIndex = Mcal_lGetCpuIndex();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1602  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1603    /* Validate if Global PSPR address's memory segment is a
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1604     * valid CPUx memory segment */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1605    /* [cover parentID={E45A508B-6870-4523-8C60-3D302AA693A4}]Global PSPR
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1606        address's memory segment is a valid CPUx memory segment[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1607    if ((PsprMsb != (uint8)MCAL_MEM_SEGMENT2_MSB) &&
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1608        (PsprMsb <= (uint8)MCAL_CORE0_MEM_SEGMENT) &&
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1609        (PsprMsb >= Mcal_kCoreXMemSegment[(MCAL_COREID_MAX_VALUE)]))
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1610    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1611  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1612      LocalRetAddress = (LocalRetAddress & (uint32)MCAL_PSPR_GLOBAL_MASK_N);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1613      /* Is GlobalPsprAddress within the PSPR address range */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1614      /* [cover parentID={0A6EDA28-0C9F-4f61-BE7A-CF5254FC561E}]GlobalPspr
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1615          Address within the PSPR address range[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1616      if((LocalRetAddress >= Mcal_kPsprGlobalBaseAddress
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1617          [MCAL_CORE0_MEM_SEGMENT - PsprMsb]) && (LocalRetAddress <=
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1618              Mcal_kPsprGlobalEndAddress[MCAL_CORE0_MEM_SEGMENT - PsprMsb]))
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1619      {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1620        /* Compute Local PSPR address */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1621        /* [cover parentID={2C9717B8-872D-46ac-88C1-195339372B6E}]Compute
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1622           Local PSPR address[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1623        RetLocalAddress =
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1624                          (uint32)((LocalRetAddress & (uint32)MCAL_PSPR_ADDRESS_MASK_N)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1625                                   | (uint32)MCAL_LOCAL_PSPR_BASE_ADDR);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1626      }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1627    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1628    else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1629    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1630      /* Does GlobalPsprAddress belong to memory segment 0xC */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1631      /* [cover parentID={49C478D4-2415-4338-B240-445B9CA08490}]GlobalPspr
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1632          Address belong to memory segment 0xC[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1633      if (PsprMsb == (uint8)MCAL_VALID_PSPR_MSB)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1634      {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1635        /* Is GlobalPsprAddress a valid local PSPR address belonging
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1636                          to the executing core */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1637        /* [cover parentID={3A55B630-2EEB-4968-A499-49366CCC5792}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1638           GlobalPsprAddress a valid local PSPR address belonging to the
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1639           executing core[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1640        if(LocalRetAddress <= Mcal_kPsprLocalEndAddress[CpuIndex])
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1641        {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1642          /*[cover parentID={6552A987-2D25-4170-9013-3028CB051E91}]Return
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1643              Local PSPR address[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1644          RetLocalAddress = GlobalPsprAddress;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1645        }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1646      }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1647  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1648    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1649    /* [cover parentID={6552A987-2D25-4170-9013-3028CB051E91}]Return Local PSPR
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1650      address[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1651    /* [cover parentID={9D170B96-D5E4-46c2-B034-1A6C9734C791}]Return Local PSPR
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1652      address 0[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1653    return (RetLocalAddress);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1654  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1655  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1656  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1657  ** Traceability     : [cover parentID={106361C3-AE5B-4684-9B55-96C57BF8AC41}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1658  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1659  ** Syntax           : uint32 Mcal_DelayTickResolution (void)                  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1660  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1661  ** Description      : The interface is used by applications to retrieve in    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1662  **                    nanoseconds the resolution of the delay tick (STM timer)**
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1663  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1664  ** Service ID       : 0x8C                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1665  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1666  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1667  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1668  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1669  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1670  ** Parameters(in)   : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1671  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1672  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1673  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1674  ** Return value     : Resolution of STM timer delay tick in nanoseconds       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1675  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1676  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1677  uint32 Mcal_DelayTickResolution(void)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1678  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1679    /* Return the STM timer resolution is 1ns resolution */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1680    return (Mcal_StmTimerResolution);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1681  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1682  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1683  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1684  ** Traceability     : [cover parentID={06D30CED-D581-4f9d-88B2-BF39C78EA317}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1685  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1686  ** Syntax           : uint32 Mcal_DelayResetTickCalibration(void)             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1687  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1688  ** Description      : The interface is used by applications to indicate to    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1689  **                    MCALLib that the clock tree has changed. The expectation**
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1690  **                    is that as a result of invocation of this service, any  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1691  **                    internally cached tick resolution data is discarded.    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1692  **                    This service is expected to query the clock tree and    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1693  **                    determine the resolution. The interface returns in      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1694  **                    nanoseconds the resolution of the delay tick (STM timer)**
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1695  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1696  ** Service ID       : 0x86                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1697  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1698  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1699  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1700  ** Reentrancy       : Non Reentrant                                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1701  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1702  ** Parameters(in)   : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1703  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1704  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1705  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1706  ** Return value     : Resolution of delay tick in nanoseconds                 **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1707  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1708  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1709  uint32 Mcal_DelayResetTickCalibration(void)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1710  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1711    /* Added local variable TimerResolution to hold value of STM timer resolution */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1712    uint32 TimerResolution;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1713  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1714    /* [cover parentID={2203708E-A73E-4414-AC15-6ECB9D9A5858}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1715       Calculate STM timer resolution in 1ns resolution[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1716    /* [cover parentID={C59047B9-C9CC-4b5a-B2CD-EBE16E90A41B}][/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1717    /* Local variable assigned value of Mcal_lDelayResetTickCalibration
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1718    to avoid violation of CertC rule : EXP30-C Do not depend on the order 
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1719    of evaluation for side effects*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1720    TimerResolution = Mcal_lDelayResetTickCalibration(MCALLIB_SID_DELAYTICKRESOLUTION);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1721    Mcal_StmTimerResolution = TimerResolution;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1722  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1723    /* [cover parentID={F8D3FCA6-8D9A-406c-8E9F-28E04CFBFB5B}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1724     Return STM timer resolution[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1725    return (Mcal_StmTimerResolution);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1726  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1727  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1728  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1729  ** Traceability     : [cover parentID={B90FF39B-C537-412f-8234-E9B0307B4D62}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1730  ** [/cover]                                                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1731  ** Syntax           : uint32 Mcal_DelayGetTick (void)                         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1732  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1733  ** Description      : This interface is used by applications to retrieve the  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1734  **                    latest tick count of the underlying STM timer. The      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1735  **                    latest tick count in STM0_TIM0 is returned by this      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1736  **                    interface. There are two uses of this interface.        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1737  **                    Applications can retrieve a base tick count, add the    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1738  **                    desired delay to the base tick count and arrive at a    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1739  **                    terminal tick count. Applications can also then         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1740  **                    periodically invoke this interface to determine if the  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1741  **                    underlying timer has counted up to the terminal tick    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1742  **                    count.                                                  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1743  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1744  ** Service ID       : 0x8A                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1745  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1746  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1747  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1748  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1749  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1750  ** Parameters(in)   : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1751  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1752  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1753  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1754  ** Return value     : Latest lower 32 bit counter value of STM0 timer         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1755  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1756  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1757  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1758  uint32 Mcal_DelayGetTick(void)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1759  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1760    uint32 DelayTick = MCAL_GET_STM_TICK();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1761    return DelayTick;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1762  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1763  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1764  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1765  ** Traceability     :[cover parentID={1800AF01-292F-4937-B75B-A5A1CD450B30}]  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1766  **  [/cover]                                                                  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1767  ** Syntax           : uint32 Mcal_GetCpuIndex (uint32 CpuId)                  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1768  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1769  ** Description      : This interface is used by applications in a multicore   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1770  **                    environment to determine the CPU they are executing on. **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1771  **                    The API returns the contents of CORE_ID register,       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1772  **                   variable, structure for the core on which it is invoked. **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1773  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1774  ** Service ID       : 0x89                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1775  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1776  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1777  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1778  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1779  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1780  ** Parameters(in)   : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1781  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1782  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1783  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1784  ** Return value     : Returns the Core Index corresponding to the input       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1785  **                    physical Core Id. In case the input Core Id is an       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1786  **                    invalid value, then the API returns 0xFFFFFFFF          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1787  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1788  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1789  uint32 Mcal_GetCpuIndex(void)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1790  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1791    uint32 CpuIndex = Mcal_lGetCpuIndex();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1792  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1793    /* [cover parentID={1CEDCBE5-ECC4-42da-B01B-10D366516465}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1794     * Return the core Id
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1795     * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1796    return CpuIndex;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1797  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1798  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1799  /* [cover parentID={1B3AF15C-FD6B-43a1-8ACB-D951C425066B}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1800     McalLib_GetVersionInfo
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1801     [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1802  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1803  ** Traceability     : [cover parentID={79233180-2CAD-4a65-A94F-FEB42233EEC0}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1804  ** [/cover]                                                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1805  ** Syntax           : void McalLib_GetVersionInfo                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1806  **                                (Std_VersionInfoType* const versioninfo)    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1807  ** Description      : Function "McalLib_GetVersionInfo" shall have means to   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1808  **                    provide the version information of the MCALLIB module.  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1809  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1810  ** Service ID       : 0x79                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1811  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1812  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1813  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1814  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1815  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1816  ** Parameters(in)   : versioninfo - Pointer to where to store the version     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1817                        information of MCALLIB module.                          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1818  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1819  ** Parameters (out) : MCALLIB version information                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1820  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1821  ** Return value     : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1822  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1823  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1824  void  McalLib_GetVersionInfo(Std_VersionInfoType* const versioninfo)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1825  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1826    /* [cover parentID={469F845E-C354-42a3-B671-C8CB1FF18715}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1827       If SAFETY Error Check is Enabled[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1828    /* [cover parentID={8DE01E71-D128-4972-B0AF-D082246619F6}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1829       Error check[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1830    #if (MCALLIB_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1831    /* [cover parentID={3E0E8009-CCD1-4404-A60B-EDED50CA216F}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1832     Check if input parameter is null pointer[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1833    if ((versioninfo) == NULL_PTR)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1834    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1835      /* [cover parentID={64253942-C0B1-4ade-BC23-FAA4429C18A8}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1836         Report error MCALLIB_E_PARAM_POINTER[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1837      Mcal_lReportError(MCALLIB_SID_GETVERSIONINFO, MCALLIB_E_PARAM_POINTER);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1838    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1839    /* [cover parentID={75420898-D793-4c5f-94E0-2E9C44DA3DEB}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1840       Have all check passed?[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1841    else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1842    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1843    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1844      /* [cover parentID={100FDF35-3B62-4c30-9799-B7F79121EF87}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1845      Retrieve the version information of the module[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1846      ((Std_VersionInfoType*)(versioninfo))->vendorID = (uint16)MCALLIB_VENDOR_ID;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1847  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1848      /* Get McalLib Module ID */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1849      ((Std_VersionInfoType*)(versioninfo))->moduleID = (uint16)MCALLIB_MODULE_ID;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1850  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1851      /* Get McalLib module Software major version */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1852      ((Std_VersionInfoType*)(versioninfo))->sw_major_version =
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1853                                                  (uint8)MCALLIB_SW_MAJOR_VERSION;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1854  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1855      /* Get McalLib module Software minor version */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1856      ((Std_VersionInfoType*)(versioninfo))->sw_minor_version =
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1857                                                  (uint8)MCALLIB_SW_MINOR_VERSION;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1858  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1859      /* Get McalLib module Software patch version */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1860      ((Std_VersionInfoType*)(versioninfo))->sw_patch_version =
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1861                                                  (uint8)MCALLIB_SW_PATCH_VERSION;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1862    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1863  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1864  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1865  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1866  ** Traceability     : [cover parentID={FDC04393-3918-4d1a-BD98-97EB51ACDAB3}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1867  ** [/cover]                                                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1868  ** Syntax           : void Mcal_GetSpinlock                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1869  **                    ( volatile uint32 * const LockAddress,                  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1870  **                             const uint32 Timeout)                          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1871  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1872  ** Description     : This API will check if spinlock is available in an non   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1873  **                   atomic fashion and if spinlock is free then it is        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1874  **                   acquired in an atomic fashion acquired else it will      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1875  **                   try again until the timer tick provided by user is not   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1876  **                   less than difference between current and base stm ticks  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1877  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1878  ** Service ID       : 0x8D                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1879  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1880  ** Sync/Async      : Synchronous                                              **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1881  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1882  ** Reentrancy       : Non Reentrant                                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1883  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1884  ** Parameters(in)   : LockAddress - It is used to lock the shared variables.  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1885  **                    Timeout - It is total time provided in micro second by  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1886  **                              user using which spinlock should be acquired. **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1887  **                              Timeout value should be in range of 1 us to   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1888  **                              1048575 us (timeout when passed as 1 indicate **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1889  **                              as 1 us to this API).                         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1890  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1891  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1892  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1893  ** Return value     : None.                                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1894  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1895  void Mcal_GetSpinlock(volatile uint32 *const LockAddress, const uint32 Timeout)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1896  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1897    /* [cover parentID={A6FC0022-BE1B-4764-9527-D4B928AADD62}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1898       If SAFETY Error Check is Enabled[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1899    #if (MCALLIB_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1900    /* [cover parentID={F361A66A-5290-4fed-ABF2-9547AFB2BBAE}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1901       Check if input address is null pointer[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1902    if ((LockAddress) == NULL_PTR)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1903    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1904      /* [cover parentID={49CFCB8A-36C7-4dc0-BD9F-C28247C3EDEC}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1905         Report error MCALLIB_E_PARAM_POINTER[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1906      Mcal_lReportError(MCALLIB_SID_GETSPINLOCK, MCALLIB_E_PARAM_POINTER);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1907    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1908    else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1909    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1910    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1911      /* [cover parentID={78961246-9CDD-4da7-AD8A-4F80AF6C948A}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1912       * Acquire the Lock
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1913       * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1914      Mcal_lGetSpinlock(LockAddress, Timeout, MCALLIB_SID_GETSPINLOCK);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1915    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1916    return;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1917  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1918  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1919  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1920  ** Traceability     : [cover parentID={87DDCCC6-8C0A-4942-B49F-A3BABA4BFCA2}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1921  ** [/cover]                                                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1922  ** Syntax           : void Mcal_ReleaseSpinlock                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1923  **                               (volatile uint32 * const LockAddress)        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1924  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1925  ** Description     : This API will release the Spinlock and value of lock     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1926                       address will be 0x0U.                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1927  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1928  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1929  ** Service ID      : 0x8E                                                     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1930  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1931  ** Sync/Async      : Synchronous                                              **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1932  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1933  ** Reentrancy      : Non Reentrant                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1934  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1935  ** Parameters(in)  : LockAddress - Lock that needs to be cleared(release)     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1936  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1937  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1938  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1939  ** Return value     : void                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1940  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1941  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1942  void Mcal_ReleaseSpinlock(volatile uint32 * const LockAddress)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1943  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1944    /* [cover parentID={1CE56696-4A08-4fca-ADF7-6443897F9F9A}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1945       If SAFETY Error Check is Enabled[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1946    #if (MCALLIB_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1947    /* [cover parentID={E8246BFE-9198-46ec-989E-075408125C86}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1948       Check if input address is null pointer[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1949    if ((LockAddress) == NULL_PTR)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1950    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1951      /* [cover parentID={A3DF5750-8B9E-43dc-8859-853BADDD7CEA}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1952          Report error MCALLIB_E_PARAM_POINTER[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1953      Mcal_lReportError(MCALLIB_SID_RELSPINLOCK, MCALLIB_E_PARAM_POINTER);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1954    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1955    /* [cover parentID={3B173FA2-D1EF-49f7-B05E-6E14223B735D}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1956       If address is not null pointer [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1957    else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1958    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1959    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1960      Mcal_lReleaseSpinlock(LockAddress);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1961    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1962  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1963  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1964  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1965  **                      Private Function Definitions                          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1966  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1967  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1968  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1969  ** Traceability     : [cover parentID={B0B9072D-629B-49f7-9E87-BC4CF2A925D4}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1970  ** [/cover]                                                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1971  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1972  ** Syntax           : LOCAL_INLINE uint32  Mcal_lCpuPwSequence                **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1973  **                    (                                                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1974  **                      const uint32 CpuIndex,                                **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1975  **                      const uint32 WdtCpuCon0Value                          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1976  **                    )                                                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1977  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1978  ** Description      : This function returns the password to be used during    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1979  **                    'password access' of WDTCPUxCON0 to unlock the register **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1980  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1981  ** Service ID       : NA                                                      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1982  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1983  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1984  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1985  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1986  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1987  ** Parameters(in)   : CpuIndex -  CpuIndex corresponding to CPU Core Id       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1988  **                    WdtCpuCon0Value -  Contents of register WDTCPUxCON0     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1989  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1990  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1991  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1992  ** Return value     : password to be written to WDTCPUxCON0 to unlock it      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1993  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1994  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1995  LOCAL_INLINE uint32  Mcal_lCpuPwSequence(const uint32 CpuIndex,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1996                                           const uint32 WdtCpuCon0Value)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1997  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1998    uint32 PwdBit0Value;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  1999  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2000    /* [cover parentID={B44279C3-41FF-4e95-8F82-33919982A41E}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2001    Decrypt the password extracted from WdtCpuCon0 reg[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2002    uint32 Password = Mcal_lDecryptPw(WdtCpuCon0Value);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2003  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2004    /* Check if Auto sequence password is enabled */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2005    /* [cover parentID={8764C622-562B-499e-BF57-7F467B553FCF}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2006       Check if Automatic password sequencing is enable[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2007    if (Mcal_GetBitAtomic(MODULE_SCU.WDTCPU[CpuIndex].SR.U,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2008                          IFX_SCU_WDTCPU_SR_PAS_OFF, IFX_SCU_WDTCPU_SR_PAS_LEN) ==
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2009                          MCAL_AUTO_PWD_SEQ_ENABLED)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2010    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2011      /*  Modify the password with expected password by calculating new
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2012       *  14-bit LFSR with characteristic polynomial x14+x13+x12+x2+1.*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2013      /* [cover parentID={C5E54F01-B967-4f08-BB1D-6147BE98DEAE}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2014      Calculate the next password based upon a 14 bit 'Linear Feedback Shift
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2015      Register' .[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2016      PwdBit0Value = (((Password >> 1U) ^ (Password >> MCAL_PASSEQSHIFT) ^
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2017                       (Password >> MCAL_PASSWORD_SHIFT) ^
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2018                       (Password >> MCAL_LFSR_SHIFT)) & (uint32)1U);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2019  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2020      Password = (((Password << 1U) | PwdBit0Value ) &
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2021                   (uint32)IFX_SCU_WDTCPU_CON0_PW_MSK);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2022    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2023    /* [cover parentID={A3754FD3-C09F-48d8-BF9C-D11CD9E3BC51}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2024       Return the password without modification[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2025    /* [cover parentID={56281BA0-25B6-45a7-AB4E-FFE889986FC4}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2026      Return password[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2027    return (Password);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2028  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2029  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2030  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2031  ** Traceability     : [cover parentID={5523EAB3-5C07-4194-B205-26B2921B84CB}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2032  ** [/cover]                                                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2033  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2034  ** Syntax           : LOCAL_INLINE uint32 Mcal_lCpuRelValue                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2035  **                    (                                                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2036  **                      const uint32 CpuIndex,                                **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2037  **                      const uint32 WdtCpuCon0Value                          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2038  **                    )                                                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2039  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2040  ** Description      : This function returns the timer reload value to be used **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2041  **                    during 'password access' of WDTCPUxCON0 to unlock the   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2042  **                    register                                                **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2043  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2044  ** Service ID       : NA                                                      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2045  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2046  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2047  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2048  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2049  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2050  ** Parameters(in)   : CpuIndex -  CpuIndex corresponding to CPU Core Id       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2051  **                    WdtCpuCon0Value -  Contents of register WDTCPUxCON0     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2052  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2053  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2054  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2055  ** Return value     : timer reload value  to be written to WDTCPUxCON0 to     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2056  **                    unlock it                                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2057  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2058  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2059  LOCAL_INLINE uint32 Mcal_lCpuRelValue(const uint32 CpuIndex,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2060                                        const uint32 WdtCpuCon0Value)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2061  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2062    uint32 TimerReload;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2063  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2064    /* Is Timer check enabled */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2065    /* [cover parentID={D511EF7F-5C92-4103-98CF-A5F8EC01DA99}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2066     Check If  WDTCPUxSR register TCS bit is enable[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2067    if (Mcal_GetBitAtomic(MODULE_SCU.WDTCPU[CpuIndex].SR.U,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2068                          IFX_SCU_WDTCPU_SR_TCS_OFF,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2069                          IFX_SCU_WDTCPU_SR_TCS_LEN) == MCAL_TIMER_CHECK_ENABLED)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2070    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2071      /* Compute Timer reload value based on the inverted value of
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2072       * running WDT timer value */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2073      /* [cover parentID={D1B6CC5D-442B-4413-9887-CFCBFCBBA7AF}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2074       * Timer reload value give inverted value of current timer value obtain
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2075       * from WDTCPUxSR.TIM [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2076      TimerReload = (((MODULE_SCU.WDTCPU[CpuIndex].SR.U) &
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2077                       MCAL_CPUWDTSR_TIMER_MASK) >> IFX_SCU_WDTCPU_SR_TIM_OFF);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2078  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2079      TimerReload = ((~TimerReload) & (uint32)IFX_SCU_WDTCPU_SR_TIM_MSK);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2080    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2081    /* [cover parentID={81383C2C-9BA0-4b49-B811-EB98942760DC}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2082      From input WDTCPUxCON0 extract timer reload value [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2083    else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2084    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2085      /* [cover parentID={81383C2C-9BA0-4b49-B811-EB98942760DC}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2086       * From input WDTCPUxCON0 extract timer reload value [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2087      /* Compute Timer reload value based on the current timer reload value */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2088      TimerReload = ((WdtCpuCon0Value & (uint32)MCAL_ENDINIT_RELOAD_MASK) >>
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2089                     IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2090    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2091    /* [cover parentID={978E3EE6-83B3-4387-BB63-1AD7D2E83877}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2092     * Return timer reload value[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2093    return (TimerReload);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2094  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2095  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2096  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2097  ** Traceability     : [cover parentID={0919090F-C59B-47be-8A63-0E22F481D743}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2098  ** [/cover]                                                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2099  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2100  ** Syntax           : LOCAL_INLINE uint16 Mcal_lDecryptPw                     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2101  **                    (                                                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2102  **                      const uint32 Value                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2103  **                    )                                                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2104  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2105  ** Description      : This function returns the decrypted password, which is  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2106  **                    used to in unlocking the ENDINIT registers              **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2107  **                    (EICON0/SEICON0/WDTCPUxCON0)                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2108  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2109  ** Service ID       : NA                                                      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2110  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2111  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2112  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2113  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2114  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2115  ** Parameters(in)   : Value -  Data from which password is extracted          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2116  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2117  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2118  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2119  ** Return value     : the decrypted password                                  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2120  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2121  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2122  LOCAL_INLINE uint16 Mcal_lDecryptPw(const uint32 Value)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2123  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2124    /* Decrypt the password, by extract password from positions [15:2], and
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2125     * inverting the last 6 bits on the extracted password
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2126     */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2127    return((uint16)(((Value & (uint32)MCAL_ENDINIT_WDT_PWD_MASK) >>
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2128                      IFX_SCU_WDTCPU_CON0_PW_OFF) ^
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2129                      (uint32)MCAL_ENDINIT_WDT_PWD_INV));
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2130  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2131  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2132  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2133  ** Traceability     : [cover parentID={4C12BC33-B548-4ac7-86E4-F0EAB7DAF746}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2134  ** [/cover]                                                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2135  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2136  ** Syntax           : void Mcal_lWriteSafetyEndInitProtection                 **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2137                        ( volatile void* const RegAddress,                      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2138                          const uint32 DataValue,                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2139                          const uint32 Mask,                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2140                          const uint8  Accesstype,                              **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2141                          const uint8  ApiId)                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2142  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2143  ** Description      : This API is needed to write required values to safety   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2144  **                    end-init protected registers by unprotecting to write   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2145  **                    and protecting back to keep protection intact. This     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2146  **                    interface also supports write access to safety endinit  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2147  **                    protected CSFRs.                                        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2148  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2149  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2150  ** Service ID       : NA                                                      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2151  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2152  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2153  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2154  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2155  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2156  ** Parameters(in)   : RegAddress - Safety Endinit protected register address  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2157  **                    DataValue - Value to be written to the register located **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2158  **                    at RegAddress.                                          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2159  **                    Mask - Value to indicate which register bits need       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2160  **                    to be updated.                                          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2161  **                    Accesstype - Register access type - 16/32 bit           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2162  **                    ApiId - Service ID of the API reporting an error        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2163  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2164  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2165  ** Return value     : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2166  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2167  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2168  LOCAL_INLINE void Mcal_lWriteSafetyEndInitProtection
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2169                                                 (volatile void* const RegAddress,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2170                                                  const uint32 DataValue,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2171                                                  const uint32 Mask,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2172                                                  const uint8  Accesstype,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2173                                                  const uint8  ApiId)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2174  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2175    /* MISRA2012_RULE_11_5_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2176     * pointer to void and pointer to object due to SFR access. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2177    /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2178     * pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2179    volatile uint32* const RegAddress32 = RegAddress;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2180    /* MISRA2012_RULE_11_5_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2181     * pointer to void and pointer to object due to SFR access. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2182    /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2183     * pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2184    volatile uint16* const RegAddress16 = RegAddress;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2185    uint32 TempData;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2186    /* MISRA2012_RULE_11_6_JUSTIFICATION: The address of the register is
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2187     * comapred against CSFR register offsets.
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2188     * There are no other operation performed, hence this convesion
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2189     * does not cause any issue */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2190    uint32 TempAddr = (uint32)RegAddress;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2191  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2192    /* Mask the DataValue as per the passed Mask */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2193    uint32 MaskedData = DataValue & Mask;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2194  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2195    /* Critical section to protect SCU_SEICON0 and SCU_SEICON1 register*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2196    /* [cover parentID={65DFF53B-24CB-4967-90D4-398D7423E928}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2197        Enter critical section for write safety endinit protection reg
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2198        [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2199    SchM_Enter_McalLib_SafetyEndInit();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2200  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2201    /* Acquire the lock for SCU_SEICON0 register */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2202    /* [cover parentID={8F370CDA-A0DE-4695-800F-C7CC570256BA}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2203        Acquire the lock for SCU_SEICON0 register
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2204       [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2205    Mcal_lGetSpinlock(&Mcal_LockAddressSiecon0, \ 
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2206                     (uint32)MCAL_SPINLOCK_DEFAULT_TIMEOUT, ApiId);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2207  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2208    /* Reset Safety EndInit Protection*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2209    /* [cover parentID={41EA97F8-07A4-4da6-B2EE-768CB3D7B6CC}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2210        Reset Safety EndInit Protection
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2211       [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2212    (void)Mcal_lUpdateSafetyEndInit(MCAL_DUMMY_PASSWORD,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2213                              MCAL_NOUPDATE_PASSWORD,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2214                              MCAL_RESETENDINITPROTECTION);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2215  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2216    /* Update the register */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2217    /* Note: CPU specific registers are updated using MTCR */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2218    /* [cover parentID={F391CD55-6DFA-4ad8-A795-5D43D6AB5D84}][/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2219    if (TempAddr > MCAL_16BIT_MAX_ADDR)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2220    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2221      /* [cover parentID={DCB30C5F-21C5-498f-A219-EE8F508CD5F4}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2222          Check the AccessType is  32bit access
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2223         [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2224      if (Accesstype == MCAL_32BIT_ACCESS)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2225      {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2226        /* Check if the masking is required */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2227        /* [cover parentID={9FB76018-74B9-498a-B8E8-953D7C6DAFCA}][/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2228        if(Mask == MCAL_DEFAULT_MASK_VALUE)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2229        {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2230          *RegAddress32 = MaskedData;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2231        }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2232        else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2233        {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2234          /* Read the SFR and write only the bits based on the mask */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2235          TempData = (uint32)(((uint32) *RegAddress32 & (uint32)~Mask) |
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2236                     MaskedData);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2237  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2238          *RegAddress32 = TempData;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2239        }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2240      }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2241      else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2242      {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2243        /* [cover parentID={5CE8820B-A554-4941-96F3-349D18198A5C}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2244         * Update the register
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2245         * [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2246         */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2247        *RegAddress16 = (uint16)MaskedData;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2248      }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2249    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2250    else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2251    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2252      /* CPU specific registers are updated using MTCR */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2253      /* MISRA2012_RULE_11_6_JUSTIFICATION: The address of the register is
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2254       * comapred against CSFR register offsets.
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2255       * There are no other operation performed, hence this convesion
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2256       * does not cause any issue */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2257      /* MISRA2012_RULE_11_4_JUSTIFICATION: The address of the register is
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2258       * comapred against CSFR register offsets.
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2259       * There are no other operation performed, hence this convesion
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2260       * does not cause any issue */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2261      /* [cover parentID={7952E564-BA1D-4caf-9925-D47BEC3B5F1D}][/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2262      switch((uint32)RegAddress32)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2263      {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2264        case CPU_COMPAT:
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2265            MTCR(CPU_COMPAT, MaskedData);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2266            break;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2267        case CPU_SYSCON:
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2268            MTCR(CPU_SYSCON, MaskedData);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2269            break;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2270        case CPU_TPS_EXTIM_ENTRY_LVAL:
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2271            MTCR(CPU_TPS_EXTIM_ENTRY_LVAL, MaskedData);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2272            break;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2273        case CPU_TPS_EXTIM_EXIT_LVAL:
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2274            MTCR(CPU_TPS_EXTIM_EXIT_LVAL, MaskedData);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2275            break;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2276        case CPU_TPS_EXTIM_CLASS_EN:
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2277            MTCR(CPU_TPS_EXTIM_CLASS_EN, MaskedData);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2278            break;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2279        default:
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2280            /* This case is not possible, kept only for MISRA compliance */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2281            break;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2282      }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2283    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2284  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2285    /* Set Safety EndInit Protection */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2286    /* [cover parentID={3F7731FF-CE60-4306-925E-5E21E8BCAFBE}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2287       Set Safety EndInit Protection
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2288       [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2289    (void)Mcal_lUpdateSafetyEndInit(MCAL_DUMMY_PASSWORD,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2290                              MCAL_NOUPDATE_PASSWORD,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2291                              MCAL_SETENDINITPROTECTION);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2292  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2293    /* Release the lock for SCU_SEICCON0 register */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2294    /* [cover parentID={C129F8E9-E64D-4ae7-906D-902988D55FA1}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2295       Release the lock for SCU_SEICCON0 register
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2296       [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2297    Mcal_lReleaseSpinlock(&Mcal_LockAddressSiecon0);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2298  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2299    /* [cover parentID={D7BCD4A4-FA36-476d-A582-088869946097}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2300        Exit critical section for write safety endinit protection reg
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2301       [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2302    SchM_Exit_McalLib_SafetyEndInit();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2303  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2304  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2305  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2306  ** Traceability     :[cover parentID={1CCEB859-15A4-4d14-98E6-0191C58E03B5}]  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2307  **                   [/cover]                                                 **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2308  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2309  ** Syntax           :LOCAL_INLINE uint32 Mcal_lDelayResetTickCalibration      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2310  **                                                        (const uint8 ApiId) **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2311  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2312  ** Description      : The interface is used by applications to indicate to    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2313  **                    MCALLib that the clock tree has changed. The expectation**
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2314  **                    is that as a result of invocation of this service, any  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2315  **                    internally cached tick resolution data is discarded.    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2316  **                    This service is expected to query the clock tree and    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2317  **                    determine the resolution. The interface returns in      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2318  **                    nanoseconds the resolution of the delay tick (STM timer)**
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2319  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2320  ** Service ID       : NA                                                      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2321  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2322  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2323  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2324  ** Reentrancy       : Non Reentrant                                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2325  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2326  ** Parameters(in)   : ApiId - Service ID of the API reporting an error        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2327  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2328  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2329  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2330  ** Return value     : Resolution of delay tick in nanoseconds                 **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2331  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2332  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2333  LOCAL_INLINE uint32 Mcal_lDelayResetTickCalibration(const uint8 ApiId)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2334  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2335    float32 StmFreq, PLL0Freq;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2336    float32 LocalStmTimerResol = (float32)0;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2337    uint32 OscFreq;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2338    uint8 StmDiv, Src0ClkSel, PLL0Ndiv, PLL0Pdiv, PLL0K2div, Oscval, PLL0ClkSel;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2339  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2340  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2341    /* [cover parentID={0245DED7-5AFC-4f35-876D-AEC5118EE056}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2342        Enter critical section[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2343    SchM_Enter_McalLib_StmTimerResolution();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2344  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2345    StmDiv     = (uint8)(((uint32)MODULE_SCU.CCUCON0.U)  &
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2346                               (uint32)IFX_SCU_CCUCON0_STMDIV_MSK);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2347    Src0ClkSel = (uint8)((((uint32)MODULE_SCU.CCUCON0.U) >>
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2348                                IFX_SCU_CCUCON0_CLKSEL_OFF) &
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2349                               (uint32)IFX_SCU_CCUCON0_CLKSEL_MSK);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2350    PLL0Ndiv   = (uint8)((((uint32)MODULE_SCU.SYSPLLCON0.U) >>
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2351                                IFX_SCU_SYSPLLCON0_NDIV_OFF) &
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2352                               (uint32)IFX_SCU_SYSPLLCON0_NDIV_MSK) + (uint8)1U;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2353    PLL0Pdiv   = (uint8)((((uint32)MODULE_SCU.SYSPLLCON0.U) >>
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2354                                IFX_SCU_SYSPLLCON0_PDIV_OFF) &
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2355                               (uint32)IFX_SCU_SYSPLLCON0_PDIV_MSK) + (uint8)1U;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2356    PLL0K2div  = (uint8)(((uint32)MODULE_SCU.SYSPLLCON1.U) &
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2357                               (uint32)IFX_SCU_SYSPLLCON1_K2DIV_MSK) + (uint8)1U;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2358    Oscval     = (uint8)((((uint32)MODULE_SCU.OSCCON.U) >>
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2359                                IFX_SCU_OSCCON_OSCVAL_OFF) &
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2360                               (uint32)IFX_SCU_OSCCON_OSCVAL_MSK);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2361    PLL0ClkSel = (uint8)((((uint32)MODULE_SCU.SYSPLLCON0.U) >>
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2362                                IFX_SCU_SYSPLLCON0_INSEL_OFF) &
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2363                               (uint32)IFX_SCU_SYSPLLCON0_INSEL_MSK);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2364  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2365    /* [cover parentID={AABD4D00-A372-4e29-B360-0543BA412484}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2366       Exit critical Section[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2367    SchM_Exit_McalLib_StmTimerResolution();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2368  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2369    /* If fSTM is disabled, then return timer resolution as 0 */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2370    /* [cover parentID={9AEC7374-8E25-4936-AA51-224738F39F36}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2371     * Check if STM clock disabled[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2372    if(StmDiv == (uint8)MCAL_STMCLK_DISABLED)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2373    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2374      /* [cover parentID={7DB1FA52-2712-4daa-8EB3-5D3BF1CBF02D}]If SAFETY
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2375       * Error Check is Enabled[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2376      /* [cover parentID={96699695-17F2-4fa8-AC73-49A2C470DC33}]If SAFETY
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2377       * Error Check is Enabled[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2378      /* [cover parentID={21BC6F5D-85A7-4d5a-BFBB-C782B3FEC56B}]If SAFETY
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2379       * Error Check is Enabled[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2380      #if (MCALLIB_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2381      /* [cover parentID={8A536F85-CDD2-4a3d-AF62-D1744ABCD2CF}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2382       * Report error MCALLIB_E_CLKDISABLE[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2383      Mcal_lReportError(ApiId, MCALLIB_E_CLKDISABLE);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2384      #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2385  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2386      Mcal_StmTimerResolution = MCAL_STM_TIMER_RESOL_ZERO;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2387    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2388    else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2389    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2390      /* Check the source of fSource0 - PLL0 or backup clock */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2391      /* [cover parentID={344D24C2-972E-432e-8A0A-9ED87525D74A}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2392         Check the Source of freq PLL0 clock sel[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2393      if(Src0ClkSel == (uint8)MCAL_PLL0_CLK_SRC0_FREQ)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2394      {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2395        /* Check the source of fPLL0 - backup clock or OSC0*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2396        /* [cover parentID={344D24C2-972E-432e-8A0A-9ED87525D74A}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2397           Check the Source of freq PLL0 clock sel[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2398        switch(PLL0ClkSel)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2399        {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2400          /*Fall through is used as the logic for oscillator frequency
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2401           * calculation and SYSCLK frequency calculation is exactly same*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2402          /* [cover parentID={5EB344C3-9A2B-4bca-92AA-9B89A1FE3DDA}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2403              Is PLL0 clock source Osc 0 clock [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2404          case MCAL_OSC0_CLK_PLL0_FREQ:
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2405          case MCAL_SYS_CLK_PLL0_FREQ:
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2406            /* Calculate OSC0 frequency(its in MHz)*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2407            /* [cover parentID={2073EAEB-1D43-47da-A1B4-608B3846D17A}]Calculate
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2408               OSC_ClockFreq [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2409            OscFreq = ((uint32)Oscval +
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2410                       (uint32)MCAL_OSCVAL_MHz - (uint32)MCAL_OSCFREQ_MHz);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2411            break;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2412          default:
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2413            /* [cover parentID={B8FBCFA9-AACF-4dbe-8D8F-AD75CFEE3751}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2414                       OSC_ClockFreq is Backup Clock frequency[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2415            OscFreq = MCAL_BACKUP_FREQUENCY;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2416            break;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2417        }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2418        /* Calculate PLL0 freq by formula = (fOSC * Ndiv)/(K2div * Pdiv)*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2419        /* [cover parentID={DEC7141C-7011-422c-8C9E-4B270FE50403}]Calculate
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2420           PLL0_Clockfreq using Oscfreq,Ndiv, Pdiv, K2div[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2421        PLL0Freq = (((float32)OscFreq * (float32)PLL0Ndiv) /
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2422                    ((float32)PLL0Pdiv * (float32)PLL0K2div));
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2423        /* Calculate fSTM */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2424        /* [cover parentID={CE793E76-8F55-4fc5-9B98-CA024C14371D}]Calculate
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2425        Stm_Freq using PLL0_Clockfreq ,StmDiv[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2426        StmFreq = PLL0Freq / (float32)StmDiv;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2427      }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2428      else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2429      {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2430        /* Calculate fSTM */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2431        /* [cover parentID={3E42C595-B418-4c0f-9181-5D89C75125C1}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2432        Calculate STM freq depends on Backup Clock freq and STM divider
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2433        [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2434        StmFreq = (float32)MCAL_BACKUP_FREQUENCY / (float32)StmDiv;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2435      }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2436  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2437      /* Mcal_StmTimerResolution in 1ns resolution is obtained by
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2438       * (10^9)/(StmFreq * 10^6), since value of StmFreq is MHz,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2439       *  Mcal_StmTimerResolution = 10^9/(StmFreq * 10^6)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2440       *  Mcal_StmTimerResolution = 10^3/(StmFreq)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2441       */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2442      /* [cover parentID={205F9729-B78C-4ff6-B5A4-4CF0A0512ABD}]Calculate STM
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2443      timer resolution in 1ns resolution[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2444      LocalStmTimerResol = ((float32)MCAL_RESOLUTION_U / StmFreq);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2445    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2446  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2447    /* This is used to avoid MISRA when Safety is switched OFF */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2448    UNUSED_PARAMETER(ApiId);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2449  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2450    /* [cover parentID={E1412D6E-B1C5-4683-AEFA-730560F0772F}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2451     * Return STM timer resolution[/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2452     */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2453    /* [cover parentID={19F230D8-6462-4c4d-9833-2618D4960F84}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2454     * return STM timer resolution zero[/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2455     */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2456    return ((uint32)LocalStmTimerResol);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2457  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2458  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2459  #if (MCALLIB_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2460  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2461  ** Traceability     :[cover parentID={D5D6528A-4A62-42dc-9C9D-5F09340FBFB0}]  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2462  **                   [/cover]                                                 **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2463  ** Syntax :          LOCAL_INLINE void Mcal_lReportError(const uint8 ApiId,   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2464  **                                                const uint8 ErrorId)        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2465  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2466  ** Service ID:       NA                                                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2467  ** [/cover]                                                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2468  ** Sync/Async:       Synchronous                                              **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2469  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2470  ** Reentrancy:       Reentrant                                                **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2471  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2472  ** Parameters (in):  ApiId - Service ID of the API reporting an error         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2473  **                   ErrorId - ID of the error reported                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2474  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2475  ** Parameters (out): None                                                     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2476  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2477  ** Return value:     None                                                     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2478  ** Description :    Function to report Safety Error                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2479  *                                                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2480  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2481  LOCAL_INLINE void Mcal_lReportError(const uint8 ApiId, const uint8 ErrorId)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2482  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2483    Mcal_ReportSafetyError(MCALLIB_MODULE_ID, MCALLIB_INSTANCE_ID,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2484                           ApiId, ErrorId);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2485  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2486  #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2487  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2488  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2489  ** Traceability     : [cover parentID={1912F5BE-EDDE-484a-A31F-F3475F2A59FD}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2490  ** [/cover]                                                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2491  ** Syntax           : uint32 Mcal_lGetCpuIndex(void)                          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2492  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2493  ** Description      : This interface is used by applications in a multicore   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2494  **                    environment to determine the CPU they are executing on. **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2495  **                    The API returns the contents of CORE_ID register,       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2496  **                   variable, structure for the core on which it is invoked. **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2497  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2498  ** Service ID       : NA                                                      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2499  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2500  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2501  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2502  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2503  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2504  ** Parameters(in)   : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2505  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2506  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2507  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2508  ** Return value     : Returns the Core Index corresponding to the input       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2509  **                    physical Core Id. In case the input Core Id is an       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2510  **                    invalid value, then the API returns 0xFFFFFFFF          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2511  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2512  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2513  LOCAL_INLINE uint32 Mcal_lGetCpuIndex(void)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2514  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2515    /* [cover parentID={B7499D38-0AD1-42ce-BD5F-BA67D72B3DED}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2516     * Read the CPU_CORE_ID register to retrieve the CoreIdIndex [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2517     */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2518    uint32 CoreIdIndex = (uint32)MFCR(CPU_CORE_ID);
	mfcr	d15,#65052
.L754:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2519    #if ( MCAL_NO_OF_CORES > 5U )
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2520    /* If the CpuId is greater than, equal to that of CPU5 Core Id(0x6U),
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2521     * then return CoreIndex as (CpuId - 1),
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2522     * else return the same value as input CpuId */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2523    /* [cover parentID={DF2416E6-335D-4e1f-A0FA-BAF1C1BC133C}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2524    Check if CoreIdIndex is greater than, equal to number of core [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2525    if (CoreIdIndex >= (uint32)MCAL_NO_OF_CORES)
	ge.u	d0,d15,#6
.L913:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2526    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2527      CoreIdIndex = CoreIdIndex - (uint32)0x1U;
	sub	d15,d0
.L914:
	mul	d15,d15,#12
.L377:
	mov.a	a15,d15
	movh.a	a3,#61443
	add.a	a3,a15
	ld.w	d15,[a3]25164
	extr.u	d15,d15,#2,#14
.L915:
	xor	d2,d15,#63
.L755:
	ret
.L373:
	
__Mcal_GetCpuWdgPassword_function_end:
	.size	Mcal_GetCpuWdgPassword,__Mcal_GetCpuWdgPassword_function_end-Mcal_GetCpuWdgPassword
.L225:
	; End of function
	
	.sdecl	'.text.Mcal_SetCpuWdgPassword.Code.Cpu0',code,cluster('Mcal_SetCpuWdgPassword')
	.sect	'.text.Mcal_SetCpuWdgPassword.Code.Cpu0'
	.align	2
	
	.global	Mcal_SetCpuWdgPassword
; Function Mcal_SetCpuWdgPassword
.L166:
Mcal_SetCpuWdgPassword:	.type	func
	sub.a	a10,#8
.L756:
	insert	d8,d4,#0,#14,#18
.L387:
	mfcr	d15,#65052
.L758:
	ge.u	d0,d15,#6
.L920:
	sub	d15,d0
.L388:
	call	SchM_Enter_McalLib_CpuEndInit
.L757:
	mov	d6,#0
	st.b	[a10],d6
.L921:
	mov	d7,#1
.L390:
	mov	e4,d15,d8
.L391:
	call	Mcal_lUpdateCpuEndInit
.L922:
	mov	d9,d3
.L923:
	call	SchM_Exit_McalLib_CpuEndInit
.L924:
	mov	d2,d9
.L925:
	ret
.L380:
	
__Mcal_SetCpuWdgPassword_function_end:
	.size	Mcal_SetCpuWdgPassword,__Mcal_SetCpuWdgPassword_function_end-Mcal_SetCpuWdgPassword
.L230:
	; End of function
	
	.sdecl	'.text.Mcal_WriteCpuEndInitProtReg.Code.Cpu0',code,cluster('Mcal_WriteCpuEndInitProtReg')
	.sect	'.text.Mcal_WriteCpuEndInitProtReg.Code.Cpu0'
	.align	2
	
	.global	Mcal_WriteCpuEndInitProtReg
; Function Mcal_WriteCpuEndInitProtReg
.L168:
Mcal_WriteCpuEndInitProtReg:	.type	func
	sub.a	a10,#8
.L759:
	mov.aa	a15,a4
.L762:
	mov	d9,d4
.L763:
	mov.d	d10,a15
.L764:
	jnz.a	a15,.L4
.L930:
	mov	d6,#126
.L931:
	mov	d7,#201
.L402:
	mov	d4,#255
.L760:
	mov	d5,#0
.L932:
	j	Mcal_ReportSafetyError
.L4:
	mfcr	d8,#65052
.L765:
	ge.u	d0,d8,#6
.L933:
	sub	d8,d0
.L408:
	call	SchM_Enter_McalLib_CpuEndInit
.L761:
	mov	d4,#0
	st.b	[a10],d4
.L934:
	mov	e6,d4,d4
.L410:
	mov	d5,d8
.L411:
	call	Mcal_lUpdateCpuEndInit
.L766:
	mov.u	d0,#65535
.L935:
	jge.u	d0,d10,.L6
.L936:
	st.w	[a15],d9
.L937:
	j	.L7
.L6:
	mov	d0,#4144
	jeq	d0,d10,.L8
.L938:
	mov.u	d15,#33024
	jeq	d15,d10,.L9
.L939:
	mov.u	d15,#33028
	jeq	d15,d10,.L10
.L940:
	mov.u	d15,#36928
	jeq	d15,d10,.L11
.L941:
	mov.u	d15,#37388
	jeq	d15,d10,.L12
.L942:
	mov.u	d15,#65056
	jeq	d15,d10,.L13
.L943:
	mov.u	d15,#65060
	jeq	d15,d10,.L14
.L944:
	mov.u	d15,#65064
	jeq	d15,d10,.L15
	j	.L16
.L9:
	dsync
	mtcr	#33024,d9
	isync
.L945:
	j	.L17
.L10:
	dsync
	mtcr	#33028,d9
	isync
.L946:
	j	.L18
.L15:
	dsync
	mtcr	#65064,d9
	isync
.L947:
	j	.L19
.L13:
	dsync
	mtcr	#65056,d9
	isync
.L948:
	j	.L20
.L14:
	dsync
	mtcr	#65060,d9
	isync
.L949:
	j	.L21
.L8:
	dsync
	mtcr	#4144,d9
	isync
.L950:
	j	.L22
.L11:
	dsync
	mtcr	#36928,d9
	isync
.L951:
	j	.L23
.L12:
	dsync
	mtcr	#37388,d9
	isync
.L23:
.L22:
.L21:
.L20:
.L19:
.L18:
.L17:
.L16:
.L7:
	mov	d15,#1
	st.b	[a10],d15
.L952:
	mov	d7,#0
.L953:
	mov	d6,d2
.L412:
	mov	e4,d8,d7
.L413:
	call	Mcal_lUpdateCpuEndInit
.L954:
	j	SchM_Exit_McalLib_CpuEndInit
.L393:
	
__Mcal_WriteCpuEndInitProtReg_function_end:
	.size	Mcal_WriteCpuEndInitProtReg,__Mcal_WriteCpuEndInitProtReg_function_end-Mcal_WriteCpuEndInitProtReg
.L235:
	; End of function
	
	.sdecl	'.text.Mcal_GetSafetyEndInitPassword.Code.Cpu0',code,cluster('Mcal_GetSafetyEndInitPassword')
	.sect	'.text.Mcal_GetSafetyEndInitPassword.Code.Cpu0'
	.align	2
	
	.global	Mcal_GetSafetyEndInitPassword
; Function Mcal_GetSafetyEndInitPassword
.L170:
Mcal_GetSafetyEndInitPassword:	.type	func
	movh.a	a15,#61443
	ld.w	d15,[a15]@los(0xf00362b4)
	extr.u	d15,d15,#2,#14
.L959:
	xor	d2,d15,#63
.L767:
	ret
.L415:
	
__Mcal_GetSafetyEndInitPassword_function_end:
	.size	Mcal_GetSafetyEndInitPassword,__Mcal_GetSafetyEndInitPassword_function_end-Mcal_GetSafetyEndInitPassword
.L240:
	; End of function
	
	.sdecl	'.text.Mcal_SetSafetyEndInitPassword.Code.Cpu0',code,cluster('Mcal_SetSafetyEndInitPassword')
	.sect	'.text.Mcal_SetSafetyEndInitPassword.Code.Cpu0'
	.align	2
	
	.global	Mcal_SetSafetyEndInitPassword
; Function Mcal_SetSafetyEndInitPassword
.L172:
Mcal_SetSafetyEndInitPassword:	.type	func
	insert	d15,d4,#0,#14,#18
.L769:
	call	SchM_Enter_McalLib_SafetyEndInit
.L768:
	movh.a	a4,#@his(Mcal_LockAddressSiecon0)
	lea	a4,[a4]@los(Mcal_LockAddressSiecon0)
.L964:
	mov	d4,#10000
.L965:
	mov	d5,#128
	call	Mcal_lGetSpinlock
.L966:
	mov	d5,#1
.L967:
	mov	d6,#0
	mov	d4,d15
.L771:
	call	Mcal_lUpdateSafetyEndInit
.L772:
	mov	d15,d2
.L770:
	movh.a	a15,#@his(Mcal_LockAddressSiecon0)
	lea	a15,[a15]@los(Mcal_LockAddressSiecon0)
.L423:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3182    DSYNC();      (inlined)
	dsync
.L968:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2528    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2529    #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2530  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2531    /* [cover parentID={E8AFC2A6-8251-4e22-A852-1723FFB711C1}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2532     * Return the current CoreIdIndex [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2533     */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2534    return(CoreIdIndex);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2535  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2536  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2537  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2538  ** Traceability     :[cover parentID={9979C54A-B8B4-4815-9DC3-CFD6BF59AA95}]  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2539  **                   [/cover]                                                 **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2540  ** Syntax           : static uint32 Mcal_lUpdateSafetyEndInit(                **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2541  **                                          const uint32 NewPassword,         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2542  **                                          const boolean UpdatePassword,     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2543  **                                          const boolean SetResetProtection) **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2544  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2545  ** Description      : This interface updates password/enables/disable         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2546  **                    Safety EndInit protection                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2547  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2548  ** Service ID       : NA                                                      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2549  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2550  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2551  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2552  ** Reentrancy       : Non Reentrant                                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2553  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2554  ** Parameters(in)   : NewPassword        -  Password to be updated            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2555  **                    UpdatePassword     -  True  - Update Password           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2556  **                                          False - No password update        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2557  **                    SetResetProtection -  True  - Enable ENDINIT protection **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2558  **                                          False - Disable ENDINIT protection**
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2559  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2560  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2561  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2562  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2563  ** Return value     : Password - Password retrieved from SCU_SEICON0 register **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2564  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2565  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2566  static uint32 Mcal_lUpdateSafetyEndInit(const uint32 NewPassword,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2567                                          const boolean UpdatePassword,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2568                                          const boolean SetResetProtection)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2569  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2570    uint32 Password;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2571    uint32 Seicon0Value;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2572    uint32 NewSeicon0Value;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2573    /* The variable 'dummy' is made volatile to prevent any optimization of the
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2574     * variable during compilation, since the variable is used only for read back
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2575     * of ENDINIT control registers, after the same register is written in the
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2576     * previous statement
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2577     */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2578    volatile uint32 dummy;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2579  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2580    /* Calculate the password from the retrieved SCU_SEICON0 register */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2581    /* [cover parentID={B2B14FB1-F8EF-4cde-B5DA-4129BA331374}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2582     * Calculate the password from the retrieved SCU_SEICON0 register[/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2583     */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2584    Password = Mcal_lDecryptPw((uint32)(MODULE_SCU.SEICON0.U));
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2585  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2586    /* [cover parentID={A8E28D51-8868-4041-ADE1-5D2A9BA8A54C}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2587        Check if ENDINIT Protection needs to be Set
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2588       [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2589    if (SetResetProtection == MCAL_SETENDINITPROTECTION)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2590    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2591      /* [cover parentID={9C14810F-46F4-4a5e-B586-CE5D22DF82D4}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2592         Calculate the value to be written in SCU_SEICON0 to re-enable protection
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2593         [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2594      Seicon0Value =
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2595                    ((uint32)MCAL_SAFETY_ENDINIT_WDT_TIMER_REL |
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2596                      ((uint32)Password << (uint32)IFX_SCU_SEICON0_EPW_OFF) |
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2597                      ((uint32)MCAL_SAFETY_ENDINIT_PROTECTED <<
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2598                      IFX_SCU_SEICON0_ENDINIT_OFF));
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2599    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2600    else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2601    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2602      /* [cover parentID={A2915C78-C633-468e-A3AE-96E629A22143}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2603       * Calculate the value to be written in SCU_SEICON0 to unlock it [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2604       */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2605      Seicon0Value = ((uint32)MCAL_SAFETY_ENDINIT_WDT_TIMER_REL |
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2606                    ((uint32)Password << (uint32)IFX_SCU_SEICON0_EPW_OFF));
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2607    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2608  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2609    /* [cover parentID={4142F921-D301-41d9-9108-17026665FD43}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2610     * Check if passwprd needs to be updated[/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2611     */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2612    if (UpdatePassword == MCAL_UPDATE_NEWPASSWORD)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2613    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2614      /* Calculate the value to be written in SCU_SEICON0,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2615       * to update it with new password */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2616      /* [cover parentID={DEC55626-564E-4d36-AACE-8AA4F69DDCC8}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2617       * Calculate the value to be written in SCU_SEICON0, to update it with new
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2618       * password [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2619       */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2620      NewSeicon0Value = (uint32)((uint32)MCAL_SAFETY_ENDINIT_WDT_TIMER_REL |
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2621                        ((uint32)NewPassword << (uint32)IFX_SCU_SEICON0_EPW_OFF) |
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2622                        ((uint32)MCAL_SAFETY_ENDINIT_PROTECTED <<
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2623                        (uint32)IFX_SCU_SEICON0_ENDINIT_OFF));
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2624  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2625      /* Update the SCU_SEICON0 to enable ENDINIT protection */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2626      /* [cover parentID={B21BEF3D-EDEE-46b8-BC20-FCD25348DFBB}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2627       * Update the SCU_SEICON0 to enable ENDINIT protection[/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2628       */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2629      MODULE_SCU.SEICON0.U = Seicon0Value;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2630  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2631       /* [cover parentID={D4DFA4A6-F96A-4aca-9326-4A129E55ABEC}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2632        * Read back the SCU_SEICON0  reg to ensure Write is is done correctly
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2633        * [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2634        */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2635      dummy = MODULE_SCU.SEICON0.U;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2636  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2637      /* Update the SCU_SEICON0 with the new password */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2638      /* [cover parentID={010249F4-AFF9-44ca-8AA6-D9FA225088F0}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2639       * Update the SCU_SEICON0 with the new password
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2640       * [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2641       */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2642      MODULE_SCU.SEICON0.U = NewSeicon0Value;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2643  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2644      /* Read back the SEICON0 reg to ensure Write is is done correctly */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2645      /* [cover parentID={AEF500FF-30FE-4fb1-B43C-4C65434B4877}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2646       * Read back the SCU_SEICON0  reg to ensure Write is is done correctly
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2647       * [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2648       */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2649      dummy = MODULE_SCU.SEICON0.U;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2650    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2651    else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2652    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2653      /* [cover parentID={E6BA5EB6-33FF-4772-8389-8085A11206C5}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2654       * Update the SCU_SEICON0 to enable ENDINIT protection
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2655       * [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2656       */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2657      MODULE_SCU.SEICON0.U = Seicon0Value;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2658      /* [cover parentID={D41B3AF3-7A8D-45a3-990C-632AF21876D7}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2659       * Read back the SCU_SEICON0  reg to ensure Write is is done correctly
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2660       * [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2661       */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2662      dummy = MODULE_SCU.SEICON0.U;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2663    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2664  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2665    UNUSED_PARAMETER(dummy);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2666  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2667    /* [cover parentID={FD7EA7AA-6F81-406b-8C2A-0F16677957F4}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2668     * Return the old password [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2669     */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2670    return Password;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2671  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2672  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2673  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2674  ** Traceability     :[cover parentID={61F6C298-1B19-4592-9F11-A09849183489}]  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2675  **                   [/cover]                                                 **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2676  ** Syntax           : static uint32 Mcal_lUpdatePeripheralEndInit(            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2677  **                                          const uint32 NewPassword,         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2678  **                                          const boolean UpdatePassword,     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2679  **                                          const boolean SetResetProtection) **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2680  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2681  ** Description      : This interface updates password/enables/disable         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2682  **                    Peripheral EndInit protection                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2683  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2684  ** Service ID       : NA                                                      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2685  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2686  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2687  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2688  ** Reentrancy       : Non Reentrant                                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2689  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2690  ** Parameters(in)   : NewPassword        -  Password to be updated            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2691  **                    UpdatePassword     -  True  - Update Password           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2692  **                                          False - No password update        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2693  **                    SetResetProtection -  True  - Enable ENDINIT protection **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2694  **                                          False - Disable ENDINIT protection**
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2695  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2696  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2697  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2698  ** Return value     : Password - Password retrieved from SCU_EICON0 register  **                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2699  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2700  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2701  static uint32 Mcal_lUpdatePeripheralEndInit(const uint32 NewPassword,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2702                                              const boolean UpdatePassword,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2703                                              const boolean SetResetProtection)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2704  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2705    uint32 Password;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2706    uint32 Eicon0Value;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2707    uint32 NewEicon0Value;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2708    /* The variable 'dummy' is made volatile to prevent any optimization of the
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2709     * variable during compilation, since the variable is used only for read back
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2710     * of ENDINIT control registers, after the same register is written in the
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2711     * previous statement
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2712     */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2713    volatile uint32 dummy;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2714  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2715    /* Calculate the password from the retrieved EICON0 register */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2716    /* [cover parentID={72C08E75-2CBC-4e8b-9D57-DC2AFD225F73}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2717     * Calculate the password from the retrieved SCU_SEICON0 register
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2718     * [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2719     */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2720    Password = Mcal_lDecryptPw((uint32)(MODULE_SCU.EICON0.U));
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2721  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2722    /* [cover parentID={92440BB6-B642-4820-B994-B0B7C901DA49}][/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2723    if (SetResetProtection == MCAL_SETENDINITPROTECTION)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2724    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2725      /* [cover parentID={8DC0A3C6-9CFE-4d8a-A9B3-E7D2B7A3F712}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2726       * Calculate the value to be written in SCU_EICON0 to re-enable protection
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2727       * [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2728       */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2729      Eicon0Value =
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2730                    ((uint32)MCAL_PER_ENDINIT_WDT_TIMER_REL |
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2731                      ((uint32)Password << (uint32)IFX_SCU_EICON0_EPW_OFF) |
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2732                      ((uint32)MCAL_PER_ENDINIT_PROTECTED <<
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2733                      IFX_SCU_EICON0_ENDINIT_OFF));
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2734    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2735    else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2736    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2737      /* [cover parentID={B1DD1917-EB64-4255-A13C-37283405691C}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2738       * Calculate the value to be written in SCU_EICON0 to unlock it
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2739       * [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2740       */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2741      Eicon0Value = ((uint32)MCAL_PER_ENDINIT_WDT_TIMER_REL |
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2742                    ((uint32)Password << (uint32)IFX_SCU_EICON0_EPW_OFF));
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2743    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2744  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2745    /* [cover parentID={AC012730-EF78-4b9b-99B1-9C1909D90060}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2746     * Check if passwprd needs to be updated
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2747     * [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2748     */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2749    if (UpdatePassword == MCAL_UPDATE_NEWPASSWORD)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2750    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2751      /* Calculate the value to be written in SCU_EICON0,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2752       * to update it with new password */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2753  	 /* [cover parentID={8A80061E-1AE0-4d21-AE7E-2A80AB93C630}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2754       * Calculate the value to be written in SCU_EICON0,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2755       * to update it with new password
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2756       * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2757      NewEicon0Value = ((uint32)MCAL_PER_ENDINIT_WDT_TIMER_REL |
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2758                       ((uint32)NewPassword << (uint32)IFX_SCU_EICON0_EPW_OFF) |
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2759                       ((uint32)MCAL_PER_ENDINIT_PROTECTED <<
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2760                       IFX_SCU_EICON0_ENDINIT_OFF));
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2761  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2762      /* Update the SCU_EICON0 to enable ENDINIT protection */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2763      MODULE_SCU.EICON0.U = Eicon0Value;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2764  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2765      /* Read back the SCU_EICON0  reg to ensure Write is is done correctly */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2766      dummy = MODULE_SCU.EICON0.U;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2767  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2768      /* Update the SCU_SEICON0 with the new password */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2769      /* [cover parentID={E0716D6C-3D3D-4d96-8625-F6E0DAB3B87A}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2770       * Update the SCU_SEICON0 with the new password
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2771       * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2772      MODULE_SCU.EICON0.U = NewEicon0Value;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2773  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2774      /* Read back the EICON0 reg to ensure Write is is done correctly */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2775      dummy = MODULE_SCU.EICON0.U;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2776    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2777    else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2778    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2779      /* Update the SCU_SEICON0 to enable ENDINIT protection */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2780      /* [cover parentID={1588C1CA-ABCF-4b7b-BCE6-C665A41F2EAD}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2781       * Update the SCU_SEICON0 to enable ENDINIT protection
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2782       * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2783  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2784      MODULE_SCU.EICON0.U = Eicon0Value;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2785  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2786       /* [cover parentID={ADA1213B-A447-4277-BAF4-AF8299BA5A86}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2787        * Read back the SCU_EICON0  reg to ensure Write is is done correctly
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2788        * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2789      dummy = MODULE_SCU.EICON0.U;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2790    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2791  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2792    UNUSED_PARAMETER(dummy);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2793  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2794    /* Return the old password */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2795    /* [cover parentID={C52BFE95-3C6F-4d08-BF04-AEC275D5A191}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2796       * Return the old password
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2797       * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2798    return Password;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2799  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2800  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2801  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2802  ** Traceability     :[cover parentID={DED86600-0ABE-4e8f-B5AD-199D2317A8EB}]  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2803  **                   [/cover]                                                 **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2804  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2805  ** Syntax           : static uint32 Mcal_lUpdateCpuEndInit(                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2806  **                                          const uint32 NewPassword,         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2807  **                                          const uint32 CoreIdIndex.         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2808  **                                          const uint32 TimerRelValAtReset   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2809  **                                          const boolean UpdatePassword,     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2810  **                                          const boolean SetResetProtection) **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2811  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2812  ** Description      : This interface updates password/enables/disable         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2813  **                    CPU EndInit protection                                  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2814  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2815  ** Service ID       : NA                                                      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2816  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2817  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2818  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2819  ** Reentrancy       : Not Reentrant on same CPU, Reentrant on other CPUs      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2820  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2821  ** Parameters(in)   : NewPassword        -  Password to be updated            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2822  **                    CoreIdIndex        -  Core ID                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2823  **                    TimerRelValAtReset -  Timer value at ENDINIT disabled   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2824  **                    UpdatePassword     -  True  - Update Password           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2825  **                                          False - No password update        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2826  **                    SetResetProtection -  True  - Enable ENDINIT protection **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2827  **                                          False - Disable ENDINIT protection**
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2828  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2829  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2830  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2831  ** Return value     : CpuEndInitRet - Current password and TimerReload value  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2832  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2833  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2834  static McalLib_CpuEndInitRetType Mcal_lUpdateCpuEndInit(
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2835                                       const uint32  NewPassword,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2836                                       const uint32  CoreIdIndex,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2837                                       const uint32  TimerRelValAtReset,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2838                                       const boolean UpdatePassword,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2839                                       const boolean SetResetProtection)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2840  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2841    McalLib_CpuEndInitRetType CpuEndInitRet;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2842    uint32 UnlockCpuWdtCon0Value;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2843    uint32 NewCpuWdtCon0Value;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2844    uint32 UnlockTimerReload;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2845    uint32 CpuWdtCon0Value;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2846    uint32 UnlockPassword;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2847    uint32 TimerReload;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2848  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2849    /* The variable 'dummy' is made volatile to prevent any optimization of the
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2850     * variable during compilation, since the variable is used only for read back
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2851     * of ENDINIT control registers, after the same register is written in the
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2852     * previous statement
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2853     */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2854    volatile uint32 dummy;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2855  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2856    /* Initalize to zero */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2857    CpuEndInitRet.TimerRelValAtReset = 0x0U;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2858  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2859    /* Read the WDTCPUxCON0 register */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2860     CpuWdtCon0Value = MODULE_SCU.WDTCPU[CoreIdIndex].CON0.U;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2861  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2862    /* Compute the password required to unlock the WDTCPUxCON0 register */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2863    UnlockPassword = Mcal_lCpuPwSequence(CoreIdIndex, (uint32)CpuWdtCon0Value);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2864  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2865    /* Compute the timer reload value required to unlock
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2866     * the WDTCPUxCON0 register */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2867    UnlockTimerReload = Mcal_lCpuRelValue(CoreIdIndex, (uint32)CpuWdtCon0Value);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2868  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2869    /* Extract the current timer reload value */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2870    TimerReload = Mcal_lCalculateTimerReloadVal(CoreIdIndex, TimerRelValAtReset,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2871                                                SetResetProtection);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2872  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2873    /* Compute the current password, to be returned, based on the retrieved
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2874     * WDTCPUxCON0 value */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2875    CpuEndInitRet.Password = Mcal_lDecryptPw((uint32)CpuWdtCon0Value);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2876  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2877    /* Calculate the value to be written in WDTCPUxCON0, to unlock it */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2878    UnlockCpuWdtCon0Value =
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2879            (UnlockTimerReload << IFX_SCU_WDTCPU_CON0_REL_OFF) |
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2880            (UnlockPassword << IFX_SCU_WDTCPU_CON0_PW_OFF)|
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2881            ((uint32)MCAL_CPUWDTCON0_UNLOCK);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2882  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2883     /* Check if password update is requested */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2884     /* [cover parentID={5D303B68-3C5F-4f92-9593-9E42DC9BD5C1}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2885        Check if password update is requested
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2886        [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2887    if (UpdatePassword == MCAL_UPDATE_NEWPASSWORD)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2888    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2889      /* Calculate the value to be written in WDTCPUxCON0, to update it with
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2890       * new password
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2891       */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2892      /* [cover parentID={11FAAF91-980D-4f27-B797-29B7C0666674}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2893       * Calculate the value to be written in WDTCPUxCON0 to update the new
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2894       * password [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2895       */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2896      NewCpuWdtCon0Value = (TimerReload << IFX_SCU_WDTCPU_CON0_REL_OFF) |
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2897                           (NewPassword << IFX_SCU_WDTCPU_CON0_PW_OFF)  |
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2898                           ((uint32)MCAL_CPUWDTCON0_LOCK);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2899    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2900    else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2901    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2902      /* Check Set/Reset ENDINIT protection requested */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2903      /* [cover parentID={0FE372A6-78E4-4839-8263-6740A02C2AC7}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2904         Check Set/Reset ENDINIT protection requested
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2905         [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2906      if (SetResetProtection == MCAL_SETENDINITPROTECTION)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2907      {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2908        /* Calculate the value to be written in WDTCPUxCON0,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2909         * to re-enable ENDINIT protection
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2910         */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2911        /* [cover parentID={315C2D0B-B963-449f-B59D-CB9B8373F038}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2912         *  Calculate the value to be written in WDTCPUxCON0, to re-enable
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2913         *  ENDINIT protection[/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2914         */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2915        NewCpuWdtCon0Value = (TimerReload << IFX_SCU_WDTCPU_CON0_REL_OFF) |
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2916                             (CpuEndInitRet.Password <<
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2917                             IFX_SCU_WDTCPU_CON0_PW_OFF)  |
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2918                             ((uint32)MCAL_CPUWDTCON0_ENABLE_ENDINIT);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2919      }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2920      else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2921      {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2922        /* Calculate the value to be written in WDTCPUxCON0,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2923         * to temporarily disable ENDINIT protection
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2924         */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2925        /* [cover parentID={FA68029C-B3AB-4683-8164-47E83FD2A16F}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2926         * Calculate the value to be written in WDTCPUxCON0, to temporarily
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2927         * disable ENDINIT protection and store the timer reload value
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2928         * (required while re-enabling ENDINIT protection)[/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2929         */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2930        NewCpuWdtCon0Value = (TimerReload << IFX_SCU_WDTCPU_CON0_REL_OFF) |
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2931                             (CpuEndInitRet.Password <<
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2932                             IFX_SCU_WDTCPU_CON0_PW_OFF)  |
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2933                             ((uint32)MCAL_CPUWDTCON0_DISABLE_ENDINIT);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2934  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2935        CpuEndInitRet.TimerRelValAtReset = TimerReload;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2936      }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2937    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2938  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2939    /* Unlock the WDTCPUxCON0 register */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2940    MODULE_SCU.WDTCPU[CoreIdIndex].CON0.U = UnlockCpuWdtCon0Value;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2941  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2942    dummy = MODULE_SCU.WDTCPU[CoreIdIndex].CON0.U;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2943  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2944    /* Update the WDTCPUxCON0 to re-enable/temporary disable ENDINIT protection */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2945    MODULE_SCU.WDTCPU[CoreIdIndex].CON0.U = NewCpuWdtCon0Value;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2946  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2947    dummy = MODULE_SCU.WDTCPU[CoreIdIndex].CON0.U;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2948  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2949    UNUSED_PARAMETER(dummy);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2950  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2951    /* [cover parentID={F2DEA58E-0358-4096-A1EA-D805864C0D80}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2952       Return the old password
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2953       [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2954    return (CpuEndInitRet);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2955  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2956  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2957  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2958  ** Traceability     :[cover parentID={C9B454CE-0DAA-4ad1-958E-B32F00DE06C7}]  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2959  **                   [/cover]                                                 **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2960  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2961  ** Syntax           : LOCAL_INLINE uint32 Mcal_lCalculateTimerReloadVal(      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2962  **                                  const uint32 CoreId,                      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2963  **                                  const uint32 TimerRelValAtReset,          **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2964  **                                  const boolean SetResetProtection)         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2965  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2966  ** Description      : This interface calculates the timer reload value        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2967  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2968  ** Service ID       : NA                                                      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2969  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2970  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2971  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2972  ** Reentrancy       : Not Reentrant on same CPU, Reentrant on other CPUs      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2973  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2974  ** Parameters(in)   : CoreId             -  Core ID                           **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2975  **                    TimerRelValAtReset -  Timer value at ENDINIT disabled   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2976  **                    SetResetProtection -  True  - Enable ENDINIT protection **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2977  **                                          False - Disable ENDINIT protection**
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2978  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2979  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2980  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2981  ** Return value     : TimerReload - Timer reload value                        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2982  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2983  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2984  LOCAL_INLINE uint32 Mcal_lCalculateTimerReloadVal(const uint32 CoreId,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2985                                       const uint32 TimerRelValAtReset,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2986                                       const boolean SetResetProtection)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2987  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2988    uint32 TimerReload = Mcal_GetBitAtomic(MODULE_SCU.WDTCPU[CoreId].SR.U,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2989                                           IFX_SCU_WDTCPU_SR_TIM_OFF,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2990                                           IFX_SCU_WDTCPU_SR_TIM_LEN);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2991    /* [cover parentID={9F31EF03-A22B-400c-9BA0-DA3240B9F447}][/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2992    if (SetResetProtection == MCAL_SETENDINITPROTECTION)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2993    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2994      TimerReload = TimerReload - (uint32)MCAL_ENDINIT_TIMEOUT_VALUE;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2995  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2996      /* Calculate the timer reload value */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2997      /* Timer Reload value = Current timer reload value + the WDT timer value
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2998       * when ENDINIT protection was disabled
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2999       */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3000      /* [cover parentID={AF55A6A4-A70F-4a37-A78D-3F7EEAC1943C}][/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3001      TimerReload = TimerReload + TimerRelValAtReset;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3002  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3003      if(TimerReload > (uint32)MCAL_CPUWDT_TIMER_VALUE_MAX)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3004      {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3005        TimerReload = MCAL_CPUWDT_TIMER_VALUE_MAX;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3006      }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3007    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3008  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3009    return TimerReload;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3010  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3011  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3012  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3013  ** Traceability     : [cover parentID={EEAA8C0B-6BD5-462e-A3D8-3116EF8B6747}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3014  ** [/cover]                                                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3015  ** Syntax          : void Mcal_lGetSpinlock                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3016  **                    ( volatile uint32 * const LockAddress,                  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3017  **                             const uint32 Timeout, const uint8 ApiId)       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3018  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3019  ** Description     : This function will check if spinlock is available in an  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3020  **                   non atomic fashion and if spinlock is free then it is    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3021  **                   acquired in an atomic fashion acquired else it will      **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3022  **                   try again until the timer tick provided by user is not   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3023  **                   less than difference between current and base stm ticks  **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3024  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3025  ** Service ID      : NA                                                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3026  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3027  ** Sync/Async      : Synchronous                                              **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3028  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3029  ** Reentrancy      : Non Reentrant                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3030  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3031  ** Parameters(in)  : LockAddress - It is used to lock the shared variables.   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3032  **                   Timeout - It is total time provided in micro second by   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3033  **                              user using which spinlock should be acquired. **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3034  **                              Timeout value should be in range of 1 us to   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3035  **                              1048575 us (timeout when passed as 1 indicate **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3036  **                              as 1 us to this API).                         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3037  **                   ApiId - Service ID of the API reporting an error         **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3038  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3039  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3040  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3041  ** Return value     : None.                                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3042  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3043  static void Mcal_lGetSpinlock(volatile uint32 *const LockAddress,
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3044                                const uint32 Timeout, const uint8 ApiId)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3045  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3046    uint32 LockAddVal;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3047    uint32 DelayTickResolution;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3048    uint32 LockAddRet;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3049    uint32 DelayTicks, BaseSTMTick, CurrSTMTick;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3050    uint32 LockVal = SPINLOCKBUSY;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3051  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3052    /* [cover parentID={887AEE46-FC58-4ba8-BCB2-4E331C00736E}][/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3053    if(Mcal_StmTimerResolution == 0U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3054    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3055      DelayTickResolution = Mcal_lDelayResetTickCalibration
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3056                                              (MCALLIB_SID_GETSPINLOCK);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3057    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3058    else
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3059    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3060      DelayTickResolution = Mcal_StmTimerResolution;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3061    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3062  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3063    /* [cover parentID={397C69E3-87F0-4802-AC83-A23CFFC54804}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3064     * Check is DelayTickResolution resolution is zero even after calibaration
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3065     * [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3066     */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3067    if(DelayTickResolution != 0U)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3068    {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3069      /* [cover parentID={250EA709-EF99-4943-BEC6-BE8A3C26EE0B}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3070         Calculate delay ticks using delay tick resolution
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3071         [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3072      DelayTicks = ((Timeout / DelayTickResolution) * MCAL_TIMEOUT);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3073      CurrSTMTick         = MCAL_GET_STM_TICK();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3074      BaseSTMTick         = CurrSTMTick;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3075      /* [cover parentID={B277155C-3137-4a57-8443-B908AB561FBD}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3076       * If spinlock is not acquired and if difference between current and base
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3077       * STM ticks is less than delay ticks
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3078       * [/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3079      do
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3080      {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3081        LockAddVal = *LockAddress;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3082        /* Loop untill the lock address is free  for a specified timeout in a
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3083         * non-atomic fashion
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3084         */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3085        /* [cover parentID={68D38DF0-C61C-450e-8AFD-005EA69D1E84}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3086         * Loop if spinlock is busy and if difference between current and base STM
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3087         * ticks is less than delay ticks
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3088         * [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3089         */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3090        /* [cover parentID={80B6F3DB-C04E-476e-8E55-39456B699A76}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3091         * Loop untill the lock address is free  for a specified timeout in a
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3092         * non-atomic fashion
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3093         * [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3094         */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3095        while(((uint32)(CurrSTMTick - BaseSTMTick) < DelayTicks) &&
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3096              (LockAddVal != (uint32)SPINLOCKFREE))
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3097        {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3098          /* Read the current STM tick from STM.TIM0 register */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3099          CurrSTMTick       = MCAL_GET_STM_TICK();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3100          LockAddVal = *LockAddress;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3101        }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3102        /* MISRA2012_RULE_11_3_JUSTIFICATION: Intrinsic function used for
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3103         *  compare swap which require pointer conversion, no side effect seen
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3104         *  as pointer passed is always 32-bit aligned
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3105         */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3106        /* MISRA2012_RULE_11_5_JUSTIFICATION: Intrinsic function used for
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3107         * compare swap which require pointer conversion, no side effect seen
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3108         * as pointer passed is always 32-bit aligned
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3109         */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3110        /* MISRA2012_RULE_11_8_JUSTIFICATION: Intrinsic function used for
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3111         *  compare swap which require removing of volatile from pointer, no
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3112         *  side effect seen as pointer passed is always 32-bit aligned
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3113         */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3114        /* MISRA2012_RULE_4_6_JUSTIFICATION: Basic numerical type - int/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3115         *  unsigned int is used while invoking compiler intrinsic functions.
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3116         *  These compiler intrinsic functions are implemented specific to
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3117         *  tricore
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3118         */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3119        LockAddRet = Mcal_CmpAndSwap(LockAddress, LockVal, SPINLOCKFREE);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3120        /* [cover parentID={40E05C7E-C511-4834-9617-6F98212953BD}]Compare
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3121        if Lock address is free and than acquire the lock in an atomic
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3122        fashion if difference between current and base STM ticks is less
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3123        than delay ticks[/cover] */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3124      } while(
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3125        (LockAddRet != (uint32)SPINLOCKFREE) &&
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3126        (((CurrSTMTick - BaseSTMTick) < DelayTicks)));
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3127  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3128      /* [cover parentID={555094D0-9B6D-48e7-9F75-ED4EB196B554}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3129       *  If SAFETY Error Check is Enabled
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3130       *  [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3131       */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3132      #if (MCALLIB_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3133      /* [cover parentID={7F7F914E-7EFA-440c-819B-EE9F050C34B0}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3134       * If spinlock is not free and timeout has expired
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3135       * [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3136       */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3137      if((((CurrSTMTick - BaseSTMTick) >= DelayTicks)) &&
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3138          (LockAddRet != (uint32)SPINLOCKFREE))
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3139      {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3140        /* [cover parentID={1F7567B8-AA4E-4a73-83EF-ACD52C7C4843}]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3141         * Report error MCALLIB_E_TIMEOUT_FAILED
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3142         * [/cover]
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3143         */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3144        Mcal_lReportError(ApiId, MCALLIB_E_TIMEOUT_FAILED);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3145      }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3146      #endif
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3147    }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3148  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3149    /* This is used to avoid MISRA when Safety is switched OFF */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3150    UNUSED_PARAMETER(ApiId);
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3151    return;
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3152  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3153  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3154  /*******************************************************************************
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3155  ** Traceability     : [cover parentID={9D17E679-C32F-4f07-87E8-780743171A72}] **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3156  ** [/cover]                                                                   **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3157  ** Syntax          : void Mcal_lReleaseSpinlock                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3158  **                               (volatile uint32 * const LockAddress)        **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3159  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3160  ** Description     : This function will release the Spinlock and value of     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3161                       lock address will be 0x0U.                               **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3162  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3163  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3164  ** Service ID      : NA                                                       **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3165  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3166  ** Sync/Async      : Synchronous                                              **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3167  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3168  ** Reentrancy      : Non Reentrant                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3169  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3170  ** Parameters(in)  : LockAddress - Lock that needs to be cleared(release)     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3171  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3172  ** Parameters (out): None                                                     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3173  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3174  ** Return value    : void                                                     **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3175  **                                                                            **
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3176  *******************************************************************************/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3177  LOCAL_INLINE void Mcal_lReleaseSpinlock(volatile uint32 * const LockAddress)
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3178  {
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3179    /* Ensure sequence and synchronization of read(s), write(s) of guarded
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3180     * resources before releasing the lock
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3181     */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3182    DSYNC();
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3183  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3184    /* Clear the lock variable */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3185    Mcal_SetBitAtomic(LockAddress, 0x0U, 0x1, SPINLOCKFREE);
	mov	d0,#0

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3185    Mcal_SetBitAtomic(LockAddress, 0x0U, 0x1, SPINLOCKFREE);      (inlined)
	
.L773:
	imask e2,d0,d0,#(0x1) 
 ldmst [a15]0,e2
	
.L424:
	call	SchM_Exit_McalLib_SafetyEndInit
.L969:
	mov	d2,d15
.L774:
	ret
.L417:
	
__Mcal_SetSafetyEndInitPassword_function_end:
	.size	Mcal_SetSafetyEndInitPassword,__Mcal_SetSafetyEndInitPassword_function_end-Mcal_SetSafetyEndInitPassword
.L245:
	; End of function
	
	.sdecl	'.text.Mcal_WriteSafetyEndInitProtReg.Code.Cpu0',code,cluster('Mcal_WriteSafetyEndInitProtReg')
	.sect	'.text.Mcal_WriteSafetyEndInitProtReg.Code.Cpu0'
	.align	2
	
	.global	Mcal_WriteSafetyEndInitProtReg
; Function Mcal_WriteSafetyEndInitProtReg
.L174:
Mcal_WriteSafetyEndInitProtReg:	.type	func
	jnz.a	a4,.L26
.L974:
	mov	d6,#127
.L975:
	mov	d7,#201
.L433:
	mov	d4,#255
.L775:
	mov	d5,#0
.L976:
	j	Mcal_ReportSafetyError
.L26:
	mov.aa	a15,a4
.L977:
	mov	d8,#-1
.L978:
	mov	d15,#127
.L437:
	mov.d	d9,a4
.L777:
	and	d8,d4
.L979:
	call	SchM_Enter_McalLib_SafetyEndInit
.L776:
	movh.a	a4,#@his(Mcal_LockAddressSiecon0)
	lea	a4,[a4]@los(Mcal_LockAddressSiecon0)
.L980:
	mov	d4,#10000
.L981:
	mov	d5,d15
	call	Mcal_lGetSpinlock
.L982:
	mov	d4,#0
.L983:
	mov	d5,d4
.L984:
	mov	d6,d4
	call	Mcal_lUpdateSafetyEndInit
.L985:
	mov.u	d15,#65535
.L986:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2219    if (TempAddr > MCAL_16BIT_MAX_ADDR)      (inlined)
	jge.u	d15,d9,.L28
.L987:
	st.w	[a15],d8
.L988:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2230          *RegAddress32 = MaskedData;      (inlined)
	j	.L29

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2219    if (TempAddr > MCAL_16BIT_MAX_ADDR)      (inlined)
.L28:
	mov.d	d15,a15
.L989:
	mov.u	d0,#37888
	jeq	d15,d0,.L30
.L990:
	mov.u	d0,#58432
	jeq	d15,d0,.L31
.L991:
	mov.u	d0,#58440
	jeq	d15,d0,.L32
.L992:
	mov.u	d0,#58448
	jeq	d15,d0,.L33
.L993:
	mov.u	d0,#65044
	jeq	d15,d0,.L34
	j	.L35

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2264        case CPU_COMPAT:      (inlined)
.L30:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2265            MTCR(CPU_COMPAT, MaskedData);      (inlined)
	dsync
	mtcr	#37888,d8
	isync
.L994:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2266            break;      (inlined)
	j	.L36

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2267        case CPU_SYSCON:      (inlined)
.L34:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2268            MTCR(CPU_SYSCON, MaskedData);      (inlined)
	dsync
	mtcr	#65044,d8
	isync
.L995:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2269            break;      (inlined)
	j	.L37

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2270        case CPU_TPS_EXTIM_ENTRY_LVAL:      (inlined)
.L31:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2271            MTCR(CPU_TPS_EXTIM_ENTRY_LVAL, MaskedData);      (inlined)
	dsync
	mtcr	#58432,d8
	isync
.L996:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2272            break;      (inlined)
	j	.L38

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2273        case CPU_TPS_EXTIM_EXIT_LVAL:      (inlined)
.L32:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2274            MTCR(CPU_TPS_EXTIM_EXIT_LVAL, MaskedData);      (inlined)
	dsync
	mtcr	#58440,d8
	isync
.L997:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2275            break;      (inlined)
	j	.L39

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2276        case CPU_TPS_EXTIM_CLASS_EN:      (inlined)
.L33:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2277            MTCR(CPU_TPS_EXTIM_CLASS_EN, MaskedData);      (inlined)
	dsync
	mtcr	#58448,d8
	isync

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2283    }      (inlined)
.L39:
.L38:
.L37:
.L36:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2279        default:      (inlined)
.L35:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2232        else      (inlined)
.L29:
	mov	d4,#0
.L998:
	mov	d5,d4
.L999:
	mov	d6,#1
	call	Mcal_lUpdateSafetyEndInit
.L1000:
	movh.a	a15,#@his(Mcal_LockAddressSiecon0)
	lea	a15,[a15]@los(Mcal_LockAddressSiecon0)
.L453:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3182    DSYNC();      (inlined)
	dsync
.L1001:
	mov	d15,#0

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3185    Mcal_SetBitAtomic(LockAddress, 0x0U, 0x1, SPINLOCKFREE);      (inlined)
	
	imask e2,d15,d15,#(0x1) 
 ldmst [a15]0,e2
	
.L454:
	j	SchM_Exit_McalLib_SafetyEndInit
.L428:
	
__Mcal_WriteSafetyEndInitProtReg_function_end:
	.size	Mcal_WriteSafetyEndInitProtReg,__Mcal_WriteSafetyEndInitProtReg_function_end-Mcal_WriteSafetyEndInitProtReg
.L250:
	; End of function
	
	.sdecl	'.text.Mcal_WriteSafetyEndInitProtReg16.Code.Cpu0',code,cluster('Mcal_WriteSafetyEndInitProtReg16')
	.sect	'.text.Mcal_WriteSafetyEndInitProtReg16.Code.Cpu0'
	.align	2
	
	.global	Mcal_WriteSafetyEndInitProtReg16
; Function Mcal_WriteSafetyEndInitProtReg16
.L176:
Mcal_WriteSafetyEndInitProtReg16:	.type	func
	jnz.a	a4,.L40
.L1233:
	mov	d6,#129
.L1234:
	mov	d7,#201
.L607:
	mov	d4,#255
.L778:
	mov	d5,#0
.L1235:
	j	Mcal_ReportSafetyError
.L40:
	mov.aa	a15,a4
.L1236:
	mov	d8,#-1
.L1237:
	mov	d9,#1
.L1238:
	mov	d15,#129
.L610:
	mov.d	d10,a4
.L780:
	and	d8,d4
.L1239:
	call	SchM_Enter_McalLib_SafetyEndInit
.L779:
	movh.a	a4,#@his(Mcal_LockAddressSiecon0)
	lea	a4,[a4]@los(Mcal_LockAddressSiecon0)
.L1240:
	mov	d4,#10000
.L1241:
	mov	d5,d15
	call	Mcal_lGetSpinlock
.L1242:
	mov	d4,#0
.L1243:
	mov	d5,d4
.L1244:
	mov	d6,d4
	call	Mcal_lUpdateSafetyEndInit
.L1245:
	mov.u	d15,#65535
.L1246:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2219    if (TempAddr > MCAL_16BIT_MAX_ADDR)      (inlined)
	jge.u	d15,d10,.L42
.L1247:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2224      if (Accesstype == MCAL_32BIT_ACCESS)      (inlined)
	jne	d9,#0,.L43
.L1248:
	st.w	[a15],d8
.L1249:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2230          *RegAddress32 = MaskedData;      (inlined)
	j	.L44

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2224      if (Accesstype == MCAL_32BIT_ACCESS)      (inlined)
.L43:
	st.h	[a15],d8
.L1250:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2241      else      (inlined)
	j	.L45

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2219    if (TempAddr > MCAL_16BIT_MAX_ADDR)      (inlined)
.L42:
	mov.d	d15,a15
.L1251:
	mov.u	d0,#37888
	jeq	d15,d0,.L46
.L1252:
	mov.u	d0,#58432
	jeq	d15,d0,.L47
.L1253:
	mov.u	d0,#58440
	jeq	d15,d0,.L48
.L1254:
	mov.u	d0,#58448
	jeq	d15,d0,.L49
.L1255:
	mov.u	d0,#65044
	jeq	d15,d0,.L50
	j	.L51

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2264        case CPU_COMPAT:      (inlined)
.L46:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2265            MTCR(CPU_COMPAT, MaskedData);      (inlined)
	dsync
	mtcr	#37888,d8
	isync
.L1256:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2266            break;      (inlined)
	j	.L52

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2267        case CPU_SYSCON:      (inlined)
.L50:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2268            MTCR(CPU_SYSCON, MaskedData);      (inlined)
	dsync
	mtcr	#65044,d8
	isync
.L1257:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2269            break;      (inlined)
	j	.L53

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2270        case CPU_TPS_EXTIM_ENTRY_LVAL:      (inlined)
.L47:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2271            MTCR(CPU_TPS_EXTIM_ENTRY_LVAL, MaskedData);      (inlined)
	dsync
	mtcr	#58432,d8
	isync
.L1258:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2272            break;      (inlined)
	j	.L54

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2273        case CPU_TPS_EXTIM_EXIT_LVAL:      (inlined)
.L48:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2274            MTCR(CPU_TPS_EXTIM_EXIT_LVAL, MaskedData);      (inlined)
	dsync
	mtcr	#58440,d8
	isync
.L1259:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2275            break;      (inlined)
	j	.L55

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2276        case CPU_TPS_EXTIM_CLASS_EN:      (inlined)
.L49:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2277            MTCR(CPU_TPS_EXTIM_CLASS_EN, MaskedData);      (inlined)
	dsync
	mtcr	#58448,d8
	isync

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2283    }      (inlined)
.L55:
.L54:
.L53:
.L52:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2279        default:      (inlined)
.L51:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2250    else      (inlined)
.L45:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2232        else      (inlined)
.L44:
	mov	d4,#0
.L1260:
	mov	d5,d4
.L1261:
	mov	d6,#1
	call	Mcal_lUpdateSafetyEndInit
.L1262:
	movh.a	a15,#@his(Mcal_LockAddressSiecon0)
	lea	a15,[a15]@los(Mcal_LockAddressSiecon0)
.L622:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3182    DSYNC();      (inlined)
	dsync
.L1263:
	mov	d15,#0

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3185    Mcal_SetBitAtomic(LockAddress, 0x0U, 0x1, SPINLOCKFREE);      (inlined)
	
	imask e2,d15,d15,#(0x1) 
 ldmst [a15]0,e2
	
.L623:
	j	SchM_Exit_McalLib_SafetyEndInit
.L602:
	
__Mcal_WriteSafetyEndInitProtReg16_function_end:
	.size	Mcal_WriteSafetyEndInitProtReg16,__Mcal_WriteSafetyEndInitProtReg16_function_end-Mcal_WriteSafetyEndInitProtReg16
.L335:
	; End of function
	
	.sdecl	'.text.Mcal_WriteSafetyEndInitProtRegMask.Code.Cpu0',code,cluster('Mcal_WriteSafetyEndInitProtRegMask')
	.sect	'.text.Mcal_WriteSafetyEndInitProtRegMask.Code.Cpu0'
	.align	2
	
	.global	Mcal_WriteSafetyEndInitProtRegMask
; Function Mcal_WriteSafetyEndInitProtRegMask
.L178:
Mcal_WriteSafetyEndInitProtRegMask:	.type	func
	mov	d8,d5
.L784:
	jnz.a	a4,.L56
.L1006:
	mov	d6,#143
.L1007:
	mov	d7,#201
.L462:
	mov	d4,#255
.L781:
	mov	d5,#0
.L782:
	j	Mcal_ReportSafetyError
.L56:
	mov.aa	a15,a4
.L1008:
	mov	d15,#143
.L465:
	mov.d	d9,a4
.L786:
	and	d10,d4,d8
.L787:
	call	SchM_Enter_McalLib_SafetyEndInit
.L783:
	movh.a	a4,#@his(Mcal_LockAddressSiecon0)
	lea	a4,[a4]@los(Mcal_LockAddressSiecon0)
.L1009:
	mov	d4,#10000
.L1010:
	mov	d5,d15
	call	Mcal_lGetSpinlock
.L1011:
	mov	d4,#0
.L1012:
	mov	d5,d4
.L1013:
	mov	d6,d4
	call	Mcal_lUpdateSafetyEndInit
.L1014:
	mov.u	d15,#65535
.L1015:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2219    if (TempAddr > MCAL_16BIT_MAX_ADDR)      (inlined)
	jge.u	d15,d9,.L58
.L1016:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2228        if(Mask == MCAL_DEFAULT_MASK_VALUE)      (inlined)
	jne	d8,#-1,.L59
.L1017:
	st.w	[a15],d10
.L1018:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2230          *RegAddress32 = MaskedData;      (inlined)
	j	.L60

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2228        if(Mask == MCAL_DEFAULT_MASK_VALUE)      (inlined)
.L59:
	ld.w	d15,[a15]
.L1019:
	mov	d0,#-1
	xor	d8,d0
.L785:
	and	d15,d8
.L789:
	or	d10,d15
.L788:
	st.w	[a15],d10
.L1020:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2232        else      (inlined)
	j	.L61

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2219    if (TempAddr > MCAL_16BIT_MAX_ADDR)      (inlined)
.L58:
	mov.d	d15,a15
.L1021:
	mov.u	d0,#37888
	jeq	d15,d0,.L62
.L1022:
	mov.u	d0,#58432
	jeq	d15,d0,.L63
.L1023:
	mov.u	d0,#58440
	jeq	d15,d0,.L64
.L1024:
	mov.u	d0,#58448
	jeq	d15,d0,.L65
.L1025:
	mov.u	d0,#65044
	jeq	d15,d0,.L66
	j	.L67

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2264        case CPU_COMPAT:      (inlined)
.L62:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2265            MTCR(CPU_COMPAT, MaskedData);      (inlined)
	dsync
	mtcr	#37888,d10
	isync
.L1026:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2266            break;      (inlined)
	j	.L68

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2267        case CPU_SYSCON:      (inlined)
.L66:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2268            MTCR(CPU_SYSCON, MaskedData);      (inlined)
	dsync
	mtcr	#65044,d10
	isync
.L1027:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2269            break;      (inlined)
	j	.L69

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2270        case CPU_TPS_EXTIM_ENTRY_LVAL:      (inlined)
.L63:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2271            MTCR(CPU_TPS_EXTIM_ENTRY_LVAL, MaskedData);      (inlined)
	dsync
	mtcr	#58432,d10
	isync
.L1028:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2272            break;      (inlined)
	j	.L70

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2273        case CPU_TPS_EXTIM_EXIT_LVAL:      (inlined)
.L64:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2274            MTCR(CPU_TPS_EXTIM_EXIT_LVAL, MaskedData);      (inlined)
	dsync
	mtcr	#58440,d10
	isync
.L1029:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2275            break;      (inlined)
	j	.L71

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2276        case CPU_TPS_EXTIM_CLASS_EN:      (inlined)
.L65:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2277            MTCR(CPU_TPS_EXTIM_CLASS_EN, MaskedData);      (inlined)
	dsync
	mtcr	#58448,d10
	isync

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2283    }      (inlined)
.L71:
.L70:
.L69:
.L68:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2279        default:      (inlined)
.L67:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2241      else      (inlined)
.L61:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2232        else      (inlined)
.L60:
	mov	d4,#0
.L1030:
	mov	d5,d4
.L1031:
	mov	d6,#1
	call	Mcal_lUpdateSafetyEndInit
.L1032:
	movh.a	a15,#@his(Mcal_LockAddressSiecon0)
	lea	a15,[a15]@los(Mcal_LockAddressSiecon0)
.L476:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3182    DSYNC();      (inlined)
	dsync
.L1033:
	mov	d15,#0

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3185    Mcal_SetBitAtomic(LockAddress, 0x0U, 0x1, SPINLOCKFREE);      (inlined)
	
	imask e2,d15,d15,#(0x1) 
 ldmst [a15]0,e2
	
.L477:
	j	SchM_Exit_McalLib_SafetyEndInit
.L456:
	
__Mcal_WriteSafetyEndInitProtRegMask_function_end:
	.size	Mcal_WriteSafetyEndInitProtRegMask,__Mcal_WriteSafetyEndInitProtRegMask_function_end-Mcal_WriteSafetyEndInitProtRegMask
.L255:
	; End of function
	
	.sdecl	'.text.Mcal_GetPeripheralEndInitPassword.Code.Cpu0',code,cluster('Mcal_GetPeripheralEndInitPassword')
	.sect	'.text.Mcal_GetPeripheralEndInitPassword.Code.Cpu0'
	.align	2
	
	.global	Mcal_GetPeripheralEndInitPassword
; Function Mcal_GetPeripheralEndInitPassword
.L180:
Mcal_GetPeripheralEndInitPassword:	.type	func
	movh.a	a15,#61443
	ld.w	d15,[a15]@los(0xf003629c)
	extr.u	d15,d15,#2,#14
.L1038:
	xor	d2,d15,#63
.L790:
	ret
.L479:
	
__Mcal_GetPeripheralEndInitPassword_function_end:
	.size	Mcal_GetPeripheralEndInitPassword,__Mcal_GetPeripheralEndInitPassword_function_end-Mcal_GetPeripheralEndInitPassword
.L260:
	; End of function
	
	.sdecl	'.text.Mcal_SetPeripheralEndInitPassword.Code.Cpu0',code,cluster('Mcal_SetPeripheralEndInitPassword')
	.sect	'.text.Mcal_SetPeripheralEndInitPassword.Code.Cpu0'
	.align	2
	
	.global	Mcal_SetPeripheralEndInitPassword
; Function Mcal_SetPeripheralEndInitPassword
.L182:
Mcal_SetPeripheralEndInitPassword:	.type	func
	insert	d15,d4,#0,#14,#18
.L792:
	call	SchM_Enter_McalLib_PeripheralEndInit
.L791:
	movh.a	a4,#@his(Mcal_LockAddressEicon0)
	lea	a4,[a4]@los(Mcal_LockAddressEicon0)
.L1043:
	mov	d4,#10000
.L1044:
	mov	d5,#124
	call	Mcal_lGetSpinlock
.L1045:
	mov	d5,#1
.L1046:
	mov	d6,#0
	mov	d4,d15
.L794:
	call	Mcal_lUpdatePeripheralEndInit
.L795:
	mov	d15,d2
.L793:
	movh.a	a15,#@his(Mcal_LockAddressEicon0)
	lea	a15,[a15]@los(Mcal_LockAddressEicon0)
.L486:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3182    DSYNC();      (inlined)
	dsync
.L1047:
	mov	d0,#0

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3185    Mcal_SetBitAtomic(LockAddress, 0x0U, 0x1, SPINLOCKFREE);      (inlined)
	
.L796:
	imask e2,d0,d0,#(0x1) 
 ldmst [a15]0,e2
	
.L487:
	call	SchM_Exit_McalLib_PeripheralEndInit
.L1048:
	mov	d2,d15
.L797:
	ret
.L481:
	
__Mcal_SetPeripheralEndInitPassword_function_end:
	.size	Mcal_SetPeripheralEndInitPassword,__Mcal_SetPeripheralEndInitPassword_function_end-Mcal_SetPeripheralEndInitPassword
.L265:
	; End of function
	
	.sdecl	'.text.Mcal_WritePeripEndInitProtReg.Code.Cpu0',code,cluster('Mcal_WritePeripEndInitProtReg')
	.sect	'.text.Mcal_WritePeripEndInitProtReg.Code.Cpu0'
	.align	2
	
	.global	Mcal_WritePeripEndInitProtReg
; Function Mcal_WritePeripEndInitProtReg
.L184:
Mcal_WritePeripEndInitProtReg:	.type	func
	mov.aa	a15,a4
.L800:
	mov	d15,d4
.L802:
	jnz.a	a15,.L74
.L1053:
	mov	d6,#122
.L1054:
	mov	d7,#201
.L494:
	mov	d4,#255
.L798:
	mov	d5,#0
.L1055:
	j	Mcal_ReportSafetyError
.L74:
	call	SchM_Enter_McalLib_PeripheralEndInit
.L799:
	movh.a	a4,#@his(Mcal_LockAddressEicon0)
	lea	a4,[a4]@los(Mcal_LockAddressEicon0)
.L1056:
	mov	d4,#10000
.L1057:
	mov	d5,#122
	call	Mcal_lGetSpinlock
.L1058:
	mov	d4,#0
.L1059:
	mov	d5,d4
.L1060:
	mov	d6,d4
	call	Mcal_lUpdatePeripheralEndInit
.L1061:
	st.w	[a15],d15
.L1062:
	mov	d4,#0
.L1063:
	mov	d5,d4
.L1064:
	mov	d6,#1
	call	Mcal_lUpdatePeripheralEndInit
.L1065:
	movh.a	a15,#@his(Mcal_LockAddressEicon0)
.L801:
	lea	a15,[a15]@los(Mcal_LockAddressEicon0)
.L497:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3182    DSYNC();      (inlined)
	dsync
.L1066:
	mov	d15,#0
.L803:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3185    Mcal_SetBitAtomic(LockAddress, 0x0U, 0x1, SPINLOCKFREE);      (inlined)
	
	imask e2,d15,d15,#(0x1) 
 ldmst [a15]0,e2
	
.L498:
	j	SchM_Exit_McalLib_PeripheralEndInit
.L489:
	
__Mcal_WritePeripEndInitProtReg_function_end:
	.size	Mcal_WritePeripEndInitProtReg,__Mcal_WritePeripEndInitProtReg_function_end-Mcal_WritePeripEndInitProtReg
.L270:
	; End of function
	
	.sdecl	'.text.Mcal_GetCpuPhysicalId.Code.Cpu0',code,cluster('Mcal_GetCpuPhysicalId')
	.sect	'.text.Mcal_GetCpuPhysicalId.Code.Cpu0'
	.align	2
	
	.global	Mcal_GetCpuPhysicalId
; Function Mcal_GetCpuPhysicalId
.L186:
Mcal_GetCpuPhysicalId:	.type	func
	mfcr	d2,#65052
.L804:
	ret
.L500:
	
__Mcal_GetCpuPhysicalId_function_end:
	.size	Mcal_GetCpuPhysicalId,__Mcal_GetCpuPhysicalId_function_end-Mcal_GetCpuPhysicalId
.L275:
	; End of function
	
	.sdecl	'.text.Mcal_GetGlobalDsprAddress.Code.Cpu0',code,cluster('Mcal_GetGlobalDsprAddress')
	.sect	'.text.Mcal_GetGlobalDsprAddress.Code.Cpu0'
	.align	2
	
	.global	Mcal_GetGlobalDsprAddress
; Function Mcal_GetGlobalDsprAddress
.L188:
Mcal_GetGlobalDsprAddress:	.type	func
	sh	d0,d5,#-28
.L805:
	mov	d2,#0
.L806:
	jeq	d4,#5,.L77
.L1075:
	jge.u	d4,#7,.L78
.L1076:
	insert	d15,d5,#0,#28,#4
.L1077:
	movh.a	a15,#@his(Mcal_kDsprEndAddress)
	lea	a15,[a15]@los(Mcal_kDsprEndAddress)
.L1078:
	addsc.a	a15,a15,d4,#2
	ld.w	d1,[a15]
.L1079:
	jlt.u	d1,d15,.L79
.L1080:
	mov	d15,#13
.L1081:
	jne	d15,d0,.L80
.L1082:
	insert	d2,d5,#0,#28,#4
.L807:
	movh.a	a15,#@his(Mcal_kCoreXMemSegment)
	lea	a15,[a15]@los(Mcal_kCoreXMemSegment)
.L1083:
	addsc.a	a15,a15,d4,#0
	ld.bu	d15,[a15]
.L1084:
	sh	d15,d15,#28
.L808:
	or	d2,d15
.L79:
.L78:
.L77:
	ret
.L80:
	movh.a	a15,#@his(Mcal_kCoreXMemSegment)
	lea	a15,[a15]@los(Mcal_kCoreXMemSegment)
.L1085:
	addsc.a	a15,a15,d4,#0
	ld.bu	d15,[a15]
.L1086:
	jne	d15,d0,.L82
.L1087:
	mov	d2,d5
.L82:
	ret
.L502:
	
__Mcal_GetGlobalDsprAddress_function_end:
	.size	Mcal_GetGlobalDsprAddress,__Mcal_GetGlobalDsprAddress_function_end-Mcal_GetGlobalDsprAddress
.L280:
	; End of function
	
	.sdecl	'.text.Mcal_GetLocalDsprAddress.Code.Cpu0',code,cluster('Mcal_GetLocalDsprAddress')
	.sect	'.text.Mcal_GetLocalDsprAddress.Code.Cpu0'
	.align	2
	
	.global	Mcal_GetLocalDsprAddress
; Function Mcal_GetLocalDsprAddress
.L190:
Mcal_GetLocalDsprAddress:	.type	func
	sh	d0,d4,#-28
.L809:
	mov	d2,#0
.L517:
	mfcr	d15,#65052
.L812:
	ge.u	d1,d15,#6
.L1092:
	sub	d1,d15,d1
.L518:
	jeq	d0,#2,.L84
.L1093:
	jge.u	d0,#8,.L85
.L1094:
	movh.a	a15,#@his(Mcal_kCoreXMemSegment+6)
.L1095:
	ld.bu	d15,[a15]@los(Mcal_kCoreXMemSegment+6)
.L1096:
	jlt.u	d0,d15,.L86
.L1097:
	insert	d1,d4,#0,#28,#4
.L813:
	rsub	d15,d0,#7
.L1098:
	movh.a	a15,#@his(Mcal_kDsprEndAddress)
	lea	a15,[a15]@los(Mcal_kDsprEndAddress)
.L1099:
	addsc.a	a15,a15,d15,#2
	ld.w	d15,[a15]
.L1100:
	jlt.u	d15,d1,.L87
.L1101:
	insert	d2,d4,#0,#28,#4
.L811:
	movh	d15,#53248
.L814:
	or	d2,d15
.L87:
	ret
.L86:
.L85:
.L84:
	mov	d15,#13
.L1102:
	jne	d15,d0,.L89
.L520:
	jne	d1,#5,.L90
.L521:
	movh.a	a15,#@his(Mcal_kDsprEndAddress+24)
.L1103:
	ld.w	d15,[a15]@los(Mcal_kDsprEndAddress+24)
.L815:
	j	.L91
.L90:
	movh.a	a15,#@his(Mcal_kDsprEndAddress)
	lea	a15,[a15]@los(Mcal_kDsprEndAddress)
.L522:
	addsc.a	a15,a15,d1,#2
.L523:
	ld.w	d15,[a15]
.L91:
	insert	d0,d4,#0,#28,#4
.L810:
	jlt.u	d15,d0,.L92
.L1104:
	mov	d2,d4
.L92:
.L89:
	ret
.L510:
	
__Mcal_GetLocalDsprAddress_function_end:
	.size	Mcal_GetLocalDsprAddress,__Mcal_GetLocalDsprAddress_function_end-Mcal_GetLocalDsprAddress
.L285:
	; End of function
	
	.sdecl	'.text.Mcal_GetGlobalPsprAddress.Code.Cpu0',code,cluster('Mcal_GetGlobalPsprAddress')
	.sect	'.text.Mcal_GetGlobalPsprAddress.Code.Cpu0'
	.align	2
	
	.global	Mcal_GetGlobalPsprAddress
; Function Mcal_GetGlobalPsprAddress
.L192:
Mcal_GetGlobalPsprAddress:	.type	func
	sh	d0,d5,#-28
.L816:
	mov	d2,#0
.L818:
	jeq	d4,#5,.L94
.L1109:
	jge.u	d4,#7,.L95
.L1110:
	mov	d15,#12
.L1111:
	jne	d15,d0,.L96
.L1112:
	movh.a	a15,#@his(Mcal_kPsprLocalEndAddress)
	lea	a15,[a15]@los(Mcal_kPsprLocalEndAddress)
.L1113:
	addsc.a	a15,a15,d4,#2
	ld.w	d15,[a15]
.L1114:
	jlt.u	d15,d5,.L97
.L1115:
	insert	d2,d5,#0,#28,#4
.L819:
	movh.a	a15,#@his(Mcal_kCoreXMemSegment)
	lea	a15,[a15]@los(Mcal_kCoreXMemSegment)
.L1116:
	addsc.a	a15,a15,d4,#0
	ld.bu	d15,[a15]
.L1117:
	sh	d15,d15,#28
.L1118:
	movh.a	a15,#@his(Mcal_kPsprGlobalBaseAddress)
	lea	a15,[a15]@los(Mcal_kPsprGlobalBaseAddress)
.L1119:
	addsc.a	a15,a15,d4,#2
	ld.w	d0,[a15]
.L817:
	or	d15,d0
.L820:
	or	d2,d15
.L97:
.L95:
.L94:
	ret
.L96:
	movh.a	a15,#@his(Mcal_kCoreXMemSegment)
	lea	a15,[a15]@los(Mcal_kCoreXMemSegment)
.L1120:
	addsc.a	a15,a15,d4,#0
	ld.bu	d15,[a15]
.L1121:
	jne	d15,d0,.L99
.L1122:
	insert	d15,d5,#0,#28,#4
.L822:
	movh.a	a15,#@his(Mcal_kPsprGlobalBaseAddress)
	lea	a15,[a15]@los(Mcal_kPsprGlobalBaseAddress)
.L1123:
	addsc.a	a15,a15,d4,#2
	ld.w	d0,[a15]
.L821:
	jlt.u	d15,d0,.L100
.L1124:
	movh.a	a15,#@his(Mcal_kPsprGlobalEndAddress)
	lea	a15,[a15]@los(Mcal_kPsprGlobalEndAddress)
.L1125:
	addsc.a	a15,a15,d4,#2
	ld.w	d0,[a15]
.L1126:
	jlt.u	d0,d15,.L101
.L1127:
	mov	d2,d5
.L101:
.L100:
.L99:
	ret
.L525:
	
__Mcal_GetGlobalPsprAddress_function_end:
	.size	Mcal_GetGlobalPsprAddress,__Mcal_GetGlobalPsprAddress_function_end-Mcal_GetGlobalPsprAddress
.L290:
	; End of function
	
	.sdecl	'.text.Mcal_GetLocalPsprAddress.Code.Cpu0',code,cluster('Mcal_GetLocalPsprAddress')
	.sect	'.text.Mcal_GetLocalPsprAddress.Code.Cpu0'
	.align	2
	
	.global	Mcal_GetLocalPsprAddress
; Function Mcal_GetLocalPsprAddress
.L194:
Mcal_GetLocalPsprAddress:	.type	func
	sh	d0,d4,#-28
.L823:
	mov	d2,#0
.L540:
	mfcr	d1,#65052
.L825:
	ge.u	d15,d1,#6
.L1132:
	sub	d1,d15
.L541:
	jeq	d0,#2,.L103
.L1133:
	jge.u	d0,#8,.L104
.L1134:
	movh.a	a15,#@his(Mcal_kCoreXMemSegment+6)
.L1135:
	ld.bu	d15,[a15]@los(Mcal_kCoreXMemSegment+6)
.L1136:
	jlt.u	d0,d15,.L105
.L1137:
	insert	d1,d4,#0,#28,#4
.L826:
	rsub	d15,d0,#7
.L1138:
	movh.a	a15,#@his(Mcal_kPsprGlobalBaseAddress)
	lea	a15,[a15]@los(Mcal_kPsprGlobalBaseAddress)
.L1139:
	addsc.a	a15,a15,d15,#2
	ld.w	d0,[a15]
.L824:
	jlt.u	d1,d0,.L106
.L1140:
	movh.a	a15,#@his(Mcal_kPsprGlobalEndAddress)
	lea	a15,[a15]@los(Mcal_kPsprGlobalEndAddress)
.L1141:
	addsc.a	a15,a15,d15,#2
	ld.w	d15,[a15]
.L1142:
	jlt.u	d15,d1,.L107
.L1143:
	mov.u	d15,#65535
	addih	d15,d15,#4079
.L1144:
	and	d1,d15
.L827:
	insert	d2,d1,#3,#30,#2
.L107:
.L106:
	ret
.L105:
.L104:
.L103:
	mov	d15,#12
.L1145:
	jne	d15,d0,.L109
.L1146:
	movh.a	a15,#@his(Mcal_kPsprLocalEndAddress)
	lea	a15,[a15]@los(Mcal_kPsprLocalEndAddress)
.L543:
	addsc.a	a15,a15,d1,#2
.L544:
	ld.w	d15,[a15]
.L1147:
	jlt.u	d15,d4,.L110
.L1148:
	mov	d2,d4
.L110:
.L109:
	ret
.L533:
	
__Mcal_GetLocalPsprAddress_function_end:
	.size	Mcal_GetLocalPsprAddress,__Mcal_GetLocalPsprAddress_function_end-Mcal_GetLocalPsprAddress
.L295:
	; End of function
	
	.sdecl	'.text.Mcal_DelayTickResolution.Code.Cpu0',code,cluster('Mcal_DelayTickResolution')
	.sect	'.text.Mcal_DelayTickResolution.Code.Cpu0'
	.align	2
	
	.global	Mcal_DelayTickResolution
; Function Mcal_DelayTickResolution
.L196:
Mcal_DelayTickResolution:	.type	func
	movh.a	a15,#@his(Mcal_StmTimerResolution)
	ld.w	d2,[a15]@los(Mcal_StmTimerResolution)
.L1153:
	ret
.L546:
	
__Mcal_DelayTickResolution_function_end:
	.size	Mcal_DelayTickResolution,__Mcal_DelayTickResolution_function_end-Mcal_DelayTickResolution
.L300:
	; End of function
	
	.sdecl	'.text.Mcal_DelayResetTickCalibration.Code.Cpu0',code,cluster('Mcal_DelayResetTickCalibration')
	.sect	'.text.Mcal_DelayResetTickCalibration.Code.Cpu0'
	.align	2
	
	.global	Mcal_DelayResetTickCalibration
; Function Mcal_DelayResetTickCalibration
.L198:
Mcal_DelayResetTickCalibration:	.type	func
	mov	d10,#0
.L828:
	call	SchM_Enter_McalLib_StmTimerResolution
.L1158:
	movh.a	a15,#61443
	ld.w	d15,[a15]@los(0xf0036030)
.L1159:
	and	d11,d15,#15
.L829:
	ld.w	d0,[a15]@los(0xf0036030)
.L1160:
	sh	d15,d0,#-28
.L1161:
	and	d12,d15,#3
.L830:
	ld.w	d0,[a15]@los(0xf0036018)
.L1162:
	extr.u	d8,d0,#9,#7
.L831:
	add	d8,#1
.L1163:
	ld.w	d0,[a15]@los(0xf0036018)
.L1164:
	extr.u	d9,d0,#24,#3
.L832:
	add	d9,#1
.L1165:
	ld.w	d15,[a15]@los(0xf003601c)
.L1166:
	and	d15,#7
.L1167:
	add	d13,d15,#1
.L833:
	ld.w	d15,[a15]@los(0xf0036010)
.L1168:
	sh	d15,d15,#-16
.L834:
	and	d15,#31
.L1169:
	ld.w	d0,[a15]@los(0xf0036018)
.L1170:
	sh	d14,d0,#-30
.L836:
	call	SchM_Exit_McalLib_StmTimerResolution
.L1171:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2372    if(StmDiv == (uint8)MCAL_STMCLK_DISABLED)      (inlined)
	jne	d11,#0,.L113
.L1172:
	mov	d7,#208
.L569:
	mov	d4,#255
.L1173:
	mov	d5,#0
.L550:
	mov	d6,#134
.L555:
	call	Mcal_ReportSafetyError
.L573:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2383      Mcal_lReportError(ApiId, MCALLIB_E_CLKDISABLE);      (inlined)
	j	.L114

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2372    if(StmDiv == (uint8)MCAL_STMCLK_DISABLED)      (inlined)
.L113:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2393      if(Src0ClkSel == (uint8)MCAL_PLL0_CLK_SRC0_FREQ)      (inlined)
	jne	d12,#1,.L115
.L1174:
	add	d14,#-1
.L837:
	extr.u	d0,d14,#0,#8
.L1175:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2398        switch(PLL0ClkSel)      (inlined)
	jge.u	d0,#2,.L116
.L1176:
	add	d15,d15,#15
.L835:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2411            break;      (inlined)
	j	.L117

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2412          default:      (inlined)
.L116:
	mov	d15,#100

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2421        PLL0Freq = (((float32)OscFreq * (float32)PLL0Ndiv) /      (inlined)
.L117:
	utof	d15,d15
.L838:
	utof	d0,d8
.L1177:
	mul.f	d15,d15,d0
.L1178:
	utof	d0,d9
.L1179:
	utof	d1,d13
.L1180:
	mul.f	d0,d0,d1
.L1181:
	div.f	d15,d15,d0
.L839:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2422                    ((float32)PLL0Pdiv * (float32)PLL0K2div));      (inlined)
	j	.L118

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2393      if(Src0ClkSel == (uint8)MCAL_PLL0_CLK_SRC0_FREQ)      (inlined)
.L115:
	movh	d15,#17096

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2428      else      (inlined)
.L118:
	utof	d0,d11
.L1182:
	div.f	d15,d15,d0
.L840:
	movh	d0,#17530
.L1183:
	div.f	d10,d0,d15

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2388    else      (inlined)
.L114:
	ftouz	d2,d10
.L556:
	movh.a	a15,#@his(Mcal_StmTimerResolution)
.L1184:
	st.w	[a15]@los(Mcal_StmTimerResolution),d2
.L1185:
	ret
.L547:
	
__Mcal_DelayResetTickCalibration_function_end:
	.size	Mcal_DelayResetTickCalibration,__Mcal_DelayResetTickCalibration_function_end-Mcal_DelayResetTickCalibration
.L305:
	; End of function
	
	.sdecl	'.text.Mcal_DelayGetTick.Code.Cpu0',code,cluster('Mcal_DelayGetTick')
	.sect	'.text.Mcal_DelayGetTick.Code.Cpu0'
	.align	2
	
	.global	Mcal_DelayGetTick
; Function Mcal_DelayGetTick
.L200:
Mcal_DelayGetTick:	.type	func
	ld.w	d2,0xf0001010
.L841:
	ret
.L574:
	
__Mcal_DelayGetTick_function_end:
	.size	Mcal_DelayGetTick,__Mcal_DelayGetTick_function_end-Mcal_DelayGetTick
.L310:
	; End of function
	
	.sdecl	'.text.Mcal_GetCpuIndex.Code.Cpu0',code,cluster('Mcal_GetCpuIndex')
	.sect	'.text.Mcal_GetCpuIndex.Code.Cpu0'
	.align	2
	
	.global	Mcal_GetCpuIndex
; Function Mcal_GetCpuIndex
.L202:
Mcal_GetCpuIndex:	.type	func
	mfcr	d2,#65052
.L842:
	ge.u	d15,d2,#6
.L1194:
	sub	d2,d15
.L578:
	ret
.L576:
	
__Mcal_GetCpuIndex_function_end:
	.size	Mcal_GetCpuIndex,__Mcal_GetCpuIndex_function_end-Mcal_GetCpuIndex
.L315:
	; End of function
	
	.sdecl	'.text.McalLib_GetVersionInfo.Code.Cpu0',code,cluster('McalLib_GetVersionInfo')
	.sect	'.text.McalLib_GetVersionInfo.Code.Cpu0'
	.align	2
	
	.global	McalLib_GetVersionInfo
; Function McalLib_GetVersionInfo
.L204:
McalLib_GetVersionInfo:	.type	func
	jnz.a	a4,.L122
.L1215:
	mov	d6,#121
.L1216:
	mov	d7,#201
.L599:
	mov	d4,#255
.L1217:
	mov	d5,#0
.L1218:
	j	Mcal_ReportSafetyError
.L122:
	mov	d15,#17
.L1219:
	st.h	[a4],d15
.L1220:
	mov	d15,#255
.L1221:
	st.h	[a4]2,d15
.L1222:
	mov	d15,#20
.L1223:
	st.b	[a4]4,d15
.L1224:
	mov	d15,#25
.L1225:
	st.b	[a4]5,d15
.L1226:
	mov	d15,#0
.L1227:
	st.b	[a4]6,d15
.L1228:
	ret
.L596:
	
__McalLib_GetVersionInfo_function_end:
	.size	McalLib_GetVersionInfo,__McalLib_GetVersionInfo_function_end-McalLib_GetVersionInfo
.L330:
	; End of function
	
	.sdecl	'.text.Mcal_GetSpinlock.Code.Cpu0',code,cluster('Mcal_GetSpinlock')
	.sect	'.text.Mcal_GetSpinlock.Code.Cpu0'
	.align	2
	
	.global	Mcal_GetSpinlock
; Function Mcal_GetSpinlock
.L206:
Mcal_GetSpinlock:	.type	func
	jnz.a	a4,.L124
.L1199:
	mov	d6,#141
.L1200:
	mov	d7,#201
.L585:
	mov	d4,#255
.L843:
	mov	d5,#0
.L1201:
	j	Mcal_ReportSafetyError
.L124:
	mov	d5,#141
	j	Mcal_lGetSpinlock
.L580:
	
__Mcal_GetSpinlock_function_end:
	.size	Mcal_GetSpinlock,__Mcal_GetSpinlock_function_end-Mcal_GetSpinlock
.L320:
	; End of function
	
	.sdecl	'.text.Mcal_ReleaseSpinlock.Code.Cpu0',code,cluster('Mcal_ReleaseSpinlock')
	.sect	'.text.Mcal_ReleaseSpinlock.Code.Cpu0'
	.align	2
	
	.global	Mcal_ReleaseSpinlock
; Function Mcal_ReleaseSpinlock
.L208:
Mcal_ReleaseSpinlock:	.type	func
	jnz.a	a4,.L126
.L1206:
	mov	d6,#142
.L1207:
	mov	d7,#201
.L591:
	mov	d4,#255
.L1208:
	mov	d5,#0
.L1209:
	j	Mcal_ReportSafetyError
.L126:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3182    DSYNC();      (inlined)
	dsync
.L1210:
	mov	d15,#0

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3185    Mcal_SetBitAtomic(LockAddress, 0x0U, 0x1, SPINLOCKFREE);      (inlined)
	
	imask e2,d15,d15,#(0x1) 
 ldmst [a4]0,e2
	
.L594:
	ret
.L588:
	
__Mcal_ReleaseSpinlock_function_end:
	.size	Mcal_ReleaseSpinlock,__Mcal_ReleaseSpinlock_function_end-Mcal_ReleaseSpinlock
.L325:
	; End of function
	
	.sdecl	'.text.Mcal_lUpdateSafetyEndInit.Code.Cpu0',code,cluster('Mcal_lUpdateSafetyEndInit')
	.sect	'.text.Mcal_lUpdateSafetyEndInit.Code.Cpu0'
	.align	2
	
; Function Mcal_lUpdateSafetyEndInit
.L210:
Mcal_lUpdateSafetyEndInit:	.type	func
	sub.a	a10,#8
.L844:
	movh.a	a15,#61443
	ld.w	d15,[a15]@los(0xf00362b4)
.L707:
	sh	d15,#-2
.L1330:
	insert	d15,d15,#0,#14,#18
.L1331:
	xor	d2,d15,#63
.L708:
	jeq	d6,#0,.L128
.L1332:
	mov	d0,#2
	addih	d0,d0,#65532
.L1333:
	j	.L129
.L128:
	movh	d0,#65532
.L129:
	sh	d15,d2,#2
.L846:
	or	d15,d0
.L1334:
	jeq	d5,#0,.L130
.L1335:
	sh	d4,#2
.L845:
	mov	d0,#2
	addih	d0,d0,#65532
.L848:
	or	d4,d0
.L1336:
	st.w	[a15]@los(0xf00362b4),d15
.L1337:
	ld.w	d15,[a15]@los(0xf00362b4)
.L847:
	st.w	[a10],d15
.L1338:
	st.w	[a15]@los(0xf00362b4),d4
.L1339:
	j	.L131
.L130:
	st.w	[a15]@los(0xf00362b4),d15
.L131:
	ld.w	d15,[a15]@los(0xf00362b4)
.L1340:
	st.w	[a10],d15
.L1341:
	ld.w	d15,[a10]
.L1342:
	ret
.L695:
	
__Mcal_lUpdateSafetyEndInit_function_end:
	.size	Mcal_lUpdateSafetyEndInit,__Mcal_lUpdateSafetyEndInit_function_end-Mcal_lUpdateSafetyEndInit
.L350:
	; End of function
	
	.sdecl	'.text.Mcal_lUpdatePeripheralEndInit.Code.Cpu0',code,cluster('Mcal_lUpdatePeripheralEndInit')
	.sect	'.text.Mcal_lUpdatePeripheralEndInit.Code.Cpu0'
	.align	2
	
; Function Mcal_lUpdatePeripheralEndInit
.L212:
Mcal_lUpdatePeripheralEndInit:	.type	func
	sub.a	a10,#8
.L849:
	movh.a	a15,#61443
	ld.w	d15,[a15]@los(0xf003629c)
.L692:
	sh	d15,#-2
.L1313:
	insert	d15,d15,#0,#14,#18
.L1314:
	xor	d2,d15,#63
.L693:
	jeq	d6,#0,.L133
.L1315:
	mov	d0,#2
	addih	d0,d0,#65532
.L1316:
	j	.L134
.L133:
	movh	d0,#65532
.L134:
	sh	d15,d2,#2
.L851:
	or	d15,d0
.L1317:
	jeq	d5,#0,.L135
.L1318:
	sh	d4,#2
.L850:
	mov	d0,#2
	addih	d0,d0,#65532
.L853:
	or	d4,d0
.L1319:
	st.w	[a15]@los(0xf003629c),d15
.L1320:
	ld.w	d15,[a15]@los(0xf003629c)
.L852:
	st.w	[a10],d15
.L1321:
	st.w	[a15]@los(0xf003629c),d4
.L1322:
	j	.L136
.L135:
	st.w	[a15]@los(0xf003629c),d15
.L136:
	ld.w	d15,[a15]@los(0xf003629c)
.L1323:
	st.w	[a10],d15
.L1324:
	ld.w	d15,[a10]
.L1325:
	ret
.L680:
	
__Mcal_lUpdatePeripheralEndInit_function_end:
	.size	Mcal_lUpdatePeripheralEndInit,__Mcal_lUpdatePeripheralEndInit_function_end-Mcal_lUpdatePeripheralEndInit
.L345:
	; End of function
	
	.sdecl	'.text.Mcal_lUpdateCpuEndInit.Code.Cpu0',code,cluster('Mcal_lUpdateCpuEndInit')
	.sect	'.text.Mcal_lUpdateCpuEndInit.Code.Cpu0'
	.align	2
	
; Function Mcal_lUpdateCpuEndInit
.L214:
Mcal_lUpdateCpuEndInit:	.type	func
	sub.a	a10,#8
.L854:
	mov	d8,d5
.L858:
	mov	d5,d6
.L855:
	ld.bu	d6,[a10]8
.L857:
	mov	d2,#0
.L1268:
	mul	d0,d8,#12
	mov.a	a15,d0
	movh.a	a3,#61443
	add.a	a3,a15
.L1269:
	ld.w	d9,[a3]25164
.L860:
	mov	d0,d9
.L646:
	sh	d0,#-2
.L1270:
	insert	d0,d0,#0,#14,#18
.L1271:
	xor	d10,d0,#63
.L655:
	ld.w	d15,[a3]25172
.L1272:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2007    if (Mcal_GetBitAtomic(MODULE_SCU.WDTCPU[CpuIndex].SR.U,      (inlined)
	jz.t	d15:7,.L138
.L1273:
	sh	d0,d10,#-1
.L1274:
	sh	d1,d10,#-11
.L1275:
	xor	d0,d1
.L1276:
	sh	d1,d10,#-12
.L1277:
	xor	d0,d1
.L1278:
	sh	d15,d10,#-13
.L1279:
	xor	d0,d15
.L1280:
	and	d15,d0,#1
.L863:
	sh	d10,#1
.L862:
	or	d10,d15
.L1281:
	insert	d10,d10,#0,#14,#18

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2007    if (Mcal_GetBitAtomic(MODULE_SCU.WDTCPU[CpuIndex].SR.U,      (inlined)
.L138:
	mul	d15,d8,#12
	mov.a	a15,d15
	movh.a	a3,#61443
	add.a	a3,a15
	lea	a15,[a3]25164
	ld.w	d15,[a15]8
.L1282:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2067    if (Mcal_GetBitAtomic(MODULE_SCU.WDTCPU[CpuIndex].SR.U,      (inlined)
	jz.t	d15:8,.L139
.L1283:
	ld.w	d15,[a15]8
.L1284:
	sh	d15,d15,#-16
.L1285:
	mov	d0,#-1
	xor	d15,d0
.L1286:
	insert	d0,d15,#0,#16,#16
.L865:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2077                       MCAL_CPUWDTSR_TIMER_MASK) >> IFX_SCU_WDTCPU_SR_TIM_OFF);      (inlined)
	j	.L140

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2067    if (Mcal_GetBitAtomic(MODULE_SCU.WDTCPU[CpuIndex].SR.U,      (inlined)
.L139:
	sh	d0,d9,#-16

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2083    else      (inlined)
.L140:
	mul	d15,d8,#12
	mov.a	a15,d15
	movh.a	a3,#61443
	add.a	a3,a15
	ld.w	d15,[a3]25172
	extr.u	d15,d15,#16,#16
.L867:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2992    if (SetResetProtection == MCAL_SETENDINITPROTECTION)      (inlined)
	jeq	d6,#0,.L141
.L1287:
	add	d5,d15
.L859:
	mov.u	d15,#65532
.L868:
	sub	d5,d15
.L1288:
	mov.u	d15,#65535
.L1289:
	min.u	d15,d5,d15

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2992    if (SetResetProtection == MCAL_SETENDINITPROTECTION)      (inlined)
.L141:
	mov	d5,d15
.L670:
	sh	d9,#-2
.L861:
	insert	d15,d9,#0,#14,#18
.L869:
	xor	d1,d15,#63
.L679:
	mov	d3,d1
.L666:
	sh	d15,d0,#16
.L667:
	sh	d10,#2
.L864:
	or	d15,d10
.L1290:
	or	d9,d15,#1
.L870:
	jeq	d7,#0,.L142
.L1291:
	sh	d0,d5,#16
.L866:
	sh	d4,#2
.L856:
	or	d0,d4
.L1292:
	or	d15,d0,#3
.L871:
	j	.L143
.L142:
	jeq	d6,#0,.L144
.L1293:
	sh	d0,d5,#16
.L872:
	sh	d1,#2
.L1294:
	or	d0,d1
.L1295:
	or	d15,d0,#3
.L873:
	j	.L145
.L144:
	sh	d15,d5,#16
.L1296:
	sh	d1,#2
.L1297:
	or	d15,d1
.L874:
	or	d15,#2
.L1298:
	mov	d2,d5
.L145:
.L143:
	mul	d0,d8,#12
	mov.a	a15,d0
	movh.a	a3,#61443
	add.a	a3,a15
.L1299:
	st.w	[a3]25164,d9
.L1300:
	movh.a	a3,#61443
	add.a	a3,a15
.L1301:
	ld.w	d0,[a3]25164
.L1302:
	st.w	[a10],d0
.L1303:
	movh.a	a3,#61443
	add.a	a3,a15
.L1304:
	st.w	[a3]25164,d15
.L1305:
	movh.a	a3,#61443
	add.a	a3,a15
.L1306:
	ld.w	d15,[a3]25164
.L875:
	st.w	[a10],d15
.L1307:
	ld.w	d15,[a10]
.L1308:
	ret
.L625:
	
__Mcal_lUpdateCpuEndInit_function_end:
	.size	Mcal_lUpdateCpuEndInit,__Mcal_lUpdateCpuEndInit_function_end-Mcal_lUpdateCpuEndInit
.L340:
	; End of function
	
	.sdecl	'.text.Mcal_lGetSpinlock.Code.Cpu0',code,cluster('Mcal_lGetSpinlock')
	.sect	'.text.Mcal_lGetSpinlock.Code.Cpu0'
	.align	2
	
; Function Mcal_lGetSpinlock
.L216:
Mcal_lGetSpinlock:	.type	func
	sub.a	a10,#16
.L876:
	mov.aa	a12,a4
.L878:
	st.w	[a10]4,d4
.L879:
	st.w	[a10]8,d5
.L880:
	movh.a	a15,#@his(Mcal_StmTimerResolution)
	ld.w	d15,[a15]@los(Mcal_StmTimerResolution)
.L1347:
	jne	d15,#0,.L147
.L724:
	st.w	[a10],d15
.L881:
	call	SchM_Enter_McalLib_StmTimerResolution
.L877:
	movh.a	a15,#61443
	ld.w	d15,[a15]@los(0xf0036030)
.L1348:
	and	d10,d15,#15
.L882:
	ld.w	d0,[a15]@los(0xf0036030)
.L1349:
	sh	d15,d0,#-28
.L1350:
	and	d11,d15,#3
.L883:
	ld.w	d0,[a15]@los(0xf0036018)
.L1351:
	extr.u	d8,d0,#9,#7
.L884:
	add	d8,#1
.L1352:
	ld.w	d0,[a15]@los(0xf0036018)
.L1353:
	extr.u	d9,d0,#24,#3
.L885:
	add	d9,#1
.L1354:
	ld.w	d15,[a15]@los(0xf003601c)
.L1355:
	and	d15,#7
.L1356:
	add	d12,d15,#1
.L886:
	ld.w	d0,[a15]@los(0xf0036010)
.L1357:
	sh	d15,d0,#-16
.L887:
	and	d15,#31
.L1358:
	ld.w	d0,[a15]@los(0xf0036018)
.L1359:
	sh	d13,d0,#-30
.L889:
	call	SchM_Exit_McalLib_StmTimerResolution
.L1360:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2372    if(StmDiv == (uint8)MCAL_STMCLK_DISABLED)      (inlined)
	jne	d10,#0,.L148
.L1361:
	mov	d7,#208
.L741:
	mov	d4,#255
.L1362:
	mov	d5,#0
.L725:
	mov	d6,#141
.L728:
	call	Mcal_ReportSafetyError
.L745:
	movh.a	a15,#@his(Mcal_StmTimerResolution)
.L1363:
	mov	d15,#0
.L888:
	st.w	[a15]@los(Mcal_StmTimerResolution),d15
.L1364:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2383      Mcal_lReportError(ApiId, MCALLIB_E_CLKDISABLE);      (inlined)
	j	.L149

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2372    if(StmDiv == (uint8)MCAL_STMCLK_DISABLED)      (inlined)
.L148:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2393      if(Src0ClkSel == (uint8)MCAL_PLL0_CLK_SRC0_FREQ)      (inlined)
	jne	d11,#1,.L150
.L1365:
	add	d13,#-1
.L890:
	extr.u	d0,d13,#0,#8
.L1366:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2398        switch(PLL0ClkSel)      (inlined)
	jge.u	d0,#2,.L151
.L1367:
	add	d15,d15,#15
.L891:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2411            break;      (inlined)
	j	.L152

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2412          default:      (inlined)
.L151:
	mov	d15,#100

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2421        PLL0Freq = (((float32)OscFreq * (float32)PLL0Ndiv) /      (inlined)
.L152:
	utof	d15,d15
.L892:
	utof	d0,d8
.L1368:
	mul.f	d15,d15,d0
.L1369:
	utof	d0,d9
.L1370:
	utof	d1,d12
.L1371:
	mul.f	d0,d0,d1
.L1372:
	div.f	d15,d15,d0
.L893:

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2422                    ((float32)PLL0Pdiv * (float32)PLL0K2div));      (inlined)
	j	.L153

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2393      if(Src0ClkSel == (uint8)MCAL_PLL0_CLK_SRC0_FREQ)      (inlined)
.L150:
	movh	d15,#17096

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2428      else      (inlined)
.L153:
	utof	d0,d10
.L1373:
	div.f	d15,d15,d0
.L894:
	movh	d0,#17530
.L1374:
	div.f	d15,d0,d15
.L895:
	st.w	[a10],d15

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  2388    else      (inlined)
.L149:
	ld.w	d15,[a10]
.L896:
	ftouz	d15,d15
.L729:
	j	.L154
.L147:
	movh.a	a15,#@his(Mcal_StmTimerResolution)
	ld.w	d15,[a15]@los(Mcal_StmTimerResolution)
.L154:
	jeq	d15,#0,.L155
.L1375:
	ld.w	d0,[a10]4
.L898:
	div.u	e2,d0,d15
.L1376:
	mov	d0,#1000
.L899:
	mul	d0,d2
.L1377:
	ld.w	d15,0xf0001010
.L897:
	mov	d1,d15
.L901:
	j	.L157
.L158:
	ld.w	d15,0xf0001010
.L157:
	ld.w	d2,[a12]
.L902:
	sub	d3,d15,d1
.L1378:
	jge.u	d3,d0,.L159
.L1379:
	jne	d2,#0,.L158
.L159:
	mov	d2,#1
.L903:
	mov	d3,#0
	cmpswap.w	[a12]0,e2
.L1380:
	jeq	d2,#0,.L160
.L1381:
	sub	d4,d15,d1
.L1382:
	jlt.u	d4,d0,.L157
.L160:
	sub	d15,d1
.L900:
	jlt.u	d15,d0,.L161
.L1383:
	jeq	d2,#0,.L162
.L1384:
	mov	d7,#204
.L746:
	mov	d4,#255
.L1385:
	mov	d5,#0
.L1386:
	ld.w	d6,[a10]8
.L904:
	j	Mcal_ReportSafetyError
.L162:
.L161:
.L155:
	ret
.L710:
	
__Mcal_lGetSpinlock_function_end:
	.size	Mcal_lGetSpinlock,__Mcal_lGetSpinlock_function_end-Mcal_lGetSpinlock
.L355:
	; End of function
	
	.sdecl	'.bss.Mcal_StmTimerResolution.ClearedData.LmuNC.32bit',data,cluster('Mcal_StmTimerResolution')
	.sect	'.bss.Mcal_StmTimerResolution.ClearedData.LmuNC.32bit'
	.align	4
Mcal_StmTimerResolution:	.type	object
	.size	Mcal_StmTimerResolution,4
	.space	4
	.sdecl	'.bss.Mcal_LockAddressSiecon0.ClearedData.LmuNC.32bit',data,cluster('Mcal_LockAddressSiecon0')
	.sect	'.bss.Mcal_LockAddressSiecon0.ClearedData.LmuNC.32bit'
	.align	4
Mcal_LockAddressSiecon0:	.type	object
	.size	Mcal_LockAddressSiecon0,4
	.space	4
	.sdecl	'.bss.Mcal_LockAddressEicon0.ClearedData.LmuNC.32bit',data,cluster('Mcal_LockAddressEicon0')
	.sect	'.bss.Mcal_LockAddressEicon0.ClearedData.LmuNC.32bit'
	.align	4
Mcal_LockAddressEicon0:	.type	object
	.size	Mcal_LockAddressEicon0,4
	.space	4
	.sdecl	'.rodata.Mcal_kCoreXMemSegment.Const.Cpu0.8bit',data,rom,cluster('Mcal_kCoreXMemSegment')
	.sect	'.rodata.Mcal_kCoreXMemSegment.Const.Cpu0.8bit'
Mcal_kCoreXMemSegment:	.type	object
	.size	Mcal_kCoreXMemSegment,7
	.byte	7,6,5,4
	.byte	3,2,1
	.sdecl	'.rodata.Mcal_kDsprEndAddress.Const.Cpu0.32bit',data,rom,cluster('Mcal_kDsprEndAddress')
	.sect	'.rodata.Mcal_kDsprEndAddress.Const.Cpu0.32bit'
	.align	4
Mcal_kDsprEndAddress:	.type	object
	.size	Mcal_kDsprEndAddress,28
	.word	245759,245759,98303,98303
	.word	98303
	.space	4
	.word	98303
	.sdecl	'.rodata.Mcal_kPsprLocalEndAddress.Const.Cpu0.32bit',data,rom,cluster('Mcal_kPsprLocalEndAddress')
	.sect	'.rodata.Mcal_kPsprLocalEndAddress.Const.Cpu0.32bit'
	.align	4
Mcal_kPsprLocalEndAddress:	.type	object
	.size	Mcal_kPsprLocalEndAddress,28
	.word	-1073676289,-1073676289,-1073676289,-1073676289
	.word	-1073676289
	.space	4
	.word	-1073676289
	.sdecl	'.rodata.Mcal_kPsprGlobalEndAddress.Const.Cpu0.32bit',data,rom,cluster('Mcal_kPsprGlobalEndAddress')
	.sect	'.rodata.Mcal_kPsprGlobalEndAddress.Const.Cpu0.32bit'
	.align	4
Mcal_kPsprGlobalEndAddress:	.type	object
	.size	Mcal_kPsprGlobalEndAddress,28
	.word	1114111,1114111,1114111,1114111
	.word	1114111
	.space	4
	.word	1114111
	.sdecl	'.rodata.Mcal_kPsprGlobalBaseAddress.Const.Cpu0.32bit',data,rom,cluster('Mcal_kPsprGlobalBaseAddress')
	.sect	'.rodata.Mcal_kPsprGlobalBaseAddress.Const.Cpu0.32bit'
	.align	4
Mcal_kPsprGlobalBaseAddress:	.type	object
	.size	Mcal_kPsprGlobalBaseAddress,28
	.word	1048576,1048576,1048576,1048576
	.word	1048576
	.space	4
	.word	1048576
	.calls	'Mcal_SetCpuWdgPassword','SchM_Enter_McalLib_CpuEndInit'
	.calls	'Mcal_SetCpuWdgPassword','Mcal_lUpdateCpuEndInit'
	.calls	'Mcal_SetCpuWdgPassword','SchM_Exit_McalLib_CpuEndInit'
	.calls	'Mcal_WriteCpuEndInitProtReg','Mcal_ReportSafetyError'
	.calls	'Mcal_WriteCpuEndInitProtReg','SchM_Enter_McalLib_CpuEndInit'
	.calls	'Mcal_WriteCpuEndInitProtReg','Mcal_lUpdateCpuEndInit'
	.calls	'Mcal_WriteCpuEndInitProtReg','SchM_Exit_McalLib_CpuEndInit'
	.calls	'Mcal_SetSafetyEndInitPassword','SchM_Enter_McalLib_SafetyEndInit'
	.calls	'Mcal_SetSafetyEndInitPassword','Mcal_lGetSpinlock'
	.calls	'Mcal_SetSafetyEndInitPassword','Mcal_lUpdateSafetyEndInit'
	.calls	'Mcal_SetSafetyEndInitPassword','SchM_Exit_McalLib_SafetyEndInit'
	.calls	'Mcal_WriteSafetyEndInitProtReg','Mcal_ReportSafetyError'
	.calls	'Mcal_WriteSafetyEndInitProtReg','SchM_Enter_McalLib_SafetyEndInit'
	.calls	'Mcal_WriteSafetyEndInitProtReg','Mcal_lGetSpinlock'
	.calls	'Mcal_WriteSafetyEndInitProtReg','Mcal_lUpdateSafetyEndInit'
	.calls	'Mcal_WriteSafetyEndInitProtReg','SchM_Exit_McalLib_SafetyEndInit'
	.calls	'Mcal_WriteSafetyEndInitProtReg16','Mcal_ReportSafetyError'
	.calls	'Mcal_WriteSafetyEndInitProtReg16','SchM_Enter_McalLib_SafetyEndInit'
	.calls	'Mcal_WriteSafetyEndInitProtReg16','Mcal_lGetSpinlock'
	.calls	'Mcal_WriteSafetyEndInitProtReg16','Mcal_lUpdateSafetyEndInit'
	.calls	'Mcal_WriteSafetyEndInitProtReg16','SchM_Exit_McalLib_SafetyEndInit'
	.calls	'Mcal_WriteSafetyEndInitProtRegMask','Mcal_ReportSafetyError'
	.calls	'Mcal_WriteSafetyEndInitProtRegMask','SchM_Enter_McalLib_SafetyEndInit'
	.calls	'Mcal_WriteSafetyEndInitProtRegMask','Mcal_lGetSpinlock'
	.calls	'Mcal_WriteSafetyEndInitProtRegMask','Mcal_lUpdateSafetyEndInit'
	.calls	'Mcal_WriteSafetyEndInitProtRegMask','SchM_Exit_McalLib_SafetyEndInit'
	.calls	'Mcal_SetPeripheralEndInitPassword','SchM_Enter_McalLib_PeripheralEndInit'
	.calls	'Mcal_SetPeripheralEndInitPassword','Mcal_lGetSpinlock'
	.calls	'Mcal_SetPeripheralEndInitPassword','Mcal_lUpdatePeripheralEndInit'
	.calls	'Mcal_SetPeripheralEndInitPassword','SchM_Exit_McalLib_PeripheralEndInit'
	.calls	'Mcal_WritePeripEndInitProtReg','Mcal_ReportSafetyError'
	.calls	'Mcal_WritePeripEndInitProtReg','SchM_Enter_McalLib_PeripheralEndInit'
	.calls	'Mcal_WritePeripEndInitProtReg','Mcal_lGetSpinlock'
	.calls	'Mcal_WritePeripEndInitProtReg','Mcal_lUpdatePeripheralEndInit'
	.calls	'Mcal_WritePeripEndInitProtReg','SchM_Exit_McalLib_PeripheralEndInit'
	.calls	'Mcal_DelayResetTickCalibration','SchM_Enter_McalLib_StmTimerResolution'
	.calls	'Mcal_DelayResetTickCalibration','SchM_Exit_McalLib_StmTimerResolution'
	.calls	'Mcal_DelayResetTickCalibration','Mcal_ReportSafetyError'
	.calls	'McalLib_GetVersionInfo','Mcal_ReportSafetyError'
	.calls	'Mcal_GetSpinlock','Mcal_ReportSafetyError'
	.calls	'Mcal_GetSpinlock','Mcal_lGetSpinlock'
	.calls	'Mcal_ReleaseSpinlock','Mcal_ReportSafetyError'
	.calls	'Mcal_lGetSpinlock','SchM_Enter_McalLib_StmTimerResolution'
	.calls	'Mcal_lGetSpinlock','SchM_Exit_McalLib_StmTimerResolution'
	.calls	'Mcal_lGetSpinlock','Mcal_ReportSafetyError'
	.calls	'Mcal_GetCpuWdgPassword','',0
	.calls	'Mcal_SetCpuWdgPassword','',8
	.calls	'Mcal_WriteCpuEndInitProtReg','',8
	.calls	'Mcal_GetSafetyEndInitPassword','',0
	.calls	'Mcal_SetSafetyEndInitPassword','',0
	.calls	'Mcal_WriteSafetyEndInitProtReg','',0
	.calls	'Mcal_WriteSafetyEndInitProtReg16','',0
	.calls	'Mcal_WriteSafetyEndInitProtRegMask','',0
	.calls	'Mcal_GetPeripheralEndInitPassword','',0
	.calls	'Mcal_SetPeripheralEndInitPassword','',0
	.calls	'Mcal_WritePeripEndInitProtReg','',0
	.calls	'Mcal_GetCpuPhysicalId','',0
	.calls	'Mcal_GetGlobalDsprAddress','',0
	.calls	'Mcal_GetLocalDsprAddress','',0
	.calls	'Mcal_GetGlobalPsprAddress','',0
	.calls	'Mcal_GetLocalPsprAddress','',0
	.calls	'Mcal_DelayTickResolution','',0
	.calls	'Mcal_DelayResetTickCalibration','',0
	.calls	'Mcal_DelayGetTick','',0
	.calls	'Mcal_GetCpuIndex','',0
	.calls	'McalLib_GetVersionInfo','',0
	.calls	'Mcal_GetSpinlock','',0
	.calls	'Mcal_ReleaseSpinlock','',0
	.calls	'Mcal_lUpdateSafetyEndInit','',8
	.calls	'Mcal_lUpdatePeripheralEndInit','',8
	.calls	'Mcal_lUpdateCpuEndInit','',8
	.extern	SchM_Enter_McalLib_PeripheralEndInit
	.extern	SchM_Exit_McalLib_PeripheralEndInit
	.extern	SchM_Enter_McalLib_SafetyEndInit
	.extern	SchM_Exit_McalLib_SafetyEndInit
	.extern	SchM_Enter_McalLib_CpuEndInit
	.extern	SchM_Exit_McalLib_CpuEndInit
	.extern	SchM_Enter_McalLib_StmTimerResolution
	.extern	SchM_Exit_McalLib_StmTimerResolution
	.extern	Mcal_ReportSafetyError
	.calls	'Mcal_lGetSpinlock','',16
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L218:
	.word	59968
	.half	3
	.word	.L219
	.byte	4
.L217:
	.byte	1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L220
.L372:
	.byte	2
	.byte	'unsigned long int',0,4,7
.L376:
	.byte	3
	.byte	'Mcal_lGetCpuIndex',0,3,1,209,19,21
	.word	165
	.byte	1,1
.L378:
	.byte	4,0,2
	.byte	'unsigned short int',0,2,7,5
	.word	165
.L654:
	.byte	3
	.byte	'Mcal_lDecryptPw',0,3,1,202,16,21
	.word	218
	.byte	1,1
.L656:
	.byte	6
	.byte	'Value',0,1,202,16,50
	.word	240
.L658:
	.byte	4,0
.L507:
	.byte	2
	.byte	'unsigned char',0,1,8,5
	.word	290
.L549:
	.byte	3
	.byte	'Mcal_lDelayResetTickCalibration',0,3,1,157,18,21
	.word	165
	.byte	1,1
.L551:
	.byte	6
	.byte	'ApiId',0,1,157,18,65
	.word	307
.L553:
	.byte	7,4,0,0,5
	.word	165
	.byte	5
	.word	165
.L659:
	.byte	3
	.byte	'Mcal_lCpuRelValue',0,3,1,139,16,21
	.word	165
	.byte	1,1
.L660:
	.byte	6
	.byte	'CpuIndex',0,1,139,16,52
	.word	375
.L662:
	.byte	6
	.byte	'WdtCpuCon0Value',0,1,140,16,52
	.word	380
.L664:
	.byte	4,0,5
	.word	165
	.byte	5
	.word	165
.L645:
	.byte	3
	.byte	'Mcal_lCpuPwSequence',0,3,1,203,15,22
	.word	165
	.byte	1,1
.L647:
	.byte	6
	.byte	'CpuIndex',0,1,203,15,55
	.word	460
.L649:
	.byte	6
	.byte	'WdtCpuCon0Value',0,1,204,15,55
	.word	465
.L651:
	.byte	7,4,0,0,8
	.byte	'void',0,9
	.word	549
	.byte	10
	.word	555
	.byte	5
	.word	560
	.byte	5
	.word	165
	.byte	5
	.word	165
	.byte	5
	.word	290
	.byte	5
	.word	290
.L436:
	.byte	11
	.byte	'Mcal_lWriteSafetyEndInitProtection',0,3,1,248,16,19,1,1
.L438:
	.byte	6
	.byte	'RegAddress',0,1,249,16,70
	.word	565
.L440:
	.byte	6
	.byte	'DataValue',0,1,250,16,62
	.word	570
.L442:
	.byte	6
	.byte	'Mask',0,1,251,16,62
	.word	575
.L444:
	.byte	6
	.byte	'Accesstype',0,1,252,16,62
	.word	580
.L446:
	.byte	6
	.byte	'ApiId',0,1,253,16,62
	.word	585
.L448:
	.byte	7,4,0,0,5
	.word	165
	.byte	5
	.word	165
	.byte	5
	.word	290
.L669:
	.byte	3
	.byte	'Mcal_lCalculateTimerReloadVal',0,3,1,168,23,21
	.word	165
	.byte	1,1
.L671:
	.byte	6
	.byte	'CoreId',0,1,168,23,64
	.word	725
.L673:
	.byte	6
	.byte	'TimerRelValAtReset',0,1,169,23,51
	.word	730
.L675:
	.byte	6
	.byte	'SetResetProtection',0,1,170,23,52
	.word	735
.L677:
	.byte	4,0,9
	.word	165
	.byte	10
	.word	856
	.byte	5
	.word	861
.L422:
	.byte	11
	.byte	'Mcal_lReleaseSpinlock',0,3,1,233,24,19,1,1
.L425:
	.byte	6
	.byte	'LockAddress',0,1,233,24,65
	.word	866
.L427:
	.byte	4,0,5
	.word	290
	.byte	5
	.word	290
.L401:
	.byte	11
	.byte	'Mcal_lReportError',0,3,1,177,19,19,1,1
.L403:
	.byte	6
	.byte	'ApiId',0,1,177,19,49
	.word	924
.L405:
	.byte	6
	.byte	'ErrorId',0,1,177,19,68
	.word	929
.L407:
	.byte	4,0,2
	.byte	'unsigned int',0,4,7,9
	.word	994
	.byte	10
	.word	994
	.byte	12
	.byte	'__cmpswapw',0
	.word	1010
	.byte	1,1,1,1,13
	.byte	'p',0
	.word	1015
	.byte	13
	.byte	'value',0
	.word	994
	.byte	13
	.byte	'compare',0
	.word	994
	.byte	0,2
	.byte	'int',0,4,5,12
	.byte	'__extru',0
	.word	994
	.byte	1,1,1,1,14
	.word	1072
	.byte	14
	.word	1072
	.byte	14
	.word	1072
	.byte	0,15
	.byte	'__mtcr',0,1,1,1,1,14
	.word	1072
	.byte	14
	.word	1072
	.byte	0,9
	.word	1072
	.byte	12
	.byte	'__mfcr',0
	.word	1135
	.byte	1,1,1,1,14
	.word	1072
	.byte	0
.L381:
	.byte	5
	.word	165
.L383:
	.byte	16,1,240,2,9,8,17
	.byte	'TimerRelValAtReset',0
	.word	165
	.byte	4,2,35,0,17
	.byte	'Password',0
	.word	165
	.byte	4,2,35,4,0
.L394:
	.byte	5
	.word	560
.L396:
	.byte	5
	.word	165
.L418:
	.byte	5
	.word	165
.L429:
	.byte	5
	.word	560
.L431:
	.byte	5
	.word	165
.L449:
	.byte	5
	.word	861
.L457:
	.byte	5
	.word	560
.L459:
	.byte	5
	.word	165
.L471:
	.byte	5
	.word	861
.L482:
	.byte	5
	.word	165
.L490:
	.byte	5
	.word	560
.L492:
	.byte	5
	.word	165
.L503:
	.byte	5
	.word	165
.L505:
	.byte	5
	.word	165
.L511:
	.byte	5
	.word	165
.L526:
	.byte	5
	.word	165
.L528:
	.byte	5
	.word	165
.L534:
	.byte	5
	.word	165
.L557:
	.byte	2
	.byte	'float',0,4,4
.L581:
	.byte	5
	.word	861
.L583:
	.byte	5
	.word	165
.L589:
	.byte	5
	.word	861
	.byte	16,2,116,9,8,17
	.byte	'vendorID',0
	.word	218
	.byte	2,2,35,0,17
	.byte	'moduleID',0
	.word	218
	.byte	2,2,35,2,17
	.byte	'sw_major_version',0
	.word	290
	.byte	1,2,35,4,17
	.byte	'sw_minor_version',0
	.word	290
	.byte	1,2,35,5,17
	.byte	'sw_patch_version',0
	.word	290
	.byte	1,2,35,6,0,10
	.word	1334
.L597:
	.byte	5
	.word	1454
.L603:
	.byte	5
	.word	560
.L605:
	.byte	5
	.word	218
.L616:
	.byte	5
	.word	861
	.byte	9
	.word	218
	.byte	10
	.word	1479
.L618:
	.byte	5
	.word	1484
	.byte	18
	.byte	'SchM_Enter_McalLib_PeripheralEndInit',0,3,59,13,1,1,1,1,18
	.byte	'SchM_Exit_McalLib_PeripheralEndInit',0,3,79,13,1,1,1,1,18
	.byte	'SchM_Enter_McalLib_SafetyEndInit',0,3,100,13,1,1,1,1,18
	.byte	'SchM_Exit_McalLib_SafetyEndInit',0,3,120,13,1,1,1,1,18
	.byte	'SchM_Enter_McalLib_CpuEndInit',0,3,139,1,13,1,1,1,1,18
	.byte	'SchM_Exit_McalLib_CpuEndInit',0,3,159,1,13,1,1,1,1,18
	.byte	'SchM_Enter_McalLib_StmTimerResolution',0,3,179,1,13,1,1,1,1,18
	.byte	'SchM_Exit_McalLib_StmTimerResolution',0,3,199,1,13,1,1,1,1,19
	.byte	'Mcal_ReportSafetyError',0,4,68,13,1,1,1,1,6
	.byte	'ModuleId',0,4,68,43
	.word	218
	.byte	6
	.byte	'InstanceId',0,4,68,59
	.word	290
	.byte	6
	.byte	'ApiId',0,4,69,42
	.word	290
	.byte	6
	.byte	'ErrorId',0,4,69,55
	.word	290
	.byte	0,20
	.word	186
	.byte	4,0,20
	.word	245
	.byte	21
	.word	273
	.byte	4,0,20
	.word	312
	.byte	21
	.word	356
	.byte	7,22
	.word	934
	.byte	21
	.word	960
	.byte	21
	.word	975
	.byte	23
	.word	992
	.byte	0,4,0,0,20
	.word	385
	.byte	21
	.word	415
	.byte	21
	.word	433
	.byte	4,0,20
	.word	470
	.byte	21
	.word	502
	.byte	21
	.word	520
	.byte	7,22
	.word	245
	.byte	21
	.word	273
	.byte	23
	.word	288
	.byte	0,4,0,0,20
	.word	590
	.byte	21
	.word	633
	.byte	21
	.word	653
	.byte	21
	.word	672
	.byte	21
	.word	686
	.byte	21
	.word	706
	.byte	7,22
	.word	871
	.byte	21
	.word	901
	.byte	23
	.word	922
	.byte	0,4,0,0
.L626:
	.byte	5
	.word	165
.L628:
	.byte	5
	.word	165
.L630:
	.byte	5
	.word	165
.L632:
	.byte	5
	.word	290
.L634:
	.byte	5
	.word	290
.L643:
	.byte	9
	.word	165
.L681:
	.byte	5
	.word	165
.L683:
	.byte	5
	.word	290
.L685:
	.byte	5
	.word	290
.L690:
	.byte	9
	.word	165
.L696:
	.byte	5
	.word	165
.L698:
	.byte	5
	.word	290
.L700:
	.byte	5
	.word	290
.L705:
	.byte	9
	.word	165
	.byte	20
	.word	740
	.byte	21
	.word	782
	.byte	21
	.word	798
	.byte	21
	.word	826
	.byte	4,0
.L711:
	.byte	5
	.word	861
.L713:
	.byte	5
	.word	165
.L715:
	.byte	5
	.word	290
	.byte	20
	.word	871
	.byte	21
	.word	901
	.byte	4,0,20
	.word	934
	.byte	21
	.word	960
	.byte	21
	.word	975
	.byte	4,0,24,1,10
	.word	2224
	.byte	25
	.byte	'__codeptr',0,1,1,1
	.word	2226
	.byte	25
	.byte	'Ifx_UReg_8Bit',0,5,79,24
	.word	290
	.byte	25
	.byte	'Ifx_UReg_32Bit',0,5,81,24
	.word	994
	.byte	25
	.byte	'Ifx_SReg_32Bit',0,5,84,24
	.word	1072
	.byte	26
	.byte	'_Ifx_SCU_ACCEN00_Bits',0,6,70,16,4,27
	.byte	'EN0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'EN1',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'EN2',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'EN3',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'EN4',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'EN5',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'EN6',0,1
	.word	290
	.byte	1,1,2,35,0,27
	.byte	'EN7',0,1
	.word	290
	.byte	1,0,2,35,0,27
	.byte	'EN8',0,1
	.word	290
	.byte	1,7,2,35,1,27
	.byte	'EN9',0,1
	.word	290
	.byte	1,6,2,35,1,27
	.byte	'EN10',0,1
	.word	290
	.byte	1,5,2,35,1,27
	.byte	'EN11',0,1
	.word	290
	.byte	1,4,2,35,1,27
	.byte	'EN12',0,1
	.word	290
	.byte	1,3,2,35,1,27
	.byte	'EN13',0,1
	.word	290
	.byte	1,2,2,35,1,27
	.byte	'EN14',0,1
	.word	290
	.byte	1,1,2,35,1,27
	.byte	'EN15',0,1
	.word	290
	.byte	1,0,2,35,1,27
	.byte	'EN16',0,1
	.word	290
	.byte	1,7,2,35,2,27
	.byte	'EN17',0,1
	.word	290
	.byte	1,6,2,35,2,27
	.byte	'EN18',0,1
	.word	290
	.byte	1,5,2,35,2,27
	.byte	'EN19',0,1
	.word	290
	.byte	1,4,2,35,2,27
	.byte	'EN20',0,1
	.word	290
	.byte	1,3,2,35,2,27
	.byte	'EN21',0,1
	.word	290
	.byte	1,2,2,35,2,27
	.byte	'EN22',0,1
	.word	290
	.byte	1,1,2,35,2,27
	.byte	'EN23',0,1
	.word	290
	.byte	1,0,2,35,2,27
	.byte	'EN24',0,1
	.word	290
	.byte	1,7,2,35,3,27
	.byte	'EN25',0,1
	.word	290
	.byte	1,6,2,35,3,27
	.byte	'EN26',0,1
	.word	290
	.byte	1,5,2,35,3,27
	.byte	'EN27',0,1
	.word	290
	.byte	1,4,2,35,3,27
	.byte	'EN28',0,1
	.word	290
	.byte	1,3,2,35,3,27
	.byte	'EN29',0,1
	.word	290
	.byte	1,2,2,35,3,27
	.byte	'EN30',0,1
	.word	290
	.byte	1,1,2,35,3,27
	.byte	'EN31',0,1
	.word	290
	.byte	1,0,2,35,3,0,25
	.byte	'Ifx_SCU_ACCEN00_Bits',0,6,104,3
	.word	2317
	.byte	26
	.byte	'_Ifx_SCU_ACCEN01_Bits',0,6,107,16,4,27
	.byte	'reserved_0',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_SCU_ACCEN01_Bits',0,6,110,3
	.word	2876
	.byte	26
	.byte	'_Ifx_SCU_ACCEN10_Bits',0,6,113,16,4,27
	.byte	'EN0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'EN1',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'EN2',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'EN3',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'EN4',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'EN5',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'EN6',0,1
	.word	290
	.byte	1,1,2,35,0,27
	.byte	'EN7',0,1
	.word	290
	.byte	1,0,2,35,0,27
	.byte	'EN8',0,1
	.word	290
	.byte	1,7,2,35,1,27
	.byte	'EN9',0,1
	.word	290
	.byte	1,6,2,35,1,27
	.byte	'EN10',0,1
	.word	290
	.byte	1,5,2,35,1,27
	.byte	'EN11',0,1
	.word	290
	.byte	1,4,2,35,1,27
	.byte	'EN12',0,1
	.word	290
	.byte	1,3,2,35,1,27
	.byte	'EN13',0,1
	.word	290
	.byte	1,2,2,35,1,27
	.byte	'EN14',0,1
	.word	290
	.byte	1,1,2,35,1,27
	.byte	'EN15',0,1
	.word	290
	.byte	1,0,2,35,1,27
	.byte	'EN16',0,1
	.word	290
	.byte	1,7,2,35,2,27
	.byte	'EN17',0,1
	.word	290
	.byte	1,6,2,35,2,27
	.byte	'EN18',0,1
	.word	290
	.byte	1,5,2,35,2,27
	.byte	'EN19',0,1
	.word	290
	.byte	1,4,2,35,2,27
	.byte	'EN20',0,1
	.word	290
	.byte	1,3,2,35,2,27
	.byte	'EN21',0,1
	.word	290
	.byte	1,2,2,35,2,27
	.byte	'EN22',0,1
	.word	290
	.byte	1,1,2,35,2,27
	.byte	'EN23',0,1
	.word	290
	.byte	1,0,2,35,2,27
	.byte	'EN24',0,1
	.word	290
	.byte	1,7,2,35,3,27
	.byte	'EN25',0,1
	.word	290
	.byte	1,6,2,35,3,27
	.byte	'EN26',0,1
	.word	290
	.byte	1,5,2,35,3,27
	.byte	'EN27',0,1
	.word	290
	.byte	1,4,2,35,3,27
	.byte	'EN28',0,1
	.word	290
	.byte	1,3,2,35,3,27
	.byte	'EN29',0,1
	.word	290
	.byte	1,2,2,35,3,27
	.byte	'EN30',0,1
	.word	290
	.byte	1,1,2,35,3,27
	.byte	'EN31',0,1
	.word	290
	.byte	1,0,2,35,3,0,25
	.byte	'Ifx_SCU_ACCEN10_Bits',0,6,147,1,3
	.word	2955
	.byte	26
	.byte	'_Ifx_SCU_ACCEN11_Bits',0,6,150,1,16,4,27
	.byte	'reserved_0',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_SCU_ACCEN11_Bits',0,6,153,1,3
	.word	3515
	.byte	26
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,6,156,1,16,4,27
	.byte	'STM0DIS',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'STM1DIS',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'STM2DIS',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'STM3DIS',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'STM4DIS',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'STM5DIS',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'reserved_6',0,1
	.word	290
	.byte	2,0,2,35,0,27
	.byte	'reserved_8',0,4
	.word	994
	.byte	24,0,2,35,0,0,25
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,6,166,1,3
	.word	3596
	.byte	26
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,6,169,1,16,4,27
	.byte	'STMDIV',0,1
	.word	290
	.byte	4,4,2,35,0,27
	.byte	'GTMDIV',0,1
	.word	290
	.byte	4,0,2,35,0,27
	.byte	'SRIDIV',0,1
	.word	290
	.byte	4,4,2,35,1,27
	.byte	'LPDIV',0,1
	.word	290
	.byte	3,1,2,35,1,27
	.byte	'reserved_15',0,1
	.word	290
	.byte	1,0,2,35,1,27
	.byte	'SPBDIV',0,1
	.word	290
	.byte	4,4,2,35,2,27
	.byte	'BBBDIV',0,1
	.word	290
	.byte	4,0,2,35,2,27
	.byte	'FSIDIV',0,1
	.word	290
	.byte	2,6,2,35,3,27
	.byte	'FSI2DIV',0,1
	.word	290
	.byte	2,4,2,35,3,27
	.byte	'CLKSEL',0,1
	.word	290
	.byte	2,2,2,35,3,27
	.byte	'UP',0,1
	.word	290
	.byte	1,1,2,35,3,27
	.byte	'LCK',0,1
	.word	290
	.byte	1,0,2,35,3,0,25
	.byte	'Ifx_SCU_CCUCON0_Bits',0,6,183,1,3
	.word	3813
	.byte	26
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,6,186,1,16,4,27
	.byte	'MCANDIV',0,1
	.word	290
	.byte	4,4,2,35,0,27
	.byte	'CLKSELMCAN',0,1
	.word	290
	.byte	2,2,2,35,0,27
	.byte	'reserved_6',0,1
	.word	290
	.byte	1,1,2,35,0,27
	.byte	'PLL1DIVDIS',0,1
	.word	290
	.byte	1,0,2,35,0,27
	.byte	'I2CDIV',0,1
	.word	290
	.byte	4,4,2,35,1,27
	.byte	'reserved_12',0,1
	.word	290
	.byte	4,0,2,35,1,27
	.byte	'MSCDIV',0,1
	.word	290
	.byte	4,4,2,35,2,27
	.byte	'CLKSELMSC',0,1
	.word	290
	.byte	2,2,2,35,2,27
	.byte	'reserved_22',0,1
	.word	290
	.byte	2,0,2,35,2,27
	.byte	'QSPIDIV',0,1
	.word	290
	.byte	4,4,2,35,3,27
	.byte	'CLKSELQSPI',0,1
	.word	290
	.byte	2,2,2,35,3,27
	.byte	'reserved_30',0,1
	.word	290
	.byte	1,1,2,35,3,27
	.byte	'LCK',0,1
	.word	290
	.byte	1,0,2,35,3,0,25
	.byte	'Ifx_SCU_CCUCON1_Bits',0,6,201,1,3
	.word	4086
	.byte	26
	.byte	'_Ifx_SCU_CCUCON10_Bits',0,6,204,1,16,4,27
	.byte	'CPU4DIV',0,1
	.word	290
	.byte	6,2,2,35,0,27
	.byte	'reserved_6',0,4
	.word	994
	.byte	26,0,2,35,0,0,25
	.byte	'Ifx_SCU_CCUCON10_Bits',0,6,208,1,3
	.word	4412
	.byte	26
	.byte	'_Ifx_SCU_CCUCON11_Bits',0,6,211,1,16,4,27
	.byte	'CPU5DIV',0,1
	.word	290
	.byte	6,2,2,35,0,27
	.byte	'reserved_6',0,4
	.word	994
	.byte	26,0,2,35,0,0,25
	.byte	'Ifx_SCU_CCUCON11_Bits',0,6,215,1,3
	.word	4514
	.byte	26
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,6,218,1,16,4,27
	.byte	'ASCLINFDIV',0,1
	.word	290
	.byte	4,4,2,35,0,27
	.byte	'reserved_4',0,1
	.word	290
	.byte	4,0,2,35,0,27
	.byte	'ASCLINSDIV',0,1
	.word	290
	.byte	4,4,2,35,1,27
	.byte	'CLKSELASCLINS',0,1
	.word	290
	.byte	2,2,2,35,1,27
	.byte	'reserved_14',0,4
	.word	994
	.byte	10,8,2,35,0,27
	.byte	'EBUPERON',0,1
	.word	290
	.byte	1,7,2,35,3,27
	.byte	'ERAYPERON',0,1
	.word	290
	.byte	1,6,2,35,3,27
	.byte	'HSPDMPERON',0,1
	.word	290
	.byte	1,5,2,35,3,27
	.byte	'reserved_27',0,1
	.word	290
	.byte	4,1,2,35,3,27
	.byte	'LCK',0,1
	.word	290
	.byte	1,0,2,35,3,0,25
	.byte	'Ifx_SCU_CCUCON2_Bits',0,6,230,1,3
	.word	4616
	.byte	26
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,6,233,1,16,4,27
	.byte	'PLL0MONEN',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'PLL1MONEN',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'PLL2MONEN',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'SPBMONEN',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'BACKMONEN',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'reserved_5',0,1
	.word	290
	.byte	3,0,2,35,0,27
	.byte	'PLL0MONTST',0,1
	.word	290
	.byte	1,7,2,35,1,27
	.byte	'PLL1MONTST',0,1
	.word	290
	.byte	1,6,2,35,1,27
	.byte	'PLL2MONTST',0,1
	.word	290
	.byte	1,5,2,35,1,27
	.byte	'SPBMONTST',0,1
	.word	290
	.byte	1,4,2,35,1,27
	.byte	'BACKMONTST',0,1
	.word	290
	.byte	1,3,2,35,1,27
	.byte	'reserved_13',0,4
	.word	994
	.byte	11,8,2,35,0,27
	.byte	'reserved_24',0,1
	.word	290
	.byte	6,2,2,35,3,27
	.byte	'UP',0,1
	.word	290
	.byte	1,1,2,35,3,27
	.byte	'LCK',0,1
	.word	290
	.byte	1,0,2,35,3,0,25
	.byte	'Ifx_SCU_CCUCON3_Bits',0,6,250,1,3
	.word	4890
	.byte	26
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,6,253,1,16,4,27
	.byte	'LOTHR',0,2
	.word	218
	.byte	12,4,2,35,0,27
	.byte	'UPTHR',0,4
	.word	994
	.byte	12,8,2,35,0,27
	.byte	'MONEN',0,1
	.word	290
	.byte	1,7,2,35,3,27
	.byte	'MONTST',0,1
	.word	290
	.byte	1,6,2,35,3,27
	.byte	'reserved_26',0,1
	.word	290
	.byte	4,2,2,35,3,27
	.byte	'UP',0,1
	.word	290
	.byte	1,1,2,35,3,27
	.byte	'LCK',0,1
	.word	290
	.byte	1,0,2,35,3,0,25
	.byte	'Ifx_SCU_CCUCON4_Bits',0,6,134,2,3
	.word	5259
	.byte	26
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,6,137,2,16,4,27
	.byte	'GETHDIV',0,1
	.word	290
	.byte	4,4,2,35,0,27
	.byte	'MCANHDIV',0,1
	.word	290
	.byte	4,0,2,35,0,27
	.byte	'ADASDIV',0,1
	.word	290
	.byte	4,4,2,35,1,27
	.byte	'reserved_12',0,4
	.word	994
	.byte	18,2,2,35,0,27
	.byte	'UP',0,1
	.word	290
	.byte	1,1,2,35,3,27
	.byte	'LCK',0,1
	.word	290
	.byte	1,0,2,35,3,0,25
	.byte	'Ifx_SCU_CCUCON5_Bits',0,6,145,2,3
	.word	5439
	.byte	26
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,6,148,2,16,4,27
	.byte	'CPU0DIV',0,1
	.word	290
	.byte	6,2,2,35,0,27
	.byte	'reserved_6',0,4
	.word	994
	.byte	26,0,2,35,0,0,25
	.byte	'Ifx_SCU_CCUCON6_Bits',0,6,152,2,3
	.word	5608
	.byte	26
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,6,155,2,16,4,27
	.byte	'CPU1DIV',0,1
	.word	290
	.byte	6,2,2,35,0,27
	.byte	'reserved_6',0,4
	.word	994
	.byte	26,0,2,35,0,0,25
	.byte	'Ifx_SCU_CCUCON7_Bits',0,6,159,2,3
	.word	5708
	.byte	26
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,6,162,2,16,4,27
	.byte	'CPU2DIV',0,1
	.word	290
	.byte	6,2,2,35,0,27
	.byte	'reserved_6',0,4
	.word	994
	.byte	26,0,2,35,0,0,25
	.byte	'Ifx_SCU_CCUCON8_Bits',0,6,166,2,3
	.word	5808
	.byte	26
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,6,169,2,16,4,27
	.byte	'CPU3DIV',0,1
	.word	290
	.byte	6,2,2,35,0,27
	.byte	'reserved_6',0,4
	.word	994
	.byte	26,0,2,35,0,0,25
	.byte	'Ifx_SCU_CCUCON9_Bits',0,6,173,2,3
	.word	5908
	.byte	26
	.byte	'_Ifx_SCU_CHIPID_Bits',0,6,176,2,16,4,27
	.byte	'CHREV',0,1
	.word	290
	.byte	6,2,2,35,0,27
	.byte	'CHTEC',0,1
	.word	290
	.byte	2,0,2,35,0,27
	.byte	'CHPK',0,1
	.word	290
	.byte	4,4,2,35,1,27
	.byte	'CHID',0,1
	.word	290
	.byte	4,0,2,35,1,27
	.byte	'EEA',0,1
	.word	290
	.byte	1,7,2,35,2,27
	.byte	'UCODE',0,1
	.word	290
	.byte	7,0,2,35,2,27
	.byte	'FSIZE',0,1
	.word	290
	.byte	4,4,2,35,3,27
	.byte	'VART',0,1
	.word	290
	.byte	3,1,2,35,3,27
	.byte	'SEC',0,1
	.word	290
	.byte	1,0,2,35,3,0,25
	.byte	'Ifx_SCU_CHIPID_Bits',0,6,187,2,3
	.word	6008
	.byte	26
	.byte	'_Ifx_SCU_DTSCLIM_Bits',0,6,190,2,16,4,27
	.byte	'LOWER',0,2
	.word	218
	.byte	12,4,2,35,0,27
	.byte	'reserved_12',0,1
	.word	290
	.byte	1,3,2,35,1,27
	.byte	'BGPOK',0,1
	.word	290
	.byte	1,2,2,35,1,27
	.byte	'EN',0,1
	.word	290
	.byte	1,1,2,35,1,27
	.byte	'LLU',0,1
	.word	290
	.byte	1,0,2,35,1,27
	.byte	'UPPER',0,2
	.word	218
	.byte	12,4,2,35,2,27
	.byte	'INTEN',0,1
	.word	290
	.byte	1,3,2,35,3,27
	.byte	'reserved_29',0,1
	.word	290
	.byte	1,2,2,35,3,27
	.byte	'INT',0,1
	.word	290
	.byte	1,1,2,35,3,27
	.byte	'UOF',0,1
	.word	290
	.byte	1,0,2,35,3,0,25
	.byte	'Ifx_SCU_DTSCLIM_Bits',0,6,202,2,3
	.word	6211
	.byte	26
	.byte	'_Ifx_SCU_DTSCSTAT_Bits',0,6,205,2,16,4,27
	.byte	'RESULT',0,2
	.word	218
	.byte	12,4,2,35,0,27
	.byte	'reserved_12',0,4
	.word	994
	.byte	20,0,2,35,0,0,25
	.byte	'Ifx_SCU_DTSCSTAT_Bits',0,6,209,2,3
	.word	6443
	.byte	2
	.byte	'unsigned int',0,4,7,26
	.byte	'_Ifx_SCU_EICON0_Bits',0,6,212,2,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'ENDINIT',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'EPW',0,4
	.word	6545
	.byte	14,16,2,35,0,27
	.byte	'REL',0,4
	.word	6545
	.byte	16,0,2,35,0,0,25
	.byte	'Ifx_SCU_EICON0_Bits',0,6,218,2,3
	.word	6561
	.byte	26
	.byte	'_Ifx_SCU_EICON1_Bits',0,6,221,2,16,4,27
	.byte	'reserved_0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'reserved_1',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'IR0',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'DR',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'reserved_4',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'IR1',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'reserved_6',0,4
	.word	994
	.byte	26,0,2,35,0,0,25
	.byte	'Ifx_SCU_EICON1_Bits',0,6,230,2,3
	.word	6689
	.byte	26
	.byte	'_Ifx_SCU_EICR_Bits',0,6,233,2,16,4,27
	.byte	'reserved_0',0,1
	.word	290
	.byte	4,4,2,35,0,27
	.byte	'EXIS0',0,1
	.word	290
	.byte	3,1,2,35,0,27
	.byte	'reserved_7',0,1
	.word	290
	.byte	1,0,2,35,0,27
	.byte	'FEN0',0,1
	.word	290
	.byte	1,7,2,35,1,27
	.byte	'REN0',0,1
	.word	290
	.byte	1,6,2,35,1,27
	.byte	'LDEN0',0,1
	.word	290
	.byte	1,5,2,35,1,27
	.byte	'EIEN0',0,1
	.word	290
	.byte	1,4,2,35,1,27
	.byte	'INP0',0,1
	.word	290
	.byte	3,1,2,35,1,27
	.byte	'reserved_15',0,4
	.word	994
	.byte	5,12,2,35,0,27
	.byte	'EXIS1',0,1
	.word	290
	.byte	3,1,2,35,2,27
	.byte	'reserved_23',0,1
	.word	290
	.byte	1,0,2,35,2,27
	.byte	'FEN1',0,1
	.word	290
	.byte	1,7,2,35,3,27
	.byte	'REN1',0,1
	.word	290
	.byte	1,6,2,35,3,27
	.byte	'LDEN1',0,1
	.word	290
	.byte	1,5,2,35,3,27
	.byte	'EIEN1',0,1
	.word	290
	.byte	1,4,2,35,3,27
	.byte	'INP1',0,1
	.word	290
	.byte	3,1,2,35,3,27
	.byte	'reserved_31',0,1
	.word	290
	.byte	1,0,2,35,3,0,25
	.byte	'Ifx_SCU_EICR_Bits',0,6,252,2,3
	.word	6878
	.byte	26
	.byte	'_Ifx_SCU_EIFILT_Bits',0,6,255,2,16,4,27
	.byte	'FILRQ0A',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'FILRQ5A',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'FILRQ2A',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'FILRQ3A',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'FILRQ0C',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'FILRQ1C',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'FILRQ3C',0,1
	.word	290
	.byte	1,1,2,35,0,27
	.byte	'FILRQ2C',0,1
	.word	290
	.byte	1,0,2,35,0,27
	.byte	'FILRQ4A',0,1
	.word	290
	.byte	1,7,2,35,1,27
	.byte	'FILRQ6A',0,1
	.word	290
	.byte	1,6,2,35,1,27
	.byte	'FILRQ1A',0,1
	.word	290
	.byte	1,5,2,35,1,27
	.byte	'FILRQ7A',0,1
	.word	290
	.byte	1,4,2,35,1,27
	.byte	'FILRQ6D',0,1
	.word	290
	.byte	1,3,2,35,1,27
	.byte	'FILRQ4D',0,1
	.word	290
	.byte	1,2,2,35,1,27
	.byte	'FILRQ2B',0,1
	.word	290
	.byte	1,1,2,35,1,27
	.byte	'FILRQ3B',0,1
	.word	290
	.byte	1,0,2,35,1,27
	.byte	'FILRQ7C',0,1
	.word	290
	.byte	1,7,2,35,2,27
	.byte	'reserved_17',0,1
	.word	290
	.byte	7,0,2,35,2,27
	.byte	'FILTDIV',0,1
	.word	290
	.byte	4,4,2,35,3,27
	.byte	'DEPTH',0,1
	.word	290
	.byte	4,0,2,35,3,0,25
	.byte	'Ifx_SCU_EIFILT_Bits',0,6,149,3,3
	.word	7242
	.byte	26
	.byte	'_Ifx_SCU_EIFR_Bits',0,6,152,3,16,4,27
	.byte	'INTF0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'INTF1',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'INTF2',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'INTF3',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'INTF4',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'INTF5',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'INTF6',0,1
	.word	290
	.byte	1,1,2,35,0,27
	.byte	'INTF7',0,1
	.word	290
	.byte	1,0,2,35,0,27
	.byte	'reserved_8',0,4
	.word	994
	.byte	24,0,2,35,0,0,25
	.byte	'Ifx_SCU_EIFR_Bits',0,6,163,3,3
	.word	7681
	.byte	26
	.byte	'_Ifx_SCU_EISR_Bits',0,6,166,3,16,4,27
	.byte	'AE',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'OE',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'IS0',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'DS',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'TO',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'IS1',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'reserved_6',0,2
	.word	218
	.byte	10,0,2,35,0,27
	.byte	'TIM',0,2
	.word	218
	.byte	16,0,2,35,2,0,25
	.byte	'Ifx_SCU_EISR_Bits',0,6,176,3,3
	.word	7892
	.byte	26
	.byte	'_Ifx_SCU_EMSR_Bits',0,6,179,3,16,4,27
	.byte	'POL',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'MODE',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'ENON',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'PSEL',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'reserved_4',0,2
	.word	218
	.byte	12,0,2,35,0,27
	.byte	'EMSF',0,1
	.word	290
	.byte	1,7,2,35,2,27
	.byte	'SEMSF',0,1
	.word	290
	.byte	1,6,2,35,2,27
	.byte	'reserved_18',0,2
	.word	218
	.byte	14,0,2,35,2,0,25
	.byte	'Ifx_SCU_EMSR_Bits',0,6,189,3,3
	.word	8068
	.byte	26
	.byte	'_Ifx_SCU_EMSSW_Bits',0,6,192,3,16,4,27
	.byte	'reserved_0',0,4
	.word	994
	.byte	24,8,2,35,0,27
	.byte	'EMSFM',0,1
	.word	290
	.byte	2,6,2,35,3,27
	.byte	'SEMSFM',0,1
	.word	290
	.byte	2,4,2,35,3,27
	.byte	'reserved_28',0,1
	.word	290
	.byte	4,0,2,35,3,0,25
	.byte	'Ifx_SCU_EMSSW_Bits',0,6,198,3,3
	.word	8262
	.byte	26
	.byte	'_Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,6,201,3,16,4,27
	.byte	'reserved_0',0,1
	.word	290
	.byte	7,1,2,35,0,27
	.byte	'EDCON',0,2
	.word	218
	.byte	2,7,2,35,0,27
	.byte	'reserved_9',0,4
	.word	994
	.byte	23,0,2,35,0,0,25
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,6,206,3,3
	.word	8397
	.byte	26
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,6,209,3,16,4,27
	.byte	'ARI',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'ARC',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'reserved_2',0,4
	.word	994
	.byte	30,0,2,35,0,0,25
	.byte	'Ifx_SCU_ESROCFG_Bits',0,6,214,3,3
	.word	8533
	.byte	26
	.byte	'_Ifx_SCU_EXTCON_Bits',0,6,217,3,16,4,27
	.byte	'EN0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'reserved_1',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'SEL0',0,1
	.word	290
	.byte	4,2,2,35,0,27
	.byte	'reserved_6',0,2
	.word	218
	.byte	10,0,2,35,0,27
	.byte	'EN1',0,1
	.word	290
	.byte	1,7,2,35,2,27
	.byte	'NSEL',0,1
	.word	290
	.byte	1,6,2,35,2,27
	.byte	'SEL1',0,1
	.word	290
	.byte	4,2,2,35,2,27
	.byte	'reserved_22',0,1
	.word	290
	.byte	2,0,2,35,2,27
	.byte	'DIV1',0,1
	.word	290
	.byte	8,0,2,35,3,0,25
	.byte	'Ifx_SCU_EXTCON_Bits',0,6,228,3,3
	.word	8644
	.byte	26
	.byte	'_Ifx_SCU_FDR_Bits',0,6,231,3,16,4,27
	.byte	'STEP',0,2
	.word	218
	.byte	10,6,2,35,0,27
	.byte	'reserved_10',0,1
	.word	290
	.byte	4,2,2,35,1,27
	.byte	'DM',0,1
	.word	290
	.byte	2,0,2,35,1,27
	.byte	'RESULT',0,2
	.word	218
	.byte	10,6,2,35,2,27
	.byte	'reserved_26',0,1
	.word	290
	.byte	5,1,2,35,3,27
	.byte	'DISCLK',0,1
	.word	290
	.byte	1,0,2,35,3,0,25
	.byte	'Ifx_SCU_FDR_Bits',0,6,239,3,3
	.word	8862
	.byte	26
	.byte	'_Ifx_SCU_FMR_Bits',0,6,242,3,16,4,27
	.byte	'FS0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'FS1',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'FS2',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'FS3',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'FS4',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'FS5',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'FS6',0,1
	.word	290
	.byte	1,1,2,35,0,27
	.byte	'FS7',0,1
	.word	290
	.byte	1,0,2,35,0,27
	.byte	'reserved_8',0,1
	.word	290
	.byte	8,0,2,35,1,27
	.byte	'FC0',0,1
	.word	290
	.byte	1,7,2,35,2,27
	.byte	'FC1',0,1
	.word	290
	.byte	1,6,2,35,2,27
	.byte	'FC2',0,1
	.word	290
	.byte	1,5,2,35,2,27
	.byte	'FC3',0,1
	.word	290
	.byte	1,4,2,35,2,27
	.byte	'FC4',0,1
	.word	290
	.byte	1,3,2,35,2,27
	.byte	'FC5',0,1
	.word	290
	.byte	1,2,2,35,2,27
	.byte	'FC6',0,1
	.word	290
	.byte	1,1,2,35,2,27
	.byte	'FC7',0,1
	.word	290
	.byte	1,0,2,35,2,27
	.byte	'reserved_24',0,1
	.word	290
	.byte	8,0,2,35,3,0,25
	.byte	'Ifx_SCU_FMR_Bits',0,6,134,4,3
	.word	9025
	.byte	26
	.byte	'_Ifx_SCU_ID_Bits',0,6,137,4,16,4,27
	.byte	'MODREV',0,1
	.word	290
	.byte	8,0,2,35,0,27
	.byte	'MODTYPE',0,1
	.word	290
	.byte	8,0,2,35,1,27
	.byte	'MODNUMBER',0,2
	.word	218
	.byte	16,0,2,35,2,0,25
	.byte	'Ifx_SCU_ID_Bits',0,6,142,4,3
	.word	9361
	.byte	26
	.byte	'_Ifx_SCU_IGCR_Bits',0,6,145,4,16,4,27
	.byte	'IPEN00',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'IPEN01',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'IPEN02',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'IPEN03',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'IPEN04',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'IPEN05',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'IPEN06',0,1
	.word	290
	.byte	1,1,2,35,0,27
	.byte	'IPEN07',0,1
	.word	290
	.byte	1,0,2,35,0,27
	.byte	'reserved_8',0,1
	.word	290
	.byte	5,3,2,35,1,27
	.byte	'GEEN0',0,1
	.word	290
	.byte	1,2,2,35,1,27
	.byte	'IGP0',0,1
	.word	290
	.byte	2,0,2,35,1,27
	.byte	'IPEN10',0,1
	.word	290
	.byte	1,7,2,35,2,27
	.byte	'IPEN11',0,1
	.word	290
	.byte	1,6,2,35,2,27
	.byte	'IPEN12',0,1
	.word	290
	.byte	1,5,2,35,2,27
	.byte	'IPEN13',0,1
	.word	290
	.byte	1,4,2,35,2,27
	.byte	'IPEN14',0,1
	.word	290
	.byte	1,3,2,35,2,27
	.byte	'IPEN15',0,1
	.word	290
	.byte	1,2,2,35,2,27
	.byte	'IPEN16',0,1
	.word	290
	.byte	1,1,2,35,2,27
	.byte	'IPEN17',0,1
	.word	290
	.byte	1,0,2,35,2,27
	.byte	'reserved_24',0,1
	.word	290
	.byte	5,3,2,35,3,27
	.byte	'GEEN1',0,1
	.word	290
	.byte	1,2,2,35,3,27
	.byte	'IGP1',0,1
	.word	290
	.byte	2,0,2,35,3,0,25
	.byte	'Ifx_SCU_IGCR_Bits',0,6,169,4,3
	.word	9468
	.byte	26
	.byte	'_Ifx_SCU_IN_Bits',0,6,172,4,16,4,27
	.byte	'P0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'P1',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'reserved_2',0,4
	.word	994
	.byte	30,0,2,35,0,0,25
	.byte	'Ifx_SCU_IN_Bits',0,6,177,4,3
	.word	9920
	.byte	26
	.byte	'_Ifx_SCU_IOCR_Bits',0,6,180,4,16,4,27
	.byte	'reserved_0',0,1
	.word	290
	.byte	4,4,2,35,0,27
	.byte	'PC0',0,1
	.word	290
	.byte	4,0,2,35,0,27
	.byte	'reserved_8',0,1
	.word	290
	.byte	4,4,2,35,1,27
	.byte	'PC1',0,1
	.word	290
	.byte	4,0,2,35,1,27
	.byte	'reserved_16',0,2
	.word	218
	.byte	16,0,2,35,2,0,25
	.byte	'Ifx_SCU_IOCR_Bits',0,6,187,4,3
	.word	10019
	.byte	26
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,6,190,4,16,4,27
	.byte	'LBISTREQ',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'LBISTRES',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'PATTERNS',0,4
	.word	994
	.byte	18,12,2,35,0,27
	.byte	'reserved_20',0,2
	.word	218
	.byte	8,4,2,35,2,27
	.byte	'LBISTDONE',0,1
	.word	290
	.byte	1,3,2,35,3,27
	.byte	'reserved_29',0,1
	.word	290
	.byte	1,2,2,35,3,27
	.byte	'LBISTERRINJ',0,1
	.word	290
	.byte	1,1,2,35,3,27
	.byte	'LBISTREQRED',0,1
	.word	290
	.byte	1,0,2,35,3,0,25
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,6,200,4,3
	.word	10169
	.byte	26
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,6,203,4,16,4,27
	.byte	'SEED',0,4
	.word	994
	.byte	19,13,2,35,0,27
	.byte	'reserved_19',0,1
	.word	290
	.byte	5,0,2,35,2,27
	.byte	'SPLITSH',0,1
	.word	290
	.byte	3,5,2,35,3,27
	.byte	'BODY',0,1
	.word	290
	.byte	1,4,2,35,3,27
	.byte	'LBISTFREQU',0,1
	.word	290
	.byte	4,0,2,35,3,0,25
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,6,210,4,3
	.word	10407
	.byte	26
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,6,213,4,16,4,27
	.byte	'LENGTH',0,2
	.word	218
	.byte	12,4,2,35,0,27
	.byte	'reserved_12',0,4
	.word	994
	.byte	20,0,2,35,0,0,25
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,6,217,4,3
	.word	10568
	.byte	26
	.byte	'_Ifx_SCU_LBISTCTRL3_Bits',0,6,220,4,16,4,27
	.byte	'SIGNATURE',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_SCU_LBISTCTRL3_Bits',0,6,223,4,3
	.word	10674
	.byte	26
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,6,226,4,16,4,27
	.byte	'LS2',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'reserved_1',0,2
	.word	218
	.byte	14,1,2,35,0,27
	.byte	'LSEN2',0,1
	.word	290
	.byte	1,0,2,35,1,27
	.byte	'LS0',0,1
	.word	290
	.byte	1,7,2,35,2,27
	.byte	'reserved_17',0,2
	.word	218
	.byte	14,1,2,35,2,27
	.byte	'LSEN0',0,1
	.word	290
	.byte	1,0,2,35,3,0,25
	.byte	'Ifx_SCU_LCLCON0_Bits',0,6,234,4,3
	.word	10760
	.byte	26
	.byte	'_Ifx_SCU_LCLCON1_Bits',0,6,237,4,16,4,27
	.byte	'LS3',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'reserved_1',0,2
	.word	218
	.byte	14,1,2,35,0,27
	.byte	'LSEN3',0,1
	.word	290
	.byte	1,0,2,35,1,27
	.byte	'LS1',0,1
	.word	290
	.byte	1,7,2,35,2,27
	.byte	'reserved_17',0,2
	.word	218
	.byte	14,1,2,35,2,27
	.byte	'LSEN1',0,1
	.word	290
	.byte	1,0,2,35,3,0,25
	.byte	'Ifx_SCU_LCLCON1_Bits',0,6,245,4,3
	.word	10928
	.byte	26
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,6,248,4,16,4,27
	.byte	'LCLT0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'LCLT1',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'LCLT2',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'LCLT3',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'LCLT4',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'LCLT5',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'reserved_6',0,2
	.word	218
	.byte	10,0,2,35,0,27
	.byte	'PLCLT0',0,1
	.word	290
	.byte	1,7,2,35,2,27
	.byte	'PLCLT1',0,1
	.word	290
	.byte	1,6,2,35,2,27
	.byte	'PLCLT2',0,1
	.word	290
	.byte	1,5,2,35,2,27
	.byte	'PLCLT3',0,1
	.word	290
	.byte	1,4,2,35,2,27
	.byte	'PLCLT4',0,1
	.word	290
	.byte	1,3,2,35,2,27
	.byte	'PLCLT5',0,1
	.word	290
	.byte	1,2,2,35,2,27
	.byte	'reserved_22',0,2
	.word	218
	.byte	10,0,2,35,2,0,25
	.byte	'Ifx_SCU_LCLTEST_Bits',0,6,136,5,3
	.word	11096
	.byte	26
	.byte	'_Ifx_SCU_MANID_Bits',0,6,139,5,16,4,27
	.byte	'DEPT',0,1
	.word	290
	.byte	5,3,2,35,0,27
	.byte	'MANUF',0,2
	.word	218
	.byte	11,0,2,35,0,27
	.byte	'reserved_16',0,2
	.word	218
	.byte	16,0,2,35,2,0,25
	.byte	'Ifx_SCU_MANID_Bits',0,6,144,5,3
	.word	11410
	.byte	26
	.byte	'_Ifx_SCU_OMR_Bits',0,6,147,5,16,4,27
	.byte	'PS0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'PS1',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'reserved_2',0,2
	.word	218
	.byte	14,0,2,35,0,27
	.byte	'PCL0',0,1
	.word	290
	.byte	1,7,2,35,2,27
	.byte	'PCL1',0,1
	.word	290
	.byte	1,6,2,35,2,27
	.byte	'reserved_18',0,2
	.word	218
	.byte	14,0,2,35,2,0,25
	.byte	'Ifx_SCU_OMR_Bits',0,6,155,5,3
	.word	11521
	.byte	26
	.byte	'_Ifx_SCU_OSCCON_Bits',0,6,158,5,16,4,27
	.byte	'reserved_0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'PLLLV',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'OSCRES',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'GAINSEL',0,1
	.word	290
	.byte	2,3,2,35,0,27
	.byte	'MODE',0,1
	.word	290
	.byte	2,1,2,35,0,27
	.byte	'SHBY',0,1
	.word	290
	.byte	1,0,2,35,0,27
	.byte	'PLLHV',0,1
	.word	290
	.byte	1,7,2,35,1,27
	.byte	'HYSEN',0,1
	.word	290
	.byte	1,6,2,35,1,27
	.byte	'HYSCTL',0,1
	.word	290
	.byte	2,4,2,35,1,27
	.byte	'AMPCTL',0,1
	.word	290
	.byte	2,2,2,35,1,27
	.byte	'reserved_14',0,1
	.word	290
	.byte	2,0,2,35,1,27
	.byte	'OSCVAL',0,1
	.word	290
	.byte	5,3,2,35,2,27
	.byte	'reserved_21',0,1
	.word	290
	.byte	2,1,2,35,2,27
	.byte	'APREN',0,1
	.word	290
	.byte	1,0,2,35,2,27
	.byte	'CAP0EN',0,1
	.word	290
	.byte	1,7,2,35,3,27
	.byte	'CAP1EN',0,1
	.word	290
	.byte	1,6,2,35,3,27
	.byte	'CAP2EN',0,1
	.word	290
	.byte	1,5,2,35,3,27
	.byte	'CAP3EN',0,1
	.word	290
	.byte	1,4,2,35,3,27
	.byte	'reserved_28',0,1
	.word	290
	.byte	4,0,2,35,3,0,25
	.byte	'Ifx_SCU_OSCCON_Bits',0,6,179,5,3
	.word	11679
	.byte	26
	.byte	'_Ifx_SCU_OUT_Bits',0,6,182,5,16,4,27
	.byte	'P0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'P1',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'reserved_2',0,4
	.word	994
	.byte	30,0,2,35,0,0,25
	.byte	'Ifx_SCU_OUT_Bits',0,6,187,5,3
	.word	12090
	.byte	26
	.byte	'_Ifx_SCU_OVCCON_Bits',0,6,190,5,16,4,27
	.byte	'CSEL0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'CSEL1',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'CSEL2',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'CSEL3',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'CSEL4',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'CSEL5',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'reserved_6',0,2
	.word	218
	.byte	10,0,2,35,0,27
	.byte	'OVSTRT',0,1
	.word	290
	.byte	1,7,2,35,2,27
	.byte	'OVSTP',0,1
	.word	290
	.byte	1,6,2,35,2,27
	.byte	'DCINVAL',0,1
	.word	290
	.byte	1,5,2,35,2,27
	.byte	'reserved_19',0,1
	.word	290
	.byte	5,0,2,35,2,27
	.byte	'OVCONF',0,1
	.word	290
	.byte	1,7,2,35,3,27
	.byte	'POVCONF',0,1
	.word	290
	.byte	1,6,2,35,3,27
	.byte	'reserved_26',0,1
	.word	290
	.byte	6,0,2,35,3,0,25
	.byte	'Ifx_SCU_OVCCON_Bits',0,6,206,5,3
	.word	12191
	.byte	26
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,6,209,5,16,4,27
	.byte	'OVEN0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'OVEN1',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'OVEN2',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'OVEN3',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'OVEN4',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'OVEN5',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'reserved_6',0,4
	.word	994
	.byte	26,0,2,35,0,0,25
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,6,218,5,3
	.word	12509
	.byte	26
	.byte	'_Ifx_SCU_PDISC_Bits',0,6,221,5,16,4,27
	.byte	'PDIS0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'PDIS1',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'reserved_2',0,4
	.word	994
	.byte	30,0,2,35,0,0,25
	.byte	'Ifx_SCU_PDISC_Bits',0,6,226,5,3
	.word	12696
	.byte	26
	.byte	'_Ifx_SCU_PDR_Bits',0,6,229,5,16,4,27
	.byte	'PD0',0,1
	.word	290
	.byte	2,6,2,35,0,27
	.byte	'PL0',0,1
	.word	290
	.byte	2,4,2,35,0,27
	.byte	'PD1',0,1
	.word	290
	.byte	2,2,2,35,0,27
	.byte	'PL1',0,1
	.word	290
	.byte	2,0,2,35,0,27
	.byte	'reserved_8',0,4
	.word	994
	.byte	24,0,2,35,0,0,25
	.byte	'Ifx_SCU_PDR_Bits',0,6,236,5,3
	.word	12807
	.byte	26
	.byte	'_Ifx_SCU_PDRR_Bits',0,6,239,5,16,4,27
	.byte	'PDR0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'PDR1',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'PDR2',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'PDR3',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'PDR4',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'PDR5',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'PDR6',0,1
	.word	290
	.byte	1,1,2,35,0,27
	.byte	'PDR7',0,1
	.word	290
	.byte	1,0,2,35,0,27
	.byte	'reserved_8',0,4
	.word	994
	.byte	24,0,2,35,0,0,25
	.byte	'Ifx_SCU_PDRR_Bits',0,6,250,5,3
	.word	12940
	.byte	26
	.byte	'_Ifx_SCU_PERPLLCON0_Bits',0,6,253,5,16,4,27
	.byte	'DIVBY',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'reserved_1',0,2
	.word	218
	.byte	8,7,2,35,0,27
	.byte	'NDIV',0,1
	.word	290
	.byte	7,0,2,35,1,27
	.byte	'PLLPWD',0,1
	.word	290
	.byte	1,7,2,35,2,27
	.byte	'reserved_17',0,1
	.word	290
	.byte	1,6,2,35,2,27
	.byte	'RESLD',0,1
	.word	290
	.byte	1,5,2,35,2,27
	.byte	'reserved_19',0,1
	.word	290
	.byte	5,0,2,35,2,27
	.byte	'PDIV',0,1
	.word	290
	.byte	3,5,2,35,3,27
	.byte	'reserved_27',0,1
	.word	290
	.byte	5,0,2,35,3,0,25
	.byte	'Ifx_SCU_PERPLLCON0_Bits',0,6,136,6,3
	.word	13143
	.byte	26
	.byte	'_Ifx_SCU_PERPLLCON1_Bits',0,6,139,6,16,4,27
	.byte	'K2DIV',0,1
	.word	290
	.byte	3,5,2,35,0,27
	.byte	'reserved_3',0,1
	.word	290
	.byte	5,0,2,35,0,27
	.byte	'K3DIV',0,1
	.word	290
	.byte	3,5,2,35,1,27
	.byte	'reserved_11',0,4
	.word	994
	.byte	21,0,2,35,0,0,25
	.byte	'Ifx_SCU_PERPLLCON1_Bits',0,6,145,6,3
	.word	13383
	.byte	26
	.byte	'_Ifx_SCU_PERPLLSTAT_Bits',0,6,148,6,16,4,27
	.byte	'reserved_0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'PWDSTAT',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'LOCK',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'reserved_3',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'K3RDY',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'K2RDY',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'reserved_6',0,1
	.word	290
	.byte	1,1,2,35,0,27
	.byte	'reserved_7',0,4
	.word	994
	.byte	25,0,2,35,0,0,25
	.byte	'Ifx_SCU_PERPLLSTAT_Bits',0,6,158,6,3
	.word	13527
	.byte	26
	.byte	'_Ifx_SCU_PMCSR0_Bits',0,6,161,6,16,4,27
	.byte	'REQSLP',0,1
	.word	290
	.byte	2,6,2,35,0,27
	.byte	'reserved_2',0,1
	.word	290
	.byte	6,0,2,35,0,27
	.byte	'PMST',0,1
	.word	290
	.byte	3,5,2,35,1,27
	.byte	'reserved_11',0,4
	.word	994
	.byte	21,0,2,35,0,0,25
	.byte	'Ifx_SCU_PMCSR0_Bits',0,6,167,6,3
	.word	13749
	.byte	26
	.byte	'_Ifx_SCU_PMCSR1_Bits',0,6,170,6,16,4,27
	.byte	'REQSLP',0,1
	.word	290
	.byte	2,6,2,35,0,27
	.byte	'reserved_2',0,1
	.word	290
	.byte	6,0,2,35,0,27
	.byte	'PMST',0,1
	.word	290
	.byte	3,5,2,35,1,27
	.byte	'reserved_11',0,4
	.word	994
	.byte	21,0,2,35,0,0,25
	.byte	'Ifx_SCU_PMCSR1_Bits',0,6,176,6,3
	.word	13885
	.byte	26
	.byte	'_Ifx_SCU_PMCSR2_Bits',0,6,179,6,16,4,27
	.byte	'REQSLP',0,1
	.word	290
	.byte	2,6,2,35,0,27
	.byte	'reserved_2',0,1
	.word	290
	.byte	6,0,2,35,0,27
	.byte	'PMST',0,1
	.word	290
	.byte	3,5,2,35,1,27
	.byte	'reserved_11',0,4
	.word	994
	.byte	21,0,2,35,0,0,25
	.byte	'Ifx_SCU_PMCSR2_Bits',0,6,185,6,3
	.word	14021
	.byte	26
	.byte	'_Ifx_SCU_PMCSR3_Bits',0,6,188,6,16,4,27
	.byte	'REQSLP',0,1
	.word	290
	.byte	2,6,2,35,0,27
	.byte	'reserved_2',0,1
	.word	290
	.byte	6,0,2,35,0,27
	.byte	'PMST',0,1
	.word	290
	.byte	3,5,2,35,1,27
	.byte	'reserved_11',0,4
	.word	994
	.byte	21,0,2,35,0,0,25
	.byte	'Ifx_SCU_PMCSR3_Bits',0,6,194,6,3
	.word	14157
	.byte	26
	.byte	'_Ifx_SCU_PMCSR4_Bits',0,6,197,6,16,4,27
	.byte	'REQSLP',0,1
	.word	290
	.byte	2,6,2,35,0,27
	.byte	'reserved_2',0,1
	.word	290
	.byte	6,0,2,35,0,27
	.byte	'PMST',0,1
	.word	290
	.byte	3,5,2,35,1,27
	.byte	'reserved_11',0,4
	.word	994
	.byte	21,0,2,35,0,0,25
	.byte	'Ifx_SCU_PMCSR4_Bits',0,6,203,6,3
	.word	14293
	.byte	26
	.byte	'_Ifx_SCU_PMCSR5_Bits',0,6,206,6,16,4,27
	.byte	'REQSLP',0,1
	.word	290
	.byte	2,6,2,35,0,27
	.byte	'reserved_2',0,1
	.word	290
	.byte	6,0,2,35,0,27
	.byte	'PMST',0,1
	.word	290
	.byte	3,5,2,35,1,27
	.byte	'reserved_11',0,4
	.word	994
	.byte	21,0,2,35,0,0,25
	.byte	'Ifx_SCU_PMCSR5_Bits',0,6,212,6,3
	.word	14429
	.byte	26
	.byte	'_Ifx_SCU_PMSTAT0_Bits',0,6,215,6,16,4,27
	.byte	'CPU0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'CPU1',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'CPU2',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'CPU3',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'CPU4',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'CPU5',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'reserved_6',0,2
	.word	218
	.byte	10,0,2,35,0,27
	.byte	'CPU0LS',0,1
	.word	290
	.byte	1,7,2,35,2,27
	.byte	'CPU1LS',0,1
	.word	290
	.byte	1,6,2,35,2,27
	.byte	'CPU2LS',0,1
	.word	290
	.byte	1,5,2,35,2,27
	.byte	'CPU3LS',0,1
	.word	290
	.byte	1,4,2,35,2,27
	.byte	'reserved_20',0,2
	.word	218
	.byte	12,0,2,35,2,0,25
	.byte	'Ifx_SCU_PMSTAT0_Bits',0,6,229,6,3
	.word	14565
	.byte	26
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,6,232,6,16,4,27
	.byte	'reserved_0',0,1
	.word	290
	.byte	8,0,2,35,0,27
	.byte	'CPUIDLSEL',0,1
	.word	290
	.byte	3,5,2,35,1,27
	.byte	'reserved_11',0,1
	.word	290
	.byte	1,4,2,35,1,27
	.byte	'IRADIS',0,1
	.word	290
	.byte	1,3,2,35,1,27
	.byte	'reserved_13',0,4
	.word	994
	.byte	11,8,2,35,0,27
	.byte	'CPUSEL',0,1
	.word	290
	.byte	3,5,2,35,3,27
	.byte	'STBYEVEN',0,1
	.word	290
	.byte	1,4,2,35,3,27
	.byte	'STBYEV',0,1
	.word	290
	.byte	3,1,2,35,3,27
	.byte	'reserved_31',0,1
	.word	290
	.byte	1,0,2,35,3,0,25
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,6,243,6,3
	.word	14837
	.byte	26
	.byte	'_Ifx_SCU_PMTRCSR0_Bits',0,6,246,6,16,4,27
	.byte	'LJTEN',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'LJTOVEN',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'LJTOVIEN',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'LJTSTRT',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'LJTSTP',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'LJTCLR',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'reserved_6',0,2
	.word	218
	.byte	6,4,2,35,0,27
	.byte	'SDSTEP',0,1
	.word	290
	.byte	4,0,2,35,1,27
	.byte	'VDTEN',0,1
	.word	290
	.byte	1,7,2,35,2,27
	.byte	'VDTOVEN',0,1
	.word	290
	.byte	1,6,2,35,2,27
	.byte	'VDTOVIEN',0,1
	.word	290
	.byte	1,5,2,35,2,27
	.byte	'VDTSTRT',0,1
	.word	290
	.byte	1,4,2,35,2,27
	.byte	'VDTSTP',0,1
	.word	290
	.byte	1,3,2,35,2,27
	.byte	'VDTCLR',0,1
	.word	290
	.byte	1,2,2,35,2,27
	.byte	'reserved_22',0,2
	.word	218
	.byte	7,3,2,35,2,27
	.byte	'LPSLPEN',0,1
	.word	290
	.byte	1,2,2,35,3,27
	.byte	'reserved_30',0,1
	.word	290
	.byte	2,0,2,35,3,0,25
	.byte	'Ifx_SCU_PMTRCSR0_Bits',0,6,137,7,3
	.word	15082
	.byte	26
	.byte	'_Ifx_SCU_PMTRCSR1_Bits',0,6,140,7,16,4,27
	.byte	'LJTCV',0,2
	.word	218
	.byte	16,0,2,35,0,27
	.byte	'VDTCV',0,2
	.word	218
	.byte	10,6,2,35,2,27
	.byte	'reserved_26',0,1
	.word	290
	.byte	6,0,2,35,3,0,25
	.byte	'Ifx_SCU_PMTRCSR1_Bits',0,6,145,7,3
	.word	15470
	.byte	26
	.byte	'_Ifx_SCU_PMTRCSR2_Bits',0,6,148,7,16,4,27
	.byte	'LDJMPREQ',0,1
	.word	290
	.byte	2,6,2,35,0,27
	.byte	'reserved_2',0,1
	.word	290
	.byte	2,4,2,35,0,27
	.byte	'LJTRUN',0,1
	.word	290
	.byte	2,2,2,35,0,27
	.byte	'reserved_6',0,1
	.word	290
	.byte	2,0,2,35,0,27
	.byte	'LJTOV',0,1
	.word	290
	.byte	1,7,2,35,1,27
	.byte	'reserved_9',0,1
	.word	290
	.byte	3,4,2,35,1,27
	.byte	'LJTOVCLR',0,1
	.word	290
	.byte	1,3,2,35,1,27
	.byte	'reserved_13',0,1
	.word	290
	.byte	3,0,2,35,1,27
	.byte	'LJTCNT',0,2
	.word	218
	.byte	16,0,2,35,2,0,25
	.byte	'Ifx_SCU_PMTRCSR2_Bits',0,6,159,7,3
	.word	15588
	.byte	26
	.byte	'_Ifx_SCU_PMTRCSR3_Bits',0,6,162,7,16,4,27
	.byte	'VDROOPREQ',0,1
	.word	290
	.byte	2,6,2,35,0,27
	.byte	'reserved_2',0,1
	.word	290
	.byte	2,4,2,35,0,27
	.byte	'VDTRUN',0,1
	.word	290
	.byte	2,2,2,35,0,27
	.byte	'reserved_6',0,1
	.word	290
	.byte	2,0,2,35,0,27
	.byte	'VDTOV',0,1
	.word	290
	.byte	1,7,2,35,1,27
	.byte	'reserved_9',0,1
	.word	290
	.byte	3,4,2,35,1,27
	.byte	'VDTOVCLR',0,1
	.word	290
	.byte	1,3,2,35,1,27
	.byte	'reserved_13',0,1
	.word	290
	.byte	3,0,2,35,1,27
	.byte	'VDTCNT',0,2
	.word	218
	.byte	10,6,2,35,2,27
	.byte	'reserved_26',0,1
	.word	290
	.byte	6,0,2,35,3,0,25
	.byte	'Ifx_SCU_PMTRCSR3_Bits',0,6,174,7,3
	.word	15831
	.byte	26
	.byte	'_Ifx_SCU_RSTCON_Bits',0,6,177,7,16,4,27
	.byte	'ESR0',0,1
	.word	290
	.byte	2,6,2,35,0,27
	.byte	'ESR1',0,1
	.word	290
	.byte	2,4,2,35,0,27
	.byte	'reserved_4',0,1
	.word	290
	.byte	2,2,2,35,0,27
	.byte	'SMU',0,1
	.word	290
	.byte	2,0,2,35,0,27
	.byte	'SW',0,1
	.word	290
	.byte	2,6,2,35,1,27
	.byte	'STM0',0,1
	.word	290
	.byte	2,4,2,35,1,27
	.byte	'STM1',0,1
	.word	290
	.byte	2,2,2,35,1,27
	.byte	'STM2',0,1
	.word	290
	.byte	2,0,2,35,1,27
	.byte	'STM3',0,1
	.word	290
	.byte	2,6,2,35,2,27
	.byte	'STM4',0,1
	.word	290
	.byte	2,4,2,35,2,27
	.byte	'STM5',0,1
	.word	290
	.byte	2,2,2,35,2,27
	.byte	'reserved_22',0,2
	.word	218
	.byte	10,0,2,35,2,0,25
	.byte	'Ifx_SCU_RSTCON_Bits',0,6,191,7,3
	.word	16098
	.byte	26
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,6,194,7,16,4,27
	.byte	'FRTO',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'CLRC',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'reserved_2',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'reserved_3',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'reserved_4',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'reserved_5',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'reserved_6',0,1
	.word	290
	.byte	1,1,2,35,0,27
	.byte	'CSSX',0,2
	.word	218
	.byte	6,3,2,35,0,27
	.byte	'reserved_13',0,1
	.word	290
	.byte	1,2,2,35,1,27
	.byte	'reserved_14',0,1
	.word	290
	.byte	1,1,2,35,1,27
	.byte	'reserved_15',0,1
	.word	290
	.byte	1,0,2,35,1,27
	.byte	'USRINFO',0,2
	.word	218
	.byte	16,0,2,35,2,0,25
	.byte	'Ifx_SCU_RSTCON2_Bits',0,6,208,7,3
	.word	16357
	.byte	26
	.byte	'_Ifx_SCU_RSTCON3_Bits',0,6,211,7,16,4,27
	.byte	'reserved_0',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_SCU_RSTCON3_Bits',0,6,214,7,3
	.word	16662
	.byte	26
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,6,217,7,16,4,27
	.byte	'ESR0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'ESR1',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'reserved_2',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'SMU',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'SW',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'STM0',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'STM1',0,1
	.word	290
	.byte	1,1,2,35,0,27
	.byte	'STM2',0,1
	.word	290
	.byte	1,0,2,35,0,27
	.byte	'STM3',0,1
	.word	290
	.byte	1,7,2,35,1,27
	.byte	'STM4',0,1
	.word	290
	.byte	1,6,2,35,1,27
	.byte	'STM5',0,1
	.word	290
	.byte	1,5,2,35,1,27
	.byte	'reserved_11',0,1
	.word	290
	.byte	5,0,2,35,1,27
	.byte	'PORST',0,1
	.word	290
	.byte	1,7,2,35,2,27
	.byte	'reserved_17',0,1
	.word	290
	.byte	1,6,2,35,2,27
	.byte	'CB0',0,1
	.word	290
	.byte	1,5,2,35,2,27
	.byte	'CB1',0,1
	.word	290
	.byte	1,4,2,35,2,27
	.byte	'CB3',0,1
	.word	290
	.byte	1,3,2,35,2,27
	.byte	'reserved_21',0,1
	.word	290
	.byte	1,2,2,35,2,27
	.byte	'reserved_22',0,1
	.word	290
	.byte	1,1,2,35,2,27
	.byte	'EVRC',0,1
	.word	290
	.byte	1,0,2,35,2,27
	.byte	'EVR33',0,1
	.word	290
	.byte	1,7,2,35,3,27
	.byte	'SWD',0,1
	.word	290
	.byte	1,6,2,35,3,27
	.byte	'HSMS',0,1
	.word	290
	.byte	1,5,2,35,3,27
	.byte	'HSMA',0,1
	.word	290
	.byte	1,4,2,35,3,27
	.byte	'STBYR',0,1
	.word	290
	.byte	1,3,2,35,3,27
	.byte	'LBPORST',0,1
	.word	290
	.byte	1,2,2,35,3,27
	.byte	'LBTERM',0,1
	.word	290
	.byte	1,1,2,35,3,27
	.byte	'reserved_31',0,1
	.word	290
	.byte	1,0,2,35,3,0,25
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,6,247,7,3
	.word	16743
	.byte	26
	.byte	'_Ifx_SCU_SEICON0_Bits',0,6,250,7,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'ENDINIT',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'EPW',0,4
	.word	6545
	.byte	14,16,2,35,0,27
	.byte	'REL',0,4
	.word	6545
	.byte	16,0,2,35,0,0,25
	.byte	'Ifx_SCU_SEICON0_Bits',0,6,128,8,3
	.word	17292
	.byte	26
	.byte	'_Ifx_SCU_SEICON1_Bits',0,6,131,8,16,4,27
	.byte	'reserved_0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'reserved_1',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'IR0',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'DR',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'reserved_4',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'IR1',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'reserved_6',0,4
	.word	994
	.byte	26,0,2,35,0,0,25
	.byte	'Ifx_SCU_SEICON1_Bits',0,6,140,8,3
	.word	17422
	.byte	26
	.byte	'_Ifx_SCU_SEISR_Bits',0,6,143,8,16,4,27
	.byte	'AE',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'OE',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'IS0',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'DS',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'TO',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'IS1',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'reserved_6',0,2
	.word	218
	.byte	10,0,2,35,0,27
	.byte	'TIM',0,2
	.word	218
	.byte	16,0,2,35,2,0,25
	.byte	'Ifx_SCU_SEISR_Bits',0,6,153,8,3
	.word	17613
	.byte	26
	.byte	'_Ifx_SCU_STCON_Bits',0,6,156,8,16,4,27
	.byte	'reserved_0',0,2
	.word	218
	.byte	13,3,2,35,0,27
	.byte	'SFCBAE',0,1
	.word	290
	.byte	1,2,2,35,1,27
	.byte	'CFCBAE',0,1
	.word	290
	.byte	1,1,2,35,1,27
	.byte	'STP',0,1
	.word	290
	.byte	1,0,2,35,1,27
	.byte	'reserved_16',0,2
	.word	218
	.byte	16,0,2,35,2,0,25
	.byte	'Ifx_SCU_STCON_Bits',0,6,163,8,3
	.word	17791
	.byte	26
	.byte	'_Ifx_SCU_STMEM1_Bits',0,6,166,8,16,4,27
	.byte	'MEM',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_SCU_STMEM1_Bits',0,6,169,8,3
	.word	17942
	.byte	26
	.byte	'_Ifx_SCU_STMEM2_Bits',0,6,172,8,16,4,27
	.byte	'MEM',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_SCU_STMEM2_Bits',0,6,175,8,3
	.word	18014
	.byte	26
	.byte	'_Ifx_SCU_STMEM3_Bits',0,6,178,8,16,4,27
	.byte	'MEM',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_SCU_STMEM3_Bits',0,6,181,8,3
	.word	18086
	.byte	26
	.byte	'_Ifx_SCU_STMEM4_Bits',0,6,184,8,16,4,27
	.byte	'MEM',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_SCU_STMEM4_Bits',0,6,187,8,3
	.word	18158
	.byte	26
	.byte	'_Ifx_SCU_STMEM5_Bits',0,6,190,8,16,4,27
	.byte	'MEM',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_SCU_STMEM5_Bits',0,6,193,8,3
	.word	18230
	.byte	26
	.byte	'_Ifx_SCU_STMEM6_Bits',0,6,196,8,16,4,27
	.byte	'MEM',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_SCU_STMEM6_Bits',0,6,199,8,3
	.word	18302
	.byte	26
	.byte	'_Ifx_SCU_STSTAT_Bits',0,6,202,8,16,4,27
	.byte	'HWCFG',0,1
	.word	290
	.byte	8,0,2,35,0,27
	.byte	'FTM',0,1
	.word	290
	.byte	7,1,2,35,1,27
	.byte	'MODE',0,1
	.word	290
	.byte	1,0,2,35,1,27
	.byte	'FCBAE',0,1
	.word	290
	.byte	1,7,2,35,2,27
	.byte	'LUDIS',0,1
	.word	290
	.byte	1,6,2,35,2,27
	.byte	'reserved_18',0,1
	.word	290
	.byte	1,5,2,35,2,27
	.byte	'TRSTL',0,1
	.word	290
	.byte	1,4,2,35,2,27
	.byte	'SPDEN',0,1
	.word	290
	.byte	1,3,2,35,2,27
	.byte	'reserved_21',0,1
	.word	290
	.byte	1,2,2,35,2,27
	.byte	'reserved_22',0,1
	.word	290
	.byte	1,1,2,35,2,27
	.byte	'reserved_23',0,1
	.word	290
	.byte	1,0,2,35,2,27
	.byte	'RAMINT',0,1
	.word	290
	.byte	1,7,2,35,3,27
	.byte	'reserved_25',0,1
	.word	290
	.byte	3,4,2,35,3,27
	.byte	'reserved_28',0,1
	.word	290
	.byte	4,0,2,35,3,0,25
	.byte	'Ifx_SCU_STSTAT_Bits',0,6,218,8,3
	.word	18374
	.byte	26
	.byte	'_Ifx_SCU_SWAPCTRL_Bits',0,6,221,8,16,4,27
	.byte	'ADDRCFG',0,1
	.word	290
	.byte	2,6,2,35,0,27
	.byte	'SPARE',0,2
	.word	218
	.byte	14,0,2,35,0,27
	.byte	'reserved_16',0,2
	.word	218
	.byte	16,0,2,35,2,0,25
	.byte	'Ifx_SCU_SWAPCTRL_Bits',0,6,226,8,3
	.word	18703
	.byte	26
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,6,229,8,16,4,27
	.byte	'reserved_0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'SWRSTREQ',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'reserved_2',0,1
	.word	290
	.byte	6,0,2,35,0,27
	.byte	'reserved_8',0,1
	.word	290
	.byte	8,0,2,35,1,27
	.byte	'reserved_16',0,2
	.word	218
	.byte	16,0,2,35,2,0,25
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,6,236,8,3
	.word	18823
	.byte	26
	.byte	'_Ifx_SCU_SYSCON_Bits',0,6,239,8,16,4,27
	.byte	'CCTRIG0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'reserved_1',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'RAMINTM',0,1
	.word	290
	.byte	2,4,2,35,0,27
	.byte	'SETLUDIS',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'reserved_5',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'reserved_6',0,1
	.word	290
	.byte	1,1,2,35,0,27
	.byte	'reserved_7',0,1
	.word	290
	.byte	1,0,2,35,0,27
	.byte	'DDC',0,1
	.word	290
	.byte	1,7,2,35,1,27
	.byte	'reserved_9',0,1
	.word	290
	.byte	7,0,2,35,1,27
	.byte	'reserved_16',0,2
	.word	218
	.byte	16,0,2,35,2,0,25
	.byte	'Ifx_SCU_SYSCON_Bits',0,6,251,8,3
	.word	18993
	.byte	26
	.byte	'_Ifx_SCU_SYSPLLCON0_Bits',0,6,254,8,16,4,27
	.byte	'reserved_0',0,1
	.word	290
	.byte	2,6,2,35,0,27
	.byte	'MODEN',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'reserved_3',0,2
	.word	218
	.byte	6,7,2,35,0,27
	.byte	'NDIV',0,1
	.word	290
	.byte	7,0,2,35,1,27
	.byte	'PLLPWD',0,1
	.word	290
	.byte	1,7,2,35,2,27
	.byte	'reserved_17',0,1
	.word	290
	.byte	1,6,2,35,2,27
	.byte	'RESLD',0,1
	.word	290
	.byte	1,5,2,35,2,27
	.byte	'reserved_19',0,1
	.word	290
	.byte	5,0,2,35,2,27
	.byte	'PDIV',0,1
	.word	290
	.byte	3,5,2,35,3,27
	.byte	'reserved_27',0,1
	.word	290
	.byte	3,2,2,35,3,27
	.byte	'INSEL',0,1
	.word	290
	.byte	2,0,2,35,3,0,25
	.byte	'Ifx_SCU_SYSPLLCON0_Bits',0,6,139,9,3
	.word	19256
	.byte	26
	.byte	'_Ifx_SCU_SYSPLLCON1_Bits',0,6,142,9,16,4,27
	.byte	'K2DIV',0,1
	.word	290
	.byte	3,5,2,35,0,27
	.byte	'reserved_3',0,4
	.word	994
	.byte	29,0,2,35,0,0,25
	.byte	'Ifx_SCU_SYSPLLCON1_Bits',0,6,146,9,3
	.word	19535
	.byte	26
	.byte	'_Ifx_SCU_SYSPLLCON2_Bits',0,6,149,9,16,4,27
	.byte	'MODCFG',0,2
	.word	218
	.byte	16,0,2,35,0,27
	.byte	'reserved_16',0,2
	.word	218
	.byte	16,0,2,35,2,0,25
	.byte	'Ifx_SCU_SYSPLLCON2_Bits',0,6,153,9,3
	.word	19639
	.byte	26
	.byte	'_Ifx_SCU_SYSPLLSTAT_Bits',0,6,156,9,16,4,27
	.byte	'reserved_0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'PWDSTAT',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'LOCK',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'reserved_3',0,1
	.word	290
	.byte	2,3,2,35,0,27
	.byte	'K2RDY',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'reserved_6',0,1
	.word	290
	.byte	1,1,2,35,0,27
	.byte	'MODRUN',0,1
	.word	290
	.byte	1,0,2,35,0,27
	.byte	'reserved_8',0,4
	.word	994
	.byte	24,0,2,35,0,0,25
	.byte	'Ifx_SCU_SYSPLLSTAT_Bits',0,6,166,9,3
	.word	19745
	.byte	26
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,6,169,9,16,4,27
	.byte	'ESR0T',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'ESR1T',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'TRAP2',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'SMUT',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'reserved_4',0,4
	.word	994
	.byte	28,0,2,35,0,0,25
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,6,176,9,3
	.word	19968
	.byte	26
	.byte	'_Ifx_SCU_TRAPDIS0_Bits',0,6,179,9,16,4,27
	.byte	'CPU0ESR0T',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'CPU0ESR1T',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'CPU0TRAP2T',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'CPU0SMUT',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'reserved_4',0,1
	.word	290
	.byte	4,0,2,35,0,27
	.byte	'CPU1ESR0T',0,1
	.word	290
	.byte	1,7,2,35,1,27
	.byte	'CPU1ESR1T',0,1
	.word	290
	.byte	1,6,2,35,1,27
	.byte	'CPU1TRAP2T',0,1
	.word	290
	.byte	1,5,2,35,1,27
	.byte	'CPU1SMUT',0,1
	.word	290
	.byte	1,4,2,35,1,27
	.byte	'reserved_12',0,1
	.word	290
	.byte	4,0,2,35,1,27
	.byte	'CPU2ESR0T',0,1
	.word	290
	.byte	1,7,2,35,2,27
	.byte	'CPU2ESR1T',0,1
	.word	290
	.byte	1,6,2,35,2,27
	.byte	'CPU2TRAP2T',0,1
	.word	290
	.byte	1,5,2,35,2,27
	.byte	'CPU2SMUT',0,1
	.word	290
	.byte	1,4,2,35,2,27
	.byte	'reserved_20',0,1
	.word	290
	.byte	4,0,2,35,2,27
	.byte	'CPU3ESR0T',0,1
	.word	290
	.byte	1,7,2,35,3,27
	.byte	'CPU3ESR1T',0,1
	.word	290
	.byte	1,6,2,35,3,27
	.byte	'CPU3TRAP2T',0,1
	.word	290
	.byte	1,5,2,35,3,27
	.byte	'CPU3SMUT',0,1
	.word	290
	.byte	1,4,2,35,3,27
	.byte	'reserved_28',0,1
	.word	290
	.byte	4,0,2,35,3,0,25
	.byte	'Ifx_SCU_TRAPDIS0_Bits',0,6,201,9,3
	.word	20116
	.byte	26
	.byte	'_Ifx_SCU_TRAPDIS1_Bits',0,6,204,9,16,4,27
	.byte	'CPU4ESR0T',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'CPU4ESR1T',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'CPU4TRAP2T',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'CPU4SMUT',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'reserved_4',0,1
	.word	290
	.byte	4,0,2,35,0,27
	.byte	'CPU5ESR0T',0,1
	.word	290
	.byte	1,7,2,35,1,27
	.byte	'CPU5ESR1T',0,1
	.word	290
	.byte	1,6,2,35,1,27
	.byte	'CPU5TRAP2T',0,1
	.word	290
	.byte	1,5,2,35,1,27
	.byte	'CPU5SMUT',0,1
	.word	290
	.byte	1,4,2,35,1,27
	.byte	'reserved_12',0,1
	.word	290
	.byte	4,0,2,35,1,27
	.byte	'reserved_16',0,2
	.word	218
	.byte	16,0,2,35,2,0,25
	.byte	'Ifx_SCU_TRAPDIS1_Bits',0,6,217,9,3
	.word	20604
	.byte	26
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,6,220,9,16,4,27
	.byte	'ESR0T',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'ESR1T',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'TRAP2',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'SMUT',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'reserved_4',0,4
	.word	994
	.byte	28,0,2,35,0,0,25
	.byte	'Ifx_SCU_TRAPSET_Bits',0,6,227,9,3
	.word	20901
	.byte	26
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,6,230,9,16,4,27
	.byte	'ESR0T',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'ESR1T',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'TRAP2',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'SMUT',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'reserved_4',0,4
	.word	994
	.byte	28,0,2,35,0,0,25
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,6,237,9,3
	.word	21049
	.byte	26
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,6,240,9,16,4,27
	.byte	'ENDINIT',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'LCK',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'PW',0,4
	.word	6545
	.byte	14,16,2,35,0,27
	.byte	'REL',0,4
	.word	6545
	.byte	16,0,2,35,0,0,25
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,6,246,9,3
	.word	21199
	.byte	26
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,6,249,9,16,4,27
	.byte	'reserved_0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'reserved_1',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'IR0',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'DR',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'reserved_4',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'IR1',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'UR',0,1
	.word	290
	.byte	1,1,2,35,0,27
	.byte	'PAR',0,1
	.word	290
	.byte	1,0,2,35,0,27
	.byte	'TCR',0,1
	.word	290
	.byte	1,7,2,35,1,27
	.byte	'TCTR',0,1
	.word	290
	.byte	7,0,2,35,1,27
	.byte	'reserved_16',0,2
	.word	218
	.byte	16,0,2,35,2,0,25
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,6,134,10,3
	.word	21329
	.byte	26
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,6,137,10,16,4,27
	.byte	'AE',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'OE',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'IS0',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'DS',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'TO',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'IS1',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'US',0,1
	.word	290
	.byte	1,1,2,35,0,27
	.byte	'PAS',0,1
	.word	290
	.byte	1,0,2,35,0,27
	.byte	'TCS',0,1
	.word	290
	.byte	1,7,2,35,1,27
	.byte	'TCT',0,1
	.word	290
	.byte	7,0,2,35,1,27
	.byte	'TIM',0,2
	.word	218
	.byte	16,0,2,35,2,0,25
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,6,150,10,3
	.word	21589
	.byte	26
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,6,153,10,16,4,27
	.byte	'ENDINIT',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'LCK',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'PW',0,4
	.word	6545
	.byte	14,16,2,35,0,27
	.byte	'REL',0,4
	.word	6545
	.byte	16,0,2,35,0,0,25
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,6,159,10,3
	.word	21812
	.byte	26
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,6,162,10,16,4,27
	.byte	'CLRIRF',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'reserved_1',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'IR0',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'DR',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'reserved_4',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'IR1',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'UR',0,1
	.word	290
	.byte	1,1,2,35,0,27
	.byte	'PAR',0,1
	.word	290
	.byte	1,0,2,35,0,27
	.byte	'TCR',0,1
	.word	290
	.byte	1,7,2,35,1,27
	.byte	'TCTR',0,1
	.word	290
	.byte	7,0,2,35,1,27
	.byte	'reserved_16',0,2
	.word	218
	.byte	16,0,2,35,2,0,25
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,6,175,10,3
	.word	21938
	.byte	26
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,6,178,10,16,4,27
	.byte	'AE',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'OE',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'IS0',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'DS',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'TO',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'IS1',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'US',0,1
	.word	290
	.byte	1,1,2,35,0,27
	.byte	'PAS',0,1
	.word	290
	.byte	1,0,2,35,0,27
	.byte	'TCS',0,1
	.word	290
	.byte	1,7,2,35,1,27
	.byte	'TCT',0,1
	.word	290
	.byte	7,0,2,35,1,27
	.byte	'TIM',0,2
	.word	218
	.byte	16,0,2,35,2,0,25
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,6,191,10,3
	.word	22190
	.byte	28,6,199,10,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	2317
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_ACCEN00',0,6,204,10,3
	.word	22409
	.byte	28,6,207,10,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	2876
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_ACCEN01',0,6,212,10,3
	.word	22474
	.byte	28,6,215,10,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	2955
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_ACCEN10',0,6,220,10,3
	.word	22539
	.byte	28,6,223,10,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	3515
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_ACCEN11',0,6,228,10,3
	.word	22604
	.byte	28,6,231,10,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	3596
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_ARSTDIS',0,6,236,10,3
	.word	22669
	.byte	28,6,239,10,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	3813
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_CCUCON0',0,6,244,10,3
	.word	22734
	.byte	28,6,247,10,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	4086
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_CCUCON1',0,6,252,10,3
	.word	22799
	.byte	28,6,255,10,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	4412
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_CCUCON10',0,6,132,11,3
	.word	22864
	.byte	28,6,135,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	4514
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_CCUCON11',0,6,140,11,3
	.word	22930
	.byte	28,6,143,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	4616
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_CCUCON2',0,6,148,11,3
	.word	22996
	.byte	28,6,151,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	4890
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_CCUCON3',0,6,156,11,3
	.word	23061
	.byte	28,6,159,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	5259
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_CCUCON4',0,6,164,11,3
	.word	23126
	.byte	28,6,167,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	5439
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_CCUCON5',0,6,172,11,3
	.word	23191
	.byte	28,6,175,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	5608
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_CCUCON6',0,6,180,11,3
	.word	23256
	.byte	28,6,183,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	5708
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_CCUCON7',0,6,188,11,3
	.word	23321
	.byte	28,6,191,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	5808
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_CCUCON8',0,6,196,11,3
	.word	23386
	.byte	28,6,199,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	5908
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_CCUCON9',0,6,204,11,3
	.word	23451
	.byte	28,6,207,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	6008
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_CHIPID',0,6,212,11,3
	.word	23516
	.byte	28,6,215,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	6211
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_DTSCLIM',0,6,220,11,3
	.word	23580
	.byte	28,6,223,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	6443
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_DTSCSTAT',0,6,228,11,3
	.word	23645
	.byte	28,6,231,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	6561
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_EICON0',0,6,236,11,3
	.word	23711
	.byte	28,6,239,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	6689
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_EICON1',0,6,244,11,3
	.word	23775
	.byte	28,6,247,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	6878
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_EICR',0,6,252,11,3
	.word	23839
	.byte	28,6,255,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	7242
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_EIFILT',0,6,132,12,3
	.word	23901
	.byte	28,6,135,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	7681
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_EIFR',0,6,140,12,3
	.word	23965
	.byte	28,6,143,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	7892
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_EISR',0,6,148,12,3
	.word	24027
	.byte	28,6,151,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	8068
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_EMSR',0,6,156,12,3
	.word	24089
	.byte	28,6,159,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	8262
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_EMSSW',0,6,164,12,3
	.word	24151
	.byte	28,6,167,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	8397
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX',0,6,172,12,3
	.word	24214
	.byte	28,6,175,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	8533
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_ESROCFG',0,6,180,12,3
	.word	24287
	.byte	28,6,183,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	8644
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_EXTCON',0,6,188,12,3
	.word	24352
	.byte	28,6,191,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	8862
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_FDR',0,6,196,12,3
	.word	24416
	.byte	28,6,199,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	9025
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_FMR',0,6,204,12,3
	.word	24477
	.byte	28,6,207,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	9361
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_ID',0,6,212,12,3
	.word	24538
	.byte	28,6,215,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	9468
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_IGCR',0,6,220,12,3
	.word	24598
	.byte	28,6,223,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	9920
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_IN',0,6,228,12,3
	.word	24660
	.byte	28,6,231,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	10019
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_IOCR',0,6,236,12,3
	.word	24720
	.byte	28,6,239,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	10169
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_LBISTCTRL0',0,6,244,12,3
	.word	24782
	.byte	28,6,247,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	10407
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_LBISTCTRL1',0,6,252,12,3
	.word	24850
	.byte	28,6,255,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	10568
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_LBISTCTRL2',0,6,132,13,3
	.word	24918
	.byte	28,6,135,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	10674
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_LBISTCTRL3',0,6,140,13,3
	.word	24986
	.byte	28,6,143,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	10760
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_LCLCON0',0,6,148,13,3
	.word	25054
	.byte	28,6,151,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	10928
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_LCLCON1',0,6,156,13,3
	.word	25119
	.byte	28,6,159,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	11096
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_LCLTEST',0,6,164,13,3
	.word	25184
	.byte	28,6,167,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	11410
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_MANID',0,6,172,13,3
	.word	25249
	.byte	28,6,175,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	11521
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_OMR',0,6,180,13,3
	.word	25312
	.byte	28,6,183,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	11679
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_OSCCON',0,6,188,13,3
	.word	25373
	.byte	28,6,191,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	12090
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_OUT',0,6,196,13,3
	.word	25437
	.byte	28,6,199,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	12191
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_OVCCON',0,6,204,13,3
	.word	25498
	.byte	28,6,207,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	12509
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_OVCENABLE',0,6,212,13,3
	.word	25562
	.byte	28,6,215,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	12696
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_PDISC',0,6,220,13,3
	.word	25629
	.byte	28,6,223,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	12807
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_PDR',0,6,228,13,3
	.word	25692
	.byte	28,6,231,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	12940
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_PDRR',0,6,236,13,3
	.word	25753
	.byte	28,6,239,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	13143
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_PERPLLCON0',0,6,244,13,3
	.word	25815
	.byte	28,6,247,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	13383
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_PERPLLCON1',0,6,252,13,3
	.word	25883
	.byte	28,6,255,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	13527
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_PERPLLSTAT',0,6,132,14,3
	.word	25951
	.byte	28,6,135,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	13749
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_PMCSR0',0,6,140,14,3
	.word	26019
	.byte	28,6,143,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	13885
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_PMCSR1',0,6,148,14,3
	.word	26083
	.byte	28,6,151,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	14021
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_PMCSR2',0,6,156,14,3
	.word	26147
	.byte	28,6,159,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	14157
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_PMCSR3',0,6,164,14,3
	.word	26211
	.byte	28,6,167,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	14293
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_PMCSR4',0,6,172,14,3
	.word	26275
	.byte	28,6,175,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	14429
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_PMCSR5',0,6,180,14,3
	.word	26339
	.byte	28,6,183,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	14565
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_PMSTAT0',0,6,188,14,3
	.word	26403
	.byte	28,6,191,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	14837
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_PMSWCR1',0,6,196,14,3
	.word	26468
	.byte	28,6,199,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	15082
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_PMTRCSR0',0,6,204,14,3
	.word	26533
	.byte	28,6,207,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	15470
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_PMTRCSR1',0,6,212,14,3
	.word	26599
	.byte	28,6,215,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	15588
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_PMTRCSR2',0,6,220,14,3
	.word	26665
	.byte	28,6,223,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	15831
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_PMTRCSR3',0,6,228,14,3
	.word	26731
	.byte	28,6,231,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	16098
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_RSTCON',0,6,236,14,3
	.word	26797
	.byte	28,6,239,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	16357
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_RSTCON2',0,6,244,14,3
	.word	26861
	.byte	28,6,247,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	16662
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_RSTCON3',0,6,252,14,3
	.word	26926
	.byte	28,6,255,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	16743
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_RSTSTAT',0,6,132,15,3
	.word	26991
	.byte	28,6,135,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	17292
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_SEICON0',0,6,140,15,3
	.word	27056
	.byte	28,6,143,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	17422
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_SEICON1',0,6,148,15,3
	.word	27121
	.byte	28,6,151,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	17613
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_SEISR',0,6,156,15,3
	.word	27186
	.byte	28,6,159,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	17791
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_STCON',0,6,164,15,3
	.word	27249
	.byte	28,6,167,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	17942
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_STMEM1',0,6,172,15,3
	.word	27312
	.byte	28,6,175,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	18014
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_STMEM2',0,6,180,15,3
	.word	27376
	.byte	28,6,183,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	18086
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_STMEM3',0,6,188,15,3
	.word	27440
	.byte	28,6,191,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	18158
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_STMEM4',0,6,196,15,3
	.word	27504
	.byte	28,6,199,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	18230
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_STMEM5',0,6,204,15,3
	.word	27568
	.byte	28,6,207,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	18302
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_STMEM6',0,6,212,15,3
	.word	27632
	.byte	28,6,215,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	18374
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_STSTAT',0,6,220,15,3
	.word	27696
	.byte	28,6,223,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	18703
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_SWAPCTRL',0,6,228,15,3
	.word	27760
	.byte	28,6,231,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	18823
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_SWRSTCON',0,6,236,15,3
	.word	27826
	.byte	28,6,239,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	18993
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_SYSCON',0,6,244,15,3
	.word	27892
	.byte	28,6,247,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	19256
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_SYSPLLCON0',0,6,252,15,3
	.word	27956
	.byte	28,6,255,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	19535
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_SYSPLLCON1',0,6,132,16,3
	.word	28024
	.byte	28,6,135,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	19639
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_SYSPLLCON2',0,6,140,16,3
	.word	28092
	.byte	28,6,143,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	19745
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_SYSPLLSTAT',0,6,148,16,3
	.word	28160
	.byte	28,6,151,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	19968
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_TRAPCLR',0,6,156,16,3
	.word	28228
	.byte	28,6,159,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	20116
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_TRAPDIS0',0,6,164,16,3
	.word	28293
	.byte	28,6,167,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	20604
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_TRAPDIS1',0,6,172,16,3
	.word	28359
	.byte	28,6,175,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	20901
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_TRAPSET',0,6,180,16,3
	.word	28425
	.byte	28,6,183,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	21049
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_TRAPSTAT',0,6,188,16,3
	.word	28490
	.byte	28,6,191,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	21199
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_WDTCPU_CON0',0,6,196,16,3
	.word	28556
	.byte	28,6,199,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	21329
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_WDTCPU_CON1',0,6,204,16,3
	.word	28625
	.byte	28,6,207,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	21589
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_WDTCPU_SR',0,6,212,16,3
	.word	28694
	.byte	28,6,215,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	21812
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_WDTS_CON0',0,6,220,16,3
	.word	28761
	.byte	28,6,223,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	21938
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_WDTS_CON1',0,6,228,16,3
	.word	28828
	.byte	28,6,231,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	22190
	.byte	4,2,35,0,0,25
	.byte	'Ifx_SCU_WDTS_SR',0,6,236,16,3
	.word	28895
	.byte	26
	.byte	'_Ifx_SCU_ESRCFGX',0,6,248,16,25,4,17
	.byte	'ESRCFGX',0
	.word	24214
	.byte	4,2,35,0,0,9
	.word	28960
	.byte	25
	.byte	'Ifx_SCU_ESRCFGX',0,6,251,16,3
	.word	29001
	.byte	26
	.byte	'_Ifx_SCU_WDTCPU',0,6,138,17,25,12,17
	.byte	'CON0',0
	.word	28556
	.byte	4,2,35,0,17
	.byte	'CON1',0
	.word	28625
	.byte	4,2,35,4,17
	.byte	'SR',0
	.word	28694
	.byte	4,2,35,8,0,9
	.word	29031
	.byte	25
	.byte	'Ifx_SCU_WDTCPU',0,6,143,17,3
	.word	29094
	.byte	26
	.byte	'_Ifx_SCU_WDTS',0,6,158,17,25,12,17
	.byte	'CON0',0
	.word	28761
	.byte	4,2,35,0,17
	.byte	'CON1',0
	.word	28828
	.byte	4,2,35,4,17
	.byte	'SR',0
	.word	28895
	.byte	4,2,35,8,0,9
	.word	29123
	.byte	25
	.byte	'Ifx_SCU_WDTS',0,6,163,17,3
	.word	29184
	.byte	26
	.byte	'_Ifx_STM_ACCEN0_Bits',0,7,70,16,4,27
	.byte	'EN0',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'EN1',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'EN2',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'EN3',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'EN4',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'EN5',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'EN6',0,1
	.word	290
	.byte	1,1,2,35,0,27
	.byte	'EN7',0,1
	.word	290
	.byte	1,0,2,35,0,27
	.byte	'EN8',0,1
	.word	290
	.byte	1,7,2,35,1,27
	.byte	'EN9',0,1
	.word	290
	.byte	1,6,2,35,1,27
	.byte	'EN10',0,1
	.word	290
	.byte	1,5,2,35,1,27
	.byte	'EN11',0,1
	.word	290
	.byte	1,4,2,35,1,27
	.byte	'EN12',0,1
	.word	290
	.byte	1,3,2,35,1,27
	.byte	'EN13',0,1
	.word	290
	.byte	1,2,2,35,1,27
	.byte	'EN14',0,1
	.word	290
	.byte	1,1,2,35,1,27
	.byte	'EN15',0,1
	.word	290
	.byte	1,0,2,35,1,27
	.byte	'EN16',0,1
	.word	290
	.byte	1,7,2,35,2,27
	.byte	'EN17',0,1
	.word	290
	.byte	1,6,2,35,2,27
	.byte	'EN18',0,1
	.word	290
	.byte	1,5,2,35,2,27
	.byte	'EN19',0,1
	.word	290
	.byte	1,4,2,35,2,27
	.byte	'EN20',0,1
	.word	290
	.byte	1,3,2,35,2,27
	.byte	'EN21',0,1
	.word	290
	.byte	1,2,2,35,2,27
	.byte	'EN22',0,1
	.word	290
	.byte	1,1,2,35,2,27
	.byte	'EN23',0,1
	.word	290
	.byte	1,0,2,35,2,27
	.byte	'EN24',0,1
	.word	290
	.byte	1,7,2,35,3,27
	.byte	'EN25',0,1
	.word	290
	.byte	1,6,2,35,3,27
	.byte	'EN26',0,1
	.word	290
	.byte	1,5,2,35,3,27
	.byte	'EN27',0,1
	.word	290
	.byte	1,4,2,35,3,27
	.byte	'EN28',0,1
	.word	290
	.byte	1,3,2,35,3,27
	.byte	'EN29',0,1
	.word	290
	.byte	1,2,2,35,3,27
	.byte	'EN30',0,1
	.word	290
	.byte	1,1,2,35,3,27
	.byte	'EN31',0,1
	.word	290
	.byte	1,0,2,35,3,0,25
	.byte	'Ifx_STM_ACCEN0_Bits',0,7,104,3
	.word	29211
	.byte	26
	.byte	'_Ifx_STM_ACCEN1_Bits',0,7,107,16,4,27
	.byte	'reserved_0',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_STM_ACCEN1_Bits',0,7,110,3
	.word	29768
	.byte	26
	.byte	'_Ifx_STM_CAP_Bits',0,7,113,16,4,27
	.byte	'STMCAP_63_32',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_STM_CAP_Bits',0,7,116,3
	.word	29845
	.byte	26
	.byte	'_Ifx_STM_CAPSV_Bits',0,7,119,16,4,27
	.byte	'STMCAP_63_32',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_STM_CAPSV_Bits',0,7,122,3
	.word	29918
	.byte	26
	.byte	'_Ifx_STM_CLC_Bits',0,7,125,16,4,27
	.byte	'DISR',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'DISS',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'reserved_2',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'EDIS',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'reserved_4',0,4
	.word	994
	.byte	28,0,2,35,0,0,25
	.byte	'Ifx_STM_CLC_Bits',0,7,132,1,3
	.word	29995
	.byte	26
	.byte	'_Ifx_STM_CMCON_Bits',0,7,135,1,16,4,27
	.byte	'MSIZE0',0,1
	.word	290
	.byte	5,3,2,35,0,27
	.byte	'reserved_5',0,1
	.word	290
	.byte	3,0,2,35,0,27
	.byte	'MSTART0',0,1
	.word	290
	.byte	5,3,2,35,1,27
	.byte	'reserved_13',0,1
	.word	290
	.byte	3,0,2,35,1,27
	.byte	'MSIZE1',0,1
	.word	290
	.byte	5,3,2,35,2,27
	.byte	'reserved_21',0,1
	.word	290
	.byte	3,0,2,35,2,27
	.byte	'MSTART1',0,1
	.word	290
	.byte	5,3,2,35,3,27
	.byte	'reserved_29',0,1
	.word	290
	.byte	3,0,2,35,3,0,25
	.byte	'Ifx_STM_CMCON_Bits',0,7,145,1,3
	.word	30137
	.byte	26
	.byte	'_Ifx_STM_CMP_Bits',0,7,148,1,16,4,27
	.byte	'CMPVAL',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_STM_CMP_Bits',0,7,151,1,3
	.word	30357
	.byte	26
	.byte	'_Ifx_STM_ICR_Bits',0,7,154,1,16,4,27
	.byte	'CMP0EN',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'CMP0IR',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'CMP0OS',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'reserved_3',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'CMP1EN',0,1
	.word	290
	.byte	1,3,2,35,0,27
	.byte	'CMP1IR',0,1
	.word	290
	.byte	1,2,2,35,0,27
	.byte	'CMP1OS',0,1
	.word	290
	.byte	1,1,2,35,0,27
	.byte	'reserved_7',0,4
	.word	994
	.byte	25,0,2,35,0,0,25
	.byte	'Ifx_STM_ICR_Bits',0,7,164,1,3
	.word	30426
	.byte	26
	.byte	'_Ifx_STM_ID_Bits',0,7,167,1,16,4,27
	.byte	'MODREV',0,1
	.word	290
	.byte	8,0,2,35,0,27
	.byte	'MODTYPE',0,1
	.word	290
	.byte	8,0,2,35,1,27
	.byte	'MODNUM',0,2
	.word	218
	.byte	16,0,2,35,2,0,25
	.byte	'Ifx_STM_ID_Bits',0,7,172,1,3
	.word	30629
	.byte	26
	.byte	'_Ifx_STM_ISCR_Bits',0,7,175,1,16,4,27
	.byte	'CMP0IRR',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'CMP0IRS',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'CMP1IRR',0,1
	.word	290
	.byte	1,5,2,35,0,27
	.byte	'CMP1IRS',0,1
	.word	290
	.byte	1,4,2,35,0,27
	.byte	'reserved_4',0,4
	.word	994
	.byte	28,0,2,35,0,0,25
	.byte	'Ifx_STM_ISCR_Bits',0,7,182,1,3
	.word	30733
	.byte	26
	.byte	'_Ifx_STM_KRST0_Bits',0,7,185,1,16,4,27
	.byte	'RST',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'RSTSTAT',0,1
	.word	290
	.byte	1,6,2,35,0,27
	.byte	'reserved_2',0,4
	.word	994
	.byte	30,0,2,35,0,0,25
	.byte	'Ifx_STM_KRST0_Bits',0,7,190,1,3
	.word	30884
	.byte	26
	.byte	'_Ifx_STM_KRST1_Bits',0,7,193,1,16,4,27
	.byte	'RST',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'reserved_1',0,4
	.word	994
	.byte	31,0,2,35,0,0,25
	.byte	'Ifx_STM_KRST1_Bits',0,7,197,1,3
	.word	30995
	.byte	26
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,7,200,1,16,4,27
	.byte	'CLR',0,1
	.word	290
	.byte	1,7,2,35,0,27
	.byte	'reserved_1',0,4
	.word	994
	.byte	31,0,2,35,0,0,25
	.byte	'Ifx_STM_KRSTCLR_Bits',0,7,204,1,3
	.word	31087
	.byte	26
	.byte	'_Ifx_STM_OCS_Bits',0,7,207,1,16,4,27
	.byte	'reserved_0',0,1
	.word	290
	.byte	3,5,2,35,0,27
	.byte	'reserved_3',0,4
	.word	994
	.byte	21,8,2,35,0,27
	.byte	'SUS',0,1
	.word	290
	.byte	4,4,2,35,3,27
	.byte	'SUS_P',0,1
	.word	290
	.byte	1,3,2,35,3,27
	.byte	'SUSSTA',0,1
	.word	290
	.byte	1,2,2,35,3,27
	.byte	'reserved_30',0,1
	.word	290
	.byte	2,0,2,35,3,0,25
	.byte	'Ifx_STM_OCS_Bits',0,7,215,1,3
	.word	31183
	.byte	26
	.byte	'_Ifx_STM_TIM0_Bits',0,7,218,1,16,4,27
	.byte	'STM_31_0',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_STM_TIM0_Bits',0,7,221,1,3
	.word	31351
	.byte	26
	.byte	'_Ifx_STM_TIM0SV_Bits',0,7,224,1,16,4,27
	.byte	'STM_31_0',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_STM_TIM0SV_Bits',0,7,227,1,3
	.word	31424
	.byte	26
	.byte	'_Ifx_STM_TIM1_Bits',0,7,230,1,16,4,27
	.byte	'STM_35_4',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_STM_TIM1_Bits',0,7,233,1,3
	.word	31501
	.byte	26
	.byte	'_Ifx_STM_TIM2_Bits',0,7,236,1,16,4,27
	.byte	'STM_39_8',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_STM_TIM2_Bits',0,7,239,1,3
	.word	31574
	.byte	26
	.byte	'_Ifx_STM_TIM3_Bits',0,7,242,1,16,4,27
	.byte	'STM_43_12',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_STM_TIM3_Bits',0,7,245,1,3
	.word	31647
	.byte	26
	.byte	'_Ifx_STM_TIM4_Bits',0,7,248,1,16,4,27
	.byte	'STM_47_16',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_STM_TIM4_Bits',0,7,251,1,3
	.word	31721
	.byte	26
	.byte	'_Ifx_STM_TIM5_Bits',0,7,254,1,16,4,27
	.byte	'STM_51_20',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_STM_TIM5_Bits',0,7,129,2,3
	.word	31795
	.byte	26
	.byte	'_Ifx_STM_TIM6_Bits',0,7,132,2,16,4,27
	.byte	'STM_63_32',0,4
	.word	994
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_STM_TIM6_Bits',0,7,135,2,3
	.word	31869
	.byte	28,7,143,2,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	29211
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_ACCEN0',0,7,148,2,3
	.word	31943
	.byte	28,7,151,2,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	29768
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_ACCEN1',0,7,156,2,3
	.word	32007
	.byte	28,7,159,2,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	29845
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_CAP',0,7,164,2,3
	.word	32071
	.byte	28,7,167,2,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	29918
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_CAPSV',0,7,172,2,3
	.word	32132
	.byte	28,7,175,2,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	29995
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_CLC',0,7,180,2,3
	.word	32195
	.byte	28,7,183,2,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	30137
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_CMCON',0,7,188,2,3
	.word	32256
	.byte	28,7,191,2,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	30357
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_CMP',0,7,196,2,3
	.word	32319
	.byte	28,7,199,2,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	30426
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_ICR',0,7,204,2,3
	.word	32380
	.byte	28,7,207,2,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	30629
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_ID',0,7,212,2,3
	.word	32441
	.byte	28,7,215,2,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	30733
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_ISCR',0,7,220,2,3
	.word	32501
	.byte	28,7,223,2,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	30884
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_KRST0',0,7,228,2,3
	.word	32563
	.byte	28,7,231,2,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	30995
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_KRST1',0,7,236,2,3
	.word	32626
	.byte	28,7,239,2,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	31087
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_KRSTCLR',0,7,244,2,3
	.word	32689
	.byte	28,7,247,2,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	31183
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_OCS',0,7,252,2,3
	.word	32754
	.byte	28,7,255,2,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	31351
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_TIM0',0,7,132,3,3
	.word	32815
	.byte	28,7,135,3,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	31424
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_TIM0SV',0,7,140,3,3
	.word	32877
	.byte	28,7,143,3,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	31501
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_TIM1',0,7,148,3,3
	.word	32941
	.byte	28,7,151,3,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	31574
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_TIM2',0,7,156,3,3
	.word	33003
	.byte	28,7,159,3,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	31647
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_TIM3',0,7,164,3,3
	.word	33065
	.byte	28,7,167,3,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	31721
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_TIM4',0,7,172,3,3
	.word	33127
	.byte	28,7,175,3,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	31795
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_TIM5',0,7,180,3,3
	.word	33189
	.byte	28,7,183,3,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	31869
	.byte	4,2,35,0,0,25
	.byte	'Ifx_STM_TIM6',0,7,188,3,3
	.word	33251
	.byte	26
	.byte	'_Ifx_CPU_A_Bits',0,8,70,16,4,27
	.byte	'ADDR',0,4
	.word	6545
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_CPU_A_Bits',0,8,73,3
	.word	33313
	.byte	26
	.byte	'_Ifx_CPU_BIV_Bits',0,8,76,16,4,27
	.byte	'VSS',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'BIV',0,4
	.word	6545
	.byte	31,0,2,35,0,0,25
	.byte	'Ifx_CPU_BIV_Bits',0,8,80,3
	.word	33374
	.byte	26
	.byte	'_Ifx_CPU_BLK_OMASK_Bits',0,8,83,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	5,27,2,35,0,27
	.byte	'OMASK',0,4
	.word	6545
	.byte	12,15,2,35,0,27
	.byte	'ONE',0,4
	.word	6545
	.byte	11,4,2,35,0,27
	.byte	'reserved_28',0,4
	.word	6545
	.byte	4,0,2,35,0,0,25
	.byte	'Ifx_CPU_BLK_OMASK_Bits',0,8,89,3
	.word	33453
	.byte	26
	.byte	'_Ifx_CPU_BLK_OTAR_Bits',0,8,92,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	5,27,2,35,0,27
	.byte	'TBASE',0,4
	.word	6545
	.byte	23,4,2,35,0,27
	.byte	'reserved_28',0,4
	.word	6545
	.byte	4,0,2,35,0,0,25
	.byte	'Ifx_CPU_BLK_OTAR_Bits',0,8,97,3
	.word	33591
	.byte	26
	.byte	'_Ifx_CPU_BLK_RABR_Bits',0,8,100,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	5,27,2,35,0,27
	.byte	'OBASE',0,4
	.word	6545
	.byte	17,10,2,35,0,27
	.byte	'reserved_22',0,4
	.word	6545
	.byte	2,8,2,35,0,27
	.byte	'OMEM',0,4
	.word	6545
	.byte	4,4,2,35,0,27
	.byte	'reserved_28',0,4
	.word	6545
	.byte	3,1,2,35,0,27
	.byte	'OVEN',0,4
	.word	6545
	.byte	1,0,2,35,0,0,25
	.byte	'Ifx_CPU_BLK_RABR_Bits',0,8,108,3
	.word	33712
	.byte	26
	.byte	'_Ifx_CPU_BTV_Bits',0,8,111,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'BTV',0,4
	.word	6545
	.byte	31,0,2,35,0,0,25
	.byte	'Ifx_CPU_BTV_Bits',0,8,115,3
	.word	33888
	.byte	26
	.byte	'_Ifx_CPU_CCNT_Bits',0,8,118,16,4,27
	.byte	'COUNTVALUE',0,4
	.word	6545
	.byte	31,1,2,35,0,27
	.byte	'SOVF',0,4
	.word	6545
	.byte	1,0,2,35,0,0,25
	.byte	'Ifx_CPU_CCNT_Bits',0,8,122,3
	.word	33974
	.byte	26
	.byte	'_Ifx_CPU_CCTRL_Bits',0,8,125,16,4,27
	.byte	'CM',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'CE',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'M1',0,4
	.word	6545
	.byte	3,27,2,35,0,27
	.byte	'M2',0,4
	.word	6545
	.byte	3,24,2,35,0,27
	.byte	'M3',0,4
	.word	6545
	.byte	3,21,2,35,0,27
	.byte	'reserved_11',0,4
	.word	6545
	.byte	21,0,2,35,0,0,25
	.byte	'Ifx_CPU_CCTRL_Bits',0,8,133,1,3
	.word	34063
	.byte	26
	.byte	'_Ifx_CPU_COMPAT_Bits',0,8,136,1,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	3,29,2,35,0,27
	.byte	'RM',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'SP',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'reserved_5',0,4
	.word	6545
	.byte	27,0,2,35,0,0,25
	.byte	'Ifx_CPU_COMPAT_Bits',0,8,142,1,3
	.word	34210
	.byte	26
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,8,145,1,16,4,27
	.byte	'CORE_ID',0,4
	.word	6545
	.byte	3,29,2,35,0,27
	.byte	'reserved_3',0,4
	.word	6545
	.byte	29,0,2,35,0,0,25
	.byte	'Ifx_CPU_CORE_ID_Bits',0,8,149,1,3
	.word	34339
	.byte	26
	.byte	'_Ifx_CPU_CPR_L_Bits',0,8,152,1,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	5,27,2,35,0,27
	.byte	'LOWBND',0,4
	.word	6545
	.byte	27,0,2,35,0,0,25
	.byte	'Ifx_CPU_CPR_L_Bits',0,8,156,1,3
	.word	34439
	.byte	26
	.byte	'_Ifx_CPU_CPR_U_Bits',0,8,159,1,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	5,27,2,35,0,27
	.byte	'UPPBND',0,4
	.word	6545
	.byte	27,0,2,35,0,0,25
	.byte	'Ifx_CPU_CPR_U_Bits',0,8,163,1,3
	.word	34534
	.byte	26
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,8,166,1,16,4,27
	.byte	'MOD_REV',0,4
	.word	6545
	.byte	8,24,2,35,0,27
	.byte	'MOD_32B',0,4
	.word	6545
	.byte	8,16,2,35,0,27
	.byte	'MOD',0,4
	.word	6545
	.byte	16,0,2,35,0,0,25
	.byte	'Ifx_CPU_CPU_ID_Bits',0,8,171,1,3
	.word	34629
	.byte	26
	.byte	'_Ifx_CPU_CPXE_Bits',0,8,174,1,16,4,27
	.byte	'XE_N',0,4
	.word	6545
	.byte	10,22,2,35,0,27
	.byte	'reserved_10',0,4
	.word	6545
	.byte	22,0,2,35,0,0,25
	.byte	'Ifx_CPU_CPXE_Bits',0,8,178,1,3
	.word	34739
	.byte	26
	.byte	'_Ifx_CPU_CREVT_Bits',0,8,181,1,16,4,27
	.byte	'EVTA',0,4
	.word	6545
	.byte	3,29,2,35,0,27
	.byte	'BBM',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'BOD',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'SUSP',0,4
	.word	6545
	.byte	1,26,2,35,0,27
	.byte	'CNT',0,4
	.word	6545
	.byte	2,24,2,35,0,27
	.byte	'reserved_8',0,4
	.word	6545
	.byte	24,0,2,35,0,0,25
	.byte	'Ifx_CPU_CREVT_Bits',0,8,189,1,3
	.word	34831
	.byte	26
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,8,192,1,16,4,27
	.byte	'CID',0,4
	.word	6545
	.byte	3,29,2,35,0,27
	.byte	'reserved_3',0,4
	.word	6545
	.byte	29,0,2,35,0,0,25
	.byte	'Ifx_CPU_CUS_ID_Bits',0,8,196,1,3
	.word	34985
	.byte	26
	.byte	'_Ifx_CPU_D_Bits',0,8,199,1,16,4,27
	.byte	'DATA',0,4
	.word	6545
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_CPU_D_Bits',0,8,202,1,3
	.word	35079
	.byte	26
	.byte	'_Ifx_CPU_DATR_Bits',0,8,205,1,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	3,29,2,35,0,27
	.byte	'SBE',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'reserved_4',0,4
	.word	6545
	.byte	5,23,2,35,0,27
	.byte	'CWE',0,4
	.word	6545
	.byte	1,22,2,35,0,27
	.byte	'CFE',0,4
	.word	6545
	.byte	1,21,2,35,0,27
	.byte	'reserved_11',0,4
	.word	6545
	.byte	3,18,2,35,0,27
	.byte	'SOE',0,4
	.word	6545
	.byte	1,17,2,35,0,27
	.byte	'reserved_15',0,4
	.word	6545
	.byte	1,16,2,35,0,27
	.byte	'reserved_16',0,4
	.word	6545
	.byte	16,0,2,35,0,0,25
	.byte	'Ifx_CPU_DATR_Bits',0,8,216,1,3
	.word	35142
	.byte	26
	.byte	'_Ifx_CPU_DBGSR_Bits',0,8,219,1,16,4,27
	.byte	'DE',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'HALT',0,4
	.word	6545
	.byte	2,29,2,35,0,27
	.byte	'SIH',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'SUSP',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'reserved_5',0,4
	.word	6545
	.byte	1,26,2,35,0,27
	.byte	'PREVSUSP',0,4
	.word	6545
	.byte	1,25,2,35,0,27
	.byte	'PEVT',0,4
	.word	6545
	.byte	1,24,2,35,0,27
	.byte	'EVTSRC',0,4
	.word	6545
	.byte	5,19,2,35,0,27
	.byte	'reserved_13',0,4
	.word	6545
	.byte	19,0,2,35,0,0,25
	.byte	'Ifx_CPU_DBGSR_Bits',0,8,230,1,3
	.word	35368
	.byte	26
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,8,233,1,16,4,27
	.byte	'DTA',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'reserved_1',0,4
	.word	6545
	.byte	31,0,2,35,0,0,25
	.byte	'Ifx_CPU_DBGTCR_Bits',0,8,237,1,3
	.word	35583
	.byte	26
	.byte	'_Ifx_CPU_DCON0_Bits',0,8,240,1,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'DCBYP',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'reserved_2',0,4
	.word	6545
	.byte	30,0,2,35,0,0,25
	.byte	'Ifx_CPU_DCON0_Bits',0,8,245,1,3
	.word	35677
	.byte	26
	.byte	'_Ifx_CPU_DCON2_Bits',0,8,248,1,16,4,27
	.byte	'DCACHE_SZE',0,4
	.word	6545
	.byte	16,16,2,35,0,27
	.byte	'DSCRATCH_SZE',0,4
	.word	6545
	.byte	16,0,2,35,0,0,25
	.byte	'Ifx_CPU_DCON2_Bits',0,8,252,1,3
	.word	35793
	.byte	26
	.byte	'_Ifx_CPU_DCX_Bits',0,8,255,1,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	6,26,2,35,0,27
	.byte	'DCXVALUE',0,4
	.word	6545
	.byte	26,0,2,35,0,0,25
	.byte	'Ifx_CPU_DCX_Bits',0,8,131,2,3
	.word	35894
	.byte	26
	.byte	'_Ifx_CPU_DEADD_Bits',0,8,134,2,16,4,27
	.byte	'ERROR_ADDRESS',0,4
	.word	6545
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_CPU_DEADD_Bits',0,8,137,2,3
	.word	35987
	.byte	26
	.byte	'_Ifx_CPU_DIEAR_Bits',0,8,140,2,16,4,27
	.byte	'TA',0,4
	.word	6545
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_CPU_DIEAR_Bits',0,8,143,2,3
	.word	36067
	.byte	26
	.byte	'_Ifx_CPU_DIETR_Bits',0,8,146,2,16,4,27
	.byte	'IED',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'IE_T',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'IE_C',0,4
	.word	6545
	.byte	1,29,2,35,0,27
	.byte	'IE_S',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'IE_BI',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'E_INFO',0,4
	.word	6545
	.byte	6,21,2,35,0,27
	.byte	'IE_UNC',0,4
	.word	6545
	.byte	1,20,2,35,0,27
	.byte	'IE_SP',0,4
	.word	6545
	.byte	1,19,2,35,0,27
	.byte	'IE_BS',0,4
	.word	6545
	.byte	1,18,2,35,0,27
	.byte	'IE_DLMU',0,4
	.word	6545
	.byte	1,17,2,35,0,27
	.byte	'IE_LPB',0,4
	.word	6545
	.byte	1,16,2,35,0,27
	.byte	'IE_MTMV',0,4
	.word	6545
	.byte	1,15,2,35,0,27
	.byte	'reserved_17',0,4
	.word	6545
	.byte	15,0,2,35,0,0,25
	.byte	'Ifx_CPU_DIETR_Bits',0,8,161,2,3
	.word	36136
	.byte	26
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,8,164,2,16,4,27
	.byte	'EN0',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'EN1',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'EN2',0,4
	.word	6545
	.byte	1,29,2,35,0,27
	.byte	'EN3',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'EN4',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'EN5',0,4
	.word	6545
	.byte	1,26,2,35,0,27
	.byte	'EN6',0,4
	.word	6545
	.byte	1,25,2,35,0,27
	.byte	'EN7',0,4
	.word	6545
	.byte	1,24,2,35,0,27
	.byte	'EN8',0,4
	.word	6545
	.byte	1,23,2,35,0,27
	.byte	'EN9',0,4
	.word	6545
	.byte	1,22,2,35,0,27
	.byte	'EN10',0,4
	.word	6545
	.byte	1,21,2,35,0,27
	.byte	'EN11',0,4
	.word	6545
	.byte	1,20,2,35,0,27
	.byte	'EN12',0,4
	.word	6545
	.byte	1,19,2,35,0,27
	.byte	'EN13',0,4
	.word	6545
	.byte	1,18,2,35,0,27
	.byte	'EN14',0,4
	.word	6545
	.byte	1,17,2,35,0,27
	.byte	'EN15',0,4
	.word	6545
	.byte	1,16,2,35,0,27
	.byte	'EN16',0,4
	.word	6545
	.byte	1,15,2,35,0,27
	.byte	'EN17',0,4
	.word	6545
	.byte	1,14,2,35,0,27
	.byte	'EN18',0,4
	.word	6545
	.byte	1,13,2,35,0,27
	.byte	'EN19',0,4
	.word	6545
	.byte	1,12,2,35,0,27
	.byte	'EN20',0,4
	.word	6545
	.byte	1,11,2,35,0,27
	.byte	'EN21',0,4
	.word	6545
	.byte	1,10,2,35,0,27
	.byte	'EN22',0,4
	.word	6545
	.byte	1,9,2,35,0,27
	.byte	'EN23',0,4
	.word	6545
	.byte	1,8,2,35,0,27
	.byte	'EN24',0,4
	.word	6545
	.byte	1,7,2,35,0,27
	.byte	'EN25',0,4
	.word	6545
	.byte	1,6,2,35,0,27
	.byte	'EN26',0,4
	.word	6545
	.byte	1,5,2,35,0,27
	.byte	'EN27',0,4
	.word	6545
	.byte	1,4,2,35,0,27
	.byte	'EN28',0,4
	.word	6545
	.byte	1,3,2,35,0,27
	.byte	'EN29',0,4
	.word	6545
	.byte	1,2,2,35,0,27
	.byte	'EN30',0,4
	.word	6545
	.byte	1,1,2,35,0,27
	.byte	'EN31',0,4
	.word	6545
	.byte	1,0,2,35,0,0,25
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,8,198,2,3
	.word	36420
	.byte	26
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,8,201,2,16,4,27
	.byte	'EN0',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'EN1',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'EN2',0,4
	.word	6545
	.byte	1,29,2,35,0,27
	.byte	'EN3',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'EN4',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'EN5',0,4
	.word	6545
	.byte	1,26,2,35,0,27
	.byte	'EN6',0,4
	.word	6545
	.byte	1,25,2,35,0,27
	.byte	'EN7',0,4
	.word	6545
	.byte	1,24,2,35,0,27
	.byte	'EN8',0,4
	.word	6545
	.byte	1,23,2,35,0,27
	.byte	'EN9',0,4
	.word	6545
	.byte	1,22,2,35,0,27
	.byte	'EN10',0,4
	.word	6545
	.byte	1,21,2,35,0,27
	.byte	'EN11',0,4
	.word	6545
	.byte	1,20,2,35,0,27
	.byte	'EN12',0,4
	.word	6545
	.byte	1,19,2,35,0,27
	.byte	'EN13',0,4
	.word	6545
	.byte	1,18,2,35,0,27
	.byte	'EN14',0,4
	.word	6545
	.byte	1,17,2,35,0,27
	.byte	'EN15',0,4
	.word	6545
	.byte	1,16,2,35,0,27
	.byte	'EN16',0,4
	.word	6545
	.byte	1,15,2,35,0,27
	.byte	'EN17',0,4
	.word	6545
	.byte	1,14,2,35,0,27
	.byte	'EN18',0,4
	.word	6545
	.byte	1,13,2,35,0,27
	.byte	'EN19',0,4
	.word	6545
	.byte	1,12,2,35,0,27
	.byte	'EN20',0,4
	.word	6545
	.byte	1,11,2,35,0,27
	.byte	'EN21',0,4
	.word	6545
	.byte	1,10,2,35,0,27
	.byte	'EN22',0,4
	.word	6545
	.byte	1,9,2,35,0,27
	.byte	'EN23',0,4
	.word	6545
	.byte	1,8,2,35,0,27
	.byte	'EN24',0,4
	.word	6545
	.byte	1,7,2,35,0,27
	.byte	'EN25',0,4
	.word	6545
	.byte	1,6,2,35,0,27
	.byte	'EN26',0,4
	.word	6545
	.byte	1,5,2,35,0,27
	.byte	'EN27',0,4
	.word	6545
	.byte	1,4,2,35,0,27
	.byte	'EN28',0,4
	.word	6545
	.byte	1,3,2,35,0,27
	.byte	'EN29',0,4
	.word	6545
	.byte	1,2,2,35,0,27
	.byte	'EN30',0,4
	.word	6545
	.byte	1,1,2,35,0,27
	.byte	'EN31',0,4
	.word	6545
	.byte	1,0,2,35,0,0,25
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,8,235,2,3
	.word	37011
	.byte	26
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,8,238,2,16,4,27
	.byte	'EN32',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'EN33',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'EN34',0,4
	.word	6545
	.byte	1,29,2,35,0,27
	.byte	'EN35',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'EN36',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'EN37',0,4
	.word	6545
	.byte	1,26,2,35,0,27
	.byte	'EN38',0,4
	.word	6545
	.byte	1,25,2,35,0,27
	.byte	'EN39',0,4
	.word	6545
	.byte	1,24,2,35,0,27
	.byte	'EN40',0,4
	.word	6545
	.byte	1,23,2,35,0,27
	.byte	'EN41',0,4
	.word	6545
	.byte	1,22,2,35,0,27
	.byte	'EN42',0,4
	.word	6545
	.byte	1,21,2,35,0,27
	.byte	'EN43',0,4
	.word	6545
	.byte	1,20,2,35,0,27
	.byte	'EN44',0,4
	.word	6545
	.byte	1,19,2,35,0,27
	.byte	'EN45',0,4
	.word	6545
	.byte	1,18,2,35,0,27
	.byte	'EN46',0,4
	.word	6545
	.byte	1,17,2,35,0,27
	.byte	'EN47',0,4
	.word	6545
	.byte	1,16,2,35,0,27
	.byte	'EN48',0,4
	.word	6545
	.byte	1,15,2,35,0,27
	.byte	'EN49',0,4
	.word	6545
	.byte	1,14,2,35,0,27
	.byte	'EN50',0,4
	.word	6545
	.byte	1,13,2,35,0,27
	.byte	'EN51',0,4
	.word	6545
	.byte	1,12,2,35,0,27
	.byte	'EN52',0,4
	.word	6545
	.byte	1,11,2,35,0,27
	.byte	'EN53',0,4
	.word	6545
	.byte	1,10,2,35,0,27
	.byte	'EN54',0,4
	.word	6545
	.byte	1,9,2,35,0,27
	.byte	'EN55',0,4
	.word	6545
	.byte	1,8,2,35,0,27
	.byte	'EN56',0,4
	.word	6545
	.byte	1,7,2,35,0,27
	.byte	'EN57',0,4
	.word	6545
	.byte	1,6,2,35,0,27
	.byte	'EN58',0,4
	.word	6545
	.byte	1,5,2,35,0,27
	.byte	'EN59',0,4
	.word	6545
	.byte	1,4,2,35,0,27
	.byte	'EN60',0,4
	.word	6545
	.byte	1,3,2,35,0,27
	.byte	'EN61',0,4
	.word	6545
	.byte	1,2,2,35,0,27
	.byte	'EN62',0,4
	.word	6545
	.byte	1,1,2,35,0,27
	.byte	'EN63',0,4
	.word	6545
	.byte	1,0,2,35,0,0,25
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,8,144,3,3
	.word	37602
	.byte	26
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,8,147,3,16,4,27
	.byte	'EN32',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'EN33',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'EN34',0,4
	.word	6545
	.byte	1,29,2,35,0,27
	.byte	'EN35',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'EN36',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'EN37',0,4
	.word	6545
	.byte	1,26,2,35,0,27
	.byte	'EN38',0,4
	.word	6545
	.byte	1,25,2,35,0,27
	.byte	'EN39',0,4
	.word	6545
	.byte	1,24,2,35,0,27
	.byte	'EN40',0,4
	.word	6545
	.byte	1,23,2,35,0,27
	.byte	'EN41',0,4
	.word	6545
	.byte	1,22,2,35,0,27
	.byte	'EN42',0,4
	.word	6545
	.byte	1,21,2,35,0,27
	.byte	'EN43',0,4
	.word	6545
	.byte	1,20,2,35,0,27
	.byte	'EN44',0,4
	.word	6545
	.byte	1,19,2,35,0,27
	.byte	'EN45',0,4
	.word	6545
	.byte	1,18,2,35,0,27
	.byte	'EN46',0,4
	.word	6545
	.byte	1,17,2,35,0,27
	.byte	'EN47',0,4
	.word	6545
	.byte	1,16,2,35,0,27
	.byte	'EN48',0,4
	.word	6545
	.byte	1,15,2,35,0,27
	.byte	'EN49',0,4
	.word	6545
	.byte	1,14,2,35,0,27
	.byte	'EN50',0,4
	.word	6545
	.byte	1,13,2,35,0,27
	.byte	'EN51',0,4
	.word	6545
	.byte	1,12,2,35,0,27
	.byte	'EN52',0,4
	.word	6545
	.byte	1,11,2,35,0,27
	.byte	'EN53',0,4
	.word	6545
	.byte	1,10,2,35,0,27
	.byte	'EN54',0,4
	.word	6545
	.byte	1,9,2,35,0,27
	.byte	'EN55',0,4
	.word	6545
	.byte	1,8,2,35,0,27
	.byte	'EN56',0,4
	.word	6545
	.byte	1,7,2,35,0,27
	.byte	'EN57',0,4
	.word	6545
	.byte	1,6,2,35,0,27
	.byte	'EN58',0,4
	.word	6545
	.byte	1,5,2,35,0,27
	.byte	'EN59',0,4
	.word	6545
	.byte	1,4,2,35,0,27
	.byte	'EN60',0,4
	.word	6545
	.byte	1,3,2,35,0,27
	.byte	'EN61',0,4
	.word	6545
	.byte	1,2,2,35,0,27
	.byte	'EN62',0,4
	.word	6545
	.byte	1,1,2,35,0,27
	.byte	'EN63',0,4
	.word	6545
	.byte	1,0,2,35,0,0,25
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,8,181,3,3
	.word	38203
	.byte	26
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,8,184,3,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	5,27,2,35,0,27
	.byte	'ADDR',0,4
	.word	6545
	.byte	27,0,2,35,0,0,25
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,8,188,3,3
	.word	38804
	.byte	26
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,8,191,3,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	5,27,2,35,0,27
	.byte	'ADDR',0,4
	.word	6545
	.byte	27,0,2,35,0,0,25
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,8,195,3,3
	.word	38919
	.byte	26
	.byte	'_Ifx_CPU_DMS_Bits',0,8,198,3,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'DMSVALUE',0,4
	.word	6545
	.byte	31,0,2,35,0,0,25
	.byte	'Ifx_CPU_DMS_Bits',0,8,202,3,3
	.word	39034
	.byte	26
	.byte	'_Ifx_CPU_DPRE_Bits',0,8,205,3,16,4,27
	.byte	'RE_N',0,4
	.word	6545
	.byte	18,14,2,35,0,27
	.byte	'reserved_18',0,4
	.word	6545
	.byte	14,0,2,35,0,0,25
	.byte	'Ifx_CPU_DPRE_Bits',0,8,209,3,3
	.word	39127
	.byte	26
	.byte	'_Ifx_CPU_DPR_L_Bits',0,8,212,3,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	3,29,2,35,0,27
	.byte	'LOWBND',0,4
	.word	6545
	.byte	29,0,2,35,0,0,25
	.byte	'Ifx_CPU_DPR_L_Bits',0,8,216,3,3
	.word	39219
	.byte	26
	.byte	'_Ifx_CPU_DPR_U_Bits',0,8,219,3,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	3,29,2,35,0,27
	.byte	'UPPBND',0,4
	.word	6545
	.byte	29,0,2,35,0,0,25
	.byte	'Ifx_CPU_DPR_U_Bits',0,8,223,3,3
	.word	39314
	.byte	26
	.byte	'_Ifx_CPU_DPWE_Bits',0,8,226,3,16,4,27
	.byte	'WE_N',0,4
	.word	6545
	.byte	18,14,2,35,0,27
	.byte	'reserved_18',0,4
	.word	6545
	.byte	14,0,2,35,0,0,25
	.byte	'Ifx_CPU_DPWE_Bits',0,8,230,3,3
	.word	39409
	.byte	26
	.byte	'_Ifx_CPU_DSTR_Bits',0,8,233,3,16,4,27
	.byte	'SRE',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'GAE',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'LBE',0,4
	.word	6545
	.byte	1,29,2,35,0,27
	.byte	'DRE',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'reserved_4',0,4
	.word	6545
	.byte	2,26,2,35,0,27
	.byte	'CRE',0,4
	.word	6545
	.byte	1,25,2,35,0,27
	.byte	'reserved_7',0,4
	.word	6545
	.byte	7,18,2,35,0,27
	.byte	'DTME',0,4
	.word	6545
	.byte	1,17,2,35,0,27
	.byte	'LOE',0,4
	.word	6545
	.byte	1,16,2,35,0,27
	.byte	'SDE',0,4
	.word	6545
	.byte	1,15,2,35,0,27
	.byte	'SCE',0,4
	.word	6545
	.byte	1,14,2,35,0,27
	.byte	'CAC',0,4
	.word	6545
	.byte	1,13,2,35,0,27
	.byte	'MPE',0,4
	.word	6545
	.byte	1,12,2,35,0,27
	.byte	'CLE',0,4
	.word	6545
	.byte	1,11,2,35,0,27
	.byte	'reserved_21',0,4
	.word	6545
	.byte	3,8,2,35,0,27
	.byte	'ALN',0,4
	.word	6545
	.byte	1,7,2,35,0,27
	.byte	'reserved_25',0,4
	.word	6545
	.byte	7,0,2,35,0,0,25
	.byte	'Ifx_CPU_DSTR_Bits',0,8,252,3,3
	.word	39501
	.byte	26
	.byte	'_Ifx_CPU_EXEVT_Bits',0,8,255,3,16,4,27
	.byte	'EVTA',0,4
	.word	6545
	.byte	3,29,2,35,0,27
	.byte	'BBM',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'BOD',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'SUSP',0,4
	.word	6545
	.byte	1,26,2,35,0,27
	.byte	'CNT',0,4
	.word	6545
	.byte	2,24,2,35,0,27
	.byte	'reserved_8',0,4
	.word	6545
	.byte	24,0,2,35,0,0,25
	.byte	'Ifx_CPU_EXEVT_Bits',0,8,135,4,3
	.word	39840
	.byte	26
	.byte	'_Ifx_CPU_FCX_Bits',0,8,138,4,16,4,27
	.byte	'FCXO',0,4
	.word	6545
	.byte	16,16,2,35,0,27
	.byte	'FCXS',0,4
	.word	6545
	.byte	4,12,2,35,0,27
	.byte	'reserved_20',0,4
	.word	6545
	.byte	12,0,2,35,0,0,25
	.byte	'Ifx_CPU_FCX_Bits',0,8,143,4,3
	.word	39994
	.byte	26
	.byte	'_Ifx_CPU_FLASHCON0_Bits',0,8,146,4,16,4,27
	.byte	'TAG1',0,4
	.word	6545
	.byte	6,26,2,35,0,27
	.byte	'reserved_6',0,4
	.word	6545
	.byte	2,24,2,35,0,27
	.byte	'TAG2',0,4
	.word	6545
	.byte	6,18,2,35,0,27
	.byte	'reserved_14',0,4
	.word	6545
	.byte	2,16,2,35,0,27
	.byte	'TAG3',0,4
	.word	6545
	.byte	6,10,2,35,0,27
	.byte	'reserved_22',0,4
	.word	6545
	.byte	2,8,2,35,0,27
	.byte	'TAG4',0,4
	.word	6545
	.byte	6,2,2,35,0,27
	.byte	'reserved_30',0,4
	.word	6545
	.byte	2,0,2,35,0,0,25
	.byte	'Ifx_CPU_FLASHCON0_Bits',0,8,156,4,3
	.word	40100
	.byte	26
	.byte	'_Ifx_CPU_FLASHCON1_Bits',0,8,159,4,16,4,27
	.byte	'STALL',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'reserved_1',0,4
	.word	6545
	.byte	15,16,2,35,0,27
	.byte	'MASKUECC',0,4
	.word	6545
	.byte	2,14,2,35,0,27
	.byte	'reserved_18',0,4
	.word	6545
	.byte	6,8,2,35,0,27
	.byte	'reserved_24',0,4
	.word	6545
	.byte	2,6,2,35,0,27
	.byte	'reserved_26',0,4
	.word	6545
	.byte	6,0,2,35,0,0,25
	.byte	'Ifx_CPU_FLASHCON1_Bits',0,8,167,4,3
	.word	40318
	.byte	26
	.byte	'_Ifx_CPU_FLASHCON2_Bits',0,8,170,4,16,4,27
	.byte	'RECDIS',0,4
	.word	6545
	.byte	2,30,2,35,0,27
	.byte	'ECCCORDIS',0,4
	.word	6545
	.byte	2,28,2,35,0,27
	.byte	'reserved_4',0,4
	.word	6545
	.byte	4,24,2,35,0,27
	.byte	'HMARGIN',0,4
	.word	6545
	.byte	2,22,2,35,0,27
	.byte	'MSEL',0,4
	.word	6545
	.byte	2,20,2,35,0,27
	.byte	'reserved_12',0,4
	.word	6545
	.byte	4,16,2,35,0,27
	.byte	'ECCSCLR',0,4
	.word	6545
	.byte	2,14,2,35,0,27
	.byte	'reserved_18',0,4
	.word	6545
	.byte	6,8,2,35,0,27
	.byte	'SBABCLR',0,4
	.word	6545
	.byte	2,6,2,35,0,27
	.byte	'DBABCLR',0,4
	.word	6545
	.byte	2,4,2,35,0,27
	.byte	'MBABCLR',0,4
	.word	6545
	.byte	2,2,2,35,0,27
	.byte	'ZBABCLR',0,4
	.word	6545
	.byte	2,0,2,35,0,0,25
	.byte	'Ifx_CPU_FLASHCON2_Bits',0,8,184,4,3
	.word	40509
	.byte	26
	.byte	'_Ifx_CPU_FLASHCON3_Bits',0,8,187,4,16,4,27
	.byte	'ECCERRINJ',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'EDCERRINJ',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'SBABERRINJ',0,4
	.word	6545
	.byte	1,29,2,35,0,27
	.byte	'DBABERRINJ',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'MBABERRINJ',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'ZBABERRINJ',0,4
	.word	6545
	.byte	1,26,2,35,0,27
	.byte	'SBERERRINJ',0,4
	.word	6545
	.byte	1,25,2,35,0,27
	.byte	'DBERERRINJ',0,4
	.word	6545
	.byte	1,24,2,35,0,27
	.byte	'NVMCERRINJ',0,4
	.word	6545
	.byte	1,23,2,35,0,27
	.byte	'FLCONERRINJ',0,4
	.word	6545
	.byte	1,22,2,35,0,27
	.byte	'reserved_10',0,4
	.word	6545
	.byte	22,0,2,35,0,0,25
	.byte	'Ifx_CPU_FLASHCON3_Bits',0,8,200,4,3
	.word	40809
	.byte	26
	.byte	'_Ifx_CPU_FLASHCON4_Bits',0,8,203,4,16,4,27
	.byte	'DDIS',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'reserved_1',0,4
	.word	6545
	.byte	31,0,2,35,0,0,25
	.byte	'Ifx_CPU_FLASHCON4_Bits',0,8,207,4,3
	.word	41114
	.byte	26
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,8,210,4,16,4,27
	.byte	'TST',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'TCL',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'reserved_2',0,4
	.word	6545
	.byte	6,24,2,35,0,27
	.byte	'RM',0,4
	.word	6545
	.byte	2,22,2,35,0,27
	.byte	'reserved_10',0,4
	.word	6545
	.byte	8,14,2,35,0,27
	.byte	'FXE',0,4
	.word	6545
	.byte	1,13,2,35,0,27
	.byte	'FUE',0,4
	.word	6545
	.byte	1,12,2,35,0,27
	.byte	'FZE',0,4
	.word	6545
	.byte	1,11,2,35,0,27
	.byte	'FVE',0,4
	.word	6545
	.byte	1,10,2,35,0,27
	.byte	'FIE',0,4
	.word	6545
	.byte	1,9,2,35,0,27
	.byte	'reserved_23',0,4
	.word	6545
	.byte	3,6,2,35,0,27
	.byte	'FX',0,4
	.word	6545
	.byte	1,5,2,35,0,27
	.byte	'FU',0,4
	.word	6545
	.byte	1,4,2,35,0,27
	.byte	'FZ',0,4
	.word	6545
	.byte	1,3,2,35,0,27
	.byte	'FV',0,4
	.word	6545
	.byte	1,2,2,35,0,27
	.byte	'FI',0,4
	.word	6545
	.byte	1,1,2,35,0,27
	.byte	'reserved_31',0,4
	.word	6545
	.byte	1,0,2,35,0,0,25
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,8,229,4,3
	.word	41215
	.byte	26
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,8,232,4,16,4,27
	.byte	'OPC',0,4
	.word	6545
	.byte	8,24,2,35,0,27
	.byte	'FMT',0,4
	.word	6545
	.byte	1,23,2,35,0,27
	.byte	'reserved_9',0,4
	.word	6545
	.byte	7,16,2,35,0,27
	.byte	'DREG',0,4
	.word	6545
	.byte	4,12,2,35,0,27
	.byte	'reserved_20',0,4
	.word	6545
	.byte	12,0,2,35,0,0,25
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,8,239,4,3
	.word	41564
	.byte	26
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,8,242,4,16,4,27
	.byte	'PC',0,4
	.word	6545
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,8,245,4,3
	.word	41724
	.byte	26
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,8,248,4,16,4,27
	.byte	'SRC1',0,4
	.word	6545
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,8,251,4,3
	.word	41805
	.byte	26
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,8,254,4,16,4,27
	.byte	'SRC2',0,4
	.word	6545
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,8,129,5,3
	.word	41892
	.byte	26
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,8,132,5,16,4,27
	.byte	'SRC3',0,4
	.word	6545
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,8,135,5,3
	.word	41979
	.byte	26
	.byte	'_Ifx_CPU_ICNT_Bits',0,8,138,5,16,4,27
	.byte	'COUNTVALUE',0,4
	.word	6545
	.byte	31,1,2,35,0,27
	.byte	'SOVF',0,4
	.word	6545
	.byte	1,0,2,35,0,0,25
	.byte	'Ifx_CPU_ICNT_Bits',0,8,142,5,3
	.word	42066
	.byte	26
	.byte	'_Ifx_CPU_ICR_Bits',0,8,145,5,16,4,27
	.byte	'CCPN',0,4
	.word	6545
	.byte	8,24,2,35,0,27
	.byte	'reserved_8',0,4
	.word	6545
	.byte	7,17,2,35,0,27
	.byte	'IE',0,4
	.word	6545
	.byte	1,16,2,35,0,27
	.byte	'PIPN',0,4
	.word	6545
	.byte	8,8,2,35,0,27
	.byte	'reserved_24',0,4
	.word	6545
	.byte	8,0,2,35,0,0,25
	.byte	'Ifx_CPU_ICR_Bits',0,8,152,5,3
	.word	42157
	.byte	26
	.byte	'_Ifx_CPU_ISP_Bits',0,8,155,5,16,4,27
	.byte	'ISP',0,4
	.word	6545
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_CPU_ISP_Bits',0,8,158,5,3
	.word	42299
	.byte	26
	.byte	'_Ifx_CPU_KRST0_Bits',0,8,161,5,16,4,27
	.byte	'RST',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'RSTSTAT',0,4
	.word	6545
	.byte	2,29,2,35,0,27
	.byte	'reserved_3',0,4
	.word	6545
	.byte	29,0,2,35,0,0,25
	.byte	'Ifx_CPU_KRST0_Bits',0,8,166,5,3
	.word	42365
	.byte	26
	.byte	'_Ifx_CPU_KRST1_Bits',0,8,169,5,16,4,27
	.byte	'RST',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'reserved_1',0,4
	.word	6545
	.byte	31,0,2,35,0,0,25
	.byte	'Ifx_CPU_KRST1_Bits',0,8,173,5,3
	.word	42476
	.byte	26
	.byte	'_Ifx_CPU_KRSTCLR_Bits',0,8,176,5,16,4,27
	.byte	'CLR',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'reserved_1',0,4
	.word	6545
	.byte	31,0,2,35,0,0,25
	.byte	'Ifx_CPU_KRSTCLR_Bits',0,8,180,5,3
	.word	42568
	.byte	26
	.byte	'_Ifx_CPU_LCX_Bits',0,8,183,5,16,4,27
	.byte	'LCXO',0,4
	.word	6545
	.byte	16,16,2,35,0,27
	.byte	'LCXS',0,4
	.word	6545
	.byte	4,12,2,35,0,27
	.byte	'reserved_20',0,4
	.word	6545
	.byte	12,0,2,35,0,0,25
	.byte	'Ifx_CPU_LCX_Bits',0,8,188,5,3
	.word	42664
	.byte	26
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,8,191,5,16,4,27
	.byte	'EN0',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'EN1',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'EN2',0,4
	.word	6545
	.byte	1,29,2,35,0,27
	.byte	'EN3',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'EN4',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'EN5',0,4
	.word	6545
	.byte	1,26,2,35,0,27
	.byte	'EN6',0,4
	.word	6545
	.byte	1,25,2,35,0,27
	.byte	'EN7',0,4
	.word	6545
	.byte	1,24,2,35,0,27
	.byte	'EN8',0,4
	.word	6545
	.byte	1,23,2,35,0,27
	.byte	'EN9',0,4
	.word	6545
	.byte	1,22,2,35,0,27
	.byte	'EN10',0,4
	.word	6545
	.byte	1,21,2,35,0,27
	.byte	'EN11',0,4
	.word	6545
	.byte	1,20,2,35,0,27
	.byte	'EN12',0,4
	.word	6545
	.byte	1,19,2,35,0,27
	.byte	'EN13',0,4
	.word	6545
	.byte	1,18,2,35,0,27
	.byte	'EN14',0,4
	.word	6545
	.byte	1,17,2,35,0,27
	.byte	'EN15',0,4
	.word	6545
	.byte	1,16,2,35,0,27
	.byte	'EN16',0,4
	.word	6545
	.byte	1,15,2,35,0,27
	.byte	'EN17',0,4
	.word	6545
	.byte	1,14,2,35,0,27
	.byte	'EN18',0,4
	.word	6545
	.byte	1,13,2,35,0,27
	.byte	'EN19',0,4
	.word	6545
	.byte	1,12,2,35,0,27
	.byte	'EN20',0,4
	.word	6545
	.byte	1,11,2,35,0,27
	.byte	'EN21',0,4
	.word	6545
	.byte	1,10,2,35,0,27
	.byte	'EN22',0,4
	.word	6545
	.byte	1,9,2,35,0,27
	.byte	'EN23',0,4
	.word	6545
	.byte	1,8,2,35,0,27
	.byte	'EN24',0,4
	.word	6545
	.byte	1,7,2,35,0,27
	.byte	'EN25',0,4
	.word	6545
	.byte	1,6,2,35,0,27
	.byte	'EN26',0,4
	.word	6545
	.byte	1,5,2,35,0,27
	.byte	'EN27',0,4
	.word	6545
	.byte	1,4,2,35,0,27
	.byte	'EN28',0,4
	.word	6545
	.byte	1,3,2,35,0,27
	.byte	'EN29',0,4
	.word	6545
	.byte	1,2,2,35,0,27
	.byte	'EN30',0,4
	.word	6545
	.byte	1,1,2,35,0,27
	.byte	'EN31',0,4
	.word	6545
	.byte	1,0,2,35,0,0,25
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,8,225,5,3
	.word	42770
	.byte	26
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,8,228,5,16,4,27
	.byte	'EN32',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'EN33',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'EN34',0,4
	.word	6545
	.byte	1,29,2,35,0,27
	.byte	'EN35',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'EN36',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'EN37',0,4
	.word	6545
	.byte	1,26,2,35,0,27
	.byte	'EN38',0,4
	.word	6545
	.byte	1,25,2,35,0,27
	.byte	'EN39',0,4
	.word	6545
	.byte	1,24,2,35,0,27
	.byte	'EN40',0,4
	.word	6545
	.byte	1,23,2,35,0,27
	.byte	'EN41',0,4
	.word	6545
	.byte	1,22,2,35,0,27
	.byte	'EN42',0,4
	.word	6545
	.byte	1,21,2,35,0,27
	.byte	'EN43',0,4
	.word	6545
	.byte	1,20,2,35,0,27
	.byte	'EN44',0,4
	.word	6545
	.byte	1,19,2,35,0,27
	.byte	'EN45',0,4
	.word	6545
	.byte	1,18,2,35,0,27
	.byte	'EN46',0,4
	.word	6545
	.byte	1,17,2,35,0,27
	.byte	'EN47',0,4
	.word	6545
	.byte	1,16,2,35,0,27
	.byte	'EN48',0,4
	.word	6545
	.byte	1,15,2,35,0,27
	.byte	'EN49',0,4
	.word	6545
	.byte	1,14,2,35,0,27
	.byte	'EN50',0,4
	.word	6545
	.byte	1,13,2,35,0,27
	.byte	'EN51',0,4
	.word	6545
	.byte	1,12,2,35,0,27
	.byte	'EN52',0,4
	.word	6545
	.byte	1,11,2,35,0,27
	.byte	'EN53',0,4
	.word	6545
	.byte	1,10,2,35,0,27
	.byte	'EN54',0,4
	.word	6545
	.byte	1,9,2,35,0,27
	.byte	'EN55',0,4
	.word	6545
	.byte	1,8,2,35,0,27
	.byte	'EN56',0,4
	.word	6545
	.byte	1,7,2,35,0,27
	.byte	'EN57',0,4
	.word	6545
	.byte	1,6,2,35,0,27
	.byte	'EN58',0,4
	.word	6545
	.byte	1,5,2,35,0,27
	.byte	'EN59',0,4
	.word	6545
	.byte	1,4,2,35,0,27
	.byte	'EN60',0,4
	.word	6545
	.byte	1,3,2,35,0,27
	.byte	'EN61',0,4
	.word	6545
	.byte	1,2,2,35,0,27
	.byte	'EN62',0,4
	.word	6545
	.byte	1,1,2,35,0,27
	.byte	'EN63',0,4
	.word	6545
	.byte	1,0,2,35,0,0,25
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,8,134,6,3
	.word	43353
	.byte	26
	.byte	'_Ifx_CPU_M1CNT_Bits',0,8,137,6,16,4,27
	.byte	'COUNTVALUE',0,4
	.word	6545
	.byte	31,1,2,35,0,27
	.byte	'SOVF',0,4
	.word	6545
	.byte	1,0,2,35,0,0,25
	.byte	'Ifx_CPU_M1CNT_Bits',0,8,141,6,3
	.word	43946
	.byte	26
	.byte	'_Ifx_CPU_M2CNT_Bits',0,8,144,6,16,4,27
	.byte	'COUNTVALUE',0,4
	.word	6545
	.byte	31,1,2,35,0,27
	.byte	'SOVF',0,4
	.word	6545
	.byte	1,0,2,35,0,0,25
	.byte	'Ifx_CPU_M2CNT_Bits',0,8,148,6,3
	.word	44039
	.byte	26
	.byte	'_Ifx_CPU_M3CNT_Bits',0,8,151,6,16,4,27
	.byte	'COUNTVALUE',0,4
	.word	6545
	.byte	31,1,2,35,0,27
	.byte	'SOVF',0,4
	.word	6545
	.byte	1,0,2,35,0,0,25
	.byte	'Ifx_CPU_M3CNT_Bits',0,8,155,6,3
	.word	44132
	.byte	26
	.byte	'_Ifx_CPU_OSEL_Bits',0,8,158,6,16,4,27
	.byte	'SHOVEN_X',0,4
	.word	6545
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_CPU_OSEL_Bits',0,8,161,6,3
	.word	44225
	.byte	26
	.byte	'_Ifx_CPU_PC_Bits',0,8,164,6,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'PC',0,4
	.word	6545
	.byte	31,0,2,35,0,0,25
	.byte	'Ifx_CPU_PC_Bits',0,8,168,6,3
	.word	44298
	.byte	26
	.byte	'_Ifx_CPU_PCON0_Bits',0,8,171,6,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'PCBYP',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'reserved_2',0,4
	.word	6545
	.byte	30,0,2,35,0,0,25
	.byte	'Ifx_CPU_PCON0_Bits',0,8,176,6,3
	.word	44383
	.byte	26
	.byte	'_Ifx_CPU_PCON1_Bits',0,8,179,6,16,4,27
	.byte	'PCINV',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'PBINV',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'reserved_2',0,4
	.word	6545
	.byte	30,0,2,35,0,0,25
	.byte	'Ifx_CPU_PCON1_Bits',0,8,184,6,3
	.word	44499
	.byte	26
	.byte	'_Ifx_CPU_PCON2_Bits',0,8,187,6,16,4,27
	.byte	'PCACHE_SZE',0,4
	.word	6545
	.byte	16,16,2,35,0,27
	.byte	'PSCRATCH_SZE',0,4
	.word	6545
	.byte	16,0,2,35,0,0,25
	.byte	'Ifx_CPU_PCON2_Bits',0,8,191,6,3
	.word	44610
	.byte	26
	.byte	'_Ifx_CPU_PCXI_Bits',0,8,194,6,16,4,27
	.byte	'PCXO',0,4
	.word	6545
	.byte	16,16,2,35,0,27
	.byte	'PCXS',0,4
	.word	6545
	.byte	4,12,2,35,0,27
	.byte	'UL',0,4
	.word	6545
	.byte	1,11,2,35,0,27
	.byte	'PIE',0,4
	.word	6545
	.byte	1,10,2,35,0,27
	.byte	'PCPN',0,4
	.word	6545
	.byte	8,2,2,35,0,27
	.byte	'reserved_30',0,4
	.word	6545
	.byte	2,0,2,35,0,0,25
	.byte	'Ifx_CPU_PCXI_Bits',0,8,202,6,3
	.word	44711
	.byte	26
	.byte	'_Ifx_CPU_PIEAR_Bits',0,8,205,6,16,4,27
	.byte	'TA',0,4
	.word	6545
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_CPU_PIEAR_Bits',0,8,208,6,3
	.word	44864
	.byte	26
	.byte	'_Ifx_CPU_PIETR_Bits',0,8,211,6,16,4,27
	.byte	'IED',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'IE_T',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'IE_C',0,4
	.word	6545
	.byte	1,29,2,35,0,27
	.byte	'IE_S',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'IE_BI',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'E_INFO',0,4
	.word	6545
	.byte	6,21,2,35,0,27
	.byte	'IE_UNC',0,4
	.word	6545
	.byte	1,20,2,35,0,27
	.byte	'IE_SP',0,4
	.word	6545
	.byte	1,19,2,35,0,27
	.byte	'IE_BS',0,4
	.word	6545
	.byte	1,18,2,35,0,27
	.byte	'IE_ADDR',0,4
	.word	6545
	.byte	1,17,2,35,0,27
	.byte	'IE_LPB',0,4
	.word	6545
	.byte	1,16,2,35,0,27
	.byte	'IE_MTMV',0,4
	.word	6545
	.byte	1,15,2,35,0,27
	.byte	'reserved_17',0,4
	.word	6545
	.byte	15,0,2,35,0,0,25
	.byte	'Ifx_CPU_PIETR_Bits',0,8,226,6,3
	.word	44933
	.byte	26
	.byte	'_Ifx_CPU_PMA0_Bits',0,8,229,6,16,4,27
	.byte	'DAC',0,4
	.word	6545
	.byte	16,16,2,35,0,27
	.byte	'reserved_16',0,4
	.word	6545
	.byte	16,0,2,35,0,0,25
	.byte	'Ifx_CPU_PMA0_Bits',0,8,233,6,3
	.word	45217
	.byte	26
	.byte	'_Ifx_CPU_PMA1_Bits',0,8,236,6,16,4,27
	.byte	'CAC',0,4
	.word	6545
	.byte	16,16,2,35,0,27
	.byte	'reserved_16',0,4
	.word	6545
	.byte	16,0,2,35,0,0,25
	.byte	'Ifx_CPU_PMA1_Bits',0,8,240,6,3
	.word	45308
	.byte	26
	.byte	'_Ifx_CPU_PMA2_Bits',0,8,243,6,16,4,27
	.byte	'PSI',0,4
	.word	6545
	.byte	16,16,2,35,0,27
	.byte	'reserved_16',0,4
	.word	6545
	.byte	16,0,2,35,0,0,25
	.byte	'Ifx_CPU_PMA2_Bits',0,8,247,6,3
	.word	45399
	.byte	26
	.byte	'_Ifx_CPU_PSTR_Bits',0,8,250,6,16,4,27
	.byte	'FRE',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'reserved_1',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'FBE',0,4
	.word	6545
	.byte	1,29,2,35,0,27
	.byte	'reserved_3',0,4
	.word	6545
	.byte	9,20,2,35,0,27
	.byte	'FPE',0,4
	.word	6545
	.byte	1,19,2,35,0,27
	.byte	'reserved_13',0,4
	.word	6545
	.byte	1,18,2,35,0,27
	.byte	'FME',0,4
	.word	6545
	.byte	1,17,2,35,0,27
	.byte	'reserved_15',0,4
	.word	6545
	.byte	17,0,2,35,0,0,25
	.byte	'Ifx_CPU_PSTR_Bits',0,8,132,7,3
	.word	45490
	.byte	26
	.byte	'_Ifx_CPU_PSW_Bits',0,8,135,7,16,4,27
	.byte	'CDC',0,4
	.word	6545
	.byte	7,25,2,35,0,27
	.byte	'CDE',0,4
	.word	6545
	.byte	1,24,2,35,0,27
	.byte	'GW',0,4
	.word	6545
	.byte	1,23,2,35,0,27
	.byte	'IS',0,4
	.word	6545
	.byte	1,22,2,35,0,27
	.byte	'IO',0,4
	.word	6545
	.byte	2,20,2,35,0,27
	.byte	'PRS',0,4
	.word	6545
	.byte	2,18,2,35,0,27
	.byte	'S',0,4
	.word	6545
	.byte	1,17,2,35,0,27
	.byte	'PRS2',0,4
	.word	6545
	.byte	1,16,2,35,0,27
	.byte	'reserved_16',0,4
	.word	6545
	.byte	8,8,2,35,0,27
	.byte	'USB',0,4
	.word	6545
	.byte	8,0,2,35,0,0,25
	.byte	'Ifx_CPU_PSW_Bits',0,8,147,7,3
	.word	45693
	.byte	26
	.byte	'_Ifx_CPU_RGN_ACCENA_Bits',0,8,150,7,16,4,27
	.byte	'EN0',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'EN1',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'EN2',0,4
	.word	6545
	.byte	1,29,2,35,0,27
	.byte	'EN3',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'EN4',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'EN5',0,4
	.word	6545
	.byte	1,26,2,35,0,27
	.byte	'EN6',0,4
	.word	6545
	.byte	1,25,2,35,0,27
	.byte	'EN7',0,4
	.word	6545
	.byte	1,24,2,35,0,27
	.byte	'EN8',0,4
	.word	6545
	.byte	1,23,2,35,0,27
	.byte	'EN9',0,4
	.word	6545
	.byte	1,22,2,35,0,27
	.byte	'EN10',0,4
	.word	6545
	.byte	1,21,2,35,0,27
	.byte	'EN11',0,4
	.word	6545
	.byte	1,20,2,35,0,27
	.byte	'EN12',0,4
	.word	6545
	.byte	1,19,2,35,0,27
	.byte	'EN13',0,4
	.word	6545
	.byte	1,18,2,35,0,27
	.byte	'EN14',0,4
	.word	6545
	.byte	1,17,2,35,0,27
	.byte	'EN15',0,4
	.word	6545
	.byte	1,16,2,35,0,27
	.byte	'EN16',0,4
	.word	6545
	.byte	1,15,2,35,0,27
	.byte	'EN17',0,4
	.word	6545
	.byte	1,14,2,35,0,27
	.byte	'EN18',0,4
	.word	6545
	.byte	1,13,2,35,0,27
	.byte	'EN19',0,4
	.word	6545
	.byte	1,12,2,35,0,27
	.byte	'EN20',0,4
	.word	6545
	.byte	1,11,2,35,0,27
	.byte	'EN21',0,4
	.word	6545
	.byte	1,10,2,35,0,27
	.byte	'EN22',0,4
	.word	6545
	.byte	1,9,2,35,0,27
	.byte	'EN23',0,4
	.word	6545
	.byte	1,8,2,35,0,27
	.byte	'EN24',0,4
	.word	6545
	.byte	1,7,2,35,0,27
	.byte	'EN25',0,4
	.word	6545
	.byte	1,6,2,35,0,27
	.byte	'EN26',0,4
	.word	6545
	.byte	1,5,2,35,0,27
	.byte	'EN27',0,4
	.word	6545
	.byte	1,4,2,35,0,27
	.byte	'EN28',0,4
	.word	6545
	.byte	1,3,2,35,0,27
	.byte	'EN29',0,4
	.word	6545
	.byte	1,2,2,35,0,27
	.byte	'EN30',0,4
	.word	6545
	.byte	1,1,2,35,0,27
	.byte	'EN31',0,4
	.word	6545
	.byte	1,0,2,35,0,0,25
	.byte	'Ifx_CPU_RGN_ACCENA_Bits',0,8,184,7,3
	.word	45898
	.byte	26
	.byte	'_Ifx_CPU_RGN_ACCENB_Bits',0,8,187,7,16,4,27
	.byte	'EN32',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'EN33',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'EN34',0,4
	.word	6545
	.byte	1,29,2,35,0,27
	.byte	'EN35',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'EN36',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'EN37',0,4
	.word	6545
	.byte	1,26,2,35,0,27
	.byte	'EN38',0,4
	.word	6545
	.byte	1,25,2,35,0,27
	.byte	'EN39',0,4
	.word	6545
	.byte	1,24,2,35,0,27
	.byte	'EN40',0,4
	.word	6545
	.byte	1,23,2,35,0,27
	.byte	'EN41',0,4
	.word	6545
	.byte	1,22,2,35,0,27
	.byte	'EN42',0,4
	.word	6545
	.byte	1,21,2,35,0,27
	.byte	'EN43',0,4
	.word	6545
	.byte	1,20,2,35,0,27
	.byte	'EN44',0,4
	.word	6545
	.byte	1,19,2,35,0,27
	.byte	'EN45',0,4
	.word	6545
	.byte	1,18,2,35,0,27
	.byte	'EN46',0,4
	.word	6545
	.byte	1,17,2,35,0,27
	.byte	'EN47',0,4
	.word	6545
	.byte	1,16,2,35,0,27
	.byte	'EN48',0,4
	.word	6545
	.byte	1,15,2,35,0,27
	.byte	'EN49',0,4
	.word	6545
	.byte	1,14,2,35,0,27
	.byte	'EN50',0,4
	.word	6545
	.byte	1,13,2,35,0,27
	.byte	'EN51',0,4
	.word	6545
	.byte	1,12,2,35,0,27
	.byte	'EN52',0,4
	.word	6545
	.byte	1,11,2,35,0,27
	.byte	'EN53',0,4
	.word	6545
	.byte	1,10,2,35,0,27
	.byte	'EN54',0,4
	.word	6545
	.byte	1,9,2,35,0,27
	.byte	'EN55',0,4
	.word	6545
	.byte	1,8,2,35,0,27
	.byte	'EN56',0,4
	.word	6545
	.byte	1,7,2,35,0,27
	.byte	'EN57',0,4
	.word	6545
	.byte	1,6,2,35,0,27
	.byte	'EN58',0,4
	.word	6545
	.byte	1,5,2,35,0,27
	.byte	'EN59',0,4
	.word	6545
	.byte	1,4,2,35,0,27
	.byte	'EN60',0,4
	.word	6545
	.byte	1,3,2,35,0,27
	.byte	'EN61',0,4
	.word	6545
	.byte	1,2,2,35,0,27
	.byte	'EN62',0,4
	.word	6545
	.byte	1,1,2,35,0,27
	.byte	'EN63',0,4
	.word	6545
	.byte	1,0,2,35,0,0,25
	.byte	'Ifx_CPU_RGN_ACCENB_Bits',0,8,221,7,3
	.word	46465
	.byte	26
	.byte	'_Ifx_CPU_RGN_LA_Bits',0,8,224,7,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	5,27,2,35,0,27
	.byte	'ADDR',0,4
	.word	6545
	.byte	27,0,2,35,0,0,25
	.byte	'Ifx_CPU_RGN_LA_Bits',0,8,228,7,3
	.word	47042
	.byte	26
	.byte	'_Ifx_CPU_RGN_UA_Bits',0,8,231,7,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	5,27,2,35,0,27
	.byte	'ADDR',0,4
	.word	6545
	.byte	27,0,2,35,0,0,25
	.byte	'Ifx_CPU_RGN_UA_Bits',0,8,235,7,3
	.word	47137
	.byte	26
	.byte	'_Ifx_CPU_SEGEN_Bits',0,8,238,7,16,4,27
	.byte	'ADFLIP',0,4
	.word	6545
	.byte	8,24,2,35,0,27
	.byte	'ADTYPE',0,4
	.word	6545
	.byte	2,22,2,35,0,27
	.byte	'reserved_10',0,4
	.word	6545
	.byte	21,1,2,35,0,27
	.byte	'AE',0,4
	.word	6545
	.byte	1,0,2,35,0,0,25
	.byte	'Ifx_CPU_SEGEN_Bits',0,8,244,7,3
	.word	47232
	.byte	26
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,8,247,7,16,4,27
	.byte	'EN0',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'EN1',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'EN2',0,4
	.word	6545
	.byte	1,29,2,35,0,27
	.byte	'EN3',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'EN4',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'EN5',0,4
	.word	6545
	.byte	1,26,2,35,0,27
	.byte	'EN6',0,4
	.word	6545
	.byte	1,25,2,35,0,27
	.byte	'EN7',0,4
	.word	6545
	.byte	1,24,2,35,0,27
	.byte	'EN8',0,4
	.word	6545
	.byte	1,23,2,35,0,27
	.byte	'EN9',0,4
	.word	6545
	.byte	1,22,2,35,0,27
	.byte	'EN10',0,4
	.word	6545
	.byte	1,21,2,35,0,27
	.byte	'EN11',0,4
	.word	6545
	.byte	1,20,2,35,0,27
	.byte	'EN12',0,4
	.word	6545
	.byte	1,19,2,35,0,27
	.byte	'EN13',0,4
	.word	6545
	.byte	1,18,2,35,0,27
	.byte	'EN14',0,4
	.word	6545
	.byte	1,17,2,35,0,27
	.byte	'EN15',0,4
	.word	6545
	.byte	1,16,2,35,0,27
	.byte	'EN16',0,4
	.word	6545
	.byte	1,15,2,35,0,27
	.byte	'EN17',0,4
	.word	6545
	.byte	1,14,2,35,0,27
	.byte	'EN18',0,4
	.word	6545
	.byte	1,13,2,35,0,27
	.byte	'EN19',0,4
	.word	6545
	.byte	1,12,2,35,0,27
	.byte	'EN20',0,4
	.word	6545
	.byte	1,11,2,35,0,27
	.byte	'EN21',0,4
	.word	6545
	.byte	1,10,2,35,0,27
	.byte	'EN22',0,4
	.word	6545
	.byte	1,9,2,35,0,27
	.byte	'EN23',0,4
	.word	6545
	.byte	1,8,2,35,0,27
	.byte	'EN24',0,4
	.word	6545
	.byte	1,7,2,35,0,27
	.byte	'EN25',0,4
	.word	6545
	.byte	1,6,2,35,0,27
	.byte	'EN26',0,4
	.word	6545
	.byte	1,5,2,35,0,27
	.byte	'EN27',0,4
	.word	6545
	.byte	1,4,2,35,0,27
	.byte	'EN28',0,4
	.word	6545
	.byte	1,3,2,35,0,27
	.byte	'EN29',0,4
	.word	6545
	.byte	1,2,2,35,0,27
	.byte	'EN30',0,4
	.word	6545
	.byte	1,1,2,35,0,27
	.byte	'EN31',0,4
	.word	6545
	.byte	1,0,2,35,0,0,25
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,8,153,8,3
	.word	47360
	.byte	26
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,8,156,8,16,4,27
	.byte	'EN32',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'EN33',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'EN34',0,4
	.word	6545
	.byte	1,29,2,35,0,27
	.byte	'EN35',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'EN36',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'EN37',0,4
	.word	6545
	.byte	1,26,2,35,0,27
	.byte	'EN38',0,4
	.word	6545
	.byte	1,25,2,35,0,27
	.byte	'EN39',0,4
	.word	6545
	.byte	1,24,2,35,0,27
	.byte	'EN40',0,4
	.word	6545
	.byte	1,23,2,35,0,27
	.byte	'EN41',0,4
	.word	6545
	.byte	1,22,2,35,0,27
	.byte	'EN42',0,4
	.word	6545
	.byte	1,21,2,35,0,27
	.byte	'EN43',0,4
	.word	6545
	.byte	1,20,2,35,0,27
	.byte	'EN44',0,4
	.word	6545
	.byte	1,19,2,35,0,27
	.byte	'EN45',0,4
	.word	6545
	.byte	1,18,2,35,0,27
	.byte	'EN46',0,4
	.word	6545
	.byte	1,17,2,35,0,27
	.byte	'EN47',0,4
	.word	6545
	.byte	1,16,2,35,0,27
	.byte	'EN48',0,4
	.word	6545
	.byte	1,15,2,35,0,27
	.byte	'EN49',0,4
	.word	6545
	.byte	1,14,2,35,0,27
	.byte	'EN50',0,4
	.word	6545
	.byte	1,13,2,35,0,27
	.byte	'EN51',0,4
	.word	6545
	.byte	1,12,2,35,0,27
	.byte	'EN52',0,4
	.word	6545
	.byte	1,11,2,35,0,27
	.byte	'EN53',0,4
	.word	6545
	.byte	1,10,2,35,0,27
	.byte	'EN54',0,4
	.word	6545
	.byte	1,9,2,35,0,27
	.byte	'EN55',0,4
	.word	6545
	.byte	1,8,2,35,0,27
	.byte	'EN56',0,4
	.word	6545
	.byte	1,7,2,35,0,27
	.byte	'EN57',0,4
	.word	6545
	.byte	1,6,2,35,0,27
	.byte	'EN58',0,4
	.word	6545
	.byte	1,5,2,35,0,27
	.byte	'EN59',0,4
	.word	6545
	.byte	1,4,2,35,0,27
	.byte	'EN60',0,4
	.word	6545
	.byte	1,3,2,35,0,27
	.byte	'EN61',0,4
	.word	6545
	.byte	1,2,2,35,0,27
	.byte	'EN62',0,4
	.word	6545
	.byte	1,1,2,35,0,27
	.byte	'EN63',0,4
	.word	6545
	.byte	1,0,2,35,0,0,25
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,8,190,8,3
	.word	47943
	.byte	26
	.byte	'_Ifx_CPU_SMACON_Bits',0,8,193,8,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	24,8,2,35,0,27
	.byte	'IODT',0,4
	.word	6545
	.byte	1,7,2,35,0,27
	.byte	'reserved_25',0,4
	.word	6545
	.byte	7,0,2,35,0,0,25
	.byte	'Ifx_CPU_SMACON_Bits',0,8,198,8,3
	.word	48536
	.byte	26
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,8,201,8,16,4,27
	.byte	'EN0',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'EN1',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'EN2',0,4
	.word	6545
	.byte	1,29,2,35,0,27
	.byte	'EN3',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'EN4',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'EN5',0,4
	.word	6545
	.byte	1,26,2,35,0,27
	.byte	'EN6',0,4
	.word	6545
	.byte	1,25,2,35,0,27
	.byte	'EN7',0,4
	.word	6545
	.byte	1,24,2,35,0,27
	.byte	'EN8',0,4
	.word	6545
	.byte	1,23,2,35,0,27
	.byte	'EN9',0,4
	.word	6545
	.byte	1,22,2,35,0,27
	.byte	'EN10',0,4
	.word	6545
	.byte	1,21,2,35,0,27
	.byte	'EN11',0,4
	.word	6545
	.byte	1,20,2,35,0,27
	.byte	'EN12',0,4
	.word	6545
	.byte	1,19,2,35,0,27
	.byte	'EN13',0,4
	.word	6545
	.byte	1,18,2,35,0,27
	.byte	'EN14',0,4
	.word	6545
	.byte	1,17,2,35,0,27
	.byte	'EN15',0,4
	.word	6545
	.byte	1,16,2,35,0,27
	.byte	'EN16',0,4
	.word	6545
	.byte	1,15,2,35,0,27
	.byte	'EN17',0,4
	.word	6545
	.byte	1,14,2,35,0,27
	.byte	'EN18',0,4
	.word	6545
	.byte	1,13,2,35,0,27
	.byte	'EN19',0,4
	.word	6545
	.byte	1,12,2,35,0,27
	.byte	'EN20',0,4
	.word	6545
	.byte	1,11,2,35,0,27
	.byte	'EN21',0,4
	.word	6545
	.byte	1,10,2,35,0,27
	.byte	'EN22',0,4
	.word	6545
	.byte	1,9,2,35,0,27
	.byte	'EN23',0,4
	.word	6545
	.byte	1,8,2,35,0,27
	.byte	'EN24',0,4
	.word	6545
	.byte	1,7,2,35,0,27
	.byte	'EN25',0,4
	.word	6545
	.byte	1,6,2,35,0,27
	.byte	'EN26',0,4
	.word	6545
	.byte	1,5,2,35,0,27
	.byte	'EN27',0,4
	.word	6545
	.byte	1,4,2,35,0,27
	.byte	'EN28',0,4
	.word	6545
	.byte	1,3,2,35,0,27
	.byte	'EN29',0,4
	.word	6545
	.byte	1,2,2,35,0,27
	.byte	'EN30',0,4
	.word	6545
	.byte	1,1,2,35,0,27
	.byte	'EN31',0,4
	.word	6545
	.byte	1,0,2,35,0,0,25
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,8,235,8,3
	.word	48654
	.byte	26
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,8,238,8,16,4,27
	.byte	'EN32',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'EN33',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'EN34',0,4
	.word	6545
	.byte	1,29,2,35,0,27
	.byte	'EN35',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'EN36',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'EN37',0,4
	.word	6545
	.byte	1,26,2,35,0,27
	.byte	'EN38',0,4
	.word	6545
	.byte	1,25,2,35,0,27
	.byte	'EN39',0,4
	.word	6545
	.byte	1,24,2,35,0,27
	.byte	'EN40',0,4
	.word	6545
	.byte	1,23,2,35,0,27
	.byte	'EN41',0,4
	.word	6545
	.byte	1,22,2,35,0,27
	.byte	'EN42',0,4
	.word	6545
	.byte	1,21,2,35,0,27
	.byte	'EN43',0,4
	.word	6545
	.byte	1,20,2,35,0,27
	.byte	'EN44',0,4
	.word	6545
	.byte	1,19,2,35,0,27
	.byte	'EN45',0,4
	.word	6545
	.byte	1,18,2,35,0,27
	.byte	'EN46',0,4
	.word	6545
	.byte	1,17,2,35,0,27
	.byte	'EN47',0,4
	.word	6545
	.byte	1,16,2,35,0,27
	.byte	'EN48',0,4
	.word	6545
	.byte	1,15,2,35,0,27
	.byte	'EN49',0,4
	.word	6545
	.byte	1,14,2,35,0,27
	.byte	'EN50',0,4
	.word	6545
	.byte	1,13,2,35,0,27
	.byte	'EN51',0,4
	.word	6545
	.byte	1,12,2,35,0,27
	.byte	'EN52',0,4
	.word	6545
	.byte	1,11,2,35,0,27
	.byte	'EN53',0,4
	.word	6545
	.byte	1,10,2,35,0,27
	.byte	'EN54',0,4
	.word	6545
	.byte	1,9,2,35,0,27
	.byte	'EN55',0,4
	.word	6545
	.byte	1,8,2,35,0,27
	.byte	'EN56',0,4
	.word	6545
	.byte	1,7,2,35,0,27
	.byte	'EN57',0,4
	.word	6545
	.byte	1,6,2,35,0,27
	.byte	'EN58',0,4
	.word	6545
	.byte	1,5,2,35,0,27
	.byte	'EN59',0,4
	.word	6545
	.byte	1,4,2,35,0,27
	.byte	'EN60',0,4
	.word	6545
	.byte	1,3,2,35,0,27
	.byte	'EN61',0,4
	.word	6545
	.byte	1,2,2,35,0,27
	.byte	'EN62',0,4
	.word	6545
	.byte	1,1,2,35,0,27
	.byte	'EN63',0,4
	.word	6545
	.byte	1,0,2,35,0,0,25
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,8,144,9,3
	.word	49243
	.byte	26
	.byte	'_Ifx_CPU_SWEVT_Bits',0,8,147,9,16,4,27
	.byte	'EVTA',0,4
	.word	6545
	.byte	3,29,2,35,0,27
	.byte	'BBM',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'BOD',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'SUSP',0,4
	.word	6545
	.byte	1,26,2,35,0,27
	.byte	'CNT',0,4
	.word	6545
	.byte	2,24,2,35,0,27
	.byte	'reserved_8',0,4
	.word	6545
	.byte	24,0,2,35,0,0,25
	.byte	'Ifx_CPU_SWEVT_Bits',0,8,155,9,3
	.word	49842
	.byte	26
	.byte	'_Ifx_CPU_SYSCON_Bits',0,8,158,9,16,4,27
	.byte	'FCDSF',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'PROTEN',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'TPROTEN',0,4
	.word	6545
	.byte	1,29,2,35,0,27
	.byte	'IS',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'TS',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'reserved_5',0,4
	.word	6545
	.byte	3,24,2,35,0,27
	.byte	'ESDIS',0,4
	.word	6545
	.byte	1,23,2,35,0,27
	.byte	'reserved_9',0,4
	.word	6545
	.byte	7,16,2,35,0,27
	.byte	'U1_IED',0,4
	.word	6545
	.byte	1,15,2,35,0,27
	.byte	'U1_IOS',0,4
	.word	6545
	.byte	1,14,2,35,0,27
	.byte	'reserved_18',0,4
	.word	6545
	.byte	6,8,2,35,0,27
	.byte	'BHALT',0,4
	.word	6545
	.byte	1,7,2,35,0,27
	.byte	'reserved_25',0,4
	.word	6545
	.byte	7,0,2,35,0,0,25
	.byte	'Ifx_CPU_SYSCON_Bits',0,8,173,9,3
	.word	49996
	.byte	26
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,8,176,9,16,4,27
	.byte	'ASI',0,4
	.word	6545
	.byte	5,27,2,35,0,27
	.byte	'reserved_5',0,4
	.word	6545
	.byte	27,0,2,35,0,0,25
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,8,180,9,3
	.word	50295
	.byte	26
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,8,183,9,16,4,27
	.byte	'TEXP0',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'TEXP1',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'TEXP2',0,4
	.word	6545
	.byte	1,29,2,35,0,27
	.byte	'reserved_3',0,4
	.word	6545
	.byte	13,16,2,35,0,27
	.byte	'TTRAP',0,4
	.word	6545
	.byte	1,15,2,35,0,27
	.byte	'reserved_17',0,4
	.word	6545
	.byte	15,0,2,35,0,0,25
	.byte	'Ifx_CPU_TPS_CON_Bits',0,8,191,9,3
	.word	50393
	.byte	26
	.byte	'_Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,8,194,9,16,4,27
	.byte	'EXTIM_CLASS_EN',0,4
	.word	6545
	.byte	8,24,2,35,0,27
	.byte	'reserved_8',0,4
	.word	6545
	.byte	24,0,2,35,0,0,25
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,8,198,9,3
	.word	50565
	.byte	26
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,8,201,9,16,4,27
	.byte	'ENTRY_CVAL',0,4
	.word	6545
	.byte	12,20,2,35,0,27
	.byte	'reserved_12',0,4
	.word	6545
	.byte	20,0,2,35,0,0,25
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,8,205,9,3
	.word	50694
	.byte	26
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,8,208,9,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	4,28,2,35,0,27
	.byte	'ENTRY_LVAL',0,4
	.word	6545
	.byte	8,20,2,35,0,27
	.byte	'reserved_12',0,4
	.word	6545
	.byte	20,0,2,35,0,0,25
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,8,213,9,3
	.word	50824
	.byte	26
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,8,216,9,16,4,27
	.byte	'EXIT_CVAL',0,4
	.word	6545
	.byte	24,8,2,35,0,27
	.byte	'reserved_24',0,4
	.word	6545
	.byte	8,0,2,35,0,0,25
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,8,220,9,3
	.word	50976
	.byte	26
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,8,223,9,16,4,27
	.byte	'reserved_0',0,4
	.word	6545
	.byte	4,28,2,35,0,27
	.byte	'EXIT_LVAL',0,4
	.word	6545
	.byte	20,8,2,35,0,27
	.byte	'reserved_24',0,4
	.word	6545
	.byte	8,0,2,35,0,0,25
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,8,228,9,3
	.word	51103
	.byte	26
	.byte	'_Ifx_CPU_TPS_EXTIM_FCX_Bits',0,8,231,9,16,4,27
	.byte	'EXIT_FCX',0,4
	.word	6545
	.byte	20,12,2,35,0,27
	.byte	'reserved_20',0,4
	.word	6545
	.byte	12,0,2,35,0,0,25
	.byte	'Ifx_CPU_TPS_EXTIM_FCX_Bits',0,8,235,9,3
	.word	51252
	.byte	26
	.byte	'_Ifx_CPU_TPS_EXTIM_STAT_Bits',0,8,238,9,16,4,27
	.byte	'EXIT_TIN',0,4
	.word	6545
	.byte	8,24,2,35,0,27
	.byte	'EXIT_CLASS',0,4
	.word	6545
	.byte	3,21,2,35,0,27
	.byte	'reserved_11',0,4
	.word	6545
	.byte	4,17,2,35,0,27
	.byte	'EXIT_AT',0,4
	.word	6545
	.byte	1,16,2,35,0,27
	.byte	'ENTRY_TIN',0,4
	.word	6545
	.byte	8,8,2,35,0,27
	.byte	'ENTRY_CLASS',0,4
	.word	6545
	.byte	3,5,2,35,0,27
	.byte	'reserved_27',0,4
	.word	6545
	.byte	4,1,2,35,0,27
	.byte	'ENTRY_AT',0,4
	.word	6545
	.byte	1,0,2,35,0,0,25
	.byte	'Ifx_CPU_TPS_EXTIM_STAT_Bits',0,8,248,9,3
	.word	51366
	.byte	26
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,8,251,9,16,4,27
	.byte	'TIMER',0,4
	.word	6545
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,8,254,9,3
	.word	51610
	.byte	26
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,8,129,10,16,4,27
	.byte	'T0',0,4
	.word	6545
	.byte	1,31,2,35,0,27
	.byte	'T1',0,4
	.word	6545
	.byte	1,30,2,35,0,27
	.byte	'T2',0,4
	.word	6545
	.byte	1,29,2,35,0,27
	.byte	'T3',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'T4',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'T5',0,4
	.word	6545
	.byte	1,26,2,35,0,27
	.byte	'T6',0,4
	.word	6545
	.byte	1,25,2,35,0,27
	.byte	'T7',0,4
	.word	6545
	.byte	1,24,2,35,0,27
	.byte	'reserved_8',0,4
	.word	6545
	.byte	24,0,2,35,0,0,25
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,8,140,10,3
	.word	51690
	.byte	26
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,8,143,10,16,4,27
	.byte	'ADDR',0,4
	.word	6545
	.byte	32,0,2,35,0,0,25
	.byte	'Ifx_CPU_TR_ADR_Bits',0,8,146,10,3
	.word	51885
	.byte	26
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,8,149,10,16,4,27
	.byte	'EVTA',0,4
	.word	6545
	.byte	3,29,2,35,0,27
	.byte	'BBM',0,4
	.word	6545
	.byte	1,28,2,35,0,27
	.byte	'BOD',0,4
	.word	6545
	.byte	1,27,2,35,0,27
	.byte	'SUSP',0,4
	.word	6545
	.byte	1,26,2,35,0,27
	.byte	'CNT',0,4
	.word	6545
	.byte	2,24,2,35,0,27
	.byte	'reserved_8',0,4
	.word	6545
	.byte	4,20,2,35,0,27
	.byte	'TYP',0,4
	.word	6545
	.byte	1,19,2,35,0,27
	.byte	'RNG',0,4
	.word	6545
	.byte	1,18,2,35,0,27
	.byte	'reserved_14',0,4
	.word	6545
	.byte	1,17,2,35,0,27
	.byte	'ASI_EN',0,4
	.word	6545
	.byte	1,16,2,35,0,27
	.byte	'ASI',0,4
	.word	6545
	.byte	5,11,2,35,0,27
	.byte	'reserved_21',0,4
	.word	6545
	.byte	6,5,2,35,0,27
	.byte	'AST',0,4
	.word	6545
	.byte	1,4,2,35,0,27
	.byte	'ALD',0,4
	.word	6545
	.byte	1,3,2,35,0,27
	.byte	'reserved_29',0,4
	.word	6545
	.byte	3,0,2,35,0,0,25
	.byte	'Ifx_CPU_TR_EVT_Bits',0,8,166,10,3
	.word	51958
	.byte	28,8,174,10,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	33313
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_A',0,8,179,10,3
	.word	52276
	.byte	28,8,182,10,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	33374
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_BIV',0,8,187,10,3
	.word	52335
	.byte	28,8,190,10,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	33453
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_BLK_OMASK',0,8,195,10,3
	.word	52396
	.byte	28,8,198,10,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	33591
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_BLK_OTAR',0,8,203,10,3
	.word	52463
	.byte	28,8,206,10,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	33712
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_BLK_RABR',0,8,211,10,3
	.word	52529
	.byte	28,8,214,10,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	33888
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_BTV',0,8,219,10,3
	.word	52595
	.byte	28,8,222,10,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	33974
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_CCNT',0,8,227,10,3
	.word	52656
	.byte	28,8,230,10,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	34063
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_CCTRL',0,8,235,10,3
	.word	52718
	.byte	28,8,238,10,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	34210
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_COMPAT',0,8,243,10,3
	.word	52781
	.byte	28,8,246,10,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	34339
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_CORE_ID',0,8,251,10,3
	.word	52845
	.byte	28,8,254,10,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	34439
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_CPR_L',0,8,131,11,3
	.word	52910
	.byte	28,8,134,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	34534
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_CPR_U',0,8,139,11,3
	.word	52973
	.byte	28,8,142,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	34629
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_CPU_ID',0,8,147,11,3
	.word	53036
	.byte	28,8,150,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	34739
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_CPXE',0,8,155,11,3
	.word	53100
	.byte	28,8,158,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	34831
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_CREVT',0,8,163,11,3
	.word	53162
	.byte	28,8,166,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	34985
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_CUS_ID',0,8,171,11,3
	.word	53225
	.byte	28,8,174,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	35079
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_D',0,8,179,11,3
	.word	53289
	.byte	28,8,182,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	35142
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_DATR',0,8,187,11,3
	.word	53348
	.byte	28,8,190,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	35368
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_DBGSR',0,8,195,11,3
	.word	53410
	.byte	28,8,198,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	35583
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_DBGTCR',0,8,203,11,3
	.word	53473
	.byte	28,8,206,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	35677
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_DCON0',0,8,211,11,3
	.word	53537
	.byte	28,8,214,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	35793
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_DCON2',0,8,219,11,3
	.word	53600
	.byte	28,8,222,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	35894
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_DCX',0,8,227,11,3
	.word	53663
	.byte	28,8,230,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	35987
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_DEADD',0,8,235,11,3
	.word	53724
	.byte	28,8,238,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	36067
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_DIEAR',0,8,243,11,3
	.word	53787
	.byte	28,8,246,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	36136
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_DIETR',0,8,251,11,3
	.word	53850
	.byte	28,8,254,11,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	36420
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R',0,8,131,12,3
	.word	53913
	.byte	28,8,134,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	37011
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W',0,8,139,12,3
	.word	53993
	.byte	28,8,142,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	37602
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R',0,8,147,12,3
	.word	54073
	.byte	28,8,150,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	38203
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W',0,8,155,12,3
	.word	54153
	.byte	28,8,158,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	38804
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA',0,8,163,12,3
	.word	54233
	.byte	28,8,166,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	38919
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA',0,8,171,12,3
	.word	54307
	.byte	28,8,174,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	39034
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_DMS',0,8,179,12,3
	.word	54381
	.byte	28,8,182,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	39127
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_DPRE',0,8,187,12,3
	.word	54442
	.byte	28,8,190,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	39219
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_DPR_L',0,8,195,12,3
	.word	54504
	.byte	28,8,198,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	39314
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_DPR_U',0,8,203,12,3
	.word	54567
	.byte	28,8,206,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	39409
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_DPWE',0,8,211,12,3
	.word	54630
	.byte	28,8,214,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	39501
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_DSTR',0,8,219,12,3
	.word	54692
	.byte	28,8,222,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	39840
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_EXEVT',0,8,227,12,3
	.word	54754
	.byte	28,8,230,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	39994
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_FCX',0,8,235,12,3
	.word	54817
	.byte	28,8,238,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	40100
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_FLASHCON0',0,8,243,12,3
	.word	54878
	.byte	28,8,246,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	40318
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_FLASHCON1',0,8,251,12,3
	.word	54945
	.byte	28,8,254,12,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	40509
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_FLASHCON2',0,8,131,13,3
	.word	55012
	.byte	28,8,134,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	40809
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_FLASHCON3',0,8,139,13,3
	.word	55079
	.byte	28,8,142,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	41114
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_FLASHCON4',0,8,147,13,3
	.word	55146
	.byte	28,8,150,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	41215
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,8,155,13,3
	.word	55213
	.byte	28,8,158,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	41564
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,8,163,13,3
	.word	55283
	.byte	28,8,166,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	41724
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,8,171,13,3
	.word	55353
	.byte	28,8,174,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	41805
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,8,179,13,3
	.word	55422
	.byte	28,8,182,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	41892
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,8,187,13,3
	.word	55493
	.byte	28,8,190,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	41979
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,8,195,13,3
	.word	55564
	.byte	28,8,198,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	42066
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_ICNT',0,8,203,13,3
	.word	55635
	.byte	28,8,206,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	42157
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_ICR',0,8,211,13,3
	.word	55697
	.byte	28,8,214,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	42299
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_ISP',0,8,219,13,3
	.word	55758
	.byte	28,8,222,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	42365
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_KRST0',0,8,227,13,3
	.word	55819
	.byte	28,8,230,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	42476
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_KRST1',0,8,235,13,3
	.word	55882
	.byte	28,8,238,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	42568
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_KRSTCLR',0,8,243,13,3
	.word	55945
	.byte	28,8,246,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	42664
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_LCX',0,8,251,13,3
	.word	56010
	.byte	28,8,254,13,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	42770
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R',0,8,131,14,3
	.word	56071
	.byte	28,8,134,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	43353
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R',0,8,139,14,3
	.word	56147
	.byte	28,8,142,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	43946
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_M1CNT',0,8,147,14,3
	.word	56223
	.byte	28,8,150,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	44039
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_M2CNT',0,8,155,14,3
	.word	56286
	.byte	28,8,158,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	44132
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_M3CNT',0,8,163,14,3
	.word	56349
	.byte	28,8,166,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	44225
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_OSEL',0,8,171,14,3
	.word	56412
	.byte	28,8,174,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	44298
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_PC',0,8,179,14,3
	.word	56474
	.byte	28,8,182,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	44383
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_PCON0',0,8,187,14,3
	.word	56534
	.byte	28,8,190,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	44499
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_PCON1',0,8,195,14,3
	.word	56597
	.byte	28,8,198,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	44610
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_PCON2',0,8,203,14,3
	.word	56660
	.byte	28,8,206,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	44711
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_PCXI',0,8,211,14,3
	.word	56723
	.byte	28,8,214,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	44864
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_PIEAR',0,8,219,14,3
	.word	56785
	.byte	28,8,222,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	44933
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_PIETR',0,8,227,14,3
	.word	56848
	.byte	28,8,230,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	45217
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_PMA0',0,8,235,14,3
	.word	56911
	.byte	28,8,238,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	45308
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_PMA1',0,8,243,14,3
	.word	56973
	.byte	28,8,246,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	45399
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_PMA2',0,8,251,14,3
	.word	57035
	.byte	28,8,254,14,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	45490
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_PSTR',0,8,131,15,3
	.word	57097
	.byte	28,8,134,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	45693
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_PSW',0,8,139,15,3
	.word	57159
	.byte	28,8,142,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	45898
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_RGN_ACCENA',0,8,147,15,3
	.word	57220
	.byte	28,8,150,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	46465
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_RGN_ACCENB',0,8,155,15,3
	.word	57288
	.byte	28,8,158,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	47042
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_RGN_LA',0,8,163,15,3
	.word	57356
	.byte	28,8,166,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	47137
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_RGN_UA',0,8,171,15,3
	.word	57420
	.byte	28,8,174,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	47232
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_SEGEN',0,8,179,15,3
	.word	57484
	.byte	28,8,182,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	47360
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W',0,8,187,15,3
	.word	57547
	.byte	28,8,190,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	47943
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W',0,8,195,15,3
	.word	57623
	.byte	28,8,198,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	48536
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_SMACON',0,8,203,15,3
	.word	57699
	.byte	28,8,206,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	48654
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R',0,8,211,15,3
	.word	57763
	.byte	28,8,214,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	49243
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R',0,8,219,15,3
	.word	57842
	.byte	28,8,222,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	49842
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_SWEVT',0,8,227,15,3
	.word	57921
	.byte	28,8,230,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	49996
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_SYSCON',0,8,235,15,3
	.word	57984
	.byte	28,8,238,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	50295
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_TASK_ASI',0,8,243,15,3
	.word	58048
	.byte	28,8,246,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	50393
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_TPS_CON',0,8,251,15,3
	.word	58114
	.byte	28,8,254,15,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	50565
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN',0,8,131,16,3
	.word	58179
	.byte	28,8,134,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	50694
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL',0,8,139,16,3
	.word	58255
	.byte	28,8,142,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	50824
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL',0,8,147,16,3
	.word	58333
	.byte	28,8,150,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	50976
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL',0,8,155,16,3
	.word	58411
	.byte	28,8,158,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	51103
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL',0,8,163,16,3
	.word	58488
	.byte	28,8,166,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	51252
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_TPS_EXTIM_FCX',0,8,171,16,3
	.word	58565
	.byte	28,8,174,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	51366
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_TPS_EXTIM_STAT',0,8,179,16,3
	.word	58636
	.byte	28,8,182,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	51610
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_TPS_TIMER',0,8,187,16,3
	.word	58708
	.byte	28,8,190,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	51690
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_TRIG_ACC',0,8,195,16,3
	.word	58775
	.byte	28,8,198,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	51885
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_TR_ADR',0,8,203,16,3
	.word	58841
	.byte	28,8,206,16,9,4,17
	.byte	'U',0
	.word	994
	.byte	4,2,35,0,17
	.byte	'I',0
	.word	1072
	.byte	4,2,35,0,17
	.byte	'B',0
	.word	51958
	.byte	4,2,35,0,0,25
	.byte	'Ifx_CPU_TR_EVT',0,8,211,16,3
	.word	58905
	.byte	26
	.byte	'_Ifx_CPU_RGN',0,8,223,16,25,16,17
	.byte	'LA',0
	.word	57356
	.byte	4,2,35,0,17
	.byte	'UA',0
	.word	57420
	.byte	4,2,35,4,17
	.byte	'ACCENA',0
	.word	57220
	.byte	4,2,35,8,17
	.byte	'ACCENB',0
	.word	57288
	.byte	4,2,35,12,0,9
	.word	58969
	.byte	25
	.byte	'Ifx_CPU_RGN',0,8,229,16,3
	.word	59045
	.byte	26
	.byte	'_Ifx_CPU_BLK',0,8,244,16,25,12,17
	.byte	'RABR',0
	.word	52529
	.byte	4,2,35,0,17
	.byte	'OTAR',0
	.word	52463
	.byte	4,2,35,4,17
	.byte	'OMASK',0
	.word	52396
	.byte	4,2,35,8,0,9
	.word	59071
	.byte	25
	.byte	'Ifx_CPU_BLK',0,8,249,16,3
	.word	59134
	.byte	29,4
	.word	290
	.byte	30,3,0,26
	.byte	'_Ifx_CPU_FPU_TRAP',0,8,136,17,25,28,17
	.byte	'CON',0
	.word	55213
	.byte	4,2,35,0,17
	.byte	'PC',0
	.word	55353
	.byte	4,2,35,4,17
	.byte	'OPC',0
	.word	55283
	.byte	4,2,35,8,17
	.byte	'reserved_C',0
	.word	59160
	.byte	4,2,35,12,17
	.byte	'SRC1',0
	.word	55422
	.byte	4,2,35,16,17
	.byte	'SRC2',0
	.word	55493
	.byte	4,2,35,20,17
	.byte	'SRC3',0
	.word	55564
	.byte	4,2,35,24,0,9
	.word	59169
	.byte	25
	.byte	'Ifx_CPU_FPU_TRAP',0,8,145,17,3
	.word	59294
	.byte	26
	.byte	'_Ifx_CPU_DPR',0,8,160,17,25,8,17
	.byte	'L',0
	.word	54504
	.byte	4,2,35,0,17
	.byte	'U',0
	.word	54567
	.byte	4,2,35,4,0,9
	.word	59325
	.byte	25
	.byte	'Ifx_CPU_DPR',0,8,164,17,3
	.word	59367
	.byte	26
	.byte	'_Ifx_CPU_CPR',0,8,179,17,25,8,17
	.byte	'L',0
	.word	52910
	.byte	4,2,35,0,17
	.byte	'U',0
	.word	52973
	.byte	4,2,35,4,0,9
	.word	59393
	.byte	25
	.byte	'Ifx_CPU_CPR',0,8,183,17,3
	.word	59435
	.byte	29,12
	.word	58708
	.byte	30,2,0,26
	.byte	'_Ifx_CPU_TPS',0,8,198,17,25,16,17
	.byte	'CON',0
	.word	58114
	.byte	4,2,35,0,17
	.byte	'TIMER',0
	.word	59461
	.byte	12,2,35,4,0,9
	.word	59470
	.byte	25
	.byte	'Ifx_CPU_TPS',0,8,202,17,3
	.word	59518
	.byte	26
	.byte	'_Ifx_CPU_TPS_EXTIM',0,8,217,17,25,28,17
	.byte	'ENTRY_LVAL',0
	.word	58333
	.byte	4,2,35,0,17
	.byte	'ENTRY_CVAL',0
	.word	58255
	.byte	4,2,35,4,17
	.byte	'EXIT_LVAL',0
	.word	58488
	.byte	4,2,35,8,17
	.byte	'EXIT_CVAL',0
	.word	58411
	.byte	4,2,35,12,17
	.byte	'CLASS_EN',0
	.word	58179
	.byte	4,2,35,16,17
	.byte	'STAT',0
	.word	58636
	.byte	4,2,35,20,17
	.byte	'FCX',0
	.word	58565
	.byte	4,2,35,24,0,9
	.word	59544
	.byte	25
	.byte	'Ifx_CPU_TPS_EXTIM',0,8,226,17,3
	.word	59693
	.byte	26
	.byte	'_Ifx_CPU_TR',0,8,241,17,25,8,17
	.byte	'EVT',0
	.word	58905
	.byte	4,2,35,0,17
	.byte	'ADR',0
	.word	58841
	.byte	4,2,35,4,0,9
	.word	59725
	.byte	25
	.byte	'Ifx_CPU_TR',0,8,245,17,3
	.word	59770
	.byte	25
	.byte	'boolean',0,9,102,29
	.word	290
	.byte	25
	.byte	'uint8',0,9,106,29
	.word	290
	.byte	25
	.byte	'uint16',0,9,110,29
	.word	218
	.byte	25
	.byte	'uint32',0,9,114,29
	.word	165
	.byte	25
	.byte	'Std_VersionInfoType',0,2,123,2
	.word	1334
.L747:
	.byte	9
	.word	165
.L748:
	.byte	9
	.word	165
	.byte	29,7
	.word	290
	.byte	30,6,0
.L749:
	.byte	5
	.word	59893
	.byte	29,28
	.word	165
	.byte	30,6,0
.L750:
	.byte	5
	.word	59907
.L751:
	.byte	5
	.word	59907
.L752:
	.byte	5
	.word	59907
.L753:
	.byte	5
	.word	59907
	.byte	25
	.byte	'McalLib_CpuEndInitRetType',0,1,244,2,3
	.word	1167
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L219:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,0,0,4,11,0,0,0,5,38,0,73,19,0,0,6,5,0,3,8,58,15,59,15,57,15,73,19,0,0,7,11,1,0
	.byte	0,8,59,0,3,8,0,0,9,53,0,73,19,0,0,10,15,0,73,19,0,0,11,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0
	.byte	0,12,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,13,5,0,3,8,73,19,0,0,14,5,0,73,19,0,0,15,46,1,3,8,54,15
	.byte	39,12,63,12,60,12,0,0,16,19,1,58,15,59,15,57,15,11,15,0,0,17,13,0,3,8,73,19,11,15,56,9,0,0,18,46,0,3,8
	.byte	58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,19,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0
	.byte	0,20,46,1,49,19,0,0,21,5,0,49,19,0,0,22,29,1,49,19,0,0,23,11,0,49,19,0,0,24,21,0,54,15,0,0,25,22,0,3,8
	.byte	58,15,59,15,57,15,73,19,0,0,26,19,1,3,8,58,15,59,15,57,15,11,15,0,0,27,13,0,3,8,11,15,73,19,13,15,12,15
	.byte	56,9,0,0,28,23,1,58,15,59,15,57,15,11,15,0,0,29,1,1,11,15,73,19,0,0,30,33,0,47,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L220:
	.word	.L906-.L905
.L905:
	.half	3
	.word	.L908-.L907
.L907:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg',0,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0
	.byte	'Std_Types.h',0,1,0,0
	.byte	'SchM_McalLib.h',0,2,0,0
	.byte	'Mcal_SafetyError.h',0,3,0,0
	.byte	'Ifx_TypesReg.h',0,4,0,0
	.byte	'IfxScu_regdef.h',0,4,0,0
	.byte	'IfxStm_regdef.h',0,4,0,0
	.byte	'IfxCpu_regdef.h',0,4,0,0
	.byte	'Platform_Types.h',0,1,0,0,0
.L908:
.L906:
	.sdecl	'.debug_info',debug,cluster('Mcal_GetCpuWdgPassword')
	.sect	'.debug_info'
.L221:
	.word	329
	.half	3
	.word	.L222
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L224,.L223
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_GetCpuWdgPassword',0,1,213,3,8
	.word	.L372
	.byte	1,1,1
	.word	.L164,.L373,.L163
	.byte	4
	.word	.L164,.L373
	.byte	5
	.byte	'Password',0,1,215,3,10
	.word	.L372,.L374
	.byte	5
	.byte	'CoreIdIndex',0,1,218,3,10
	.word	.L372,.L375
	.byte	6
	.word	.L376,.L164,.L377
	.byte	7
	.word	.L378,.L164,.L377
	.byte	5
	.byte	'CoreIdIndex',0,1,214,19,10
	.word	.L372,.L379
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_GetCpuWdgPassword')
	.sect	'.debug_abbrev'
.L222:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6
	.byte	29,1,49,16,17,1,18,1,0,0,7,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_GetCpuWdgPassword')
	.sect	'.debug_line'
.L223:
	.word	.L910-.L909
.L909:
	.half	3
	.word	.L912-.L911
.L911:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L912:
	.byte	5,32,7,0,5,2
	.word	.L164
	.byte	3,213,19,1,5,19,9
	.half	.L754-.L164
	.byte	3,7,1,5,31,9
	.half	.L913-.L754
	.byte	3,2,1,5,14,9
	.half	.L914-.L913
	.byte	3,128,112,1,5,23,9
	.half	.L915-.L914
	.byte	3,7,1,5,1,9
	.half	.L755-.L915
	.byte	3,4,1,7,9
	.half	.L225-.L755
	.byte	0,1,1
.L910:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_GetCpuWdgPassword')
	.sect	'.debug_ranges'
.L224:
	.word	-1,.L164,0,.L225-.L164,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_SetCpuWdgPassword')
	.sect	'.debug_info'
.L226:
	.word	389
	.half	3
	.word	.L227
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L229,.L228
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_SetCpuWdgPassword',0,1,133,4,8
	.word	.L372
	.byte	1,1,1
	.word	.L166,.L380,.L165
	.byte	4
	.byte	'Password',0,1,133,4,44
	.word	.L381,.L382
	.byte	5
	.word	.L166,.L380
	.byte	6
	.byte	'CpuEndInitRet',0,1,135,4,29
	.word	.L383,.L384
	.byte	6
	.byte	'UpdatedPassword',0,1,136,4,10
	.word	.L372,.L385
	.byte	6
	.byte	'CoreId',0,1,140,4,10
	.word	.L372,.L386
	.byte	7
	.word	.L376,.L387,.L388
	.byte	8
	.word	.L378,.L389
	.byte	6
	.byte	'CoreIdIndex',0,1,214,19,10
	.word	.L372,.L392
	.byte	0,0,9
	.word	.L376,.L390,.L391
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_SetCpuWdgPassword')
	.sect	'.debug_abbrev'
.L227:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,85,6,0,0,9,29,0,49,16
	.byte	17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_SetCpuWdgPassword')
	.sect	'.debug_line'
.L228:
	.word	.L917-.L916
.L916:
	.half	3
	.word	.L919-.L918
.L918:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L919:
	.byte	5,8,7,0,5,2
	.word	.L166
	.byte	3,132,4,1,5,38,9
	.half	.L756-.L166
	.byte	3,3,1,5,32,9
	.half	.L387-.L756
	.byte	3,206,15,1,5,19,9
	.half	.L758-.L387
	.byte	3,7,1,5,31,9
	.half	.L920-.L758
	.byte	3,2,1,5,32,9
	.half	.L388-.L920
	.byte	3,178,112,1,5,42,9
	.half	.L757-.L388
	.byte	3,8,1,9
	.half	.L921-.L757
	.byte	3,127,1,5,17,9
	.half	.L922-.L921
	.byte	3,127,1,5,31,9
	.half	.L923-.L922
	.byte	3,7,1,5,3,9
	.half	.L924-.L923
	.byte	3,5,1,5,1,9
	.half	.L925-.L924
	.byte	3,1,1,7,9
	.half	.L230-.L925
	.byte	0,1,1
.L917:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_SetCpuWdgPassword')
	.sect	'.debug_ranges'
.L229:
	.word	-1,.L166,0,.L230-.L166,0,0
.L389:
	.word	-1,.L166,.L387-.L166,.L388-.L166,.L390-.L166,.L391-.L166,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_WriteCpuEndInitProtReg')
	.sect	'.debug_info'
.L231:
	.word	466
	.half	3
	.word	.L232
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L234,.L233
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_WriteCpuEndInitProtReg',0,1,191,4,6,1,1,1
	.word	.L168,.L393,.L167
	.byte	4
	.byte	'RegAddress',0,1,191,4,55
	.word	.L394,.L395
	.byte	4
	.byte	'DataValue',0,1,192,4,48
	.word	.L396,.L397
	.byte	5
	.word	.L168,.L393
	.byte	6
	.byte	'CpuEndInitRet',0,1,194,4,29
	.word	.L383,.L398
	.byte	6
	.byte	'CoreId',0,1,195,4,10
	.word	.L372,.L399
	.byte	6
	.byte	'TempAddr',0,1,200,4,10
	.word	.L372,.L400
	.byte	7
	.word	.L401,.L402,.L4
	.byte	8
	.word	.L403,.L404
	.byte	8
	.word	.L405,.L406
	.byte	9
	.word	.L407,.L402,.L4
	.byte	0,7
	.word	.L376,.L4,.L408
	.byte	10
	.word	.L378,.L409
	.byte	6
	.byte	'CoreIdIndex',0,1,214,19,10
	.word	.L372,.L414
	.byte	0,0,11
	.word	.L376,.L410,.L411
	.byte	11
	.word	.L376,.L412,.L413
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_WriteCpuEndInitProtReg')
	.sect	'.debug_abbrev'
.L232:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,10,11,1,49,16,85,6,0,0,11,29,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_WriteCpuEndInitProtReg')
	.sect	'.debug_line'
.L233:
	.word	.L927-.L926
.L926:
	.half	3
	.word	.L929-.L928
.L928:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L929:
	.byte	5,6,7,0,5,2
	.word	.L168
	.byte	3,190,4,1,5,29,9
	.half	.L763-.L168
	.byte	3,9,1,5,3,9
	.half	.L764-.L763
	.byte	3,7,1,5,23,7,9
	.half	.L930-.L764
	.byte	3,4,1,5,47,9
	.half	.L931-.L930
	.byte	1,5,26,9
	.half	.L402-.L931
	.byte	3,224,14,1,5,45,9
	.half	.L760-.L402
	.byte	1,5,33,9
	.half	.L932-.L760
	.byte	3,1,1,5,32,7,9
	.half	.L4-.L932
	.byte	3,34,1,5,19,9
	.half	.L765-.L4
	.byte	3,7,1,5,31,9
	.half	.L933-.L765
	.byte	3,2,1,5,34,9
	.half	.L408-.L933
	.byte	3,132,113,1,5,44,9
	.half	.L761-.L408
	.byte	3,8,1,5,73,9
	.half	.L934-.L761
	.byte	3,126,1,5,44,9
	.half	.L410-.L934
	.byte	3,1,1,5,20,9
	.half	.L766-.L410
	.byte	3,10,1,5,5,9
	.half	.L935-.L766
	.byte	1,5,39,7,9
	.half	.L936-.L935
	.byte	3,6,1,5,58,9
	.half	.L937-.L936
	.byte	1,5,14,9
	.half	.L6-.L937
	.byte	3,23,1,9
	.half	.L938-.L6
	.byte	3,113,1,9
	.half	.L939-.L938
	.byte	3,3,1,9
	.half	.L940-.L939
	.byte	3,15,1,9
	.half	.L941-.L940
	.byte	3,3,1,9
	.half	.L942-.L941
	.byte	3,116,1,9
	.half	.L943-.L942
	.byte	3,3,1,9
	.half	.L944-.L943
	.byte	3,122,1,5,13,9
	.half	.L9-.L944
	.byte	3,123,1,9
	.half	.L945-.L9
	.byte	3,1,1,9
	.half	.L10-.L945
	.byte	3,2,1,9
	.half	.L946-.L10
	.byte	3,1,1,9
	.half	.L15-.L946
	.byte	3,2,1,9
	.half	.L947-.L15
	.byte	3,1,1,9
	.half	.L13-.L947
	.byte	3,2,1,9
	.half	.L948-.L13
	.byte	3,1,1,9
	.half	.L14-.L948
	.byte	3,2,1,9
	.half	.L949-.L14
	.byte	3,1,1,9
	.half	.L8-.L949
	.byte	3,2,1,9
	.half	.L950-.L8
	.byte	3,1,1,9
	.half	.L11-.L950
	.byte	3,2,1,9
	.half	.L951-.L11
	.byte	3,1,1,9
	.half	.L12-.L951
	.byte	3,2,1,5,34,9
	.half	.L7-.L12
	.byte	3,15,1,9
	.half	.L952-.L7
	.byte	3,125,1,5,47,9
	.half	.L953-.L952
	.byte	3,1,1,5,34,9
	.half	.L412-.L953
	.byte	3,1,1,5,33,9
	.half	.L954-.L412
	.byte	3,7,1,5,1,7,9
	.half	.L235-.L954
	.byte	3,2,0,1,1
.L927:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_WriteCpuEndInitProtReg')
	.sect	'.debug_ranges'
.L234:
	.word	-1,.L168,0,.L235-.L168,0,0
.L409:
	.word	-1,.L168,.L4-.L168,.L408-.L168,.L410-.L168,.L411-.L168,.L412-.L168,.L413-.L168,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_GetSafetyEndInitPassword')
	.sect	'.debug_info'
.L236:
	.word	258
	.half	3
	.word	.L237
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L239,.L238
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_GetSafetyEndInitPassword',0,1,201,5,8
	.word	.L372
	.byte	1,1,1
	.word	.L170,.L415,.L169
	.byte	4
	.word	.L170,.L415
	.byte	5
	.byte	'Password',0,1,203,5,10
	.word	.L372,.L416
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_GetSafetyEndInitPassword')
	.sect	'.debug_abbrev'
.L237:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_GetSafetyEndInitPassword')
	.sect	'.debug_line'
.L238:
	.word	.L956-.L955
.L955:
	.half	3
	.word	.L958-.L957
.L957:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L958:
	.byte	5,14,7,0,5,2
	.word	.L170
	.byte	3,207,5,1,5,23,9
	.half	.L959-.L170
	.byte	3,7,1,5,1,9
	.half	.L767-.L959
	.byte	3,4,1,7,9
	.half	.L240-.L767
	.byte	0,1,1
.L956:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_GetSafetyEndInitPassword')
	.sect	'.debug_ranges'
.L239:
	.word	-1,.L170,0,.L240-.L170,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_SetSafetyEndInitPassword')
	.sect	'.debug_info'
.L241:
	.word	344
	.half	3
	.word	.L242
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L244,.L243
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_SetSafetyEndInitPassword',0,1,247,5,8
	.word	.L372
	.byte	1,1,1
	.word	.L172,.L417,.L171
	.byte	4
	.byte	'Password',0,1,247,5,51
	.word	.L418,.L419
	.byte	5
	.word	.L172,.L417
	.byte	6
	.byte	'OldPassword',0,1,249,5,10
	.word	.L372,.L420
	.byte	6
	.byte	'NewPassword',0,1,250,5,10
	.word	.L372,.L421
	.byte	7
	.word	.L422,.L423,.L424
	.byte	8
	.word	.L425,.L426
	.byte	9
	.word	.L427,.L423,.L424
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_SetSafetyEndInitPassword')
	.sect	'.debug_abbrev'
.L242:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_SetSafetyEndInitPassword')
	.sect	'.debug_line'
.L243:
	.word	.L961-.L960
.L960:
	.half	3
	.word	.L963-.L962
.L962:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L963:
	.byte	5,34,7,0,5,2
	.word	.L172
	.byte	3,249,5,1,5,35,9
	.half	.L769-.L172
	.byte	3,5,1,5,22,9
	.half	.L768-.L769
	.byte	3,6,1,5,28,9
	.half	.L964-.L768
	.byte	3,1,1,5,20,9
	.half	.L965-.L964
	.byte	3,1,1,5,43,9
	.half	.L966-.L965
	.byte	3,4,1,9
	.half	.L967-.L966
	.byte	3,1,1,5,15,9
	.half	.L772-.L967
	.byte	3,126,1,5,26,9
	.half	.L770-.L772
	.byte	3,8,1,5,3,9
	.half	.L423-.L770
	.byte	3,220,18,1,9
	.half	.L968-.L423
	.byte	3,3,1,5,34,9
	.half	.L424-.L968
	.byte	3,166,109,1,5,3,9
	.half	.L969-.L424
	.byte	3,5,1,5,1,9
	.half	.L774-.L969
	.byte	3,1,1,7,9
	.half	.L245-.L774
	.byte	0,1,1
.L961:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_SetSafetyEndInitPassword')
	.sect	'.debug_ranges'
.L244:
	.word	-1,.L172,0,.L245-.L172,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_WriteSafetyEndInitProtReg')
	.sect	'.debug_info'
.L246:
	.word	506
	.half	3
	.word	.L247
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L249,.L248
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_WriteSafetyEndInitProtReg',0,1,186,6,6,1,1,1
	.word	.L174,.L428,.L173
	.byte	4
	.byte	'RegAddress',0,1,186,6,58
	.word	.L429,.L430
	.byte	4
	.byte	'DataValue',0,1,187,6,50
	.word	.L431,.L432
	.byte	5
	.word	.L174,.L428
	.byte	6
	.word	.L401,.L433,.L26
	.byte	7
	.word	.L403,.L434
	.byte	7
	.word	.L405,.L435
	.byte	8
	.word	.L407,.L433,.L26
	.byte	0,6
	.word	.L436,.L437,.L428
	.byte	7
	.word	.L438,.L439
	.byte	7
	.word	.L440,.L441
	.byte	7
	.word	.L442,.L443
	.byte	7
	.word	.L444,.L445
	.byte	7
	.word	.L446,.L447
	.byte	9
	.word	.L448,.L437,.L428
	.byte	10
	.byte	'RegAddress32',0,1,131,17,26
	.word	.L449,.L450
	.byte	10
	.byte	'TempAddr',0,1,142,17,10
	.word	.L372,.L451
	.byte	10
	.byte	'MaskedData',0,1,145,17,10
	.word	.L372,.L452
	.byte	6
	.word	.L422,.L453,.L454
	.byte	7
	.word	.L425,.L455
	.byte	8
	.word	.L427,.L453,.L454
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_WriteSafetyEndInitProtReg')
	.sect	'.debug_abbrev'
.L247:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,9,11,1,49,16,17,1,18,1,0,0,10,52,0,3,8
	.byte	58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_WriteSafetyEndInitProtReg')
	.sect	'.debug_line'
.L248:
	.word	.L971-.L970
.L970:
	.half	3
	.word	.L973-.L972
.L972:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L973:
	.byte	5,3,7,0,5,2
	.word	.L174
	.byte	3,194,6,1,5,23,7,9
	.half	.L974-.L174
	.byte	3,5,1,9
	.half	.L975-.L974
	.byte	3,1,1,5,26,9
	.half	.L433-.L975
	.byte	3,234,12,1,5,45,9
	.half	.L775-.L433
	.byte	1,5,33,9
	.half	.L976-.L775
	.byte	3,1,1,5,41,7,9
	.half	.L26-.L976
	.byte	3,160,115,1,9
	.half	.L977-.L26
	.byte	3,2,1,9
	.half	.L978-.L977
	.byte	3,2,1,5,29,9
	.half	.L437-.L978
	.byte	3,182,10,1,5,33,9
	.half	.L777-.L437
	.byte	3,3,1,5,35,9
	.half	.L979-.L777
	.byte	3,6,1,5,22,9
	.half	.L776-.L979
	.byte	3,6,1,5,28,9
	.half	.L980-.L776
	.byte	3,1,1,5,59,9
	.half	.L981-.L980
	.byte	1,5,35,9
	.half	.L982-.L981
	.byte	3,6,1,5,29,9
	.half	.L983-.L982
	.byte	3,1,1,9
	.half	.L984-.L983
	.byte	3,1,1,5,18,9
	.half	.L985-.L984
	.byte	3,5,1,5,3,9
	.half	.L986-.L985
	.byte	1,5,23,7,9
	.half	.L987-.L986
	.byte	3,11,1,5,35,9
	.half	.L988-.L987
	.byte	1,5,20,9
	.half	.L28-.L988
	.byte	3,32,1,5,12,9
	.half	.L989-.L28
	.byte	3,2,1,9
	.half	.L990-.L989
	.byte	3,6,1,9
	.half	.L991-.L990
	.byte	3,3,1,9
	.half	.L992-.L991
	.byte	3,3,1,9
	.half	.L993-.L992
	.byte	3,119,1,5,11,9
	.half	.L30-.L993
	.byte	3,126,1,9
	.half	.L994-.L30
	.byte	3,1,1,9
	.half	.L34-.L994
	.byte	3,2,1,9
	.half	.L995-.L34
	.byte	3,1,1,9
	.half	.L31-.L995
	.byte	3,2,1,9
	.half	.L996-.L31
	.byte	3,1,1,9
	.half	.L32-.L996
	.byte	3,2,1,9
	.half	.L997-.L32
	.byte	3,1,1,9
	.half	.L33-.L997
	.byte	3,2,1,5,35,9
	.half	.L29-.L33
	.byte	3,12,1,5,29,9
	.half	.L998-.L29
	.byte	3,1,1,9
	.half	.L999-.L998
	.byte	3,1,1,5,26,9
	.half	.L1000-.L999
	.byte	3,6,1,5,3,9
	.half	.L453-.L1000
	.byte	3,245,6,1,9
	.half	.L1001-.L453
	.byte	3,3,1,5,34,9
	.half	.L454-.L1001
	.byte	3,141,121,1,5,1,7,9
	.half	.L250-.L454
	.byte	3,221,116,0,1,1
.L971:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_WriteSafetyEndInitProtReg')
	.sect	'.debug_ranges'
.L249:
	.word	-1,.L174,0,.L250-.L174,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_WriteSafetyEndInitProtRegMask')
	.sect	'.debug_info'
.L251:
	.word	550
	.half	3
	.word	.L252
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L254,.L253
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_WriteSafetyEndInitProtRegMask',0,1,185,7,6,1,1,1
	.word	.L178,.L456,.L177
	.byte	4
	.byte	'RegAddress',0,1,185,7,62
	.word	.L457,.L458
	.byte	4
	.byte	'DataValue',0,1,186,7,55
	.word	.L459,.L460
	.byte	4
	.byte	'Mask',0,1,186,7,73
	.word	.L372,.L461
	.byte	5
	.word	.L178,.L456
	.byte	6
	.word	.L401,.L462,.L56
	.byte	7
	.word	.L403,.L463
	.byte	7
	.word	.L405,.L464
	.byte	8
	.word	.L407,.L462,.L56
	.byte	0,6
	.word	.L436,.L465,.L456
	.byte	7
	.word	.L438,.L466
	.byte	7
	.word	.L440,.L467
	.byte	7
	.word	.L442,.L468
	.byte	7
	.word	.L444,.L469
	.byte	7
	.word	.L446,.L470
	.byte	9
	.word	.L448,.L465,.L456
	.byte	10
	.byte	'RegAddress32',0,1,131,17,26
	.word	.L471,.L472
	.byte	10
	.byte	'TempData',0,1,137,17,10
	.word	.L372,.L473
	.byte	10
	.byte	'TempAddr',0,1,142,17,10
	.word	.L372,.L474
	.byte	10
	.byte	'MaskedData',0,1,145,17,10
	.word	.L372,.L475
	.byte	6
	.word	.L422,.L476,.L477
	.byte	7
	.word	.L425,.L478
	.byte	8
	.word	.L427,.L476,.L477
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_WriteSafetyEndInitProtRegMask')
	.sect	'.debug_abbrev'
.L252:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,9,11,1,49,16,17,1,18,1,0,0,10,52,0,3,8
	.byte	58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_WriteSafetyEndInitProtRegMask')
	.sect	'.debug_line'
.L253:
	.word	.L1003-.L1002
.L1002:
	.half	3
	.word	.L1005-.L1004
.L1004:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L1005:
	.byte	5,6,7,0,5,2
	.word	.L178
	.byte	3,184,7,1,5,3,9
	.half	.L784-.L178
	.byte	3,8,1,5,23,7,9
	.half	.L1006-.L784
	.byte	3,4,1,9
	.half	.L1007-.L1006
	.byte	3,1,1,5,26,9
	.half	.L462-.L1007
	.byte	3,237,11,1,5,45,9
	.half	.L781-.L462
	.byte	1,5,33,9
	.half	.L782-.L781
	.byte	3,1,1,5,41,7,9
	.half	.L56-.L782
	.byte	3,158,116,1,9
	.half	.L1008-.L56
	.byte	3,4,1,5,29,9
	.half	.L465-.L1008
	.byte	3,184,9,1,5,33,9
	.half	.L786-.L465
	.byte	3,3,1,5,35,9
	.half	.L787-.L786
	.byte	3,6,1,5,22,9
	.half	.L783-.L787
	.byte	3,6,1,5,28,9
	.half	.L1009-.L783
	.byte	3,1,1,5,59,9
	.half	.L1010-.L1009
	.byte	1,5,35,9
	.half	.L1011-.L1010
	.byte	3,6,1,5,29,9
	.half	.L1012-.L1011
	.byte	3,1,1,9
	.half	.L1013-.L1012
	.byte	3,1,1,5,18,9
	.half	.L1014-.L1013
	.byte	3,5,1,5,3,9
	.half	.L1015-.L1014
	.byte	1,5,7,7,9
	.half	.L1016-.L1015
	.byte	3,9,1,5,23,7,9
	.half	.L1017-.L1016
	.byte	3,2,1,5,35,9
	.half	.L1018-.L1017
	.byte	1,5,39,9
	.half	.L59-.L1018
	.byte	3,5,1,5,63,9
	.half	.L1019-.L59
	.byte	1,5,53,9
	.half	.L785-.L1019
	.byte	1,5,70,9
	.half	.L789-.L785
	.byte	1,5,23,9
	.half	.L788-.L789
	.byte	3,3,1,5,7,9
	.half	.L1020-.L788
	.byte	3,122,1,5,20,9
	.half	.L58-.L1020
	.byte	3,30,1,5,12,9
	.half	.L1021-.L58
	.byte	3,2,1,9
	.half	.L1022-.L1021
	.byte	3,6,1,9
	.half	.L1023-.L1022
	.byte	3,3,1,9
	.half	.L1024-.L1023
	.byte	3,3,1,9
	.half	.L1025-.L1024
	.byte	3,119,1,5,11,9
	.half	.L62-.L1025
	.byte	3,126,1,9
	.half	.L1026-.L62
	.byte	3,1,1,9
	.half	.L66-.L1026
	.byte	3,2,1,9
	.half	.L1027-.L66
	.byte	3,1,1,9
	.half	.L63-.L1027
	.byte	3,2,1,9
	.half	.L1028-.L63
	.byte	3,1,1,9
	.half	.L64-.L1028
	.byte	3,2,1,9
	.half	.L1029-.L64
	.byte	3,1,1,9
	.half	.L65-.L1029
	.byte	3,2,1,5,35,9
	.half	.L60-.L65
	.byte	3,12,1,5,29,9
	.half	.L1030-.L60
	.byte	3,1,1,9
	.half	.L1031-.L1030
	.byte	3,1,1,5,26,9
	.half	.L1032-.L1031
	.byte	3,6,1,5,3,9
	.half	.L476-.L1032
	.byte	3,245,6,1,9
	.half	.L1033-.L476
	.byte	3,3,1,5,34,9
	.half	.L477-.L1033
	.byte	3,141,121,1,5,1,7,9
	.half	.L255-.L477
	.byte	3,219,117,0,1,1
.L1003:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_WriteSafetyEndInitProtRegMask')
	.sect	'.debug_ranges'
.L254:
	.word	-1,.L178,0,.L255-.L178,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_GetPeripheralEndInitPassword')
	.sect	'.debug_info'
.L256:
	.word	262
	.half	3
	.word	.L257
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L259,.L258
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_GetPeripheralEndInitPassword',0,1,242,7,8
	.word	.L372
	.byte	1,1,1
	.word	.L180,.L479,.L179
	.byte	4
	.word	.L180,.L479
	.byte	5
	.byte	'Password',0,1,244,7,10
	.word	.L372,.L480
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_GetPeripheralEndInitPassword')
	.sect	'.debug_abbrev'
.L257:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_GetPeripheralEndInitPassword')
	.sect	'.debug_line'
.L258:
	.word	.L1035-.L1034
.L1034:
	.half	3
	.word	.L1037-.L1036
.L1036:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L1037:
	.byte	5,14,7,0,5,2
	.word	.L180
	.byte	3,248,7,1,5,23,9
	.half	.L1038-.L180
	.byte	3,7,1,5,1,9
	.half	.L790-.L1038
	.byte	3,5,1,7,9
	.half	.L260-.L790
	.byte	0,1,1
.L1035:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_GetPeripheralEndInitPassword')
	.sect	'.debug_ranges'
.L259:
	.word	-1,.L180,0,.L260-.L180,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_SetPeripheralEndInitPassword')
	.sect	'.debug_info'
.L261:
	.word	348
	.half	3
	.word	.L262
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L264,.L263
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_SetPeripheralEndInitPassword',0,1,161,8,8
	.word	.L372
	.byte	1,1,1
	.word	.L182,.L481,.L181
	.byte	4
	.byte	'Password',0,1,161,8,55
	.word	.L482,.L483
	.byte	5
	.word	.L182,.L481
	.byte	6
	.byte	'OldPassword',0,1,163,8,10
	.word	.L372,.L484
	.byte	6
	.byte	'NewPassword',0,1,164,8,10
	.word	.L372,.L485
	.byte	7
	.word	.L422,.L486,.L487
	.byte	8
	.word	.L425,.L488
	.byte	9
	.word	.L427,.L486,.L487
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_SetPeripheralEndInitPassword')
	.sect	'.debug_abbrev'
.L262:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_SetPeripheralEndInitPassword')
	.sect	'.debug_line'
.L263:
	.word	.L1040-.L1039
.L1039:
	.half	3
	.word	.L1042-.L1041
.L1041:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L1042:
	.byte	5,34,7,0,5,2
	.word	.L182
	.byte	3,163,8,1,5,39,9
	.half	.L792-.L182
	.byte	3,6,1,5,22,9
	.half	.L791-.L792
	.byte	3,6,1,5,28,9
	.half	.L1043-.L791
	.byte	3,1,1,5,20,9
	.half	.L1044-.L1043
	.byte	3,1,1,5,47,9
	.half	.L1045-.L1044
	.byte	3,5,1,9
	.half	.L1046-.L1045
	.byte	3,1,1,5,15,9
	.half	.L795-.L1046
	.byte	3,126,1,5,26,9
	.half	.L793-.L795
	.byte	3,8,1,5,3,9
	.half	.L486-.L793
	.byte	3,176,16,1,9
	.half	.L1047-.L486
	.byte	3,3,1,5,38,9
	.half	.L487-.L1047
	.byte	3,211,111,1,5,3,9
	.half	.L1048-.L487
	.byte	3,5,1,5,1,9
	.half	.L797-.L1048
	.byte	3,1,1,7,9
	.half	.L265-.L797
	.byte	0,1,1
.L1040:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_SetPeripheralEndInitPassword')
	.sect	'.debug_ranges'
.L264:
	.word	-1,.L182,0,.L265-.L182,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_WritePeripEndInitProtReg')
	.sect	'.debug_info'
.L266:
	.word	360
	.half	3
	.word	.L267
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L269,.L268
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_WritePeripEndInitProtReg',0,1,229,8,6,1,1,1
	.word	.L184,.L489,.L183
	.byte	4
	.byte	'RegAddress',0,1,229,8,57
	.word	.L490,.L491
	.byte	4
	.byte	'DataValue',0,1,230,8,49
	.word	.L492,.L493
	.byte	5
	.word	.L184,.L489
	.byte	6
	.word	.L401,.L494,.L74
	.byte	7
	.word	.L403,.L495
	.byte	7
	.word	.L405,.L496
	.byte	8
	.word	.L407,.L494,.L74
	.byte	0,6
	.word	.L422,.L497,.L498
	.byte	7
	.word	.L425,.L499
	.byte	8
	.word	.L427,.L497,.L498
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_WritePeripEndInitProtReg')
	.sect	'.debug_abbrev'
.L267:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_WritePeripEndInitProtReg')
	.sect	'.debug_line'
.L268:
	.word	.L1050-.L1049
.L1049:
	.half	3
	.word	.L1052-.L1051
.L1051:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L1052:
	.byte	5,6,7,0,5,2
	.word	.L184
	.byte	3,228,8,1,5,3,9
	.half	.L802-.L184
	.byte	3,8,1,5,23,7,9
	.half	.L1053-.L802
	.byte	3,4,1,9
	.half	.L1054-.L1053
	.byte	3,1,1,5,26,9
	.half	.L494-.L1054
	.byte	3,193,10,1,5,45,9
	.half	.L798-.L494
	.byte	1,5,33,9
	.half	.L1055-.L798
	.byte	3,1,1,5,41,7,9
	.half	.L74-.L1055
	.byte	3,201,117,1,5,24,9
	.half	.L799-.L74
	.byte	3,6,1,5,30,9
	.half	.L1056-.L799
	.byte	3,1,1,5,22,9
	.half	.L1057-.L1056
	.byte	3,1,1,5,41,9
	.half	.L1058-.L1057
	.byte	3,6,1,9
	.half	.L1059-.L1058
	.byte	3,1,1,9
	.half	.L1060-.L1059
	.byte	3,1,1,5,37,9
	.half	.L1061-.L1060
	.byte	3,10,1,5,41,9
	.half	.L1062-.L1061
	.byte	3,6,1,9
	.half	.L1063-.L1062
	.byte	3,1,1,9
	.half	.L1064-.L1063
	.byte	3,1,1,5,28,9
	.half	.L1065-.L1064
	.byte	3,5,1,5,3,9
	.half	.L497-.L1065
	.byte	3,202,15,1,9
	.half	.L1066-.L497
	.byte	3,3,1,5,40,9
	.half	.L498-.L1066
	.byte	3,184,112,1,5,1,7,9
	.half	.L270-.L498
	.byte	3,2,0,1,1
.L1050:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_WritePeripEndInitProtReg')
	.sect	'.debug_ranges'
.L269:
	.word	-1,.L184,0,.L270-.L184,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_GetCpuPhysicalId')
	.sect	'.debug_info'
.L271:
	.word	248
	.half	3
	.word	.L272
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L274,.L273
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_GetCpuPhysicalId',0,1,196,9,8
	.word	.L372
	.byte	1,1,1
	.word	.L186,.L500,.L185
	.byte	4
	.word	.L186,.L500
	.byte	5
	.byte	'CoreId',0,1,200,9,10
	.word	.L372,.L501
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_GetCpuPhysicalId')
	.sect	'.debug_abbrev'
.L272:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_GetCpuPhysicalId')
	.sect	'.debug_line'
.L273:
	.word	.L1068-.L1067
.L1067:
	.half	3
	.word	.L1070-.L1069
.L1069:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L1070:
	.byte	5,27,7,0,5,2
	.word	.L186
	.byte	3,199,9,1,5,1,9
	.half	.L804-.L186
	.byte	3,4,1,7,9
	.half	.L275-.L804
	.byte	0,1,1
.L1068:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_GetCpuPhysicalId')
	.sect	'.debug_ranges'
.L274:
	.word	-1,.L186,0,.L275-.L186,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_GetGlobalDsprAddress')
	.sect	'.debug_info'
.L276:
	.word	332
	.half	3
	.word	.L277
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L279,.L278
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_GetGlobalDsprAddress',0,1,240,9,8
	.word	.L372
	.byte	1,1,1
	.word	.L188,.L502,.L187
	.byte	4
	.byte	'CpuId',0,1,241,9,15
	.word	.L503,.L504
	.byte	4
	.byte	'LocalDsprAddress',0,1,241,9,35
	.word	.L505,.L506
	.byte	5
	.word	.L188,.L502
	.byte	6
	.byte	'DsprMsb',0,1,248,9,9
	.word	.L507,.L508
	.byte	6
	.byte	'RetGlobalAddress',0,1,251,9,11
	.word	.L372,.L509
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_GetGlobalDsprAddress')
	.sect	'.debug_abbrev'
.L277:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_GetGlobalDsprAddress')
	.sect	'.debug_line'
.L278:
	.word	.L1072-.L1071
.L1071:
	.half	3
	.word	.L1074-.L1073
.L1073:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L1074:
	.byte	5,78,7,0,5,2
	.word	.L188
	.byte	3,247,9,1,5,28,9
	.half	.L805-.L188
	.byte	3,3,1,5,6,9
	.half	.L806-.L805
	.byte	3,7,1,5,14,7,9
	.half	.L1075-.L806
	.byte	3,1,1,5,26,7,9
	.half	.L1076-.L1075
	.byte	3,9,1,5,9,9
	.half	.L1077-.L1076
	.byte	3,1,1,5,29,9
	.half	.L1078-.L1077
	.byte	1,5,5,9
	.half	.L1079-.L1078
	.byte	3,127,1,5,22,7,9
	.half	.L1080-.L1079
	.byte	3,6,1,5,7,9
	.half	.L1081-.L1080
	.byte	1,5,44,7,9
	.half	.L1082-.L1081
	.byte	3,6,1,5,34,9
	.half	.L807-.L1082
	.byte	3,1,1,5,55,9
	.half	.L1083-.L807
	.byte	1,5,63,9
	.half	.L1084-.L1083
	.byte	1,5,79,9
	.half	.L808-.L1084
	.byte	3,127,1,5,1,9
	.half	.L77-.L808
	.byte	3,27,1,5,23,7,9
	.half	.L80-.L77
	.byte	3,114,1,5,44,9
	.half	.L1085-.L80
	.byte	1,5,9,9
	.half	.L1086-.L1085
	.byte	1,5,28,7,9
	.half	.L1087-.L1086
	.byte	3,4,1,5,1,9
	.half	.L82-.L1087
	.byte	3,10,1,7,9
	.half	.L280-.L82
	.byte	0,1,1
.L1072:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_GetGlobalDsprAddress')
	.sect	'.debug_ranges'
.L279:
	.word	-1,.L188,0,.L280-.L188,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_GetLocalDsprAddress')
	.sect	'.debug_info'
.L281:
	.word	438
	.half	3
	.word	.L282
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L284,.L283
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_GetLocalDsprAddress',0,1,211,10,8
	.word	.L372
	.byte	1,1,1
	.word	.L190,.L510,.L189
	.byte	4
	.byte	'GlobalDsprAddress',0,1,211,10,46
	.word	.L511,.L512
	.byte	5
	.word	.L190,.L510
	.byte	6
	.byte	'DsprEndAddress',0,1,213,10,10
	.word	.L372,.L513
	.byte	6
	.byte	'DsprMsb',0,1,219,10,9
	.word	.L507,.L514
	.byte	6
	.byte	'RetLocalAddress',0,1,222,10,10
	.word	.L372,.L515
	.byte	6
	.byte	'CoreIndex',0,1,225,10,10
	.word	.L372,.L516
	.byte	7
	.word	.L376,.L517,.L518
	.byte	8
	.word	.L378,.L519
	.byte	6
	.byte	'CoreIdIndex',0,1,214,19,10
	.word	.L372,.L524
	.byte	0,0,9
	.word	.L376,.L520,.L521
	.byte	9
	.word	.L376,.L522,.L523
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_GetLocalDsprAddress')
	.sect	'.debug_abbrev'
.L282:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,85,6,0,0,9,29,0,49,16
	.byte	17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_GetLocalDsprAddress')
	.sect	'.debug_line'
.L283:
	.word	.L1089-.L1088
.L1088:
	.half	3
	.word	.L1091-.L1090
.L1090:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L1091:
	.byte	5,79,7,0,5,2
	.word	.L190
	.byte	3,218,10,1,5,26,9
	.half	.L809-.L190
	.byte	3,3,1,5,32,9
	.half	.L517-.L809
	.byte	3,248,8,1,5,19,9
	.half	.L812-.L517
	.byte	3,7,1,5,31,9
	.half	.L1092-.L812
	.byte	3,2,1,5,7,9
	.half	.L518-.L1092
	.byte	3,136,119,1,5,16,7,9
	.half	.L1093-.L518
	.byte	3,1,1,5,19,7,9
	.half	.L1094-.L1093
	.byte	3,1,1,5,40,9
	.half	.L1095-.L1094
	.byte	1,5,16,9
	.half	.L1096-.L1095
	.byte	1,5,27,7,9
	.half	.L1097-.L1096
	.byte	3,9,1,5,53,9
	.half	.L813-.L1097
	.byte	3,1,1,5,9,9
	.half	.L1098-.L813
	.byte	1,5,29,9
	.half	.L1099-.L1098
	.byte	1,5,5,9
	.half	.L1100-.L1099
	.byte	3,127,1,5,45,7,9
	.half	.L1101-.L1100
	.byte	3,7,1,5,26,9
	.half	.L811-.L1101
	.byte	3,1,1,5,80,9
	.half	.L814-.L811
	.byte	3,127,1,5,1,9
	.half	.L87-.L814
	.byte	3,41,1,5,19,7,9
	.half	.L84-.L87
	.byte	3,96,1,5,5,9
	.half	.L1102-.L84
	.byte	1,5,7,7,9
	.half	.L520-.L1102
	.byte	3,4,1,5,26,7,9
	.half	.L521-.L520
	.byte	3,2,1,5,46,9
	.half	.L1103-.L521
	.byte	1,5,62,9
	.half	.L815-.L1103
	.byte	1,5,26,9
	.half	.L90-.L815
	.byte	3,5,1,5,46,9
	.half	.L522-.L90
	.byte	1,5,29,9
	.half	.L91-.L522
	.byte	3,6,1,5,7,9
	.half	.L810-.L91
	.byte	1,5,25,7,9
	.half	.L1104-.L810
	.byte	3,5,1,5,1,9
	.half	.L89-.L1104
	.byte	3,10,1,7,9
	.half	.L285-.L89
	.byte	0,1,1
.L1089:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_GetLocalDsprAddress')
	.sect	'.debug_ranges'
.L284:
	.word	-1,.L190,0,.L285-.L190,0,0
.L519:
	.word	-1,.L190,.L517-.L190,.L518-.L190,.L520-.L190,.L521-.L190,.L522-.L190,.L523-.L190,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_GetGlobalPsprAddress')
	.sect	'.debug_info'
.L286:
	.word	361
	.half	3
	.word	.L287
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L289,.L288
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_GetGlobalPsprAddress',0,1,197,11,8
	.word	.L372
	.byte	1,1,1
	.word	.L192,.L525,.L191
	.byte	4
	.byte	'CpuId',0,1,197,11,47
	.word	.L526,.L527
	.byte	4
	.byte	'LocalPsprAddress',0,1,198,11,47
	.word	.L528,.L529
	.byte	5
	.word	.L192,.L525
	.byte	6
	.byte	'PsprMsb',0,1,205,11,9
	.word	.L507,.L530
	.byte	6
	.byte	'RetGlobalAddress',0,1,207,11,10
	.word	.L372,.L531
	.byte	6
	.byte	'LocalRetAddress',0,1,208,11,10
	.word	.L372,.L532
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_GetGlobalPsprAddress')
	.sect	'.debug_abbrev'
.L287:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_GetGlobalPsprAddress')
	.sect	'.debug_line'
.L288:
	.word	.L1106-.L1105
.L1105:
	.half	3
	.word	.L1108-.L1107
.L1107:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L1108:
	.byte	5,78,7,0,5,2
	.word	.L192
	.byte	3,204,11,1,5,27,9
	.half	.L816-.L192
	.byte	3,2,1,5,6,9
	.half	.L818-.L816
	.byte	3,8,1,5,14,7,9
	.half	.L1109-.L818
	.byte	3,1,1,5,20,7,9
	.half	.L1110-.L1109
	.byte	3,5,1,5,5,9
	.half	.L1111-.L1110
	.byte	1,5,30,7,9
	.half	.L1112-.L1111
	.byte	3,5,1,5,55,9
	.half	.L1113-.L1112
	.byte	1,5,7,9
	.half	.L1114-.L1113
	.byte	1,5,37,7,9
	.half	.L1115-.L1114
	.byte	3,6,1,5,21,9
	.half	.L819-.L1115
	.byte	3,1,1,5,42,9
	.half	.L1116-.L819
	.byte	1,5,50,9
	.half	.L1117-.L1116
	.byte	1,5,13,9
	.half	.L1118-.L1117
	.byte	3,1,1,5,40,9
	.half	.L1119-.L1118
	.byte	1,5,11,9
	.half	.L817-.L1119
	.byte	1,5,72,9
	.half	.L820-.L817
	.byte	3,126,1,5,1,9
	.half	.L94-.L820
	.byte	3,34,1,5,22,7,9
	.half	.L96-.L94
	.byte	3,105,1,5,43,9
	.half	.L1120-.L96
	.byte	1,5,7,9
	.half	.L1121-.L1120
	.byte	1,5,44,7,9
	.half	.L1122-.L1121
	.byte	3,2,1,5,32,9
	.half	.L822-.L1122
	.byte	3,6,1,5,59,9
	.half	.L1123-.L822
	.byte	1,5,12,9
	.half	.L821-.L1123
	.byte	1,5,33,7,9
	.half	.L1124-.L821
	.byte	3,1,1,5,59,9
	.half	.L1125-.L1124
	.byte	1,5,30,9
	.half	.L1126-.L1125
	.byte	1,5,28,7,9
	.half	.L1127-.L1126
	.byte	3,4,1,5,1,9
	.half	.L99-.L1127
	.byte	3,10,1,7,9
	.half	.L290-.L99
	.byte	0,1,1
.L1106:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_GetGlobalPsprAddress')
	.sect	'.debug_ranges'
.L289:
	.word	-1,.L192,0,.L290-.L192,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_GetLocalPsprAddress')
	.sect	'.debug_info'
.L291:
	.word	425
	.half	3
	.word	.L292
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L294,.L293
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_GetLocalPsprAddress',0,1,171,12,8
	.word	.L372
	.byte	1,1,1
	.word	.L194,.L533,.L193
	.byte	4
	.byte	'GlobalPsprAddress',0,1,171,12,46
	.word	.L534,.L535
	.byte	5
	.word	.L194,.L533
	.byte	6
	.byte	'PsprMsb',0,1,187,12,9
	.word	.L507,.L536
	.byte	6
	.byte	'RetLocalAddress',0,1,189,12,10
	.word	.L372,.L537
	.byte	6
	.byte	'LocalRetAddress',0,1,190,12,10
	.word	.L372,.L538
	.byte	6
	.byte	'CpuIndex',0,1,193,12,10
	.word	.L372,.L539
	.byte	7
	.word	.L376,.L540,.L541
	.byte	8
	.word	.L378,.L542
	.byte	6
	.byte	'CoreIdIndex',0,1,214,19,10
	.word	.L372,.L545
	.byte	0,0,9
	.word	.L376,.L543,.L544
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_GetLocalPsprAddress')
	.sect	'.debug_abbrev'
.L292:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,85,6,0,0,9,29,0,49,16
	.byte	17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_GetLocalPsprAddress')
	.sect	'.debug_line'
.L293:
	.word	.L1129-.L1128
.L1128:
	.half	3
	.word	.L1131-.L1130
.L1130:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L1131:
	.byte	5,79,7,0,5,2
	.word	.L194
	.byte	3,186,12,1,5,26,9
	.half	.L823-.L194
	.byte	3,2,1,5,32,9
	.half	.L540-.L823
	.byte	3,153,7,1,5,19,9
	.half	.L825-.L540
	.byte	3,7,1,5,31,9
	.half	.L1132-.L825
	.byte	3,2,1,5,7,9
	.half	.L541-.L1132
	.byte	3,232,120,1,5,16,7,9
	.half	.L1133-.L541
	.byte	3,1,1,5,19,7,9
	.half	.L1134-.L1133
	.byte	3,1,1,5,40,9
	.half	.L1135-.L1134
	.byte	1,5,16,9
	.half	.L1136-.L1135
	.byte	1,5,40,7,9
	.half	.L1137-.L1136
	.byte	3,3,1,5,33,9
	.half	.L826-.L1137
	.byte	3,5,1,5,28,9
	.half	.L1138-.L826
	.byte	3,127,1,5,9,9
	.half	.L1139-.L1138
	.byte	3,1,1,5,8,9
	.half	.L824-.L1139
	.byte	3,127,1,5,13,7,9
	.half	.L1140-.L824
	.byte	3,2,1,5,39,9
	.half	.L1141-.L1140
	.byte	1,5,65,9
	.half	.L1142-.L1141
	.byte	3,127,1,5,53,7,9
	.half	.L1143-.L1142
	.byte	3,7,1,5,51,9
	.half	.L1144-.L1143
	.byte	1,5,34,9
	.half	.L827-.L1144
	.byte	3,1,1,5,1,9
	.half	.L106-.L827
	.byte	3,29,1,5,20,7,9
	.half	.L103-.L106
	.byte	3,107,1,5,5,9
	.half	.L1145-.L103
	.byte	1,5,29,7,9
	.half	.L1146-.L1145
	.byte	3,7,1,5,54,9
	.half	.L543-.L1146
	.byte	1,5,7,9
	.half	.L1147-.L543
	.byte	1,5,25,7,9
	.half	.L1148-.L1147
	.byte	3,4,1,5,1,9
	.half	.L109-.L1148
	.byte	3,10,1,7,9
	.half	.L295-.L109
	.byte	0,1,1
.L1129:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_GetLocalPsprAddress')
	.sect	'.debug_ranges'
.L294:
	.word	-1,.L194,0,.L295-.L194,0,0
.L542:
	.word	-1,.L194,.L540-.L194,.L541-.L194,.L543-.L194,.L544-.L194,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_DelayTickResolution')
	.sect	'.debug_info'
.L296:
	.word	230
	.half	3
	.word	.L297
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L299,.L298
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_DelayTickResolution',0,1,141,13,8
	.word	.L372
	.byte	1,1,1
	.word	.L196,.L546,.L195
	.byte	4
	.word	.L196,.L546
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_DelayTickResolution')
	.sect	'.debug_abbrev'
.L297:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_DelayTickResolution')
	.sect	'.debug_line'
.L298:
	.word	.L1150-.L1149
.L1149:
	.half	3
	.word	.L1152-.L1151
.L1151:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L1152:
	.byte	5,11,7,0,5,2
	.word	.L196
	.byte	3,143,13,1,5,1,9
	.half	.L1153-.L196
	.byte	3,1,1,7,9
	.half	.L300-.L1153
	.byte	0,1,1
.L1150:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_DelayTickResolution')
	.sect	'.debug_ranges'
.L299:
	.word	-1,.L196,0,.L300-.L196,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_DelayResetTickCalibration')
	.sect	'.debug_info'
.L301:
	.word	646
	.half	3
	.word	.L302
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L304,.L303
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_DelayResetTickCalibration',0,1,173,13,8
	.word	.L372
	.byte	1,1,1
	.word	.L198,.L547,.L197
	.byte	4
	.word	.L198,.L547
	.byte	5
	.byte	'TimerResolution',0,1,176,13,10
	.word	.L372,.L548
	.byte	6
	.word	.L549,.L198,.L550
	.byte	7
	.word	.L551,.L552
	.byte	8
	.word	.L553,.L554
	.byte	5
	.byte	'StmFreq',0,1,159,18,11
	.word	.L557,.L558
	.byte	5
	.byte	'PLL0Freq',0,1,159,18,20
	.word	.L557,.L559
	.byte	5
	.byte	'LocalStmTimerResol',0,1,160,18,11
	.word	.L557,.L560
	.byte	5
	.byte	'OscFreq',0,1,161,18,10
	.word	.L372,.L561
	.byte	5
	.byte	'StmDiv',0,1,162,18,9
	.word	.L507,.L562
	.byte	5
	.byte	'Src0ClkSel',0,1,162,18,17
	.word	.L507,.L563
	.byte	5
	.byte	'PLL0Ndiv',0,1,162,18,29
	.word	.L507,.L564
	.byte	5
	.byte	'PLL0Pdiv',0,1,162,18,39
	.word	.L507,.L565
	.byte	5
	.byte	'PLL0K2div',0,1,162,18,49
	.word	.L507,.L566
	.byte	5
	.byte	'Oscval',0,1,162,18,60
	.word	.L507,.L567
	.byte	5
	.byte	'PLL0ClkSel',0,1,162,18,68
	.word	.L507,.L568
	.byte	6
	.word	.L401,.L569,.L550
	.byte	7
	.word	.L403,.L570
	.byte	7
	.word	.L405,.L571
	.byte	9
	.word	.L407,.L572
	.byte	0,6
	.word	.L401,.L555,.L573
	.byte	7
	.word	.L403,.L570
	.byte	7
	.word	.L405,.L571
	.byte	0,0,0,6
	.word	.L549,.L555,.L556
	.byte	7
	.word	.L551,.L552
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_DelayResetTickCalibration')
	.sect	'.debug_abbrev'
.L302:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6
	.byte	29,1,49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,85,6,0,0,9,11,0,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_DelayResetTickCalibration')
	.sect	'.debug_line'
.L303:
	.word	.L1155-.L1154
.L1154:
	.half	3
	.word	.L1157-.L1156
.L1156:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L1157:
	.byte	5,30,7,0,5,2
	.word	.L198
	.byte	3,159,18,1,5,40,9
	.half	.L828-.L198
	.byte	3,7,1,5,51,9
	.half	.L1158-.L828
	.byte	3,2,1,5,56,9
	.half	.L1159-.L1158
	.byte	1,5,52,9
	.half	.L829-.L1159
	.byte	3,2,1,5,56,9
	.half	.L1160-.L829
	.byte	1,5,59,9
	.half	.L1161-.L1160
	.byte	3,1,1,5,55,9
	.half	.L830-.L1161
	.byte	3,2,1,5,60,9
	.half	.L1162-.L830
	.byte	3,1,1,5,67,9
	.half	.L831-.L1162
	.byte	3,1,1,5,55,9
	.half	.L1163-.L831
	.byte	3,1,1,5,60,9
	.half	.L1164-.L1163
	.byte	3,1,1,5,67,9
	.half	.L832-.L1164
	.byte	3,1,1,5,54,9
	.half	.L1165-.L832
	.byte	3,1,1,5,58,9
	.half	.L1166-.L1165
	.byte	1,5,68,9
	.half	.L1167-.L1166
	.byte	3,1,1,5,51,9
	.half	.L833-.L1167
	.byte	3,1,1,5,55,9
	.half	.L1168-.L833
	.byte	1,5,58,9
	.half	.L834-.L1168
	.byte	3,1,1,5,55,9
	.half	.L1169-.L834
	.byte	3,2,1,5,59,9
	.half	.L1170-.L1169
	.byte	1,5,39,9
	.half	.L836-.L1170
	.byte	3,6,1,5,3,9
	.half	.L1171-.L836
	.byte	3,5,1,5,30,7,9
	.half	.L1172-.L1171
	.byte	3,11,1,5,26,9
	.half	.L569-.L1172
	.byte	3,228,0,1,5,45,9
	.half	.L1173-.L569
	.byte	1,5,53,9
	.half	.L550-.L1173
	.byte	3,133,122,1,5,33,9
	.half	.L555-.L550
	.byte	3,252,5,1,5,51,9
	.half	.L573-.L555
	.byte	3,155,127,1,5,5,9
	.half	.L113-.L573
	.byte	3,10,1,5,14,7,9
	.half	.L1174-.L113
	.byte	3,5,1,5,7,9
	.half	.L1175-.L1174
	.byte	1,5,37,7,9
	.half	.L1176-.L1175
	.byte	3,11,1,5,11,9
	.half	.L835-.L1176
	.byte	3,2,1,5,19,9
	.half	.L116-.L835
	.byte	3,4,1,5,20,9
	.half	.L117-.L116
	.byte	3,6,1,5,39,9
	.half	.L838-.L117
	.byte	1,5,37,9
	.half	.L1177-.L838
	.byte	1,5,20,9
	.half	.L1178-.L1177
	.byte	3,1,1,5,40,9
	.half	.L1179-.L1178
	.byte	1,5,38,9
	.half	.L1180-.L1179
	.byte	1,5,58,9
	.half	.L1181-.L1180
	.byte	3,127,1,5,60,9
	.half	.L839-.L1181
	.byte	3,1,1,5,17,9
	.half	.L115-.L839
	.byte	3,12,1,5,50,9
	.half	.L118-.L115
	.byte	1,5,48,9
	.half	.L1182-.L118
	.byte	1,5,27,9
	.half	.L840-.L1182
	.byte	3,10,1,5,54,9
	.half	.L1183-.L840
	.byte	1,5,11,9
	.half	.L114-.L1183
	.byte	3,12,1,5,3,9
	.half	.L556-.L114
	.byte	3,161,122,1,5,27,9
	.half	.L1184-.L556
	.byte	1,5,1,9
	.half	.L1185-.L1184
	.byte	3,5,1,7,9
	.half	.L305-.L1185
	.byte	0,1,1
.L1155:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_DelayResetTickCalibration')
	.sect	'.debug_ranges'
.L304:
	.word	-1,.L198,0,.L305-.L198,0,0
.L554:
	.word	-1,.L198,0,.L550-.L198,.L555-.L198,.L556-.L198,0,0
.L572:
	.word	-1,.L198,.L569-.L198,.L550-.L198,.L555-.L198,.L573-.L198,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_DelayGetTick')
	.sect	'.debug_info'
.L306:
	.word	247
	.half	3
	.word	.L307
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L309,.L308
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_DelayGetTick',0,1,222,13,8
	.word	.L372
	.byte	1,1,1
	.word	.L200,.L574,.L199
	.byte	4
	.word	.L200,.L574
	.byte	5
	.byte	'DelayTick',0,1,224,13,10
	.word	.L372,.L575
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_DelayGetTick')
	.sect	'.debug_abbrev'
.L307:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_DelayGetTick')
	.sect	'.debug_line'
.L308:
	.word	.L1187-.L1186
.L1186:
	.half	3
	.word	.L1189-.L1188
.L1188:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L1189:
	.byte	5,22,7,0,5,2
	.word	.L200
	.byte	3,223,13,1,5,1,9
	.half	.L841-.L200
	.byte	3,2,1,7,9
	.half	.L310-.L841
	.byte	0,1,1
.L1187:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_DelayGetTick')
	.sect	'.debug_ranges'
.L309:
	.word	-1,.L200,0,.L310-.L200,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_GetCpuIndex')
	.sect	'.debug_info'
.L311:
	.word	298
	.half	3
	.word	.L312
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L314,.L313
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_GetCpuIndex',0,1,253,13,8
	.word	.L372
	.byte	1,1,1
	.word	.L202,.L576,.L201
	.byte	4
	.word	.L202,.L576
	.byte	5
	.byte	'CpuIndex',0,1,255,13,10
	.word	.L372,.L577
	.byte	6
	.word	.L376,.L202,.L578
	.byte	7
	.word	.L378,.L202,.L578
	.byte	5
	.byte	'CoreIdIndex',0,1,214,19,10
	.word	.L372,.L579
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_GetCpuIndex')
	.sect	'.debug_abbrev'
.L312:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6
	.byte	29,1,49,16,17,1,18,1,0,0,7,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_GetCpuIndex')
	.sect	'.debug_line'
.L313:
	.word	.L1191-.L1190
.L1190:
	.half	3
	.word	.L1193-.L1192
.L1192:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L1193:
	.byte	5,32,7,0,5,2
	.word	.L202
	.byte	3,213,19,1,5,19,9
	.half	.L842-.L202
	.byte	3,7,1,5,31,9
	.half	.L1194-.L842
	.byte	3,2,1,5,1,9
	.half	.L578-.L1194
	.byte	3,166,122,1,7,9
	.half	.L315-.L578
	.byte	0,1,1
.L1191:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_GetCpuIndex')
	.sect	'.debug_ranges'
.L314:
	.word	-1,.L202,0,.L315-.L202,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_GetSpinlock')
	.sect	'.debug_info'
.L316:
	.word	310
	.half	3
	.word	.L317
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L319,.L318
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_GetSpinlock',0,1,231,14,6,1,1,1
	.word	.L206,.L580,.L205
	.byte	4
	.byte	'LockAddress',0,1,231,14,46
	.word	.L581,.L582
	.byte	4
	.byte	'Timeout',0,1,231,14,72
	.word	.L583,.L584
	.byte	5
	.word	.L206,.L580
	.byte	6
	.word	.L401,.L585,.L124
	.byte	7
	.word	.L403,.L586
	.byte	7
	.word	.L405,.L587
	.byte	8
	.word	.L407,.L585,.L124
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_GetSpinlock')
	.sect	'.debug_abbrev'
.L317:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_GetSpinlock')
	.sect	'.debug_line'
.L318:
	.word	.L1196-.L1195
.L1195:
	.half	3
	.word	.L1198-.L1197
.L1197:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L1198:
	.byte	5,3,7,0,5,2
	.word	.L206
	.byte	3,237,14,1,5,23,7,9
	.half	.L1199-.L206
	.byte	3,4,1,5,48,9
	.half	.L1200-.L1199
	.byte	1,5,26,9
	.half	.L585-.L1200
	.byte	3,193,4,1,5,45,9
	.half	.L843-.L585
	.byte	1,5,33,9
	.half	.L1201-.L843
	.byte	3,1,1,5,45,7,9
	.half	.L124-.L1201
	.byte	3,198,123,1,5,1,9
	.half	.L320-.L124
	.byte	3,3,0,1,1
.L1196:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_GetSpinlock')
	.sect	'.debug_ranges'
.L319:
	.word	-1,.L206,0,.L320-.L206,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_ReleaseSpinlock')
	.sect	'.debug_info'
.L321:
	.word	329
	.half	3
	.word	.L322
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L324,.L323
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_ReleaseSpinlock',0,1,150,15,6,1,1,1
	.word	.L208,.L588,.L207
	.byte	4
	.byte	'LockAddress',0,1,150,15,51
	.word	.L589,.L590
	.byte	5
	.word	.L208,.L588
	.byte	6
	.word	.L401,.L591,.L126
	.byte	7
	.word	.L403,.L592
	.byte	7
	.word	.L405,.L593
	.byte	8
	.word	.L407,.L591,.L126
	.byte	0,6
	.word	.L422,.L126,.L594
	.byte	7
	.word	.L425,.L595
	.byte	8
	.word	.L427,.L126,.L594
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_ReleaseSpinlock')
	.sect	'.debug_abbrev'
.L322:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_ReleaseSpinlock')
	.sect	'.debug_line'
.L323:
	.word	.L1203-.L1202
.L1202:
	.half	3
	.word	.L1205-.L1204
.L1204:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L1205:
	.byte	5,3,7,0,5,2
	.word	.L208
	.byte	3,156,15,1,5,23,7,9
	.half	.L1206-.L208
	.byte	3,4,1,5,48,9
	.half	.L1207-.L1206
	.byte	1,5,26,9
	.half	.L591-.L1207
	.byte	3,146,4,1,5,45,9
	.half	.L1208-.L591
	.byte	1,5,33,9
	.half	.L1209-.L1208
	.byte	3,1,1,5,3,7,9
	.half	.L126-.L1209
	.byte	3,186,5,1,9
	.half	.L1210-.L126
	.byte	3,3,1,5,1,9
	.half	.L594-.L1210
	.byte	3,185,118,1,7,9
	.half	.L325-.L594
	.byte	0,1,1
.L1203:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_ReleaseSpinlock')
	.sect	'.debug_ranges'
.L324:
	.word	-1,.L208,0,.L325-.L208,0,0
	.sdecl	'.debug_info',debug,cluster('McalLib_GetVersionInfo')
	.sect	'.debug_info'
.L326:
	.word	295
	.half	3
	.word	.L327
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L329,.L328
	.byte	2
	.word	.L217
	.byte	3
	.byte	'McalLib_GetVersionInfo',0,1,160,14,7,1,1,1
	.word	.L204,.L596,.L203
	.byte	4
	.byte	'versioninfo',0,1,160,14,57
	.word	.L597,.L598
	.byte	5
	.word	.L204,.L596
	.byte	6
	.word	.L401,.L599,.L122
	.byte	7
	.word	.L403,.L600
	.byte	7
	.word	.L405,.L601
	.byte	8
	.word	.L407,.L599,.L122
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('McalLib_GetVersionInfo')
	.sect	'.debug_abbrev'
.L327:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('McalLib_GetVersionInfo')
	.sect	'.debug_line'
.L328:
	.word	.L1212-.L1211
.L1211:
	.half	3
	.word	.L1214-.L1213
.L1213:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L1214:
	.byte	5,3,7,0,5,2
	.word	.L204
	.byte	3,168,14,1,5,23,7,9
	.half	.L1215-.L204
	.byte	3,4,1,5,51,9
	.half	.L1216-.L1215
	.byte	1,5,26,9
	.half	.L599-.L1216
	.byte	3,134,5,1,5,45,9
	.half	.L1217-.L599
	.byte	1,5,33,9
	.half	.L1218-.L1217
	.byte	3,1,1,5,63,7,9
	.half	.L122-.L1218
	.byte	3,130,123,1,5,53,9
	.half	.L1219-.L122
	.byte	1,5,63,9
	.half	.L1220-.L1219
	.byte	3,3,1,5,53,9
	.half	.L1221-.L1220
	.byte	1,5,49,9
	.half	.L1222-.L1221
	.byte	3,4,1,5,61,9
	.half	.L1223-.L1222
	.byte	3,127,1,5,49,9
	.half	.L1224-.L1223
	.byte	3,5,1,5,61,9
	.half	.L1225-.L1224
	.byte	3,127,1,5,49,9
	.half	.L1226-.L1225
	.byte	3,5,1,5,61,9
	.half	.L1227-.L1226
	.byte	3,127,1,5,1,9
	.half	.L1228-.L1227
	.byte	3,3,1,7,9
	.half	.L330-.L1228
	.byte	0,1,1
.L1212:
	.sdecl	'.debug_ranges',debug,cluster('McalLib_GetVersionInfo')
	.sect	'.debug_ranges'
.L329:
	.word	-1,.L204,0,.L330-.L204,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_WriteSafetyEndInitProtReg16')
	.sect	'.debug_info'
.L331:
	.word	534
	.half	3
	.word	.L332
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L334,.L333
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_WriteSafetyEndInitProtReg16',0,1,246,6,6,1,1,1
	.word	.L176,.L602,.L175
	.byte	4
	.byte	'RegAddress',0,1,246,6,60
	.word	.L603,.L604
	.byte	4
	.byte	'DataValue',0,1,247,6,52
	.word	.L605,.L606
	.byte	5
	.word	.L176,.L602
	.byte	6
	.word	.L401,.L607,.L40
	.byte	7
	.word	.L403,.L608
	.byte	7
	.word	.L405,.L609
	.byte	8
	.word	.L407,.L607,.L40
	.byte	0,6
	.word	.L436,.L610,.L602
	.byte	7
	.word	.L438,.L611
	.byte	7
	.word	.L440,.L612
	.byte	7
	.word	.L442,.L613
	.byte	7
	.word	.L444,.L614
	.byte	7
	.word	.L446,.L615
	.byte	9
	.word	.L448,.L610,.L602
	.byte	10
	.byte	'RegAddress32',0,1,131,17,26
	.word	.L616,.L617
	.byte	10
	.byte	'RegAddress16',0,1,136,17,26
	.word	.L618,.L619
	.byte	10
	.byte	'TempAddr',0,1,142,17,10
	.word	.L372,.L620
	.byte	10
	.byte	'MaskedData',0,1,145,17,10
	.word	.L372,.L621
	.byte	6
	.word	.L422,.L622,.L623
	.byte	7
	.word	.L425,.L624
	.byte	8
	.word	.L427,.L622,.L623
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_WriteSafetyEndInitProtReg16')
	.sect	'.debug_abbrev'
.L332:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,29,1,49
	.byte	16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,9,11,1,49,16,17,1,18,1,0,0,10,52,0,3,8
	.byte	58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_WriteSafetyEndInitProtReg16')
	.sect	'.debug_line'
.L333:
	.word	.L1230-.L1229
.L1229:
	.half	3
	.word	.L1232-.L1231
.L1231:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L1232:
	.byte	5,3,7,0,5,2
	.word	.L176
	.byte	3,253,6,1,5,23,7,9
	.half	.L1233-.L176
	.byte	3,5,1,9
	.half	.L1234-.L1233
	.byte	3,1,1,5,26,9
	.half	.L607-.L1234
	.byte	3,175,12,1,5,45,9
	.half	.L778-.L607
	.byte	1,5,33,9
	.half	.L1235-.L778
	.byte	3,1,1,5,41,7,9
	.half	.L40-.L1235
	.byte	3,220,115,1,9
	.half	.L1236-.L40
	.byte	3,2,1,9
	.half	.L1237-.L1236
	.byte	3,1,1,9
	.half	.L1238-.L1237
	.byte	3,1,1,5,29,9
	.half	.L610-.L1238
	.byte	3,250,9,1,5,33,9
	.half	.L780-.L610
	.byte	3,3,1,5,35,9
	.half	.L1239-.L780
	.byte	3,6,1,5,22,9
	.half	.L779-.L1239
	.byte	3,6,1,5,28,9
	.half	.L1240-.L779
	.byte	3,1,1,5,59,9
	.half	.L1241-.L1240
	.byte	1,5,35,9
	.half	.L1242-.L1241
	.byte	3,6,1,5,29,9
	.half	.L1243-.L1242
	.byte	3,1,1,9
	.half	.L1244-.L1243
	.byte	3,1,1,5,18,9
	.half	.L1245-.L1244
	.byte	3,5,1,5,3,9
	.half	.L1246-.L1245
	.byte	1,5,5,7,9
	.half	.L1247-.L1246
	.byte	3,5,1,5,23,7,9
	.half	.L1248-.L1247
	.byte	3,6,1,5,35,9
	.half	.L1249-.L1248
	.byte	1,5,21,9
	.half	.L43-.L1249
	.byte	3,17,1,5,5,9
	.half	.L1250-.L43
	.byte	3,122,1,5,20,9
	.half	.L42-.L1250
	.byte	3,21,1,5,12,9
	.half	.L1251-.L42
	.byte	3,2,1,9
	.half	.L1252-.L1251
	.byte	3,6,1,9
	.half	.L1253-.L1252
	.byte	3,3,1,9
	.half	.L1254-.L1253
	.byte	3,3,1,9
	.half	.L1255-.L1254
	.byte	3,119,1,5,11,9
	.half	.L46-.L1255
	.byte	3,126,1,9
	.half	.L1256-.L46
	.byte	3,1,1,9
	.half	.L50-.L1256
	.byte	3,2,1,9
	.half	.L1257-.L50
	.byte	3,1,1,9
	.half	.L47-.L1257
	.byte	3,2,1,9
	.half	.L1258-.L47
	.byte	3,1,1,9
	.half	.L48-.L1258
	.byte	3,2,1,9
	.half	.L1259-.L48
	.byte	3,1,1,9
	.half	.L49-.L1259
	.byte	3,2,1,5,35,9
	.half	.L44-.L49
	.byte	3,12,1,5,29,9
	.half	.L1260-.L44
	.byte	3,1,1,9
	.half	.L1261-.L1260
	.byte	3,1,1,5,26,9
	.half	.L1262-.L1261
	.byte	3,6,1,5,3,9
	.half	.L622-.L1262
	.byte	3,245,6,1,9
	.half	.L1263-.L622
	.byte	3,3,1,5,34,9
	.half	.L623-.L1263
	.byte	3,141,121,1,5,1,7,9
	.half	.L335-.L623
	.byte	3,153,117,0,1,1
.L1230:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_WriteSafetyEndInitProtReg16')
	.sect	'.debug_ranges'
.L334:
	.word	-1,.L176,0,.L335-.L176,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_lUpdateCpuEndInit')
	.sect	'.debug_info'
.L336:
	.word	941
	.half	3
	.word	.L337
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L339,.L338
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_lUpdateCpuEndInit',0,1,146,22,34
	.word	.L383
	.byte	1,1
	.word	.L214,.L625,.L213
	.byte	4
	.byte	'NewPassword',0,1,147,22,52
	.word	.L626,.L627
	.byte	4
	.byte	'CoreIdIndex',0,1,148,22,52
	.word	.L628,.L629
	.byte	4
	.byte	'TimerRelValAtReset',0,1,149,22,52
	.word	.L630,.L631
	.byte	4
	.byte	'UpdatePassword',0,1,150,22,52
	.word	.L632,.L633
	.byte	4
	.byte	'SetResetProtection',0,1,151,22,52
	.word	.L634,.L635
	.byte	5
	.word	.L214,.L625
	.byte	6
	.byte	'CpuEndInitRet',0,1,153,22,29
	.word	.L383,.L636
	.byte	6
	.byte	'UnlockCpuWdtCon0Value',0,1,154,22,10
	.word	.L372,.L637
	.byte	6
	.byte	'NewCpuWdtCon0Value',0,1,155,22,10
	.word	.L372,.L638
	.byte	6
	.byte	'UnlockTimerReload',0,1,156,22,10
	.word	.L372,.L639
	.byte	6
	.byte	'CpuWdtCon0Value',0,1,157,22,10
	.word	.L372,.L640
	.byte	6
	.byte	'UnlockPassword',0,1,158,22,10
	.word	.L372,.L641
	.byte	6
	.byte	'TimerReload',0,1,159,22,10
	.word	.L372,.L642
	.byte	6
	.byte	'dummy',0,1,166,22,19
	.word	.L643,.L644
	.byte	7
	.word	.L645,.L646,.L138
	.byte	8
	.word	.L647,.L648
	.byte	8
	.word	.L649,.L650
	.byte	9
	.word	.L651,.L646,.L138
	.byte	6
	.byte	'PwdBit0Value',0,1,206,15,10
	.word	.L372,.L652
	.byte	6
	.byte	'Password',0,1,210,15,10
	.word	.L372,.L653
	.byte	7
	.word	.L654,.L646,.L655
	.byte	8
	.word	.L656,.L657
	.byte	10
	.word	.L658,.L646,.L655
	.byte	0,0,0,7
	.word	.L659,.L138,.L140
	.byte	8
	.word	.L660,.L661
	.byte	8
	.word	.L662,.L663
	.byte	11
	.word	.L664,.L665
	.byte	6
	.byte	'TimerReload',0,1,142,16,10
	.word	.L372,.L668
	.byte	0,0,7
	.word	.L669,.L140,.L670
	.byte	8
	.word	.L671,.L672
	.byte	8
	.word	.L673,.L674
	.byte	8
	.word	.L675,.L676
	.byte	9
	.word	.L677,.L140,.L670
	.byte	6
	.byte	'TimerReload',0,1,172,23,10
	.word	.L372,.L678
	.byte	0,0,7
	.word	.L654,.L670,.L679
	.byte	8
	.word	.L656,.L657
	.byte	10
	.word	.L658,.L670,.L679
	.byte	0,7
	.word	.L659,.L666,.L667
	.byte	8
	.word	.L660,.L661
	.byte	8
	.word	.L662,.L663
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_lUpdateCpuEndInit')
	.sect	'.debug_abbrev'
.L337:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18
	.byte	1,0,0,10,11,0,49,16,17,1,18,1,0,0,11,11,1,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_lUpdateCpuEndInit')
	.sect	'.debug_line'
.L338:
	.word	.L1265-.L1264
.L1264:
	.half	3
	.word	.L1267-.L1266
.L1266:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L1267:
	.byte	5,34,7,0,5,2
	.word	.L214
	.byte	3,145,22,1,5,38,9
	.half	.L857-.L214
	.byte	3,23,1,5,39,9
	.half	.L1268-.L857
	.byte	3,3,1,5,57,9
	.half	.L1269-.L1268
	.byte	1,5,61,9
	.half	.L860-.L1269
	.byte	3,3,1,5,64,9
	.half	.L646-.L860
	.byte	3,160,122,1,5,27,9
	.half	.L1270-.L646
	.byte	1,5,49,9
	.half	.L1271-.L1270
	.byte	3,1,1,5,7,9
	.half	.L655-.L1271
	.byte	3,135,127,1,5,3,9
	.half	.L1272-.L655
	.byte	1,5,32,7,9
	.half	.L1273-.L1272
	.byte	3,9,1,5,51,9
	.half	.L1274-.L1273
	.byte	1,5,39,9
	.half	.L1275-.L1274
	.byte	1,5,32,9
	.half	.L1276-.L1275
	.byte	3,1,1,5,72,9
	.half	.L1277-.L1276
	.byte	3,127,1,5,32,9
	.half	.L1278-.L1277
	.byte	3,2,1,5,56,9
	.half	.L1279-.L1278
	.byte	3,127,1,5,53,9
	.half	.L1280-.L1279
	.byte	3,1,1,5,28,9
	.half	.L863-.L1280
	.byte	3,2,1,5,35,9
	.half	.L862-.L863
	.byte	1,5,52,9
	.half	.L1281-.L862
	.byte	1,5,7,9
	.half	.L138-.L1281
	.byte	3,47,1,5,3,9
	.half	.L1282-.L138
	.byte	1,5,52,7,9
	.half	.L1283-.L1282
	.byte	3,9,1,5,48,9
	.half	.L1284-.L1283
	.byte	3,1,1,5,21,9
	.half	.L1285-.L1284
	.byte	3,2,1,5,35,9
	.half	.L1286-.L1285
	.byte	1,5,77,9
	.half	.L865-.L1286
	.byte	3,126,1,5,73,9
	.half	.L139-.L865
	.byte	3,11,1,5,24,9
	.half	.L140-.L139
	.byte	3,132,7,1,5,3,9
	.half	.L867-.L140
	.byte	3,4,1,5,31,7,9
	.half	.L1287-.L867
	.byte	3,9,1,5,33,9
	.half	.L859-.L1287
	.byte	3,121,1,5,31,9
	.half	.L868-.L859
	.byte	1,5,22,9
	.half	.L1288-.L868
	.byte	3,9,1,5,20,9
	.half	.L1289-.L1288
	.byte	1,5,3,9
	.half	.L141-.L1289
	.byte	3,6,1,5,64,9
	.half	.L670-.L141
	.byte	3,142,121,1,5,27,9
	.half	.L861-.L670
	.byte	1,5,49,9
	.half	.L869-.L861
	.byte	3,1,1,5,26,9
	.half	.L679-.L869
	.byte	3,235,5,1,5,30,9
	.half	.L666-.L679
	.byte	3,4,1,5,27,9
	.half	.L667-.L666
	.byte	3,1,1,5,62,9
	.half	.L864-.L667
	.byte	3,127,1,5,57,9
	.half	.L1290-.L864
	.byte	3,1,1,5,3,9
	.half	.L870-.L1290
	.byte	3,7,1,5,39,7,9
	.half	.L1291-.L870
	.byte	3,9,1,9
	.half	.L866-.L1291
	.byte	3,1,1,5,71,9
	.half	.L856-.L866
	.byte	3,127,1,9
	.half	.L1292-.L856
	.byte	3,1,1,5,56,9
	.half	.L871-.L1292
	.byte	3,1,1,5,5,9
	.half	.L142-.L871
	.byte	3,8,1,5,41,7,9
	.half	.L1293-.L142
	.byte	3,9,1,5,52,9
	.half	.L872-.L1293
	.byte	3,1,1,5,73,9
	.half	.L1294-.L872
	.byte	3,127,1,5,57,9
	.half	.L1295-.L1294
	.byte	3,2,1,5,68,9
	.half	.L873-.L1295
	.byte	3,1,1,5,41,9
	.half	.L144-.L873
	.byte	3,12,1,5,52,9
	.half	.L1296-.L144
	.byte	3,1,1,5,73,9
	.half	.L1297-.L1296
	.byte	3,127,1,5,57,9
	.half	.L874-.L1297
	.byte	3,2,1,5,40,9
	.half	.L1298-.L874
	.byte	3,3,1,5,20,9
	.half	.L143-.L1298
	.byte	3,5,1,5,41,9
	.half	.L1299-.L143
	.byte	1,5,28,9
	.half	.L1300-.L1299
	.byte	3,2,1,5,46,9
	.half	.L1301-.L1300
	.byte	1,5,9,9
	.half	.L1302-.L1301
	.byte	1,5,20,9
	.half	.L1303-.L1302
	.byte	3,3,1,5,41,9
	.half	.L1304-.L1303
	.byte	1,5,28,9
	.half	.L1305-.L1304
	.byte	3,2,1,5,46,9
	.half	.L1306-.L1305
	.byte	1,5,9,9
	.half	.L875-.L1306
	.byte	1,5,3,9
	.half	.L1307-.L875
	.byte	3,2,1,5,1,9
	.half	.L1308-.L1307
	.byte	3,6,1,7,9
	.half	.L340-.L1308
	.byte	0,1,1
.L1265:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_lUpdateCpuEndInit')
	.sect	'.debug_ranges'
.L339:
	.word	-1,.L214,0,.L340-.L214,0,0
.L665:
	.word	-1,.L214,.L138-.L214,.L140-.L214,.L666-.L214,.L667-.L214,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_lUpdatePeripheralEndInit')
	.sect	'.debug_info'
.L341:
	.word	450
	.half	3
	.word	.L342
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L344,.L343
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_lUpdatePeripheralEndInit',0,1,141,21,15
	.word	.L372
	.byte	1,1
	.word	.L212,.L680,.L211
	.byte	4
	.byte	'NewPassword',0,1,141,21,58
	.word	.L681,.L682
	.byte	4
	.byte	'UpdatePassword',0,1,142,21,59
	.word	.L683,.L684
	.byte	4
	.byte	'SetResetProtection',0,1,143,21,59
	.word	.L685,.L686
	.byte	5
	.word	.L212,.L680
	.byte	6
	.byte	'Password',0,1,145,21,10
	.word	.L372,.L687
	.byte	6
	.byte	'Eicon0Value',0,1,146,21,10
	.word	.L372,.L688
	.byte	6
	.byte	'NewEicon0Value',0,1,147,21,10
	.word	.L372,.L689
	.byte	6
	.byte	'dummy',0,1,153,21,19
	.word	.L690,.L691
	.byte	7
	.word	.L654,.L692,.L693
	.byte	8
	.word	.L656,.L694
	.byte	9
	.word	.L658,.L692,.L693
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_lUpdatePeripheralEndInit')
	.sect	'.debug_abbrev'
.L342:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_lUpdatePeripheralEndInit')
	.sect	'.debug_line'
.L343:
	.word	.L1310-.L1309
.L1309:
	.half	3
	.word	.L1312-.L1311
.L1311:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L1312:
	.byte	5,15,7,0,5,2
	.word	.L212
	.byte	3,140,21,1,5,56,9
	.half	.L849-.L212
	.byte	3,19,1,5,64,9
	.half	.L692-.L849
	.byte	3,175,123,1,5,27,9
	.half	.L1313-.L692
	.byte	1,5,49,9
	.half	.L1314-.L1313
	.byte	3,1,1,5,3,9
	.half	.L693-.L1314
	.byte	3,211,4,1,5,20,7,9
	.half	.L1315-.L693
	.byte	3,7,1,5,49,9
	.half	.L1316-.L1315
	.byte	3,3,1,5,20,9
	.half	.L133-.L1316
	.byte	3,8,1,5,37,9
	.half	.L134-.L133
	.byte	3,1,1,5,3,9
	.half	.L1317-.L134
	.byte	3,7,1,5,43,7,9
	.half	.L1318-.L1317
	.byte	3,9,1,5,23,9
	.half	.L850-.L1318
	.byte	3,127,1,5,43,9
	.half	.L853-.L850
	.byte	3,1,1,5,25,9
	.half	.L1319-.L853
	.byte	3,5,1,5,30,9
	.half	.L1320-.L1319
	.byte	3,3,1,5,11,9
	.half	.L852-.L1320
	.byte	1,5,25,9
	.half	.L1321-.L852
	.byte	3,6,1,5,50,9
	.half	.L1322-.L1321
	.byte	3,116,1,5,25,9
	.half	.L135-.L1322
	.byte	3,24,1,5,30,9
	.half	.L136-.L135
	.byte	3,5,1,5,11,9
	.half	.L1323-.L136
	.byte	1,5,3,9
	.half	.L1324-.L1323
	.byte	3,3,1,5,1,9
	.half	.L1325-.L1324
	.byte	3,7,1,7,9
	.half	.L345-.L1325
	.byte	0,1,1
.L1310:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_lUpdatePeripheralEndInit')
	.sect	'.debug_ranges'
.L344:
	.word	-1,.L212,0,.L345-.L212,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_lUpdateSafetyEndInit')
	.sect	'.debug_info'
.L346:
	.word	448
	.half	3
	.word	.L347
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L349,.L348
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_lUpdateSafetyEndInit',0,1,134,20,15
	.word	.L372
	.byte	1,1
	.word	.L210,.L695,.L209
	.byte	4
	.byte	'NewPassword',0,1,134,20,54
	.word	.L696,.L697
	.byte	4
	.byte	'UpdatePassword',0,1,135,20,55
	.word	.L698,.L699
	.byte	4
	.byte	'SetResetProtection',0,1,136,20,55
	.word	.L700,.L701
	.byte	5
	.word	.L210,.L695
	.byte	6
	.byte	'Password',0,1,138,20,10
	.word	.L372,.L702
	.byte	6
	.byte	'Seicon0Value',0,1,139,20,10
	.word	.L372,.L703
	.byte	6
	.byte	'NewSeicon0Value',0,1,140,20,10
	.word	.L372,.L704
	.byte	6
	.byte	'dummy',0,1,146,20,19
	.word	.L705,.L706
	.byte	7
	.word	.L654,.L707,.L708
	.byte	8
	.word	.L656,.L709
	.byte	9
	.word	.L658,.L707,.L708
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_lUpdateSafetyEndInit')
	.sect	'.debug_abbrev'
.L347:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_lUpdateSafetyEndInit')
	.sect	'.debug_line'
.L348:
	.word	.L1327-.L1326
.L1326:
	.half	3
	.word	.L1329-.L1328
.L1328:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L1329:
	.byte	5,15,7,0,5,2
	.word	.L210
	.byte	3,133,20,1,5,57,9
	.half	.L844-.L210
	.byte	3,18,1,5,64,9
	.half	.L707-.L844
	.byte	3,183,124,1,5,27,9
	.half	.L1330-.L707
	.byte	1,5,49,9
	.half	.L1331-.L1330
	.byte	3,1,1,5,3,9
	.half	.L708-.L1331
	.byte	3,205,3,1,5,20,7,9
	.half	.L1332-.L708
	.byte	3,6,1,5,50,9
	.half	.L1333-.L1332
	.byte	3,3,1,5,21,9
	.half	.L128-.L1333
	.byte	3,7,1,5,37,9
	.half	.L129-.L128
	.byte	3,1,1,5,3,9
	.half	.L1334-.L129
	.byte	3,6,1,5,44,7,9
	.half	.L1335-.L1334
	.byte	3,9,1,5,32,9
	.half	.L845-.L1335
	.byte	3,127,1,5,44,9
	.half	.L848-.L845
	.byte	3,1,1,5,26,9
	.half	.L1336-.L848
	.byte	3,8,1,5,31,9
	.half	.L1337-.L1336
	.byte	3,6,1,5,11,9
	.half	.L847-.L1337
	.byte	1,5,26,9
	.half	.L1338-.L847
	.byte	3,7,1,5,60,9
	.half	.L1339-.L1338
	.byte	3,109,1,5,26,9
	.half	.L130-.L1339
	.byte	3,34,1,5,31,9
	.half	.L131-.L130
	.byte	3,5,1,5,11,9
	.half	.L1340-.L131
	.byte	1,5,3,9
	.half	.L1341-.L1340
	.byte	3,3,1,5,1,9
	.half	.L1342-.L1341
	.byte	3,6,1,7,9
	.half	.L350-.L1342
	.byte	0,1,1
.L1327:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_lUpdateSafetyEndInit')
	.sect	'.debug_ranges'
.L349:
	.word	-1,.L210,0,.L350-.L210,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_lGetSpinlock')
	.sect	'.debug_info'
.L351:
	.word	885
	.half	3
	.word	.L352
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L354,.L353
	.byte	2
	.word	.L217
	.byte	3
	.byte	'Mcal_lGetSpinlock',0,1,227,23,13,1,1
	.word	.L216,.L710,.L215
	.byte	4
	.byte	'LockAddress',0,1,227,23,54
	.word	.L711,.L712
	.byte	4
	.byte	'Timeout',0,1,228,23,44
	.word	.L713,.L714
	.byte	4
	.byte	'ApiId',0,1,228,23,65
	.word	.L715,.L716
	.byte	5
	.word	.L216,.L710
	.byte	6
	.byte	'LockAddVal',0,1,230,23,10
	.word	.L372,.L717
	.byte	6
	.byte	'DelayTickResolution',0,1,231,23,10
	.word	.L372,.L718
	.byte	6
	.byte	'LockAddRet',0,1,232,23,10
	.word	.L372,.L719
	.byte	6
	.byte	'DelayTicks',0,1,233,23,10
	.word	.L372,.L720
	.byte	6
	.byte	'BaseSTMTick',0,1,233,23,22
	.word	.L372,.L721
	.byte	6
	.byte	'CurrSTMTick',0,1,233,23,35
	.word	.L372,.L722
	.byte	6
	.byte	'LockVal',0,1,234,23,10
	.word	.L372,.L723
	.byte	7
	.word	.L549,.L724,.L725
	.byte	8
	.word	.L551,.L726
	.byte	9
	.word	.L553,.L727
	.byte	6
	.byte	'StmFreq',0,1,159,18,11
	.word	.L557,.L730
	.byte	6
	.byte	'PLL0Freq',0,1,159,18,20
	.word	.L557,.L731
	.byte	6
	.byte	'LocalStmTimerResol',0,1,160,18,11
	.word	.L557,.L732
	.byte	6
	.byte	'OscFreq',0,1,161,18,10
	.word	.L372,.L733
	.byte	6
	.byte	'StmDiv',0,1,162,18,9
	.word	.L507,.L734
	.byte	6
	.byte	'Src0ClkSel',0,1,162,18,17
	.word	.L507,.L735
	.byte	6
	.byte	'PLL0Ndiv',0,1,162,18,29
	.word	.L507,.L736
	.byte	6
	.byte	'PLL0Pdiv',0,1,162,18,39
	.word	.L507,.L737
	.byte	6
	.byte	'PLL0K2div',0,1,162,18,49
	.word	.L507,.L738
	.byte	6
	.byte	'Oscval',0,1,162,18,60
	.word	.L507,.L739
	.byte	6
	.byte	'PLL0ClkSel',0,1,162,18,68
	.word	.L507,.L740
	.byte	7
	.word	.L401,.L741,.L725
	.byte	8
	.word	.L403,.L742
	.byte	8
	.word	.L405,.L743
	.byte	10
	.word	.L407,.L744
	.byte	0,7
	.word	.L401,.L728,.L745
	.byte	8
	.word	.L403,.L742
	.byte	8
	.word	.L405,.L743
	.byte	0,0,0,7
	.word	.L549,.L728,.L729
	.byte	8
	.word	.L551,.L726
	.byte	0,7
	.word	.L401,.L746,.L155
	.byte	8
	.word	.L403,.L742
	.byte	8
	.word	.L405,.L743
	.byte	11
	.word	.L407,.L746,.L155
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_lGetSpinlock')
	.sect	'.debug_abbrev'
.L352:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,85,6,0,0,10,11
	.byte	0,49,16,85,6,0,0,11,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Mcal_lGetSpinlock')
	.sect	'.debug_line'
.L353:
	.word	.L1344-.L1343
.L1343:
	.half	3
	.word	.L1346-.L1345
.L1345:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0,0,0,0,0
.L1346:
	.byte	5,13,7,0,5,2
	.word	.L216
	.byte	3,226,23,1,5,6,9
	.half	.L880-.L216
	.byte	3,10,1,5,3,9
	.half	.L1347-.L880
	.byte	1,5,30,7,9
	.half	.L724-.L1347
	.byte	3,179,122,1,5,40,9
	.half	.L881-.L724
	.byte	3,7,1,5,51,9
	.half	.L877-.L881
	.byte	3,2,1,5,56,9
	.half	.L1348-.L877
	.byte	1,5,52,9
	.half	.L882-.L1348
	.byte	3,2,1,5,56,9
	.half	.L1349-.L882
	.byte	1,5,59,9
	.half	.L1350-.L1349
	.byte	3,1,1,5,55,9
	.half	.L883-.L1350
	.byte	3,2,1,5,60,9
	.half	.L1351-.L883
	.byte	3,1,1,5,67,9
	.half	.L884-.L1351
	.byte	3,1,1,5,55,9
	.half	.L1352-.L884
	.byte	3,1,1,5,60,9
	.half	.L1353-.L1352
	.byte	3,1,1,5,67,9
	.half	.L885-.L1353
	.byte	3,1,1,5,54,9
	.half	.L1354-.L885
	.byte	3,1,1,5,58,9
	.half	.L1355-.L1354
	.byte	1,5,68,9
	.half	.L1356-.L1355
	.byte	3,1,1,5,51,9
	.half	.L886-.L1356
	.byte	3,1,1,5,55,9
	.half	.L1357-.L886
	.byte	1,5,58,9
	.half	.L887-.L1357
	.byte	3,1,1,5,55,9
	.half	.L1358-.L887
	.byte	3,2,1,5,59,9
	.half	.L1359-.L1358
	.byte	1,5,39,9
	.half	.L889-.L1359
	.byte	3,6,1,5,3,9
	.half	.L1360-.L889
	.byte	3,5,1,5,30,7,9
	.half	.L1361-.L1360
	.byte	3,11,1,5,26,9
	.half	.L741-.L1361
	.byte	3,228,0,1,5,45,9
	.half	.L1362-.L741
	.byte	1,5,46,9
	.half	.L725-.L1362
	.byte	3,189,4,1,5,33,9
	.half	.L728-.L725
	.byte	3,196,123,1,5,5,9
	.half	.L745-.L728
	.byte	3,158,127,1,5,31,9
	.half	.L1363-.L745
	.byte	1,5,29,9
	.half	.L888-.L1363
	.byte	1,5,51,9
	.half	.L1364-.L888
	.byte	3,125,1,5,5,9
	.half	.L148-.L1364
	.byte	3,10,1,5,14,7,9
	.half	.L1365-.L148
	.byte	3,5,1,5,7,9
	.half	.L1366-.L1365
	.byte	1,5,37,7,9
	.half	.L1367-.L1366
	.byte	3,11,1,5,11,9
	.half	.L891-.L1367
	.byte	3,2,1,5,19,9
	.half	.L151-.L891
	.byte	3,4,1,5,20,9
	.half	.L152-.L151
	.byte	3,6,1,5,39,9
	.half	.L892-.L152
	.byte	1,5,37,9
	.half	.L1368-.L892
	.byte	1,5,20,9
	.half	.L1369-.L1368
	.byte	3,1,1,5,40,9
	.half	.L1370-.L1369
	.byte	1,5,38,9
	.half	.L1371-.L1370
	.byte	1,5,58,9
	.half	.L1372-.L1371
	.byte	3,127,1,5,60,9
	.half	.L893-.L1372
	.byte	3,1,1,5,17,9
	.half	.L150-.L893
	.byte	3,12,1,5,50,9
	.half	.L153-.L150
	.byte	1,5,48,9
	.half	.L1373-.L153
	.byte	1,5,27,9
	.half	.L894-.L1373
	.byte	3,10,1,5,54,9
	.half	.L1374-.L894
	.byte	1,5,11,9
	.half	.L149-.L1374
	.byte	3,12,1,5,70,9
	.half	.L729-.L149
	.byte	3,216,4,1,5,27,9
	.half	.L147-.L729
	.byte	3,4,1,5,3,9
	.half	.L154-.L147
	.byte	3,7,1,5,28,7,9
	.half	.L1375-.L154
	.byte	3,5,1,5,53,9
	.half	.L1376-.L1375
	.byte	1,5,51,9
	.half	.L899-.L1376
	.byte	1,5,27,9
	.half	.L1377-.L899
	.byte	3,1,1,5,25,9
	.half	.L897-.L1377
	.byte	3,1,1,5,49,9
	.half	.L901-.L897
	.byte	3,22,1,5,29,9
	.half	.L158-.L901
	.byte	3,3,1,5,22,9
	.half	.L157-.L158
	.byte	3,1,1,5,35,9
	.half	.L902-.L157
	.byte	3,123,1,5,13,9
	.half	.L1378-.L902
	.byte	1,5,25,7,9
	.half	.L1379-.L1378
	.byte	3,1,1,5,18,7,9
	.half	.L159-.L1379
	.byte	3,82,1,5,20,9
	.half	.L903-.L159
	.byte	3,197,0,1,5,7,9
	.half	.L1380-.L903
	.byte	3,6,1,5,22,7,9
	.half	.L1381-.L1380
	.byte	3,1,1,5,37,9
	.half	.L1382-.L1381
	.byte	1,5,23,7,9
	.half	.L160-.L1382
	.byte	3,11,1,5,8,9
	.half	.L900-.L160
	.byte	1,5,21,7,9
	.half	.L1383-.L900
	.byte	3,1,1,5,32,7,9
	.half	.L1384-.L1383
	.byte	3,6,1,5,26,9
	.half	.L746-.L1384
	.byte	3,235,122,1,5,45,9
	.half	.L1385-.L746
	.byte	1,5,33,9
	.half	.L1386-.L1385
	.byte	3,1,1,5,1,9
	.half	.L155-.L1386
	.byte	3,156,5,1,7,9
	.half	.L355-.L155
	.byte	0,1,1
.L1344:
	.sdecl	'.debug_ranges',debug,cluster('Mcal_lGetSpinlock')
	.sect	'.debug_ranges'
.L354:
	.word	-1,.L216,0,.L355-.L216,0,0
.L727:
	.word	-1,.L216,.L724-.L216,.L725-.L216,.L728-.L216,.L729-.L216,0,0
.L744:
	.word	-1,.L216,.L741-.L216,.L725-.L216,.L728-.L216,.L745-.L216,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_StmTimerResolution')
	.sect	'.debug_info'
.L356:
	.word	202
	.half	3
	.word	.L357
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L217
	.byte	3
	.byte	'Mcal_StmTimerResolution',0,1,188,1,15
	.word	.L372
	.byte	5,3
	.word	Mcal_StmTimerResolution
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_StmTimerResolution')
	.sect	'.debug_abbrev'
.L357:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_LockAddressSiecon0')
	.sect	'.debug_info'
.L358:
	.word	202
	.half	3
	.word	.L359
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L217
	.byte	3
	.byte	'Mcal_LockAddressSiecon0',0,1,190,1,24
	.word	.L747
	.byte	5,3
	.word	Mcal_LockAddressSiecon0
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_LockAddressSiecon0')
	.sect	'.debug_abbrev'
.L359:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_LockAddressEicon0')
	.sect	'.debug_info'
.L360:
	.word	201
	.half	3
	.word	.L361
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L217
	.byte	3
	.byte	'Mcal_LockAddressEicon0',0,1,192,1,24
	.word	.L748
	.byte	5,3
	.word	Mcal_LockAddressEicon0
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_LockAddressEicon0')
	.sect	'.debug_abbrev'
.L361:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_kCoreXMemSegment')
	.sect	'.debug_info'
.L362:
	.word	200
	.half	3
	.word	.L363
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L217
	.byte	3
	.byte	'Mcal_kCoreXMemSegment',0,1,217,1,20
	.word	.L749
	.byte	5,3
	.word	Mcal_kCoreXMemSegment
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_kCoreXMemSegment')
	.sect	'.debug_abbrev'
.L363:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_kDsprEndAddress')
	.sect	'.debug_info'
.L364:
	.word	199
	.half	3
	.word	.L365
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L217
	.byte	3
	.byte	'Mcal_kDsprEndAddress',0,1,131,2,21
	.word	.L750
	.byte	5,3
	.word	Mcal_kDsprEndAddress
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_kDsprEndAddress')
	.sect	'.debug_abbrev'
.L365:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_kPsprLocalEndAddress')
	.sect	'.debug_info'
.L366:
	.word	204
	.half	3
	.word	.L367
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L217
	.byte	3
	.byte	'Mcal_kPsprLocalEndAddress',0,1,152,2,21
	.word	.L751
	.byte	5,3
	.word	Mcal_kPsprLocalEndAddress
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_kPsprLocalEndAddress')
	.sect	'.debug_abbrev'
.L367:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_kPsprGlobalEndAddress')
	.sect	'.debug_info'
.L368:
	.word	205
	.half	3
	.word	.L369
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L217
	.byte	3
	.byte	'Mcal_kPsprGlobalEndAddress',0,1,173,2,21
	.word	.L752
	.byte	5,3
	.word	Mcal_kPsprGlobalEndAddress
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_kPsprGlobalEndAddress')
	.sect	'.debug_abbrev'
.L369:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Mcal_kPsprGlobalBaseAddress')
	.sect	'.debug_info'
.L370:
	.word	206
	.half	3
	.word	.L371
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\McalLib\\ssc\\src\\McalLib.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L217
	.byte	3
	.byte	'Mcal_kPsprGlobalBaseAddress',0,1,194,2,21
	.word	.L753
	.byte	5,3
	.word	Mcal_kPsprGlobalBaseAddress
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Mcal_kPsprGlobalBaseAddress')
	.sect	'.debug_abbrev'
.L371:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('McalLib_GetVersionInfo')
	.sect	'.debug_loc'
.L600:
	.word	0,0
.L601:
	.word	0,0
.L203:
	.word	-1,.L204,0,.L596-.L204
	.half	2
	.byte	138,0
	.word	0,0
.L598:
	.word	-1,.L204,0,.L596-.L204
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_DelayGetTick')
	.sect	'.debug_loc'
.L575:
	.word	-1,.L200,.L841-.L200,.L574-.L200
	.half	1
	.byte	82
	.word	0,0
.L199:
	.word	-1,.L200,0,.L574-.L200
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_DelayResetTickCalibration')
	.sect	'.debug_loc'
.L552:
	.word	0,0
.L570:
	.word	0,0
.L571:
	.word	0,0
.L560:
	.word	-1,.L198,.L828-.L198,.L547-.L198
	.half	1
	.byte	90
	.word	0,0
.L197:
	.word	-1,.L198,0,.L547-.L198
	.half	2
	.byte	138,0
	.word	0,0
.L561:
	.word	-1,.L198,.L835-.L198,.L116-.L198
	.half	1
	.byte	95
	.word	.L117-.L198,.L838-.L198
	.half	1
	.byte	95
	.word	0,0
.L567:
	.word	-1,.L198,.L834-.L198,.L835-.L198
	.half	1
	.byte	95
	.word	.L116-.L198,.L117-.L198
	.half	1
	.byte	95
	.word	.L115-.L198,.L118-.L198
	.half	1
	.byte	95
	.word	0,0
.L568:
	.word	-1,.L198,.L836-.L198,.L837-.L198
	.half	1
	.byte	94
	.word	.L115-.L198,.L118-.L198
	.half	1
	.byte	94
	.word	0,0
.L559:
	.word	-1,.L198,.L839-.L198,.L115-.L198
	.half	1
	.byte	95
	.word	0,0
.L566:
	.word	-1,.L198,.L833-.L198,.L547-.L198
	.half	1
	.byte	93
	.word	0,0
.L564:
	.word	-1,.L198,.L831-.L198,.L547-.L198
	.half	1
	.byte	88
	.word	0,0
.L565:
	.word	-1,.L198,.L832-.L198,.L547-.L198
	.half	1
	.byte	89
	.word	0,0
.L563:
	.word	-1,.L198,.L830-.L198,.L547-.L198
	.half	1
	.byte	92
	.word	0,0
.L562:
	.word	-1,.L198,.L829-.L198,.L547-.L198
	.half	1
	.byte	91
	.word	0,0
.L558:
	.word	-1,.L198,.L840-.L198,.L114-.L198
	.half	1
	.byte	95
	.word	0,0
.L548:
	.word	-1,.L198,.L556-.L198,.L547-.L198
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_DelayTickResolution')
	.sect	'.debug_loc'
.L195:
	.word	-1,.L196,0,.L546-.L196
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_GetCpuIndex')
	.sect	'.debug_loc'
.L579:
	.word	-1,.L202,.L842-.L202,.L576-.L202
	.half	1
	.byte	82
	.word	0,0
.L577:
	.word	0,0
.L201:
	.word	-1,.L202,0,.L576-.L202
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_GetCpuPhysicalId')
	.sect	'.debug_loc'
.L501:
	.word	-1,.L186,.L804-.L186,.L500-.L186
	.half	1
	.byte	82
	.word	0,0
.L185:
	.word	-1,.L186,0,.L500-.L186
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_GetCpuWdgPassword')
	.sect	'.debug_loc'
.L375:
	.word	0,0
.L379:
	.word	-1,.L164,.L754-.L164,.L377-.L164
	.half	1
	.byte	95
	.word	0,0
.L163:
	.word	-1,.L164,0,.L373-.L164
	.half	2
	.byte	138,0
	.word	0,0
.L374:
	.word	-1,.L164,.L755-.L164,.L373-.L164
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_GetGlobalDsprAddress')
	.sect	'.debug_loc'
.L504:
	.word	-1,.L188,0,.L502-.L188
	.half	1
	.byte	84
	.word	0,0
.L508:
	.word	-1,.L188,.L805-.L188,.L502-.L188
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L506:
	.word	-1,.L188,0,.L502-.L188
	.half	1
	.byte	85
	.word	0,0
.L187:
	.word	-1,.L188,0,.L502-.L188
	.half	2
	.byte	138,0
	.word	0,0
.L509:
	.word	-1,.L188,.L806-.L188,.L807-.L188
	.half	1
	.byte	82
	.word	.L808-.L188,.L502-.L188
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_GetGlobalPsprAddress')
	.sect	'.debug_loc'
.L527:
	.word	-1,.L192,0,.L525-.L192
	.half	1
	.byte	84
	.word	0,0
.L529:
	.word	-1,.L192,0,.L525-.L192
	.half	1
	.byte	85
	.word	0,0
.L532:
	.word	-1,.L192,.L822-.L192,.L99-.L192
	.half	1
	.byte	95
	.word	0,0
.L191:
	.word	-1,.L192,0,.L525-.L192
	.half	2
	.byte	138,0
	.word	0,0
.L530:
	.word	-1,.L192,.L816-.L192,.L817-.L192
	.half	5
	.byte	144,32,157,32,0
	.word	.L96-.L192,.L821-.L192
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L531:
	.word	-1,.L192,.L818-.L192,.L819-.L192
	.half	1
	.byte	82
	.word	.L820-.L192,.L525-.L192
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_GetLocalDsprAddress')
	.sect	'.debug_loc'
.L524:
	.word	-1,.L190,.L812-.L190,.L518-.L190
	.half	1
	.byte	95
	.word	.L518-.L190,.L813-.L190
	.half	1
	.byte	81
	.word	.L84-.L190,.L510-.L190
	.half	1
	.byte	81
	.word	0,0
.L516:
	.word	0,0
.L513:
	.word	-1,.L190,.L815-.L190,.L90-.L190
	.half	1
	.byte	95
	.word	.L91-.L190,.L89-.L190
	.half	1
	.byte	95
	.word	0,0
.L514:
	.word	-1,.L190,.L809-.L190,.L810-.L190
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L512:
	.word	-1,.L190,0,.L510-.L190
	.half	1
	.byte	84
	.word	0,0
.L189:
	.word	-1,.L190,0,.L510-.L190
	.half	2
	.byte	138,0
	.word	0,0
.L515:
	.word	-1,.L190,.L517-.L190,.L811-.L190
	.half	1
	.byte	82
	.word	.L814-.L190,.L510-.L190
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_GetLocalPsprAddress')
	.sect	'.debug_loc'
.L545:
	.word	-1,.L194,.L825-.L194,.L826-.L194
	.half	1
	.byte	81
	.word	.L103-.L194,.L533-.L194
	.half	1
	.byte	81
	.word	0,0
.L539:
	.word	0,0
.L535:
	.word	-1,.L194,0,.L533-.L194
	.half	1
	.byte	84
	.word	0,0
.L538:
	.word	-1,.L194,.L826-.L194,.L827-.L194
	.half	1
	.byte	81
	.word	0,0
.L193:
	.word	-1,.L194,0,.L533-.L194
	.half	2
	.byte	138,0
	.word	0,0
.L536:
	.word	-1,.L194,.L823-.L194,.L824-.L194
	.half	5
	.byte	144,32,157,32,0
	.word	.L103-.L194,.L533-.L194
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L537:
	.word	-1,.L194,.L540-.L194,.L533-.L194
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_GetPeripheralEndInitPassword')
	.sect	'.debug_loc'
.L179:
	.word	-1,.L180,0,.L479-.L180
	.half	2
	.byte	138,0
	.word	0,0
.L480:
	.word	-1,.L180,.L790-.L180,.L479-.L180
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_GetSafetyEndInitPassword')
	.sect	'.debug_loc'
.L169:
	.word	-1,.L170,0,.L415-.L170
	.half	2
	.byte	138,0
	.word	0,0
.L416:
	.word	-1,.L170,.L767-.L170,.L415-.L170
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_GetSpinlock')
	.sect	'.debug_loc'
.L586:
	.word	0,0
.L587:
	.word	0,0
.L582:
	.word	-1,.L206,0,.L580-.L206
	.half	1
	.byte	100
	.word	0,0
.L205:
	.word	-1,.L206,0,.L580-.L206
	.half	2
	.byte	138,0
	.word	0,0
.L584:
	.word	-1,.L206,0,.L843-.L206
	.half	1
	.byte	84
	.word	.L124-.L206,.L580-.L206
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_ReleaseSpinlock')
	.sect	'.debug_loc'
.L592:
	.word	0,0
.L593:
	.word	0,0
.L590:
	.word	-1,.L208,0,.L588-.L208
	.half	1
	.byte	100
	.word	0,0
.L595:
	.word	0,0
.L207:
	.word	-1,.L208,0,.L588-.L208
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_SetCpuWdgPassword')
	.sect	'.debug_loc'
.L386:
	.word	0,0
.L392:
	.word	-1,.L166,.L758-.L166,.L380-.L166
	.half	1
	.byte	95
	.word	0,0
.L384:
	.word	0,0
.L165:
	.word	-1,.L166,0,.L756-.L166
	.half	2
	.byte	138,0
	.word	.L756-.L166,.L380-.L166
	.half	2
	.byte	138,8
	.word	.L380-.L166,.L380-.L166
	.half	2
	.byte	138,0
	.word	0,0
.L382:
	.word	-1,.L166,0,.L757-.L166
	.half	1
	.byte	84
	.word	0,0
.L385:
	.word	-1,.L166,.L387-.L166,.L380-.L166
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_SetPeripheralEndInitPassword')
	.sect	'.debug_loc'
.L488:
	.word	0,0
.L181:
	.word	-1,.L182,0,.L481-.L182
	.half	2
	.byte	138,0
	.word	0,0
.L485:
	.word	-1,.L182,.L792-.L182,.L793-.L182
	.half	1
	.byte	95
	.word	.L794-.L182,.L795-.L182
	.half	1
	.byte	84
	.word	0,0
.L484:
	.word	-1,.L182,.L795-.L182,.L796-.L182
	.half	1
	.byte	82
	.word	.L793-.L182,.L481-.L182
	.half	1
	.byte	95
	.word	.L797-.L182,.L481-.L182
	.half	1
	.byte	82
	.word	0,0
.L483:
	.word	-1,.L182,0,.L791-.L182
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_SetSafetyEndInitPassword')
	.sect	'.debug_loc'
.L426:
	.word	0,0
.L171:
	.word	-1,.L172,0,.L417-.L172
	.half	2
	.byte	138,0
	.word	0,0
.L421:
	.word	-1,.L172,.L769-.L172,.L770-.L172
	.half	1
	.byte	95
	.word	.L771-.L172,.L772-.L172
	.half	1
	.byte	84
	.word	0,0
.L420:
	.word	-1,.L172,.L772-.L172,.L773-.L172
	.half	1
	.byte	82
	.word	.L770-.L172,.L417-.L172
	.half	1
	.byte	95
	.word	.L774-.L172,.L417-.L172
	.half	1
	.byte	82
	.word	0,0
.L419:
	.word	-1,.L172,0,.L768-.L172
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_WriteCpuEndInitProtReg')
	.sect	'.debug_loc'
.L404:
	.word	0,0
.L399:
	.word	0,0
.L414:
	.word	-1,.L168,.L765-.L168,.L393-.L168
	.half	1
	.byte	88
	.word	.L411-.L168,.L766-.L168
	.half	1
	.byte	85
	.word	0,0
.L398:
	.word	0,0
.L397:
	.word	-1,.L168,0,.L760-.L168
	.half	1
	.byte	84
	.word	.L763-.L168,.L393-.L168
	.half	1
	.byte	89
	.word	.L4-.L168,.L761-.L168
	.half	1
	.byte	84
	.word	0,0
.L406:
	.word	0,0
.L167:
	.word	-1,.L168,0,.L759-.L168
	.half	2
	.byte	138,0
	.word	.L759-.L168,.L4-.L168
	.half	2
	.byte	138,8
	.word	.L4-.L168,.L4-.L168
	.half	2
	.byte	138,0
	.word	.L4-.L168,.L393-.L168
	.half	2
	.byte	138,8
	.word	.L393-.L168,.L393-.L168
	.half	2
	.byte	138,0
	.word	0,0
.L395:
	.word	-1,.L168,0,.L761-.L168
	.half	1
	.byte	100
	.word	.L762-.L168,.L393-.L168
	.half	1
	.byte	111
	.word	0,0
.L400:
	.word	-1,.L168,.L764-.L168,.L393-.L168
	.half	1
	.byte	90
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_WritePeripEndInitProtReg')
	.sect	'.debug_loc'
.L495:
	.word	0,0
.L493:
	.word	-1,.L184,0,.L798-.L184
	.half	1
	.byte	84
	.word	.L802-.L184,.L803-.L184
	.half	1
	.byte	95
	.word	.L74-.L184,.L799-.L184
	.half	1
	.byte	84
	.word	0,0
.L496:
	.word	0,0
.L499:
	.word	0,0
.L183:
	.word	-1,.L184,0,.L489-.L184
	.half	2
	.byte	138,0
	.word	0,0
.L491:
	.word	-1,.L184,0,.L799-.L184
	.half	1
	.byte	100
	.word	.L800-.L184,.L801-.L184
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_WriteSafetyEndInitProtReg')
	.sect	'.debug_loc'
.L445:
	.word	0,0
.L447:
	.word	0,0
.L434:
	.word	0,0
.L432:
	.word	-1,.L174,0,.L775-.L174
	.half	1
	.byte	84
	.word	.L26-.L174,.L776-.L174
	.half	1
	.byte	84
	.word	0,0
.L441:
	.word	0,0
.L435:
	.word	0,0
.L455:
	.word	0,0
.L443:
	.word	0,0
.L452:
	.word	-1,.L174,.L777-.L174,.L428-.L174
	.half	1
	.byte	88
	.word	0,0
.L173:
	.word	-1,.L174,0,.L428-.L174
	.half	2
	.byte	138,0
	.word	0,0
.L430:
	.word	-1,.L174,0,.L776-.L174
	.half	1
	.byte	100
	.word	0,0
.L439:
	.word	0,0
.L450:
	.word	0,0
.L451:
	.word	-1,.L174,.L777-.L174,.L428-.L174
	.half	1
	.byte	89
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_WriteSafetyEndInitProtReg16')
	.sect	'.debug_loc'
.L614:
	.word	0,0
.L615:
	.word	0,0
.L608:
	.word	0,0
.L606:
	.word	-1,.L176,0,.L778-.L176
	.half	1
	.byte	84
	.word	.L40-.L176,.L779-.L176
	.half	1
	.byte	84
	.word	0,0
.L612:
	.word	0,0
.L609:
	.word	0,0
.L624:
	.word	0,0
.L613:
	.word	0,0
.L621:
	.word	-1,.L176,.L780-.L176,.L602-.L176
	.half	1
	.byte	88
	.word	0,0
.L175:
	.word	-1,.L176,0,.L602-.L176
	.half	2
	.byte	138,0
	.word	0,0
.L604:
	.word	-1,.L176,0,.L779-.L176
	.half	1
	.byte	100
	.word	0,0
.L611:
	.word	0,0
.L619:
	.word	0,0
.L617:
	.word	0,0
.L620:
	.word	-1,.L176,.L780-.L176,.L602-.L176
	.half	1
	.byte	90
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_WriteSafetyEndInitProtRegMask')
	.sect	'.debug_loc'
.L469:
	.word	0,0
.L470:
	.word	0,0
.L463:
	.word	0,0
.L460:
	.word	-1,.L178,0,.L781-.L178
	.half	1
	.byte	84
	.word	.L56-.L178,.L783-.L178
	.half	1
	.byte	84
	.word	0,0
.L467:
	.word	0,0
.L464:
	.word	0,0
.L478:
	.word	0,0
.L461:
	.word	-1,.L178,0,.L782-.L178
	.half	1
	.byte	85
	.word	.L784-.L178,.L785-.L178
	.half	1
	.byte	88
	.word	.L56-.L178,.L783-.L178
	.half	1
	.byte	85
	.word	.L58-.L178,.L60-.L178
	.half	1
	.byte	88
	.word	0,0
.L468:
	.word	0,0
.L475:
	.word	-1,.L178,.L787-.L178,.L788-.L178
	.half	1
	.byte	90
	.word	.L58-.L178,.L60-.L178
	.half	1
	.byte	90
	.word	0,0
.L177:
	.word	-1,.L178,0,.L456-.L178
	.half	2
	.byte	138,0
	.word	0,0
.L458:
	.word	-1,.L178,0,.L783-.L178
	.half	1
	.byte	100
	.word	0,0
.L466:
	.word	0,0
.L472:
	.word	0,0
.L474:
	.word	-1,.L178,.L786-.L178,.L456-.L178
	.half	1
	.byte	89
	.word	0,0
.L473:
	.word	-1,.L178,.L789-.L178,.L58-.L178
	.half	1
	.byte	90
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_lGetSpinlock')
	.sect	'.debug_loc'
.L726:
	.word	0,0
.L742:
	.word	0,0
.L716:
	.word	-1,.L216,0,.L877-.L216
	.half	1
	.byte	85
	.word	.L880-.L216,.L710-.L216
	.half	2
	.byte	145,120
	.word	.L147-.L216,.L154-.L216
	.half	1
	.byte	85
	.word	.L904-.L216,.L155-.L216
	.half	1
	.byte	86
	.word	0,0
.L721:
	.word	-1,.L216,.L901-.L216,.L155-.L216
	.half	1
	.byte	81
	.word	0,0
.L722:
	.word	-1,.L216,.L897-.L216,.L900-.L216
	.half	1
	.byte	95
	.word	0,0
.L718:
	.word	-1,.L216,.L729-.L216,.L147-.L216
	.half	1
	.byte	95
	.word	.L154-.L216,.L897-.L216
	.half	1
	.byte	95
	.word	0,0
.L720:
	.word	-1,.L216,.L899-.L216,.L155-.L216
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L743:
	.word	0,0
.L732:
	.word	-1,.L216,.L724-.L216,.L881-.L216
	.half	1
	.byte	95
	.word	.L881-.L216,.L147-.L216
	.half	2
	.byte	145,112
	.word	.L895-.L216,.L149-.L216
	.half	1
	.byte	95
	.word	.L896-.L216,.L729-.L216
	.half	1
	.byte	95
	.word	0,0
.L719:
	.word	-1,.L216,.L903-.L216,.L155-.L216
	.half	1
	.byte	82
	.word	0,0
.L717:
	.word	-1,.L216,.L158-.L216,.L157-.L216
	.half	1
	.byte	82
	.word	.L902-.L216,.L903-.L216
	.half	1
	.byte	82
	.word	0,0
.L712:
	.word	-1,.L216,0,.L877-.L216
	.half	1
	.byte	100
	.word	.L878-.L216,.L710-.L216
	.half	1
	.byte	108
	.word	.L147-.L216,.L154-.L216
	.half	1
	.byte	100
	.word	0,0
.L723:
	.word	0,0
.L215:
	.word	-1,.L216,0,.L876-.L216
	.half	2
	.byte	138,0
	.word	.L876-.L216,.L162-.L216
	.half	2
	.byte	138,16
	.word	.L162-.L216,.L162-.L216
	.half	2
	.byte	138,0
	.word	.L162-.L216,.L710-.L216
	.half	2
	.byte	138,16
	.word	.L710-.L216,.L710-.L216
	.half	2
	.byte	138,0
	.word	0,0
.L733:
	.word	-1,.L216,.L891-.L216,.L151-.L216
	.half	1
	.byte	95
	.word	.L152-.L216,.L892-.L216
	.half	1
	.byte	95
	.word	0,0
.L739:
	.word	-1,.L216,.L887-.L216,.L888-.L216
	.half	1
	.byte	95
	.word	.L148-.L216,.L891-.L216
	.half	1
	.byte	95
	.word	.L151-.L216,.L152-.L216
	.half	1
	.byte	95
	.word	.L150-.L216,.L153-.L216
	.half	1
	.byte	95
	.word	0,0
.L740:
	.word	-1,.L216,.L889-.L216,.L890-.L216
	.half	1
	.byte	93
	.word	.L150-.L216,.L153-.L216
	.half	1
	.byte	93
	.word	0,0
.L731:
	.word	-1,.L216,.L893-.L216,.L150-.L216
	.half	1
	.byte	95
	.word	0,0
.L738:
	.word	-1,.L216,.L886-.L216,.L147-.L216
	.half	1
	.byte	92
	.word	0,0
.L736:
	.word	-1,.L216,.L884-.L216,.L147-.L216
	.half	1
	.byte	88
	.word	0,0
.L737:
	.word	-1,.L216,.L885-.L216,.L147-.L216
	.half	1
	.byte	89
	.word	0,0
.L735:
	.word	-1,.L216,.L883-.L216,.L147-.L216
	.half	1
	.byte	91
	.word	0,0
.L734:
	.word	-1,.L216,.L882-.L216,.L147-.L216
	.half	1
	.byte	90
	.word	0,0
.L730:
	.word	-1,.L216,.L894-.L216,.L895-.L216
	.half	1
	.byte	95
	.word	0,0
.L714:
	.word	-1,.L216,0,.L877-.L216
	.half	1
	.byte	84
	.word	.L879-.L216,.L710-.L216
	.half	2
	.byte	145,116
	.word	.L147-.L216,.L154-.L216
	.half	1
	.byte	84
	.word	.L898-.L216,.L899-.L216
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_lUpdateCpuEndInit')
	.sect	'.debug_loc'
.L672:
	.word	0,0
.L629:
	.word	-1,.L214,0,.L855-.L214
	.half	1
	.byte	85
	.word	.L858-.L214,.L625-.L214
	.half	1
	.byte	88
	.word	0,0
.L636:
	.word	-1,.L214,.L666-.L214,.L625-.L214
	.half	2
	.byte	144,33
	.word	0,0
.L648:
	.word	0,0
.L661:
	.word	0,0
.L640:
	.word	-1,.L214,.L860-.L214,.L861-.L214
	.half	1
	.byte	89
	.word	0,0
.L213:
	.word	-1,.L214,0,.L854-.L214
	.half	2
	.byte	138,0
	.word	.L854-.L214,.L625-.L214
	.half	2
	.byte	138,8
	.word	.L625-.L214,.L625-.L214
	.half	2
	.byte	138,0
	.word	0,0
.L638:
	.word	-1,.L214,.L871-.L214,.L142-.L214
	.half	1
	.byte	95
	.word	.L873-.L214,.L144-.L214
	.half	1
	.byte	95
	.word	.L874-.L214,.L875-.L214
	.half	1
	.byte	95
	.word	0,0
.L627:
	.word	-1,.L214,0,.L856-.L214
	.half	1
	.byte	84
	.word	.L142-.L214,.L143-.L214
	.half	1
	.byte	84
	.word	0,0
.L653:
	.word	-1,.L214,.L655-.L214,.L862-.L214
	.half	1
	.byte	90
	.word	.L138-.L214,.L864-.L214
	.half	1
	.byte	90
	.word	0,0
.L652:
	.word	-1,.L214,.L863-.L214,.L138-.L214
	.half	1
	.byte	95
	.word	0,0
.L635:
	.word	-1,.L214,0,.L625-.L214
	.half	2
	.byte	145,0
	.word	.L857-.L214,.L625-.L214
	.half	1
	.byte	86
	.word	0,0
.L676:
	.word	0,0
.L631:
	.word	-1,.L214,0,.L857-.L214
	.half	1
	.byte	86
	.word	.L855-.L214,.L859-.L214
	.half	1
	.byte	85
	.word	0,0
.L674:
	.word	0,0
.L668:
	.word	-1,.L214,.L865-.L214,.L139-.L214
	.half	5
	.byte	144,32,157,32,0
	.word	.L140-.L214,.L866-.L214
	.half	5
	.byte	144,32,157,32,0
	.word	.L142-.L214,.L872-.L214
	.half	5
	.byte	144,32,157,32,0
	.word	.L144-.L214,.L143-.L214
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L642:
	.word	0,0
.L678:
	.word	-1,.L214,.L867-.L214,.L868-.L214
	.half	1
	.byte	95
	.word	.L141-.L214,.L869-.L214
	.half	1
	.byte	95
	.word	0,0
.L637:
	.word	-1,.L214,.L870-.L214,.L625-.L214
	.half	1
	.byte	89
	.word	0,0
.L641:
	.word	0,0
.L639:
	.word	0,0
.L633:
	.word	-1,.L214,0,.L625-.L214
	.half	1
	.byte	87
	.word	0,0
.L657:
	.word	0,0
.L650:
	.word	0,0
.L663:
	.word	0,0
.L644:
	.word	-1,.L214,0,.L625-.L214
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_lUpdatePeripheralEndInit')
	.sect	'.debug_loc'
.L688:
	.word	-1,.L212,.L851-.L212,.L852-.L212
	.half	1
	.byte	95
	.word	.L135-.L212,.L136-.L212
	.half	1
	.byte	95
	.word	0,0
.L211:
	.word	-1,.L212,0,.L849-.L212
	.half	2
	.byte	138,0
	.word	.L849-.L212,.L680-.L212
	.half	2
	.byte	138,8
	.word	.L680-.L212,.L680-.L212
	.half	2
	.byte	138,0
	.word	0,0
.L689:
	.word	-1,.L212,.L853-.L212,.L135-.L212
	.half	1
	.byte	84
	.word	0,0
.L682:
	.word	-1,.L212,0,.L850-.L212
	.half	1
	.byte	84
	.word	.L135-.L212,.L136-.L212
	.half	1
	.byte	84
	.word	0,0
.L687:
	.word	0,0
.L686:
	.word	-1,.L212,0,.L680-.L212
	.half	1
	.byte	86
	.word	0,0
.L684:
	.word	-1,.L212,0,.L680-.L212
	.half	1
	.byte	85
	.word	0,0
.L694:
	.word	0,0
.L691:
	.word	-1,.L212,0,.L680-.L212
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Mcal_lUpdateSafetyEndInit')
	.sect	'.debug_loc'
.L209:
	.word	-1,.L210,0,.L844-.L210
	.half	2
	.byte	138,0
	.word	.L844-.L210,.L695-.L210
	.half	2
	.byte	138,8
	.word	.L695-.L210,.L695-.L210
	.half	2
	.byte	138,0
	.word	0,0
.L697:
	.word	-1,.L210,0,.L845-.L210
	.half	1
	.byte	84
	.word	.L130-.L210,.L131-.L210
	.half	1
	.byte	84
	.word	0,0
.L704:
	.word	-1,.L210,.L848-.L210,.L130-.L210
	.half	1
	.byte	84
	.word	0,0
.L702:
	.word	0,0
.L703:
	.word	-1,.L210,.L846-.L210,.L847-.L210
	.half	1
	.byte	95
	.word	.L130-.L210,.L131-.L210
	.half	1
	.byte	95
	.word	0,0
.L701:
	.word	-1,.L210,0,.L695-.L210
	.half	1
	.byte	86
	.word	0,0
.L699:
	.word	-1,.L210,0,.L695-.L210
	.half	1
	.byte	85
	.word	0,0
.L709:
	.word	0,0
.L706:
	.word	-1,.L210,0,.L695-.L210
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1387:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Mcal_GetCpuWdgPassword')
	.sect	'.debug_frame'
	.word	24
	.word	.L1387,.L164,.L373-.L164
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Mcal_SetCpuWdgPassword')
	.sect	'.debug_frame'
	.word	36
	.word	.L1387,.L166,.L380-.L166
	.byte	4
	.word	(.L756-.L166)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L380-.L756)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Mcal_WriteCpuEndInitProtReg')
	.sect	'.debug_frame'
	.word	52
	.word	.L1387,.L168,.L393-.L168
	.byte	4
	.word	(.L759-.L168)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L4-.L759)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L393-.L4)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('Mcal_GetSafetyEndInitPassword')
	.sect	'.debug_frame'
	.word	24
	.word	.L1387,.L170,.L415-.L170
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Mcal_SetSafetyEndInitPassword')
	.sect	'.debug_frame'
	.word	12
	.word	.L1387,.L172,.L417-.L172
	.sdecl	'.debug_frame',debug,cluster('Mcal_WriteSafetyEndInitProtReg')
	.sect	'.debug_frame'
	.word	12
	.word	.L1387,.L174,.L428-.L174
	.sdecl	'.debug_frame',debug,cluster('Mcal_WriteSafetyEndInitProtReg16')
	.sect	'.debug_frame'
	.word	12
	.word	.L1387,.L176,.L602-.L176
	.sdecl	'.debug_frame',debug,cluster('Mcal_WriteSafetyEndInitProtRegMask')
	.sect	'.debug_frame'
	.word	12
	.word	.L1387,.L178,.L456-.L178
	.sdecl	'.debug_frame',debug,cluster('Mcal_GetPeripheralEndInitPassword')
	.sect	'.debug_frame'
	.word	24
	.word	.L1387,.L180,.L479-.L180
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Mcal_SetPeripheralEndInitPassword')
	.sect	'.debug_frame'
	.word	12
	.word	.L1387,.L182,.L481-.L182
	.sdecl	'.debug_frame',debug,cluster('Mcal_WritePeripEndInitProtReg')
	.sect	'.debug_frame'
	.word	12
	.word	.L1387,.L184,.L489-.L184
	.sdecl	'.debug_frame',debug,cluster('Mcal_GetCpuPhysicalId')
	.sect	'.debug_frame'
	.word	24
	.word	.L1387,.L186,.L500-.L186
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Mcal_GetGlobalDsprAddress')
	.sect	'.debug_frame'
	.word	24
	.word	.L1387,.L188,.L502-.L188
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Mcal_GetLocalDsprAddress')
	.sect	'.debug_frame'
	.word	24
	.word	.L1387,.L190,.L510-.L190
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Mcal_GetGlobalPsprAddress')
	.sect	'.debug_frame'
	.word	24
	.word	.L1387,.L192,.L525-.L192
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Mcal_GetLocalPsprAddress')
	.sect	'.debug_frame'
	.word	24
	.word	.L1387,.L194,.L533-.L194
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Mcal_DelayTickResolution')
	.sect	'.debug_frame'
	.word	24
	.word	.L1387,.L196,.L546-.L196
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Mcal_DelayResetTickCalibration')
	.sect	'.debug_frame'
	.word	12
	.word	.L1387,.L198,.L547-.L198
	.sdecl	'.debug_frame',debug,cluster('Mcal_DelayGetTick')
	.sect	'.debug_frame'
	.word	24
	.word	.L1387,.L200,.L574-.L200
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Mcal_GetCpuIndex')
	.sect	'.debug_frame'
	.word	24
	.word	.L1387,.L202,.L576-.L202
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('McalLib_GetVersionInfo')
	.sect	'.debug_frame'
	.word	12
	.word	.L1387,.L204,.L596-.L204
	.sdecl	'.debug_frame',debug,cluster('Mcal_GetSpinlock')
	.sect	'.debug_frame'
	.word	12
	.word	.L1387,.L206,.L580-.L206
	.sdecl	'.debug_frame',debug,cluster('Mcal_ReleaseSpinlock')
	.sect	'.debug_frame'
	.word	12
	.word	.L1387,.L208,.L588-.L208
	.sdecl	'.debug_frame',debug,cluster('Mcal_lUpdateSafetyEndInit')
	.sect	'.debug_frame'
	.word	48
	.word	.L1387,.L210,.L695-.L210
	.byte	8,18,8,19,8,20,8,21,8,22,8,23,4
	.word	(.L844-.L210)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L695-.L844)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Mcal_lUpdatePeripheralEndInit')
	.sect	'.debug_frame'
	.word	48
	.word	.L1387,.L212,.L680-.L212
	.byte	8,18,8,19,8,20,8,21,8,22,8,23,4
	.word	(.L849-.L212)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L680-.L849)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Mcal_lUpdateCpuEndInit')
	.sect	'.debug_frame'
	.word	44
	.word	.L1387,.L214,.L625-.L214
	.byte	8,19,8,20,8,21,8,22,8,23,4
	.word	(.L854-.L214)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L625-.L854)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Mcal_lGetSpinlock')
	.sect	'.debug_frame'
	.word	52
	.word	.L1387,.L216,.L710-.L216
	.byte	4
	.word	(.L876-.L216)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L162-.L876)/2
	.byte	19,0,8,26,19,16,22,26,3,19,138,16,4
	.word	(.L710-.L162)/2
	.byte	19,0,8,26,0

; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3186  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3187    /* MISRA2012_RULE_2_7_JUSTIFICATION: No side effects foreseen
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3188     * by violating this MISRA rule, as the variable LockAddress is
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3189     * accessed using only assembly instruction.
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3190     */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3191    /* MISRA2012_RULE_8_13_JUSTIFICATION: No side effects foreseen
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3192     * by violating this MISRA rule, as the pointer LockAddress is
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3193     * accessed using assembly instruction. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3194  }
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3195  
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3196  /*[cover parentID={4579FE20-92DA-4848-93DB-7AD4FD35DD50}]Memory mapping for
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3197     code[/cover]*/
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3198  #define MCALLIB_STOP_SEC_CODE_ASIL_B_GLOBAL
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3199  /* MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3200     without safeguard. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3201  /* MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3202     guideline. */
; ..\Mcal\Tricore\McalLib\ssc\src\McalLib.c	  3203  #include "McalLib_MemMap.h"

	; Module end
