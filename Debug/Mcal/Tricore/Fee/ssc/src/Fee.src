	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 09003395"
	.compiler_invocation	"ctc -f cc18380a --dep-file=Mcal\\Tricore\\Fee\\ssc\\src\\.Fee.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --fp-model=+float -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Lib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\App_Func -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\demo -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Adc_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Gtm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\AscLin_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Can_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\EthV2_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Stm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Main -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\APP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\BswM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanSm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Com -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\ComM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Common -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Crc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Det -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\DoIP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EcuM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Eth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthSM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTrcv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FiM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FlsTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Nm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\PduR -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\RamTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\StbM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\arpa -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\net -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\sys -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\stdc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\apps -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\priv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\UdpNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Cal -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Daq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pag -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pgm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Std -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\XcpOnEth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Library\\Vfx_ComE2E -g2 --make-target=Mcal\\Tricore\\Fee\\ssc\\src\\Fee.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O1 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o Mcal\\Tricore\\Fee\\ssc\\src\\Fee.src ..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c"
	.compiler_name		"ctc"
	;source	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c'

	
$TC162
	
	.sdecl	'.text.Fee_Init.Code.Cpu0',code,cluster('Fee_Init')
	.sect	'.text.Fee_Init.Code.Cpu0'
	.align	2
	
	.global	Fee_Init

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	     1  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	     2  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	     3  ** Copyright (C) Infineon Technologies (2023)                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	     4  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	     5  ** All rights reserved.                                                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	     6  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	     7  ** This document contains proprietary information belonging to Infineon      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	     8  ** Technologies. Passing on and copying of this document, and communication  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	     9  ** of its contents is not permitted without prior written authorization.     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    10  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    11  *******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    12  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    13  **  FILENAME     : Fee.c                                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    14  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    15  **  VERSION      : 41.0.0                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    16  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    17  **  DATE         : 2023-05-16                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    18  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    19  **  VARIANT      : Variant PB                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    20  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    21  **  PLATFORM     : Infineon AURIX2G                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    22  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    23  **  AUTHOR       : DL-AUTOSAR-Engineering                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    24  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    25  **  VENDOR       : Infineon Technologies                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    26  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    27  **  DESCRIPTION  : Fee Driver source file                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    28  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    29  **  SPECIFICATION(S) : Specification of Fee Driver,                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    30  **                     AUTOSAR Release 4.2.2 and 4.4.0                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    31  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    32  **  MAY BE CHANGED BY USER : no                                              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    33  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    34  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    35  /* [cover parentID={540C6CF8-E5A3-47b2-9A71-B1EFD849D042}] Fee.c
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    36  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    37  /* [cover parentID={21DDC179-B28F-4c4d-9045-F9A7AAB29407}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    38  Platform independent module
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    39  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    40  /* [cover parentID={056FA7C0-7DE5-427e-8FD1-01B6F7EFEAB2}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    41  /* [cover parentID={EA0715EE-3E3C-4aac-A42E-4B5CFC96CEED}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    42  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    43  **                      Includes                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    44  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    45  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    46  /* Inclusion of Flash header file */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    47  #include "Fee.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    48  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    49  /* Inclusion of FEE Callback functionality */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    50  #include "Fee_Cbk.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    51  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    52  /* [cover parentID={203A0946-A5FE-4078-9B0D-8D1489678415}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    53  /* Scheduled function header file */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    54  #include "SchM_Fee.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    55  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    56  #if ((FEE_DEM_ENABLED == STD_ON) || (FEE_RUNTIME_ERROR_DETECT == STD_ON))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    57  /* Inclusion of McalWrapper.h  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    58  #include "Mcal_Wrapper.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    59  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    60  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    61  /* Conditional Inclusion of Developement Error Tracer File */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    62  #if  (FEE_DEV_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    63  #include "Det.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    64  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    65  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    66  #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    67  #include "Mcal_SafetyError.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    68  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    69  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    70  /*AUTOSAR File*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    71  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    72  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    73  **                      Imported Compiler Switch Check                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    74  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    75  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    76  /*
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    77      AUTOSAR VERSION CHECK FOR FEE MODULE INCLUSION
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    78  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    79  /* [cover parentID={CB9A9AFC-6470-4658-8BC1-8F515E9C8B88}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    80  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    81  #ifndef FEE_AR_RELEASE_MAJOR_VERSION
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    82  #error "FEE_AR_RELEASE_MAJOR_VERSION is not defined. "
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    83  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    84  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    85  #ifndef FEE_AR_RELEASE_MINOR_VERSION
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    86    #error "FEE_AR_RELEASE_MINOR_VERSION is not defined."
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    87  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    88  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    89  #ifndef FEE_AR_RELEASE_REVISION_VERSION
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    90    #error "FEE_AR_RELEASE_REVISION_VERSION is not defined."
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    91  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    92  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    93  #if ( FEE_AR_RELEASE_MAJOR_VERSION != MCAL_AR_RELEASE_MAJOR_VERSION)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    94  #error "FEE_AR_RELEASE_MAJOR_VERSION does not match. "
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    95  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    96  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    97  #if ( FEE_AR_RELEASE_MINOR_VERSION != MCAL_AR_RELEASE_MINOR_VERSION)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    98    #error "FEE_AR_RELEASE_MINOR_VERSION does not match."
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	    99  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   100  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   101  #if ( FEE_AR_RELEASE_REVISION_VERSION != MCAL_AR_RELEASE_REVISION_VERSION)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   102    #error "FEE_AR_RELEASE_REVISION_VERSION does not match."
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   103  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   104  /*
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   105      DRIVER VERSION CHECK FOR FEE MODULE
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   106  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   107  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   108  #ifndef FEE_SW_MAJOR_VERSION
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   109  #error "FEE_SW_MAJOR_VERSION is not defined. "
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   110  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   111  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   112  #ifndef FEE_SW_MINOR_VERSION
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   113  #error "FEE_SW_MINOR_VERSION is not defined. "
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   114  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   115  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   116  #ifndef FEE_SW_PATCH_VERSION
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   117  #error "FEE_SW_PATCH_VERSION is not defined."
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   118  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   119  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   120  /* [cover parentID={F53B2EEE-3552-4f44-A9BE-2BA5A962432D}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   121  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   122  #if ( FEE_SW_MAJOR_VERSION != 20U )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   123  #error "FEE_SW_MAJOR_VERSION does not match. "
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   124  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   125  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   126  #if ( FEE_SW_MINOR_VERSION != 25U )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   127  #error "FEE_SW_MINOR_VERSION does not match. "
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   128  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   129  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   130  #if ( FEE_SW_PATCH_VERSION != 0U )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   131  #error "FEE_SW_PATCH_VERSION does not match."
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   132  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   133  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   134  /*
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   135      VERSION CHECK FOR DET MODULE INCLUSION
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   136  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   137  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   138  #if (FEE_DEV_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   139  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   140  #ifndef DET_AR_RELEASE_MAJOR_VERSION
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   141  #error "DET_AR_RELEASE_MAJOR_VERSION is not defined. "
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   142  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   143  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   144  #if ( DET_AR_RELEASE_MAJOR_VERSION != 4U )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   145  #error "DET_AR_RELEASE_MAJOR_VERSION does not match. "
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   146  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   147  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   148  #endif /* (FEE_DEV_ERROR_DETECT == STD_ON) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   149  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   150  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   151  /*
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   152      VERSION CHECK FOR FLS MODULE INCLUSION
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   153  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   154  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   155  #ifndef FLS_17_DMU_AR_RELEASE_MAJOR_VERSION
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   156  #error "FLS_17_DMU_AR_RELEASE_MAJOR_VERSION is not defined. "
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   157  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   158  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   159  #if ( FLS_17_DMU_AR_RELEASE_MAJOR_VERSION != 4U )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   160  #error "FLS_17_DMU_AR_RELEASE_MAJOR_VERSION does not match. "
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   161  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   162  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   163  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   164  **                      Private Macro Definitions                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   165  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   166  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   167  /*---------- Garbage Collection related constant------------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   168  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   169  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   170  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   171  /* 1. User operation allowed states */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   172  #define FEE_GC_REQUESTED                            (0x5U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   173  /*Read states of GC */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   174  #define FEE_GC_UNCFG_START_COPY                     (0x10U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   175  #define FEE_GC_START_COPY                           (0x1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   176  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   177  /* Erase states of GC */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   178  #define FEE_GC_ERASE_PREV_SECTOR                    (0x3U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   179  #define FEE_GC_INIT_ERASE_PREV_SECTOR               (0x4U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   180  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   181  /* 2. User operation NOT allowed states */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   182  /*Read states of GC */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   183  #define FEE_GC_UNCFG_COPY_READ_NXTPAGE              (0x0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   184  #define FEE_GC_COPY_READ_NXTPAGE                    (0x2U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   185  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   186  /* Write states of GC */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   187  /* SECTOR0 -> Current/Prev Sector; SECTOR1 -> Next Sector */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   188  /* V -> Valid; E -> Erased */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   189  /* SP -> State Page; M -> Marker */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   190  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   191  #define FEE_GC_UNCFG_COPY_WRITE          (0x6U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   192  #define FEE_GC_COPY_WRITE                (0x7U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   193  #define FEE_GC_MARK_SECTOR1_V_SP         (0x8U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   194  #define FEE_GC_MARK_SECTOR1_V_M          (0x9U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   195  #define FEE_GC_MARK_SECTOR0_E_SP         (0xAU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   196  #define FEE_GC_MARK_SECTOR0_E_M          (0xBU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   197  #define FEE_GC_INIT_MARK_SECTOR0_E_SP    (0xCU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   198  #define FEE_GC_INIT_MARK_SECTOR0_E_M     (0xDU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   199  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   200  #if (FEE_CANCELL_ALL_API == STD_ON) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   201  (FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   202  /* Cancel GC related */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   203  #define FEE_GC_NOT_CANCLD                   (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   204  #define FEE_GC_CANCLD                     (1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   205  #define FEE_GC_CANCLD_CACHEUPDATE            (2U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   206  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   207  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   208  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   209  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   210  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   211  /* 3. Non operational states of GC */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   212  #define FEE_GC_IDLE                                 (0xEU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   213  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   214  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   215  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   216  #define FEE_GC_FAIL                                 (0xFU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   217  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   218  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   219  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   220  /* Fee_Init States - Used for detecting the Garbage Collection Interruption */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   221  #define FEE_INITGC_IDLE                      (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   222  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   223  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   224  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   225  #define FEE_INITGC_HANDLE_INVALID            (1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   226  #define FEE_INITGC_HANDLE_DIRTY              (2U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   227  #define FEE_INITGC_NORMAL                    (3U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   228  #define FEE_INITGC_PREPARE_DFLASH            (4U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   229  #define FEE_INITGC_COMPLETE                  (5U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   230  #define FEE_INITGC_FAIL                      (6U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   231  #define FEE_INITGC_HANDLE_VIRGIN             (7U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   232  /* States to monitor Garbage Collection completion, if it was interrupted */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   233  /* earlier due to reset */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   234  #define FEE_INITGC_NORMAL_S1                (0x1DU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   235  #define FEE_INITGC_NORMAL_S0                (0xD1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   236  #define FEE_INITGC_DATA_COPY_S1_S0          (0x5DU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   237  #define FEE_INITGC_DATA_COPY_S0_S1          (0xD5U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   238  #define FEE_INITGC_ERASE_S1                 (0xDFU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   239  #define FEE_INITGC_ERASE_S0                 (0xFDU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   240  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   241  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   242  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   243  /*---------- Garbage Collection related constant End -------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   244  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   245  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   246  /*---------- Erase suspend related constant ----------------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   247  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   248  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   249  #if (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   250  /* Erase-Suspend Status */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   251  #define FEE_ERASE_NOT_SUSPENDED                     ((uint8)0)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   252  #define FEE_ERASE_SUSPENDED                         ((uint8)1)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   253  /* FeeEraseSuspendStatus > 1  : Resume-Erase failed */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   254  /* FEE_RESUME_ERASE_LIMIT - 1 : No. of times Resume-Erase will be attempted */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   255  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   256  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   257  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   258  #define FEE_RESUME_ERASE_LIMIT                      ((uint8)4)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   259  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   260  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   261  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   262  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   263  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   264  /*---------- Erase suspend related constant End -------------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   265  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   266  /*---------- Common constant start -------------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   267  #define FEE_ZERO      (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   268  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   269  #define FEE_RESET     (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   270  #define FEE_SET       (1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   271  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   272  #if(FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   273  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   274  #if (FEE_GET_CYCLE_COUNT_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   275  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   276  #define FEE_STATE_PAGE_NUMBER (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   277  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   278  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   279  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   280  #define FEE_BLOCK_HDR_PAGE        (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   281  #define FEE_INVALID_BLOCK_LEN     (1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   282  #define FEE_INVALID_BLOCK         (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   283  #define FEE_NEW_WL_BEGIN          (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   284  #define FEE_DATA_NEXT_PAGE_ID_POS (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   285  #define FEE_INVALID_BLOCK_PAGES   (2U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   286  #define FEE_BLOCK_NUM_MSB_POS     (2U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   287  #define FEE_BLOCK_NUM_LSB_POS     (1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   288  #define FEE_BLOCK_MANGMNT_PAGES   (2U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   289  #define FEE_BLOCK_CYL_CNT_POS     (2U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   290  #define FEE_PAGE_TO_BYTE          (3U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   291  #define FEE_BYTE_TO_PAGE          (3U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   292  #define FEE_BLOCK_NUM_POS         (6U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   293  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   294  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   295  #define FEE_ONE       (1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   296  #define FEE_TWO       (2U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   297  #define FEE_THREE     (3U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   298  #define FEE_FOUR      (4U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   299  #define FEE_FIVE      (5U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   300  #define FEE_SIX       (6U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   301  #define FEE_SEVEN     (7U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   302  #define FEE_EIGHT     (8U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   303  #define FEE_SIXTEEN   (16U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   304  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   305  #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   306  #define FEE_DET_SAFETY_ERROR (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   307  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   308  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   309  #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   310  #define FEE_SAFETY_ERROR (1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   311  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   312  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   313  #if (FEE_RUNTIME_ERROR_DETECT== STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   314  #define FEE_RUNTIME_ERROR (2U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   315  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   316  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   317  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   318  /*---------- Common constant constant End -------------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   319  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   320  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   321  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   322  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   323  /*---------- State page related constant End ---------------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   324  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   325  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   326  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   327  #define FEE_STATE_FIRSTFIVE_COPY_OFFSET (40U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   328  #define FEE_STATE_ALLONES_OFFSET        (80U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   329  #define FEE_STATE_CRC_OFFSET            (116U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   330  #define FEE_STATE_WLCOUNT_MASK          (0xFFFFFF00U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   331  #define FEE_STATEPAGE_DATA_SIZE         (120U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   332  #define FEE_STATEPAGE_MARKER_SIZE       (8U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   333  #define FEE_STATEPAGE_SIZE              (128U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   334  #define FEE_STATEPAGE_PROGRAM_SIZE      (120U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   335  #define FEE_PROGRAM_STATEPAGE           (1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   336  #define FEE_PROGRAM_MARKER              (2U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   337  /* State page Status */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   338  #define FEE_SP_CLEAN                    (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   339  #define FEE_SP_DIRTY                    (1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   340  #define FEE_SP_INVALID                  (2U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   341  #define FEE_VALID                       (0xD1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   342  #define FEE_ERASED                      (0x1EU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   343  /* Page Identifier */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   344  #define FEE_STATE_FIRST_PAGE_ID         (0x59U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   345  #define FEE_STATE_NEXT_PAGE_ID          (0xC6U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   346  #define FEE_STATE_PAGE_ID_POS           (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   347  #define FEE_STATE_PAGE_STATE_POS        (1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   348  #define FEE_STATE_PAGE_UERWL_POS        (3U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   349  #define FEE_STATE_PAGE_STATE_CNT_POS    (4U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   350  #define FEE_STATE_PAGE_HDR_PAGES        (10U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   351  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   352  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   353  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   354  #define FEE_STATE_PAGE_QS_OFFSET_LSB    (2U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   355  #define FEE_STATE_PAGE_QS_OFFSET_MSB    (3U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   356  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   357  /* Mask to extract the QS Data offset which is stored in State Page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   358  #define FEE_QS_DATA_OFFSET_MASK         (0x0FFF0000U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   359  /* Bit position indicating the start of the the QS Data offset which is stored
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   360    in State Page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   361  #define FEE_QS_DATA_OFFSET_START        (16U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   362  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   363  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   364  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   365  #define FEE_STATE_PAGE_UERWL1_ADDRS_POS (12U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   366  #define FEE_STATE_PAGE_UERWL2_ADDRS_POS (20U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   367  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   368  /* State Page field for verification */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   369  #define FEE_SP_MARKERFIELD_START        (120U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   370  #define FEE_SP_MARKER_WORD_1            (0xAFAFF53AU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   371  #define FEE_SP_MARKER_WORD_2            (0xAFAFF5F5U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   372  #define FEE_CRC_START_VAL              (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   373  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   374  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   375  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   376  /* State page Repair stages */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   377  #define FEE_REPAIR_IDLE                (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   378  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   379  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   380  /*---------- State page related constant End ---------------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   381  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   382  /*---------- Data block related constant -------------------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   383  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   384  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   385  /* Sector page offsets */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   386  #define FEE_PAGE1_DATA_OFFSET            (8U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   387  #define FEE_VALID_BIT                    (0x80U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   388  #define FEE_PAGE_COUNT_MASK              (0x7FFFU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   389  #define FEE_VALID_MASK                   (0x80U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   390  /* Page Identifier */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   391  #define FEE_DATA_FIRST_PAGE_ID           (0xA3U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   392  #define FEE_DATA_NEXT_PAGE_ID            (0x9CU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   393  #define FEE_DATA_MARKER_PAGE_ID          (0x65U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   394  #define FEE_DP_MARKER_WORD               (0xF5F5AF65U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   395  #define FEE_DP_MARKER_BYTE_2             (0xAFU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   396  #define FEE_DP_MARKER_BYTE_3             (0xF5U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   397  #define FEE_DP_MARKER_BYTE_4             (0xF5U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   398  #define FEE_LWB_DIRTY                    (1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   399  #define FEE_LWB_CHECK_FOR_DIRTY          (2U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   400  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   401  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   402  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   403  /* Last Written Block Dirty Status */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   404  #define FEE_LWB_NOT_DIRTY        (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   405  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   406  /*---------- Data block related constant end ----------------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   407  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   408  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   409  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   410  #define FEE_16_BIT_ALL_ONES           (0xFFFFU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   411  #define FEE_32_BIT_ALL_ONES           (0xFFFFFFFFU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   412  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   413  #define FEE_DFLASH_WORDLINE_SIZE_1    (FEE_DFLASH_WORDLINE_SIZE - 1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   414  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   415  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   416  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   417  #define FEE_WRITE_LEN_MAX             (FEE_MAX_BYTES_PER_CYCLE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   418  #define FEE_COMPARE_LEN_MAX           (FEE_MAX_BYTES_PER_CYCLE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   419  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   420  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   421  /*---------- Word line related constant --------------------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   422  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   423  /* Data bytes in a word-line = ((WordLine Size / 8) * 7) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   424  #define FEE_DATA_BYTES_IN_WORDLINE    (448U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   425  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   426  /* Word-Line Affected Type */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   427  /* 2. Block sharing the last written WL boundary is (also) affected */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   428  #define FEE_LWB_ACROSS_WL_AFFECTED                ((uint8)0x01U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   429  /* 3. Only the block(s) present in the last written WL is affected */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   430  #define FEE_LWB_WITHIN_WL_AFFECTED                ((uint8)0x02U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   431  /* 4. Continue copying block pages in last written WL */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   432  #define FEE_LWB_WITHIN_WL_AFFECTED_CONT           ((uint8)0x03U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   433  /* 5. Copy marker page in last written WL */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   434  #define FEE_LWB_MARKER_COPY_PENDING               ((uint8)0x04U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   435  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   436  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   437  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   438  /* 1. WL not affected */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   439  #define FEE_LWB_NOT_AFFECTED                      ((uint8)0x00U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   440  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   441  /*---------- Word line related constant End ----------------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   442  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   443  /*---------- Data flash related constant -------------------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   444  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   445  #define FEE_DFLASH_WORD_SIZE              (4U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   446  /* Fee Prepare DFlash States */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   447  #define FEE_PREPDF_ERASE_S0               (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   448  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   449  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   450  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   451  /* Sector states */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   452  #define FEE_STATELESS                     (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   453  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   454  #define FEE_PREPDF_ERASE_S1               (1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   455  #define FEE_PREPDF_MARK_S0_ERASED_SP      (2U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   456  #define FEE_PREPDF_MARK_S0_ERASED_M       (3U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   457  #define FEE_PREPDF_MARK_S0_VALID_SP       (4U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   458  #define FEE_PREPDF_MARK_S0_VALID_M        (5U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   459  #define FEE_PREPDF_MARK_S1_ERASED_SP      (6U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   460  #define FEE_PREPDF_MARK_S1_ERASED_M       (7U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   461  /*Two sector enabled, represents the NVM sector size*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   462  #define FLS_SECTOR0_SIZE                  (FLS_17_DMU_NVMSECTOR_SIZE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   463  /* Sector page values, used to store current status of the DFLASH */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   464  #define FEE_DFLASH_SECTOR_SIZE            (FLS_SECTOR0_SIZE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   465  #define FEE_DFLASH_BANK1_BASE             (FEE_DFLASH_SECTOR_SIZE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   466  #define FEE_SECTOR0                       (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   467  #define FEE_SECTOR1                       (1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   468  #define FEE_DFLASH_BANK0_BASE             (0x0000U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   469  /*Name to be changed*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   470  #define FLS_ERASE_SECTORS                 (FLS_17_DMU_NVMSECTOR_SIZE/4096)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   471  /* Sector status */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   472  #define FEE_SP_INIT                       (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   473  #define FEE_SP_DONE                       (1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   474  /* DFlash status at Initialization */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   475  #define FEE_S0_S1_EMPTY                   (0x0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   476  #define FEE_S0_VALID                      (0x1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   477  #define FEE_S1_VALID                      (0x2U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   478  #define FEE_S0_S1_VALID                   (0x3U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   479  #define FEE_S0_S1_INVALID                 (0x4U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   480  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   481  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   482  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   483  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   484  /*---------- Data flash related constant End ---------------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   485  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   486  /*---------- Cache table related constant  -----------------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   487  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   488  /* Cache Update states */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   489  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   490  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   491  #define FEE_CACHE_FIND_NEXT_BLK            (1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   492  #define FEE_CACHE_UPDATE_COMPLETE          (3U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   493  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   494  /* This macro is used as dummy parameter. This will be used while calling
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   495   Fee_lGcErrorHandler when GC write/erase/GC on GC error occurred */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   496  #define FEE_UNUSED_PARAM                   ((uint16)0xFFFFU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   497  #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   498  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   499  #define FEE_CACHE_IDLE_QS                  (4U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   500  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   501  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   502  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   503  #define FEE_CACHE_IDLE                     (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   504  #define FEE_LOG_BLOCK_NOT_FOUND            ((uint16)0xFFFFU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   505  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   506  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   507  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   508  /*---------- Cache table related constant End --------------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   509  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   510  /*---------- Fee Job related constant  ---------------------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   511  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   512  /* Pending request types */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   513  #define FEE_PEND_PREV_NO_REQ                (1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   514  #define FEE_PEND_PREV_READ_REQ              (3U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   515  #define FEE_PEND_PREV_READ_NOTIF            (5U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   516  #define FEE_REQ_READ                        (6U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   517  #define FEE_REQ_NORM_WRITE                  (8U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   518  #define FEE_REQ_IMM_WRITE                   (9U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   519  #define FEE_PEND_PREV_COMPARE               (10U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   520  #define FEE_PEND_INTR_COMPARE               (12U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   521  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   522  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   523  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   524  #define FEE_PEND_INTR_READ                  (13U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   525  #define FEE_PEND_INTR_WRITE                 (14U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   526  #define FEE_PEND_PREV_WRITE_REQ             (2U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   527  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   528  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   529  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   530  #define FEE_WRITE_FAIL                      (15U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   531  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   532  /* Job states */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   533  #define FEE_JOB_IDLE                        (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   534  #define FEE_JOB_REQSTD                      (1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   535  #define FEE_JOB_DONE                        (2U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   536  /* Job results */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   537  #define FEE_JOB_PASS                        (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   538  #define FEE_JOB_FAIL                        (1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   539  /* FEE JOBS */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   540  #define FEE_WRITE_JOB                       (FLS_17_DMU_WRITE_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   541  #define FEE_READ_JOB                        (FLS_17_DMU_READ_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   542  #define FEE_ERASE_JOB                       (FLS_17_DMU_ERASE_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   543  #define FEE_NO_JOB                          (FLS_17_DMU_NO_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   544  #define FEE_CANCEL_JOB                      (FLS_17_DMU_CANCEL_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   545  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   546  /*---------- Fee Job related constant End ------------------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   547  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   548  /*---------- Fee Main state machine related constant -------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   549  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   550  /* Fee Main Function States */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   551  #define FEE_MAIN_UNINIT         (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   552  #define FEE_MAIN_INITGC         (1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   553  #define FEE_MAIN_CACHEUPDATE    (2U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   554  #define FEE_MAIN_READ           (3U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   555  #define FEE_MAIN_WRITE          (4U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   556  #define FEE_MAIN_GC             (5U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   557  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   558  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   559  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   560  #define FEE_MAIN_INITQS         (6U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   561  #define FEE_MAIN_QS             (7U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   562  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   563  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   564  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   565  #define FEE_MAIN_NONE           (10U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   566  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   567  /*---------- Fee Main state machine related constant End ----------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   568  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   569  /*---------- Fee Error related constant ---------------------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   570  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   571  /* Error events during User/Internal operations */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   572  #define FEE_CANCEL              ((uint8)0x0)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   573  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   574  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   575  #define FEE_NOT_CANCEL          ((uint8)0xFF)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   576  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   577  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   578  #define FEE_WRITE               ((uint8)0x1)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   579  #define FEE_READ                ((uint8)0x2)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   580  #define FEE_INVALIDATE          ((uint8)0x6)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   581  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   582  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   583  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   584  #define FEE_GC_E_OK             ((uint8)0x0)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   585  #define FEE_GC_WRITE            ((uint8)0x3)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   586  #define FEE_GC_READ             ((uint8)0x4)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   587  #define FEE_GC_ERASE            ((uint8)0x5)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   588  #define FEE_GC_TRIG             ((uint8)0x7)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   589  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   590  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   591  /* Un-configured block related constants */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   592  #define FEE_UNCONFIG_BLK_LIMIT_CROSSED    ((uint8)0xFF)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   593  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   594  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   595  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   596  /*---------- Fee Error related constant End ----------------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   597  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   598  /*---------- QS data related constant End ----------  ------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   599  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   600  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   601  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   602  /* Macros for QS STATE values in DFLASH0 */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   603  #define FEE_QS_STATE_DFERASE_STATE       (0x00000000U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   604  #define FEE_QS_STATE_WRITE_COMPLETE_LSW  (0x33334444U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   605  #define FEE_QS_STATE_WRITE_COMPLETE_MSW  (0x55556666U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   606  #define FEE_QS_STATE_WRITE_STARTED_LSW   (0x11112222U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   607  #define FEE_QS_STATE_WRITE_STARTED_MSW   (0x77778888U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   608  #define FEE_QS_STATE_ERASE_COMPLETE_LSW  FEE_QS_STATE_WRITE_COMPLETE_LSW
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   609  #define FEE_QS_STATE_ERASE_COMPLETE_MSW  FEE_QS_STATE_WRITE_COMPLETE_MSW
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   610  #define FEE_QS_STATE_ERASE_STARTED_LSW   FEE_QS_STATE_WRITE_STARTED_LSW
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   611  #define FEE_QS_STATE_ERASE_STARTED_MSW   FEE_QS_STATE_WRITE_STARTED_MSW
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   612  #define FEE_QS_STATE_DESTROY             (0xFFFFFFFFU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   613  /* quasi static block intermediate states */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   614  #define FEE_REQ_QUASI_READ                        (16U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   615  #define FEE_REQ_QUASI_WRITE                       (17U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   616  #define FEE_REQ_QUASI_ERASE                       (18U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   617  #define FEE_INITQS_COMPLETE                       (7U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   618  #define FEE_MAX_BCC_QS                            (65535U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   619  #define FEE_QS_STATE_ERASE_STARTED_OFFSET         (24U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   620  #define FEE_QS_STATE_WRITE_COMPLETED_OFFSET       (16U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   621  #define FEE_QS_STATE_WRITE_STARTED_OFFSET         (8U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   622  #define FEE_QS_STATE_CYCLE_COUNT_OFFSET           (32U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   623  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   624  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   625  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   626  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   627  #define FEE_PAGES_IN_WL                       ((uint8)64)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   628  #define FEE_DFLASH_QS_SIZE               (FLS_17_DMU_QSDATA_SIZE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   629  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   630  /* quasi static region hardening Frequency */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   631  /* The check and hardening is performed on a scalable part of QS area,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   632  Here desired checking rate  is chosen as 2% of the QS area as per the concept*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   633  #define FEE_HARDENING_RATE \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   634          ((((FEE_DFLASH_QS_SIZE * 2U)/(100U * FEE_DFLASH_WORDLINE_SIZE)) + 1U))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   635  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   636  #define FEE_GC_HARDEN_QS_SECTOR          (0x11U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   637  #define FEE_QS_SECTOR_BASE               (FLS_17_DMU_QSDATA_STARTADDRESS)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   638  #define FEE_HARDEN_CHK_PAGE              ((uint8)0x55)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   639  #define FEE_HARDEN_CHK_WL                ((uint8)0xAA)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   640  #define FEE_HARDEN_NOT_REQRD             ((uint8)0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   641  #define FEE_HARDEN_REQRD                 ((uint8)1U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   642  #define FEE_HARDEN_REQ_ERROR             ((uint8)2U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   643  #define FEE_NO_HARDEN_RET_ADDRESS        (0xFFFFFFFFU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   644  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   645  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   646  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   647  #define FEE_QS_IDLE                      ((uint8)0)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   648  #define FEE_REPAIR_JOB                   ((uint8)20)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   649  #define FEE_QS_DATA_OFFSET               36
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   650  #define FEE_QS_STATUS_PAGES              5U
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   651  #define FEE_QS_HARDING_IDLE              (0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   652  #define FEE_QS_DATA_OFFSET_SECOND_PAGE   (40U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   653  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   654  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   655  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   656  /*---------- QS data related constant End ------------------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   657  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   658  /*-------------ECCERRORINFO data related constant ----------------------*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   659  #if (FEE_GET_ECC_ERROR_INFO_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   660  #define FEE_DEFAULT_BLK_NUMBER          (0xFFFFU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   661  #define FEE_DEFAULT_PAGE_ADDRESS          (0xFFFFFFFFU)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   662  #define FEE_BASE_ADDRESS                FLS_17_DMU_BASE_ADDRESS
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   663  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   664  #define FEE_PAGE_SIZE                  (8U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   665  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   666  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   667  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   668  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   669  **                      Private Type Definitions                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   670  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   671  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   672  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   673  **                      Private Function Declarations                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   674  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   675  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   676  #define FEE_START_SEC_CODE_ASIL_B_LOCAL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   677  /*MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   678  without safe gaurd. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   679  #include "Fee_MemMap.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   680  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   681  static void Fee_lDecideMainJob(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   682  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   683  #if (FEE_GET_ECC_ERROR_INFO_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   684  static uint16 Fee_lGetEccErrorBlockNumber(uint32 const PageAddress);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   685  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   686  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   687  #if (FEE_DEM_ENABLED == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   688  static void  Fee_lReportDemError( const Dem_EventIdType EventId,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   689      const Dem_EventStatusType EventStatus);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   690  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   691  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   692  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   693  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   694  static boolean Fee_lIsUnerasableAddr(const uint32 Addr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   695  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   696  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   697  static void Fee_lHandleWriteFail(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   698  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   699  static void Fee_lHandleUsrJobFailure(const uint8 Error);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   700  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   701  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   702  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   703  static void Fee_lUpdateBlockInfo(const Fee_CacheStatusType * const Status,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   704                                   const uint16 Index, const uint16 pageCount);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   705  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   706  static void Fee_lUpdateUnconfigBlockInfo(const uint16 BlockNumber, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   707      const uint16 PageCount);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   708  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   709  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   710  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   711  static void Fee_lRegisterWriteRequest(const uint8 * const DataWriteBufferPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   712                                        const Fee_BlockType * const BlockPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   713  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   714  static Std_ReturnType Fee_lRegisterNvmRead(const uint16 BlockNumber,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   715      const uint16 BlockOffset, uint8 * const DataBufferPtr, const uint16 Length,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   716      const uint8 GetPrevCopy );
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   717  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   718  #if ((((FEE_DEV_ERROR_DETECT == STD_ON) || (FEE_SAFETY_ENABLE == STD_ON)) \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   719  && (MCAL_AR_VERSION == MCAL_AR_422)) || (FEE_RUNTIME_ERROR_DETECT == STD_ON))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   720  LOCAL_INLINE void Fee_lRegNvmReadDetCheck(uint8 DetCall, const uint8
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   721  GetPrevCopy);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   722  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   723  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   724  LOCAL_INLINE Std_ReturnType Fee_lRegisterNvmReadUpdate(uint8 DetCall,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   725                                   Std_ReturnType RetVal, const uint8 GetPrevCopy);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   726  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   727  static Std_ReturnType Fee_lRegisterNvmWrite( \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   728      const uint8 * const DataWriteBufferPtr, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   729      const Fee_BlockType * const BlockPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   730  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   731  static uint16  Fee_lGetUsrBlockIndex(const uint16 BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   732  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   733  static Fls_17_Dmu_Job_Type Fee_lGetUserJob(const uint8 PendReqType);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   734  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   735  static MemIf_StatusType Fee_lGetStatus(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   736  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   737  LOCAL_INLINE void Fee_lMainNoneTransHdlr(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   738  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   739  LOCAL_INLINE void Fee_lMainReadTransHdlr(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   740  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   741  LOCAL_INLINE void Fee_lMainWriteTransHdlr(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   742  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   743  LOCAL_INLINE void Fee_lMainCacheUpdtTransHdlr(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   744  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   745  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   746  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   747  LOCAL_INLINE void Fee_lCheckPrevPage(const uint32 EndAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   748  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   749  LOCAL_INLINE void Fee_lPrepareInvldReqBuff(const uint32 BlockCycleCount,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   750                                             uint8 * const ReadWriteBuffPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   751                                             
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   752  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   753  LOCAL_INLINE void Fee_lHandleBlkHeaderFound(const uint8  PotentialMarkerPage,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   754                                              const uint32 DataNextPageCount);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   755  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   756  LOCAL_INLINE void Fee_lHandleBlkMarkerFound(const uint32 LWBHeaderAddress,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   757                                              const uint32 LWBMarkerAddress,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   758                                              const uint16 PageCount);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   759  LOCAL_INLINE void Fee_lComputeNextWLAddr( Fee_SectorInfoType * \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   760                                            const SectorInfoPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   761  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   762  LOCAL_INLINE uint8 Fee_lEvaluateStatePage(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   763  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   764  LOCAL_INLINE uint8 Fee_lEvaluateStatePageFormat(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   765  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   766  LOCAL_INLINE uint8 Fee_lEvaluateStatePageMarker(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   767  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   768  LOCAL_INLINE uint32 Fee_lEvaluateStatePageCrc(const uint32 * const DataPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   769                                                const uint32 Length);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   770  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   771  LOCAL_INLINE uint32 Fee_lIsWLBeginning(const uint32 address);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   772  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   773  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   774  LOCAL_INLINE uint32 Fee_lGetNextWLAddr(const uint32 address);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   775  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   776  LOCAL_INLINE uint32 Fee_lGetWLBeginning(const uint32 address);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   777  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   778  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   779  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   780  LOCAL_INLINE boolean Fee_lIsBlockAffected(const uint16 BlockNumber,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   781                                            const uint32 BlockAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   782  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   783  LOCAL_INLINE Std_ReturnType Fee_lEvaluateBlkHeader(const uint16 BlockNumber,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   784                                                     const uint16 BlockPageCount);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   785  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   786  LOCAL_INLINE Std_ReturnType Fee_lPerformReadCheck(const uint16 UserBlockIndex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   787  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   788  LOCAL_INLINE Std_ReturnType Fee_lCheckBlkCycleCnt(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   789    const Fee_BlockType *const BlockPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   790    const uint32 BlockCycleCount);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   791  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   792  LOCAL_INLINE boolean Fee_lIsSectorEmpty(const uint8 state, const uint8 used);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   793  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   794  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   795  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   796  LOCAL_INLINE boolean Fee_lIsUserReadReqstd(const Fee_StateDataType * \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   797                                             const s_ptr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   798  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   799  LOCAL_INLINE boolean Fee_lIsUserWriteInvldReqstd
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   800  (const Fee_StateDataType * const s_ptr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   801  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   802  #if (FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   803  static void Fee_lGcHardenQsSector(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   804  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   805  static boolean Fee_lIsQsWriteReadAllowedbyGC(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   806  static Fls_17_Dmu_AddressType Fee_lGcHardenReqChk(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   807  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   808  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   809  LOCAL_INLINE Std_ReturnType Fee_lInitSafetyCheck(const uint8 ApiId);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   810  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   811  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   812  LOCAL_INLINE Std_ReturnType Fee_lEraseQsDataSafetycheck(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   813  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   814  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   815  #if (FEE_SAFETY_ENABLE == STD_ON) || (MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   816  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY) \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   817      && (FEE_GET_CYCLE_COUNT_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   818  LOCAL_INLINE Std_ReturnType Fee_lGetCycleSafetyCheck\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   819            (const uint32 * const CountPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   820  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   821  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   822  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   823  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   824  LOCAL_INLINE Std_ReturnType Fee_lQsBlkInfoSafetyCheck \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   825        (const Fee_QuasiStaticBlockInfoType * const BlockInfoPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   826  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   827  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   828  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   829  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   830  static uint32 Fee_lGetBlkCycleCount(const uint16 Index);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   831  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   832  static void Fee_lClearFeeReadWriteBuffer(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   833  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   834  static void Fee_lPrepareMarkerBuffer(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   835  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   836  static void Fee_lClearMarkerBuffer(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   837  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   838  static void Fee_lHandleIntrWrite(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   839  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   840  static void Fee_lLastPgHandler(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   841  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   842  static void Fee_lUpdateCache(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   843  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   844  static void Fee_lPrepareStatePageBuffer(const uint8 Bank, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   845                                          const uint8 SectorState);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   846  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   847  static void Fee_lHandleUserWrite(const uint16 UserBlockIndex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   848  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   849  static void Fee_lHandleWritePrepDFLASH(const uint8 *const SrcPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   850  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   851  static void Fee_lInitGC(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   852  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   853  static void Fee_lLocalRead(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   854  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   855  static uint16 Fee_lCheckReadLength(const Fls_17_Dmu_AddressType ActualAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   856                                     const uint16 Length);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   857  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   858  static void Fee_lLocalWrite(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   859  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   860  static void Fee_lGcErrorHandler(const uint8 Error, const uint16 Index);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   861  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   862  static void Fee_lGcRead(const Fls_17_Dmu_AddressType Position,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   863                          const uint16 Offset);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   864  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   865  static void Fee_lGcPrologue(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   866  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   867  static void Fee_lGcStartCopy(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   868  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   869  static void Fee_lGcDiscardUnconfigBlk(const uint16 Index);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   870  static void Fee_lGcDiscardConfigBlk(const uint16 Index);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   871  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   872  static void Fee_lClearFeeGcReadWriteBuffer(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   873  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   874  static void Fee_lHandleInitGcFail(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   875  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   876  static void Fee_lGcCopyReadNxtPage(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   877  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   878  static void Fee_lGarbageCollection(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   879  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   880  static void Fee_lUpdateNonZeroWLInfo(Fee_SectorInfoType *const SectorInfoPtr, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   881                                       const uint32 SrcAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   882  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   883  static boolean Fee_lIsReadAllowedbyGC(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   884  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   885  static boolean Fee_lIsWriteInvldAllowedbyGC(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   886  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   887  static boolean Fee_lIsLastWrittenWLAffected(const uint16 StartOffset);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   888  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   889  static boolean Fee_lIsBlockAcrossWLLatest(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   890  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   891  static boolean Fee_lGcCheckBlkCopy(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   892  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   893  static uint8 Fee_lGcStartCopyWrite(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   894  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   895  static uint8 Fee_lGcWrite(const Fls_17_Dmu_AddressType Position,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   896                            const uint16 Offset);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   897  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   898  static uint8 Fee_lGcErasePrevSector(const uint8 GcState);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   899  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   900  static uint8 Fee_lGcProgramStatePage(const uint8 GcState);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   901  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   902  static Fee_PageType Fee_lGetDFLASHPages(const uint16 Size);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   903  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   904  static uint32 Fee_lGetFreeDFLASHPages(const uint8 BankNumber,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   905                                        const uint32 StartAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   906  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   907  LOCAL_INLINE void Fee_lHandleIntrRead(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   908  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   909  LOCAL_INLINE void Fee_lComputeNextFreePageAddr(const uint32 BankNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   910  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   911  LOCAL_INLINE void Fee_lUpdateCacheTable(const uint32 BankNumber, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   912                                          const uint32 EndAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   913  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   914  LOCAL_INLINE Std_ReturnType Fee_lPerformWriteCheck( \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   915      const Fee_BlockType * const BlockPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   916  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   917  LOCAL_INLINE Std_ReturnType Fee_lPerformCurrBlkCheck(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   918    const Fee_BlockType * const BlockPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   919  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   920  LOCAL_INLINE uint32 Fee_lGetBlockHeaderAddress(const uint32 LWBMarkerAddress,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   921                                                 const uint16 PageCount);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   922  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   923  LOCAL_INLINE boolean Fee_lIsGcTriggeredOnce
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   924  (const Fee_StateDataType *const StateDataPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   925  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   926  LOCAL_INLINE boolean Fee_lIsSectorThresholdCrossed(const uint32 FreePages,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   927      const uint32 PageCount);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   928  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   929  LOCAL_INLINE boolean Fee_lIsSectorEndCrossed(const uint32 FreePages,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   930                                               const uint32 PageCount);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   931  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   932  LOCAL_INLINE boolean Fee_lGcCheckUnconfigBlkCopy(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   933  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   934  LOCAL_INLINE uint16 Fee_lLocalReadStart(const Std_ReturnType ReturnValue,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   935                                          const uint16 UserBlockIndex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   936  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   937  LOCAL_INLINE void Fee_lMainGCTransHdlr(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   938  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   939  LOCAL_INLINE void Fee_lHandleErasePrepDFLASH(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   940  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   941  LOCAL_INLINE void Fee_lIDSM(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   942  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   943  LOCAL_INLINE void Fee_lINSM(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   944  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   945  LOCAL_INLINE void Fee_lIPrepDFlashSM(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   946  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   947  LOCAL_INLINE void Fee_lInitGCDSMTransHandler(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   948  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   949  LOCAL_INLINE void Fee_lInitGCPrepDFlsTransHandler(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   950  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   951  LOCAL_INLINE uint8 Fee_lPrepDFlashStateEraseS0(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   952  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   953  LOCAL_INLINE uint8 Fee_lPrepDFlashStateEraseS1(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   954  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   955  LOCAL_INLINE uint8 Fee_lPrepDFlashStatepageProgram(const uint8 PrepDFlashStatePrm);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   956  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   957  LOCAL_INLINE void Fee_lInitGCTransHandler(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   958  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   959  LOCAL_INLINE void Fee_lHandleGcFail(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   960  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   961  LOCAL_INLINE void Fee_lGcRequested(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   962  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   963  LOCAL_INLINE void Fee_lGcBlkCompare(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   964  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   965  LOCAL_INLINE void Fee_lHandleUnConfigGcCopyError(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   966  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   967  LOCAL_INLINE void Fee_lHandleConfigGcCopyError(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   968  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   969  LOCAL_INLINE void Fee_lGcEraseCompare(const uint8 GcState);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   970  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   971  LOCAL_INLINE void Fee_lGcStatePageCompare(const uint8 GcState);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   972  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   973  LOCAL_INLINE uint8 Fee_lGcStatePageComparePass(const uint8 GcState);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   974  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   975  LOCAL_INLINE uint8 Fee_lGcStatePageComparePassSetnewState(const uint8 GcState);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   976  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   977  LOCAL_INLINE uint8 Fee_lCheckPrevWordline(Fee_SectorInfoType * const \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   978      SectorInfoPtr, const uint32 EndAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   979  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   980  LOCAL_INLINE void Fee_lGetSectorFreeWL(Fee_SectorInfoType *const SectorInfoPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   981  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   982  LOCAL_INLINE void Fee_lSetInitGc(const uint8 DFlashStatus);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   983  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   984  LOCAL_INLINE uint8 Fee_lBuildDFlashStatus(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   985  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   986  LOCAL_INLINE uint8 Fee_lGetSectorInfo(const uint32 BankNumber, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   987                                        const uint32 EndAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   988  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   989  LOCAL_INLINE void Fee_lPerformPrevBlkCheck(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   990  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   991  LOCAL_INLINE void Fee_lUpdateGcCurrBlockInfo(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   992  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   993  LOCAL_INLINE void Fee_lPerformStuffCheck(const uint16 UserBlockIndex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   994  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   995  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   996  LOCAL_INLINE void Fee_lPrepareWriteReqBuff(const uint32 BlockCycleCount,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   997      uint8 * const ReadWriteBuffPtr,const uint16 BlockSize);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   998  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	   999  LOCAL_INLINE void Fee_lHandleUserWriteReq(const uint16 UserBlockIndex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1000  LOCAL_INLINE void Fee_lHandleUserWriteCompare(const uint16 UserBlockIndex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1001  LOCAL_INLINE void Fee_lHandleIntrWriteCompare(const uint16 UserBlockIndex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1002  LOCAL_INLINE void Fee_lMainGCHdlr(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1003  LOCAL_INLINE uint8 Fee_lHandleGcCopy(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1004  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1005  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1006  #if (((FEE_CANCELL_ALL_API == STD_ON) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1007      (FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA))||\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1008      ((FEE_ONGOING_WRITE_CANCEL_SUPPORT == STD_ON)&& \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1009      (FEE_DATA_BLOCK_SUPPORTED !=  FEE_QUASI_STATIC_DATA_ONLY)))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1010  static void Fee_lCancelWrite(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1011  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1012  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1013  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1014  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1015  static void Fee_lQsInit(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1016  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1017  static void Fee_lQsErase(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1018  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1019  static void Fee_lQsRead(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1020  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1021  #if (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1022  static void Fee_lQsResumeErase(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1023  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1024  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1025  static void Fee_lQsWrite(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1026  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1027  static void Fee_lMainQsTransHdlr(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1028  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1029  static void Fee_lEvalQsBlockState(Fee_CacheType *const Cacheptr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1030  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1031  static void Fee_lHandleQsJobSuccess(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1032  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1033  static void Fee_lHandleQsJobFailure(const uint8 Error);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1034  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1035  static void Fee_lQsBlockErase(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1036  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1037  static void Fee_lQsBccWrite(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1038  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1039  static void Fee_lQsBlockWrite(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1040  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1041  static void Fee_lQsProgState(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1042  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1043  static void Fee_lQsIDSM(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1044  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1045  static void Fee_lMainQs(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1046  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1047  #if (FEE_CANCELL_ALL_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1048  static void Fee_lCancelAll (void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1049  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1050  LOCAL_INLINE void Fee_lCancelallUsrJob (void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1051  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1052  LOCAL_INLINE void Fee_lCancelallUsrJobQs (void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1053  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1054  #if (FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1055  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1056  static void Fee_lCancelAllGCrestart(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1057  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1058  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1059  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1060  static Std_ReturnType Fee_lRegisterQsRead( const uint16 BlockNumber,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1061      const uint16 BlockOffset,  uint8 * const DataBufferPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1062      const uint16 Length);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1063  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1064  static Std_ReturnType Fee_lRegisterQsWrite( \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1065      const uint8 * const DataWriteBufferPtr, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1066      const Fee_BlockType * const BlockPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1067  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1068  static Fee_QsBlock_StateType Fee_lEvalQsBlockWriteStatus(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1069  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1070  static Fee_QsBlock_StateType Fee_lEvalQsBlockEraseStatus(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1071  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1072  static uint16 Fee_lQsGetBcc(const uint16 Blkindex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1073  static Std_ReturnType Fee_lEvalQsBlockVirginStatus(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1074  static void Fee_lHandleQsVirginBlocks(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1075  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1076  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1077  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1078  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1079  #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON) \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1080    || (FEE_RUNTIME_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1081  static void Fee_lReportError(uint8 ApiId, uint8 ErrorId, uint8 ErrorType);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1082  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1083  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1084  #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1085  LOCAL_INLINE Std_ReturnType Fee_lReadDetSafetyCheck(const uint16 BlockNumber,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1086      const uint16 BlockOffset,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1087      const uint8 *const DataBufferPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1088      const uint16 Length,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1089      uint8 ApiId);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1090  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1091  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1092  #if((FEE_RUNTIME_ERROR_DETECT == STD_ON) || \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1093    (((FEE_SAFETY_ENABLE == STD_ON) || (FEE_DEV_ERROR_DETECT == STD_ON)) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1094    (MCAL_AR_VERSION == MCAL_AR_422)))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1095  LOCAL_INLINE Std_ReturnType Fee_lCancelDetSafetyCheck(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1096  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1097  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1098  LOCAL_INLINE void Fee_lHandleCancelNotification(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1099  LOCAL_INLINE void Fee_lHandleUsrJobErrorNotification(Fls_17_Dmu_Job_Type Job);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1100  LOCAL_INLINE void Fee_lHandleReadJobEndNotification(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1101  #if (FEE_INITCHECK_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1102  LOCAL_INLINE uint32 Fee_lCalDataStructCrc(void);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1103  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1104  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1105  #define FEE_STOP_SEC_CODE_ASIL_B_LOCAL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1106  /*MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1107  without safe gaurd. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1108  /*MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1109  guideline. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1110  #include "Fee_MemMap.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1111  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1112  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1113  **                      Global Constant Definitions                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1114  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1115  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1116  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1117  **                      Global Variable Definitions                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1118  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1119  /*MISRA2012_RULE_5_1_JUSTIFICATION:Memmap Macros are defined as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1120  naming convention, hence it goes beyond 32 characters.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1121  /*MISRA2012_RULE_5_2_JUSTIFICATION:Memmap macros are defined as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1122  naming convention, hence it goes beyond 32 characters.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1123  /*MISRA2012_RULE_5_4_JUSTIFICATION:Memmap macros are defined as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1124  naming convention, hence it goes beyond 32 characters.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1125  /*MISRA2012_RULE_5_5_JUSTIFICATION:Memmap macros are defined as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1126  naming convention, hence it goes beyond 32 characters.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1127  #define FEE_START_SEC_VAR_CLEARED_ASIL_B_LOCAL_32
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1128  /*MISRA2012_RULE_19_01_JUSTIFICATION:File inclusion after pre-processor
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1129  directives is
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1130   allowed only for MemMap.h*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1131  /*MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1132  without safe gaurd. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1133  /*MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1134  guideline. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1135  #include "Fee_MemMap.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1136  /* [cover parentID={5C702DD9-D7F5-4c61-9ED1-45F6D8353DFB}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1137  static const Fee_ConfigType * Fee_CfgPtr ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1138  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1139  #if (FEE_INITCHECK_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1140  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1141  static uint32 Fee_DataStrcutInitCrc;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1142  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1143  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1144  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1145  /*MISRA2012_RULE_5_1_JUSTIFICATION:Memmap Macros are defined as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1146  naming convention, hence it goes beyond 32 characters.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1147  /*MISRA2012_RULE_5_2_JUSTIFICATION:Memmap macros are defined as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1148  naming convention, hence it goes beyond 32 characters.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1149  /*MISRA2012_RULE_5_4_JUSTIFICATION:Memmap macros are defined as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1150  naming convention, hence it goes beyond 32 characters.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1151  /*MISRA2012_RULE_5_5_JUSTIFICATION:Memmap macros are defined as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1152  naming convention, hence it goes beyond 32 characters.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1153  #define FEE_STOP_SEC_VAR_CLEARED_ASIL_B_LOCAL_32
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1154  /*MISRA2012_RULE_19_01_JUSTIFICATION:File inclusion after
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1155  pre-processor directives is
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1156   allowed only for MemMap.h*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1157  /*MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1158  without safe gaurd. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1159  /*MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1160  guideline. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1161  #include "Fee_MemMap.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1162  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1163  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1164  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1165  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1166  **                      Private Constant Definitions                          *
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1167  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1168  /* FEE state page Non Zero Data structure */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1169  #define FEE_START_SEC_CONST_ASIL_B_LOCAL_32
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1170  /*MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1171  without safegaurd. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1172  /*MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1173  guideline. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1174  #include "Fee_MemMap.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1175  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1176  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1177  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1178  static const uint32 Fee_StateHalf[] = { 0xFFFFFFC6U, 0xFFFFFFFFU,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1179                                          0xFFFFFFC6U, 0xFFFFFFFFU,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1180                                          0xFFFFFFC6U, 0xFFFFFFFFU,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1181                                          0xFFFFFFC6U, 0xFFFFFFFFU,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1182                                          0xFAFA5FC6U
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1183                                        };
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1184  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1185  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1186  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1187  #define FEE_STOP_SEC_CONST_ASIL_B_LOCAL_32
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1188  /*MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1189  without safegaurd. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1190  /*MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1191  guideline. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1192  #include "Fee_MemMap.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1193  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1194  **                      Private Variable Definitions                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1195  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1196  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1197  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1198  **                      Global Function Definitions                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1199  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1200  #define FEE_START_SEC_CODE_ASIL_B_LOCAL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1201  /*MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1202  without safe gaurd. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1203  /*MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1204  guideline. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1205  #include "Fee_MemMap.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1206  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1207  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1208  ** TRACEABILITY: [cover parentID={35CCD881-754A-4bd0-94B3-858BE25F259C}]     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1209  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1210  ** Syntax : void Fee_Init (const Fee_ConfigType* const ConfigPtr)            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1211  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1212  ** [/cover]                                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1213  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1214  ** Service ID:  0x00                                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1215  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1216  ** Sync/Async:  Asynchronous                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1217  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1218  ** Reentrancy:  Non reentrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1219  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1220  ** Parameters (in) : ConfigPtr - Pointer to the selected configuration set.  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1221  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1222  ** Parameters (out):  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1223  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1224  ** Return value    :  void                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1225  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1226  ** Description : Driver Module Initialization function                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1227  **               This service shall initialize the Flash EEPROM Emulation    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1228  **               module using the values provided in the configuration set.  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1229  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1230  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1231  /* [cover parentID={8C26701C-9198-4408-8462-33D3FEF6D160}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1232  Fee_Init
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1233  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1234  /* [cover parentID={5ADF6F97-3CF5-4ef0-9522-0E11F965AAFB}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1235  Resistance against Resets and Power Failures
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1236  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1237  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1238  void Fee_Init (const Fee_ConfigType* const ConfigPtr)
; Function Fee_Init
.L1074:
Fee_Init:	.type	func
	sub.a	a10,#32
.L3106:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1239  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1240  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1241    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1242    Fee_GcBlkInfoType  *GcBlkInfoPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1243    Fee_CacheType      *BlockPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1244    Fee_SectorInfoType *SectorInfoPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1245    Fee_LastWrittenBlkInfoType  *LastBlkInfoPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1246  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1247    uint32 Index;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1248    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1249    uint32 EndAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1250    uint8  DFlashStatus;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1251    uint8  ReturnVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1252    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1253  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1254    /* [cover parentID={C8F64E4E-6C3A-4ac0-92C0-385C6AEEE49F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1255       Is Configuration pointer is NULL?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1256       [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1257    /* [cover parentID={63531847-F84D-4dc2-B0E1-A33E2FBE6E94}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1258       Imported SW interfaces
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1259       [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1260    if (ConfigPtr == NULL_PTR)
	jz.a	a4,.L2
.L4117:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1261    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1262      /* [cover parentID={C16B81AE-C6F3-4d6e-9CA2-AD009DDE7613}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1263          DET or Safety is Enbaled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1264          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1265      #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1266  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1267      Fee_lReportError(FEE_SID_INIT, FEE_E_PARAM_POINTER, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1268      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1269    }   /*Check for state variable and block config pointer*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1270    /* [cover parentID={64D645EE-018D-4faa-B2BF-0EF986A3A034}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1271    else if((ConfigPtr->FeeStatePtr != NULL_PTR) &&
	ld.w	d15,[a4]
.L4118:
	jeq	d15,#0,.L3
.L4119:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1272            (ConfigPtr->FeeBlockConfigPtr != NULL_PTR))
	ld.w	d15,[a4]4
.L4120:
	jeq	d15,#0,.L4
.L4121:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1273    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1274      Fee_CfgPtr = ConfigPtr;
	movh.a	a15,#@his(Fee_CfgPtr)
.L4122:
	st.a	[a15]@los(Fee_CfgPtr),a4
.L4123:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1275      StateDataPtr = Fee_CfgPtr->FeeStatePtr;
	ld.a	a15,[a4]
.L3108:
	st.a	[a10]12,a15
.L3109:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1276      SectorInfoPtr = StateDataPtr->FeeSectorInfo;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1277  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1278  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1279      /* Initialize the state variables of various state machines */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1280  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1281      /* Initialize the cache related variables */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1282      /* [cover parentID={3511BD2D-D381-43b0-A336-4625BC78F4C6}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1283      Index = FEE_RESET;
	mov	d0,#0
.L3110:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1284      do
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1285      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1286        BlockPtr = &(StateDataPtr->FeeBlockInfo[Index]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1287        BlockPtr->Address = FEE_RESET;
	mov	d1,d0
.L3112:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1288        BlockPtr->BlockSize = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1289        BlockPtr->BlockNumber = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1290        BlockPtr->Status.Valid = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1291        BlockPtr->Status.Consistent = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1292        BlockPtr->Status.Copied = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1293        BlockPtr->Status.PrevCopyValid = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1294        BlockPtr->Status.PrevCopyConsistent = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1295        BlockPtr->Status.PrevCopyCopied = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1296        BlockPtr->PrevCopyAddress = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1297        BlockPtr->PrevBlkSize = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1298  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1299        Index++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1300      } while(Index < (uint32)(FEE_TOTAL_BLOCK_COUNT));
	mov	d2,#27
.L5:
	mul	d15,d0,#24
	ld.a	a15,[a10]12
.L3113:
	addsc.a	a15,a15,d15,#0
.L3114:
	st.w	[a15]80,d1
.L4124:
	st.w	[a15]84,d1
.L4125:
	st.h	[a15]88,d1
.L4126:
	st.b	[a15]90,d1
.L4127:
	st.w	[a15]92,d1
.L4128:
	st.w	[a15]96,d1
.L3115:
	add	d0,#1
.L4129:
	jlt.u	d0,d2,.L5
.L4130:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1301      StateDataPtr->FeeCacheState = FEE_CACHE_IDLE;
	ld.a	a15,[a10]12
.L3116:
	st.b	[a15]2520,d1
.L4131:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1302  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1303      StateDataPtr->FeeGCUnconfigBlkCopyIndex = FEE_RESET;
	st.h	[a15]2504,d1
.L4132:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1304      StateDataPtr->FeeUncfgBlksExceeded = FEE_RESET;
	st.b	[a15]2531,d1
.L4133:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1305      StateDataPtr->FeeUnConfigBlockCount = FEE_RESET;
	st.h	[a15]2506,d1
.L4134:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1306  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1307      GcBlkInfoPtr = &(StateDataPtr->FeeGcCurrBlkInfo);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1308      GcBlkInfoPtr->BlockNumber = FEE_RESET;
	st.h	[a15]746,d1
.L4135:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1309      GcBlkInfoPtr->PageCount = FEE_RESET;
	st.h	[a15]744,d1
.L4136:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1310      GcBlkInfoPtr->Addr = FEE_RESET;
	st.w	[a15]740,d1
.L4137:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1311      GcBlkInfoPtr->Consistent = FEE_RESET;
	st.b	[a15]748,d1
.L3117:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1312  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1313      for(Index = FEE_RESET; Index < FEE_MAX_NUM_OF_BLKS_IN_WL; Index++)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1314      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1315        StateDataPtr->FeeGcLWBGcSrcAddr[Index] = FEE_RESET;
	mov	d0,#0
.L3111:
	mov	d15,#32
.L4138:
	j	.L6
.L7:
	ld.a	a15,[a10]12
.L3118:
	addsc.a	a15,a15,d1,#2
.L3119:
	st.w	[a15]768,d0
.L3120:
	add	d1,#1
.L6:
	jlt.u	d1,d15,.L7
.L3121:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1316      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1317      StateDataPtr->FeeGcBlkIndexInWL = FEE_RESET;
	ld.a	a15,[a10]12
.L3122:
	st.b	[a15]2517,d0
.L4139:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1318  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1319      StateDataPtr->FeeGcState = FEE_GC_IDLE;
	mov	d15,#14
.L4140:
	st.b	[a15]2515,d15
.L4141:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1320      StateDataPtr->FeeGCCopyIndex = FEE_RESET;
	st.h	[a15]2502,d0
.L4142:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1321      StateDataPtr->FeeGcSrcAddr = FEE_RESET;
	st.w	[a15]2448,d0
.L4143:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1322      StateDataPtr->FeeGcDestAddr = FEE_RESET;
	st.w	[a15]2444,d0
.L4144:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1323      StateDataPtr->FeeDisableGCStart = (boolean)FALSE;
	st.b	[a15]2534,d0
.L4145:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1324      StateDataPtr->FeeGCImmBlkWrite = (boolean)FALSE;
	st.b	[a15]2535,d0
.L4146:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1325  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1326      #if (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1327      StateDataPtr->FeeEraseSuspendStatus = FEE_ERASE_NOT_SUSPENDED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1328      StateDataPtr->FeeEraseResumeDemReported = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1329      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1330  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1331      /* Initialize the InitGC related variables */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1332      StateDataPtr->FeeInitGCState = FEE_INITGC_IDLE;
	st.b	[a15]2518,d0
.L4147:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1333      StateDataPtr->FeePrepDFLASHState = FEE_PREPDF_ERASE_S0;
	st.b	[a15]2519,d0
.L4148:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1334      StateDataPtr->FeeRepairStep = FEE_REPAIR_IDLE;
	st.b	[a15]2521,d0
.L4149:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1335      StateDataPtr->FeeGcResumeState = FEE_RESET;
	st.b	[a15]2516,d0
.L4150:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1336  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1337      /* Initialize the Read and Write related variables */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1338      StateDataPtr->FeePendReqStatus = FEE_PEND_PREV_NO_REQ;
	mov	d15,#1
.L4151:
	st.b	[a15]2514,d15
.L4152:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1339      StateDataPtr->FeeLastWrittenBlockDirty = FEE_LWB_NOT_DIRTY;
	st.b	[a15]2513,d0
.L4153:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1340  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1341      LastBlkInfoPtr = &(StateDataPtr->FeeLastWrittenBlkInfo);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1342      LastBlkInfoPtr->Addr = FEE_RESET;
	st.w	[a15]728,d0
.L4154:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1343      LastBlkInfoPtr->BlockNumber = FEE_RESET;
	st.h	[a15]734,d0
.L4155:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1344      LastBlkInfoPtr->PageCount = FEE_RESET;
	st.h	[a15]732,d0
.L4156:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1345      LastBlkInfoPtr->Status.Valid = FEE_RESET;
	st.b	[a15]736,d0
.L4157:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1346      LastBlkInfoPtr->Status.Consistent = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1347      LastBlkInfoPtr->Status.Copied = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1348      LastBlkInfoPtr->Status.PrevCopyValid = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1349      LastBlkInfoPtr->Status.PrevCopyConsistent = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1350      LastBlkInfoPtr->Status.PrevCopyCopied = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1351  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1352      StateDataPtr->FeeNextFreePageAddr = FEE_RESET;
	st.w	[a15]2452,d0
.L4158:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1353      StateDataPtr->FeeBlockStartAddr = FEE_RESET;
	st.w	[a15]2460,d0
.L4159:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1354  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1355      StateDataPtr->FeeUserReadDestPtr = (uint8*)NULL_PTR;
	mov.a	a2,#0
.L4160:
	st.a	[a15]2476,a2
.L4161:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1356      #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1357      /* Initialize common variables */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1358      Fee_lClearFeeReadWriteBuffer();
	call	Fee_lClearFeeReadWriteBuffer
.L3107:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1359      Fee_lClearFeeGcReadWriteBuffer();
	call	Fee_lClearFeeGcReadWriteBuffer
.L4162:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1360      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1361  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1362      StateDataPtr->FeeBlkPageCount = (Fee_PageType)FEE_RESET;
	mov	d0,#0
.L3123:
	st.h	[a15]2494,d0
.L4163:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1363      StateDataPtr->FeeCurrReqBlockNum = FEE_RESET;
	st.h	[a15]2498,d0
.L4164:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1364      StateDataPtr->FeeUserWriteBytesCount = FEE_RESET;
	st.h	[a15]2496,d0
.L4165:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1365      StateDataPtr->FeeUserJobFailCount = FEE_RESET;
	st.b	[a15]2529,d0
.L4166:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1366  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1367      StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus = FEE_RESET;
	ld.bu	d15,[a15]2512
.L4167:
	insert	d15,d15,#0,#3,#1
.L4168:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1368      StateDataPtr->FeeStatusFlags.FeeBlkModified = FEE_RESET;
	insert	d15,d15,#0,#0,#1
.L4169:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1369      StateDataPtr->FeeStatusFlags.FeeWriteInvldQSeraseAPICalled = FEE_RESET;
	insert	d15,d15,#0,#4,#1
.L4170:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1370      StateDataPtr->FeeStatusFlags.FeeStartInitGC = FEE_RESET;
	insert	d15,d15,#0,#1,#2
	st.b	[a15]2512,d15
.L4171:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1371      StateDataPtr->FeeStatusFlags.FeeCurrSector = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1372  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1373      StateDataPtr->FeeMainJob = FEE_MAIN_UNINIT;
	st.b	[a15]2528,d0
.L4172:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1374      StateDataPtr->FeeJobResult = MEMIF_JOB_OK;
	st.b	[a15]2480,d0
.L4173:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1375      StateDataPtr->FeeIntrJob = FEE_NO_JOB;
	st.b	[a15]2523,d0
.L4174:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1376      StateDataPtr->FeeIntrJobStatus = FEE_JOB_IDLE;
	st.b	[a15]2524,d0
.L4175:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1377      StateDataPtr->FeeIntrJobResult = FEE_JOB_PASS;
	st.b	[a15]2526,d0
.L4176:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1378      StateDataPtr->FeeUserJobStatus = FEE_JOB_IDLE;
	st.b	[a15]2525,d0
.L4177:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1379      StateDataPtr->FeeUserJobResult = FEE_JOB_PASS;
	st.b	[a15]2527,d0
.L4178:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1380      StateDataPtr->FeeIntrJobFailCount = FEE_RESET;
	st.b	[a15]2530,d0
.L4179:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1381  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1382      StateDataPtr->FeeWLAffectedType = FEE_LWB_NOT_AFFECTED;
	st.b	[a15]2522,d0
.L4180:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1383      StateDataPtr->FeeWriteAffectedAddr = FEE_RESET;
	st.w	[a15]2456,d0
.L4181:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1384  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1385      /* Initialize Sector State information */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1386      /* [cover parentID={E877ED96-C8FA-4a00-A1DE-878B705D6B4A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1387      for(Index = FEE_RESET; Index < FEE_SECTORS; Index++)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1388      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1389        SectorInfoPtr[Index].State = FEE_RESET;
	mov	d15,d0
.L3125:
	j	.L8
.L9:
	mul	d1,d0,#40
	ld.a	a15,[a10]12
.L3126:
	addsc.a	a15,a15,d1,#0
.L3127:
	st.b	[a15]37,d15
.L4182:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1390        SectorInfoPtr[Index].StateCount = FEE_RESET;
	st.w	[a15],d15
.L4183:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1391        SectorInfoPtr[Index].UnerasableWLCount = FEE_RESET;
	st.b	[a15]36,d15
.L4184:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1392        SectorInfoPtr[Index].UnerasableWLAddr[0] = FEE_RESET;
	st.w	[a15]4,d15
.L4185:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1393        SectorInfoPtr[Index].UnerasableWLAddr[1] = FEE_RESET;
	st.w	[a15]8,d15
.L3128:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1394        SectorInfoPtr[Index].Status.Dirty = FEE_RESET;
	ld.bu	d1,[a15]38
.L4186:
	insert	d1,d1,#0,#0,#2
	st.b	[a15]38,d1
.L3129:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1395        SectorInfoPtr[Index].Status.Used = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1396        SectorInfoPtr[Index].StatePageAddr = FEE_RESET;
	st.w	[a15]28,d15
.L4187:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1397        SectorInfoPtr[Index].NextFreeWLAddr = FEE_RESET;
	st.w	[a15]32,d15
.L4188:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1398        SectorInfoPtr[Index].NonZeroWLCount = FEE_RESET;
	st.w	[a15]24,d15
.L4189:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1399        SectorInfoPtr[Index].NonZeroWLAddr[0] = FEE_RESET;
	st.w	[a15]12,d15
.L4190:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1400        SectorInfoPtr[Index].NonZeroWLAddr[1] = FEE_RESET;
	st.w	[a15]16,d15
.L3130:
	add	d0,#1
.L8:
	jlt.u	d0,#2,.L9
.L4191:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1401      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1402      StateDataPtr->FeeStateCount = FEE_RESET;
	mov	d15,#0
.L3124:
	st.w	[a10]20,d15
.L3132:
	ld.a	a15,[a10]12
.L3133:
	st.w	[a15]904,d15
.L4192:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1403      StateDataPtr->FeeSectorCount = FEE_RESET;
	st.b	[a15]2533,d15
.L4193:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1404      StateDataPtr->FeeComparedLen = FEE_RESET;
	st.h	[a15]2490,d15
.L4194:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1405      StateDataPtr->FeeReadLen = FEE_RESET;
	st.h	[a15]2492,d15
.L4195:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1406      StateDataPtr->FeeUnErasableWLAddrTemp[0] = FEE_RESET;
	st.w	[a15]2468,d15
.L4196:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1407      StateDataPtr->FeeUnErasableWLAddrTemp[1] = FEE_RESET;
	st.w	[a15]2472,d15
.L4197:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1408      StateDataPtr->FeeUnErasableWLCountTemp = FEE_RESET;
	st.b	[a15]2532,d15
.L4198:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1409  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1410      #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1411      /* Read sector information */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1412      for(Index = FEE_RESET; Index < FEE_SECTORS; Index++)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1413      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1414        if(Index == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1415        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1416          EndAddr = FEE_DFLASH_BANK0_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1417        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1418        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1419        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1420          EndAddr = FEE_DFLASH_BANK1_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1421        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1422        StateDataPtr->FeeCurrSectSrcAddr = EndAddr +
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1423                                           (FEE_DFLASH_SECTOR_SIZE -
	mov.u	d15,#65024
.L3131:
	addih	d15,d15,#7
	st.w	[a10]24,d15
.L1596:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1424                                            FEE_DFLASH_WORDLINE_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1425        do
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1426        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1427          ReturnVal = Fee_lGetSectorInfo(Index, EndAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1428        } while(ReturnVal == FEE_SP_INIT);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1429      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1430  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1431      DFlashStatus = Fee_lBuildDFlashStatus();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1432  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1433      /* Initialize for quasi static blocks if configured */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1434      #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1435  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1436      StateDataPtr->FeeQsBlockVirginCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1437      Fee_lQsInit();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1438  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1439      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1440  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1441      #if (FEE_CANCELL_ALL_API == STD_ON) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1442          (FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1443  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1444      StateDataPtr->FeeCancelallGCstate = FEE_GC_NOT_CANCLD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1445  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1446      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1447  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1448      StateDataPtr->FeeEraseVerErr = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1449      StateDataPtr->FeeProgVerErr  = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1450      Fee_lSetInitGc(DFlashStatus);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1451  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1452      if( Fee_CfgPtr->FeeGCConfigSetting.FeeGcRestartPoint ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1453          (uint32)FEE_GC_RESTART_INIT )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1454      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1455        /* [cover parentID={14D5A81B-1A65-400a-B2D0-A89AAE9BED19}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1456        Assign FeeStartInitGC = 1
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1457        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1458        /* Start Init GC:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1459        Check the current state of the sectors and bring them to normal state*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1460        StateDataPtr->FeeStatusFlags.FeeStartInitGC = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1461      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1462  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1463      #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1464      StateDataPtr->FeeQsBlockVirginCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1465      Fee_lQsInit();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1466      /* [cover parentID={EFCEB24D-1879-4c0d-97A3-39C9A8BE68F1}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1467          Set FeeInitAPICalled , indicating Fee Init API is called
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1468      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1469      StateDataPtr->FeeStatusFlags.FeeStartInitGC = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1470  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1471      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1472  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1473      #if (FEE_INITCHECK_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1474  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1475      Fee_DataStrcutInitCrc = Fee_lCalDataStructCrc();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1476  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1477      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1478  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1479    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1480    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1481    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1482  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1483      #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1484  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1485      Fee_lReportError(FEE_SID_INIT, FEE_E_PARAM_POINTER, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1486      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1487      /* Report DET-Safety error if DET-Safety is Enabled */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1488    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1489    /* [cover parentID={5F24109C-8447-4116-B653-3A53C9716F11}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1490        Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1491       [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1492  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1493  } /*End of Fee_Init*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1494  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1495  #if ((FEE_SET_MODE_SUPPORTED == STD_ON) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1496      (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1497      (MCAL_AR_VERSION == MCAL_AR_422)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1498  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1499  ** TRACEABILITY: []                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1500  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1501  ** Syntax : void Fee_SetMode( const MemIf_ModeType Mode )                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1502  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1503  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1504  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1505  ** Service ID:  0x01                                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1506  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1507  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1508  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1509  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1510  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1511  ** Parameters (in) :  MemIf_ModeType - Desired mode for the underlying flash  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1512  **                                      driver.                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1513  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1514  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1515  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1516  ** Return value    :  void                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1517  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1518  ** Description : This API sets the mode of the underlying flash driver        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1519  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1520  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1521  /* [cover parentID={272C7054-BCB3-4896-8A50-62B33C986E77}]Fee_SetMode[/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1522  /* [cover parentID={1905C7A8-06F4-4ae3-9AD0-A438DBF66138}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1523  Fee_SetMode
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1524  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1525  void Fee_SetMode(const MemIf_ModeType Mode)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1526  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1527    /* [cover parentID={2632D8CE-7764-4eef-84D2-AF09AC67A8EA}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1528        DET enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1529       [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1530    uint8              Error;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1531    MemIf_StatusType   FeeStatus;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1532    #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1533  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1534    /* [cover parentID={2E09D74B-AC0E-4f9f-8ACD-59AF9D9BA2D0}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1535        Is the configuration pointer NULL?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1536        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1537    /*Check for configuration pointer(Fee_CfgPtr)for null as part safety check */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1538    if(Fee_CfgPtr != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1539    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1540    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1541      /* [cover parentID={2632D8CE-7764-4eef-84D2-AF09AC67A8EA}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1542          DET or safety enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1543         [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1544      Error = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1545      /* [cover parentID={CCE44DC3-B99E-4da5-8892-DC625DA7592C}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1546          Get Fee status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1547          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1548      /* Get the FEE status */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1549      FeeStatus = Fee_lGetStatus();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1550      /* [cover parentID={B391E83E-F746-4e00-B284-5FCE637876FA}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1551      Is any user or internal job ongoing?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1552      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1553      if(FeeStatus != MEMIF_IDLE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1554      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1555        /* [cover parentID={0C2893D1-2C1F-41c5-8447-8BC0CD5183E7}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1556        Is driver state is internal busy
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1557        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1558        /* If busy, report error */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1559      #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1560        if(FeeStatus == MEMIF_BUSY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1561        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1562           /* [cover parentID={57D00748-5476-41f7-A9B3-07A4186C0828}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1563           Report FEE_E_BUSY DET
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1564           [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1565          Fee_lReportError(FEE_SID_SETMODE, FEE_E_BUSY, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1566        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1567      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1568        Error = FEE_SET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1569      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1570      if(Error == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1571      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1572        /* set mode of FLS */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1573        Fls_17_Dmu_SetMode(Mode);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1574      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1575    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1576    #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1577    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1578    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1579      /* [cover parentID={73D8CF32-6D88-4c5d-919D-8A233A83931D}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1580          Report FEE_E_UNINIT DET
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1581         [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1582      Fee_lReportError(FEE_SID_SETMODE, FEE_E_UNINIT, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1583    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1584    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1585    /* [cover parentID={BA05C25B-11F6-4fe4-86EA-96E6EFF55374}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1586        Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1587       [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1588  }/* End of Fee_SetMode */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1589  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1590  #endif /* #if (FEE_SET_MODE_SUPPORTED == STD_ON) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1591  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1592  #if ((FEE_SET_MODE_SUPPORTED == STD_ON) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1593      (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1594      (MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1595  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1596  ** TRACEABILITY: [cover parentID={22E4911E-7754-4392-8BBA-6810E8AD3CA7}]      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1597  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1598  ** Syntax : void Fee_SetMode( const MemIf_ModeType Mode )                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1599  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1600  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1601  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1602  ** Service ID:  0x01                                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1603  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1604  ** Sync/Async: Asynchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1605  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1606  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1607  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1608  ** Parameters (in) :  MemIf_ModeType - Desired mode for the underlying flash  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1609  **                                      driver.                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1610  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1611  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1612  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1613  ** Return value    :  void                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1614  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1615  ** Description : This API sets the mode of the underlying flash driver        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1616  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1617  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1618  void Fee_SetMode(const MemIf_ModeType Mode)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1619  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1620    MemIf_StatusType   FeeStatus;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1621    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1622  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1623    /* [cover parentID={2E09D74B-AC0E-4f9f-8ACD-59AF9D9BA2D0}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1624        Is the configuration pointer NULL?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1625        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1626    /*Check for configuration pointer(Fee_CfgPtr)for null as part safety check */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1627    if(Fee_CfgPtr != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1628    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1629      /* [cover parentID={C24E9C5A-73A7-4122-8ADD-83AE39092A99}]]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1630       Get Fee status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1631      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1632      FeeStatus = Fee_lGetStatus();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1633      /* [cover parentID={21B5ACC3-E4EE-409b-AB43-B8EDD29DFFDF}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1634      Is the driver is initialized
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1635      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1636      if(FeeStatus != MEMIF_UNINIT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1637      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1638          StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1639  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1640        /* Get the FEE status */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1641        /* [cover parentID={2CBD812F-71A9-42d2-ADD9-251001AE7A5A}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1642        Is driver is busy with internal job
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1643        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1644        if(FeeStatus == MEMIF_BUSY_INTERNAL)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1645        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1646          /* [cover parentID={244DF83E-637C-424c-900B-D59C6C41569A}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1647          Register the pending set mode request
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1648          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1649          StateDataPtr->FeeSetModeReqPend = FEE_SET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1650          StateDataPtr->FeeChangeReqMode = Mode;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1651        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1652        else if(FeeStatus == MEMIF_IDLE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1653        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1654          /* [cover parentID={A29D45E2-1189-4e9b-8901-BF07A4FE4058}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1655          Set mode of FLS
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1656          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1657          /* set mode of FLS */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1658          Fls_17_Dmu_SetMode(Mode);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1659        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1660        /* [cover parentID={0189B8AE-401E-481a-A67D-00DC6859FC94}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1661        Is driver is busy with user job
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1662        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1663        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1664        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1665        #if (FEE_RUNTIME_ERROR_DETECT== STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1666          /* [cover parentID={83454225-3E38-48b0-AAB2-6B87F00FBF74}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1667          Report FEE_E_BUSY DET
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1668          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1669          /* If busy, report error */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1670          Fee_lReportError(FEE_SID_SETMODE, FEE_E_BUSY, FEE_RUNTIME_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1671        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1672        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1673      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1674      /* [cover parentID={2632D8CE-7764-4eef-84D2-AF09AC67A8EA}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1675       DET or safety enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1676      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1677      #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1678      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1679      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1680        /* [cover parentID={5B668FF2-32E7-4247-AA94-FD75CAF92CD6}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1681        Report FEE_E_UNINIT DET
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1682        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1683        Fee_lReportError(FEE_SID_SETMODE, FEE_E_UNINIT, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1684      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1685      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1686    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1687    #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1688    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1689    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1690      /* [cover parentID={5B668FF2-32E7-4247-AA94-FD75CAF92CD6}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1691      Report FEE_E_UNINIT DET
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1692      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1693      Fee_lReportError(FEE_SID_SETMODE, FEE_E_UNINIT, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1694    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1695    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1696    /* [cover parentID={BA05C25B-11F6-4fe4-86EA-96E6EFF55374}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1697        Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1698       [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1699  }/* End of Fee_SetMode */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1700  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1701  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1702  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1703  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1704  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1705  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1706  ** TRACEABILITY: [cover parentID={01E4E203-8396-4c5a-8D69-7498B9450CF6}]      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1707  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1708  ** Syntax : Std_ReturnType Fee_Read(const uint16 BlockNumber,                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1709  **           const uint16 BlockOffset,uint8 * const DataBufferPtr,            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1710  **           uint16 Length )                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1711  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1712  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1713  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1714  ** Service ID: 0x02                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1715  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1716  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1717  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1718  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1719  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1720  ** Parameters (in) :  BlockNumber - Logical Block Number                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1721  **                    BlockOffset - Read address offset inside the block      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1722  **                    Length - Number of bytes to read                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1723  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1724  ** Parameters (out):  DataBufferPtr - Pointer to data buffer                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1725  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1726  ** Return value    :  Std_ReturnType                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1727  **                    E_OK : Request accepted                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1728  **                    E_NOT_OK : Request is not accepted. FEE module          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1729  **                    is busy in servicing other request.                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1730  ** Description : This function shall take the block start address and         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1731  ** offset and calculate the corresponding memory read address. The address    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1732  ** offset and length parameter can take any value within the given block      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1733  ** this allows reading of an arbitrary number of bytes from an arbitrary start**
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1734  ** address inside a logical block.                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1735  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1736  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1737  /* [cover parentID={98AD05C0-8E14-4115-8F67-B9A8041F57A7}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1738  Fee_Read
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1739  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1740  Std_ReturnType Fee_Read(const uint16 BlockNumber,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1741                          const uint16 BlockOffset,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1742                          uint8 *const DataBufferPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1743                          const uint16 Length)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1744  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1745  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1746  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1747    Std_ReturnType       ReturnValue;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1748    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1749    uint16               BlkIdx;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1750    Fee_StateDataType    *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1751    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1752    /* [cover parentID={1CC0BEAF-AEC4-405c-B302-764B43B5A677}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1753    if (Fee_CfgPtr != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1754    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1755      /* [cover parentID={DA1C5A03-C9D9-41cc-9994-F09270D9341C}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1756         DET or safety enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1757         [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1758      #if(MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1759      if(Fee_lGetStatus() != MEMIF_UNINIT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1760      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1761      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1762      #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1763        /* [cover parentID={EA3ECE0D-3FA4-478c-94E9-4178292BE386}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1764        /* [cover parentID={E43F3552-DD01-4714-89B2-CD53085F7B35}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1765        /* [cover parentID={44D0A38B-BEAB-4e9c-96BB-AA4D71CD56DC}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1766        ReturnValue = Fee_lReadDetSafetyCheck(BlockNumber, BlockOffset,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1767                                            DataBufferPtr, Length, FEE_SID_READ );
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1768        /* [cover parentID={FFCC3DB6-6879-4e2b-AED0-A9DC2C5A8A84}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1769        if(ReturnValue != E_NOT_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1770        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1771        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1772          /* [cover parentID={27ABBB41-5DB3-41dd-9393-3C3C997010FB}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1773             QS data block supported
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1774             [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1775        #if(FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1776  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1777          StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1778          BlkIdx = Fee_lGetUsrBlockIndex(BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1779  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1780          StateDataPtr->FeePendReqInfo.CacheIndex = BlkIdx;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1781          /* [cover parentID={13FCC1DB-57DE-45d3-AADD-472C333D926B}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1782              Is it for QS user?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1783              [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1784          /* [cover parentID={4FFD7EF7-6FB8-4845-A2E3-2760C7BE6563}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1785              Get block index
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1786             [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1787          /* [cover parentID={331E8782-EC9A-442d-AD29-C2D2E5206977}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1788              Test for request type
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1789             [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1790          if(Fee_CfgPtr->FeeBlockConfigPtr[BlkIdx].FeeUser ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1791              (uint8)FEE_QUASI_STATIC_USER)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1792          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1793            /* [cover parentID={09217FC4-21E4-4728-AD66-7C8F9476839B}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1794               Register QS read request and update Flag status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1795               [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1796            /* register quasi static block request */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1797            ReturnValue = Fee_lRegisterQsRead(BlockNumber, BlockOffset,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1798                                            DataBufferPtr, Length);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1799          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1800          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1801          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1802          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1803            /* [cover parentID={88ECB633-69AC-4911-8F23-AD56B2B19A9B}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1804            Register NVM read request and update Flag status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1805            [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1806            /* register nvm request */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1807            ReturnValue = Fee_lRegisterNvmRead(BlockNumber, BlockOffset,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1808                                             DataBufferPtr, Length, FEE_RESET);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1809          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1810        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1811      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1812      #if(MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1813      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1814      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1815        ReturnValue = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1816      #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1817        /* [cover parentID={4059E72C-2B05-43a1-91BB-26A7FE63D453}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1818        Fee_lReportError(FEE_SID_READ, FEE_E_UNINIT, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1819      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1820      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1821      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1822    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1823    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1824    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1825      /* [cover parentID={08827D4A-F03C-4c07-8B21-1A66B88D2E9B}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1826      Set Flag as E_NOT_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1827      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1828      ReturnValue = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1829      #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1830      /* [cover parentID={4059E72C-2B05-43a1-91BB-26A7FE63D453}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1831      Fee_lReportError(FEE_SID_READ, FEE_E_UNINIT, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1832      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1833    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1834  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1835    /* [cover parentID={CEBB81F8-0C10-40d8-A895-2DBA80493D87}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1836    Return Flag status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1837    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1838    return(ReturnValue);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1839    /* [cover parentID={9ED72611-8C9A-46d5-93B5-457408211296}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1840    Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1841    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1842  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1843  } /* End of Fee_Read */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1844  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1845  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1846  ** TRACEABILITY: [cover parentID={D93EC71E-D34B-46ed-99C1-8FCF19C0E7DB}]      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1847  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1848  ** Syntax : Std_ReturnType Fee_Write(const uint16 BlockNumber,                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1849  **                    const uint8 *const DataBufferPtr)                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1850  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1851  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1852  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1853  ** Service ID: 0x03                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1854  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1855  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1856  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1857  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1858  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1859  ** Parameters (in) :  BlockNumber - Logical Block Number                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1860  **                    DataBufferPtr - Pointer to data buffer                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1861  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1862  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1863  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1864  ** Return value    :  Std_ReturnType                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1865  **                    E_OK : Request accepted                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1866  **                    E_NOT_OK : Request is not accepted. FEE module          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1867  **                    is busy in servicing other request.                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1868  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1869  ** Description : This function shall take the logical block number and        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1870  ** determine the corresponding memory write address. This routine will        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1871  ** perform the block write operation on DFLASH (DF_EEPROM).                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1872  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1873  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1874  /* [cover parentID={9BF2094B-1F02-4294-978A-3CC5BEE6F977}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1875  Fee_write
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1876  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1877  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1878  Std_ReturnType Fee_Write(const uint16 BlockNumber,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1879                           const uint8 *const DataBufferPtr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1880  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1881    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1882    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1883    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1884  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1885    const Fee_BlockType*   BlockPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1886    uint16                 UserBlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1887    Std_ReturnType         ReturnValue;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1888  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1889    /*Check for configuration pointer(Fee_CfgPtr)for null as part safety check */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1890    /* [cover parentID={C330EC19-1B27-483d-9F93-50A8BBEF137B}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1891    Is configuration pointer NULL?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1892    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1893    if(Fee_CfgPtr != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1894    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1895      #if(MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1896      if(Fee_lGetStatus() != MEMIF_UNINIT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1897      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1898      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1899        UserBlockIndex = Fee_lGetUsrBlockIndex(BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1900        BlockPtr = &(Fee_CfgPtr->FeeBlockConfigPtr[UserBlockIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1901  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1902        /* [cover parentID={5D986A7A-A25D-46e0-B1A2-C507BD67870D}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1903        DET and SAFETY enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1904        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1905        #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1906        ReturnValue = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1907  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1908        /* [cover parentID={54C7D2CF-C17A-4808-A87B-E6E44C955019}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1909           [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1910  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1911        /* [cover parentID={CD11A821-E091-4690-8B0E-E0C7C168377F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1912        Is block number invalid?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1913        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1914        /* Check if the block number is correct */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1915        if(UserBlockIndex == FEE_LOG_BLOCK_NOT_FOUND)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1916        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1917          /* [cover parentID={035716BA-D7A0-4e6d-BA03-266CDC60C242}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1918          Report FEE_E_INVALID_BLOCK_NO DET
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1919          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1920          Fee_lReportError(FEE_SID_WRITE, FEE_E_INVALID_BLOCK_NO, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1921  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1922          /* [cover parentID={54C7D2CF-C17A-4808-A87B-E6E44C955019}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1923          Set Flag status as E_NOT_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1924          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1925          ReturnValue = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1926        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1927        /* [cover parentID={90D30799-F868-486d-BCF9-6A9E81AFC230}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1928        Is buffer pointer NULL?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1929        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1930        /* Check if the buffer pointer is NULL */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1931        else if(DataBufferPtr == (uint8*)NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1932        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1933          /* [cover parentID={A51384D5-E04A-49de-A1FE-A37570AD26A9}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1934          Report FEE_E_PARAM_POINTER DET
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1935          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1936          Fee_lReportError(FEE_SID_WRITE, FEE_E_PARAM_POINTER, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1937          /* [cover parentID={54C7D2CF-C17A-4808-A87B-E6E44C955019}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1938          Set Flag status as E_NOT_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1939          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1940          ReturnValue = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1941        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1942        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1943        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1944          /* dummy else */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1945        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1946  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1947        if (ReturnValue != E_NOT_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1948        #endif /* End of FEE_DEV_ERROR_DETECT == STD_ON */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1949        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1950  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1951          /* [cover parentID={9408C6E1-78CA-44d9-A113-984559B0BC0C}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1952          Check for Fee user
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1953          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1954          #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1955          StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1956          StateDataPtr->FeePendReqInfo.CacheIndex = UserBlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1957  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1958          /* [cover parentID={F5E19301-3D1B-464f-B8DF-D5AB7426A10D}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1959          Is it for Quasi static user?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1960          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1961          if(Fee_CfgPtr->FeeBlockConfigPtr[UserBlockIndex].FeeUser ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1962            (uint8)FEE_QUASI_STATIC_USER)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1963          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1964            /* [cover parentID={5E7361C7-B818-4fdc-8798-94B5D8FDB1BA}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1965            Register QS write request and update Flag status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1966            [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1967            /* register quasi static block request */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1968            ReturnValue = Fee_lRegisterQsWrite(DataBufferPtr, BlockPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1969          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1970          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1971          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1972          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1973            /* [cover parentID={9CF0435A-C83A-4862-A4D6-F6B24EBF01FF}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1974            Register NVM write request and update Flag status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1975            [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1976            /* register nvm request */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1977            ReturnValue = Fee_lRegisterNvmWrite(DataBufferPtr, BlockPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1978          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1979  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1980        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1981      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1982      #if(MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1983      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1984      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1985        ReturnValue = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1986        #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1987        /* [cover parentID={85CF0E69-4B89-4693-B69C-D559725B6FDF}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1988        Report FEE_E_UNINIT DET
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1989        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1990        Fee_lReportError(FEE_SID_WRITE, FEE_E_UNINIT, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1991        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1992      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1993      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1994    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1995    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1996    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1997  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1998      ReturnValue = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  1999      #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2000      /* [cover parentID={85CF0E69-4B89-4693-B69C-D559725B6FDF}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2001      Report FEE_E_UNINIT DET
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2002      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2003      Fee_lReportError(FEE_SID_WRITE, FEE_E_UNINIT, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2004      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2005  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2006    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2007  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2008  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2009    /* [cover parentID={B5FAF6DF-269B-495a-A2FB-882234AA9528}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2010    Return Flag status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2011    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2012    return(ReturnValue);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2013    /* [cover parentID={AE18F765-4BBD-4d68-AF6A-3FD069990AE6}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2014    Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2015    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2016  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2017  /* End of Fee_Write */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2018  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2019  /*CYCLOMATIC_Fee_Cancel_JUSTIFICATION: Fee_Cancel has
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2020  to determine all the states of ongoing operation and then cancel.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2021  It is broken properly into various stages using switch case which cannot be broken
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2022  further. If it is broken into more functions to fix RSM, the code readability
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2023  will get affected.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2024  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2025  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2026  ** TRACEABILITY: [cover parentID={1AC3C3C4-3B3C-468d-A5B2-684E3D5D03F1}]     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2027  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2028  ** Syntax : void Fee_Cancel(void)                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2029  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2030  ** [/cover]                                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2031  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2032  ** Service ID: 0x04                                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2033  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2034  ** Sync/Async:  Synchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2035  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2036  ** Reentrancy:  Non reentrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2037  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2038  ** Parameters (in) :  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2039  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2040  ** Parameters (out):  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2041  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2042  ** Return value    :  void                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2043  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2044  ** Description : Service to call the cancel function of the underlying flash **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2045  ** driver.This function shall cancels a pending request.                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2046  ** Note: An ongoing write request is not cancelled. However, a queued        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2047  ** write request is cancelled. Any read request either queued or under       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2048  ** execution is cancelled.                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2049  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2050  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2051  /* [cover parentID={43CB653F-D9FC-41ef-B842-8DD9AF9F04F2},
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2052  {7B564D5D-0FF2-4354-930B-A2008C7B3245}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2053  Fee_Cancel
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2054  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2055  void Fee_Cancel(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2056  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2057  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2058    const Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2059    uint8 NotifyCancel;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2060     /* [cover parentID={A8F80E20-A667-4bcf-BED4-73D9BC7BBE34}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2061    DET or safety enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2062    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2063    #if((FEE_RUNTIME_ERROR_DETECT == STD_ON) || \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2064    (((FEE_SAFETY_ENABLE == STD_ON) || (FEE_DEV_ERROR_DETECT == STD_ON)) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2065    (MCAL_AR_VERSION == MCAL_AR_422)))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2066    Std_ReturnType  Error;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2067    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2068    /* [cover parentID={431752DA-0ABE-4d79-AB16-D26A3C494824}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2069  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2070    NotifyCancel  = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2071    /* [cover parentID={46B369AC-83B5-45d7-99D8-16DCFBCC033D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2072    if(Fee_lInitSafetyCheck(FEE_SID_CANCEL) == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2073    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2074      #if(FEE_RUNTIME_ERROR_DETECT == STD_ON) || \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2075      (((FEE_SAFETY_ENABLE == STD_ON) || (FEE_DEV_ERROR_DETECT == STD_ON))  && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2076      (MCAL_AR_VERSION == MCAL_AR_422))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2077  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2078      /* [cover parentID={431752DA-0ABE-4d79-AB16-D26A3C494824}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2079      Get the error status through calling the function
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2080      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2081      Error = Fee_lCancelDetSafetyCheck();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2082      if(Error == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2083      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2084      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2085        StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2086        switch(StateDataPtr->FeePendReqStatus)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2087        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2088          /* [cover parentID={BCB57445-F21F-495e-A682-43F524055698}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2089          /* All these cases mean that the job is requested but not started */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2090          case FEE_REQ_READ:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2091          case FEE_REQ_NORM_WRITE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2092          case FEE_REQ_IMM_WRITE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2093          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2094  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2095            /* Job is in pending state and their is no job requested to fls.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2096            Set flag  NotifyCancel for triggering notification to user */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2097            NotifyCancel  = FEE_SET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2098            break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2099          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2100  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2101          /* The following cases mean that the read job is on-going */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2102          case FEE_PEND_PREV_READ_REQ:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2103          case FEE_PEND_PREV_READ_NOTIF:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2104          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2105            /* [cover parentID={A7271201-033A-463e-B2E6-9B2A8ADEA899}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2106            if(StateDataPtr->FeeUserJobStatus == FEE_JOB_REQSTD)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2107            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2108              /* [cover parentID={65DDD0F0-B824-4acf-8670-5B83B01098A7}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2109              Set flag  NotifyCancel for triggering notification to user
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2110              (Notify cancel only if UserJobStatus is Job Requested)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2111              Cancel the read job
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2112              [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2113              /* Cancels the read job , notification to user will be triggered
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2114              job fee_error notification function. This function is called by
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2115              fls driver when cancel is requested */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2116              Fls_17_Dmu_CancelNonEraseJobs();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2117            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2118            else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2119            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2120              /* Their is no request sent to fls , so
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2121              Set flag  NotifyCancel for triggering notification to user */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2122              NotifyCancel  = FEE_SET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2123            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2124            break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2125          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2126          /* [cover parentID={7982EEAA-B105-4d9d-AA43-DD4CC8599100}][/cover] */   
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2127          #if(FEE_ONGOING_WRITE_CANCEL_SUPPORT == STD_ON)             
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2128          case FEE_PEND_PREV_WRITE_REQ:           
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2129          case FEE_PEND_INTR_WRITE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2130          case FEE_PEND_INTR_READ:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2131          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2132              /* Their is no request sent to fls , so
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2133              Set flag  NotifyCancel for triggering notification to user */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2134              NotifyCancel  = FEE_SET;            
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2135              break;          
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2136          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2137          
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2138              
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2139          case FEE_PEND_PREV_COMPARE: 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2140          case FEE_PEND_INTR_COMPARE:     
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2141          {   
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2142              /* cancel ongoing write*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2143              Fee_lCancelWrite();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2144              break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2145                  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2146          }       
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2147          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2148          /* All other pend request states
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2149          Example: FEE_PEND_PREV_NO_REQ:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2150          */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2151          default:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2152          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2153            break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2154          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2155        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2156        /* [cover parentID={2E4DCC84-5788-4f1e-9B45-DF4D6B11F6C3}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2157        Is cancel notification call required?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2158        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2159        /* Check if cancel notification call is required */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2160        if(NotifyCancel  == FEE_SET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2161        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2162          /* [cover parentID={76226842-41D1-47d1-A7DD-5630D1F55A1C}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2163          Trigger the error notification implying the job is cancelled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2164          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2165          /*call handle user job with error = FEE_CANCELto trigger only error
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2166          notification */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2167          Fee_lHandleUsrJobFailure(FEE_CANCEL);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2168        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2169      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2170    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2171  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2172    /* [cover parentID={2C015858-96DC-4466-AB3B-0913BD68009C}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2173    Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2174    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2175  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2176  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2177  ** TRACEABILITY: [cover parentID={226C491E-1CDC-467b-B1C7-34265C1D5390}]      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2178  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2179  ** Syntax : MemIf_StatusType Fee_GetStatus(void)                              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2180  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2181  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2182  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2183  ** Service ID: 0x05                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2184  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2185  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2186  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2187  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2188  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2189  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2190  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2191  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2192  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2193  ** Return value    :  MemIf_StatusType                                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2194  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2195  ** Description : Service to return the status of the driver.                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2196  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2197  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2198  /* [cover parentID={257B750D-C0C9-47d1-B1E1-641B3FB9964D}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2199  Fee_GetStatus
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2200  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2201  MemIf_StatusType Fee_GetStatus(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2202  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2203  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2204    MemIf_StatusType   ReturnStatus;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2205  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2206    /* Check if the Fee_Init API is called */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2207    /*[cover parentID={C6677223-02B7-4569-B3FC-7CB8E56B5623}] [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2208    if(Fee_CfgPtr != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2209    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2210  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2211      /* [cover parentID={63DFD354-F0AB-41f7-A591-A9D6689DAAB5}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2212      Update Fee status accordingly
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2213      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2214      ReturnStatus = Fee_lGetStatus();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2215  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2216    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2217    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2218    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2219      /* [cover parentID={D174448D-7278-4e80-86C9-23521CD2EDBF}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2220      Set return status as Fee uinitialised (MEMIF_UNINIT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2221      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2222      ReturnStatus = MEMIF_UNINIT;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2223    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2224    /* [cover parentID={BD705C64-BA6E-40b4-95A4-AEB95915D59F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2225    Return the status value
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2226    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2227    return(ReturnStatus);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2228  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2229  }/*End of Fee_GetStatus */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2230  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2231  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2232  ** TRACEABILITY: [cover parentID={851BA7DF-094F-4a18-99EB-5961F8038283}]      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2233  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2234  ** Syntax : MemIf_JobResultType Fee_GetJobResult(void)                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2235  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2236  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2237  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2238  ** Service ID: 0x06                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2239  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2240  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2241  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2242  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2243  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2244  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2245  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2246  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2247  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2248  ** Return value    :  MemIf_JobResultType                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2249  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2250  ** Description : Service to query the result of the last accepted job issued  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2251  ** by NVM.                                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2252  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2253  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2254  /* [cover parentID={D12859D4-DC09-4009-AE0B-66AA09D02D76}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2255  Fee_GetJobResult
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2256  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2257  MemIf_JobResultType Fee_GetJobResult(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2258  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2259    const Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2260    MemIf_JobResultType ReturnValue = MEMIF_JOB_FAILED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2261  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2262    /*Check for configuration pointer(Fee_CfgPtr)for null as part safety check */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2263    /* Check if the Fee_Init API is called */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2264  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2265    #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2266    /*[cover parentID={85712388-9829-492f-8731-18B24E0B3A45}] [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2267    if(Fee_CfgPtr != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2268    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2269    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2270    #if(MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2271      if(Fee_lGetStatus() != MEMIF_UNINIT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2272    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2273      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2274        StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2275        ReturnValue = StateDataPtr->FeeJobResult;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2276      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2277    #if (((FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)) \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2278    && (MCAL_AR_VERSION == MCAL_AR_440))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2279      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2280      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2281        Fee_lReportError(FEE_SID_GETJOBRESULT, FEE_E_UNINIT, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2282        ReturnValue = MEMIF_JOB_FAILED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2283      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2284    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2285    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2286    /* [cover parentID={FD197E65-EE8B-493a-ADC6-6C2BFA4F2601}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2287    DET or safety enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2288    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2289    #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2290    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2291    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2292  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2293      /* [cover parentID={2939037D-26A7-4b0a-A227-653F5D286757}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2294      Report DET error as FEE_E_UNINIT
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2295      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2296  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2297      /* [cover parentID={3782FDE0-A93B-4780-8567-D0FDE7BC4D93}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2298      Return MEMIF_JOB_FAILED
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2299      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2300  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2301      Fee_lReportError(FEE_SID_GETJOBRESULT, FEE_E_UNINIT, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2302      ReturnValue = MEMIF_JOB_FAILED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2303    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2304  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2305    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2306    /* [cover parentID={09E392A4-0F42-4cd7-8A98-F2E95A884302}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2307    Return Fee job result
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2308    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2309    return (ReturnValue);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2310    /* [cover parentID={1D49459A-C72F-416f-89D4-8F5D33736EF8}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2311    Return the job result type
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2312    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2313  }/*End of Fee_GetJobResult */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2314  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2315  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2316  ** TRACEABILITY: [cover parentID={1D45F947-1794-4611-A1D4-C4FCB2C5F847}]      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2317  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2318  ** Syntax : Std_ReturnType Fee_InvalidateBlock(const uint16 BlockNumber)      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2319  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2320  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2321  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2322  ** Service ID: 0x07                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2323  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2324  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2325  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2326  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2327  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2328  ** Parameters (in) :  BlockNumber : Logical Block Number                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2329  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2330  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2331  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2332  ** Return value    :  Std_ReturnType                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2333  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2334  ** Description : This function invalidates the given logical block            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2335  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2336  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2337  /* [cover parentID={53FDE5DD-D4B5-4fe3-889B-3ED80C47E6B7}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2338  Fee_InvalidateBlock
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2339  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2340  Std_ReturnType Fee_InvalidateBlock(const uint16 BlockNumber)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2341  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2342  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2343    Fee_StateDataType   *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2344    const Fee_BlockType *BlockPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2345    uint16               UserBlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2346    MemIf_StatusType    ReturnStatus;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2347  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2348    Std_ReturnType       ReturnValue;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2349    /* [cover parentID={08905859-5E52-4608-A637-C88C8F2D83C8}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2350    Return E_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2351    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2352    ReturnValue = Fee_lInitSafetyCheck(FEE_SID_INVALIDATEBLOCK);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2353    /*Check Fee_CfgPtr is null if yes return E_not_ok . This done to avoid trap
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2354    if fee_init is not called */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2355  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2356  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2357    /* Check if the Fee_Init API is called */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2358    /* [cover parentID={EC251CE2-4ABC-4b2c-8B0B-64631235D3FA}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2359    Is the configuration pointer NULL?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2360    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2361    if(ReturnValue == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2362    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2363      StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2364      /* [cover parentID={032A4BEF-3F1A-43ed-BFE2-E359C539C84F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2365      Get user block index
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2366      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2367      UserBlockIndex = Fee_lGetUsrBlockIndex(BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2368      /* [cover parentID={512DF666-A64F-44c0-8088-1BAFF548E94C}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2369      DET or safety enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2370      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2371      /* [cover parentID={E7FBF8C4-C598-4c4f-9A02-E6F2E9073DC3}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2372      #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2373  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2374      /* [cover parentID={5C5DF49B-F830-4660-A219-6FFAE66F0A89}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2375      Is user block index valid?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2376      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2377      if( UserBlockIndex == FEE_LOG_BLOCK_NOT_FOUND)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2378      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2379        /* [cover parentID={48F1F75A-0C5E-436a-A2F0-636ECC141E4F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2380        Report FEE_E_INVALID_BLOCK_NO DET
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2381        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2382        /* Block is not configured */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2383        Fee_lReportError(FEE_SID_INVALIDATEBLOCK, FEE_E_INVALID_BLOCK_NO, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2384            FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2385        /* [cover parentID={0AAA8D6D-89EF-4d2a-82F7-92D6AB2B2E36}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2386        Return E_NOT_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2387        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2388        ReturnValue = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2389      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2390  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2391      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2392      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2393        /* [cover parentID={FDED4E44-602B-415e-8236-1CD52721E19D}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2394        Check for Fee status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2395        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2396        /* [cover parentID={11F3085D-A819-43f2-8115-66E7876D5797}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2397        Is Fee busy in internal operations?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2398        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2399      #if (MCAL_AR_VERSION == MCAL_AR_422)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2400        ReturnStatus = Fee_lGetStatus();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2401        if(ReturnStatus == MEMIF_BUSY_INTERNAL)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2402        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2403          /* [cover parentID={150C65F1-92E0-4029-8384-79B0B828E3A2}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2404                 Reject the invalidation request
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2405                [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2406          /* [cover parentID={0AAA8D6D-89EF-4d2a-82F7-92D6AB2B2E36}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2407                   Return E_NOT_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2408                [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2409          ReturnValue = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2410        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2411      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2412      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2413      /* [cover parentID={E7FBF8C4-C598-4c4f-9A02-E6F2E9073DC3}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2414      If no errors were detected and Fee is not internally busy
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2415      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2416      if (ReturnValue != E_NOT_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2417      #endif /*End of FEE_DEV_ERROR_DETECT == STD_ON */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2418      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2419        /* [cover parentID={8A852F26-A7B3-47c2-B4E8-AEA266A0F7FF}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2420        Any pending request?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2421        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2422  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2423        /* [cover parentID={8A852F26-A7B3-47c2-B4E8-AEA266A0F7FF}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2424        No pending request and Return Status is Idle?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2425        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2426        /* Execute only if there is no pending request */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2427       ReturnStatus = Fee_lGetStatus();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2428        /* [cover parentID={1CEFF261-6E46-4bb3-B102-1C6E657B7BF5}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2429        AUTOSAR version is 422
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2430        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2431      #if (MCAL_AR_VERSION == MCAL_AR_422)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2432        if(( StateDataPtr->FeePendReqStatus == FEE_PEND_PREV_NO_REQ ) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2433            (ReturnStatus == MEMIF_IDLE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2434      #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2435        if (ReturnStatus != MEMIF_BUSY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2436      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2437        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2438          #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2439          /* [cover parentID={5C5DF49B-F830-4660-A219-6FFAE66F0A89}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2440             Is user block index valid?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2441          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2442          if(Fee_CfgPtr->FeeBlockConfigPtr[UserBlockIndex].FeeUser ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2443              (uint8)FEE_QUASI_STATIC_USER)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2444          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2445            ReturnValue = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2446            /* [cover parentID={589953FB-C89B-4c27-9639-A54471518253}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2447            DET or safety enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2448            [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2449            #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2450            /* [cover parentID={48F1F75A-0C5E-436a-A2F0-636ECC141E4F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2451            Report FEE_E_INVALID_BLOCK_NO DET
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2452            [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2453            Fee_lReportError(FEE_SID_INVALIDATEBLOCK, FEE_E_INVALID_BLOCK_NO,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2454                FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2455  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2456            #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2457  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2458          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2459          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2460          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2461          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2462            BlockPtr = &(Fee_CfgPtr->FeeBlockConfigPtr[UserBlockIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2463            /* register invalidate request */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2464            StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2465            Fee_lRegisterWriteRequest(StateDataPtr->FeeReadWriteBuffer, BlockPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2466          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2467        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2468        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2469        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2470          /* [cover parentID={589953FB-C89B-4c27-9639-A54471518253}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2471          DET enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2472          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2473        #if (((FEE_DEV_ERROR_DETECT == STD_ON) || (FEE_SAFETY_ENABLE == STD_ON)) &&\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2474         (MCAL_AR_VERSION == MCAL_AR_422)) || (FEE_RUNTIME_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2475          /* FEE is busy with another request; raise BUSY DET */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2476          /* [cover parentID={D660C0F2-B899-4359-90D7-18B2DB4975FB}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2477  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2478            /*[cover parentID={092E5527-B561-4969-81B6-DDC3C30AA64B}] [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2479          #if (FEE_RUNTIME_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2480          Fee_lReportError(FEE_SID_INVALIDATEBLOCK, FEE_E_BUSY, FEE_RUNTIME_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2481          #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2482          Fee_lReportError(FEE_SID_INVALIDATEBLOCK, FEE_E_BUSY, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2483          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2484          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2485          /* [cover parentID={0AAA8D6D-89EF-4d2a-82F7-92D6AB2B2E36}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2486          Return E_NOT_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2487          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2488          ReturnValue = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2489        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2490      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2491      /* [cover parentID={11A5BFD3-42A1-41d9-A529-62D808D10C35}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2492      Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2493      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2494    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2495  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2496    return(ReturnValue);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2497  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2498  }/*End of Fee_InvalidateBlock */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2499  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2500  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2501  ** TRACEABILITY:                                                              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2502  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2503  ** Syntax : Std_ReturnType Fee_EraseImmediateBlock( const uint16 BlockNumber )**
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2504  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2505  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2506  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2507  ** Service ID: 0x09                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2508  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2509  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2510  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2511  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2512  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2513  ** Parameters (in) :  BlockNumber - Logical Block Number                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2514  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2515  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2516  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2517  ** Return value    :  Std_ReturnType                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2518  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2519  ** Description : Service to erase an immediate logical block.                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2520  ** Since double-sector algorithm is used with threshold limit                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2521  ** for triggering GC, immediate block's write requests during GC can be       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2522  ** accommodated within the pre-erased threshold area of the active FEE sector.**
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2523  ** Hence, this API is implemented as a dummy function returning E_NOT_OK.     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2524  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2525  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2526  /* [cover parentID={B5C7D98C-B3CA-4ccb-8205-08765E4FEC01}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2527  Std_ReturnType Fee_EraseImmediateBlock(const uint16 BlockNumber)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2528  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2529    UNUSED_PARAMETER (BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2530    /* [cover parentID={32D1C713-6EBC-40ab-9BE1-E3A9FE9A7DF1}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2531    Set Return flag as E_NOT_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2532    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2533    return(E_NOT_OK);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2534    /* [cover parentID={CBDA1633-EB6D-4568-B28B-4EFB2FF1388D}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2535    Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2536    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2537  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2538  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2539  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2540  #if (FEE_INITCHECK_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2541  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2542  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2543  ** TRACEABILITY:                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2544  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2545  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2546  ** Syntax : Std_ReturnType Fee_17_InitCheck(const Fee_ConfigType             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2547  **                                           * const ConfigPtr)              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2548  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2549  ** [/cover]                                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2550  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2551  ** Service ID: 0x30                                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2552  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2553  ** Sync/Async:  Synchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2554  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2555  ** Reentrancy:  Non reentrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2556  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2557  ** Parameters (in) : ConfigPtr - Pointer to the selected configuration set   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2558  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2559  ** Parameters (out):  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2560  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2561  ** Return value    :  Std_ReturnType                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2562  **                    E_OK :  Module is initialized properly.                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2563  **                    E_NOT_OK : Module is not initialized properly due to   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2564  **                               1) Fee_CfgPtr is NULL                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2565  **                               2) Fee_CfgPtr is not matching with given    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2566  **                                  ConfigPtr.                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2567  **                               3) Fee is not yet completely  initialized   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2568  ** Description : Service to check module Initialization status. If module is **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2569  **               not initialized properly  it will return E_NOT_OK           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2570  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2571  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2572  /* [cover parentID={49FACB51-3230-4929-A415-2FB4E3231C33}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2573  Fee_17_InitCheck
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2574  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2575  /*[cover parentID={F75EA151-84A9-44e8-A44B-ACE43C4B809C}] [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2576  Std_ReturnType Fee_17_InitCheck(const Fee_ConfigType * const ConfigPtr )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2577  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2578    Std_ReturnType      RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2579  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2580    RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2581  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2582    /* Check if given ConfigPtr pointer is null */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2583    if(ConfigPtr != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2584    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2585      /*Check if module is initialize properly*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2586      /*[cover parentID={66E7D345-9ACC-49c1-86C7-9514D7BD883F}] [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2587      if((Fee_CfgPtr != NULL_PTR) && (Fee_CfgPtr == ConfigPtr))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2588      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2589        /* [cover parentID={EC6BC55F-7761-475d-86DD-6E188D93BF71}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2590        Calculate the CRC of state structure variable
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2591        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2592        /* [cover parentID={EDD76789-ED56-4235-A235-F8D5372C5912}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2593        Check if  state variable CRC is same as the CRC at initialization?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2594        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2595        /*Check if FeeStatePtr and FeeBlockConfigPtr is not null */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2596        if(Fee_DataStrcutInitCrc == Fee_lCalDataStructCrc())
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2597        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2598          RetVal = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2599        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2600      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2601  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2602    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2603  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2604    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2605    /* [cover parentID={74824B0A-B019-46df-82A0-0DE29ABAD076}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2606    Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2607    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2608  } /*End of Fee_17_InitCheck */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2609  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2610  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2611  ** TRACEABILITY:                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2612  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2613  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2614  ** Syntax : LOCAL_INLINE uint32 Fee_lCalDataStructCrc(void)                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2615  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2616  ** [/cover]                                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2617  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2618  ** Service ID:                                                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2619  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2620  ** Sync/Async:  Synchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2621  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2622  ** Reentrancy:  Non reentrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2623  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2624  ** Parameters (in) : ConfigPtr - Pointer to the selected configuration set   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2625  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2626  ** Parameters (out):  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2627  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2628  ** Return value    :  uint32                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2629  **                    CRC of Fee state variable data structure               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2630  ** Description : Service to calculate CRC for fee state variable data        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2631  **               structure                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2632  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2633  /*[cover parentID={FF96A077-065F-419a-8271-9A7EBABD3682}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2634  LOCAL_INLINE  uint32 Fee_lCalDataStructCrc(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2635  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2636    uint32              FeeDataStructSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2637    uint32              Index;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2638    uint32              Crc32;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2639    const uint8        *FeeDataStructPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2640  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2641    /*Get the szie of Fee state variable data structure */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2642    FeeDataStructSize  = sizeof(Fee_StateDataType);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2643    /*Set the initial CRC value as 0*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2644    Crc32 = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2645  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2646    FeeDataStructPtr = (uint8*)Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2647  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2648    /*CRC32 calculation byte-wise*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2649    for(Index = FEE_RESET; Index < FeeDataStructSize; Index++)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2650    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2651      Crc32 = CRC32B(Crc32, FeeDataStructPtr[Index]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2652    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2653  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2654    return(Crc32);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2655  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2656  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2657  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2658  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2659  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2660  /* Memory Map of the FEE Code */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2661  #define FEE_STOP_SEC_CODE_ASIL_B_LOCAL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2662  /*MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2663  without safegaurd. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2664  /*MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2665  guideline. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2666  #include "Fee_MemMap.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2667  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2668  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2669  #define FEE_START_SEC_JOBENDNOTIF_CODE_ASIL_B_LOCAL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2670  /*MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2671  without safegaurd. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2672  /*MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2673  guideline. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2674  #include "Fee_MemMap.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2675  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2676  ** TRACEABILITY: [cover parentID={E921028D-82B0-4ac6-9AAB-2553676A53FC}]      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2677  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2678  ** Syntax : void Fee_JobEndNotification(void)                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2679  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2680  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2681  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2682  ** Service ID: 0x10                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2683  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2684  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2685  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2686  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2687  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2688  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2689  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2690  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2691  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2692  ** Return value    :  void                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2693  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2694  ** Description : Service to report to FEE module the successful end of an     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2695  ** asynchronous operation performed by the underlying flash driver.           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2696  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2697  void Fee_JobEndNotification(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2698  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2699    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2700    Fls_17_Dmu_Job_Type Job;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2701  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2702    #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2703    /* Check if the Fee_Init API is called */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2704    /* [cover parentID={956E6175-FAB8-44de-8141-49FB057148F6}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2705    if(Fee_CfgPtr != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2706    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2707    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2708      StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2709      /* [cover parentID={B3E5D775-72A1-4bcd-BDAE-4A78BFBC18BC},
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2710      {59E623D3-CB36-4c9c-A9A9-D28CA4495A23}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2711      Get the FLS job that raised the notification
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2712      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2713      Job = Fls_17_Dmu_GetNotifCaller();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2714      /* [cover parentID={041587D2-B988-4bc3-9B98-0B11B23D483C}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2715      Is it internal job?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2716      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2717      if(Job == StateDataPtr->FeeIntrJob)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2718      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2719        /* If job is internal job */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2720        /*
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2721        Reset the pending request status and set Fee job result to MEMIF_JOB_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2722        FeePendReqInfo.GetPrevCopy = FEE_ZERO
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2723        */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2724        /* [cover parentID={041587D2-B988-4bc3-9B98-0B11B23D483C}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2725        StateDataPtr->FeeIntrJobStatus = FEE_JOB_DONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2726        StateDataPtr->FeeIntrJobResult = FEE_JOB_PASS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2727        StateDataPtr->FeeIntrJob = FEE_NO_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2728      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2729      /* [cover parentID={27BCAA74-DD8C-4b18-BEAE-993FF9E1F6B4}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2730      Is it NVM Job?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2731      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2732      else if( Fee_lGetUserJob(StateDataPtr->FeePendReqStatus) == Job)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2733      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2734        /* if job is user job */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2735        /* [cover parentID={7CD59A02-564E-423a-B7A5-6A9E0317D4CA}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2736        StateDataPtr->FeeUserJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2737        StateDataPtr->FeeUserJobResult = FEE_JOB_PASS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2738        /* [cover parentID={A96EAB68-61B5-4230-B9DC-E56735E5BDBC}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2739        Is it read job?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2740        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2741  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2742        if(Job == FEE_READ_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2743        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2744          Fee_lHandleReadJobEndNotification();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2745        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2746        /* FLS_WRITE_JOB: Handling last page write is done as part of
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2747         Write State Machine itself */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2748      }/* End of User Job Handling */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2749  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2750      /* [cover parentID={27BCAA74-DD8C-4b18-BEAE-993FF9E1F6B4}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2751      #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2752      /* [cover parentID={1B1980BA-F8C8-4bae-8DA7-3E0F81B12F2E}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2753      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2754      else if(StateDataPtr->FeeQsIntrJob != FEE_NO_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2755      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2756          StateDataPtr->FeeQsIntrJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2757          StateDataPtr->FeeQsIntrJobResult = MEMIF_JOB_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2758      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2759      /* [cover parentID={D9A935CB-8E11-4693-8466-8FC0D198370A}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2760      Is it QS job?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2761      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2762      else if(StateDataPtr->FeeQsJob != FEE_NO_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2763      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2764        /* reset job status */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2765        StateDataPtr->FeeQsJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2766        if(StateDataPtr->FeeQsJob == FEE_READ_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2767        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2768          /* do handling only for read job */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2769          Fee_lHandleQsJobSuccess();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2770        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2771      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2772      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2773      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2774      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2775        /* do nothing */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2776      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2777    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2778    /* [cover parentID={744096FC-A4E6-4e1d-A798-89BEE1EA24D5}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2779    #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2780    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2781    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2782      /* [cover parentID={7A89D95B-7673-431d-AE48-F6A057D59C2B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2783      Fee_lReportError(FEE_SID_JOBENDNOTIF, FEE_E_UNINIT, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2784    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2785    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2786    /* [cover parentID={260D257B-9490-4d7f-B1B7-7FA08BFFD26D}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2787    Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2788    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2789  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2790  }/*End of Fee_JobEndNotification */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2791  #define FEE_STOP_SEC_JOBENDNOTIF_CODE_ASIL_B_LOCAL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2792  /*MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2793  without safe gaurd. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2794  /*MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2795  guideline. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2796  #include "Fee_MemMap.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2797  #define FEE_START_SEC_JOBERRNOTIF_CODE_ASIL_B_LOCAL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2798  /*MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2799  without safe gaurd. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2800  /*MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2801  guideline. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2802  #include "Fee_MemMap.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2803  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2804  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2805  ** TRACEABILITY: [cover parentID={AA095DA4-6739-4654-BDB4-BEEA3B44ECA7}]      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2806  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2807  ** Syntax : void Fee_JobErrorNotification(void)                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2808  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2809  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2810  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2811  ** Service ID: 0x11                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2812  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2813  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2814  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2815  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2816  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2817  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2818  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2819  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2820  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2821  ** Return value    : void                                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2822  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2823  ** Description : Service to report to FEE module the failure of an            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2824  ** asynchronous operation performed by the underlying flash driver.           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2825  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2826  /* [cover parentID={9870766D-AAE4-46f4-8DC3-CF8DB4AD87EB}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2827  Fee_JobErrorNotification
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2828  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2829  void Fee_JobErrorNotification(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2830  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2831    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2832    Fls_17_Dmu_Job_Type Job;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2833  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2834    #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2835    /* Check if the Fee_Init API is called */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2836    /* [cover parentID={D6D4C142-EDD9-4cc6-86A2-250717F5F423}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2837    if(Fee_CfgPtr != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2838    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2839    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2840      /* [cover parentID={A5487785-AF69-4e3b-9F91-54359044A202}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2841      Get the FLS job that raised the notification
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2842      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2843      /* [cover parentID={9870766D-AAE4-46f4-8DC3-CF8DB4AD87EB}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2844      StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2845      Job = Fls_17_Dmu_GetNotifCaller();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2846      /* [cover parentID={E5E61E37-7F38-4769-B2EE-D07A39F483C1}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2847      if(Job == FEE_CANCEL_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2848      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2849        Fee_lHandleCancelNotification();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2850      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2851      /* [cover parentID={80D7E034-68FA-494e-8549-406F408E4BE2}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2852      else if(Job == StateDataPtr->FeeIntrJob)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2853      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2854        /* if job is internal job */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2855        StateDataPtr->FeeIntrJobStatus = FEE_JOB_DONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2856        StateDataPtr->FeeIntrJobResult = FEE_JOB_FAIL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2857        StateDataPtr->FeeIntrJob = FEE_NO_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2858      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2859      /* [cover parentID={E44D68D3-BFA4-4688-B3BF-17F0AB0AF21B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2860      else if( Job == Fee_lGetUserJob(StateDataPtr->FeePendReqStatus))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2861      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2862        /* Internal Write activity has failed */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2863        /* [cover parentID={787D848A-A3FE-489a-AB17-DB4019402DE4}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2864        if( StateDataPtr->FeePendReqStatus == FEE_PEND_INTR_COMPARE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2865        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2866          Fee_lHandleWriteFail();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2867        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2868        /* User Write / Read activity has failed */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2869        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2870        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2871          Fee_lHandleUsrJobErrorNotification(Job);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2872        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2873      } /* End of User Job */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2874      #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2875      /* [cover parentID={BFEA3281-9744-40a2-8E56-348FB464EAAC}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2876      else if(StateDataPtr->FeeQsIntrJob != FEE_NO_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2877      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2878          StateDataPtr->FeeQsIntrJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2879          StateDataPtr->FeeQsIntrJobResult = MEMIF_JOB_FAILED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2880      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2881      /* [cover parentID={BAE438D8-BC86-4ab8-8C3C-0234C0D28908}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2882      else if(StateDataPtr->FeeQsJob != FEE_NO_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2883      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2884        /* Call the Fee_lHandleQsJobFailure with  (FEE_NOT_CANCEL) to notify
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2885        user about failed of job*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2886        Fee_lHandleQsJobFailure((FEE_NOT_CANCEL));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2887      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2888      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2889      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2890      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2891        /* do nothing, in case if FLS is used as stand alone and this
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2892         notification function being used */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2893      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2894    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2895    /* [cover parentID={1DD0346F-7BB3-45d9-AC1D-9DB28C979CA8}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2896    DET or safety is enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2897    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2898    #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2899    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2900    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2901      /* [cover parentID={872B3E91-55B6-4eac-963B-F400E12DF732}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2902      Report DET error as FEE_E_UNINIT
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2903      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2904      Fee_lReportError(FEE_SID_JOBERRORNOTIF, FEE_E_UNINIT, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2905  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2906    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2907    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2908  }/*End of Fee_JobErrorNotification */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2909  #define FEE_STOP_SEC_JOBERRNOTIF_CODE_ASIL_B_LOCAL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2910  /*MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2911  without safegaurd. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2912  /*MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2913  guideline. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2914  #include "Fee_MemMap.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2915  #define FEE_START_SEC_ILLEGALNOTIF_CODE_ASIL_B_LOCAL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2916  /*MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2917  without safegaurd. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2918  /*MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2919  guideline. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2920  #include "Fee_MemMap.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2921  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2922  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2923  ** Syntax : void Fee_17_IllegalStateNotification(void)                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2924  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2925  ** Traceability   : [cover parentID={32EEA8A2-7EB6-459a-9B3B-761D4C673810}]   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2926  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2927  ** Service ID: 0x24                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2928  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2929  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2930  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2931  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2932  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2933  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2934  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2935  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2936  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2937  ** Return value    :  void                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2938  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2939  ** Description : This routine shall be called by the underlying flash         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2940  **                  driver when it reaches the illegal state                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2941  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2942  /* [cover parentID={5B7ED9EA-E19F-4c18-813F-6EAACC6E85F6}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2943  Fee_17_IllegalStateNotification
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2944  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2945  void Fee_17_IllegalStateNotification(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2946  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2947    /* [cover parentID={5B7ED9EA-E19F-4c18-813F-6EAACC6E85F6}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2948    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2949    const Fee_StateDataType   *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2950    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2951  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2952    /* [cover parentID={58B938B8-38DF-4a9d-ADBD-D089D462AAE6}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2953    FEE_SAFETY_ENABLE is enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2954    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2955    #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2956    /* [cover parentID={2915F7D7-68F1-432a-BBE1-270F959A6E65}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2957    if(Fee_CfgPtr != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2958    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2959    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2960      #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2961      StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2962  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2963      /* [cover parentID={67F239D5-E873-43bf-A00F-48D66AEEAFD8}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2964      if((StateDataPtr->FeeQsJob == FEE_NO_JOB) && (StateDataPtr->FeeQsIntrJob == FEE_NO_JOB))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2965      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2966        if(Fee_CfgPtr->FeeNvmIllegalStateNotification != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2967        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2968          Fee_CfgPtr->FeeNvmIllegalStateNotification();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2969        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2970      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2971      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2972      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2973        /* QS illegal notification will be called */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2974      /* [cover parentID={FDD52D62-AB1E-44ac-B0D8-9B410CBC3F3F}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2975        if(Fee_CfgPtr->FeeQsIllegalStateNotification != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2976        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2977      /* [cover parentID={00EA22D3-5D16-4c9e-B87B-BC1C3CB354A9}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2978          Fee_CfgPtr->FeeQsIllegalStateNotification();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2979        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2980      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2981  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2982      #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2983      /* [cover parentID={75A19B6B-4521-4049-97F8-C4B578266DAA}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2984      if(Fee_CfgPtr->FeeNvmIllegalStateNotification != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2985      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2986  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2987        /* Call the Notification function */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2988      /* [cover parentID={972AD19B-6F21-4f06-A209-4C234557C084}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2989        Fee_CfgPtr->FeeNvmIllegalStateNotification();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2990      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2991      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2992    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2993    #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2994    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2995    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2996      /* [cover parentID={34FD9AE4-8FE3-433d-8EA0-BBBC79DB10B5}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2997      Report error FEE_E_UNINIT
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2998      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2999        Fee_lReportError(FEE_SID_ILLEGALSTATENOTIFICATION, FEE_SE_UNINIT,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3000                          FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3001    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3002    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3003  }/*End of Fee_17_IllegalStateNotification */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3004  #define FEE_STOP_SEC_ILLEGALNOTIF_CODE_ASIL_B_LOCAL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3005  /*MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3006  without safe gaurd. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3007  /*MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3008  guideline. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3009  #include "Fee_MemMap.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3010  /* Memory Map of the FEE Code */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3011  #define FEE_START_SEC_CODE_ASIL_B_LOCAL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3012  /*MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3013  without safe gaurd. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3014  /*MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3015  guideline. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3016  #include "Fee_MemMap.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3017  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3018  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3019  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3020  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3021  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3022  #if (FEE_GET_CYCLE_COUNT_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3023  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3024  ** Syntax : Std_ReturnType Fee_17_GetCycleCount(const uint16 BlockNumber,     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3025  **                                              uint32 * const CountPtr)      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3026  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3027  ** Traceability   : [cover parentID={CA460132-35A7-4725-933B-DBF822A5B00F}]   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3028  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3029  ** Service ID:    0x20                                                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3030  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3031  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3032  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3033  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3034  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3035  ** Parameters (in):  BlockNumber - Logical Block Number                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3036  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3037  ** Parameters (out) :  CountPtr - Pointer to the variable to which the Erase  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3038  **                               cycle count is to be updated                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3039  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3040  ** Return value    :  Std_ReturnType                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3041  **                    E_OK: Block cycle count read successfully               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3042  **                    E_NOT_OK: Block cycle count can not be read due to      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3043  **                              1) Cache is not yet updated or                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3044  **                              2) Flash driver is busy with other request or **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3045  **                              3) Garbage collection is ongoing              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3046  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3047  ** Description : When called with BlockNumber = 0, this routine delivers the  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3048  ** FEE sector erase cycle count. When called with a configured BlockNumber,   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3049  ** the write cycle count of the given block is returned.                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3050  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3051  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3052  Std_ReturnType Fee_17_GetCycleCount(const uint16 BlockNumber,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3053                                      uint32 * const CountPtr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3054  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3055    uint32               RawCnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3056    const Fee_StateDataType   *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3057    uint16               BlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3058    Std_ReturnType       ReturnValue;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3059    MemIf_StatusType     Status;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3060  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3061    /* [cover parentID={8F5D3017-260D-43f6-9DAD-699DE19349E9}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3062    Set return value as E_NOT_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3063    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3064    ReturnValue = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3065    #if (FEE_SAFETY_ENABLE == STD_ON) || (MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3066    /*Check for configuration pointer(Fee_CfgPtr)for null as part safety check */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3067    /* [cover parentID={273AF53D-B191-4301-953A-113198DF1108}]/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3068    if(Fee_lGetCycleSafetyCheck(CountPtr) == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3069    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3070    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3071        /* [cover parentID={066C5C76-67C7-4ead-A465-1629BD66AD41},
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3072        {EA4A7BB3-1CF8-4396-B891-C03D8ED2CDDB}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3073        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3074        /* if the cache is not updated, or if GC is on going, return.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3075         else, proceed with Get block cycle count */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3076        /* [cover parentID={00DE57D6-FE1C-47aa-94F1-5A98A2F933A9}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3077        Check for cache and GC status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3078        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3079        /* [cover parentID={3E4D0D11-A15E-4fc5-9EF9-2F3D39340B9F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3080        Check for valid block index
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3081        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3082        /* [cover parentID={1BD5B167-F038-4142-BA3D-9C4C1ACE7849}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3083        Is block index valid?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3084        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3085        /* [cover parentID={E0D91688-3A24-4c0e-838F-93CC2A6C3034}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3086        Read block cycle count
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3087        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3088        /* [cover parentID={C471858B-5677-4eec-8C8D-B609771A9937}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3089        Check if block cycle count was read
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3090        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3091  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3092        StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3093        Status = Fee_lGetStatus();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3094        /* [cover parentID={00DE57D6-FE1C-47aa-94F1-5A98A2F933A9}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3095        Check for cache and GC status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3096        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3097        /* [cover parentID={066C5C76-67C7-4ead-A465-1629BD66AD41}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3098        Is the module state idle?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3099        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3100        if (Status == MEMIF_IDLE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3101        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3102  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3103          /* [cover parentID={4E4CD66B-4FF7-474d-827A-6DB051FA9740}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3104          if((StateDataPtr->FeeCacheState == FEE_CACHE_UPDATE_COMPLETE) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3105              (StateDataPtr->FeeGcState == FEE_GC_IDLE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3106          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3107            /* [cover parentID={222C72BC-61FF-4369-A797-DFD73214ADDE}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3108            Is block number zero?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3109            [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3110            if (BlockNumber == FEE_STATE_PAGE_NUMBER)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3111            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3112              /* Erase Cycle count is derived from the latest state count
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3113               State Count is incremented at every state page write.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3114              At the start / After preparation of DFLASH, the state count is 3.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3115              Since then the state count is incremented twice during GC
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3116              (once for VALID SP programming and again for ERASED SP programming).
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3117              Hence the Erase Cycle Count shall be (StateCount - 3)/2 */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3118              /* [cover parentID={75DEB242-F51C-46cd-9FA5-D93BF5CA2A8E}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3119              Calculate erase cycle count
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3120              [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3121              RawCnt = ((StateDataPtr->FeeStateCount - FEE_THREE) >> FEE_ONE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3122              *CountPtr = RawCnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3123              /* [cover parentID={EF577DD8-E8A2-4b24-B74C-1F3BD936E082}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3124              Return E_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3125              [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3126              ReturnValue = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3127            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3128            /* [cover parentID={222C72BC-61FF-4369-A797-DFD73214ADDE}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3129            Is block number zero?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3130            [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3131            /* [cover parentID={75DEB242-F51C-46cd-9FA5-D93BF5CA2A8E}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3132            [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3133            /* [cover parentID={7397E5C1-5866-4ebb-B366-7652FB3B9A87}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3134            [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3135            else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3136            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3137              /* [cover parentID={7397E5C1-5866-4ebb-B366-7652FB3B9A87}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3138              Get index of the block info stored in cache
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3139              [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3140              /* Get index of the block info stored in cache */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3141              BlockIndex = Fee_lGetUsrBlockIndex(BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3142              /* [cover parentID={3E4D0D11-A15E-4fc5-9EF9-2F3D39340B9F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3143              Check for valid block index
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3144              [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3145              /* [cover parentID={1BD5B167-F038-4142-BA3D-9C4C1ACE7849}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3146              Is block index valid?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3147              [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3148  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3149              if(BlockIndex != FEE_LOG_BLOCK_NOT_FOUND)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3150              {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3151                #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3152                if(Fee_CfgPtr->FeeBlockConfigPtr[BlockIndex].FeeUser ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3153                    (uint8)FEE_QUASI_STATIC_USER)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3154                {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3155                  ReturnValue = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3156  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3157                  #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3158                  /* [cover parentID={DF9E2968-4B59-4d87-A408-B2B81AF8DDB3}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3159                  Report safety error as FEE_E_INVALID_BLOCK_NO
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3160                  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3161                  Fee_lReportError(FEE_SID_GETCYCLECOUNT,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3162                                    FEE_SE_INVALID_BLOCK_NO, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3163                  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3164                }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3165                else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3166                #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3167                {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3168                  /* [cover parentID={E0D91688-3A24-4c0e-838F-93CC2A6C3034}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3169                  Read block cycle count
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3170                  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3171                  /* Read block cycle count */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3172                  RawCnt = Fee_lGetBlkCycleCount(BlockIndex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3173                  /* [cover parentID={C471858B-5677-4eec-8C8D-B609771A9937}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3174                  Check if block cycle count was read
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3175                  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3176                  /* [cover parentID={F7CB7631-7C7D-4c7a-A556-B66C41A663C6}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3177                  Is read performed and was successful ?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3178                  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3179                  /* Check if the read was performed */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3180                  if(RawCnt != FEE_32_BIT_ALL_ONES)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3181                  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3182                    /* [cover parentID={2F9059CE-8C6C-4c64-99FE-5B9567CC56D6}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3183                    Return the block cycle counter via countptr
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3184                    Return E_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3185                    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3186                    *CountPtr = RawCnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3187                    ReturnValue = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3188                    /* [cover parentID={EF577DD8-E8A2-4b24-B74C-1F3BD936E082}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3189                    Return E_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3190                    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3191  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3192                  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3193                }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3194              }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3195              /* [cover parentID={E494297C-E13F-43fc-BDD4-FA7C6BAC86C2}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3196              Safety error is enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3197              [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3198  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3199              #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3200              else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3201              {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3202                /* [cover parentID={DF9E2968-4B59-4d87-A408-B2B81AF8DDB3}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3203                Report safety error as FEE_E_INVALID_BLOCK_NO
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3204                [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3205                Fee_lReportError(FEE_SID_GETCYCLECOUNT,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3206                                 FEE_SE_INVALID_BLOCK_NO, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3207              }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3208              #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3209            } /* end of if ( BlockNumber == FEE_ZERO ) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3210          }/* end of if FEE_CACHE_UPDATE_COMPLETE*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3211        } /* end of if the module was idle*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3212  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3213        #if ((FEE_SAFETY_ENABLE == STD_ON) && (MCAL_AR_VERSION == MCAL_AR_422)) \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3214        || (FEE_RUNTIME_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3215        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3216        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3217          /* [cover parentID={8E5B7794-EF3C-4363-B750-B49A8C8669AE}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3218          Is the module is busy
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3219          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3220          if(Status == MEMIF_BUSY )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3221          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3222            /* [cover parentID={435AF9EA-B66D-4fef-A54F-A1F53DD0B9F0}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3223            Report error to FEE_SID_GETCYCLECOUNT and FEE_E_BUSY
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3224            [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3225            #if(FEE_SAFETY_ENABLE == STD_ON) && (MCAL_AR_VERSION == MCAL_AR_422)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3226            Fee_lReportError(FEE_SID_GETCYCLECOUNT,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3227                                FEE_SE_BUSY, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3228            #elif (FEE_RUNTIME_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3229            Fee_lReportError(FEE_SID_GETCYCLECOUNT,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3230                                FEE_E_BUSY, FEE_RUNTIME_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3231            #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3232          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3233        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3234        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3235    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3236    /* [cover parentID={F0094B24-7E3F-416a-81DB-690C29CF0DF5}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3237    Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3238    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3239    return(ReturnValue);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3240  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3241  }/*End of Fee_GetCycleCount */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3242  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3243  /* End of FEE_GET_CYCLE_COUNT_API == STD_ON */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3244  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3245  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3246  ** Syntax : void Fee_17_EnableGcStart( void )                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3247  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3248  ** Traceability   : [cover parentID={2CE2C6D5-740D-450d-9A6C-CD3FFCEE43B1}]  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3249  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3250  ** Service ID:     0x21                                                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3251  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3252  ** Sync/Async:  Synchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3253  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3254  ** Reentrancy:  Non reentrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3255  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3256  ** Parameters (in) :  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3257  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3258  ** Parameters (out):  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3259  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3260  ** Return value    :  void                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3261  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3262  ** Description : This service allows enabling the trigger of GC, if GC was   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3263  ** disabled earlier by calling the API Fee_17_DisableGcStart. After this API **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3264  ** is called,if the sector is filled up to the threshold level and additional**
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3265  ** write / invalidate request is issued, then GC will be initiated.          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3266  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3267  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3268  /* [cover parentID={0459E2CC-247D-4693-B08D-A503D87E4DCA}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3269  Fee_17_EnableGcStart
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3270  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3271  void Fee_17_EnableGcStart(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3272  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3273  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3274    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3275    /* [cover parentID={ADE93B08-FF37-464a-BFB7-1260BE7E629A}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3276    Safety error is enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3277    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3278    #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3279    /*Check for configuration pointer(Fee_CfgPtr)for null as part safety check */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3280    /* [cover parentID={3595E30F-067D-458c-B731-E407B13DA9A3}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3281    Is configuration pointer NULL?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3282    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3283    if(Fee_CfgPtr != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3284    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3285    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3286      #if(MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3287      /* [cover parentID={FBFEE4D9-D9F0-4bf5-9682-3EEA13EB281D}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3288      Is driver initialization is complete
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3289      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3290      if(Fee_lGetStatus() != MEMIF_UNINIT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3291      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3292      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3293      StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3294      /* [cover parentID={B9BEB9C6-ACD9-474a-A0F1-781C9EC20873}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3295        Enable the GC start functionality
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3296      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3297      StateDataPtr->FeeDisableGCStart = (boolean)FALSE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3298    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3299      #if(FEE_SAFETY_ENABLE == STD_ON) && (MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3300      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3301      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3302        Fee_lReportError(FEE_SID_ENABLEGCSTART,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3303                              FEE_SE_UNINIT, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3304      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3305      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3306    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3307    #if(FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3308    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3309    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3310      /* [cover parentID={0C13789A-C15D-4b72-B987-040CA7CCB813}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3311      Report error as FEE_E_UNINIT
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3312      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3313      Fee_lReportError(FEE_SID_ENABLEGCSTART,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3314                            FEE_SE_UNINIT, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3315    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3316    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3317  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3318  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3319  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3320  ** Syntax : void Fee_17_DisableGcStart( void )                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3321  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3322  ** Traceability   : [cover parentID={36D8B89D-6D66-4d21-B473-9731A9FDB6A1}]   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3323  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3324  ** Service ID:      0x22                                                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3325  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3326  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3327  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3328  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3329  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3330  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3331  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3332  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3333  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3334  ** Return value    :  void                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3335  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3336  ** Description : This API prevents the GC from being started in case the      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3337  ** threshold is crossed in the active FEE sector. This API does not stop an   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3338  ** ongoing GC but only prevents the GC from being triggered by the            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3339  ** Write/Invalidate request issued by the user.                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3340  ** Note: This API will disable the GC from starting only if,                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3341  ** 1. GC is not ongoing                                                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3342  ** 2. Initialization activities are complete (i.e. the state pages are read   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3343  ** and the GC state is determined)                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3344  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3345  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3346  /* [cover parentID={AB6DB1F5-CD73-4523-81DE-7D95DF009FCB}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3347  Fee_17_DisableGcStart
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3348  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3349  void Fee_17_DisableGcStart(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3350  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3351  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3352    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3353    /* [cover parentID={5A355946-411E-44bc-A97B-E7B5FED152BE}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3354    Safety error is enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3355    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3356    #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3357    /*Check for configuration pointer(Fee_CfgPtr)for null as part safety check */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3358    /* [cover parentID={E32EEFF5-B171-4895-99EB-EF860F84D8F5}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3359    if(Fee_CfgPtr != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3360    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3361    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3362      #if(MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3363      /* [cover parentID={01491577-C682-406c-8A7A-770E8BDD2A38}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3364      Is driver initialization is complete
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3365      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3366      if(Fee_lGetStatus() != MEMIF_UNINIT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3367      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3368      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3369        StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3370        /* Check if InitGC is COMPLETE */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3371        /* [cover parentID={67C5A6D4-7610-4679-A8BC-49105171E8EC}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3372        Check for GC init state
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3373        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3374        if(StateDataPtr->FeeInitGCState == FEE_INITGC_COMPLETE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3375        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3376          /* [cover parentID={78FC3E5F-7999-43b5-AFBC-D14FA2225FCE}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3377          Check if GC is idle
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3378          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3379          /* Check if the GC is not started (= IDLE) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3380          /* [cover parentID={9F8B0BCF-713E-4691-B403-F7BA77E711C6}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3381          Check for GC state
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3382          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3383  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3384          if(StateDataPtr->FeeGcState == FEE_GC_IDLE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3385          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3386            /* [cover parentID={4C4E1F37-5052-4840-8EDF-0F19DB915E39}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3387            Disable GC start functionality
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3388            [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3389            /* Disable the GC start functionality */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3390            StateDataPtr->FeeDisableGCStart = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3391          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3392        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3393      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3394      #if(FEE_SAFETY_ENABLE == STD_ON) && (MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3395      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3396      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3397        Fee_lReportError(FEE_SID_DISABLEGCSTART,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3398                              FEE_SE_UNINIT, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3399      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3400    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3401    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3402  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3403    #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3404    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3405    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3406      /* [cover parentID={342CE27A-26A2-442f-B305-17905172F157}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3407      Report safety error as FEE_E_UNINIT
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3408      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3409      Fee_lReportError(FEE_SID_DISABLEGCSTART,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3410                            FEE_SE_UNINIT, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3411    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3412    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3413    /* [cover parentID={9C48E59F-EAF7-4827-A2CA-565730D5B4FC}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3414    Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3415    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3416  }/*End of Fee_17_DisableGcStart*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3417  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3418  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3419  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3420  ** TRACEABILITY: [cover parentID={6DA9A0A4-6B27-454f-B64A-FC27DD7DFCF2}]      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3421  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3422  ** Syntax : void Fee_MainFunction(void)                                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3423  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3424  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3425  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3426  ** Service ID: 0x12                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3427  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3428  ** Sync/Async:  NA                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3429  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3430  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3431  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3432  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3433  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3434  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3435  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3436  ** Return value    :  void                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3437  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3438  ** Description : The scheduled function helps to drive asynchronous jobs-     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3439  ** read, write, erase and internal management jobs like garbage collection.   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3440  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3441  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3442  /* [cover parentID={9DE37884-A9F6-4342-AF5C-CDD9507959A7},
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3443  {AAB72093-60CA-413e-9DFC-4037C25368F8}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3444  Fee_MainFunction
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3445  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3446  void Fee_MainFunction(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3447  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3448    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3449    const Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3450    #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3451    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3452    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3453    /* [cover parentID={09B3C16C-44DF-49c3-A26D-C308340D5BB0}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3454    Is ConfigPtr non-null?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3455    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3456    if(Fee_CfgPtr != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3457    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3458      StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3459  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3460      /* 1. Determine & switch Main Job,if required, based on input conditions */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3461      Fee_lDecideMainJob();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3462  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3463      /* 2. Execute the Main Job */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3464      switch(StateDataPtr->FeeMainJob)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3465      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3466        #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3467        /* [cover parentID={783CCC3A-A8D3-4150-B35F-13DC245D0E28}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3468        case FEE_MAIN_INITGC:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3469        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3470          /* [cover parentID={63DD725B-370A-412b-8BF9-E59FED6EC450}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3471          if(StateDataPtr->FeeIntrJobStatus != FEE_JOB_REQSTD)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3472          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3473            /* [cover parentID={DAB4A9E6-228A-4d41-B7EE-54263AF02A14}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3474            Fee_lInitGC();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3475          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3476          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3477        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3478        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3479        #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3480        /* [cover parentID={A16681CC-EBBA-46eb-9DEB-ED9CFBBB204F}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3481        case FEE_MAIN_INITQS:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3482        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3483          /* [cover parentID={B3DA472D-6F15-44ab-8BFF-D9D833E16666}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3484          if(StateDataPtr->FeeQsIntrJobStatus != FEE_JOB_REQSTD)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3485          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3486            /* [cover parentID={CD1AEA92-B5D2-465e-A963-E750915E85C5}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3487            if(StateDataPtr->FeeQsBlockVirginCount == FEE_NUM_QUASI_BLOCKS)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3488            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3489              /* [cover parentID={0E844C87-D069-414d-B161-4D7E43E9169B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3490              Fee_lHandleQsVirginBlocks();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3491            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3492            else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3493            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3494              /* [cover parentID={9F371310-354B-4386-9505-0D952E07DC33}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3495              Fee_lQsIDSM();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3496            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3497  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3498          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3499          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3500        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3501        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3502        /* [cover parentID={DFC9496E-9EAE-439d-B40D-C8A2C81FE5E3}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3503        case FEE_MAIN_CACHEUPDATE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3504        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3505          #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3506          /* [cover parentID={1F7FE376-709B-47b9-9CD5-AED9DE3AB0D1}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3507          Fee_lUpdateCache();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3508          #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3509          StateDataPtr->FeeCacheState = FEE_CACHE_IDLE_QS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3510          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3511          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3512        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3513  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3514        #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3515        /* [cover parentID={2D99AAB6-5551-4991-99BB-60D0C9215CCB}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3516        case FEE_MAIN_QS:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3517        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3518          /* [cover parentID={03AB2197-4124-40f8-BBE4-70557AAB876F}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3519          if(StateDataPtr->FeeQsJobStatus != FEE_JOB_REQSTD)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3520          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3521            /* [cover parentID={777B96FB-A391-4af0-8535-2DCB343B2FBA}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3522            Fee_lMainQs();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3523          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3524          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3525        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3526        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3527        #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3528        /* [cover parentID={6A49C689-C017-4504-8CFF-7BBA9991DD2C}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3529        case FEE_MAIN_WRITE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3530        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3531          /* [cover parentID={E73F243C-8BAD-43b8-B439-93F35CCE4F26}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3532          if(StateDataPtr->FeeUserJobStatus != FEE_JOB_REQSTD)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3533          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3534            /* [cover parentID={D06EBBC4-EA5C-49f8-A832-466D27A5C0C8}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3535            Fee_lLocalWrite();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3536          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3537          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3538        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3539        /* [cover parentID={8E1DDE83-D8F4-41d8-BE8C-30EA31BB3F61}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3540        case FEE_MAIN_READ:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3541        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3542          /* [cover parentID={C95FAA41-EDB2-46cb-9CC9-19DBB8874F2D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3543          if(StateDataPtr->FeeUserJobStatus != FEE_JOB_REQSTD)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3544          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3545            /* [cover parentID={BF603D11-73F7-45d2-A05D-E780561CCBC9}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3546            Call local read
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3547            [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3548            Fee_lLocalRead();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3549          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3550          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3551        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3552        /* [cover parentID={1FD5FF62-48F9-494f-8E96-84B6839BC58B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3553        case FEE_MAIN_GC:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3554        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3555          /* [cover parentID={68D4CE9A-4D3A-4574-9CA3-9F719D737DDA}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3556          Fee_lMainGCHdlr();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3557          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3558        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3559        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3560        /*case FEE_MAIN_NONE, FEE_MAIN_UNINIT belong here */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3561        default:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3562        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3563          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3564        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3565      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3566    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3567    /*
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3568    Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3569    */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3570  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3571  }/*  End of Fee_MainFunction */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3572  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3573  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3574  #if (FEE_GET_PREV_DATA_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3575  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3576  ** Syntax : Std_ReturnType Fee_17_GetPrevData(const uint16 BlockNumber,       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3577  **                                            const uint16 BlockOffset,       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3578  **                                            uint8 *const DataBufferPtr,     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3579  **                                            const uint16 Length)            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3580  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3581  ** Traceability   : [cover parentID={FD1EBB5B-3408-414d-8872-281BC6442041}]   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3582  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3583  ** Service ID: 0x23                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3584  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3585  ** Sync/Async: Asynchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3586  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3587  ** Reentrancy: Non reentrant                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3588  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3589  ** Parameters (in) :  BlockNumber - Logical Block Number                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3590  **                    BlockOffset - Read address offset inside the block      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3591  **                    Length - Number of bytes to read                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3592  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3593  ** Parameters (out):  DataBufferPtr - Pointer to data buffer                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3594  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3595  ** Return value    :  Std_ReturnType                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3596  **                    E_OK : Request accepted                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3597  **                    E_NOT_OK : Request is not accepted accepted due to      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3598  **                    1) FEE module is busy in servicing other request. or    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3599  **                    2) Requested block number is not a NVM data block       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3600  **Description : The user can call this API to read one occurrence old data of **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3601  **the given block. This API accepts the request and updates the FEE internal  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3602  **variables. However the actual reading of the data is done by the            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3603  **Fee_MainFunction after the cache is built.                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3604  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3605  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3606  /* [cover parentID={099DBE0A-0F91-49a8-9D6D-081A0C24CEB3}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3607  Fee_17_GetPrevData
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3608  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3609  Std_ReturnType Fee_17_GetPrevData(const uint16 BlockNumber,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3610                                    const uint16 BlockOffset,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3611                                    uint8 *const DataBufferPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3612                                    const uint16 Length)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3613  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3614    /* [cover parentID={207E879F-CE45-4b94-8DB8-74F9A3AAF126}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3615    Return E_NOT_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3616    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3617    Std_ReturnType        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3618  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3619    #if((FEE_SAFETY_ENABLE == STD_ON) || \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3620        (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3621    uint16               BlkIdx;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3622  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3623    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3624  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3625    #if(FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3626    uint32               BlkSize = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3627    /*Check for configuration pointer(Fee_CfgPtr)for null as part safety check */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3628    /* [cover parentID={DD2F6074-E2F4-47fa-AB2B-93328CF9F5A4}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3629    if((Fee_CfgPtr != NULL_PTR) && (DataBufferPtr != NULL_PTR))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3630    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3631    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3632      #if(MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3633      /* [cover parentID={5861DA08-37AA-498b-8015-792F39DCC7FF}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3634      Is driver initialization is complete
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3635      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3636      if(Fee_lGetStatus() != MEMIF_UNINIT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3637      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3638      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3639      /* [cover parentID={14D8388C-3115-4aa5-9C66-A64D6B220D96}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3640      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3641      #if((FEE_SAFETY_ENABLE == STD_ON) || \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3642          (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3643      /*Check if block is configured and given block number is not qs block*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3644      BlkIdx = Fee_lGetUsrBlockIndex(BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3645      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3646      #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3647      if(BlkIdx != FEE_LOG_BLOCK_NOT_FOUND)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3648      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3649        BlkSize = Fee_CfgPtr->FeeBlockConfigPtr[BlkIdx].Size;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3650      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3651      if(BlkIdx == FEE_LOG_BLOCK_NOT_FOUND)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3652      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3653        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3654        /* [cover parentID={3F17237B-D727-4aa6-9BC8-B7777862BBA9}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3655        Report error as FEE_SE_INVALID_BLOCK_NO
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3656        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3657        Fee_lReportError(FEE_SID_GETPREVDATA,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3658                            FEE_SE_INVALID_BLOCK_NO, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3659      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3660      else if(BlockOffset >= BlkSize)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3661      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3662        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3663        Fee_lReportError(FEE_SID_GETPREVDATA,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3664                            FEE_SE_INVALID_BLOCK_OFS, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3665      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3666      /* Check if the Length (from the given offset) is valid */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3667      else if ( ((uint32)BlockOffset + Length) > BlkSize )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3668      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3669        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3670        Fee_lReportError(FEE_SID_GETPREVDATA,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3671                            FEE_SE_INVALID_BLOCK_LEN, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3672      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3673      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3674      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3675      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3676        #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3677  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3678        /* [cover parentID={702FD5FB-86DD-43e8-8EEE-E87D3BBF9219}] [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3679        if(Fee_CfgPtr->FeeBlockConfigPtr[BlkIdx].FeeUser ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3680            (uint8)FEE_NVM_USER)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3681        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3682        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3683          /* [cover parentID={CCDD13FA-6F39-4e3f-B48B-9AF7DE1FC299}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3684  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3685          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3686          RetVal = Fee_lRegisterNvmRead(BlockNumber, BlockOffset,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3687                                        DataBufferPtr, Length, FEE_SET);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3688  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3689        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3690        #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3691        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3692        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3693          /* [cover parentID={14D8388C-3115-4aa5-9C66-A64D6B220D96}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3694          Return E_NOT_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3695          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3696          RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3697          /* [cover parentID={85958C19-89C5-4634-90CC-30FF5A1303F7}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3698          Fee Safety is enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3699          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3700          #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3701          Fee_lReportError(FEE_SID_GETPREVDATA,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3702                            FEE_SE_INVALID_BLOCK_NO, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3703          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3704  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3705          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3706          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3707        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3708      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3709      #if(MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3710      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3711      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3712        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3713    #if(FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3714        Fee_lReportError(FEE_SID_GETPREVDATA,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3715                            FEE_SE_UNINIT, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3716        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3717      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3718      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3719    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3720    #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3721    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3722    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3723      /* [cover parentID={34543921-4CD3-4521-802C-C3B2355A5C40}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3724      Is configuration pointer is NULL?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3725      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3726      if(Fee_CfgPtr == NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3727      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3728        Fee_lReportError(FEE_SID_GETPREVDATA,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3729                            FEE_SE_UNINIT, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3730      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3731      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3732      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3733        Fee_lReportError(FEE_SID_GETPREVDATA,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3734                            FEE_SE_PARAM_POINTER, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3735      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3736      RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3737    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3738    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3739    /* [cover parentID={1566E231-D1FA-4dd6-A8BA-E662C3FD3A84}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3740    Merge
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3741    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3742    /* [cover parentID={CA1FE649-9DFC-45d4-98C2-268C7D65D4E4}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3743    Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3744    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3745    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3746  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3747  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3748  #endif /* #if (FEE_GET_PREV_DATA_API == STD_ON) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3749  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3750  #if (FEE_GET_ECC_ERROR_INFO_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3751  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3752  ** TRACEABILITY:                                                              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3753  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3754  ** Syntax :void Fee_17_GetEccErrorInfo( uint16 * const BlockNumberPtr,        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3755  **                                   uint32 * const PageAddressPtr )          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3756  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3757  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3758  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3759  ** Service ID:      0x32                                                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3760  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3761  ** Sync/Async:      Synchronous                                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3762  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3763  ** Reentrancy:      Non Reentrant                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3764  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3765  ** Parameters (out): BlockNumberPtr - Block number with ECC error             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3766  **                   PageAddressPtr - Address of page with ECC error          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3767  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3768  ** Parameters (in): Std_ReturnType                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3769  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3770  ** Return value:    E_OK - The requested job has been executed                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3771  **                  E_NOT_OK - The requested job has not been executed        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3772  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3773  ** Description :   Service to get the last ECC error information (Block       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3774  ** number and page address where last ECC error is detected) Default value    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3775  ** - If there is no ECC error detected, then default valur for                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3776  **   BlockNumber = 0xFFFF, PageAddress = 0xFFFFFFFF                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3777  ** - If the block number is unknown, the default value                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3778  **   BlockNumber = 0xFFFF is used                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3779  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3780  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3781  /* [cover parentID={18B78232-0B7E-4d65-AF36-AAA3AF6EAB24}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3782  Std_ReturnType Fee_17_GetEccErrorInfo( uint16 * const BlockNumberPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3783                               uint32 * const PageAddressPtr )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3784  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3785    MemIf_StatusType DriverStatus;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3786    /* [cover parentID={E07F38CA-3CC3-417f-ADE8-DD4EE012EDC1}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3787    Return E_NOT_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3788    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3789    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3790    uint16 BlkNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3791  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3792    #if(FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3793    /* [cover parentID={556E02D3-2F65-4e5b-B7BD-FD134D4AED81}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3794    Configuration pointer is not null
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3795    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3796    if((Fee_CfgPtr != NULL_PTR))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3797    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3798    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3799      DriverStatus = Fee_lGetStatus();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3800      #if(MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3801      /* [cover parentID={44268033-CAD4-49d4-B110-F3240C2CEAE9}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3802      Driver initialization is complete
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3803      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3804      if(DriverStatus != MEMIF_UNINIT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3805      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3806      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3807        /* [cover parentID={980D390D-D43B-4797-8978-6C95B34B7387}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3808          Driver is initialized
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3809        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3810        if(DriverStatus == MEMIF_IDLE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3811        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3812          /* [cover parentID={28F6EA1C-B66D-41d6-9A2D-4B9E5E12A81D}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3813            Input parameter pointer BlockNumber or PageAddress is NULL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3814          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3815          if((BlockNumberPtr != NULL_PTR) && (PageAddressPtr != NULL_PTR))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3816          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3817            /* [cover parentID={78DD5A93-2281-4686-91C2-63E1EE10DF9F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3818            Update the block number and page address to pass parameter
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3819            [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3820            RetVal = Fls_17_Dmu_GetEccErrorPageAddress(PageAddressPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3821            /* [cover parentID={30128A61-16F4-4ab8-847D-39EAF67A6CAA}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3822            Fls return without error
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3823            [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3824            if(RetVal == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3825            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3826              /* [cover parentID={8AC526CB-3FDB-4a8f-94E9-A15BC4A14FFB}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3827                Page address is by default (no ECC error detected)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3828              [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3829              if(*(PageAddressPtr) != FEE_DEFAULT_PAGE_ADDRESS)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3830              {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3831                /* [cover parentID={68DC7F0A-19D3-49ec-8251-177B6171D100}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3832                  Get block number for the page address
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3833                [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3834                BlkNumber = \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3835                Fee_lGetEccErrorBlockNumber(*(PageAddressPtr));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3836                *(BlockNumberPtr) = BlkNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3837              }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3838              else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3839              {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3840                *(BlockNumberPtr) = FEE_DEFAULT_BLK_NUMBER;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3841              }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3842              /* [cover parentID={153B8203-78E3-4507-A4AD-C5A4CC168A2E}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3843                Return E_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3844              [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3845            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3846          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3847          #if(FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3848          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3849          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3850            /* [cover parentID={E94F4D3E-689A-4a12-9AB7-74F79C77CCB7}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3851            Report error FEE_SE_PARAM_POINTER
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3852            [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3853            Fee_lReportError(FEE_SID_GETECCERRORINFO, FEE_SE_PARAM_POINTER, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3854          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3855          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3856        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3857        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3858        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3859          /* [cover parentID={C1AF3C70-0B6B-46fd-861A-7CC5615E71DB}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3860          Driver is busy
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3861          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3862          #if (MCAL_AR_VERSION == MCAL_AR_440) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3863            (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3864          if(DriverStatus == MEMIF_BUSY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3865          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3866          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3867          #if (FEE_RUNTIME_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3868            /* [cover parentID={7F56CEB6-177E-484e-A085-8AA2C8ED0DE4}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3869            Report runtime error FEE_E_BUSY
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3870            [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3871            Fee_lReportError(FEE_SID_GETECCERRORINFO, FEE_E_BUSY, FEE_RUNTIME_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3872          #elif (FEE_SAFETY_ENABLE == STD_ON) && (MCAL_AR_VERSION == MCAL_AR_422)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3873            Fee_lReportError(FEE_SID_GETECCERRORINFO, FEE_SE_BUSY, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3874          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3875          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3876        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3877      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3878      #if(FEE_SAFETY_ENABLE == STD_ON) && (MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3879      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3880      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3881        Fee_lReportError(FEE_SID_GETECCERRORINFO, FEE_SE_UNINIT, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3882      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3883      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3884    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3885    #if(FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3886    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3887    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3888      /* [cover parentID={402415BD-F0B2-4153-883F-06A46190AB52}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3889      Report error FEE_SE_UNINT
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3890      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3891      Fee_lReportError(FEE_SID_GETECCERRORINFO, FEE_SE_UNINIT, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3892    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3893    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3894    return RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3895  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3896  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3897  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3898  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3899  #if (FEE_VERSION_INFO_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3900  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3901  ** TRACEABILITY: [cover parentID={C8E8D26B-C335-4eaf-8F42-C2646611E65E}]      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3902  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3903  ** Syntax :void Fee_GetVersionInfo(Std_VersionInfoType * const VersionInfoPtr)**
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3904  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3905  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3906  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3907  ** Service ID:      0x08                                                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3908  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3909  ** Sync/Async:      Synchronous                                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3910  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3911  ** Reentrancy:      Reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3912  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3913  ** Parameters (out): VersionInfoPtr - Pointer to standard version information **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3914  **           structure                                                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3915  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3916  ** Parameters (in): none                                                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3917  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3918  ** Return value:    void                                                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3919  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3920  ** Description :    This service returns the version information of           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3921  **                  this module.                                              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3922  **                  The version information includes:                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3923  **                  Module Id, Vendor Id, Vendor specific version numbers     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3924  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3925  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3926  /* [cover parentID={A60B63DC-1A6F-4048-B92A-213AB0E88AC8}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3927  Fee_GetVersionInfo
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3928  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3929  void Fee_GetVersionInfo(Std_VersionInfoType * const VersionInfoPtr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3930  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3931    /* [cover parentID={7D1F1883-FDF9-4fef-8DD2-99D904DC4678}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3932    DET enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3933    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3934    #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3935    /* [cover parentID={602A3EF9-A774-4da2-B06F-44CF452D6C49}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3936    Is VersionInfoPtr NULL?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3937    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3938    if ((VersionInfoPtr) == NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3939    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3940      /* [cover parentID={9C33444C-8F98-4c37-AD80-F438CD0DFA76}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3941      Report DET error as FEE_E_PARAM_POINTER
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3942      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3943      Fee_lReportError(FEE_SID_GETVERSIONINFO, FEE_E_PARAM_POINTER, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3944    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3945    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3946    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3947    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3948      /* [cover parentID={3161645F-3505-46a0-8EA4-A6356B1D3D11}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3949      Update Version Information in the location referenced by VersionInfoPtr
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3950      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3951      /* FEE Module ID */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3952      ((Std_VersionInfoType*)(VersionInfoPtr))->moduleID = FEE_MODULE_ID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3953      /* FEE Vendor ID */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3954      ((Std_VersionInfoType*)(VersionInfoPtr))->vendorID = FEE_VENDOR_ID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3955      /* major version of FEE */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3956      ((Std_VersionInfoType*)(VersionInfoPtr))->sw_major_version =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3957        (uint8)FEE_SW_MAJOR_VERSION;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3958      /* minor version of FEE */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3959      ((Std_VersionInfoType*)(VersionInfoPtr))->sw_minor_version =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3960        (uint8)FEE_SW_MINOR_VERSION;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3961      /* patch version of FEE */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3962      ((Std_VersionInfoType*)(VersionInfoPtr))->sw_patch_version =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3963        (uint8)FEE_SW_PATCH_VERSION;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3964    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3965    /* [cover parentID={5ABE883B-1B58-444c-A871-81DC7F9533FA}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3966    Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3967    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3968  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3969  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3970  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3971  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3972  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3973  **                      Private Function Definitions                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3974  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3975  #if (FEE_GET_ECC_ERROR_INFO_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3976  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3977  ** Syntax: LOCAL_INLINE boolean Fee_lGetEccErrorBlockNumber(                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3978  **                                                  uint32 const PageAddress) **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3979  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3980  ** Service ID: None                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3981  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3982  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3983  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3984  ** Reentrancy:  Non Re-entrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3985  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3986  ** Parameters (in) : PageAddress - Page address for which block number to be  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3987  **                   searched.                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3988  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3989  ** Parameters (out): None                                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3990  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3991  ** Return value    : uint16 - (1 - 65534)                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3992  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3993  ** Description : This function return block number which have input           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3994  **               page address                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3995  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3996  /* [cover parentID={1C32CCC9-EAB5-44b0-818A-C88C5CF6B24A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3997  LOCAL_INLINE uint16 Fee_lGetEccErrorBlockNumber(uint32 const PageAddress)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3998  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  3999    uint16                    BlockIndex = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4000    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4001    const Fee_StateDataType   *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4002    const Fee_CacheType             *CachePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4003    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4004    const Fee_BlockType       *BlockCfgPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4005    uint32                    BlockEndAddress;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4006    uint32                    BlockStartAddress;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4007    uint16 RetVal = FEE_DEFAULT_BLK_NUMBER;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4008    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4009    uint32 NumberOfPages;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4010    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4011  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4012    /* [cover parentID={DDD1C540-52EC-4f60-86C5-4840458333C8}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4013    For all the blocks in cache table
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4014    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4015    while(BlockIndex < Fee_CfgPtr->FeeBlkCnt)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4016    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4017      BlockCfgPtr = &(Fee_CfgPtr->FeeBlockConfigPtr[BlockIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4018      #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4019      StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4020      CachePtr = &(StateDataPtr->FeeBlockInfo[BlockIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4021      #if (FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4022      NumberOfPages = Fee_lGetDFLASHPages(BlockCfgPtr->Size);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4023      if(CachePtr->Address != FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4024      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4025        BlockStartAddress = CachePtr->Address + FEE_BASE_ADDRESS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4026        BlockEndAddress = (BlockStartAddress + (NumberOfPages * FEE_PAGE_SIZE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4027      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4028      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4029      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4030        BlockStartAddress = FEE_DEFAULT_PAGE_ADDRESS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4031        BlockEndAddress = FEE_DEFAULT_PAGE_ADDRESS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4032      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4033    #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4034      if(BlockIndex >= FEE_QSBLOCK_BEGIN_INDEX)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4035      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4036        BlockStartAddress = BlockCfgPtr->Address + FEE_BASE_ADDRESS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4037        BlockEndAddress = (BlockStartAddress + BlockCfgPtr->Size);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4038      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4039      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4040      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4041        NumberOfPages = Fee_lGetDFLASHPages(BlockCfgPtr->Size);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4042        if(CachePtr->Address != FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4043        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4044          BlockStartAddress = CachePtr->Address + FEE_BASE_ADDRESS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4045          BlockEndAddress = (BlockStartAddress + (NumberOfPages * FEE_PAGE_SIZE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4046        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4047        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4048        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4049          BlockStartAddress = FEE_DEFAULT_PAGE_ADDRESS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4050          BlockEndAddress = FEE_DEFAULT_PAGE_ADDRESS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4051        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4052      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4053    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4054    #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4055      BlockStartAddress = BlockCfgPtr->Address + FEE_BASE_ADDRESS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4056      BlockEndAddress = (BlockStartAddress + BlockCfgPtr->Size);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4057    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4058      /* [cover parentID={EA792F62-4814-4bb6-922D-F567A0348C7F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4059      Input page address is in between the start and end address of the currnet block
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4060      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4061          if((PageAddress >= BlockStartAddress) && (PageAddress < BlockEndAddress))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4062      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4063        RetVal = BlockCfgPtr->BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4064        BlockIndex = Fee_CfgPtr->FeeBlkCnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4065      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4066      BlockIndex += FEE_ONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4067    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4068    /* [cover parentID={50921FC0-E605-4662-985D-F756FA434332}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4069    Return block number
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4070    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4071    return RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4072  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4073  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4074  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4075  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4076  ** Syntax: LOCAL_INLINE boolean Fee_lIsUserReadReqstd(                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4077  **                                     const Fee_StateDataType * const s_ptr) **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4078  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4079  ** Service ID: None                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4080  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4081  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4082  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4083  ** Reentrancy:  Non Re-entrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4084  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4085  ** Parameters (in) : s_ptr - Pointer to state data                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4086  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4087  ** Parameters (out): None                                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4088  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4089  ** Return value    : boolean                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4090  **                   TRUE : Read operation requested                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4091  **                   FALSE :Read operation not requested                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4092  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4093  ** Description : This routine checks if user read is requested                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4094  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4095  /* [cover parentID={B5AACBC9-6239-4358-A796-8AD0A7CFE8D5}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4096  LOCAL_INLINE boolean Fee_lIsUserReadReqstd(const Fee_StateDataType * \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4097      const s_ptr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4098  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4099    boolean RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4100  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4101    /* [cover parentID={67D14067-7D90-41eb-BDFD-C33661717F4C}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4102    if (s_ptr->FeePendReqStatus == FEE_REQ_READ)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4103    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4104      RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4105    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4106    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4107    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4108      RetVal = (boolean)FALSE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4109    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4110    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4111  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4112  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4113  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4114  ** Syntax: LOCAL_INLINE boolean Fee_lIsUserWriteInvldReqstd                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4115  **                                (const Fee_StateDataType * const s_ptr)     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4116  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4117  ** Service ID: None                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4118  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4119  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4120  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4121  ** Reentrancy:  Non Re-entrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4122  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4123  ** Parameters (in) : s_ptr - Pointer to state data                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4124  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4125  ** Parameters (out): None                                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4126  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4127  ** Return value    : boolean                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4128  **                   TRUE : write/invalidate operation requested              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4129  **                   FALSE :write/invalidate operation not requested          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4130  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4131  ** Description : This routine checks if user write/invalidate is requested    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4132  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4133  /* [cover parentID={3C4D35C8-16D9-426e-80C9-8616C8AC0C73}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4134  LOCAL_INLINE boolean Fee_lIsUserWriteInvldReqstd
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4135  (const Fee_StateDataType * const s_ptr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4136  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4137    boolean RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4138  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4139    /* [cover parentID={CC382DB4-7CBA-4074-9E37-06F476849EA4}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4140    if(((s_ptr)->FeePendReqStatus == FEE_REQ_NORM_WRITE) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4141        ((s_ptr)->FeePendReqStatus == FEE_REQ_IMM_WRITE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4142    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4143      RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4144    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4145    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4146    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4147      RetVal = (boolean)FALSE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4148    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4149    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4150  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4151  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4152  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4153  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4154  ** Syntax: LOCAL_INLINE boolean Fee_lIsSectorEmpty(const uint8 state,         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4155  **                                                 const uint8 used)          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4156  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4157  ** Service ID: None                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4158  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4159  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4160  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4161  ** Reentrancy:  Non Reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4162  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4163  ** Parameters (in) : state - Sector state                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4164  **                   used - Sector used status                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4165  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4166  ** Parameters (out): None                                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4167  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4168  ** Return value    : boolean                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4169  **                 TRUE: Sector is empty , no data or state page is available **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4170  **                 FALSE:Sector is  not empty , data or state page is         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4171  **                       available                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4172  ** Description : This routine checks if sector is empty                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4173  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4174  /* [cover parentID={ECEF61D1-8F31-4d29-B2BB-9FD0A24C0AF3}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4175  Fee_lIsSectorEmpty
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4176  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4177  /* [cover parentID={6E6F4F9B-D703-4fcc-9081-8690C09C9614}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4178  LOCAL_INLINE boolean Fee_lIsSectorEmpty(const uint8 state, const uint8 used)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4179  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4180    boolean RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4181    /* [cover parentID={6E3FDC07-BF62-4bc9-A809-0FB7683FFB69}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4182    if((state == FEE_STATELESS) && (used == FEE_RESET))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4183    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4184      RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4185    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4186    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4187    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4188      RetVal = (boolean)FALSE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4189    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4190    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4191  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4192  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4193  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4194  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4195  ** Syntax: LOCAL_INLINE uint32 Fee_lIsWLBeginning(const uint32 address)       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4196  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4197  ** Service ID: None                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4198  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4199  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4200  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4201  ** Reentrancy:  Reentrant                                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4202  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4203  ** Parameters (in) : address - address to be checked                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4204  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4205  ** Parameters (out): None                                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4206  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4207  ** Return value    : uint32                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4208  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4209  ** Description : This routine returns 0 if the given address is the beginning **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4210  **               of a WL, non-zero otherwise.                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4211  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4212  /* [cover parentID={8F8F02D5-8532-4a9f-8706-E0FBDB005C24}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4213  Fee_lIsWLBeginning
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4214  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4215  /* [cover parentID={9F2B0703-4047-44ff-AFB6-C84ABA203DDC}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4216  LOCAL_INLINE uint32 Fee_lIsWLBeginning(const uint32 address)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4217  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4218    return(address & ((uint32)FEE_DFLASH_WORDLINE_SIZE_1));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4219  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4220  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4221  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4222  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4223  ** Syntax: LOCAL_INLINE uint32 Fee_lGetWLBeginning(const uint32 address)      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4224  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4225  ** Service ID: None                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4226  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4227  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4228  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4229  ** Reentrancy:  Non Re-entrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4230  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4231  ** Parameters (in) : (uint32)address - address to be processed                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4232  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4233  ** Parameters (out): None                                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4234  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4235  ** Return value    : uint32                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4236  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4237  ** Description : This routine returns the start address of the WL             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4238  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4239  /* [cover parentID={02DF64E1-B52E-4a5d-B157-D5959AA84FD8}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4240  Fee_lGetWLBeginning
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4241  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4242  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4243  /* [cover parentID={699ABA6A-A4E3-42de-9722-C50E06E1E0CF}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4244  LOCAL_INLINE uint32 Fee_lGetWLBeginning(const uint32 address)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4245  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4246    return(address & ((uint32)(~((uint32)FEE_DFLASH_WORDLINE_SIZE_1))));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4247  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4248  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4249  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4250  ** Syntax: LOCAL_INLINE uint32 Fee_lGetNextWLAddr(const uint32 address)       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4251  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4252  ** Service ID: None                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4253  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4254  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4255  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4256  ** Reentrancy:  Non Re-entrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4257  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4258  ** Parameters (in) : (uint32)address - address to be processed                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4259  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4260  ** Parameters (out): None                                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4261  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4262  ** Return value    : uint32                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4263  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4264  ** Description : This routine returns the start address of the next WL        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4265  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4266  /* [cover parentID={65F173FD-1411-4517-A860-BB69BA76F9E5}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4267  Fee_lGetNextWLAddr
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4268  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4269  /* [cover parentID={237D5697-4E92-45f4-B0CD-41D2B0E16E50}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4270  LOCAL_INLINE uint32 Fee_lGetNextWLAddr(const uint32 address)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4271  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4272    /*Beginning of WL from current address + WL -> next free WL*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4273    return((Fee_lGetWLBeginning(address)) + FEE_DFLASH_WORDLINE_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4274  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4275  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4276  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4277  ** Syntax: LOCAL_INLINE boolean Fee_lIsGcTriggeredOnce(const Fee_StateDataType**
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4278  **                                                      *const StateDataPtr)  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4279  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4280  ** Service ID: None                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4281  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4282  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4283  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4284  ** Reentrancy:  Non Re-entrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4285  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4286  ** Parameters (in) : StateDataPtr - Pointer to state data                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4287  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4288  ** Parameters (out): None                                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4289  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4290  ** Return value    : boolean                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4291  **                 TRUE: GC is was never triggered after initialization       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4292  **                 FALSE: GC is was  triggered after initialization           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4293  ** Description : This routine checks whether GC was never triggered after     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4294  ** initialization. This is done by checking whether Fee_Write was never       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4295  ** called in the FEE_GC_RESTART_WRITE configuration                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4296  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4297  /* [cover parentID={BA9DCE16-6576-4411-B7AF-D3331416BD3E}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4298  Fee_lIsGcTriggeredOnce
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4299  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4300  /* [cover parentID={9BF281BD-6832-42df-B109-9733A317148B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4301  LOCAL_INLINE boolean Fee_lIsGcTriggeredOnce(const Fee_StateDataType
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4302      * const StateDataPtr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4303  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4304    boolean RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4305  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4306    /* [cover parentID={F40985E9-E5FA-4a55-8F4E-CBA43C7F75B4}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4307    if ((Fee_CfgPtr->FeeGCConfigSetting.FeeGcRestartPoint ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4308         (uint32)FEE_GC_RESTART_WRITE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4309        && (StateDataPtr->FeeStatusFlags.FeeWriteInvldQSeraseAPICalled ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4310            (uint32)FEE_RESET))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4311    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4312      RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4313    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4314    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4315    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4316      RetVal = (boolean)FALSE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4317    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4318    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4319  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4320  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4321  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4322  ** Syntax: LOCAL_INLINE boolean Fee_lIsSectorThresholdCrossed(                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4323  **                                                    const uint32 FreePages, **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4324  **                                                    const uint32 PageCount) **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4325  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4326  ** Service ID: None                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4327  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4328  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4329  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4330  ** Reentrancy:  Non Re-entrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4331  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4332  ** Parameters (in) : FreePages - Number of free pages                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4333  **                   PageCount - Page count                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4334  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4335  ** Parameters (out): None                                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4336  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4337  ** Return value    : boolean                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4338  **                   TRUE : Sector Threshold is crossed.                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4339  **                   FALSE: Sector Threshold is not crossed.                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4340  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4341  ** Description : This routine checks whether sector threshold will be crossed **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4342  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4343  /* [cover parentID={414557E8-31F9-496c-AD2A-B0555A816D4D}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4344  Fee_lIsSectorThresholdCrossed
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4345  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4346  /* [cover parentID={E52D591F-752A-408e-AFAD-3C5745DDD1C8}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4347  LOCAL_INLINE boolean Fee_lIsSectorThresholdCrossed(const uint32 FreePages,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4348      const uint32 PageCount)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4349  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4350    boolean RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4351    /* [cover parentID={021235CB-2818-4488-B9E6-FB3E31002A02}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4352    /* Applying sign conversion in following condition will not cause a problem
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4353    because the value of the parameters are limited by size of the flash which
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4354    is typically order of a few MBs applying BV with MSB set will be due to a
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4355    implausible value. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4356    if ((sint32)(((sint32)FreePages - (sint32)PageCount)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4357                 * (sint32)FEE_DFLASH_PAGE_SIZE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4358        < (sint32)(Fee_CfgPtr->FeeThresholdLimit))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4359    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4360      RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4361    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4362    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4363    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4364      RetVal = (boolean)FALSE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4365    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4366    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4367  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4368  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4369  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4370  ** Syntax: LOCAL_INLINE boolean Fee_lIsSectorEndCrossed(                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4371  **                                                const uint32 FreePages,     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4372  **                                                const uint32 PageCount)     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4373  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4374  ** Service ID: None                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4375  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4376  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4377  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4378  ** Reentrancy:  Non Re-entrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4379  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4380  ** Parameters (in) : FreePages - Number of free pages                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4381  **                   PageCount - Page count                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4382  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4383  ** Parameters (out): None                                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4384  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4385  ** Return value    : boolean                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4386  **                   TRUE : Sector end will be crossed.                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4387  **                   FALSE: Sector end will not be crossed.                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4388  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4389  ** Description : This routine checks whether sector end will be crossed       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4390  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4391  /* [cover parentID={08E7BF93-2A90-4024-9FA2-E0BDF8973430}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4392  Fee_lIsSectorEndCrossed
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4393  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4394  /* [cover parentID={12E3423D-CA85-4d40-B015-6D54F9438D32}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4395  LOCAL_INLINE boolean Fee_lIsSectorEndCrossed(const uint32 FreePages,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4396      const uint32 PageCount)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4397  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4398    boolean RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4399  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4400    /* [cover parentID={44BB0E1F-C2A8-4579-A0DE-68DA603AE223}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4401    if (FreePages < PageCount)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4402    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4403      RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4404    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4405    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4406    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4407      RetVal = (boolean)FALSE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4408    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4409    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4410  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4411  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4412  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4413  ** TRACEABILITY: []                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4414  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4415  ** Syntax : static void Fee_lHandleUsrJobFailure(const uint8 Error)           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4416  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4417  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4418  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4419  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4420  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4421  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4422  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4423  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4424  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4425  ** Parameters (in) : Error : Type of user job failure                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4426  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4427  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4428  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4429  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4430  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4431  ** Description : This function handles the user job failure occuring due to   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4432  **               FLS operation failure                                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4433  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4434  /* [cover parentID={F93CF5D6-8C82-4a59-A5FB-9A4A154CF19E},
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4435  {3D4E0F4A-DBE1-47ae-8344-313B4E73FAC9}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4436  Fee_lHandleUsrJobFailure
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4437  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4438  static void Fee_lHandleUsrJobFailure(const uint8 Error)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4439  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4440    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4441  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4442    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4443    /* Set StateDataPtr->FeeJobResult as Failed */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4444  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4445    /* [cover parentID={1C77FA7F-E001-42aa-8CCD-1B2A545FCE28}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4446    if(Error != FEE_CANCEL )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4447    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4448      StateDataPtr->FeeJobResult = MEMIF_JOB_FAILED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4449      /* During runtime, FeeBlkPageCount is used to store the number of pages of
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4450      the block written during the user write request and as well as during
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4451      garbage collection. When pending user request is cancelled, FeeBlkPageCount
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4452      may contain the count of the number of pages written to DFlash during
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4453      garbage collection which should be retained. Hence, FeeBlkPageCount is reset
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4454      only when user job is failed and not while cancelling a pending request */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4455      StateDataPtr->FeeBlkPageCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4456    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4457    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4458    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4459      StateDataPtr->FeeJobResult = MEMIF_JOB_CANCELED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4460    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4461    #if((FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA ) &&\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4462        (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4463    /*Check if QS erase was suspended. If yes then set FeePendReqStatus to
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4464    FEE_REQ_QUASI_ERASE to set module status to busy.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4465    /* [cover parentID={2103E23E-129A-4893-90E7-3E60B8C98F6B}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4466    if(StateDataPtr->FeeQsEraseSuspend == FEE_ERASE_SUSPENDED)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4467    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4468      /* [cover parentID={984E37D8-474A-4100-90B6-0933DE7D75BD}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4469      StateDataPtr->FeePendReqStatus = FEE_REQ_QUASI_ERASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4470      StateDataPtr->FeeQsJob = FEE_ERASE_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4471    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4472    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4473    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4474    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4475      /* [cover parentID={2FB3BA7A-0FD7-43c4-B1E8-AFAAB9028DEC}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4476      StateDataPtr->FeePendReqStatus = FEE_PEND_PREV_NO_REQ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4477    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4478  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4479    /* Reset the Invalid Status flag */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4480    /* [cover parentID={219B2EBC-502E-4f49-8DCA-1965DB877794}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4481    StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4482    StateDataPtr->FeeUserJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4483    StateDataPtr->FeeUserJobResult = FEE_JOB_FAIL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4484    StateDataPtr->FeeUserJobFailCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4485  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4486    /* Raise Job Failed production error */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4487    #if (FEE_WRITE_DEM_REPORT == FEE_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4488    /* [cover parentID={57969A5A-E34A-4dcc-BF82-7F6C19DB0BAB}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4489    if (Error == FEE_WRITE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4490    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4491      /* [cover parentID={85B21C01-71F7-4c33-AE93-125C456302CE}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4492      Report write production error to Mcal_Wrapper FEE_E_WRITE
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4493      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4494      Fee_lReportDemError(FEE_E_WRITE, DEM_EVENT_STATUS_FAILED);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4495    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4496    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4497  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4498    #if (FEE_INVALIDATE_DEM_REPORT == FEE_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4499    /* [cover parentID={0C99BE02-B1FD-49b0-8F4E-C4ED3B2B92C6}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4500    if (Error == FEE_INVALIDATE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4501    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4502      /* [cover parentID={F0B26CA2-58F4-4983-AF2C-69D7A8B445BE}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4503      Report invalidate error to Mcal_Wrapper FEE_E_INVALIDATE
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4504      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4505      Fee_lReportDemError(FEE_E_INVALIDATE, DEM_EVENT_STATUS_FAILED);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4506    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4507    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4508  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4509    #if (FEE_READ_DEM_REPORT == FEE_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4510    /* [cover parentID={8144374E-C639-41e8-99BD-B0AD47AA0D19}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4511    if (Error == FEE_READ)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4512    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4513      /* [cover parentID={296972F3-33FE-4420-B8E2-32CC87327906}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4514      Report read error to Mcal_Wrapper FEE_E_READ
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4515      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4516      Fee_lReportDemError(FEE_E_READ, DEM_EVENT_STATUS_FAILED);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4517    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4518    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4519  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4520    #if (FEE_WRITE_DEM_REPORT != FEE_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4521      #if (FEE_INVALIDATE_DEM_REPORT != FEE_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4522        #if (FEE_READ_DEM_REPORT != FEE_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4523        /* To avoid compiler warning */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4524        UNUSED_PARAMETER (Error);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4525        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4526      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4527    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4528    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4529    /* Report job Error notification */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4530    /* [cover parentID={486B22CE-BBA9-417e-989E-B8766E4BACEB}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4531    if(Fee_CfgPtr->FeeNvmJobErrorNotification != NULL_PTR )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4532    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4533      /* [cover parentID={FC5E8027-B173-41e5-9BFC-5DBB1466ED54}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4534      Call the NVM job error notification function
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4535      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4536      (Fee_CfgPtr->FeeNvmJobErrorNotification)();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4537    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4538    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4539  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4540  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4541  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4542  ** Syntax : static MemIf_StatusType Fee_lGetStatus(void)                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4543  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4544  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4545  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4546  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4547  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4548  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4549  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4550  ** Parameters (in-out) :None                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4551  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4552  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4553  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4554  ** Return value    :  MemIf_StatusType                                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4555  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4556  ** Description : This function returns the status of the FEE driver           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4557  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4558  /*[cover parentID={17ECE2B2-88D5-4cb8-A467-57835E79CD09}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4559  static MemIf_StatusType Fee_lGetStatus(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4560  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4561    const Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4562    MemIf_StatusType   ReturnStatus;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4563  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4564    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4565  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4566    ReturnStatus = MEMIF_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4567    /* [cover parentID={11105008-76C8-431b-91C3-49D5F0DE2B07}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4568    Return status as MEMIF_IDLE
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4569    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4570    /*[cover parentID={63FC1E50-BFF4-491d-93E4-D47CD2DFCC0C}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4571    if(StateDataPtr->FeePendReqStatus == FEE_WRITE_FAIL)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4572    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4573      /* ReturnStatus is MEMIF_IDLE */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4574    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4575    /* If there is a request pending */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4576    /*[cover parentID={9D420F94-1ADB-4285-99B9-FC0D303BAB73}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4577    else if(StateDataPtr->FeePendReqStatus != FEE_PEND_PREV_NO_REQ)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4578    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4579      /* [cover parentID={1E38F4F8-84B8-4278-9D72-057D620E3EA7}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4580      Return status as MEMIF_BUSY
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4581      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4582      ReturnStatus = MEMIF_BUSY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4583    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4584    /* [cover parentID={4BE544DA-5C4E-4ff8-99F7-4CA2BD9118E6}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4585    Return status as MEMIF_IDLE
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4586    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4587    /* Init activities NOT triggered */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4588    /*[cover parentID={04C546D1-2E75-4922-8A2B-1D3F5447C555}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4589    else if(StateDataPtr->FeeStatusFlags.FeeStartInitGC == (uint32)FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4590    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4591      /* ReturnStatus is MEMIF_IDLE */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4592    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4593    /* [cover parentID={A5B248A0-FCDA-4d8b-9EB1-41ACA8BCC8C9}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4594    Return status as MEMIF_IDLE
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4595    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4596    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4597    /* If the GC/InitGC has failed */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4598    /*[cover parentID={50F4AB07-F5D2-4bc2-90CA-AB180B66A739}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4599    else if((StateDataPtr->FeeGcState == FEE_GC_FAIL) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4600            (StateDataPtr->FeeInitGCState == FEE_INITGC_FAIL))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4601    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4602      /* ReturnStatus is MEMIF_IDLE */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4603    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4604  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4605    /* if Cache update activities ongoing */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4606    /*[cover parentID={B196B7FD-C996-4847-A650-FA07049EE1F5}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4607    else if(StateDataPtr->FeeCacheState != FEE_CACHE_UPDATE_COMPLETE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4608    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4609      /* [cover parentID={DB4C4736-67E3-478c-945D-263CA89FE9FB}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4610      Return status as MEMIF_BUSY_INTERNAL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4611      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4612    #if (MCAL_AR_VERSION == MCAL_AR_422)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4613    ReturnStatus = MEMIF_BUSY_INTERNAL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4614    #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4615    /* [cover parentID={EE79AC0B-4E24-4a65-9183-7DF24AB0005E}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4616    Return status as MEMIF_UNINIT
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4617    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4618    ReturnStatus = MEMIF_UNINIT;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4619    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4620    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4621    #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4622    /*[cover parentID={E00B5D53-532C-4487-8A9C-696C833C81ED}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4623    else if(StateDataPtr->FeeCacheState != FEE_CACHE_IDLE_QS)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4624  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4625    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4626      /* [cover parentID={E252153D-5632-4a82-B5A2-BC4D7D254DBD}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4627      Return status as MEMIF_BUSY_INTERNAL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4628      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4629    #if (MCAL_AR_VERSION == MCAL_AR_422)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4630    ReturnStatus = MEMIF_BUSY_INTERNAL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4631    #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4632    ReturnStatus = MEMIF_UNINIT;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4633    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4634    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4635    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4636  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4637    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4638    /*[cover parentID={E1275385-88DF-4f9a-A6B9-84870A57EAA7}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4639    else if(StateDataPtr->FeeGcState != FEE_GC_IDLE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4640    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4641      /* Scenario: First Fee write is not called but Fee_Read  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4642      /* is already called                                     */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4643      /* [cover parentID={47C71766-E860-48a1-B791-ED113036B9FC}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4644      Return status as MEMIF_IDLE
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4645      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4646      if((boolean)FALSE != Fee_lIsGcTriggeredOnce(StateDataPtr))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4647      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4648        /* ReturnStatus is MEMIF_IDLE */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4649      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4650      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4651      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4652        /* [cover parentID={E252153D-5632-4a82-B5A2-BC4D7D254DBD}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4653        Return status as MEMIF_BUSY_INTERNAL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4654        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4655        ReturnStatus = MEMIF_BUSY_INTERNAL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4656      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4657    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4658    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4659    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4660    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4661      /* ReturnStatus is MEMIF_IDLE */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4662    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4663  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4664    return(ReturnStatus);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4665  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4666  }/*End of Fee_GetStatus */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4667  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4668  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4669  ** Syntax : LOCAL_INLINE boolean Fee_lGcCheckUnconfigBlkCopy(void)            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4670  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4671  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4672  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4673  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4674  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4675  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4676  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4677  ** Parameters (in-out) :None                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4678  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4679  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4680  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4681  ** Return value    :  TRUE : At least one un-configured block is to be copied **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4682  **                    FALSE: All un-configured blocks are copied              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4683  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4684  ** Description : This function checks whether any un-configured block needs   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4685  **               to be copied                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4686  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4687  /* [cover parentID={8B763DD8-7779-4ef2-9186-791AFD8AD157}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4688  Fee_lGcCheckUnconfigBlkCopy
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4689  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4690  /* [cover parentID={4CAA1D7C-18AE-4279-9BDC-4B575883F89F}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4691  LOCAL_INLINE boolean Fee_lGcCheckUnconfigBlkCopy(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4692  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4693    const Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4694    boolean               RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4695  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4696    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4697  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4698    /* if any un-configured block is yet to be copied then, return TRUE */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4699    /* [cover parentID={F6193DC3-A6A6-4344-A2C7-39BBA039DDDC}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4700    if(StateDataPtr->FeeGCUnconfigBlkCopyIndex <
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4701        StateDataPtr->FeeUnConfigBlockCount)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4702    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4703      RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4704    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4705    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4706    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4707      RetVal = (boolean)FALSE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4708    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4709  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4710    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4711  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4712  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4713  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4714  ** Syntax: static Fls_17_Dmu_Job_Type Fee_lGetUserJob(const uint8 PendReqType)**
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4715  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4716  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4717  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4718  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4719  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4720  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4721  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4722  ** Parameters (in) :(uint8)PendReqType : Type of pending request              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4723  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4724  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4725  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4726  ** Return value    :  Fls_17_Dmu_Job_Type                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4727  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4728  ** Description : This function returns the ongoing user job                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4729  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4730  /*[cover parentID={B13D305A-1DCD-4fd2-941E-37FD1B4248B9}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4731  static Fls_17_Dmu_Job_Type Fee_lGetUserJob(const uint8 PendReqType)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4732  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4733    Fls_17_Dmu_Job_Type RetVal = FEE_NO_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4734  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4735    switch(PendReqType)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4736    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4737      /* These states mean that the write job is going on */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4738      /*[cover parentID={BE31F97F-39C4-4017-9EB8-9C6A095CAC55}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4739      case FEE_PEND_PREV_COMPARE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4740      case FEE_PEND_INTR_COMPARE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4741      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4742        RetVal = FEE_WRITE_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4743        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4744      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4745  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4746      /* The following are the states for read job */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4747      /*[cover parentID={35AA9CF5-179C-4474-8DC3-2AA8C2E156CA}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4748      case FEE_PEND_PREV_READ_REQ:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4749      case FEE_PEND_PREV_READ_NOTIF:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4750      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4751        RetVal = FEE_READ_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4752        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4753      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4754  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4755      default:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4756      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4757        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4758      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4759    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4760  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4761    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4762  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4763  }/*End of Fee_lGetUserJob */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4764  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4765  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4766  ** TRACEABILITY: []                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4767  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4768  ** Syntax : static boolean Fee_lIsReadAllowedbyGC(void )                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4769  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4770  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4771  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4772  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4773  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4774  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4775  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4776  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4777  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4778  ** Parameters (in-out) :None                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4779  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4780  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4781  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4782  ** Return value    :  Bool                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4783  **                   TRUE: Read Request execution is allowed during GC        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4784  **                   FALSE: Read Request execution not is allowed during GC   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4785  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4786  ** Description : This function checks if the user read is allowed by GC       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4787  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4788  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4789  /* [cover parentID={1C4E2854-85A3-4a9d-A2EC-F0B8BB42000F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4790  Fee_lIsReadAllowedbyGC
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4791  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4792  /* [cover parentID={3D16AD0C-8960-490b-A95F-E4CA1693A8FF}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4793  static boolean Fee_lIsReadAllowedbyGC(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4794  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4795  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4796    #if (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4797    Fee_StateDataType *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4798    Std_ReturnType     FlsRetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4799    #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4800    const Fee_StateDataType *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4801    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4802    boolean            RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4803    /* [cover parentID={1C4E2854-85A3-4a9d-A2EC-F0B8BB42000F}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4804    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4805  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4806    RetVal = (boolean)FALSE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4807    /* [cover parentID={9DF016FA-2FB7-4a8f-AEF7-B9A77418CBDA}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4808    Is GC requested and not yet started?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4809    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4810    /* GC is requested and not yet started */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4811    if(StateDataPtr->FeeGcState == FEE_GC_REQUESTED)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4812    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4813      RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4814    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4815    /* [cover parentID={8A62EE37-5298-4088-8DC6-DCC4F0F1C2C6}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4816    Is copying of unconfigured blocks done and copy of next unconfigured block has not yet started?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4817    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4818    /* GC is in Un-configured block copy state and copy of current block is done
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4819    and  next block copy is not yet started */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4820    else if((StateDataPtr->FeeGcState == FEE_GC_UNCFG_START_COPY) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4821            (StateDataPtr->FeeIntrJobStatus == FEE_JOB_IDLE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4822    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4823      RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4824    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4825    /* [cover parentID={7E7F6DEA-EB6C-4caa-8CA8-7B8B4270BBCE}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4826    Is copying of configured blocks done and copy of next configured block has not yet started?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4827    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4828    /* GC is in configured block copy state and copy of current block is done
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4829    and  next block copy is not yet started */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4830    else if((StateDataPtr->FeeGcState == FEE_GC_START_COPY) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4831            (StateDataPtr->FeeIntrJobStatus == FEE_JOB_IDLE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4832    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4833      RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4834    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4835  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4836    /*Check if GC in erase state as part of normal GC opertaion.Pending request
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4837     can not be executed when GC in erase state as part init GC beacuse of cache
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4838     table is not yet build and initializtion activity is not finished */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4839    /* [cover parentID={6D74086F-E7FA-4b20-9046-91C74051B1DD}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4840    else if((StateDataPtr->FeeGcState == FEE_GC_ERASE_PREV_SECTOR) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4841             (StateDataPtr->FeeGcState == FEE_GC_INIT_ERASE_PREV_SECTOR))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4842    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4843      /*check if erased operation is requested to fls*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4844      /* [cover parentID={2C1D3B99-D137-4c61-97EF-7B7A562AD28B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4845      if(StateDataPtr->FeeIntrJobStatus == FEE_JOB_REQSTD)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4846      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4847        /* call fls erase suspend function if supported by hardware */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4848      /* [cover parentID={E1E2A5AC-64CC-4b33-8D5A-E6DFA62C036D}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4849       Check for erase suspend function
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4850      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4851      #if (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4852        /* [cover parentID={8F7ACB83-7676-4010-BAAE-ABEF6FF3DEB5}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4853        if(FEE_ERASE_NOT_SUSPENDED == StateDataPtr->FeeEraseSuspendStatus)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4854        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4855          FlsRetVal = Fls_17_Dmu_SuspendErase();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4856          /* [cover parentID={458957E2-5836-4961-A9B8-8FD89B996361}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4857          if(E_OK == FlsRetVal)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4858          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4859            RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4860            StateDataPtr->FeeEraseSuspendStatus = FEE_ERASE_SUSPENDED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4861          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4862        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4863        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4864        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4865          RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4866          /* In the case of a suspend request, when previous attempt of resume
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4867          had failed at least once, then the count shall be
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4868          reset back to 1, as it is a new request for suspend. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4869          StateDataPtr->FeeEraseSuspendStatus = FEE_ERASE_SUSPENDED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4870        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4871        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4872      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4873      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4874      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4875        /* Erase operation is not started or completed */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4876        RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4877      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4878    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4879    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4880    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4881      /* dummy else */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4882    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4883  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4884    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4885  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4886  }/* End of Fee_lIsReadAllowedbyGC */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4887  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4888  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4889  ** TRACEABILITY: []                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4890  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4891  ** Syntax : static boolean Fee_lIsWriteInvldAllowedbyGC(void)                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4892  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4893  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4894  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4895  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4896  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4897  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4898  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4899  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4900  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4901  ** Parameters (in-out) :None                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4902  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4903  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4904  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4905  ** Return value    :  Bool                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4906  **                   FALSE: Write/Invalidate Request execution not allowed    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4907  **                   TRUE: Write/Invalidate  Request execution allowed        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4908  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4909  ** Description : Checks if the Write/Invalidate request execution is allowed  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4910  **               by GC depending on the erase suspend feature configuration.  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4911  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4912  /* [cover parentID={6DB78D22-11ED-43f9-838E-5B61C20B9627}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4913  Fee_lIsWriteInvldAllowedbyGC
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4914  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4915  /* [cover parentID={1D191D0E-C8C1-4284-89E3-AEFD9EB6974A}] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4916  static boolean Fee_lIsWriteInvldAllowedbyGC(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4917  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4918    #if (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4919    Fee_StateDataType *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4920    Std_ReturnType     FlsRetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4921    #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4922    const Fee_StateDataType *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4923    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4924    boolean            RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4925    uint16             PendReqBlkNum;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4926    uint16             PendReqBlkIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4927    Std_ReturnType     PendBlkWritable;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4928    const Fee_BlockType  *PendReqBlkPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4929  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4930    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4931  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4932    RetVal = (boolean)FALSE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4933  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4934    /* Immediate write has been requested */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4935    /* [cover parentID={F63000BC-0CC6-484d-A803-6DB929092BB2}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4936    if((StateDataPtr->FeePendReqStatus == (uint8)FEE_REQ_IMM_WRITE) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4937        (StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus == (uint32)FEE_RESET) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4938        ((StateDataPtr->FeeGcState == FEE_GC_UNCFG_START_COPY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4939         || (StateDataPtr->FeeGcState == FEE_GC_START_COPY)))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4940    { /* [cover parentID={51BA216E-4E3B-4bde-8BAE-2A8640681293}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4941      Is the GC read/write job requested to FLS ?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4942      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4943      /* Copying of an un-configure /configured block is done.Copy of next
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4944      un-configured / configured block has not yet started */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4945      /* [cover parentID={51BA216E-4E3B-4bde-8BAE-2A8640681293}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4946      if (StateDataPtr->FeeIntrJobStatus == FEE_JOB_IDLE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4947      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4948        RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4949      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4950  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4951    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4952    /* [cover parentID={72698D78-F7F1-491a-BBB4-BB737B4385EE}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4953    else /* Immediate/Normal write has been requested during GC erase state */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4954    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4955      /*Check if GC in erase state as part of normal GC opertaion.Pending request
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4956      can not be executed when GC in erase state as part init GC beacuse of cache
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4957      table is not yet build and initializtion activity is not finished */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4958      /* [cover parentID={72698D78-F7F1-491a-BBB4-BB737B4385EE}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4959      if(StateDataPtr->FeeGcState == FEE_GC_ERASE_PREV_SECTOR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4960      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4961        PendReqBlkNum = StateDataPtr->FeePendReqInfo.BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4962        PendReqBlkIndex = Fee_lGetUsrBlockIndex(PendReqBlkNum);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4963        /* MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic is used for
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4964        for faster access of Block traversal.It is ensured that PendReqBlkIndex
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4965        is within the desired boundary*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4966        PendReqBlkPtr = Fee_CfgPtr->FeeBlockConfigPtr + PendReqBlkIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4967        PendBlkWritable = Fee_lPerformCurrBlkCheck(PendReqBlkPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4968        /* [cover parentID={9EBE5BF0-1959-4d9d-91E5-AFCF3C6181AF}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4969        if(StateDataPtr->FeeIntrJobStatus == FEE_JOB_REQSTD)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4970        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4971          /* call fls erase suspend function if supported by hardware and can be
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4972          suspended*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4973          #if (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4974          if(PendBlkWritable == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4975          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4976            if(FEE_ERASE_NOT_SUSPENDED == StateDataPtr->FeeEraseSuspendStatus)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4977            { /* [cover parentID={F62D61CA-CF0C-4fd0-9A74-8EE630EF26B1}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4978              Call fls erase suspend function (Only if the erase is not suspended already )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4979              [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4980              FlsRetVal = Fls_17_Dmu_SuspendErase();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4981              /* [cover parentID={88FFC93A-1871-45ff-8D28-7E32C6F49E6A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4982              if(E_OK == FlsRetVal)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4983              {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4984                RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4985                StateDataPtr->FeeEraseSuspendStatus = FEE_ERASE_SUSPENDED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4986              }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4987            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4988            else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4989            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4990              RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4991              /* In the case of a suspend request, when previous attempt of
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4992              resume had failed at least once, then the count shall be
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4993              reset back to 1, as it is a new request for suspend. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4994              StateDataPtr->FeeEraseSuspendStatus = FEE_ERASE_SUSPENDED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4995            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4996          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4997          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4998        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4999        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5000        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5001          /* Erase operation is not started or completed*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5002          /* [cover parentID={BE745360-1F63-4f35-A107-A743640119D7}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5003          if(PendBlkWritable == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5004          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5005            RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5006          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5007  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5008        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5009      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5010    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5011  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5012    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5013  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5014  }/* End of Fee_lIsWriteInvldAllowedbyGC */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5015  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5016  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5017  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5018  ** Syntax : LOCAL_INLINE void Fee_lMainGCTransHdlr(void)                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5019  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5020  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5021  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5022  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5023  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5024  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5025  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5026  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5027  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5028  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5029  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5030  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5031  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5032  ** Description : This function determines and performs the state transition   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5033  ** for the main function when in FEE_MAIN_GC state                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5034  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5035  /* [cover parentID={EF8D353C-AB6A-4a20-B50F-4DA55B84B024}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5036  LOCAL_INLINE void Fee_lMainGCTransHdlr(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5037  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5038    Fee_StateDataType *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5039  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5040    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5041  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5042    /* Check if GC is completed */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5043    /* [cover parentID={D50EDFA6-5C50-4a37-AAF2-5B879722AB8E}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5044    if((FEE_MAIN_GC == StateDataPtr->FeeMainJob) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5045        (FEE_GC_IDLE == StateDataPtr->FeeGcState))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5046    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5047      StateDataPtr->FeeMainJob = FEE_MAIN_NONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5048    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5049  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5050    /* Check if the Read request is pending & can be executed */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5051    else if((boolean)TRUE == Fee_lIsUserReadReqstd(StateDataPtr))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5052    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5053      /* [cover parentID={29D314F4-7094-4cfa-BB66-1687C72B5DC8}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5054      if(Fee_lIsReadAllowedbyGC() == (boolean)TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5055      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5056        StateDataPtr->FeeMainJob = FEE_MAIN_READ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5057      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5058    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5059    /* Check if the Write request is pending & can be executed */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5060    else if(((boolean)TRUE == Fee_lIsUserWriteInvldReqstd(StateDataPtr)) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5061            (FEE_MAIN_GC == StateDataPtr->FeeMainJob))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5062    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5063      /* [cover parentID={D64343A8-A157-4e8d-B8AD-3914A7613FCB}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5064      if(Fee_lIsWriteInvldAllowedbyGC() == (boolean)TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5065      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5066        StateDataPtr->FeeMainJob = FEE_MAIN_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5067      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5068    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5069    #if(FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5070    /* [cover parentID={16D829C0-38AC-4da2-ADC6-C60DFDDD8F23}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5071    else if(Fee_lIsQsWriteReadAllowedbyGC() == TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5072    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5073      StateDataPtr->FeeMainJob = FEE_MAIN_QS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5074    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5075    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5076    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5077    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5078      /* dummy for MISRA */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5079    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5080  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5081  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5082  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5083  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5084  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5085  ** Syntax : LOCAL_INLINE void Fee_lMainNoneTransHdlr(void)                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5086  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5087  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5088  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5089  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5090  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5091  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5092  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5093  ** Parameters (in-out) :None                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5094  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5095  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5096  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5097  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5098  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5099  ** Description : This function determines and performs the state transition   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5100  ** for the main function when in FEE_MAIN_NONE state                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5101  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5102  /* [cover parentID={DBF4F12D-A366-43fd-B066-4BB004066247}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5103  LOCAL_INLINE void Fee_lMainNoneTransHdlr(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5104  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5105    Fee_StateDataType *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5106  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5107    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5108  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5109    /* Check if User Read request is registered */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5110    /* [cover parentID={98AC46DE-C46D-4755-A8CB-70ACB41CC337}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5111    if( (boolean)TRUE == Fee_lIsUserReadReqstd(StateDataPtr) )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5112    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5113  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5114      #if (FEE_CANCELL_ALL_API == STD_ON) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5115          (FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5116      /* Check if there is GC cancelled by cancel all */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5117      /* [cover parentID={18FBDBAB-7034-4add-8F5F-C61659B6C488}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5118      if(StateDataPtr->FeeCancelallGCstate == FEE_GC_CANCLD)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5119      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5120        /* Call the Fee_lCancelAllGCrestart to restart the GC*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5121        Fee_lCancelAllGCrestart();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5122  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5123        /* Set the FeeCancelallGCstate to FEE_GC_CANCLD_CACHEUPDATE and set main
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5124        state to FEE_MAIN_INITGC */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5125        StateDataPtr->FeeCancelallGCstate = FEE_GC_CANCLD_CACHEUPDATE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5126        StateDataPtr->FeeMainJob = FEE_MAIN_INITGC;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5127  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5128      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5129      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5130      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5131      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5132        StateDataPtr->FeeMainJob = FEE_MAIN_READ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5133      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5134  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5135  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5136  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5137    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5138    /* Check if User Write, Invalidate request is registered */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5139    /* [cover parentID={C66BB228-446A-4123-B933-9509B3549DF8}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5140    else if( (boolean)TRUE == Fee_lIsUserWriteInvldReqstd(StateDataPtr) )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5141    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5142      #if (FEE_CANCELL_ALL_API == STD_ON) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5143      (FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5144      /* Check if there is GC cancelled by cancel all */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5145      /* [cover parentID={6328E9E6-D61F-4a98-A89E-BD018049F01F}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5146      if(StateDataPtr->FeeCancelallGCstate == FEE_GC_CANCLD)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5147      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5148        /* Call the Fee_lCancelAllGCrestart to restart the GC*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5149        Fee_lCancelAllGCrestart();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5150  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5151        /* Set the FeeCancelallGCstate to FEE_GC_CANCLD_CACHEUPDATE and set main
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5152        state to FEE_MAIN_INITGC */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5153        StateDataPtr->FeeCancelallGCstate = FEE_GC_CANCLD_CACHEUPDATE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5154        StateDataPtr->FeeMainJob = FEE_MAIN_INITGC;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5155  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5156      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5157      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5158      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5159      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5160        StateDataPtr->FeeMainJob = FEE_MAIN_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5161      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5162    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5163    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5164    /* [cover parentID={3321F78D-AC96-43d2-8D9D-61F787AEE239}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5165    else if( StateDataPtr->FeeQsJob != FEE_NO_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5166    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5167      StateDataPtr->FeeMainJob = FEE_MAIN_QS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5168    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5169    #if (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5170    /* [cover parentID={CA771F99-FF6E-4278-99B7-B62042FB1988}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5171    else if( StateDataPtr->FeeQsEraseSuspend == FEE_SET )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5172    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5173      StateDataPtr->FeeMainJob = FEE_MAIN_QS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5174    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5175    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5176    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5177    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5178    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5179      /* Fee_MainStateVar will be FEE_MAIN_NONE */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5180    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5181  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5182  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5183  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5184  ** Syntax : LOCAL_INLINE void Fee_lMainCacheUpdtTransHdlr(void)               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5185  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5186  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5187  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5188  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5189  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5190  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5191  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5192  ** Parameters (in-out) :None                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5193  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5194  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5195  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5196  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5197  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5198  ** Description : This function determines and performs the state transition   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5199  ** for the main function when in FEE_MAIN_CACHEUPDATE state                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5200  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5201  /* [cover parentID={3829EAB5-02D8-4257-9893-60F48BF58519}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5202  Fee_lMainCacheUpdtTransHdlr
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5203  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5204  /*[cover parentID={52D9E911-AAEC-41c6-AC79-0FF7CA1D7B99}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5205  LOCAL_INLINE void Fee_lMainCacheUpdtTransHdlr(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5206  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5207    Fee_StateDataType *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5208  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5209    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5210  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5211    /* Check if User Read request is registered */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5212    /* [cover parentID={B8099704-4745-47ad-9066-D56847B575AE}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5213    Cache state update is complete or idle QS
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5214    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5215    #if (FEE_DATA_BLOCK_SUPPORTED == FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5216    if(StateDataPtr->FeeCacheState == FEE_CACHE_IDLE_QS)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5217    #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5218    if(StateDataPtr->FeeCacheState == FEE_CACHE_UPDATE_COMPLETE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5219    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5220    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5221      #if (FEE_DATA_BLOCK_SUPPORTED == FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5222      /*[cover parentID={F1A171BB-D8BC-4864-9288-C4CB7139DD13}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5223      if( StateDataPtr->FeeQsJob != FEE_NO_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5224      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5225        StateDataPtr->FeeMainJob = FEE_MAIN_QS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5226      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5227      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5228      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5229      StateDataPtr->FeeMainJob = FEE_MAIN_NONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5230      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5231      #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5232      /*[cover parentID={018F0044-357E-46df-AAAF-D42339FD25A2}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5233      if((boolean)TRUE == Fee_lIsUserReadReqstd(StateDataPtr))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5234      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5235        StateDataPtr->FeeMainJob = FEE_MAIN_READ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5236      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5237      /*[cover parentID={1947C3EB-D512-4d6e-8BCE-6D2F8F3009DB}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5238      else if((boolean)TRUE == Fee_lIsUserWriteInvldReqstd(StateDataPtr))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5239      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5240        StateDataPtr->FeeMainJob = FEE_MAIN_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5241      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5242      #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5243      /*[cover parentID={BA65760E-E551-44e6-A90D-AC7BDA729054}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5244      else if( StateDataPtr->FeeQsJob != FEE_NO_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5245      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5246        StateDataPtr->FeeMainJob = FEE_MAIN_QS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5247      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5248      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5249      /*[cover parentID={C77217DA-B54F-4890-8DF9-8D45F23D25A9}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5250      else if(StateDataPtr->FeeGcState != FEE_GC_IDLE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5251      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5252        StateDataPtr->FeeMainJob = FEE_MAIN_GC;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5253      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5254      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5255      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5256        StateDataPtr->FeeMainJob = FEE_MAIN_NONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5257      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5258     #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5259    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5260  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5261  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5262  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5263  ** Syntax : LOCAL_INLINE void Fee_lMainReadTransHdlr(void)                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5264  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5265  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5266  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5267  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5268  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5269  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5270  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5271  ** Parameters (in-out) :None                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5272  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5273  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5274  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5275  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5276  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5277  ** Description : This function determines and performs the state transition   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5278  ** for the main function when in FEE_MAIN_READ state                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5279  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5280  /*[cover parentID={740F470B-F525-4f68-AC5B-6941D5B977E5}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5281  LOCAL_INLINE void Fee_lMainReadTransHdlr(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5282  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5283    Fee_StateDataType *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5284  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5285    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5286  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5287    /* Check if the Write/Read/Invalidate job is finished */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5288    /*[cover parentID={F1EB88CB-4D23-4786-B6E8-5AD009152B96}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5289    if(StateDataPtr->FeePendReqStatus == FEE_PEND_PREV_NO_REQ)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5290    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5291      #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5292      /* Check if GC job is ongoing/requested */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5293      /*[cover parentID={91FADC2E-15F1-40e2-BEF8-E1B69F89FE58}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5294      if(((boolean)FALSE == Fee_lIsGcTriggeredOnce(StateDataPtr)) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5295          (StateDataPtr->FeeGcState != FEE_GC_IDLE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5296      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5297        StateDataPtr->FeeMainJob = FEE_MAIN_GC;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5298      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5299      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5300      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5301      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5302        StateDataPtr->FeeMainJob = FEE_MAIN_NONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5303      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5304    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5305    /* Check if user write/invalidate is requested */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5306    /*[cover parentID={F8CFDB4A-24FA-46ad-B17D-E4DCCC781B93}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5307    else if((boolean)TRUE == Fee_lIsUserWriteInvldReqstd(StateDataPtr))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5308    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5309      StateDataPtr->FeeMainJob = FEE_MAIN_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5310    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5311  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5312    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5313    /* Check if Qs Erase job is requested */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5314    /*[cover parentID={A481178B-1635-4269-8334-2CB933CFC8D1}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5315    else if(StateDataPtr->FeeQsJob == FEE_ERASE_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5316    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5317      StateDataPtr->FeeMainJob = FEE_MAIN_QS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5318    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5319  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5320    /*Check if QS read is requested*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5321    /*[cover parentID={D74B24AC-B13B-42c5-B06E-3BCA2A0A77D5}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5322    else if(StateDataPtr->FeePendReqStatus == FEE_REQ_QUASI_READ)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5323    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5324      StateDataPtr->FeeMainJob = FEE_MAIN_QS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5325    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5326  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5327    /*Check if QS write is requested*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5328    /*[cover parentID={25E196E0-EA6A-4a32-B3FA-DD479B40E8D6}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5329    else if(StateDataPtr->FeePendReqStatus == FEE_REQ_QUASI_WRITE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5330    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5331      StateDataPtr->FeeMainJob = FEE_MAIN_QS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5332    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5333  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5334    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5335    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5336    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5337      /* dummy else */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5338    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5339  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5340  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5341  /*CYCLOMATIC_Fee_lMainWriteTransHdlr_JUSTIFICATION:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5342  Fee_lMainWriteTransHdlr has to pass through many states for interrupted read
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5343  during write,if it is broken into more functions, the readability will get
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5344  affected.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5345  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5346  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5347  ** Syntax: LOCAL_INLINE void Fee_lMainWriteTransHdlr(void)                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5348  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5349  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5350  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5351  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5352  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5353  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5354  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5355  ** Parameters (in-out) :None                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5356  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5357  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5358  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5359  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5360  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5361  ** Description : This function determines and performs the state transition   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5362  ** for the main function when in FEE_MAIN_WRITE state                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5363  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5364  /*[cover parentID={120678FC-72A9-4f06-89EE-47AE12CBC60C}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5365  LOCAL_INLINE void Fee_lMainWriteTransHdlr(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5366  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5367    Fee_StateDataType *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5368  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5369    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5370  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5371  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5372    /* Check if the Write/Read/Invalidate job is finished */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5373    /*[cover parentID={87778CAA-8019-46a2-BEEC-14EF9C00EF3F}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5374    if(StateDataPtr->FeePendReqStatus == FEE_PEND_PREV_NO_REQ)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5375    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5376      /* Check for !Fee_lIsGcTriggeredOnce() is not required as it is True
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5377      when the main job is WRITE */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5378      /*[cover parentID={9A30072D-BEC4-43fc-B9D1-5062A448FC9E}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5379      if (StateDataPtr->FeeGcState != FEE_GC_IDLE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5380      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5381        StateDataPtr->FeeMainJob = FEE_MAIN_GC;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5382      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5383      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5384      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5385        StateDataPtr->FeeMainJob = FEE_MAIN_NONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5386      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5387    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5388    /*[cover parentID={A00F19AB-0D4D-48db-BF45-3E873F7B7CC0}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5389    else if( (StateDataPtr->FeePendReqStatus == FEE_REQ_NORM_WRITE) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5390             (StateDataPtr->FeePendReqStatus == FEE_REQ_IMM_WRITE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5391           )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5392    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5393  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5394      /* Check for !Fee_lIsGcTriggeredOnce() is not required as it is always
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5395      true when FeePendReqStatus = FEE_REQ_NORM_WRITE / FEE_REQ_IMM_WRITE */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5396      /*[cover parentID={48AFBC08-E0D5-4f61-9888-9EE1B20F4E6F}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5397      if ((StateDataPtr->FeeGcState != FEE_GC_IDLE) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5398          (StateDataPtr->FeeReadLen == 0U))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5399      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5400        StateDataPtr->FeeMainJob = FEE_MAIN_GC;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5401      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5402  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5403    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5404  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5405    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5406    /*Check for QS Write*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5407    /*[cover parentID={7CAA6AB5-E9BE-4143-AF38-0FB448586B2A}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5408    else if(StateDataPtr->FeePendReqStatus == FEE_REQ_QUASI_WRITE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5409    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5410      StateDataPtr->FeeMainJob = FEE_MAIN_QS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5411    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5412  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5413    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5414  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5415    /* Check if user read is requested */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5416    /*[cover parentID={6EFF9E29-0BB8-4748-96BB-7015717C7150}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5417    else if((boolean)TRUE == Fee_lIsUserReadReqstd(StateDataPtr))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5418    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5419      StateDataPtr->FeeMainJob = FEE_MAIN_READ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5420    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5421  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5422    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5423    /*Check for QS read*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5424    /*[cover parentID={56DFA09C-03B8-454e-9F13-D9FDEFFD35A6}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5425    else if(StateDataPtr->FeePendReqStatus == FEE_REQ_QUASI_READ)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5426    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5427      StateDataPtr->FeeMainJob = FEE_MAIN_QS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5428    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5429    /*[cover parentID={6AB91513-068C-4f06-AF29-D9BD20774664}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5430    else if(StateDataPtr->FeePendReqStatus == FEE_REQ_QUASI_ERASE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5431    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5432      StateDataPtr->FeeMainJob = FEE_MAIN_QS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5433    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5434  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5435    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5436    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5437    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5438      /* Remain in FEE_MAIN_WRITE */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5439      /* i.e.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5440      FEE_PEND_PREV_WRITE_REQ : Current block write is not yet completed
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5441      */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5442    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5443  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5444  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5445  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5446  ** Syntax : static void Fee_lDecideMainJob(void)                              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5447  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5448  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5449  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5450  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5451  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5452  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5453  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5454  ** Parameters (in-out) :None                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5455  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5456  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5457  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5458  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5459  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5460  ** Description : This function determines and performs the state transition   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5461  ** for the main function                                                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5462  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5463  /*[cover parentID={1C5B8136-C85D-45c1-A9F9-612767538334}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5464  static void Fee_lDecideMainJob(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5465  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5466    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5467  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5468    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5469  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5470  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5471    switch(StateDataPtr->FeeMainJob)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5472    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5473      /*[cover parentID={F8DD5DCD-CB04-409d-A95D-B19F9EFACBFF}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5474      case FEE_MAIN_INITGC:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5475      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5476        #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5477        /* Check if InitGC activity is ongoing */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5478        /*[cover parentID={FB39CE14-7038-478a-98A2-79C18112A461}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5479        if(StateDataPtr->FeeInitGCState == FEE_INITGC_COMPLETE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5480        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5481          #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5482  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5483          #if ((FEE_CANCELL_ALL_API == STD_ON) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5484          (FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5485          if(StateDataPtr->FeeCancelallGCstate == FEE_GC_CANCLD_CACHEUPDATE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5486          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5487            StateDataPtr->FeeMainJob = FEE_MAIN_CACHEUPDATE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5488            StateDataPtr->FeeCancelallGCstate = FEE_GC_NOT_CANCLD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5489          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5490          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5491          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5492            StateDataPtr->FeeMainJob = FEE_MAIN_INITQS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5493          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5494          #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5495          StateDataPtr->FeeMainJob = FEE_MAIN_INITQS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5496          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5497  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5498          #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5499          StateDataPtr->FeeMainJob = FEE_MAIN_CACHEUPDATE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5500          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5501        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5502        #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5503        /* Checking GC activity is not required for QS */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5504        StateDataPtr->FeeMainJob = FEE_MAIN_INITQS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5505        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5506        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5507      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5508      #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5509      /*[cover parentID={A03FCFA7-80ED-48b4-8A8E-A274E24C1365}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5510      case FEE_MAIN_INITQS:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5511      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5512        /*[cover parentID={4ABAE073-CAB6-49b8-A1FF-D33BC6D7E1E5}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5513        if(StateDataPtr->FeeInitQSState == FEE_INITQS_COMPLETE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5514        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5515          StateDataPtr->FeeMainJob = FEE_MAIN_CACHEUPDATE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5516        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5517        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5518      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5519      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5520      /*[cover parentID={3DF01A3D-02B4-4dd9-90E2-AD484B10ACA9}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5521      case FEE_MAIN_NONE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5522      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5523        Fee_lMainNoneTransHdlr();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5524        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5525      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5526      /*[cover parentID={576DA2D4-5775-4d6d-890E-2AC0125BD2B5}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5527      case FEE_MAIN_CACHEUPDATE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5528      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5529        /*[cover parentID={34A084E6-3C40-441b-995F-D195B5D7439D}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5530        Fee_lMainCacheUpdtTransHdlr();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5531        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5532      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5533      /*[cover parentID={FDDCED83-B51A-4f2f-A10C-ACCC457B676D}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5534      case FEE_MAIN_READ:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5535      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5536        Fee_lMainReadTransHdlr();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5537        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5538      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5539      /*[cover parentID={C249F2FD-9CA3-4eb2-B67A-EA32D933291F}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5540      case FEE_MAIN_WRITE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5541      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5542        Fee_lMainWriteTransHdlr();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5543        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5544  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5545      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5546      #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5547      /*[cover parentID={CA12403F-A5E2-4679-97F2-DE02758FB1BC}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5548      case FEE_MAIN_QS:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5549      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5550        Fee_lMainQsTransHdlr();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5551        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5552      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5553      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5554      #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5555      /*[cover parentID={B13CA5CE-E7F0-4e58-99A9-7A23D570E141}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5556      case FEE_MAIN_GC:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5557      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5558        Fee_lMainGCTransHdlr();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5559        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5560      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5561      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5562      case FEE_MAIN_UNINIT:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5563      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5564        /* Check if InitGC activity is requested */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5565        /*[cover parentID={B6705956-93AF-47b9-969B-C268EC9F968A}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5566        if(StateDataPtr->FeeStatusFlags.FeeStartInitGC == (uint32)FEE_SET )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5567        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5568          StateDataPtr->FeeMainJob = FEE_MAIN_INITGC;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5569        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5570        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5571      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5572      default:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5573      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5574        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5575      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5576    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5577  }/*End of Fee_lDecideMainJob */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5578  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5579  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5580  ** Syntax : LOCAL_INLINE void Fee_lHandleErasePrepDFLASH(void)                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5581  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5582  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5583  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5584  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5585  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5586  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5587  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5588  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5589  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5590  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5591  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5592  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5593  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5594  ** Description : This function handles the erase operations for DFLASH        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5595  **               preparation                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5596  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5597  /* [cover parentID={17A84697-3D49-41a4-9B9E-AB77738D3081}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5598  Fee_lHandleErasePrepDFLASH
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5599  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5600  /* [cover parentID={2DAC004C-9723-481c-9FDE-F1ECC80E6C3A}] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5601  LOCAL_INLINE void Fee_lHandleErasePrepDFLASH(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5602  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5603    Fee_StateDataType   *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5604    Fls_17_Dmu_AddressType      DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5605    Std_ReturnType       ReturnValueFls;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5606  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5607    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5608    DestAddr = StateDataPtr->FeeCurrSectSrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5609    StateDataPtr->FeeIntrJobStatus = FEE_JOB_REQSTD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5610    StateDataPtr->FeeIntrJob = FEE_ERASE_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5611  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5612    /* erase current sector */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5613    /*[cover parentID={37BE2996-F3BB-4378-BAE6-15228ADF4CC7}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5614    ReturnValueFls = Fls_17_Dmu_Erase(DestAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5615                                      (Fls_17_Dmu_LengthType)FEE_DFLASH_SECTOR_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5616    /*[cover parentID={2DB9C837-C68E-490c-BB0D-ED6DDE491188}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5617    if(ReturnValueFls == E_NOT_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5618    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5619      StateDataPtr->FeeIntrJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5620      StateDataPtr->FeeIntrJob = FEE_NO_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5621      Fee_lHandleInitGcFail();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5622    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5623  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5624  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5625  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5626  ** Syntax : static void Fee_lHandleWritePrepDFLASH(const uint8 *const SrcPtr) **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5627  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5628  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5629  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5630  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5631  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5632  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5633  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5634  ** Parameters (in) :  SrcPtr:  Pointer to the buffer with state page data     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5635  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5636  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5637  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5638  ** Return value    : None                                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5639  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5640  ** Description : This function handles the write operations for DFLASH        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5641  **               preparation                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5642  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5643  /* [cover parentID={F9397328-6B85-4b1d-9735-4462DBD22FE2}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5644  Fee_lHandleWritePrepDFLASH
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5645  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5646  /*[cover parentID={C45F89CD-26B1-4871-B29D-EE9623174069}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5647  static void Fee_lHandleWritePrepDFLASH(const uint8 *const SrcPtr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5648  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5649    Fee_StateDataType   *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5650    Fls_17_Dmu_AddressType      DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5651    Std_ReturnType       ReturnValueFls = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5652    uint8                PrepDFlashState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5653  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5654    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5655    DestAddr = StateDataPtr->FeeCurrSectSrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5656    /*[cover parentID={B1B3BA8D-905D-41ad-99D4-28CE38FEF914}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5657    while(Fee_lIsUnerasableAddr(DestAddr) == TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5658    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5659  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5660      DestAddr += (FEE_DFLASH_WORDLINE_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5661    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5662    StateDataPtr->FeeCurrSectSrcAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5663    StateDataPtr->FeeIntrJobStatus = FEE_JOB_REQSTD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5664    StateDataPtr->FeeIntrJob = FEE_WRITE_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5665  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5666    PrepDFlashState = StateDataPtr->FeePrepDFLASHState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5667  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5668    switch (PrepDFlashState)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5669    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5670      /*[cover parentID={6ADFC44A-0253-42d6-95CE-2BF63BBB42AB}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5671      case FEE_PREPDF_MARK_S0_ERASED_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5672      case FEE_PREPDF_MARK_S0_VALID_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5673      case FEE_PREPDF_MARK_S1_ERASED_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5674      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5675        ReturnValueFls = Fls_17_Dmu_Write(DestAddr, SrcPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5676                               (Fls_17_Dmu_LengthType)FEE_STATEPAGE_PROGRAM_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5677      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5678      break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5679  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5680      case FEE_PREPDF_MARK_S0_ERASED_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5681      case FEE_PREPDF_MARK_S0_VALID_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5682      case FEE_PREPDF_MARK_S1_ERASED_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5683      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5684        DestAddr += FEE_STATEPAGE_DATA_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5685        ReturnValueFls = Fls_17_Dmu_Write(DestAddr, SrcPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5686                                (Fls_17_Dmu_LengthType)FEE_STATEPAGE_MARKER_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5687      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5688      break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5689      default:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5690    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5691      break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5692    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5693    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5694    /*[cover parentID={85E5C24D-DE71-4325-B5C8-3A9273F4FB6A}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5695    if(ReturnValueFls == E_NOT_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5696    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5697      StateDataPtr->FeeIntrJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5698      StateDataPtr->FeeIntrJob = FEE_NO_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5699      /*[cover parentID={BFDB3D73-E27C-466b-92CE-A3A8F7E8E817}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5700      Fee_lHandleInitGcFail();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5701    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5702  }/*End of Fee_lHandleWritePrepDFLASH */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5703  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5704  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5705  ** Syntax : LOCAL_INLINE void Fee_lIDSM(void)                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5706  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5707  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5708  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5709  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5710  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5711  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5712  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5713  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5714  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5715  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5716  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5717  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5718  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5719  ** Description : This function implements the Init Dirty State Machine which  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5720  ** repairs the identified state pages before handing over to the INSM         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5721  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5722  /* [cover parentID={0BDE2A71-D5BF-447c-8DCF-7A8C8B87E5F8}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5723  Fee_lIDSM
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5724  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5725  /* [cover parentID={D80BE616-6B4A-4e87-B634-2E7E1A7885B6}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5726  LOCAL_INLINE void Fee_lIDSM(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5727  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5728    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5729    Fee_SectorInfoType    *SectorInfoPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5730    uint8           *ReadWriteBuffPtr = NULL_PTR;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5731    Fls_17_Dmu_AddressType        DestWriteAddress = (Fls_17_Dmu_AddressType)FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5732    uint32                 BankNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5733    uint32                 WriteLength = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5734    Std_ReturnType         ReturnValueFls = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5735  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5736    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5737    BankNumber =  StateDataPtr->FeeStatusFlags.FeeCurrSector;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5738    SectorInfoPtr = &StateDataPtr->FeeSectorInfo[BankNumber];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5739    /* [cover parentID={74EAB833-CF33-450f-A60F-F7967E60CD6F}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5740    if(SectorInfoPtr->Status.Dirty == (uint32)FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5741    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5742      BankNumber = BankNumber ^ FEE_SECTOR1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5743      SectorInfoPtr = &StateDataPtr->FeeSectorInfo[BankNumber];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5744    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5745  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5746    switch(StateDataPtr->FeeRepairStep)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5747    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5748      /* [cover parentID={346F5328-F00F-41db-877A-8779B86AC327}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5749      case FEE_PROGRAM_MARKER:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5750      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5751        StateDataPtr->FeeCurrSectSrcAddr = SectorInfoPtr->StatePageAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5752        /* [cover parentID={4AE9C17A-12E8-45ed-B0EB-301933AA6D94}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5753        if (StateDataPtr->FeeIntrJobFailCount == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5754        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5755          Fee_lClearFeeGcReadWriteBuffer();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5756          ReadWriteBuffPtr = StateDataPtr->FeeGcReadWriteBuffer;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5757          (void)Fls_17_Dmu_ReadWordsSync(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5758          (Fls_17_Dmu_AddressType)StateDataPtr->FeeCurrSectSrcAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5759          /*MISRA2012_RULE_11_3_JUSTIFICATION:This is done for interfacing with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5760          FLS.FEE is passing parameters to FLS APIs, casting is needed to match with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5761          the Fls API prototype. ReadWriteBuffPtr is poiniting to FeeGcReadWriteBuffer
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5762          which is part of Fee_StateDataType. FeeGcReadWriteBuffer is so placed to have
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5763          4 byte alignment */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5764          (uint32 *)ReadWriteBuffPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5765          (Fls_17_Dmu_LengthType)(FEE_STATEPAGE_DATA_SIZE / FEE_DFLASH_WORD_SIZE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5766  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5767        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5768        Fee_lPrepareMarkerBuffer();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5769  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5770        ReadWriteBuffPtr = &(StateDataPtr->FeeGcReadWriteBuffer
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5771                           [FEE_STATEPAGE_DATA_SIZE]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5772        WriteLength = FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5773        DestWriteAddress = StateDataPtr->FeeCurrSectSrcAddr +
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5774                           FEE_STATEPAGE_DATA_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5775        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5776      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5777      case FEE_PROGRAM_STATEPAGE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5778      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5779        StateDataPtr->FeeCurrSectSrcAddr = SectorInfoPtr->NextFreeWLAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5780        ReadWriteBuffPtr = StateDataPtr->FeeGcReadWriteBuffer;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5781        /* Update the new state page address and the next free WL address */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5782        SectorInfoPtr->StatePageAddr = StateDataPtr->FeeCurrSectSrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5783        SectorInfoPtr->NextFreeWLAddr =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5784          Fee_lGetNextWLAddr(StateDataPtr->FeeCurrSectSrcAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5785        WriteLength = FEE_STATEPAGE_PROGRAM_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5786        DestWriteAddress = StateDataPtr->FeeCurrSectSrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5787        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5788      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5789      default:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5790      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5791        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5792      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5793    }/* END OF SWITCH */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5794    StateDataPtr->FeeIntrJob = FEE_WRITE_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5795    StateDataPtr->FeeIntrJobStatus = FEE_JOB_REQSTD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5796    ReturnValueFls = Fls_17_Dmu_Write(DestWriteAddress,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5797                                      ReadWriteBuffPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5798                                      (Fls_17_Dmu_LengthType)WriteLength);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5799    /* [cover parentID={070CCA49-9EE0-477c-9FF1-3C5770701762}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5800    if(ReturnValueFls == E_NOT_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5801    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5802      StateDataPtr->FeeIntrJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5803      StateDataPtr->FeeIntrJob = FEE_NO_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5804      /* [cover parentID={553A6C31-9CEA-4368-A12A-4AA2AB474EED}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5805      Fee_lHandleInitGcFail();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5806    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5807  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5808  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5809  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5810  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5811  ** Syntax : LOCAL_INLINE void Fee_lINSM(void)                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5812  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5813  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5814  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5815  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5816  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5817  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5818  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5819  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5820  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5821  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5822  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5823  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5824  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5825  ** Description : This function implements the Init Normal State Machine which **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5826  ** detects the resumption point of the previously interrupted GC              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5827  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5828  /* [cover parentID={DD28E5F3-C60D-4fe1-AA91-FEDA8F328CBE}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5829  Fee_lINSM
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5830  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5831  /* [cover parentID={26D9835C-70E4-4386-BEC0-83090A325B6D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5832  LOCAL_INLINE void Fee_lINSM(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5833  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5834    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5835  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5836    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5837  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5838    switch (StateDataPtr->FeeGcResumeState)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5839    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5840      /* Copy of Sector1 to Sector0 was ongoing */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5841      /* [cover parentID={9AA085C1-B3D9-418b-A6D1-8E943957F7AB}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5842      case FEE_INITGC_DATA_COPY_S1_S0:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5843      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5844        StateDataPtr->FeeCurrSectSrcAddr = FEE_DFLASH_BANK1_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5845        StateDataPtr->FeeGcSrcAddr = FEE_DFLASH_BANK1_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5846        StateDataPtr->FeeGcDestAddr = FEE_DFLASH_BANK0_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5847        StateDataPtr->FeeGcState = FEE_GC_INIT_ERASE_PREV_SECTOR;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5848  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5849        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5850      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5851  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5852      /* Copy of Sector0 to Sector1 was ongoing */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5853      /* [cover parentID={D0DC4217-A353-4f54-8ABA-4CD993CDBA68}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5854      case FEE_INITGC_DATA_COPY_S0_S1:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5855      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5856        StateDataPtr->FeeCurrSectSrcAddr = FEE_DFLASH_BANK0_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5857        StateDataPtr->FeeGcSrcAddr = FEE_DFLASH_BANK0_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5858        StateDataPtr->FeeGcDestAddr = FEE_DFLASH_BANK1_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5859        StateDataPtr->FeeGcState = FEE_GC_INIT_ERASE_PREV_SECTOR;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5860  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5861        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5862      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5863  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5864      /* Erase of Sector0 was ongoing */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5865      /* [cover parentID={9F64F421-7663-4645-B587-4FE061514367}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5866      case FEE_INITGC_ERASE_S0:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5867      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5868        StateDataPtr->FeeCurrSectSrcAddr = FEE_DFLASH_BANK1_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5869        StateDataPtr->FeeGcSrcAddr = FEE_DFLASH_BANK1_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5870        StateDataPtr->FeeGcDestAddr = FEE_DFLASH_BANK0_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5871        StateDataPtr->FeeGcState = FEE_GC_ERASE_PREV_SECTOR;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5872  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5873        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5874      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5875  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5876      /* Erase of Sector1 was ongoing */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5877      /* [cover parentID={A7D80398-2FA8-407b-B347-8AD0C0A87ACE}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5878      case FEE_INITGC_ERASE_S1:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5879      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5880        StateDataPtr->FeeCurrSectSrcAddr = FEE_DFLASH_BANK0_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5881        StateDataPtr->FeeGcSrcAddr = FEE_DFLASH_BANK0_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5882        StateDataPtr->FeeGcDestAddr = FEE_DFLASH_BANK1_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5883        StateDataPtr->FeeGcState = FEE_GC_ERASE_PREV_SECTOR;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5884  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5885        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5886      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5887      case FEE_INITGC_NORMAL_S1:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5888      case FEE_INITGC_NORMAL_S0:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5889      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5890        /* Set Garbage Collection state to Idle */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5891        StateDataPtr->FeeGcState = FEE_GC_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5892  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5893        /* Update the FeeCurrSectSrcAddr */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5894        if(StateDataPtr->FeeStatusFlags.FeeCurrSector == (uint32)FEE_SECTOR0)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5895        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5896          StateDataPtr->FeeCurrSectSrcAddr = FEE_DFLASH_BANK0_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5897        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5898        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5899        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5900          StateDataPtr->FeeCurrSectSrcAddr = FEE_DFLASH_BANK1_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5901        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5902  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5903        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5904      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5905      default:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5906      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5907        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5908      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5909    }/* End Switch */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5910  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5911    /* Mark end of initialization */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5912    StateDataPtr->FeeInitGCState = FEE_INITGC_COMPLETE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5913  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5914  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5915  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5916  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5917  ** Syntax : LOCAL_INLINE void Fee_lIPrepDFlashSM(void)                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5918  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5919  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5920  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5921  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5922  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5923  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5924  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5925  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5926  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5927  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5928  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5929  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5930  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5931  ** Description : This function implements the DFlash preparation State        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5932  ** Machine which prepares an empty DFlash                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5933  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5934  /* [cover parentID={1004EDAC-5B40-4685-BB70-EB8A98D46DCA}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5935  Fee_lIPrepDFlashSM
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5936  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5937  /* [cover parentID={73D870B5-E703-4483-BA19-3D8B223518B9}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5938  LOCAL_INLINE void Fee_lIPrepDFlashSM(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5939  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5940    const Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5941    const uint8              *BufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5942  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5943    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5944  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5945    switch(StateDataPtr->FeePrepDFLASHState)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5946    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5947      /* [cover parentID={D3C422C1-59EC-4ca5-9EC5-9336314A8733}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5948      case FEE_PREPDF_ERASE_S0:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5949      case FEE_PREPDF_ERASE_S1:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5950      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5951        Fee_lHandleErasePrepDFLASH();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5952        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5953      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5954      /* [cover parentID={19CDB8DB-4A7C-49b1-BFCC-95BB7488FB24}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5955      case FEE_PREPDF_MARK_S0_ERASED_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5956      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5957        /* Step1: Program first 120bytes of state page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5958        /* [cover parentID={50DE33D2-938D-4084-8994-BE45DB85D2AC}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5959        if (StateDataPtr->FeeIntrJobFailCount == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5960        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5961          Fee_lPrepareStatePageBuffer(FEE_SECTOR0, FEE_ERASED);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5962        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5963        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5964        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5965          /* The state page is being re-attempted after one compare failure
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5966             Clear the last 8bytes of GcReadWriteBuffer for comparison of SP */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5967          Fee_lClearMarkerBuffer();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5968        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5969        /* State page data is prepared in the first 128 pages of RWBuffer */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5970        BufferPtr = StateDataPtr->FeeGcReadWriteBuffer;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5971        Fee_lHandleWritePrepDFLASH(BufferPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5972        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5973      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5974      /* [cover parentID={20669E34-0AD9-436b-AE1F-B012AFD21B03}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5975      case FEE_PREPDF_MARK_S0_VALID_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5976      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5977        /* Step1: Program first 120bytes of state page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5978        /* [cover parentID={E8886612-C00D-4f5a-9CA7-96C33A26B1B3}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5979        if (StateDataPtr->FeeIntrJobFailCount == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5980        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5981          Fee_lPrepareStatePageBuffer(FEE_SECTOR0, FEE_VALID);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5982        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5983        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5984        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5985          /* The state page is being re-attempted after one compare failure
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5986             Clear the last 8bytes of GcReadWriteBuffer for comparison of SP */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5987          Fee_lClearMarkerBuffer();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5988        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5989        /* State page data is prepared in the first 128 pages of RWBuffer */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5990        BufferPtr = StateDataPtr->FeeGcReadWriteBuffer;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5991        Fee_lHandleWritePrepDFLASH(BufferPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5992        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5993      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5994      /* [cover parentID={A20B1E3C-C72C-4304-9BA3-75C9B830E643}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5995      case FEE_PREPDF_MARK_S1_ERASED_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5996      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5997        /* Step1: Program first 120bytes of state page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5998        /* [cover parentID={2B96281B-F722-41e1-929B-7D0CA57E7EED}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5999        if (StateDataPtr->FeeIntrJobFailCount == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6000        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6001          Fee_lPrepareStatePageBuffer(FEE_SECTOR1, FEE_ERASED);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6002        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6003        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6004        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6005          /* The state page is being re-attempted after one compare failure
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6006             Clear the last 8bytes of GcReadWriteBuffer for comparison of SP */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6007          Fee_lClearMarkerBuffer();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6008        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6009        /* State page data is prepared in the first 128 pages of RWBuffer */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6010        BufferPtr = StateDataPtr->FeeGcReadWriteBuffer;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6011        Fee_lHandleWritePrepDFLASH(BufferPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6012        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6013      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6014  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6015      case FEE_PREPDF_MARK_S0_ERASED_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6016      case FEE_PREPDF_MARK_S0_VALID_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6017      case FEE_PREPDF_MARK_S1_ERASED_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6018      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6019        /* Step1: Program marker of state page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6020        Fee_lPrepareMarkerBuffer();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6021  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6022        BufferPtr = &(StateDataPtr->FeeGcReadWriteBuffer[FEE_STATEPAGE_DATA_SIZE]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6023  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6024        Fee_lHandleWritePrepDFLASH(BufferPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6025        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6026      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6027      default:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6028    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6029      break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6030    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6031    }/* END OF SWITCH */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6032  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6033  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6034  /*CYCLOMATIC_Fee_lInitGCDSMTransHandler_JUSTIFICATION:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6035  Fee_lInitGCDSMTransHandler has to pass through many for finding the compare
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6036  failures and take the action accordingly.if it is broken into more functions,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6037  the readability will get affected.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6038  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6039  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6040  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6041  ** Syntax : LOCAL_INLINE void Fee_lInitGCDSMTransHandler(void)                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6042  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6043  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6044  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6045  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6046  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6047  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6048  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6049  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6050  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6051  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6052  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6053  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6054  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6055  ** Description : This function shall handle the transitions required by the   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6056  ** Init Dirty State Machine                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6057  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6058  /* [cover parentID={3C7A1D9A-651A-4620-A87F-9970082C0112}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6059  Fee_lInitGCDSMTransHandler
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6060  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6061  /* [cover parentID={60575D1D-3C38-45a5-8DD2-EB2D70901CC3}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6062  LOCAL_INLINE void Fee_lInitGCDSMTransHandler(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6063  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6064    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6065    Fee_SectorInfoType *SectorInfoPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6066    const uint8        *ReadWriteBuffPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6067    uint32              BankNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6068    uint32              EndAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6069    Fls_17_Dmu_AddressType     DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6070    Std_ReturnType      ReturnVal1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6071  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6072    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6073    ReturnVal1   = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6074  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6075    DestAddr = (Fls_17_Dmu_AddressType)StateDataPtr->FeeCurrSectSrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6076    /* Get the active sector number */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6077    BankNumber =  StateDataPtr->FeeStatusFlags.FeeCurrSector;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6078    SectorInfoPtr = &StateDataPtr->FeeSectorInfo[BankNumber];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6079    /* Is active sector state page dirty and being repaired?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6080       If yes - BankNumber = active sector,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6081       else - Bank Number = other sector */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6082    /* [cover parentID={B0C5AF5C-EF1C-40a4-B662-A7EA1AF92C4A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6083    if(SectorInfoPtr->Status.Dirty == (uint32)FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6084    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6085      BankNumber = BankNumber ^ FEE_SECTOR1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6086      SectorInfoPtr = &StateDataPtr->FeeSectorInfo[BankNumber];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6087    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6088    /* [cover parentID={07313A5B-1D5A-4447-A559-B607A2EDA173}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6089    switch(StateDataPtr->FeeRepairStep)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6090    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6091      case FEE_PROGRAM_MARKER:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6092      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6093        /*Do compare only if PVER is not set*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6094        /* [cover parentID={B9009F0D-519E-4bd6-A108-679C4DA08290}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6095        if(StateDataPtr->FeeProgVerErr == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6096        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6097          ReadWriteBuffPtr = StateDataPtr->FeeGcReadWriteBuffer;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6098          ReturnVal1 = Fls_17_Dmu_CompareWordsSync(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6099                         (Fls_17_Dmu_AddressType)DestAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6100                         /*MISRA2012_RULE_11_3_JUSTIFICATION:This is done for
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6101                         interfacing with FLS.FEE is passing parameters to FLS
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6102                         APIs, casting is needed to match with the Fls API
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6103                         prototype. ReadWriteBuffPtr is poiniting to FeeGcReadWriteBuffer
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6104                         which is part of Fee_StateDataType. FeeGcReadWriteBuffer is so placed to have
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6105                         4 byte alignment*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6106                         (const uint32 *)ReadWriteBuffPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6107                         (Fls_17_Dmu_LengthType)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6108                         (FEE_STATEPAGE_SIZE / FEE_DFLASH_WORD_SIZE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6109        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6110        /* Compare failed or PVR bit set. Retry the Write operation */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6111        /* [cover parentID={CDC06D9A-62E8-41eb-973F-D1A4F7E41BB0}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6112        if((ReturnVal1 == E_NOT_OK) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6113            (StateDataPtr->FeeProgVerErr == FEE_SET))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6114        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6115          /*Reset the FeeProgVerErr flag*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6116          StateDataPtr->FeeProgVerErr = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6117          /* Compare failed for the first time */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6118          /* [cover parentID={3D91AA44-6105-40a9-B676-C05229918446}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6119          if(StateDataPtr->FeeIntrJobFailCount == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6120          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6121            /* Check if there is space in the sector for state page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6122            /* [cover parentID={1F503F05-FEA2-4f5f-A277-354AEC0D55A1}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6123            if(BankNumber == FEE_SECTOR0)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6124            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6125              EndAddr = FEE_DFLASH_BANK0_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6126            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6127            else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6128            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6129              EndAddr = FEE_DFLASH_BANK1_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6130            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6131            EndAddr = EndAddr +
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6132                      (FEE_DFLASH_SECTOR_SIZE - FEE_DFLASH_WORDLINE_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6133            if (SectorInfoPtr->NextFreeWLAddr > EndAddr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6134            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6135              /* No space - skip writing State Page and proceed */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6136              /* [cover parentID={06FF5DFF-47E9-4902-84A9-772DB245CF89}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6137              SectorInfoPtr->Status.Dirty = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6138              if ((StateDataPtr->FeeSectorInfo[0].Status.Dirty ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6139                   (uint32)FEE_RESET) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6140                  (StateDataPtr->FeeSectorInfo[1].Status.Dirty ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6141                   (uint32)FEE_RESET))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6142              {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6143                /* Go to Init Normal State Machine */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6144                StateDataPtr->FeeInitGCState = FEE_INITGC_NORMAL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6145              }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6146              else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6147              {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6148                /* Other sector state page needs repair -
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6149                   remain in the same state */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6150              }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6151            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6152            else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6153            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6154              StateDataPtr->FeeIntrJobFailCount++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6155              StateDataPtr->FeeRepairStep = FEE_PROGRAM_STATEPAGE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6156            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6157          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6158          /* Compare/write failed twice - enter Fail state*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6159          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6160          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6161            /* [cover parentID={06AD3CC2-7933-4565-A240-290E287C034D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6162            Fee_lHandleInitGcFail();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6163          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6164        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6165        /* Repair successful */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6166        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6167        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6168          StateDataPtr->FeeIntrJobFailCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6169          SectorInfoPtr->Status.Dirty = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6170          /* [cover parentID={13137FE8-AAA6-487a-9077-93F999137A47}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6171          if((StateDataPtr->FeeSectorInfo[0].Status.Dirty
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6172              == (uint32)FEE_RESET) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6173              (StateDataPtr->FeeSectorInfo[1].Status.Dirty
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6174               == (uint32)FEE_RESET))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6175          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6176            /* Go to Init Normal State Machine */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6177            StateDataPtr->FeeInitGCState = FEE_INITGC_NORMAL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6178          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6179          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6180          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6181            /* Other sector state page needs repair -
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6182               remain in the same state */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6183          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6184        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6185        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6186      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6187  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6188      case FEE_PROGRAM_STATEPAGE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6189      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6190  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6191        /*Do compare only if PVER is not set*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6192        /* [cover parentID={F309CB83-9C8B-4357-BFAF-D66BD74E6277}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6193        if(StateDataPtr->FeeProgVerErr == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6194        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6195          ReadWriteBuffPtr = StateDataPtr->FeeGcReadWriteBuffer;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6196          ReturnVal1 = Fls_17_Dmu_CompareWordsSync(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6197                         (Fls_17_Dmu_AddressType)DestAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6198                         /*MISRA2012_RULE_11_3_JUSTIFICATION:This is done for
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6199                         interfacing with FLS.FEE is passing parameters to FLS
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6200                         APIs, casting is needed to match with the Fls API
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6201                         prototype. ReadWriteBuffPtr is poiniting to FeeGcReadWriteBuffer
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6202                         which is part of Fee_StateDataType. FeeGcReadWriteBuffer is so placed to have
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6203                         4 byte alignment*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6204                         (const uint32 *)ReadWriteBuffPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6205                         (Fls_17_Dmu_LengthType)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6206                         (FEE_STATEPAGE_DATA_SIZE / FEE_DFLASH_WORD_SIZE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6207        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6208        /* Check if compare failed twice or write retry failed due to PVER. If
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6209        yes then go to fail state */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6210        /* [cover parentID={587F79B9-7767-4f6d-9350-8198F440F073}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6211        if((ReturnVal1 == E_NOT_OK) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6212            ((StateDataPtr->FeeProgVerErr == FEE_SET)))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6213        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6214          /*Reset the FeeProgVerErr flag*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6215          StateDataPtr->FeeProgVerErr = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6216          Fee_lHandleInitGcFail();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6217        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6218        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6219        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6220          StateDataPtr->FeeRepairStep = FEE_PROGRAM_MARKER;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6221        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6222        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6223      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6224      default:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6225      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6226        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6227      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6228    }/* END OF SWITCH */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6229  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6230  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6231  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6232  ** Syntax : LOCAL_INLINE void Fee_lInitGCPrepDFlsTransHandler(void)           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6233  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6234  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6235  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6236  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6237  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6238  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6239  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6240  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6241  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6242  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6243  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6244  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6245  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6246  ** Description : This function shall handle the transitions required by the   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6247  ** InitGC state machine during preparation of DFlash                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6248  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6249  /* [cover parentID={B01B0434-2BE4-4779-97C8-B266F6F21AE5}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6250  Fee_lInitGCPrepDFlsTransHandler
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6251  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6252  /* [cover parentID={AC4200CB-0519-4c0c-B62A-FFC144EF249B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6253  LOCAL_INLINE void Fee_lInitGCPrepDFlsTransHandler(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6254  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6255    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6256    Fee_SectorInfoType *SectorInfoPtr0;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6257    Fee_SectorInfoType *SectorInfoPtr1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6258    const uint8              *SrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6259    uint32              DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6260    uint8               PrepDFlashState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6261    Std_ReturnType      ReturnVal1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6262  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6263    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6264    StateDataPtr->FeeUnErasableWLCountTemp = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6265    StateDataPtr->FeeUnErasableWLAddrTemp[0] = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6266    StateDataPtr->FeeUnErasableWLAddrTemp[1] = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6267    SectorInfoPtr0 = &(StateDataPtr->FeeSectorInfo[0]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6268    SectorInfoPtr1 = &(StateDataPtr->FeeSectorInfo[1]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6269  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6270    PrepDFlashState = StateDataPtr->FeePrepDFLASHState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6271    DestAddr = (Fls_17_Dmu_AddressType)(StateDataPtr->FeeCurrSectSrcAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6272    ReturnVal1 = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6273  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6274    /****** CASE FEE_PREPDF_ERASE_S0 ******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6275    /* [cover parentID={F612AD88-4E02-4da4-BD31-F21C61637D62}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6276    if (PrepDFlashState == FEE_PREPDF_ERASE_S0)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6277    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6278       PrepDFlashState = Fee_lPrepDFlashStateEraseS0();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6279    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6280  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6281    /****** CASE FEE_PREPDF_ERASE_S1 ******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6282    /* [cover parentID={F99309D0-A7FC-43b7-B798-CCB278320C75}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6283    else if (PrepDFlashState == FEE_PREPDF_ERASE_S1)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6284    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6285       PrepDFlashState = Fee_lPrepDFlashStateEraseS1();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6286    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6287  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6288    /****** All other state page program cases******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6289    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6290    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6291      /* [cover parentID={74DB593C-8BAE-4f95-B295-EFB2478CB5AE}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6292      if(StateDataPtr->FeeProgVerErr == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6293      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6294        SrcAddr = StateDataPtr->FeeGcReadWriteBuffer;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6295        ReturnVal1 = Fls_17_Dmu_CompareWordsSync(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6296                     (Fls_17_Dmu_AddressType)DestAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6297                     /*MISRA2012_RULE_11_3_JUSTIFICATION:This is done for
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6298                     interfacing with FLS.FEE is passing parameters to FLS APIs,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6299                     casting is needed to match with the Fls API prototype.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6300                     SrcAddr is poiniting to FeeGcReadWriteBuffer which is part
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6301                     of Fee_StateDataType. FeeGcReadWriteBuffer is so placed to
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6302                     have 4 byte alignment*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6303                     (const uint32 *)SrcAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6304                     (Fls_17_Dmu_LengthType)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6305                     (FEE_STATEPAGE_SIZE / FEE_DFLASH_WORD_SIZE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6306      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6307      /* Compare failed or PVER error is set.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6308      /* [cover parentID={85A5B6BE-FAA2-4066-9B79-CD13AD33FBC0}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6309      if((ReturnVal1 == E_NOT_OK) || (StateDataPtr->FeeProgVerErr == FEE_SET))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6310      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6311        StateDataPtr->FeeProgVerErr = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6312        /* Compare failed the first time */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6313        /* [cover parentID={46AA5E96-7BA6-4c39-88BD-DCC314C938BE}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6314        if(StateDataPtr->FeeIntrJobFailCount == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6315        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6316          StateDataPtr->FeeIntrJobFailCount++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6317          DestAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6318          DestAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6319          StateDataPtr->FeeCurrSectSrcAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6320  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6321          PrepDFlashState = Fee_lPrepDFlashStatepageProgram(PrepDFlashState);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6322        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6323        /* Compare failed/PVER error set twice */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6324        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6325        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6326          /* [cover parentID={7D2D003F-2D40-4f6f-9691-A9C26CCEE919}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6327          Fee_lHandleInitGcFail();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6328        } /* End of if if(StateDataPtr->FeeIntrJobFailCount == FEE_RESET) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6329      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6330      /* Compare successful */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6331      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6332      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6333        switch (PrepDFlashState)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6334        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6335          /* [cover parentID={41B14E7A-7DC8-4a11-A38A-409E311A7547}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6336          case FEE_PREPDF_MARK_S0_ERASED_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6337          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6338            PrepDFlashState = FEE_PREPDF_MARK_S0_ERASED_M;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6339            break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6340          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6341          /* [cover parentID={16C45286-A527-41b6-AF2B-17F9B402B8A0}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6342          case FEE_PREPDF_MARK_S0_ERASED_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6343          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6344            StateDataPtr->FeeIntrJobFailCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6345            DestAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6346            StateDataPtr->FeeCurrSectSrcAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6347            PrepDFlashState = FEE_PREPDF_MARK_S0_VALID_SP;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6348            break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6349          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6350          /* [cover parentID={26ABAB12-9295-416c-98D9-0D45851E7351}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6351          case FEE_PREPDF_MARK_S0_VALID_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6352          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6353            PrepDFlashState = FEE_PREPDF_MARK_S0_VALID_M;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6354            break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6355          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6356          /* [cover parentID={B9628201-EFF0-437c-BFEC-DE4B7FF809BB}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6357          case FEE_PREPDF_MARK_S0_VALID_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6358          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6359            StateDataPtr->FeeIntrJobFailCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6360            SectorInfoPtr0->StatePageAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6361            DestAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6362            StateDataPtr->FeeNextFreePageAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6363            SectorInfoPtr0->NextFreeWLAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6364            StateDataPtr->FeeCurrSectSrcAddr = FEE_DFLASH_BANK1_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6365            PrepDFlashState = FEE_PREPDF_MARK_S1_ERASED_SP;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6366            break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6367          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6368          /* [cover parentID={7CCB3F5B-D1D8-4f5b-A362-BAC416358EF3}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6369          case FEE_PREPDF_MARK_S1_ERASED_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6370          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6371            PrepDFlashState = FEE_PREPDF_MARK_S1_ERASED_M;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6372            break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6373          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6374  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6375  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6376          case FEE_PREPDF_MARK_S1_ERASED_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6377          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6378            StateDataPtr->FeeIntrJobFailCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6379            SectorInfoPtr1->StatePageAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6380            DestAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6381            SectorInfoPtr1->NextFreeWLAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6382            /* Set Garbage Collection state to Idle */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6383            StateDataPtr->FeeGcState = FEE_GC_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6384            /* Mark end of initialization */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6385            StateDataPtr->FeeInitGCState = FEE_INITGC_COMPLETE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6386            break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6387          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6388      default:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6389        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6390          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6391        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6392        }/* End of SWITCH */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6393      }/* End of if ( (ReturnVal1 == E_NOT_OK) || (ReturnVal1 == E_NOT_OK) )*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6394    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6395  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6396    StateDataPtr->FeePrepDFLASHState = PrepDFlashState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6397  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6398  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6399  /* [cover parentID={9EBA0993-888F-4fda-B392-414EE14D495D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6400  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6401  ** Syntax : static uint8 Fee_lPrepDFlashStatepageProgram(const                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6402  **            uint8 PrepDFlashStatePrm)                                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6403  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6404  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6405  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6406  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6407  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6408  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6409  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6410  ** Parameters (in) :  PrepDFlashStatePrm   : Flash state paramter             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6411  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6412  ** Parameters (out):  PrepDFlashState :  Flash state to be prepared           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6413  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6414  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6415  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6416  ** Description : This function shall handle the transitions required by the   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6417  ** InitGC state machine during preparation of DFlash                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6418  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6419  LOCAL_INLINE uint8 Fee_lPrepDFlashStatepageProgram(const uint8 PrepDFlashStatePrm)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6420  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6421      uint8 PrepDFlashState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6422  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6423      PrepDFlashState = PrepDFlashStatePrm;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6424  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6425      switch (PrepDFlashStatePrm)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6426      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6427          /* [cover parentID={2EBC8FAC-F593-4df4-A317-5DAFDA87A300}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6428          case FEE_PREPDF_MARK_S0_ERASED_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6429          case FEE_PREPDF_MARK_S0_ERASED_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6430          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6431            PrepDFlashState = FEE_PREPDF_MARK_S0_ERASED_SP;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6432            break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6433          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6434          /* [cover parentID={0BEA353D-4C72-40bb-B32C-D7BFFD635D22}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6435          case FEE_PREPDF_MARK_S0_VALID_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6436          case FEE_PREPDF_MARK_S0_VALID_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6437          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6438            PrepDFlashState = FEE_PREPDF_MARK_S0_VALID_SP;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6439            break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6440          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6441  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6442          /* [cover parentID={6ABF3EFB-ED7E-4ab6-ADF0-4613397ED2A4}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6443          case FEE_PREPDF_MARK_S1_ERASED_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6444          case FEE_PREPDF_MARK_S1_ERASED_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6445          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6446            PrepDFlashState = FEE_PREPDF_MARK_S1_ERASED_SP;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6447            break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6448          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6449          default:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6450          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6451            break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6452          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6453      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6454  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6455      return PrepDFlashState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6456  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6457  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6458  /* [cover parentID={B1E230B1-900E-460f-9C63-610F5841EDC9}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6459  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6460  ** Syntax : LOCAL_INLINE uint8 Fee_lPrepDFlashStateEraseS1(void)              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6461  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6462  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6463  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6464  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6465  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6466  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6467  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6468  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6469  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6470  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6471  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6472  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6473  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6474  ** Description : This function shall handle the transitions required by the   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6475  ** InitGC state machine during preparation of DFlash                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6476  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6477  LOCAL_INLINE uint8 Fee_lPrepDFlashStateEraseS1(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6478  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6479      uint8 PrepDFlashState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6480      Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6481      Fee_SectorInfoType *SectorInfoPtr1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6482      Std_ReturnType      ReturnVal1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6483  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6484      StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6485      PrepDFlashState = FEE_PREPDF_ERASE_S1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6486      SectorInfoPtr1 = &(StateDataPtr->FeeSectorInfo[1]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6487        /* [cover parentID={38538B0B-5327-480f-BA53-67B74AB3E20F}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6488      if(StateDataPtr->FeeEraseVerErr == FEE_SET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6489      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6490        /*Check if the erase is failed 1st time, if yes then incerement the fail
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6491        count to retry the erase operation.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6492      /* [cover parentID={2F127D16-B8D2-485e-B853-B458C48BCE10}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6493        if(StateDataPtr->FeeIntrJobFailCount != FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6494        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6495          /*Erase operation is failed 2nd time. Scan the sector for number of
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6496          failed WL. If the number is greater than 2 then raise the illegal
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6497          notification.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6498          ReturnVal1 = Fls_17_Dmu_VerifyErase(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6499                              (Fls_17_Dmu_AddressType)FEE_DFLASH_BANK1_BASE,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6500                               &(StateDataPtr->FeeUnErasableWLAddrTemp[0]),
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6501                               &(StateDataPtr->FeeUnErasableWLCountTemp));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6502  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6503          /* [cover parentID={A75968C9-7AC7-4fa9-8C1B-47C2D28BB34E}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6504          if(ReturnVal1 == E_NOT_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6505          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6506            StateDataPtr->FeeIntrJobFailCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6507            Fee_lHandleInitGcFail();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6508          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6509          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6510          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6511            SectorInfoPtr1->UnerasableWLCount =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6512            StateDataPtr->FeeUnErasableWLCountTemp;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6513            SectorInfoPtr1->UnerasableWLAddr[0] =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6514            StateDataPtr->FeeUnErasableWLAddrTemp[0];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6515            SectorInfoPtr1->UnerasableWLAddr[1] =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6516            StateDataPtr->FeeUnErasableWLAddrTemp[1];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6517            StateDataPtr->FeeCurrSectSrcAddr = FEE_DFLASH_BANK0_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6518            PrepDFlashState = FEE_PREPDF_MARK_S0_ERASED_SP;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6519            StateDataPtr->FeeIntrJobFailCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6520  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6521          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6522        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6523        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6524        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6525          StateDataPtr->FeeIntrJobFailCount++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6526        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6527        StateDataPtr->FeeEraseVerErr = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6528      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6529      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6530      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6531        SectorInfoPtr1->UnerasableWLCount =StateDataPtr->FeeUnErasableWLCountTemp;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6532        SectorInfoPtr1->UnerasableWLAddr[0] =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6533        StateDataPtr->FeeUnErasableWLAddrTemp[0];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6534        SectorInfoPtr1->UnerasableWLAddr[1] =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6535        StateDataPtr->FeeUnErasableWLAddrTemp[1];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6536        StateDataPtr->FeeCurrSectSrcAddr = FEE_DFLASH_BANK0_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6537        PrepDFlashState = FEE_PREPDF_MARK_S0_ERASED_SP;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6538        StateDataPtr->FeeIntrJobFailCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6539      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6540  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6541      return PrepDFlashState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6542  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6543  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6544  /* [cover parentID={1F5EB6BA-2608-4a65-A622-BD06BC1BB907}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6545  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6546  ** Syntax : LOCAL_INLINE uint8 Fee_lPrepDFlashStateEraseS0(void)                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6547  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6548  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6549  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6550  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6551  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6552  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6553  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6554  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6555  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6556  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6557  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6558  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6559  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6560  ** Description : This function shall handle the transitions required by the   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6561  ** InitGC state machine during preparation of DFlash                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6562  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6563  LOCAL_INLINE uint8 Fee_lPrepDFlashStateEraseS0(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6564  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6565      uint8 PrepDFlashState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6566      Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6567      Fee_SectorInfoType *SectorInfoPtr0;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6568      Std_ReturnType      ReturnVal1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6569  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6570      StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6571      PrepDFlashState = FEE_PREPDF_ERASE_S0;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6572      SectorInfoPtr0 = &(StateDataPtr->FeeSectorInfo[0]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6573    /* [cover parentID={9738B748-7899-4cf0-8813-B57C0B366D04}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6574      if(StateDataPtr->FeeEraseVerErr == FEE_SET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6575      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6576        /*Check if the erase is failed 1st time, if yes then incerement the fail
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6577        count to retry the erase operation.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6578      /* [cover parentID={FC6ABF13-68EC-4ac9-97AA-D32B6E35FC5A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6579        if(StateDataPtr->FeeIntrJobFailCount != FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6580        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6581          /*Erase operation is failed 2nd time. Scan the sector for number of
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6582          failed WL. If the number is greater than 2 then raise the illegal
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6583          notification.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6584  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6585          ReturnVal1 = Fls_17_Dmu_VerifyErase(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6586                              (Fls_17_Dmu_AddressType)FEE_DFLASH_BANK0_BASE,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6587                              &(StateDataPtr->FeeUnErasableWLAddrTemp[0]),
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6588                              &(StateDataPtr->FeeUnErasableWLCountTemp));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6589  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6590  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6591          /* [cover parentID={40B43B75-F630-4299-906A-09B1B1CE3F64}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6592          if(ReturnVal1 == E_NOT_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6593          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6594            StateDataPtr->FeeIntrJobFailCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6595            Fee_lHandleInitGcFail();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6596          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6597          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6598          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6599            SectorInfoPtr0->UnerasableWLCount =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6600            StateDataPtr->FeeUnErasableWLCountTemp;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6601            SectorInfoPtr0->UnerasableWLAddr[0] =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6602            StateDataPtr->FeeUnErasableWLAddrTemp[0];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6603            SectorInfoPtr0->UnerasableWLAddr[1] =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6604            StateDataPtr->FeeUnErasableWLAddrTemp[1];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6605            StateDataPtr->FeeCurrSectSrcAddr = FEE_DFLASH_BANK1_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6606            PrepDFlashState = FEE_PREPDF_ERASE_S1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6607            StateDataPtr->FeeIntrJobFailCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6608          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6609        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6610        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6611        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6612          StateDataPtr->FeeIntrJobFailCount++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6613        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6614  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6615        StateDataPtr->FeeEraseVerErr = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6616      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6617      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6618      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6619        SectorInfoPtr0->UnerasableWLCount =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6620        StateDataPtr->FeeUnErasableWLCountTemp;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6621        SectorInfoPtr0->UnerasableWLAddr[0] =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6622        StateDataPtr->FeeUnErasableWLAddrTemp[0];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6623        SectorInfoPtr0->UnerasableWLAddr[1] =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6624        StateDataPtr->FeeUnErasableWLAddrTemp[1];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6625        StateDataPtr->FeeCurrSectSrcAddr = FEE_DFLASH_BANK1_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6626        PrepDFlashState = FEE_PREPDF_ERASE_S1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6627        StateDataPtr->FeeIntrJobFailCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6628      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6629  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6630      return PrepDFlashState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6631  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6632  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6633  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6634  ** Syntax : LOCAL_INLINE void Fee_lInitGCTransHandler(void)                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6635  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6636  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6637  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6638  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6639  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6640  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6641  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6642  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6643  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6644  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6645  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6646  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6647  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6648  ** Description : This function shall handle the transitions required by the   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6649  ** InitGC state machine                                                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6650  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6651  /* [cover parentID={59E06514-D891-4ce0-9084-6645DC6BF67B}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6652  Fee_lInitGCTransHandler
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6653  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6654  /* [cover parentID={A839D226-A3F5-44d9-A65B-A582CBEAB7DE}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6655  LOCAL_INLINE void Fee_lInitGCTransHandler(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6656  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6657    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6658  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6659    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6660  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6661    /**********************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6662    /*                1.AYSNC STATE MACHINE TRANSITIONS                   */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6663    /**********************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6664  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6665    /* Is the Job finished i.e. Should the State machine Transition be made */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6666    /* [cover parentID={D03A18C4-30C7-4b67-B404-8C055F62A7DD}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6667    if(StateDataPtr->FeeIntrJobStatus == FEE_JOB_DONE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6668    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6669      /* If the Job has failed because of other than PVER/EVER error then go to
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6670      init GC fail state*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6671      /* [cover parentID={0A00CF8D-0C81-4a52-9DC6-855D642370C6}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6672      if((StateDataPtr->FeeIntrJobResult == FEE_JOB_FAIL) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6673          (StateDataPtr->FeeProgVerErr  == FEE_RESET) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6674          (StateDataPtr->FeeEraseVerErr == FEE_RESET))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6675      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6676        Fee_lHandleInitGcFail();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6677      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6678      /* Job has passed */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6679      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6680      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6681        /***************** CASE 2: INITGC DIRTY STATE MACHINE ****************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6682        /* [cover parentID={DEC2D77F-CFD9-4850-8FCA-41A0B18A5A13}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6683        if( StateDataPtr->FeeInitGCState == FEE_INITGC_HANDLE_DIRTY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6684        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6685          Fee_lInitGCDSMTransHandler();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6686        }/* End of FEE_INITGC_HANDLE_DIRTY */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6687  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6688  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6689        /***************** CASE 4: DFLASH PREPARATION STATE MACHINE *********/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6690        /* [cover parentID={0C9D1A24-DC9D-49d7-BB5B-11B629A7E432}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6691        if(StateDataPtr->FeeInitGCState == FEE_INITGC_PREPARE_DFLASH)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6692        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6693          Fee_lInitGCPrepDFlsTransHandler();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6694        } /* END OF IF (PREPARE_DFLASH) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6695      }/* END OF JOB PASS check */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6696      StateDataPtr->FeeIntrJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6697    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6698    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6699    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6700      /* State Transition not required as no job was requested */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6701      /* Nothing to do */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6702    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6703  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6704  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6705  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6706  ** TRACEABILITY: []                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6707  ********************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6708  ** Syntax : static void Fee_lInitGC(void)                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6709  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6710  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6711  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6712  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6713  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6714  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6715  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6716  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6717  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6718  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6719  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6720  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6721  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6722  ** Description : This function shall detect if there was any interruption in  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6723  ** the ongoing Garbage Collection procedure. If yes, then this routine shall  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6724  ** get the DFLASH contents in the normal state.                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6725  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6726  /* [cover parentID={3CA9D03E-7534-42a6-AC68-42F7510841A9},
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6727  {FB8B1E13-5374-4a91-90FE-0A9A984F338E}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6728  Fee_lInitGC
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6729  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6730  static void Fee_lInitGC(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6731  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6732    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6733  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6734    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6735  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6736    /**********************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6737    /*                1.AYSNC STATE MACHINE TRANSITIONS                   */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6738    /**********************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6739  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6740    Fee_lInitGCTransHandler();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6741  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6742    /**********************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6743    /*                       2.STATE MACHINE EXECUTION                    */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6744    /**********************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6745  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6746    /***************** CASE 1: INITGC INVALID STATE MACHINE ********************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6747    /* [cover parentID={674702C3-F543-4ada-B85E-BD04698BA3E9}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6748    INITGC INVALID STATE MACHINE
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6749    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6750    if(StateDataPtr->FeeInitGCState == FEE_INITGC_HANDLE_INVALID)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6751    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6752      /* Check if DFLASH erase is enabled. if enabled go for DFLAS preparation
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6753      with erase of DFLASH. Else go to illegal state  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6754      /* [cover parentID={919C00BA-61F4-4864-89AA-1AF91DDA5E3B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6755      if(Fee_CfgPtr->FeeEraseAllEnable == (boolean)TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6756      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6757        StateDataPtr->FeeInitGCState = FEE_INITGC_PREPARE_DFLASH;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6758        StateDataPtr->FeePrepDFLASHState = FEE_PREPDF_ERASE_S0;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6759        StateDataPtr->FeeCurrSectSrcAddr = FEE_DFLASH_BANK0_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6760        StateDataPtr->FeeStateCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6761      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6762      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6763      { /* [cover parentID={F103A7E1-60A8-41c5-9C2C-B21BC4734F0F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6764        Call the function to raise the init GC production error and illegal notification and set the FeeInitGCState to fail
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6765        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6766        /*Raise the init GC production error and illegal notification and set the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6767        FeeInitGCState to fail */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6768        Fee_lHandleInitGcFail();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6769      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6770    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6771  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6772    /***************** CASE 2: INITGC VIRGIN STATE MACHINE ********************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6773    /* [cover parentID={BC4C2A4C-AD3D-4ef5-8ACD-E63D03087D82}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6774    if(StateDataPtr->FeeInitGCState == FEE_INITGC_HANDLE_VIRGIN)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6775    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6776        #if (FEE_VIRGIN_FLASH_ILLEGAL_STATE == STD_OFF)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6777        /*set init gc state to prepare DFlash(NVM area) state. This will bring the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6778         DFLASH(NVM area) to intial state. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6779        StateDataPtr->FeeInitGCState = FEE_INITGC_PREPARE_DFLASH;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6780        #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6781        /*Raise the init GC production error and illegal notification and set the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6782        FeeInitGCState to fail */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6783      /* [cover parentID={51EC7038-DC62-4efe-8EF5-052B5EC7D6EF}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6784        Fee_lHandleInitGcFail();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6785        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6786    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6787  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6788    /***************** CASE 3: INITGC DIRTY STATE MACHINE ********************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6789    /* [cover parentID={CCF20CBE-34B4-4a34-B6BE-EAC674ACD651}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6790    if(StateDataPtr->FeeInitGCState == FEE_INITGC_HANDLE_DIRTY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6791    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6792      Fee_lIDSM();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6793    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6794  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6795    /***************** CASE 4: INITGC NORMAL STATE MACHINE *******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6796    /* [cover parentID={F746FC3D-ADF9-45a8-838B-543346FC2274}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6797    if(StateDataPtr->FeeInitGCState == FEE_INITGC_NORMAL)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6798    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6799      Fee_lINSM();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6800    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6801  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6802    /*********** CASE 5: DFLASH PREPARATION STATE MACHINE ********************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6803    /* [cover parentID={854536E0-8BBE-43b1-881A-D2241F4F6F6C}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6804    if( StateDataPtr->FeeInitGCState == FEE_INITGC_PREPARE_DFLASH)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6805    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6806      Fee_lIPrepDFlashSM();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6807    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6808  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6809  }/*End of Fee_lInitGC */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6810  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6811  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6812  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6813  ** Syntax : static void Fee_lLastPgHandler(void)                              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6814  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6815  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6816  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6817  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6818  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6819  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6820  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6821  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6822  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6823  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6824  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6825  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6826  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6827  ** Description : This routine will perform end of job handling activities     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6828  **    for Write, Invalidate requests                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6829  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6830  /* [cover parentID={FDA14D4D-6413-48bd-814D-A9C01B187D2F}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6831  static void Fee_lLastPgHandler(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6832  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6833    Fee_StateDataType           *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6834    Fee_LastWrittenBlkInfoType  *LastBlkInfoPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6835    Fee_CacheType               *BlkPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6836    const Fee_BlockType         *BlockCfgPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6837    uint32                       LWBMarkerAddress;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6838    uint32                       NextFreePageWLAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6839    uint16                       BlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6840  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6841    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6842  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6843    BlockIndex = Fee_lGetUsrBlockIndex(StateDataPtr->FeeCurrReqBlockNum);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6844    BlockCfgPtr = &(Fee_CfgPtr->FeeBlockConfigPtr[BlockIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6845    BlkPtr = &(StateDataPtr->FeeBlockInfo[BlockIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6846    /*****************   UPDATE THE CACHE TABLE *********************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6847  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6848    /* Push latest copy details of the block into Previous copy */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6849    /* Update previous copy information */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6850    BlkPtr->Status.PrevCopyValid = BlkPtr->Status.Valid;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6851    BlkPtr->Status.PrevCopyConsistent = BlkPtr->Status.Consistent;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6852    BlkPtr->Status.PrevCopyCopied = BlkPtr->Status.Copied;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6853    BlkPtr->PrevCopyAddress = BlkPtr->Address;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6854    BlkPtr->PrevBlkSize = BlkPtr->BlockSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6855  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6856    /* Update latest copy information in the cache table */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6857    BlkPtr->Address = StateDataPtr->FeeBlockStartAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6858    BlkPtr->Status.Consistent = FEE_SET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6859  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6860    /* If Invalidate request was ongoing then reset the flag */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6861    /* [cover parentID={D7989658-7F64-4399-BA5A-B3DC92B392F6}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6862    if(StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus == (uint32)FEE_SET )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6863    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6864      BlkPtr->Status.Valid = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6865    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6866    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6867    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6868      BlkPtr->Status.Valid = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6869      BlkPtr->BlockSize = BlockCfgPtr->Size;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6870    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6871  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6872    /* if Garbage Collection is pending */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6873    /* [cover parentID={2DC7321F-AB80-499a-8003-6D1BE706D305}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6874    if(StateDataPtr->FeeGcState != FEE_GC_IDLE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6875    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6876      /*Check if the block was copied as part of GC already . If yes then
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6877      copy the status .*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6878      /* [cover parentID={240E7FB0-C9DE-441c-AFEC-A34C2EFAE9A5}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6879      if((StateDataPtr->FeeGcState != FEE_GC_ERASE_PREV_SECTOR) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6880          (StateDataPtr->FeeGcState != FEE_GC_INIT_ERASE_PREV_SECTOR))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6881      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6882        /* [cover parentID={E11D6E09-25D7-4791-B2C2-F50EF1D7093E}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6883        if(BlkPtr->Status.Copied != FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6884        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6885          BlkPtr->Status.PrevCopyCopied = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6886        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6887        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6888        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6889          BlkPtr->Status.PrevCopyCopied = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6890        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6891        BlkPtr->Status.Copied = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6892        StateDataPtr->FeeStatusFlags.FeeBlkModified = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6893      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6894    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6895  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6896    /* Update Last written block information */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6897    LWBMarkerAddress = StateDataPtr->FeeNextFreePageAddr - FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6898    /* [cover parentID={82F98FC0-DF0B-4ddf-98F6-C3CD7CCF244F}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6899    NextFreePageWLAddr = Fee_lGetWLBeginning(StateDataPtr->FeeNextFreePageAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6900    if(((StateDataPtr->FeeBlockStartAddr) < NextFreePageWLAddr) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6901        (LWBMarkerAddress >= NextFreePageWLAddr))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6902    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6903      LastBlkInfoPtr = &(StateDataPtr->FeeLastWrittenBlkInfo);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6904      LastBlkInfoPtr->BlockNumber = StateDataPtr->FeeCurrReqBlockNum;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6905      LastBlkInfoPtr->PageCount = StateDataPtr->FeeBlkPageCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6906      LastBlkInfoPtr->Addr = StateDataPtr->FeeBlockStartAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6907      LastBlkInfoPtr->Status.Consistent = FEE_SET ; /*Consistent = 1 */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6908    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6909  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6910    /************** RESET/UPDATE GLOBAL VARIABLES USED *******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6911    StateDataPtr->FeePendReqStatus = FEE_PEND_PREV_NO_REQ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6912    StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6913    StateDataPtr->FeeJobResult = MEMIF_JOB_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6914    StateDataPtr->FeeUserJobFailCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6915    StateDataPtr->FeeBlkPageCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6916  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6917    /* [cover parentID={2FF25002-3BC0-4b03-9ADE-D9F5FA9DEBFC}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6918    if(StateDataPtr->FeeGcState != FEE_GC_REQUESTED)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6919    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6920      /* Call user configured job End notification */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6921      /* [cover parentID={29222515-284A-4876-AFE6-165408589006}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6922      if ( Fee_CfgPtr->FeeNvmJobEndNotification != NULL_PTR )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6923      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6924        /* [cover parentID={008484B1-69EE-4726-93C3-2E367C5D61FB}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6925        Call the notification function
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6926        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6927        (Fee_CfgPtr->FeeNvmJobEndNotification)();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6928      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6929    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6930    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6931    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6932      /* Call user configured job End notification */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6933      /* [cover parentID={0D017210-7BF0-4e7d-9552-D778AE29D882}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6934      if ( Fee_CfgPtr->FeeNvmJobEndNotification != NULL_PTR )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6935      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6936        /* [cover parentID={4D8817D5-A123-46ff-A686-B0FA4DB492AB}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6937        Call the notification function
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6938        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6939        (Fee_CfgPtr->FeeNvmJobEndNotification)();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6940      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6941      StateDataPtr->FeeGCImmBlkWrite = FALSE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6942      StateDataPtr->FeeMainJob = FEE_MAIN_GC;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6943    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6944  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6945  }/* End of Fee_lLastPgHandler */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6946  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6947  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6948  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6949  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6950  ** Syntax : LOCAL_INLINE void Fee_lPrepareInvldReqBuff(                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6951  **                                          const uint32 BlockCycleCount,     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6952  **                                          uint8 * const ReadWriteBuffPtr    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6953  **                                                    )                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6954  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6955  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6956  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6957  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6958  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6959  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6960  ** Parameters (in) :  BlockCycleCount : Block cycle count of block to be      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6961  **                                      written                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6962  **                    ReadWriteBuffPtr : Buffer pointer used for invalidate   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6963  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6964  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6965  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6966  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6967  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6968  ** Description : This routine will fill the read/write buffer with data       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6969  ** for invalidation.                                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6970  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6971  /* [cover parentID={100AB608-E42C-4be6-B6E3-97187A4EC311}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6972  LOCAL_INLINE void Fee_lPrepareInvldReqBuff(const uint32 BlockCycleCount,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6973      uint8 * const ReadWriteBuffPtr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6974  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6975    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6976    uint16                 BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6977    uint32                 NewBlockCycleCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6978  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6979    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6980  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6981    BlockNumber = StateDataPtr->FeePendReqInfo.BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6982    StateDataPtr->FeeCurrReqBlockNum = BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6983    NewBlockCycleCount = BlockCycleCount + FEE_ONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6984  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6985    /* Compose the write buffer with page ID and other details */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6986    /* [cover parentID={B8375F4E-0ACD-491b-9949-3A32A5696C26}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6987    if(StateDataPtr->FeeBlkPageCount == FEE_BLOCK_HDR_PAGE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6988    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6989      /* First Page write */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6990      *(ReadWriteBuffPtr)  = FEE_DATA_FIRST_PAGE_ID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6991      ReadWriteBuffPtr[1U] = (uint8)(BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6992      ReadWriteBuffPtr[2U] = (uint8)(BlockNumber >> FEE_EIGHT);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6993      ReadWriteBuffPtr[3U] = (uint8)(NewBlockCycleCount);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6994      ReadWriteBuffPtr[4U] = (uint8)(NewBlockCycleCount >> FEE_EIGHT);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6995      ReadWriteBuffPtr[5U] = (uint8)(NewBlockCycleCount >> FEE_SIXTEEN);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6996      ReadWriteBuffPtr[6U] = FEE_INVALID_BLOCK_LEN; /* Page length = 1 */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6997      /* Page length = 1, Valid bit zero */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6998      ReadWriteBuffPtr[7U] = FEE_INVALID_BLOCK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6999  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7000      StateDataPtr->FeeBlkPageCount = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7001    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7002    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7003    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7004      *(ReadWriteBuffPtr)  = FEE_DATA_MARKER_PAGE_ID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7005      ReadWriteBuffPtr[1U] = FEE_DP_MARKER_BYTE_2;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7006      ReadWriteBuffPtr[2U] = FEE_DP_MARKER_BYTE_3;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7007      ReadWriteBuffPtr[3U] = FEE_DP_MARKER_BYTE_4;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7008      ReadWriteBuffPtr[4U] = (uint8)(BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7009      ReadWriteBuffPtr[5U] = (uint8)(BlockNumber >> FEE_EIGHT);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7010      /* Page length = 1, Valid bit zero */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7011      ReadWriteBuffPtr[6U] = FEE_INVALID_BLOCK_LEN;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7012      ReadWriteBuffPtr[7U] = FEE_INVALID_BLOCK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7013  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7014      StateDataPtr->FeeBlkPageCount = FEE_INVALID_BLOCK_PAGES;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7015    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7016    StateDataPtr->FeeReadLen = FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7017    StateDataPtr->FeePendReqStatus = FEE_PEND_PREV_COMPARE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7018  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7019  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7020  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7021  ** TRACEABILITY: []                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7022  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7023  ** Syntax : LOCAL_INLINE void Fee_lPrepareWriteReqBuff                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7024  **                                        (                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7025  **                                           const uint32 BlockCycleCount,    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7026  **                                           uint8 * const ReadWriteBuffPtr   **                                           
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7027  **                                           const uint16 BlockSize           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7028  **                                        )                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7029  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7030  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7031  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7032  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7033  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7034  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7035  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7036  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7037  ** Parameters (in) :  BlockCycleCount : Blk count of block to be written      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7038  **                    ReadWriteBuffPtr : Buffer Pointer to be filled for write**
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7039  **                    BlockSize : Size of the block to be written             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7040  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7041  ** Parameters (in-out) :None                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7042  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7043  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7044  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7045  ** Description : This routine will fill the read write buffer with data       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7046  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7047  /* [cover parentID={1B0BEFCC-11AD-4518-BD83-ED8489F3E535},
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7048  {4CB52C85-7505-48aa-A652-ED1E1CB18AF9}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7049  Fee_lPrepareWriteReqBuff
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7050  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7051  /* [cover parentID={241ED9EB-A2AE-4e9c-A3D8-34A2F24EA38C}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7052  LOCAL_INLINE void Fee_lPrepareWriteReqBuff(const uint32 BlockCycleCount,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7053      uint8 * const ReadWriteBuffPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7054      const uint16 BlockSize)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7055  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7056    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7057    const uint8           *DataBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7058    Fee_PageType           BlockPages_1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7059    uint16                 DataByteCnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7060    uint16                 BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7061    uint8                  EndOfWLReached;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7062    uint32                 NewBlockCycleCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7063  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7064    EndOfWLReached = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7065    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7066    BlockNumber = StateDataPtr->FeePendReqInfo.BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7067    DataBufferPtr =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7068      ( const uint8*)StateDataPtr->FeePendReqInfo.DataWriteBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7069  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7070    NewBlockCycleCount = BlockCycleCount + FEE_ONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7071    BlockPages_1 = Fee_lGetDFLASHPages(BlockSize) - FEE_ONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7072    /* Update the block number */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7073    StateDataPtr->FeeCurrReqBlockNum = BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7074  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7075    /* Compose the write buffer with page ID and other details */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7076    if(StateDataPtr->FeeBlkPageCount == BlockPages_1)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7077    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7078  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7079      *(ReadWriteBuffPtr)  = FEE_DATA_MARKER_PAGE_ID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7080      ReadWriteBuffPtr[1U] = FEE_DP_MARKER_BYTE_2;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7081      ReadWriteBuffPtr[2U] = FEE_DP_MARKER_BYTE_3;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7082      ReadWriteBuffPtr[3U] = FEE_DP_MARKER_BYTE_4;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7083      ReadWriteBuffPtr[4U] = (uint8)(BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7084      ReadWriteBuffPtr[5U] = (uint8)(BlockNumber >> FEE_EIGHT);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7085      ReadWriteBuffPtr[6U] = (uint8)(BlockPages_1);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7086      ReadWriteBuffPtr[7U] = (uint8)((BlockPages_1 >> FEE_EIGHT)|(FEE_VALID_BIT));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7087  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7088      StateDataPtr->FeeBlkPageCount++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7089  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7090      StateDataPtr->FeePendReqStatus = FEE_PEND_PREV_COMPARE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7091      StateDataPtr->FeeReadLen = FEE_PAGE1_DATA_OFFSET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7092    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7093    /* [cover parentID={9459F9E8-6304-41c4-87E7-0C5758577660}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7094    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7095    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7096      /* [cover parentID={C1C93D01-5429-4ef5-81B8-A417FB69449B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7097      if(StateDataPtr->FeeBlkPageCount == FEE_BLOCK_HDR_PAGE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7098      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7099        /* First Page write */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7100        *(ReadWriteBuffPtr)  = FEE_DATA_FIRST_PAGE_ID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7101        ReadWriteBuffPtr[1U] = (uint8)(BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7102        ReadWriteBuffPtr[2U] = (uint8)(BlockNumber >> FEE_EIGHT);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7103        ReadWriteBuffPtr[3U] = (uint8)(NewBlockCycleCount);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7104        ReadWriteBuffPtr[4U] = (uint8)(NewBlockCycleCount >> FEE_EIGHT);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7105        ReadWriteBuffPtr[5U] = (uint8)(NewBlockCycleCount >> FEE_SIXTEEN);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7106        ReadWriteBuffPtr[6U] = (uint8)(BlockPages_1);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7107        ReadWriteBuffPtr[7U] = (uint8)((BlockPages_1 >> FEE_EIGHT) |
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7108                                       (FEE_VALID_BIT));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7109  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7110        StateDataPtr->FeeReadLen = FEE_PAGE1_DATA_OFFSET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7111       
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7112  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7113        StateDataPtr->FeeBlkPageCount++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7114  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7115        /* [cover parentID={8EDBB843-4460-4734-8BBE-3826D25B4341}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7116        if(Fee_lIsWLBeginning(StateDataPtr->FeeNextFreePageAddr +
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7117                              StateDataPtr->FeeReadLen) ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7118            FEE_NEW_WL_BEGIN)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7119        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7120          EndOfWLReached = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7121          StateDataPtr->FeePendReqStatus = FEE_PEND_PREV_COMPARE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7122  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7123        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7124      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7125      /* [cover parentID={A550120B-D0E4-461f-9980-D00046D4B264}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7126      if (EndOfWLReached == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7127      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7128        /* Add data to the write buffer from the user specified pointer */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7129        DataByteCnt = StateDataPtr->FeeReadLen;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7130        /* [cover parentID={0BE32163-AEE0-4224-8051-0CE2DDAE6C7B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7131        do
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7132        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7133          if((StateDataPtr->FeeReadLen & FEE_SEVEN) == FEE_DATA_NEXT_PAGE_ID_POS)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7134          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7135            ReadWriteBuffPtr[StateDataPtr->FeeReadLen] = FEE_DATA_NEXT_PAGE_ID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7136  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7137            StateDataPtr->FeeBlkPageCount++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7138            StateDataPtr->FeeReadLen++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7139          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7140          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7141          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7142  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7143            ReadWriteBuffPtr[StateDataPtr->FeeReadLen] = *(DataBufferPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7144            StateDataPtr->FeeReadLen++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7145  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7146            DataBufferPtr++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7147            StateDataPtr->FeeUserWriteBytesCount++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7148          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7149        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7150        while((Fee_lIsWLBeginning(StateDataPtr->FeeNextFreePageAddr +
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7151                                 StateDataPtr->FeeReadLen) != FEE_NEW_WL_BEGIN) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7152              (StateDataPtr->FeeUserWriteBytesCount != BlockSize) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7153              ((StateDataPtr->FeeReadLen - DataByteCnt) <
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7154               (uint16)(FEE_WRITE_LEN_MAX)));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7155  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7156  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7157        /* If this is the last page being written for the write request */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7158        /* [cover parentID={B10E65D8-F7EB-4e65-A731-36FA2C239091}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7159        if(StateDataPtr->FeeUserWriteBytesCount == BlockSize)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7160        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7161          /* If there is a scope for stuff bits(all-one) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7162          while((StateDataPtr->FeeReadLen & FEE_SEVEN) != FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7163          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7164            ReadWriteBuffPtr[StateDataPtr->FeeReadLen] = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7165            StateDataPtr->FeeReadLen++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7166          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7167          StateDataPtr->FeePendReqStatus = FEE_PEND_PREV_COMPARE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7168  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7169        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7170        /* [cover parentID={FACC9599-C1F2-46b9-B787-AE18A003E515}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7171        /* If this is beginning of next word line */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7172        else if(Fee_lIsWLBeginning(StateDataPtr->FeeNextFreePageAddr +
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7173                                   StateDataPtr->FeeReadLen) == FEE_NEW_WL_BEGIN)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7174        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7175          StateDataPtr->FeePendReqStatus = FEE_PEND_PREV_COMPARE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7176        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7177        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7178        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7179          /* dummy else to avoid MISRA */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7180        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7181  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7182        /* Store the request parameters in last request buffer */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7183        StateDataPtr->FeePendReqInfo.DataWriteBufferPtr = DataBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7184      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7185    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7186  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7187  } /* End of User Write req handling */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7188  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7189  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7190  ** Syntax : LOCAL_INLINE Std_ReturnType Fee_lCheckBlkCycleCnt(                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7191  **                                      const Fee_BlockType *const BlockPtr   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7192  **                                            const uint32 BlockCycleCount)   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7193  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7194  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7195  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7196  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7197  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7198  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7199  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7200  ** Parameters (in) :  BlockPtr                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7201  **                    BlockCycleCount                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7202  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7203  ** Parameters (out):  Std_ReturnType                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7204  **                    E_NOT_OK: Block cycle count is reached to maximum limit **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7205  **                    E_OK    : Block cycle count is within limit.            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7206  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7207  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7208  ** Description : This routine checks if the block cycle count of the          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7209  ** requested user block has reached the configured maximum                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7210  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7211  /* [cover parentID={DAFD79A1-E9B4-4d56-9946-D50BD4A3F8DB}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7212  LOCAL_INLINE Std_ReturnType Fee_lCheckBlkCycleCnt(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7213    const Fee_BlockType *const BlockPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7214    const uint32 BlockCycleCount)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7215  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7216    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7217    uint32                 CycleCountCfg;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7218    Std_ReturnType         RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7219  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7220    RetVal = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7221    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7222    CycleCountCfg = BlockPtr->CycleCountLimit;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7223  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7224    /* If the cycle count limit is reached then
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7225       report FEE_E_WRITE_CYCLES_EXHAUSTED to Mcal_Wrapper  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7226    /* [cover parentID={FC4D2713-95A5-4f66-B103-31690AFDD27E}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7227    if( (CycleCountCfg != FEE_RESET) && (BlockCycleCount == CycleCountCfg ))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7228    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7229      /* [cover parentID={C316CEB1-87D8-4ba9-8419-77E9B94918D2}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7230      production error enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7231      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7232      #if (FEE_WRITE_CYCLES_DEM_REPORT == FEE_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7233  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7234      /* [cover parentID={80CD3675-1B2C-4a5f-A60A-86B40CA8B370}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7235      Report production error to Mcal_Wrapper FEE_E_WRITE_CYCLES_EXHAUSTED
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7236      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7237      Fee_lReportDemError(FEE_E_WRITE_CYCLES_EXHAUSTED,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7238                            DEM_EVENT_STATUS_FAILED);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7239      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7240  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7241      StateDataPtr->FeeJobResult = MEMIF_JOB_FAILED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7242      StateDataPtr->FeePendReqStatus = FEE_PEND_PREV_NO_REQ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7243  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7244      /* Clear the DFLASH access for FEE */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7245      /* [cover parentID={D0D244C8-F795-490b-A532-D2D5165BC7D8}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7246      if ( Fee_CfgPtr->FeeNvmJobErrorNotification != NULL_PTR )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7247      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7248        /* [cover parentID={4A35611F-D07E-4e52-9B13-943732082C3C}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7249        Call the NVM job error notification function
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7250        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7251        (Fee_CfgPtr->FeeNvmJobErrorNotification)();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7252      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7253      RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7254    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7255  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7256    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7257  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7258  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7259  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7260  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7261  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7262  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7263  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7264  ** Syntax : LOCAL_INLINE void Fee_lHandleUserWriteReq(                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7265  **                                               const uint16 UserBlockIndex) **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7266  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7267  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7268  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7269  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7270  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7271  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7272  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7273  ** Parameters (in) :  UserBlockIndex: Index of the requested block            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7274  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7275  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7276  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7277  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7278  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7279  ** Description : This routine handles the functionality of FEE_REQ_NORM_WRITE **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7280  ** / FEE_REQ_IMM_WRITE state of Write state machine                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7281  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7282  /* [cover parentID={3EF461A0-15EA-49ab-BA51-261710510A5F}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7283  LOCAL_INLINE void Fee_lHandleUserWriteReq(const uint16 UserBlockIndex)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7284  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7285    Fee_StateDataType           *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7286    const Fee_BlockType         *BlockPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7287    uint8                       *PendReqStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7288    Fee_LastWrittenBlkInfoType  *LastWrittenBlkPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7289    uint32                       BlockCycleCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7290    uint32                       DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7291    uint32                       TempAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7292    uint32                       Index;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7293    uint16                       Offset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7294    Fls_17_Dmu_LengthType               Length;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7295    Std_ReturnType               ReturnValue;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7296  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7297    BlockCycleCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7298    ReturnValue = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7299    Length = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7300    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7301  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7302    BlockPtr = &(Fee_CfgPtr->FeeBlockConfigPtr[UserBlockIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7303    PendReqStatePtr = &(StateDataPtr->FeePendReqStatus);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7304    LastWrittenBlkPtr = &(StateDataPtr->FeeLastWrittenBlkInfo);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7305    /* [cover parentID={09EE167F-32F7-4911-BB47-A610CD12C57A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7306    if(StateDataPtr->FeeReadLen == (uint16)FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7307    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7308      /* Read block cycle count */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7309      /* [cover parentID={48037144-96F6-48c4-82E6-6E37BEA20C5B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7310      if (StateDataPtr->FeeBlockInfo[UserBlockIndex].Address != FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7311      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7312        /* [cover parentID={EA1567CC-22C3-436a-BEE2-5A97E1D3EBC8}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7313        Get block cycle count
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7314        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7315        BlockCycleCount = Fee_lGetBlkCycleCount(UserBlockIndex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7316      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7317      /* [cover parentID={FFA81AE1-FFA8-4d8a-9867-773A52F73EAF}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7318      Check if block cycle count has reached the maximum and update flag status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7319      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7320      /* Check if Block Cycle Count has reached the maximum */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7321      if (StateDataPtr->FeeUserJobFailCount == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7322      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7323        ReturnValue = Fee_lCheckBlkCycleCnt(BlockPtr, BlockCycleCount);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7324      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7325  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7326      if (ReturnValue != E_NOT_OK) /* If block cycle count not exceeded */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7327      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7328        /* Check if request can be performed */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7329        /* [cover parentID={56FABAEF-5181-47ea-98F9-29770EE74C82}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7330        ReturnValue = Fee_lPerformWriteCheck(BlockPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7331      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7332    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7333    /* If write is to be started */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7334    /* [cover parentID={2EFA81C3-4F2B-4750-BA12-669587CAE019}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7335    if( ReturnValue == E_OK )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7336    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7337      DestAddr = StateDataPtr->FeeNextFreePageAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7338  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7339      /* If it is not a new word line and if previous data is consistent */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7340      /* [cover parentID={EF544599-84AE-4df9-B72D-4449BECD2B32}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7341      /* [cover parentID={D539E12A-63F2-4c1f-B256-3A0BEBD12C12}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7342      if(Fee_lIsWLBeginning(DestAddr) != FEE_NEW_WL_BEGIN)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7343      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7344        /* Read the previous page content to LastWrittenBlkBuff.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7345        This is used for comparison after the 1st page of current block is
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7346        written */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7347        TempAddr = Fee_lGetWLBeginning(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7348        Length = (Fls_17_Dmu_LengthType)(DestAddr & FEE_DFLASH_WORDLINE_SIZE_1);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7349        Length -= StateDataPtr->FeeReadLen;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7350        /* [cover parentID={1402DC46-326C-4a34-AE60-D35D526846F4}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7351        if(Length > FEE_WRITE_LEN_MAX)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7352        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7353          Length = FEE_WRITE_LEN_MAX;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7354        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7355        /* [cover parentID={AA28DC12-FB68-4ece-BCB0-8EDF2704CC23}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7356        if(Length != (Fls_17_Dmu_LengthType)FEE_ZERO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7357        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7358          TempAddr += StateDataPtr->FeeReadLen;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7359  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7360          /*MISRA2012_RULE_11_3_JUSTIFICATION:This is done for interfacing with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7361          FLS.FEE is passing parameters to FLS APIs, casting is needed to match
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7362          with the Fls API prototype. FeeLastWrittenBlkBuffer is member of
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7363          Fee_StateDataType structure. FeeLastWrittenBlkBuffer is 4 byte aligned*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7364          ReturnValue = Fls_17_Dmu_ReadWordsSync( \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7365                              (Fls_17_Dmu_AddressType)TempAddr, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7366                              (uint32 *)(&(StateDataPtr->FeeLastWrittenBlkBuffer[\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7367                                  StateDataPtr->FeeReadLen])), \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7368                              Length / FEE_DFLASH_WORD_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7369  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7370          /* [cover parentID={4CF0031D-6848-439b-8E8C-89B1D125606A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7371          if(ReturnValue == E_NOT_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7372          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7373            StateDataPtr->FeeReadLen = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7374            Length = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7375            /* Since reading of already written data in WL has failed,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7376            Update the information related to last written block(s)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7377            and update DestAddr to next WL */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7378            LastWrittenBlkPtr->Status.Consistent = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7379            LastWrittenBlkPtr->BlockNumber = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7380            StateDataPtr->FeeWLAffectedType = FEE_LWB_NOT_AFFECTED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7381            DestAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7382            while (Fee_lIsUnerasableAddr(DestAddr) == TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7383            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7384  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7385              DestAddr += (FEE_DFLASH_WORDLINE_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7386            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7387          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7388          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7389          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7390  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7391            Offset = (uint16)(Length);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7392            Offset += StateDataPtr->FeeReadLen;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7393            /* Copy FeeLastWrittenBlkBuffer to ReadWriteBuffer
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7394               for WL compare after first page write */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7395            for(Index = StateDataPtr->FeeReadLen; Index < Offset; Index++)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7396            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7397              StateDataPtr->FeeReadWriteBuffer[Index] =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7398                StateDataPtr->FeeLastWrittenBlkBuffer[Index];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7399            } /* End of for(Index =0... */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7400            StateDataPtr->FeeReadLen += (uint16)(Length);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7401          } /* end of if(ReturnValue == E_NOT_OK) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7402        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7403        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7404        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7405          /*Check if any last written block is spanning across the WL*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7406          /* [cover parentID={0C896D5C-0651-4d9b-9022-46C2CA636B24}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7407          if(LastWrittenBlkPtr->Status.Consistent == FEE_SET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7408          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7409            StateDataPtr->FeeWLAffectedType = FEE_LWB_ACROSS_WL_AFFECTED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7410          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7411          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7412          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7413            StateDataPtr->FeeWLAffectedType = FEE_LWB_WITHIN_WL_AFFECTED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7414          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7415        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7416      } /* end of if ( (Fee_lIsWLBeginning(DestAddr) != FEE_ZERO).. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7417      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7418      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7419        /* This is the beginning of WL and in case WL failure happens, re-write
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7420        the user requested block as there are no blocks written in this WL */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7421        StateDataPtr->FeeWLAffectedType = FEE_LWB_NOT_AFFECTED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7422      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7423  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7424  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7425      /* initialize variables */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7426      /* [cover parentID={7601EC1D-16D9-45ba-8F67-0BA8C0AC9A96}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7427      if(Length == (Fls_17_Dmu_LengthType)FEE_ZERO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7428      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7429        StateDataPtr->FeeReadLen = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7430        StateDataPtr->FeeBlkPageCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7431        StateDataPtr->FeeUserWriteBytesCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7432        StateDataPtr->FeeBlockStartAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7433        StateDataPtr->FeeNextFreePageAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7434        *PendReqStatePtr = FEE_PEND_PREV_WRITE_REQ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7435      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7436    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7437  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7438  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7439  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7440  ** Syntax : LOCAL_INLINE void Fee_lHandleUserWriteCompare                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7441  **                                             (const uint16 UserBlockIndex)  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7442  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7443  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7444  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7445  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7446  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7447  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7448  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7449  ** Parameters (in) :  UserBlockIndex: Index of the requested block            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7450  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7451  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7452  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7453  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7454  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7455  ** Description : This routine handles the functionality of                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7456  ** FEE_PEND_PREV_COMPARE state of Write state machine                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7457  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7458  /* [cover parentID={60E2D8CA-6998-4e0c-8EC0-B8D4D8CDE0FB}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7459  LOCAL_INLINE void Fee_lHandleUserWriteCompare(const uint16 UserBlockIndex)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7460  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7461    Fee_StateDataType           *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7462    uint8                       *PendReqStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7463    const Fee_BlockType         *BlockPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7464    const Fee_LastWrittenBlkInfoType  *LastWrittenBlkPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7465    uint32                       DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7466    uint32                       TempAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7467    Fls_17_Dmu_LengthType               CompareLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7468    Fls_17_Dmu_LengthType               TmpCompareLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7469    Std_ReturnType               ReturnValueFls;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7470    uint8                        Error;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7471  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7472    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7473    ReturnValueFls = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7474  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7475    BlockPtr = &(Fee_CfgPtr->FeeBlockConfigPtr[UserBlockIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7476    LastWrittenBlkPtr = &(StateDataPtr->FeeLastWrittenBlkInfo);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7477    PendReqStatePtr = &(StateDataPtr->FeePendReqStatus);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7478  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7479    DestAddr = StateDataPtr->FeeNextFreePageAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7480    /* Compare entire WL content */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7481    TempAddr = Fee_lGetWLBeginning(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7482    CompareLength = DestAddr - TempAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7483    CompareLength += StateDataPtr->FeeLastWriteSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7484    TmpCompareLength = CompareLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7485    CompareLength -=  StateDataPtr->FeeComparedLen;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7486    /* [cover parentID={0B2024C2-FFF1-448e-9124-3FF903A192CF}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7487    if(CompareLength > FEE_COMPARE_LEN_MAX)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7488    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7489      /* [cover parentID={1FF97F07-FEAA-44f8-9B78-29163F0AB006}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7490      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7491      CompareLength = FEE_COMPARE_LEN_MAX;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7492    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7493  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7494    /* [cover parentID={94D06135-13B2-4475-83AD-1E42EB898E3A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7495    if(StateDataPtr->FeeProgVerErr == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7496    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7497      /* [cover parentID={AF63CF49-94DA-4341-BB21-D6CA84E6950F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7498      Check if the state page marker reprogrammed correctly by comparing marker
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7499      written in a Flash with the intended marker value
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7500      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7501      /*MISRA2012_RULE_11_3_JUSTIFICATION:This is done for interfacing with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7502      FLS.FEE is passing parameters to FLS APIs, casting is needed to match with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7503      the Fls API prototype. FeeReadWriteBuffer is member of
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7504          Fee_StateDataType structure. FeeReadWriteBuffer is 4 byte aligned*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7505      ReturnValueFls = Fls_17_Dmu_CompareWordsSync(\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7506                       (Fls_17_Dmu_AddressType)(TempAddr + \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7507                           StateDataPtr->FeeComparedLen), \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7508                       (uint32 *)(&(StateDataPtr->FeeReadWriteBuffer\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7509                                    [StateDataPtr->FeeComparedLen])), \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7510                       (Fls_17_Dmu_LengthType)\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7511                       (CompareLength / FEE_DFLASH_WORD_SIZE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7512  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7513      StateDataPtr->FeeComparedLen += (uint16)CompareLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7514    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7515    /* Compare failed or PVER error set */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7516    /* [cover parentID={1F44BF10-7E64-4a0c-99BD-F10D029A579A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7517    if((ReturnValueFls == E_NOT_OK) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7518        (StateDataPtr->FeeProgVerErr == FEE_SET))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7519    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7520      StateDataPtr->FeeComparedLen = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7521      /*Reset the FeeProgVerErr flag*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7522      StateDataPtr->FeeProgVerErr = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7523      /* Compare failed /PVER error set  first time */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7524      /* [cover parentID={FFFD9497-B22F-4607-93D3-F2DCBBEA5DA2}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7525      if(StateDataPtr->FeeUserJobFailCount == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7526      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7527        StateDataPtr->FeeUserJobFailCount++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7528        StateDataPtr->FeeWriteAffectedAddr = StateDataPtr->FeeBlockStartAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7529        /*Switch to next to next free WL*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7530        TempAddr  = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7531        TempAddr += FEE_DFLASH_WORDLINE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7532        StateDataPtr->FeeNextFreePageAddr = TempAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7533        /* Point to the start of the user data buffer to re-write user block */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7534        /*MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7535              array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7536              Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7537              The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7538        StateDataPtr->FeePendReqInfo.DataWriteBufferPtr -=
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7539          StateDataPtr->FeeUserWriteBytesCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7540        /* Last Written Block affected? */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7541        /* [cover parentID={C6CD376B-B9A9-4602-AA46-B82AB052C42D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7542        if((Fee_lIsBlockAcrossWLLatest() == TRUE) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7543           (StateDataPtr->FeeWLAffectedType == FEE_LWB_ACROSS_WL_AFFECTED))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7544        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7545          /* One of the affected block spanning across the WL is the latest copy
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7546          of that block, Hence update the block info with the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7547          last written block info*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7548          StateDataPtr->FeeCurrSectSrcAddr = LastWrittenBlkPtr->Addr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7549          StateDataPtr->FeeCurrReqBlockNum = LastWrittenBlkPtr->BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7550          /* Initialize variables for next write operation */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7551          StateDataPtr->FeeBlkPageCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7552          StateDataPtr->FeeBlockStartAddr = TempAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7553          /* Move to Internal read */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7554          *PendReqStatePtr = FEE_PEND_INTR_READ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7555        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7556        /* [cover parentID={3A817C7F-7285-4849-8652-0DC1A7A3426E}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7557        else if((Fee_lIsLastWrittenWLAffected(FEE_ZERO) == (boolean)TRUE)&&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7558               (StateDataPtr->FeeWLAffectedType == FEE_LWB_WITHIN_WL_AFFECTED))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7559        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7560          /* None of the affected block is spanning across the WL */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7561          StateDataPtr->FeeBlkPageCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7562          StateDataPtr->FeeBlockStartAddr = TempAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7563          /* Move to Internal read */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7564          *PendReqStatePtr = FEE_PEND_INTR_READ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7565        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7566        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7567        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7568          /* No blocks are are affected,re-write the current requested
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7569          block */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7570          Fee_lRegisterWriteRequest(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7571            StateDataPtr->FeePendReqInfo.DataWriteBufferPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7572            BlockPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7573        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7574      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7575      /* Compare failed / PVER error set twice */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7576      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7577      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7578        /* Update Next Free Page Address to next to next free WL*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7579        StateDataPtr->FeeNextFreePageAddr  = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7580        StateDataPtr->FeeNextFreePageAddr += FEE_DFLASH_WORDLINE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7581  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7582        /* Handle job failure: Raise production and Job error notification */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7583        /* [cover parentID={1DFD1B0A-3A7C-4f88-9DD2-5F9D468E6500}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7584        if(StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7585            == (uint32)FEE_SET )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7586        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7587          StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7588          Error = FEE_INVALIDATE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7589        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7590        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7591        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7592          Error = FEE_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7593        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7594        Fee_lHandleUsrJobFailure(Error); /* production & Job Error Notification */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7595      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7596    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7597    /* Compare Successful */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7598    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7599    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7600      /* [cover parentID={98068028-7246-443d-ABEF-98342E2E3F2E}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7601      if(StateDataPtr->FeeComparedLen == TmpCompareLength)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7602      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7603        StateDataPtr->FeeComparedLen = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7604        StateDataPtr->FeeNextFreePageAddr += StateDataPtr->FeeLastWriteSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7605        /* Is it Invalidate request? */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7606        /* [cover parentID={B3FAAE67-8063-464a-AD95-D09B1D4CA590}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7607        if((StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7608            == (uint32)FEE_SET ) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7609            (StateDataPtr->FeeBlkPageCount == FEE_INVALID_BLOCK_PAGES))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7610        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7611          Fee_lLastPgHandler();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7612        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7613        /* Write request - All pages written? */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7614        /* [cover parentID={E185BD07-9EEE-4ac8-8B25-143F6AF9E627}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7615        else if(StateDataPtr->FeeBlkPageCount ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7616                Fee_lGetDFLASHPages((uint16)(BlockPtr->Size)))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7617        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7618          Fee_lLastPgHandler();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7619        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7620        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7621        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7622          *PendReqStatePtr = FEE_PEND_PREV_WRITE_REQ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7623        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7624      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7625    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7626  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7627  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7628  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7629  ** Syntax : static boolean Fee_lIsLastWrittenWLAffected(                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7630  **                                                const uint16 StartOffset)   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7631  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7632  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7633  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7634  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7635  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7636  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7637  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7638  ** Parameters (in) :  StartOffset - Offset                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7639  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7640  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7641  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7642  ** Return value    :  boolean                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7643  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7644  ** Description : This function checks if the last written word-line is        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7645  **               affected                                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7646  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7647  /* [cover parentID={9AC1A68D-AA73-4b65-B7DE-72EBC2DCB4DC}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7648  static boolean Fee_lIsLastWrittenWLAffected(const uint16 StartOffset)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7649  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7650    const Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7651    const uint8              *LWBBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7652    uint32              WLAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7653    uint16              EndOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7654    uint16              BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7655    boolean             RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7656    uint16              NewStartOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7657  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7658    RetVal = (boolean)FALSE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7659    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7660    LWBBufferPtr = &(StateDataPtr->FeeLastWrittenBlkBuffer[0]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7661    EndOffset = (uint16)((StateDataPtr->FeeWriteAffectedAddr) &
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7662                         FEE_DFLASH_WORDLINE_SIZE_1);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7663    NewStartOffset = (uint16)StartOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7664  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7665    /* Check if any block header is present in the last written word-line */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7666    /* [cover parentID={FBBB244F-D261-47a4-A492-AD4A20557DA9}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7667    if(EndOffset > (uint16)FEE_DFLASH_PAGE_SIZE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7668    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7669      WLAddr = Fee_lGetWLBeginning(StateDataPtr->FeeWriteAffectedAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7670      EndOffset -= FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7671      do
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7672      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7673        /* if any block header is found */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7674        /* [cover parentID={DCFD33BF-980B-4e2a-BEF8-B4A111204339}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7675        if(LWBBufferPtr[NewStartOffset] == (uint8)FEE_DATA_FIRST_PAGE_ID)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7676        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7677  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7678          BlockNumber = ((uint16)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7679          (((uint16)LWBBufferPtr[NewStartOffset + FEE_BLOCK_NUM_MSB_POS]) <<
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7680              FEE_EIGHT) |
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7681              ((uint16)LWBBufferPtr[NewStartOffset + FEE_BLOCK_NUM_LSB_POS]));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7682          /* check if the block and its address is in cache table */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7683          /* [cover parentID={104D397B-058A-49d1-9EF6-D0BF5277A1C0}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7684          RetVal = Fee_lIsBlockAffected(BlockNumber, (WLAddr + NewStartOffset));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7685        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7686        NewStartOffset += FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7687      } while((NewStartOffset < EndOffset) && (RetVal == (boolean)FALSE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7688      /* [cover parentID={4E8AF4C6-5EB7-4835-A292-7692F1CC0D1C}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7689    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7690  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7691    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7692  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7693  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7694  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7695  ** Syntax : LOCAL_INLINE boolean Fee_lIsBlockAffected(                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7696  **                                                  const uint16 BlockNumber, **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7697  **                                                  const uint32 BlockAddr)   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7698  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7699  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7700  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7701  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7702  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7703  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7704  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7705  ** Parameters (in) :  BlockNumber - Block Number                              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7706  **                    BlockAddr   - Block Address                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7707  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7708  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7709  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7710  ** Return value    :  boolean                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7711  **                  TRUE : Block is affected due to write operation fail.     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7712  **                  Block entry is available in cache                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7713  **                  FALSE: Block is not affected due to write operation fail. **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7714  **                  Block entry is not available in cache                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7715  ** Description : This function checks if the block is affected                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7716  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7717  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7718  /* [cover parentID={D97DA96B-C386-49c8-91E4-679F4F951946}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7719  LOCAL_INLINE boolean Fee_lIsBlockAffected(const uint16 BlockNumber,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7720      const uint32 BlockAddr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7721  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7722    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7723    const Fee_CacheType         *CachePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7724    const Fee_CacheType         *UnconfigBlockPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7725    uint16 TempIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7726    uint16 BlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7727    boolean RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7728  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7729    RetVal = (boolean)FALSE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7730    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7731    /* [cover parentID={E1AA4FAA-1E3A-4b95-B8E4-B2A920B2FA7C}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7732    BlockIndex = Fee_lGetUsrBlockIndex(BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7733    /* [cover parentID={A7C56250-157B-4954-91FA-89BDF1E346DA}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7734    if(BlockIndex == FEE_LOG_BLOCK_NOT_FOUND)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7735    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7736      /* un-configured block */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7737      TempIndex = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7738  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7739      UnconfigBlockPtr = &(StateDataPtr->FeeBlockInfo[Fee_CfgPtr->FeeBlkCnt]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7740      /* [cover parentID={26CC45A1-CADA-4d0b-9894-1C75716D6179}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7741      while((TempIndex < (StateDataPtr->FeeUnConfigBlockCount)) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7742            (RetVal == (boolean)FALSE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7743      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7744  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7745        /* check if the block and its address is in cache table */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7746        /* [cover parentID={696835D2-E215-4ac4-B741-4CD8BAE896D1}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7747        if((UnconfigBlockPtr->BlockNumber == BlockNumber) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7748            (UnconfigBlockPtr->Address == BlockAddr))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7749        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7750          RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7751        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7752        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7753        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7754          TempIndex++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7755        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7756  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7757        UnconfigBlockPtr++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7758      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7759    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7760    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7761    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7762      CachePtr = &(StateDataPtr->FeeBlockInfo[BlockIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7763      /* check if the block and its address is in cache table */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7764      /* [cover parentID={007BA1B0-DA96-4d3c-842E-CC9411AAD1EA}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7765      if(CachePtr->Address == BlockAddr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7766      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7767        RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7768      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7769    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7770    /* [cover parentID={85FB9E05-1C30-466d-A479-0C9458A4F427}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7771    if(RetVal == (boolean)TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7772    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7773      /* if the block and its address exists in cache table then, update the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7774         current request */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7775      StateDataPtr->FeeCurrReqBlockNum = BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7776      StateDataPtr->FeeCurrSectSrcAddr = BlockAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7777    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7778  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7779    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7780  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7781  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7782  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7783  ** Syntax : static boolean Fee_lIsBlockAcrossWLLatest(void)                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7784  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7785  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7786  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7787  ** Sync/Async:  Synchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7788  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7789  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7790  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7791  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7792  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7793  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7794  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7795  ** Return value    :  boolean                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7796  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7797  ** Description :This function checks if the block across the WL is the latest **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7798  **              TRUE: Block is latest                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7799  **              FALSE: Block is not latest                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7800  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7801  /* [cover parentID={19AF252B-ECEE-427e-AF8D-675C127FF157}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7802  static boolean Fee_lIsBlockAcrossWLLatest(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7803  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7804    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7805    boolean             RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7806    uint16              BlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7807    Fee_LastWrittenBlkInfoType  *LastWrittenBlkPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7808    const Fee_CacheType         *ConfigBlockPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7809  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7810    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7811    LastWrittenBlkPtr = &(StateDataPtr->FeeLastWrittenBlkInfo);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7812  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7813    BlockIndex = Fee_lGetUsrBlockIndex(LastWrittenBlkPtr->BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7814    /* [cover parentID={5BAB2683-6F6B-44f8-BE25-45C138E1FE96}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7815    if(BlockIndex == FEE_LOG_BLOCK_NOT_FOUND)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7816    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7817      RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7818    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7819    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7820    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7821      ConfigBlockPtr= &(StateDataPtr->FeeBlockInfo[BlockIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7822      /* [cover parentID={FFA5A430-90AD-4b30-9C28-421CB5606E7A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7823      if((ConfigBlockPtr->Address)==(LastWrittenBlkPtr->Addr))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7824      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7825        RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7826      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7827      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7828      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7829        LastWrittenBlkPtr->Status.Consistent = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7830        LastWrittenBlkPtr->BlockNumber = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7831        StateDataPtr->FeeWLAffectedType = FEE_LWB_WITHIN_WL_AFFECTED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7832        RetVal = (boolean)FALSE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7833      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7834  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7835    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7836    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7837  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7838  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7839  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7840  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7841  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7842  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7843  ** TRACEABILITY: []                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7844  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7845  ** Syntax : static void Fee_lHandleUserWrite(const uint16 UserBlockIndex)     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7846  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7847  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7848  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7849  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7850  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7851  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7852  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7853  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7854  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7855  ** Parameters (in) :  UserBlockIndex: Index of the requested block            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7856  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7857  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7858  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7859  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7860  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7861  ** Description : This routine handles the functionality of                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7862  ** FEE_PEND_PREV_WRITE_REQ state of Write state machine                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7863  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7864  /* [cover parentID={77B16520-BE1D-4f0a-B22A-954EE6B5E82F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7865  Fee_lHandleUserWrite
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7866  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7867  /* [cover parentID={7064F609-BBC5-40b9-A486-D666C66CEDC4}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7868  static void Fee_lHandleUserWrite(const uint16 UserBlockIndex)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7869  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7870    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7871    const Fee_BlockType   *BlockPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7872    uint8                 *ReadWriteBuffPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7873    uint32                 DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7874    uint32                 BlockCycleCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7875    uint16                 BlockSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7876    uint16                 Offset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7877    Std_ReturnType         RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7878  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7879    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7880  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7881    /* [cover parentID={77B16520-BE1D-4f0a-B22A-954EE6B5E82F}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7882    BlockPtr = &(Fee_CfgPtr->FeeBlockConfigPtr[UserBlockIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7883    BlockSize = (uint16)BlockPtr->Size;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7884    BlockCycleCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7885  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7886    /* Read block cycle count */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7887    /* [cover parentID={CD119A8A-568E-4c37-9D51-1FE08AE06DFD}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7888    if (StateDataPtr->FeeBlockInfo[UserBlockIndex].Address != FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7889    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7890      BlockCycleCount = Fee_lGetBlkCycleCount(UserBlockIndex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7891    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7892  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7893    DestAddr = StateDataPtr->FeeNextFreePageAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7894    Offset = (uint16) (DestAddr & (uint32)FEE_DFLASH_WORDLINE_SIZE_1);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7895    /* [cover parentID={288F1D24-BD97-4818-8B98-8A1463EC6A07}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7896    if (Offset == FEE_ZERO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7897    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7898  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7899      /* Check against unersable WL*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7900      /* [cover parentID={D6A81D1C-580D-4e8b-8927-6BB04A1AED35}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7901      while (Fee_lIsUnerasableAddr(DestAddr) == TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7902      { /* [cover parentID={F6EC2232-5C32-4d13-9D94-D839BCCCF265}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7903           Add WL size to next free page address and assign it to destination address
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7904          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7905        /* [cover parentID={F6EC2232-5C32-4d13-9D94-D839BCCCF265}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7906        DestAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7907      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7908      StateDataPtr->FeeNextFreePageAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7909      StateDataPtr->FeeLastWrittenBlkInfo.BlockNumber = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7910      StateDataPtr->FeeLastWrittenBlkInfo.Status.Consistent = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7911      StateDataPtr->FeeWLAffectedType = FEE_LWB_NOT_AFFECTED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7912    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7913  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7914    ReadWriteBuffPtr = &(StateDataPtr->FeeReadWriteBuffer[Offset]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7915  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7916    /* if block invalidation is ongoing */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7917    /* [cover parentID={CFB6232C-7A08-4c47-BFA2-B11370825D49}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7918    if(StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus == (uint32)FEE_SET )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7919    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7920      Fee_lPrepareInvldReqBuff(BlockCycleCount, ReadWriteBuffPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7921    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7922    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7923    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7924      Fee_lPrepareWriteReqBuff(BlockCycleCount, ReadWriteBuffPtr,BlockSize);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7925    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7926    /* [cover parentID={0C445E85-939A-49ff-A4FB-4F2767D3B428}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7927    if(StateDataPtr->FeePendReqStatus == FEE_PEND_PREV_COMPARE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7928    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7929  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7930      StateDataPtr->FeeLastWriteSize = ((Fls_17_Dmu_LengthType)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7931                                        StateDataPtr->FeeReadLen);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7932  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7933      StateDataPtr->FeeUserJobStatus = FEE_JOB_REQSTD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7934  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7935      /* Call Fls_17_Dmu_Write to write data in the DFLASH */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7936      RetVal = Fls_17_Dmu_Write((Fls_17_Dmu_AddressType)DestAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7937                                (ReadWriteBuffPtr),
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7938                                (Fls_17_Dmu_LengthType)(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7939                                  StateDataPtr->FeeLastWriteSize));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7940      StateDataPtr->FeeReadLen = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7941      /* DET from FLS is not expected here */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7942      /* Hence, only check for Flash Sequence Error, Protection Error */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7943      /* In case of error, Fee_JobErrorNotification will be called */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7944      /* which would un-necessarily update FeeNextFreePageAddr */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7945      /* Hence the below code reverts FeeNextFreePageAddr back to its */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7946      /* original value */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7947      /* [cover parentID={E413F536-527C-4578-9C0E-3F31DCE04569}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7948      if(RetVal == E_NOT_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7949      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7950        if(StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus == (uint32)FEE_SET )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7951        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7952          Fee_lHandleUsrJobFailure(FEE_INVALIDATE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7953        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7954        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7955        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7956          Fee_lHandleUsrJobFailure(FEE_WRITE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7957        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7958      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7959    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7960  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7961  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7962  /*CYCLOMATIC_Fee_lHandleIntrRead_JUSTIFICATION:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7963  Fee_lHandleIntrRead has to pass through many states for interrupted read during
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7964  write,if it is broken into more functions, the readability will get affected.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7965  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7966  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7967  ** Syntax : LOCAL_INLINE void Fee_lHandleIntrRead(void)                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7968  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7969  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7970  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7971  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7972  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7973  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7974  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7975  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7976  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7977  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7978  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7979  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7980  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7981  ** Description : This routine handles the functionality of                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7982  ** FEE_PEND_INTR_READ state of Write state machine                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7983  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7984  /* [cover parentID={50715C99-90C8-455f-B489-28C878A12B84}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7985  Fee_lHandleIntrRead
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7986  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7987  /* [cover parentID={D470C7A9-E5BC-4cd5-BAFE-96B6CC76808D}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7988  LOCAL_INLINE void Fee_lHandleIntrRead(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7989  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7990    /* [cover parentID={50715C99-90C8-455f-B489-28C878A12B84}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7991    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7992    uint8              *ReadWriteBuffPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7993    const uint8              *LWBBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7994    uint32              SrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7995    uint32              AffectedWLAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7996    uint32              SrcAddrNextWLAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7997    uint16              Offset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7998    uint16              ReadLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7999    uint16              ReadLengthInWL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8000    uint16              TempIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8001    uint16              RemainingPageCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8002    uint16              LWBPageCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8003    uint16              ReadLengthMax;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8004    Std_ReturnType      ReturnValueFls;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8005  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8006    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8007    AffectedWLAddr = Fee_lGetWLBeginning(StateDataPtr->FeeWriteAffectedAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8008    SrcAddr = StateDataPtr->FeeCurrSectSrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8009    Offset = (uint16)((StateDataPtr->FeeNextFreePageAddr) &
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8010                      (uint32)FEE_DFLASH_WORDLINE_SIZE_1);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8011    /* [cover parentID={D3BA665A-A577-40ce-B011-A18985F7BCF4}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8012    if (Offset == FEE_ZERO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8013    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8014      Fee_lClearFeeReadWriteBuffer();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8015    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8016  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8017    ReadWriteBuffPtr = &(StateDataPtr->FeeReadWriteBuffer[Offset]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8018    ReadLengthMax = (uint16)FEE_DFLASH_WORDLINE_SIZE - Offset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8019  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8020    /* if block(s) across the last written word line is affected */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8021    /* [cover parentID={D11C14B4-2265-49d6-837A-D2B97AEAAD52}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8022    if(StateDataPtr->FeeWLAffectedType == FEE_LWB_ACROSS_WL_AFFECTED)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8023    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8024      /* if current address is within the last written word line */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8025      /* [cover parentID={7C43E42E-08B7-447c-B421-860966553A99}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8026      if(SrcAddr >= AffectedWLAddr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8027      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8028        Offset = (uint16)(SrcAddr & (uint32)FEE_DFLASH_WORDLINE_SIZE_1);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8029        LWBBufferPtr = &(StateDataPtr->FeeLastWrittenBlkBuffer[0]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8030        LWBPageCount = (uint16)(StateDataPtr->FeeLastWrittenBlkInfo.PageCount);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8031        RemainingPageCount = LWBPageCount - (uint16)StateDataPtr->FeeBlkPageCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8032      /* [cover parentID={7E6733E4-D5A0-4255-BA60-86DF60377549}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8033        if(RemainingPageCount == FEE_ONE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8034        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8035          /* After marker write, change affected type to within word line */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8036          ReadLength = FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8037          StateDataPtr->FeeWLAffectedType = FEE_LWB_WITHIN_WL_AFFECTED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8038        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8039        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8040        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8041          ReadLength = ((RemainingPageCount - FEE_ONE) << FEE_PAGE_TO_BYTE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8042          /* [cover parentID={9BAAA7EA-33D1-465c-AA46-A735B9713C70}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8043          if(ReadLengthMax < ReadLength)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8044          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8045            ReadLength = ReadLengthMax;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8046          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8047        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8048        for(TempIndex = FEE_RESET; TempIndex < ReadLength; TempIndex++)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8049        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8050          /* copy from last written block buffer to read-write buffer */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8051  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8052          ReadWriteBuffPtr[TempIndex] = LWBBufferPtr[TempIndex + Offset];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8053        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8054        StateDataPtr->FeeCurrSectSrcAddr += ReadLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8055        StateDataPtr->FeePendReqStatus = FEE_PEND_INTR_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8056      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8057      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8058      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8059        /* if current address is before the last written word line */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8060        ReadLength = (uint16)FEE_DFLASH_WORDLINE_SIZE - Offset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8061        SrcAddrNextWLAddr = Fee_lGetNextWLAddr(SrcAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8062        ReadLengthInWL = (uint16)(SrcAddrNextWLAddr - SrcAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8063        /* [cover parentID={AD9A1E6C-949E-4557-BE21-2AD1B11BD92D}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8064        if(ReadLength > ReadLengthInWL)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8065        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8066  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8067          /* [cover parentID={165A8250-EBD5-40e2-B8F9-D230ED9DFCC3}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8068          if (((boolean)FALSE != Fee_lIsUnerasableAddr(SrcAddrNextWLAddr)) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8069              (SrcAddrNextWLAddr >= AffectedWLAddr))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8070          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8071            ReadLength = ReadLengthInWL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8072          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8073        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8074  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8075        /* copy from flash to read-write buffer */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8076  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8077        /*MISRA2012_RULE_11_3_JUSTIFICATION:This is done for interfacing with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8078        FLS.FEE is passing parameters to FLS APIs, casting is needed to match with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8079        the Fls API prototype. ReadWriteBuff is 4 byte aligned which is part
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8080        of Fee_StateDataType.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8081        ReturnValueFls = Fls_17_Dmu_ReadWordsSync(\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8082                         (Fls_17_Dmu_AddressType)SrcAddr, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8083                         (uint32 *)ReadWriteBuffPtr, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8084                         (Fls_17_Dmu_LengthType)\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8085                         ReadLength / FEE_DFLASH_WORD_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8086  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8087        SrcAddr += ReadLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8088        /* [cover parentID={FF802D45-B175-429f-8B0F-9F759D1943D1}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8089        while (Fee_lIsUnerasableAddr(SrcAddr) == TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8090        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8091          SrcAddr = Fee_lGetNextWLAddr(SrcAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8092        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8093        StateDataPtr->FeeCurrSectSrcAddr = SrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8094  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8095        if(ReturnValueFls == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8096        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8097          /* proceed to internal write */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8098          StateDataPtr->FeePendReqStatus = FEE_PEND_INTR_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8099        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8100        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8101        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8102          /* handle error */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8103          Fee_lHandleWriteFail();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8104        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8105      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8106    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8107    /* [cover parentID={294D0159-5E5F-49d6-9A04-7D09F3793236}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8108    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8109    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8110      /* if block(s) within the last written word line is affected */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8111  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8112      Offset = (uint16)(SrcAddr & (uint32)FEE_DFLASH_WORDLINE_SIZE_1);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8113      LWBBufferPtr = &(StateDataPtr->FeeLastWrittenBlkBuffer[0]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8114  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8115      /* If last written block's marker copy pending */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8116      if(StateDataPtr->FeeWLAffectedType == FEE_LWB_MARKER_COPY_PENDING)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8117      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8118        ReadLength = FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8119        StateDataPtr->FeeWLAffectedType = FEE_LWB_WITHIN_WL_AFFECTED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8120      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8121      /* [cover parentID={59866088-A0F6-4538-88D2-A96C7AAC998B}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8122      else if(StateDataPtr->FeeWLAffectedType == FEE_LWB_WITHIN_WL_AFFECTED)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8123      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8124        StateDataPtr->FeeIntrCurrReqPageCount = (uint16)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8125                      ((uint16)(LWBBufferPtr[Offset + FEE_SEVEN]) << FEE_EIGHT) |
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8126                      (LWBBufferPtr[Offset + FEE_SIX]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8127        (StateDataPtr->FeeIntrCurrReqPageCount) &= ((uint16)FEE_PAGE_COUNT_MASK);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8128        ReadLength = (StateDataPtr->FeeIntrCurrReqPageCount) << FEE_PAGE_TO_BYTE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8129        /* [cover parentID={C2A65BFC-5A78-498c-B20F-2206102AD86C}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8130        if(ReadLength > ReadLengthMax)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8131        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8132          ReadLength = ReadLengthMax;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8133          StateDataPtr->FeeWLAffectedType = FEE_LWB_WITHIN_WL_AFFECTED_CONT;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8134        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8135        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8136        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8137          StateDataPtr->FeeWLAffectedType = FEE_LWB_MARKER_COPY_PENDING;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8138        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8139      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8140      else /* FeeWLAffectedType == FEE_LWB_WITHIN_WL_AFFECTED_CONT */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8141      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8142        ReadLength = (uint16)((StateDataPtr->FeeIntrCurrReqPageCount) -
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8143                              (StateDataPtr->FeeBlkPageCount));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8144        ReadLength = (ReadLength << FEE_PAGE_TO_BYTE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8145  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8146        StateDataPtr->FeeWLAffectedType = FEE_LWB_MARKER_COPY_PENDING;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8147      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8148  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8149      /* copy from last written block buffer to read-write buffer */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8150      for(TempIndex = FEE_RESET; TempIndex < ReadLength; TempIndex++)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8151      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8152  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8153        ReadWriteBuffPtr[TempIndex] = LWBBufferPtr[TempIndex + Offset];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8154      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8155      StateDataPtr->FeeCurrSectSrcAddr = SrcAddr + ReadLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8156      StateDataPtr->FeePendReqStatus = FEE_PEND_INTR_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8157    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8158  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8159    StateDataPtr->FeeLastReadSize = ReadLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8160  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8161  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8162  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8163  ** Syntax : static void Fee_lHandleIntrWrite(void)                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8164  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8165  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8166  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8167  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8168  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8169  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8170  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8171  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8172  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8173  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8174  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8175  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8176  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8177  ** Description : This routine handles the functionality of                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8178  ** FEE_PEND_INTR_WRITE state of Write state machine                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8179  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8180  /* [cover parentID={7646FA6A-066B-4036-BFC5-5832EEAA6FCC}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8181  Fee_lHandleIntrWrite
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8182  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8183  /* [cover parentID={C9CBE3C8-3DF6-46d7-AD8E-36F5A3F24128}] [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8184  static void Fee_lHandleIntrWrite(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8185  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8186  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8187    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8188    const uint8           *ReadWriteBuffPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8189    uint32                 DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8190    uint16                 Offset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8191    Std_ReturnType         RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8192  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8193    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8194    StateDataPtr->FeeLastWriteSize = StateDataPtr->FeeLastReadSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8195    DestAddr = StateDataPtr->FeeNextFreePageAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8196    Offset = (uint16) (DestAddr & (uint32)FEE_DFLASH_WORDLINE_SIZE_1);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8197  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8198    /* Skip un-erasable word line, if any */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8199    /* [cover parentID={454C8484-CAB1-4905-8CC5-625BDB614EA1}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8200    if (Offset == FEE_ZERO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8201    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8202      /* [cover parentID={BE69F40F-C3D7-4c6e-9204-912814A94DA5}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8203      while (Fee_lIsUnerasableAddr(DestAddr) == TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8204      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8205  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8206        DestAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8207      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8208      /* [cover parentID={62815483-801C-4c5a-A703-7AC69C8FB74F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8209      Assign the destination address to next free page address
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8210      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8211      StateDataPtr->FeeNextFreePageAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8212      StateDataPtr->FeeLastWrittenBlkInfo.BlockNumber = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8213      StateDataPtr->FeeLastWrittenBlkInfo.Status.Consistent = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8214    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8215    /* [cover parentID={ECB9A01F-DD15-4c82-A7D7-EFBFDFB8DCBF}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8216    if(StateDataPtr->FeeBlkPageCount == FEE_ZERO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8217    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8218      /* [cover parentID={9989D3F6-A7A0-420d-AFF9-F4C842AA7D9C}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8219      Assign the block start address as destination address
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8220      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8221      StateDataPtr->FeeBlockStartAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8222    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8223  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8224    ReadWriteBuffPtr = &(StateDataPtr->FeeReadWriteBuffer[Offset]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8225    StateDataPtr->FeeBlkPageCount +=
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8226      (Fee_PageType)((StateDataPtr->FeeLastWriteSize) >> FEE_BYTE_TO_PAGE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8227    StateDataPtr->FeeUserJobStatus = FEE_JOB_REQSTD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8228    StateDataPtr->FeePendReqStatus = FEE_PEND_INTR_COMPARE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8229  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8230    /* initiate FLS write */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8231    RetVal = Fls_17_Dmu_Write((Fls_17_Dmu_AddressType)DestAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8232                            ReadWriteBuffPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8233                            (Fls_17_Dmu_LengthType)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8234                            (StateDataPtr->FeeLastWriteSize));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8235    /* [cover parentID={32BE104C-10BF-4198-8A79-C84CF31715BD}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8236    Write operation request accepted
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8237    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8238    if(RetVal == E_NOT_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8239    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8240      /* [cover parentID={BD81B204-474E-431f-B374-EFCAC35A049E}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8241      Handle internal job error
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8242      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8243      Fee_lHandleWriteFail();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8244    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8245  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8246  /*CYCLOMATIC_Fee_lHandleIntrWriteCompare_JUSTIFICATION:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8247  Fee_lHandleIntrWriteCompare has to pass through many checks to confirm
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8248  successful block write, if it is broken into more functions, the readability
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8249  will get affected.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8250  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8251  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8252  ** Syntax : LOCAL_INLINE void Fee_lHandleIntrWriteCompare                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8253  **                                             (const uint16 UserBlockIndex)  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8254  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8255  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8256  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8257  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8258  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8259  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8260  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8261  ** Parameters (in) :  UserBlockIndex: Index of the requested block            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8262  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8263  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8264  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8265  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8266  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8267  ** Description : This routine handles the functionality of                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8268  ** FEE_PEND_INTR_COMPARE state of Write state machine                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8269  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8270  /* [cover parentID={D902E00D-373D-4fe0-8187-30A6B19CBFE9}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8271  Fee_lHandleIntrWriteCompare
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8272  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8273    /* [cover parentID={0ECC187B-A54C-4efe-8C82-E00D17C55BF6}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8274  LOCAL_INLINE void Fee_lHandleIntrWriteCompare(const uint16 UserBlockIndex)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8275  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8276    /* [cover parentID={D902E00D-373D-4fe0-8187-30A6B19CBFE9}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8277    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8278    uint8                 *PendReqStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8279    const Fee_BlockType   *BlockPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8280    Fee_CacheType         *UnconfigBlockPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8281    uint32                DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8282    uint32                TempAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8283    uint16                BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8284    uint16                CompareLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8285    uint16                TmpCompareLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8286    uint32                StartOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8287    uint16                UnconfigBlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8288    Std_ReturnType        ReturnValueFls;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8289    boolean               RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8290    uint16                NewUserBlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8291    RetVal = (boolean)FALSE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8292    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8293    uint32                LWBMarkerAddress;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8294    uint32                NextFreePageWLAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8295    Fee_LastWrittenBlkInfoType  *LastBlkInfoPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8296  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8297    BlockPtr = &(Fee_CfgPtr->FeeBlockConfigPtr[UserBlockIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8298    UnconfigBlockPtr = &(StateDataPtr->FeeBlockInfo[Fee_CfgPtr->FeeBlkCnt]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8299    PendReqStatePtr = &(StateDataPtr->FeePendReqStatus);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8300    ReturnValueFls = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8301  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8302    DestAddr = StateDataPtr->FeeNextFreePageAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8303    TempAddr = Fee_lGetWLBeginning(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8304    /* [cover parentID={4B7F1597-A85F-4b1c-AAF8-9661B6F9A753}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8305    Limit the length to be compared to maximum configured value
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8306    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8307    CompareLength = (uint16)((DestAddr + (StateDataPtr->FeeLastWriteSize)) -
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8308                             TempAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8309    TmpCompareLength = CompareLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8310    CompareLength -=  StateDataPtr->FeeComparedLen;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8311    if(CompareLength > FEE_COMPARE_LEN_MAX)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8312    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8313      /* [cover parentID={4B7F1597-A85F-4b1c-AAF8-9661B6F9A753}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8314      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8315      CompareLength = FEE_COMPARE_LEN_MAX;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8316    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8317    /*Check PVR error is occurred in last write if yes then no need of compare */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8318    /* [cover parentID={F9A25856-F27F-4786-AA4F-4BC0497B2B9C}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8319    if(StateDataPtr->FeeProgVerErr == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8320    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8321      /*MISRA2012_RULE_11_3_JUSTIFICATION:This is done for interfacing with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8322      FLS.FEE is passing parameters to FLS APIs, casting is needed to match with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8323      the Fls API prototype. ReadWriteBuff is 4 byte aligned which is part
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8324      of Fee_StateDataType.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8325      /* [cover parentID={EB0699CA-8445-4964-9B68-DACF3A1396E8}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8326      ReturnValueFls = Fls_17_Dmu_CompareWordsSync( \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8327                       (Fls_17_Dmu_AddressType)\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8328                       (TempAddr + StateDataPtr->FeeComparedLen), \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8329                       (uint32 *)(&(StateDataPtr->FeeReadWriteBuffer\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8330                                    [StateDataPtr->FeeComparedLen])), \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8331                       ((Fls_17_Dmu_LengthType)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8332                        CompareLength / FEE_DFLASH_WORD_SIZE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8333  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8334      StateDataPtr->FeeComparedLen += CompareLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8335    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8336    /* Compare failed or PVR is set raise the illegal notification with write 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8337    production error */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8338    /* [cover parentID={C4276351-E6BA-4b09-81E3-32E19D0B0347}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8339    if((ReturnValueFls == E_NOT_OK) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8340        (StateDataPtr->FeeProgVerErr == FEE_SET))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8341    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8342      StateDataPtr->FeeComparedLen = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8343      /* [cover parentID={1FC1262D-1AAF-42a7-8432-22A528B4CD75}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8344      Fee_lHandleWriteFail();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8345    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8346    else if(StateDataPtr->FeeComparedLen != TmpCompareLength)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8347    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8348      /*dummy else if to skip else for in between loops */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8349    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8350    /* Compare successful */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8351    /* [cover parentID={C2A7EA14-1887-454c-AE77-46D3D035491D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8352    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8353    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8354      StateDataPtr->FeeComparedLen = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8355      /* Update cache table for previous block - both configured and unconfigured
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8356         blocks needs only address update, the status remains the same */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8357      StartOffset = DestAddr & FEE_DFLASH_WORDLINE_SIZE_1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8358      /* [cover parentID={093B8388-B88A-4cef-84AF-4E2F12D4FA72}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8359      if((StateDataPtr->FeeLastWriteSize == FEE_EIGHT) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8360          ((StateDataPtr->FeeReadWriteBuffer[StartOffset]) ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8361           FEE_DATA_MARKER_PAGE_ID))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8362      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8363         BlockNumber = StateDataPtr->FeeCurrReqBlockNum;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8364         LWBMarkerAddress = StateDataPtr->FeeNextFreePageAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8365         NextFreePageWLAddr =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8366         Fee_lGetWLBeginning(StateDataPtr->FeeNextFreePageAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8367         LastBlkInfoPtr = &(StateDataPtr->FeeLastWrittenBlkInfo);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8368         /* [cover parentID={D9482901-428B-4092-B104-09E5BBE5F8DD}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8369         if(((StateDataPtr->FeeBlockStartAddr) < NextFreePageWLAddr) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8370            (LWBMarkerAddress >= NextFreePageWLAddr))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8371         {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8372            /*Last written block is spanning across the WL, update the block info
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8373            to last written block info*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8374            LastBlkInfoPtr->BlockNumber = StateDataPtr->FeeCurrReqBlockNum;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8375            LastBlkInfoPtr->PageCount = StateDataPtr->FeeBlkPageCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8376            LastBlkInfoPtr->Addr = StateDataPtr->FeeBlockStartAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8377            LastBlkInfoPtr->Status.Consistent = FEE_SET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8378         }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8379  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8380         NewUserBlockIndex = Fee_lGetUsrBlockIndex(BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8381         if(NewUserBlockIndex != FEE_LOG_BLOCK_NOT_FOUND)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8382         {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8383            StateDataPtr->FeeBlockInfo[NewUserBlockIndex].Address =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8384            StateDataPtr->FeeBlockStartAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8385         }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8386         else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8387         {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8388            UnconfigBlockIndex = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8389            while((UnconfigBlockIndex < (StateDataPtr->FeeUnConfigBlockCount)) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8390                (RetVal == (boolean)FALSE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8391            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8392              if((UnconfigBlockPtr[UnconfigBlockIndex].BlockNumber) ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8393                  BlockNumber)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8394              {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8395                UnconfigBlockPtr[UnconfigBlockIndex].Address =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8396                StateDataPtr->FeeBlockStartAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8397                RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8398              }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8399              else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8400              {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8401                UnconfigBlockIndex++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8402              }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8403            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8404         }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8405      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8406  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8407      StateDataPtr->FeeNextFreePageAddr += (StateDataPtr->FeeLastWriteSize);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8408      *PendReqStatePtr = FEE_PEND_INTR_READ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8409  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8410      /* if affected type is within the last written word line */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8411      /* [cover parentID={03AABAED-04C0-48db-8239-7ADEC055B1E3}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8412      if(StateDataPtr->FeeWLAffectedType == FEE_LWB_WITHIN_WL_AFFECTED)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8413      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8414        StateDataPtr->FeeBlkPageCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8415        StartOffset = StateDataPtr->FeeCurrSectSrcAddr &
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8416                      FEE_DFLASH_WORDLINE_SIZE_1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8417        /* [cover parentID={E50CA68D-3674-4f52-A5AD-405CEAC83FBA}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8418        if(Fee_lIsLastWrittenWLAffected((uint16)(StartOffset)) == (boolean)FALSE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8419        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8420          /* Previous block is written, now write the current user requested block
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8421            register write request */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8422          Fee_lRegisterWriteRequest(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8423            StateDataPtr->FeePendReqInfo.DataWriteBufferPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8424            BlockPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8425          StateDataPtr->FeeBlockStartAddr = StateDataPtr->FeeNextFreePageAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8426        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8427      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8428    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8429  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8430  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8431  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8432  ** Syntax : static void Fee_lLocalWrite(void)                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8433  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8434  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8435  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8436  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8437  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8438  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8439  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8440  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8441  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8442  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8443  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8444  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8445  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8446  ** Description : This routine will perform the write operation on DFLASH. It  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8447  ** is called by Fee_MainFunction                                              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8448  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8449  /*[cover parentID={5F758A15-CC83-4226-B568-5939E096E4B2}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8450  static void Fee_lLocalWrite(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8451  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8452    const Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8453    const uint8                 *PendReqStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8454    uint16                 BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8455    uint16                 UserBlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8456  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8457    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8458  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8459    BlockNumber = StateDataPtr->FeePendReqInfo.BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8460    /*[cover parentID={D5C821F1-C3EB-4276-B515-5EFD5F088BC6}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8461    UserBlockIndex = Fee_lGetUsrBlockIndex(BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8462  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8463    PendReqStatePtr = &(StateDataPtr->FeePendReqStatus);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8464  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8465    /**********************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8466    /*                       2.STATE MACHINE EXECUTION                    */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8467    /**********************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8468  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8469    /*********** CASE 1: USER WRITE REQSTD STATE *******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8470  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8471    /*[cover parentID={FEE9B199-2578-4afd-8BD4-A7B908370F14}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8472    if ((boolean)TRUE == Fee_lIsUserWriteInvldReqstd(StateDataPtr))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8473    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8474      /*[cover parentID={42DB85BF-86B9-4350-BF7D-BDC6D31D5E54}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8475      Fee_lHandleUserWriteReq(UserBlockIndex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8476    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8477  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8478  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8479    /*********** CASE: USER WRITE COMPARE STATE *******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8480    /*[cover parentID={A72D4963-1B3E-437c-9CCF-80BFDC6F3C09}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8481    if(*PendReqStatePtr == FEE_PEND_PREV_COMPARE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8482    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8483      /*[cover parentID={38FB0220-1DFC-4a9c-B419-9D4A01B757D6}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8484      Fee_lHandleUserWriteCompare(UserBlockIndex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8485    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8486  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8487    /*********** CASE: USER WRITE ONGOING STATE *******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8488    /*[cover parentID={67AC0843-8E98-4f3f-A0D7-AE9D4EE83CA7}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8489    if(*PendReqStatePtr == FEE_PEND_PREV_WRITE_REQ)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8490    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8491      /*[cover parentID={4C21089C-FF82-4c54-92B3-94225CB9E8F2}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8492      Fee_lHandleUserWrite(UserBlockIndex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8493    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8494  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8495  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8496    /*********** CASE: INTERNAL WRITE COMPARE STATE *******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8497    /*[cover parentID={460BF695-F308-4bbc-B4C6-5DCA32A4BAE7}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8498    if (*PendReqStatePtr == FEE_PEND_INTR_COMPARE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8499    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8500      /*[cover parentID={42B82BC3-AFEC-4c95-AC21-AE3F016F07B8}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8501      Fee_lHandleIntrWriteCompare(UserBlockIndex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8502    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8503  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8504    /*********** CASE: INTERNAL WRITE BLOCK READ STATE *******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8505    /*[cover parentID={910D995A-207C-48e8-B54B-005701AB00FB}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8506    if (*PendReqStatePtr == FEE_PEND_INTR_READ)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8507    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8508      /*[cover parentID={6A1F0071-B0B1-45fa-8D64-F9C2578D8B5E}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8509      Fee_lHandleIntrRead();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8510    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8511  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8512  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8513    /*********** CASE: INTERNAL WRITE ONGOING STATE *******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8514    /*[cover parentID={D5E7EE4B-47FA-4157-BE16-A8AAAE89590B}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8515    if (*PendReqStatePtr == FEE_PEND_INTR_WRITE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8516    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8517      /*[cover parentID={CC14EA77-4929-4cbe-A9CE-23293D566505}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8518      Fee_lHandleIntrWrite();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8519    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8520  }/* End of Fee_lLocalWrite */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8521  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8522  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8523  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8524  ** Syntax : static void Fee_lRegisterWriteRequest(                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8525  **                                   const uint8 * const DataWriteBufferPtr,  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8526  **                                   const Fee_BlockType * const BlockPtr)    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8527  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8528  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8529  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8530  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8531  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8532  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8533  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8534  ** Parameters (in):  DataWriteBufferPtr -  Pointer to Data buffer             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8535  **                    BlockPtr - Pointer to block data structure              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8536  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8537  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8538  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8539  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8540  ** Description : This routine will register the write request in the pending  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8541  ** request buffer.                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8542  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8543  /*[cover parentID={B498F3F5-2BF7-47e2-94BB-9E97DE112B78}] [/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8544  static void Fee_lRegisterWriteRequest(const uint8 * const DataWriteBufferPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8545                                        const Fee_BlockType * const BlockPtr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8546  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8547    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8548  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8549    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8550    StateDataPtr->FeeStatusFlags.FeeWriteInvldQSeraseAPICalled = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8551    StateDataPtr->FeeStatusFlags.FeeStartInitGC = FEE_SET ; /*TRUE*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8552  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8553    /* if the logical block is of immediate in nature */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8554    /*[cover parentID={D02B7DC4-BC83-4f7a-A57F-D7406B55075F}] [/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8555    if ( ( BlockPtr->FeeImmediateData == (uint32)FEE_IMMEDIATE_DATA ) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8556         /* This request is not for invalidation    */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8557         ( StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8558           == (uint32)FEE_RESET )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8559       )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8560    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8561  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8562      StateDataPtr->FeePendReqStatus = FEE_REQ_IMM_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8563    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8564    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8565    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8566      StateDataPtr->FeePendReqStatus = FEE_REQ_NORM_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8567    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8568  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8569    /* [cover parentID={46A7C871-0E1F-4a3a-803D-E0BA815B03F5}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8570    Update the job result to MEMIF_JOB_PENDING
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8571    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8572    StateDataPtr->FeeJobResult = MEMIF_JOB_PENDING;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8573    /* [cover parentID={A31CEE06-AEE1-4063-812D-7BE780C3A9C4}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8574    Store the pending request parameters in the pending request buffer
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8575    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8576    /* Store the pending request parameters in the pending request buffer*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8577    StateDataPtr->FeePendReqInfo.BlockNumber  = BlockPtr->BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8578    StateDataPtr->FeePendReqInfo.DataWriteBufferPtr = DataWriteBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8579  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8580    /* Update the current requested logical block number */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8581    StateDataPtr->FeeCurrReqBlockNum = BlockPtr->BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8582    /*Reset FeeReadLen to 0 for every new write request. This is also needed
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8583    in case if previous write request is cancelled.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8584    StateDataPtr->FeeReadLen = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8585  }/* End of Fee_lRegisterWriteRequest */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8586  /* [cover parentID={3F9907AD-6E65-4d53-882A-1F19726962C7}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8587  NVM data block supported
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8588  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8589  /* [cover parentID={16B182B9-FE60-4d9d-AFFA-B333EFE37022}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8590  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8591  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8592  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8593  ** TRACEABILITY: []                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8594  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8595  ** Syntax : static void Fee_lLocalRead(void)                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8596  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8597  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8598  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8599  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8600  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8601  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8602  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8603  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8604  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8605  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8606  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8607  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8608  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8609  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8610  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8611  ** Description : This routine will perform the read operation on DFLASH. It   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8612  ** is called by Fee_MainFunction                                              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8613  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8614  /* [cover parentID={2D9604F9-0837-4b8c-9F7B-22B3C0BE5ED8},
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8615  {83815BF6-33EE-45ff-AC9A-6D522CD1D384}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8616  Fee_lLocalRead
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8617  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8618  static void Fee_lLocalRead(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8619  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8620    Fee_PendReqBufType   *PendReqPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8621    Fee_StateDataType    *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8622    uint8                *DataBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8623    uint32                ActualAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8624  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8625    uint16                ReadLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8626    uint16                BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8627    uint16                BlockOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8628    uint16                Length;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8629    uint16                UserBlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8630    uint16                DataByteCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8631    Std_ReturnType        ReturnValue;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8632    uint8                 LoopIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8633  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8634  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8635    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8636    PendReqPtr = &StateDataPtr->FeePendReqInfo;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8637    BlockNumber = PendReqPtr->BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8638    BlockOffset = PendReqPtr->BlockOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8639    DataBufferPtr = PendReqPtr->DataBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8640    DataByteCount = FEE_ONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8641  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8642    ReturnValue = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8643    UserBlockIndex = Fee_lGetUsrBlockIndex(BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8644  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8645    /* [cover parentID={2D9604F9-0837-4b8c-9F7B-22B3C0BE5ED8}][/cover]]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8646    /**********************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8647    /*                1.AYSNC STATE MACHINE TRANSITIONS                   */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8648    /**********************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8649    /*These transitions are handled in Fee_JobEndNotification and
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8650      Fee_JobErrorNotification as specified by AUTOSAR*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8651  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8652  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8653    /**********************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8654    /*                       2.STATE MACHINE EXECUTION                    */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8655    /**********************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8656  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8657    /*********** CASE 1: READ REQSTD STATE *******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8658    /* [cover parentID={6FEF8D8B-D8CC-4a3e-B824-AFF8A4461AC9}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8659    if((boolean)TRUE == Fee_lIsUserReadReqstd(StateDataPtr))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8660    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8661      /*********************** PERFORM CHECKS START **********************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8662      /* [cover parentID={D9445F4C-D14A-48d2-A91C-A6463D3D5F8B}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8663      Perform read check
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8664      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8665      ReturnValue = Fee_lPerformReadCheck(UserBlockIndex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8666  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8667      /* [cover parentID={49CC71B9-087A-41cb-A546-0967F5467841}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8668      if(ReturnValue == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8669      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8670        /* [cover parentID={1FCDC8C5-DBAE-451c-A93D-D8237738A3C7}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8671        Call
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8672        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8673        Fee_lPerformStuffCheck(UserBlockIndex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8674      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8675  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8676      /* [cover parentID={18E22B35-ECF5-4a71-B0F7-8DEDB4362C85}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8677      Perform initial operations for local read
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8678      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8679      BlockOffset = Fee_lLocalReadStart(ReturnValue, UserBlockIndex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8680  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8681      /*Check if the job is finished*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8682      if(StateDataPtr->FeeJobResult != MEMIF_JOB_PENDING)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8683      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8684        /* set ReturnValue to E_NOT_OK. This will avoid further processing */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8685        ReturnValue = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8686      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8687    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8688  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8689    /*********** CASE 2: READ REQSTD STATE *******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8690  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8691    StateDataPtr->FeeUserReadDestPtr = DataBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8692  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8693    /* PERFORM READ START */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8694    /* [cover parentID={7ABD7BDF-9F5B-41e6-AB7A-8AB658E7029A}][/cover]]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8695    if (StateDataPtr->FeePendReqStatus == FEE_PEND_PREV_READ_REQ)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8696    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8697      if(BlockOffset > FEE_ZERO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8698      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8699        while(BlockOffset < FEE_SEVEN)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8700        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8701  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8702          StateDataPtr->FeeUserReadDestPtr[0] =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8703            StateDataPtr->FeeReadWriteBuffer[DataByteCount + BlockOffset];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8704          BlockOffset++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8705  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8706          StateDataPtr->FeeUserReadDestPtr++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8707        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8708        BlockOffset = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8709        DataByteCount += FEE_EIGHT;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8710      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8711      while(DataByteCount < StateDataPtr->FeeLastReadSize)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8712      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8713        for(LoopIndex = FEE_RESET; LoopIndex < FEE_SEVEN; LoopIndex++)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8714        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8715  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8716          StateDataPtr->FeeUserReadDestPtr[LoopIndex] =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8717            StateDataPtr->FeeReadWriteBuffer[DataByteCount + LoopIndex];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8718        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8719        /*MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8720              array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8721              Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8722              The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8723        StateDataPtr->FeeUserReadDestPtr += FEE_SEVEN;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8724        DataByteCount += FEE_EIGHT;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8725      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8726    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8727  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8728    /* [cover parentID={F03A84F2-2309-4e10-9A32-53010A45CA72}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8729    if (((ReturnValue == E_OK) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8730         (StateDataPtr->FeePendReqStatus != FEE_PEND_PREV_NO_REQ)) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8731        (StateDataPtr->FeePendReqStatus == FEE_PEND_PREV_READ_REQ)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8732       )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8733    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8734      /* [cover parentID={C2FAE471-2275-4229-8D16-88623013D999}][/cover]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8735      Calculate actual address where data is needed to be read
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8736      (current sector source address)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8737      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8738      /* calculate actual address where data is needed to be read */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8739      ActualAddr = StateDataPtr->FeeCurrSectSrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8740  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8741  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8742      /*Store the block offset in pending buffer structure*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8743  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8744      PendReqPtr->BlockOffset = BlockOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8745      Length = PendReqPtr->Length;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8746  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8747      ReadLength = Fee_lCheckReadLength(ActualAddr, Length);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8748  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8749      Fee_lClearFeeReadWriteBuffer();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8750  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8751      StateDataPtr->FeeLastReadSize = (Fls_17_Dmu_LengthType)ReadLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8752  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8753      /* [cover parentID={D1B00BF2-5B12-4cf1-B2F7-5860DE19F72C}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8754      ReturnValue = Fls_17_Dmu_Read((Fls_17_Dmu_AddressType)ActualAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8755                             StateDataPtr->FeeReadWriteBuffer,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8756                             (Fls_17_Dmu_LengthType)ReadLength);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8757      /* [cover parentID={76AF25B5-E0ED-4c94-B3C8-94737A9A769D}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8758      Read operation accepted
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8759      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8760      if(ReturnValue == E_NOT_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8761      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8762        /* [cover parentID={9532BB3C-C9EB-429b-A848-D832DDE76A7B}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8763        Read operation accepted
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8764        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8765        Fee_lHandleUsrJobFailure(FEE_READ);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8766      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8767      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8768      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8769        StateDataPtr->FeeCurrReqBlockNum = BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8770  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8771        /* If the current request is set to previous pending */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8772        /* [cover parentID={28DC10D4-9FB2-48cb-8999-14E4FDC2507B}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8773        if(StateDataPtr->FeePendReqStatus == FEE_PEND_PREV_READ_REQ)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8774        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8775          /* Increment FeeCurrSectSrcAddr to point to next page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8776  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8777          ActualAddr += ReadLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8778          /* [cover parentID={717A019A-113F-4602-B06E-3C9E8AC51E28}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8779          /* [cover parentID={D6D786E9-2A6C-4ee3-9F36-49D6743BBB34}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8780          while (Fee_lIsUnerasableAddr(ActualAddr) == TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8781          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8782            /* [cover parentID={7257A209-1DEF-4935-A045-467F3676C86B}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8783            ActualAddr = Fee_lGetNextWLAddr(ActualAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8784          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8785          StateDataPtr->FeeCurrSectSrcAddr = ActualAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8786        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8787  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8788        /* Store the read request parameters in the Pending buffer structure */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8789        PendReqPtr->BlockOffset = BlockOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8790        /* PendReqPtr->Length = Length;*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8791        PendReqPtr->DataBufferPtr = StateDataPtr->FeeUserReadDestPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8792        /* PERFORM READ ENDS */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8793      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8794    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8795  }/* End of Fee_lLocalRead */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8796  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8797  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8798  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8799  ** TRACEABILITY: []                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8800  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8801  ** Syntax : static uint16 Fee_lCheckReadLength(const Fls_17_Dmu_AddressType   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8802  **                                               ActualAddr,                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8803  **                                               const uint16 Length)         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8804  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8805  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8806  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8807  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8808  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8809  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8810  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8811  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8812  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8813  ** Parameters (in) :  ActualAddr - Address of read location                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8814  **                    Length     -  Length to be read                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8815  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8816  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8817  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8818  ** Return value    :  Actual Read length for reading data from flash.         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8819  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8820  ** Description : This routine will perform the check of the read length       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8821  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8822  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8823  /* [cover parentID={2DAEED1A-ABAA-4798-A423-85A47074F04A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8824  static uint16 Fee_lCheckReadLength(const Fls_17_Dmu_AddressType ActualAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8825                                     const uint16 Length)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8826  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8827    Fee_StateDataType    *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8828    Fee_PendReqBufType   *PendReqPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8829    uint8                 ReadLengthPages;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8830    uint16                ReadLimit;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8831    uint16                ReadLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8832    uint16                BlockOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8833    uint16                SizeInCurrentWL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8834    uint32                TempAddress;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8835    uint16                NewLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8836  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8837    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8838    PendReqPtr = &StateDataPtr->FeePendReqInfo;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8839    BlockOffset = PendReqPtr->BlockOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8840    NewLength = (uint16)Length;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8841  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8842    /* [cover parentID={2F225DFC-9226-4a7d-B0B7-CA802CA94014}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8843    if(Fee_lIsWLBeginning(ActualAddr) == FEE_NEW_WL_BEGIN)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8844    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8845      ReadLimit = FEE_DATA_BYTES_IN_WORDLINE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8846    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8847    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8848    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8849      SizeInCurrentWL = (uint16)FEE_DFLASH_WORDLINE_SIZE -
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8850                        (uint16)(ActualAddr & FEE_DFLASH_WORDLINE_SIZE_1);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8851      ReadLimit = (SizeInCurrentWL >> FEE_BYTE_TO_PAGE) * FEE_SEVEN;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8852    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8853    /* [cover parentID={CE5D8656-0752-43ee-9F47-86EF17E79FCE}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8854    if (Length > (ReadLimit - BlockOffset))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8855    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8856      /* [cover parentID={E69A67AD-59C3-45da-897A-EC57DA490C94}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8857      if(Fee_lIsWLBeginning(ActualAddr) != FEE_NEW_WL_BEGIN)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8858      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8859        TempAddress = Fee_lGetNextWLAddr(ActualAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8860        /* [cover parentID={D21B0A3A-0AF1-4200-B1CE-06FD72918D6C}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8861        if((boolean)FALSE == Fee_lIsUnerasableAddr(TempAddress))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8862        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8863          ReadLimit = FEE_DATA_BYTES_IN_WORDLINE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8864        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8865      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8866    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8867  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8868    ReadLimit = ReadLimit - BlockOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8869    /* [cover parentID={3B5E055E-D0B3-466e-9862-5FAD2AEE7A85}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8870    if (Length > ReadLimit)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8871    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8872      ReadLength = ReadLimit;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8873      NewLength = Length - ReadLimit;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8874      StateDataPtr->FeePendReqStatus = FEE_PEND_PREV_READ_REQ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8875    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8876    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8877    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8878      ReadLength = Length;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8879      StateDataPtr->FeePendReqStatus = FEE_PEND_PREV_READ_NOTIF;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8880    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8881  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8882    /* Call Fls_Read to read the data from DFLASH */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8883    StateDataPtr->FeeUserJobStatus = FEE_JOB_REQSTD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8884    /* [cover parentID={FAB96444-AA81-4117-8E04-BC21852E167D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8885    if((ReadLength + BlockOffset) > FEE_SEVEN)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8886    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8887      ReadLength = ReadLength - (FEE_SEVEN - BlockOffset);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8888      ReadLengthPages = (uint8)Fee_lGetDFLASHPages(ReadLength) - FEE_ONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8889  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8890    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8891    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8892    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8893      ReadLengthPages = (uint8)Fee_lGetDFLASHPages(ReadLength) - FEE_TWO;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8894    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8895  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8896    ReadLength = (uint16)ReadLengthPages << FEE_PAGE_TO_BYTE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8897    PendReqPtr->Length = NewLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8898  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8899    return (ReadLength);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8900  }/*End of Fee_lCheckReadLength*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8901  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8902  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8903  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8904  ** Syntax : LOCAL_INLINE uint16 Fee_lLocalReadStart                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8905  **                                        (const Std_ReturnType ReturnValue,  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8906  **                                              const uint16 UserBlockIndex)  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8907  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8908  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8909  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8910  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8911  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8912  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8913  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8914  ** Parameters (in) :  ReturnValue - Return value of Fee_lPerformReadCheck     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8915  **                    UserBlockIndex - User block index                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8916  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8917  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8918  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8919  ** Return value    :  uint16 - Block Offset                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8920  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8921  ** Description : This routine will perform the initial operations of          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8922  **               Fee_lLocalRead()                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8923  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8924  /* [cover parentID={37E1ECDE-74B6-409c-8422-3868E57E3A99}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8925  LOCAL_INLINE uint16 Fee_lLocalReadStart(const Std_ReturnType ReturnValue,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8926                                          const uint16 UserBlockIndex)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8927  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8928    const Fee_PendReqBufType   *PendReqPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8929    Fee_StateDataType    *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8930    uint32                StartAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8931    uint16                BlockOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8932  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8933    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8934    PendReqPtr = &StateDataPtr->FeePendReqInfo;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8935    BlockOffset = PendReqPtr->BlockOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8936  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8937    /* [cover parentID={10B0AA13-A21D-47eb-AC09-59B6530BDABB}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8938    if(ReturnValue == E_NOT_OK )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8939    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8940      /*Check if QS erase was suspended. If yes then set FeePendReqStatus to
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8941       FEE_REQ_QUASI_ERASE to set module status to busy.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8942      #if((FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA ) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8943      (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8944      /* [cover parentID={31FA2DC6-7CC2-4a7e-902A-C7FC43C1D89D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8945      if(StateDataPtr->FeeQsEraseSuspend == FEE_ERASE_SUSPENDED)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8946      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8947        StateDataPtr->FeePendReqStatus = FEE_REQ_QUASI_ERASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8948        StateDataPtr->FeeQsJob = FEE_ERASE_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8949      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8950      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8951      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8952      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8953        StateDataPtr->FeePendReqStatus = FEE_PEND_PREV_NO_REQ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8954      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8955  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8956      /* [cover parentID={0B064C63-B18F-480e-ADB2-C0ECB2DFF313}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8957      if ( Fee_CfgPtr->FeeNvmJobErrorNotification != NULL_PTR )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8958      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8959        /* [cover parentID={7E0A6A25-41BA-4a6e-9758-B1AB3941C27D}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8960        Call the notification function
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8961        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8962        (Fee_CfgPtr->FeeNvmJobErrorNotification)();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8963      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8964    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8965    /* ReturnValue is E_OK here */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8966    /* [cover parentID={67D186A8-D62B-4a72-AAD1-3B91B7539DFC}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8967    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8968    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8969      /* Load the start address of the block */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8970      #if (FEE_GET_PREV_DATA_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8971      if(PendReqPtr->GetPrevCopy == FEE_SET )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8972      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8973        StartAddr = (StateDataPtr->FeeBlockInfo[UserBlockIndex].PrevCopyAddress)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8974                    + FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8975      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8976      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8977      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8978      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8979        StartAddr = (StateDataPtr->FeeBlockInfo[UserBlockIndex].Address)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8980                    + FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8981      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8982  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8983      /*Calculate the address of data page using block offset.Read will be
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8984      start from this page. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8985      /* [cover parentID={E1B699DA-4B65-458d-9021-D2FD241F9495}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8986      do
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8987      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8988        /* [cover parentID={F4F75BF8-EB2C-4100-B7DF-EA8424DF882E}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8989        if(Fee_lIsWLBeginning(StartAddr) == FEE_NEW_WL_BEGIN)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8990        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8991          while (Fee_lIsUnerasableAddr(StartAddr) == TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8992          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8993            /* [cover parentID={A06C64FE-6A28-4f4b-BFB1-E45B9BDD8B3E}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8994            StartAddr = Fee_lGetNextWLAddr(StartAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8995          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8996        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8997        if (BlockOffset >= FEE_SEVEN)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8998        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8999          StartAddr += FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9000          BlockOffset -= FEE_SEVEN;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9001        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9002      } while(BlockOffset >= FEE_SEVEN);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9003      /* [cover parentID={34261008-11D1-4e1b-8AFF-FA65C88FDF8E}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9004  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9005      StateDataPtr->FeeCurrSectSrcAddr = StartAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9006    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9007  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9008    return(BlockOffset);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9009  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9010  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9011  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9012  ** Syntax : static void Fee_lGcErrorHandler(const uint8 Error                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9013  **                                            const uint16 Index)            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9014  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9015  ** Service ID:                                                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9016  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9017  ** Sync/Async:  Synchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9018  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9019  ** Reentrancy:  Non reentrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9020  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9021  ** Parameters (in) :  uint8  Error                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9022  **                    uint16 Block index in cache table                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9023  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9024  ** Parameters (out):  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9025  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9026  ** Return value    :  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9027  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9028  ** Description : This routine is responsible for handling GC transitions     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9029  **               in case of errors.                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9030  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9031  /* [cover parentID={3F9907AD-6E65-4d53-882A-1F19726962C7}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9032  NVM data block supported
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9033  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9034  /* [cover parentID={6CF9EF13-588A-468c-8629-0C1B68B18DA6}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9035  static void Fee_lGcErrorHandler(const uint8 Error, const uint16 Index)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9036  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9037    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9038  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9039    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9040  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9041    switch(Error)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9042    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9043      /* Write Failure */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9044      /* [cover parentID={E0F2169B-FBAF-431d-AA7B-2DCD7D28C6C0}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9045      case FEE_GC_WRITE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9046      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9047        /* [cover parentID={977693FB-9D15-4328-9118-281929FCDA91}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9048        production error enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9049        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9050        /* Report production error */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9051        #if (FEE_GC_WRITE_DEM_REPORT == FEE_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9052  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9053        /* [cover parentID={625A4011-7623-4fb7-998D-4E6038401297}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9054        Report write production error to Mcal_Wrapper FEE_E_GC_WRITE
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9055        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9056        Fee_lReportDemError(FEE_E_GC_WRITE, DEM_EVENT_STATUS_FAILED);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9057        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9058        /* [cover parentID={15A4389B-F048-4133-8BC1-61C7DCD564DF}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9059        Fee_lHandleGcFail();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9060        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9061      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9062  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9063      /* Read Failure */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9064      /* [cover parentID={7320B26B-F351-4a00-A1F1-7E244BD7D7B7}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9065      case FEE_GC_READ:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9066      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9067        /* [cover parentID={82304E5E-B10F-41b2-99CB-9168EE0163DF}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9068        production error enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9069        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9070        /* Report production error */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9071        #if (FEE_GC_READ_DEM_REPORT == FEE_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9072  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9073        /* [cover parentID={37FED89C-E60B-4289-99CC-D1480A538B50}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9074        Report read production error to Mcal_Wrapper FEE_E_GC_READ
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9075        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9076        Fee_lReportDemError(FEE_E_GC_READ, DEM_EVENT_STATUS_FAILED);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9077        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9078       /* [cover parentID={6E677D74-B0F1-4539-966D-34B09EC2D8D9}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9079        if((StateDataPtr->FeeGcState == FEE_GC_UNCFG_START_COPY) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9080            (StateDataPtr->FeeGcState == FEE_GC_UNCFG_COPY_READ_NXTPAGE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9081        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9082          /* GC in unconfigured block copy state ,discard the current
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9083          unconfigured block and continue GC*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9084          Fee_lGcDiscardUnconfigBlk(Index);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9085          StateDataPtr->FeeGcState = FEE_GC_UNCFG_START_COPY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9086        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9087        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9088        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9089          /* GC in configure block copy state ,discard the current configured
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9090           block and continue GC*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9091          /* [cover parentID={C2010611-5A23-4dc1-A07E-83C9A9B0752A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9092          Fee_lGcDiscardConfigBlk(Index);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9093          StateDataPtr->FeeGcState = FEE_GC_START_COPY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9094        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9095        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9096      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9097  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9098      /* Erase Failure */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9099      /* [cover parentID={5D413302-47CF-4db9-B87F-008616CBAECB}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9100      case FEE_GC_ERASE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9101      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9102        /* Report production error */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9103        #if (FEE_GC_ERASE_DEM_REPORT == FEE_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9104  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9105        /* [cover parentID={8DD26F81-EE1C-448f-93C1-5C8BC9E3C417}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9106        Report erase production error to Mcal_Wrapper FEE_E_GC_ERASE
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9107        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9108        Fee_lReportDemError(FEE_E_GC_ERASE, DEM_EVENT_STATUS_FAILED);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9109        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9110        /* [cover parentID={15A4389B-F048-4133-8BC1-61C7DCD564DF}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9111        Fee_lHandleGcFail();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9112        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9113      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9114  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9115      /* GC  failure - a case where the GC triggers another GC */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9116      case FEE_GC_TRIG:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9117      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9118        /* [cover parentID={82304E5E-B10F-41b2-99CB-9168EE0163DF}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9119        production error enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9120        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9121        /* Report production error */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9122        #if (FEE_GC_TRIG_DEM_REPORT == FEE_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9123  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9124        /* [cover parentID={65B83B6F-AB0F-4a30-B718-3183A9FA7E2C}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9125        Report to Mcal_Wrapper on account of GC trigger failure FEE_E_GC_TRIG
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9126        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9127        Fee_lReportDemError(FEE_E_GC_TRIG, DEM_EVENT_STATUS_FAILED);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9128        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9129        /* [cover parentID={15A4389B-F048-4133-8BC1-61C7DCD564DF}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9130        Fee_lHandleGcFail();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9131        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9132      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9133      default:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9134      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9135        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9136      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9137  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9138    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9139  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9140  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9141  }/*End of Fee_lGcErrorHandler */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9142  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9143  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9144  ** Syntax : LOCAL_INLINE void Fee_lHandleGcFail(void)                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9145  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9146  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9147  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9148  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9149  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9150  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9151  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9152  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9153  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9154  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9155  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9156  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9157  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9158  ** Description : This function shall handle the severe error case or          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9159  ** internal job fail case during Garbage collection                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9160  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9161  /* [cover parentID={6E022F9A-F40D-47ef-8942-B91CFEC9BD34}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9162  LOCAL_INLINE void Fee_lHandleGcFail(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9163  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9164    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9165  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9166    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9167  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9168    /* Enter GC Fail state */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9169    StateDataPtr->FeeGcState = FEE_GC_FAIL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9170    /* [cover parentID={5B785984-4A46-4d77-A92C-F7F5C38E8602}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9171    Is illegal state notification configured?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9172    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9173    /* Raise Illegal state notification if configured */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9174    if(Fee_CfgPtr->FeeNvmIllegalStateNotification != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9175    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9176      /* [cover parentID={7D8E6AA9-44D9-4f7f-8BE8-D7B5F5DABABC}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9177      Call the notification function
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9178      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9179      /* Call the Notification function */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9180      Fee_CfgPtr->FeeNvmIllegalStateNotification();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9181    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9182  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9183  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9184  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9185  ** Syntax : static void Fee_lGcRead(const Fls_17_Dmu_AddressType Position,   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9186  **                                  const uint16 Offset)                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9187  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9188  ** Service ID:                                                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9189  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9190  ** Sync/Async:  Asynchronous                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9191  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9192  ** Reentrancy:  Non reentrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9193  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9194  ** Parameters (in) :(uint32)  Position: Dflash Address to read from          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9195  **                  (uint16) Offset: Offset of read write buffer             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9196  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9197  ** Parameters (out):  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9198  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9199  ** Return value    :  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9200  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9201  ** Description : Gives a read request during GC                              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9202  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9203  /* [cover parentID={FB953EC9-8278-497e-A1B9-8A52D4DDDEB4}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9204  static void Fee_lGcRead(const Fls_17_Dmu_AddressType Position,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9205                          const uint16 Offset)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9206  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9207    Fee_StateDataType    *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9208    uint8                *GcReadWriteBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9209    Fee_PageType          PendingPageCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9210    Fls_17_Dmu_LengthType        ReadLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9211    uint32                PendingBlockSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9212    uint16                GcSrcAddrOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9213    uint8               Error;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9214    uint16              BlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9215  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9216  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9217    ReadLength = FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9218    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9219  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9220    PendingPageCount = StateDataPtr->FeeGcCurrBlkInfo.PageCount -
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9221                       StateDataPtr->FeeBlkPageCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9222    PendingBlockSize = ((uint32)PendingPageCount << FEE_PAGE_TO_BYTE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9223    /* [cover parentID={B688E3ED-1D22-4b2d-8CB6-4B2774087182}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9224    if(PendingPageCount > FEE_ZERO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9225    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9226      /* [cover parentID={517A3C32-7DD6-4e94-8719-EC5D3AFA1E55}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9227      if(PendingBlockSize > (FEE_DFLASH_WORDLINE_SIZE - ((uint32)Offset)))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9228      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9229        ReadLength = (Fls_17_Dmu_LengthType)FEE_DFLASH_WORDLINE_SIZE - Offset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9230      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9231      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9232      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9233        ReadLength = (Fls_17_Dmu_LengthType)PendingBlockSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9234      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9235      GcSrcAddrOffset = (uint16)(Position & FEE_DFLASH_WORDLINE_SIZE_1);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9236      if(ReadLength >
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9237        ((Fls_17_Dmu_LengthType)FEE_DFLASH_WORDLINE_SIZE - GcSrcAddrOffset))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9238      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9239        if(Fee_lIsUnerasableAddr(Position + FEE_DFLASH_WORDLINE_SIZE) == TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9240        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9241          ReadLength =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9242            (Fls_17_Dmu_LengthType)FEE_DFLASH_WORDLINE_SIZE - GcSrcAddrOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9243        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9244      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9245    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9246  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9247    /* [cover parentID={3E97A7D6-D344-49ae-9E23-70E8FA850B90}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9248    Assign GcReadWriteBufferPtr as destination address by adding offset to FeeGcReadWriteBuffer
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9249    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9250  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9251    GcReadWriteBufferPtr = &(StateDataPtr->FeeGcReadWriteBuffer[Offset]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9252  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9253    /* initiate FLS read */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9254    Error = Fls_17_Dmu_Read(Position, GcReadWriteBufferPtr, ReadLength);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9255    /* [cover parentID={237CA2B3-0CA0-466b-8FD3-D5F4B8D74AB2}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9256    if(Error == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9257    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9258      StateDataPtr->FeeLastReadSize = ReadLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9259      StateDataPtr->FeeIntrJobStatus = FEE_JOB_REQSTD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9260      StateDataPtr->FeeIntrJob = FEE_READ_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9261    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9262    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9263    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9264      BlockIndex = Fee_lGetUsrBlockIndex(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9265                     StateDataPtr->FeeGcCurrBlkInfo.BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9266      /* [cover parentID={E42C759A-946D-4896-B9A5-28A3FE05189D}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9267      Call error handler with GC read error. Pass the block index for which read
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9268      error is occurred. This block will be marked as inconsistent and discarded
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9269      from the GC.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9270      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9271      Fee_lGcErrorHandler(FEE_GC_READ, BlockIndex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9272    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9273  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9274  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9275  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9276  ** Syntax : static uint8 Fee_lGcWrite(const Fls_17_Dmu_AddressType Position,  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9277  **                                    const uint16 Offset)                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9278  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9279  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9280  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9281  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9282  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9283  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9284  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9285  ** Parameters (in) :  Position: Dflash Address to write                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9286  **                    Offset: Offset of read write buffer (page0 / page1)     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9287  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9288  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9289  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9290  ** Return value    :  uint8                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9291  **                 FEE_GC_E_OK: Write request is accepted by underlying flash **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9292  **                  driver                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9293  **                 FEE_GC_WRITE : Write request is accepted by underlying     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9294  **                 flash driver                                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9295  ** Description : Gives a write request and sets the error flag                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9296  **               in case of an error.                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9297  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9298  /* [cover parentID={E8C77A0A-929A-4ef6-A01E-23CCE785236A}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9299  Fee_lGcWrite
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9300  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9301  /* [cover parentID={CA65836F-F856-4887-AF12-D1A503ACDB17}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9302  static uint8 Fee_lGcWrite(const Fls_17_Dmu_AddressType Position,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9303                            const uint16 Offset)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9304  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9305    Std_ReturnType      ReturnValueFls;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9306    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9307    const uint8              *GcReadWriteBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9308    uint8               Error;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9309  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9310    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9311    Error = FEE_GC_E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9312  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9313    GcReadWriteBufferPtr = &(StateDataPtr->FeeGcReadWriteBuffer[Offset]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9314    StateDataPtr->FeeIntrJobStatus = FEE_JOB_REQSTD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9315    StateDataPtr->FeeIntrJob = FEE_WRITE_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9316    StateDataPtr->FeeLastWriteSize = StateDataPtr->FeeLastReadSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9317    /* [cover parentID={DE930912-BB92-4303-B56F-424CAA503224}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9318    ReturnValueFls = Fls_17_Dmu_Write(Position,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9319                                      GcReadWriteBufferPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9320                                      StateDataPtr->FeeLastWriteSize);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9321    /* if the Fls routine did not accept the request         */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9322    /* then report production error and Set GC state to FEE_GC_IDLE */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9323    /* [cover parentID={5888CF87-26FF-41f9-8C05-06ADBB67926A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9324    if(ReturnValueFls == E_NOT_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9325    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9326      /* Any failure from FLS (both DET,production error) will trigger Illegal notification
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9327         and FEE production error. Note Fee_JobErrorNotification will NOT raise any
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9328         illegal notification / production error in case of internal job failures */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9329      Error = FEE_GC_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9330    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9331  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9332    return(Error);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9333  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9334  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9335  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9336  ** Syntax : LOCAL_INLINE void Fee_lGcRequested(void)                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9337  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9338  ** Service ID:  NA                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9339  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9340  ** Sync/Async:  Synchronous                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9341  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9342  ** Reentrancy:  Non reentrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9343  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9344  ** Parameters (in) :  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9345  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9346  ** Parameters (out):  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9347  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9348  ** Return value    :  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9349  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9350  ** Description : This routine is responsible for handling Garbage Collection **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9351  **                GC REQUESTED state                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9352  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9353  /* [cover parentID={E59E08F7-AD94-4fb4-B247-A6F1C3D085F8}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9354  LOCAL_INLINE void Fee_lGcRequested(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9355  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9356    Fee_CacheType         *CachePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9357    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9358    Fee_CacheType         *UnconfigBlockPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9359    uint16                 BlockCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9360    uint8                  GcState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9361  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9362    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9363    /* Initialize the copied status for all the logical blocks */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9364    CachePtr = StateDataPtr->FeeBlockInfo;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9365    BlockCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9366  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9367    do
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9368    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9369      CachePtr->Status.Copied = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9370      CachePtr->Status.PrevCopyCopied = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9371      BlockCount++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9372  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9373      CachePtr++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9374    } while(BlockCount != Fee_CfgPtr->FeeBlkCnt);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9375  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9376    /* Update the source and destination pointers based on the current sector */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9377    if(StateDataPtr->FeeStatusFlags.FeeCurrSector == (uint32)FEE_SECTOR0)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9378    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9379      StateDataPtr->FeeGcDestAddr = StateDataPtr->FeeSectorInfo[1].NextFreeWLAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9380      StateDataPtr->FeeGcSrcAddr = FEE_DFLASH_BANK0_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9381    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9382    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9383    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9384      StateDataPtr->FeeGcDestAddr = StateDataPtr->FeeSectorInfo[0].NextFreeWLAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9385      StateDataPtr->FeeGcSrcAddr = FEE_DFLASH_BANK1_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9386    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9387    StateDataPtr->FeeBlkPageCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9388    StateDataPtr->FeeStatusFlags.FeeBlkModified = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9389    StateDataPtr->FeeGCCopyIndex = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9390    /* Functionality to take care of unconfigured blocks starts ******/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9391  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9392    GcState = FEE_GC_START_COPY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9393  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9394    StateDataPtr->FeeGcBlkIndexInWL = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9395  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9396    /* Clear the copied status of un-configured blocks */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9397    /* [cover parentID={1D42BAE6-EE9D-4cb7-9420-35D5764EE134}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9398    Check for unconfigured blocks
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9399    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9400    if ((Fee_CfgPtr->FeeGCConfigSetting.FeeUnconfigBlock ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9401         FEE_UNCONFIG_BLOCK_KEEP)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9402        && (StateDataPtr->FeeUnConfigBlockCount != FEE_RESET))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9403    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9404      BlockCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9405  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9406      while(BlockCount < StateDataPtr->FeeUnConfigBlockCount)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9407      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9408  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9409        UnconfigBlockPtr = &(StateDataPtr->FeeBlockInfo[(Fee_CfgPtr->FeeBlkCnt
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9410                             + BlockCount)]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9411        UnconfigBlockPtr->Status.Copied = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9412        BlockCount++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9413      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9414  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9415      StateDataPtr->FeeGCUnconfigBlkCopyIndex = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9416      GcState = FEE_GC_UNCFG_START_COPY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9417    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9418  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9419    StateDataPtr->FeeGcState = GcState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9420  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9421  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9422  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9423  ** Syntax : static void Fee_lGcPrologue(void)                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9424  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9425  ** Service ID:                                                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9426  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9427  ** Sync/Async:  Asynchronous                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9428  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9429  ** Reentrancy:  Non reentrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9430  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9431  ** Parameters (in) :  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9432  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9433  ** Parameters (out):  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9434  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9435  ** Return value    :  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9436  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9437  ** Description : This routine is responsible for handling transitions from   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9438  ** FEE_GC_UNCONFIG_BLOCK_READ_NXTPAGE and  FEE_GC_COPY_READ_NXTPAGE states.  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9439  ** The transitions from the above states are handled as Prologue and not as  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9440  ** part of the state itself. This is to avoid one main cycle delay           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9441  ** in executing the next pass state (FEE_GC_UNCONFIG_BLOCK_WRITE or          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9442  ** FEE_GC_START_COPY_WRITE)                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9443  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9444  /* [cover parentID={4070EA65-5A60-4635-8CC7-DC52B26CC648}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9445  static void Fee_lGcPrologue(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9446  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9447    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9448    uint16                 BlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9449  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9450    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9451    /* [cover parentID={10B1867E-75B8-4456-A209-2A454D1EFF06}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9452    if (StateDataPtr->FeeIntrJobStatus == FEE_JOB_DONE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9453    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9454      /* [cover parentID={C0DAA55F-B277-4d13-B18F-4AD45A09418D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9455      if (StateDataPtr->FeeGcState == FEE_GC_UNCFG_COPY_READ_NXTPAGE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9456      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9457        /* Reset the job status */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9458        StateDataPtr->FeeIntrJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9459        /* [cover parentID={C1D9507B-B82A-496a-A8CB-41551D958965}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9460        if(StateDataPtr->FeeIntrJobResult == FEE_JOB_FAIL)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9461        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9462          /* [cover parentID={5EF6959E-A0F5-435a-B8B9-0DD93282D768}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9463          BlockIndex = Fee_lGetUsrBlockIndex(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9464                         StateDataPtr->FeeGcCurrBlkInfo.BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9465          /* [cover parentID={F607CD30-2BFD-4c58-8DCE-2BB53AB3FD5A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9466          Fee_lGcErrorHandler(FEE_GC_READ, BlockIndex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9467        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9468        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9469        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9470          StateDataPtr->FeeGcState = FEE_GC_UNCFG_COPY_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9471        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9472      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9473      /* [cover parentID={819EF908-7583-4ba5-B392-1E11AC4ED3C7}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9474      else if (StateDataPtr->FeeGcState == FEE_GC_COPY_READ_NXTPAGE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9475      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9476        StateDataPtr->FeeIntrJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9477        /* [cover parentID={7BD3222C-EDD7-4871-8188-9387C222901E}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9478        if(StateDataPtr->FeeIntrJobResult == FEE_JOB_FAIL)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9479        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9480          BlockIndex = Fee_lGetUsrBlockIndex(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9481                         StateDataPtr->FeeGcCurrBlkInfo.BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9482          Fee_lGcErrorHandler(FEE_GC_READ, BlockIndex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9483        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9484        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9485        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9486          StateDataPtr->FeeGcState = FEE_GC_COPY_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9487        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9488      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9489      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9490      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9491        /* dummy else */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9492      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9493    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9494  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9495  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9496  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9497  ** Syntax : static void Fee_lGcDiscardUnconfigBlk(void)                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9498  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9499  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9500  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9501  ** Sync/Async: Synchronous                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9502  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9503  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9504  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9505  ** Parameters (in) : uint16 Block index in cache table                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9506  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9507  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9508  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9509  ** Return value    :  void                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9510  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9511  ** Description : This function discards the un-configured block               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9512  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9513  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9514  /* [cover parentID={B1EFBE21-A5EE-42b3-8409-37091234EE38}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9515  Fee_lGcDiscardUnconfigBlk
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9516  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9517  /* [cover parentID={8CAAE484-4DC8-4a7f-B7CD-A9715EF088CC}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9518  static void Fee_lGcDiscardUnconfigBlk(const uint16 Index)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9519  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9520    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9521    Fee_CacheType         *UnconfigBlockPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9522    uint16                 BlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9523    uint16                 Count;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9524  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9525    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9526    /* Check if the block index is in range. if not find the block index using
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9527    the FeeGcCurrBlkInfo. FeeGcCurrBlkInfo is updated only we are able read the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9528    header of the block properly. In case we are not able read header of block
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9529    given index will have valid value. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9530    if(FEE_LOG_BLOCK_NOT_FOUND != Index)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9531    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9532      BlockIndex = Index;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9533      UnconfigBlockPtr = &(StateDataPtr->FeeBlockInfo[Index]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9534    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9535    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9536    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9537      /*Find the block index for unconfigured block*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9538      BlockIndex = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9539      UnconfigBlockPtr = &(StateDataPtr->FeeBlockInfo[Fee_CfgPtr->FeeBlkCnt]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9540      while((BlockIndex < (StateDataPtr->FeeUnConfigBlockCount)) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9541            (StateDataPtr->FeeGcCurrBlkInfo.BlockNumber !=
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9542             UnconfigBlockPtr->BlockNumber))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9543      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9544        BlockIndex++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9545        UnconfigBlockPtr++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9546      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9547    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9548  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9549    /* Discard the block from cache table and reduce the number of un-configured
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9550    by 1 and update the cache table for un-configured block */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9551    (StateDataPtr->FeeUnConfigBlockCount)--;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9552    Count = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9553    /* [cover parentID={A9439147-E612-4046-9A97-DE873B2DA3DB}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9554    while(BlockIndex < (StateDataPtr->FeeUnConfigBlockCount))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9555    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9556  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9557      UnconfigBlockPtr[Count].BlockNumber =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9558        UnconfigBlockPtr[Count + FEE_ONE].BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9559  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9560      UnconfigBlockPtr[Count].Address =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9561        UnconfigBlockPtr[Count + FEE_ONE].Address;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9562  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9563      BlockIndex++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9564      Count ++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9565  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9566    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9567  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9568  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9569  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9570  ** Syntax : static void Fee_lGcDiscardConfigBlk(const uint16 Index)           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9571  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9572  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9573  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9574  ** Sync/Async: Synchronous                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9575  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9576  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9577  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9578  ** Parameters (in) :  uint16 Block index in cache table.                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9579  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9580  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9581  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9582  ** Return value    :  void                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9583  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9584  ** Description : This function discards the configured block which has the ECC**
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9585  **               error while reading the block during GC.Also mark this block **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9586  **               as inconsistent in cache table.                              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9587  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9588  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9589  /* [cover parentID={1370397F-B0B8-4f50-80A8-04D9EA12F60E}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9590  Fee_lGcDiscardConfigBlk
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9591  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9592  /* [cover parentID={AECD8CC8-8CD5-4f72-A4A6-EA8B60DD9D50}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9593  static void Fee_lGcDiscardConfigBlk(const uint16 Index)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9594  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9595    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9596    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9597  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9598    /*Mark the block as inconsistent*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9599    StateDataPtr->FeeBlockInfo[Index].Status.Consistent = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9600    StateDataPtr->FeeBlockInfo[Index].Address = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9601  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9602  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9603  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9604  ** Syntax : static boolean Fee_lGcCheckBlkCopy(void)                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9605  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9606  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9607  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9608  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9609  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9610  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9611  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9612  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9613  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9614  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9615  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9616  ** Return value    :  boolean RetVal:                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9617  **                    TRUE: There is a block to be copied                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9618  **                    FALSE:No block is to be copied                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9619  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9620  ** Description : This routine checks the cache table starting from the        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9621  **  FeeGCCopyIndex and finds if any block needs to be copied                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9622  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9623  /* [cover parentID={382A336E-F484-4366-A128-016FB29EAAE6}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9624  static boolean Fee_lGcCheckBlkCopy(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9625  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9626    Fee_StateDataType    *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9627    const Fee_CacheType        *CachePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9628    uint16                BlockCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9629    boolean                 RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9630  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9631    RetVal = FALSE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9632  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9633    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9634    BlockCount = StateDataPtr->FeeGCCopyIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9635  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9636    CachePtr = &(StateDataPtr->FeeBlockInfo[BlockCount]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9637    /* [cover parentID={C20B58DB-BA71-4e85-B000-11D95B2A9CAD}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9638    while ((RetVal == FALSE) && (BlockCount != Fee_CfgPtr->FeeBlkCnt))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9639    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9640      /* If block is consistent and not copied */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9641      /* [cover parentID={DF5B1B7F-7A7D-406c-9B0D-6B048833674B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9642      if ((CachePtr->Status.Consistent == (uint32)FEE_SET ) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9643          (CachePtr->Status.Copied == (uint32)FEE_RESET))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9644      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9645        RetVal = TRUE ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9646      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9647      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9648      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9649        BlockCount++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9650  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9651        CachePtr++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9652      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9653    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9654    StateDataPtr->FeeGCCopyIndex = BlockCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9655  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9656    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9657  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9658  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9659  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9660  ** Syntax : static void Fee_lGcStartCopy(void)                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9661  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9662  ** Service ID:  NA                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9663  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9664  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9665  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9666  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9667  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9668  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9669  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9670  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9671  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9672  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9673  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9674  ** Description : This routine is responsible for handling Garbage Collection  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9675  **                GC START COPY state                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9676  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9677  /* [cover parentID={CF14D4EB-C9EE-45f2-A48B-B7EB2D144604}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9678  static void Fee_lGcStartCopy(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9679  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9680    Fee_CacheType         *CachePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9681    const Fee_CacheType         *UnconfigBlockPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9682    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9683    uint32                 DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9684    uint16                 Offset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9685    uint16                 Index;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9686    boolean                StateFlag;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9687    Std_ReturnType         Error;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9688  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9689    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9690  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9691    /* [cover parentID={282D6316-73B6-4560-87AA-6A7C70648F97}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9692    if (StateDataPtr->FeeIntrJobStatus == FEE_JOB_DONE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9693    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9694      StateDataPtr->FeeIntrJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9695      /* [cover parentID={10B10B9F-CEA0-44c5-9E14-879CC8744A9E}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9696      if(StateDataPtr->FeeIntrJobResult == FEE_JOB_FAIL)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9697      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9698        Index = Fee_lGetUsrBlockIndex(StateDataPtr->FeeGcCurrBlkInfo.BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9699        Fee_lGcErrorHandler(FEE_GC_READ, Index);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9700      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9701      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9702      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9703        /* [cover parentID={A79A03B0-F737-4b78-8D0A-49FFADFDB102}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9704        if(StateDataPtr->FeeGcState == FEE_GC_START_COPY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9705        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9706          StateDataPtr->FeeGcState = FEE_GC_COPY_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9707        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9708        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9709        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9710          StateDataPtr->FeeGcState = FEE_GC_UNCFG_COPY_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9711        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9712      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9713    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9714    /* [cover parentID={727CE9C0-9FB9-4749-8015-188C8770D8B2}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9715    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9716    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9717      /* i.e. StateDataPtr->FeeGcState == FEE_GC_START_COPY */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9718      DestAddr = (uint32)StateDataPtr->FeeGcDestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9719  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9720      /* No more blocks to be copied in the current pass -
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9721         check if any block is modified during GC */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9722  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9723      if(StateDataPtr->FeeGcState == FEE_GC_UNCFG_START_COPY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9724      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9725        /* [cover parentID={16F6A5B6-A50A-4305-83EE-012DF6EEEE1A}] [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9726        StateFlag = Fee_lGcCheckUnconfigBlkCopy();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9727      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9728      else /* if(StateDataPtr->FeeGcState == FEE_GC_START_COPY) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9729      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9730        /* Check if there are any more blocks to be copied */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9731        /* [cover parentID={0F4E7119-308D-462f-897A-8FF41BA2AFCB}] [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9732        StateFlag = Fee_lGcCheckBlkCopy();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9733        /* [cover parentID={C9AE3945-0139-4dc2-AB7A-76ADF8E5006A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9734        if (StateFlag == (boolean)FALSE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9735        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9736          /* if any of the logical blocks were modified */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9737          /* [cover parentID={76CBC2E7-1D59-4c40-A6D5-77FFFC8D8E53}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9738          if(StateDataPtr->FeeStatusFlags.FeeBlkModified == (uint32)FEE_SET )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9739          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9740            StateDataPtr->FeeStatusFlags.FeeBlkModified = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9741            StateDataPtr->FeeGCCopyIndex = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9742            /* [cover parentID={6F04A339-1529-49c2-85DD-F9999B057308}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9743            StateFlag = Fee_lGcCheckBlkCopy();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9744          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9745        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9746      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9747  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9748      /* Block copying not yet completed */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9749      /* [cover parentID={C37C25E8-0F6E-4122-B453-0FA545BA3E9E}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9750      if(StateFlag == (boolean)TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9751      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9752        /* [cover parentID={29F68CA1-B0B1-4d12-A104-0AA31D3263C4}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9753        if(StateDataPtr->FeeGcState == FEE_GC_UNCFG_START_COPY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9754        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9755  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9756          UnconfigBlockPtr = &(StateDataPtr->FeeBlockInfo[(Fee_CfgPtr->FeeBlkCnt)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9757                               + (StateDataPtr->FeeGCUnconfigBlkCopyIndex)]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9758  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9759          StateDataPtr->FeeGcSrcAddr = UnconfigBlockPtr->Address;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9760  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9761          /*Store cache index of block for passing in Fee_lGcErrorHandler in case
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9762          of read error while reading header page  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9763          Index = StateDataPtr->FeeGCUnconfigBlkCopyIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9764  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9765        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9766  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9767        else /* FeeGcState == FEE_GC_START_COPY */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9768        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9769          CachePtr = &(StateDataPtr->FeeBlockInfo[StateDataPtr->FeeGCCopyIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9770          StateDataPtr->FeeGcSrcAddr = CachePtr->Address;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9771  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9772          /*Store cache index of block for passing in Fee_lGcErrorHandler in case
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9773          of read error while reading header page  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9774          Index = StateDataPtr->FeeGCCopyIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9775        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9776        StateDataPtr->FeeBlkPageCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9777        Offset = (uint16) (DestAddr & (uint32)FEE_DFLASH_WORDLINE_SIZE_1);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9778        /* [cover parentID={96E0CB38-D82C-4718-B8F0-EF0D09BE9A29}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9779        if (Offset == FEE_ZERO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9780        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9781          Fee_lClearFeeGcReadWriteBuffer();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9782        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9783        /* Fill Current Block information */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9784        /* Read the header (first 8bytes) of the block to update the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9785          GC Current Block information */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9786  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9787        /*MISRA2012_RULE_11_3_JUSTIFICATION:This is done for interfacing with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9788        FLS.FEE is passing parameters to FLS APIs, casting is needed to match with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9789        the Fls API prototype. FeeGcReadWriteBuffer is member of Fee_StateDataType
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9790        structure. FeeGcReadWriteBuffer is 4 byte aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9791        /* [cover parentID={AFC4BD68-1B6A-4ad2-9BA4-499169C180C5}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9792        Error = Fls_17_Dmu_ReadWordsSync(\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9793                     (Fls_17_Dmu_AddressType)StateDataPtr->FeeGcSrcAddr, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9794                     (uint32 *)(&(StateDataPtr->FeeGcReadWriteBuffer[Offset])), \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9795                     (Fls_17_Dmu_LengthType)\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9796                     (FEE_DFLASH_PAGE_SIZE / FEE_DFLASH_WORD_SIZE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9797        /* [cover parentID={42A579A4-363A-403a-A555-168792D77DF4}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9798        if(Error == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9799        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9800          /* [cover parentID={C3E77B1B-B10B-47f8-BA17-68AB83EB0B38}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9801          Fee_lUpdateGcCurrBlockInfo();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9802          /* [cover parentID={97257093-6C41-45ea-B83B-5D58B0FFDB10}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9803          Fee_lGcRead((Fls_17_Dmu_AddressType)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9804                      (StateDataPtr->FeeGcSrcAddr), Offset);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9805        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9806        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9807        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9808          /*Not able read the block , trigger the GC_READ_DEM and discard the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9809          block*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9810          /* [cover parentID={6E143EFD-4DFF-40fb-8539-03217671E641}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9811          Fee_lGcErrorHandler(FEE_GC_READ, Index);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9812  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9813        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9814  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9815      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9816      /* Finished copying all the configured OR unconfigured blocks */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9817      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9818      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9819        /* [cover parentID={F2E9DFD4-FDCE-4b4d-B2DB-80A41DC340D9}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9820        if (Fee_lIsWLBeginning(DestAddr) != FEE_NEW_WL_BEGIN)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9821        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9822          DestAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9823        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9824        Fee_lClearFeeGcReadWriteBuffer();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9825        StateDataPtr->FeeGcDestAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9826  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9827        /* Clear the compare fail count*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9828        StateDataPtr->FeeIntrJobFailCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9829        /* [cover parentID={CEC47DC8-6924-40a5-9855-C2DF63A4AC9D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9830        if(StateDataPtr->FeeGcState == FEE_GC_START_COPY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9831        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9832          /* Finished copying all the configured blocks */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9833          /* Mark the previous copy of blocks as inconsistent for the blocks which
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9834          are not updated during GC - this means that only the latest data is
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9835          copied during GC and there is no previous copy in the new sector */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9836          Index = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9837          do
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9838          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9839            CachePtr = &(StateDataPtr->FeeBlockInfo[Index]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9840            if (CachePtr->Status.PrevCopyCopied == (uint32)FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9841            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9842  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9843              CachePtr->PrevCopyAddress = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9844              CachePtr->Status.PrevCopyValid = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9845              CachePtr->Status.PrevCopyConsistent = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9846              CachePtr->Status.PrevCopyCopied = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9847            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9848            Index++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9849          } while(Index < Fee_CfgPtr->FeeBlkCnt);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9850  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9851          /* Move to next state */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9852          StateDataPtr->FeeGcState = FEE_GC_MARK_SECTOR1_V_SP;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9853        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9854        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9855        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9856          /* Finished copying all the unconfigured blocks */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9857          /* Now copy all the configured blocks */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9858          StateDataPtr->FeeGcState = FEE_GC_START_COPY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9859        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9860      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9861    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9862  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9863  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9864  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9865  ** Syntax : static uint8 Fee_lGcStartCopyWrite(void)                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9866  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9867  ** Service ID:  NA                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9868  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9869  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9870  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9871  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9872  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9873  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9874  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9875  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9876  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9877  ** Return value    :  uint8                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9878  **                    FEE_GC_E_OK : No error operation is successful          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9879  **                    FEE_GC_WRITE: GC write operation is failed              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9880  **                    FEE_GC_TRIG : GC operation triggers the another GC      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9881  **                                  Operation                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9882  ** Description : This routine is responsible for handling Garbage Collection  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9883  **                GC START COPY WRITE state                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9884  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9885  /* [cover parentID={8D5A86A2-A570-443a-B11E-1FA7E7FF2B31}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9886  static uint8 Fee_lGcStartCopyWrite(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9887  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9888    Fee_StateDataType    *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9889    const Fee_GcBlkInfoType    *GcCurrBlkPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9890    uint32                DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9891    uint32                PageCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9892    uint32                FreePages;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9893    uint16                Offset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9894    uint8                 BankNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9895    uint8                 Error;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9896  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9897    Error = FEE_GC_E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9898    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9899    GcCurrBlkPtr = &(StateDataPtr->FeeGcCurrBlkInfo);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9900    /* [cover parentID={BB5587D9-1C7A-4e1f-9A97-54071C97D7CF}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9901    if (StateDataPtr->FeeIntrJobStatus == FEE_JOB_DONE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9902    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9903      StateDataPtr->FeeIntrJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9904  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9905      /*Check if write operation is failed due other than PVER. If yes then
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9906      report the FEE_GC_WRITE error otherwise retry write operation. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9907      /* [cover parentID={7065BEF1-7A5F-4e56-BA67-2BB6E12A557E}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9908      if((StateDataPtr->FeeIntrJobResult == FEE_JOB_FAIL) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9909          (StateDataPtr->FeeProgVerErr == FEE_RESET))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9910      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9911        /* [cover parentID={D4B42884-BB10-49c3-9104-92022282D487}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9912        Error = FEE_GC_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9913      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9914      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9915      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9916        /* [cover parentID={27086814-0DC0-4abe-9D7C-B044D20C0513}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9917        Fee_lGcBlkCompare();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9918      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9919    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9920    /* [cover parentID={25A35889-F366-46ec-AFF7-1988A925067C}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9921    else if(StateDataPtr->FeeComparedLen != (uint16)FEE_ZERO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9922    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9923      /* [cover parentID={C8D3C9A8-819C-4df2-AA1A-7F2435D8D857}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9924      Fee_lGcBlkCompare();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9925    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9926    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9927    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9928      /* i.e. StateDataPtr->FeeGcState == FEE_GC_COPY_WRITE */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9929      DestAddr = (uint32)StateDataPtr->FeeGcDestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9930      /* [cover parentID={C4066C1A-186B-4d26-9F99-670DA791FA4B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9931      while(Fee_lIsUnerasableAddr(DestAddr) == TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9932      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9933        DestAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9934      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9935      StateDataPtr->FeeGcDestAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9936  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9937      /*************** CHECK for the case of GC TRIGGERING GC *****************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9938      /* [cover parentID={6B36C224-EB1F-47cb-A635-7C521CC64DBC}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9939      if (StateDataPtr->FeeBlkPageCount == FEE_ZERO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9940      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9941        /* Get the Destination sector - It is the sector other than curr sector*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9942        BankNumber =(uint8)StateDataPtr->FeeStatusFlags.FeeCurrSector^FEE_SECTOR1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9943        /* Find the free pages in the destination sector */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9944        FreePages = Fee_lGetFreeDFLASHPages(BankNumber, DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9945        /* Get the block page count */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9946        PageCount = (uint32)StateDataPtr->FeeGcCurrBlkInfo.PageCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9947        /* Check if the block is crossing the threshold */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9948        /* [cover parentID={8B491B9B-DE7C-46fa-B333-BE009A192429}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9949        if ((boolean)TRUE == Fee_lIsSectorThresholdCrossed(FreePages, PageCount))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9950        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9951          Error = FEE_GC_TRIG;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9952        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9953      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9954      /* [cover parentID={5013CBAE-2EDA-4edd-A716-B9A0E721B4EC}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9955      if (Error == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9956      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9957        Offset = (uint16) (DestAddr & FEE_DFLASH_WORDLINE_SIZE_1);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9958        /* [cover parentID={7E1EF1A8-C413-4dc7-9244-F92675E95841}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9959        if(Offset == FEE_ZERO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9960        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9961          StateDataPtr->FeeGcFirstBlkNumInWL = GcCurrBlkPtr->BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9962          StateDataPtr->FeeGcBlkIndexInWL = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9963        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9964        /* [cover parentID={88EF6E27-0D37-4e33-BE74-9113ABB802A5}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9965        if(StateDataPtr->FeeBlkPageCount == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9966        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9967          StateDataPtr->FeeBlockStartAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9968        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9969        /* [cover parentID={E38394F3-429A-49db-A187-94D04DE16511}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9970        Error = Fee_lGcWrite((Fls_17_Dmu_AddressType)DestAddr, Offset);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9971      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9972    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9973  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9974    return(Error);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9975  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9976  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9977  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9978  ** Syntax : static void Fee_lGcCopyReadNxtPage(void)                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9979  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9980  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9981  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9982  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9983  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9984  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9985  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9986  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9987  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9988  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9989  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9990  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9991  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9992  ** Description : This routine is responsible for handling Garbage Collection  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9993  **                FEE_GC_COPY_READ_NXTPAGE state                              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9994  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9995  /* [cover parentID={5A35275E-BE0A-4017-9492-A74355CB54BD}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9996  Fee_lGcCopyReadNxtPage
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9997  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9998  /* [cover parentID={E6CE4869-0645-446a-890A-E4E940C84869}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9999  static void Fee_lGcCopyReadNxtPage(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10000  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10001    uint32                 SrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10002    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10003    uint16                 Offset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10004  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10005    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10006  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10007    /* The transitions from this state are handled as part of Fee_lGcPrologue
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10008       Hence only state actions are done here */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10009  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10010    Offset = (uint16) ((StateDataPtr->FeeGcDestAddr) &
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10011                       (uint32)FEE_DFLASH_WORDLINE_SIZE_1);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10012    SrcAddr = StateDataPtr->FeeGcSrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10013    /* [cover parentID={8EE90F45-4DC9-4a93-8B49-468FFB179969}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10014    while(Fee_lIsUnerasableAddr(SrcAddr) == TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10015    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10016      SrcAddr = Fee_lGetNextWLAddr(SrcAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10017    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10018    StateDataPtr->FeeGcSrcAddr = SrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10019    /* [cover parentID={570C2831-A89A-4920-B83B-D14596185FA3}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10020    Fee_lGcRead((Fls_17_Dmu_AddressType)(StateDataPtr->FeeGcSrcAddr), Offset);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10021  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10022  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10023  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10024  ** Syntax : LOCAL_INLINE void Fee_lGcBlkCompare(void)                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10025  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10026  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10027  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10028  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10029  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10030  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10031  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10032  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10033  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10034  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10035  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10036  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10037  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10038  ** Description : Performs compare actions on FEE_GC_START_COPY_WRITE          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10039  **               during Garbage collection                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10040  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10041  /* [cover parentID={16B182B9-FE60-4d9d-AFFA-B333EFE37022}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10042  Fee_lGcBlkCompare
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10043  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10044  /* [cover parentID={ABFF19ED-B7D1-4465-AD16-8FADF69A33D9}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10045  LOCAL_INLINE void Fee_lGcBlkCompare(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10046  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10047    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10048    const Fee_GcBlkInfoType     *GcCurrBlkPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10049    Fee_CacheType         *CachePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10050    Fee_CacheType         *UnconfigBlockPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10051    uint32                 DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10052    Fls_17_Dmu_AddressType        CompAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10053    Fls_17_Dmu_LengthType         CompLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10054    Fls_17_Dmu_LengthType         TmpCompareLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10055    uint16                 BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10056    uint16                 Index;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10057    Std_ReturnType         ReturnVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10058  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10059    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10060    CachePtr = StateDataPtr->FeeBlockInfo;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10061    ReturnVal = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10062    UnconfigBlockPtr = &(StateDataPtr->FeeBlockInfo[Fee_CfgPtr->FeeBlkCnt]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10063  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10064    GcCurrBlkPtr = &(StateDataPtr->FeeGcCurrBlkInfo);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10065  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10066    DestAddr = StateDataPtr->FeeGcDestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10067    /* Compare entire WL */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10068    CompAddr = (Fls_17_Dmu_AddressType)Fee_lGetWLBeginning(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10069  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10070    CompLength = (StateDataPtr->FeeGcDestAddr) &
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10071                 (Fls_17_Dmu_LengthType)FEE_DFLASH_WORDLINE_SIZE_1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10072    CompLength += (StateDataPtr->FeeLastWriteSize);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10073    TmpCompareLength = CompLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10074  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10075    CompLength -=  StateDataPtr->FeeComparedLen;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10076    /* [cover parentID={5F17C0EE-25ED-4649-8348-2C13F8AE82DD}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10077    if(CompLength > FEE_COMPARE_LEN_MAX)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10078    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10079      CompLength = FEE_COMPARE_LEN_MAX;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10080    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10081  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10082    /* [cover parentID={7ED03950-A3D6-4943-A82A-B6CD11926EA8}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10083    if(StateDataPtr->FeeProgVerErr == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10084    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10085      /*MISRA2012_RULE_11_3_JUSTIFICATION:This is done for interfacing with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10086      FLS.FEE is passing parameters to FLS APIs, casting is needed to match with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10087      the Fls API prototype. FeeGcReadWriteBuffer is 4 byte aligned which is part
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10088      of Fee_StateDataType.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10089      /* [cover parentID={FD88B256-3E35-4ecd-B50A-BC0E0CF92C5C}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10090      ReturnVal = Fls_17_Dmu_CompareWordsSync( \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10091                  (CompAddr + StateDataPtr->FeeComparedLen), \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10092                  (uint32 *)(&(StateDataPtr->FeeGcReadWriteBuffer\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10093                               [StateDataPtr->FeeComparedLen])), \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10094                  (CompLength / FEE_DFLASH_WORD_SIZE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10095  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10096      StateDataPtr->FeeComparedLen += (uint16)CompLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10097    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10098  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10099    /* Compare failed or PVER error is set.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10100    /* [cover parentID={25A9CD53-11A4-4a71-AC5A-3E3DA94409B3}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10101    if((ReturnVal == E_NOT_OK) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10102        (StateDataPtr->FeeProgVerErr == FEE_SET))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10103    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10104      StateDataPtr->FeeComparedLen = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10105      /*Reset the FeeProgVerErr flag*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10106      StateDataPtr->FeeProgVerErr = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10107      /* [cover parentID={72657EFF-D435-4a8b-AAD1-44DDD86D5F5D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10108      if(StateDataPtr->FeeIntrJobFailCount == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10109      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10110        StateDataPtr->FeeIntrJobFailCount++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10111        /* [cover parentID={7D6A8405-D9F4-416f-AF73-AED1E5A32112}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10112        if(StateDataPtr->FeeGcState == FEE_GC_UNCFG_COPY_WRITE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10113        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10114          /* [cover parentID={004D374A-B888-4250-8A68-B8D43FC0FB6D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10115          if(StateDataPtr->FeeGcBlkIndexInWL != FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10116          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10117            /* [cover parentID={FB8D8524-A03F-4f0c-B756-CC9FCF3D2877}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10118            Fee_lHandleUnConfigGcCopyError();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10119          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10120          StateDataPtr->FeeGcState = FEE_GC_UNCFG_START_COPY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10121        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10122        /* [cover parentID={C3D10F3F-2264-404c-8639-13C8EFCA19EB}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10123        else /* FeeGcState == FEE_GC_COPY_WRITE */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10124        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10125          if(StateDataPtr->FeeGcBlkIndexInWL != FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10126          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10127            Fee_lHandleConfigGcCopyError();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10128          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10129          StateDataPtr->FeeGcState = FEE_GC_START_COPY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10130        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10131        /* Switch the destination address to next to next free WL*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10132        DestAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10133        DestAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10134        StateDataPtr->FeeGcDestAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10135      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10136      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10137      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10138        /* Write Fail two time raise the illegal notification.block index
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10139        parameters is not used for write error , so passed as parameter not used.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10140        Block index is used only for read error to drop the block from GC process.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10141        */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10142        /* [cover parentID={3372162C-77BA-4a23-B405-D95A3FA0BC0D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10143        Fee_lGcErrorHandler(FEE_GC_WRITE, FEE_UNUSED_PARAM);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10144      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10145    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10146    else if(StateDataPtr->FeeComparedLen != (uint16)TmpCompareLength)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10147    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10148      /* dummy else if to skip else for in-between loops */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10149    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10150    /* Compare successful */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10151    /* [cover parentID={9C0F4F7A-18C0-426c-A76B-34AB370FFC69}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10152    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10153    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10154      StateDataPtr->FeeComparedLen = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10155      StateDataPtr->FeeGcSrcAddr += StateDataPtr->FeeLastWriteSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10156      StateDataPtr->FeeGcDestAddr += StateDataPtr->FeeLastWriteSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10157  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10158      StateDataPtr->FeeBlkPageCount +=
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10159        (Fee_PageType)(StateDataPtr->FeeLastWriteSize >> FEE_BYTE_TO_PAGE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10160      /* [cover parentID={CC13B929-BBE2-4ebe-994F-872EE677245D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10161      if (StateDataPtr->FeeBlkPageCount == (GcCurrBlkPtr->PageCount + FEE_ONE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10162      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10163        /* Clear the compare fail count if the block write is complete */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10164        /* Count shall not be cleared upon completion of previous block write */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10165        /* [cover parentID={104EC542-3AAC-4df4-A787-25823B8CCF52}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10166        if (GcCurrBlkPtr->BlockNumber != StateDataPtr->FeeGcPrevBlockNumber)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10167        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10168          StateDataPtr->FeeIntrJobFailCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10169        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10170        /* Update the cache table for current block */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10171        BlockNumber = GcCurrBlkPtr->BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10172  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10173        /* [cover parentID={6AACE9AF-A524-4ded-8EEF-2B058ECAB649}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10174        if(StateDataPtr->FeeGcState == FEE_GC_UNCFG_COPY_WRITE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10175        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10176  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10177          UnconfigBlockPtr = (&UnconfigBlockPtr
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10178                              [StateDataPtr->FeeGCUnconfigBlkCopyIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10179          UnconfigBlockPtr->Status.Copied = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10180          StateDataPtr->FeeGcLWBGcSrcAddr[StateDataPtr->FeeGcBlkIndexInWL] =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10181            UnconfigBlockPtr->Address;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10182          UnconfigBlockPtr->Address = StateDataPtr->FeeBlockStartAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10183          StateDataPtr->FeeGCUnconfigBlkCopyIndex++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10184  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10185          /* Move to next state */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10186          StateDataPtr->FeeGcState = FEE_GC_UNCFG_START_COPY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10187        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10188        else /* FEE_GC_COPY_WRITE */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10189        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10190          Index = Fee_lGetUsrBlockIndex(BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10191  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10192          CachePtr = &(CachePtr[Index]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10193          CachePtr->Status.Copied = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10194          StateDataPtr->FeeGcLWBGcSrcAddr[StateDataPtr->FeeGcBlkIndexInWL] =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10195            CachePtr->Address;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10196          CachePtr->Address = StateDataPtr->FeeBlockStartAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10197          StateDataPtr->FeeGCCopyIndex++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10198  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10199          /* Move to next state */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10200          StateDataPtr->FeeGcState = FEE_GC_START_COPY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10201        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10202  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10203        /* Update LastBlock with Current block info */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10204        StateDataPtr->FeeGcPrevBlockNumber = GcCurrBlkPtr->BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10205  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10206        (StateDataPtr->FeeGcBlkIndexInWL)++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10207      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10208      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10209      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10210        /* [cover parentID={3BA076CC-FA0D-46b7-85EA-B2827E75E4A1}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10211        if(StateDataPtr->FeeGcState == FEE_GC_UNCFG_COPY_WRITE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10212        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10213          StateDataPtr->FeeGcState = FEE_GC_UNCFG_COPY_READ_NXTPAGE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10214        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10215        else /* FEE_GC_COPY_WRITE */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10216        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10217          StateDataPtr->FeeGcState = FEE_GC_COPY_READ_NXTPAGE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10218        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10219      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10220    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10221  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10222  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10223  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10224  ** Syntax : LOCAL_INLINE void Fee_lHandleUnConfigGcCopyError(void)            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10225  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10226  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10227  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10228  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10229  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10230  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10231  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10232  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10233  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10234  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10235  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10236  ** Return value    :  void                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10237  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10238  ** Description : This function handles un-configured block's copy error       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10239  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10240  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10241  /* [cover parentID={B02A666C-094D-47c0-9DB6-AC87FEB69334}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10242  Fee_lHandleUnConfigGcCopyError
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10243  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10244  /* [cover parentID={CD7D7018-0024-403e-B8AF-5E8FADC4AE95}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10245  LOCAL_INLINE void Fee_lHandleUnConfigGcCopyError(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10246  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10247    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10248    Fee_CacheType         *UnconfigBlockPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10249    uint16                 BlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10250  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10251    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10252  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10253    UnconfigBlockPtr = &(StateDataPtr->FeeBlockInfo[Fee_CfgPtr->FeeBlkCnt]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10254    BlockIndex = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10255  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10256    /* Find the index of the first affected un-configured block */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10257    /* [cover parentID={02EABA1E-6DB2-4303-8005-1CD87E8531FE}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10258    while((BlockIndex < (StateDataPtr->FeeUnConfigBlockCount)) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10259          ((UnconfigBlockPtr->BlockNumber) != StateDataPtr->FeeGcFirstBlkNumInWL))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10260    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10261      BlockIndex++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10262  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10263      UnconfigBlockPtr++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10264    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10265    StateDataPtr->FeeGCUnconfigBlkCopyIndex = BlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10266  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10267    /* Clear the Copied status of all the affected un-configured blocks */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10268    /* [cover parentID={6814F2C0-D04B-406b-9D17-D05DED0A8D8E}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10269    for(BlockIndex = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10270        BlockIndex < StateDataPtr->FeeGcBlkIndexInWL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10271        BlockIndex++)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10272    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10273      UnconfigBlockPtr->Status.Copied = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10274      UnconfigBlockPtr->Address = StateDataPtr->FeeGcLWBGcSrcAddr[BlockIndex];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10275  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10276      UnconfigBlockPtr++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10277    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10278    StateDataPtr->FeeGcBlkIndexInWL = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10279  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10280  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10281  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10282  ** Syntax : LOCAL_INLINE void Fee_lHandleConfigGcCopyError(void)              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10283  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10284  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10285  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10286  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10287  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10288  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10289  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10290  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10291  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10292  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10293  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10294  ** Return value    :  void                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10295  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10296  ** Description : This function handles configured block's copy error. Undoes  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10297  ** the markings for the configured blocks (in the WL) affected during the GC  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10298  ** copy operation.                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10299  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10300  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10301  /* [cover parentID={BEA2009F-01BC-4277-A216-C597C15BAB19}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10302  Fee_lHandleConfigGcCopyError
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10303  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10304  /* [cover parentID= {0D2CAF2F-71A1-4693-A275-6DF81B063430}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10305  LOCAL_INLINE void Fee_lHandleConfigGcCopyError(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10306  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10307    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10308    Fee_CacheType         *CachePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10309    uint16                 BlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10310  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10311    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10312    BlockIndex = Fee_lGetUsrBlockIndex(StateDataPtr->FeeGcFirstBlkNumInWL);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10313    CachePtr = &(StateDataPtr->FeeBlockInfo[BlockIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10314  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10315    StateDataPtr->FeeGCCopyIndex = BlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10316    /* [cover parentID={7F203811-F285-4e5f-B71C-609EF062B2E5}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10317    for(BlockIndex = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10318        BlockIndex < StateDataPtr->FeeGcBlkIndexInWL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10319        BlockIndex++)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10320    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10321      /* [cover parentID={9327FB93-4E60-4616-9E79-1A483AA10E84}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10322      if(CachePtr->Status.Copied == (uint32)FEE_SET )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10323      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10324        /* Latest copy not available. Move GcLogBlkCount to previous block Index
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10325         and switch to Start Copy state */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10326        CachePtr->Status.Copied = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10327        CachePtr->Address = StateDataPtr->FeeGcLWBGcSrcAddr[BlockIndex];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10328      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10329      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10330      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10331        /* Latest copy of the block is available: no need to copy the affected
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10332        previous block.Just make the PrevCopyStatus as zero. This is needed to
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10333        mark the affected previous copy as inconsistent */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10334        CachePtr->Status.PrevCopyCopied = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10335      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10336  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10337      CachePtr++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10338    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10339    StateDataPtr->FeeGcBlkIndexInWL = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10340  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10341  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10342  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10343  ** Syntax : static uint8 Fee_lGcErasePrevSector(const uint8 GcState)          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10344  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10345  ** Service ID:  NA                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10346  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10347  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10348  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10349  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10350  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10351  ** Parameters (in) :  GcState: Current Gc State                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10352  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10353  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10354  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10355  ** Return value    :  uint8                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10356  **                    FEE_GC_E_OK : No error erase operation is successful    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10357  **                    FEE_GC_ERASE: GC Erase request is not accepted by flash **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10358  **                    driver or erase operation failed                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10359  ** Description : This routine is responsible for handling Garbage Collection  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10360  **    FEE_GC_ERASE_PREV_SECTOR / FEE_GC_INIT_ERASE_PREV_SECTOR state          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10361  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10362  /* [cover parentID={2EF44D40-9EF0-4773-ACE9-8DB14FDA91F4}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10363  Fee_lGcErasePrevSector
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10364  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10365  /* [cover parentID={A094A9DA-0768-46ab-A1C1-750A8678818A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10366  static uint8 Fee_lGcErasePrevSector(const uint8 GcState)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10367  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10368    Fee_StateDataType   *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10369    Std_ReturnType       ReturnValueFls;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10370    uint8                Error;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10371    uint32                BankNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10372  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10373    Error = FEE_GC_E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10374  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10375    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10376    /* [cover parentID={676FCD6E-C364-4e19-BE01-1ACF19024A84}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10377    if (StateDataPtr->FeeIntrJobStatus == FEE_JOB_DONE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10378    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10379      StateDataPtr->FeeIntrJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10380      /* Check if Erase operation is failed because of EVR bit set.If yes then
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10381      do set GC error. This is done to find out unerasble WL address. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10382      /* [cover parentID={2E001B9E-9063-41b6-B1E6-A20E1F3CCB66}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10383      /* [cover parentID={3DE3BF16-2592-41c1-8F8F-6089376533F9}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10384      if((StateDataPtr->FeeIntrJobResult == FEE_JOB_FAIL) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10385          (StateDataPtr->FeeEraseVerErr == FEE_RESET ))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10386      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10387        Error = FEE_GC_ERASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10388        StateDataPtr->FeeIntrJobFailCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10389      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10390      else if(StateDataPtr->FeeIntrJobResult == FEE_JOB_PASS)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10391      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10392        if(GcState == FEE_GC_ERASE_PREV_SECTOR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10393        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10394          StateDataPtr->FeeGcState = FEE_GC_MARK_SECTOR0_E_SP;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10395        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10396        /*  Case FEE_GC_INIT_ERASE_PREV_SECTOR */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10397        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10398        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10399          /* Erase of previous sector is happening as part of INIT GC.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10400             The FeeStateCount shall be incremented by 2 to mark one sector
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10401             erase. Increment FeeStateCount by 1 here. FeeStateCount is
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10402             incremented again while preparing the state page buffer in
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10403             FEE_GC_INIT_MARK_SECTOR0_E_SP */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10404          StateDataPtr->FeeStateCount += FEE_ONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10405          StateDataPtr->FeeGcState = FEE_GC_INIT_MARK_SECTOR0_E_SP;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10406        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10407  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10408        /*Erase is successful , reset the un-erasable WL address information
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10409        for this sector. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10410        if(StateDataPtr->FeeGcDestAddr == FEE_DFLASH_BANK1_BASE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10411        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10412          BankNumber = FEE_SECTOR1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10413        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10414        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10415        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10416          BankNumber = FEE_SECTOR0;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10417        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10418        StateDataPtr->FeeSectorInfo[BankNumber].UnerasableWLCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10419        StateDataPtr->FeeSectorInfo[BankNumber].UnerasableWLAddr[0] = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10420        StateDataPtr->FeeSectorInfo[BankNumber].UnerasableWLAddr[1] = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10421  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10422        StateDataPtr->FeeIntrJobFailCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10423  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10424      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10425      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10426      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10427        /* No need to check FeeEraseVerErr,because code flow will reach here
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10428        when FeeEraseVerErr and erase operation is failed. Also when erase
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10429        operation is successful in this FeeEraseVerErr will be 0 */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10430        /* [cover parentID={965B80E7-1CC2-4054-AAD9-4A94D566E6B1}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10431        StateDataPtr->FeeEraseVerErr = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10432  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10433        /*Check if the erase is failed 1st time, if yes then incerement the fail
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10434        count to retry the erase operation.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10435      /* [cover parentID={C1B7D908-7550-4306-A745-AD9DA024E336}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10436        if(StateDataPtr->FeeIntrJobFailCount != FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10437        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10438          /*Erase operation is failed 2nd time. Scan the sector for number of
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10439          failed WL. If the number is greater than 2 then raise the illegal
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10440          notification.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10441          Fee_lGcEraseCompare(GcState);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10442        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10443        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10444        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10445          StateDataPtr->FeeIntrJobFailCount++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10446        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10447  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10448      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10449    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10450    else if(StateDataPtr->FeeSectorCount > (uint8)FEE_ZERO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10451    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10452      /* [cover parentID={556CCD93-EE5A-46fd-89A8-0802E595F565}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10453      Fee_lGcEraseCompare(GcState);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10454    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10455    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10456    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10457      /* i.e. StateDataPtr->FeeGcState == FEE_GC_ERASE_PREV_SECTOR or
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10458                                        FEE_GC_INIT_ERASE_PREV_SECTOR  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10459      StateDataPtr->FeeIntrJobStatus = FEE_JOB_REQSTD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10460      StateDataPtr->FeeIntrJob = FEE_ERASE_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10461      /* [cover parentID={FD945D9E-9FDC-49ae-B4E7-B80DA01EFAF8}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10462      ReturnValueFls = Fls_17_Dmu_Erase(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10463                         (Fls_17_Dmu_AddressType)StateDataPtr->FeeGcDestAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10464                         (Fls_17_Dmu_LengthType)FEE_DFLASH_SECTOR_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10465  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10466      /* if the Fls routine did not accept the request */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10467      /* [cover parentID={8E360F1F-6835-4c54-BB4D-D329B649C190}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10468      if(ReturnValueFls == E_NOT_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10469      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10470        /* Any failure from FLS (both DET,production error) will trigger Illegal 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10471        notification and FEE production error */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10472        Error = FEE_GC_ERASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10473      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10474    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10475  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10476    return(Error);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10477  }/*End of Fee_lGcErasePrevSector*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10478  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10479  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10480  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10481  ** Syntax : LOCAL_INLINE void Fee_lGcEraseCompare(const uint8 GcState)        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10482  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10483  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10484  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10485  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10486  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10487  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10488  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10489  ** Parameters (in) :  GcState: Current GC State                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10490  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10491  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10492  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10493  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10494  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10495  ** Description : Performs state transitions from FEE_GC_ERASE_PREV_SECT or    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10496  **  FEE_GC_INIT_ERASE_PREV_SECTOR during Garbage collection                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10497  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10498  /* [cover parentID={6D565FB7-C76C-43d3-8CEB-73748C03F1E4}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10499  LOCAL_INLINE void Fee_lGcEraseCompare(const uint8 GcState)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10500  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10501    Fee_StateDataType    *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10502    uint32                BankNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10503    Std_ReturnType        ReturnVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10504    uint8                 NewGcState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10505  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10506    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10507    /* [cover parentID={5D107372-3476-4f69-A312-D69EAA6FD26E}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10508    if(StateDataPtr->FeeSectorCount == 0U)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10509    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10510      StateDataPtr->FeeUnErasableWLAddrTemp[0] = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10511      StateDataPtr->FeeUnErasableWLAddrTemp[1] = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10512      StateDataPtr->FeeUnErasableWLCountTemp = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10513    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10514  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10515    if(StateDataPtr->FeeGcDestAddr == FEE_DFLASH_BANK1_BASE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10516    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10517      BankNumber = FEE_SECTOR1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10518    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10519    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10520    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10521      BankNumber = FEE_SECTOR0;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10522    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10523    /* [cover parentID={7CF3728A-3577-4582-9375-96CB793399A0}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10524    Verify erase of the flash sector
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10525    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10526    ReturnVal = Fls_17_Dmu_VerifySectorErase(StateDataPtr->FeeGcDestAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10527                &(StateDataPtr->FeeUnErasableWLAddrTemp[0]),
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10528                &(StateDataPtr->FeeUnErasableWLCountTemp),
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10529                StateDataPtr->FeeSectorCount);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10530    /* [cover parentID={3309023F-BD55-41ac-8B15-3B249B51F096}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10531    if(ReturnVal == E_NOT_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10532    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10533      /* [cover parentID={B7FCE4D1-0B08-471e-A477-F8504E2424B3}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10534      Call the error handler, pass the block address as block not found
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10535      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10536      /* block index is not used for erase error , so passed as parameter unused.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10537      Block index is used only for read error to drop the block from GC process.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10538      */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10539      StateDataPtr->FeeIntrJobFailCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10540      Fee_lGcErrorHandler(FEE_GC_ERASE, FEE_UNUSED_PARAM);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10541    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10542    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10543    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10544      StateDataPtr->FeeSectorCount++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10545  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10546      /*MISRA2012_RULE_10_4_JUSTIFICATION:Typecasting is done. Types are same */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10547      /* [cover parentID={8F64C060-9DC8-4dfc-8B33-11698DA70942}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10548      if(StateDataPtr->FeeSectorCount == (uint8)FLS_ERASE_SECTORS)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10549      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10550        StateDataPtr->FeeSectorInfo[BankNumber].UnerasableWLCount =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10551          StateDataPtr->FeeUnErasableWLCountTemp;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10552        StateDataPtr->FeeSectorInfo[BankNumber].UnerasableWLAddr[0] =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10553          StateDataPtr->FeeUnErasableWLAddrTemp[0];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10554        StateDataPtr->FeeSectorInfo[BankNumber].UnerasableWLAddr[1] =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10555          StateDataPtr->FeeUnErasableWLAddrTemp[1];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10556        /* [cover parentID={02816ECB-41C3-4003-95EB-ED1F93005D8B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10557        if(GcState == FEE_GC_ERASE_PREV_SECTOR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10558        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10559          NewGcState = FEE_GC_MARK_SECTOR0_E_SP;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10560        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10561        /*  Case FEE_GC_INIT_ERASE_PREV_SECTOR */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10562        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10563        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10564          /* Erase of previous sector is happening as part of INIT GC.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10565             The FeeStateCount shall be incremented by 2 to mark one sector
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10566             erase. Increment FeeStateCount by 1 here. FeeStateCount is
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10567             incremented again while preparing the state page buffer in
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10568             FEE_GC_INIT_MARK_SECTOR0_E_SP */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10569          StateDataPtr->FeeStateCount += FEE_ONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10570          NewGcState = FEE_GC_INIT_MARK_SECTOR0_E_SP;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10571        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10572        /* Move to next state */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10573        StateDataPtr->FeeGcState = NewGcState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10574        StateDataPtr->FeeSectorCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10575      /* [cover parentID={48BAB7E3-68A9-4005-B8D5-2FB33EBB427F}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10576        StateDataPtr->FeeIntrJobFailCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10577      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10578    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10579  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10580  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10581  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10582  ** Syntax : static uint8 Fee_lGcProgramStatePage(const uint8 GcState)        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10583  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10584  ** Service ID:                                                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10585  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10586  ** Sync/Async:  Asynchronous                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10587  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10588  ** Reentrancy:  Non reentrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10589  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10590  ** Parameters (in) : uint8  GcState: Current GC State                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10591  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10592  ** Parameters (out):  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10593  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10594  ** Return value    :  uint8                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10595  **                   FEE_GC_E_OK: Operation is successful                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10596  **                   FEE_GC_WRITE: GC write operation is failed              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10597  **                   FEE_GC_TRIG: GC operation triggers the another GC       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10598  **                                Operation                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10599  ** Description : This routine is responsible for marking state page during   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10600  **               Garbage Collection                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10601  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10602  /* [cover parentID={54190B01-DE09-4565-8C2B-3F8B97E1354C}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10603  Fee_lGcProgramStatePage
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10604  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10605  /* [cover parentID={1029D83D-72D2-46ab-80F4-38CBA237F8BC}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10606  static uint8 Fee_lGcProgramStatePage(const uint8 GcState)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10607  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10608    uint32                 DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10609    uint32                 FreePages;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10610    uint32                 PageCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10611    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10612    uint8                  BankNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10613    uint8                  Error;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10614  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10615    Error = FEE_GC_E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10616    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10617    /* [cover parentID={8FE6B553-82A8-47db-BC36-4F78178538B7}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10618    if (StateDataPtr->FeeIntrJobStatus == FEE_JOB_DONE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10619    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10620      StateDataPtr->FeeIntrJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10621      /* [cover parentID={9D8E2C4C-3DA3-4cc0-9A38-D0E7DDE65EF9}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10622      if((StateDataPtr->FeeIntrJobResult == FEE_JOB_FAIL) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10623          (StateDataPtr->FeeProgVerErr == FEE_RESET))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10624      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10625        Error = FEE_GC_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10626      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10627      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10628      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10629        Fee_lGcStatePageCompare(GcState);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10630      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10631    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10632    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10633    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10634      DestAddr = StateDataPtr->FeeGcDestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10635      if(DestAddr >= FEE_DFLASH_BANK1_BASE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10636      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10637        BankNumber = FEE_SECTOR1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10638      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10639      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10640      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10641        BankNumber = FEE_SECTOR0;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10642      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10643  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10644      switch (GcState)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10645      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10646        /* [cover parentID={89E4FD11-49DB-4f97-B1B0-0BBE06D85844}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10647        case FEE_GC_MARK_SECTOR1_V_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10648        case FEE_GC_MARK_SECTOR0_E_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10649        case FEE_GC_INIT_MARK_SECTOR0_E_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10650        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10651          /* [cover parentID={995FCB17-0B4D-461c-80CE-9FBA3B8815AE}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10652          if (StateDataPtr->FeeIntrJobFailCount == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10653          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10654             /* [cover parentID={CB98BD48-5137-4566-B176-1418EC9CCEB9}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10655            if (GcState == FEE_GC_MARK_SECTOR1_V_SP)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10656            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10657              /* [cover parentID={66E3A160-C5EF-46d7-81F2-C00AA8664F25}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10658              Fee_lPrepareStatePageBuffer(BankNumber, FEE_VALID);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10659            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10660            else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10661            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10662              /* [cover parentID={CBF413E6-26BC-4952-A586-80E53554DDF7}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10663              Fee_lPrepareStatePageBuffer(BankNumber, FEE_ERASED);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10664            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10665          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10666          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10667          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10668            /* The state page is being re-attempted after one compare failure
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10669            Clear the last 8bytes of GcReadWriteBuffer for comparison of SP */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10670            /* [cover parentID={42EAB644-4E53-4209-A95A-5EFCD1BAE5F1}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10671            Fee_lClearMarkerBuffer();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10672          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10673          while(Fee_lIsUnerasableAddr(DestAddr) == TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10674          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10675            DestAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10676          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10677          StateDataPtr->FeeGcDestAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10678  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10679          /************* CHECK for the case of GC TRIGGERING GC *************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10680          /* Get the Destination sector - the sector other than current sector
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10681          */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10682          BankNumber = (uint8)StateDataPtr->FeeStatusFlags.FeeCurrSector ^ FEE_SECTOR1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10683          /* Find the free pages in the destination sector */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10684          FreePages = Fee_lGetFreeDFLASHPages(BankNumber, DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10685          /* Get the state page count */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10686          PageCount = FEE_DFLASH_WORDLINE_SIZE / FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10687          /* Check if there is space in the new sector for state page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10688          /* [cover parentID={2D23BAEF-B62E-4256-BE18-3F39AEE9FB73}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10689          if ((boolean)TRUE == Fee_lIsSectorEndCrossed(FreePages, PageCount))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10690          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10691            Error = FEE_GC_TRIG;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10692          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10693          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10694          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10695            StateDataPtr->FeeLastReadSize = FEE_STATEPAGE_PROGRAM_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10696            /* [cover parentID={44BB2F39-9E4A-4e9a-8738-8275731B2E91}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10697            Error = Fee_lGcWrite((Fls_17_Dmu_AddressType)DestAddr, FEE_ZERO);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10698          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10699          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10700        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10701  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10702  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10703         case FEE_GC_MARK_SECTOR1_V_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10704         case FEE_GC_MARK_SECTOR0_E_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10705         case FEE_GC_INIT_MARK_SECTOR0_E_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10706        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10707          /* [cover parentID={03B281B8-CAB1-4d9b-9909-EE814AB68D3E}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10708          Fee_lPrepareMarkerBuffer();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10709          StateDataPtr->FeeLastReadSize = FEE_STATEPAGE_MARKER_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10710          Error = Fee_lGcWrite((Fls_17_Dmu_AddressType)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10711                               (DestAddr + FEE_STATEPAGE_DATA_SIZE),
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10712                               FEE_STATEPAGE_DATA_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10713          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10714        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10715      default:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10716      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10717        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10718      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10719      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10720    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10721  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10722    return(Error);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10723  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10724  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10725  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10726  ** Syntax : LOCAL_INLINE void Fee_lGcStatePageCompare(const uint8 GcState)    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10727  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10728  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10729  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10730  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10731  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10732  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10733  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10734  ** Parameters (in) :  GcState: Current GC State                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10735  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10736  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10737  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10738  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10739  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10740  ** Description : Performs compare actions on state page programming           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10741  **               during Garbage collection                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10742  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10743  /* [cover parentID={A0DC241F-C69E-400b-AFF3-42C1376A57E8}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10744  Fee_lGcStatePageCompare
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10745  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10746  /* [cover parentID={38B618F4-FC7F-49a8-8249-59C8C1A284D8}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10747  LOCAL_INLINE void Fee_lGcStatePageCompare(const uint8 GcState)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10748  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10749    Fee_StateDataType    *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10750    const uint8          *SrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10751    uint32                DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10752    Std_ReturnType        ReturnVal1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10753    uint8                 NewGcState = FEE_GC_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10754  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10755  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10756    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10757    DestAddr = StateDataPtr->FeeGcDestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10758    SrcAddr = StateDataPtr->FeeGcReadWriteBuffer;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10759    ReturnVal1 = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10760  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10761    /* [cover parentID={5546E055-5F4B-475e-A6EB-13E703D0F28C}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10762    if(StateDataPtr->FeeProgVerErr == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10763    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10764      /* [cover parentID={7A521C74-670B-48e3-B5F7-6EA67238D8D3}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10765      Compare the state page which was just written
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10766      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10767      ReturnVal1 = Fls_17_Dmu_CompareWordsSync(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10768                     (Fls_17_Dmu_AddressType)DestAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10769                     /*MISRA2012_RULE_11_3_JUSTIFICATION:This is done for
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10770                     interfacing with FLS.FEE is passing parameters to FLS APIs,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10771                     casting is needed to match with the Fls API prototype.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10772                     SrcAddr is poiniting to FeeGcReadWriteBuffer which is part
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10773                     of Fee_StateDataType. FeeGcReadWriteBuffer is so placed to
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10774                     have 4 byte alignment*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10775                     (const uint32 *)SrcAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10776                     (Fls_17_Dmu_LengthType)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10777                     FEE_STATEPAGE_SIZE / FEE_DFLASH_WORD_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10778    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10779  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10780    /* Compare failed or PVER error is set.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10781    /* [cover parentID={E1DA1B5D-6ACA-4009-A4EA-32D962B06F91}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10782    if((ReturnVal1 == E_NOT_OK) || (StateDataPtr->FeeProgVerErr == FEE_SET))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10783    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10784      /* [cover parentID={A9772711-A990-4b1b-A9DE-69C64A7D6644}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10785      if(StateDataPtr->FeeIntrJobFailCount == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10786      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10787        /*Reset the FeeProgVerErr flag*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10788        StateDataPtr->FeeProgVerErr = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10789        StateDataPtr->FeeIntrJobFailCount++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10790        DestAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10791        StateDataPtr->FeeGcDestAddr = (DestAddr + FEE_DFLASH_WORDLINE_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10792  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10793        switch (GcState)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10794        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10795          /* [cover parentID={32C975D5-4465-4039-AF6D-43C7A9FE085B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10796          case FEE_GC_MARK_SECTOR1_V_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10797          case FEE_GC_MARK_SECTOR1_V_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10798          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10799            NewGcState = FEE_GC_MARK_SECTOR1_V_SP;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10800            break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10801          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10802          /* [cover parentID={D9E21795-D6EF-4b67-9C29-8878FF0A85AA}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10803          case FEE_GC_MARK_SECTOR0_E_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10804          case FEE_GC_MARK_SECTOR0_E_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10805          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10806            NewGcState = FEE_GC_MARK_SECTOR0_E_SP;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10807            break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10808          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10809  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10810  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10811          case FEE_GC_INIT_MARK_SECTOR0_E_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10812          case FEE_GC_INIT_MARK_SECTOR0_E_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10813          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10814            NewGcState = FEE_GC_INIT_MARK_SECTOR0_E_SP;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10815            break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10816          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10817        default:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10818        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10819          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10820        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10821        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10822        StateDataPtr->FeeGcState = NewGcState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10823      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10824      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10825      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10826        /* Write Fail two time raise the illegal notification. Pass the block
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10827        index as unused parameter , because block index is not used when write
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10828        error occurred. Block index is used only for read error to drop the block
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10829        from GC process. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10830        /* [cover parentID={6FBD5A3A-04D2-40e1-9C0C-6F44AC1429C9}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10831        Fee_lGcErrorHandler(FEE_GC_WRITE, FEE_UNUSED_PARAM);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10832      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10833    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10834    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10835    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10836      NewGcState = Fee_lGcStatePageComparePass(GcState);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10837  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10838      StateDataPtr->FeeGcState = NewGcState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10839    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10840  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10841  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10842  /*[cover parentID={A4A2305F-E525-4192-AD7B-B6C56BB5EE60}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10843  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10844  ** Syntax : LOCAL_INLINE uint8 Fee_lGcStatePageComparePass(                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10845                                const uint8 GcState)                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10846  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10847  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10848  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10849  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10850  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10851  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10852  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10853  ** Parameters (in) :  GcState: Current GC State                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10854  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10855  ** Parameters (out):                                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10856  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10857  ** Return value    :  NewGcState : GC state state set after comparing         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10858  **                                  different state page programming          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10859  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10860  ** Description : Performs compare actions on state page programming           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10861  **               during Garbage collection                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10862  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10863  /*[cover parentID={8DF6DC79-071C-4b15-B88D-DC5DC54DD12C}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10864  LOCAL_INLINE uint8 Fee_lGcStatePageComparePass(const uint8 GcState)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10865  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10866      Fee_StateDataType    *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10867      Fee_SectorInfoType   *SectorInfoPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10868      uint8                 BankNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10869      uint8                 NewGcState = FEE_GC_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10870      uint32                DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10871      uint32                FreePages;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10872      uint32                PageCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10873      const uint8          *PendReqStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10874      uint16             PendReqBlkNum;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10875      uint16             PendReqBlkIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10876      const Fee_BlockType  *PendReqBlkPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10877  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10878      StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10879      DestAddr = StateDataPtr->FeeGcDestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10880      PendReqStatePtr = &(StateDataPtr->FeePendReqStatus);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10881  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10882      switch (GcState)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10883      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10884        /* [cover parentID={44F5FF3D-87DF-4a28-940E-04C116993848}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10885        case FEE_GC_MARK_SECTOR1_V_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10886        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10887          NewGcState = FEE_GC_MARK_SECTOR1_V_M;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10888          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10889        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10890        /* [cover parentID={C4C383CB-ACB3-4836-BD27-2836ACE32231}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10891        /* [cover parentID={A4A2305F-E525-4192-AD7B-B6C56BB5EE60}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10892        case FEE_GC_MARK_SECTOR1_V_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10893        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10894          StateDataPtr->FeeIntrJobFailCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10895          /* Update the current sector to next sector */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10896          StateDataPtr->FeeStatusFlags.FeeCurrSector ^= FEE_SECTOR1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10897  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10898          /* Update FreeWLAddr and StatePage Address and NextFreePageAddr */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10899          BankNumber = StateDataPtr->FeeStatusFlags.FeeCurrSector;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10900          SectorInfoPtr = &StateDataPtr->FeeSectorInfo[BankNumber];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10901          SectorInfoPtr->StatePageAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10902          SectorInfoPtr->NextFreeWLAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10903          /* Update NextFreePageAddr */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10904          StateDataPtr->FeeNextFreePageAddr = SectorInfoPtr->NextFreeWLAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10905  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10906          StateDataPtr->FeeLastWrittenBlkInfo.BlockNumber = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10907          StateDataPtr->FeeLastWrittenBlkInfo.Status.Consistent = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10908          /*Check for the GC on GC*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10909          FreePages = (uint32)Fee_lGetFreeDFLASHPages(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10910                        BankNumber, SectorInfoPtr->NextFreeWLAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10911          /* Get the state page count */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10912          PageCount = FEE_DFLASH_WORDLINE_SIZE / FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10913          /* Check if there is space in the new sector for state page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10914          /* [cover parentID={222A43B5-CEAD-464e-BE5B-B4C3C514AB2B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10915          /* [cover parentID={29097A20-8551-4542-8A63-5270A1BAF554}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10916          if ((boolean)TRUE ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10917              Fee_lIsSectorThresholdCrossed(FreePages, PageCount))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10918          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10919  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10920            /* Pass the block index as unused parameter,because block index is
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10921             not used when GC on GC error occurred. Block index is used only
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10922             for read error to drop the block from GC process. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10923            /* [cover parentID={BA70F568-8250-451f-90F4-34DE9074EFA6}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10924            Fee_lGcErrorHandler(FEE_GC_TRIG, FEE_UNUSED_PARAM );
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10925            /*set the flag to previous state,so that driver remains in busy
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10926             state.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10927            StateDataPtr->FeePendReqStatus = FEE_PEND_PREV_COMPARE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10928            StateDataPtr->FeeIntrJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10929            StateDataPtr->FeeIntrJobResult = FEE_JOB_FAIL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10930            NewGcState = FEE_GC_FAIL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10931            #if (FEE_GET_PREV_DATA_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10932            StateDataPtr->FeePendReqInfo.GetPrevCopy = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10933            #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10934            break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10935          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10936  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10937          if(BankNumber == FEE_SECTOR0)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10938          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10939            StateDataPtr->FeeGcDestAddr = FEE_DFLASH_BANK1_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10940          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10941          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10942          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10943            StateDataPtr->FeeGcDestAddr = FEE_DFLASH_BANK0_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10944          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10945  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10946          /*Checking for Pending write during GC*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10947          /* [cover parentID={F8CEA0F6-DE07-4d4b-A89E-4B3D732A4DCC}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10948          if((*PendReqStatePtr == FEE_REQ_NORM_WRITE) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10949              (*PendReqStatePtr == FEE_REQ_IMM_WRITE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10950          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10951            /* Check if there is space in the new sector for writing pending
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10952            block.if no space available then raise the GC on GC production error
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10953            and illegal state notification */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10954            PendReqBlkNum = StateDataPtr->FeePendReqInfo.BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10955            PendReqBlkIndex = Fee_lGetUsrBlockIndex(PendReqBlkNum);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10956            PendReqBlkPtr = &(Fee_CfgPtr->FeeBlockConfigPtr[PendReqBlkIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10957            if (E_NOT_OK == Fee_lPerformCurrBlkCheck(PendReqBlkPtr))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10958            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10959              /* Pass the block index as unused parameter,because block index is
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10960              not used when GC on GC error occurred. Block index is used only
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10961              for read error to drop the block from GC process. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10962              Fee_lGcErrorHandler(FEE_GC_TRIG, FEE_UNUSED_PARAM);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10963  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10964              StateDataPtr->FeePendReqStatus = FEE_PEND_PREV_NO_REQ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10965              StateDataPtr->FeeIntrJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10966              StateDataPtr->FeeIntrJobResult = FEE_JOB_FAIL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10967              NewGcState = FEE_GC_FAIL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10968              #if (FEE_GET_PREV_DATA_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10969              StateDataPtr->FeePendReqInfo.GetPrevCopy = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10970              #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10971              break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10972            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10973  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10974          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10975          #if (FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10976          /* Move to next state */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10977          NewGcState = FEE_GC_HARDEN_QS_SECTOR;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10978  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10979          #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10980          /* Move to next state */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10981          NewGcState = FEE_GC_ERASE_PREV_SECTOR;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10982          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10983          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10984        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10985        /* [cover parentID={832CB1AC-B547-4a03-A294-31DC1AD9DB22}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10986        case FEE_GC_MARK_SECTOR0_E_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10987        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10988  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10989          NewGcState = FEE_GC_MARK_SECTOR0_E_M;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10990          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10991        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10992        /* [cover parentID={4C5FBF80-1616-4a70-943C-CC131D701794}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10993        case FEE_GC_INIT_MARK_SECTOR0_E_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10994        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10995          NewGcState = FEE_GC_INIT_MARK_SECTOR0_E_M;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10996          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10997        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10998        /* [cover parentID={A64B2200-D927-45e5-B17F-B23997B6ACEA}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10999        case FEE_GC_MARK_SECTOR0_E_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11000        case FEE_GC_INIT_MARK_SECTOR0_E_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11001        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11002          StateDataPtr->FeeIntrJobFailCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11003          /* Get the current active sector number */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11004          BankNumber = StateDataPtr->FeeStatusFlags.FeeCurrSector;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11005          /* calculate the previous sector number */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11006          BankNumber = BankNumber ^ FEE_SECTOR1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11007          /* Update FreeWLAddr and StatePage Address */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11008          SectorInfoPtr = &StateDataPtr->FeeSectorInfo[BankNumber];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11009          SectorInfoPtr->StatePageAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11010          SectorInfoPtr->NextFreeWLAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11011          NewGcState = Fee_lGcStatePageComparePassSetnewState(GcState);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11012          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11013        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11014        default:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11015        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11016          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11017        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11018      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11019      return NewGcState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11020  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11021  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11022  /*[cover parentID={43AE46F2-5AFF-43b1-AC56-27855ADD0B61}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11023  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11024  ** Syntax : LOCAL_INLINE uint8 Fee_lGcStatePageComparePassSetnewState(        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11025  **                                                  const uint8 GcState)      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11026  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11027  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11028  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11029  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11030  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11031  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11032  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11033  ** Parameters (in) :  GcState: Current GC State                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11034  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11035  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11036  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11037  ** Return value    :  NewGcState : GC state state set after comparing         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11038  **                                  different state page programming          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11039  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11040  ** Description : Performs compare actions on state page programming           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11041  **               during Garbage collection                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11042  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11043  LOCAL_INLINE uint8 Fee_lGcStatePageComparePassSetnewState(const uint8 GcState)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11044  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11045      uint8                 NewGcState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11046      #if (FEE_SET_MODE_SUPPORTED == STD_ON) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11047      (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11048      (MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11049      Fee_StateDataType    *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11050  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11051      StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11052      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11053      if (GcState == FEE_GC_MARK_SECTOR0_E_M)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11054      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11055      NewGcState = FEE_GC_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11056      #if (FEE_SET_MODE_SUPPORTED == STD_ON) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11057      (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11058      (MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11059      /* [cover parentID={E9B2C7CC-831B-4fc7-99FA-4F5F36765EC6}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11060      pending set mode request is registered
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11061      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11062      if(StateDataPtr->FeeSetModeReqPend == FEE_SET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11063      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11064        /* [cover parentID={A38C3ADC-E259-4372-B18C-72F2B9CECE8F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11065        Call Fls for mode change
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11066        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11067        Fls_17_Dmu_SetMode(StateDataPtr->FeeChangeReqMode);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11068        StateDataPtr->FeeSetModeReqPend = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11069      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11070      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11071      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11072      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11073      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11074        NewGcState = FEE_GC_REQUESTED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11075      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11076      return NewGcState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11077  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11078  /*CYCLOMATIC_Fee_lGarbageCollection_JUSTIFICATION: Fee_lGarbageCollection has
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11079  to determine all the states of configure/unconfigure block and then generate
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11080  production error.It should also handle the hardening feature during GC, 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11081  if it is broken into more functions to fix RSM, the code readability will 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11082  get affected.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11083  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11084  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11085  ** Syntax : static void Fee_lGarbageCollection(void)                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11086  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11087  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11088  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11089  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11090  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11091  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11092  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11093  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11094  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11095  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11096  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11097  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11098  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11099  ** Description : This routine is responsible for handling Garbage Collection  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11100  ** which is done once the Sector reaches the threshold limit.                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11101  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11102  /* [cover parentID={CC1B5E64-4160-484c-AFEE-1159BDF777D4}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11103  static void Fee_lGarbageCollection(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11104  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11105    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11106    uint8                  Error;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11107  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11108    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11109  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11110  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11111    /* Asynchronous Transitions based ONLY on IntrJobStatus are done here */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11112    Fee_lGcPrologue();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11113  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11114    /**********************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11115    /*         STATE MACHINE EXECUTION and STATE TRANSITIONS              */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11116    /**********************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11117  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11118    /*********** GC REQSTD STATE *******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11119    /*  Initialization of variables is done here */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11120    /* [cover parentID={F5562E76-F04C-4c91-891C-9AC97B366D20}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11121    if(StateDataPtr->FeeGcState == FEE_GC_REQUESTED)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11122    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11123      #if (FEE_UNCFG_BLK_OVERFLOW_HANDLE == FEE_STOP_AT_GC)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11124      /* [cover parentID={DEA63189-022C-453a-B41E-A462A7E7AE38}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11125      if(StateDataPtr->FeeUncfgBlksExceeded != FEE_UNCONFIG_BLK_LIMIT_CROSSED)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11126      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11127      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11128        /* [cover parentID={8221DF34-56CC-4a33-8551-D05734AB631F}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11129        Fee_lGcRequested();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11130      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11131    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11132  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11133    /* [cover parentID={4FE54373-0E5D-485a-BBB3-0D7BAACE5722}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11134    Error = Fee_lHandleGcCopy();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11135  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11136    /* [cover parentID={62914F2A-4FF6-4807-85A5-EB3132527AFF}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11137    /***** FEE_GC_INIT_ERASE_PREV_SECTOR / FEE_GC_ERASE_PREV_SECTOR *********/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11138    /*  Erasing the previous sector is done here */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11139    if (StateDataPtr->FeeGcState == FEE_GC_ERASE_PREV_SECTOR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11140    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11141      /* [cover parentID={8DEC39E8-BFA9-497b-9F6F-99E5928ED60F}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11142      Error = Fee_lGcErasePrevSector(FEE_GC_ERASE_PREV_SECTOR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11143    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11144    if (StateDataPtr->FeeGcState == FEE_GC_INIT_ERASE_PREV_SECTOR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11145    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11146      /* [cover parentID={818132A3-4B0D-45df-8653-A7039D9A71E8}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11147      Error = Fee_lGcErasePrevSector(FEE_GC_INIT_ERASE_PREV_SECTOR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11148    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11149  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11150  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11151    /***** FEE_GC_INIT_MARK_SECTOR0_E_SP /
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11152          FEE_GC_MARK_SECTOR0_E_SP *********/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11153    /*  Writing the erased state page content is done here */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11154    /* [cover parentID={0C474800-2702-4d59-A2B9-B8D098B1D8DE}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11155    if (StateDataPtr->FeeGcState == FEE_GC_MARK_SECTOR0_E_SP)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11156    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11157      /* [cover parentID={77345B65-B3C6-4963-A06C-88CCEE41D68C}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11158      Error = Fee_lGcProgramStatePage(FEE_GC_MARK_SECTOR0_E_SP);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11159    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11160    /* [cover parentID={5C1A3F42-0E18-47aa-AEFC-3D10D9145224}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11161    if (StateDataPtr->FeeGcState == FEE_GC_INIT_MARK_SECTOR0_E_SP)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11162    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11163      /* [cover parentID={32CA850E-D0A1-4a4a-AD45-7632E96339CE}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11164      Error = Fee_lGcProgramStatePage(FEE_GC_INIT_MARK_SECTOR0_E_SP);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11165    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11166  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11167    /***** FEE_GC_INIT_MARK_SECTOR0_E_M /
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11168          FEE_GC_MARK_SECTOR0_E_M *********/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11169    /*  Writing the erased state page marker is done here */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11170    /* [cover parentID={DE462D71-A9EC-408a-8FB0-8D4727648C8A}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11171    if (StateDataPtr->FeeGcState == FEE_GC_MARK_SECTOR0_E_M)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11172    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11173      /* [cover parentID={CC5B158F-3E9D-4af2-84C2-83731DDF71CE}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11174      Error = Fee_lGcProgramStatePage(FEE_GC_MARK_SECTOR0_E_M);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11175    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11176    /* [cover parentID={800151A5-3974-41b3-A22C-13784EE7FE9F}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11177    if (StateDataPtr->FeeGcState == FEE_GC_INIT_MARK_SECTOR0_E_M)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11178    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11179      /* [cover parentID={BF3F400B-8848-4402-9168-2DFD19F0CB59}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11180      Error = Fee_lGcProgramStatePage(FEE_GC_INIT_MARK_SECTOR0_E_M);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11181    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11182    #if (FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11183    /* [cover parentID={A53CCA55-0E57-4a1d-A649-CE140A625038}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11184    if(StateDataPtr->FeeGcState == FEE_GC_HARDEN_QS_SECTOR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11185    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11186      /* [cover parentID={376FED81-A75C-4842-AF38-9ABA7B0CF04A}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11187      Check if hardening is required
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11188      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11189      Fee_lGcHardenQsSector();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11190    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11191    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11192    /* Report production error, if Error occurred */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11193    /* [cover parentID={1DD7ADD6-3F4C-475b-9C7A-53730C41256E}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11194    if (Error != FEE_GC_E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11195    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11196      /* Clear all variables */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11197      StateDataPtr->FeeIntrJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11198      StateDataPtr->FeeIntrJobResult = FEE_JOB_FAIL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11199      StateDataPtr->FeeIntrJob = FEE_NO_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11200  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11201      /* Write/erased failed raise the illegal notification.block index
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11202      parameter is not used for write/erase error,so passed as parameter not
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11203      used.Block index is used only for read error to drop the block from GC
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11204      process. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11205      /*[cover parentID={BD7B8CB0-5C2A-43d5-90CC-E24B1CF5B8DC}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11206      Fee_lGcErrorHandler(Error, FEE_UNUSED_PARAM );
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11207    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11208  }/*End of Fee_lGarbageCollection */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11209  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11210  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11211  ** Syntax : static Fee_PageType Fee_lGetDFLASHPages(const uint16 Size)        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11212  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11213  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11214  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11215  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11216  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11217  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11218  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11219  ** Parameters (in) :  (uint16)size                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11220  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11221  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11222  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11223  ** Return value    :  Fee_PageType                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11224  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11225  ** Description : This routine will calculate and return the number of DFLASH  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11226  ** pages required for a logical block size.                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11227  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11228  /*[cover parentID={BF381339-6DCB-4605-843C-65354E544BE8}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11229  static Fee_PageType Fee_lGetDFLASHPages(const uint16 Size)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11230  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11231    Fee_PageType  PhysicalPages;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11232    uint16        NewSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11233  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11234    PhysicalPages = FEE_BLOCK_MANGMNT_PAGES;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11235    NewSize       = Size;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11236  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11237    /*[cover parentID={35DDC7C6-BD47-42ce-A6C2-A9FF0CDAC6BF}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11238    while (NewSize >= FEE_SEVEN)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11239    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11240      PhysicalPages++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11241      NewSize -= FEE_SEVEN;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11242    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11243  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11244    /*[cover parentID={2650961E-C2BE-4114-BCB9-738BBE76F035}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11245    if (NewSize > FEE_ZERO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11246    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11247      PhysicalPages++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11248    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11249  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11250    return(PhysicalPages);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11251  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11252  }/*End of Fee_lGetDFLASHPages */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11253  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11254  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11255  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11256  ** Syntax : static uint32 Fee_lGetFreeDFLASHPages(const uint8 BankNumber      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11257  **                                               const uint32 StartAddr)      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11258  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11259  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11260  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11261  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11262  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11263  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11264  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11265  ** Parameters (in) :(uint8)BankNumber : Bank Number                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11266  **                  (uint32)StartAddr  : Current address                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11267  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11268  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11269  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11270  ** Return value    :  uint32                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11271  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11272  ** Description : This routine will calculate the number of empty DFLASH  pages**
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11273  ** remaining in the sector.                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11274  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11275  /*[cover parentID={D666BBCE-2350-4205-8F51-5462F627D921}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11276  /*[cover parentID={6142D35A-4BA1-4e3f-896A-A09B5C3D07D8}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11277  static uint32 Fee_lGetFreeDFLASHPages(const uint8 BankNumber,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11278                                        const uint32 StartAddr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11279  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11280    const Fee_StateDataType *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11281    uint32             FreePages;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11282    uint32             EndAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11283    uint32             WLAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11284    sint32             RemainingPages;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11285    uint8              Count;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11286  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11287    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11288  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11289    /* Get the sector end address */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11290    if (BankNumber == FEE_SECTOR0)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11291    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11292      EndAddr = FEE_DFLASH_BANK0_BASE + FEE_DFLASH_SECTOR_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11293    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11294    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11295    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11296      EndAddr = FEE_DFLASH_BANK1_BASE + FEE_DFLASH_SECTOR_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11297    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11298  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11299    RemainingPages = ( ((sint32)EndAddr - (sint32)StartAddr) /
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11300                       (sint32)FEE_DFLASH_PAGE_SIZE );
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11301  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11302    /* Subtract the pages of un-erasable word line, if any */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11303    Count = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11304    while(Count < StateDataPtr->FeeSectorInfo[BankNumber].UnerasableWLCount)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11305    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11306      WLAddr = StateDataPtr->FeeSectorInfo[BankNumber].UnerasableWLAddr[Count];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11307      if ( (StartAddr <= WLAddr) && (WLAddr <= EndAddr) )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11308      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11309        RemainingPages = RemainingPages -
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11310                        (sint32)(FEE_DFLASH_WORDLINE_SIZE / FEE_DFLASH_PAGE_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11311      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11312      Count++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11313    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11314  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11315    /*[cover parentID={A6091D49-C400-49b6-91B0-1B8C525B8AD8}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11316    if (RemainingPages > (sint32)FEE_ZERO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11317    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11318      FreePages = (uint32)RemainingPages;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11319    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11320    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11321    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11322      FreePages = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11323    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11324  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11325    return(FreePages);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11326  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11327  }/*End of Fee_lGetFreeDFLASHPages */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11328  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11329  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11330  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11331  ** Syntax : static uint16 Fee_lGetUsrBlockIndex(const uint16 BlockNumber)     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11332  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11333  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11334  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11335  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11336  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11337  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11338  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11339  ** Parameters (in) : (uint16) BlockNumber - Number of logical block           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11340  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11341  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11342  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11343  ** Return value    :  uint16                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11344  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11345  ** Description : This utility function will return the Index (location)of the **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11346  ** block in the user configuration.                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11347  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11348  /*[cover parentID={AFA436A3-0ED3-4e88-B7DD-8E552415D1EB}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11349  static uint16 Fee_lGetUsrBlockIndex(const uint16 BlockNumber)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11350  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11351    const Fee_BlockType  *BlockPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11352    sint32                BlockMiddle;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11353    sint32                BlockFirst;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11354    sint32                BlockLast;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11355    uint16                RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11356  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11357    BlockFirst  = 0x0;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11358    BlockMiddle = 0x0;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11359    RetVal = FEE_LOG_BLOCK_NOT_FOUND;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11360  /* [cover parentID={2CE4CD18-0458-46a7-AD3E-5B5984EF2A20}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11361  Only QS data is configured
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11362  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11363  #if (FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11364    /*MISRA2012_RULE_10_3_JUSTIFICATION: No unintended results with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11365      implicit conversions. Because max value is 65535 which within
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11366      range sint32.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11367    BlockLast = FEE_QSBLOCK_BEGIN_INDEX - FEE_ONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11368  #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11369    /*MISRA2012_RULE_10_3_JUSTIFICATION: No unintended results with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11370      implicit conversions. Because max value is 65535 which within
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11371      range sint32.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11372    BlockLast = ((uint32)(Fee_CfgPtr->FeeBlkCnt) - (uint32)FEE_ONE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11373  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11374  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11375    BlockPtr = &(Fee_CfgPtr->FeeBlockConfigPtr[BlockFirst]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11376  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11377    /*[cover parentID={330805AC-5468-4fc2-B625-FB5A52ED1601}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11378    /* [cover parentID={8D24F650-F636-4918-8A81-E64842FEC722}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11379    Block number found
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11380    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11381    while(BlockFirst <= BlockLast)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11382    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11383      BlockMiddle = BlockFirst +((BlockLast - BlockFirst ) / 2);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11384  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11385      if(BlockPtr[BlockMiddle].BlockNumber == BlockNumber)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11386      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11387          RetVal = (uint16)BlockMiddle;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11388          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11389      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11390  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11391      /*[cover parentID={2CE4CD18-0458-46a7-AD3E-5B5984EF2A20}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11392      else if(BlockPtr[BlockMiddle].BlockNumber < BlockNumber)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11393      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11394        BlockFirst = BlockMiddle + 1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11395  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11396      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11397      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11398      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11399        BlockLast = BlockMiddle - 1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11400      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11401  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11402    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11403  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11404    /* if block is not configured, return invalid block index */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11405    if(BlockPtr[BlockMiddle].BlockNumber!= BlockNumber)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11406    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11407  #if (FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11408      /*MISRA2012_RULE_10_3_JUSTIFICATION: No unintended results with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11409        implicit conversions. Because max value is 65535 which within
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11410        range sint32.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11411      BlockFirst = FEE_QSBLOCK_BEGIN_INDEX;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11412      /*MISRA2012_RULE_10_3_JUSTIFICATION: No unintended results with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11413        implicit conversions. Because max value is 65535 which within
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11414        range sint32.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11415      BlockLast = ((uint32)(Fee_CfgPtr->FeeBlkCnt) - (uint32)(FEE_ONE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11416  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11417      while(BlockFirst <= BlockLast)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11418      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11419        BlockMiddle = BlockFirst +((BlockLast - BlockFirst ) / 2);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11420  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11421        if(BlockPtr[BlockMiddle].BlockNumber == BlockNumber)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11422        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11423           RetVal = (uint16)BlockMiddle;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11424           break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11425        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11426        else if(BlockPtr[BlockMiddle].BlockNumber < BlockNumber)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11427        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11428          BlockFirst = BlockMiddle + 1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11429        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11430        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11431        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11432          BlockLast = BlockMiddle - 1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11433        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11434  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11435      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11436      /*[cover parentID={94C2F925-ABDA-4ebf-8BE1-570E221451CD}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11437      if(BlockPtr[BlockMiddle].BlockNumber!= BlockNumber)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11438      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11439        RetVal = FEE_LOG_BLOCK_NOT_FOUND;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11440      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11441  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11442  #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11443      RetVal = FEE_LOG_BLOCK_NOT_FOUND;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11444  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11445    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11446  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11447    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11448  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11449  }/* End of Fee_lGetUsrBlockIndex */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11450  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11451  /*CYCLOMATIC_Fee_lComputeNextFreePageAddr_JUSTIFICATION:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11452  The complexity of this is marginally over 15(complexity is 16).
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11453  Fee_lComputeNextFreePageAddr has to determine the next free page address,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11454  for which it checks for the un-erasable WL, the checks are simple and few.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11455  so, these cannot be avoided as the readability will get affected, if it is
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11456  broken into multiple functions.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11457  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11458  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11459  ** Syntax : LOCAL_INLINE void Fee_lComputeNextFreePageAddr                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11460  **                                            (const uint32 BankNumber)       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11461  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11462  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11463  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11464  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11465  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11466  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11467  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11468  ** Parameters (in-out) :BankNumber                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11469  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11470  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11471  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11472  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11473  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11474  ** Description : This utility function computes the first free page address   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11475  ** of the sector based on NextFreeWLAddr                                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11476  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11477  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11478  /* [cover parentID={6C36A6FC-E37D-489b-A42E-CC3C75D504D3}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11479  Fee_lComputeNextFreePageAddr
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11480  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11481  /*[cover parentID={79F7A50C-9E02-487a-A1F4-D47723FBFCBF}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11482  LOCAL_INLINE void Fee_lComputeNextFreePageAddr(const uint32 BankNumber)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11483  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11484    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11485    const Fee_SectorInfoType *SectorInfoPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11486    const uint32             *TempDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11487    uint32              TempAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11488    uint32              TempAddrPrevWL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11489    Std_ReturnType      RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11490    uint8               LoopEnd;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11491  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11492    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11493    SectorInfoPtr = &StateDataPtr->FeeSectorInfo[BankNumber];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11494    LoopEnd = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11495  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11496    /* Get the WL before the Next Free WL of the sector */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11497    StateDataPtr->FeeNextFreePageAddr = SectorInfoPtr->NextFreeWLAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11498  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11499    /* Check if the WL before the free WL is state page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11500    TempAddrPrevWL = SectorInfoPtr->NextFreeWLAddr - FEE_DFLASH_WORDLINE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11501  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11502    /* If previous word line contains a state page OR
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11503       if it is an un-erasable word line, then next free page address is same
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11504       as next free word line address; otherwise proceed to identify the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11505       next free page address */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11506    /*[cover parentID={E0BB1E49-3D1A-49c5-A8B9-DC2554F58F9E}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11507    if((TempAddrPrevWL != SectorInfoPtr->StatePageAddr) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11508        (!((SectorInfoPtr->UnerasableWLCount != FEE_RESET) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11509           ((SectorInfoPtr->UnerasableWLAddr[0]  == TempAddrPrevWL) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11510            (SectorInfoPtr->UnerasableWLAddr[1]  == TempAddrPrevWL)))))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11511    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11512      TempAddr = SectorInfoPtr->NextFreeWLAddr ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11513  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11514      TempAddrPrevWL += FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11515  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11516      do
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11517      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11518        TempAddr -= FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11519        /* Read the header (2 Words) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11520  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11521        /*MISRA2012_RULE_11_3_JUSTIFICATION:This is done for interfacing with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11522        FLS.FEE is passing parameters to FLS APIs, casting is needed to match with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11523        the Fls API prototype. FeeReadWriteBuffer is 4 byte aligned which is part
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11524        of Fee_StateDataType.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11525        RetVal = Fls_17_Dmu_ReadWordsSync((Fls_17_Dmu_AddressType)TempAddr, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11526                                  (uint32 *)StateDataPtr->FeeReadWriteBuffer, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11527                                  (Fls_17_Dmu_LengthType)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11528                                  (FEE_DFLASH_PAGE_SIZE / FEE_DFLASH_WORD_SIZE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11529  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11530        /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11531        32 bit access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11532        TempDataPtr = (uint32 *)StateDataPtr->FeeReadWriteBuffer;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11533  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11534        if((RetVal == E_OK) && (*(TempDataPtr) == (uint32)FEE_RESET) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11535            (TempDataPtr[1] == (uint32)FEE_RESET))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11536        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11537          StateDataPtr->FeeNextFreePageAddr = TempAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11538        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11539        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11540        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11541          LoopEnd = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11542          if ((RetVal == E_OK) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11543              ((StateDataPtr->FeeReadWriteBuffer[0] == FEE_DATA_NEXT_PAGE_ID) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11544               (StateDataPtr->FeeReadWriteBuffer[0] == FEE_DATA_FIRST_PAGE_ID)))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11545          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11546            StateDataPtr->FeeLastWrittenBlockDirty = FEE_LWB_CHECK_FOR_DIRTY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11547          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11548          else if (RetVal != E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11549          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11550            StateDataPtr->FeeNextFreePageAddr = SectorInfoPtr->NextFreeWLAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11551          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11552          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11553          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11554            /* dummy else */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11555          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11556        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11557      } while ((TempAddr > TempAddrPrevWL) && (LoopEnd == FEE_RESET));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11558    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11559  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11560  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11561  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11562  ** Syntax : static void Fee_lUpdateCache(void)                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11563  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11564  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11565  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11566  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11567  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11568  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11569  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11570  ** Parameters (in-out) :None                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11571  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11572  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11573  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11574  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11575  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11576  ** Description : This utility function  will update the cache which contains  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11577  ** the latest information about the DFLASH contents.                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11578  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11579  /* [cover parentID={7EF281BE-B4A1-44d3-B03F-F5841091218F}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11580  static void Fee_lUpdateCache(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11581  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11582    Fee_StateDataType      *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11583    Fee_SectorInfoType     *SectorInfoPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11584    uint32                  EndAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11585    uint32                  BankNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11586  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11587    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11588  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11589  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11590    if(StateDataPtr->FeeStatusFlags.FeeCurrSector == (uint32)FEE_SECTOR0)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11591    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11592      EndAddr = FEE_DFLASH_BANK0_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11593      BankNumber = FEE_SECTOR0;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11594    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11595    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11596    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11597      EndAddr = FEE_DFLASH_BANK1_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11598      BankNumber = FEE_SECTOR1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11599    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11600  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11601    SectorInfoPtr = &StateDataPtr->FeeSectorInfo[BankNumber];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11602    /* [cover parentID={37ABA514-F548-42b6-B794-5C3C7E57392A}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11603    Is cache state is FEE_CACHE_IDLE
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11604    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11605    if(StateDataPtr->FeeCacheState == FEE_CACHE_IDLE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11606    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11607  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11608    /* Identifies next free page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11609    Fee_lComputeNextFreePageAddr(BankNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11610  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11611    /* Point to last written page of the valid sector */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11612    StateDataPtr->FeeCurrSectSrcAddr = StateDataPtr->FeeNextFreePageAddr -
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11613                                       FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11614  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11615      /* Set the number of pages to be scanned in one Fee_MainFunction() cycle */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11616      StateDataPtr->FeeBlkPageCount = FEE_PAGES_PER_FEEMAIN;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11617  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11618    /* Start the Cache Update state machine */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11619    StateDataPtr->FeeCacheState = FEE_CACHE_FIND_NEXT_BLK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11620  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11621    Fee_lUpdateCacheTable(BankNumber, EndAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11622    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11623    /* [cover parentID={0DDF83A1-D28D-43cf-B946-5AF4E3478015}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11624    Cache state is FEE_CACHE_FIND_NEXT_BLK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11625    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11626    else if(StateDataPtr->FeeCacheState == FEE_CACHE_FIND_NEXT_BLK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11627    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11628      /* Set the number of pages to be scanned in one Fee_MainFunction() cycle */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11629      StateDataPtr->FeeBlkPageCount = FEE_PAGES_PER_FEEMAIN;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11630      Fee_lUpdateCacheTable(BankNumber, EndAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11631    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11632    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11633    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11634      /* Empty for misra */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11635    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11636    /* [cover parentID={33B21CF8-3820-4440-AB66-433BD546E627}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11637    if(StateDataPtr->FeeCacheState == FEE_CACHE_UPDATE_COMPLETE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11638    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11639      /* Reset the number of pages in the block */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11640      StateDataPtr->FeeBlkPageCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11641    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11642  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11643    /* check if marker is missing for the last written block */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11644    /* [cover parentID={2915B333-C14F-450e-BD6F-848F4C00FA43}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11645    if((StateDataPtr->FeeLastWrittenBlockDirty == FEE_LWB_DIRTY) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11646        (StateDataPtr->FeeCacheState == FEE_CACHE_UPDATE_COMPLETE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11647    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11648      /* move next free page address to next page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11649      /* to avoid any further write attempts on the missing marker location */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11650      StateDataPtr->FeeNextFreePageAddr += FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11651      /* If next free page is the beginning of a word line */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11652      /* [cover parentID={F298FED5-5E77-43f5-A28D-02AB86A5E8F5}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11653      if(Fee_lIsWLBeginning(StateDataPtr->FeeNextFreePageAddr) ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11654          FEE_NEW_WL_BEGIN)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11655      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11656        /* clear last written block info */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11657        StateDataPtr->FeeLastWrittenBlkInfo.BlockNumber = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11658        StateDataPtr->FeeLastWrittenBlkInfo.Status.Consistent = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11659      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11660      /* if next free page address is beyond next free word line address */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11661      /* [cover parentID={140F437D-DB78-45ab-904E-F211109BA967}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11662      if(StateDataPtr->FeeNextFreePageAddr > SectorInfoPtr->NextFreeWLAddr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11663      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11664        /* move next free word line to its next word line */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11665        SectorInfoPtr->NextFreeWLAddr += (FEE_DFLASH_WORDLINE_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11666      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11667    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11668  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11669  }/* End of Fee_lUpdateCache */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11670  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11671  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11672  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11673  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11674  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11675  ** Syntax : LOCAL_INLINE void Fee_lComputeNextWLAddr                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11676  **                               (Fee_SectorInfoType * const SectorInfoPtr)   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11677  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11678  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11679  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11680  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11681  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11682  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11683  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11684  ** Parameters (in-out) : SectorInfoPtr - Pointer to Sector Info               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11685  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11686  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11687  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11688  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11689  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11690  ** Description : This utility function will confirm the next free WL address  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11691  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11692  /* [cover parentID={70343C38-995B-41b2-B7E7-7CB215F859C6}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11693  Fee_lComputeNextWLAddr
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11694  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11695  /* [cover parentID={ECDAF14E-7BA9-4823-AC36-817AB9BB1AC4}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11696  LOCAL_INLINE void Fee_lComputeNextWLAddr(Fee_SectorInfoType * const \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11697      SectorInfoPtr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11698  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11699    uint32 index;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11700    const uint32 *SrcPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11701    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11702    Std_ReturnType      ReturnValueFls;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11703    uint32 Length;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11704    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11705    SrcPtr =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11706      /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11707      access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11708      (const uint32 *)(StateDataPtr->FeeReadWriteBuffer);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11709    Length = FEE_DFLASH_WORDLINE_SIZE / FEE_DFLASH_WORD_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11710  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11711    /*MISRA2012_RULE_11_3_JUSTIFICATION:This is done for interfacing with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11712    FLS.FEE is passing parameters to FLS APIs, casting is needed to match with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11713    the Fls API prototype.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11714  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11715    ReturnValueFls = Fls_17_Dmu_ReadWordsSync(\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11716                     (Fls_17_Dmu_AddressType)SectorInfoPtr->NextFreeWLAddr, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11717                     (uint32 *)(StateDataPtr->FeeReadWriteBuffer), \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11718                     (Fls_17_Dmu_LengthType)(Length));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11719  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11720    /* If read error -> word line is not empty */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11721    /* [cover parentID={130FA20A-7039-44b2-855E-67492640912D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11722    if(ReturnValueFls == E_NOT_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11723    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11724      SectorInfoPtr->NextFreeWLAddr =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11725        Fee_lGetNextWLAddr(SectorInfoPtr->NextFreeWLAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11726    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11727    /* [cover parentID={67091890-018D-4afb-9614-CB80A3AB5022}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11728    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11729    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11730      /* check if word line is empty */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11731      index = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11732      while((index < Length) && (*SrcPtr == (uint32)FEE_RESET))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11733      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11734  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11735        SrcPtr++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11736        index++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11737      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11738      /* if word line is not empty, move to next word line */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11739      if(index < Length)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11740      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11741        SectorInfoPtr->NextFreeWLAddr =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11742          Fee_lGetNextWLAddr(SectorInfoPtr->NextFreeWLAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11743      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11744    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11745  } /* End of Fee_lComputeNextWLAddr */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11746  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11747  /*CYCLOMATIC_Fee_lUpdateCacheTable_JUSTIFICATION: Fee_lUpdateCacheTable is the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11748   function will search for data block and update cache table from free page of
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11749   the sector.If broken into more functions, the maintenance/readability will get
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11750    affected.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11751  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11752  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11753  ** TRACEABILITY: []                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11754  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11755  ** Syntax : LOCAL_INLINE void Fee_lUpdateCacheTable(                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11756  **                                      const uint32 BankNumber,              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11757  **                                      const uint32 EndAddr                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11758  **                                    )                                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11759  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11760  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11761  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11762  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11763  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11764  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11765  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11766  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11767  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11768  ** Parameters (in-out) :BankNumber                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11769  **                      EndAddr                                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11770  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11771  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11772  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11773  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11774  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11775  ** Description : This utility function  will search through the DFLASH from   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11776  **  the free page of the sector until the start page of a data block is found **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11777  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11778  /* [cover parentID={14665659-4D81-49c2-A37A-1559D2FA5E57}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11779  LOCAL_INLINE void Fee_lUpdateCacheTable(const uint32 BankNumber, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11780                                          const uint32 EndAddr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11781  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11782    Fee_StateDataType       *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11783    uint8             *ReadWriteBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11784    uint32                   WordValue[2];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11785    uint32                   LWBHeaderAddress;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11786    uint32                   LWBMarkerAddress;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11787    uint32                   DataNextPageCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11788    uint16                   PageCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11789    uint16                   PageCount1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11790    uint16                   BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11791    uint8                    PageId;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11792    uint8                    PotentialMarkerPage;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11793    Std_ReturnType           RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11794  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11795    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11796    ReadWriteBufferPtr = StateDataPtr->FeeReadWriteBuffer;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11797    PotentialMarkerPage = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11798    DataNextPageCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11799    do
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11800    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11801      /* Check for unerasable WL */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11802      /* [cover parentID={32D9C173-A175-4c32-8F44-9F9527D3DD01}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11803      while((Fee_lIsUnerasableAddr(StateDataPtr->FeeCurrSectSrcAddr) == TRUE) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11804            (StateDataPtr->FeeCacheState != FEE_CACHE_UPDATE_COMPLETE) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11805            (StateDataPtr->FeeBlkPageCount!= FEE_ZERO))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11806      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11807        /* [cover parentID={5B61E537-5EA6-4008-80C5-8E41269E7FD7}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11808        Fee_lCheckPrevPage(EndAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11809      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11810      /* [cover parentID={B33D439F-1733-4162-BBB4-459F46046EC0}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11811      if ((StateDataPtr->FeeCacheState != FEE_CACHE_UPDATE_COMPLETE) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11812          (StateDataPtr->FeeBlkPageCount!= FEE_ZERO))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11813      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11814        /* Read the header (2 Words) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11815        /*MISRA2012_RULE_11_3_JUSTIFICATION:This is done for interfacing with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11816        FLS.FEE is passing parameters to FLS APIs, casting is needed to match with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11817        the Fls API prototype. ReadWriteBuffPtr is poiniting to FeeReadWriteBuffer
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11818          which is part of Fee_StateDataType. FeeReadWriteBuffer is so placed to have
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11819          4 byte alignment*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11820  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11821        RetVal = Fls_17_Dmu_ReadWordsSync(\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11822                      (Fls_17_Dmu_AddressType)StateDataPtr->FeeCurrSectSrcAddr, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11823                      (uint32 *)ReadWriteBufferPtr, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11824                      (Fls_17_Dmu_LengthType)\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11825                      (FEE_DFLASH_PAGE_SIZE / FEE_DFLASH_WORD_SIZE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11826        /* [cover parentID={1F72A1C8-821F-4865-A59D-FA9164481D28}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11827        if(StateDataPtr->FeeLastWrittenBlockDirty == FEE_LWB_CHECK_FOR_DIRTY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11828        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11829          /* [cover parentID={350227EF-15F5-48f8-AA3D-38AEAAFE46FF}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11830          if((RetVal == E_NOT_OK) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11831              ((ReadWriteBufferPtr[0] != FEE_DATA_FIRST_PAGE_ID) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11832               (ReadWriteBufferPtr[0] != FEE_DATA_NEXT_PAGE_ID)))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11833          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11834            StateDataPtr->FeeLastWrittenBlockDirty = FEE_LWB_NOT_DIRTY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11835          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11836        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11837        /* [cover parentID={C6CF4BF8-BDB7-48de-B7AA-CC213682271F}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11838        if(RetVal == E_NOT_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11839        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11840          /*Reading of page is failed due to error (ECC error or HW busy)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11841          and if this marker page then clear PotentialMarkerPage. This will
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11842          avoid storing block data in cache with corrupted marker page and
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11843          illegal notification while GC */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11844          PotentialMarkerPage = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11845          DataNextPageCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11846        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11847        /* [cover parentID={191B2B49-2CDC-43c6-8E8F-97333B4110E5}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11848        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11849        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11850          /* Evaluate the header read */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11851          PageId = *ReadWriteBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11852          /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11853          bit access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11854          WordValue[0] = *((const uint32 *)ReadWriteBufferPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11855          /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11856           bit access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11857          WordValue[1] = \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11858          *(const uint32 *)&(ReadWriteBufferPtr[FEE_DFLASH_WORD_SIZE]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11859  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11860          /* Check for data continuation page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11861          if (WordValue[0] == FEE_DP_MARKER_WORD)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11862          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11863  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11864            DataNextPageCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11865  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11866  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11867            PageCount1 = ((uint16)((uint16)(ReadWriteBufferPtr[7]) << FEE_EIGHT) |
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11868                          ReadWriteBufferPtr[6]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11869            PageCount = (PageCount1 & (uint16)FEE_PAGE_COUNT_MASK);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11870  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11871            BlockNumber = ((uint16)((uint16)(ReadWriteBufferPtr[5]) << FEE_EIGHT) |
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11872                           ReadWriteBufferPtr[4]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11873            LWBMarkerAddress = StateDataPtr->FeeCurrSectSrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11874            if(StateDataPtr->FeeSectorInfo[BankNumber].UnerasableWLCount ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11875                FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11876            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11877              LWBHeaderAddress = LWBMarkerAddress - (
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11878                                   (uint32)PageCount << FEE_PAGE_TO_BYTE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11879            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11880            else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11881            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11882              LWBHeaderAddress = Fee_lGetBlockHeaderAddress(LWBMarkerAddress,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11883                                 PageCount);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11884            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11885            /* [cover parentID={5145C1E7-DA38-437d-9CA7-D42D7EF005B5}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11886            if((LWBHeaderAddress > EndAddr) && (PageCount1 != FEE_RESET) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11887                (LWBHeaderAddress < (FEE_DFLASH_SECTOR_SIZE * FEE_TWO )))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11888            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11889  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11890              /*MISRA2012_RULE_11_3_JUSTIFICATION:This is done for interfacing
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11891              with FLS.FEE is passing parameters to FLS APIs, casting is needed
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11892              to match with the Fls API prototype. ReadWriteBuffPtr is poiniting to
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11893              FeeReadWriteBuffer which is part of Fee_StateDataType. FeeReadWriteBuffer
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11894              is so placed to have 4 byte alignment*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11895              RetVal = Fls_17_Dmu_ReadWordsSync(\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11896                                  (Fls_17_Dmu_AddressType)LWBHeaderAddress, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11897                                  (uint32 *)ReadWriteBufferPtr, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11898                                  (Fls_17_Dmu_LengthType)\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11899                                  (FEE_DFLASH_PAGE_SIZE / FEE_DFLASH_WORD_SIZE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11900              /* [cover parentID={92D1ECF3-5B39-4c30-9C74-19C59A06E0A6}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11901              if(RetVal == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11902              {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11903  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11904                RetVal = Fee_lEvaluateBlkHeader(BlockNumber, PageCount1);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11905                /* [cover parentID={5A3667BB-AA2C-4dd1-A2F9-265774A7B94F}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11906                if(RetVal == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11907                {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11908                  /* [cover parentID={86674B7E-DE84-413b-8C8D-971B468BB1B6}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11909                  Fee_lHandleBlkMarkerFound(LWBHeaderAddress, LWBMarkerAddress,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11910                                            PageCount);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11911                  PotentialMarkerPage = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11912                  /* Block Header page is valid and no need to scan the data pages
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11913                   for ECC error because ECC error will be detected during the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11914                   read and GC.Block with ECC error in data pages will be treated
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11915                   as inconsistent during GC and will be not be copied to another
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11916                   sector. This will reduce the  the time for cache table build.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11917                   skipping of data pages is done by setting the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11918                  StateDataPtr->FeeCurrSectSrcAddr address to LWBHeaderAddress */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11919                  StateDataPtr->FeeCurrSectSrcAddr = LWBHeaderAddress;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11920                }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11921                else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11922                {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11923  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11924                  /* Block Header page is not valid and no need to scan the data
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11925                  pages.Skiping of data pages is done by setting the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11926                  StateDataPtr->FeeCurrSectSrcAddr address to LWBHeaderAddress */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11927                  PotentialMarkerPage = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11928                  StateDataPtr->FeeCurrSectSrcAddr = LWBHeaderAddress;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11929                }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11930              }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11931              else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11932              {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11933                PotentialMarkerPage = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11934                /* Block Header page is not valid and no need to scan the data
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11935                pages.Skiping of data pages is done by setting the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11936                StateDataPtr->FeeCurrSectSrcAddr address to LWBHeaderAddress */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11937                StateDataPtr->FeeCurrSectSrcAddr = LWBHeaderAddress;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11938              }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11939              /* Decerement the number of pages to be scanned in one main
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11940              cycle by 1 , because header page of block is analyzed*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11941              StateDataPtr->FeeBlkPageCount -= FEE_ONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11942            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11943            else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11944            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11945              PotentialMarkerPage = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11946              DataNextPageCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11947            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11948          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11949          /* [cover parentID={F383C32D-56D9-438c-9840-B2FBE8269CE0}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11950          else if (PageId == FEE_DATA_NEXT_PAGE_ID)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11951          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11952            DataNextPageCount++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11953          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11954          /* Check for data first page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11955          /* [cover parentID={9B8C107A-0D58-4eaa-9905-C96EC2B5B72D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11956          else if (PageId == FEE_DATA_FIRST_PAGE_ID)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11957          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11958            Fee_lHandleBlkHeaderFound(PotentialMarkerPage, DataNextPageCount);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11959            DataNextPageCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11960            PotentialMarkerPage = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11961          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11962          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11963          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11964            DataNextPageCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11965            /* [cover parentID={C5562534-FCC7-48e3-8246-72228C877055}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11966            if(((WordValue[0] == (uint32)FEE_RESET) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11967                (WordValue[1] == (uint32)FEE_RESET)) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11968                (ReadWriteBufferPtr[0] == FEE_STATE_FIRST_PAGE_ID))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11969            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11970              PotentialMarkerPage = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11971            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11972            else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11973            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11974              /* Current page data is corrupted and if this marker page then
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11975                 clear PotentialMarkerPage. This will avoid storing block data
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11976                 in cache with corrupted marker page and illegal notification
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11977                 while GC  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11978              PotentialMarkerPage = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11979            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11980          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11981        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11982        Fee_lCheckPrevPage(EndAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11983      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11984    } while((StateDataPtr->FeeCacheState == FEE_CACHE_FIND_NEXT_BLK) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11985            (StateDataPtr->FeeBlkPageCount!= FEE_ZERO));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11986    /* [cover parentID={CAB4469D-0FBF-4a76-996A-FC1792C24FE5}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11987  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11988  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11989  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11990  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11991  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11992  ** Syntax : LOCAL_INLINE Std_ReturnType Fee_lEvaluateBlkHeader                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11993  **                                         (const uint16 BlockNumber,         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11994  **                                          const uint16 BlockPageCount)      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11995  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11996  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11997  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11998  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11999  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12000  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12001  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12002  ** Parameters (in) :  BlockNumber - Logical block number                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12003  **                    BlockPageCount - Page Count of the corresponding block  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12004  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12005  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12006  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12007  ** Return value    :  Std_ReturnType                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12008  **                   E_OK:Block Header page is matching with marker page.     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12009  **                   E_NOT_OK:Block Header page is not matching with marker   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12010  **                   page.                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12011  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12012  ** Description : This function evaluates block header page with respect to    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12013  **               block marker page                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12014  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12015  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12016  /* [cover parentID={FEB7A878-CB8C-478a-B38D-7CB3691EA331}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12017  LOCAL_INLINE Std_ReturnType Fee_lEvaluateBlkHeader(const uint16 BlockNumber,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12018      const uint16 BlockPageCount)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12019  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12020    const Fee_StateDataType          *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12021    const uint8                *ReadWriteBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12022    uint16                      BlockNumber1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12023    uint16                      PageCount1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12024    Std_ReturnType              RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12025  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12026    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12027    ReadWriteBufferPtr = StateDataPtr->FeeReadWriteBuffer;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12028  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12029    BlockNumber1 = (uint16)((uint16)ReadWriteBufferPtr[2] << FEE_EIGHT) |
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12030                   ReadWriteBufferPtr[1];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12031  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12032    PageCount1   = (uint16)((uint16)ReadWriteBufferPtr[7] << FEE_EIGHT) |
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12033                   ReadWriteBufferPtr[6];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12034  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12035    /* [cover parentID={71495D05-7A44-4c6e-967A-D8F3BC5B5317}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12036    if((BlockNumber == BlockNumber1) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12037        (BlockPageCount == PageCount1) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12038        (ReadWriteBufferPtr[0] == FEE_DATA_FIRST_PAGE_ID))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12039    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12040      RetVal = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12041    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12042    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12043    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12044      RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12045    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12046  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12047    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12048  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12049  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12050  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12051  ** Syntax : LOCAL_INLINE uint32 Fee_lGetBlockHeaderAddress                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12052  **                                           (const uint32 LWBMarkerAddress,  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12053  **                                            const uint16 PageCount)         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12054  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12055  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12056  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12057  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12058  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12059  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12060  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12061  ** Parameters (in) :  (uint32)LWBMarkerAddress - Last Written Block's Marker  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12062                                                   Address                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12063  **                    (uint16)PageCount - Page Count of the corresponding     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12064  **                                          block                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12065  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12066  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12067  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12068  ** Return value    :  uint32 - Block header address                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12069  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12070  ** Description : This function returns the address of the block's header      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12071  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12072  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12073  /* [cover parentID={501EF677-CADF-4b03-AEF1-212338E60E6F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12074  Fee_lGetBlockHeaderAddress
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12075  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12076  /* [cover parentID={D3E72FDC-BF75-4272-A0D0-6A327BE99D23}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12077  LOCAL_INLINE uint32 Fee_lGetBlockHeaderAddress(const uint32 LWBMarkerAddress,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12078      const uint16 PageCount)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12079  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12080    uint32 BlockSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12081    uint32 NewLWBMarkerAddress;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12082  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12083    BlockSize = (uint32)PageCount << FEE_PAGE_TO_BYTE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12084    NewLWBMarkerAddress = (uint32)LWBMarkerAddress;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12085    /* [cover parentID={546D9630-0A3E-4f89-8839-2BFB93D74A9D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12086    do
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12087    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12088      NewLWBMarkerAddress -= FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12089      /* [cover parentID={C032B0D0-204B-44df-833E-7D599A9221A9}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12090      if(Fee_lIsUnerasableAddr(NewLWBMarkerAddress) == (boolean)FALSE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12091      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12092        BlockSize -= FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12093      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12094    } while(BlockSize > FEE_ZERO);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12095  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12096    return(NewLWBMarkerAddress);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12097  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12098  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12099  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12100  ** Syntax : LOCAL_INLINE void Fee_lHandleBlkMarkerFound                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12101  **                                        (const uint32 LWBHeaderAddress,    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12102  **                                         const uint32 LWBMarkerAddress,    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12103  **                                         const uint16 PageCount)           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12104  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12105  ** Service ID:                                                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12106  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12107  ** Sync/Async:  Synchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12108  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12109  ** Reentrancy:  Non reentrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12110  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12111  ** Parameters (in) : (uint32) LWBHeaderAddress - Last Written Block's Header **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12112                                                   Address                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12113  **                   (uint32) LWBMarkerAddress - Last Written Block's Marker **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12114                                                    Address                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12115  **                   (uint16) PageCount - Page Count of the corresponding    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12116                                             block                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12117  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12118  ** Parameters (out):  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12119  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12120  ** Return value    :  void                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12121  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12122  ** Description:This function does the cache table update and other necessary **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12123  **             handling when the block's marker is found during cache build  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12124  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12125  /* [cover parentID={37A9C2EB-D1A4-442b-BBF2-9540B6A49AF5}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12126  Fee_lHandleBlkMarkerFound
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12127  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12128  /* [cover parentID={FE455823-FB15-46ca-A78E-E17728918E39}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12129  LOCAL_INLINE void Fee_lHandleBlkMarkerFound(const uint32 LWBHeaderAddress,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12130      const uint32 LWBMarkerAddress,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12131      const uint16 PageCount)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12132  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12133    Fee_StateDataType          *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12134    Fee_LastWrittenBlkInfoType *LastWrittenBlkPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12135    const uint8                      *ReadWriteBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12136    Fee_CacheStatusType         Status;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12137    uint32                      NextFreePageWLAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12138    uint16                      BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12139    uint16                      Index;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12140  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12141    Status.Consistent = FEE_SET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12142    Status.Copied = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12143    Status.PrevCopyValid = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12144    Status.PrevCopyConsistent = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12145    Status.PrevCopyCopied = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12146    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12147    ReadWriteBufferPtr = StateDataPtr->FeeReadWriteBuffer;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12148    LastWrittenBlkPtr = &(StateDataPtr->FeeLastWrittenBlkInfo);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12149    StateDataPtr->FeeCurrSectSrcAddr = LWBHeaderAddress;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12150  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12151    BlockNumber = (uint16)((uint16)ReadWriteBufferPtr[2] << FEE_EIGHT) |
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12152                  ReadWriteBufferPtr[1];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12153    Index = Fee_lGetUsrBlockIndex(BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12154  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12155    /* [cover parentID={F0533167-5F51-49dc-AC32-DE0371783E70}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12156    if((ReadWriteBufferPtr[7] & FEE_VALID_MASK) != FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12157    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12158      Status.Valid = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12159    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12160    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12161    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12162      Status.Valid = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12163    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12164  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12165    /* Updated cache table */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12166    /* [cover parentID={5A7A0F35-2512-4fad-AFAF-EB1061497AC7}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12167    if ((Index != FEE_LOG_BLOCK_NOT_FOUND))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12168    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12169      /* [cover parentID={1692F876-9F39-408b-9B72-B51C9D4526F5}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12170  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12171      /*MISRA2012_RULE_1_3_JUSTIFICATION: As per JIRA: 0000053912-10179 passing
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12172      the Fee_CacheStatusType as reference.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12173      This is safe because in function Fee_lUpdateBlockInfo no pointer arthmetic
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12174      is performed only read operation and within the scope of called function.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12175      So, no undefined behaviour */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12176      Fee_lUpdateBlockInfo(&(Status), Index, PageCount);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12177  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12178    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12179    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12180    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12181      /* [cover parentID={31AADA5E-26FF-4378-A54D-363F56FEE982}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12182      Fee_lUpdateUnconfigBlockInfo(BlockNumber, PageCount);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12183    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12184  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12185    /* Updated last written block info, if not done */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12186    /* [cover parentID={295E2765-3905-4973-90EC-4A70C6367400}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12187    if(LastWrittenBlkPtr->BlockNumber == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12188    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12189      NextFreePageWLAddr = Fee_lGetWLBeginning(StateDataPtr->FeeNextFreePageAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12190      /* [cover parentID={1CFD55A2-1069-40fe-B20C-EC0632BBAE44}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12191      if((LWBHeaderAddress < NextFreePageWLAddr) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12192          (LWBMarkerAddress >= NextFreePageWLAddr))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12193      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12194        LastWrittenBlkPtr->PageCount = PageCount + FEE_ONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12195        LastWrittenBlkPtr->Addr = LWBHeaderAddress;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12196        LastWrittenBlkPtr->BlockNumber = BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12197        LastWrittenBlkPtr->Status.Consistent = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12198      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12199      /* [cover parentID={CDD62F42-E101-4c07-AD57-E18AF06C9AF4}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12200      else if (LWBMarkerAddress < NextFreePageWLAddr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12201      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12202        LastWrittenBlkPtr->BlockNumber = FEE_16_BIT_ALL_ONES;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12203      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12204      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12205      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12206        /* dummy else */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12207      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12208    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12209  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12210  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12211  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12212  ** Syntax : LOCAL_INLINE void Fee_lHandleBlkHeaderFound                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12213  **                                        (const uint8 PotentialMarkerPage,  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12214  **                                         const uint32 DataNextPageCount)   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12215  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12216  ** Service ID:                                                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12217  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12218  ** Sync/Async:  Synchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12219  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12220  ** Reentrancy:  Non reentrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12221  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12222  ** Parameters (in): (uint8) PotentialMarkerPage - Potential Marker Page was  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12223  **                                                found or not.              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12224  **                  (uint32) DataNextPageCount - Count of Data block's       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12225  **                                               continuation page           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12226  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12227  ** Parameters (out):  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12228  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12229  ** Return value    :  void                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12230  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12231  ** Description:This function does the cache table update and other necessary **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12232  **              handling when the block's header is found during cache build **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12233  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12234  /* [cover parentID={738E380E-9EE6-4fe8-A1A6-34BB60F4CBDB}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12235  LOCAL_INLINE void Fee_lHandleBlkHeaderFound(const uint8 PotentialMarkerPage,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12236      const uint32 DataNextPageCount)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12237  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12238    Fee_StateDataType          *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12239    const uint8                      *ReadWriteBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12240    uint16                      PageCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12241  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12242    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12243    ReadWriteBufferPtr = StateDataPtr->FeeReadWriteBuffer;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12244  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12245    UNUSED_PARAMETER (PotentialMarkerPage);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12246    /* extract page count */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12247    PageCount = (uint16)((uint16)ReadWriteBufferPtr[7] << FEE_EIGHT) |
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12248                ReadWriteBufferPtr[6];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12249    PageCount = (PageCount & (uint16)FEE_PAGE_COUNT_MASK) - FEE_ONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12250    /* [cover parentID={303F6A87-6A91-43e4-8CCF-E59870F0D29D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12251    if(StateDataPtr->FeeLastWrittenBlockDirty == FEE_LWB_CHECK_FOR_DIRTY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12252    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12253      /* [cover parentID={09A8FD7D-4F95-4b5c-968C-A599C49BD408}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12254      if(PageCount == DataNextPageCount)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12255      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12256        StateDataPtr->FeeLastWrittenBlockDirty = FEE_LWB_DIRTY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12257      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12258      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12259      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12260        StateDataPtr->FeeLastWrittenBlockDirty = FEE_LWB_NOT_DIRTY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12261      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12262    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12263    /* AI00194692 - Do not update cache table as block is inconsistent */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12264    /*            - Continue the search for consistent copy of the block */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12265  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12266  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12267  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12268  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12269  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12270  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12271  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12272  ** Syntax : LOCAL_INLINE void Fee_lCheckPrevPage(const uint32 EndAddr)        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12273  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12274  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12275  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12276  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12277  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12278  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12279  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12280  ** Parameters (in-out) :EndAddr - BaseAddr of the sector                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12281  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12282  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12283  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12284  ** Return value    :  void                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12285  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12286  ** Description : This utility function will check if the CurrSectSrcAddr      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12287  **  has reached the base address. If not, it decrements the CurrSectSrcAddr   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12288  **  by page size                                                              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12289  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12290  /* [cover parentID={0C4F21DC-2ECA-437b-AAB5-3D5340FC7FA2}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12291  Fee_lCheckPrevPage
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12292  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12293   /* [cover parentID={E452785D-3A38-4c72-8495-961C1EDE8347}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12294  LOCAL_INLINE void Fee_lCheckPrevPage(const uint32 EndAddr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12295  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12296    Fee_StateDataType       *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12297  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12298    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12299  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12300    /* Check if all pages have been read */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12301    /* [cover parentID={6B99A24F-A42E-4aa7-A6E4-EE7A24A14437}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12302    if( StateDataPtr->FeeCurrSectSrcAddr != EndAddr )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12303    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12304      /* Move to the next page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12305      StateDataPtr->FeeCurrSectSrcAddr -= FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12306      /* [cover parentID={B4429EDE-559D-4304-9479-4C28E39E4FF9}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12307      Block page count is not 0
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12308      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12309      if(StateDataPtr->FeeBlkPageCount != FEE_ZERO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12310      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12311        StateDataPtr->FeeBlkPageCount -= FEE_ONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12312      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12313    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12314    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12315    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12316      /* Goto the next state */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12317      StateDataPtr->FeeCacheState = FEE_CACHE_UPDATE_COMPLETE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12318    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12319  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12320  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12321  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12322  ** Syntax : static uint32 Fee_lGetBlkCycleCount(const uint16 Index)           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12323  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12324  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12325  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12326  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12327  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12328  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12329  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12330  ** Parameters (in) :  Index      Cache Index for targeted logical block       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12331  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12332  ** Parameters (in-out) :None                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12333  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12334  ** Return value    :  uint32     Fetches the cycle count for the logical block**
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12335  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12336  ** Description : This utility function fetches the cycle count for a          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12337  **               logical block from DFLASH.                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12338  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12339  /*[cover parentID={DD7D4A15-7749-4849-8E49-A96FE968B15D}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12340  static uint32 Fee_lGetBlkCycleCount(const uint16 Index)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12341  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12342    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12343    const uint8        *TempArrayPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12344    uint32              Address;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12345    uint32              BlockCycleCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12346    uint32              TempVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12347    Std_ReturnType      RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12348  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12349    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12350  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12351    BlockCycleCount = FEE_32_BIT_ALL_ONES;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12352  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12353    /* Initialize the temp array */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12354    StateDataPtr->FeeTempArray[0U] = (uint32)FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12355    StateDataPtr->FeeTempArray[1U] = (uint32)FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12356  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12357    /* Read block cycle count */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12358    Address = (StateDataPtr->FeeBlockInfo[Index]).Address;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12359    /*[cover parentID={DDAB992A-A350-4368-8133-EE91E9CE6745}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12360    if( Address != FEE_RESET )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12361    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12362      /* Read the header (2 Words) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12363      /*MISRA2012_RULE_11_3_JUSTIFICATION:This is done for interfacing
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12364      with FLS.FEE is passing parameters to FLS APIs, casting is needed
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12365      to match with the Fls API prototype.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12366  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12367      /*[cover parentID={DBA142A2-FD87-46eb-9032-FED3E7B81D3C}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12368      RetVal = Fls_17_Dmu_ReadWordsSync((Fls_17_Dmu_AddressType)Address, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12369                                        (uint32 *)(StateDataPtr->FeeTempArray), \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12370                                        (Fls_17_Dmu_LengthType)\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12371                                        (FEE_DFLASH_PAGE_SIZE /
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12372                                         FEE_DFLASH_WORD_SIZE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12373      /*[cover parentID={24478595-F8C0-4da5-A4CA-A899AB6AA739}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12374      if( RetVal != E_OK )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12375      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12376  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12377        /*Check if the previous copy of block is available.if yes then read the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12378        BCC from this block*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12379        /*[cover parentID={E2048E9A-895D-40de-9E64-9B6AD3003948}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12380        Address = (StateDataPtr->FeeBlockInfo[Index]).PrevCopyAddress;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12381        if( Address != FEE_RESET )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12382        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12383          /* Read the header (2 Words) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12384          /*[cover parentID={0AB1883F-CDF8-4719-92BD-36664A4B99D5}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12385          RetVal = Fls_17_Dmu_ReadWordsSync(Address, (StateDataPtr->FeeTempArray),
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12386                                  (FEE_DFLASH_PAGE_SIZE / FEE_DFLASH_WORD_SIZE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12387  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12388          /*[cover parentID={56F8293F-A427-450f-99B0-A3A457D7D302}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12389          if(RetVal == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12390          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12391            /* Block Cycle count is 24 bits starting from 3rd byte of FeeTempArray
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12392            Read the word from second byte and extract the upper 24bits */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12393            TempArrayPtr = (uint8 *)(StateDataPtr->FeeTempArray);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12394            /*MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12395            array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12396            Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12397            The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12398            TempArrayPtr += FEE_BLOCK_CYL_CNT_POS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12399            /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12400            32 bit access and array is memory aligned. TempArrayPtr is poiniting to
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12401            FeeTempArray which is part of Fee_StateDataType. FeeTempArray is so placed
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12402            to have 4 byte alignment*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12403            TempVal = *((const uint32 *)TempArrayPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12404            BlockCycleCount = (TempVal >> FEE_EIGHT);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12405            /*Add the 1 to BCC of previous copy of block. This will give the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12406            BCC of current copy of block*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12407            BlockCycleCount = BlockCycleCount + FEE_ONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12408          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12409          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12410          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12411            BlockCycleCount = FEE_32_BIT_ALL_ONES;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12412          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12413        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12414        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12415        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12416          BlockCycleCount = FEE_32_BIT_ALL_ONES;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12417        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12418      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12419      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12420      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12421        /* Block Cycle count is 24 bits starting from 3rd byte of FeeTempArray.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12422           Read the word from second byte and extract the upper 24bits */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12423        TempArrayPtr = (uint8 *)(StateDataPtr->FeeTempArray);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12424        /*MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12425        array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12426        Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12427        The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12428        TempArrayPtr += FEE_BLOCK_CYL_CNT_POS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12429        /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12430        32 bit access and array is memory aligned. TempArrayPtr is poiniting to
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12431        FeeTempArray which is part of Fee_StateDataType. FeeTempArray is so placed
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12432        to have 4 byte alignment*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12433        TempVal = *((const uint32 *)TempArrayPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12434        BlockCycleCount = (TempVal >> FEE_EIGHT);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12435      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12436    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12437    /* [cover parentID={34F26C48-1097-4c68-A607-71E65034E132}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12438    Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12439    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12440    return(BlockCycleCount);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12441  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12442  }/*End of Fee_lGetBlkCycleCount */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12443  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12444  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12445  ** Syntax : LOCAL_INLINE uint8 Fee_lCheckPrevWordline(                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12446  **                                 Fee_SectorInfoType *const SectorInfoPtr,   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12447  **                                 const uint32 EndAddr                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12448  **                                      )                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12449  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12450  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12451  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12452  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12453  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12454  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12455  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12456  ** Parameters (in-out) :SectorInfoPtr: Pointer to Sector Info                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12457  **                     :EndAddr: Sector base addr                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12458  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12459  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12460  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12461  ** Return value    :  uint8                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12462  **                  FEE_SP_INIT: Sector end is not reached                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12463  **                  FEE_SP_DONE: Sector end reached                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12464  ** Description : This utility function will check if the CurrSectSrcAddr      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12465  **  has reached the end address. If not, it decrements the CurrSectSrcAddr    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12466  **  by word-line size. If the end address is reached, this function computes  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12467  **  the first free WL address and the sector used status.                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12468  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12469  /* [cover parentID={C29C319E-7350-4cc0-9D7A-DD9D9E708951}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12470  Fee_lCheckPrevWordline
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12471  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12472  /* [cover parentID={A29D3C4F-7101-458b-AE6C-8331A8F41D6F}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12473  LOCAL_INLINE uint8 Fee_lCheckPrevWordline(Fee_SectorInfoType *const
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12474      SectorInfoPtr, const uint32 EndAddr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12475  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12476    Fee_StateDataType   *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12477    uint8                RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12478    uint32               NonZeroWlCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12479    uint8                SectorState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12480    uint8                UnerasableWlCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12481  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12482    RetVal = FEE_SP_INIT;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12483    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12484    NonZeroWlCount = SectorInfoPtr->NonZeroWLCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12485    SectorState = SectorInfoPtr->State;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12486    UnerasableWlCount = SectorInfoPtr->UnerasableWLCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12487  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12488    /* Check if all pages have been read */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12489    /* [cover parentID={F912EE72-F924-4c6b-857C-8C1E3D08E732}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12490    if ( StateDataPtr->FeeCurrSectSrcAddr == EndAddr )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12491    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12492      /* EndAddr reached - State page search complete */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12493      RetVal = FEE_SP_DONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12494  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12495      /************ Compile NextFreeWL Address and Sector used state **********/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12496      /* [cover parentID={DA8A2871-21E8-4ecf-A5CB-481A42979CA2}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12497      if (NonZeroWlCount == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12498      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12499        /* The sector is empty -
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12500           NextFreeWlAddr = BaseAddr, Sector status = Unused (default value) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12501        SectorInfoPtr->NextFreeWLAddr = EndAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12502      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12503      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12504      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12505        Fee_lGetSectorFreeWL(SectorInfoPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12506        /* Refer UTP AI00238899 - Don't verify if sector end is reached */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12507        if((SectorInfoPtr->NextFreeWLAddr) < (EndAddr + FEE_DFLASH_SECTOR_SIZE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12508        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12509          /* Refer UTP AI00194703 - Identify/confirm next empty word line */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12510          Fee_lComputeNextWLAddr(SectorInfoPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12511        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12512  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12513        /* Determine Sector Used state */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12514        /* [cover parentID={08A0868F-FB34-4e14-B1F5-6F729FC369CC}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12515        if (SectorState == FEE_ERASED)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12516        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12517          if(((UnerasableWlCount == FEE_RESET) && (NonZeroWlCount == FEE_ONE)) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12518              ((UnerasableWlCount == FEE_ONE) && (NonZeroWlCount == FEE_TWO)) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12519              ((UnerasableWlCount == FEE_TWO) && (NonZeroWlCount == FEE_THREE)))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12520          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12521            /* Sector is unused (Default value) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12522            SectorInfoPtr->Status.Used = FEE_RESET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12523          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12524          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12525          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12526            SectorInfoPtr->Status.Used = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12527          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12528        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12529        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12530        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12531          SectorInfoPtr->Status.Used = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12532        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12533      } /* if (NonZeroWlCount == FEE_RESET) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12534    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12535    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12536    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12537      /* Move to the previous word line */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12538      StateDataPtr->FeeCurrSectSrcAddr -= FEE_DFLASH_WORDLINE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12539    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12540  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12541    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12542  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12543  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12544  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12545  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12546  ** Syntax : LOCAL_INLINE void Fee_lGetSectorFreeWL(Fee_SectorInfoType *const  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12547  **                                                  SectorInfoPtr)            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12548  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12549  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12550  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12551  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12552  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12553  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12554  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12555  ** Parameters (in) : SectorInfoPtr: Pointer to current sector info structure  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12556  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12557  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12558  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12559  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12560  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12561  ** Description : This utility function will determine the free WL of sector   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12562  ** .This information will be updated in given sector info structure.          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12563  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12564  /* [cover parentID={3E16486F-D1F2-44fc-BE69-C3E08CBEFB77}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12565  LOCAL_INLINE void Fee_lGetSectorFreeWL(Fee_SectorInfoType *const SectorInfoPtr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12566  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12567  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12568    uint32               UnerasableWlAddr1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12569    uint32               UnerasableWlAddr2;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12570    uint32               NonZeroWlAddr[3];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12571    uint32               StatePageAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12572    uint8                UnerasableWlCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12573    uint8                SectorState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12574  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12575  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12576    UnerasableWlAddr1 = SectorInfoPtr->UnerasableWLAddr[0];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12577    UnerasableWlAddr2 = SectorInfoPtr->UnerasableWLAddr[1];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12578    UnerasableWlCount = SectorInfoPtr->UnerasableWLCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12579    NonZeroWlAddr[0] = SectorInfoPtr->NonZeroWLAddr[0];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12580    NonZeroWlAddr[1] = SectorInfoPtr->NonZeroWLAddr[1];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12581    NonZeroWlAddr[2] = SectorInfoPtr->NonZeroWLAddr[2];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12582    StatePageAddr = SectorInfoPtr->StatePageAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12583    SectorState = SectorInfoPtr->State;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12584  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12585    /* Updating NextFreeWLAddr of the sector */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12586    /* [cover parentID={DE367CD0-46E9-419e-BCAC-151C0058CA50}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12587    if(((NonZeroWlAddr[0] == UnerasableWlAddr1) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12588        (UnerasableWlCount != FEE_RESET)) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12589        ((NonZeroWlAddr[0] == UnerasableWlAddr2) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12590         (UnerasableWlCount != FEE_RESET)))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12591    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12592      /* [cover parentID={7F898C8D-83DA-4882-87C6-14FD39BE6F11}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12593      if(SectorState == FEE_ERASED)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12594      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12595        SectorInfoPtr->NextFreeWLAddr = Fee_lGetNextWLAddr(StatePageAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12596        while (Fee_lIsUnerasableAddr(SectorInfoPtr->NextFreeWLAddr) == TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12597        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12598          SectorInfoPtr->NextFreeWLAddr = Fee_lGetNextWLAddr(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12599                                            SectorInfoPtr->NextFreeWLAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12600        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12601      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12602      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12603      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12604        /* [cover parentID={855564D7-C521-4f2f-BDC9-EB6FD9AA53E0}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12605        /*Check if there is only one unerasable WL. If yes then free WL will be
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12606        next to 2nd non-zero WL. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12607        if(NonZeroWlAddr[0] == UnerasableWlAddr1)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12608        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12609          SectorInfoPtr->NextFreeWLAddr = Fee_lGetNextWLAddr(NonZeroWlAddr[1]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12610          if(SectorInfoPtr->NextFreeWLAddr == UnerasableWlAddr1)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12611          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12612            SectorInfoPtr->NextFreeWLAddr =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12613            Fee_lGetNextWLAddr(SectorInfoPtr->NextFreeWLAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12614          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12615        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12616        /* [cover parentID={0BE90966-851F-466d-97B0-BEFBA1F090A5}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12617        /*Check if there is 2 unerasable WL. If yes then free WL will be
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12618        next to either 2nd or 3rd non-zero WL. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12619        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12620        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12621           /* [cover parentID={F8F1A562-A64B-40f4-B878-26C40E133CD3}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12622          if(NonZeroWlAddr[1] == UnerasableWlAddr1)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12623          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12624            SectorInfoPtr->NextFreeWLAddr =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12625            Fee_lGetNextWLAddr(NonZeroWlAddr[2]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12626            while(Fee_lIsUnerasableAddr(SectorInfoPtr->NextFreeWLAddr) == TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12627            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12628              SectorInfoPtr->NextFreeWLAddr = Fee_lGetNextWLAddr(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12629                                              SectorInfoPtr->NextFreeWLAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12630            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12631          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12632          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12633          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12634            SectorInfoPtr->NextFreeWLAddr =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12635            Fee_lGetNextWLAddr(NonZeroWlAddr[1]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12636            while(Fee_lIsUnerasableAddr(SectorInfoPtr->NextFreeWLAddr) == TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12637            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12638              SectorInfoPtr->NextFreeWLAddr = Fee_lGetNextWLAddr(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12639                                              SectorInfoPtr->NextFreeWLAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12640            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12641          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12642        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12643      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12644  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12645    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12646    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12647    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12648      SectorInfoPtr->NextFreeWLAddr = Fee_lGetNextWLAddr(NonZeroWlAddr[0]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12649    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12650  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12651  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12652  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12653  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12654  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12655  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12656  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12657  ** Syntax : LOCAL_INLINE uint8 Fee_lEvaluateStatePageMarker(void)             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12658  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12659  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12660  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12661  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12662  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12663  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12664  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12665  ** Parameters (in-out) :None                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12666  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12667  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12668  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12669  ** Return value    :  FEE_SP_CLEAN: if the State Page Marker is Valid         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12670  **                    FEE_SP_DIRTY: if the State Page Marker is Non Zero      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12671  **                    FEE_SP_INVALID: if the State Page Marker is Zero        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12672  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12673  ** Description : This utility function will evaluate the state page Marker    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12674  **  content and returns the status                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12675  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12676  /* [cover parentID={8D5082EC-AD0E-4514-B0A3-32C5E2C693EF}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12677  LOCAL_INLINE uint8 Fee_lEvaluateStatePageMarker(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12678  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12679    Fee_StateDataType *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12680    uint8             *BufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12681    uint32             Marker[2];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12682    Std_ReturnType     FlsRetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12683    uint8              ReturnVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12684  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12685    ReturnVal = FEE_SP_CLEAN;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12686    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12687  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12688    /* Read the marker (last 8 bytes) of the current page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12689    /* Offset will be 120 */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12690  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12691    BufferPtr = &(StateDataPtr->FeeReadWriteBuffer[FEE_SP_MARKERFIELD_START]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12692  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12693    /*MISRA2012_RULE_11_3_JUSTIFICATION:This is done for interfacing with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12694    FLS.FEE is passing parameters to FLS APIs, casting is needed to match with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12695    the Fls API prototype. FeeReadWriteBuffer access is 4 byte align,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12696    (FEE_SP_MARKERFIELD_START is 120) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12697  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12698    FlsRetVal = Fls_17_Dmu_ReadWordsSync(\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12699                     (Fls_17_Dmu_AddressType)(StateDataPtr->FeeCurrSectSrcAddr + \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12700                      FEE_SP_MARKERFIELD_START), \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12701                     (uint32 *)(BufferPtr), \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12702                     (Fls_17_Dmu_LengthType)(FEE_STATEPAGE_MARKER_SIZE /
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12703                      FEE_DFLASH_WORD_SIZE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12704  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12705    /* [cover parentID={1B4D4D37-067E-4e56-B204-8DAB26F9DBA6}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12706    if(FlsRetVal == E_NOT_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12707    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12708      ReturnVal = FEE_SP_DIRTY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12709    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12710    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12711    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12712      /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12713       access and array is memory aligned. .*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12714      Marker[0] = *((const uint32*)(BufferPtr));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12715      /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12716      access and array is memory aligned. FeeReadWriteBuffer access is 4 byte align,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12717      (FEE_DFLASH_WORD_SIZE is 4)*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12718      Marker[1] = *((const uint32*) & (BufferPtr[FEE_DFLASH_WORD_SIZE]));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12719      /* [cover parentID={1254D55E-FDC0-468d-AA25-96FFD2FF337E}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12720      if((Marker[0] == FEE_RESET) && (Marker[1] == FEE_RESET))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12721      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12722        ReturnVal = FEE_SP_INVALID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12723      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12724      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12725      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12726        /* if ReturnVal is FEE_SP_CLEAN */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12727        /* [cover parentID={820E6768-51EE-491a-AA17-463C10102EC0}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12728        if ((Marker[0] != FEE_SP_MARKER_WORD_1) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12729            (Marker[1] != FEE_SP_MARKER_WORD_2))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12730        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12731          ReturnVal = FEE_SP_DIRTY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12732        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12733      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12734    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12735    return(ReturnVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12736  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12737  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12738  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12739  ** Syntax : LOCAL_INLINE uint8 Fee_lEvaluateStatePageFormat(void)            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12740  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12741  ** Service ID: NA                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12742  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12743  ** Sync/Async:  Synchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12744  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12745  ** Reentrancy:  Non reentrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12746  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12747  ** Parameters (in-out) :None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12748  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12749  ** Parameters (out):  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12750  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12751  ** Return value    : uint8                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12752  **                    FEE_SP_CLEAN: if the state page is of New Format       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12753  **                    FEE_SP_INVALID: if the state page is invalid           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12754  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12755  ** Description : This utility function will evaluate the state page content  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12756  **  with respect to New Format and returns the status                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12757  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12758  /* [cover parentID={E436188A-774A-4564-8439-63B5B52FE2DA}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12759  LOCAL_INLINE uint8 Fee_lEvaluateStatePageFormat(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12760  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12761    const Fee_StateDataType *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12762    const uint32             *BufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12763    const uint32             *BufferPtr2;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12764    uint32             Data;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12765    uint32             Index;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12766    uint32             Length;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12767    uint8              ReturnVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12768  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12769    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12770  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12771    ReturnVal = FEE_SP_CLEAN;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12772    /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12773    access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12774    BufferPtr = (const uint32*)(StateDataPtr->FeeReadWriteBuffer);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12775    /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12776    access and array is memory aligned. 4 byte aligned
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12777    FEE_STATE_FIRSTFIVE_COPY_OFFSET is 40*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12778    BufferPtr2 = (const uint32*)(&(StateDataPtr->FeeReadWriteBuffer[ \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12779                                   FEE_STATE_FIRSTFIVE_COPY_OFFSET]));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12780  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12781    /* check that the first word content is redundant below except page id */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12782    /* [cover parentID={CA0428FF-F909-4755-9472-C75D505055B6}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12783    if((*BufferPtr & FEE_STATE_WLCOUNT_MASK) != \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12784        (*BufferPtr2 & FEE_STATE_WLCOUNT_MASK))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12785    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12786      ReturnVal = FEE_SP_INVALID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12787    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12788    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12789    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12790      /* Check the state page header pages(starting from Byte-4) with its
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12791       * duplicate copy.when Both copy matches then header pages are
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12792       *  considered as valid */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12793      /* [cover parentID={B38BA74A-109D-4c16-8C91-3053B5B68965}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12794      for(Index = FEE_RESET; Index < (FEE_STATE_PAGE_HDR_PAGES -FEE_ONE); Index++)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12795      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12796  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12797        BufferPtr++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12798        BufferPtr2++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12799  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12800        if(*BufferPtr != *BufferPtr2)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12801        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12802          ReturnVal = FEE_SP_INVALID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12803          break; /* break */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12804        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12805  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12806      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12807      /* Check for second half of state page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12808      /* [cover parentID={05F11B02-31B7-4b04-8061-452791CC2FEB}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12809      if(ReturnVal != FEE_SP_INVALID)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12810      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12811  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12812        /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12813        access and array is memory aligned. 4 byte aligned
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12814        FEE_STATE_ALLONES_OFFSET is 80 */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12815        BufferPtr = (const uint32*)(&(StateDataPtr->FeeReadWriteBuffer[ \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12816                                      FEE_STATE_ALLONES_OFFSET]));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12817        /* get the length excluding CRC */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12818  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12819  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12820        Length = sizeof(Fee_StateHalf) / sizeof(Fee_StateHalf[0]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12821  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12822        for(Index = FEE_RESET; Index < Length; Index++)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12823        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12824          if(*BufferPtr != Fee_StateHalf[Index])
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12825          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12826            ReturnVal = FEE_SP_INVALID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12827            break; /* break */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12828          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12829  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12830          BufferPtr++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12831        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12832      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12833      /* verify the CRC */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12834      if(ReturnVal != FEE_SP_INVALID)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12835      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12836        /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12837        access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12838        BufferPtr = (const uint32*)(&(StateDataPtr->FeeReadWriteBuffer[ \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12839                                      FEE_STATE_CRC_OFFSET]));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12840        /* Length will give the number of pages to Generate CRC */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12841        Length = FEE_STATE_CRC_OFFSET / FEE_DFLASH_WORD_SIZE;
	mov	d8,#29
.L1628:
	mov.u	d15,#62778
	addih	d15,d15,#44975
	st.w	[a10]16,d15
.L1597:
	j	.L10
.L11:
	ne	d0,d15,#0
.L4199:
	sh	d9,d0,#19
.L3136:
	ld.w	d15,[a10]24
.L3135:
	add	d0,d15,d9
.L4200:
	ld.a	a15,[a10]12
.L3137:
	st.w	[a15]2464,d0
.L1604:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12842  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12843        /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12844        access and array is memory aligned. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12845        /* [cover parentID={86B2AAE4-F07F-48e5-BCD7-4B073271A3A9}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12846        Data = Fee_lEvaluateStatePageCrc(\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12847                             (const uint32*)(StateDataPtr->FeeReadWriteBuffer), \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12848                             Length);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12849        /* [cover parentID={5C959E46-51CE-49ad-BE4C-D69295648AFF}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12850        if( Data != *BufferPtr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12851        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12852          ReturnVal = FEE_SP_INVALID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12853        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12854  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12855      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12856    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12857    return(ReturnVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12858  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12859  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12860  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12861  ** Syntax : LOCAL_INLINE uint32 Fee_lEvaluateStatePageCrc                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12862  **            (const uint32 * const DataPtr, const uint32 Length)             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12863  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12864  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12865  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12866  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12867  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12868  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12869  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12870  ** Parameters (in) :  DataPtr : Pointer to Data                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12871  **                    Length : Data Length in Word                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12872  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12873  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12874  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12875  ** Return value    :  32 bit CRC value                                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12876  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12877  ** Description : This utility function will evaluate 32 bit CRC value over    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12878  **               data pointed by DataPtr for the requested Length             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12879  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12880  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12881  /* [cover parentID={566D2475-E078-4542-93B3-9AB5E1D64383}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12882  LOCAL_INLINE uint32 Fee_lEvaluateStatePageCrc(const uint32 * const DataPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12883      const uint32 Length)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12884  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12885    uint32             Index;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12886    uint32             Crc32;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12887  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12888    Crc32 = FEE_CRC_START_VAL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12889    /* [cover parentID= {3AA2CEEF-2062-4c30-95E5-2BB0CB221831}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12890    for(Index = FEE_RESET; Index < Length; Index++)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12891    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12892      Crc32 = CRC32(Crc32, DataPtr[Index]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12893  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12894    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12895    return(Crc32);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12896  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12897  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12898  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12899  ** Syntax : LOCAL_INLINE uint8 Fee_lEvaluateStatePage(void)                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12900  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12901  ** Service ID: NA                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12902  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12903  ** Sync/Async:  Synchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12904  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12905  ** Reentrancy:  Non reentrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12906  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12907  ** Parameters (in-out) :None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12908  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12909  ** Parameters (out):  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12910  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12911  ** Return value    : uint8                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12912  **                    FEE_SP_CLEAN: if the state page is valid               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12913  **                    FEE_SP_DIRTY: if the state page is dirty               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12914  **                    FEE_SP_INVALID: if the state page is invalid           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12915  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12916  ** Description : This utility function will evaluate the state page content  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12917  **  and returns the state page status                                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12918  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12919  /* [cover parentID={9D6ADF48-7C6D-4e58-9411-8FE8C93A9C55}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12920  LOCAL_INLINE uint8 Fee_lEvaluateStatePage(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12921  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12922    Fee_StateDataType *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12923    const uint8             *BufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12924    Std_ReturnType     FlsRetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12925    uint8              State;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12926    uint8              ReturnVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12927  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12928    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12929  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12930    /* Read the state page content (first 120 bytes) of the current page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12931    FlsRetVal = Fls_17_Dmu_ReadWordsSync(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12932                  (Fls_17_Dmu_AddressType)StateDataPtr->FeeCurrSectSrcAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12933                  /*MISRA2012_RULE_11_3_JUSTIFICATION:This is done for interfacing
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12934                  with FLS.FEE is passing parameters to FLS APIs, casting is
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12935                  needed to match with the Fls API prototype.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12936                  (uint32 *)StateDataPtr->FeeReadWriteBuffer,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12937                  (Fls_17_Dmu_LengthType)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12938                  (FEE_STATEPAGE_DATA_SIZE / FEE_DFLASH_WORD_SIZE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12939    BufferPtr = StateDataPtr->FeeReadWriteBuffer;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12940    State = BufferPtr[FEE_ONE];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12941  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12942    /* [cover parentID= {2880AD46-396E-4450-9C1F-37E6D9A187D7}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12943    if( (FlsRetVal == E_NOT_OK) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12944        (!((State == FEE_VALID) || (State == FEE_ERASED))) )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12945    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12946      ReturnVal = FEE_SP_INVALID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12947    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12948    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12949    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12950      ReturnVal = Fee_lEvaluateStatePageFormat();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12951  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12952    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12953  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12954    /* [cover parentID= {324341E6-86B4-4273-B048-C4668AF7147E}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12955    if(FEE_SP_INVALID != ReturnVal)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12956    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12957      /* Check the marker field */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12958      ReturnVal = Fee_lEvaluateStatePageMarker();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12959    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12960  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12961    return(ReturnVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12962  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12963  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12964  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12965  ** Syntax : LOCAL_INLINE void Fee_lSetInitGc(const uint8 DFlashStatus)        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12966  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12967  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12968  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12969  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12970  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12971  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12972  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12973  ** Parameters (in) :DFlashStatus: State of DFlash sectors                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12974  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12975  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12976  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12977  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12978  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12979  ** Description : This utility function sets the InitGc state based on         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12980  **  the DFlashStatus                                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12981  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12982  /* [cover parentID= {73069EFB-0578-40c2-8DCF-BAD3CAFF16D5}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12983  LOCAL_INLINE void Fee_lSetInitGc(const uint8 DFlashStatus)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12984  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12985  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12986    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12987    Fee_SectorInfoType *SectorInfoPtr0;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12988    Fee_SectorInfoType *SectorInfoPtr1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12989    uint32              S0StateCnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12990    uint32              S1StateCnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12991    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12992    uint16              S0HardeningCnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12993    uint16              S1HardeningCnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12994    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12995    uint8               S0Used;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12996    uint8               S1Used;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12997    uint8               S0Dirty;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12998    uint8               S1Dirty;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12999  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13000    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13001    SectorInfoPtr0 = &StateDataPtr->FeeSectorInfo[0];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13002    SectorInfoPtr1 = &StateDataPtr->FeeSectorInfo[1];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13003  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13004    StateDataPtr->FeeInitGCState = FEE_INITGC_NORMAL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13005  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13006    S0StateCnt = SectorInfoPtr0->StateCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13007    S1StateCnt = SectorInfoPtr1->StateCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13008    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13009    S0HardeningCnt = SectorInfoPtr0->QsHardeningOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13010    S1HardeningCnt = SectorInfoPtr1->QsHardeningOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13011    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13012    S0Used = SectorInfoPtr0->Status.Used;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13013    S1Used = SectorInfoPtr1->Status.Used;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13014    S0Dirty = SectorInfoPtr0->Status.Dirty;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13015    S1Dirty = SectorInfoPtr1->Status.Dirty;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13016  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13017    /* Update the state count */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13018    /* [cover parentID= {C8DC623E-722C-4c22-82C6-A1FB9CBD59EB}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13019    if (S0StateCnt > S1StateCnt)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13020    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13021      /* [cover parentID= {507D65F7-806E-444f-BD0D-48E7AB6E4489}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13022      StateDataPtr->FeeStateCount = S0StateCnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13023      #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13024      StateDataPtr->FeeQsHardeningOffset = S0HardeningCnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13025      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13026    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13027    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13028    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13029      /* [cover parentID= {ED97A300-DEC0-48aa-990E-F241C81D0914}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13030      StateDataPtr->FeeStateCount = S1StateCnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13031      #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13032      StateDataPtr->FeeQsHardeningOffset = S1HardeningCnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13033      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13034    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13035  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13036    switch (DFlashStatus)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13037    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13038      /* Both the sectors empty */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13039      /* [cover parentID= {437127BC-D0E7-484a-A909-06C634870167}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13040      case FEE_S0_S1_EMPTY:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13041      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13042        /* [cover parentID= {0BB90C71-4B01-4a8b-ACE0-CC2013B3FB1C}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13043        StateDataPtr->FeeInitGCState = FEE_INITGC_HANDLE_VIRGIN;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13044        StateDataPtr->FeePrepDFLASHState = FEE_PREPDF_MARK_S0_ERASED_SP;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13045        StateDataPtr->FeeCurrSectSrcAddr =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13046          StateDataPtr->FeeSectorInfo[0].NextFreeWLAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13047        S0Dirty = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13048        S1Dirty = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13049  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13050        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13051      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13052      /* S0 is valid */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13053      /* [cover parentID= {A087EB8C-1529-4626-8066-5D38026B89AF}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13054      case FEE_S0_VALID:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13055      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13056        /* Check if copy was interrupted */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13057        /* [cover parentID= {2CF34704-3B99-48fd-810A-D228E9B68B29}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13058        if(S1Used == FEE_SET )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13059        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13060          StateDataPtr->FeeGcResumeState = FEE_INITGC_DATA_COPY_S0_S1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13061          S1Dirty = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13062        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13063        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13064        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13065          /* [cover parentID= {84F10F75-7524-4a5e-8E22-DBEE37FEA96E}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13066          StateDataPtr->FeeGcResumeState = FEE_INITGC_NORMAL_S0;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13067        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13068        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13069      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13070      /* S1 is valid */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13071      /* [cover parentID= {9051E9E9-7B05-4a49-A25F-F8E352C71569}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13072      case FEE_S1_VALID:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13073      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13074        /* Change the current sector to SECTOR1 */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13075        StateDataPtr->FeeStatusFlags.FeeCurrSector = FEE_SECTOR1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13076        /* Check if copy was interrupted */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13077        /* [cover parentID= {552B623C-9B5F-47b1-8174-6BFF007CB993}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13078        if(S0Used == FEE_SET )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13079        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13080          /* [cover parentID= {990D0812-83F0-40a9-82D7-84F459F021DB}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13081          StateDataPtr->FeeGcResumeState = FEE_INITGC_DATA_COPY_S1_S0;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13082          S0Dirty = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13083        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13084        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13085        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13086          /* [cover parentID= {86CDF4FB-1643-45a1-9613-CE3979F3087D}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13087          StateDataPtr->FeeGcResumeState = FEE_INITGC_NORMAL_S1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13088        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13089        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13090      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13091      /* Erase interrupted */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13092      /* [cover parentID= {860B3C41-9588-40c2-8EC9-1E0EF061FF1B}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13093      case FEE_S0_S1_VALID:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13094      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13095        /* [cover parentID= {F06DF482-D34D-46aa-8D79-6427A673BBFA}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13096        if (S0StateCnt > S1StateCnt)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13097        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13098          /* [cover parentID= {90F64D06-60C7-4f78-A999-3E4016793697}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13099          StateDataPtr->FeeGcResumeState = FEE_INITGC_ERASE_S1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13100          S1Dirty = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13101        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13102        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13103        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13104          /* Change the current sector to SECTOR1 */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13105          /* [cover parentID= {FE397E2D-87EB-442a-B32D-C8895EEA339A}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13106          StateDataPtr->FeeStatusFlags.FeeCurrSector = FEE_SECTOR1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13107          StateDataPtr->FeeGcResumeState = FEE_INITGC_ERASE_S0;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13108          S0Dirty = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13109        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13110        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13111      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13112      case FEE_S0_S1_INVALID:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13113      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13114        S0Dirty = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13115        S1Dirty = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13116        StateDataPtr->FeeInitGCState = FEE_INITGC_HANDLE_INVALID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13117  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13118        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13119      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13120      default:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13121      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13122        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13123      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13124    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13125  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13126    /* [cover parentID= {F8958411-EB50-4857-832D-54316BC52BEA}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13127    if ( (S0Dirty != FEE_RESET) || (S1Dirty != FEE_RESET) )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13128    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13129      /* [cover parentID= {BDF753A9-8E26-49f9-BAD6-D035AEEE3D4E}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13130      StateDataPtr->FeeInitGCState = FEE_INITGC_HANDLE_DIRTY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13131      StateDataPtr->FeeRepairStep = FEE_PROGRAM_MARKER;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13132    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13133  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13134    SectorInfoPtr0->Status.Dirty = S0Dirty;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13135    SectorInfoPtr1->Status.Dirty = S1Dirty;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13136  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13137  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13138  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13139  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13140  ** Syntax : LOCAL_INLINE uint8 Fee_lBuildDFlashStatus(void)                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13141  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13142  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13143  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13144  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13145  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13146  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13147  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13148  ** Parameters (in-out) :None                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13149  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13150  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13151  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13152  ** Return value    :  DFlash status                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13153  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13154  ** Description : This utility function compiles the DFLASH status based on    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13155  **  sector0 and sector1 state contents                                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13156  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13157  /*[cover parentID={361664FB-92BB-45d0-96FD-3DB7EB1BAAC5}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13158  LOCAL_INLINE uint8 Fee_lBuildDFlashStatus(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13159  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13160    const Fee_StateDataType *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13161    uint8              S0State;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13162    uint8              S1State;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13163    uint8              S0Used;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13164    uint8              S1Used;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13165    uint8              RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13166    boolean            S0Empty;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13167    boolean            S1Empty;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13168  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13169    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13170  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13171    S0State = StateDataPtr->FeeSectorInfo[0].State;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13172    S1State = StateDataPtr->FeeSectorInfo[1].State;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13173    S0Used = StateDataPtr->FeeSectorInfo[0].Status.Used;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13174    S1Used = StateDataPtr->FeeSectorInfo[1].Status.Used;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13175  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13176    S0Empty = Fee_lIsSectorEmpty(S0State, S0Used);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13177    S1Empty = Fee_lIsSectorEmpty(S1State, S1Used);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13178  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13179    /*[cover parentID={5DC15EEE-FEAB-4d37-8B60-33103321EE84}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13180    if ( (S0State == FEE_VALID) && (S1State == FEE_ERASED) )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13181    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13182      RetVal = FEE_S0_VALID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13183    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13184    /*[cover parentID={0EEDBA10-E6EF-406a-ABE5-10FBCCAA2F02}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13185    else if ( (S0State == FEE_ERASED) && (S1State == FEE_VALID) )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13186    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13187      RetVal = FEE_S1_VALID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13188    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13189    /*[cover parentID={65D0B61B-6D8B-404f-BE5A-9A0D37531796}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13190    else if ( (S0State == FEE_VALID) && (S1State == FEE_VALID) )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13191    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13192      /* This happens when Erase of S0 / S1 is interrupted just before the start
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13193         of Erase */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13194      RetVal = FEE_S0_S1_VALID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13195    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13196    /*[cover parentID={F3075C9E-4880-4fba-B70B-386873BC3F2E}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13197    else if ( (S0State == FEE_VALID) && (S1State == FEE_STATELESS) )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13198    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13199      /* This happens when Erase of S1 is interrupted. Handle it the same way as
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13200         S0_S1_VALID so that S1 can be erased as part of INIT GC */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13201      RetVal = FEE_S0_S1_VALID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13202    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13203    /*[cover parentID={E87BE6A8-0753-4a79-B7CB-13929B5F1394}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13204    else if ( (S0State == FEE_STATELESS) && (S1State == FEE_VALID) )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13205    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13206      /* This happens when Erase of S0 is interrupted. Handle it the same way as
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13207         S0_S1_VALID so that S0 can be erased as part of INIT GC */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13208      RetVal = FEE_S0_S1_VALID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13209    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13210    /*[cover parentID={EA7E82BC-6899-45ea-919F-A5630C203DBC}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13211    else if ((S0Empty == (boolean)TRUE) && (S1Empty == (boolean)TRUE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13212    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13213      RetVal = FEE_S0_S1_EMPTY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13214    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13215    /* Any other combination leads to invalid state */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13216    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13217    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13218      RetVal = FEE_S0_S1_INVALID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13219    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13220  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13221    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13222  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13223  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13224  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13225  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13226  ** Syntax : static void Fee_lUpdateNonZeroWLInfo(                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13227  **                                   Fee_SectorInfoType *const SectorInfoPtr, **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13228  **                                   const uint32        SrcAddr              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13229  **                                  )                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13230  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13231  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13232  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13233  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13234  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13235  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13236  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13237  ** Parameters (in-out) :SectInfoPtr: Pointer to Sector Info                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13238  **                     :SrcAddr: Current non zero page address.               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13239  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13240  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13241  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13242  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13243  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13244  ** Description : This utility function will update the NonZeroWLAddr and      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13245  **  NonZeroWLCount                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13246  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13247  /* [cover parentID={9B13D952-71FE-493d-8574-10F804C7F0E9} ] [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13248  static void Fee_lUpdateNonZeroWLInfo(Fee_SectorInfoType *const SectorInfoPtr, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13249                                       const uint32 SrcAddr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13250  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13251    uint32 NonZeroWlCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13252    NonZeroWlCount = SectorInfoPtr->NonZeroWLCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13253    /* [cover parentID={23D31021-77A8-40d0-9BD2-D6F00E8008AC}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13254        Fee_lUpdateNonZeroWLInfo
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13255       [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13256    /* Update the non-zero WL location if not updated */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13257    if (NonZeroWlCount <= FEE_TWO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13258    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13259      SectorInfoPtr->NonZeroWLAddr[NonZeroWlCount] = SrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13260    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13261  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13262    /* Increment non-zero WL count */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13263    SectorInfoPtr->NonZeroWLCount++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13264  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13265  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13266  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13267  ** Syntax : LOCAL_INLINE uint8 Fee_lGetSectorInfo (                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13268  **                                     const uint32 BankNumber,               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13269  **                                     const uint32 EndAddr                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13270  **                                   )                                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13271  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13272  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13273  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13274  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13275  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13276  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13277  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13278  ** Parameters (in-out) :(uint32)BankNumber: Sector number                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13279  **                      (uint32)EndAddr: Base of Sector                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13280  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13281  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13282  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13283  ** Return value    :  uint8                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13284  **                  FEE_SP_INIT: Sector scanning for state page is on going.  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13285  **                  FEE_SP_DONE: Sector scanning is completed                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13286  ** Description : This utility function will search through the DFLASH from    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13287  **  the bottom till base of the sector and get sector state information       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13288  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13289  /* [cover parentID={804DB87B-2AE9-421f-97F0-0D69563B9824},
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13290  {FC609CF8-1846-43bc-8922-86A42976F7A3}, {130CBADC-2E4F-4603-8D5C-F91DA268D7C3}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13291  Fee_lGetSectorInfo
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13292  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13293  LOCAL_INLINE uint8 Fee_lGetSectorInfo(const uint32 BankNumber,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13294                                        const uint32 EndAddr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13295  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13296    Fee_StateDataType   *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13297    Fee_SectorInfoType  *SectorInfoPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13298    const uint32              *BuffPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13299    uint32               SrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13300    uint32               StateCount1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13301    uint32               StateCount2;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13302    Std_ReturnType       RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13303    uint8                ReturnVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13304    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13305    uint32               QsOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13306    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13307  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13308  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13309    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13310    SectorInfoPtr = &StateDataPtr->FeeSectorInfo[BankNumber];
	ld.w	d15,[a10]20
.L3138:
	mul	d10,d15,#40
.L12:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4201:
	ld.a	a12,[a15]
.L3139:
	addsc.a	a15,a12,d10,#0
.L3141:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13311  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13312    SrcAddr = StateDataPtr->FeeCurrSectSrcAddr;
	ld.w	d11,[a12]2464
.L3142:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13313  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13314    /* Read the header of status page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13315    /* [cover parentID={804DB87B-2AE9-421f-97F0-0D69563B9824}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13316    RetVal = Fls_17_Dmu_ReadWordsSync((Fls_17_Dmu_AddressType)SrcAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13317                                      /* MISRA2012_RULE_11_3_JUSTIFICATION:This is
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13318                                      done for interfacing with FLS.FEE is passing
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13319                                      parameters to FLS APIs, casting is needed to
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13320                                      match with the Fls API prototype.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13321                                      (uint32 *)StateDataPtr->FeeReadWriteBuffer,
	lea	a4,[a12]908
.L4202:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13322                                      (Fls_17_Dmu_LengthType)
	mov	d5,#4
	mov	d4,d11
.L3144:
	call	Fls_17_Dmu_ReadWordsSync
.L3145:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13329    if(RetVal == E_OK)      (inlined)
	jne	d2,#0,.L13
.L4203:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13323                                      ((FEE_DFLASH_PAGE_SIZE * FEE_TWO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13324                                       / FEE_DFLASH_WORD_SIZE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13325  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13326    /* Check if DBER is found in the header */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13327    /* DBER is NOT found */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13328    /* [cover parentID={132A0549-6A7E-4e03-A4F4-2334153178ED}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13329    if(RetVal == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13330    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13331      /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13332       access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13333      BuffPtr = (uint32 *)StateDataPtr->FeeReadWriteBuffer;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13334      /* Check if the header is zero */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13335  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13336      if ((*BuffPtr == FEE_RESET) && ((BuffPtr[FEE_ONE]) == FEE_RESET) &&
	ld.w	d15,[a12]908
.L4204:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13336      if ((*BuffPtr == FEE_RESET) && ((BuffPtr[FEE_ONE]) == FEE_RESET) &&      (inlined)
	jne	d15,#0,.L14
.L4205:
	ld.w	d15,[a12]912
.L4206:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13336      if ((*BuffPtr == FEE_RESET) && ((BuffPtr[FEE_ONE]) == FEE_RESET) &&      (inlined)
	jne	d15,#0,.L15
.L4207:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13337          ((BuffPtr[FEE_TWO]) == FEE_RESET) && ((BuffPtr[FEE_THREE]) == FEE_RESET))
	ld.w	d15,[a12]916
.L4208:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13337          ((BuffPtr[FEE_TWO]) == FEE_RESET) && ((BuffPtr[FEE_THREE]) == FEE_RESET))      (inlined)
	jne	d15,#0,.L16
.L4209:
	ld.w	d0,[a12]920
.L4210:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13337          ((BuffPtr[FEE_TWO]) == FEE_RESET) && ((BuffPtr[FEE_THREE]) == FEE_RESET))      (inlined)
	jeq	d0,#0,.L17
.L16:
.L15:
.L14:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13338      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13339        /* Zero page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13340        /* Move to previous word line */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13341      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13342      /* Non-zero page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13343      /* [cover parentID={46088235-CF34-4932-991B-A3F1410D4A1B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13344      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13345      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13346        Fee_lUpdateNonZeroWLInfo(SectorInfoPtr, SrcAddr);
	mov.aa	a4,a15
.L3147:
	mov	d4,d11
.L3148:
	call	Fee_lUpdateNonZeroWLInfo
.L3146:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13347        /* Check if it is state page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13348        /* [cover parentID={830D2BF2-2C18-4cee-89A3-D75C87DD6368}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13349        if ( StateDataPtr->FeeReadWriteBuffer[FEE_STATE_PAGE_ID_POS] ==
	ld.bu	d0,[a12]908
.L4211:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13350             FEE_STATE_FIRST_PAGE_ID )
	mov	d15,#89
.L4212:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13349        if ( StateDataPtr->FeeReadWriteBuffer[FEE_STATE_PAGE_ID_POS] ==      (inlined)
	jne	d15,d0,.L18
.L1618:
	movh.a	a2,#@his(Fee_CfgPtr)
	ld.a	a2,[a2]@los(Fee_CfgPtr)
.L4213:
	ld.a	a13,[a2]
.L3149:
	ld.w	d4,[a13]2464
.L4214:
	lea	a4,[a13]908
.L4215:
	mov	d5,#30
	call	Fls_17_Dmu_ReadWordsSync
.L3151:
	ld.bu	d0,[a13]909
.L3153:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12943    if( (FlsRetVal == E_NOT_OK) ||      (inlined)
	jeq	d2,#1,.L22
.L4216:
	mov	d15,#209
.L4217:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12944        (!((State == FEE_VALID) || (State == FEE_ERASED))) )      (inlined)
	jeq	d15,d0,.L20
.L4218:
	mov	d15,#30
.L4219:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12944        (!((State == FEE_VALID) || (State == FEE_ERASED))) )      (inlined)
	jne	d15,d0,.L22
.L20:
	movh.a	a2,#@his(Fee_CfgPtr)
	ld.a	a2,[a2]@los(Fee_CfgPtr)
.L4220:
	ld.a	a2,[a2]
.L3155:
	mov	d2,#0
.L3152:
	lea	a4,[a2]908
.L3156:
	lea	a5,[a2]948
.L3157:
	ld.w	d0,[a4]
.L3154:
	insert	d0,d0,#0,#0,#8
.L4221:
	ld.w	d1,[a5]
.L4222:
	insert	d1,d1,#0,#0,#8
.L4223:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12783    if((*BufferPtr & FEE_STATE_WLCOUNT_MASK) != \       (inlined)
	jne	d0,d1,.L23
.L4224:
	mov	d0,d2
.L3158:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12794      for(Index = FEE_RESET; Index < (FEE_STATE_PAGE_HDR_PAGES -FEE_ONE); Index++)      (inlined)
	j	.L24
.L25:
	ld.w	d1,[+a4]4
.L4225:
	ld.w	d15,[+a5]4
.L4226:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12800        if(*BufferPtr != *BufferPtr2)      (inlined)
	jeq	d15,d1,.L26
.L4227:
	mov	d2,#2
.L4228:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12803          break; /* break */      (inlined)
	j	.L27

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12800        if(*BufferPtr != *BufferPtr2)      (inlined)
.L26:
	add	d0,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12794      for(Index = FEE_RESET; Index < (FEE_STATE_PAGE_HDR_PAGES -FEE_ONE); Index++)      (inlined)
.L24:
	jlt.u	d0,#9,.L25

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12809      if(ReturnVal != FEE_SP_INVALID)      (inlined)
.L27:
	jeq	d2,#2,.L28
.L4229:
	lea	a4,[a2]988
.L4230:
	mov	d0,#0
.L4231:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12822        for(Index = FEE_RESET; Index < Length; Index++)      (inlined)
	j	.L29
.L30:
	ld.w	d1,[a4]
.L4232:
	movh.a	a5,#@his(Fee_StateHalf)
	lea	a5,[a5]@los(Fee_StateHalf)
.L4233:
	addsc.a	a5,a5,d0,#2
	ld.w	d15,[a5]
.L4234:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12824          if(*BufferPtr != Fee_StateHalf[Index])      (inlined)
	jeq	d15,d1,.L31
.L4235:
	mov	d2,#2
.L4236:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12827            break; /* break */      (inlined)
	j	.L32

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12824          if(*BufferPtr != Fee_StateHalf[Index])      (inlined)
.L31:
	add.a	a4,#4
.L4237:
	add	d0,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12822        for(Index = FEE_RESET; Index < Length; Index++)      (inlined)
.L29:
	jlt.u	d0,#9,.L30

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12832      }      (inlined)
.L32:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12809      if(ReturnVal != FEE_SP_INVALID)      (inlined)
.L28:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12834      if(ReturnVal != FEE_SP_INVALID)      (inlined)
	jeq	d2,#2,.L33
.L4238:
	lea	a4,[a2]1024
.L3159:
	lea	a2,[a2]908
.L1651:
	mov	d0,#0
.L3160:
	mov	d15,d0
.L3161:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12890    for(Index = FEE_RESET; Index < Length; Index++)      (inlined)
	j	.L34
.L35:
	addsc.a	a5,a2,d15,#2
	ld.w	d1,[a5]
	crc32b.w	d0,d0,d1
.L4239:
	add	d15,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12890    for(Index = FEE_RESET; Index < Length; Index++)      (inlined)
.L34:
	jlt.u	d15,d8,.L35
.L1652:
	ld.w	d15,[a4]
.L1659:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12850        if( Data != *BufferPtr)      (inlined)
	jeq	d15,d0,.L36

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12788    else      (inlined)
.L23:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12948    else      (inlined)
.L22:
	mov	d2,#2

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12850        if( Data != *BufferPtr)      (inlined)
.L36:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12834      if(ReturnVal != FEE_SP_INVALID)      (inlined)
.L33:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12955    if(FEE_SP_INVALID != ReturnVal)      (inlined)
	jeq	d2,#2,.L37
.L1642:
	mov	d12,#0
.L3163:
	movh.a	a2,#@his(Fee_CfgPtr)
	ld.a	a2,[a2]@los(Fee_CfgPtr)
.L4240:
	ld.a	a13,[a2]
.L3150:
	lea	a14,[a13]1028
.L3164:
	ld.w	d15,[a13]2464
.L4241:
	add	d4,d15,#120
.L4242:
	mov	d5,#2
	mov.aa	a4,a14
.L3165:
	call	Fls_17_Dmu_ReadWordsSync
.L3162:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12706    if(FlsRetVal == E_NOT_OK)      (inlined)
	jeq	d2,#1,.L38
.L4243:
	ld.w	d0,[a14]
.L4244:
	ld.w	d1,[a13]1032
.L3167:
	ld.w	d15,[a14]
.L4245:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12720      if((Marker[0] == FEE_RESET) && (Marker[1] == FEE_RESET))      (inlined)
	jne	d15,#0,.L39
.L4246:
	mov	d15,d1
.L4247:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12720      if((Marker[0] == FEE_RESET) && (Marker[1] == FEE_RESET))      (inlined)
	jne	d15,#0,.L40
.L4248:
	mov	d12,#2
.L4249:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12722        ReturnVal = FEE_SP_INVALID;      (inlined)
	j	.L41

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12720      if((Marker[0] == FEE_RESET) && (Marker[1] == FEE_RESET))      (inlined)
.L40:
.L39:
	mov	d2,d0
.L3166:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12728        if ((Marker[0] != FEE_SP_MARKER_WORD_1) ||      (inlined)
	ld.w	d15,[a10]16
	jne	d15,d2,.L42
.L4250:
	mov.u	d15,#62965
	addih	d15,d15,#44975
.L4251:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12729            (Marker[1] != FEE_SP_MARKER_WORD_2))      (inlined)
	jeq	d15,d1,.L43

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12728        if ((Marker[0] != FEE_SP_MARKER_WORD_1) ||      (inlined)
.L42:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12710    else      (inlined)
.L38:
	mov	d12,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12728        if ((Marker[0] != FEE_SP_MARKER_WORD_1) ||      (inlined)
.L43:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12724      else      (inlined)
.L41:
	mov	d2,d12

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12955    if(FEE_SP_INVALID != ReturnVal)      (inlined)
.L37:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13355          if ( (RetVal == FEE_SP_CLEAN) || (RetVal == FEE_SP_DIRTY))      (inlined)
	jeq	d2,#0,.L44
.L4252:
	jne	d2,#1,.L45
.L44:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13351        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13352          /* [cover parentID={49E3092F-8499-4357-B57F-98E62AA601E6}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13353          RetVal = Fee_lEvaluateStatePage();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13354          /* [cover parentID={E0915EAC-178B-4af9-921E-64887A137EE2}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13355          if ( (RetVal == FEE_SP_CLEAN) || (RetVal == FEE_SP_DIRTY))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13356          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13357            /* State Count is at byte 4 of the buffer - move pointer by one word */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13358  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13359            StateCount2 = BuffPtr[FEE_ONE];
	ld.w	d15,[a12]912
.L3168:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13360            StateCount1 = SectorInfoPtr->StateCount;
	ld.w	d0,[a15]
.L3170:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13362            if (StateCount2 > StateCount1)      (inlined)
	jge.u	d0,d15,.L46
.L4253:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13361            /* [cover parentID={DFABC109-C94A-43cb-831F-F23291A9D2B2}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13362            if (StateCount2 > StateCount1)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13363            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13364              SectorInfoPtr->Status.Dirty = RetVal;
	ld.bu	d0,[a15]38
.L1619:
	insert	d0,d0,d2,#0,#1
.L1620:
	st.b	[a15]38,d0
.L4254:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13365              SectorInfoPtr->State =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13366                StateDataPtr->FeeReadWriteBuffer[FEE_STATE_PAGE_STATE_POS];
	ld.bu	d0,[a12]909
.L4255:
	st.b	[a15]37,d0
.L4256:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13367              SectorInfoPtr->UnerasableWLCount =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13368                (StateDataPtr->FeeReadWriteBuffer[FEE_STATE_PAGE_UERWL_POS] >>
	ld.bu	d0,[a12]911
.L4257:
	sha	d0,#-4
.L4258:
	st.b	[a15]36,d0
.L4259:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13369                 FEE_FOUR) & 0x0FU;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13370              SectorInfoPtr->StateCount = StateCount2;
	st.w	[a15],d15
.L4260:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13371              /* Unerasable WL Address is at byte 12 of the buffer -
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13372                 move pointer by three words */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13373  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13374              SectorInfoPtr->UnerasableWLAddr[FEE_ZERO] = BuffPtr[FEE_THREE];
	ld.w	d15,[a12]920
.L3169:
	st.w	[a15]4,d15
.L4261:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13375              SectorInfoPtr->UnerasableWLAddr[FEE_ONE]  = BuffPtr[FEE_FIVE];
	ld.w	d15,[a12]928
.L4262:
	st.w	[a15]8,d15
.L4263:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13376              SectorInfoPtr->StatePageAddr = SrcAddr;
	st.w	[a15]28,d11
.L4264:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13344      else      (inlined)
	j	.L47

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13329    if(RetVal == E_OK)      (inlined)
.L13:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13377              #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13378              /* QS Data offset stored in state page is extracted and stored, so that  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13379              QsOffset = BuffPtr[0];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13380              QsOffset = (QsOffset & FEE_QS_DATA_OFFSET_MASK);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13381              QsOffset = QsOffset >> FEE_QS_DATA_OFFSET_START;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13382              SectorInfoPtr->QsHardeningOffset = (uint16) QsOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13383              #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13384            }/* if(StateCount2 > StateCount1) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13385          }/* if ((RetVal == FEE_SP_CLEAN) || (RetVal == FEE_SP_DIRTY)) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13386        }/* if(StateDataPtr->FeeReadWriteBuffer[0] == FEE_STATE_FIRST_PAGE_ID)*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13387      }/* if( (*BuffPtr == FEE_ZERO) && (*(BuffPtr + 1U) == FEE_ZERO) ) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13388    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13389    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13390    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13391      Fee_lUpdateNonZeroWLInfo(SectorInfoPtr, SrcAddr);
	mov.aa	a4,a15
.L3171:
	mov	d4,d11
.L3172:
	call	Fee_lUpdateNonZeroWLInfo

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13389    else      (inlined)
.L47:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13362            if (StateCount2 > StateCount1)      (inlined)
.L46:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13355          if ( (RetVal == FEE_SP_CLEAN) || (RetVal == FEE_SP_DIRTY))      (inlined)
.L45:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13349        if ( StateDataPtr->FeeReadWriteBuffer[FEE_STATE_PAGE_ID_POS] ==      (inlined)
.L18:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13344      else      (inlined)
.L17:
	mov	d11,#0
.L3143:
	movh.a	a2,#@his(Fee_CfgPtr)
	ld.a	a2,[a2]@los(Fee_CfgPtr)
.L4265:
	ld.a	a2,[a2]
.L3173:
	ld.w	d12,[a15]24
.L3174:
	ld.bu	d13,[a15]37
.L3175:
	ld.bu	d14,[a15]36
.L3176:
	ld.w	d0,[a2]2464
.L4266:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12490    if ( StateDataPtr->FeeCurrSectSrcAddr == EndAddr )      (inlined)
	jne	d0,d9,.L48
.L4267:
	mov	d11,#1
.L4268:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12497      if (NonZeroWlCount == FEE_RESET)      (inlined)
	jne	d12,#0,.L49
.L4269:
	st.w	[a15]32,d9
.L4270:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12501        SectorInfoPtr->NextFreeWLAddr = EndAddr;      (inlined)
	j	.L50

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12497      if (NonZeroWlCount == FEE_RESET)      (inlined)
.L49:
	ld.w	d5,[a15]4
.L3177:
	ld.w	d0,[a15]8
.L3178:
	ld.bu	d1,[a15]36
.L3179:
	ld.w	d2,[a15]12
.L4271:
	st.w	[a10],d2
.L4272:
	ld.w	d15,[a15]16
.L4273:
	st.w	[a10]4,d15
.L4274:
	ld.w	d15,[a15]20
.L4275:
	st.w	[a10]8,d15
.L4276:
	ld.w	d3,[a15]28
.L3180:
	ld.bu	d4,[a15]37
.L3181:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12587    if(((NonZeroWlAddr[0] == UnerasableWlAddr1) &&      (inlined)
	jne	d2,d5,.L51
.L4277:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12588        (UnerasableWlCount != FEE_RESET)) ||      (inlined)
	jne	d1,#0,.L52

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12587    if(((NonZeroWlAddr[0] == UnerasableWlAddr1) &&      (inlined)
.L51:
	ld.w	d2,[a10]
.L4278:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12589        ((NonZeroWlAddr[0] == UnerasableWlAddr2) &&      (inlined)
	jne	d2,d0,.L53
.L4279:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12590         (UnerasableWlCount != FEE_RESET)))      (inlined)
	jeq	d1,#0,.L54

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12588        (UnerasableWlCount != FEE_RESET)) ||      (inlined)
.L52:
	mov	d15,#30
.L4280:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12593      if(SectorState == FEE_ERASED)      (inlined)
	jne	d15,d4,.L55
.L1685:
	insert	d15,d3,#0,#0,#9
.L1686:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12596        while (Fee_lIsUnerasableAddr(SectorInfoPtr->NextFreeWLAddr) == TRUE)      (inlined)
	j	.L56
.L57:
	ld.w	d15,[a15]32
.L1694:
	insert	d15,d15,#0,#0,#9

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12596        while (Fee_lIsUnerasableAddr(SectorInfoPtr->NextFreeWLAddr) == TRUE)      (inlined)
.L56:
	addi	d15,d15,#512
.L1695:
	st.w	[a15]32,d15
.L4281:
	mov	d4,d15
	call	Fee_lIsUnerasableAddr
.L4282:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12596        while (Fee_lIsUnerasableAddr(SectorInfoPtr->NextFreeWLAddr) == TRUE)      (inlined)
	jne	d2,#0,.L57
.L4283:
	j	.L58

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12593      if(SectorState == FEE_ERASED)      (inlined)
.L55:
	ld.w	d15,[a10]
.L4284:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12607        if(NonZeroWlAddr[0] == UnerasableWlAddr1)      (inlined)
	jne	d15,d5,.L59
.L4285:
	ld.w	d15,[a10]4
.L1696:
	insert	d15,d15,#0,#0,#9
.L1698:
	addi	d15,d15,#512
.L1697:
	st.w	[a15]32,d15
.L4286:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12610          if(SectorInfoPtr->NextFreeWLAddr == UnerasableWlAddr1)      (inlined)
	jne	d15,d5,.L60
.L1699:
	insert	d15,d5,#0,#0,#9
.L1700:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12610          if(SectorInfoPtr->NextFreeWLAddr == UnerasableWlAddr1)      (inlined)
	j	.L61

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12607        if(NonZeroWlAddr[0] == UnerasableWlAddr1)      (inlined)
.L59:
	ld.w	d15,[a10]4
.L4287:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12622          if(NonZeroWlAddr[1] == UnerasableWlAddr1)      (inlined)
	jne	d15,d5,.L66
.L4288:
	ld.w	d15,[a10]8
.L4289:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12626            while(Fee_lIsUnerasableAddr(SectorInfoPtr->NextFreeWLAddr) == TRUE)      (inlined)
	j	.L63
.L64:
	ld.w	d15,[a15]32

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12626            while(Fee_lIsUnerasableAddr(SectorInfoPtr->NextFreeWLAddr) == TRUE)      (inlined)
.L63:
	insert	d15,d15,#0,#0,#9
.L1702:
	addi	d15,d15,#512
.L1701:
	st.w	[a15]32,d15
.L4290:
	mov	d4,d15
	call	Fee_lIsUnerasableAddr
.L4291:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12626            while(Fee_lIsUnerasableAddr(SectorInfoPtr->NextFreeWLAddr) == TRUE)      (inlined)
	jne	d2,#0,.L64
.L4292:
	j	.L65

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12636            while(Fee_lIsUnerasableAddr(SectorInfoPtr->NextFreeWLAddr) == TRUE)      (inlined)
.L67:
	ld.w	d15,[a15]32

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12636            while(Fee_lIsUnerasableAddr(SectorInfoPtr->NextFreeWLAddr) == TRUE)      (inlined)
.L66:
	insert	d15,d15,#0,#0,#9
.L1704:
	addi	d15,d15,#512
.L1703:
	st.w	[a15]32,d15
.L4293:
	mov	d4,d15
	call	Fee_lIsUnerasableAddr
.L4294:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12636            while(Fee_lIsUnerasableAddr(SectorInfoPtr->NextFreeWLAddr) == TRUE)      (inlined)
	jne	d2,#0,.L67
.L4295:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12602      else      (inlined)
	j	.L68

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12587    if(((NonZeroWlAddr[0] == UnerasableWlAddr1) &&      (inlined)
.L54:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12590         (UnerasableWlCount != FEE_RESET)))      (inlined)
.L53:
	ld.w	d15,[a10]
.L1705:
	insert	d15,d15,#0,#0,#9

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12619        else      (inlined)
.L61:
	addi	d15,d15,#512
.L1706:
	st.w	[a15]32,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12646    else      (inlined)
.L68:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12632          else      (inlined)
.L65:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12610          if(SectorInfoPtr->NextFreeWLAddr == UnerasableWlAddr1)      (inlined)
.L60:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12602      else      (inlined)
.L58:
	ld.w	d15,[a15]32
.L4296:
	movh	d0,#8
.L4297:
	add	d0,d9
.L4298:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12507        if((SectorInfoPtr->NextFreeWLAddr) < (EndAddr + FEE_DFLASH_SECTOR_SIZE))      (inlined)
	jge.u	d15,d0,.L69
.L1708:
	movh.a	a2,#@his(Fee_CfgPtr)
	ld.a	a2,[a2]@los(Fee_CfgPtr)
.L4299:
	ld.a	a2,[a2]
.L3182:
	lea	a12,[a2]908
.L3140:
	mov	d5,#128
.L3184:
	ld.w	d4,[a15]32
.L4300:
	mov.aa	a4,a12
.L3185:
	call	Fls_17_Dmu_ReadWordsSync
.L3183:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11722    if(ReturnValueFls == E_NOT_OK)      (inlined)
	jeq	d2,#1,.L70
.L4301:
	mov	d0,#0
.L3186:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11732      while((index < Length) && (*SrcPtr == (uint32)FEE_RESET))      (inlined)
	j	.L71
.L72:
	add.a	a12,#4
.L4302:
	add	d0,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11732      while((index < Length) && (*SrcPtr == (uint32)FEE_RESET))      (inlined)
.L71:
	mov	d15,#128
.L3187:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11732      while((index < Length) && (*SrcPtr == (uint32)FEE_RESET))      (inlined)
	jge.u	d0,d15,.L73
.L4303:
	ld.w	d15,[a12]
.L3188:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11732      while((index < Length) && (*SrcPtr == (uint32)FEE_RESET))      (inlined)
	jeq	d15,#0,.L72
.L73:
	mov	d15,#128
.L3189:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11739      if(index < Length)      (inlined)
	jge.u	d0,d15,.L74

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11728    else      (inlined)
.L70:
	ld.w	d15,[a15]32
.L1717:
	insert	d15,d15,#0,#0,#9
.L1719:
	addi	d15,d15,#512
.L1718:
	st.w	[a15]32,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11739      if(index < Length)      (inlined)
.L74:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12507        if((SectorInfoPtr->NextFreeWLAddr) < (EndAddr + FEE_DFLASH_SECTOR_SIZE))      (inlined)
.L69:
	mov	d15,#30
.L4304:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12515        if (SectorState == FEE_ERASED)      (inlined)
	jne	d15,d13,.L75
.L4305:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12517          if(((UnerasableWlCount == FEE_RESET) && (NonZeroWlCount == FEE_ONE)) ||      (inlined)
	jne	d14,#0,.L76
.L4306:
	jeq	d12,#1,.L77
.L76:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12518              ((UnerasableWlCount == FEE_ONE) && (NonZeroWlCount == FEE_TWO)) ||      (inlined)
	jne	d14,#1,.L78
.L4307:
	jeq	d12,#2,.L79
.L78:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12519              ((UnerasableWlCount == FEE_TWO) && (NonZeroWlCount == FEE_THREE)))      (inlined)
	jne	d14,#2,.L80
.L4308:
	jne	d12,#3,.L81

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12518              ((UnerasableWlCount == FEE_ONE) && (NonZeroWlCount == FEE_TWO)) ||      (inlined)
.L79:
.L77:
	ld.bu	d15,[a15]38
.L4309:
	insert	d15,d15,#0,#1,#1
	st.b	[a15]38,d15
.L4310:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12522            SectorInfoPtr->Status.Used = FEE_RESET ;      (inlined)
	j	.L82

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12517          if(((UnerasableWlCount == FEE_RESET) && (NonZeroWlCount == FEE_ONE)) ||      (inlined)
.L81:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12519              ((UnerasableWlCount == FEE_TWO) && (NonZeroWlCount == FEE_THREE)))      (inlined)
.L80:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12515        if (SectorState == FEE_ERASED)      (inlined)
.L75:
	ld.bu	d15,[a15]38
.L4311:
	or	d15,#2
	st.b	[a15]38,d15
.L4312:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12503      else      (inlined)
	j	.L83

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12490    if ( StateDataPtr->FeeCurrSectSrcAddr == EndAddr )      (inlined)
.L48:
	ld.w	d15,[a2]2464
.L4313:
	addi	d15,d15,#-512
	st.w	[a2]2464,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12535    else      (inlined)
.L83:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12524          else      (inlined)
.L82:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12503      else      (inlined)
.L50:
	jeq	d11,#0,.L12
.L1605:
	ld.w	d15,[a10]20
.L3190:
	add	d15,#1
	st.w	[a10]20,d15
.L10:
	ld.w	d15,[a10]20
.L3191:
	jlt.u	d15,#2,.L11
.L1721:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4314:
	ld.a	a15,[a15]
.L3193:
	ld.bu	d0,[a15]37
.L3195:
	ld.bu	d1,[a15]77
.L3197:
	ld.bu	d15,[a15]38
.L3192:
	extr.u	d15,d15,#1,#1
.L3199:
	ld.bu	d2,[a15]78
	extr.u	d2,d2,#1,#1
.L1732:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4182    if((state == FEE_STATELESS) && (used == FEE_RESET))      (inlined)
	jne	d0,#0,.L84
.L4315:
	jne	d15,#0,.L85
.L4316:
	mov	d3,#1
.L3202:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4184      RetVal = (boolean)TRUE;      (inlined)
	j	.L86

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4182    if((state == FEE_STATELESS) && (used == FEE_RESET))      (inlined)
.L85:
.L84:
	mov	d3,#0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4186    else      (inlined)
.L86:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4182    if((state == FEE_STATELESS) && (used == FEE_RESET))      (inlined)
	jne	d1,#0,.L87
.L4317:
	jne	d2,#0,.L88
.L4318:
	mov	d2,#1
.L3201:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4184      RetVal = (boolean)TRUE;      (inlined)
	j	.L89

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4182    if((state == FEE_STATELESS) && (used == FEE_RESET))      (inlined)
.L88:
.L87:
	mov	d2,#0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4186    else      (inlined)
.L89:
	mov	d15,#209
.L3200:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13180    if ( (S0State == FEE_VALID) && (S1State == FEE_ERASED) )      (inlined)
	jne	d15,d0,.L90
.L4319:
	mov	d15,#30
.L4320:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13180    if ( (S0State == FEE_VALID) && (S1State == FEE_ERASED) )      (inlined)
	jne	d15,d1,.L91
.L4321:
	mov	d15,#1
.L3205:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13182      RetVal = FEE_S0_VALID;      (inlined)
	j	.L92

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13180    if ( (S0State == FEE_VALID) && (S1State == FEE_ERASED) )      (inlined)
.L91:
.L90:
	mov	d15,#30
.L4322:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13185    else if ( (S0State == FEE_ERASED) && (S1State == FEE_VALID) )      (inlined)
	jne	d15,d0,.L93
.L4323:
	mov	d15,#209
.L4324:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13185    else if ( (S0State == FEE_ERASED) && (S1State == FEE_VALID) )      (inlined)
	jne	d15,d1,.L94
.L4325:
	mov	d15,#2
.L3206:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13187      RetVal = FEE_S1_VALID;      (inlined)
	j	.L95

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13185    else if ( (S0State == FEE_ERASED) && (S1State == FEE_VALID) )      (inlined)
.L94:
.L93:
	mov	d15,#209
.L4326:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13190    else if ( (S0State == FEE_VALID) && (S1State == FEE_VALID) )      (inlined)
	jne	d15,d0,.L96
.L4327:
	jeq	d15,d1,.L97
.L96:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13197    else if ( (S0State == FEE_VALID) && (S1State == FEE_STATELESS) )      (inlined)
	jne	d15,d0,.L98
.L4328:
	jeq	d1,#0,.L99
.L98:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13204    else if ( (S0State == FEE_STATELESS) && (S1State == FEE_VALID) )      (inlined)
	jne	d0,#0,.L100
.L4329:
	jne	d15,d1,.L101
.L99:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13197    else if ( (S0State == FEE_VALID) && (S1State == FEE_STATELESS) )      (inlined)
.L97:
	mov	d15,#3
.L3207:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13208      RetVal = FEE_S0_S1_VALID;      (inlined)
	j	.L102

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13204    else if ( (S0State == FEE_STATELESS) && (S1State == FEE_VALID) )      (inlined)
.L101:
.L100:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13211    else if ((S0Empty == (boolean)TRUE) && (S1Empty == (boolean)TRUE))      (inlined)
	jeq	d3,#0,.L103
.L1739:
	jeq	d2,#0,.L104
.L1742:
	mov	d15,#0
.L3208:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13213      RetVal = FEE_S0_S1_EMPTY;      (inlined)
	j	.L105

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13211    else if ((S0Empty == (boolean)TRUE) && (S1Empty == (boolean)TRUE))      (inlined)
.L104:
.L103:
	mov	d15,#4

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13216    else      (inlined)
.L105:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13211    else if ((S0Empty == (boolean)TRUE) && (S1Empty == (boolean)TRUE))      (inlined)
.L102:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13190    else if ( (S0State == FEE_VALID) && (S1State == FEE_VALID) )      (inlined)
.L95:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13185    else if ( (S0State == FEE_ERASED) && (S1State == FEE_VALID) )      (inlined)
.L92:
	mov	d0,#0
.L3196:
	ld.a	a15,[a10]12
.L3194:
	st.b	[a15]2536,d0
.L4330:
	st.b	[a15]2537,d0
.L1745:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3210:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4331:
	ld.a	a15,[a15]
.L3211:
	mov	d1,#3
.L3198:
	st.b	[a15]2518,d1
.L4332:
	ld.w	d2,[a15]
.L3204:
	ld.w	d3,[a15]40
.L3203:
	ld.bu	d4,[a15]38
	extr.u	d5,d4,#1,#1
.L3213:
	ld.bu	d6,[a15]78
	extr.u	d7,d6,#1,#1
.L3214:
	and	d8,d4,#1
.L3134:
	and	d6,d6,#1
.L3215:
	max.u	d4,d2,d3
.L4333:
	st.w	[a15]904,d4
.L3216:
	jeq	d15,d0,.L106
.L3217:
	jeq	d15,#1,.L107
.L4334:
	jeq	d15,#2,.L108
.L4335:
	jeq	d15,d1,.L109
.L4336:
	jeq	d15,#4,.L110
.L4337:
	j	.L111

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13040      case FEE_S0_S1_EMPTY:      (inlined)
.L106:
	mov	d15,#7
.L3209:
	st.b	[a15]2518,d15
.L4338:
	mov	d15,#2
.L4339:
	st.b	[a15]2519,d15
.L4340:
	ld.w	d15,[a15]32
.L4341:
	st.w	[a15]2464,d15
.L3218:
	mov	d8,d0
.L3219:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13050        break;      (inlined)
	j	.L112

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13054      case FEE_S0_VALID:      (inlined)
.L107:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13058        if(S1Used == FEE_SET )      (inlined)
	jeq	d7,#0,.L113
.L4342:
	mov	d15,#213
.L3220:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13060          StateDataPtr->FeeGcResumeState = FEE_INITGC_DATA_COPY_S0_S1;      (inlined)
	j	.L114

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13058        if(S1Used == FEE_SET )      (inlined)
.L113:
	mov	d15,#209
.L3221:
	st.b	[a15]2516,d15
.L4343:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13068        break;      (inlined)
	j	.L115

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13072      case FEE_S1_VALID:      (inlined)
.L108:
	ld.bu	d15,[a15]2512
.L3222:
	or	d15,#4
	st.b	[a15]2512,d15
.L4344:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13078        if(S0Used == FEE_SET )      (inlined)
	jeq	d5,#0,.L116
.L4345:
	mov	d15,#93
.L4346:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13081          StateDataPtr->FeeGcResumeState = FEE_INITGC_DATA_COPY_S1_S0;      (inlined)
	j	.L117

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13078        if(S0Used == FEE_SET )      (inlined)
.L116:
	mov	d15,#29
.L4347:
	st.b	[a15]2516,d15
.L4348:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13089        break;      (inlined)
	j	.L118

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13093      case FEE_S0_S1_VALID:      (inlined)
.L109:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13096        if (S0StateCnt > S1StateCnt)      (inlined)
	jge.u	d3,d2,.L119
.L4349:
	mov	d15,#223

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13063        else      (inlined)
.L114:
	st.b	[a15]2516,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13127    if ( (S0Dirty != FEE_RESET) || (S1Dirty != FEE_RESET) )      (inlined)
.L112:
	mov	d6,d0
.L3223:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13099          StateDataPtr->FeeGcResumeState = FEE_INITGC_ERASE_S1;      (inlined)
	j	.L120

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13096        if (S0StateCnt > S1StateCnt)      (inlined)
.L119:
	ld.bu	d15,[a15]2512
.L3224:
	or	d15,#4
	st.b	[a15]2512,d15
.L4350:
	mov	d15,#253

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13084        else      (inlined)
.L117:
	st.b	[a15]2516,d15
.L3225:
	mov	d8,d0
.L3226:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13110        break;      (inlined)
	j	.L121

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13112      case FEE_S0_S1_INVALID:      (inlined)
.L110:
	mov	d8,d0
.L3228:
	mov	d6,d8
.L4351:
	mov	d15,#1
.L3227:
	st.b	[a15]2518,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13127    if ( (S0Dirty != FEE_RESET) || (S1Dirty != FEE_RESET) )      (inlined)
.L121:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13102        else      (inlined)
.L120:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13127    if ( (S0Dirty != FEE_RESET) || (S1Dirty != FEE_RESET) )      (inlined)
.L118:
.L115:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13120      default:      (inlined)
.L111:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13127    if ( (S0Dirty != FEE_RESET) || (S1Dirty != FEE_RESET) )      (inlined)
	jne	d8,#0,.L122
.L4352:
	jeq	d6,#0,.L123
.L122:
	mov	d15,#2
.L4353:
	st.b	[a15]2518,d15
.L4354:
	st.b	[a15]2521,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13127    if ( (S0Dirty != FEE_RESET) || (S1Dirty != FEE_RESET) )      (inlined)
.L123:
	ld.bu	d15,[a15]38
.L4355:
	insert	d15,d15,d8,#0,#1
	st.b	[a15]38,d15
.L4356:
	ld.bu	d15,[a15]78
.L4357:
	insert	d15,d15,d6,#0,#1
	st.b	[a15]78,d15
.L1746:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3212:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4358:
	ld.bu	d15,[a15]22
.L4359:
	jnz.t	d15:1,.L124
.L4360:
	ld.a	a15,[a10]12
.L3229:
	ld.bu	d15,[a15]2512
.L4361:
	or	d15,#2
	st.b	[a15]2512,d15
.L124:
	mov	d0,#2540
.L3230:
	mov	d1,#0
.L3231:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4362:
	ld.a	a15,[a15]
.L3232:
	mov	d15,d1
.L3233:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2649    for(Index = FEE_RESET; Index < FeeDataStructSize; Index++)      (inlined)
	j	.L125
.L126:
	addsc.a	a2,a15,d15,#0
	ld.bu	d2,[a2]
	crc32.b	d1,d1,d2
.L4363:
	add	d15,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2649    for(Index = FEE_RESET; Index < FeeDataStructSize; Index++)      (inlined)
.L125:
	jlt.u	d15,d0,.L126
.L1760:
	movh.a	a15,#@his(Fee_DataStrcutInitCrc)
.L1763:
	st.w	[a15]@los(Fee_DataStrcutInitCrc),d1
.L4:
.L3:
.L2:
	ret
.L1576:
	
__Fee_Init_function_end:
	.size	Fee_Init,__Fee_Init_function_end-Fee_Init
.L1226:
	; End of function
	
	.sdecl	'.text.Fee_SetMode.Code.Cpu0',code,cluster('Fee_SetMode')
	.sect	'.text.Fee_SetMode.Code.Cpu0'
	.align	2
	
	.global	Fee_SetMode
; Function Fee_SetMode
.L1076:
Fee_SetMode:	.type	func
	mov	d8,d4
.L3235:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.w	d15,[a15]@los(Fee_CfgPtr)
.L4368:
	jeq	d15,#0,.L127
.L4369:
	call	Fee_lGetStatus
.L3234:
	jeq	d2,#0,.L128
.L4370:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4371:
	ld.a	a15,[a15]
.L3236:
	jne	d2,#3,.L129
.L4372:
	mov	d15,#1
.L4373:
	st.b	[a15]2538,d15
.L4374:
	st.b	[a15]2539,d8
.L128:
.L127:
	ret
.L129:
	jne	d2,#1,.L131
.L4375:
	mov	d4,d8
.L3237:
	j	Fls_17_Dmu_SetMode
.L131:
	mov	d4,#1
.L4376:
	mov	d5,#6
.L4377:
	mov	d6,#2
	j	Fee_lReportError
.L1768:
	
__Fee_SetMode_function_end:
	.size	Fee_SetMode,__Fee_SetMode_function_end-Fee_SetMode
.L1231:
	; End of function
	
	.sdecl	'.text.Fee_Read.Code.Cpu0',code,cluster('Fee_Read')
	.sect	'.text.Fee_Read.Code.Cpu0'
	.align	2
	
	.global	Fee_Read
; Function Fee_Read
.L1078:
Fee_Read:	.type	func
	mov	e8,d5,d4
	mov.aa	a15,a4
.L3239:
	mov	d10,d6
.L3240:
	movh.a	a2,#@his(Fee_CfgPtr)
	ld.w	d15,[a2]@los(Fee_CfgPtr)
.L4404:
	jeq	d15,#0,.L133
.L4405:
	call	Fee_lGetStatus
.L3238:
	jeq	d2,#0,.L134
.L4406:
	mov	d7,#0
.L3241:
	mov	e4,d9,d8
.L3242:
	mov.aa	a4,a15
.L3243:
	mov	d6,d10
.L3244:
	j	Fee_lRegisterNvmRead
.L134:
.L133:
	mov	d2,#1
.L3245:
	ret
.L1792:
	
__Fee_Read_function_end:
	.size	Fee_Read,__Fee_Read_function_end-Fee_Read
.L1241:
	; End of function
	
	.sdecl	'.text.Fee_Write.Code.Cpu0',code,cluster('Fee_Write')
	.sect	'.text.Fee_Write.Code.Cpu0'
	.align	2
	
	.global	Fee_Write
; Function Fee_Write
.L1080:
Fee_Write:	.type	func
	mov	d8,d4
.L3247:
	mov.aa	a12,a4
.L3248:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.w	d15,[a15]@los(Fee_CfgPtr)
.L4411:
	jeq	d15,#0,.L137
.L4412:
	call	Fee_lGetStatus
.L3246:
	jeq	d2,#0,.L138
.L4413:
	mov	d4,d8
.L3249:
	call	Fee_lGetUsrBlockIndex
.L3250:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4414:
	ld.a	a15,[a15]4
.L4415:
	addsc.a	a5,a15,d2,#3
.L3251:
	mov.aa	a4,a12
.L3252:
	j	Fee_lRegisterNvmWrite
.L138:
.L137:
	mov	d2,#1
.L3253:
	ret
.L1802:
	
__Fee_Write_function_end:
	.size	Fee_Write,__Fee_Write_function_end-Fee_Write
.L1246:
	; End of function
	
	.sdecl	'.text.Fee_Cancel.Code.Cpu0',code,cluster('Fee_Cancel')
	.sect	'.text.Fee_Cancel.Code.Cpu0'
	.align	2
	
	.global	Fee_Cancel
; Function Fee_Cancel
.L1082:
Fee_Cancel:	.type	func
	mov	d8,#0
.L1816:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13392    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13393  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13394    /* [cover parentID={88E32981-A6F4-45e0-BE7D-7593C539A43D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13395    ReturnVal = Fee_lCheckPrevWordline(SectorInfoPtr, EndAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13396  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13397    return(ReturnVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13398  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13399  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13400  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13401  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13402  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13403  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13404  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13405  ** Syntax : static boolean Fee_lIsUnerasableAddr(const uint32 Addr)           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13406  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13407  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13408  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13409  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13410  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13411  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13412  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13413  ** Parameters (in) :Address                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13414  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13415  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13416  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13417  ** Return value    :  TRUE: if Address is part of unerasable WL               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13418  **                    FALSE:if Address is not part of unerasable WL           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13419  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13420  ** Description : This utility function checks if the Address is part of       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13421  ** unerasable Word line                                                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13422  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13423  /* [cover parentID={38625665-C299-405c-8245-9981344A0772}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13424  Fee_lIsUnerasableAddr
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13425  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13426  /* [cover parentID={6EAF7AF1-A9CD-4af0-99A8-8802C7B55EBF}]cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13427  static boolean Fee_lIsUnerasableAddr(const uint32 Addr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13428  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13429    const Fee_StateDataType *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13430    boolean            RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13431    uint8              UnErCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13432    uint32             NewAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13433    uint8              BankNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13434  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13435    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13436  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13437    /* Get the FEE sector index */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13438    if(Addr >= FEE_DFLASH_BANK1_BASE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13439    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13440      BankNumber = FEE_SECTOR1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13441    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13442    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13443    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13444      BankNumber = FEE_SECTOR0;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13445    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13446  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13447    UnErCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13448  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13449    RetVal = (boolean)FALSE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13450  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13451    /* Get word line beginning address of the address to be checked */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13452  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13453    NewAddr = (uint32)(Fee_lGetWLBeginning(Addr));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13454  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13455    /* Loop through to check whether Address is uneraseble */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13456    /* [cover parentID={DB1AFB35-9D90-4cff-B99F-4F883D7CC961}]cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13457    while((UnErCount != StateDataPtr->FeeSectorInfo[BankNumber].UnerasableWLCount)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13458          && (RetVal == FALSE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13459    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13460      /* [cover parentID={E784AF92-085C-491e-89CA-4DFBCF82E405}]cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13461      if(NewAddr ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13462          StateDataPtr->FeeSectorInfo[BankNumber].UnerasableWLAddr[UnErCount])
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13463      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13464        RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13465      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13466      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13467      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13468        UnErCount++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13469      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13470    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13471    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13472  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13473  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13474  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13475  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13476  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13477  ** Syntax : static void Fee_lPrepareStatePageBuffer(const uint8 Bank,         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13478  **                                                  const uint8 SectorState)  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13479  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13480  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13481  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13482  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13483  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13484  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13485  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13486  ** Parameters (in) :  Bank: Sector Number                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13487  **                    SectorState: Erased / Valid                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13488  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13489  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13490  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13491  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13492  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13493  ** Description : This routine will update the write buffer for state page     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13494  ** programming of a sector                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13495  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13496  /* [cover parentID={9E1839E0-2F3B-4038-B42B-DEF7C312D59B}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13497  Fee_lPrepareStatePageBuffer
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13498  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13499  /* [cover parentID={A73F92D8-FC32-4351-8FCC-DBEDDD3663DD}] [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13500  static void Fee_lPrepareStatePageBuffer(const uint8 Bank,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13501                                          const uint8 SectorState)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13502  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13503    uint32              StateCnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13504    uint32              WordlineAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13505    uint32              WordlineAddr2;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13506    uint32              Index;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13507    uint32              Length;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13508    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13509    uint8              *ArrPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13510    uint8               WordlineCnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13511    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13512    uint8              QsHardenOffsetLSB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13513    uint8              QsHardenOffsetMSB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13514    uint16             QsHardenOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13515    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13516  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13517    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13518  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13519    Fee_lClearFeeGcReadWriteBuffer();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13520    ArrPtr = StateDataPtr->FeeGcReadWriteBuffer;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13521  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13522    /* Get the State count */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13523    StateCnt = StateDataPtr->FeeStateCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13524    StateCnt = StateCnt + FEE_ONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13525  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13526    /* Get the UnerasableWL count */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13527    WordlineCnt = StateDataPtr->FeeSectorInfo[Bank].UnerasableWLCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13528    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13529    QsHardenOffset = (uint16)(StateDataPtr->FeeQsHardeningOffset);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13530    QsHardenOffsetLSB = (uint8)QsHardenOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13531    QsHardenOffsetMSB = (uint8)(QsHardenOffset >> 8);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13532    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13533    /* Get the UnerasableWL Address */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13534    WordlineAddr = StateDataPtr->FeeSectorInfo[Bank].UnerasableWLAddr[0];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13535    WordlineAddr2 = StateDataPtr->FeeSectorInfo[Bank].UnerasableWLAddr[1];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13536  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13537    /* Update the page id of the 1st page of state page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13538  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13539    *ArrPtr = FEE_STATE_FIRST_PAGE_ID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13540    ArrPtr[FEE_STATE_PAGE_STATE_POS] = SectorState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13541    ArrPtr[FEE_STATE_PAGE_STATE_POS + FEE_STATE_FIRSTFIVE_COPY_OFFSET] =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13542      SectorState;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13543    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13544  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13545    ArrPtr[FEE_STATE_PAGE_QS_OFFSET_LSB] = QsHardenOffsetLSB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13546    ArrPtr[FEE_STATE_PAGE_QS_OFFSET_MSB] =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13547      (((WordlineCnt << 4) & 0xF0U) + ((QsHardenOffsetMSB) & 0x0FU));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13548    ArrPtr[FEE_STATE_PAGE_QS_OFFSET_LSB + FEE_STATE_FIRSTFIVE_COPY_OFFSET] =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13549      QsHardenOffsetLSB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13550    ArrPtr[FEE_STATE_PAGE_QS_OFFSET_MSB + FEE_STATE_FIRSTFIVE_COPY_OFFSET] =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13551      (((WordlineCnt << 4) & 0xF0U) + ((QsHardenOffsetMSB) & 0x0FU));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13552    #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13553  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13554    ArrPtr[FEE_STATE_PAGE_UERWL_POS] = ((WordlineCnt << 4) & 0xF0U );
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13555  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13556    ArrPtr[FEE_STATE_PAGE_UERWL_POS + FEE_STATE_FIRSTFIVE_COPY_OFFSET] =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13557      ((WordlineCnt << 4) & 0xF0U);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13558    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13559    /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13560    access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13561    /*MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic other than array
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13562    indexing used for FEE application buffers.Pointers are accessing the correct
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13563     memory range locations.The access range is within the boundaries of the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13564     buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13565    *((uint32 *)(ArrPtr + FEE_STATE_PAGE_STATE_CNT_POS)) = StateCnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13566    /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13567    access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13568    /*MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic other than array
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13569    indexing used for FEE application buffers.Pointers are accessing the correct
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13570    memory range locations.The access range is within the boundaries of the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13571    buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13572    *((uint32 *)\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13573    (ArrPtr + FEE_STATE_PAGE_STATE_CNT_POS + FEE_STATE_FIRSTFIVE_COPY_OFFSET)) \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13574      = StateCnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13575  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13576  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13577    if(WordlineCnt > FEE_ZERO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13578    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13579  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13580      /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13581       access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13582      /*MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13583            array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13584            Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13585            The access range is within the boundaries of the buffer. 4 byte
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13586            aligned FEE_STATE_PAGE_UERWL1_ADDRS_POS is 12*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13587      *((uint32 *)(ArrPtr + FEE_STATE_PAGE_UERWL1_ADDRS_POS)) = WordlineAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13588      /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13589       access and array is memory aligned. 4 byte aligned **/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13590      /*MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13591            array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13592            Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13593            The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13594      *((uint32 *)(ArrPtr + FEE_STATE_PAGE_UERWL2_ADDRS_POS)) = WordlineAddr2;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13595      /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13596       access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13597      /*MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13598            array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13599            Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13600            The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13601      *((uint32 *)(ArrPtr + FEE_STATE_PAGE_UERWL1_ADDRS_POS + \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13602                   /*MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13603                   array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13604                   Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13605                    The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13606                   FEE_STATE_FIRSTFIVE_COPY_OFFSET)) = WordlineAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13607      /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13608       access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13609      /*MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13610            array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13611            Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13612            The access range is within the boundaries of the buffer. 4 byte aligned
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13613            FEE_STATE_PAGE_UERWL2_ADDRS_POS is 20*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13614      *((uint32 *)(ArrPtr + FEE_STATE_PAGE_UERWL2_ADDRS_POS + \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13615                   /*MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13616                         array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13617                         Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13618                         The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13619                   FEE_STATE_FIRSTFIVE_COPY_OFFSET)) = WordlineAddr2;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13620    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13621    /*MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13622          array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13623          Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13624          The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13625    ArrPtr = StateDataPtr->FeeGcReadWriteBuffer + FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13626  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13627    for(Index = FEE_ONE; Index < (FEE_STATE_PAGE_HDR_PAGES); Index++)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13628    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13629      *ArrPtr = FEE_STATE_NEXT_PAGE_ID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13630      /*MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13631            array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13632            Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13633            The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13634      ArrPtr += FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13635    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13636  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13637    ArrPtr = &(StateDataPtr->FeeGcReadWriteBuffer[FEE_STATE_ALLONES_OFFSET]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13638    /* get the length excluding crc from All 1's field */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13639  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13640    Length = sizeof(Fee_StateHalf) / sizeof(Fee_StateHalf[0]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13641  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13642    /* Write second half state page */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13643    for(Index = FEE_RESET; Index < Length; Index++)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13644    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13645      /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13646       access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13647      *(uint32 *)(ArrPtr) = Fee_StateHalf[Index];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13648      /*MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13649      array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13650       Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13651       The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13652      ArrPtr += FEE_DFLASH_WORD_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13653    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13654  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13655    /* prepare the CRC field */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13656  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13657    ArrPtr = &(StateDataPtr->FeeGcReadWriteBuffer[FEE_STATE_CRC_OFFSET]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13658    /* Length will give the number of pages to Generate CRC */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13659    Length = FEE_STATE_CRC_OFFSET / FEE_DFLASH_WORD_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13660    /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13661    access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13662    *(uint32 *)(ArrPtr) =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13663      Fee_lEvaluateStatePageCrc(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13664    /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13665    access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13666        (uint32 *)StateDataPtr->FeeGcReadWriteBuffer, Length);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13667  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13668    StateDataPtr->FeeStateCount = StateCnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13669  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13670  }/* End of Fee_lPrepareStatePageBuffer */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13671  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13672  ** Syntax : static void Fee_lPrepareMarkerBuffer(void)                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13673  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13674  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13675  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13676  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13677  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13678  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13679  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13680  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13681  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13682  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13683  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13684  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13685  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13686  ** Description : This utility function prepares the Write buffer array for    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13687  **  marker programming of the state page                                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13688  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13689  /* [cover parentID={46730273-C0EE-4a50-8C56-4F2718C6952A}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13690  Fee_lPrepareMarkerBuffer
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13691  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13692  /* [cover parentID={1EEEFFDC-C315-47db-B4EB-6A3AD37BD4E5}] [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13693  static void Fee_lPrepareMarkerBuffer(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13694  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13695    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13696    uint8              *BufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13697  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13698    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13699  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13700    BufferPtr = &(StateDataPtr->FeeGcReadWriteBuffer[FEE_STATEPAGE_DATA_SIZE]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13701    /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13702    access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13703    *((uint32*)(BufferPtr)) = FEE_SP_MARKER_WORD_1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13704    /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13705    access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13706    *((uint32*)(&(BufferPtr[4U]))) = FEE_SP_MARKER_WORD_2;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13707  }/* End of Fee_lPrepareMarkerBuffer */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13708  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13709  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13710  ** Syntax : static void Fee_lClearMarkerBuffer(void)                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13711  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13712  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13713  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13714  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13715  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13716  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13717  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13718  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13719  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13720  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13721  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13722  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13723  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13724  ** Description : This utility function clears the marker field of             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13725  **  write buffer for comparison                                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13726  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13727  /* [cover parentID={4D4C0096-3E6A-47da-842A-374FA1C36587}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13728  static void Fee_lClearMarkerBuffer(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13729  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13730    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13731    uint8              *BufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13732    /* [cover parentID={F7D4168B-693E-463b-8CFD-F6527CD417FA}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13733    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13734    BufferPtr = &(StateDataPtr->FeeGcReadWriteBuffer[FEE_STATEPAGE_DATA_SIZE]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13735    /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13736    access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13737    *((uint32*)(BufferPtr)) = (uint32)FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13738    /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13739    access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13740    *((uint32*)(&(BufferPtr[4U]))) = (uint32)FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13741  }/* End of Fee_lClearMarkerBuffer */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13742  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13743  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13744  ** Syntax : static void Fee_lClearFeeReadWriteBuffer(void)                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13745  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13746  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13747  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13748  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13749  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13750  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13751  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13752  ** Parameters (in-out) :None                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13753  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13754  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13755  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13756  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13757  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13758  ** Description : This utility function clears the user read write buffer      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13759  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13760  /*[cover parentID={77BD326B-E54A-46ff-BF3B-E0185DD7372B}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13761  static void Fee_lClearFeeReadWriteBuffer(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13762  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13763    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13764    uint32*             ReadWriteBuffPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13765    uint16              DataByteCnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13766    uint32              Length;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13767  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13768    DataByteCnt = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13769    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13770    /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13771    access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13772    ReadWriteBuffPtr = (uint32 *)StateDataPtr->FeeReadWriteBuffer;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13773    Length = FEE_DFLASH_WORDLINE_SIZE / FEE_DFLASH_WORD_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13774    /* Clear the fee read write buffer */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13775    do
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13776    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13777      ReadWriteBuffPtr[DataByteCnt] = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13778      DataByteCnt++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13779    } while (DataByteCnt != Length);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13780    /*[cover parentID={F2A48557-F8BC-42d5-946D-A378E13D201F}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13781  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13782  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13783  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13784  ** Syntax : static void Fee_lClearFeeGcReadWriteBuffer(void)                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13785  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13786  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13787  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13788  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13789  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13790  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13791  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13792  ** Parameters (in-out) :None                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13793  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13794  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13795  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13796  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13797  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13798  ** Description : This utility function clears the Gc read write buffer        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13799  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13800  /*[cover parentID={0581E5CF-D0C5-407c-8996-FAB05B434301}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13801  static void Fee_lClearFeeGcReadWriteBuffer(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13802  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13803    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13804    uint32*             GcReadWriteBuffPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13805    uint16              DataByteCnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13806    uint32              Length;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13807  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13808    DataByteCnt = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13809    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13810    /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13811    access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13812    GcReadWriteBuffPtr = (uint32 *)StateDataPtr->FeeGcReadWriteBuffer;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13813    Length = FEE_DFLASH_WORDLINE_SIZE / FEE_DFLASH_WORD_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13814  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13815    /* Clear the fee GC read write buffer */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13816    do
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13817    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13818      GcReadWriteBuffPtr[DataByteCnt] = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13819      DataByteCnt++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13820    } while (DataByteCnt != Length);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13821  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13822  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13823  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13824  ** Syntax : static void Fee_lHandleInitGcFail(void)                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13825  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13826  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13827  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13828  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13829  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13830  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13831  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13832  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13833  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13834  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13835  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13836  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13837  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13838  ** Description : This function shall handle the fail cases during             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13839  ** InitGC state machine                                                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13840  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13841  /*[cover parentID={8BD0F667-20D8-4a47-A193-29493F27D57F}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13842  static void Fee_lHandleInitGcFail(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13843  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13844    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13845  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13846    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13847  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13848    /* Enter InitGc fail state */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13849    StateDataPtr->FeeInitGCState = FEE_INITGC_FAIL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13850  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13851    /* [cover parentID={483DFBF2-4B28-4570-9B30-58F0ED547A35}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13852    production error enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13853    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13854    /* Raise production error */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13855    #if (FEE_GC_INIT_DEM_REPORT == FEE_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13856    /* [cover parentID={3F7C17A3-C6D0-4dbc-82EC-0B296B787768}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13857    Report production error to Mcal_Wrapper FEE_E_GC_INIT
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13858    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13859    Fee_lReportDemError(FEE_E_GC_INIT, DEM_EVENT_STATUS_FAILED);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13860    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13861    /* [cover parentID={38EF0E49-29B4-479a-B002-217D55DC4F46}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13862    Is illegal state notification function configured?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13863    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13864    /* Raise Illegal state notification if configured */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13865    if(Fee_CfgPtr->FeeNvmIllegalStateNotification != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13866    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13867      /* [cover parentID={129A9B2F-A577-408f-9B20-F25A26D2F51A}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13868      Call the notification function
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13869      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13870      /* Call the Notification function */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13871      Fee_CfgPtr->FeeNvmIllegalStateNotification();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13872    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13873  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13874  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13875  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13876  ** Syntax : LOCAL_INLINE void Fee_lPerformPrevBlkCheck (void)                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13877  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13878  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13879  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13880  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13881  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13882  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13883  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13884  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13885  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13886  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13887  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13888  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13889  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13890  ** Description :  Checks if there is enough space to accommodate the          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13891  ** Last Written Block in case there is a word line issue                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13892  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13893  /*[cover parentID={6D8844C8-3A85-40c2-993F-01A457DD82BD}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13894  LOCAL_INLINE void Fee_lPerformPrevBlkCheck(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13895  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13896    Fee_StateDataType *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13897    uint32             DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13898    uint32             Offset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13899    uint32             WLAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13900    uint8              LWBType;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13901    Fee_PageType       LWBPageCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13902    uint32             RemainingPages;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13903    uint16             LWBNum;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13904    uint16             LWBIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13905    uint8              BankNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13906    boolean            ThresholdCrossed;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13907  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13908  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13909    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13910  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13911    BankNumber = StateDataPtr->FeeStatusFlags.FeeCurrSector;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13912    DestAddr = StateDataPtr->FeeNextFreePageAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13913  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13914    LWBNum = StateDataPtr->FeeLastWrittenBlkInfo.BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13915    LWBPageCount = StateDataPtr->FeeLastWrittenBlkInfo.PageCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13916    LWBIndex = Fee_lGetUsrBlockIndex(LWBNum);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13917  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13918    /* Get the next but one free WL address. Then calculate number free pages,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13919       because in case of write failure we will retry from next but one free WL */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13920  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13921    WLAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13922    WLAddr = WLAddr + FEE_DFLASH_WORDLINE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13923  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13924    RemainingPages = Fee_lGetFreeDFLASHPages(BankNumber,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13925                     WLAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13926    Offset = DestAddr & FEE_DFLASH_WORDLINE_SIZE_1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13927  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13928    /* Unconfig blocks are treated as Normal blocks */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13929    /*[cover parentID={8B0BFFCB-0C0E-43b7-861A-CB3A95CCB18B}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13930    if(LWBIndex == FEE_LOG_BLOCK_NOT_FOUND)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13931    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13932      LWBType = (uint8)FEE_NORMAL_DATA;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13933    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13934    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13935    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13936      LWBType = (uint8)(Fee_CfgPtr->FeeBlockConfigPtr[LWBIndex].FeeImmediateData);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13937    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13938  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13939    /* Affected page count (in the worst-case) = Page Count of the block which
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13940       crossed the current word-line boundary + filled pages in the current WL */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13941    LWBPageCount = LWBPageCount + (Fee_PageType)(Offset >> FEE_BYTE_TO_PAGE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13942  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13943    /*Get the remaining frees pages from next but on free WL. This is because
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13944    in case of write failure will start writing from next but one free WL*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13945    ThresholdCrossed = Fee_lIsSectorThresholdCrossed((uint32)RemainingPages,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13946                                                     (uint32)LWBPageCount);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13947    /*[cover parentID={4A35BD41-2D3A-4df4-A5B4-EF11B825DB46}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13948    if((LWBType == (uint8)FEE_NORMAL_DATA) && (ThresholdCrossed == (boolean)TRUE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13949    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13950      /* In case of a compare failure, the affected previously written blocks
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13951         cannot be accommodated before the threshold boundary of the current
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13952         sector. Hence, start the current request at next free WL */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13953      DestAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13954    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13955    /*[cover parentID={3E420B85-FB5A-4e83-89B4-405473EA16B7}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13956    else if ((LWBType == (uint8)FEE_IMMEDIATE_DATA) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13957             (RemainingPages < (uint32)LWBPageCount))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13958    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13959      /* Previous Block cannot be accommodated if there is a compare failure
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13960         Start the current request at new WL */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13961      DestAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13962    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13963    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13964    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13965      /* Previous Block can be accommodated if there is a compare failure */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13966    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13967    /*[cover parentID={58EF8E1F-6476-428b-A783-069163300A7F}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13968    while (Fee_lIsUnerasableAddr(DestAddr) == TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13969    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13970      DestAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13971    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13972    StateDataPtr->FeeNextFreePageAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13973  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13974  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13975  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13976  ** Syntax : LOCAL_INLINE Std_ReturnType Fee_lPerformCurrBlkCheck              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13977  **                                   (const Fee_BlockType * const BlockPt     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13978  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13979  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13980  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13981  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13982  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13983  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13984  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13985  ** Parameters (in) :  BlockPtr                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13986  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13987  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13988  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13989  ** Return value    :  Std_ReturnType                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13990  **                   E_OK : Block can be accommodate in current sector        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13991  **                   E_NOT_OK : Block can not be accommodate in current sector**
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13992  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13993  ** Description :  Checks if there is enough space to accommodate the          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13994  ** Current requested Block                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13995  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13996  /*[cover parentID={50006C27-24B4-42a7-A7D6-C12CC0DC28C3}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13997  LOCAL_INLINE Std_ReturnType Fee_lPerformCurrBlkCheck(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13998    const Fee_BlockType * const BlockPtr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13999  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14000    Fee_StateDataType *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14001    uint32             DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14002    uint32             WLAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14003    uint32             Offset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14004    Fee_PageType       BlkPages;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14005    uint32             RemainingPages;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14006    uint8              BankNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14007    Std_ReturnType     ReturnValue;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14008  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14009    ReturnValue = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14010  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14011    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14012    BankNumber = StateDataPtr->FeeStatusFlags.FeeCurrSector;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14013    DestAddr = StateDataPtr->FeeNextFreePageAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14014  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14015  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14016    if (StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus == (uint32)FEE_SET )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14017    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14018      BlkPages = FEE_INVALID_BLOCK_PAGES;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14019    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14020    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14021    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14022      BlkPages = Fee_lGetDFLASHPages((uint16)(BlockPtr->Size));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14023    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14024  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14025    /*Check if next free page is beginning of WL. if yes then means no need to
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14026      write old data in case of write failure.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14027    if(Fee_lIsWLBeginning(DestAddr) == FEE_NEW_WL_BEGIN)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14028    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14029      RemainingPages = Fee_lGetFreeDFLASHPages(BankNumber, DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14030    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14031    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14032    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14033      /*This is not a WL beginning and there is some block data available in WL ,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14034        so in case of write failure we need write this data also. We will retry
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14035        write from next to next free WL. So calculate the free pages from next
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14036        to next free WL.This is done to avoid crossing sector boundary while
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14037        write retry.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14038      */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14039      WLAddr = (Fee_lGetNextWLAddr(DestAddr) + FEE_DFLASH_WORDLINE_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14040  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14041      RemainingPages = Fee_lGetFreeDFLASHPages(BankNumber, WLAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14042  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14043      /*Total BlkPages = BlkPages + Number of filled pages in current WL*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14044  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14045      Offset = (DestAddr & FEE_DFLASH_WORDLINE_SIZE_1);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14046      /* Convert the number of byte into pages */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14047      Offset = (Offset >> 3);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14048  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14049      Offset += BlkPages;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14050  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14051      /* Check if threshold will crossed in case of write retry . If yes mean we
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14052       can not accommodate old data in current WL + requested block data.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14053       Switch next free page address to next free WL this will avoid corruption
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14054       of old data in current WL in case write fail.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14055      */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14056      if ((boolean)TRUE == Fee_lIsSectorThresholdCrossed((uint32)RemainingPages,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14057          (uint32)Offset))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14058      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14059        StateDataPtr->FeeNextFreePageAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14060        DestAddr = StateDataPtr->FeeNextFreePageAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14061      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14062  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14063      /*Now check if threshold crossed for current write request  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14064      RemainingPages = Fee_lGetFreeDFLASHPages(BankNumber, DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14065  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14066    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14067    /*[cover parentID={8327131F-826B-4a2a-BDA9-675AD10B38AD}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14068    if ((boolean)TRUE == Fee_lIsSectorThresholdCrossed((uint32)RemainingPages,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14069        (uint32)BlkPages))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14070    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14071      /*GC start is disabled by user keep the request in pending state*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14072      /****** Check if it is a NORMAL REQUEST *******/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14073      /*[cover parentID={77F4AA83-2CD2-4700-800B-3C27ACB2353F}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14074      if( (BlockPtr->FeeImmediateData == (uint32)FEE_NORMAL_DATA) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14075          (StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14076           == (uint32)FEE_SET )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14077        )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14078      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14079        /* Do nothing */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14080      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14081      /****** Check if it is a IMMEDIATE REQUEST *******/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14082      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14083      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14084        /* if this block cannot be accommodated in the DFLASH */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14085        /*[cover parentID={1D38A69F-A7D5-4b50-B8D3-FCB974DE69F6}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14086        if(RemainingPages < BlkPages)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14087        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14088          /* Do nothing */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14089        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14090        /**** Block can be accommodated within the current DFLASH Sector */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14091        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14092        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14093          StateDataPtr->FeeGCImmBlkWrite = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14094          ReturnValue = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14095        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14096      }/* End of immediate write check */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14097  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14098      /*[cover parentID={035E000D-671A-455a-BE10-41BB00B378DD}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14099      /*[cover parentID={D22BCA54-B974-4042-A97A-D5C968DDEAD1}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14100      if (StateDataPtr->FeeGcState == FEE_GC_IDLE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14101      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14102        /* GC should be triggered only if DisableGCStart is FALSE */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14103        /*[cover parentID={BDE15D5E-B4E6-46f3-BCC8-CAD3AECB9017}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14104        if(StateDataPtr->FeeDisableGCStart == (boolean)FALSE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14105        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14106          /* Request for Garbage Collection and continue */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14107          StateDataPtr->FeeGcState = FEE_GC_REQUESTED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14108        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14109      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14110    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14111    /* Threshold NOT Crossed*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14112    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14113    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14114      ReturnValue = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14115    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14116  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14117    return(ReturnValue);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14118  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14119  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14120  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14121  ** Syntax : LOCAL_INLINE Std_ReturnType Fee_lPerformWriteCheck                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14122  **                               ( const Fee_BlockType * const BlockPtr)      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14123  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14124  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14125  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14126  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14127  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14128  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14129  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14130  ** Parameters (in) :  BlockPtr                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14131  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14132  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14133  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14134  ** Return value    :  E_NOT_OK / E_OK                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14135  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14136  ** Description :  Checks if there is enough space to accommodate the request  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14137  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14138  /*[cover parentID={64492263-4B67-4d72-A9EF-55F91083DAEA}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14139  LOCAL_INLINE Std_ReturnType Fee_lPerformWriteCheck(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14140    const Fee_BlockType * const BlockPtr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14141  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14142    uint32             DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14143    Fee_StateDataType *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14144    Std_ReturnType     ReturnValue;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14145  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14146    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14147    DestAddr = StateDataPtr->FeeNextFreePageAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14148    /*[cover parentID={1EE9BDC2-674D-4ce7-8CE2-EF5B0DCA5C7C}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14149    while(Fee_lIsUnerasableAddr(DestAddr) == TRUE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14150    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14151      DestAddr = Fee_lGetNextWLAddr(DestAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14152    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14153    StateDataPtr->FeeNextFreePageAddr = DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14154  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14155    /* Check if Previous Block can be accommodated if there is a compare failure
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14156     */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14157    /*[cover parentID={AFEEC63E-DE04-48ca-8898-8575E3B472A1}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14158    if( (Fee_lIsWLBeginning(DestAddr) != FEE_NEW_WL_BEGIN) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14159        (StateDataPtr->FeeLastWrittenBlkInfo.Status.Consistent ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14160         (uint32)FEE_SET ))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14161    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14162      /*[cover parentID={724C552C-124B-48da-8D52-663E91C9ABB0}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14163      Fee_lPerformPrevBlkCheck();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14164    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14165  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14166    /* Check if Current Block can be accommodated */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14167    ReturnValue = Fee_lPerformCurrBlkCheck(BlockPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14168  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14169    return(ReturnValue);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14170  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14171  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14172  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14173  ** Syntax : static void Fee_lHandleWriteFail(void)                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14174  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14175  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14176  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14177  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14178  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14179  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14180  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14181  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14182  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14183  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14184  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14185  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14186  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14187  ** Description : This function shall handle the severe error                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14188  ** (compare failed twice or internal write fail) case during                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14189  ** write state machine                                                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14190  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14191  /*[cover parentID={786A84CA-3DC9-4f2e-AC4D-4F37A18654E2}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14192  static void Fee_lHandleWriteFail(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14193  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14194    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14195  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14196    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14197  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14198    /* Enter Write Fail State */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14199    StateDataPtr->FeePendReqStatus = FEE_WRITE_FAIL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14200  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14201    /* [cover parentID={FA984E1B-1BF3-4870-AC78-8D5F47D8F68F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14202    production error enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14203    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14204    /* Raise Job Failed production error */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14205    #if (FEE_WRITE_DEM_REPORT == FEE_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14206    /* [cover parentID={45A51475-D8A1-4f4f-A794-971AE5C1303F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14207    Report production error to Mcal_Wrapper FEE_E_WRITE
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14208    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14209    Fee_lReportDemError(FEE_E_WRITE, DEM_EVENT_STATUS_FAILED);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14210    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14211  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14212    /* [cover parentID={F2A40B82-4348-489d-A08A-E96C4D4B9A9E}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14213    Is illegal state notification configured?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14214    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14215    /* Raise Illegal state notification if configured */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14216    if(Fee_CfgPtr->FeeNvmIllegalStateNotification != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14217    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14218      /* [cover parentID={8205126C-3839-46e9-9217-41FBA246ABD5}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14219      Call the notification function
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14220      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14221      /* Call the Notification function */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14222      Fee_CfgPtr->FeeNvmIllegalStateNotification();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14223    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14224  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14225  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14226  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14227  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14228  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14229  ** TRACEABILITY: []                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14230  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14231  ** Syntax : LOCAL_INLINE Std_ReturnType Fee_lPerformReadCheck                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14232  **                                              (const uint16 UserBlockIndex) **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14233  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14234  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14235  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14236  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14237  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14238  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14239  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14240  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14241  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14242  ** Parameters (in) :  UserBlockIndex       block index                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14243  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14244  ** Parameters (in-out) :None                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14245  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14246  ** Return value    :                                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14247  **                  E_NOT_OK : Block is not valid or inconsistent             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14248  **                  E_OK : Block is  valid and consistent                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14249  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14250  ** Description :  This utility function checks if the requested copy of the   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14251  ** logical data block is consistent and valid                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14252  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14253  /* [cover parentID={021E426E-3285-4e2a-8065-2D8F4BDF6D52}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14254  LOCAL_INLINE Std_ReturnType Fee_lPerformReadCheck(const uint16 UserBlockIndex)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14255  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14256    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14257    const Fee_CacheType         *BlockPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14258    Std_ReturnType         RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14259  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14260    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14261    BlockPtr = &StateDataPtr->FeeBlockInfo[UserBlockIndex];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14262  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14263    #if (FEE_GET_PREV_DATA_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14264    /* [cover parentID={F1E0CF63-9125-4a0c-8924-E5FCEDB9E32A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14265    if (StateDataPtr->FeePendReqInfo.GetPrevCopy == FEE_SET )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14266    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14267      /* [cover parentID={AD46AE06-503D-4882-AA6C-7D8A55EA85B5}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14268      Is the logical block inconsistent?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14269      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14270      if (BlockPtr->Status.PrevCopyConsistent == (uint32)FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14271      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14272        /* [cover parentID={94D9D304-CF44-48f6-BB78-CF09C9B05E89}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14273        Update Fee job result as block MEMIF_BLOCK_INCONSISTENT
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14274        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14275        StateDataPtr->FeeJobResult = MEMIF_BLOCK_INCONSISTENT;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14276        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14277      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14278      /* [cover parentID={6EE8825D-927C-4fcc-A417-C16110628F48}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14279      Is the logical block invalid?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14280      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14281      /* If the logical block is invalid */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14282      else if (BlockPtr->Status.PrevCopyValid == (uint32)FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14283      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14284        /* [cover parentID={77F3C9CE-CA24-40aa-B913-D26A9F163082}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14285        Update Fee job result as MEMIF_BLOCK_INVALID
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14286        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14287        StateDataPtr->FeeJobResult = MEMIF_BLOCK_INVALID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14288        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14289      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14290      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14291      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14292        RetVal = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14293      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14294    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14295    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14296    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14297    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14298      /* [cover parentID={0D4A8E30-6FC8-4406-A285-B15DAC21978D}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14299      Is the current block inconsistent?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14300      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14301      /* If the logical block is inconsistent */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14302      if (BlockPtr->Status.Consistent == (uint32)FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14303      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14304        StateDataPtr->FeeJobResult = MEMIF_BLOCK_INCONSISTENT;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14305        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14306      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14307      /* [cover parentID={77388B83-623E-41a1-A3D0-BAB58D4D8800}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14308      Is the current logical block invalid?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14309      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14310      /* If the logical block is invalid */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14311      else if (BlockPtr->Status.Valid == (uint32)FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14312      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14313        StateDataPtr->FeeJobResult = MEMIF_BLOCK_INVALID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14314        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14315      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14316      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14317      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14318        RetVal = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14319      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14320    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14321  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14322    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14323  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14324  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14325  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14326  ** Syntax : static void Fee_lUpdateBlockInfo(const Fee_CacheStatusType        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14327  **                               * const Status,                              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14328  **                               const uint16 Index, const uint16 pageCount)  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14329  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14330  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14331  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14332  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14333  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14334  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14335  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14336  ** Parameters (in) :Status: State of data block                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14337  **                   Index: Block Index in cache table                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14338  **                   pageCount: Page count                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14339  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14340  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14341  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14342  ** Return value    :  void                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14343  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14344  ** Description : This utility function updates the cache table with the       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14345  ** block info                                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14346  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14347  /* [cover parentID= {42009E6C-8C53-48c3-9E8C-AA24E2F7724A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14348  static void Fee_lUpdateBlockInfo(const Fee_CacheStatusType * const Status,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14349                                   const uint16 Index, const uint16 pageCount)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14350  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14351    Fee_CacheType           *CachePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14352    Fee_StateDataType       *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14353    uint32                   NewPageCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14354    uint32                   BlockCycleCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14355    uint32                   PrvBlockCycleCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14356    const uint8              *TempArrayPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14357  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14358    /* [cover parentID={30EAC34E-D3B0-4a50-A537-95F31B835280}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14359      Point the Cache pointer to the block using block index
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14360       [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14361    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14362    CachePtr = &(StateDataPtr->FeeBlockInfo[Index]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14363  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14364  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14365  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14366    NewPageCount = pageCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14367    NewPageCount = (NewPageCount - FEE_ONE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14368    /* [cover parentID={037D3D77-B1DD-4e8f-98E5-06FE5FC7B626}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14369        Was cache update done for the block?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14370        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14371    if(CachePtr->Address == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14372    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14373      /* [cover parentID={0A64E26F-7A17-411d-A3E1-C7F100221AFF}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14374      Update the cache with block address
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14375      Update valid, consistent and copied fields
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14376      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14377      /* Update the cache with block Address */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14378      CachePtr->Address = StateDataPtr->FeeCurrSectSrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14379      CachePtr->Status.Valid = Status->Valid;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14380      CachePtr->Status.Consistent = Status->Consistent;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14381      CachePtr->Status.Copied = Status->Copied;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14382      CachePtr->BlockSize = (NewPageCount * FEE_SEVEN);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14383    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14384    /* [cover parentID={5ED60E83-4A2D-41b3-BEBC-CCF626AF975F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14385       Is the previous copy address reset?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14386       [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14387    else if(CachePtr->PrevCopyAddress == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14388    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14389  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14390      /*Get the cycle count of the current copy of block*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14391      BlockCycleCount = Fee_lGetBlkCycleCount(Index);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14392  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14393      /*Get the cycle count of block from FeeReadWriteBuffer*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14394      /*Here the intention is to read Bytes 3,4,5 from the data block
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14395        which together indicates BCC. First bytes 2 to 5 are read and BCC bytes
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14396        are extracted */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14397      TempArrayPtr = &(StateDataPtr->FeeReadWriteBuffer[FEE_BLOCK_CYL_CNT_POS]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14398      /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14399       access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14400      PrvBlockCycleCount = *((const uint32*)TempArrayPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14401      /*Remove the MSB of number of data pages */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14402      PrvBlockCycleCount = (PrvBlockCycleCount >> FEE_EIGHT);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14403      /* [cover parentID={BE4264CB-8FAB-4f96-87A2-4ABED6C04875}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14404         Update the cache with block address of previous copy
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14405        Mark the previous copy as consistent
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14406        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14407      /*Check if the cycle count of previous copy of block is 1 less than of cycle
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14408      count of current copy of block if yes then only update cache table.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14409      /* [cover parentID= {A46C6485-94A9-44ca-82F4-91CC3A4432B1}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14410      if(PrvBlockCycleCount == (BlockCycleCount - FEE_ONE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14411      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14412        /* Update the cache with block Address of previous copy */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14413        CachePtr->PrevCopyAddress = StateDataPtr->FeeCurrSectSrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14414        CachePtr->PrevBlkSize = (NewPageCount * FEE_SEVEN);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14415        CachePtr->Status.PrevCopyValid = Status->Valid;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14416        CachePtr->Status.PrevCopyConsistent = Status->Consistent;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14417        CachePtr->Status.PrevCopyCopied = Status->Copied;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14418      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14419    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14420    /* [cover parentID={0A64E26F-7A17-411d-A3E1-C7F100221AFF}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14421          Update the cache with block address
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14422         Update valid, consistent and copied fields
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14423        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14424    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14425    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14426      /*Dummy Else to avoid MISRA*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14427    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14428  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14429  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14430  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14431  ** Syntax : static void Fee_lUpdateUnconfigBlockInfo(const uint16 BlockNumber,**
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14432  **                                                   const uint16 PageCount)  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14433  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14434  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14435  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14436  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14437  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14438  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14439  ** Parameters (in) :  BlockNumber - Block Number                              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14440  **                    PageCount   - page count                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14441  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14442  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14443  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14444  ** Return value    :  void                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14445  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14446  ** Description : This function does the cache table update of the             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14447  **               un-configured block                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14448  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14449  /* [cover parentID= {0CC32433-7485-4dc8-BF65-26705DCCDAB0}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14450  static void Fee_lUpdateUnconfigBlockInfo(const uint16 BlockNumber, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14451      const uint16 PageCount)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14452  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14453    Fee_StateDataType       *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14454    Fee_CacheType           *UnconfigBlockPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14455    uint16                   UnconfigBlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14456    uint16                   TempUnConfigBlockCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14457  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14458  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14459    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14460    TempUnConfigBlockCount = StateDataPtr->FeeUnConfigBlockCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14461  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14462    UnconfigBlockIndex = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14463  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14464    UnconfigBlockPtr = &(StateDataPtr->FeeBlockInfo[Fee_CfgPtr->FeeBlkCnt]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14465  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14466  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14467    /* [cover parentID={EA7E70CD-76EF-4fe2-AF4F-F2D2317D1F8D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14468    while((UnconfigBlockIndex < TempUnConfigBlockCount) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14469          (UnconfigBlockPtr->BlockNumber != BlockNumber))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14470    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14471      UnconfigBlockIndex++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14472  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14473      UnconfigBlockPtr++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14474    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14475    /* [cover parentID={65793023-B106-4d89-B3E9-DAB49C5AB6C1}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14476    if(UnconfigBlockIndex == TempUnConfigBlockCount)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14477    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14478      /* check if the cache table has space */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14479      if(((Fee_CfgPtr->FeeBlkCnt) + TempUnConfigBlockCount) <
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14480          (uint16)(FEE_TOTAL_BLOCK_COUNT))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14481      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14482        /* [cover parentID={C63246F2-315E-401f-9747-82A5A030B401}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14483        production error enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14484        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14485        #if (FEE_UNCFG_BLK_DEM_REPORT == FEE_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14486        /* [cover parentID={D157E100-304E-49f5-895B-F70860E32832}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14487        if(((Fee_CfgPtr->FeeBlkCnt) + TempUnConfigBlockCount) ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14488            FEE_MAX_BLOCK_COUNT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14489        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14490          /* [cover parentID={45BBF021-539B-42c1-96BB-232F0BA519E2}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14491             Report production error to Mcal_Wrapper FEE_E_UNCONFIG_BLK_EXCEEDED
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14492             [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14493          Fee_lReportDemError(FEE_E_UNCONFIG_BLK_EXCEEDED,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14494                                DEM_EVENT_STATUS_FAILED);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14495        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14496        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14497        UnconfigBlockPtr->Address = StateDataPtr->FeeCurrSectSrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14498        UnconfigBlockPtr->BlockNumber = BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14499        UnconfigBlockPtr->BlockSize = (uint32)((uint32)PageCount * FEE_SEVEN);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14500        TempUnConfigBlockCount++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14501      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14502      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14503      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14504        /* Un-configured blocks cache table is already full */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14505        StateDataPtr->FeeUncfgBlksExceeded = FEE_UNCONFIG_BLK_LIMIT_CROSSED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14506      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14507    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14508    StateDataPtr->FeeUnConfigBlockCount = TempUnConfigBlockCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14509  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14510  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14511  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14512  ** Syntax : LOCAL_INLINE void Fee_lUpdateGcCurrBlockInfo(void)                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14513  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14514  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14515  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14516  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14517  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14518  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14519  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14520  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14521  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14522  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14523  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14524  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14525  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14526  ** Description : Updates the block information of the block being written     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14527  **               during Garbage collection                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14528  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14529  /* [cover parentID={1952A9DA-A5CF-41d8-9890-F950351C9E1B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14530  LOCAL_INLINE void Fee_lUpdateGcCurrBlockInfo(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14531  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14532    Fee_StateDataType    *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14533    Fee_GcBlkInfoType    *GcBlkPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14534    const uint8                *ReadWriteBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14535    Fee_PageType          PageCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14536    uint32                WordValue;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14537    uint16                BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14538    uint16                Offset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14539    /* [cover parentID={414D95EA-8C04-4a5c-8591-8DC77E0EBE19}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14540    Fee_lUpdateGcCurrBlockInfo
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14541    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14542    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14543    GcBlkPtr = &(StateDataPtr->FeeGcCurrBlkInfo);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14544    Offset = (uint16)((StateDataPtr->FeeGcDestAddr) & FEE_DFLASH_WORDLINE_SIZE_1);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14545    ReadWriteBufferPtr = &(StateDataPtr->FeeGcReadWriteBuffer[Offset]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14546  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14547    /* Extract block number and page count */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14548    /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14549    access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14550    WordValue = *(const uint32 *)ReadWriteBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14551    BlockNumber = (uint16)(WordValue >> FEE_EIGHT);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14552  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14553    /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 16 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14554    access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14555    PageCount = *((const uint16*)(&ReadWriteBufferPtr[FEE_BLOCK_NUM_POS]));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14556    PageCount = (PageCount & (uint16)FEE_PAGE_COUNT_MASK);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14557  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14558    /* Update FeeGcCurrBlkInfo */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14559    GcBlkPtr->Addr = StateDataPtr->FeeGcSrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14560    GcBlkPtr->BlockNumber = BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14561    GcBlkPtr->PageCount = PageCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14562    GcBlkPtr->Consistent = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14563  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14564  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14565  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14566  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14567  ** Syntax : static Std_ReturnType Fee_lRegisterNvmRead(                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14568  **                            const uint16 BlockNumber,                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14569  **                            const uint16 BlockOffset,                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14570  **                            uint8 * const DataBufferPtr,                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14571  **                            const uint16 Length                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14572  **                            const uint8 GetPrevCopy)                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14573  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14574  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14575  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14576  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14577  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14578  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14579  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14580  ** Parameters (in) :  BlockNumber : Logical block number                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14581  **                    BlockOffset : Read address offset within the block      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14582  **                    Length      : Number of bytes to be read                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14583  **                    DataBufferPtr : pointer to data buffer                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14584  **                    GetPrevCopy : Set: Request is for reading pervious copy **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14585  **                                  of data block                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14586  **                                  Reset: Request is for reading current     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14587  **                                  copy of data block                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14588  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14589  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14590  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14591  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14592  ** Return value    :  Std_ReturnType                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14593  **                    E_OK : Request is registered.                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14594  **                    E_NOT_OK : Request is not registered. FEE module is busy**
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14595  **                     in servicing other request.                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14596  ** Description : This function will register the NVM read request in the      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14597  ** pending request buffer if FEE is Idle or If erase suspend enabled and QS   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14598  ** Erase is ongoing                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14599  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14600  /* [cover parentID={24E7F068-5567-4b01-9D6C-6A80C21B9E4A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14601  static Std_ReturnType Fee_lRegisterNvmRead( const uint16 BlockNumber,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14602      const uint16 BlockOffset, uint8 * const DataBufferPtr, const uint16 Length,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14603      const uint8 GetPrevCopy)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14604  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14605    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14606    Std_ReturnType RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14607    Std_ReturnType RetValue;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14608    Fee_PendReqBufType   *PendReqPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14609    uint8 DetCall;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14610  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14611    DetCall = FEE_SET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14612    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14613    PendReqPtr = &(StateDataPtr->FeePendReqInfo);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14614  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14615    /* [cover parentID={6A1D98CD-158F-4702-8165-6C5C726CD8BB}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14616    Set Flag as E_NOT_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14617    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14618    RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14619  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14620    /* [cover parentID={77B1992F-C0C7-447e-9CEE-7FC6CB46C199}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14621    if(StateDataPtr->FeePendReqStatus == FEE_PEND_PREV_NO_REQ)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14622    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14623      /* [cover parentID={E8DF5530-B41E-4d87-A006-C3611C761B94}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14624      Set Flag as E_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14625      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14626      RetVal = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14627    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14628    #if(FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14629       (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14630    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14631    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14632      /* [cover parentID={399A2610-BEB7-48e8-94B0-57E9486B0762}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14633      Check for QS job status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14634      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14635      if((StateDataPtr->FeeQsState == (uint8)FEE_QS_PROG_STATE_ERASE_COMPLETE) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14636          (StateDataPtr->FeeQsJobStatus == FEE_JOB_REQSTD))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14637      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14638        /* [cover parentID={2552C496-99D4-4919-9770-FE1BDC7BBE49}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14639        RetVal = Fls_17_Dmu_SuspendErase();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14640        if(RetVal == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14641        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14642          /* [cover parentID={291D18F2-CD8D-49d7-8345-B65FAAEFA4F0}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14643          StateDataPtr->FeeQsEraseSuspend = FEE_ERASE_SUSPENDED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14644          StateDataPtr->FeeQsJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14645          StateDataPtr->FeeQsJob = FEE_NO_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14646        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14647        #if (((FEE_DEV_ERROR_DETECT == STD_ON) || (FEE_SAFETY_ENABLE == STD_ON)) \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14648        && (MCAL_AR_VERSION == MCAL_AR_422)) || (FEE_RUNTIME_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14649        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14650        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14651          /* For suspend failure DET is not raised */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14652          DetCall = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14653        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14654        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14655      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14656      /* [cover parentID={DF2AC9DC-7080-49ee-9C39-9A3181FFAC44}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14657      else if(StateDataPtr->FeeQsEraseSuspend == FEE_ERASE_SUSPENDED)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14658      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14659        /* [cover parentID={4EEA0817-2B72-4e80-AA59-7D99A929A62D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14660        RetVal =  E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14661        StateDataPtr->FeeQsJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14662        StateDataPtr->FeeQsJob = FEE_NO_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14663      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14664      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14665      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14666        /*Dummy else for MISRA */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14667      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14668    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14669    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14670  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14671    RetValue = Fee_lRegisterNvmReadUpdate(DetCall, RetVal, GetPrevCopy);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14672  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14673    /*[cover parentID={80B7B1C8-2BE1-4062-8F23-08A665011A22}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14674    if(RetValue == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14675    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14676      /* [cover parentID={2552C496-99D4-4919-9770-FE1BDC7BBE49}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14677      Store the read request parameters in the pending buffer structure
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14678      Update pending request status as 'read requested' and job result as 'MEMIF_JOB_PENDING'
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14679      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14680      /* Store the read request parameters in the Pending buffer structure */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14681      PendReqPtr->BlockNumber = BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14682      PendReqPtr->BlockOffset = BlockOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14683      PendReqPtr->DataBufferPtr = DataBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14684      PendReqPtr->Length = Length;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14685    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14686    /* [cover parentID={138DF8B8-2FED-407d-AF0C-3015C8E3F599}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14687    Return Flag status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14688    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14689    return(RetValue);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14690    /* [cover parentID={D6919DDB-986F-49ac-BBC4-FE6D936C3127}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14691    Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14692    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14693  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14694  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14695  #if ((((FEE_DEV_ERROR_DETECT == STD_ON) || (FEE_SAFETY_ENABLE == STD_ON)) \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14696  && (MCAL_AR_VERSION == MCAL_AR_422)) || (FEE_RUNTIME_ERROR_DETECT == STD_ON))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14697  /* [cover parentID={64223989-13EB-4996-94CE-5EBD4CBA23DB}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14698  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14699  ** Syntax : static Std_ReturnType Fee_lRegNvmReadDetCheck(                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14700  **                            uint8 DetCall                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14701  **                            const uint8 GetPrevCopy)                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14702  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14703  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14704  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14705  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14706  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14707  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14708  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14709  ** Parameters (in) :  DetCall : DET call status variable                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14710  **                    GetPrevCopy : Set: Request is for reading pervious copy **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14711  **                                  of data block                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14712  **                                  Reset: Request is for reading current     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14713  **                                  copy of data block                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14714  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14715  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14716  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14717  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14718  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14719  ** Description : This function will check the NVM read Det                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14720  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14721  LOCAL_INLINE void Fee_lRegNvmReadDetCheck(uint8 DetCall, const uint8 GetPrevCopy)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14722  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14723      /* [cover parentID={F649153E-80B1-4dbf-9EF1-E647F532C64B}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14724      DET or safety is enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14725      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14726      /* FEE is busy with another request; raise BUSY DET */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14727      /* [cover parentID={8C968070-3390-4bc2-8D73-62CDEF71B014}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14728      Report error to DET/SAFETY
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14729      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14730      #if (FEE_GET_PREV_DATA_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14731      /* [cover parentID={ABE7C3DA-BCDA-4cd1-AE0A-E059FCDC80A8}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14732      if(GetPrevCopy == FEE_SET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14733      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14734        /* [cover parentID={FD8870D2-8052-48c1-B972-7EC34F13A35E}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14735        #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY) \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14736          && (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14737        if(DetCall == FEE_SET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14738        #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14739        UNUSED_PARAMETER(DetCall);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14740        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14741  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14742        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14743        /* If get previous copy is set then only report safety error. Because
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14744        request came from non autosar API */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14745        #if (MCAL_AR_VERSION == MCAL_AR_422) && (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14746          /* [cover parentID={24DA148C-A961-4d92-BECC-20FA7400C850}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14747          Report error to API GetPrevData
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14748  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14749          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14750            Fee_lReportError(FEE_SID_GETPREVDATA, FEE_SE_BUSY, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14751        #elif(FEE_RUNTIME_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14752            Fee_lReportError(FEE_SID_GETPREVDATA, FEE_E_BUSY, FEE_RUNTIME_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14753        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14754  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14755        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14756      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14757      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14758      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14759      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14760        /* [cover parentID={61360DE2-AC41-44e2-B05C-1CE79EB058A5}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14761        #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY) \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14762               && (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14763        if(DetCall == FEE_SET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14764        #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14765        UNUSED_PARAMETER(DetCall);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14766        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14767        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14768        #if(FEE_RUNTIME_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14769          /* [cover parentID={96EB3791-5CB5-4449-BBDC-DCE4A42B3CEF}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14770          Report runtime error FEE_E_BUSY
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14771          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14772          Fee_lReportError(FEE_SID_READ, FEE_E_BUSY, FEE_RUNTIME_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14773        #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14774          /* [cover parentID={8C968070-3390-4bc2-8D73-62CDEF71B014}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14775          Report error to DET FEE_SID_READ
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14776          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14777          Fee_lReportError(FEE_SID_READ, FEE_E_BUSY, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14778        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14779  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14780        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14781      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14782      UNUSED_PARAMETER(GetPrevCopy);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14783  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14784  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14785  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14786  /* [cover parentID={3FC8CF0E-D55A-4431-8401-288F5AEE6283}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14787  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14788  ** LOCAL_INLINE Std_ReturnType Fee_lRegisterNvmReadUpdate(                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14789  **                  uint8 DetCall, Std_ReturnType RetVal,                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14790  **                  const uint8 GetPrevCopy)                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14791  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14792  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14793  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14794  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14795  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14796  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14797  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14798  ** Parameters (in) :  DetCall : DET call status variable                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14799  **                    RetVal : Return value E_OK/E_NOT_OK                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14800  **                    GetPrevCopy : Set: Request is for reading pervious copy **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14801  **                                  of data block                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14802  **                                  Reset: Request is for reading current     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14803  **                                  copy of data block                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14804  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14805  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14806  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14807  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14808  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14809  ** Description : This function will update pending request status             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14810  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14811  LOCAL_INLINE Std_ReturnType Fee_lRegisterNvmReadUpdate(uint8 DetCall,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14812                                   Std_ReturnType RetVal, const uint8 GetPrevCopy)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14813  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14814    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14815    Std_ReturnType RetValue = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14816    #if (FEE_GET_PREV_DATA_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14817    Fee_PendReqBufType   *PendReqPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14818    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14819    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14820  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14821    /* [cover parentID={1692C8C3-9037-4e18-B0A3-DB9A45EDF676}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14822    if(RetVal == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14823    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14824      #if (FEE_GET_PREV_DATA_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14825      PendReqPtr = &(StateDataPtr->FeePendReqInfo);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14826      /* [cover parentID={4672374B-0E25-483e-8D02-AEC5C6EE2E28}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14827      if(GetPrevCopy == FEE_SET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14828      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14829        PendReqPtr->GetPrevCopy = FEE_SET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14830      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14831      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14832      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14833        PendReqPtr->GetPrevCopy = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14834      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14835      #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14836      UNUSED_PARAMETER (GetPrevCopy);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14837      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14838      StateDataPtr->FeeStatusFlags.FeeStartInitGC = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14839      /* Store the read request parameters in the pending buffer structure
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14840      Update pending request status as 'read requested' and job result as
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14841      'MEMIF_JOB_PENDING' */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14842      StateDataPtr->FeePendReqStatus = FEE_REQ_READ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14843      StateDataPtr->FeeJobResult = MEMIF_JOB_PENDING;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14844    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14845    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14846    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14847       #if (((FEE_DEV_ERROR_DETECT == STD_ON) || (FEE_SAFETY_ENABLE == STD_ON)) \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14848       && (MCAL_AR_VERSION == MCAL_AR_422)) || (FEE_RUNTIME_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14849       Fee_lRegNvmReadDetCheck(DetCall, GetPrevCopy);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14850       #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14851       UNUSED_PARAMETER(DetCall);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14852       #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14853  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14854       RetValue = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14855    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14856  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14857    return RetValue;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14858  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14859  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14860  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14861  ** Syntax : static Std_ReturnType                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14862  **   Fee_lRegisterNvmWrite(const uint8 * const DataWriteBufferPtr,            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14863  **                                      const Fee_BlockType * const BlockPtr) **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14864  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14865  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14866  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14867  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14868  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14869  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14870  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14871  ** Parameters (in) :  DataWriteBufferPtr : Data buffer pointer                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14872  **                    BlockPtr      : Block cache pointer                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14873  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14874  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14875  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14876  ** Return value    :  Std_ReturnType                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14877  **                    E_OK : Request is registered.                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14878  **                    E_NOT_OK : Request is not registered. FEE module is busy**
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14879  **                     in servicing other request.                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14880  ** Description : This function will register the NVM write request in the     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14881  ** pending request buffer if FEE is Idle or If erase suspend enabled and QS   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14882  ** Erase is ongoing                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14883  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14884  /* [cover parentID={71B119F7-AF7C-487b-8BD3-C20F63E92269},
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14885  {754520DC-4BD9-4c7d-AB85-FB6AB5BC9EAF}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14886  Fee_lRegisterNvmWrite
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14887  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14888  static Std_ReturnType Fee_lRegisterNvmWrite( \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14889      const uint8 * const DataWriteBufferPtr, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14890      const Fee_BlockType * const BlockPtr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14891  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14892    /* [cover parentID={71B119F7-AF7C-487b-8BD3-C20F63E92269}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14893    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14894    Std_ReturnType RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14895    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14896    /* [cover parentID={DC2B5783-BBEB-4635-A759-BCF0F430CF2A}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14897    if(StateDataPtr->FeePendReqStatus == FEE_PEND_PREV_NO_REQ)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14898    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14899      /* [cover parentID={3940BCA6-5C15-4d8a-A009-DFB34F58D94A}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14900      Register write request
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14901      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14902      /* Register the write request */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14903      StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14904      Fee_lRegisterWriteRequest(DataWriteBufferPtr, BlockPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14905      /* [cover parentID={197B7188-11D0-4aaa-8350-F7B78E20EAFD}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14906      Return E_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14907      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14908      RetVal = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14909    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14910    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14911    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14912      /* FEE is busy with other request; raise BUSY DET */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14913      /* [cover parentID={89275CDB-C274-4144-A84F-EB6BFDACBFC9}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14914      /* [cover parentID={2010672E-36A5-49cd-A0DB-29F149E19143}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14915    #if(FEE_RUNTIME_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14916      /* [cover parentID={16A1402F-1832-4ef5-9068-D500F78E1B16}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14917      Runtime error report FEE_E_BUSY error
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14918      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14919      Fee_lReportError(FEE_SID_WRITE, FEE_E_BUSY, FEE_RUNTIME_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14920    #elif(((FEE_DEV_ERROR_DETECT == STD_ON) || (FEE_SAFETY_ENABLE == STD_ON)) \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14921    && (MCAL_AR_VERSION == MCAL_AR_422))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14922      /* [cover parentID={2010672E-36A5-49cd-A0DB-29F149E19143}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14923      Report FEE_E_BUSY error
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14924      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14925      Fee_lReportError(FEE_SID_WRITE, FEE_E_BUSY, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14926    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14927      /* [cover parentID={89275CDB-C274-4144-A84F-EB6BFDACBFC9}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14928      Report E_NOT_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14929      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14930      RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14931  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14932    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14933    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14934  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14935  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14936  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14937  ** Syntax : void Fee_lPerformStuffCheck(const uint16 UserBlockIndex)          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14938  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14939  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14940  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14941  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14942  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14943  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14944  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14945  ** Parameters (in) :  UserBlockIndex : Block Index                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14946  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14947  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14948  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14949  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14950  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14951  ** Description : This utility function checks if the requested block size is  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14952  **               different in DFlash & configured value and performs          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14953  **               stuffing the extra user bytes with zero if necessary         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14954  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14955  /*[cover parentID={C2BA48DD-4ADB-4664-88FA-A0B68DDD7B2C}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14956  LOCAL_INLINE void Fee_lPerformStuffCheck(const uint16 UserBlockIndex)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14957  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14958    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14959    uint8*             DataBufPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14960    uint16             Count;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14961    uint16             DflashBlkSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14962    uint16             BlkOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14963    uint16             BlkLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14964    uint16             TmpCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14965    uint16             StuffLen;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14966  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14967    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14968    #if (FEE_GET_PREV_DATA_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14969    /*[cover parentID={3E59010C-5713-49b6-B920-79C787DF9CCF}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14970    if(StateDataPtr->FeePendReqInfo.GetPrevCopy == FEE_SET )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14971    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14972      DflashBlkSize = (uint16)StateDataPtr->FeeBlockInfo[UserBlockIndex].PrevBlkSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14973    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14974    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14975    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14976    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14977      DflashBlkSize = (uint16)StateDataPtr->FeeBlockInfo[UserBlockIndex].BlockSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14978    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14979    BlkOffset = StateDataPtr->FeePendReqInfo.BlockOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14980    BlkLength = StateDataPtr->FeePendReqInfo.Length;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14981  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14982    DataBufPtr = StateDataPtr->FeePendReqInfo.DataBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14983    /*[cover parentID={B83EE2E2-4A33-4adc-9175-5924BD8AFD85}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14984    if(BlkLength > (uint16)0)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14985    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14986      /* [cover parentID={733A15E7-7C0F-46d0-B83E-B42D2FC0930E}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14987      Is block offset greater than configured block size?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14988      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14989      /* check whether block offset is greater than configured block size */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14990      if(BlkOffset > DflashBlkSize)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14991      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14992        for(Count = FEE_RESET; Count < BlkLength; Count++)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14993        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14994          DataBufPtr[Count] = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14995        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14996        #if((FEE_DATA_BLOCK_SUPPORTED==FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA)&&\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14997        (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14998        /*Check if QS erase was suspended. If yes then set FeePendReqStatus to
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14999        FEE_REQ_QUASI_ERASE to set module status to busy.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15000        /*[cover parentID={F9328DFA-7117-4af6-B85A-847C246814FC}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15001        if(StateDataPtr->FeeQsEraseSuspend == FEE_ERASE_SUSPENDED)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15002        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15003          /*[cover parentID={A0AE945D-6D16-4696-AFA6-0D346CC170AB}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15004          StateDataPtr->FeePendReqStatus = FEE_REQ_QUASI_ERASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15005          StateDataPtr->FeeQsJob = FEE_ERASE_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15006        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15007        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15008        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15009        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15010          /* reset the pending request status */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15011          StateDataPtr->FeePendReqStatus = FEE_PEND_PREV_NO_REQ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15012        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15013        /* Set the job result */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15014        StateDataPtr->FeeJobResult = MEMIF_JOB_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15015        /* Call user configured job End notification */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15016        /*[cover parentID={849628AD-9936-4358-A2BB-A6991A416AC2}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15017        if ( Fee_CfgPtr->FeeNvmJobEndNotification != NULL_PTR )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15018        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15019  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15020          /*[cover parentID={D210FFF8-E123-4e8f-BCE6-1DE16E1826FC}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15021          (Fee_CfgPtr->FeeNvmJobEndNotification)();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15022        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15023  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15024  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15025      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15026      /*[cover parentID={84F2E340-D25B-4226-8641-9D835C52AC2B}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15027      else if( (BlkOffset + BlkLength) > DflashBlkSize)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15028      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15029        TmpCount = DflashBlkSize - BlkOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15030        StuffLen = BlkLength - TmpCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15031        StateDataPtr->FeePendReqInfo.Length = TmpCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15032        DataBufPtr = &(StateDataPtr->FeePendReqInfo.DataBufferPtr[TmpCount]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15033  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15034        /* [cover parentID={FFDEF83C-CEA1-4473-BB90-168255B48FD5}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15035        Stuff the buffer with zero data upto stuff length
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15036        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15037        for(Count = FEE_RESET; Count < StuffLen; Count++)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15038        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15039          DataBufPtr[Count] = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15040        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15041      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15042      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15043      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15044        /* Do Nothing */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15045      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15046    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15047    /* If length is zero, then reset the status*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15048    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15049    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15050      #if((FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA)&&\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15051          (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15052      /*Check if QS erase was suspended. If yes then set FeePendReqStatus to
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15053      FEE_REQ_QUASI_ERASE to set module status to busy.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15054      if(StateDataPtr->FeeQsEraseSuspend == FEE_ERASE_SUSPENDED)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15055      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15056        StateDataPtr->FeePendReqStatus = FEE_REQ_QUASI_ERASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15057        StateDataPtr->FeeQsJob = FEE_ERASE_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15058      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15059      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15060      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15061      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15062        StateDataPtr->FeePendReqStatus = FEE_PEND_PREV_NO_REQ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15063      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15064      /*************   RESET JOB VARIABLES ******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15065      StateDataPtr->FeeJobResult = MEMIF_JOB_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15066      #if (FEE_GET_PREV_DATA_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15067      StateDataPtr->FeePendReqInfo.GetPrevCopy = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15068      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15069      /*****************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15070  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15071      /* Call user configured job End notification */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15072      /*[cover parentID={3D9E121D-0B6F-47b9-94DB-13C31C6FD8CF}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15073      if ( Fee_CfgPtr->FeeNvmJobEndNotification != NULL_PTR )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15074      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15075        /* [cover parentID={3A7A259F-C7F7-4a71-B8B2-52A71CE93270}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15076        Call the notification function
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15077        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15078        (Fee_CfgPtr->FeeNvmJobEndNotification)();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15079      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15080    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15081  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15082  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15083  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15084  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15085  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15086  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15087  ** Syntax : static void Fee_lQsInit(void)                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15088  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15089  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15090  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15091  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15092  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15093  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15094  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15095  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15096  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15097  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15098  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15099  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15100  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15101  ** Description : This function will initialize the QS Block Management        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15102  ** Environment variables and also update status of each QS block in cache     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15103  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15104  /*[cover parentID={0A218B3E-DFB2-4f73-BECF-72D47C85062D}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15105  static void Fee_lQsInit(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15106  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15107    Fee_CacheType       *CachePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15108    const Fee_BlockType *BlockPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15109    uint32               Index;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15110    Fee_StateDataType   *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15111    const uint8         *TgtAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15112    uint32               SrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15113  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15114    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15115  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15116    StateDataPtr->FeeQuasiBlkInstanceTemp = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15117    #if (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15118    StateDataPtr->FeeQsEraseSuspend = FEE_ERASE_NOT_SUSPENDED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15119    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15120    StateDataPtr->FeeQsState = FEE_QS_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15121    StateDataPtr->FeeQsJob = FEE_NO_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15122    StateDataPtr->FeeQsIntrJob = FEE_NO_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15123    StateDataPtr->FeeQsJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15124    StateDataPtr->FeeQsIntrJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15125    StateDataPtr->FeeQsRepairIndex = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15126    StateDataPtr->FeeInitQSState = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15127    StateDataPtr->FeeQsJobResult = MEMIF_JOB_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15128    StateDataPtr->FeeQsIntrJobResult = MEMIF_JOB_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15129    StateDataPtr->FeeHardeningWLCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15130    StateDataPtr->FeeHardeningPageCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15131    StateDataPtr->FeeQsHardeningOffset = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15132    StateDataPtr->FeeQsCancelAll = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15133    StateDataPtr->FeeHardenFlag = FEE_QS_HARDING_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15134  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15135    CachePtr = &(StateDataPtr->FeeBlockInfo[FEE_QSBLOCK_BEGIN_INDEX]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15136    BlockPtr = &(Fee_CfgPtr->FeeBlockConfigPtr[FEE_QSBLOCK_BEGIN_INDEX]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15137    Index = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15138    TgtAddr = StateDataPtr->FeeReadWriteBuffer;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15139  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15140    /*[cover parentID={60B6A811-1097-4e77-AE7C-FC417B36AE00}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15141    while(Index < FEE_NUM_QUASI_BLOCKS)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15142    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15143      SrcAddr = BlockPtr->Address;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15144      CachePtr->Address = SrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15145      CachePtr->Status.QsDirtyErase = 0;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15146      CachePtr->Status.QsDirtyWrite = 0;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15147      CachePtr->Status.State = FEE_QS_INVALID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15148  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15149       /*
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15150        Return value check for Fls_17_Dmu_ReadWordsSync is not required,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15151        because QS block status will be derived from the marker pages which is read
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15152        in Fee_lEvalQsBlockState.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15153      */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15154      (void)Fls_17_Dmu_ReadWordsSync(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15155        (Fls_17_Dmu_AddressType)SrcAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15156        /*MISRA2012_RULE_11_3_JUSTIFICATION:This is done for interfacing with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15157        FLS.FEE is passing parameters to FLS APIs, casting is needed to match with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15158        the Fls API prototype.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15159        /*MISRA2012_RULE_11_8_JUSTIFICATION:This function does not update the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15160        contents of the pointer. However, the called function will update the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15161        contents. Hence const qualifier is discarded while passing the argument.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15162        (uint32*)(TgtAddr),
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15163        (Fls_17_Dmu_LengthType)(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15164          (FEE_QS_STATUS_PAGES * FEE_DFLASH_PAGE_SIZE) / FEE_DFLASH_WORD_SIZE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15165  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15166      /*[cover parentID={0AC3278B-A799-4d79-9C53-AC79B6666B6F}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15167      Fee_lEvalQsBlockState(CachePtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15168  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15169      Index++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15170      CachePtr++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15171      BlockPtr++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15172    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15173  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15174    StateDataPtr->FeeQsIntrJob = FEE_REPAIR_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15175  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15176  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15177  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15178  ** Syntax : Std_ReturnType Fee_17_EraseQuasiStaticData(                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15179  **          const uint16 BlockNumber, const uint16 Instances)                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15180  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15181  ** Traceability   : [cover parentID={49B35985-54F0-4ae0-B288-8C77E3121785}]  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15182  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15183  ** Service ID:        0x25                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15184  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15185  ** Sync/Async:  Asynchronous                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15186  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15187  ** Reentrancy:  Non reentrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15188  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15189  ** Parameters (in) :  BlockNumber : Logical block number                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15190  **                    Instances   : Number of block instances                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15191  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15192  ** Parameters (out):  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15193  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15194  ** Return value    :  Std_ReturnType                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15195  **            E_OK : Erase Request is accepted                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15196  **                    E_NOT_OK : Erase Request is not accepted               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15197  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15198  ** Description : Service to initialize an erase job for one or               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15199  ** multiple consecutive instances of a quasi-static data block               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15200  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15201  /* [cover parentID={FA53B348-A966-4d6d-A389-EFC4E28BEA98}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15202  Fee_17_EraseQuasiStaticData
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15203  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15204  Std_ReturnType Fee_17_EraseQuasiStaticData(const uint16 BlockNumber,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15205      const uint16 Instances)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15206  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15207  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15208    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15209    uint16               BlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15210    Std_ReturnType       RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15211    RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15212    /* [cover parentID={67BE3317-4E3B-4f84-9DB3-E1B574C5EC60}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15213    Is Check return with E_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15214    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15215    if(Fee_lEraseQsDataSafetycheck() == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15216    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15217      /* [cover parentID={6A2F02C4-16B3-4795-B6C4-7BD1D53D3324}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15218      Get the block index of the requested QS block
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15219      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15220      /* Get index of the block info stored in cache */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15221      BlockIndex = Fee_lGetUsrBlockIndex(BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15222  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15223      /*Accept the request only for QS block*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15224      /* [cover parentID={880F3A68-FA22-4a51-93BC-92E3504CF99E}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15225      if((BlockIndex != FEE_LOG_BLOCK_NOT_FOUND) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15226          (Fee_CfgPtr->FeeBlockConfigPtr[BlockIndex].FeeUser ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15227           (uint8)FEE_QUASI_STATIC_USER))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15228      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15229        if(Instances == FEE_ZERO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15230        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15231          /*Invalid block instances value, raise safety error
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15232           if configured */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15233          RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15234          /* [cover parentID={706A3FE2-81A4-4f2e-9F94-F2114A858C94}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15235          Safety error is enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15236          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15237          #if(FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15238          /* [cover parentID={27F3883E-18DB-49f2-81A9-8AF55E32DD9A}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15239          Report error FEE_E_INVALID_BLOCK_INTS
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15240          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15241          Fee_lReportError(FEE_SID_ERASEQUASISTATICDATA,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15242                          FEE_SE_INVALID_BLOCK_INSTANCES, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15243          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15244        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15245        /* [cover parentID={F11117B3-1478-48a4-B55F-6FED8871BFE0}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15246        (Input instances is less than the configured block instances) or (is configured block instances equals zero and given instances is 1) ?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15247        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15248        else if((Instances <=
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15249            Fee_CfgPtr->FeeBlockConfigPtr[BlockIndex].Instances) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15250            ((Fee_CfgPtr->FeeBlockConfigPtr[BlockIndex].Instances == FEE_ZERO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15251            && (Instances == FEE_ONE)))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15252        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15253          StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15254          StateDataPtr->FeePendEraseInfo.CacheIndex = BlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15255          StateDataPtr->FeePendEraseInfo.BlockInstances = Instances;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15256          StateDataPtr->FeePendEraseInfo.BlockNumber = BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15257          StateDataPtr->FeeQuasiBlkInstanceTemp = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15258          StateDataPtr->FeePendReqStatus = FEE_REQ_QUASI_ERASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15259          StateDataPtr->FeeQsJobResult = MEMIF_JOB_PENDING;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15260          StateDataPtr->FeeQsJob = FEE_ERASE_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15261          StateDataPtr->FeeQsState = (uint8)FEE_QS_PROG_STATE_ERASE_STARTED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15262          StateDataPtr->FeeCurrReqBlockNum = BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15263          RetVal = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15264  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15265          /* Set this flag to start GC and cache update process before
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15266          serving Erase request.This will insure proper Erase operation in
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15267          case GC is disabled during FEE initialization */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15268          StateDataPtr->FeeStatusFlags.FeeStartInitGC = FEE_SET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15269          StateDataPtr->FeeStatusFlags.FeeWriteInvldQSeraseAPICalled=FEE_SET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15270        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15271        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15272        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15273          /*Invalid block instances value, raise safety error
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15274            if configured */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15275          RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15276  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15277          #if(FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15278          Fee_lReportError(FEE_SID_ERASEQUASISTATICDATA,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15279                          FEE_SE_INVALID_BLOCK_INSTANCES, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15280          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15281        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15282  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15283  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15284      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15285      /* [cover parentID={6AF8CD71-96CC-45b2-8317-6F6F2D9DEDF5}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15286      Safety error enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15287      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15288      #if(FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15289      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15290      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15291        /* [cover parentID={F2CAB662-7CEC-49a4-8680-D9D98BCCBD0C}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15292        Report Error as FEE_E_INVALID_BLOCK_NO
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15293        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15294        Fee_lReportError(FEE_SID_ERASEQUASISTATICDATA,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15295                        FEE_SE_INVALID_BLOCK_NO, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15296      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15297      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15298    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15299    /* [cover parentID={40565740-7EE4-4c46-97D3-2B98D709C215}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15300    Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15301    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15302    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15303  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15304  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15305  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15306  ** TRACEABILITY: [cover parentID={003CA79B-BA5C-442a-B315-3DAED23EC898}]      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15307  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15308  ** Syntax : MemIf_JobResultType Fee_17_GetQuasiStaticJobResult(void)          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15309  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15310  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15311  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15312  ** Service ID:  0x27                                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15313  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15314  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15315  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15316  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15317  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15318  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15319  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15320  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15321  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15322  ** Return value    :  MemIf_JobResultType                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15323  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15324  ** Description : Service to query the result of the last accepted job issued  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15325  ** by QS Manager                                                              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15326  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15327  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15328  /* [cover parentID={AAD5F634-CB70-4b60-996F-D6DD5CFC274C}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15329  Fee_17_GetQuasiStaticJobResult
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15330  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15331  MemIf_JobResultType Fee_17_GetQuasiStaticJobResult(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15332  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15333  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15334    const Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15335    MemIf_JobResultType ReturnValue;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15336    /* [cover parentID={0BA4CE80-3F48-4ea2-9D52-80DF2A5A07C1}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15337    Safety is enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15338    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15339    #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15340    /*Check Fee_CfgPtr is null if yes return E_not_ok . This done to avoid trap
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15341    if fee_init is not called */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15342    /* [cover parentID={1D69D905-A488-498f-A651-09E75E464828}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15343    if(Fee_CfgPtr != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15344    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15345    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15346      #if(MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15347      /* [cover parentID={F83109EE-32B8-40c2-9F78-6A4720A2505A}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15348      Is driver initialization is complete
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15349      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15350      if(Fee_lGetStatus() != MEMIF_UNINIT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15351      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15352      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15353        StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15354        ReturnValue = StateDataPtr->FeeQsJobResult;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15355      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15356      #if(MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15357      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15358      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15359      #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15360        Fee_lReportError(FEE_SID_GETQUASISTATICJOBRESULT,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15361                              FEE_SE_UNINIT, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15362      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15363        ReturnValue = MEMIF_JOB_FAILED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15364      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15365      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15366    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15367    #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15368    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15369    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15370      /* [cover parentID={C6EE60F6-34E1-42f7-BEF6-61683C73D0E4}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15371      Report safety error as FEE_E_UNINIT
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15372      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15373      Fee_lReportError(FEE_SID_GETQUASISTATICJOBRESULT,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15374                              FEE_SE_UNINIT, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15375      ReturnValue = MEMIF_JOB_FAILED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15376    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15377  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15378    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15379    /* [cover parentID={9A9BED7E-067C-4da1-9F5A-3DB8151AA8A7}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15380    Return the quasi static job result
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15381    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15382    return(ReturnValue);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15383    /* [cover parentID={D2BEC781-8CBC-4464-BD83-25999ADC4808}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15384    Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15385    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15386  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15387  }/*End of Fee_17_GetQuasiStaticJobResult */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15388  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15389  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15390  ** TRACEABILITY: [cover parentID={9CE9B6A6-08CB-48c3-91C3-1E6C24970EAC}]      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15391  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15392  ** Syntax : MemIf_JobResultType Fee_17_GetQuasiStaticBlockInfo(               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15393  **          const uint16 BlockNumber,                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15394  **          Fee_QuasiStaticBlockInfoType * const BlockInfoPtr)                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15395  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15396  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15397  ** Service ID:  0x26                                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15398  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15399  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15400  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15401  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15402  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15403  ** Parameters (in) :  BlockNumber : Logical block number                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15404  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15405  ** Parameters (out):  BlockInfoPtr : constant pointer to BlockInfo structure  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15406  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15407  ** Return value    :  Std_ReturnType                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15408  **                    E_OK : QS block info was read successfully              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15409  **                    E_NOT_OK : QS block info not available                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15410  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15411  ** Description : Service to read the Block State and the Block Cycle Counter  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15412  ** of the given quasi-static data block instance.                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15413  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15414  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15415  /* [cover parentID={C92C92E6-B01A-47ef-BD7D-BA7E974C2FD9}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15416  Fee_17_GetQuasiStaticBlockInfo
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15417  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15418  Std_ReturnType Fee_17_GetQuasiStaticBlockInfo(const uint16 BlockNumber,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15419                              Fee_QuasiStaticBlockInfoType * const BlockInfoPtr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15420  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15421    /* [cover parentID={C92C92E6-B01A-47ef-BD7D-BA7E974C2FD9}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15422    const Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15423    uint32              BlkAddress;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15424    Std_ReturnType      ReadStat;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15425    uint32              BccBuffer[2];
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15426    uint16              Bcc;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15427    uint16              BlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15428    uint16              BccComp;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15429    Std_ReturnType      RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15430  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15431  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15432    RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15433    ReadStat = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15434    Bcc = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15435  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15436    /*Check Fee_CfgPtr is null if yes return E_not_ok . This done to avoid trap
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15437    if fee_init is not called */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15438    /* [cover parentID={8CFB6FFB-C9AF-4713-8D57-A65990A00829}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15439    Is check return with E_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15440    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15441    if(Fee_lQsBlkInfoSafetyCheck(BlockInfoPtr) == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15442    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15443      StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15444      /* [cover parentID={91B0DB6B-5BAB-45c7-A448-AA7998BF85F2}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15445      Get the block index of the requested quasi block
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15446      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15447      /* Get index of the block info stored in cache */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15448      BlockIndex = Fee_lGetUsrBlockIndex(BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15449      /* [cover parentID={C1FB5201-9E3C-4ee8-B4AD-F0A15C742A41}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15450      If the block is found and it is a QS block?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15451      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15452      /*Accept the request only for QS block*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15453      if((BlockIndex != FEE_LOG_BLOCK_NOT_FOUND) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15454          (Fee_CfgPtr->FeeBlockConfigPtr[BlockIndex].FeeUser ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15455           (uint8)FEE_QUASI_STATIC_USER))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15456      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15457        /* [cover parentID={03607BAC-F3D3-44a2-A037-4F1E06365A07}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15458        Make a local copy of block address
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15459        Update Cache Status state
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15460        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15461        BlkAddress = StateDataPtr->FeeBlockInfo[BlockIndex].Address;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15462        BlockInfoPtr->State =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15463          StateDataPtr->FeeBlockInfo[BlockIndex].Status.State;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15464  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15465        /*Check if the block state is FEE_QS_WRITE_COMPLETE if yes then read the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15466        BCC value from block , otherwise return BCC as 0 */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15467        /* [cover parentID={2ACF6C55-BA2D-417f-A398-2FAFF9A250EE}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15468        if(BlockInfoPtr->State == FEE_QS_WRITE_COMPLETE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15469        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15470          BlkAddress += FEE_QS_STATE_CYCLE_COUNT_OFFSET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15471          ReadStat = Fls_17_Dmu_ReadWordsSync(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15472                       (Fls_17_Dmu_AddressType)BlkAddress,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15473                       /*MISRA2012_RULE_1_3_JUSTIFICATION:undefined behavior is
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15474                       not expected because the called function limits the array
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15475                       access to the length passed.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15476                       BccBuffer,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15477                       (FEE_DFLASH_PAGE_SIZE / FEE_DFLASH_WORD_SIZE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15478          /* [cover parentID={470B4610-1CD1-4687-9FA2-78D3026B63AF}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15479          if(ReadStat == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15480          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15481            Bcc = (uint16)(BccBuffer[0] & FEE_16_BIT_ALL_ONES);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15482            BccComp = (uint16)((BccBuffer[0] >> 16) & FEE_16_BIT_ALL_ONES);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15483            /* [cover parentID={50FF8EC8-776E-4f1d-87E0-3C8B253ABED5}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15484            if(BccComp != ((~Bcc) & (uint16)FEE_16_BIT_ALL_ONES))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15485            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15486              Bcc = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15487            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15488          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15489  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15490        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15491        /* [cover parentID={EEBCD590-E211-40d0-8470-7BBF5C94D55A}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15492        Set flag as E_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15493        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15494        RetVal = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15495        BlockInfoPtr->Bcc = Bcc;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15496        /* [cover parentID={84022884-66C0-4364-947A-9AA24DDED927}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15497        Check for ECC error
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15498        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15499        /*Check if FLS returns E_NOT_OK due to ECC error*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15500        if(ReadStat == E_NOT_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15501        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15502          /* [cover parentID={7D8259E7-347D-437b-A75F-6F09AD98B67F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15503          Set flag as E_NOT_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15504          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15505          RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15506        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15507      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15508      /* [cover parentID={F9339422-88E3-4ff0-A521-1B07D811FC03}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15509      Safety is enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15510      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15511      #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15512      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15513      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15514        /* [cover parentID={466FD2BA-81EE-4f43-8BAF-D8E78D7B642E}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15515        Report safety error as FEE_E_INVALID_BLOCK_NO
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15516        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15517        Fee_lReportError(FEE_SID_GETQUASISTATICBLOCKINFO,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15518                        FEE_SE_INVALID_BLOCK_NO, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15519      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15520      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15521    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15522    /* [cover parentID={5C0A2BB8-3CA9-45a1-8A1F-6FC37B34FEB9}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15523    Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15524    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15525    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15526  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15527  }/*End of Fee_17_GetQuasiStaticBlockInfo */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15528  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15529  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15530  ** Syntax : static void Fee_lQsErase(void)                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15531  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15532  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15533  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15534  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15535  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15536  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15537  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15538  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15539  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15540  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15541  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15542  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15543  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15544  ** Description : This function Performs various state transition handling     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15545  ** during QS Block erase operation                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15546  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15547  /* [cover parentID={DBDCD90B-D850-47cd-9774-802FFDF31256}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15548  Fee_lQsErase
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15549  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15550  /* [cover parentID={DB0128CB-3C66-4925-861F-D95EDC4F045B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15551  static void Fee_lQsErase(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15552  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15553    uint16                UserBlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15554    uint16        BlockInstances;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15555    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15556    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15557    UserBlockIndex = StateDataPtr->FeePendEraseInfo.CacheIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15558  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15559    /* [cover parentID={089BD1C3-CB3E-4fe3-A592-9C5B14AC8786}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15560    Has QS erase started?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15561    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15562    if(StateDataPtr->FeeQsState == (uint8)FEE_QS_START_ERASE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15563    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15564      Fee_lQsBlockErase();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15565  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15566      StateDataPtr->FeeQuasiBlkInstanceTemp = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15567      /* set the cache state to erase started */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15568    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15569    /* [cover parentID={E98FA218-509E-4272-8C45-5574A60DE694}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15570    else if(StateDataPtr->FeeQsState == (uint8)FEE_QS_ERASE_COMPLETE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15571    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15572      StateDataPtr->FeeQuasiBlkInstanceTemp = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15573      BlockInstances = StateDataPtr->FeePendEraseInfo.BlockInstances;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15574      /* set the cache state to erase completed */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15575      /*MISRA2012_RULE_10_4_JUSTIFICATION:Types are same. It is unsigned int*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15576      /* [cover parentID={D24D87E7-CCA6-4cab-B92C-69CF71C6AD7E}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15577      while(BlockInstances != 0)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15578      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15579        StateDataPtr->FeeBlockInfo[UserBlockIndex].Status.State =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15580          FEE_QS_ERASE_COMPLETE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15581        BlockInstances--;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15582        UserBlockIndex++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15583      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15584      StateDataPtr->FeePendEraseInfo.BlockInstances = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15585      Fee_lHandleQsJobSuccess();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15586    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15587    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15588    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15589      /* [cover parentID={6273CF87-5A99-47e4-9039-C5CBF79A8783}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15590      Fee_lQsProgState();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15591    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15592  }/*End of Fee_lQsErase */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15593  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15594  #if (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15595  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15596  ** Syntax : static void Fee_lQsResumeErase(void)                              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15597  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15598  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15599  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15600  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15601  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15602  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15603  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15604  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15605  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15606  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15607  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15608  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15609  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15610  ** Description : This function resumes the previous erase operation which was **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15611  ** suspended due to another Read/Write User job                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15612  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15613   /* [cover parentID={AF20F0AC-9EC9-4de3-8D10-8980E23D42CE}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15614  static void Fee_lQsResumeErase(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15615  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15616    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15617  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15618    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15619  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15620    /* [cover parentID={AA3A4028-DA6F-43ba-8FF5-B0E79DA49A94}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15621    /* [cover parentID={5DB255C6-A64A-49ff-819C-7FBD0DF72083}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15622    if(E_OK == Fls_17_Dmu_ResumeErase())
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15623    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15624      StateDataPtr->FeeQsEraseSuspend = FEE_ERASE_NOT_SUSPENDED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15625      StateDataPtr->FeeQsState = (uint8)FEE_QS_PROG_STATE_ERASE_COMPLETE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15626      StateDataPtr->FeeQsJobStatus = FEE_JOB_REQSTD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15627      StateDataPtr->FeeQsJob = FEE_ERASE_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15628      StateDataPtr->FeeQsJobResult = MEMIF_JOB_PENDING;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15629      StateDataPtr->FeePendReqStatus = FEE_REQ_QUASI_ERASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15630  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15631    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15632    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15633    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15634      /* Raise the job error and illegal notification*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15635  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15636      Fee_lHandleQsJobFailure((FEE_NOT_CANCEL));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15637      if(Fee_CfgPtr->FeeQsIllegalStateNotification != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15638      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15639      /* [cover parentID={7BE5FCF6-9F96-43b6-87AC-E7AB8B51A9C6}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15640        Fee_CfgPtr->FeeQsIllegalStateNotification();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15641      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15642  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15643    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15644  }/*End of Fee_lQsResumeErase */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15645  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15646  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15647  ** Syntax : static void Fee_lRegisterQsRead(const uint16 BlockNumber,         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15648  ** const uint16 BlockOffset, uint8 *const DataBufferPtr, const uint16 Length) **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15649  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15650  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15651  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15652  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15653  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15654  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15655  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15656  ** Parameters (in) :  BlockNumber : Logical block numberNone                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15657  **                    BlockOffset : Read address offset within the block      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15658  **                    Length      : Number of bytes to be read                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15659  **                    DataBufferPtr : pointer to data buffer where the qs     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15660  **                                    block data in Dflash will be updated    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15661  ** Parameters (out):  DataBufferPtr : None                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15662  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15663  ** Return value    :  Std_ReturnType                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15664  **                    E_OK : Request is registered.                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15665  **                    E_NOT_OK : Request is not registered. FEE module is busy**
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15666  **                     in servicing other request.                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15667  ** Description : This function will register the QS read request in the       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15668  ** pending request buffer if FEE is Idle or QS Erase is ongoing and erase     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15669  ** suspend enabled                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15670  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15671  /* [cover parentID={1E4145B5-4D70-49de-B122-D8AB268DAD76},
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15672  {A8409AA6-4B75-47f3-82BA-1756DBF2FB5B}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15673  Fee_lRegisterQsRead
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15674  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15675  static Std_ReturnType Fee_lRegisterQsRead( const uint16 BlockNumber,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15676      const uint16 BlockOffset, uint8 * const DataBufferPtr, const uint16 Length)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15677  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15678    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15679    Std_ReturnType RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15680    MemIf_StatusType   ReturnStatus;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15681    Fee_PendReqBufType   *PendReqPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15682    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15683    PendReqPtr = &(StateDataPtr->FeePendReqInfo);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15684  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15685    #if (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15686  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15687    /* check whether quasi erase job is ongoing */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15688    /* [cover parentID={D4567254-3099-4a29-99DC-EC655619A6CE}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15689    if((StateDataPtr->FeeQsState == (uint8)FEE_QS_PROG_STATE_ERASE_COMPLETE) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15690        (StateDataPtr->FeeQsJobStatus == FEE_JOB_REQSTD))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15691    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15692      /* [cover parentID={AFAF3581-1296-4dfa-A9C2-109D92694AE7}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15693      Initiate suspend erase and update flag status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15694      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15695      /* erase is ongoing and can be suspended */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15696      RetVal = Fls_17_Dmu_SuspendErase();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15697      /* [cover parentID={36EAE65E-A4AA-41b5-A59F-8D02713A64FD}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15698      if(RetVal == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15699      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15700        StateDataPtr->FeeQsEraseSuspend = FEE_ERASE_SUSPENDED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15701        StateDataPtr->FeeQsJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15702      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15703    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15704    else if(StateDataPtr->FeeQsEraseSuspend == FEE_ERASE_SUSPENDED)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15705    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15706      RetVal =  E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15707      StateDataPtr->FeeQsJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15708    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15709    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15710    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15711    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15712      /* [cover parentID={B16224CA-4556-4831-9F2C-0C75397128F7}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15713      Check FEE driver status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15714      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15715      /* check the Fee Driver status */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15716      ReturnStatus = Fee_lGetStatus();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15717      /* [cover parentID={A280A970-50B9-4fa9-B2D2-BB5AE5A9C9B4}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15718      Is the driver busy?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15719      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15720      /* As per new request read should be accepted for MEMIF_BUSY_INTERNAL */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15721      if(ReturnStatus == MEMIF_BUSY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15722      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15723        /* [cover parentID={9D93D99A-D25E-4f2b-BD80-09B18D88B192}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15724        Set Flag as NOT OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15725        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15726        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15727    #if(FEE_RUNTIME_ERROR_DETECT == STD_ON) || (((FEE_DEV_ERROR_DETECT == STD_ON)\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15728      || (FEE_SAFETY_ENABLE == STD_ON)) && (MCAL_AR_VERSION == MCAL_AR_422))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15729      #if(MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15730      Fee_lReportError(FEE_SID_READ, FEE_E_BUSY, FEE_RUNTIME_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15731    #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15732      Fee_lReportError(FEE_SID_READ, FEE_E_BUSY, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15733    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15734    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15735      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15736      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15737      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15738        /* [cover parentID={763A9DFF-B6D9-4c82-9D76-AE6D7E6E8045}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15739        Set Flag as OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15740        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15741        RetVal = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15742      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15743    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15744    /* [cover parentID={99954DAF-8A75-4d09-A05E-6C9140E939F4}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15745    if(RetVal == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15746    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15747      /* [cover parentID={04623D01-D44E-43c8-B774-DF745FF3D1E7}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15748      Store the read request parameters in the Pending buffer structure
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15749      Update QS job as read job and job result as MEMIF_JOB_PENDING
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15750      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15751      /* Store the read request parameters in the Pending buffer structure */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15752      PendReqPtr->BlockNumber = BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15753      PendReqPtr->BlockOffset = BlockOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15754      PendReqPtr->DataBufferPtr = DataBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15755      PendReqPtr->Length = Length;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15756  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15757      StateDataPtr->FeePendReqStatus = FEE_REQ_QUASI_READ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15758      StateDataPtr->FeeQsJobResult = MEMIF_JOB_PENDING;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15759      StateDataPtr->FeeQsJob = FEE_READ_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15760      StateDataPtr->FeeCurrReqBlockNum = BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15761  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15762      /* Set this flag to start GC and cache update process before serving write
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15763         request.This will insure proper write operation in case GC is disabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15764         during FEE initialization */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15765      StateDataPtr->FeeStatusFlags.FeeStartInitGC = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15766    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15767    /* [cover parentID={A2ACCDE5-7C17-4956-9768-481F8D5BA8B4}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15768    Return Flag status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15769    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15770    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15771    /* [cover parentID={66C90A49-B70B-45e0-A449-F0345D62201C}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15772    Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15773    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15774  }/*End of Fee_lRegisterQsRead */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15775  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15776  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15777  ** Syntax : static void Fee_lQsRead(void)                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15778  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15779  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15780  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15781  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15782  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15783  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15784  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15785  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15786  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15787  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15788  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15789  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15790  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15791  ** Description : This function Triggers QS Block Data read on D-Flash as per  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15792  ** Block details in pending Request buffer                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15793  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15794  /* [cover parentID={F130D237-0765-4aad-A128-2C2018AA1647}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15795  Fee_lQsRead
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15796  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15797   /* [cover parentID={7482B9C5-32DE-4f2d-9522-1349792154BC}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15798  static void Fee_lQsRead(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15799  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15800    Fee_StateDataType    *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15801    const Fee_BlockType  *PendReqBlkPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15802    uint32                SrcAddress;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15803    uint16                PendReqBlkNum;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15804    uint16                PendReqBlkIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15805    uint16        Length;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15806    Std_ReturnType        RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15807  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15808    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15809    Length = StateDataPtr->FeePendReqInfo.Length;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15810    PendReqBlkNum = StateDataPtr->FeePendReqInfo.BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15811  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15812    /* [cover parentID={92A05FD6-C687-4127-8AF7-A2C80D1A3274}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15813    if(Length > ((uint16)0))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15814    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15815      /* [cover parentID={FAF0FCFC-BBBD-4d45-BBB2-7F16531D99AE}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15816      PendReqBlkIndex = Fee_lGetUsrBlockIndex(PendReqBlkNum);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15817      PendReqBlkPtr = &(Fee_CfgPtr->FeeBlockConfigPtr[PendReqBlkIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15818      SrcAddress = PendReqBlkPtr->Address;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15819      /* [cover parentID={8B308AEE-F808-4f1c-B189-863340AC1B16}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15820      Update the source address by accessing the address of the block required and adding QS data offset to it(36 bytes)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15821      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15822      /* point it to right offset location */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15823      /*MISRA2012_RULE_10_4_JUSTIFICATION:Types are same. It is unsigned int*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15824      SrcAddress += StateDataPtr->FeePendReqInfo.BlockOffset + FEE_QS_DATA_OFFSET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15825      /* [cover parentID={65B9927E-22E2-4af0-B17A-AC7007AF1EA1}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15826      RetVal = Fls_17_Dmu_Read((Fls_17_Dmu_AddressType)SrcAddress,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15827                     StateDataPtr->FeePendReqInfo.DataBufferPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15828                     (Fls_17_Dmu_LengthType)StateDataPtr->FeePendReqInfo.Length);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15829      /* [cover parentID={604268C2-1878-44b0-8A50-C6C51299A9D2}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15830      if(RetVal == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15831      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15832        StateDataPtr->FeeQsState = FEE_REQ_QUASI_READ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15833        StateDataPtr->FeeQsJobStatus = FEE_JOB_REQSTD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15834      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15835      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15836      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15837        /* Call the Fee_lHandleQsJobFailure with  (FEE_NOT_CANCEL) to notify
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15838          user about failed of job*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15839        Fee_lHandleQsJobFailure((FEE_NOT_CANCEL));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15840      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15841    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15842    /*Reset the status if length is zero*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15843    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15844    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15845  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15846      Fee_lHandleQsJobSuccess();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15847  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15848    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15849  }/*End of Fee_lQsRead */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15850  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15851  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15852  ** Syntax : static void Fee_lRegisterQsWrite(                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15853  **                               const uint8 * const DataWriteBufferPtr,      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15854  **                               const Fee_BlockType * const BlockPtr)        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15855  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15856  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15857  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15858  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15859  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15860  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15861  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15862  ** Parameters (in) :  BlockPtr    : Pointer to block configuration            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15863  **                 :  DataWriteBufferPtr : pointer to data buffer             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15864  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15865  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15866  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15867  ** Return value    :  Std_ReturnType                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15868  **                    E_OK : Request is registered.                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15869  **                    E_NOT_OK : Request is not registered. FEE module is busy**
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15870  **                     in servicing other request.                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15871  ** Description : This function will register the QS write request in the      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15872  ** pending request buffer if FEE is Idle or QS Erase is ongoing and erase     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15873  ** suspend is enabled                                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15874  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15875  /* [cover parentID={EA51FD4F-7011-4d3c-BDE6-69A23D11E8D0},
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15876                       {64B68921-2DA4-4e1e-A7DC-5947FA87E4C7}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15877  Fee_lRegisterQsWrite
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15878  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15879  static Std_ReturnType Fee_lRegisterQsWrite( \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15880      const uint8 * const DataWriteBufferPtr, \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15881      const Fee_BlockType * const BlockPtr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15882  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15883    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15884    Std_ReturnType      RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15885    MemIf_StatusType    ReturnStatus;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15886    Fee_PendReqBufType  *PendReqPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15887    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15888    PendReqPtr = &(StateDataPtr->FeePendReqInfo);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15889  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15890    #if (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15891    /* [cover parentID={47B512BE-4EE1-42a4-BBD5-E7D00262BD79}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15892    if((StateDataPtr->FeeQsState == (uint8)FEE_QS_PROG_STATE_ERASE_COMPLETE) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15893        (StateDataPtr->FeeQsJobStatus == FEE_JOB_REQSTD))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15894    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15895      /* [cover parentID={F8D319B0-90A3-4f96-968B-EA48DF7EC5CE}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15896      Initiate suspend erase and update flag status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15897      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15898      RetVal = Fls_17_Dmu_SuspendErase();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15899      /* [cover parentID={D80642F4-C1DB-47e9-92A1-25CACC077210}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15900      if(RetVal == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15901      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15902        /* [cover parentID={8DF90125-6B71-4aa1-821D-E7920B09DB30}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15903        StateDataPtr->FeeQsEraseSuspend = FEE_ERASE_SUSPENDED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15904        StateDataPtr->FeeQsJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15905      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15906    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15907  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15908    else if(StateDataPtr->FeeQsEraseSuspend == FEE_ERASE_SUSPENDED)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15909    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15910      /* [cover parentID={31CDD652-A210-4101-B4C1-1166FDC5700B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15911      RetVal =  E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15912      StateDataPtr->FeeQsJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15913    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15914    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15915    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15916    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15917      /* [cover parentID={47EC0F19-3082-46ca-AF45-9400AEDE4752}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15918      Get Fee job status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15919      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15920      ReturnStatus = Fee_lGetStatus();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15921  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15922      /*Check if module is busy with NVM request. if not accept job else reject
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15923      job */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15924      /* [cover parentID={94A830E6-9C89-4e85-A428-530FE9526896}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15925      if(ReturnStatus == MEMIF_BUSY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15926      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15927        /* [cover parentID={3869D8A5-6BEF-45b8-9C1E-FFC51AE85BE0}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15928        Update Flag status as E_NOT_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15929        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15930    #if(FEE_RUNTIME_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15931        /* [cover parentID={E624BB6C-86BB-43a1-BCD1-17F919706233}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15932        Report runtime error FEE_E_BUSY error
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15933        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15934        Fee_lReportError(FEE_SID_WRITE, FEE_E_BUSY, FEE_RUNTIME_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15935    #elif(((FEE_DEV_ERROR_DETECT == STD_ON) || (FEE_SAFETY_ENABLE == STD_ON)) \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15936    && (MCAL_AR_VERSION == MCAL_AR_422))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15937        Fee_lReportError(FEE_SID_WRITE, FEE_E_BUSY, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15938    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15939        /* [cover parentID={3869D8A5-6BEF-45b8-9C1E-FFC51AE85BE0}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15940        Update Flag status as E_NOT_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15941        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15942        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15943      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15944      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15945      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15946        /* [cover parentID={A2A1E98F-3B35-43d1-BA0A-0AA02CFB2CBA}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15947        Update Flag status as E_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15948        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15949        RetVal = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15950      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15951    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15952    if(RetVal == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15953    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15954      /* [cover parentID={288C8F43-5267-4d50-A935-106DD5EFE509}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15955      Store the read request parameters in the pending buffer structure
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15956      Set QsJobResult to MEMIF_JOB_PENDING
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15957      Set Pending request status as FEE_REQ_QUASI_WRITE
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15958      Set QsJob as FEE_WRITE_JOB
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15959      Set QsState as FEE_QS_PROG_STATE_WRITE_STARTED
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15960      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15961      /* Store the read request parameters in the Pending buffer structure */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15962      PendReqPtr->BlockNumber = BlockPtr->BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15963      PendReqPtr->DataWriteBufferPtr = DataWriteBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15964      PendReqPtr->Length = BlockPtr->Size;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15965      StateDataPtr->FeePendReqStatus = FEE_REQ_QUASI_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15966      StateDataPtr->FeeQsJobResult = MEMIF_JOB_PENDING;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15967      StateDataPtr->FeeQsJob = FEE_WRITE_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15968      StateDataPtr->FeeQsState = (uint8)FEE_QS_PROG_STATE_WRITE_STARTED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15969      StateDataPtr->FeeCurrReqBlockNum = BlockPtr->BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15970  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15971      /* Set this flag to start GC and cache update process before serving write
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15972         request.This will insure proper write operation in case GC is disabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15973         during FEE initialization */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15974      StateDataPtr->FeeStatusFlags.FeeStartInitGC = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15975      StateDataPtr->FeeStatusFlags.FeeWriteInvldQSeraseAPICalled = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15976  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15977    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15978    /* [cover parentID={565EC67C-EC86-415f-8FCA-BEA8EDD945A6}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15979    Return Flag status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15980    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15981    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15982    /* [cover parentID={7FAEC9EB-835A-4aae-83AC-B22032F0BD02}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15983    Return
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15984    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15985  }/*End of Fee_lRegisterQsWrite */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15986  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15987  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15988  ** Syntax : static void Fee_lQsWrite(void)                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15989  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15990  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15991  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15992  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15993  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15994  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15995  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15996  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15997  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15998  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15999  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16000  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16001  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16002  ** Description : This function Performs various state transition handling     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16003  ** during QS Block write operation                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16004  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16005  /* [cover parentID={243E4334-3CBC-489d-BA93-F61DE6961841}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16006  Fee_lQsWrite
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16007  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16008  /* [cover parentID={0E72030F-3B05-4217-957B-AFE3F2A1037D}] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16009  static void Fee_lQsWrite(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16010  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16011    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16012    uint16                UserBlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16013    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16014    UserBlockIndex = StateDataPtr->FeePendReqInfo.CacheIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16015    switch(StateDataPtr->FeeQsState)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16016    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16017      /* [cover parentID={47A2416C-2A6F-4466-B820-9D8E62450660}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16018      case (uint8)FEE_QS_START_BCC_WRITE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16019      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16020        /* set the cache state to write started */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16021        /* [cover parentID={4F4CC0E1-4BB8-4bb9-B2AF-4ED121D63FD8}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16022        StateDataPtr->FeeBlockInfo[UserBlockIndex].Status.State =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16023          FEE_QS_WRITE_STARTED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16024        Fee_lQsBccWrite();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16025        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16026      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16027      /* [cover parentID={82A3F878-9411-4e6b-8B06-E5FBE3EEE3A6}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16028      case (uint8)FEE_QS_START_BLOCK_WRITE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16029      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16030        /* [cover parentID={973A9D02-6A91-4911-8997-44D4974EF737}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16031        Fee_lQsBlockWrite();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16032        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16033      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16034      /* [cover parentID={CD60B558-AB84-4e35-9286-975656847130}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16035      case (uint8)FEE_QS_WRITE_COMPLETE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16036      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16037        /* set the cache state to write complete */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16038        StateDataPtr->FeeBlockInfo[UserBlockIndex].Status.State =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16039          FEE_QS_WRITE_COMPLETE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16040        /* [cover parentID={A389B822-D146-4734-902F-69E4C27FDD12}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16041        Fee_lHandleQsJobSuccess();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16042        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16043      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16044      case (uint8)FEE_QS_PROG_STATE_WRITE_COMPLETE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16045      case (uint8)FEE_QS_PROG_STATE_WRITE_STARTED:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16046      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16047        /* [cover parentID={958BB304-6240-44ed-87CE-43E3F302AFD9}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16048        Fee_lQsProgState();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16049        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16050      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16051    default:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16052    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16053      break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16054    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16055    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16056  }/*End of Fee_lQsWrite */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16057  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16058  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16059  ** Syntax : static void Fee_lQsBccWrite(void)                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16060  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16061  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16062  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16063  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16064  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16065  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16066  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16067  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16068  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16069  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16070  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16071  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16072  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16073  ** Description : This function Performs QS Block BCC write operation          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16074  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16075  /* [cover parentID={869C59BD-0283-4a6b-8383-6BF55AA34E50}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16076  static void Fee_lQsBccWrite(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16077  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16078    uint32                DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16079    const uint32*         SrcPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16080    Fee_StateDataType    *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16081    const Fee_BlockType  *PendReqBlkPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16082    Std_ReturnType        RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16083    uint32                Bcc;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16084    uint32                BccComp;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16085    uint16                PendReqBlkNum;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16086    uint16                PendReqBlkIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16087  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16088    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16089    PendReqBlkNum = StateDataPtr->FeePendReqInfo.BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16090    PendReqBlkIndex = Fee_lGetUsrBlockIndex(PendReqBlkNum);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16091    PendReqBlkPtr = &(Fee_CfgPtr->FeeBlockConfigPtr[PendReqBlkIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16092    Bcc = (uint32)Fee_lQsGetBcc(PendReqBlkIndex);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16093    /* Bcc += FEE_ONE; */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16094    BccComp = ~Bcc;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16095    BccComp &= BccComp;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16096  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16097    StateDataPtr->FeeTempArray[0] = (BccComp << FEE_SIXTEEN);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16098    StateDataPtr->FeeTempArray[0] |= (Bcc);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16099  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16100    StateDataPtr->FeeTempArray[1] =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16101      /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16102      access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16103  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16104      *(const uint32*)(StateDataPtr->FeePendReqInfo.DataWriteBufferPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16105    /* [cover parentID={EEC90E79-187D-446e-8FE9-1A46DD94F90F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16106    Set Write address to BCC page of block
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16107    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16108    DestAddr = PendReqBlkPtr->Address + (FEE_QS_STATE_CYCLE_COUNT_OFFSET);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16109    SrcPtr = StateDataPtr->FeeTempArray;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16110    /* [cover parentID={3E07EA18-F991-4f55-969F-5F6A77C38AA6}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16111    Initiate FLS write
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16112    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16113    RetVal = Fls_17_Dmu_Write(DestAddr, (const uint8*)SrcPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16114                              (Fls_17_Dmu_LengthType)FEE_DFLASH_PAGE_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16115  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16116    /* [cover parentID={89715503-1E84-415d-A1F8-E971DB881ECE}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16117    if( RetVal == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16118    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16119      StateDataPtr->FeeQsState = (uint8)FEE_QS_START_BLOCK_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16120      StateDataPtr->FeeQsJobStatus = (uint8)FEE_JOB_REQSTD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16121    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16122    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16123    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16124      /* Call the Fee_lHandleQsJobFailure with  (FEE_NOT_CANCEL) to notify
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16125      user about failed of job*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16126      /* [cover parentID={7A423D5D-41C1-4bf4-AAF8-2B7D036FA8D6}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16127      Fee_lHandleQsJobFailure((FEE_NOT_CANCEL));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16128    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16129  }/*End of Fee_lQsBccWrite */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16130  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16131  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16132  ** Syntax : static Uint16 Fee_lQsGetBcc(const uint16 Blkindex)                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16133  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16134  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16135  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16136  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16137  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16138  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16139  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16140  ** Parameters (in) :  Blkindex    : Block index in configuration table        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16141  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16142  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16143  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16144  ** Return value    :  BCC value which is highest among all the instances      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16145  ** of the QS Block                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16146  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16147  ** Description : This function will Calculates the highest Bcc value among    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16148  ** the written QS Block instances and returns the value to the caller         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16149  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16150  /* [cover parentID={91987F5F-298F-4670-A378-51F55A1D71A9}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16151  Fee_lQsGetBcc
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16152  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16153  /* [cover parentID={12B8A107-1CA5-4e91-8A88-C75C44118A34}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16154  static uint16 Fee_lQsGetBcc(const uint16 Blkindex)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16155  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16156    Fee_StateDataType    *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16157    Fee_CacheType  *CachePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16158    Fee_CacheType  *TempCachePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16159    const Fee_BlockType  *BlkPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16160    const Fee_BlockType  *TempBlkptr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16161    uint16                Instances;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16162    uint16                Bcc;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16163  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16164  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16165    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16166    /*MISRA2012_RULE_18_1_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16167          array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16168          Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16169          The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16170    CachePtr = &(StateDataPtr->FeeBlockInfo[Blkindex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16171    TempCachePtr = CachePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16172    TempBlkptr = &(Fee_CfgPtr->FeeBlockConfigPtr[FEE_QSBLOCK_BEGIN_INDEX]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16173    BlkPtr = &(TempBlkptr[(Blkindex - FEE_QSBLOCK_BEGIN_INDEX)]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16174    Instances = BlkPtr->Instances;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16175    /* [cover parentID={E23245F9-8B93-485b-B4F9-F43F7570DAC0}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16176    while((Instances == FEE_RESET) && (BlkPtr != TempBlkptr))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16177    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16178      BlkPtr--;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16179      CachePtr--;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16180      Instances = BlkPtr->Instances;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16181    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16182  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16183    Bcc = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16184  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16185    /* Block with 1 instance */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16186  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16187    /*MISRA2012_RULE_18_1_JUSTIFICATION: Pointer arithmetic other than array
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16188    indexing used for FEE application buffers.Pointers are accessing the correct
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16189    memory range locations.The access range is within the boundaries of the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16190    buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16191    /* [cover parentID={475BE9FD-FE73-42d1-9A24-AF611E684202}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16192    if((Instances == FEE_ONE) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16193        (CachePtr->Status.State == FEE_QS_WRITE_STARTED))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16194    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16195      /*MISRA2012_RULE_18_1_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16196            array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16197            Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16198            The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16199      /* [cover parentID={93877B33-93AB-470c-B46B-6E6D536E5ACE}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16200      if(CachePtr->Blkcylcnt < FEE_MAX_BCC_QS )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16201      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16202        /*MISRA2012_RULE_18_1_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16203            array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16204            Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16205            The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16206        CachePtr->Blkcylcnt++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16207      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16208  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16209      /*MISRA2012_RULE_18_1_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16210            array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16211            Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16212            The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16213      Bcc = CachePtr->Blkcylcnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16214    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16215    /* [cover parentID={680965C4-21AE-4125-A577-663B75585824}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16216    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16217    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16218      /* Block with more than 1 instance */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16219      /* [cover parentID={680965C4-21AE-4125-A577-663B75585824}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16220      while(Instances != FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16221      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16222        /*MISRA2012_RULE_18_1_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16223              array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16224              Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16225              The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16226        /* [cover parentID={8F086B08-86B8-4b28-9C1F-6437249269D0}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16227        if(CachePtr->Status.State == FEE_QS_WRITE_STARTED)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16228        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16229          TempCachePtr = CachePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16230        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16231        /*MISRA2012_RULE_18_1_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16232              array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16233              Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16234              The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16235        /* [cover parentID={393351FC-C93D-4ce8-9E33-AD8B37B202C9}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16236        if(CachePtr->Blkcylcnt > Bcc)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16237        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16238          /*MISRA2012_RULE_18_1_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16239                array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16240                Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16241                The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16242          Bcc = CachePtr->Blkcylcnt;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16243        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16244  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16245        /*MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16246              array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16247              Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16248              The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16249        /*MISRA2012_RULE_18_1_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16250              array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16251              Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16252              The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16253        CachePtr += FEE_ONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16254        Instances--;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16255      };
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16256  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16257      /*Limit the BCC to max*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16258      /* [cover parentID={094340D8-FC6D-4d46-AE51-27FBE0555D1F}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16259      if(Bcc < FEE_MAX_BCC_QS)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16260      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16261        Bcc++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16262      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16263  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16264      /*MISRA2012_RULE_18_1_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16265            array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16266            Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16267            The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16268      TempCachePtr->Blkcylcnt = Bcc;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16269    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16270  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16271    return(Bcc);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16272  }/*End of Fee_lQsGetBcc */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16273  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16274  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16275  ** Syntax : static void Fee_lQsProgState(void)                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16276  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16277  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16278  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16279  ** Sync/Async:  Asynchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16280  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16281  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16282  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16283  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16284  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16285  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16286  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16287  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16288  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16289  ** Description : This function Triggers programming of QS Block state         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16290  ** information on D-Flash as per FeeQsState Global Variable                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16291  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16292  /* [cover parentID={97D8B4FE-A233-48ab-956D-F8505B433CBB}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16293  Fee_lQsProgState
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16294  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16295  /* [cover parentID={BD786207-9880-4a16-AEBE-31F04A3CD5E2}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16296  static void Fee_lQsProgState(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16297  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16298    Fee_StateDataType    *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16299    const Fee_BlockType  *TempBlkptr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16300    uint32                DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16301    uint32               *SrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16302    uint16                BlkIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16303    uint32                BlkSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16304    Fls_17_Dmu_LengthType        DataLength;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16305    Std_ReturnType        RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16306  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16307    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16308  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16309    if(StateDataPtr->FeePendReqStatus == FEE_REQ_QUASI_ERASE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16310    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16311      BlkIndex = StateDataPtr->FeePendEraseInfo.CacheIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16312    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16313    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16314    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16315      BlkIndex = StateDataPtr->FeePendReqInfo.CacheIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16316    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16317  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16318    TempBlkptr = &(Fee_CfgPtr->FeeBlockConfigPtr[BlkIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16319    BlkSize = TempBlkptr->Size;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16320    DestAddr = TempBlkptr->Address +
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16321  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16322               (StateDataPtr->FeeQuasiBlkInstanceTemp * BlkSize);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16323    /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16324      access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16325    SrcAddr = (uint32 *)(StateDataPtr->FeeReadWriteBuffer);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16326    DataLength = FEE_DFLASH_PAGE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16327  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16328    switch(StateDataPtr->FeeQsState)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16329    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16330      /* [cover parentID={E577F060-D706-4ed0-85E0-0DADE5DA77DE}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16331      case (uint8)FEE_QS_PROG_STATE_ERASE_STARTED:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16332      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16333        /* [cover parentID={6583BDB6-3CFB-4e8e-8706-E7EFB657CAE7}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16334        DestAddr += FEE_QS_STATE_ERASE_STARTED_OFFSET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16335        *SrcAddr = FEE_QS_STATE_ERASE_STARTED_LSW;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16336        SrcAddr[1] = FEE_QS_STATE_ERASE_STARTED_MSW;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16337        /* [cover parentID={CD256792-4FE8-4c52-85E5-B9FC506D2290}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16338        StateDataPtr->FeeQsState = (uint8)FEE_QS_PROG_STATE_DESTROY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16339        /* [cover parentID={DA9C3CD7-2B96-48e3-B4FC-D449ECAD102F}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16340        StateDataPtr->FeeBlockInfo[BlkIndex].Status.State =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16341          FEE_QS_ERASE_STARTED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16342        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16343      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16344      /* [cover parentID={41DAF54D-52B9-4c9d-BC7C-5F4BA0FEFA9A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16345      case (uint8)FEE_QS_PROG_STATE_DESTROY:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16346      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16347        /* [cover parentID={952DCE45-BA21-4b28-BAC4-5C6DEB67E017}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16348        DataLength = FEE_DFLASH_PAGE_SIZE * FEE_THREE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16349        StateDataPtr->FeeQuasiBlkInstanceTemp += FEE_ONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16350        *SrcAddr = FEE_QS_STATE_DESTROY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16351  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16352        SrcAddr[1] = FEE_QS_STATE_DESTROY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16353  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16354        SrcAddr[2] = FEE_QS_STATE_DESTROY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16355  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16356        SrcAddr[3] = FEE_QS_STATE_DESTROY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16357  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16358        SrcAddr[4] = FEE_QS_STATE_DESTROY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16359  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16360        SrcAddr[5] = FEE_QS_STATE_DESTROY;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16361        /* [cover parentID={BE09DD6B-636A-4fad-8258-BF6F47B51E21}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16362        if(StateDataPtr->FeeQuasiBlkInstanceTemp ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16363            StateDataPtr->FeePendEraseInfo.BlockInstances)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16364        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16365          /* [cover parentID={EF5FC75F-BE81-483e-BC2D-1C2715F0745B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16366          StateDataPtr->FeeQsState = (uint8)FEE_QS_START_ERASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16367        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16368        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16369        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16370          /* [cover parentID={FD6702CD-198B-4f46-9981-9EBFC466D0C4}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16371          StateDataPtr->FeeQsState = (uint8)FEE_QS_PROG_STATE_ERASE_STARTED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16372        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16373        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16374      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16375      /* [cover parentID={7E7FAE14-9241-4f97-8D33-3892D559ED02}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16376      case (uint8)FEE_QS_PROG_STATE_ERASE_COMPLETE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16377      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16378        /* [cover parentID={D73F1E88-DB98-4638-BF0E-4CC50B84D5CE}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16379        *SrcAddr = FEE_QS_STATE_ERASE_COMPLETE_LSW;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16380        SrcAddr[FEE_ONE] = FEE_QS_STATE_ERASE_COMPLETE_MSW;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16381        StateDataPtr->FeeQuasiBlkInstanceTemp += FEE_ONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16382        if(StateDataPtr->FeeQuasiBlkInstanceTemp ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16383            StateDataPtr->FeePendEraseInfo.BlockInstances)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16384        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16385          /* [cover parentID={B61AC29F-AABA-432d-B273-63A251DCED5B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16386          StateDataPtr->FeeQsState = (uint8)FEE_QS_ERASE_COMPLETE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16387        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16388        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16389      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16390      /* [cover parentID={A98B26F1-4307-4840-8B6D-E597106209BD}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16391      case (uint8)FEE_QS_PROG_STATE_WRITE_COMPLETE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16392      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16393        /* [cover parentID={B630744B-323D-46dd-B666-7CCC9B34923C}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16394        DestAddr += FEE_QS_STATE_WRITE_COMPLETED_OFFSET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16395        *SrcAddr = FEE_QS_STATE_WRITE_COMPLETE_LSW;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16396        SrcAddr[FEE_ONE] = FEE_QS_STATE_WRITE_COMPLETE_MSW;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16397        /* [cover parentID={522C8CF1-8FCB-4da0-8EB5-3EB3DB4915DB}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16398        StateDataPtr->FeeQsState = (uint8)FEE_QS_WRITE_COMPLETE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16399        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16400      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16401      /* [cover parentID={88DB5DC7-0402-490c-8440-F27DE34C713B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16402      case (uint8)FEE_QS_PROG_STATE_WRITE_STARTED:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16403      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16404        /* [cover parentID={18EACC9E-293F-44a4-97A8-2127096E8A46}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16405        DestAddr += FEE_QS_STATE_WRITE_STARTED_OFFSET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16406        *SrcAddr = FEE_QS_STATE_WRITE_STARTED_LSW;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16407        SrcAddr[FEE_ONE] = FEE_QS_STATE_WRITE_STARTED_MSW;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16408        /* [cover parentID={302D45A6-6E23-414e-B5D2-529FE38C1229}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16409        StateDataPtr->FeeQsState = (uint8)FEE_QS_START_BCC_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16410        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16411      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16412      default:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16413      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16414        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16415      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16416    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16417  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16418    RetVal = Fls_17_Dmu_Write((Fls_17_Dmu_AddressType)DestAddr, (uint8 *)SrcAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16419                              DataLength);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16420    /* [cover parentID={498A7AA1-E622-4277-932C-A806E4FF518F}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16421    if( RetVal == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16422    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16423      StateDataPtr->FeeQsJobStatus = FEE_JOB_REQSTD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16424    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16425    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16426    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16427      /* Call the Fee_lHandleQsJobFailure with  (FEE_NOT_CANCEL) to notify
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16428      user about failed of job*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16429      Fee_lHandleQsJobFailure((FEE_NOT_CANCEL));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16430    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16431  }/*End of Fee_lQsProgState */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16432  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16433  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16434  ** Syntax : static void Fee_lQsBlockErase(void)                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16435  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16436  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16437  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16438  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16439  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16440  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16441  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16442  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16443  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16444  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16445  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16446  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16447  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16448  ** Description : This function Triggers Erase of QS Block on D-Flash as per   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16449  ** Block details in pending Request buffer                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16450  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16451  /* [cover parentID={4E00F903-9413-4788-B3B8-2F8B449891C9}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16452  Fee_lQsBlockErase
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16453  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16454  /* [cover parentID={D23FDB2A-69C1-42d3-9C8A-BA047BADB3F8}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16455  static void Fee_lQsBlockErase(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16456  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16457    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16458    const Fee_BlockType   *TempBlkptr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16459    uint32                 DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16460    uint16                 BlkIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16461    uint32                 BlkSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16462    Std_ReturnType         RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16463  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16464    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16465    BlkIndex = StateDataPtr->FeePendEraseInfo.CacheIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16466    TempBlkptr = &(Fee_CfgPtr->FeeBlockConfigPtr[BlkIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16467    BlkSize = TempBlkptr->Size;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16468    BlkSize = BlkSize * (StateDataPtr->FeePendEraseInfo.BlockInstances);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16469    DestAddr = TempBlkptr->Address;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16470  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16471    /* erase logical sector */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16472    RetVal = Fls_17_Dmu_Erase(DestAddr, (Fls_17_Dmu_LengthType)BlkSize);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16473  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16474    /* [cover parentID={67BE7120-986C-43e1-ABA1-1840E6CA0C67}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16475    if( RetVal == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16476    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16477      StateDataPtr->FeeQsJobStatus = FEE_JOB_REQSTD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16478      StateDataPtr->FeeQsState = (uint8)FEE_QS_PROG_STATE_ERASE_COMPLETE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16479    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16480    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16481    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16482      /* Call the Fee_lHandleQsJobFailure with  (FEE_NOT_CANCEL) to notify
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16483      user about failed of job*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16484      /* [cover parentID={8937D7B9-1C69-481e-8755-D0EEF4CD95F3}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16485      Fee_lHandleQsJobFailure((FEE_NOT_CANCEL));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16486    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16487  }/*End of Fee_lQsBlockErase */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16488  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16489  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16490  ** Syntax : static void Fee_lQsBlockWrite(void)                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16491  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16492  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16493  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16494  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16495  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16496  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16497  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16498  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16499  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16500  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16501  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16502  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16503  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16504  ** Description : This function Triggers write of QS Block on D-Flash as per   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16505  ** Block details in pending Request buffer                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16506  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16507  /* [cover parentID={A468F0A9-3CD5-4d96-BF03-7AA3FF7A9BF0}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16508  static void Fee_lQsBlockWrite(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16509  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16510    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16511    const Fee_BlockType   *TempBlkptr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16512    uint32                 DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16513    const uint32          *SrcAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16514    uint16                 BlkIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16515    uint16                 BlkSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16516    Std_ReturnType         RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16517    uint16                 PendReqBlkNum;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16518  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16519    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16520    PendReqBlkNum = StateDataPtr->FeePendReqInfo.BlockNumber;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16521    /* [cover parentID={7EC16D76-8BA7-422e-AD22-F325F7E097FD}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16522    BlkIndex = Fee_lGetUsrBlockIndex(PendReqBlkNum);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16523  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16524  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16525    TempBlkptr = &(Fee_CfgPtr->FeeBlockConfigPtr[BlkIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16526    BlkSize = (uint16)TempBlkptr->Size;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16527    BlkSize = BlkSize - (uint16)(FEE_QS_DATA_OFFSET_SECOND_PAGE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16528    DestAddr = TempBlkptr->Address + (FEE_QS_DATA_OFFSET_SECOND_PAGE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16529    /* [cover parentID={3E900673-9AA8-4412-9E35-9059BC781487}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16530    Set writing address to starting data page of block
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16531    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16532    /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16533      access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16534    SrcAddr = (const uint32 *)StateDataPtr->FeePendReqInfo.DataWriteBufferPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16535    /*MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic other than array
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16536    indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16537    Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16538    The access range is within the boundaries of the buffer.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16539    SrcAddr += 1;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16540  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16541    /* [cover parentID={E9626BC0-439E-4e6a-AA5C-CD3361CDDD81}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16542    Initiate FLS write
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16543    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16544    /* program logical sector */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16545    RetVal = Fls_17_Dmu_Write((Fls_17_Dmu_AddressType)DestAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16546                              (const uint8 *)SrcAddr, BlkSize);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16547  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16548    /* [cover parentID={25A1E92F-37EF-48f3-A7AF-BE0737D8811B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16549    if( RetVal == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16550    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16551      StateDataPtr->FeeQsJobStatus = FEE_JOB_REQSTD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16552      /* [cover parentID={A76A6EDD-A552-4bf0-806D-E17F7B7BE6BE}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16553      StateDataPtr->FeeQsState = (uint8)FEE_QS_PROG_STATE_WRITE_COMPLETE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16554    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16555    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16556    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16557      /* Call the Fee_lHandleQsJobFailure with  (FEE_NOT_CANCEL) to notify
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16558      user about failed of job*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16559      /* [cover parentID={35EC12B8-DBCF-4d79-B332-6E87548B7062}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16560      Fee_lHandleQsJobFailure((FEE_NOT_CANCEL));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16561    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16562  }/*End of Fee_lQsBlockWrite */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16563  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16564  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16565  ** Syntax : static void Fee_lMainQs(void)                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16566  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16567  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16568  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16569  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16570  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16571  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16572  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16573  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16574  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16575  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16576  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16577  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16578  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16579  ** Description : This routine is responsible for handling QS Block state      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16580  **               machine                                                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16581  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16582  /*[cover parentID={79707214-F807-47e8-B575-7208309EC646}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16583  static void Fee_lMainQs(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16584  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16585    const Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16586    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16587    #if (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16588  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16589    /* If qs erase job is suspended and there is qs write request then first
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16590    complete write request (FeePendReqStatus = FEE_REQ_QUASI_WRITE) and then
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16591    resume suspended erase job.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16592    /* [cover parentID={41688BD3-7090-4fb1-9668-34A2B637E19B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16593    if((StateDataPtr->FeeQsEraseSuspend == FEE_ERASE_SUSPENDED) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16594        (StateDataPtr->FeePendReqStatus == FEE_REQ_QUASI_ERASE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16595    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16596      Fee_lQsResumeErase();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16597    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16598    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16599    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16600    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16601      switch(StateDataPtr->FeeQsJob)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16602      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16603        /* [cover parentID={7B54EC55-2430-4f75-9AA4-73B4CD6B30D6}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16604        case FEE_READ_JOB:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16605        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16606          Fee_lQsRead();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16607          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16608        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16609        /* [cover parentID={D7DE52AA-7EB0-4f6a-94C3-A91D6A87011B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16610        case FEE_WRITE_JOB:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16611        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16612          Fee_lQsWrite();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16613          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16614        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16615        /* [cover parentID={C5D14D29-C4D9-4a9c-8E16-925792B76D37}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16616        case FEE_ERASE_JOB:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16617        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16618          Fee_lQsErase();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16619          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16620        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16621        default:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16622        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16623          break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16624        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16625      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16626    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16627  }/*End of Fee_lMainQs */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16628  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16629  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16630  ** Syntax : static void Fee_lHandleQsJobFailure(void)                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16631  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16632  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16633  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16634  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16635  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16636  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16637  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16638  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16639  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16640  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16641  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16642  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16643  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16644  ** Description : This function handles the QS job failure occurring due to    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16645  **               FLS operation failure                                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16646  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16647  /*[cover parentID={AE8F8DFA-2242-48d5-9150-45C3A7469B0C}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16648  static void Fee_lHandleQsJobFailure(const uint8 Error)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16649  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16650    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16651    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16652  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16653    #if(FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16654    /*Check if QS erase was suspended. If yes then set FeePendReqStatus to
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16655    FEE_REQ_QUASI_ERASE to set module status to busy. If the FeePendReqStatus
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16656    is FEE_REQ_QUASI_ERASE this mean resume failed so set FeePendReqStatus to
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16657    FEE_PEND_PREV_NO_REQ */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16658    /*[cover parentID={0D695180-FB71-40f9-8DED-1110060B97B5}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16659    if((StateDataPtr->FeeQsEraseSuspend == FEE_ERASE_SUSPENDED) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16660        (StateDataPtr->FeePendReqStatus != FEE_REQ_QUASI_ERASE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16661    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16662      StateDataPtr->FeePendReqStatus = FEE_REQ_QUASI_ERASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16663      StateDataPtr->FeeQsJob = FEE_ERASE_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16664    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16665    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16666    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16667    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16668      StateDataPtr->FeePendReqStatus = FEE_PEND_PREV_NO_REQ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16669      StateDataPtr->FeeQsJob = FEE_NO_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16670    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16671    StateDataPtr->FeeQsState = FEE_QS_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16672    StateDataPtr->FeeQsJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16673    /*[cover parentID={C1AD6FC2-FE07-42aa-9F80-B6FEA617044F}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16674    if( FEE_CANCEL != Error)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16675    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16676        /*[cover parentID={6BB95B02-8281-4751-A8F0-E87884F3CAA0}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16677        StateDataPtr->FeeQsJobResult = MEMIF_JOB_FAILED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16678    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16679    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16680    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16681      StateDataPtr->FeeQsJobResult = MEMIF_JOB_CANCELED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16682    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16683    /* Call user configured job Error notification */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16684    /*[cover parentID={6D5E65F4-FE32-448b-8984-496FEE1BAA06}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16685    if( Fee_CfgPtr->FeeQsJobErrorNotification != NULL_PTR )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16686    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16687      /* [cover parentID={F41FCFA0-2BD2-4b1d-9686-AA9314115E08}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16688      Call the notification function
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16689      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16690      (Fee_CfgPtr->FeeQsJobErrorNotification)();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16691    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16692  }/*End of Fee_lHandleQsJobFailure */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16693  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16694  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16695  ** Syntax : static void Fee_lHandleQsJobSuccess(void)                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16696  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16697  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16698  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16699  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16700  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16701  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16702  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16703  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16704  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16705  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16706  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16707  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16708  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16709  ** Description : This function performs QS global var status update after     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16710  **               successful completion of QS job operation                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16711  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16712  /*[cover parentID={67E2E638-3877-4d78-83AE-E443573796F2}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16713  static void Fee_lHandleQsJobSuccess(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16714  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16715    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16716    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16717  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16718    #if(FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16719    /*Check if QS erase was suspended. If yes then set FeePendReqStatus to
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16720    FEE_REQ_QUASI_ERASE to set module status to busy.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16721    /*[cover parentID={1ACC7EF7-AA20-4eef-9564-A1B1F48143E9}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16722    if(StateDataPtr->FeeQsEraseSuspend == FEE_ERASE_SUSPENDED)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16723    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16724      StateDataPtr->FeePendReqStatus = FEE_REQ_QUASI_ERASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16725      StateDataPtr->FeeQsJob = FEE_ERASE_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16726    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16727    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16728    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16729    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16730      StateDataPtr->FeePendReqStatus = FEE_PEND_PREV_NO_REQ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16731      StateDataPtr->FeeQsJob = FEE_NO_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16732    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16733    StateDataPtr->FeeQsState = FEE_QS_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16734    StateDataPtr->FeeQsJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16735    StateDataPtr->FeeQsJobResult = MEMIF_JOB_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16736    /* Call user configured job End notification */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16737    /*[cover parentID={122CFC2A-B000-40b2-90D3-25115EE72D31}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16738    if( Fee_CfgPtr->FeeQsJobEndNotification != NULL_PTR )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16739    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16740      /* [cover parentID={33AE7770-BDD2-44d4-9A6F-3BF930911C40}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16741      Call the notification function
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16742      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16743      (Fee_CfgPtr->FeeQsJobEndNotification)();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16744    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16745  }/*End of Fee_lHandleQsJobSuccess */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16746  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16747  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16748  ** Syntax : static Void Fee_lEvalQsBlockState(Fee_CacheType *const Cacheptr)  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16749  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16750  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16751  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16752  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16753  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16754  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16755  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16756  ** Parameters (in) :  Cacheptr    : Pointer to Cache Index                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16757  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16758  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16759  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16760  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16761  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16762  ** Description : This function will evaluate the Block status and updates     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16763  **               the Cache accordingly                                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16764  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16765  /* [cover parentID={C27E4B8D-6CAB-4633-BABB-828035F78E2A}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16766  static void Fee_lEvalQsBlockState(Fee_CacheType *const Cacheptr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16767  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16768    Fee_QsBlock_StateType QsBlkWriteStat;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16769    Fee_QsBlock_StateType QsBlkEraseStat;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16770    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16771    const uint32*          TmpPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16772    uint32                 Bcc;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16773  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16774    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16775  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16776    /* [cover parentID={3DD47090-004E-438f-9A72-1E50B98BB70B}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16777    if(Fee_lEvalQsBlockVirginStatus() == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16778    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16779      StateDataPtr->FeeQsBlockVirginCount += FEE_ONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16780    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16781    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16782    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16783      /* [cover parentID={979B2982-B1F1-4306-83B1-8B7C5899FEBD}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16784      QsBlkWriteStat = Fee_lEvalQsBlockWriteStatus();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16785  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16786      /* [cover parentID={514D8932-9669-4e4c-AED6-4148420D3BA2}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16787      QsBlkEraseStat = Fee_lEvalQsBlockEraseStatus();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16788  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16789      Cacheptr->Status.State = FEE_QS_INVALID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16790  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16791      /* [cover parentID={E66852F5-941E-471f-A1CE-B670695B5351}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16792      if(QsBlkEraseStat != FEE_QS_INVALID)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16793      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16794        /* [cover parentID={D9ACD96F-8799-4c07-86F1-EF5FBEEFB806}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16795        if(QsBlkEraseStat == FEE_QS_DIRTY_ERASE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16796        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16797          Cacheptr->Status.QsDirtyErase = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16798        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16799        Cacheptr->Status.State = FEE_QS_ERASE_COMPLETE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16800      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16801      /* [cover parentID={768B9D11-0533-4046-892B-35D9FEFCC124}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16802      if(QsBlkWriteStat != FEE_QS_INVALID)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16803      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16804        /* [cover parentID={5CB7C7A7-0308-40f4-BF5B-3C5C0E21DBD3}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16805        if(QsBlkWriteStat == FEE_QS_DIRTY_WRITE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16806        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16807          Cacheptr->Status.QsDirtyWrite = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16808          Cacheptr->Status.State = FEE_QS_WRITE_COMPLETE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16809        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16810        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16811        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16812          Cacheptr->Status.State = QsBlkWriteStat;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16813        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16814  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16815        /* Read the block cycle count from read write buffer and update it
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16816        into cache.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16817  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16818        /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16819        32 bit access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16820        TmpPtr = (uint32 *)(StateDataPtr->FeeReadWriteBuffer);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16821        Bcc = ((TmpPtr[FEE_EIGHT]) & FEE_16_BIT_ALL_ONES);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16822        Cacheptr->Blkcylcnt = (uint16) Bcc;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16823      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16824    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16825  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16826  }/*End of Fee_lEvalQsBlockState */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16827  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16828  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16829  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16830  ** Syntax : static Std_ReturnType Fee_lEvalQsBlockVirginStatus(void)          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16831  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16832  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16833  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16834  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16835  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16836  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16837  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16838  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16839  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16840  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16841  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16842  ** Return value    :  Std_ReturnType                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16843  **                    E_OK: Block is virgin                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16844  **                    E_NOT_OK : Block is not virgin                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16845  ** Description : This function will evaluate the Block  virgin status.        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16846  ** all the state page and block cycle count is check for all 0 bits           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16847  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16848  /* [cover parentID={24F506EE-F27A-4813-B18B-86DD5823289B}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16849  Fee_lEvalQsBlockVirginStatus
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16850  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16851  /* [cover parentID={C72851B7-B43E-4410-876A-22A34ACA17E8}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16852  static Std_ReturnType Fee_lEvalQsBlockVirginStatus(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16853  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16854  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16855    const Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16856    Std_ReturnType        RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16857    const uint32*         TmpPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16858    uint8                 Index;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16859  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16860    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16861    /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16862      access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16863    TmpPtr = (const uint32 *)(StateDataPtr->FeeReadWriteBuffer);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16864  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16865    RetVal = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16866    /*Check the all status pages for zero.In single iteration half page is checked
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16867     */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16868    /* [cover parentID={CDA7A812-F359-4a6a-A907-BA6714EE4A4E}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16869    for(Index = FEE_RESET ; Index < (FEE_QS_STATUS_PAGES + FEE_QS_STATUS_PAGES) ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16870        Index++ )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16871    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16872      if(TmpPtr[Index] != FEE_RESET )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16873      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16874        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16875        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16876      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16877    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16878  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16879    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16880  }/*End of Fee_lEvalQsBlockVirginStatus */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16881  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16882  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16883  ** Syntax : Fee_lHandleQsVirginBlocks(void)                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16884  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16885  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16886  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16887  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16888  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16889  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16890  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16891  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16892  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16893  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16894  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16895  ** Return value    :  Std_ReturnType                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16896  **                    E_OK: Block is virgin                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16897  **                    E_NOT_OK : Block is not virgin                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16898  ** Description : This function will write Erase complete state marker as part **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16899  ** Qs virgin blocks handling only if enabled otherwise triggers the qs        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16900  ** illegal notification.                                                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16901  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16902  /* [cover parentID={FAF5624C-FAC7-4d71-B111-2B5DE2F2EAB8},
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16903  {1D9DB568-A982-4a59-86B1-DC1395215AED}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16904  Fee_lHandleQsVirginBlocks
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16905  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16906  static void Fee_lHandleQsVirginBlocks(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16907  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16908  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16909    Fee_StateDataType   *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16910    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16911  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16912    #if (FEE_VIRGIN_FLASH_ILLEGAL_STATE == STD_OFF)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16913    Fee_CacheType       *CachePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16914    uint32*              SrcPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16915    uint32               DestAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16916    Std_ReturnType        RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16917  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16918    CachePtr = &(StateDataPtr->FeeBlockInfo[StateDataPtr->FeeQsRepairIndex +
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16919                                                       FEE_QSBLOCK_BEGIN_INDEX]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16920    /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16921      access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16922  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16923    SrcPtr = (uint32 *)(StateDataPtr->FeeReadWriteBuffer);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16924  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16925    SrcPtr[0] = FEE_QS_STATE_ERASE_COMPLETE_LSW;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16926    SrcPtr[1] = FEE_QS_STATE_ERASE_COMPLETE_MSW;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16927  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16928    /* [cover parentID={6DD1AD7A-3CB1-490b-B2C6-4FFC50876CE1}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16929    if((StateDataPtr->FeeQsIntrJobStatus == FEE_JOB_IDLE) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16930        (StateDataPtr->FeeQsIntrJobResult == MEMIF_JOB_OK))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16931    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16932      /* Check if all the qs blocks are marked as erase complete */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16933      /* [cover parentID={010ACA16-0316-4048-AF96-CBB667AEC50E}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16934      if(StateDataPtr->FeeQsRepairIndex < FEE_NUM_QUASI_BLOCKS)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16935      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16936        DestAddr = CachePtr->Address;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16937        RetVal = Fls_17_Dmu_Write((Fls_17_Dmu_AddressType)DestAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16938                                  (uint8 *)SrcPtr, FEE_DFLASH_PAGE_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16939        /* [cover parentID={8D3E8BC7-B124-4355-ADA6-DBA3407720A0}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16940        if( RetVal == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16941        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16942          CachePtr->Status.QsDirtyErase = 0;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16943          CachePtr->Status.QsDirtyWrite = 0;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16944          CachePtr->Status.State = FEE_QS_ERASE_COMPLETE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16945          StateDataPtr->FeeQsRepairIndex ++ ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16946          StateDataPtr->FeeQsIntrJobStatus = FEE_JOB_REQSTD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16947        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16948        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16949        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16950          if(Fee_CfgPtr->FeeQsIllegalStateNotification != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16951          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16952            Fee_CfgPtr->FeeQsIllegalStateNotification();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16953          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16954          StateDataPtr->FeeQsIntrJob = FEE_NO_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16955          StateDataPtr->FeeInitQSState = FEE_INITQS_COMPLETE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16956        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16957      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16958      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16959      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16960        StateDataPtr->FeeQsIntrJob = FEE_NO_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16961        StateDataPtr->FeeInitQSState = FEE_INITQS_COMPLETE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16962      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16963    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16964    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16965    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16966    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16967      /* [cover parentID={1FE91F7B-76AD-408e-A85E-49CA3EC844EB}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16968      if(Fee_CfgPtr->FeeQsIllegalStateNotification != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16969      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16970        /* [cover parentID={2DDC7E87-0F90-4da4-902C-32E470176197}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16971        Fee_CfgPtr->FeeQsIllegalStateNotification();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16972      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16973      StateDataPtr->FeeQsIntrJob = FEE_NO_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16974      StateDataPtr->FeeInitQSState = FEE_INITQS_COMPLETE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16975    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16976  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16977  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16978  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16979  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16980  ** Syntax : static Fee_QsBlock_StateType Fee_lEvalQsBlockEraseStatus(void)    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16981  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16982  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16983  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16984  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16985  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16986  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16987  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16988  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16989  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16990  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16991  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16992  ** Return value    :  QS Block erase state in DFlash                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16993  **                 FEE_QS_INVALID : Block erase state is not valid            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16994  **                 FEE_QS_ERASE_COMPLETE : Block erase state is erase         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16995  **                 completed                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16996  **                 FEE_QS_DIRTY_ERASE : Block erase state is erase            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16997  **                 dirty, block erase is not completed                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16998  ** Description : This function will evaluate the Block erase completion status**
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 16999  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17000  /* [cover parentID={D24EF183-AB87-403a-9257-39F9C40DAF23}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17001  static Fee_QsBlock_StateType Fee_lEvalQsBlockEraseStatus(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17002  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17003    const Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17004    Fee_QsBlock_StateType RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17005    uint32                TempData;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17006    uint32                Bcc;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17007    const uint32*         TmpPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17008  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17009    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17010    /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17011      access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17012    TmpPtr = (const uint32 *)(StateDataPtr->FeeReadWriteBuffer);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17013  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17014    Bcc = TmpPtr[(FEE_QS_STATE_CYCLE_COUNT_OFFSET / FEE_DFLASH_WORD_SIZE)] &
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17015          FEE_32_BIT_ALL_ONES;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17016    RetVal = FEE_QS_INVALID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17017    TempData = (TmpPtr[FEE_TWO])  | (TmpPtr[FEE_THREE]) | (TmpPtr[FEE_FOUR]) |
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17018               (TmpPtr[FEE_FIVE]) | (TmpPtr[FEE_SIX])   | (TmpPtr[FEE_SEVEN]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17019  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17020    /* [cover parentID={58CA199F-25DB-4c73-AEC1-DEB4307A9F84}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17021    /* [cover parentID={EF5EBF79-2B4C-4ce2-8744-2CE129BB263D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17022    if(TempData == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17023    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17024      /* [cover parentID={7339DDB0-032B-499d-BB81-88FE0628FF7B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17025      if(Bcc == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17026      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17027        /* [cover parentID={3ED30284-D369-45ea-AF5C-B73AD1B6389F}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17028        if((*(TmpPtr) == FEE_QS_STATE_ERASE_COMPLETE_LSW) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17029            (TmpPtr[FEE_ONE] == FEE_QS_STATE_ERASE_COMPLETE_MSW))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17030        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17031          RetVal = FEE_QS_ERASE_COMPLETE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17032        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17033        /* [cover parentID={F2615C5F-6938-4226-8171-3720FDC439D3}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17034        else if( (*(TmpPtr) | (TmpPtr[FEE_ONE])) != FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17035        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17036          RetVal = FEE_QS_DIRTY_ERASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17037        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17038        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17039        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17040          /* To avoid misra warning */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17041        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17042      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17043    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17044  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17045    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17046  }/*End of Fee_lEvalQsBlockEraseStatus */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17047  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17048  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17049  ** Syntax : static Fee_QsBlock_StateType Fee_lEvalQsBlockWriteStatus(void)    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17050  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17051  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17052  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17053  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17054  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17055  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17056  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17057  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17058  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17059  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17060  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17061  ** Return value    :  QS Block write state in DFlash                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17062  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17063  ** Description : This function will evaluate the Block write completion status**
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17064  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17065  /* [cover parentID={C5B2318A-8DC2-4021-ACB4-18BC916B177B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17066  static Fee_QsBlock_StateType Fee_lEvalQsBlockWriteStatus(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17067  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17068    const Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17069    Fee_QsBlock_StateType  RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17070    uint32                 Bcc;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17071    uint32                 Bcc_Comp;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17072    const uint32*          TmpPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17073  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17074    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17075    /*MISRA2012_RULE_11_3_JUSTIFICATION:The casting is needed to perform 32 bit
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17076      access and array is memory aligned.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17077    TmpPtr = (const uint32 *)(StateDataPtr->FeeReadWriteBuffer);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17078  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17079    Bcc = ((TmpPtr[FEE_EIGHT]) & FEE_16_BIT_ALL_ONES);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17080    Bcc_Comp = (((TmpPtr[FEE_EIGHT]) >> FEE_SIXTEEN) &
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17081                FEE_16_BIT_ALL_ONES);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17082  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17083    RetVal = FEE_QS_INVALID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17084  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17085    /* FEE_QS_STATE_DFERASE_STATE is also checked to handle power failure
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17086     * during virgin flash preparation. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17087    /* [cover parentID={3458CCEC-7B5E-48c5-A18A-6CEDA2B6BFB6}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17088    if(((*TmpPtr == FEE_QS_STATE_ERASE_COMPLETE_LSW) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17089  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17090        ((TmpPtr[FEE_ONE]) == FEE_QS_STATE_ERASE_COMPLETE_MSW))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17091        || (*TmpPtr == FEE_QS_STATE_DFERASE_STATE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17092    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17093      /* [cover parentID={2CE7DEFA-F665-4099-9E88-6C21BE818455}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17094      if(((TmpPtr[FEE_TWO]) == FEE_QS_STATE_WRITE_STARTED_LSW) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17095  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17096          ((TmpPtr[FEE_THREE]) == FEE_QS_STATE_WRITE_STARTED_MSW))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17097      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17098        /* [cover parentID={AB38C3B5-738F-462f-ACD6-6702F70EA2EB}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17099        if(((TmpPtr[FEE_SIX]) | (TmpPtr[FEE_SEVEN])) == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17100        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17101          /* [cover parentID={33501AC0-53DA-4393-BAE9-767A7D36AEFA}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17102          if(Bcc == (~Bcc_Comp & FEE_16_BIT_ALL_ONES))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17103          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17104            /* [cover parentID={61AFB626-5566-4967-B146-68CDF63763BB}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17105            if(((TmpPtr[FEE_FOUR]) == FEE_QS_STATE_WRITE_COMPLETE_LSW) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17106                ((TmpPtr[FEE_FIVE]) == FEE_QS_STATE_WRITE_COMPLETE_MSW))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17107            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17108              RetVal = FEE_QS_WRITE_COMPLETE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17109            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17110            /* [cover parentID={48E266F7-C641-4e05-A7A1-9AAEE4789DC5}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17111            else if(((TmpPtr[FEE_FOUR]) | (TmpPtr[FEE_FIVE])) == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17112            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17113              RetVal = FEE_QS_WRITE_STARTED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17114  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17115            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17116            else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17117            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17118              RetVal = FEE_QS_DIRTY_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17119            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17120          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17121        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17122      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17123    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17124    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17125  }/*End of Fee_lEvalQsBlockWriteStatus */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17126  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17127  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17128  ** Syntax : static Void Fee_lQsIDSM(void)                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17129  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17130  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17131  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17132  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17133  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17134  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17135  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17136  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17137  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17138  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17139  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17140  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17141  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17142  ** Description : This function will repair QS Blocks which are identified     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17143  **               in Init as Dirty                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17144  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17145  /* [cover parentID={81DD7816-C7F3-4c48-BE2B-9C7601A2A086},
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17146  {34019D92-D6C9-4d4e-ABEE-808DA8F12A11}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17147  Check for QS job status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17148  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17149  static void Fee_lQsIDSM(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17150  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17151    Fee_StateDataType    *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17152    uint32                BlkAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17153    Fee_CacheType  *CachePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17154    Std_ReturnType        RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17155    Std_ReturnType        TempRetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17156  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17157    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17158    CachePtr = &(StateDataPtr->FeeBlockInfo[StateDataPtr->FeeQsRepairIndex +
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17159                                                        FEE_QSBLOCK_BEGIN_INDEX]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17160    StateDataPtr->FeeTempArray[0] = FEE_QS_STATE_WRITE_COMPLETE_LSW;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17161    StateDataPtr->FeeTempArray[1] = FEE_QS_STATE_WRITE_COMPLETE_MSW;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17162    TempRetVal = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17163    BlkAddr = CachePtr->Address;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17164  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17165    /* [cover parentID={81DD7816-C7F3-4c48-BE2B-9C7601A2A086}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17166    if((StateDataPtr->FeeQsIntrJobStatus == FEE_JOB_IDLE) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17167        (StateDataPtr->FeeQsIntrJobResult == MEMIF_JOB_FAILED))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17168    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17169      /*Repair of the block is failed mark the block status as invalid and reset
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17170      block cylce count in cache.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17171      CachePtr->Status.State = FEE_QS_INVALID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17172      CachePtr->Blkcylcnt = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17173    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17174  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17175    /* [cover parentID={D8CA4C26-1560-410d-9F31-B9E67FC17E46}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17176    while((StateDataPtr->FeeQsRepairIndex < FEE_NUM_QUASI_BLOCKS) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17177          (TempRetVal == E_OK))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17178    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17179      /* [cover parentID={EB3CB513-6A56-4fde-86A2-E9178936C6FB}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17180      if(CachePtr->Status.QsDirtyErase == (uint32)FEE_SET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17181      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17182        BlkAddr = CachePtr->Address;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17183        /* reset the Dirty Status */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17184        CachePtr->Status.QsDirtyErase = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17185        TempRetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17186      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17187      /* [cover parentID={24C01888-4FA2-4839-A29F-5B7B6DAB0E6A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17188      else if(CachePtr->Status.QsDirtyWrite == (uint32)FEE_SET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17189      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17190        BlkAddr = CachePtr->Address + FEE_QS_STATE_WRITE_COMPLETED_OFFSET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17191        /* reset the Dirty Status */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17192        CachePtr->Status.QsDirtyWrite = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17193        TempRetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17194      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17195      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17196      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17197        StateDataPtr->FeeQsRepairIndex++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17198        CachePtr++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17199      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17200      /* [cover parentID={9E24E043-305F-44cc-A1B8-19ED987CDB75}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17201      if(TempRetVal == E_NOT_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17202      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17203        /* program logical sector */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17204        RetVal = Fls_17_Dmu_Write((Fls_17_Dmu_AddressType)BlkAddr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17205                                  (uint8 *)(StateDataPtr->FeeTempArray),
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17206                                  FEE_DFLASH_PAGE_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17207        /* [cover parentID={47A31ADB-5A52-4129-98D7-83C4FB3C7D6D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17208        if(RetVal == E_OK)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17209        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17210          StateDataPtr->FeeQsIntrJobStatus = FEE_JOB_REQSTD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17211        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17212        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17213        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17214          /*Repair of the block is failed mark the block as invalid.Continue the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17215          repair of other blocks*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17216          CachePtr->Status.State = FEE_QS_INVALID;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17217          TempRetVal = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17218        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17219      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17220    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17221    /* [cover parentID={7D17CE2F-E195-4327-830D-FDDFFFC85354}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17222    if(StateDataPtr->FeeQsRepairIndex == FEE_NUM_QUASI_BLOCKS)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17223    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17224      StateDataPtr->FeeQsIntrJob = FEE_NO_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17225      StateDataPtr->FeeInitQSState = FEE_INITQS_COMPLETE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17226    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17227  }/*End of Fee_lQsIDSM */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17228  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17229  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17230  ** Syntax : static Void Fee_lMainQsTransHdlr(void)                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17231  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17232  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17233  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17234  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17235  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17236  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17237  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17238  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17239  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17240  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17241  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17242  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17243  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17244  ** Description : This function Performs the state transition for the main     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17245  **               function when in FEE_MAIN_QS state                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17246  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17247  /* [cover parentID={8A30F525-7D54-4ae2-AB57-874F22227E25}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17248  static void Fee_lMainQsTransHdlr(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17249  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17250    Fee_StateDataType    *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17251  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17252    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17253  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17254    /* [cover parentID={AF2AAA97-24A1-4cad-BDBB-46313E6E8615}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17255    if(StateDataPtr->FeePendReqStatus == FEE_PEND_PREV_NO_REQ)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17256    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17257  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17258      #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17259      /* [cover parentID={99EDFFF5-44BC-48d4-910E-8C9A5883FA52}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17260      if(((boolean)FALSE == Fee_lIsGcTriggeredOnce(StateDataPtr)) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17261          (StateDataPtr->FeeGcState != FEE_GC_IDLE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17262      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17263        StateDataPtr->FeeMainJob = FEE_MAIN_GC;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17264      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17265      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17266      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17267      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17268        StateDataPtr->FeeMainJob = FEE_MAIN_NONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17269      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17270    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17271  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17272    #if (FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17273    /*Check for NVM write after QS write*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17274    /* [cover parentID={43E95990-7658-4d61-AAF2-FC7F24F08C5A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17275    else if( (boolean)TRUE == Fee_lIsUserWriteInvldReqstd(StateDataPtr) )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17276    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17277      #if (FEE_CANCELL_ALL_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17278      /* Switch to main none to Check if there is GC cancelled by cancel all */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17279      StateDataPtr->FeeMainJob = FEE_MAIN_NONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17280  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17281      #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17282      StateDataPtr->FeeMainJob = FEE_MAIN_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17283      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17284  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17285    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17286  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17287    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17288  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17289  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17290    #if (FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17291    /*Check for NVM read after QS write*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17292    /* [cover parentID={A6C476F9-5144-471b-94C1-4D1A792F1E49}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17293    else if( (boolean)TRUE == Fee_lIsUserReadReqstd(StateDataPtr) )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17294    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17295      #if (FEE_CANCELL_ALL_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17296  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17297      /* Switch to main none to Check if there is GC cancelled by cancel all */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17298  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17299      StateDataPtr->FeeMainJob = FEE_MAIN_NONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17300  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17301      #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17302      StateDataPtr->FeeMainJob = FEE_MAIN_READ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17303      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17304    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17305    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17306    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17307      /* To aviod misra warning */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17308    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17309  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17310    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17311  }/*End of Fee_lMainQsTransHdlr */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17312  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17313  #if (FEE_CANCELL_ALL_API == STD_ON) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17314      (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17315  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17316  ** Traceability   : [cover parentID={910989B6-08AC-4a55-9E86-1BE2C74C6FAC}]   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17317  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17318  ** Syntax : void Fee_17_CancelAll (void)                                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17319  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17320  ** Service ID: 0x28                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17321  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17322  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17323  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17324  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17325  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17326  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17327  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17328  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17329  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17330  ** Return value    :  void                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17331  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17332  ** Description : Service to cancel any ongoing Internal/User read or write    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17333  ** job. However, ongoing erase cannot be cancelled.                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17334  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17335  /* [cover parentID={7C10DE66-A21A-47db-8A13-D456A64C30B2}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17336  Fee_17_CancelAll
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17337  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17338  void Fee_17_CancelAll(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17339  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17340  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17341    MemIf_StatusType   FeeStatus;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17342  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17343    /* [cover parentID={BC39E052-0028-4c12-851B-8B5724774BA5}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17344    Safety error is enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17345    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17346    #if(FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17347  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17348    /*Check for configuration pointer(Fee_CfgPtr)for null as part safety check */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17349    /* Check if the Fee_Init API is called */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17350  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17351    /* [cover parentID={9215E9C4-C1AF-42b7-B5B1-D70924A5D6F5}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17352    Is the configuration pointer NULL?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17353    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17354    if(Fee_CfgPtr != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17355  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17356    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17357    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17358      #if(MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17359      /* [cover parentID={9F0B85C6-6F76-4c06-A29A-5D9321027C33}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17360      Is driver initialization is complete
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17361      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17362      if(Fee_lGetStatus() != MEMIF_UNINIT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17363      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17364      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17365        /* [cover parentID={FE83D752-5E24-4d57-8348-62C72A9EFC7B}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17366        Get Fee status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17367        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17368        FeeStatus = Fee_lGetStatus();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17369        /*any internal or User job ongoing*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17370        /* [cover parentID={14E0C734-498B-4a77-B86F-404F91446F1C}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17371        Is Fee busy?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17372        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17373        #if((MCAL_AR_VERSION == MCAL_AR_440) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17374        (FEE_DATA_BLOCK_SUPPORTED == FEE_QUASI_STATIC_DATA_ONLY))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17375        if(FeeStatus == MEMIF_BUSY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17376        #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17377        if((FeeStatus == MEMIF_BUSY_INTERNAL) || (FeeStatus == MEMIF_BUSY))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17378        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17379        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17380          /* [cover parentID={BCE9C3B0-AFD8-4536-8FAC-A19693551C59}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17381          Cancel the ongoing job
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17382          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17383  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17384          Fee_lCancelAll();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17385        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17386        /* [cover parentID={F77E1C4F-6258-4a9c-B0E8-8D73015FA394}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17387        Safety is enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17388        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17389        #if((FEE_SAFETY_ENABLE == STD_ON) && (MCAL_AR_VERSION == MCAL_AR_422)) \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17390        || (FEE_RUNTIME_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17391        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17392        { /* [cover parentID={4E0263ED-0EDF-4276-8B16-636C7999B44E}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17393          Report error as FEE_E_INVALID_CANCEL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17394          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17395          #if(MCAL_AR_VERSION == MCAL_AR_422) && (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17396          Fee_lReportError(FEE_SID_CANCELALL,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17397                          FEE_SE_INVALID_CANCEL, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17398          #elif(FEE_RUNTIME_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17399          Fee_lReportError(FEE_SID_CANCELALL,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17400                        FEE_E_INVALID_CANCEL, FEE_RUNTIME_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17401          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17402        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17403        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17404      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17405      #if(FEE_SAFETY_ENABLE == STD_ON) && (MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17406      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17407      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17408      Fee_lReportError(FEE_SID_CANCELALL,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17409                          FEE_SE_UNINIT, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17410      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17411      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17412    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17413    #if(FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17414    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17415    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17416      /* [cover parentID={7CF34432-255A-4503-BE86-4D3FC9CA3328}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17417      Report error as FEE_E_UNINIT
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17418      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17419      Fee_lReportError(FEE_SID_CANCELALL,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17420                          FEE_SE_UNINIT, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17421    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17422    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17423  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17424  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17425  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17426  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17427  /*CYCLOMATIC_Fee_lCancelAll_JUSTIFICATION: Fee_lCancelAll has
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17428  to determine all the states of ongoing operation and then cancel.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17429  It broken properly into various stages using switch case which cannot be broken
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17430  further. If it is broken into more functions to fix RSM, the code readability
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17431  will get affected.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17432  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17433  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17434  ** Syntax : void Fee_lCancelAll(void)                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17435  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17436  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17437  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17438  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17439  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17440  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17441  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17442  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17443  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17444  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17445  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17446  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17447  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17448  ** Description : This function Performs the cancellation of ongoing           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17449  **               Fee Job operation including GC.                              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17450  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17451  #if (FEE_CANCELL_ALL_API == STD_ON) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17452      (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17453  /* [cover parentID={41BC93C6-486B-45f8-A095-EF6CFF2E1828},
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17454  {07F854EA-9B94-4496-8129-90F411D55A37}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17455  Fee_lCancelAll
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17456  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17457  static void Fee_lCancelAll (void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17458  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17459  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17460    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17461    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17462    uint8                  CancelGC = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17463    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17464    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17465  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17466    Fee_lCancelallUsrJob();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17467  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17468    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17469  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17470    /* remember : before exit, there cannot be any pending jobs.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17471       We should be in some kind of an idle state so that new jobs
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17472     can be accepted. This is a good test case */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17473  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17474    switch(StateDataPtr->FeeGcState)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17475    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17476      /* [cover parentID={B3EC74A6-3DC9-4908-992A-42CC930AA265}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17477      case FEE_GC_IDLE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17478      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17479        CancelGC = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17480        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17481      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17482      /* [cover parentID={5238C7C3-0B93-47e4-BD6F-E082849FF9A0}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17483      case FEE_GC_ERASE_PREV_SECTOR:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17484      case FEE_GC_INIT_ERASE_PREV_SECTOR:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17485      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17486        if(StateDataPtr->FeeIntrJobStatus == FEE_JOB_IDLE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17487        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17488          CancelGC = FEE_SET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17489        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17490        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17491        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17492          CancelGC = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17493        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17494        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17495      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17496      /* [cover parentID={5270F94A-78B2-4073-B908-027D4422D7F2}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17497      case FEE_GC_REQUESTED:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17498      case FEE_GC_UNCFG_START_COPY:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17499      case FEE_GC_START_COPY:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17500      case FEE_GC_UNCFG_COPY_READ_NXTPAGE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17501      case FEE_GC_COPY_READ_NXTPAGE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17502      case FEE_GC_UNCFG_COPY_WRITE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17503      case FEE_GC_COPY_WRITE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17504      case FEE_GC_MARK_SECTOR1_V_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17505      case FEE_GC_MARK_SECTOR1_V_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17506      case FEE_GC_MARK_SECTOR0_E_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17507      case FEE_GC_MARK_SECTOR0_E_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17508      case FEE_GC_INIT_MARK_SECTOR0_E_SP:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17509      case FEE_GC_INIT_MARK_SECTOR0_E_M:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17510      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17511        CancelGC = FEE_SET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17512        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17513      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17514      default:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17515      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17516        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17517      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17518    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17519    if(CancelGC == FEE_SET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17520    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17521      Fee_lCancelWrite();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17522      StateDataPtr->FeePendReqStatus = FEE_PEND_PREV_NO_REQ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17523      StateDataPtr->FeeIntrJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17524      StateDataPtr->FeeIntrJobResult = (uint8)MEMIF_JOB_CANCELED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17525      StateDataPtr->FeeIntrJob = FEE_NO_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17526      StateDataPtr->FeeGcState = FEE_GC_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17527      /*Set  FeeCancelallGCstate to FEE_GC_CANCLD notify GC is cancelled by
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17528      cancel all */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17529      StateDataPtr->FeeCancelallGCstate = FEE_GC_CANCLD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17530  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17531    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17532  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17533    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17534  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17535  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17536  }/*End of Fee_lCancelAll */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17537  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17538  /* [cover parentID={78B27194-6B4F-4f02-A743-DF15FB3A0ABC}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17539  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17540  ** Syntax : void Fee_lCancelallUsrJob(void)                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17541  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17542  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17543  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17544  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17545  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17546  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17547  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17548  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17549  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17550  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17551  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17552  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17553  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17554  ** Description : This function Performs the cancellation of ongoing           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17555  **               Fee Read/Write/Erase/QS Job operations                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17556  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17557  LOCAL_INLINE void Fee_lCancelallUsrJob (void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17558  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17559    const Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17560  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17561    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17562  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17563    switch(StateDataPtr->FeePendReqStatus)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17564    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17565  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17566  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17567      #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17568      /* there was a write/read request registered only */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17569      /* [cover parentID={EBC1B4FE-0565-493a-8AC9-35B3B16F8F31}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17570      case FEE_REQ_IMM_WRITE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17571      case FEE_REQ_NORM_WRITE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17572      case FEE_REQ_READ:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17573      case FEE_PEND_PREV_READ_REQ:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17574      case FEE_PEND_PREV_READ_NOTIF:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17575      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17576        /* Is any job requested to Fls, if yes then cancel the job.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17577        notification will be triggered to user by fee_job_error notification.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17578        /* [cover parentID={C00C587E-2B81-42b5-9544-4239E5E0B5CE}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17579        if(StateDataPtr->FeeUserJobStatus == FEE_JOB_REQSTD)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17580        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17581  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17582          Fls_17_Dmu_Cancel();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17583        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17584        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17585        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17586          /* Call the Fee_lHandleUsrJobFailure with  FEE_CANCEL to notify
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17587          user about cancelled of job*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17588          Fee_lHandleUsrJobFailure(FEE_CANCEL);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17589        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17590        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17591      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17592      /* write ongoing when this was called */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17593      case FEE_PEND_PREV_COMPARE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17594      case FEE_PEND_INTR_COMPARE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17595      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17596        /* cancel ongoing write*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17597        Fee_lCancelWrite();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17598  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17599        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17600      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17601      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17602      /* [cover parentID={AA0A51E4-135A-4287-8BA5-205DE27BC54A}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17603      case FEE_REQ_QUASI_WRITE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17604      case FEE_REQ_QUASI_READ:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17605      case FEE_REQ_QUASI_ERASE:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17606      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17607  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17608        Fee_lCancelallUsrJobQs();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17609        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17610      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17611      default:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17612      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17613        /*Do nothing*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17614  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17615        /*The QS erase job can not be canceled */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17616        break;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17617      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17618    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17619  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17620  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17621  /*[cover parentID={DCE7DD89-3680-4d19-88AB-61665F9A352A}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17622  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17623  ** Syntax : void Fee_lCancelallUsrJobQs(void)                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17624  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17625  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17626  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17627  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17628  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17629  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17630  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17631  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17632  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17633  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17634  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17635  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17636  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17637  ** Description : This function Performs the cancellation of ongoing           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17638  **               Fee QS Job operations                                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17639  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17640  LOCAL_INLINE void Fee_lCancelallUsrJobQs (void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17641  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17642    const Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17643  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17644    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17645  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17646    if(StateDataPtr->FeeQsJobStatus == FEE_JOB_REQSTD)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17647    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17648      /* [cover parentID={C3A4EA11-C6AA-4536-917F-B3D316EF67D5}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17649      if(StateDataPtr->FeePendReqStatus == FEE_REQ_QUASI_ERASE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17650      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17651        /* Only cancel the fls write request in qs erase job. fls Erase
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17652        request can not be canceled */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17653        /* [cover parentID={2396205A-CA03-4ce6-8D4B-11026CE473CA}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17654        if((StateDataPtr->FeeQuasiBlkInstanceTemp != FEE_ZERO) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17655            (StateDataPtr->FeeQsState != (uint8)FEE_QS_PROG_STATE_ERASE_COMPLETE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17656        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17657          Fls_17_Dmu_Cancel();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17658        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17659  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17660      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17661      /* [cover parentID={EBE1BD17-FD8C-4648-A7D6-DCC3924108A2}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17662      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17663      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17664        Fls_17_Dmu_Cancel();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17665      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17666  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17667    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17668    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17669    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17670      /* Call the Fee_lHandleQsJobFailure with  FEE_CANCEL to notify
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17671      user about cancelled of job*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17672      Fee_lHandleQsJobFailure(FEE_CANCEL);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17673    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17674  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17675  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17676  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17677  /* [cover parentID={DDA2DC38-6BEC-43ec-9880-430191057143}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17678  FEE_CANCELL_ALL_API enabled and QS data block supported
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17679  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17680  #if (FEE_CANCELL_ALL_API == STD_ON) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17681      (FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17682  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17683  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17684  ** Syntax : void Fee_lCancelAllGCrestart(void)                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17685  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17686  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17687  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17688  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17689  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17690  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17691  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17692  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17693  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17694  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17695  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17696  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17697  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17698  ** Description : This function Performs reset of sector info and will build   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17699  **               DFLASH and Set fee main to INITGC state.                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17700  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17701  /* [cover parentID={527D5B4B-3905-4e54-8C05-6BE15D26C6C0}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17702  /* [cover parentID={5C98842C-4860-420e-A769-AEF76C955E93}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17703  static void Fee_lCancelAllGCrestart(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17704  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17705  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17706  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17707    Fee_StateDataType     *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17708    Fee_SectorInfoType    *SectorInfoPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17709    uint32 Index;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17710    uint32 EndAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17711    uint8  DFlashStatus;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17712    uint8  ReturnVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17713  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17714    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17715    SectorInfoPtr = StateDataPtr->FeeSectorInfo;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17716    /* Initialize Sector State information */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17717    /* [cover parentID={681C42AF-3C8D-474d-AFAF-0B7263548A1D}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17718    for(Index = FEE_RESET; Index < FEE_SECTORS; Index++)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17719    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17720      SectorInfoPtr[Index].State = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17721      SectorInfoPtr[Index].StateCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17722      SectorInfoPtr[Index].UnerasableWLCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17723      SectorInfoPtr[Index].UnerasableWLAddr[0] = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17724      SectorInfoPtr[Index].UnerasableWLAddr[1] = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17725      SectorInfoPtr[Index].Status.Dirty = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17726      SectorInfoPtr[Index].Status.Used = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17727      SectorInfoPtr[Index].StatePageAddr = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17728      SectorInfoPtr[Index].NextFreeWLAddr = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17729      SectorInfoPtr[Index].NonZeroWLCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17730      SectorInfoPtr[Index].NonZeroWLAddr[0] = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17731      SectorInfoPtr[Index].NonZeroWLAddr[1] = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17732    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17733  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17734    StateDataPtr->FeeStateCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17735    StateDataPtr->FeeSectorCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17736    StateDataPtr->FeeComparedLen = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17737    StateDataPtr->FeeReadLen = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17738    StateDataPtr->FeeUnErasableWLAddrTemp[0] = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17739    StateDataPtr->FeeUnErasableWLAddrTemp[1] = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17740    StateDataPtr->FeeUnErasableWLCountTemp = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17741  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17742    /* Read sector information */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17743    /* [cover parentID={AB1BF9B5-6288-4be9-9D10-5F4B2DDA1C38}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17744    /*Clear the fee read/write buffer*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17745    Fee_lClearFeeReadWriteBuffer();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17746    for(Index = FEE_RESET; Index < FEE_SECTORS; Index++)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17747    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17748      if(Index == FEE_RESET)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17749      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17750        EndAddr = FEE_DFLASH_BANK0_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17751      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17752      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17753      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17754        EndAddr = FEE_DFLASH_BANK1_BASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17755      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17756      StateDataPtr->FeeCurrSectSrcAddr = EndAddr +
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17757                                         (FEE_DFLASH_SECTOR_SIZE -
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17758                                          FEE_DFLASH_WORDLINE_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17759      do
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17760      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17761        ReturnVal = Fee_lGetSectorInfo(Index, EndAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17762      } while(ReturnVal == FEE_SP_INIT);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17763    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17764  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17765    DFlashStatus = Fee_lBuildDFlashStatus();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17766  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17767    /* Set the init GC state*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17768    Fee_lSetInitGc(DFlashStatus);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17769  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17770  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17771  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17772  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17773  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17774  #if (FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17775  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17776  ** Syntax : static void Fee_lGcHardenQsSector(void)                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17777  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17778  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17779  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17780  ** Sync/Async:  Asynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17781  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17782  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17783  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17784  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17785  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17786  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17787  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17788  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17789  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17790  ** Description : This function Checks and performs Hardening operation on     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17791  ** part of QS region                                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17792  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17793  /* [cover parentID={3D1C82A1-9719-4283-9359-A662A4B1A3C0}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17794  /* [cover parentID={50DEDDB6-4A9A-4f26-B9C5-5EDBAAE36268}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17795  static void Fee_lGcHardenQsSector(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17796  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17797  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17798    Fee_StateDataType   *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17799    Std_ReturnType       ReturnValue;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17800    uint8          *ReadWriteBuffPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17801    Fls_17_Dmu_AddressType      Addr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17802  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17803    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17804    /* [cover parentID={37DF76E2-AA08-4cf3-B25D-57DAF4D129B1}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17805    if (StateDataPtr->FeeIntrJobStatus == FEE_JOB_DONE)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17806    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17807      StateDataPtr->FeeIntrJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17808      StateDataPtr->FeeProgVerErr = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17809      /* [cover parentID={D3192FBC-AC5C-4d1f-87AC-9C948DD7A560}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17810      if(StateDataPtr->FeeIntrJobResult == FEE_JOB_FAIL)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17811      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17812        /* [cover parentID={9729EC09-099B-463e-A28F-24169C9B39A8}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17813        /* Error is encountered while write operation as part of hardening
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17814        switch GC state to erase previous sector state. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17815        if(Fee_CfgPtr->FeeQsHardenErrorNotification != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17816        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17817          /* [cover parentID={9729EC09-099B-463e-A28F-24169C9B39A8}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17818          Call QS harden error notification (provided the notification function is configured)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17819          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17820          Fee_CfgPtr->FeeQsHardenErrorNotification();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17821        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17822      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17823    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17824  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17825    /*This function checks if hardening is required or not with the help
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17826    of Fls functionality and returns the page address where hardening is to
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17827    be done. If hardening is not required, 0xFFFFFFFF will be obtained   */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17828    /* [cover parentID={7CDEEE63-E167-46f0-BC43-22C57A4D553F}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17829    Addr = Fee_lGcHardenReqChk();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17830  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17831    /* [cover parentID={D25EF027-791F-4988-9EB2-EE25186122D2}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17832    if(FEE_NO_HARDEN_RET_ADDRESS  != Addr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17833    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17834      /* [cover parentID={39DB863C-C2E8-4ccc-8967-FAF339519FED}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17835      ReadWriteBuffPtr = StateDataPtr->FeeGcReadWriteBuffer;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17836      /* [cover parentID={39DB863C-C2E8-4ccc-8967-FAF339519FED}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17837      Read word data from flash bank synchronously
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17838      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17839      /*MISRA2012_RULE_11_3_JUSTIFICATION:This is done for interfacing with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17840        FLS.FEE is passing parameters to FLS APIs, casting is needed to match with
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17841        the Fls API prototype.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17842      ReturnValue = Fls_17_Dmu_ReadWordsSync(Addr, (uint32 *)ReadWriteBuffPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17843                                   (FEE_DFLASH_PAGE_SIZE / FEE_DFLASH_WORD_SIZE));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17844      /* [cover parentID={C8B57ABB-441A-42a9-9D3A-C6F05EBE473A}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17845      if(E_NOT_OK == ReturnValue)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17846      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17847        /* [cover parentID={C53A6B1C-22A9-4bfc-8EDA-E5F4C877AA24}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17848        if(Fee_CfgPtr->FeeQsHardenErrorNotification != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17849        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17850          /* [cover parentID={C53A6B1C-22A9-4bfc-8EDA-E5F4C877AA24}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17851          Call QS harden error notification (provided the notification function is configured)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17852          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17853          /* Error is encountered while performing reading as
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17854          part of hardening operation. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17855          Fee_CfgPtr->FeeQsHardenErrorNotification();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17856        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17857      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17858      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17859      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17860        /* [cover parentID={48325974-6780-4ff4-AE8F-C79D90CAFFBA}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17861        ReturnValue = Fls_17_Dmu_Write(Addr, ReadWriteBuffPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17862                                       FEE_DFLASH_PAGE_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17863        /* [cover parentID={708E7A39-6303-458c-BC8A-57728DBDA3D6}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17864        if(E_NOT_OK == ReturnValue)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17865        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17866          if(Fee_CfgPtr->FeeQsHardenErrorNotification != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17867          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17868            /* Error is encountered while requesting write
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17869            operation as part of hardening. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17870            Fee_CfgPtr->FeeQsHardenErrorNotification();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17871          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17872        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17873        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17874        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17875          StateDataPtr->FeeIntrJobStatus = FEE_JOB_REQSTD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17876          StateDataPtr->FeeIntrJob = FEE_WRITE_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17877        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17878      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17879    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17880  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17881    return;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17882  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17883  }/*End of Fee_lGcHardenQsSector */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17884  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17885  /*CYCLOMATIC_Fee_lGcHardenReqChk_JUSTIFICATION:
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17886    In this function, address of the wordline or address of the corresponding
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17887    page is calculated.Further splitting (though it might not be a logical
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17888    decomposition) would mean, these address calculations
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17889    have to be repeated again in the split function or introduce new global static
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17890    variables to handle the scenario.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17891  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17892  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17893  ** Syntax : static Fls_17_Dmu_AddressType Fee_lGcHardenReqChk(void)           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17894  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17895  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17896  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17897  ** Sync/Async:  Synchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17898  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17899  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17900  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17901  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17902  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17903  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17904  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17905  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17906  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17907  ** Description : This function checks whether hardening is required or not    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17908  ** with the help of Fls functionality                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17909  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17910  /* [cover parentID={B0AA15C8-97E3-4ea0-A4B5-52E2E59A3F50}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17911  /* [cover parentID={EE9701FA-E837-4066-AB85-E206AD830E5C}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17912  static Fls_17_Dmu_AddressType Fee_lGcHardenReqChk(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17913  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17914    Fee_StateDataType   *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17915    uint8 RetPageChk = FEE_HARDEN_NOT_REQRD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17916    uint8 RetWLChk = FEE_HARDEN_NOT_REQRD;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17917    uint8 HardeningRateReached = 0U;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17918    Fls_17_Dmu_AddressType      PageAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17919    Fls_17_Dmu_AddressType      WLAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17920    Fls_17_Dmu_AddressType      RetAddrToBeHardened;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17921    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17922  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17923    RetAddrToBeHardened = FEE_NO_HARDEN_RET_ADDRESS;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17924    do
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17925    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17926      /*Check if the hardening check and hardening is completed for the required
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17927      portion of QS area */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17928      /* [cover parentID={7CE49723-D12B-4930-9F35-2189B9C9E365}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17929      if(FEE_HARDENING_RATE == StateDataPtr->FeeHardeningWLCount)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17930      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17931        if(StateDataPtr->FeeQsHardeningOffset <
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17932           ((FEE_DFLASH_QS_SIZE / FEE_DFLASH_WORDLINE_SIZE) - FEE_HARDENING_RATE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17933        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17934          /* This offset is stored in the state page so that Hardening check can
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17935          be started from this address of the QS area in the next GC */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17936          StateDataPtr->FeeQsHardeningOffset += FEE_HARDENING_RATE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17937        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17938        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17939        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17940          StateDataPtr->FeeQsHardeningOffset = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17941        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17942        StateDataPtr->FeeHardeningWLCount = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17943        HardeningRateReached = 1U ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17944        /* Since Hardening is completed for the required portion, GC state is
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17945         switched to erase previous sector state. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17946        StateDataPtr->FeeGcState = FEE_GC_ERASE_PREV_SECTOR;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17947      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17948      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17949      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17950        /* Word line Address is calculated for which Hardening check is to be done.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17951          Offset address is passed here as Fls driver adds this offset to the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17952          DFlash base address*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17953        WLAddr = ((((StateDataPtr->FeeQsHardeningOffset  +
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17954                  StateDataPtr->FeeHardeningWLCount) * (FEE_DFLASH_WORDLINE_SIZE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17955                 + FEE_QS_SECTOR_BASE) - FLS_17_DMU_BASE_ADDRESS);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17956        /*if Hardening page count is 0, it means hardening check
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17957          is to be done at fresh/new word line */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17958        if (0U == StateDataPtr->FeeHardeningPageCount)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17959        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17960          /* [cover parentID={608FEC0D-CC01-40c8-9646-B3CFB7D12A73}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17961          Call FLS function to find out whether hardening is required for fresh
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17962          word line or not
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17963          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17964          /*Check for Hardening required or not at Wordline level granularity */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17965          RetWLChk = Fls_17_Dmu_IsHardeningRequired(WLAddr, FEE_HARDEN_CHK_WL);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17966        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17967        /*if Hardening page count is not 0, it means hardening check
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17968        is to be done at page level. Also this is done to find which page is to be
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17969        checked for Hardening for the wordline which requires Hardening */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17970        /* [cover parentID={DDC4947C-119C-49aa-B56A-B766A6158625}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17971        if ((FEE_HARDEN_REQRD == RetWLChk) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17972            (0U != StateDataPtr->FeeHardeningPageCount))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17973        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17974          do
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17975          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17976            /*Page address is calculated for which Hardening check is
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17977             to be done.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17978            PageAddr = WLAddr + (StateDataPtr->FeeHardeningPageCount * FEE_DFLASH_PAGE_SIZE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17979            /*Check for Hardening required or not at Page level granularity */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17980            /* [cover parentID={DF166E2A-8968-4e0f-83ED-5695A39D5D8F}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17981            RetPageChk = Fls_17_Dmu_IsHardeningRequired(PageAddr,FEE_HARDEN_CHK_PAGE);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17982            /* [cover parentID={E0A3EAF7-2662-44f7-AC9F-ED1D8857C6E4}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17983            if (FEE_HARDEN_REQ_ERROR == RetPageChk)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17984            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17985              if(Fee_CfgPtr->FeeQsHardenErrorNotification != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17986              {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17987                Fee_CfgPtr->FeeQsHardenErrorNotification();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17988              }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17989            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17990            /* [cover parentID={910F0835-14B5-435a-BAB6-36D48F695624}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17991            if (FEE_HARDEN_REQRD == RetPageChk)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17992            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17993              /* Page address for which hardening is to be done is returned  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17994              RetAddrToBeHardened = PageAddr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17995            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17996            /*If Hardening check is not required for this page or if the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17997            Hardening check API from Fls encounters any error, then the check
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17998            is continued for the remaining pages*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 17999            StateDataPtr->FeeHardeningPageCount += 1U;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18000          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18001      /* [cover parentID={FAF1DAF5-9928-4217-8160-0585DE0BA446}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18002          while((FEE_HARDEN_REQRD != RetPageChk) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18003                (StateDataPtr->FeeHardeningPageCount < FEE_PAGES_IN_WL));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18004          if (FEE_PAGES_IN_WL == StateDataPtr->FeeHardeningPageCount)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18005          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18006            /* Hardening page count is reset to 0 if it reaches maximum count.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18007            This reset is needed to arrive at the correct calculation of the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18008            corresponding page address of the Wordline if hardening had to be done
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18009            for one or more pages in that word line  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18010            StateDataPtr->FeeHardeningPageCount = 0U;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18011            /* 64 pages in the word line are checked for Hardening, hence move to
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18012            next wordline */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18013            StateDataPtr->FeeHardeningWLCount += 1U;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18014          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18015        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18016        /* [cover parentID={E43329EF-3037-445e-9002-4A57AA8D9F9B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18017        else if (FEE_HARDEN_REQ_ERROR == RetWLChk)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18018        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18019          if(Fee_CfgPtr->FeeQsHardenErrorNotification != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18020          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18021            Fee_CfgPtr->FeeQsHardenErrorNotification();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18022          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18023          /*If Hardening check API from Fls encounters any error, then the check
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18024              is continued for the remaining Word lines after raising the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18025              HardenErrorNotification */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18026          StateDataPtr->FeeHardeningWLCount += 1U;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18027        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18028        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18029        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18030          /*If Hardening check is not required for this Word line then the check
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18031              is continued for the remaining word lines*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18032          StateDataPtr->FeeHardeningWLCount += 1U;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18033        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18034      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18035    } while((FEE_HARDEN_REQRD  != RetPageChk) && (FEE_HARDEN_REQRD  != RetWLChk)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18036          && (FEE_RESET == HardeningRateReached));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18037  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18038    return (RetAddrToBeHardened);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18039  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18040  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18041  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18042  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18043  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18044  #if (((FEE_CANCELL_ALL_API == STD_ON) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18045      (FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA))|| \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18046      ((FEE_ONGOING_WRITE_CANCEL_SUPPORT == STD_ON)&& \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18047      (FEE_DATA_BLOCK_SUPPORTED !=  FEE_QUASI_STATIC_DATA_ONLY)))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18048  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18049  ** Syntax : static void Fee_lCancelWrite (void)                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18050  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18051  ** Service ID: NA                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18052  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18053  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18054  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18055  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18056  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18057  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18058  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18059  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18060  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18061  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18062  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18063  ** Description : Performs canceling of ongoing write operation and resets     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18064  **               job status variables                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18065  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18066  /* [cover parentID={4C58F967-ACB1-4990-8787-235646670441}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18067  Fee_lCancelWrite
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18068  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18069  /* [cover parentID={443D4D30-33BD-41a5-86A5-2C4254B7CCBE}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18070  /* [cover parentID={7E52A5B0-3BEB-4661-9C62-FCF287129FE1}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18071  static void Fee_lCancelWrite(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18072  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18073    /* [cover parentID={4C58F967-ACB1-4990-8787-235646670441}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18074    /* [cover parentID={DDA2DC38-6BEC-43ec-9880-430191057143}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18075    #if (FEE_CANCELL_ALL_API == STD_ON) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18076      (FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18077    Fls_17_Dmu_Job_Type RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18078    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18079    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18080  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18081    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18082    
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18083    /*Checking Switches for avoiding compilation warning*/ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18084    #if (FEE_CANCELL_ALL_API == STD_ON) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18085      (FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA)  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18086    /* [cover parentID={7C3FB0C4-1039-4148-872C-5DD84F746ECE}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18087    RetVal = Fee_lGetUserJob(StateDataPtr->FeePendReqStatus);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18088    if(RetVal == FEE_NO_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18089    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18090      /* GC is cancelled check if there is any request to FLS. If yes then cancel
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18091       the request. GC will be restarted by next NVM read/write request.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18092      /* [cover parentID={EB387ED5-E11A-4e26-8E26-BB95B4EABDDD}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18093      if( StateDataPtr->FeeIntrJobStatus == FEE_JOB_REQSTD)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18094      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18095        /* Cancel ongoing FLS request */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18096        Fls_17_Dmu_Cancel();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18097      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18098  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18099    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18100    /*User write job is cancelled check if there is any request to FLS.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18101    If yes then cancel the request. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18102    /* [cover parentID={79352954-3AB5-4f2a-9306-7842D408EBE4}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18103    else if(StateDataPtr->FeeUserJobStatus == FEE_JOB_REQSTD)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18104    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18105    #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18106    if(StateDataPtr->FeeUserJobStatus == FEE_JOB_REQSTD)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18107    { 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18108    #endif    
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18109      /* NVM job error notification will be triggered by fee_error notification
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18110      called by FLS when job is cancel*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18111      Fls_17_Dmu_Cancel();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18112    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18113    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18114    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18115      /* write job is cancelled then increase free page address to next
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18116      but one WL. This will avoid write on same page for next write job.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18117      Also trigger NVM job error notification */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18118  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18119      Fee_lHandleUsrJobFailure(FEE_CANCEL);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18120      StateDataPtr->FeeNextFreePageAddr += StateDataPtr->FeeLastWriteSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18121      StateDataPtr->FeeNextFreePageAddr = Fee_lGetNextWLAddr(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18122                                            StateDataPtr->FeeNextFreePageAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18123      StateDataPtr->FeeNextFreePageAddr += FEE_DFLASH_WORDLINE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18124    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18125  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18126  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18127  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18128  #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON) \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18129    || (FEE_RUNTIME_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18130  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18131  ** Syntax :  static void Fee_lReportError(uint8 ApiId,uint8 ErrorId)          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18132  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18133  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18134  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18135  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18136  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18137  ** Sync/Async:  Ssynchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18138  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18139  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18140  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18141  ** Parameters (in) : (uint8) ApiId   - Service id of the caller API           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18142  **                   (uint8) ErrorId - ID of the error to be reported         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18143  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18144  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18145  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18146  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18147  ** Description : Function to report Safety Error and DET                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18148  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18149  /* [cover parentID={25435F35-A888-4723-B287-226507149FDF}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18150  static void Fee_lReportError(uint8 ApiId, uint8 ErrorId, uint8 ErrorType)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18151  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18152    /* [cover parentID={83E19753-FDEB-4992-814C-2E0E46A7B40B}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18153    DET enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18154    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18155    #if (FEE_DEV_ERROR_DETECT == STD_ON) || (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18156    /* [cover parentID={55DF4E78-B193-4f4e-BAE1-53C7F0488E20}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18157    Error type is DET safety
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18158    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18159    if(ErrorType == FEE_DET_SAFETY_ERROR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18160    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18161    #if (FEE_DEV_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18162      /* [cover parentID={619A9DAB-D6AA-4ab0-9BD8-5B4D6045C873}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18163      Call DET reporting with FEE_MODULE_ID, FEE_INSTANCE_ID, ApiId, ErrorId
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18164      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18165      (void)Det_ReportError(FEE_MODULE_ID, FEE_INSTANCE_ID, ApiId, ErrorId);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18166    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18167    #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18168        Mcal_ReportSafetyError(FEE_MODULE_ID, FEE_INSTANCE_ID, ApiId,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18169                           ErrorId);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18170    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18171    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18172    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18173    /* [cover parentID={12098A7C-2D7F-47dd-98E6-31801ADEEECF}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18174    Safety enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18175    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18176    #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18177    /* [cover parentID={6B9905AC-07E5-4c3f-9D36-A631CDB2011C}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18178    Error type is safety
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18179    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18180    if(ErrorType == FEE_SAFETY_ERROR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18181    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18182      /* [cover parentID={B17C4A42-EAA9-4623-B004-81338746ACB4}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18183      Reporting Safety Error, calling with FEE_MODULE_ID, FEE_INSTANCE_ID, ApiId, ErrorId
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18184      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18185      Mcal_ReportSafetyError(FEE_MODULE_ID, FEE_INSTANCE_ID, ApiId,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18186                           ErrorId);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18187    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18188    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18189  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18190    #if (FEE_RUNTIME_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18191    /* [cover parentID={B5DF54A6-714A-47fd-93E1-B2455C1FF0FB}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18192    Error type is runtime
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18193    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18194    if(ErrorType == FEE_RUNTIME_ERROR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18195    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18196      /* [cover parentID={2F27C3DA-07F9-494a-ABEA-D3BFBF9D4A21}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18197      Error report runtime error
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18198      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18199      (void)Mcal_Wrapper_Det_ReportRuntimeError(FEE_MODULE_ID, FEE_INSTANCE_ID, ApiId, ErrorId);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18200    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18201    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18202  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18203  } /*End of Fee_lReportError*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18204  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18205  #if (FEE_DEV_ERROR_DETECT == STD_ON)|| (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18206  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18207  ** Syntax : LOCAL_INLINE Std_ReturnType Fee_lReadDetSafetyCheck(const uint16 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18208  **            BlockNumber,                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18209  **            const uint16 BlockOffset,                                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18210  **            const uint8 *const DataBufferPtr,                              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18211  **            const uint16 Length,                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18212  **            uint8 ApiId)                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18213  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18214  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18215  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18216  ** Service ID:                                                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18217  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18218  ** Sync/Async:  Synchronous                                                  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18219  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18220  ** Reentrancy:  Non reentrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18221  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18222  ** Parameters (in) :  BlockNumber - Logical Block Number                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18223  **                    BlockOffset - Read address offset inside the block     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18224  **                    DataBufferPtr - Pointer to data buffer                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18225  **                    Length - Number of bytes to read                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18226  **                    ApiId   - Service id of the caller API                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18227  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18228  ** Parameters (out):  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18229  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18230  ** Return value    :  Std_ReturnType                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18231  **                    E_OK: Check Pass                                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18232  **                    E_NOT_OK: Check Fail                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18233  ** Description : Function will check the input parameters of read api.       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18234  ** if parameters are not in valid range it will trigger DET/Safety Error     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18235  ** and return E_NOT_OK                                                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18236  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18237  /* [cover parentID={23ABBD8D-A68F-4aaf-AE18-F48AB2807A4D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18238  LOCAL_INLINE Std_ReturnType Fee_lReadDetSafetyCheck(const uint16 BlockNumber,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18239      const uint16 BlockOffset,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18240      const uint8 *const DataBufferPtr,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18241      const uint16 Length,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18242      uint8 ApiId)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18243  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18244  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18245    uint16               BlkIdx;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18246    Std_ReturnType       ReturnValue;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18247    uint32               BlkSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18248  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18249    ReturnValue = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18250  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18251    BlkIdx = Fee_lGetUsrBlockIndex(BlockNumber);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18252  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18253    /* If BlockNumber exists in the user configuration and is within range */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18254    /* [cover parentID={A5AA4B8D-E468-40c9-84F7-C2D8B158E3F7}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18255    if (BlkIdx == FEE_LOG_BLOCK_NOT_FOUND)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18256    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18257      /* [cover parentID={ECA67BD8-EE6E-4430-ACA3-48B5E6C73DF7}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18258      Call FEE_E_INVALID_BLOCK_NO DET
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18259      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18260      Fee_lReportError( ApiId, FEE_E_INVALID_BLOCK_NO, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18261  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18262      /* [cover parentID={08827D4A-F03C-4c07-8B21-1A66B88D2E9B}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18263      Set Flag as E_NOT_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18264      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18265      ReturnValue = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18266    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18267    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18268    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18269  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18270      BlkSize = Fee_CfgPtr->FeeBlockConfigPtr[BlkIdx].Size;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18271  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18272      #if(FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18273  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18274      if(Fee_CfgPtr->FeeBlockConfigPtr[BlkIdx].FeeUser ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18275          (uint8)FEE_QUASI_STATIC_USER)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18276      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18277        BlkSize = (BlkSize - (uint32)FEE_QS_DATA_OFFSET);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18278      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18279  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18280      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18281  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18282      /* Check if the offset is valid i.e. within the block size */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18283      /* [cover parentID={BE1BD7E2-7232-44b7-8398-827D58F459AC}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18284      if ((uint32)BlockOffset >= BlkSize)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18285      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18286        /* [cover parentID={AD7C84D9-5CEB-4117-BE53-311BACA9A2BA}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18287        Fee_lReportError(ApiId, FEE_E_INVALID_BLOCK_OFS, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18288        ReturnValue = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18289      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18290      /* Check if the buffer pointer is non-NULL */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18291      /* [cover parentID={FB8055D1-97F4-4119-B92B-1ED00A492EEB}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18292      else if (DataBufferPtr == (uint8*) NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18293      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18294        /* [cover parentID={8F216F9D-8347-4daf-85DB-47B00524726E}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18295        Call FEE_E_PARAM_POINTER DET
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18296        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18297        Fee_lReportError(ApiId, FEE_E_PARAM_POINTER, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18298  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18299        ReturnValue = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18300      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18301  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18302      /* Check if the Length (from the given offset) is valid */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18303      /* [cover parentID={264D8497-F461-4c65-A096-9C2B89F19780}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18304      else if ( ((uint32)BlockOffset + Length) > BlkSize )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18305      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18306        /* [cover parentID={E2D729FE-30D6-44a7-A6B7-FD2B03DBBB7F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18307        Call FEE_E_INVALID_BLOCK_LEN DET
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18308        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18309        Fee_lReportError(ApiId, FEE_E_INVALID_BLOCK_LEN, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18310        /* [cover parentID={322440D0-572D-4143-B13B-D5EEC76BB78D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18311        ReturnValue = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18312      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18313      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18314      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18315        /* dummy else */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18316      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18317    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18318    return(ReturnValue);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18319  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18320  } /*End of Fee_lReadDetSafetyCheck*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18321  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18322  #if((FEE_RUNTIME_ERROR_DETECT == STD_ON) || \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18323    (((FEE_SAFETY_ENABLE == STD_ON) || (FEE_DEV_ERROR_DETECT == STD_ON)) && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18324    (MCAL_AR_VERSION == MCAL_AR_422)))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18325  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18326  ** Syntax : LOCAL_INLINE Std_ReturnType Fee_lCancelDetSafetyCheck(void)      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18327  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18328  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18329  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18330  ** Service ID:                                                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18331  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18332  ** Sync/Async:  Synchronous                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18333  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18334  ** Reentrancy:  Non reentrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18335  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18336  ** Parameters (in) :  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18337  ** Parameters (out):  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18338  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18339  ** Return value    :  Std_ReturnType                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18340  **                    E_OK: Check Pass                                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18341  **                    E_NOT_OK: Check Fail                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18342  ** Description : Function will check configuration pointer against the null  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18343  ** and module status. if check fails it will trigger DET/Safety Error and    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18344  ** return E_NOT_OK                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18345  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18346  /*[cover parentID={DEE5A0C3-3D9A-4d4a-8649-C7FFA0F0C5BD}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18347  LOCAL_INLINE Std_ReturnType Fee_lCancelDetSafetyCheck(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18348  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18349    MemIf_StatusType   FeeStatus;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18350    Std_ReturnType     ReturnValue;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18351  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18352    ReturnValue = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18353    FeeStatus = Fee_lGetStatus();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18354    /*[cover parentID={4356B03D-1BA3-4189-BC05-4949CC3AC244}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18355    if(FeeStatus != MEMIF_BUSY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18356    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18357      /*[cover parentID={372A760A-5C83-4ca1-82E4-293444E9D91B}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18358      #if(MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18359      /* [cover parentID={7AEE303F-4415-4486-9022-D1393EDAD51B}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18360      Report runtime error FEE_E_INVALID_CANCEL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18361      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18362      Fee_lReportError(FEE_SID_CANCEL, FEE_E_INVALID_CANCEL, FEE_RUNTIME_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18363      #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18364      Fee_lReportError(FEE_SID_CANCEL, FEE_E_INVALID_CANCEL, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18365      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18366      ReturnValue = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18367    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18368    return(ReturnValue);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18369  } /*End of Fee_lCancelDetSafetyCheck*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18370  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18371  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18372  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18373  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18374  ** Syntax : LOCAL_INLINE Std_ReturnType Fee_lInitSafetyCheck(void)           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18375  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18376  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18377  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18378  ** Service ID:                                                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18379  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18380  ** Sync/Async:  Synchronous                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18381  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18382  ** Reentrancy:  Non reentrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18383  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18384  ** Parameters (in) :  API: Service id of the caller API                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18385  ** Parameters (out):  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18386  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18387  ** Return value    :  Std_ReturnType                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18388  **                    E_OK: Check Pass                                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18389  **                    E_NOT_OK: Check Fail                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18390  ** Description : Check for the initialization of the driver and report error **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18391  **               enabled.                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18392  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18393  /* [cover parentID={7EF79FAD-36AE-4efb-8E68-EF4B20DDA6C9}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18394  LOCAL_INLINE Std_ReturnType Fee_lInitSafetyCheck(const uint8 ApiId)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18395  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18396    /* [cover parentID={9B9284EF-B93F-4723-B585-B9E49F305EF4}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18397    Set return value as E_NOT_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18398    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18399    Std_ReturnType RetVal = E_NOT_OK;
	mov	d9,#1
.L3254:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18400  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18401    #if(FEE_DEV_ERROR_DETECT != STD_ON) && (FEE_SAFETY_ENABLE != STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18402    UNUSED_PARAMETER (ApiId);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18403    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18404  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18405    /* [cover parentID={5E0BA685-3A9F-46f8-8244-1DC917CC7FE5}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18406    Is configuration pointer is null?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18407    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18408    if(Fee_CfgPtr != NULL_PTR)
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.w	d15,[a15]@los(Fee_CfgPtr)
.L4420:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18408    if(Fee_CfgPtr != NULL_PTR)      (inlined)
	jeq	d15,#0,.L141
.L4421:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18409    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18410      #if(MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18411      /* [cover parentID={0B31F784-2D1C-4fc0-B42D-E5D011FD9B83}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18412      Is Driver initialization is complete?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18413      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18414      if(Fee_lGetStatus() != MEMIF_UNINIT)
	call	Fee_lGetStatus
.L4422:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18414      if(Fee_lGetStatus() != MEMIF_UNINIT)      (inlined)
	jeq	d2,#0,.L142
.L4423:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18415      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18416      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18417        RetVal = E_OK;
	mov	d9,#0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18414      if(Fee_lGetStatus() != MEMIF_UNINIT)      (inlined)
.L142:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18408    if(Fee_CfgPtr != NULL_PTR)      (inlined)
.L141:
	jne	d9,#0,.L143
.L1817:
	mov	d15,#0
.L3255:
	call	Fee_lGetStatus
.L3257:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18355    if(FeeStatus != MEMIF_BUSY)      (inlined)
	jeq	d2,#2,.L144
.L4424:
	mov	d4,#4
.L4425:
	mov	d5,#8
.L4426:
	mov	d6,#2
	call	Fee_lReportError
.L3258:
	mov	d15,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18355    if(FeeStatus != MEMIF_BUSY)      (inlined)
.L144:
	jne	d15,#0,.L145
.L1823:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4427:
	ld.a	a15,[a15]
.L3259:
	ld.bu	d15,[a15]2514
.L3256:
	jeq	d15,#3,.L146
.L4428:
	jeq	d15,#5,.L147
.L4429:
	jeq	d15,#6,.L148
.L4430:
	mov	d0,#8
	jeq	d15,d0,.L149
.L4431:
	mov	d0,#9
	jeq	d15,d0,.L150
	j	.L151
.L147:
.L146:
	ld.bu	d15,[a15]2525
.L4432:
	jne	d15,#1,.L152
.L4433:
	call	Fls_17_Dmu_CancelNonEraseJobs
.L4434:
	j	.L153
.L152:
.L150:
.L149:
.L148:
	mov	d8,#1
.L153:
.L151:
	jeq	d8,#0,.L154
.L4435:
	mov	d4,#0
	j	Fee_lHandleUsrJobFailure
.L154:
.L145:
.L143:
	ret
.L1811:
	
__Fee_Cancel_function_end:
	.size	Fee_Cancel,__Fee_Cancel_function_end-Fee_Cancel
.L1251:
	; End of function
	
	.sdecl	'.text.Fee_GetStatus.Code.Cpu0',code,cluster('Fee_GetStatus')
	.sect	'.text.Fee_GetStatus.Code.Cpu0'
	.align	2
	
	.global	Fee_GetStatus
; Function Fee_GetStatus
.L1084:
Fee_GetStatus:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.w	d15,[a15]@los(Fee_CfgPtr)
.L4440:
	jeq	d15,#0,.L155
.L4441:
	j	Fee_lGetStatus
.L155:
	mov	d2,#0
.L3260:
	ret
.L1827:
	
__Fee_GetStatus_function_end:
	.size	Fee_GetStatus,__Fee_GetStatus_function_end-Fee_GetStatus
.L1256:
	; End of function
	
	.sdecl	'.text.Fee_GetJobResult.Code.Cpu0',code,cluster('Fee_GetJobResult')
	.sect	'.text.Fee_GetJobResult.Code.Cpu0'
	.align	2
	
	.global	Fee_GetJobResult
; Function Fee_GetJobResult
.L1086:
Fee_GetJobResult:	.type	func
	mov	d15,#1
.L3261:
	call	Fee_lGetStatus
.L4446:
	jeq	d2,#0,.L158
.L4447:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4448:
	ld.a	a15,[a15]
.L3262:
	ld.bu	d15,[a15]2480
.L158:
	mov	d2,d15
.L3263:
	ret
.L1830:
	
__Fee_GetJobResult_function_end:
	.size	Fee_GetJobResult,__Fee_GetJobResult_function_end-Fee_GetJobResult
.L1261:
	; End of function
	
	.sdecl	'.text.Fee_InvalidateBlock.Code.Cpu0',code,cluster('Fee_InvalidateBlock')
	.sect	'.text.Fee_InvalidateBlock.Code.Cpu0'
	.align	2
	
	.global	Fee_InvalidateBlock
; Function Fee_InvalidateBlock
.L1088:
Fee_InvalidateBlock:	.type	func
	mov	d8,d4
.L1841:
	mov	d9,#1
.L3265:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.w	d15,[a15]@los(Fee_CfgPtr)
.L4453:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18408    if(Fee_CfgPtr != NULL_PTR)      (inlined)
	jeq	d15,#0,.L160
.L4454:
	call	Fee_lGetStatus
.L3264:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18414      if(Fee_lGetStatus() != MEMIF_UNINIT)      (inlined)
	jeq	d2,#0,.L161
.L4455:
	mov	d9,#0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18414      if(Fee_lGetStatus() != MEMIF_UNINIT)      (inlined)
.L161:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18408    if(Fee_CfgPtr != NULL_PTR)      (inlined)
.L160:
	jne	d9,#0,.L162
.L1842:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4456:
	ld.a	a12,[a15]
.L3266:
	mov	d4,d8
.L3267:
	call	Fee_lGetUsrBlockIndex
.L3268:
	mov	d15,d2
.L3270:
	call	Fee_lGetStatus
.L3269:
	jeq	d2,#2,.L163
.L4457:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4458:
	ld.a	a15,[a15]4
.L4459:
	addsc.a	a5,a15,d15,#3
.L3273:
	ld.bu	d15,[a12]2512
.L3271:
	or	d15,#8
	st.b	[a12]2512,d15
.L4460:
	lea	a4,[a12]908
.L4461:
	call	Fee_lRegisterWriteRequest
.L3272:
	j	.L164
.L163:
	mov	d4,#7
.L4462:
	mov	d5,#6
.L4463:
	mov	d6,#2
	call	Fee_lReportError
.L1845:
	mov	d9,#1
.L164:
.L162:
	mov	d2,d9
.L1846:
	ret
.L1833:
	
__Fee_InvalidateBlock_function_end:
	.size	Fee_InvalidateBlock,__Fee_InvalidateBlock_function_end-Fee_InvalidateBlock
.L1266:
	; End of function
	
	.sdecl	'.text.Fee_EraseImmediateBlock.Code.Cpu0',code,cluster('Fee_EraseImmediateBlock')
	.sect	'.text.Fee_EraseImmediateBlock.Code.Cpu0'
	.align	2
	
	.global	Fee_EraseImmediateBlock
; Function Fee_EraseImmediateBlock
.L1090:
Fee_EraseImmediateBlock:	.type	func
	mov	d2,#1
.L4468:
	ret
.L1848:
	
__Fee_EraseImmediateBlock_function_end:
	.size	Fee_EraseImmediateBlock,__Fee_EraseImmediateBlock_function_end-Fee_EraseImmediateBlock
.L1271:
	; End of function
	
	.sdecl	'.text.Fee_17_InitCheck.Code.Cpu0',code,cluster('Fee_17_InitCheck')
	.sect	'.text.Fee_17_InitCheck.Code.Cpu0'
	.align	2
	
	.global	Fee_17_InitCheck
; Function Fee_17_InitCheck
.L1092:
Fee_17_InitCheck:	.type	func
	mov	d2,#1
.L3274:
	jz.a	a4,.L167
.L4473:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.w	d15,[a15]@los(Fee_CfgPtr)
.L4474:
	jeq	d15,#0,.L168
.L4475:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4476:
	jne.a	a15,a4,.L169
.L1855:
	mov	d0,#2540
.L3275:
	mov	d1,#0
.L3276:
	ld.a	a15,[a4]
.L3277:
	mov	d15,d1
.L3279:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2649    for(Index = FEE_RESET; Index < FeeDataStructSize; Index++)      (inlined)
	j	.L170
.L171:
	addsc.a	a2,a15,d15,#0
	ld.bu	d3,[a2]
	crc32.b	d1,d1,d3
.L4477:
	add	d15,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  2649    for(Index = FEE_RESET; Index < FeeDataStructSize; Index++)      (inlined)
.L170:
	jlt.u	d15,d0,.L171
.L1856:
	movh.a	a15,#@his(Fee_DataStrcutInitCrc)
.L3278:
	ld.w	d15,[a15]@los(Fee_DataStrcutInitCrc)
.L1858:
	jne	d15,d1,.L172
.L1859:
	mov	d2,#0
.L172:
.L169:
.L168:
.L167:
	ret
.L1851:
	
__Fee_17_InitCheck_function_end:
	.size	Fee_17_InitCheck,__Fee_17_InitCheck_function_end-Fee_17_InitCheck
.L1276:
	; End of function
	
	.sdecl	'.text.Fee_JobEndNotification.Code.Cpu0',code,cluster('Fee_JobEndNotification')
	.sect	'.text.Fee_JobEndNotification.Code.Cpu0'
	.align	2
	
	.global	Fee_JobEndNotification
; Function Fee_JobEndNotification
.L1094:
Fee_JobEndNotification:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4533:
	ld.a	a15,[a15]
.L3280:
	call	Fls_17_Dmu_GetNotifCaller
.L3282:
	mov	d8,d2
.L3284:
	ld.bu	d15,[a15]2523
.L4534:
	jne	d15,d8,.L174
.L4535:
	mov	d15,#2
.L4536:
	st.b	[a15]2524,d15
.L4537:
	mov	d15,#0
.L4538:
	st.b	[a15]2526,d15
.L4539:
	st.b	[a15]2523,d15
.L4540:
	ret
.L174:
	ld.bu	d4,[a15]2514
	call	Fee_lGetUserJob
.L3283:
	jne	d2,d8,.L176
.L4541:
	mov	d15,#0
.L4542:
	st.b	[a15]2525,d15
.L4543:
	st.b	[a15]2527,d15
.L4544:
	jne	d8,#3,.L177
.L1895:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18418      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18419      #if((FEE_DEV_ERROR_DETECT == STD_ON) || (FEE_SAFETY_ENABLE == STD_ON))\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18420      && (MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18421      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18422      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18423        Fee_lReportError(ApiId, FEE_E_UNINIT, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18424      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18425      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18426    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18427    #if(FEE_DEV_ERROR_DETECT == STD_ON) || (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18428    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18429    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18430      /* [cover parentID={B24EE8C3-E059-4468-9BB4-D69FE0406250}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18431      Report Det safety error FEE_E_UNINIT
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18432      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18433      Fee_lReportError(ApiId, FEE_E_UNINIT, FEE_DET_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18434    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18435    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18436    return RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18437  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18438  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18439  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18440  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18441  ** Syntax : LOCAL_INLINE Std_ReturnType Fee_lEraseQsDataSafetycheck(void)    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18442  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18443  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18444  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18445  ** Service ID:                                                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18446  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18447  ** Sync/Async:  Synchronous                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18448  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18449  ** Reentrancy:  Non reentrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18450  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18451  ** Parameters (in) :  None                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18452  ** Parameters (out):  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18453  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18454  ** Return value    :  Std_ReturnType                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18455  **                    E_OK: Check Pass                                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18456  **                    E_NOT_OK: Check Fail                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18457  ** Description : Check for the initialization and busy status of the driver  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18458  **               and report error if enabled                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18459  **               enabled.                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18460  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18461  /* [cover parentID={96CBCDEB-1881-4162-8C39-DB234820A1B8}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18462  LOCAL_INLINE Std_ReturnType Fee_lEraseQsDataSafetycheck()
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18463  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18464    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18465    const Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18466  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18467    #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18468    /* [cover parentID={2A3B66A6-384F-461e-BE03-E25290A7DCF6}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18469    Is configuration pointer is not NULL?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18470    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18471    if(Fee_CfgPtr != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18472    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18473    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18474      #if(MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18475      /* [cover parentID={693C2374-18EC-4e7d-9181-571EBEEAAB4D}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18476      Is driver initialization is complete
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18477      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18478      if(Fee_lGetStatus() != MEMIF_UNINIT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18479      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18480      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18481        StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18482          #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18483          /* [cover parentID={0F32ADB1-8044-438e-AC1F-C9012E4481EC}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18484          If GC is not idle or pending request exsists?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18485          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18486          if(( StateDataPtr->FeePendReqStatus == FEE_PEND_PREV_NO_REQ ) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18487              ( StateDataPtr->FeeGcState == FEE_GC_IDLE))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18488          #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18489          /* [cover parentID={AA1C0DFA-1AC2-4e16-BC19-428DAE3BE8CF}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18490          Is perivious request pending?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18491          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18492          if(StateDataPtr->FeePendReqStatus == FEE_PEND_PREV_NO_REQ )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18493          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18494          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18495            RetVal = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18496          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18497          #if ((FEE_SAFETY_ENABLE == STD_ON)) \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18498           || (FEE_RUNTIME_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18499          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18500          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18501          #if (FEE_DATA_BLOCK_SUPPORTED == FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18502            #if (MCAL_AR_VERSION == MCAL_AR_422)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18503            Fee_lReportError(FEE_SID_ERASEQUASISTATICDATA,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18504                                FEE_SE_BUSY, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18505            #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18506            Fee_lReportError(FEE_SID_ERASEQUASISTATICDATA,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18507                                FEE_E_BUSY, FEE_RUNTIME_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18508            #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18509            #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18510            if(StateDataPtr->FeePendReqStatus != FEE_PEND_PREV_NO_REQ )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18511            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18512              #if (MCAL_AR_VERSION == MCAL_AR_422)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18513              Fee_lReportError(FEE_SID_ERASEQUASISTATICDATA,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18514                                  FEE_SE_BUSY, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18515              #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18516              Fee_lReportError(FEE_SID_ERASEQUASISTATICDATA,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18517                                FEE_E_BUSY, FEE_RUNTIME_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18518              #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18519            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18520            #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18521          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18522          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18523      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18524      #if(FEE_SAFETY_ENABLE == STD_ON) && (MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18525      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18526      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18527        Fee_lReportError(FEE_SID_ERASEQUASISTATICDATA,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18528                              FEE_SE_UNINIT, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18529      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18530      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18531    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18532    #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18533    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18534    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18535      Fee_lReportError(FEE_SID_ERASEQUASISTATICDATA,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18536                            FEE_SE_UNINIT, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18537    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18538    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18539    return RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18540  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18541  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18542  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18543  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18544  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18545  ** Syntax : LOCAL_INLINE Std_ReturnType Fee_lQsBlkInfoSafetyCheck            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18546  **             (const Fee_QuasiStaticBlockInfoType * const BlockInfoPtr)     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18547  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18548  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18549  ** Service ID:                                                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18550  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18551  ** Sync/Async:  Synchronous                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18552  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18553  ** Reentrancy:  Non reentrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18554  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18555  ** Parameters (in) :  BlockInfoPtr: Block information pointer                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18556  ** Parameters (out):  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18557  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18558  ** Return value    :  Std_ReturnType                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18559  **                    E_OK: Check Pass                                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18560  **                    E_NOT_OK: Check Fail                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18561  ** Description : The function check for the initialization and the null      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18562  **               pointer check, report error if enabled.                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18563  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18564  /* [cover parentID={FB12060E-7F0F-46d2-91D5-751DDC199AB0}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18565  LOCAL_INLINE Std_ReturnType Fee_lQsBlkInfoSafetyCheck
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18566        (const Fee_QuasiStaticBlockInfoType * const BlockInfoPtr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18567  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18568    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18569    const Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18570  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18571    #if (FEE_SAFETY_ENABLE != STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18572    UNUSED_PARAMETER (BlockInfoPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18573    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18574  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18575    #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18576    /* [cover parentID={72458822-6450-460f-9D78-7466AB1EB6A8}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18577    CfgPtr is NULL or block information pointer is NULL?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18578    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18579    if((Fee_CfgPtr != NULL_PTR) && (BlockInfoPtr != NULL_PTR))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18580    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18581    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18582      StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18583      #if(MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18584      /* [cover parentID={5F458C76-38B1-4c44-B4F7-EF79BBD7D3C6}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18585      Is driver initialization is complete
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18586      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18587      if(Fee_lGetStatus() != MEMIF_UNINIT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18588      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18589      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18590        /* [cover parentID={210F32A1-192F-452a-8873-F4A1E65C4444}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18591          Is driver busy
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18592        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18593        #if(MCAL_AR_VERSION == MCAL_AR_422)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18594        if((StateDataPtr->FeeInitQSState == FEE_INITQS_COMPLETE)  && \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18595            ( StateDataPtr->FeePendReqStatus == FEE_PEND_PREV_NO_REQ ))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18596        #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18597        if(StateDataPtr->FeePendReqStatus == FEE_PEND_PREV_NO_REQ)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18598        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18599        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18600          RetVal = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18601        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18602        #if ((FEE_SAFETY_ENABLE == STD_ON) && (MCAL_AR_VERSION == MCAL_AR_422))\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18603        || (FEE_RUNTIME_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18604        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18605        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18606        #if(MCAL_AR_VERSION == MCAL_AR_422)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18607          if(StateDataPtr->FeePendReqStatus != FEE_PEND_PREV_NO_REQ)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18608        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18609          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18610          #if(FEE_SAFETY_ENABLE == STD_ON) && (MCAL_AR_VERSION == MCAL_AR_422)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18611            Fee_lReportError(FEE_SID_GETQUASISTATICBLOCKINFO,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18612                                FEE_SE_BUSY, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18613          #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18614            Fee_lReportError(FEE_SID_GETQUASISTATICBLOCKINFO,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18615                                FEE_E_BUSY, FEE_RUNTIME_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18616          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18617          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18618        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18619        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18620      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18621      #if(MCAL_AR_VERSION == MCAL_AR_440) && (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18622      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18623      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18624        Fee_lReportError(FEE_SID_GETQUASISTATICBLOCKINFO,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18625                              FEE_SE_UNINIT, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18626      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18627      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18628    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18629    #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18630    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18631    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18632      /* [cover parentID={C0834B77-1E77-4321-B89C-508F58191567}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18633      Is configuration pointer is NULL?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18634      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18635      if(Fee_CfgPtr != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18636      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18637        Fee_lReportError(FEE_SID_GETQUASISTATICBLOCKINFO,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18638                            FEE_SE_PARAM_POINTER, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18639      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18640      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18641      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18642        Fee_lReportError(FEE_SID_GETQUASISTATICBLOCKINFO,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18643                          FEE_SE_UNINIT, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18644      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18645    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18646    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18647    return RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18648  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18649  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18650  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18651  #if (FEE_SAFETY_ENABLE == STD_ON) || (MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18652  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY) \ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18653      && (FEE_GET_CYCLE_COUNT_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18654  /******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18655  ** Syntax : LOCAL_INLINE Std_ReturnType Fee_lGetCycleSafetyCheck             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18656  **                                      (const uint32 * const CountPtr)  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18657  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18658  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18659  ** Service ID:                                                               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18660  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18661  ** Sync/Async:  Synchronous                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18662  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18663  ** Reentrancy:  Non reentrant                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18664  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18665  ** Parameters (in) :  CountPtr     : Count pointer passed.                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18666  ** Parameters (out):  None                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18667  **                                                                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18668  ** Return value    :  Std_ReturnType                                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18669  **                    E_OK: Check Pass                                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18670  **                    E_NOT_OK: Check Fail                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18671  ** Description : The function check for the initialization and the null      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18672  **               pointer check, report error if enabled.                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18673  ******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18674  /* [cover parentID={45AB1DF7-9855-4799-B3A8-5869709004B6}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18675  LOCAL_INLINE Std_ReturnType Fee_lGetCycleSafetyCheck
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18676            (const uint32 * const CountPtr)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18677  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18678    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18679  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18680    #if(MCAL_AR_VERSION == MCAL_AR_440) && (FEE_SAFETY_ENABLE != STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18681    UNUSED_PARAMETER (CountPtr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18682    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18683  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18684    #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18685    /* [cover parentID={D1ED6278-AF69-44cf-83F2-64D4E5DE7064}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18686    Driver is not initialized or count pointer is NULL?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18687    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18688    if((Fee_CfgPtr != NULL_PTR) && (CountPtr != NULL_PTR))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18689    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18690    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18691      #if(MCAL_AR_VERSION == MCAL_AR_440)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18692      /* [cover parentID={8D1746AA-35F9-47c0-88AE-3C45EDE5DCB7}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18693      Is driver initialization is complete
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18694      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18695      if(Fee_lGetStatus() != MEMIF_UNINIT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18696      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18697      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18698        RetVal = E_OK;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18699      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18700      #if(MCAL_AR_VERSION == MCAL_AR_440) && (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18701      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18702      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18703        Fee_lReportError(FEE_SID_GETCYCLECOUNT,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18704                              FEE_SE_UNINIT, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18705      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18706      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18707    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18708    #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18709    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18710    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18711      /* [cover parentID={66E25A95-E286-4966-BBF1-490E4DE39B62}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18712      Is configuration pointer is NULL?
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18713      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18714      if(Fee_CfgPtr != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18715      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18716        Fee_lReportError(FEE_SID_GETCYCLECOUNT,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18717                            FEE_SE_PARAM_POINTER, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18718      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18719      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18720      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18721        Fee_lReportError(FEE_SID_GETCYCLECOUNT,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18722                          FEE_SE_UNINIT, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18723      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18724    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18725    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18726  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18727    return RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18728  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18729  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18730  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18731  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18732  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18733  ** TRACEABILITY: TBD                                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18734  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18735  ** Syntax : LOCAL_INLINE void Fee_lHandleCancelNotification(void)             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18736  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18737  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18738  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18739  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18740  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18741  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18742  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18743  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18744  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18745  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18746  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18747  ** Parameters (out):  None                                                    **k
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18748  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18749  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18750  ** Return value    : void                                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18751  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18752  ** Description : Service to handle the cancel job notification. This function **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18753  ** is called from  Fee_JobErrorNotification                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18754  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18755  /*[cover parentID={ECCF5152-94AC-4ae0-8779-8E757F46D24F}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18756  LOCAL_INLINE void Fee_lHandleCancelNotification(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18757  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18758    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18759    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18760  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18761    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18762  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18763    /* check if it is QS read/write/erase job */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18764    /*[cover parentID={9B9D2BC8-470B-4e51-B351-A45EE52220F9}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18765    if(StateDataPtr->FeeQsJob != FEE_NO_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18766    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18767      /* Call the Fee_lHandleQsJobFailure with  FEE_CANCEL to notify
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18768      user about cancelled of job*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18769      /*[cover parentID={72C96430-9B50-48ba-80EC-65053978087B}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18770      Fee_lHandleQsJobFailure(FEE_CANCEL);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18771    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18772    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18773    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18774    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18775      /*Call the nvm error notification using Fee_lHandleUsrJobFailure
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18776      to notify cancelled job*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18777  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18778      /*If write job is cancelled then increase free page address to next
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18779      but one WL. This will avoid write on same page for next write job*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18780      /*[cover parentID={8D56D966-D3B4-4917-B6F7-F15C4E3A9F37}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18781      if(Fee_lGetUserJob(StateDataPtr->FeePendReqStatus) == FEE_WRITE_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18782      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18783        StateDataPtr->FeeNextFreePageAddr += StateDataPtr->FeeLastWriteSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18784        #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18785        if(Fee_lIsWLBeginning(StateDataPtr->FeeNextFreePageAddr) != FEE_NEW_WL_BEGIN)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18786        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18787        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18788          StateDataPtr->FeeNextFreePageAddr = Fee_lGetNextWLAddr(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18789                                              StateDataPtr->FeeNextFreePageAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18790        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18791        StateDataPtr->FeeNextFreePageAddr += FEE_DFLASH_WORDLINE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18792        /*[cover parentID={6745F3AC-F1F9-461c-918F-E4EC103766D5}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18793        Fee_lHandleUsrJobFailure(FEE_CANCEL);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18794        StateDataPtr->FeeUserJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18795        StateDataPtr->FeeUserJobResult = FEE_JOB_FAIL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18796      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18797      /*[cover parentID={45E51B08-CAAE-4a31-9B82-27E2948E535A}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18798      else if(Fee_lGetUserJob(StateDataPtr->FeePendReqStatus)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18799              == FEE_READ_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18800      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18801        Fee_lHandleUsrJobFailure(FEE_CANCEL);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18802        StateDataPtr->FeeUserJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18803        StateDataPtr->FeeUserJobResult = FEE_JOB_FAIL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18804      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18805      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18806      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18807        /* Internal job(GC related)is cancelled only reset internal
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18808        variables NVM error notification is not needed for internal job*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18809        StateDataPtr->FeeIntrJobStatus = FEE_JOB_DONE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18810        StateDataPtr->FeeIntrJobResult = FEE_JOB_FAIL;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18811        StateDataPtr->FeeIntrJob = FEE_NO_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18812      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18813  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18814    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18815  }  /* End of Fee_lHandleCancelNotification() */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18816  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18817  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18818  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18819  ** TRACEABILITY: TBD                                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18820  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18821  ** Syntax : LOCAL_INLINE void Fee_lHandleUsrJobErrorNotification(             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18822  **                                           Fls_17_Dmu_Job_Type Job)         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18823  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18824  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18825  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18826  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18827  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18828  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18829  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18830  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18831  ** Parameters (in) :  Fls_17_Dmu_Job_Type Job: give the job type Write/Read   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18832  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18833  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18834  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18835  ** Return value    : void                                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18836  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18837  ** Description : Service to handle the failed job notification. This function **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18838  ** is called from Fee_JobErrorNotification                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18839  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18840  /* [cover parentID={783AEE17-3F9A-4e7d-9F8B-287916DEA8FD},
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18841  {3A8E66AE-97FF-474d-9C6B-03FB9E8F4473}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18842  Fee_lHandleUsrJobErrorNotification
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18843  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18844  LOCAL_INLINE void Fee_lHandleUsrJobErrorNotification(Fls_17_Dmu_Job_Type Job)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18845  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18846    /* [cover parentID={783AEE17-3F9A-4e7d-9F8B-287916DEA8FD}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18847    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18848    uint8               Error;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18849    uint16              BlockIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18850    Fee_CacheType      *BlkPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18851    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18852    #if (FEE_GET_PREV_DATA_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18853    Fee_PendReqBufType *PendReqPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18854    PendReqPtr = &(StateDataPtr->FeePendReqInfo);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18855    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18856    /* [cover parentID={58446A1A-A9F2-4b68-83EE-5BEA000D737A}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18857    if(Job == FEE_WRITE_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18858    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18859      /* if job is write job */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18860      if(StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18861          (uint32)FEE_SET )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18862      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18863        StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18864        Error = FEE_INVALIDATE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18865      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18866      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18867      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18868        Error = FEE_WRITE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18869      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18870  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18871      /* Update Next Free Page Address to next but one WL  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18872      StateDataPtr->FeeNextFreePageAddr += StateDataPtr->FeeLastWriteSize;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18873  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18874      StateDataPtr->FeeNextFreePageAddr = Fee_lGetNextWLAddr(
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18875                                            StateDataPtr->FeeNextFreePageAddr);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18876      StateDataPtr->FeeNextFreePageAddr += FEE_DFLASH_WORDLINE_SIZE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18877  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18878  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18879    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18880    /* [cover parentID={AAA3FCEA-E231-402c-B71A-C4D107C4CC54}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18881    else /*if(job == FLS_READ_JOB)*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18882    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18883      /* job is read job */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18884      /* Update block state as Inconsistent in Cache */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18885      BlockIndex =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18886        Fee_lGetUsrBlockIndex(StateDataPtr->FeeCurrReqBlockNum);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18887      if(BlockIndex != FEE_LOG_BLOCK_NOT_FOUND )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18888      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18889      BlkPtr = &(StateDataPtr->FeeBlockInfo[BlockIndex]);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18890      #if (FEE_GET_PREV_DATA_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18891      if(PendReqPtr->GetPrevCopy == FEE_SET )
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18892      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18893        PendReqPtr->GetPrevCopy = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18894        BlkPtr->Status.PrevCopyConsistent = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18895      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18896      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18897      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18898      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18899        BlkPtr->Status.Consistent = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18900        if(StateDataPtr->FeeCurrReqBlockNum ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18901            StateDataPtr->FeeLastWrittenBlkInfo.BlockNumber)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18902        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18903          StateDataPtr->FeeLastWrittenBlkInfo.Status.Consistent =
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18904            FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18905          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18906        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18907      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18908      Error = FEE_READ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18909    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18910  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18911    Fee_lHandleUsrJobFailure(Error);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18912  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18913  } /* End of Fee_lHandleUsrJobErrorNotification() */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18914  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18915  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18916  ** TRACEABILITY: TBD                                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18917  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18918  ** Syntax : LOCAL_INLINE void Fee_lHandleReadJobEndNotification(Void)         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18919  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18920  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18921  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18922  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18923  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18924  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18925  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18926  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18927  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18928  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18929  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18930  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18931  ** Return value    : void                                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18932  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18933  ** Description : Service to handle the Read job completed notification. This  **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18934  ** function is called from Fee_JobEndNotification                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18935  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18936  /*[cover parentID={99174D42-6191-4f33-AD96-AC2AF1DB0CF9}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18937  LOCAL_INLINE void Fee_lHandleReadJobEndNotification(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18938  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18939    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18940    uint16             DataByteCount;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18941    uint16             BlockOffset;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18942    uint16             Length;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18943    uint16             LoopIndex;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18944  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18945    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
	movh.a	a15,#@his(Fee_CfgPtr)
.L3281:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4545:
	ld.a	a15,[a15]
.L3285:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18946    /* Is this last data set of block if yes then copy data into user buffer and
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18947    trigger job completed notification if configured */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18948    /*[cover parentID={FD9D397A-6B20-4bc2-AC85-FFA64B0C28C4}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18949    if(StateDataPtr->FeePendReqStatus == FEE_PEND_PREV_READ_NOTIF)
	ld.bu	d15,[a15]2514
.L4546:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18949    if(StateDataPtr->FeePendReqStatus == FEE_PEND_PREV_READ_NOTIF)      (inlined)
	jne	d15,#5,.L178
.L4547:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18950    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18951      Length = StateDataPtr->FeePendReqInfo.Length;
	ld.hu	d0,[a15]764
.L3287:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18952      BlockOffset = StateDataPtr->FeePendReqInfo.BlockOffset;
	ld.hu	d1,[a15]762
.L3288:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18953      DataByteCount = FEE_ONE;
	mov	d2,#1
.L3289:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18956      if(BlockOffset > FEE_ZERO)      (inlined)
	jeq	d1,#0,.L183
.L4548:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18958        while((BlockOffset < FEE_SEVEN) && (Length > FEE_ZERO))      (inlined)
	j	.L180
.L181:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18954  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18955      /* Copy read data to user buffer */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18956      if(BlockOffset > FEE_ZERO)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18957      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18958        while((BlockOffset < FEE_SEVEN) && (Length > FEE_ZERO))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18959        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18960  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18961          StateDataPtr->FeePendReqInfo.DataBufferPtr[0] =
	ld.a	a2,[a15]752
.L4549:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18962            StateDataPtr->FeeReadWriteBuffer[DataByteCount + BlockOffset];
	add	d15,d2,d1
.L4550:
	addsc.a	a4,a15,d15,#0
	ld.bu	d15,[a4]908
.L4551:
	st.b	[a2],d15
.L4552:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18963          BlockOffset++;
	add	d1,#1
.L4553:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18964  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18965          StateDataPtr->FeePendReqInfo.DataBufferPtr++;
	ld.a	a2,[a15]752
.L4554:
	add.a	a2,#1
	st.a	[a15]752,a2
.L4555:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18966          Length--;
	add	d0,#-1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18958        while((BlockOffset < FEE_SEVEN) && (Length > FEE_ZERO))      (inlined)
.L180:
	jge.u	d1,#7,.L182
.L4556:
	jne	d0,#0,.L181
.L182:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18967        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18968        DataByteCount += FEE_EIGHT;
	add	d2,d2,#8
.L4557:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18970      while(DataByteCount < StateDataPtr->FeeLastReadSize)      (inlined)
	j	.L183
.L184:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18969      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18970      while(DataByteCount < StateDataPtr->FeeLastReadSize)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18971      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18972        for(LoopIndex = FEE_RESET;
	mov	d1,#0
.L3290:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18973            (LoopIndex < FEE_SEVEN) && (Length > FEE_ZERO);      (inlined)
	j	.L185

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18974            LoopIndex++)      (inlined)
.L186:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18973            (LoopIndex < FEE_SEVEN) && (Length > FEE_ZERO);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18974            LoopIndex++)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18975        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18976  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18977          StateDataPtr->FeePendReqInfo.DataBufferPtr[LoopIndex] =
	ld.a	a2,[a15]752
.L4558:
	addsc.a	a2,a2,d1,#0
.L4559:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18978            StateDataPtr->FeeReadWriteBuffer[DataByteCount + LoopIndex];
	add	d15,d2,d1
.L4560:
	addsc.a	a4,a15,d15,#0
	ld.bu	d15,[a4]908
.L4561:
	st.b	[a2],d15
.L4562:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18979          Length--;
	add	d0,#-1
.L4563:
	add	d1,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18973            (LoopIndex < FEE_SEVEN) && (Length > FEE_ZERO);      (inlined)
.L185:
	jge.u	d1,#7,.L187
.L4564:
	jne	d0,#0,.L186
.L187:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18980        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18981        /*MISRA2012_RULE_18_4_JUSTIFICATION: Pointer arithmetic other than
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18982              array indexing used for FEE application buffers.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18983              Pointers are accessing the correct memory range locations.
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18984              The access range is within the boundaries of the buffer. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18985        StateDataPtr->FeePendReqInfo.DataBufferPtr += FEE_SEVEN;
	ld.a	a2,[a15]752
.L4565:
	add.a	a2,#7
	st.a	[a15]752,a2
.L4566:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18986        DataByteCount += FEE_EIGHT;
	add	d15,d2,#8
	extr.u	d2,d15,#0,#16

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18970      while(DataByteCount < StateDataPtr->FeeLastReadSize)      (inlined)
.L183:
	ld.w	d15,[a15]2486
.L4567:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18970      while(DataByteCount < StateDataPtr->FeeLastReadSize)      (inlined)
	jlt.u	d2,d15,.L184
.L4568:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18987      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18988      /*Reset the pending request status and set the Fee job result
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18989      to MEMIF_JOB_OK ] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18990      /*************   RESET JOB VARIABLES ******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18991  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18992      #if((FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA)&&\ 
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18993          (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18994      /*Check if QS erase was suspended. If yes then set FeePendReqStatus to
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18995      FEE_REQ_QUASI_ERASE to set module status to busy.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18996      /*[cover parentID={21662114-6372-47ba-B775-B95AC8386253}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18997      if(StateDataPtr->FeeQsEraseSuspend == FEE_ERASE_SUSPENDED)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18998      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18999        /*[cover parentID={14AEAC11-2D47-4d90-8D41-08DA41A69402}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19000        StateDataPtr->FeePendReqStatus = FEE_REQ_QUASI_ERASE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19001        StateDataPtr->FeeQsJob = FEE_ERASE_JOB;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19002      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19003      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19004      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19005      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19006        StateDataPtr->FeePendReqStatus = FEE_PEND_PREV_NO_REQ;
	mov	d15,#1
.L4569:
	st.b	[a15]2514,d15
.L4570:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19007      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19008      /* [cover parentID={AC80BD0C-E228-4020-AF90-282FD8EFC9A9}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19009      Set the Fee job result to MEMIF_JOB_OK
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19010      FeePendReqInfo.GetPrevCopy = FEE_ZERO
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19011      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19012      StateDataPtr->FeeJobResult = MEMIF_JOB_OK;
	mov	d15,#0
.L4571:
	st.b	[a15]2480,d15
.L4572:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19013      #if (FEE_GET_PREV_DATA_API == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19014      StateDataPtr->FeePendReqInfo.GetPrevCopy = FEE_RESET;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19015      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19016      /*****************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19017      /* [cover parentID={EA288A88-8827-4749-B1DB-2D9D779BB9DA}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19018      NVM data block supported
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19019      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19020      #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19021      /* [cover parentID={1F1E8365-8DFB-4a44-BAF9-12C4871659B7}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19022          Call NVM Job end notification function
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19023          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19024      /* [cover parentID={9515D550-3494-4e38-9569-591E0716E944}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19025         Check for notification function
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19026         [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19027      /* Call user configured job End notification */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19028      if ( Fee_CfgPtr->FeeNvmJobEndNotification != NULL_PTR )
	movh.a	a15,#@his(Fee_CfgPtr)
.L3286:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4573:
	ld.w	d15,[a15]8
.L4574:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19028      if ( Fee_CfgPtr->FeeNvmJobEndNotification != NULL_PTR )      (inlined)
	jeq	d15,#0,.L188
.L4575:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19029      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19030        (Fee_CfgPtr->FeeNvmJobEndNotification)();
	ld.a	a15,[a15]8
.L4576:
	ji	a15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19028      if ( Fee_CfgPtr->FeeNvmJobEndNotification != NULL_PTR )      (inlined)
.L188:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18949    if(StateDataPtr->FeePendReqStatus == FEE_PEND_PREV_READ_NOTIF)      (inlined)
.L178:
.L177:
.L176:
	ret
.L1891:
	
__Fee_JobEndNotification_function_end:
	.size	Fee_JobEndNotification,__Fee_JobEndNotification_function_end-Fee_JobEndNotification
.L1296:
	; End of function
	
	.sdecl	'.text.Fee_JobErrorNotification.Code.Cpu0',code,cluster('Fee_JobErrorNotification')
	.sect	'.text.Fee_JobErrorNotification.Code.Cpu0'
	.align	2
	
	.global	Fee_JobErrorNotification
; Function Fee_JobErrorNotification
.L1096:
Fee_JobErrorNotification:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4581:
	ld.a	a15,[a15]
.L3291:
	call	Fls_17_Dmu_GetNotifCaller
.L3293:
	mov	d8,d2
.L3295:
	jne	d8,#6,.L189
.L1906:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3292:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4582:
	ld.a	a15,[a15]
.L3296:
	ld.bu	d4,[a15]2514
	call	Fee_lGetUserJob
.L3294:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18781      if(Fee_lGetUserJob(StateDataPtr->FeePendReqStatus) == FEE_WRITE_JOB)      (inlined)
	jne	d2,#1,.L190
.L4583:
	ld.w	d0,[a15]2452
.L4584:
	ld.w	d15,[a15]2482
.L4585:
	add	d0,d15
	st.w	[a15]2452,d0
.L1913:
	and	d15,d0,#511
.L1914:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18785        if(Fee_lIsWLBeginning(StateDataPtr->FeeNextFreePageAddr) != FEE_NEW_WL_BEGIN)      (inlined)
	jeq	d15,#0,.L191
.L1918:
	insert	d15,d0,#0,#0,#9
.L1921:
	addi	d15,d15,#512
.L1919:
	st.w	[a15]2452,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18785        if(Fee_lIsWLBeginning(StateDataPtr->FeeNextFreePageAddr) != FEE_NEW_WL_BEGIN)      (inlined)
.L191:
	ld.w	d15,[a15]2452
.L4586:
	addi	d15,d15,#512
	st.w	[a15]2452,d15
.L4587:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18791        StateDataPtr->FeeNextFreePageAddr += FEE_DFLASH_WORDLINE_SIZE;      (inlined)
	j	.L192

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18781      if(Fee_lGetUserJob(StateDataPtr->FeePendReqStatus) == FEE_WRITE_JOB)      (inlined)
.L190:
	ld.bu	d4,[a15]2514
	call	Fee_lGetUserJob
.L4588:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18798      else if(Fee_lGetUserJob(StateDataPtr->FeePendReqStatus)      (inlined)
	jne	d2,#3,.L193
.L192:
	mov	d4,#0
	call	Fee_lHandleUsrJobFailure
.L4589:
	mov	d15,#0
.L4590:
	st.b	[a15]2525,d15
.L4591:
	mov	d15,#1
.L4592:
	st.b	[a15]2527,d15
.L1907:
	ret

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18798      else if(Fee_lGetUserJob(StateDataPtr->FeePendReqStatus)      (inlined)
.L193:
	mov	d15,#2
.L4593:
	st.b	[a15]2524,d15
.L4594:
	mov	d15,#1
.L4595:
	st.b	[a15]2526,d15
.L4596:
	mov	d15,#0
.L4597:
	st.b	[a15]2523,d15
.L1910:
	ret
.L189:
	ld.bu	d15,[a15]2523
.L4598:
	jne	d15,d8,.L196
.L4599:
	mov	d15,#2
.L4600:
	st.b	[a15]2524,d15
.L4601:
	mov	d15,#1
.L4602:
	st.b	[a15]2526,d15
.L4603:
	mov	d15,#0
.L4604:
	st.b	[a15]2523,d15
.L4605:
	ret
.L196:
	ld.bu	d4,[a15]2514
	call	Fee_lGetUserJob
.L3297:
	jne	d8,d2,.L198
.L4606:
	ld.bu	d0,[a15]2514
.L4607:
	mov	d15,#12
.L4608:
	jne	d15,d0,.L199
.L4609:
	j	Fee_lHandleWriteFail
.L198:
	ret
.L199:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3298:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4610:
	ld.a	a15,[a15]
.L3299:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18857    if(Job == FEE_WRITE_JOB)      (inlined)
	jne	d8,#1,.L201
.L4611:
	ld.bu	d15,[a15]2512
.L4612:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18860      if(StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus ==      (inlined)
	jz.t	d15:3,.L202
.L4613:
	insert	d15,d15,#0,#3,#1
	st.b	[a15]2512,d15
.L4614:
	mov	d4,#6
.L3300:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18863        StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus = FEE_RESET;      (inlined)
	j	.L203

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18860      if(StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus ==      (inlined)
.L202:
	mov	d4,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18866      else      (inlined)
.L203:
	ld.w	d15,[a15]2452
.L4615:
	ld.w	d0,[a15]2482
.L4616:
	add	d15,d0
	st.w	[a15]2452,d15
.L1931:
	insert	d15,d15,#0,#0,#9
.L1933:
	addi	d15,d15,#512
.L1932:
	addi	d15,d15,#512
	st.w	[a15]2452,d15
.L4617:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18872      StateDataPtr->FeeNextFreePageAddr += StateDataPtr->FeeLastWriteSize;      (inlined)
	j	.L204

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18857    if(Job == FEE_WRITE_JOB)      (inlined)
.L201:
	ld.hu	d4,[a15]2498
	call	Fee_lGetUsrBlockIndex
.L3301:
	mov.u	d15,#65535
.L4618:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18887      if(BlockIndex != FEE_LOG_BLOCK_NOT_FOUND )      (inlined)
	jeq	d15,d2,.L205
.L4619:
	mul	d15,d2,#24
	addsc.a	a2,a15,d15,#0
.L4620:
	ld.bu	d15,[a2]90
.L4621:
	insert	d15,d15,#0,#1,#1
	st.b	[a2]90,d15
.L4622:
	ld.hu	d15,[a15]2498
.L4623:
	ld.hu	d0,[a15]734
.L4624:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18900        if(StateDataPtr->FeeCurrReqBlockNum ==      (inlined)
	jne	d15,d0,.L206
.L4625:
	ld.bu	d15,[a15]736
.L4626:
	insert	d15,d15,#0,#1,#1
	st.b	[a15]736,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18900        if(StateDataPtr->FeeCurrReqBlockNum ==      (inlined)
.L206:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18887      if(BlockIndex != FEE_LOG_BLOCK_NOT_FOUND )      (inlined)
.L205:
	mov	d4,#2

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 18881    else /*if(job == FLS_READ_JOB)*/      (inlined)
.L204:
	j	Fee_lHandleUsrJobFailure
.L1902:
	
__Fee_JobErrorNotification_function_end:
	.size	Fee_JobErrorNotification,__Fee_JobErrorNotification_function_end-Fee_JobErrorNotification
.L1301:
	; End of function
	
	.sdecl	'.text.Fee_17_IllegalStateNotification.Code.Cpu0',code,cluster('Fee_17_IllegalStateNotification')
	.sect	'.text.Fee_17_IllegalStateNotification.Code.Cpu0'
	.align	2
	
	.global	Fee_17_IllegalStateNotification
; Function Fee_17_IllegalStateNotification
.L1098:
Fee_17_IllegalStateNotification:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4631:
	ld.w	d15,[a15]24
.L4632:
	jeq	d15,#0,.L207
.L4633:
	ld.a	a15,[a15]24
.L4634:
	ji	a15
.L207:
	ret
.L1934:
	
__Fee_17_IllegalStateNotification_function_end:
	.size	Fee_17_IllegalStateNotification,__Fee_17_IllegalStateNotification_function_end-Fee_17_IllegalStateNotification
.L1306:
	; End of function
	
	.sdecl	'.text.Fee_17_GetCycleCount.Code.Cpu0',code,cluster('Fee_17_GetCycleCount')
	.sect	'.text.Fee_17_GetCycleCount.Code.Cpu0'
	.align	2
	
	.global	Fee_17_GetCycleCount
; Function Fee_17_GetCycleCount
.L1100:
Fee_17_GetCycleCount:	.type	func
	mov	d8,d4
.L3302:
	mov.aa	a15,a4
.L3303:
	mov	d9,#1
.L1786:
	call	Fee_lGetStatus
.L1787:
	jeq	d2,#0,.L208
.L4382:
	movh.a	a2,#@his(Fee_CfgPtr)
	ld.a	a2,[a2]@los(Fee_CfgPtr)
.L4383:
	ld.a	a12,[a2]
.L3304:
	call	Fee_lGetStatus
.L3305:
	jne	d2,#1,.L209
.L4384:
	ld.bu	d15,[a12]2520
.L4385:
	jne	d15,#3,.L210
.L4386:
	ld.bu	d0,[a12]2515
.L4387:
	mov	d15,#14
.L4388:
	jne	d15,d0,.L211
.L4389:
	jne	d8,#0,.L212
.L4390:
	ld.w	d15,[a12]904
.L4391:
	add	d15,#-3
.L4392:
	sh	d2,d15,#-1
.L3306:
	j	.L213
.L212:
	mov	d4,d8
.L3308:
	call	Fee_lGetUsrBlockIndex
.L3307:
	mov.u	d15,#65535
.L4393:
	jeq	d15,d2,.L214
.L4394:
	mov	d4,d2
.L3310:
	call	Fee_lGetBlkCycleCount
.L3309:
	jeq	d2,#-1,.L215
.L213:
	st.w	[a15],d2
.L4395:
	mov	d9,#0
.L4396:
	j	.L216
.L209:
	jne	d2,#2,.L217
.L4397:
	mov	d4,#32
.L4398:
	mov	d5,#6
.L4399:
	mov	d6,#2
	call	Fee_lReportError
.L217:
.L216:
.L215:
.L214:
.L211:
.L210:
.L208:
	mov	d2,d9
.L3311:
	ret
.L1774:
	
__Fee_17_GetCycleCount_function_end:
	.size	Fee_17_GetCycleCount,__Fee_17_GetCycleCount_function_end-Fee_17_GetCycleCount
.L1236:
	; End of function
	
	.sdecl	'.text.Fee_17_EnableGcStart.Code.Cpu0',code,cluster('Fee_17_EnableGcStart')
	.sect	'.text.Fee_17_EnableGcStart.Code.Cpu0'
	.align	2
	
	.global	Fee_17_EnableGcStart
; Function Fee_17_EnableGcStart
.L1102:
Fee_17_EnableGcStart:	.type	func
	call	Fee_lGetStatus
.L4482:
	jeq	d2,#0,.L219
.L4483:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4484:
	ld.a	a15,[a15]
.L3312:
	mov	d15,#0
.L4485:
	st.b	[a15]2534,d15
.L219:
	ret
.L1864:
	
__Fee_17_EnableGcStart_function_end:
	.size	Fee_17_EnableGcStart,__Fee_17_EnableGcStart_function_end-Fee_17_EnableGcStart
.L1281:
	; End of function
	
	.sdecl	'.text.Fee_17_DisableGcStart.Code.Cpu0',code,cluster('Fee_17_DisableGcStart')
	.sect	'.text.Fee_17_DisableGcStart.Code.Cpu0'
	.align	2
	
	.global	Fee_17_DisableGcStart
; Function Fee_17_DisableGcStart
.L1104:
Fee_17_DisableGcStart:	.type	func
	call	Fee_lGetStatus
.L4490:
	jeq	d2,#0,.L220
.L4491:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4492:
	ld.a	a15,[a15]
.L3313:
	ld.bu	d15,[a15]2518
.L4493:
	jne	d15,#5,.L221
.L4494:
	ld.bu	d0,[a15]2515
.L4495:
	mov	d15,#14
.L4496:
	jne	d15,d0,.L222
.L4497:
	mov	d15,#1
.L4498:
	st.b	[a15]2534,d15
.L222:
.L221:
.L220:
	ret
.L1866:
	
__Fee_17_DisableGcStart_function_end:
	.size	Fee_17_DisableGcStart,__Fee_17_DisableGcStart_function_end-Fee_17_DisableGcStart
.L1286:
	; End of function
	
	.sdecl	'.text.Fee_MainFunction.Code.Cpu0',code,cluster('Fee_MainFunction')
	.sect	'.text.Fee_MainFunction.Code.Cpu0'
	.align	2
	
	.global	Fee_MainFunction
; Function Fee_MainFunction
.L1106:
Fee_MainFunction:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.w	d15,[a15]@los(Fee_CfgPtr)
.L4668:
	jeq	d15,#0,.L223
.L4669:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4670:
	ld.a	a15,[a15]
.L3314:
	call	Fee_lDecideMainJob
.L4671:
	ld.bu	d15,[a15]2528
.L4672:
	jeq	d15,#1,.L224
.L4673:
	jeq	d15,#2,.L225
.L4674:
	jeq	d15,#3,.L226
.L4675:
	jeq	d15,#4,.L227
.L4676:
	jeq	d15,#5,.L228
.L223:
	ret
.L224:
	ld.bu	d15,[a15]2524
.L4677:
	jeq	d15,#1,.L230
.L4678:
	j	Fee_lInitGC
.L225:
	j	Fee_lUpdateCache
.L227:
	ld.bu	d15,[a15]2525
.L4679:
	jeq	d15,#1,.L233
.L4680:
	j	Fee_lLocalWrite
.L226:
	ld.bu	d15,[a15]2525
.L4681:
	jeq	d15,#1,.L235
.L4682:
	j	Fee_lLocalRead
.L228:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19031      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19032      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19033    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19034  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19035  } /* Emd of Fee_lHandleReadJobEndNotification() */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19036  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19037  #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19038  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19039  ** Syntax : LOCAL_INLINE void Fee_lMainGCHdlr(void)                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19040  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19041  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19042  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19043  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19044  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19045  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19046  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19047  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19048  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19049  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19050  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19051  ** Return value    :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19052  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19053  ** Description : This function determines and performs the action required for**
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19054  ** GC .This function is called from main function  in FEE_MAIN_GC state. This **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19055  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19056  /*[cover parentID={97BA7538-907D-47b5-96EC-5905C1F50E27}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19057  LOCAL_INLINE void Fee_lMainGCHdlr(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19058  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19059  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19060    #if (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19061    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19062    #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19063    const Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19064    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19065    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
	movh.a	a15,#@his(Fee_CfgPtr)
.L3315:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4683:
	ld.a	a15,[a15]
.L3316:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19066    #if (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19067    /*[cover parentID={EBA6E428-4FDD-492a-AEA9-B671EAD6FF97}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19068    if(FEE_ERASE_NOT_SUSPENDED == StateDataPtr->FeeEraseSuspendStatus)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19069    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19070    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19071      /*[cover parentID={EE38351C-5876-45e5-B328-35D9281FDDB3}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19072      if(StateDataPtr->FeeIntrJobStatus != FEE_JOB_REQSTD)
	ld.bu	d15,[a15]2524
.L4684:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19072      if(StateDataPtr->FeeIntrJobStatus != FEE_JOB_REQSTD)      (inlined)
	jeq	d15,#1,.L237
.L4685:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19073      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19074        /*[cover parentID={133AAAAD-9E80-4caf-8ED0-EC281D9F1DAC}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19075        Fee_lGarbageCollection();
	j	Fee_lGarbageCollection

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19072      if(StateDataPtr->FeeIntrJobStatus != FEE_JOB_REQSTD)      (inlined)
.L237:
.L235:
.L233:
.L230:
	ret
.L1941:
	
__Fee_MainFunction_function_end:
	.size	Fee_MainFunction,__Fee_MainFunction_function_end-Fee_MainFunction
.L1321:
	; End of function
	
	.sdecl	'.text.Fee_17_GetEccErrorInfo.Code.Cpu0',code,cluster('Fee_17_GetEccErrorInfo')
	.sect	'.text.Fee_17_GetEccErrorInfo.Code.Cpu0'
	.align	2
	
	.global	Fee_17_GetEccErrorInfo
; Function Fee_17_GetEccErrorInfo
.L1108:
Fee_17_GetEccErrorInfo:	.type	func
	sub.a	a10,#8
.L3317:
	st.a	[a10],a4
.L3319:
	mov.aa	a15,a5
.L3320:
	mov	d8,#1
.L3321:
	call	Fee_lGetStatus
.L3318:
	jeq	d2,#0,.L238
.L4503:
	jne	d2,#1,.L239
.L4504:
	ld.a	a2,[a10]
.L3323:
	jz.a	a2,.L240
.L4505:
	jz.a	a15,.L241
.L4506:
	mov.aa	a4,a15
.L3324:
	call	Fls_17_Dmu_GetEccErrorPageAddress
.L3322:
	mov	d8,d2
.L3325:
	jne	d8,#0,.L242
.L4507:
	ld.w	d9,[a15]
.L4508:
	jeq	d9,#-1,.L243
.L1877:
	mov	d10,#0
.L3326:
	mov.u	d11,#65535
.L3328:
	movh	d12,#44800
.L4509:
	movh.a	a12,#@his(Fee_CfgPtr)
.L4510:
	movh.a	a13,#@his(Fee_CfgPtr)
.L4511:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4015    while(BlockIndex < Fee_CfgPtr->FeeBlkCnt)      (inlined)
	j	.L244
.L245:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4512:
	ld.a	a2,[a15]4
.L4513:
	addsc.a	a14,a2,d10,#3
.L3329:
	ld.a	a15,[a15]
.L3330:
	mul	d15,d10,#24
	addsc.a	a15,a15,d15,#0
.L3331:
	ld.hu	d4,[a14]6
	call	Fee_lGetDFLASHPages
.L3332:
	ld.w	d15,[a15]80
.L4514:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4023      if(CachePtr->Address != FEE_RESET)      (inlined)
	jeq	d15,#0,.L246
.L4515:
	add	d0,d15,d12
.L3334:
	sh	d2,#3
.L3333:
	add	d2,d0
.L4516:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4025        BlockStartAddress = CachePtr->Address + FEE_BASE_ADDRESS;      (inlined)
	j	.L247

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4023      if(CachePtr->Address != FEE_RESET)      (inlined)
.L246:
	mov	d0,#-1
.L3335:
	mov	d2,d0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4028      else      (inlined)
.L247:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4061          if((PageAddress >= BlockStartAddress) && (PageAddress < BlockEndAddress))      (inlined)
	jlt.u	d9,d0,.L248
.L4517:
	jge.u	d9,d2,.L249
.L4518:
	ld.hu	d11,[a14]4
.L4519:
	ld.a	a15,[a12]@los(Fee_CfgPtr)
.L4520:
	ld.hu	d10,[a15]20

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4061          if((PageAddress >= BlockStartAddress) && (PageAddress < BlockEndAddress))      (inlined)
.L249:
.L248:
	add	d10,#1
.L3327:
	extr.u	d10,d10,#0,#16

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4015    while(BlockIndex < Fee_CfgPtr->FeeBlkCnt)      (inlined)
.L244:
	ld.a	a15,[a13]@los(Fee_CfgPtr)
.L4521:
	ld.hu	d15,[a15]20
.L4522:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4015    while(BlockIndex < Fee_CfgPtr->FeeBlkCnt)      (inlined)
	jlt.u	d10,d15,.L245
.L1878:
	ld.a	a15,[a10]
.L3336:
	st.h	[a15],d11
.L4523:
	j	.L250
.L243:
	mov.u	d15,#65535
.L4524:
	ld.a	a15,[a10]
.L3337:
	st.h	[a15],d15
.L4525:
	j	.L251
.L239:
	jne	d2,#2,.L252
.L4526:
	mov	d4,#50
.L4527:
	mov	d5,#6
.L4528:
	mov	d6,#2
	call	Fee_lReportError
.L252:
.L251:
.L250:
.L242:
.L241:
.L240:
.L238:
	mov	d2,d8
.L3338:
	ret
.L1868:
	
__Fee_17_GetEccErrorInfo_function_end:
	.size	Fee_17_GetEccErrorInfo,__Fee_17_GetEccErrorInfo_function_end-Fee_17_GetEccErrorInfo
.L1291:
	; End of function
	
	.sdecl	'.text.Fee_GetVersionInfo.Code.Cpu0',code,cluster('Fee_GetVersionInfo')
	.sect	'.text.Fee_GetVersionInfo.Code.Cpu0'
	.align	2
	
	.global	Fee_GetVersionInfo
; Function Fee_GetVersionInfo
.L1110:
Fee_GetVersionInfo:	.type	func
	mov	d15,#21
.L4103:
	st.h	[a4]2,d15
.L4104:
	mov	d15,#17
.L4105:
	st.h	[a4],d15
.L4106:
	mov	d15,#20
.L4107:
	st.b	[a4]4,d15
.L4108:
	mov	d15,#25
.L4109:
	st.b	[a4]5,d15
.L4110:
	mov	d15,#0
.L4111:
	st.b	[a4]6,d15
.L4112:
	ret
.L1573:
	
__Fee_GetVersionInfo_function_end:
	.size	Fee_GetVersionInfo,__Fee_GetVersionInfo_function_end-Fee_GetVersionInfo
.L1221:
	; End of function
	
	.sdecl	'.text.Fee_lHandleUsrJobFailure.Code.Cpu0',code,cluster('Fee_lHandleUsrJobFailure')
	.sect	'.text.Fee_lHandleUsrJobFailure.Code.Cpu0'
	.align	2
	
; Function Fee_lHandleUsrJobFailure
.L1112:
Fee_lHandleUsrJobFailure:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4792:
	ld.a	a15,[a15]
.L3339:
	jeq	d4,#0,.L254
.L4793:
	mov	d15,#1
.L4794:
	st.b	[a15]2480,d15
.L4795:
	mov	d15,#0
.L4796:
	st.h	[a15]2494,d15
.L4797:
	j	.L255
.L254:
	mov	d15,#3
.L4798:
	st.b	[a15]2480,d15
.L255:
	mov	d15,#1
.L4799:
	st.b	[a15]2514,d15
.L4800:
	ld.bu	d0,[a15]2512
.L4801:
	insert	d0,d0,#0,#3,#1
	st.b	[a15]2512,d0
.L4802:
	mov	d0,#0
.L4803:
	st.b	[a15]2525,d0
.L4804:
	st.b	[a15]2527,d15
.L4805:
	st.b	[a15]2529,d0
.L4806:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3340:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4807:
	ld.w	d15,[a15]12
.L4808:
	jeq	d15,#0,.L256
.L4809:
	ld.a	a15,[a15]12
.L4810:
	ji	a15
.L256:
	ret
.L2015:
	
__Fee_lHandleUsrJobFailure_function_end:
	.size	Fee_lHandleUsrJobFailure,__Fee_lHandleUsrJobFailure_function_end-Fee_lHandleUsrJobFailure
.L1341:
	; End of function
	
	.sdecl	'.text.Fee_lGetStatus.Code.Cpu0',code,cluster('Fee_lGetStatus')
	.sect	'.text.Fee_lGetStatus.Code.Cpu0'
	.align	2
	
; Function Fee_lGetStatus
.L1114:
Fee_lGetStatus:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4938:
	ld.a	a15,[a15]
.L3341:
	mov	d2,#1
.L3342:
	ld.bu	d15,[a15]2514
.L4939:
	mov	d0,#15
.L4940:
	jeq	d15,d0,.L257
.L4941:
	jeq	d15,#1,.L258
.L4942:
	mov	d2,#2
.L257:
	ret
.L258:
	ld.bu	d15,[a15]2512
.L4943:
	jz.t	d15:1,.L260
.L4944:
	ld.bu	d0,[a15]2515
.L4945:
	mov	d15,#15
.L4946:
	jeq	d15,d0,.L261
.L4947:
	ld.bu	d15,[a15]2518
.L4948:
	jeq	d15,#6,.L262
.L4949:
	ld.bu	d15,[a15]2520
.L4950:
	jeq	d15,#3,.L263
.L4951:
	mov	d2,#0
.L262:
.L261:
.L260:
	ret
.L263:
	ld.bu	d0,[a15]2515
.L4952:
	mov	d15,#14
.L4953:
	jeq	d15,d0,.L265
.L2105:
	movh.a	a2,#@his(Fee_CfgPtr)
	ld.a	a2,[a2]@los(Fee_CfgPtr)
.L4954:
	ld.bu	d15,[a2]22
.L4955:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4307    if ((Fee_CfgPtr->FeeGCConfigSetting.FeeGcRestartPoint ==      (inlined)
	jz.t	d15:1,.L266
.L4956:
	ld.bu	d15,[a15]2512
.L4957:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4309        && (StateDataPtr->FeeStatusFlags.FeeWriteInvldQSeraseAPICalled ==      (inlined)
	jnz.t	d15:4,.L267
.L4958:
	mov	d15,#1
.L3343:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4312      RetVal = (boolean)TRUE;      (inlined)
	j	.L268

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4307    if ((Fee_CfgPtr->FeeGCConfigSetting.FeeGcRestartPoint ==      (inlined)
.L267:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4310            (uint32)FEE_RESET))      (inlined)
.L266:
	mov	d15,#0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4314    else      (inlined)
.L268:
	jne	d15,#0,.L269
.L2106:
	mov	d2,#3
.L269:
.L265:
	ret
.L2102:
	
__Fee_lGetStatus_function_end:
	.size	Fee_lGetStatus,__Fee_lGetStatus_function_end-Fee_lGetStatus
.L1381:
	; End of function
	
	.sdecl	'.text.Fee_lGetUserJob.Code.Cpu0',code,cluster('Fee_lGetUserJob')
	.sect	'.text.Fee_lGetUserJob.Code.Cpu0'
	.align	2
	
; Function Fee_lGetUserJob
.L1116:
Fee_lGetUserJob:	.type	func
	mov	d2,#0
.L3344:
	jeq	d4,#3,.L271
.L4930:
	jeq	d4,#5,.L272
.L4931:
	mov	d15,#10
	jeq	d15,d4,.L273
.L4932:
	mov	d15,#12
	jne	d15,d4,.L275
.L273:
	mov	d2,#1
.L275:
	ret
.L272:
.L271:
	mov	d2,#3
.L4933:
	ret
.L2098:
	
__Fee_lGetUserJob_function_end:
	.size	Fee_lGetUserJob,__Fee_lGetUserJob_function_end-Fee_lGetUserJob
.L1376:
	; End of function
	
	.sdecl	'.text.Fee_lIsReadAllowedbyGC.Code.Cpu0',code,cluster('Fee_lIsReadAllowedbyGC')
	.sect	'.text.Fee_lIsReadAllowedbyGC.Code.Cpu0'
	.align	2
	
; Function Fee_lIsReadAllowedbyGC
.L1118:
Fee_lIsReadAllowedbyGC:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6364:
	ld.a	a15,[a15]
.L3345:
	mov	d2,#0
.L3346:
	ld.bu	d15,[a15]2515
.L6365:
	jeq	d15,#5,.L278
.L6366:
	mov	d0,#16
.L6367:
	jne	d15,d0,.L279
.L6368:
	ld.bu	d15,[a15]2524
.L6369:
	jeq	d15,#0,.L280
.L279:
	ld.bu	d15,[a15]2515
.L6370:
	jne	d15,#1,.L281
.L6371:
	ld.bu	d15,[a15]2524
.L6372:
	jeq	d15,#0,.L282
.L281:
	ld.bu	d15,[a15]2515
.L6373:
	jeq	d15,#3,.L283
.L6374:
	jne	d15,#4,.L284
.L283:
	ld.bu	d15,[a15]2524
.L6375:
	jeq	d15,#1,.L285
.L282:
.L280:
.L278:
	mov	d2,#1
.L285:
.L284:
	ret
.L2827:
	
__Fee_lIsReadAllowedbyGC_function_end:
	.size	Fee_lIsReadAllowedbyGC,__Fee_lIsReadAllowedbyGC_function_end-Fee_lIsReadAllowedbyGC
.L1511:
	; End of function
	
	.sdecl	'.text.Fee_lIsWriteInvldAllowedbyGC.Code.Cpu0',code,cluster('Fee_lIsWriteInvldAllowedbyGC')
	.sect	'.text.Fee_lIsWriteInvldAllowedbyGC.Code.Cpu0'
	.align	2
	
; Function Fee_lIsWriteInvldAllowedbyGC
.L1120:
Fee_lIsWriteInvldAllowedbyGC:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6380:
	ld.a	a12,[a15]
.L3347:
	mov	d8,#0
.L3348:
	ld.bu	d0,[a12]2514
.L6381:
	mov	d15,#9
.L6382:
	jne	d15,d0,.L287
.L6383:
	ld.bu	d15,[a12]2512
.L6384:
	jnz.t	d15:3,.L288
.L6385:
	ld.bu	d15,[a12]2515
.L6386:
	mov	d0,#16
.L6387:
	jeq	d15,d0,.L289
.L6388:
	jne	d15,#1,.L290
.L289:
	ld.bu	d15,[a12]2524
.L6389:
	jne	d15,#0,.L291
.L6390:
	j	.L292
.L290:
.L288:
.L287:
	ld.bu	d15,[a12]2515
.L6391:
	jne	d15,#3,.L293
.L6392:
	ld.hu	d4,[a12]760
.L3349:
	call	Fee_lGetUsrBlockIndex
.L3350:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6393:
	ld.a	a2,[a15]4
.L6394:
	addsc.a	a13,a2,d2,#3
.L2837:
	mov	d9,#1
.L3352:
	ld.a	a14,[a15]
.L3353:
	ld.bu	d15,[a14]2512
	extr.u	d10,d15,#2,#1
.L3354:
	ld.w	d11,[a14]2452
.L3355:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14016    if (StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus == (uint32)FEE_SET )      (inlined)
	jz.t	d15:3,.L294
.L6395:
	mov	d12,#2
.L3356:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14018      BlkPages = FEE_INVALID_BLOCK_PAGES;      (inlined)
	j	.L295

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14016    if (StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus == (uint32)FEE_SET )      (inlined)
.L294:
	ld.hu	d4,[a13]6
	call	Fee_lGetDFLASHPages
.L3351:
	mov	d12,d2

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14020    else      (inlined)
.L295:
	and	d15,d11,#511
.L2848:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14027    if(Fee_lIsWLBeginning(DestAddr) == FEE_NEW_WL_BEGIN)      (inlined)
	jeq	d15,#0,.L296
.L2850:
	insert	d0,d11,#0,#0,#9
.L2853:
	addi	d0,d0,#512
.L2851:
	addi	d5,d0,#512
.L3357:
	mov	d4,d10
.L3359:
	call	Fee_lGetFreeDFLASHPages
.L3358:
	extr.u	d0,d11,#3,#6
.L3361:
	add	d0,d12
.L2855:
	sub	d2,d0
.L3360:
	sha	d2,#3
.L6396:
	movh.a	a2,#@his(Fee_CfgPtr)
	ld.a	a15,[a2]@los(Fee_CfgPtr)
.L6397:
	ld.w	d15,[a15]16
.L6398:
	lt	d15,d2,d15
.L3362:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14056      if ((boolean)TRUE == Fee_lIsSectorThresholdCrossed((uint32)RemainingPages,      (inlined)
	jeq	d15,#0,.L297
.L2856:
	insert	d15,d11,#0,#0,#9
.L2861:
	addi	d11,d15,#512
.L2860:
	st.w	[a14]2452,d11

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14056      if ((boolean)TRUE == Fee_lIsSectorThresholdCrossed((uint32)RemainingPages,      (inlined)
.L297:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14031    else      (inlined)
.L296:
	mov	e4,d11,d10
	call	Fee_lGetFreeDFLASHPages
.L2862:
	sub	d0,d2,d12
	sha	d0,#3
.L6399:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6400:
	ld.w	d15,[a15]16
.L6401:
	lt	d15,d0,d15
.L3363:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14068    if ((boolean)TRUE == Fee_lIsSectorThresholdCrossed((uint32)RemainingPages,      (inlined)
	jeq	d15,#0,.L298
.L2863:
	ld.bu	d15,[a13]3
.L3364:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14074      if( (BlockPtr->FeeImmediateData == (uint32)FEE_NORMAL_DATA) ||      (inlined)
	jeq	d15,#0,.L299
.L6402:
	ld.bu	d15,[a14]2512
.L6403:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14076           == (uint32)FEE_SET )      (inlined)
	jnz.t	d15:3,.L300
.L6404:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14086        if(RemainingPages < BlkPages)      (inlined)
	jlt.u	d2,d12,.L301
.L6405:
	mov	d15,#1
.L6406:
	st.b	[a14]2535,d15
.L6407:
	mov	d9,#0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14091        else      (inlined)
.L301:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14082      else      (inlined)
.L300:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14074      if( (BlockPtr->FeeImmediateData == (uint32)FEE_NORMAL_DATA) ||      (inlined)
.L299:
	ld.bu	d0,[a14]2515
.L6408:
	mov	d15,#14
.L6409:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14100      if (StateDataPtr->FeeGcState == FEE_GC_IDLE)      (inlined)
	jne	d15,d0,.L302
.L6410:
	ld.bu	d15,[a14]2534
.L6411:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14104        if(StateDataPtr->FeeDisableGCStart == (boolean)FALSE)      (inlined)
	jne	d15,#0,.L303
.L6412:
	mov	d15,#5
.L6413:
	st.b	[a14]2515,d15
.L6414:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14100      if (StateDataPtr->FeeGcState == FEE_GC_IDLE)      (inlined)
	j	.L304

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14068    if ((boolean)TRUE == Fee_lIsSectorThresholdCrossed((uint32)RemainingPages,      (inlined)
.L298:
	mov	d9,#0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14112    else      (inlined)
.L304:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14104        if(StateDataPtr->FeeDisableGCStart == (boolean)FALSE)      (inlined)
.L303:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14100      if (StateDataPtr->FeeGcState == FEE_GC_IDLE)      (inlined)
.L302:
	mov	d15,d9
.L2838:
	ld.bu	d0,[a12]2524
.L6415:
	jeq	d0,#1,.L305
.L6416:
	jne	d15,#0,.L306
.L292:
	mov	d8,#1
.L306:
.L305:
.L293:
.L291:
	mov	d2,d8
.L3365:
	ret
.L2830:
	
__Fee_lIsWriteInvldAllowedbyGC_function_end:
	.size	Fee_lIsWriteInvldAllowedbyGC,__Fee_lIsWriteInvldAllowedbyGC_function_end-Fee_lIsWriteInvldAllowedbyGC
.L1516:
	; End of function
	
	.sdecl	'.text.Fee_lDecideMainJob.Code.Cpu0',code,cluster('Fee_lDecideMainJob')
	.sect	'.text.Fee_lDecideMainJob.Code.Cpu0'
	.align	2
	
; Function Fee_lDecideMainJob
.L1122:
Fee_lDecideMainJob:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4690:
	ld.a	a15,[a15]
.L3366:
	ld.bu	d0,[a15]2528
.L4691:
	mov	d15,#10
	jlt	d15,d0,.L309
	mov	d15,#0
	jlt	d0,d15,.L309
	sub	d15,d0,d15
	movh.a	a2,#@his(.1.jmp)
	lea	a2,[a2]@los(.1.jmp)
	addsc.a	a2,a2,d15,#2
	ld.a	a2,[a2]
	ji	a2
.L3367:
	
	.sdecl	'.rodata.Fee..1.jmp',data,rom
	.sect	'.rodata.Fee..1.jmp'
	.align	4
.1.jmp:	.type	object
	.word	.L310
	.word	.L311
	.word	.L312
	.word	.L313
	.word	.L314
	.word	.L315
	.word	.L309
	.word	.L309
	.word	.L309
	.word	.L309
	.word	.L316
	
	.sect	'.text.Fee_lDecideMainJob.Code.Cpu0'
.L311:
	ld.bu	d15,[a15]2518
.L4692:
	jne	d15,#5,.L317
.L4693:
	mov	d15,#2
.L4694:
	j	.L318
.L316:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3368:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4695:
	ld.a	a15,[a15]
.L1953:
	ld.bu	d15,[a15]2514
.L1954:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5111    if( (boolean)TRUE == Fee_lIsUserReadReqstd(StateDataPtr) )      (inlined)
	jne	d15,#6,.L319
.L4696:
	mov	d15,#3
.L4697:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5132        StateDataPtr->FeeMainJob = FEE_MAIN_READ;      (inlined)
	j	.L320

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5111    if( (boolean)TRUE == Fee_lIsUserReadReqstd(StateDataPtr) )      (inlined)
.L319:
	ld.bu	d0,[a15]2514
.L4698:
	mov	d15,#8
.L4699:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4140    if(((s_ptr)->FeePendReqStatus == FEE_REQ_NORM_WRITE) ||      (inlined)
	jeq	d15,d0,.L321
.L4700:
	mov	d15,#9
.L4701:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4141        ((s_ptr)->FeePendReqStatus == FEE_REQ_IMM_WRITE))      (inlined)
	jne	d15,d0,.L322

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4140    if(((s_ptr)->FeePendReqStatus == FEE_REQ_NORM_WRITE) ||      (inlined)
.L321:
	mov	d15,#1
.L3369:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4143      RetVal = (boolean)TRUE;      (inlined)
	j	.L323

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4140    if(((s_ptr)->FeePendReqStatus == FEE_REQ_NORM_WRITE) ||      (inlined)
.L322:
	mov	d15,#0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4145    else      (inlined)
.L323:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5140    else if( (boolean)TRUE == Fee_lIsUserWriteInvldReqstd(StateDataPtr) )      (inlined)
	jeq	d15,#0,.L324
.L1960:
	mov	d15,#4
.L1949:
	j	.L325
.L312:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3370:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4702:
	ld.a	a15,[a15]
.L3371:
	ld.bu	d15,[a15]2520
.L4703:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5218    if(StateDataPtr->FeeCacheState == FEE_CACHE_UPDATE_COMPLETE)      (inlined)
	jne	d15,#3,.L326
.L1969:
	ld.bu	d15,[a15]2514
.L1970:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5233      if((boolean)TRUE == Fee_lIsUserReadReqstd(StateDataPtr))      (inlined)
	jne	d15,#6,.L327
.L4704:
	mov	d15,#3
.L4705:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5235        StateDataPtr->FeeMainJob = FEE_MAIN_READ;      (inlined)
	j	.L328

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5233      if((boolean)TRUE == Fee_lIsUserReadReqstd(StateDataPtr))      (inlined)
.L327:
	ld.bu	d0,[a15]2514
.L4706:
	mov	d15,#8
.L4707:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4140    if(((s_ptr)->FeePendReqStatus == FEE_REQ_NORM_WRITE) ||      (inlined)
	jeq	d15,d0,.L329
.L4708:
	mov	d15,#9
.L4709:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4141        ((s_ptr)->FeePendReqStatus == FEE_REQ_IMM_WRITE))      (inlined)
	jne	d15,d0,.L330

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4140    if(((s_ptr)->FeePendReqStatus == FEE_REQ_NORM_WRITE) ||      (inlined)
.L329:
	mov	d15,#1
.L3372:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4143      RetVal = (boolean)TRUE;      (inlined)
	j	.L331

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4140    if(((s_ptr)->FeePendReqStatus == FEE_REQ_NORM_WRITE) ||      (inlined)
.L330:
	mov	d15,#0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4145    else      (inlined)
.L331:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5238      else if((boolean)TRUE == Fee_lIsUserWriteInvldReqstd(StateDataPtr))      (inlined)
	jeq	d15,#0,.L332
.L1972:
	mov	d15,#4
.L3373:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5240        StateDataPtr->FeeMainJob = FEE_MAIN_WRITE;      (inlined)
	j	.L333

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5238      else if((boolean)TRUE == Fee_lIsUserWriteInvldReqstd(StateDataPtr))      (inlined)
.L332:
	ld.bu	d0,[a15]2515
.L4710:
	mov	d15,#14
.L3374:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5250      else if(StateDataPtr->FeeGcState != FEE_GC_IDLE)      (inlined)
	jeq	d15,d0,.L334
.L4711:
	mov	d15,#5
.L4712:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5252        StateDataPtr->FeeMainJob = FEE_MAIN_GC;      (inlined)
	j	.L335

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5250      else if(StateDataPtr->FeeGcState != FEE_GC_IDLE)      (inlined)
.L334:
	mov	d15,#10
.L1966:
	j	.L336
.L313:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3375:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4713:
	ld.a	a2,[a15]
.L3376:
	ld.bu	d15,[a2]2514
.L4714:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5289    if(StateDataPtr->FeePendReqStatus == FEE_PEND_PREV_NO_REQ)      (inlined)
	jne	d15,#1,.L337
.L1980:
	ld.bu	d15,[a15]22
.L4715:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4307    if ((Fee_CfgPtr->FeeGCConfigSetting.FeeGcRestartPoint ==      (inlined)
	jz.t	d15:1,.L338
.L4716:
	ld.bu	d15,[a2]2512
.L4717:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4309        && (StateDataPtr->FeeStatusFlags.FeeWriteInvldQSeraseAPICalled ==      (inlined)
	jnz.t	d15:4,.L339
.L4718:
	mov	d15,#1
.L3377:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4312      RetVal = (boolean)TRUE;      (inlined)
	j	.L340

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4307    if ((Fee_CfgPtr->FeeGCConfigSetting.FeeGcRestartPoint ==      (inlined)
.L339:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4310            (uint32)FEE_RESET))      (inlined)
.L338:
	mov	d15,#0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4314    else      (inlined)
.L340:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5294      if(((boolean)FALSE == Fee_lIsGcTriggeredOnce(StateDataPtr)) &&      (inlined)
	jne	d15,#0,.L341
.L1981:
	ld.bu	d0,[a2]2515
.L4719:
	mov	d15,#14
.L3378:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5295          (StateDataPtr->FeeGcState != FEE_GC_IDLE))      (inlined)
	jeq	d15,d0,.L342
.L4720:
	mov	d15,#5
.L4721:
	st.b	[a2]2528,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5218    if(StateDataPtr->FeeCacheState == FEE_CACHE_UPDATE_COMPLETE)      (inlined)
.L326:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5140    else if( (boolean)TRUE == Fee_lIsUserWriteInvldReqstd(StateDataPtr) )      (inlined)
.L324:
.L317:
.L309:
	ret

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5294      if(((boolean)FALSE == Fee_lIsGcTriggeredOnce(StateDataPtr)) &&      (inlined)
.L342:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5295          (StateDataPtr->FeeGcState != FEE_GC_IDLE))      (inlined)
.L341:
	mov	d15,#10
.L4722:
	st.b	[a2]2528,d15
.L1977:
	ret

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5289    if(StateDataPtr->FeePendReqStatus == FEE_PEND_PREV_NO_REQ)      (inlined)
.L337:
	ld.bu	d0,[a2]2514
.L4723:
	mov	d15,#8
.L4724:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4140    if(((s_ptr)->FeePendReqStatus == FEE_REQ_NORM_WRITE) ||      (inlined)
	jeq	d15,d0,.L345
.L4725:
	mov	d15,#9
.L4726:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4141        ((s_ptr)->FeePendReqStatus == FEE_REQ_IMM_WRITE))      (inlined)
	jne	d15,d0,.L346

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4140    if(((s_ptr)->FeePendReqStatus == FEE_REQ_NORM_WRITE) ||      (inlined)
.L345:
	mov	d15,#1
.L3379:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4143      RetVal = (boolean)TRUE;      (inlined)
	j	.L347

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4140    if(((s_ptr)->FeePendReqStatus == FEE_REQ_NORM_WRITE) ||      (inlined)
.L346:
	mov	d15,#0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4145    else      (inlined)
.L347:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5307    else if((boolean)TRUE == Fee_lIsUserWriteInvldReqstd(StateDataPtr))      (inlined)
	jeq	d15,#0,.L348
.L1986:
	mov	d15,#4
.L3380:
	st.b	[a2]2528,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5307    else if((boolean)TRUE == Fee_lIsUserWriteInvldReqstd(StateDataPtr))      (inlined)
.L348:
	ret
.L314:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3381:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4727:
	ld.a	a15,[a15]
.L3382:
	ld.bu	d15,[a15]2514
.L4728:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5374    if(StateDataPtr->FeePendReqStatus == FEE_PEND_PREV_NO_REQ)      (inlined)
	jne	d15,#1,.L350
.L4729:
	ld.bu	d0,[a15]2515
.L4730:
	mov	d15,#14
.L4731:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5379      if (StateDataPtr->FeeGcState != FEE_GC_IDLE)      (inlined)
	jne	d15,d0,.L351
.L4732:
	mov	d15,#10
.L4733:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5383      else      (inlined)
	j	.L352

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5374    if(StateDataPtr->FeePendReqStatus == FEE_PEND_PREV_NO_REQ)      (inlined)
.L350:
	ld.bu	d0,[a15]2514
.L4734:
	mov	d15,#8
.L4735:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5389    else if( (StateDataPtr->FeePendReqStatus == FEE_REQ_NORM_WRITE) ||      (inlined)
	jeq	d15,d0,.L353
.L4736:
	mov	d15,#9
.L4737:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5390             (StateDataPtr->FeePendReqStatus == FEE_REQ_IMM_WRITE)      (inlined)
	jne	d15,d0,.L354

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5389    else if( (StateDataPtr->FeePendReqStatus == FEE_REQ_NORM_WRITE) ||      (inlined)
.L353:
	ld.bu	d0,[a15]2515
.L4738:
	mov	d15,#14
.L4739:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5397      if ((StateDataPtr->FeeGcState != FEE_GC_IDLE) &&      (inlined)
	jeq	d15,d0,.L355
.L4740:
	ld.hu	d15,[a15]2492
.L4741:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5398          (StateDataPtr->FeeReadLen == 0U))      (inlined)
	jne	d15,#0,.L356

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5383      else      (inlined)
.L351:
	mov	d15,#5
.L4742:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5398          (StateDataPtr->FeeReadLen == 0U))      (inlined)
	j	.L357

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5389    else if( (StateDataPtr->FeePendReqStatus == FEE_REQ_NORM_WRITE) ||      (inlined)
.L354:
	ld.bu	d15,[a15]2514
.L1992:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5417    else if((boolean)TRUE == Fee_lIsUserReadReqstd(StateDataPtr))      (inlined)
	jne	d15,#6,.L358
.L4743:
	mov	d15,#3
.L1989:
	j	.L359
.L315:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3383:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4744:
	ld.a	a15,[a15]
.L3384:
	ld.bu	d15,[a15]2528
.L4745:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5044    if((FEE_MAIN_GC == StateDataPtr->FeeMainJob) &&      (inlined)
	jne	d15,#5,.L360
.L4746:
	ld.bu	d0,[a15]2515
.L4747:
	mov	d15,#14
.L4748:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5045        (FEE_GC_IDLE == StateDataPtr->FeeGcState))      (inlined)
	jne	d15,d0,.L361
.L4749:
	mov	d15,#10
.L4750:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5047      StateDataPtr->FeeMainJob = FEE_MAIN_NONE;      (inlined)
	j	.L362

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5044    if((FEE_MAIN_GC == StateDataPtr->FeeMainJob) &&      (inlined)
.L361:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5045        (FEE_GC_IDLE == StateDataPtr->FeeGcState))      (inlined)
.L360:
	ld.bu	d15,[a15]2514
.L1998:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5051    else if((boolean)TRUE == Fee_lIsUserReadReqstd(StateDataPtr))      (inlined)
	jne	d15,#6,.L363
.L4751:
	call	Fee_lIsReadAllowedbyGC
.L4752:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5054      if(Fee_lIsReadAllowedbyGC() == (boolean)TRUE)      (inlined)
	jeq	d2,#0,.L364
.L4753:
	mov	d15,#3
.L4754:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5054      if(Fee_lIsReadAllowedbyGC() == (boolean)TRUE)      (inlined)
	j	.L365

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5051    else if((boolean)TRUE == Fee_lIsUserReadReqstd(StateDataPtr))      (inlined)
.L363:
	ld.bu	d0,[a15]2514
.L4755:
	mov	d15,#8
.L4756:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4140    if(((s_ptr)->FeePendReqStatus == FEE_REQ_NORM_WRITE) ||      (inlined)
	jeq	d15,d0,.L366
.L4757:
	mov	d15,#9
.L4758:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4141        ((s_ptr)->FeePendReqStatus == FEE_REQ_IMM_WRITE))      (inlined)
	jne	d15,d0,.L367

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4140    if(((s_ptr)->FeePendReqStatus == FEE_REQ_NORM_WRITE) ||      (inlined)
.L366:
	mov	d15,#1
.L3385:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4143      RetVal = (boolean)TRUE;      (inlined)
	j	.L368

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4140    if(((s_ptr)->FeePendReqStatus == FEE_REQ_NORM_WRITE) ||      (inlined)
.L367:
	mov	d15,#0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4145    else      (inlined)
.L368:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5060    else if(((boolean)TRUE == Fee_lIsUserWriteInvldReqstd(StateDataPtr)) &&      (inlined)
	jeq	d15,#0,.L369
.L2000:
	ld.bu	d15,[a15]2528
.L3386:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5061            (FEE_MAIN_GC == StateDataPtr->FeeMainJob))      (inlined)
	jne	d15,#5,.L370
.L4759:
	call	Fee_lIsWriteInvldAllowedbyGC
.L4760:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5064      if(Fee_lIsWriteInvldAllowedbyGC() == (boolean)TRUE)      (inlined)
	jeq	d2,#0,.L371
.L4761:
	mov	d15,#4
.L1995:
	j	.L372
.L310:
	ld.bu	d15,[a15]2512
.L4762:
	jz.t	d15:1,.L373
.L4763:
	mov	d15,#1
.L318:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5140    else if( (boolean)TRUE == Fee_lIsUserWriteInvldReqstd(StateDataPtr) )      (inlined)
.L320:
.L325:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5238      else if((boolean)TRUE == Fee_lIsUserWriteInvldReqstd(StateDataPtr))      (inlined)
.L328:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5250      else if(StateDataPtr->FeeGcState != FEE_GC_IDLE)      (inlined)
.L333:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5254      else      (inlined)
.L335:
.L336:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5389    else if( (StateDataPtr->FeePendReqStatus == FEE_REQ_NORM_WRITE) ||      (inlined)
.L352:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5417    else if((boolean)TRUE == Fee_lIsUserReadReqstd(StateDataPtr))      (inlined)
.L357:
.L359:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5051    else if((boolean)TRUE == Fee_lIsUserReadReqstd(StateDataPtr))      (inlined)
.L362:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5060    else if(((boolean)TRUE == Fee_lIsUserWriteInvldReqstd(StateDataPtr)) &&      (inlined)
.L365:
.L372:
	st.b	[a15]2528,d15
.L373:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5064      if(Fee_lIsWriteInvldAllowedbyGC() == (boolean)TRUE)      (inlined)
.L371:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5060    else if(((boolean)TRUE == Fee_lIsUserWriteInvldReqstd(StateDataPtr)) &&      (inlined)
.L370:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5061            (FEE_MAIN_GC == StateDataPtr->FeeMainJob))      (inlined)
.L369:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5054      if(Fee_lIsReadAllowedbyGC() == (boolean)TRUE)      (inlined)
.L364:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5417    else if((boolean)TRUE == Fee_lIsUserReadReqstd(StateDataPtr))      (inlined)
.L358:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5397      if ((StateDataPtr->FeeGcState != FEE_GC_IDLE) &&      (inlined)
.L356:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5398          (StateDataPtr->FeeReadLen == 0U))      (inlined)
.L355:
	ret
.L1946:
	
__Fee_lDecideMainJob_function_end:
	.size	Fee_lDecideMainJob,__Fee_lDecideMainJob_function_end-Fee_lDecideMainJob
.L1326:
	; End of function
	
	.sdecl	'.text.Fee_lHandleWritePrepDFLASH.Code.Cpu0',code,cluster('Fee_lHandleWritePrepDFLASH')
	.sect	'.text.Fee_lHandleWritePrepDFLASH.Code.Cpu0'
	.align	2
	
; Function Fee_lHandleWritePrepDFLASH
.L1124:
Fee_lHandleWritePrepDFLASH:	.type	func
	mov.aa	a15,a4
.L3387:
	mov	d8,#1
.L3388:
	movh.a	a2,#@his(Fee_CfgPtr)
	ld.a	a2,[a2]@los(Fee_CfgPtr)
.L5448:
	ld.a	a12,[a2]
.L3390:
	ld.w	d9,[a12]2464
.L3391:
	j	.L374
.L375:
	addi	d9,d9,#512
.L374:
	mov	d4,d9
.L3393:
	call	Fee_lIsUnerasableAddr
.L3394:
	jne	d2,#0,.L375
.L5449:
	st.w	[a12]2464,d9
.L5450:
	mov	d15,#1
.L5451:
	st.b	[a12]2524,d15
.L5452:
	st.b	[a12]2523,d15
.L5453:
	ld.bu	d15,[a12]2519
.L3395:
	jeq	d15,#2,.L376
.L5454:
	jeq	d15,#3,.L377
.L5455:
	jeq	d15,#4,.L378
.L5456:
	jeq	d15,#5,.L379
.L5457:
	jeq	d15,#6,.L380
.L5458:
	jeq	d15,#7,.L381
.L5459:
	j	.L382
.L380:
.L378:
.L376:
	mov	d5,#120
	mov	d4,d9
.L3397:
	j	.L383
.L381:
.L379:
.L377:
	add	d4,d9,#120
.L3392:
	mov	d5,#8
.L383:
	mov.aa	a4,a15
.L3398:
	call	Fls_17_Dmu_Write
.L3389:
	mov	d8,d2
.L382:
	jne	d8,#1,.L384
.L5460:
	mov	d15,#0
.L3396:
	st.b	[a12]2524,d15
.L5461:
	st.b	[a12]2523,d15
.L5462:
	j	Fee_lHandleInitGcFail
.L384:
	ret
.L2311:
	
__Fee_lHandleWritePrepDFLASH_function_end:
	.size	Fee_lHandleWritePrepDFLASH,__Fee_lHandleWritePrepDFLASH_function_end-Fee_lHandleWritePrepDFLASH
.L1431:
	; End of function
	
	.sdecl	'.text.Fee_lInitGC.Code.Cpu0',code,cluster('Fee_lInitGC')
	.sect	'.text.Fee_lInitGC.Code.Cpu0'
	.align	2
	
; Function Fee_lInitGC
.L1126:
Fee_lInitGC:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5467:
	ld.a	a13,[a15]
.L2321:
	ld.bu	d15,[a13]2524
.L5468:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6667    if(StateDataPtr->FeeIntrJobStatus == FEE_JOB_DONE)      (inlined)
	jne	d15,#2,.L385
.L5469:
	ld.bu	d15,[a13]2526
.L5470:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6672      if((StateDataPtr->FeeIntrJobResult == FEE_JOB_FAIL) &&      (inlined)
	jne	d15,#1,.L386
.L5471:
	ld.bu	d15,[a13]2537
.L5472:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6673          (StateDataPtr->FeeProgVerErr  == FEE_RESET) &&      (inlined)
	jne	d15,#0,.L387
.L5473:
	ld.bu	d15,[a13]2536
.L5474:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6674          (StateDataPtr->FeeEraseVerErr == FEE_RESET))      (inlined)
	jne	d15,#0,.L388
.L5475:
	call	Fee_lHandleInitGcFail
.L5476:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6676        Fee_lHandleInitGcFail();      (inlined)
	j	.L389

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6672      if((StateDataPtr->FeeIntrJobResult == FEE_JOB_FAIL) &&      (inlined)
.L388:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6674          (StateDataPtr->FeeEraseVerErr == FEE_RESET))      (inlined)
.L387:
.L386:
	ld.bu	d15,[a13]2518
.L5477:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6683        if( StateDataPtr->FeeInitGCState == FEE_INITGC_HANDLE_DIRTY)      (inlined)
	jne	d15,#2,.L390
.L2325:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5478:
	ld.a	a12,[a15]
.L3399:
	mov	d2,#0
.L3400:
	ld.w	d4,[a12]2464
.L3402:
	ld.bu	d15,[a12]2512
	extr.u	d8,d15,#2,#1
.L3403:
	mul	d15,d8,#40
	addsc.a	a15,a12,d15,#0
.L3404:
	ld.bu	d15,[a15]38
.L5479:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6083    if(SectorInfoPtr->Status.Dirty == (uint32)FEE_RESET)      (inlined)
	jnz.t	d15:0,.L391
.L5480:
	xor	d8,d8,#1
.L5481:
	mul	d15,d8,#40
	addsc.a	a15,a12,d15,#0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6083    if(SectorInfoPtr->Status.Dirty == (uint32)FEE_RESET)      (inlined)
.L391:
	ld.bu	d15,[a12]2521
.L5482:
	jeq	d15,#1,.L392
.L5483:
	jne	d15,#2,.L394
.L5484:
	ld.bu	d15,[a12]2537
.L5485:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6095        if(StateDataPtr->FeeProgVerErr == FEE_RESET)      (inlined)
	jne	d15,#0,.L395
.L5486:
	lea	a4,[a12]1420
.L3405:
	mov	d5,#32
	call	Fls_17_Dmu_CompareWordsSync

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6095        if(StateDataPtr->FeeProgVerErr == FEE_RESET)      (inlined)
.L395:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6112        if((ReturnVal1 == E_NOT_OK) ||      (inlined)
	jeq	d2,#1,.L396
.L5487:
	ld.bu	d15,[a12]2537
.L5488:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6113            (StateDataPtr->FeeProgVerErr == FEE_SET))      (inlined)
	jne	d15,#1,.L397

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6112        if((ReturnVal1 == E_NOT_OK) ||      (inlined)
.L396:
	mov	d0,#0
.L5489:
	st.b	[a12]2537,d0
.L5490:
	ld.bu	d15,[a12]2530
.L5491:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6119          if(StateDataPtr->FeeIntrJobFailCount == FEE_RESET)      (inlined)
	jne	d15,#0,.L398
.L5492:
	ne	d15,d8,#0
.L5493:
	sh	d1,d15,#19
.L5494:
	mov.u	d15,#65024
	addih	d15,d15,#7
.L3406:
	add	d1,d15
.L5495:
	ld.w	d15,[a15]32
.L5496:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6133            if (SectorInfoPtr->NextFreeWLAddr > EndAddr)      (inlined)
	jlt.u	d1,d15,.L399
.L5497:
	add	d0,#1
	st.b	[a12]2530,d0
.L5498:
	mov	d15,#1
.L5499:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6152            else      (inlined)
	j	.L400

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6112        if((ReturnVal1 == E_NOT_OK) ||      (inlined)
.L397:
	mov	d15,#0
.L5500:
	st.b	[a12]2530,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6152            else      (inlined)
.L399:
	ld.bu	d15,[a15]38
.L5501:
	insert	d15,d15,#0,#0,#1
	st.b	[a15]38,d15
.L5502:
	ld.bu	d15,[a12]38
.L5503:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6171          if((StateDataPtr->FeeSectorInfo[0].Status.Dirty      (inlined)
	jnz.t	d15:0,.L401
.L5504:
	ld.bu	d15,[a12]78
.L5505:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6174               == (uint32)FEE_RESET))      (inlined)
	jnz.t	d15:0,.L402
.L5506:
	mov	d15,#3
.L5507:
	st.b	[a12]2518,d15
.L5508:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6185        break;      (inlined)
	j	.L403

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6188      case FEE_PROGRAM_STATEPAGE:      (inlined)
.L392:
	ld.bu	d15,[a12]2537
.L5509:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6193        if(StateDataPtr->FeeProgVerErr == FEE_RESET)      (inlined)
	jne	d15,#0,.L404
.L5510:
	lea	a4,[a12]1420
.L3407:
	mov	d5,#30
	call	Fls_17_Dmu_CompareWordsSync

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6193        if(StateDataPtr->FeeProgVerErr == FEE_RESET)      (inlined)
.L404:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6211        if((ReturnVal1 == E_NOT_OK) ||      (inlined)
	jeq	d2,#1,.L405
.L5511:
	ld.bu	d15,[a12]2537
.L5512:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6212            ((StateDataPtr->FeeProgVerErr == FEE_SET)))      (inlined)
	jne	d15,#1,.L406

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6211        if((ReturnVal1 == E_NOT_OK) ||      (inlined)
.L405:
	mov	d15,#0
.L5513:
	st.b	[a12]2537,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6119          if(StateDataPtr->FeeIntrJobFailCount == FEE_RESET)      (inlined)
.L398:
	call	Fee_lHandleInitGcFail
.L3401:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6215          StateDataPtr->FeeProgVerErr = FEE_RESET;      (inlined)
	j	.L407

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6211        if((ReturnVal1 == E_NOT_OK) ||      (inlined)
.L406:
	mov	d15,#2

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6159          else      (inlined)
.L400:
	st.b	[a12]2521,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6218        else      (inlined)
.L407:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6229  }      (inlined)
.L403:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6171          if((StateDataPtr->FeeSectorInfo[0].Status.Dirty      (inlined)
.L402:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6174               == (uint32)FEE_RESET))      (inlined)
.L401:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6224      default:      (inlined)
.L394:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6683        if( StateDataPtr->FeeInitGCState == FEE_INITGC_HANDLE_DIRTY)      (inlined)
.L390:
	ld.bu	d15,[a13]2518
.L5514:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6691        if(StateDataPtr->FeeInitGCState == FEE_INITGC_PREPARE_DFLASH)      (inlined)
	jne	d15,#4,.L408
.L2335:
	movh.a	a2,#@his(Fee_CfgPtr)
	ld.a	a15,[a2]@los(Fee_CfgPtr)
.L5515:
	ld.a	a12,[a15]
.L3408:
	mov	d2,#0
.L3409:
	st.b	[a12]2532,d2
.L5516:
	st.w	[a12]2468,d2
.L5517:
	st.w	[a12]2472,d2
.L2345:
	ld.bu	d8,[a12]2519
.L2346:
	ld.w	d9,[a12]2464
.L2351:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6276    if (PrepDFlashState == FEE_PREPDF_ERASE_S0)      (inlined)
	jne	d8,#0,.L409
.L2352:
	ld.a	a2,[a2]@los(Fee_CfgPtr)
.L5518:
	ld.a	a15,[a2]
.L3412:
	mov	d8,d2
.L3413:
	ld.bu	d0,[a15]2536
.L5519:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6574      if(StateDataPtr->FeeEraseVerErr == FEE_SET)      (inlined)
	jne	d0,#1,.L410
.L5520:
	ld.bu	d15,[a15]2530
.L5521:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6579        if(StateDataPtr->FeeIntrJobFailCount != FEE_RESET)      (inlined)
	jeq	d15,#0,.L411
.L3414:
	mov	d4,d2
.L3411:
	lea	a4,[a15]2468
.L5522:
	lea	a5,[a15]2532
	call	Fls_17_Dmu_VerifyErase
.L3410:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6592          if(ReturnVal1 == E_NOT_OK)      (inlined)
	jne	d2,#1,.L412
.L5523:
	mov	d0,#0
.L5524:
	st.b	[a15]2530,d0
.L5525:
	call	Fee_lHandleInitGcFail
.L3415:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6594            StateDataPtr->FeeIntrJobFailCount = FEE_RESET;      (inlined)
	j	.L413

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6592          if(ReturnVal1 == E_NOT_OK)      (inlined)
.L412:
	ld.bu	d15,[a15]2532
.L5526:
	st.b	[a15]36,d15
.L5527:
	ld.w	d15,[a15]2468
.L5528:
	st.w	[a15]4,d15
.L5529:
	ld.w	d15,[a15]2472
.L5530:
	st.w	[a15]8,d15
.L5531:
	movh	d15,#8
.L5532:
	st.w	[a15]2464,d15
.L5533:
	mov	d8,#1
.L3416:
	mov	d0,#0
.L5534:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6597          else      (inlined)
	j	.L414

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6579        if(StateDataPtr->FeeIntrJobFailCount != FEE_RESET)      (inlined)
.L411:
	mov	d0,#0
.L5535:
	add	d0,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6610        else      (inlined)
.L414:
	st.b	[a15]2530,d0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6597          else      (inlined)
.L413:
	mov	d0,#0
.L5536:
	st.b	[a15]2536,d0
.L5537:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6615        StateDataPtr->FeeEraseVerErr = FEE_RESET;      (inlined)
	j	.L416

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6574      if(StateDataPtr->FeeEraseVerErr == FEE_SET)      (inlined)
.L410:
	ld.bu	d15,[a15]2532
.L5538:
	st.b	[a15]36,d15
.L5539:
	ld.w	d15,[a15]2468
.L5540:
	st.w	[a15]4,d15
.L5541:
	ld.w	d15,[a15]2472
.L5542:
	st.w	[a15]8,d15
.L5543:
	movh	d15,#8
.L5544:
	st.w	[a15]2464,d15
.L5545:
	mov	d8,#1
.L5546:
	mov	d15,#0
.L5547:
	st.b	[a15]2530,d15
.L2366:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6278       PrepDFlashState = Fee_lPrepDFlashStateEraseS0();      (inlined)
	j	.L416

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6276    if (PrepDFlashState == FEE_PREPDF_ERASE_S0)      (inlined)
.L409:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6283    else if (PrepDFlashState == FEE_PREPDF_ERASE_S1)      (inlined)
	jne	d8,#1,.L417
.L2353:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5548:
	ld.a	a15,[a15]
.L3418:
	ld.bu	d15,[a15]2536
.L5549:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6488      if(StateDataPtr->FeeEraseVerErr == FEE_SET)      (inlined)
	jne	d15,#1,.L418
.L5550:
	ld.bu	d15,[a15]2530
.L5551:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6493        if(StateDataPtr->FeeIntrJobFailCount != FEE_RESET)      (inlined)
	jeq	d15,#0,.L419
.L5552:
	movh	d4,#8
.L5553:
	lea	a4,[a15]2468
.L5554:
	lea	a5,[a15]2532
	call	Fls_17_Dmu_VerifyErase
.L3417:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6504          if(ReturnVal1 == E_NOT_OK)      (inlined)
	jne	d2,#1,.L420
.L5555:
	mov	d15,#0
.L5556:
	st.b	[a15]2530,d15
.L5557:
	call	Fee_lHandleInitGcFail
.L3419:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6506            StateDataPtr->FeeIntrJobFailCount = FEE_RESET;      (inlined)
	j	.L421

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6504          if(ReturnVal1 == E_NOT_OK)      (inlined)
.L420:
	ld.bu	d15,[a15]2532
.L5558:
	st.b	[a15]76,d15
.L5559:
	ld.w	d15,[a15]2468
.L5560:
	st.w	[a15]44,d15
.L5561:
	ld.w	d15,[a15]2472
.L5562:
	st.w	[a15]48,d15
.L5563:
	mov	d15,#0
.L5564:
	st.w	[a15]2464,d15
.L5565:
	mov	d8,#2
.L5566:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6509          else      (inlined)
	j	.L422

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6493        if(StateDataPtr->FeeIntrJobFailCount != FEE_RESET)      (inlined)
.L419:
	add	d15,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6523        else      (inlined)
.L422:
	st.b	[a15]2530,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6509          else      (inlined)
.L421:
	mov	d15,#0
.L5567:
	st.b	[a15]2536,d15
.L5568:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6527        StateDataPtr->FeeEraseVerErr = FEE_RESET;      (inlined)
	j	.L424

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6488      if(StateDataPtr->FeeEraseVerErr == FEE_SET)      (inlined)
.L418:
	ld.bu	d15,[a15]2532
.L5569:
	st.b	[a15]76,d15
.L5570:
	ld.w	d15,[a15]2468
.L5571:
	st.w	[a15]44,d15
.L5572:
	ld.w	d15,[a15]2472
.L5573:
	st.w	[a15]48,d15
.L5574:
	mov	d15,#0
.L5575:
	st.w	[a15]2464,d15
.L5576:
	mov	d8,#2
.L5577:
	st.b	[a15]2530,d15
.L2373:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6285       PrepDFlashState = Fee_lPrepDFlashStateEraseS1();      (inlined)
	j	.L424

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6283    else if (PrepDFlashState == FEE_PREPDF_ERASE_S1)      (inlined)
.L417:
	ld.bu	d15,[a12]2537
.L5578:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6292      if(StateDataPtr->FeeProgVerErr == FEE_RESET)      (inlined)
	jne	d15,#0,.L425
.L5579:
	lea	a4,[a12]1420
.L3421:
	mov	d5,#32
	mov	d4,d9
.L3422:
	call	Fls_17_Dmu_CompareWordsSync

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6292      if(StateDataPtr->FeeProgVerErr == FEE_RESET)      (inlined)
.L425:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6309      if((ReturnVal1 == E_NOT_OK) || (StateDataPtr->FeeProgVerErr == FEE_SET))      (inlined)
	jeq	d2,#1,.L426
.L5580:
	ld.bu	d0,[a12]2537
.L5581:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6309      if((ReturnVal1 == E_NOT_OK) || (StateDataPtr->FeeProgVerErr == FEE_SET))      (inlined)
	jne	d0,#1,.L427
.L426:
	mov	d0,#0
.L5582:
	st.b	[a12]2537,d0
.L5583:
	ld.bu	d15,[a12]2530
.L5584:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6314        if(StateDataPtr->FeeIntrJobFailCount == FEE_RESET)      (inlined)
	jne	d15,#0,.L428
.L5585:
	add	d0,#1
	st.b	[a12]2530,d0
.L2379:
	insert	d15,d9,#0,#0,#9
.L2382:
	addi	d15,d15,#512
.L2380:
	insert	d15,d15,#0,#0,#9
.L2385:
	addi	d15,d15,#512
.L2384:
	st.w	[a12]2464,d15
.L2354:
	jeq	d8,#2,.L429
.L5586:
	jeq	d8,#3,.L430
.L5587:
	jeq	d8,#4,.L431
.L5588:
	jeq	d8,#5,.L432
.L5589:
	jeq	d8,#6,.L433
.L5590:
	jeq	d8,#7,.L434
.L5591:
	j	.L438

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6429          case FEE_PREPDF_MARK_S0_ERASED_M:      (inlined)
.L430:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6428          case FEE_PREPDF_MARK_S0_ERASED_SP:      (inlined)
.L429:
	mov	d8,#2
.L5592:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6432            break;      (inlined)
	j	.L438

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6436          case FEE_PREPDF_MARK_S0_VALID_M:      (inlined)
.L432:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6435          case FEE_PREPDF_MARK_S0_VALID_SP:      (inlined)
.L431:
	mov	d8,#4
.L5593:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6439            break;      (inlined)
	j	.L438

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6444          case FEE_PREPDF_MARK_S1_ERASED_M:      (inlined)
.L434:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6443          case FEE_PREPDF_MARK_S1_ERASED_SP:      (inlined)
.L433:
	mov	d8,#6
.L2355:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6316          StateDataPtr->FeeIntrJobFailCount++;      (inlined)
	j	.L438

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6314        if(StateDataPtr->FeeIntrJobFailCount == FEE_RESET)      (inlined)
.L428:
	call	Fee_lHandleInitGcFail
.L3420:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6324        else      (inlined)
	j	.L439

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6309      if((ReturnVal1 == E_NOT_OK) || (StateDataPtr->FeeProgVerErr == FEE_SET))      (inlined)
.L427:
	jeq	d8,#2,.L440
.L5594:
	jeq	d8,#3,.L441
.L5595:
	jeq	d8,#4,.L442
.L5596:
	jeq	d8,#5,.L443
.L5597:
	jeq	d8,#6,.L444
.L5598:
	jeq	d8,#7,.L445
.L2356:
	j	.L446

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6336          case FEE_PREPDF_MARK_S0_ERASED_SP:      (inlined)
.L440:
	mov	d8,#3
.L2357:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6339            break;      (inlined)
	j	.L447

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6342          case FEE_PREPDF_MARK_S0_ERASED_M:      (inlined)
.L441:
	mov	d0,#0
.L5599:
	st.b	[a12]2530,d0
.L5600:
	mov	d15,d9
.L2386:
	insert	d15,d15,#0,#0,#9
.L2388:
	addi	d15,d15,#512
.L2387:
	st.w	[a12]2464,d15
.L2358:
	mov	d8,#4
.L2359:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6348            break;      (inlined)
	j	.L448

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6351          case FEE_PREPDF_MARK_S0_VALID_SP:      (inlined)
.L442:
	mov	d8,#5
.L2360:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6354            break;      (inlined)
	j	.L449

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6357          case FEE_PREPDF_MARK_S0_VALID_M:      (inlined)
.L443:
	mov	d15,#0
.L5601:
	st.b	[a12]2530,d15
.L5602:
	st.w	[a12]28,d9
.L2389:
	insert	d15,d9,#0,#0,#9
.L2391:
	addi	d15,d15,#512
.L2390:
	st.w	[a12]2452,d15
.L5603:
	st.w	[a12]32,d15
.L5604:
	movh	d15,#8
.L5605:
	st.w	[a12]2464,d15
.L2361:
	mov	d8,#6
.L2362:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6366            break;      (inlined)
	j	.L450

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6369          case FEE_PREPDF_MARK_S1_ERASED_SP:      (inlined)
.L444:
	mov	d8,#7
.L2363:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6372            break;      (inlined)
	j	.L451

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6376          case FEE_PREPDF_MARK_S1_ERASED_M:      (inlined)
.L445:
	mov	d15,#0
.L5606:
	st.b	[a12]2530,d15
.L5607:
	st.w	[a12]68,d9
.L2392:
	insert	d15,d9,#0,#0,#9
.L2394:
	addi	d15,d15,#512
.L2393:
	st.w	[a12]72,d15
.L5608:
	mov	d15,#14
.L5609:
	st.b	[a12]2515,d15
.L5610:
	mov	d15,#5
.L5611:
	st.b	[a12]2518,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6393      }/* End of if ( (ReturnVal1 == E_NOT_OK) || (ReturnVal1 == E_NOT_OK) )*/      (inlined)
.L451:
.L450:
.L449:
.L448:
.L447:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6388      default:      (inlined)
.L446:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6331      else      (inlined)
.L439:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6324        else      (inlined)
.L438:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6289    else      (inlined)
.L424:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6283    else if (PrepDFlashState == FEE_PREPDF_ERASE_S1)      (inlined)
.L416:
	st.b	[a12]2519,d8

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6691        if(StateDataPtr->FeeInitGCState == FEE_INITGC_PREPARE_DFLASH)      (inlined)
.L408:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6679      else      (inlined)
.L389:
	mov	d15,#0
.L5612:
	st.b	[a13]2524,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6667    if(StateDataPtr->FeeIntrJobStatus == FEE_JOB_DONE)      (inlined)
.L385:
	ld.bu	d15,[a13]2518
.L5613:
	jne	d15,#1,.L452
.L5614:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5615:
	ld.bu	d15,[a15]36
.L5616:
	jne	d15,#1,.L453
.L5617:
	mov	d15,#4
.L5618:
	st.b	[a13]2518,d15
.L5619:
	mov	d15,#0
.L5620:
	st.b	[a13]2519,d15
.L5621:
	st.w	[a13]2464,d15
.L5622:
	st.w	[a13]904,d15
.L5623:
	j	.L454
.L453:
	call	Fee_lHandleInitGcFail
.L454:
.L452:
	ld.bu	d15,[a13]2518
.L5624:
	jne	d15,#7,.L455
.L5625:
	mov	d15,#4
.L5626:
	st.b	[a13]2518,d15
.L455:
	ld.bu	d15,[a13]2518
.L5627:
	jne	d15,#2,.L456
.L2396:
	mov.a	a4,#0
.L3423:
	mov	d4,#0
.L3425:
	mov	d5,d4
.L3426:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5628:
	ld.a	a12,[a15]
.L3427:
	ld.bu	d15,[a12]2512
	extr.u	d0,d15,#2,#1
.L3428:
	mul	d15,d0,#40
	addsc.a	a15,a12,d15,#0
.L3430:
	ld.bu	d15,[a15]38
.L5629:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5740    if(SectorInfoPtr->Status.Dirty == (uint32)FEE_RESET)      (inlined)
	jnz.t	d15:0,.L457
.L5630:
	xor	d15,d0,#1
.L3429:
	mul	d15,d15,#40
.L3431:
	addsc.a	a15,a12,d15,#0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5740    if(SectorInfoPtr->Status.Dirty == (uint32)FEE_RESET)      (inlined)
.L457:
	ld.bu	d15,[a12]2521
.L5631:
	jeq	d15,#1,.L458
.L5632:
	jne	d15,#2,.L460
.L5633:
	ld.w	d15,[a15]28
.L5634:
	st.w	[a12]2464,d15
.L5635:
	ld.bu	d15,[a12]2530
.L5636:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5753        if (StateDataPtr->FeeIntrJobFailCount == FEE_RESET)      (inlined)
	jne	d15,#0,.L461
.L5637:
	call	Fee_lClearFeeGcReadWriteBuffer
.L3424:
	lea	a4,[a12]1420
.L3432:
	ld.w	d4,[a12]2464
.L5638:
	mov	d5,#30
	call	Fls_17_Dmu_ReadWordsSync

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5753        if (StateDataPtr->FeeIntrJobFailCount == FEE_RESET)      (inlined)
.L461:
	call	Fee_lPrepareMarkerBuffer
.L5639:
	lea	a4,[a12]1540
.L3433:
	mov	d5,#8
.L3435:
	ld.w	d15,[a12]2464
.L5640:
	add	d4,d15,#120
.L3436:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5775        break;      (inlined)
	j	.L462

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5777      case FEE_PROGRAM_STATEPAGE:      (inlined)
.L458:
	ld.w	d15,[a15]32
.L5641:
	st.w	[a12]2464,d15
.L5642:
	lea	a4,[a12]1420
.L5643:
	st.w	[a15]28,d15
.L5644:
	ld.w	d15,[a12]2464
.L2405:
	insert	d15,d15,#0,#0,#9
.L2407:
	addi	d15,d15,#512
.L2406:
	st.w	[a15]32,d15
.L5645:
	mov	d5,#120
.L5646:
	ld.w	d4,[a12]2464

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5794    StateDataPtr->FeeIntrJob = FEE_WRITE_JOB;      (inlined)
.L462:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5789      default:      (inlined)
.L460:
	mov	d15,#1
.L5647:
	st.b	[a12]2523,d15
.L5648:
	st.b	[a12]2524,d15
.L5649:
	call	Fls_17_Dmu_Write
.L3434:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5800    if(ReturnValueFls == E_NOT_OK)      (inlined)
	jne	d2,#1,.L463
.L5650:
	mov	d15,#0
.L5651:
	st.b	[a12]2524,d15
.L5652:
	st.b	[a12]2523,d15
.L5653:
	call	Fee_lHandleInitGcFail

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5800    if(ReturnValueFls == E_NOT_OK)      (inlined)
.L463:
.L456:
	ld.bu	d15,[a13]2518
.L5654:
	jne	d15,#3,.L464
.L2409:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5655:
	ld.a	a15,[a15]
.L3437:
	ld.bu	d0,[a15]2516
.L5656:
	mov	d15,#29
	jeq	d15,d0,.L465
.L5657:
	mov	d15,#93
	jeq	d15,d0,.L466
.L5658:
	mov	d15,#209
	jeq	d15,d0,.L467
.L5659:
	mov	d15,#213
	jeq	d15,d0,.L468
.L5660:
	mov	d15,#223
	jeq	d15,d0,.L469
.L5661:
	mov	d15,#253
	jeq	d15,d0,.L470
	j	.L471

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5842      case FEE_INITGC_DATA_COPY_S1_S0:      (inlined)
.L466:
	movh	d15,#8
.L5662:
	st.w	[a15]2464,d15
.L5663:
	st.w	[a15]2448,d15
.L5664:
	mov	d15,#0
.L5665:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5849        break;      (inlined)
	j	.L472

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5854      case FEE_INITGC_DATA_COPY_S0_S1:      (inlined)
.L468:
	mov	d15,#0
.L5666:
	st.w	[a15]2464,d15
.L5667:
	st.w	[a15]2448,d15
.L5668:
	movh	d15,#8

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5912    StateDataPtr->FeeInitGCState = FEE_INITGC_COMPLETE;      (inlined)
.L472:
	st.w	[a15]2444,d15
.L5669:
	mov	d15,#4
.L5670:
	st.b	[a15]2515,d15
.L5671:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5861        break;      (inlined)
	j	.L473

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5866      case FEE_INITGC_ERASE_S0:      (inlined)
.L470:
	movh	d15,#8
.L5672:
	st.w	[a15]2464,d15
.L5673:
	st.w	[a15]2448,d15
.L5674:
	mov	d15,#0
.L5675:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5873        break;      (inlined)
	j	.L474

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5878      case FEE_INITGC_ERASE_S1:      (inlined)
.L469:
	mov	d15,#0
.L5676:
	st.w	[a15]2464,d15
.L5677:
	st.w	[a15]2448,d15
.L5678:
	movh	d15,#8

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5912    StateDataPtr->FeeInitGCState = FEE_INITGC_COMPLETE;      (inlined)
.L474:
	st.w	[a15]2444,d15
.L5679:
	mov	d15,#3
.L5680:
	st.b	[a15]2515,d15
.L5681:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5885        break;      (inlined)
	j	.L475

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5888      case FEE_INITGC_NORMAL_S0:      (inlined)
.L467:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5887      case FEE_INITGC_NORMAL_S1:      (inlined)
.L465:
	mov	d15,#14
.L5682:
	st.b	[a15]2515,d15
.L5683:
	ld.bu	d15,[a15]2512
	extr.u	d15,d15,#2,#1
	ne	d15,d15,#0
.L5684:
	sh	d15,d15,#19
.L5685:
	st.w	[a15]2464,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5912    StateDataPtr->FeeInitGCState = FEE_INITGC_COMPLETE;      (inlined)
.L475:
.L473:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5905      default:      (inlined)
.L471:
	mov	d15,#5
.L5686:
	st.b	[a15]2518,d15
.L464:
	ld.bu	d15,[a13]2518
.L5687:
	jne	d15,#4,.L476
.L2413:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5688:
	ld.a	a15,[a15]
.L3438:
	ld.bu	d15,[a15]2519
.L5689:
	jeq	d15,#0,.L477
.L5690:
	jeq	d15,#1,.L478
.L5691:
	jeq	d15,#2,.L479
.L5692:
	jeq	d15,#3,.L480
.L5693:
	jeq	d15,#4,.L481
.L5694:
	jeq	d15,#5,.L482
.L5695:
	jeq	d15,#6,.L483
.L5696:
	jeq	d15,#7,.L484
.L476:
	ret

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5949      case FEE_PREPDF_ERASE_S1:      (inlined)
.L478:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5948      case FEE_PREPDF_ERASE_S0:      (inlined)
.L477:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3439:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5697:
	ld.a	a15,[a15]
.L3440:
	ld.w	d4,[a15]2464
.L3441:
	mov	d15,#1
.L5698:
	st.b	[a15]2524,d15
.L5699:
	mov	d15,#2
.L5700:
	st.b	[a15]2523,d15
.L5701:
	movh	d5,#8
	call	Fls_17_Dmu_Erase
.L3442:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5617    if(ReturnValueFls == E_NOT_OK)      (inlined)
	jne	d2,#1,.L486
.L5702:
	mov	d15,#0
.L5703:
	st.b	[a15]2524,d15
.L5704:
	st.b	[a15]2523,d15
.L5705:
	j	Fee_lHandleInitGcFail

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5617    if(ReturnValueFls == E_NOT_OK)      (inlined)
.L486:
	ret

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5955      case FEE_PREPDF_MARK_S0_ERASED_SP:      (inlined)
.L479:
	ld.bu	d15,[a15]2530
.L5706:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5959        if (StateDataPtr->FeeIntrJobFailCount == FEE_RESET)      (inlined)
	jne	d15,#0,.L488
.L5707:
	mov	d4,#0
.L5708:
	mov	d5,#30
	call	Fee_lPrepareStatePageBuffer
.L5709:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5961          Fee_lPrepareStatePageBuffer(FEE_SECTOR0, FEE_ERASED);      (inlined)
	j	.L489

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5975      case FEE_PREPDF_MARK_S0_VALID_SP:      (inlined)
.L481:
	ld.bu	d15,[a15]2530
.L5710:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5979        if (StateDataPtr->FeeIntrJobFailCount == FEE_RESET)      (inlined)
	jne	d15,#0,.L490
.L5711:
	mov	d4,#0
.L5712:
	mov	d5,#209
	call	Fee_lPrepareStatePageBuffer
.L5713:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5981          Fee_lPrepareStatePageBuffer(FEE_SECTOR0, FEE_VALID);      (inlined)
	j	.L491

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5995      case FEE_PREPDF_MARK_S1_ERASED_SP:      (inlined)
.L483:
	ld.bu	d15,[a15]2530
.L5714:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5999        if (StateDataPtr->FeeIntrJobFailCount == FEE_RESET)      (inlined)
	jne	d15,#0,.L492
.L5715:
	mov	d4,#1
.L5716:
	mov	d5,#30
	call	Fee_lPrepareStatePageBuffer
.L5717:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6001          Fee_lPrepareStatePageBuffer(FEE_SECTOR1, FEE_ERASED);      (inlined)
	j	.L493

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5999        if (StateDataPtr->FeeIntrJobFailCount == FEE_RESET)      (inlined)
.L492:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5979        if (StateDataPtr->FeeIntrJobFailCount == FEE_RESET)      (inlined)
.L490:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5959        if (StateDataPtr->FeeIntrJobFailCount == FEE_RESET)      (inlined)
.L488:
	call	Fee_lClearMarkerBuffer

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6003        else      (inlined)
.L493:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5983        else      (inlined)
.L491:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  5963        else      (inlined)
.L489:
	lea	a4,[a15]1420
.L3443:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6012        break;      (inlined)
	j	.L494

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6017      case FEE_PREPDF_MARK_S1_ERASED_M:      (inlined)
.L484:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6016      case FEE_PREPDF_MARK_S0_VALID_M:      (inlined)
.L482:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6015      case FEE_PREPDF_MARK_S0_ERASED_M:      (inlined)
.L480:
	call	Fee_lPrepareMarkerBuffer
.L5718:
	lea	a4,[a15]1540

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6032  }      (inlined)
.L494:
	j	Fee_lHandleWritePrepDFLASH
.L2318:
	
__Fee_lInitGC_function_end:
	.size	Fee_lInitGC,__Fee_lInitGC_function_end-Fee_lInitGC
.L1436:
	; End of function
	
	.sdecl	'.text.Fee_lLastPgHandler.Code.Cpu0',code,cluster('Fee_lLastPgHandler')
	.sect	'.text.Fee_lLastPgHandler.Code.Cpu0'
	.align	2
	
; Function Fee_lLastPgHandler
.L1128:
Fee_lLastPgHandler:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5027:
	ld.a	a12,[a15]
.L3444:
	ld.hu	d4,[a12]2498
	call	Fee_lGetUsrBlockIndex
.L3445:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5028:
	ld.a	a15,[a15]4
.L5029:
	addsc.a	a2,a15,d2,#3
.L3446:
	mul	d15,d2,#24
	addsc.a	a15,a12,d15,#0
	lea	a15,[a15]80
.L3447:
	ld.bu	d15,[a15]10
.L5030:
	and	d0,d15,#1
.L5031:
	insert	d15,d15,d0,#3,#1
	st.b	[a15]10,d15
.L5032:
	extr.u	d0,d15,#1,#1
.L5033:
	insert	d15,d15,d0,#4,#1
	st.b	[a15]10,d15
.L5034:
	extr.u	d0,d15,#2,#1
.L5035:
	insert	d15,d15,d0,#5,#1
	st.b	[a15]10,d15
.L5036:
	ld.w	d15,[a15]
.L5037:
	st.w	[a15]12,d15
.L5038:
	ld.w	d15,[a15]4
.L5039:
	st.w	[a15]16,d15
.L5040:
	ld.w	d15,[a12]2460
.L5041:
	st.w	[a15],d15
.L5042:
	ld.bu	d15,[a15]10
.L5043:
	or	d15,#2
	st.b	[a15]10,d15
.L5044:
	ld.bu	d0,[a12]2512
.L5045:
	jz.t	d0:3,.L495
.L5046:
	insert	d15,d15,#0,#0,#1
	st.b	[a15]10,d15
.L5047:
	j	.L496
.L495:
	ld.bu	d15,[a15]10
.L5048:
	or	d15,#1
	st.b	[a15]10,d15
.L5049:
	ld.hu	d15,[a2]6
.L5050:
	st.w	[a15]4,d15
.L496:
	ld.bu	d15,[a12]2515
.L5051:
	mov	d0,#14
.L5052:
	jeq	d15,d0,.L497
.L5053:
	jeq	d15,#3,.L498
.L5054:
	jeq	d15,#4,.L499
.L5055:
	ld.bu	d15,[a15]10
.L5056:
	jz.t	d15:2,.L500
.L5057:
	or	d15,#32
.L5058:
	j	.L501
.L500:
	ld.bu	d15,[a15]10
.L5059:
	insert	d15,d15,#0,#5,#1
.L501:
	st.b	[a15]10,d15
.L5060:
	insert	d15,d15,#0,#2,#1
	st.b	[a15]10,d15
.L5061:
	ld.bu	d15,[a12]2512
.L5062:
	or	d15,#1
	st.b	[a12]2512,d15
.L499:
.L498:
.L497:
	ld.w	d15,[a12]2452
.L5063:
	add	d0,d15,#-8
.L2147:
	insert	d15,d15,#0,#0,#9
.L2148:
	ld.w	d1,[a12]2460
.L5064:
	jge.u	d1,d15,.L502
.L5065:
	jlt.u	d0,d15,.L503
.L5066:
	ld.hu	d15,[a12]2498
.L5067:
	st.h	[a12]734,d15
.L5068:
	ld.hu	d15,[a12]2494
.L5069:
	st.h	[a12]732,d15
.L5070:
	ld.w	d15,[a12]2460
.L5071:
	st.w	[a12]728,d15
.L5072:
	ld.bu	d15,[a12]736
.L5073:
	or	d15,#2
	st.b	[a12]736,d15
.L503:
.L502:
	mov	d15,#1
.L5074:
	st.b	[a12]2514,d15
.L5075:
	ld.bu	d15,[a12]2512
.L5076:
	insert	d15,d15,#0,#3,#1
	st.b	[a12]2512,d15
.L5077:
	mov	d15,#0
.L5078:
	st.b	[a12]2480,d15
.L5079:
	st.b	[a12]2529,d15
.L5080:
	st.h	[a12]2494,d15
.L5081:
	ld.bu	d15,[a12]2515
.L5082:
	jeq	d15,#5,.L504
.L5083:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3448:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5084:
	ld.w	d15,[a15]8
.L5085:
	jeq	d15,#0,.L505
.L5086:
	ld.a	a15,[a15]8
.L5087:
	ji	a15
.L504:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3449:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5088:
	ld.w	d15,[a15]8
.L5089:
	jeq	d15,#0,.L507
.L5090:
	ld.a	a15,[a15]8
.L5091:
	calli	a15
.L507:
	mov	d15,#0
.L5092:
	st.b	[a12]2535,d15
.L5093:
	mov	d15,#5
.L5094:
	st.b	[a12]2528,d15
.L505:
	ret
.L2139:
	
__Fee_lLastPgHandler_function_end:
	.size	Fee_lLastPgHandler,__Fee_lLastPgHandler_function_end-Fee_lLastPgHandler
.L1411:
	; End of function
	
	.sdecl	'.text.Fee_lIsLastWrittenWLAffected.Code.Cpu0',code,cluster('Fee_lIsLastWrittenWLAffected')
	.sect	'.text.Fee_lIsLastWrittenWLAffected.Code.Cpu0'
	.align	2
	
; Function Fee_lIsLastWrittenWLAffected
.L1130:
Fee_lIsLastWrittenWLAffected:	.type	func
	sub.a	a10,#8
.L3450:
	mov	d11,d4
.L3451:
	mov	d2,#0
.L3452:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6421:
	ld.a	a12,[a15]
.L3455:
	lea	a13,[a12]1932
.L3456:
	ld.w	d0,[a12]2456
.L6422:
	and	d8,d0,#511
.L3457:
	jlt.u	d8,#9,.L508
.L2875:
	insert	d12,d0,#0,#0,#9
.L2876:
	add	d8,#-8
.L6423:
	mov	d10,#163
.L2879:
	mov.u	d13,#65535
.L6424:
	movh.a	a14,#@his(Fee_CfgPtr)
.L509:
	addsc.a	a15,a13,d11,#0
	ld.bu	d0,[a15]
.L6425:
	jne	d0,d10,.L510
.L6426:
	addsc.a	a15,a12,d11,#0
	ld.bu	d0,[a15]1934
.L6427:
	sha	d9,d0,#8
.L6428:
	ld.bu	d15,[a15]1933
.L3458:
	or	d9,d15
.L6429:
	add	d14,d12,d11
.L2886:
	mov	d0,#0
.L3454:
	st.w	[a10],d0
.L3459:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6430:
	ld.a	a15,[a15]
.L3460:
	mov	d4,d9
.L3461:
	call	Fee_lGetUsrBlockIndex
.L3453:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7734    if(BlockIndex == FEE_LOG_BLOCK_NOT_FOUND)      (inlined)
	jne	d2,d13,.L511
.L6431:
	mov	d0,#0
.L3462:
	ld.a	a2,[a14]@los(Fee_CfgPtr)
.L6432:
	ld.hu	d15,[a2]20
.L6433:
	mul	d15,d15,#24
	addsc.a	a2,a15,d15,#0
	lea	a2,[a2]80
.L3464:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7742            (RetVal == (boolean)FALSE))      (inlined)
	j	.L512
.L513:
	ld.hu	d15,[a2]8
.L3465:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7747        if((UnconfigBlockPtr->BlockNumber == BlockNumber) &&      (inlined)
	jne	d15,d9,.L514
.L6434:
	ld.w	d15,[a2]
.L6435:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7748            (UnconfigBlockPtr->Address == BlockAddr))      (inlined)
	jne	d15,d14,.L515
.L6436:
	mov	d15,#1
.L3466:
	st.w	[a10],d15
.L6437:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7750          RetVal = (boolean)TRUE;      (inlined)
	j	.L516

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7747        if((UnconfigBlockPtr->BlockNumber == BlockNumber) &&      (inlined)
.L515:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7748            (UnconfigBlockPtr->Address == BlockAddr))      (inlined)
.L514:
	add	d0,#1
.L3463:
	extr.u	d0,d0,#0,#16

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7752        else      (inlined)
.L516:
	lea	a2,[a2]24

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7742            (RetVal == (boolean)FALSE))      (inlined)
.L512:
	ld.hu	d15,[a15]2506
.L6438:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7741      while((TempIndex < (StateDataPtr->FeeUnConfigBlockCount)) &&      (inlined)
	jge.u	d0,d15,.L517
.L6439:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7742            (RetVal == (boolean)FALSE))      (inlined)
	ld.w	d15,[a10]
.L3467:
	jeq	d15,#0,.L513
.L6440:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7741      while((TempIndex < (StateDataPtr->FeeUnConfigBlockCount)) &&      (inlined)
	j	.L518

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7734    if(BlockIndex == FEE_LOG_BLOCK_NOT_FOUND)      (inlined)
.L511:
	mul	d15,d2,#24
	addsc.a	a2,a15,d15,#0
.L6441:
	ld.w	d15,[a2]80
.L6442:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7765      if(CachePtr->Address == BlockAddr)      (inlined)
	jne	d15,d14,.L519
.L6443:
	mov	d15,#1
.L3468:
	st.w	[a10],d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7765      if(CachePtr->Address == BlockAddr)      (inlined)
.L519:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7760    else      (inlined)
.L518:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7741      while((TempIndex < (StateDataPtr->FeeUnConfigBlockCount)) &&      (inlined)
.L517:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7771    if(RetVal == (boolean)TRUE)      (inlined)
	ld.w	d15,[a10]
.L3469:
	jeq	d15,#0,.L520
.L6444:
	st.h	[a15]2498,d9
.L6445:
	st.w	[a15]2464,d14

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7771    if(RetVal == (boolean)TRUE)      (inlined)
.L520:
	ld.w	d2,[a10]
.L510:
	add	d15,d11,#8
	extr.u	d11,d15,#0,#16
.L6446:
	jge.u	d11,d8,.L521
.L6447:
	jeq	d2,#0,.L509
.L521:
.L508:
	ret
.L2865:
	
__Fee_lIsLastWrittenWLAffected_function_end:
	.size	Fee_lIsLastWrittenWLAffected,__Fee_lIsLastWrittenWLAffected_function_end-Fee_lIsLastWrittenWLAffected
.L1521:
	; End of function
	
	.sdecl	'.text.Fee_lIsBlockAcrossWLLatest.Code.Cpu0',code,cluster('Fee_lIsBlockAcrossWLLatest')
	.sect	'.text.Fee_lIsBlockAcrossWLLatest.Code.Cpu0'
	.align	2
	
; Function Fee_lIsBlockAcrossWLLatest
.L1132:
Fee_lIsBlockAcrossWLLatest:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6452:
	ld.a	a15,[a15]
.L3470:
	lea	a12,[a15]728
.L3471:
	ld.hu	d4,[a15]734
	call	Fee_lGetUsrBlockIndex
.L3472:
	mov.u	d15,#65535
.L6453:
	jeq	d15,d2,.L523
.L6454:
	mul	d15,d2,#24
	addsc.a	a2,a15,d15,#0
.L6455:
	ld.w	d15,[a2]80
.L6456:
	ld.w	d0,[a12]
.L6457:
	jne	d15,d0,.L524
.L523:
	mov	d2,#1
.L3473:
	ret
.L524:
	ld.bu	d15,[a15]736
.L6458:
	insert	d15,d15,#0,#1,#1
	st.b	[a15]736,d15
.L6459:
	mov	d2,#0
.L3474:
	st.h	[a15]734,d2
.L6460:
	mov	d15,#2
.L6461:
	st.b	[a15]2522,d15
.L6462:
	ret
.L2893:
	
__Fee_lIsBlockAcrossWLLatest_function_end:
	.size	Fee_lIsBlockAcrossWLLatest,__Fee_lIsBlockAcrossWLLatest_function_end-Fee_lIsBlockAcrossWLLatest
.L1526:
	; End of function
	
	.sdecl	'.text.Fee_lHandleUserWrite.Code.Cpu0',code,cluster('Fee_lHandleUserWrite')
	.sect	'.text.Fee_lHandleUserWrite.Code.Cpu0'
	.align	2
	
; Function Fee_lHandleUserWrite
.L1134:
Fee_lHandleUserWrite:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5304:
	ld.a	a12,[a15]
.L3476:
	ld.a	a15,[a15]4
.L5305:
	addsc.a	a15,a15,d4,#3
.L3477:
	ld.hu	d8,[a15]6
.L3479:
	mov	d9,#0
.L3480:
	mul	d15,d4,#24
	addsc.a	a15,a12,d15,#0
.L3478:
	ld.w	d15,[a15]80
.L5306:
	jeq	d15,#0,.L527
.L5307:
	call	Fee_lGetBlkCycleCount
.L3475:
	mov	d9,d2
.L527:
	ld.w	d10,[a12]2452
.L3482:
	mov	d0,d10
.L5308:
	and	d15,d0,#511
.L3483:
	jne	d15,#0,.L528
.L5309:
	j	.L529
.L530:
	mov	d0,d10
.L2274:
	insert	d0,d0,#0,#0,#9
.L2276:
	addi	d10,d0,#512
.L529:
	mov	d4,d10
	call	Fee_lIsUnerasableAddr
.L5310:
	jne	d2,#0,.L530
.L5311:
	st.w	[a12]2452,d10
.L5312:
	mov	d0,#0
.L5313:
	st.h	[a12]734,d0
.L5314:
	ld.bu	d1,[a12]736
.L5315:
	insert	d1,d1,#0,#1,#1
	st.b	[a12]736,d1
.L5316:
	st.b	[a12]2522,d0
.L528:
	addsc.a	a15,a12,d15,#0
	lea	a15,[a15]908
.L3485:
	ld.bu	d15,[a12]2512
.L3484:
	jz.t	d15:3,.L531
.L2279:
	movh.a	a2,#@his(Fee_CfgPtr)
	ld.a	a2,[a2]@los(Fee_CfgPtr)
.L5317:
	ld.a	a2,[a2]
.L3486:
	ld.hu	d0,[a2]760
.L3487:
	st.h	[a2]2498,d0
.L3489:
	add	d9,#1
.L3481:
	ld.hu	d15,[a2]2494
.L5318:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6987    if(StateDataPtr->FeeBlkPageCount == FEE_BLOCK_HDR_PAGE)      (inlined)
	jne	d15,#0,.L532
.L5319:
	mov	d15,#163
.L5320:
	st.b	[a15],d15
.L5321:
	st.b	[a15]1,d0
.L5322:
	sha	d0,#-8
.L3488:
	st.b	[a15]2,d0
.L5323:
	st.b	[a15]3,d9
.L5324:
	sh	d15,d9,#-8
.L5325:
	st.b	[a15]4,d15
.L5326:
	sh	d15,d9,#-16
.L5327:
	st.b	[a15]5,d15
.L5328:
	mov	d15,#1
.L5329:
	st.b	[a15]6,d15
.L5330:
	mov	d0,#0
.L5331:
	st.b	[a15]7,d0
.L5332:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6990      *(ReadWriteBuffPtr)  = FEE_DATA_FIRST_PAGE_ID;      (inlined)
	j	.L533

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  6987    if(StateDataPtr->FeeBlkPageCount == FEE_BLOCK_HDR_PAGE)      (inlined)
.L532:
	mov	d15,#101
.L5333:
	st.b	[a15],d15
.L5334:
	mov	d15,#175
.L5335:
	st.b	[a15]1,d15
.L5336:
	mov	d15,#245
.L5337:
	st.b	[a15]2,d15
.L5338:
	st.b	[a15]3,d15
.L5339:
	st.b	[a15]4,d0
.L5340:
	sha	d0,#-8
.L3490:
	st.b	[a15]5,d0
.L5341:
	mov	d15,#1
.L5342:
	st.b	[a15]6,d15
.L5343:
	mov	d15,#0
.L5344:
	st.b	[a15]7,d15
.L5345:
	mov	d15,#2

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7002    else      (inlined)
.L533:
	st.h	[a2]2494,d15
.L5346:
	mov	d15,#8
.L5347:
	st.h	[a2]2492,d15
.L5348:
	mov	d15,#10
.L5349:
	st.b	[a2]2514,d15
.L2280:
	j	.L534
.L531:
	mov	d12,#0
.L3492:
	movh.a	a2,#@his(Fee_CfgPtr)
	ld.a	a2,[a2]@los(Fee_CfgPtr)
.L5350:
	ld.a	a13,[a2]
.L3493:
	ld.hu	d11,[a13]760
.L3494:
	ld.a	a14,[a13]756
.L3496:
	add	d9,#1
.L3491:
	mov	d4,d8
.L3497:
	call	Fee_lGetDFLASHPages
.L3498:
	add	d2,#-1
	extr.u	d0,d2,#0,#16
.L3499:
	st.h	[a13]2498,d11
.L5351:
	ld.hu	d1,[a13]2494
.L5352:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7076    if(StateDataPtr->FeeBlkPageCount == BlockPages_1)      (inlined)
	jne	d1,d0,.L535
.L5353:
	mov	d15,#101
.L5354:
	st.b	[a15],d15
.L5355:
	mov	d15,#175
.L5356:
	st.b	[a15]1,d15
.L5357:
	mov	d15,#245
.L5358:
	st.b	[a15]2,d15
.L5359:
	st.b	[a15]3,d15
.L5360:
	st.b	[a15]4,d11
.L5361:
	sha	d11,#-8
.L3495:
	st.b	[a15]5,d11
.L5362:
	st.b	[a15]6,d0
.L5363:
	sha	d0,#-8
.L3500:
	or	d15,d0,#128
.L5364:
	st.b	[a15]7,d15
.L5365:
	ld.hu	d15,[a13]2494
.L5366:
	add	d15,#1
	st.h	[a13]2494,d15
.L5367:
	mov	d15,#10
.L5368:
	st.b	[a13]2514,d15
.L5369:
	mov	d15,#8
.L5370:
	st.h	[a13]2492,d15
.L5371:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7079      *(ReadWriteBuffPtr)  = FEE_DATA_MARKER_PAGE_ID;      (inlined)
	j	.L536

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7076    if(StateDataPtr->FeeBlkPageCount == BlockPages_1)      (inlined)
.L535:
	ld.hu	d15,[a13]2494
.L5372:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7097      if(StateDataPtr->FeeBlkPageCount == FEE_BLOCK_HDR_PAGE)      (inlined)
	jne	d15,#0,.L537
.L5373:
	mov	d15,#163
.L5374:
	st.b	[a15],d15
.L5375:
	st.b	[a15]1,d11
.L5376:
	sha	d11,#-8
.L3501:
	st.b	[a15]2,d11
.L5377:
	st.b	[a15]3,d9
.L5378:
	sh	d15,d9,#-8
.L5379:
	st.b	[a15]4,d15
.L5380:
	sh	d15,d9,#-16
.L5381:
	st.b	[a15]5,d15
.L5382:
	st.b	[a15]6,d0
.L5383:
	sha	d0,#-8
.L3502:
	or	d15,d0,#128
.L5384:
	st.b	[a15]7,d15
.L5385:
	mov	d15,#8
.L5386:
	st.h	[a13]2492,d15
.L5387:
	ld.hu	d0,[a13]2494
.L5388:
	add	d0,#1
	st.h	[a13]2494,d0
.L5389:
	ld.w	d0,[a13]2452
.L5390:
	add	d0,d15
.L2304:
	and	d15,d0,#511
.L2305:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7116        if(Fee_lIsWLBeginning(StateDataPtr->FeeNextFreePageAddr +      (inlined)
	jne	d15,#0,.L538
.L5391:
	mov	d12,#1
.L5392:
	mov	d15,#10
.L5393:
	st.b	[a13]2514,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7116        if(Fee_lIsWLBeginning(StateDataPtr->FeeNextFreePageAddr +      (inlined)
.L538:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7097      if(StateDataPtr->FeeBlkPageCount == FEE_BLOCK_HDR_PAGE)      (inlined)
.L537:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7126      if (EndOfWLReached == FEE_RESET)      (inlined)
	jne	d12,#0,.L539
.L5394:
	ld.hu	d1,[a13]2492
.L3503:
	mov	d2,#156
.L5395:
	mov	d3,#256

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7154               (uint16)(FEE_WRITE_LEN_MAX)));      (inlined)
.L540:
	ld.hu	d0,[a13]2492
.L5396:
	and	d15,d0,#7
.L5397:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7133          if((StateDataPtr->FeeReadLen & FEE_SEVEN) == FEE_DATA_NEXT_PAGE_ID_POS)      (inlined)
	jne	d15,#0,.L541
.L5398:
	addsc.a	a2,a15,d0,#0
.L5399:
	st.b	[a2],d2
.L5400:
	ld.hu	d0,[a13]2494
.L5401:
	add	d0,#1
	st.h	[a13]2494,d0
.L5402:
	ld.hu	d0,[a13]2492
.L5403:
	add	d0,#1
	st.h	[a13]2492,d0
.L5404:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7135            ReadWriteBuffPtr[StateDataPtr->FeeReadLen] = FEE_DATA_NEXT_PAGE_ID;      (inlined)
	j	.L542

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7133          if((StateDataPtr->FeeReadLen & FEE_SEVEN) == FEE_DATA_NEXT_PAGE_ID_POS)      (inlined)
.L541:
	ld.hu	d15,[a13]2492
.L5405:
	addsc.a	a2,a15,d15,#0
.L5406:
	ld.bu	d0,[a14+]
.L5407:
	st.b	[a2],d0
.L5408:
	ld.hu	d0,[a13]2492
.L5409:
	add	d0,#1
	st.h	[a13]2492,d0
.L5410:
	ld.hu	d0,[a13]2496
.L5411:
	add	d0,#1
	st.h	[a13]2496,d0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7140          else      (inlined)
.L542:
	ld.w	d0,[a13]2452
.L5412:
	ld.hu	d4,[a13]2492
.L5413:
	add	d0,d4
.L2307:
	and	d15,d0,#511
.L2308:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7150        while((Fee_lIsWLBeginning(StateDataPtr->FeeNextFreePageAddr +      (inlined)
	jeq	d15,#0,.L543
.L5414:
	ld.hu	d15,[a13]2496
.L5415:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7152              (StateDataPtr->FeeUserWriteBytesCount != BlockSize) &&      (inlined)
	jeq	d15,d8,.L544
.L5416:
	sub	d4,d1
.L5417:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7153              ((StateDataPtr->FeeReadLen - DataByteCnt) <      (inlined)
	jlt	d4,d3,.L540

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7152              (StateDataPtr->FeeUserWriteBytesCount != BlockSize) &&      (inlined)
.L544:
.L543:
	ld.hu	d15,[a13]2496
.L5418:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7159        if(StateDataPtr->FeeUserWriteBytesCount == BlockSize)      (inlined)
	jne	d15,d8,.L545
.L5419:
	mov	d0,#0
.L5420:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7162          while((StateDataPtr->FeeReadLen & FEE_SEVEN) != FEE_RESET)      (inlined)
	j	.L546
.L547:
	ld.hu	d15,[a13]2492
.L5421:
	addsc.a	a2,a15,d15,#0
.L5422:
	st.b	[a2],d0
.L5423:
	ld.hu	d15,[a13]2492
.L5424:
	add	d15,#1
	st.h	[a13]2492,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7162          while((StateDataPtr->FeeReadLen & FEE_SEVEN) != FEE_RESET)      (inlined)
.L546:
	ld.hu	d15,[a13]2492
.L5425:
	and	d15,#7
.L5426:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7162          while((StateDataPtr->FeeReadLen & FEE_SEVEN) != FEE_RESET)      (inlined)
	jne	d15,#0,.L547
.L5427:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7167          StateDataPtr->FeePendReqStatus = FEE_PEND_PREV_COMPARE;      (inlined)
	j	.L548

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7159        if(StateDataPtr->FeeUserWriteBytesCount == BlockSize)      (inlined)
.L545:
	ld.w	d15,[a13]2452
.L5428:
	ld.hu	d0,[a13]2492
.L5429:
	add	d15,d0
.L2309:
	and	d15,d15,#511
.L2310:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7172        else if(Fee_lIsWLBeginning(StateDataPtr->FeeNextFreePageAddr +      (inlined)
	jne	d15,#0,.L549
.L548:
	mov	d15,#10
.L5430:
	st.b	[a13]2514,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7172        else if(Fee_lIsWLBeginning(StateDataPtr->FeeNextFreePageAddr +      (inlined)
.L549:
	st.a	[a13]756,a14

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7126      if (EndOfWLReached == FEE_RESET)      (inlined)
.L539:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7094    else      (inlined)
.L536:
.L534:
	ld.bu	d0,[a12]2514
.L5431:
	mov	d15,#10
.L5432:
	jne	d15,d0,.L550
.L5433:
	ld.hu	d5,[a12]2492
.L5434:
	st.w	[a12]2482,d5
.L5435:
	mov	d15,#1
.L5436:
	st.b	[a12]2525,d15
.L5437:
	mov	d4,d10
	mov.aa	a4,a15
.L3504:
	call	Fls_17_Dmu_Write
.L3505:
	mov	d15,#0
.L5438:
	st.h	[a12]2492,d15
.L5439:
	jne	d2,#1,.L551
.L5440:
	ld.bu	d15,[a12]2512
.L5441:
	jz.t	d15:3,.L552
.L5442:
	mov	d4,#6
.L5443:
	j	.L553
.L552:
	mov	d4,#1
.L553:
	j	Fee_lHandleUsrJobFailure
.L551:
.L550:
	ret
.L2263:
	
__Fee_lHandleUserWrite_function_end:
	.size	Fee_lHandleUserWrite,__Fee_lHandleUserWrite_function_end-Fee_lHandleUserWrite
.L1426:
	; End of function
	
	.sdecl	'.text.Fee_lHandleIntrWrite.Code.Cpu0',code,cluster('Fee_lHandleIntrWrite')
	.sect	'.text.Fee_lHandleIntrWrite.Code.Cpu0'
	.align	2
	
; Function Fee_lHandleIntrWrite
.L1136:
Fee_lHandleIntrWrite:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5003:
	ld.a	a15,[a15]
.L3506:
	ld.w	d15,[a15]2486
.L5004:
	st.w	[a15]2482,d15
.L5005:
	ld.w	d8,[a15]2452
.L3507:
	and	d15,d8,#511
.L3508:
	jne	d15,#0,.L554
.L5006:
	j	.L555
.L556:
	insert	d0,d8,#0,#0,#9
.L2137:
	addi	d8,d0,#512
.L555:
	mov	d4,d8
	call	Fee_lIsUnerasableAddr
.L5007:
	jne	d2,#0,.L556
.L5008:
	st.w	[a15]2452,d8
.L5009:
	mov	d0,#0
.L5010:
	st.h	[a15]734,d0
.L5011:
	ld.bu	d0,[a15]736
.L5012:
	insert	d0,d0,#0,#1,#1
	st.b	[a15]736,d0
.L554:
	ld.hu	d0,[a15]2494
.L5013:
	jne	d0,#0,.L557
.L5014:
	st.w	[a15]2460,d8
.L557:
	addsc.a	a2,a15,d15,#0
	lea	a4,[a2]908
.L3510:
	ld.hu	d15,[a15]2494
.L3509:
	ld.w	d0,[a15]2482
.L5015:
	sh	d0,#-3
.L5016:
	add	d15,d0
	st.h	[a15]2494,d15
.L5017:
	mov	d15,#1
.L5018:
	st.b	[a15]2525,d15
.L5019:
	mov	d15,#12
.L5020:
	st.b	[a15]2514,d15
.L5021:
	ld.w	d5,[a15]2482
	mov	d4,d8
	call	Fls_17_Dmu_Write
.L3511:
	jne	d2,#1,.L558
.L5022:
	j	Fee_lHandleWriteFail
.L558:
	ret
.L2130:
	
__Fee_lHandleIntrWrite_function_end:
	.size	Fee_lHandleIntrWrite,__Fee_lHandleIntrWrite_function_end-Fee_lHandleIntrWrite
.L1406:
	; End of function
	
	.sdecl	'.text.Fee_lLocalWrite.Code.Cpu0',code,cluster('Fee_lLocalWrite')
	.sect	'.text.Fee_lLocalWrite.Code.Cpu0'
	.align	2
	
; Function Fee_lLocalWrite
.L1138:
Fee_lLocalWrite:	.type	func
	sub.a	a10,#8
.L3512:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5819:
	ld.a	a12,[a15]
.L3513:
	ld.hu	d4,[a12]760
.L3515:
	call	Fee_lGetUsrBlockIndex
.L3516:
	mov	d8,d2
.L3517:
	lea	a15,[a12]2514
.L3518:
	st.a	[a10]4,a15
.L2525:
	ld.bu	d0,[a12]2514
.L5820:
	mov	d15,#8
.L5821:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4140    if(((s_ptr)->FeePendReqStatus == FEE_REQ_NORM_WRITE) ||      (inlined)
	jeq	d15,d0,.L559
.L5822:
	mov	d15,#9
.L5823:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4141        ((s_ptr)->FeePendReqStatus == FEE_REQ_IMM_WRITE))      (inlined)
	jne	d15,d0,.L560

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4140    if(((s_ptr)->FeePendReqStatus == FEE_REQ_NORM_WRITE) ||      (inlined)
.L559:
	mov	d0,#1
.L3520:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4143      RetVal = (boolean)TRUE;      (inlined)
	j	.L561

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4140    if(((s_ptr)->FeePendReqStatus == FEE_REQ_NORM_WRITE) ||      (inlined)
.L560:
	mov	d0,#0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  4145    else      (inlined)
.L561:
	jeq	d0,#0,.L562
.L2526:
	mov	d2,#0
.L2545:
	mov	d9,d2
.L2546:
	mov	d10,d2
.L3523:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3519:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5824:
	ld.a	a12,[a15]
.L3514:
	ld.a	a15,[a15]4
.L5825:
	addsc.a	a13,a15,d8,#3
.L3524:
	lea	a15,[a12]2514
.L3525:
	st.a	[a10],a15
.L3527:
	ld.hu	d0,[a12]2492
.L3521:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7306    if(StateDataPtr->FeeReadLen == (uint16)FEE_RESET)      (inlined)
	jne	d0,#0,.L563
.L5826:
	mul	d15,d8,#24
	addsc.a	a2,a12,d15,#0
.L5827:
	ld.w	d15,[a2]80
.L5828:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7310      if (StateDataPtr->FeeBlockInfo[UserBlockIndex].Address != FEE_RESET)      (inlined)
	jeq	d15,#0,.L564
.L5829:
	mov	d4,d8
.L3528:
	call	Fee_lGetBlkCycleCount

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7310      if (StateDataPtr->FeeBlockInfo[UserBlockIndex].Address != FEE_RESET)      (inlined)
.L564:
	ld.bu	d15,[a12]2529
.L5830:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7321      if (StateDataPtr->FeeUserJobFailCount == FEE_RESET)      (inlined)
	jne	d15,#0,.L565
.L2556:
	mov	d9,#0
.L5831:
	movh.a	a2,#@his(Fee_CfgPtr)
	ld.a	a15,[a2]@los(Fee_CfgPtr)
.L3526:
	ld.a	a15,[a15]
.L3529:
	ld.w	d0,[a13]
	extr.u	d15,d0,#0,#24
.L3531:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7227    if( (CycleCountCfg != FEE_RESET) && (BlockCycleCount == CycleCountCfg ))      (inlined)
	jeq	d15,#0,.L566
.L5832:
	jne	d15,d2,.L567
.L5833:
	mov	d15,#1
.L3532:
	st.b	[a15]2480,d15
.L5834:
	st.b	[a15]2514,d15
.L5835:
	ld.a	a15,[a2]@los(Fee_CfgPtr)
.L3530:
	ld.w	d15,[a15]12
.L5836:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7246      if ( Fee_CfgPtr->FeeNvmJobErrorNotification != NULL_PTR )      (inlined)
	jeq	d15,#0,.L568
.L5837:
	ld.a	a15,[a15]12
.L5838:
	calli	a15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7246      if ( Fee_CfgPtr->FeeNvmJobErrorNotification != NULL_PTR )      (inlined)
.L568:
	mov	d9,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7227    if( (CycleCountCfg != FEE_RESET) && (BlockCycleCount == CycleCountCfg ))      (inlined)
.L567:
.L566:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7321      if (StateDataPtr->FeeUserJobFailCount == FEE_RESET)      (inlined)
.L565:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7326      if (ReturnValue != E_NOT_OK) /* If block cycle count not exceeded */      (inlined)
	jne	d9,#0,.L569
.L5839:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5840:
	ld.a	a15,[a15]
.L3533:
	ld.w	d15,[a15]2452
.L3535:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14149    while(Fee_lIsUnerasableAddr(DestAddr) == TRUE)      (inlined)
	j	.L570
.L571:
	insert	d15,d15,#0,#0,#9
.L2566:
	addi	d15,d15,#512

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14149    while(Fee_lIsUnerasableAddr(DestAddr) == TRUE)      (inlined)
.L570:
	mov	d4,d15
	call	Fee_lIsUnerasableAddr
.L5841:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14149    while(Fee_lIsUnerasableAddr(DestAddr) == TRUE)      (inlined)
	jne	d2,#0,.L571
.L5842:
	st.w	[a15]2452,d15
.L2568:
	and	d15,d15,#511
.L2569:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14158    if( (Fee_lIsWLBeginning(DestAddr) != FEE_NEW_WL_BEGIN) &&      (inlined)
	jeq	d15,#0,.L572
.L5843:
	ld.bu	d15,[a15]736
.L5844:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14159        (StateDataPtr->FeeLastWrittenBlkInfo.Status.Consistent ==      (inlined)
	jz.t	d15:1,.L573
.L2572:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3534:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5845:
	ld.a	a14,[a15]
.L3536:
	ld.bu	d15,[a14]2512
	extr.u	d9,d15,#2,#1
.L3522:
	ld.w	d12,[a14]2452
.L3537:
	ld.hu	d4,[a14]734
.L3538:
	ld.hu	d11,[a14]732
.L3540:
	call	Fee_lGetUsrBlockIndex
.L3539:
	mov	d13,d2
.L2585:
	insert	d0,d12,#0,#0,#9
.L2587:
	addi	d0,d0,#512
.L2586:
	addi	d5,d0,#512
.L3543:
	mov	d4,d9
.L3544:
	call	Fee_lGetFreeDFLASHPages
.L3542:
	and	d0,d12,#511
.L3545:
	mov.u	d15,#65535
.L5846:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13930    if(LWBIndex == FEE_LOG_BLOCK_NOT_FOUND)      (inlined)
	jne	d15,d13,.L574
.L5847:
	mov	d1,#0
.L3547:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13932      LWBType = (uint8)FEE_NORMAL_DATA;      (inlined)
	j	.L575

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13930    if(LWBIndex == FEE_LOG_BLOCK_NOT_FOUND)      (inlined)
.L574:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5848:
	ld.a	a15,[a15]4
.L5849:
	addsc.a	a15,a15,d13,#3
.L5850:
	ld.bu	d1,[a15]3

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13934    else      (inlined)
.L575:
	sh	d0,#-3
.L3546:
	add	d11,d0
.L3541:
	extr.u	d3,d11,#0,#16
.L2589:
	sub	d0,d2,d3
	sha	d0,#3
.L5851:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5852:
	ld.w	d15,[a15]16
.L5853:
	lt	d15,d0,d15
.L2590:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13948    if((LWBType == (uint8)FEE_NORMAL_DATA) && (ThresholdCrossed == (boolean)TRUE))      (inlined)
	jne	d1,#0,.L576
.L2597:
	jne	d15,#0,.L577
.L576:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13956    else if ((LWBType == (uint8)FEE_IMMEDIATE_DATA) &&      (inlined)
	jne	d1,#1,.L580
.L5854:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13957             (RemainingPages < (uint32)LWBPageCount))      (inlined)
	jge.u	d2,d3,.L580

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13956    else if ((LWBType == (uint8)FEE_IMMEDIATE_DATA) &&      (inlined)
.L577:
	insert	d15,d12,#0,#0,#9
.L2600:
	addi	d12,d15,#512
.L2599:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13968    while (Fee_lIsUnerasableAddr(DestAddr) == TRUE)      (inlined)
	j	.L580
.L581:
	insert	d15,d12,#0,#0,#9
.L2601:
	addi	d12,d15,#512

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13968    while (Fee_lIsUnerasableAddr(DestAddr) == TRUE)      (inlined)
.L580:
	mov	d4,d12
	call	Fee_lIsUnerasableAddr
.L5855:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 13968    while (Fee_lIsUnerasableAddr(DestAddr) == TRUE)      (inlined)
	jne	d2,#0,.L581
.L5856:
	st.w	[a14]2452,d12

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14158    if( (Fee_lIsWLBeginning(DestAddr) != FEE_NEW_WL_BEGIN) &&      (inlined)
.L573:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14160         (uint32)FEE_SET ))      (inlined)
.L572:
	mov	d9,#1
.L3548:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5857:
	ld.a	a14,[a15]
.L3549:
	ld.bu	d15,[a14]2512
	extr.u	d11,d15,#2,#1
.L3550:
	ld.w	d12,[a14]2452
.L3551:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14016    if (StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus == (uint32)FEE_SET )      (inlined)
	jz.t	d15:3,.L582
.L5858:
	mov	d13,#2
.L3552:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14018      BlkPages = FEE_INVALID_BLOCK_PAGES;      (inlined)
	j	.L583

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14016    if (StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus == (uint32)FEE_SET )      (inlined)
.L582:
	ld.hu	d4,[a13]6
	call	Fee_lGetDFLASHPages
.L3553:
	mov	d13,d2

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14020    else      (inlined)
.L583:
	and	d15,d12,#511
.L2614:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14027    if(Fee_lIsWLBeginning(DestAddr) == FEE_NEW_WL_BEGIN)      (inlined)
	jeq	d15,#0,.L584
.L2615:
	insert	d0,d12,#0,#0,#9
.L2617:
	addi	d15,d0,#512
.L2616:
	addi	d5,d15,#512
.L3554:
	mov	d4,d11
.L3556:
	call	Fee_lGetFreeDFLASHPages
.L3555:
	extr.u	d15,d12,#3,#6
.L3558:
	add	d15,d13
.L2618:
	sub	d2,d15
.L3557:
	sha	d2,#3
.L5859:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5860:
	ld.w	d15,[a15]16
.L3559:
	lt	d15,d2,d15
.L3560:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14056      if ((boolean)TRUE == Fee_lIsSectorThresholdCrossed((uint32)RemainingPages,      (inlined)
	jeq	d15,#0,.L585
.L2619:
	insert	d15,d12,#0,#0,#9
.L2622:
	addi	d12,d15,#512
.L2621:
	st.w	[a14]2452,d12

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14056      if ((boolean)TRUE == Fee_lIsSectorThresholdCrossed((uint32)RemainingPages,      (inlined)
.L585:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14031    else      (inlined)
.L584:
	mov	e4,d12,d11
	call	Fee_lGetFreeDFLASHPages
.L2623:
	sub	d0,d2,d13
	sha	d0,#3
.L5861:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5862:
	ld.w	d15,[a15]16
.L5863:
	lt	d15,d0,d15
.L3561:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14068    if ((boolean)TRUE == Fee_lIsSectorThresholdCrossed((uint32)RemainingPages,      (inlined)
	jeq	d15,#0,.L586
.L2624:
	ld.bu	d15,[a13]3
.L3562:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14074      if( (BlockPtr->FeeImmediateData == (uint32)FEE_NORMAL_DATA) ||      (inlined)
	jeq	d15,#0,.L587
.L5864:
	ld.bu	d15,[a14]2512
.L5865:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14076           == (uint32)FEE_SET )      (inlined)
	jnz.t	d15:3,.L588
.L5866:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14086        if(RemainingPages < BlkPages)      (inlined)
	jlt.u	d2,d13,.L589
.L5867:
	mov	d15,#1
.L5868:
	st.b	[a14]2535,d15
.L5869:
	mov	d9,#0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14091        else      (inlined)
.L589:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14082      else      (inlined)
.L588:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14074      if( (BlockPtr->FeeImmediateData == (uint32)FEE_NORMAL_DATA) ||      (inlined)
.L587:
	ld.bu	d0,[a14]2515
.L5870:
	mov	d15,#14
.L5871:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14100      if (StateDataPtr->FeeGcState == FEE_GC_IDLE)      (inlined)
	jne	d15,d0,.L590
.L5872:
	ld.bu	d15,[a14]2534
.L5873:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14104        if(StateDataPtr->FeeDisableGCStart == (boolean)FALSE)      (inlined)
	jne	d15,#0,.L591
.L5874:
	mov	d15,#5
.L5875:
	st.b	[a14]2515,d15
.L5876:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14100      if (StateDataPtr->FeeGcState == FEE_GC_IDLE)      (inlined)
	j	.L592

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14068    if ((boolean)TRUE == Fee_lIsSectorThresholdCrossed((uint32)RemainingPages,      (inlined)
.L586:
	mov	d9,#0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14112    else      (inlined)
.L592:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14104        if(StateDataPtr->FeeDisableGCStart == (boolean)FALSE)      (inlined)
.L591:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14100      if (StateDataPtr->FeeGcState == FEE_GC_IDLE)      (inlined)
.L590:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7326      if (ReturnValue != E_NOT_OK) /* If block cycle count not exceeded */      (inlined)
.L569:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7306    if(StateDataPtr->FeeReadLen == (uint16)FEE_RESET)      (inlined)
.L563:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7335    if( ReturnValue == E_OK )      (inlined)
	jne	d9,#0,.L593
.L2551:
	ld.w	d9,[a12]2452
.L2626:
	and	d15,d9,#511
.L2627:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7342      if(Fee_lIsWLBeginning(DestAddr) != FEE_NEW_WL_BEGIN)      (inlined)
	jeq	d15,#0,.L594
.L2628:
	insert	d4,d9,#0,#0,#9
.L2629:
	ld.hu	d0,[a12]2492
.L5877:
	sub	d15,d0
.L5878:
	min.u	d10,d15,#256
.L5879:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7356        if(Length != (Fls_17_Dmu_LengthType)FEE_ZERO)      (inlined)
	jeq	d10,#0,.L595
.L3563:
	add	d4,d0
.L5880:
	addsc.a	a15,a12,d0,#0
	lea	a4,[a15]1932
.L5881:
	sh	d5,d10,#-2
	call	Fls_17_Dmu_ReadWordsSync
.L3564:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7371          if(ReturnValue == E_NOT_OK)      (inlined)
	jne	d2,#1,.L596
.L5882:
	mov	d10,#0
.L5883:
	st.h	[a12]2492,d10
.L5884:
	ld.bu	d15,[a12]736
.L5885:
	insert	d15,d15,#0,#1,#1
	st.b	[a12]736,d15
.L5886:
	st.h	[a12]734,d10
.L5887:
	st.b	[a12]2522,d10
.L2630:
	insert	d15,d9,#0,#0,#9
.L2632:
	addi	d9,d15,#512
.L2631:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7382            while (Fee_lIsUnerasableAddr(DestAddr) == TRUE)      (inlined)
	j	.L597
.L598:
	addi	d9,d9,#512

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7382            while (Fee_lIsUnerasableAddr(DestAddr) == TRUE)      (inlined)
.L597:
	mov	d4,d9
	call	Fee_lIsUnerasableAddr
.L5888:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7382            while (Fee_lIsUnerasableAddr(DestAddr) == TRUE)      (inlined)
	jne	d2,#0,.L598
.L5889:
	j	.L599

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7371          if(ReturnValue == E_NOT_OK)      (inlined)
.L596:
	ld.hu	d0,[a12]2492
.L3565:
	add	d15,d10,d0
	extr.u	d15,d15,#0,#16
.L3566:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7395            for(Index = StateDataPtr->FeeReadLen; Index < Offset; Index++)      (inlined)
	j	.L600
.L601:
	addsc.a	a15,a12,d0,#0
.L5890:
	ld.bu	d1,[a15]1932
.L5891:
	st.b	[a15]908,d1
.L5892:
	add	d0,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7395            for(Index = StateDataPtr->FeeReadLen; Index < Offset; Index++)      (inlined)
.L600:
	jlt.u	d0,d15,.L601
.L5893:
	ld.hu	d15,[a12]2492
.L3567:
	add	d15,d10
	st.h	[a12]2492,d15
.L5894:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7388          else      (inlined)
	j	.L602

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7356        if(Length != (Fls_17_Dmu_LengthType)FEE_ZERO)      (inlined)
.L595:
	ld.bu	d15,[a12]736
.L5895:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7407          if(LastWrittenBlkPtr->Status.Consistent == FEE_SET)      (inlined)
	jz.t	d15:1,.L603
.L5896:
	mov	d15,#1
.L5897:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7409            StateDataPtr->FeeWLAffectedType = FEE_LWB_ACROSS_WL_AFFECTED;      (inlined)
	j	.L604

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7407          if(LastWrittenBlkPtr->Status.Consistent == FEE_SET)      (inlined)
.L603:
	mov	d15,#2

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7342      if(Fee_lIsWLBeginning(DestAddr) != FEE_NEW_WL_BEGIN)      (inlined)
.L594:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7411          else      (inlined)
.L604:
	st.b	[a12]2522,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7403        else      (inlined)
.L602:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7388          else      (inlined)
.L599:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7427      if(Length == (Fls_17_Dmu_LengthType)FEE_ZERO)      (inlined)
	jne	d10,#0,.L606
.L5898:
	mov	d15,#0
.L5899:
	st.h	[a12]2492,d15
.L5900:
	st.h	[a12]2494,d15
.L5901:
	st.h	[a12]2496,d15
.L5902:
	st.w	[a12]2460,d9
.L5903:
	st.w	[a12]2452,d9
.L5904:
	mov	d15,#2
.L5905:
	ld.a	a15,[a10]
.L3568:
	st.b	[a15],d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7427      if(Length == (Fls_17_Dmu_LengthType)FEE_ZERO)      (inlined)
.L606:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7335    if( ReturnValue == E_OK )      (inlined)
.L593:
.L562:
	ld.a	a15,[a10]4
.L3569:
	ld.bu	d0,[a15]
.L5906:
	mov	d15,#10
.L5907:
	jne	d15,d0,.L607
.L2634:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3570:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5908:
	ld.a	a12,[a15]
.L3571:
	mov	d2,#0
.L3572:
	ld.a	a15,[a15]4
.L5909:
	addsc.a	a15,a15,d8,#3
.L3574:
	lea	a13,[a12]728
.L3575:
	lea	a14,[a12]2514
.L3576:
	ld.w	d11,[a12]2452
.L2649:
	insert	d4,d11,#0,#0,#9
.L2650:
	sub	d9,d11,d4
.L5910:
	ld.w	d0,[a12]2482
.L3577:
	add	d9,d0
.L5911:
	ld.hu	d0,[a12]2490
.L5912:
	sub	d1,d9,d0
.L5913:
	min.u	d10,d1,#256
.L3578:
	ld.bu	d15,[a12]2537
.L5914:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7495    if(StateDataPtr->FeeProgVerErr == FEE_RESET)      (inlined)
	jne	d15,#0,.L608
.L5915:
	add	d4,d0
.L5916:
	addsc.a	a2,a12,d0,#0
	lea	a4,[a2]908
.L5917:
	sh	d5,d10,#-2
	call	Fls_17_Dmu_CompareWordsSync
.L5918:
	ld.hu	d0,[a12]2490
.L5919:
	add	d10,d0
.L3579:
	st.h	[a12]2490,d10

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7495    if(StateDataPtr->FeeProgVerErr == FEE_RESET)      (inlined)
.L608:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7517    if((ReturnValueFls == E_NOT_OK) ||      (inlined)
	jeq	d2,#1,.L609
.L5920:
	ld.bu	d15,[a12]2537
.L5921:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7518        (StateDataPtr->FeeProgVerErr == FEE_SET))      (inlined)
	jne	d15,#1,.L610

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7517    if((ReturnValueFls == E_NOT_OK) ||      (inlined)
.L609:
	mov	d0,#0
.L5922:
	st.h	[a12]2490,d0
.L5923:
	st.b	[a12]2537,d0
.L5924:
	ld.bu	d15,[a12]2529
.L5925:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7525      if(StateDataPtr->FeeUserJobFailCount == FEE_RESET)      (inlined)
	jne	d15,#0,.L611
.L5926:
	add	d0,#1
	st.b	[a12]2529,d0
.L5927:
	ld.w	d15,[a12]2460
.L5928:
	st.w	[a12]2456,d15
.L2651:
	insert	d15,d11,#0,#0,#9
.L2653:
	addi	d15,d15,#512
.L2652:
	addi	d9,d15,#512
.L3580:
	st.w	[a12]2452,d9
.L5929:
	ld.w	d15,[a12]756
.L5930:
	ld.hu	d0,[a12]2496
.L5931:
	sub	d15,d0
	st.w	[a12]756,d15
.L5932:
	call	Fee_lIsBlockAcrossWLLatest
.L3573:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7542        if((Fee_lIsBlockAcrossWLLatest() == TRUE) &&      (inlined)
	jeq	d2,#0,.L612
.L5933:
	ld.bu	d15,[a12]2522
.L5934:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7543           (StateDataPtr->FeeWLAffectedType == FEE_LWB_ACROSS_WL_AFFECTED))      (inlined)
	jne	d15,#1,.L613
.L5935:
	ld.w	d15,[a13]
.L5936:
	st.w	[a12]2464,d15
.L5937:
	ld.hu	d15,[a12]734
.L5938:
	st.h	[a12]2498,d15
.L5939:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7548          StateDataPtr->FeeCurrSectSrcAddr = LastWrittenBlkPtr->Addr;      (inlined)
	j	.L614

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7542        if((Fee_lIsBlockAcrossWLLatest() == TRUE) &&      (inlined)
.L613:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7543           (StateDataPtr->FeeWLAffectedType == FEE_LWB_ACROSS_WL_AFFECTED))      (inlined)
.L612:
	mov	d4,#0
	call	Fee_lIsLastWrittenWLAffected
.L5940:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7557        else if((Fee_lIsLastWrittenWLAffected(FEE_ZERO) == (boolean)TRUE)&&      (inlined)
	jeq	d2,#0,.L615
.L5941:
	ld.bu	d15,[a12]2522
.L5942:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7558               (StateDataPtr->FeeWLAffectedType == FEE_LWB_WITHIN_WL_AFFECTED))      (inlined)
	jne	d15,#2,.L616

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7557        else if((Fee_lIsLastWrittenWLAffected(FEE_ZERO) == (boolean)TRUE)&&      (inlined)
.L614:
	mov	d15,#0
.L5943:
	st.h	[a12]2494,d15
.L5944:
	st.w	[a12]2460,d9
.L5945:
	mov	d15,#13
.L5946:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7561          StateDataPtr->FeeBlkPageCount = FEE_RESET;      (inlined)
	j	.L617

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7557        else if((Fee_lIsLastWrittenWLAffected(FEE_ZERO) == (boolean)TRUE)&&      (inlined)
.L616:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7558               (StateDataPtr->FeeWLAffectedType == FEE_LWB_WITHIN_WL_AFFECTED))      (inlined)
.L615:
	ld.a	a4,[a12]756
.L5947:
	mov.aa	a5,a15
.L3581:
	call	Fee_lRegisterWriteRequest
.L3582:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7557        else if((Fee_lIsLastWrittenWLAffected(FEE_ZERO) == (boolean)TRUE)&&      (inlined)
	j	.L618

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7525      if(StateDataPtr->FeeUserJobFailCount == FEE_RESET)      (inlined)
.L611:
	insert	d15,d11,#0,#0,#9
.L2655:
	addi	d15,d15,#512
.L2654:
	addi	d15,d15,#512
	st.w	[a12]2452,d15
.L5948:
	ld.bu	d15,[a12]2512
.L5949:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7584        if(StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus      (inlined)
	jz.t	d15:3,.L619
.L5950:
	insert	d15,d15,#0,#3,#1
	st.b	[a12]2512,d15
.L5951:
	mov	d4,#6
.L3584:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7587          StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus = FEE_RESET;      (inlined)
	j	.L620

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7584        if(StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus      (inlined)
.L619:
	mov	d4,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7590        else      (inlined)
.L620:
	call	Fee_lHandleUsrJobFailure
.L3583:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7576      else      (inlined)
	j	.L621

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7517    if((ReturnValueFls == E_NOT_OK) ||      (inlined)
.L610:
	ld.hu	d15,[a12]2490
.L3586:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7601      if(StateDataPtr->FeeComparedLen == TmpCompareLength)      (inlined)
	jne	d15,d9,.L622
.L3587:
	mov	d15,#0
.L5952:
	st.h	[a12]2490,d15
.L5953:
	ld.w	d15,[a12]2452
.L5954:
	ld.w	d0,[a12]2482
.L5955:
	add	d15,d0
	st.w	[a12]2452,d15
.L5956:
	ld.bu	d15,[a12]2512
.L5957:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7607        if((StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus      (inlined)
	jz.t	d15:3,.L623
.L5958:
	ld.hu	d15,[a12]2494
.L5959:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7609            (StateDataPtr->FeeBlkPageCount == FEE_INVALID_BLOCK_PAGES))      (inlined)
	jeq	d15,#2,.L624
.L623:
	ld.hu	d15,[a12]2494
.L5960:
	ld.hu	d4,[a15]6
	call	Fee_lGetDFLASHPages
.L3585:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7615        else if(StateDataPtr->FeeBlkPageCount ==      (inlined)
	jne	d15,d2,.L625
.L624:
	call	Fee_lLastPgHandler
.L5961:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7618          Fee_lLastPgHandler();      (inlined)
	j	.L626

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7615        else if(StateDataPtr->FeeBlkPageCount ==      (inlined)
.L625:
	mov	d15,#2

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7566        else      (inlined)
.L617:
	st.b	[a14],d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7620        else      (inlined)
.L626:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7601      if(StateDataPtr->FeeComparedLen == TmpCompareLength)      (inlined)
.L622:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7598    else      (inlined)
.L621:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  7576      else      (inlined)
.L618:
.L607:
	ld.a	a15,[a10]4
.L3588:
	ld.bu	d15,[a15]
.L5962:
	jne	d15,#2,.L627
.L5963:
	mov	d4,d8
.L3590:
	call	Fee_lHandleUserWrite
.L627:
	ld.bu	d0,[a15]
.L5964:
	mov	d15,#12
.L5965:
	jne	d15,d0,.L628
.L2657:
	mov	d9,#0
.L3591:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3589:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5966:
	ld.a	a12,[a15]
.L2676:
	ld.a	a2,[a15]4
.L5967:
	addsc.a	a13,a2,d8,#3
.L3592:
	ld.hu	d0,[a15]20
.L5968:
	mul	d15,d0,#24
	addsc.a	a15,a12,d15,#0
	lea	a15,[a15]80
.L3593:
	lea	a14,[a12]2514
.L3595:
	mov	d2,d9
.L3596:
	ld.w	d8,[a12]2452
.L2680:
	insert	d4,d8,#0,#0,#9
.L2681:
	ld.w	d0,[a12]2482
.L5969:
	add	d15,d8,d0
.L5970:
	sub	d0,d15,d4
.L5971:
	extr.u	d11,d0,#0,#16
.L3599:
	ld.hu	d0,[a12]2490
.L5972:
	sub	d1,d11,d0
	extr.u	d1,d1,#0,#16
.L5973:
	min.u	d10,d1,#256
.L3600:
	ld.bu	d15,[a12]2537
.L5974:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8319    if(StateDataPtr->FeeProgVerErr == FEE_RESET)      (inlined)
	jne	d15,#0,.L629
.L5975:
	add	d4,d0
.L5976:
	addsc.a	a2,a12,d0,#0
	lea	a4,[a2]908
.L5977:
	sh	d5,d10,#-2
	call	Fls_17_Dmu_CompareWordsSync
.L5978:
	ld.hu	d0,[a12]2490
.L5979:
	add	d10,d0
.L3601:
	st.h	[a12]2490,d10

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8319    if(StateDataPtr->FeeProgVerErr == FEE_RESET)      (inlined)
.L629:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8339    if((ReturnValueFls == E_NOT_OK) ||      (inlined)
	jeq	d2,#1,.L630
.L5980:
	ld.bu	d15,[a12]2537
.L5981:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8340        (StateDataPtr->FeeProgVerErr == FEE_SET))      (inlined)
	jne	d15,#1,.L631

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8339    if((ReturnValueFls == E_NOT_OK) ||      (inlined)
.L630:
	mov	d15,#0
.L5982:
	st.h	[a12]2490,d15
.L5983:
	call	Fee_lHandleWriteFail
.L3597:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8342      StateDataPtr->FeeComparedLen = FEE_RESET;      (inlined)
	j	.L632

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8339    if((ReturnValueFls == E_NOT_OK) ||      (inlined)
.L631:
	ld.hu	d15,[a12]2490
.L3603:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8346    else if(StateDataPtr->FeeComparedLen != TmpCompareLength)      (inlined)
	jne	d15,d11,.L633
.L3604:
	mov	d15,#0
.L5984:
	st.h	[a12]2490,d15
.L5985:
	and	d0,d8,#511
.L3605:
	ld.w	d1,[a12]2482
.L5986:
	mov	d15,#8
.L5987:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8359      if((StateDataPtr->FeeLastWriteSize == FEE_EIGHT) &&      (inlined)
	jne	d15,d1,.L634
.L5988:
	addsc.a	a2,a12,d0,#0
	ld.bu	d0,[a2]908
.L3606:
	mov	d15,#101
.L5989:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8360          ((StateDataPtr->FeeReadWriteBuffer[StartOffset]) ==      (inlined)
	jne	d15,d0,.L635
.L5990:
	ld.hu	d8,[a12]2498
.L3598:
	ld.w	d0,[a12]2452
.L2682:
	insert	d1,d0,#0,#0,#9
.L2683:
	lea	a2,[a12]728
.L3608:
	ld.w	d2,[a12]2460
.L3602:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8369         if(((StateDataPtr->FeeBlockStartAddr) < NextFreePageWLAddr) &&      (inlined)
	jge.u	d2,d1,.L636
.L5991:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8370            (LWBMarkerAddress >= NextFreePageWLAddr))      (inlined)
	jlt.u	d0,d1,.L637
.L5992:
	st.h	[a12]734,d8
.L5993:
	ld.hu	d0,[a12]2494
.L3607:
	st.h	[a12]732,d0
.L5994:
	ld.w	d0,[a12]2460
.L5995:
	st.w	[a2],d0
.L5996:
	ld.bu	d15,[a12]736
.L5997:
	or	d15,#2
	st.b	[a12]736,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8369         if(((StateDataPtr->FeeBlockStartAddr) < NextFreePageWLAddr) &&      (inlined)
.L637:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8370            (LWBMarkerAddress >= NextFreePageWLAddr))      (inlined)
.L636:
	mov	d4,d8
.L3610:
	call	Fee_lGetUsrBlockIndex
.L3609:
	mov.u	d15,#65535
.L5998:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8381         if(NewUserBlockIndex != FEE_LOG_BLOCK_NOT_FOUND)      (inlined)
	jeq	d15,d2,.L638
.L5999:
	mul	d15,d2,#24
	addsc.a	a15,a12,d15,#0
.L3594:
	ld.w	d15,[a12]2460
.L6000:
	st.w	[a15]80,d15
.L6001:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8384            StateDataPtr->FeeBlockStartAddr;      (inlined)
	j	.L639

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8381         if(NewUserBlockIndex != FEE_LOG_BLOCK_NOT_FOUND)      (inlined)
.L638:
	mov	d0,#0
.L3611:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8390                (RetVal == (boolean)FALSE))      (inlined)
	j	.L640
.L641:
	mul	d15,d0,#24
	addsc.a	a2,a15,d15,#0
.L6002:
	ld.hu	d15,[a2]8
.L6003:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8392              if((UnconfigBlockPtr[UnconfigBlockIndex].BlockNumber) ==      (inlined)
	jne	d15,d8,.L642
.L6004:
	ld.w	d15,[a12]2460
.L6005:
	st.w	[a2],d15
.L6006:
	mov	d9,#1
.L6007:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8396                StateDataPtr->FeeBlockStartAddr;      (inlined)
	j	.L643

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8392              if((UnconfigBlockPtr[UnconfigBlockIndex].BlockNumber) ==      (inlined)
.L642:
	add	d0,#1
.L3612:
	extr.u	d0,d0,#0,#16

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8399              else      (inlined)
.L643:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8390                (RetVal == (boolean)FALSE))      (inlined)
.L640:
	ld.hu	d15,[a12]2506
.L6008:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8389            while((UnconfigBlockIndex < (StateDataPtr->FeeUnConfigBlockCount)) &&      (inlined)
	jge.u	d0,d15,.L644
.L6009:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8390                (RetVal == (boolean)FALSE))      (inlined)
	jeq	d9,#0,.L641

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8389            while((UnconfigBlockIndex < (StateDataPtr->FeeUnConfigBlockCount)) &&      (inlined)
.L644:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8386         else      (inlined)
.L639:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8359      if((StateDataPtr->FeeLastWriteSize == FEE_EIGHT) &&      (inlined)
.L635:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8361           FEE_DATA_MARKER_PAGE_ID))      (inlined)
.L634:
	ld.w	d15,[a12]2452
.L6010:
	ld.w	d0,[a12]2482
.L6011:
	add	d15,d0
	st.w	[a12]2452,d15
.L6012:
	mov	d15,#13
.L6013:
	st.b	[a14],d15
.L6014:
	ld.bu	d15,[a12]2522
.L6015:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8412      if(StateDataPtr->FeeWLAffectedType == FEE_LWB_WITHIN_WL_AFFECTED)      (inlined)
	jne	d15,#2,.L645
.L6016:
	mov	d15,#0
.L6017:
	st.h	[a12]2494,d15
.L6018:
	ld.w	d15,[a12]2464
.L6019:
	and	d4,d15,#511
.L3613:
	call	Fee_lIsLastWrittenWLAffected
.L3614:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8418        if(Fee_lIsLastWrittenWLAffected((uint16)(StartOffset)) == (boolean)FALSE)      (inlined)
	jne	d2,#0,.L646
.L6020:
	ld.a	a4,[a12]756
.L6021:
	mov.aa	a5,a13
.L3615:
	call	Fee_lRegisterWriteRequest
.L3616:
	ld.w	d15,[a12]2452
.L6022:
	st.w	[a12]2460,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8418        if(Fee_lIsLastWrittenWLAffected((uint16)(StartOffset)) == (boolean)FALSE)      (inlined)
.L646:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8412      if(StateDataPtr->FeeWLAffectedType == FEE_LWB_WITHIN_WL_AFFECTED)      (inlined)
.L645:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8352    else      (inlined)
.L633:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8346    else if(StateDataPtr->FeeComparedLen != TmpCompareLength)      (inlined)
.L632:
.L628:
	ld.a	a15,[a10]4
.L3617:
	ld.bu	d0,[a15]
.L6023:
	mov	d15,#13
.L6024:
	jne	d15,d0,.L647
.L2685:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3618:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6025:
	ld.a	a12,[a15]
.L3619:
	ld.w	d15,[a12]2456
.L2701:
	insert	d10,d15,#0,#0,#9
.L2702:
	ld.w	d9,[a12]2464
.L3620:
	ld.w	d15,[a12]2452
.L6026:
	and	d15,d15,#511
.L3622:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8012    if (Offset == FEE_ZERO)      (inlined)
	jne	d15,#0,.L648
.L6027:
	call	Fee_lClearFeeReadWriteBuffer

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8012    if (Offset == FEE_ZERO)      (inlined)
.L648:
	addsc.a	a15,a12,d15,#0
	lea	a13,[a15]908
.L3624:
	mov	d0,#512
.L3625:
	sub	d0,d15
.L6028:
	ld.bu	d1,[a12]2522
.L6029:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8022    if(StateDataPtr->FeeWLAffectedType == FEE_LWB_ACROSS_WL_AFFECTED)      (inlined)
	jne	d1,#1,.L649
.L6030:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8026      if(SrcAddr >= AffectedWLAddr)      (inlined)
	jlt.u	d9,d10,.L650
.L6031:
	mov	d15,d9
.L3623:
	and	d1,d15,#511
.L3628:
	lea	a15,[a12]1932
.L3629:
	ld.hu	d15,[a12]732
.L3627:
	ld.hu	d2,[a12]2494
.L6032:
	sub	d15,d2
.L3630:
	extr.u	d15,d15,#0,#16
.L3631:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8033        if(RemainingPageCount == FEE_ONE)      (inlined)
	jne	d15,#1,.L651
.L6033:
	mov	d8,#8
.L3633:
	mov	d0,#2
.L3626:
	st.b	[a12]2522,d0
.L6034:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8036          ReadLength = FEE_DFLASH_PAGE_SIZE;      (inlined)
	j	.L652

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8033        if(RemainingPageCount == FEE_ONE)      (inlined)
.L651:
	sh	d15,#3
.L3632:
	add	d15,#-8
.L6035:
	extr.u	d15,d15,#0,#16
.L6036:
	min.u	d8,d0,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8039        else      (inlined)
.L652:
	mov	d15,#0
.L3634:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8048        for(TempIndex = FEE_RESET; TempIndex < ReadLength; TempIndex++)      (inlined)
	j	.L653
.L654:
	addsc.a	a2,a13,d15,#0
.L6037:
	add	d0,d15,d1
.L6038:
	addsc.a	a4,a15,d0,#0
	ld.bu	d0,[a4]
.L6039:
	st.b	[a2],d0
.L6040:
	add	d0,d15,#1
	extr.u	d15,d0,#0,#16

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8048        for(TempIndex = FEE_RESET; TempIndex < ReadLength; TempIndex++)      (inlined)
.L653:
	jlt.u	d15,d8,.L654
.L6041:
	ld.w	d0,[a12]2464
.L6042:
	add	d0,d8
	st.w	[a12]2464,d0
.L6043:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8054        StateDataPtr->FeeCurrSectSrcAddr += ReadLength;      (inlined)
	j	.L655

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8026      if(SrcAddr >= AffectedWLAddr)      (inlined)
.L650:
	mov	d8,#512
.L3636:
	sub	d8,d15
.L6044:
	mov	d15,d9
.L2703:
	insert	d15,d15,#0,#0,#9
.L2705:
	addi	d15,d15,#512
.L2704:
	sub	d0,d15,d9
.L3635:
	extr.u	d11,d0,#0,#16
.L3637:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8064        if(ReadLength > ReadLengthInWL)      (inlined)
	jge.u	d11,d8,.L656
.L6045:
	mov	d4,d15
	call	Fee_lIsUnerasableAddr
.L6046:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8068          if (((boolean)FALSE != Fee_lIsUnerasableAddr(SrcAddrNextWLAddr)) ||      (inlined)
	jne	d2,#0,.L657
.L6047:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8069              (SrcAddrNextWLAddr >= AffectedWLAddr))      (inlined)
	jlt.u	d15,d10,.L658

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8068          if (((boolean)FALSE != Fee_lIsUnerasableAddr(SrcAddrNextWLAddr)) ||      (inlined)
.L657:
	mov	d8,d11

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8068          if (((boolean)FALSE != Fee_lIsUnerasableAddr(SrcAddrNextWLAddr)) ||      (inlined)
.L658:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8064        if(ReadLength > ReadLengthInWL)      (inlined)
.L656:
	sh	d5,d8,#-2
	mov	d4,d9
.L3638:
	mov.aa	a4,a13
.L3640:
	call	Fls_17_Dmu_ReadWordsSync
.L3639:
	mov	d15,d2
.L3641:
	add	d9,d8
.L6048:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8089        while (Fee_lIsUnerasableAddr(SrcAddr) == TRUE)      (inlined)
	j	.L659
.L660:
	insert	d0,d9,#0,#0,#9
.L2706:
	addi	d9,d0,#512

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8089        while (Fee_lIsUnerasableAddr(SrcAddr) == TRUE)      (inlined)
.L659:
	mov	d4,d9
	call	Fee_lIsUnerasableAddr
.L6049:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8089        while (Fee_lIsUnerasableAddr(SrcAddr) == TRUE)      (inlined)
	jne	d2,#0,.L660
.L6050:
	st.w	[a12]2464,d9
.L6051:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8095        if(ReturnValueFls == E_OK)      (inlined)
	jeq	d15,#0,.L661
.L6052:
	call	Fee_lHandleWriteFail
.L6053:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8057      else      (inlined)
	j	.L662

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8022    if(StateDataPtr->FeeWLAffectedType == FEE_LWB_ACROSS_WL_AFFECTED)      (inlined)
.L649:
	and	d3,d9,#511
.L3642:
	lea	a15,[a12]1932
.L3644:
	ld.bu	d15,[a12]2522
.L6054:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8116      if(StateDataPtr->FeeWLAffectedType == FEE_LWB_MARKER_COPY_PENDING)      (inlined)
	jne	d15,#4,.L663
.L6055:
	mov	d8,#8
.L3645:
	mov	d0,#2
.L3643:
	st.b	[a12]2522,d0
.L6056:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8118        ReadLength = FEE_DFLASH_PAGE_SIZE;      (inlined)
	j	.L664

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8116      if(StateDataPtr->FeeWLAffectedType == FEE_LWB_MARKER_COPY_PENDING)      (inlined)
.L663:
	ld.bu	d15,[a12]2522
.L6057:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8122      else if(StateDataPtr->FeeWLAffectedType == FEE_LWB_WITHIN_WL_AFFECTED)      (inlined)
	jne	d15,#2,.L665
.L6058:
	addsc.a	a2,a12,d3,#0
	ld.bu	d1,[a2]1939
.L6059:
	sha	d1,d1,#8
.L6060:
	ld.bu	d2,[a2]1938
.L6061:
	or	d1,d2
.L6062:
	insert	d1,d1,#0,#15,#17
	st.h	[a12]2500,d1
.L6063:
	sha	d1,#3
	extr.u	d8,d1,#0,#16
.L3647:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8130        if(ReadLength > ReadLengthMax)      (inlined)
	jge.u	d0,d8,.L666
.L6064:
	mov	d8,d0
.L6065:
	mov	d0,#3
.L3646:
	st.b	[a12]2522,d0
.L6066:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8132          ReadLength = ReadLengthMax;      (inlined)
	j	.L667

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8122      else if(StateDataPtr->FeeWLAffectedType == FEE_LWB_WITHIN_WL_AFFECTED)      (inlined)
.L665:
	ld.hu	d0,[a12]2500
.L3648:
	ld.hu	d1,[a12]2494
.L6067:
	sub	d0,d1
.L6068:
	extr.u	d15,d0,#0,#16
.L6069:
	sha	d15,#3
	extr.u	d8,d15,#0,#16

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8130        if(ReadLength > ReadLengthMax)      (inlined)
.L666:
	mov	d15,#4
.L6070:
	st.b	[a12]2522,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8135        else      (inlined)
.L667:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8122      else if(StateDataPtr->FeeWLAffectedType == FEE_LWB_WITHIN_WL_AFFECTED)      (inlined)
.L664:
	mov	d15,#0
.L3649:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8150      for(TempIndex = FEE_RESET; TempIndex < ReadLength; TempIndex++)      (inlined)
	j	.L668
.L669:
	addsc.a	a2,a13,d15,#0
.L6071:
	add	d0,d15,d3
.L6072:
	addsc.a	a4,a15,d0,#0
	ld.bu	d0,[a4]
.L6073:
	st.b	[a2],d0
.L6074:
	add	d15,#1
.L3650:
	extr.u	d15,d15,#0,#16

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8150      for(TempIndex = FEE_RESET; TempIndex < ReadLength; TempIndex++)      (inlined)
.L668:
	jlt.u	d15,d8,.L669
.L6075:
	add	d9,d8
.L3621:
	st.w	[a12]2464,d9

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8100        else      (inlined)
.L661:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8057      else      (inlined)
.L655:
	mov	d15,#14
.L6076:
	st.b	[a12]2514,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8108    else      (inlined)
.L662:
	st.w	[a12]2486,d8
.L647:
	ld.a	a15,[a10]4
.L3651:
	ld.bu	d0,[a15]
.L6077:
	mov	d15,#14
.L6078:
	jne	d15,d0,.L670
.L6079:
	j	Fee_lHandleIntrWrite
.L670:
	ret
.L2520:
	
__Fee_lLocalWrite_function_end:
	.size	Fee_lLocalWrite,__Fee_lLocalWrite_function_end-Fee_lLocalWrite
.L1451:
	; End of function
	
	.sdecl	'.text.Fee_lRegisterWriteRequest.Code.Cpu0',code,cluster('Fee_lRegisterWriteRequest')
	.sect	'.text.Fee_lRegisterWriteRequest.Code.Cpu0'
	.align	2
	
; Function Fee_lRegisterWriteRequest
.L1140:
Fee_lRegisterWriteRequest:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4867:
	ld.a	a15,[a15]
.L3652:
	ld.bu	d15,[a15]2512
.L4868:
	or	d15,#16
.L4869:
	or	d15,#2
	st.b	[a15]2512,d15
.L4870:
	ld.bu	d0,[a5]3
.L4871:
	jne	d0,#1,.L671
.L4872:
	jnz.t	d15:3,.L672
.L4873:
	mov	d15,#9
.L4874:
	j	.L673
.L672:
.L671:
	mov	d15,#8
.L673:
	st.b	[a15]2514,d15
.L4875:
	mov	d15,#2
.L4876:
	st.b	[a15]2480,d15
.L4877:
	ld.hu	d15,[a5]4
.L4878:
	st.h	[a15]760,d15
.L4879:
	st.a	[a15]756,a4
.L4880:
	ld.hu	d15,[a5]4
.L4881:
	st.h	[a15]2498,d15
.L4882:
	mov	d15,#0
.L4883:
	st.h	[a15]2492,d15
.L4884:
	ret
.L2041:
	
__Fee_lRegisterWriteRequest_function_end:
	.size	Fee_lRegisterWriteRequest,__Fee_lRegisterWriteRequest_function_end-Fee_lRegisterWriteRequest
.L1356:
	; End of function
	
	.sdecl	'.text.Fee_lLocalRead.Code.Cpu0',code,cluster('Fee_lLocalRead')
	.sect	'.text.Fee_lLocalRead.Code.Cpu0'
	.align	2
	
; Function Fee_lLocalRead
.L1142:
Fee_lLocalRead:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5723:
	ld.a	a12,[a15]
.L3653:
	lea	a13,[a12]752
.L3654:
	ld.hu	d8,[a12]760
.L2437:
	ld.hu	d12,[a12]762
.L2438:
	ld.a	a14,[a13]
.L3655:
	mov	d9,#1
.L2461:
	mov	d11,#0
.L2462:
	mov	d4,d8
.L3656:
	call	Fee_lGetUsrBlockIndex
.L3657:
	mov	d10,d2
.L2474:
	ld.bu	d0,[a12]2514
.L2475:
	jne	d0,#6,.L674
.L2467:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5724:
	ld.a	a2,[a15]
.L3659:
	mul	d15,d10,#24
	addsc.a	a15,a2,d15,#0
	lea	a15,[a15]80
.L3661:
	ld.bu	d15,[a15]10
.L5725:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14302      if (BlockPtr->Status.Consistent == (uint32)FEE_RESET)      (inlined)
	jnz.t	d15:1,.L675
.L5726:
	mov	d0,#4
.L5727:
	st.b	[a2]2480,d0
.L5728:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14304        StateDataPtr->FeeJobResult = MEMIF_BLOCK_INCONSISTENT;      (inlined)
	j	.L676

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14302      if (BlockPtr->Status.Consistent == (uint32)FEE_RESET)      (inlined)
.L675:
	ld.bu	d15,[a15]10
.L5729:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14311      else if (BlockPtr->Status.Valid == (uint32)FEE_RESET)      (inlined)
	jnz.t	d15:0,.L677
.L5730:
	mov	d15,#5
.L5731:
	st.b	[a2]2480,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14311      else if (BlockPtr->Status.Valid == (uint32)FEE_RESET)      (inlined)
.L676:
	mov	d11,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14311      else if (BlockPtr->Status.Valid == (uint32)FEE_RESET)      (inlined)
.L677:
	jne	d11,#0,.L679
.L2468:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3662:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5732:
	ld.a	a15,[a15]
.L3663:
	mul	d15,d10,#24
	addsc.a	a2,a15,d15,#0
.L3660:
	ld.w	d0,[a2]84
.L5733:
	extr.u	d0,d0,#0,#16
.L3665:
	ld.hu	d1,[a15]762
.L3667:
	ld.hu	d2,[a15]764
.L3658:
	ld.a	a2,[a15]752
.L3670:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14984    if(BlkLength > (uint16)0)      (inlined)
	jeq	d2,#0,.L680
.L5734:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14990      if(BlkOffset > DflashBlkSize)      (inlined)
	jge.u	d0,d1,.L681
.L5735:
	mov	d15,#0
.L3672:
	mov	d0,d15
.L3666:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14992        for(Count = FEE_RESET; Count < BlkLength; Count++)      (inlined)
	j	.L682
.L683:
	addsc.a	a4,a2,d15,#0
.L3674:
	st.b	[a4],d0
.L3675:
	add	d15,#1
.L3673:
	extr.u	d15,d15,#0,#16

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14992        for(Count = FEE_RESET; Count < BlkLength; Count++)      (inlined)
.L682:
	jlt.u	d15,d2,.L683
.L5736:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15017        if ( Fee_CfgPtr->FeeNvmJobEndNotification != NULL_PTR )      (inlined)
	j	.L684

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14990      if(BlkOffset > DflashBlkSize)      (inlined)
.L681:
	add	d15,d1,d2
.L5737:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15027      else if( (BlkOffset + BlkLength) > DflashBlkSize)      (inlined)
	jge	d0,d15,.L685
.L5738:
	sub	d0,d1
.L3676:
	extr.u	d15,d0,#0,#16
.L3677:
	sub	d2,d15
.L3669:
	extr.u	d0,d2,#0,#16
.L3679:
	st.h	[a15]764,d15
.L5739:
	ld.a	a15,[a15]752
.L3664:
	addsc.a	a15,a15,d15,#0
.L3671:
	mov	d15,#0
.L3678:
	mov	d1,d15
.L3668:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15037        for(Count = FEE_RESET; Count < StuffLen; Count++)      (inlined)
	j	.L686
.L687:
	addsc.a	a2,a15,d15,#0
.L3681:
	st.b	[a2],d1
.L3682:
	add	d15,#1
.L3680:
	extr.u	d15,d15,#0,#16

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15037        for(Count = FEE_RESET; Count < StuffLen; Count++)      (inlined)
.L686:
	jlt.u	d15,d0,.L687
.L5740:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15027      else if( (BlkOffset + BlkLength) > DflashBlkSize)      (inlined)
	j	.L688
.L684:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14984    if(BlkLength > (uint16)0)      (inlined)
.L680:
	mov	d15,#1
.L5741:
	st.b	[a15]2514,d15
.L5742:
	mov	d15,#0
.L5743:
	st.b	[a15]2480,d15
.L5744:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3683:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5745:
	ld.w	d15,[a15]8
.L5746:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15073      if ( Fee_CfgPtr->FeeNvmJobEndNotification != NULL_PTR )      (inlined)
	jeq	d15,#0,.L689
.L5747:
	ld.a	a15,[a15]8
.L5748:
	calli	a15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15073      if ( Fee_CfgPtr->FeeNvmJobEndNotification != NULL_PTR )      (inlined)
.L689:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15048    else      (inlined)
.L688:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 15027      else if( (BlkOffset + BlkLength) > DflashBlkSize)      (inlined)
.L685:
.L679:
	movh.a	a2,#@his(Fee_CfgPtr)
	ld.a	a15,[a2]@los(Fee_CfgPtr)
.L5749:
	ld.a	a15,[a15]
.L3684:
	ld.hu	d12,[a15]762
.L5750:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8938    if(ReturnValue == E_NOT_OK )      (inlined)
	jne	d11,#1,.L690
.L5751:
	mov	d0,#1
.L5752:
	st.b	[a15]2514,d0
.L5753:
	ld.a	a15,[a2]@los(Fee_CfgPtr)
.L3685:
	ld.w	d15,[a15]12
.L5754:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8957      if ( Fee_CfgPtr->FeeNvmJobErrorNotification != NULL_PTR )      (inlined)
	jeq	d15,#0,.L691
.L5755:
	ld.a	a15,[a15]12
.L5756:
	calli	a15
.L5757:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8957      if ( Fee_CfgPtr->FeeNvmJobErrorNotification != NULL_PTR )      (inlined)
	j	.L692

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8938    if(ReturnValue == E_NOT_OK )      (inlined)
.L690:
	mul	d15,d10,#24
	addsc.a	a2,a15,d15,#0
.L5758:
	ld.w	d15,[a2]80
.L5759:
	add	d10,d15,#8

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9002      } while(BlockOffset >= FEE_SEVEN);      (inlined)
.L693:
	and	d15,d10,#511
.L2490:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8989        if(Fee_lIsWLBeginning(StartAddr) == FEE_NEW_WL_BEGIN)      (inlined)
	jne	d15,#0,.L694
.L5760:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8991          while (Fee_lIsUnerasableAddr(StartAddr) == TRUE)      (inlined)
	j	.L695
.L696:
	insert	d15,d10,#0,#0,#9
.L2493:
	addi	d10,d15,#512

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8991          while (Fee_lIsUnerasableAddr(StartAddr) == TRUE)      (inlined)
.L695:
	mov	d4,d10
	call	Fee_lIsUnerasableAddr
.L5761:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8991          while (Fee_lIsUnerasableAddr(StartAddr) == TRUE)      (inlined)
	jne	d2,#0,.L696

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8989        if(Fee_lIsWLBeginning(StartAddr) == FEE_NEW_WL_BEGIN)      (inlined)
.L694:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8997        if (BlockOffset >= FEE_SEVEN)      (inlined)
	jlt.u	d12,#7,.L697
.L5762:
	add	d10,d10,#8
.L5763:
	add	d12,#-7

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8997        if (BlockOffset >= FEE_SEVEN)      (inlined)
.L697:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9002      } while(BlockOffset >= FEE_SEVEN);      (inlined)
	jge.u	d12,#7,.L693
.L5764:
	st.w	[a15]2464,d10

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8967    else      (inlined)
.L692:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  8957      if ( Fee_CfgPtr->FeeNvmJobErrorNotification != NULL_PTR )      (inlined)
.L691:
	ld.bu	d15,[a12]2480
.L5765:
	jeq	d15,#2,.L698
.L2469:
	mov	d11,#1
.L698:
.L674:
	st.a	[a12]2476,a14
.L5766:
	ld.bu	d15,[a12]2514
.L5767:
	jne	d15,#3,.L699
.L2445:
	jeq	d12,#0,.L703
.L2446:
	j	.L701
.L702:
	ld.a	a15,[a12]2476
.L2447:
	add	d15,d9,d12
.L2448:
	addsc.a	a2,a12,d15,#0
	ld.bu	d15,[a2]908
.L5768:
	st.b	[a15],d15
.L2449:
	add	d12,#1
.L2450:
	ld.a	a15,[a12]2476
.L5769:
	add.a	a15,#1
	st.a	[a12]2476,a15
.L701:
	jlt.u	d12,#7,.L702
.L5770:
	mov	d12,#0
.L2451:
	add	d9,d9,#8
.L5771:
	j	.L703
.L704:
	mov	d0,#0
.L3686:
	j	.L705
.L706:
	ld.a	a15,[a12]2476
.L5772:
	addsc.a	a15,a15,d0,#0
.L5773:
	add	d15,d9,d0
.L5774:
	addsc.a	a2,a12,d15,#0
	ld.bu	d15,[a2]908
.L5775:
	st.b	[a15],d15
.L5776:
	add	d0,#1
.L705:
	jlt.u	d0,#7,.L706
.L5777:
	ld.a	a15,[a12]2476
.L5778:
	add.a	a15,#7
	st.a	[a12]2476,a15
.L5779:
	add	d15,d9,#8
	extr.u	d9,d15,#0,#16
.L703:
	ld.w	d15,[a12]2486
.L5780:
	jlt.u	d9,d15,.L704
.L699:
	jne	d11,#0,.L707
.L2470:
	ld.bu	d15,[a12]2514
.L5781:
	jne	d15,#1,.L708
.L707:
	ld.bu	d15,[a12]2514
.L5782:
	jne	d15,#3,.L709
.L708:
	ld.w	d9,[a12]2464
.L2452:
	st.h	[a12]762,d12
.L2453:
	ld.hu	d5,[a12]764
.L3687:
	mov	d4,d9
.L3689:
	call	Fee_lCheckReadLength
.L3688:
	mov	d10,d2
.L3691:
	call	Fee_lClearFeeReadWriteBuffer
.L3690:
	st.w	[a12]2486,d10
.L5783:
	lea	a4,[a12]908
.L5784:
	mov	e4,d10,d9
	call	Fls_17_Dmu_Read
.L3692:
	jne	d2,#1,.L710
.L5785:
	mov	d4,#2
	j	Fee_lHandleUsrJobFailure
.L710:
	st.h	[a12]2498,d8
.L5786:
	ld.bu	d15,[a12]2514
.L5787:
	jne	d15,#3,.L712
.L5788:
	add	d9,d10
.L5789:
	j	.L713
.L714:
	insert	d15,d9,#0,#0,#9
.L2495:
	addi	d9,d15,#512
.L713:
	mov	d4,d9
	call	Fee_lIsUnerasableAddr
.L5790:
	jne	d2,#0,.L714
.L5791:
	st.w	[a12]2464,d9
.L712:
	st.h	[a12]762,d12
.L2454:
	ld.a	a15,[a12]2476
.L5792:
	st.a	[a13],a15
.L709:
	ret
.L2423:
	
__Fee_lLocalRead_function_end:
	.size	Fee_lLocalRead,__Fee_lLocalRead_function_end-Fee_lLocalRead
.L1441:
	; End of function
	
	.sdecl	'.text.Fee_lCheckReadLength.Code.Cpu0',code,cluster('Fee_lCheckReadLength')
	.sect	'.text.Fee_lCheckReadLength.Code.Cpu0'
	.align	2
	
; Function Fee_lCheckReadLength
.L1144:
Fee_lCheckReadLength:	.type	func
	mov	d8,d5
.L3694:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5797:
	ld.a	a15,[a15]
.L3696:
	ld.hu	d9,[a15]762
.L2510:
	and	d15,d4,#511
.L2511:
	jne	d15,#0,.L715
.L5798:
	mov	d15,#448
.L3697:
	j	.L716
.L715:
	mov	d0,#512
.L5799:
	and	d1,d4,#511
.L3698:
	sub	d0,d1
.L5800:
	sha	d0,#-3
.L3699:
	mul	d15,d0,#7
.L716:
	sub	d0,d15,d9
.L5801:
	jge	d0,d8,.L717
.L2513:
	and	d0,d4,#511
.L2514:
	jeq	d0,#0,.L718
.L2515:
	insert	d0,d4,#0,#0,#9
.L2518:
	addi	d4,d0,#512
.L2516:
	call	Fee_lIsUnerasableAddr
.L3693:
	jne	d2,#0,.L719
.L5802:
	mov	d15,#448
.L719:
.L718:
.L717:
	sub	d15,d9
.L3700:
	extr.u	d4,d15,#0,#16
.L3701:
	jge.u	d4,d8,.L720
.L5803:
	sub	d8,d4
.L3695:
	extr.u	d8,d8,#0,#16
.L3703:
	mov	d15,#3
.L5804:
	j	.L721
.L720:
	mov	d4,d8
.L5805:
	mov	d15,#5
.L721:
	st.b	[a15]2514,d15
.L5806:
	mov	d15,#1
.L5807:
	st.b	[a15]2525,d15
.L5808:
	add	d15,d4,d9
.L5809:
	mov	d0,#7
.L5810:
	jge	d0,d15,.L722
.L5811:
	rsub	d15,d9,#7
.L5812:
	sub	d4,d15
.L3702:
	extr.u	d4,d4,#0,#16
.L3704:
	call	Fee_lGetDFLASHPages
.L3705:
	add	d2,#-1
.L5813:
	j	.L723
.L722:
	call	Fee_lGetDFLASHPages
.L3706:
	add	d2,#-2
.L723:
	extr.u	d2,d2,#0,#8
.L3707:
	sha	d2,#3
.L3708:
	st.h	[a15]764,d8
.L5814:
	ret
.L2496:
	
__Fee_lCheckReadLength_function_end:
	.size	Fee_lCheckReadLength,__Fee_lCheckReadLength_function_end-Fee_lCheckReadLength
.L1446:
	; End of function
	
	.sdecl	'.text.Fee_lGcErrorHandler.Code.Cpu0',code,cluster('Fee_lGcErrorHandler')
	.sect	'.text.Fee_lGcErrorHandler.Code.Cpu0'
	.align	2
	
; Function Fee_lGcErrorHandler
.L1146:
Fee_lGcErrorHandler:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6084:
	ld.a	a15,[a15]
.L3711:
	jeq	d4,#3,.L725
.L6085:
	jeq	d4,#4,.L726
.L6086:
	jeq	d4,#5,.L727
.L6087:
	jeq	d4,#7,.L728
.L6088:
	ret
.L726:
	ld.bu	d15,[a15]2515
.L6089:
	mov	d0,#16
.L6090:
	jeq	d15,d0,.L730
.L6091:
	jne	d15,#0,.L731
.L730:
	mov	d4,d5
.L3709:
	call	Fee_lGcDiscardUnconfigBlk
.L3710:
	mov	d15,#16
.L6092:
	st.b	[a15]2515,d15
.L6093:
	ret
.L731:
	mov	d4,d5
.L3713:
	call	Fee_lGcDiscardConfigBlk
.L3714:
	mov	d15,#1
.L6094:
	st.b	[a15]2515,d15
.L6095:
	ret
.L728:
.L727:
.L725:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3712:
	ld.a	a2,[a15]@los(Fee_CfgPtr)
.L6096:
	ld.a	a2,[a2]
.L3715:
	mov	d15,#15
.L6097:
	st.b	[a2]2515,d15
.L6098:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6099:
	ld.w	d15,[a15]24
.L6100:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9174    if(Fee_CfgPtr->FeeNvmIllegalStateNotification != NULL_PTR)      (inlined)
	jeq	d15,#0,.L734
.L6101:
	ld.a	a15,[a15]24
.L6102:
	ji	a15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9174    if(Fee_CfgPtr->FeeNvmIllegalStateNotification != NULL_PTR)      (inlined)
.L734:
	ret
.L2707:
	
__Fee_lGcErrorHandler_function_end:
	.size	Fee_lGcErrorHandler,__Fee_lGcErrorHandler_function_end-Fee_lGcErrorHandler
.L1456:
	; End of function
	
	.sdecl	'.text.Fee_lGcRead.Code.Cpu0',code,cluster('Fee_lGcRead')
	.sect	'.text.Fee_lGcRead.Code.Cpu0'
	.align	2
	
; Function Fee_lGcRead
.L1148:
Fee_lGcRead:	.type	func
	mov	d9,d4
.L3718:
	mov	d10,d5
.L3719:
	mov	d8,#8
.L3720:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6107:
	ld.a	a15,[a15]
.L3721:
	ld.hu	d0,[a15]744
.L6108:
	ld.hu	d1,[a15]2494
.L6109:
	sub	d0,d1
	extr.u	d15,d0,#0,#16
.L3722:
	sh	d0,d15,#3
.L3724:
	jeq	d15,#0,.L735
.L6110:
	mov	d15,#512
.L3723:
	sub	d1,d15,d10
.L6111:
	min.u	d8,d0,d1
.L6112:
	and	d11,d9,#511
.L3725:
	sub	d15,d11
.L6113:
	jge.u	d15,d8,.L736
.L6114:
	addi	d4,d9,#512
.L3717:
	call	Fee_lIsUnerasableAddr
.L3716:
	jeq	d2,#0,.L737
.L6115:
	mov	d8,#512
.L6116:
	sub	d8,d11
.L737:
.L736:
.L735:
	addsc.a	a2,a15,d10,#0
	lea	a4,[a2]1420
.L3726:
	mov	e4,d8,d9
	call	Fls_17_Dmu_Read
.L3727:
	jne	d2,#0,.L738
.L6117:
	st.w	[a15]2486,d8
.L6118:
	mov	d15,#1
.L6119:
	st.b	[a15]2524,d15
.L6120:
	mov	d15,#3
.L6121:
	st.b	[a15]2523,d15
.L6122:
	ret
.L738:
	ld.hu	d4,[a15]746
	call	Fee_lGetUsrBlockIndex
.L3728:
	mov	d4,#4
.L6123:
	mov	d5,d2
.L3729:
	j	Fee_lGcErrorHandler
.L2716:
	
__Fee_lGcRead_function_end:
	.size	Fee_lGcRead,__Fee_lGcRead_function_end-Fee_lGcRead
.L1461:
	; End of function
	
	.sdecl	'.text.Fee_lGcWrite.Code.Cpu0',code,cluster('Fee_lGcWrite')
	.sect	'.text.Fee_lGcWrite.Code.Cpu0'
	.align	2
	
; Function Fee_lGcWrite
.L1150:
Fee_lGcWrite:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6612:
	ld.a	a15,[a15]
.L3732:
	mov	d15,#0
.L3733:
	addsc.a	a2,a15,d5,#0
	lea	a4,[a2]1420
.L3734:
	mov	d0,#1
.L6613:
	st.b	[a15]2524,d0
.L6614:
	st.b	[a15]2523,d0
.L6615:
	ld.w	d5,[a15]2486
.L3730:
	st.w	[a15]2482,d5
.L6616:
	call	Fls_17_Dmu_Write
.L3731:
	jne	d2,#1,.L740
.L6617:
	mov	d15,#3
.L740:
	mov	d2,d15
.L3735:
	ret
.L2959:
	
__Fee_lGcWrite_function_end:
	.size	Fee_lGcWrite,__Fee_lGcWrite_function_end-Fee_lGcWrite
.L1541:
	; End of function
	
	.sdecl	'.text.Fee_lGcPrologue.Code.Cpu0',code,cluster('Fee_lGcPrologue')
	.sect	'.text.Fee_lGcPrologue.Code.Cpu0'
	.align	2
	
; Function Fee_lGcPrologue
.L1152:
Fee_lGcPrologue:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6128:
	ld.a	a15,[a15]
.L3736:
	ld.bu	d15,[a15]2524
.L6129:
	jne	d15,#2,.L742
.L6130:
	ld.bu	d15,[a15]2515
.L6131:
	jne	d15,#0,.L743
.L6132:
	st.b	[a15]2524,d15
.L6133:
	ld.bu	d15,[a15]2526
.L6134:
	jeq	d15,#1,.L744
.L6135:
	mov	d15,#6
.L6136:
	j	.L745
.L743:
	ld.bu	d15,[a15]2515
.L6137:
	jne	d15,#2,.L746
.L6138:
	mov	d15,#0
.L6139:
	st.b	[a15]2524,d15
.L6140:
	ld.bu	d15,[a15]2526
.L6141:
	jne	d15,#1,.L747
.L744:
	ld.hu	d4,[a15]746
	call	Fee_lGetUsrBlockIndex
.L3737:
	mov	d4,#4
.L6142:
	mov	d5,d2
.L3738:
	j	Fee_lGcErrorHandler
.L747:
	mov	d15,#7
.L745:
	st.b	[a15]2515,d15
.L746:
.L742:
	ret
.L2729:
	
__Fee_lGcPrologue_function_end:
	.size	Fee_lGcPrologue,__Fee_lGcPrologue_function_end-Fee_lGcPrologue
.L1466:
	; End of function
	
	.sdecl	'.text.Fee_lGcDiscardUnconfigBlk.Code.Cpu0',code,cluster('Fee_lGcDiscardUnconfigBlk')
	.sect	'.text.Fee_lGcDiscardUnconfigBlk.Code.Cpu0'
	.align	2
	
; Function Fee_lGcDiscardUnconfigBlk
.L1154:
Fee_lGcDiscardUnconfigBlk:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6212:
	ld.a	a2,[a15]
.L3740:
	mov.u	d15,#65535
.L6213:
	jeq	d15,d4,.L749
.L6214:
	mul	d15,d4,#24
	addsc.a	a15,a2,d15,#0
	lea	a4,[a15]80
.L3741:
	j	.L750
.L749:
	mov	d4,#0
.L6215:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6216:
	ld.hu	d15,[a15]20
.L6217:
	mul	d15,d15,#24
	addsc.a	a15,a2,d15,#0
	lea	a4,[a15]80
.L3742:
	j	.L751
.L752:
	add	d4,#1
.L3739:
	extr.u	d4,d4,#0,#16
.L3743:
	lea	a4,[a4]24
.L751:
	ld.hu	d15,[a2]2506
.L6218:
	jge.u	d4,d15,.L753
.L6219:
	ld.hu	d15,[a2]746
.L6220:
	ld.hu	d0,[a4]8
.L6221:
	jne	d15,d0,.L752
.L753:
.L750:
	ld.hu	d15,[a2]2506
.L6222:
	add	d15,#-1
	st.h	[a2]2506,d15
.L6223:
	mov	d0,#0
.L3745:
	j	.L754
.L755:
	mul	d15,d0,#24
	addsc.a	a15,a4,d15,#0
.L6224:
	ld.hu	d15,[a15]32
.L6225:
	st.h	[a15]8,d15
.L6226:
	ld.w	d15,[a15]24
.L6227:
	st.w	[a15],d15
.L6228:
	add	d4,#1
.L3744:
	extr.u	d4,d4,#0,#16
.L3747:
	add	d0,#1
.L3746:
	extr.u	d0,d0,#0,#16
.L754:
	ld.hu	d15,[a2]2506
.L6229:
	jlt.u	d4,d15,.L755
.L6230:
	ret
.L2768:
	
__Fee_lGcDiscardUnconfigBlk_function_end:
	.size	Fee_lGcDiscardUnconfigBlk,__Fee_lGcDiscardUnconfigBlk_function_end-Fee_lGcDiscardUnconfigBlk
.L1476:
	; End of function
	
	.sdecl	'.text.Fee_lGcDiscardConfigBlk.Code.Cpu0',code,cluster('Fee_lGcDiscardConfigBlk')
	.sect	'.text.Fee_lGcDiscardConfigBlk.Code.Cpu0'
	.align	2
	
; Function Fee_lGcDiscardConfigBlk
.L1156:
Fee_lGcDiscardConfigBlk:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6235:
	ld.a	a15,[a15]
.L3748:
	mul	d15,d4,#24
	addsc.a	a15,a15,d15,#0
.L3749:
	ld.bu	d15,[a15]90
.L6236:
	insert	d15,d15,#0,#1,#1
	st.b	[a15]90,d15
.L6237:
	mov	d15,#0
.L6238:
	st.w	[a15]80,d15
.L6239:
	ret
.L2775:
	
__Fee_lGcDiscardConfigBlk_function_end:
	.size	Fee_lGcDiscardConfigBlk,__Fee_lGcDiscardConfigBlk_function_end-Fee_lGcDiscardConfigBlk
.L1481:
	; End of function
	
	.sdecl	'.text.Fee_lGcCheckBlkCopy.Code.Cpu0',code,cluster('Fee_lGcCheckBlkCopy')
	.sect	'.text.Fee_lGcCheckBlkCopy.Code.Cpu0'
	.align	2
	
; Function Fee_lGcCheckBlkCopy
.L1158:
Fee_lGcCheckBlkCopy:	.type	func
	mov	d2,#0
.L3750:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6467:
	ld.a	a2,[a15]
.L3751:
	ld.hu	d0,[a2]2502
.L3752:
	mul	d15,d0,#24
	addsc.a	a15,a2,d15,#0
	lea	a15,[a15]80
.L3754:
	movh.a	a4,#@his(Fee_CfgPtr)
.L6468:
	j	.L756
.L757:
	ld.bu	d15,[a15]10
.L6469:
	jz.t	d15:1,.L758
.L6470:
	jnz.t	d15:2,.L759
.L6471:
	mov	d2,#1
.L6472:
	j	.L760
.L759:
.L758:
	add	d0,#1
.L3753:
	extr.u	d0,d0,#0,#16
.L3755:
	lea	a15,[a15]24
.L760:
.L756:
	jne	d2,#0,.L761
.L6473:
	ld.a	a5,[a4]@los(Fee_CfgPtr)
.L6474:
	ld.hu	d15,[a5]20
.L6475:
	jne	d15,d0,.L757
.L761:
	st.h	[a2]2502,d0
.L6476:
	ret
.L2899:
	
__Fee_lGcCheckBlkCopy_function_end:
	.size	Fee_lGcCheckBlkCopy,__Fee_lGcCheckBlkCopy_function_end-Fee_lGcCheckBlkCopy
.L1531:
	; End of function
	
	.sdecl	'.text.Fee_lGcStartCopy.Code.Cpu0',code,cluster('Fee_lGcStartCopy')
	.sect	'.text.Fee_lGcStartCopy.Code.Cpu0'
	.align	2
	
; Function Fee_lGcStartCopy
.L1160:
Fee_lGcStartCopy:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6147:
	ld.a	a12,[a15]
.L3756:
	ld.bu	d15,[a12]2524
.L6148:
	jne	d15,#2,.L763
.L6149:
	mov	d15,#0
.L6150:
	st.b	[a12]2524,d15
.L6151:
	ld.bu	d15,[a12]2526
.L6152:
	jne	d15,#1,.L764
.L6153:
	ld.hu	d4,[a12]746
	call	Fee_lGetUsrBlockIndex
.L3757:
	mov	d8,d2
.L3758:
	j	.L765
.L764:
	ld.bu	d15,[a12]2515
.L6154:
	jne	d15,#1,.L766
.L6155:
	mov	d15,#7
.L6156:
	j	.L767
.L766:
	mov	d15,#6
.L6157:
	j	.L768
.L763:
	ld.w	d9,[a12]2444
.L3759:
	ld.bu	d0,[a12]2515
.L6158:
	mov	d15,#16
.L6159:
	jne	d15,d0,.L769
.L2742:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6160:
	ld.a	a15,[a15]
.L3760:
	ld.hu	d15,[a15]2504
.L6161:
	ld.hu	d0,[a15]2506
.L6162:
	lt.u	d2,d15,d0
.L2743:
	j	.L770
.L769:
	call	Fee_lGcCheckBlkCopy
.L3761:
	jne	d2,#0,.L771
.L2746:
	ld.bu	d15,[a12]2512
.L6163:
	jz.t	d15:0,.L772
.L6164:
	insert	d15,d15,#0,#0,#1
	st.b	[a12]2512,d15
.L6165:
	mov	d15,#0
.L6166:
	st.h	[a12]2502,d15
.L2747:
	call	Fee_lGcCheckBlkCopy
.L772:
.L771:
.L770:
	jeq	d2,#0,.L773
.L2748:
	ld.bu	d0,[a12]2515
.L6167:
	mov	d15,#16
.L6168:
	jne	d15,d0,.L774
.L6169:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6170:
	ld.hu	d15,[a15]20
.L6171:
	ld.hu	d0,[a12]2504
.L6172:
	add	d15,d0
.L6173:
	mul	d15,d15,#24
	addsc.a	a15,a12,d15,#0
.L6174:
	ld.w	d15,[a15]80
.L6175:
	st.w	[a12]2448,d15
.L6176:
	ld.hu	d8,[a12]2504
.L3762:
	j	.L775
.L774:
	ld.hu	d15,[a12]2502
.L6177:
	mul	d15,d15,#24
	addsc.a	a15,a12,d15,#0
.L6178:
	ld.w	d15,[a15]80
.L6179:
	st.w	[a12]2448,d15
.L6180:
	ld.hu	d8,[a12]2502
.L775:
	mov	d15,#0
.L6181:
	st.h	[a12]2494,d15
.L6182:
	and	d15,d9,#511
.L3763:
	jne	d15,#0,.L776
.L6183:
	call	Fee_lClearFeeGcReadWriteBuffer
.L776:
	ld.w	d4,[a12]2448
.L6184:
	addsc.a	a15,a12,d15,#0
	lea	a4,[a15]1420
.L6185:
	mov	d5,#2
	call	Fls_17_Dmu_ReadWordsSync
.L3764:
	jne	d2,#0,.L777
.L2752:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6186:
	ld.a	a15,[a15]
.L3766:
	ld.w	d0,[a15]2444
.L6187:
	and	d0,d0,#511
.L3767:
	addsc.a	a2,a15,d0,#0
.L6188:
	ld.w	d0,[a2]1420
.L3768:
	sh	d0,#-8
.L3770:
	ld.hu	d1,[a2]1426
.L6189:
	insert	d1,d1,#0,#15,#17
.L3771:
	ld.w	d2,[a15]2448
.L3765:
	st.w	[a15]740,d2
.L6190:
	st.h	[a15]746,d0
.L6191:
	st.h	[a15]744,d1
.L6192:
	mov	d0,#1
.L3769:
	st.b	[a15]748,d0
.L2753:
	ld.w	d4,[a12]2448
.L6193:
	mov	d5,d15
.L3772:
	j	Fee_lGcRead
.L777:
.L765:
	mov	d4,#4
.L6194:
	mov	d5,d8
.L3773:
	j	Fee_lGcErrorHandler
.L773:
	and	d15,d9,#511
.L2762:
	jeq	d15,#0,.L780
.L2764:
	insert	d15,d9,#0,#0,#9
.L2766:
	addi	d9,d15,#512
.L780:
	call	Fee_lClearFeeGcReadWriteBuffer
.L3774:
	st.w	[a12]2444,d9
.L6195:
	mov	d0,#0
.L3775:
	st.b	[a12]2530,d0
.L6196:
	ld.bu	d15,[a12]2515
.L6197:
	jne	d15,#1,.L781
.L782:
	mul	d15,d0,#24
	addsc.a	a15,a12,d15,#0
	lea	a15,[a15]80
.L3777:
	ld.bu	d15,[a15]10
.L6198:
	jnz.t	d15:5,.L783
.L6199:
	mov	d15,#0
.L6200:
	st.w	[a15]12,d15
.L6201:
	ld.bu	d15,[a15]10
.L6202:
	insert	d15,d15,#0,#3,#3
	st.b	[a15]10,d15
.L783:
	add	d0,#1
.L3776:
	extr.u	d0,d0,#0,#16
.L3779:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3778:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6203:
	ld.hu	d15,[a15]20
.L6204:
	jlt.u	d0,d15,.L782
.L6205:
	mov	d15,#8
.L6206:
	j	.L784
.L781:
	mov	d15,#1
.L767:
.L768:
.L784:
	st.b	[a12]2515,d15
.L6207:
	ret
.L2732:
	
__Fee_lGcStartCopy_function_end:
	.size	Fee_lGcStartCopy,__Fee_lGcStartCopy_function_end-Fee_lGcStartCopy
.L1471:
	; End of function
	
	.sdecl	'.text.Fee_lGcStartCopyWrite.Code.Cpu0',code,cluster('Fee_lGcStartCopyWrite')
	.sect	'.text.Fee_lGcStartCopyWrite.Code.Cpu0'
	.align	2
	
; Function Fee_lGcStartCopyWrite
.L1162:
Fee_lGcStartCopyWrite:	.type	func
	mov	d9,#0
.L3780:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6481:
	ld.a	a12,[a15]
.L3782:
	ld.bu	d15,[a12]2524
.L6482:
	jne	d15,#2,.L785
.L6483:
	mov	d15,d9
.L3784:
	st.b	[a12]2524,d15
.L6484:
	ld.bu	d15,[a12]2526
.L3785:
	jne	d15,#1,.L786
.L6485:
	ld.bu	d15,[a12]2537
.L6486:
	jne	d15,#0,.L787
.L6487:
	mov	d9,#3
.L6488:
	j	.L788
.L785:
	ld.hu	d0,[a12]2490
.L6489:
	jeq	d0,#0,.L789
.L787:
.L786:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6490:
	ld.a	a12,[a15]
.L3783:
	lea	a13,[a12]80
.L3786:
	mov	d2,#0
.L3788:
	ld.hu	d0,[a15]20
.L6491:
	mul	d15,d0,#24
	addsc.a	a15,a12,d15,#0
	lea	a15,[a15]80
.L3790:
	ld.w	d11,[a12]2444
.L2928:
	insert	d4,d11,#0,#0,#9
.L2929:
	and	d8,d11,#511
.L6492:
	ld.w	d15,[a12]2482
.L3792:
	add	d8,d15
.L6493:
	ld.hu	d15,[a12]2490
.L6494:
	sub	d0,d8,d15
.L6495:
	min.u	d10,d0,#256
.L3793:
	ld.bu	d0,[a12]2537
.L6496:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10083    if(StateDataPtr->FeeProgVerErr == FEE_RESET)      (inlined)
	jne	d0,#0,.L790
.L6497:
	add	d4,d15
.L6498:
	addsc.a	a2,a12,d15,#0
	lea	a4,[a2]1420
.L6499:
	sh	d5,d10,#-2
	call	Fls_17_Dmu_CompareWordsSync
.L6500:
	ld.hu	d15,[a12]2490
.L6501:
	add	d10,d15
.L3794:
	st.h	[a12]2490,d10

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10083    if(StateDataPtr->FeeProgVerErr == FEE_RESET)      (inlined)
.L790:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10101    if((ReturnVal == E_NOT_OK) ||      (inlined)
	jeq	d2,#1,.L791
.L6502:
	ld.bu	d15,[a12]2537
.L6503:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10102        (StateDataPtr->FeeProgVerErr == FEE_SET))      (inlined)
	jne	d15,#1,.L792

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10101    if((ReturnVal == E_NOT_OK) ||      (inlined)
.L791:
	mov	d0,#0
.L3795:
	st.h	[a12]2490,d0
.L6504:
	st.b	[a12]2537,d0
.L2932:
	ld.bu	d15,[a12]2530
.L6505:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10108      if(StateDataPtr->FeeIntrJobFailCount == FEE_RESET)      (inlined)
	jne	d15,#0,.L793
.L2935:
	add	d15,d0,#1
.L2936:
	st.b	[a12]2530,d15
.L6506:
	ld.bu	d15,[a12]2515
.L6507:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10112        if(StateDataPtr->FeeGcState == FEE_GC_UNCFG_COPY_WRITE)      (inlined)
	jne	d15,#6,.L794
.L6508:
	ld.bu	d15,[a12]2517
.L6509:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10115          if(StateDataPtr->FeeGcBlkIndexInWL != FEE_RESET)      (inlined)
	jeq	d15,#0,.L795
.L2937:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3791:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6510:
	ld.a	a2,[a15]
.L3797:
	ld.hu	d15,[a15]20
.L6511:
	mul	d15,d15,#24
	addsc.a	a15,a2,d15,#0
	lea	a15,[a15]80
.L3798:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10259          ((UnconfigBlockPtr->BlockNumber) != StateDataPtr->FeeGcFirstBlkNumInWL))      (inlined)
	j	.L796
.L797:
	add	d0,#1
.L3796:
	extr.u	d0,d0,#0,#16
.L3799:
	lea	a15,[a15]24

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10259          ((UnconfigBlockPtr->BlockNumber) != StateDataPtr->FeeGcFirstBlkNumInWL))      (inlined)
.L796:
	ld.hu	d15,[a2]2506
.L6512:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10258    while((BlockIndex < (StateDataPtr->FeeUnConfigBlockCount)) &&      (inlined)
	jge.u	d0,d15,.L798
.L6513:
	ld.hu	d15,[a15]8
.L6514:
	ld.hu	d1,[a2]2510
.L6515:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10259          ((UnconfigBlockPtr->BlockNumber) != StateDataPtr->FeeGcFirstBlkNumInWL))      (inlined)
	jne	d15,d1,.L797

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10258    while((BlockIndex < (StateDataPtr->FeeUnConfigBlockCount)) &&      (inlined)
.L798:
	st.h	[a2]2504,d0
.L6516:
	mov	d0,#0
.L6517:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10270        BlockIndex < StateDataPtr->FeeGcBlkIndexInWL;      (inlined)
	j	.L799

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10271        BlockIndex++)      (inlined)
.L800:
	ld.bu	d15,[a15]10
.L6518:
	insert	d15,d15,#0,#2,#1
	st.b	[a15]10,d15
.L6519:
	addsc.a	a4,a2,d0,#2
	ld.w	d15,[a4]768
.L6520:
	st.w	[a15+]24,d15
.L6521:
	add	d0,#1
.L3800:
	extr.u	d0,d0,#0,#16

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10270        BlockIndex < StateDataPtr->FeeGcBlkIndexInWL;      (inlined)
.L799:
	ld.bu	d15,[a2]2517
.L6522:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10270        BlockIndex < StateDataPtr->FeeGcBlkIndexInWL;      (inlined)
	jlt.u	d0,d15,.L800
.L6523:
	mov	d15,#0
.L6524:
	st.b	[a2]2517,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10115          if(StateDataPtr->FeeGcBlkIndexInWL != FEE_RESET)      (inlined)
.L795:
	mov	d15,#16
.L6525:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10120          StateDataPtr->FeeGcState = FEE_GC_UNCFG_START_COPY;      (inlined)
	j	.L801

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10112        if(StateDataPtr->FeeGcState == FEE_GC_UNCFG_COPY_WRITE)      (inlined)
.L794:
	ld.bu	d15,[a12]2517
.L6526:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10125          if(StateDataPtr->FeeGcBlkIndexInWL != FEE_RESET)      (inlined)
	jeq	d15,#0,.L802
.L2942:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3801:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6527:
	ld.a	a13,[a15]
.L3787:
	ld.hu	d4,[a13]2510
	call	Fee_lGetUsrBlockIndex
.L3789:
	mul	d15,d2,#24
	addsc.a	a15,a13,d15,#0
	lea	a15,[a15]80
.L3803:
	st.h	[a13]2502,d2
.L6528:
	mov	d0,#0
.L3802:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10318        BlockIndex < StateDataPtr->FeeGcBlkIndexInWL;      (inlined)
	j	.L803

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10319        BlockIndex++)      (inlined)
.L804:
	ld.bu	d15,[a15]10
.L6529:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10322      if(CachePtr->Status.Copied == (uint32)FEE_SET )      (inlined)
	jz.t	d15:2,.L805
.L6530:
	insert	d15,d15,#0,#2,#1
	st.b	[a15]10,d15
.L6531:
	addsc.a	a2,a13,d0,#2
	ld.w	d15,[a2]768
.L6532:
	st.w	[a15],d15
.L6533:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10326        CachePtr->Status.Copied = FEE_RESET;      (inlined)
	j	.L806

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10322      if(CachePtr->Status.Copied == (uint32)FEE_SET )      (inlined)
.L805:
	ld.bu	d15,[a15]10
.L6534:
	insert	d15,d15,#0,#5,#1
	st.b	[a15]10,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10329      else      (inlined)
.L806:
	lea	a15,[a15]24
.L6535:
	add	d0,#1
.L3804:
	extr.u	d0,d0,#0,#16

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10318        BlockIndex < StateDataPtr->FeeGcBlkIndexInWL;      (inlined)
.L803:
	ld.bu	d15,[a13]2517
.L6536:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10318        BlockIndex < StateDataPtr->FeeGcBlkIndexInWL;      (inlined)
	jlt.u	d0,d15,.L804
.L6537:
	mov	d15,#0
.L6538:
	st.b	[a13]2517,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10125          if(StateDataPtr->FeeGcBlkIndexInWL != FEE_RESET)      (inlined)
.L802:
	mov	d15,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10123        else /* FeeGcState == FEE_GC_COPY_WRITE */      (inlined)
.L801:
	st.b	[a12]2515,d15
.L2947:
	insert	d15,d11,#0,#0,#9
.L2950:
	addi	d15,d15,#512
.L2948:
	insert	d15,d15,#0,#0,#9
.L2952:
	addi	d15,d15,#512
.L2951:
	st.w	[a12]2444,d15
.L6539:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10132        DestAddr = Fee_lGetNextWLAddr(DestAddr);      (inlined)
	j	.L807

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10108      if(StateDataPtr->FeeIntrJobFailCount == FEE_RESET)      (inlined)
.L793:
	mov	d4,#3
.L6540:
	mov.u	d5,#65535
	call	Fee_lGcErrorHandler
.L3805:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10136      else      (inlined)
	j	.L808

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10101    if((ReturnVal == E_NOT_OK) ||      (inlined)
.L792:
	ld.hu	d15,[a12]2490
.L3808:
	extr.u	d0,d8,#0,#16
.L3809:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10146    else if(StateDataPtr->FeeComparedLen != (uint16)TmpCompareLength)      (inlined)
	jne	d15,d0,.L809
.L6541:
	mov	d1,#0
.L6542:
	st.h	[a12]2490,d1
.L6543:
	ld.w	d15,[a12]2448
.L6544:
	ld.w	d0,[a12]2482
.L6545:
	add	d15,d0
	st.w	[a12]2448,d15
.L6546:
	ld.w	d15,[a12]2444
.L6547:
	ld.w	d0,[a12]2482
.L6548:
	add	d15,d0
	st.w	[a12]2444,d15
.L6549:
	ld.hu	d15,[a12]2494
.L6550:
	ld.w	d0,[a12]2482
.L6551:
	sh	d0,#-3
.L6552:
	add	d15,d0
	st.h	[a12]2494,d15
.L6553:
	ld.hu	d0,[a12]2494
.L6554:
	ld.hu	d15,[a12]744
.L6555:
	add	d15,#1
.L6556:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10161      if (StateDataPtr->FeeBlkPageCount == (GcCurrBlkPtr->PageCount + FEE_ONE))      (inlined)
	jne	d15,d0,.L810
.L6557:
	ld.hu	d0,[a12]746
.L6558:
	ld.hu	d15,[a12]2508
.L6559:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10166        if (GcCurrBlkPtr->BlockNumber != StateDataPtr->FeeGcPrevBlockNumber)      (inlined)
	jeq	d15,d0,.L811
.L6560:
	st.b	[a12]2530,d1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10166        if (GcCurrBlkPtr->BlockNumber != StateDataPtr->FeeGcPrevBlockNumber)      (inlined)
.L811:
	ld.hu	d4,[a12]746
.L3810:
	ld.bu	d15,[a12]2515
.L6561:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10174        if(StateDataPtr->FeeGcState == FEE_GC_UNCFG_COPY_WRITE)      (inlined)
	jne	d15,#6,.L812
.L6562:
	ld.hu	d15,[a12]2504
.L6563:
	mul	d15,d15,#24
	addsc.a	a15,a15,d15,#0
.L6564:
	ld.bu	d15,[a15]10
.L6565:
	or	d15,#4
	st.b	[a15]10,d15
.L6566:
	ld.bu	d15,[a12]2517
.L6567:
	addsc.a	a2,a12,d15,#2
.L6568:
	ld.w	d15,[a15]
.L6569:
	st.w	[a2]768,d15
.L6570:
	ld.w	d15,[a12]2460
.L6571:
	st.w	[a15],d15
.L6572:
	ld.hu	d15,[a12]2504
.L6573:
	add	d15,#1
	st.h	[a12]2504,d15
.L6574:
	mov	d15,#16
.L6575:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10178                              [StateDataPtr->FeeGCUnconfigBlkCopyIndex]);      (inlined)
	j	.L813

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10174        if(StateDataPtr->FeeGcState == FEE_GC_UNCFG_COPY_WRITE)      (inlined)
.L812:
	call	Fee_lGetUsrBlockIndex
.L3807:
	mul	d15,d2,#24
	addsc.a	a15,a13,d15,#0
.L3806:
	ld.bu	d15,[a15]10
.L6576:
	or	d15,#4
	st.b	[a15]10,d15
.L6577:
	ld.bu	d15,[a12]2517
.L6578:
	addsc.a	a2,a12,d15,#2
.L6579:
	ld.w	d15,[a15]
.L6580:
	st.w	[a2]768,d15
.L6581:
	ld.w	d15,[a12]2460
.L6582:
	st.w	[a15],d15
.L6583:
	ld.hu	d15,[a12]2502
.L6584:
	add	d15,#1
	st.h	[a12]2502,d15
.L6585:
	mov	d15,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10188        else /* FEE_GC_COPY_WRITE */      (inlined)
.L813:
	st.b	[a12]2515,d15
.L6586:
	ld.hu	d15,[a12]746
.L6587:
	st.h	[a12]2508,d15
.L6588:
	ld.bu	d15,[a12]2517
.L6589:
	add	d15,#1
	st.b	[a12]2517,d15
.L6590:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10204        StateDataPtr->FeeGcPrevBlockNumber = GcCurrBlkPtr->BlockNumber;      (inlined)
	j	.L814

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10161      if (StateDataPtr->FeeBlkPageCount == (GcCurrBlkPtr->PageCount + FEE_ONE))      (inlined)
.L810:
	ld.bu	d15,[a12]2515
	ne	d15,d15,#6
.L6591:
	sha	d15,#1
.L6592:
	st.b	[a12]2515,d15
.L2915:
	j	.L815
.L789:
	ld.w	d8,[a12]2444
.L3811:
	j	.L816
.L817:
	insert	d15,d8,#0,#0,#9
.L2953:
	addi	d8,d15,#512
.L816:
	mov	d4,d8
	call	Fee_lIsUnerasableAddr
.L6593:
	jne	d2,#0,.L817
.L6594:
	st.w	[a12]2444,d8
.L6595:
	ld.hu	d15,[a12]2494
.L6596:
	jne	d15,#0,.L818
.L6597:
	ld.bu	d15,[a12]2512
	extr.u	d15,d15,#2,#1
.L6598:
	xor	d4,d15,#1
.L3812:
	mov	d5,d8
	call	Fee_lGetFreeDFLASHPages
.L3813:
	ld.hu	d15,[a12]744
.L2954:
	sub	d2,d15
.L3814:
	sha	d2,#3
.L6599:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6600:
	ld.w	d15,[a15]16
.L3815:
	lt	d15,d2,d15
.L3816:
	jeq	d15,#0,.L819
.L2955:
	mov	d9,#7
.L819:
.L818:
	jne	d9,#0,.L820
.L6601:
	and	d5,d8,#511
.L3817:
	jne	d5,#0,.L821
.L6602:
	ld.hu	d15,[a12]746
.L6603:
	st.h	[a12]2510,d15
.L6604:
	mov	d15,#0
.L6605:
	st.b	[a12]2517,d15
.L821:
	ld.hu	d15,[a12]2494
.L6606:
	jne	d15,#0,.L822
.L6607:
	st.w	[a12]2460,d8
.L822:
	mov	d4,d8
	call	Fee_lGcWrite
.L3781:
	mov	d9,d2
.L820:
.L815:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10208      else      (inlined)
.L814:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10152    else      (inlined)
.L809:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10146    else if(StateDataPtr->FeeComparedLen != (uint16)TmpCompareLength)      (inlined)
.L808:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10136      else      (inlined)
.L807:
.L788:
	mov	d2,d9
.L3818:
	ret
.L2904:
	
__Fee_lGcStartCopyWrite_function_end:
	.size	Fee_lGcStartCopyWrite,__Fee_lGcStartCopyWrite_function_end-Fee_lGcStartCopyWrite
.L1536:
	; End of function
	
	.sdecl	'.text.Fee_lGcCopyReadNxtPage.Code.Cpu0',code,cluster('Fee_lGcCopyReadNxtPage')
	.sect	'.text.Fee_lGcCopyReadNxtPage.Code.Cpu0'
	.align	2
	
; Function Fee_lGcCopyReadNxtPage
.L1164:
Fee_lGcCopyReadNxtPage:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6262:
	ld.a	a15,[a15]
.L3819:
	ld.w	d15,[a15]2444
.L6263:
	and	d15,d15,#511
.L3820:
	ld.w	d8,[a15]2448
.L3821:
	j	.L824
.L825:
	insert	d0,d8,#0,#0,#9
.L2791:
	addi	d8,d0,#512
.L824:
	mov	d4,d8
	call	Fee_lIsUnerasableAddr
.L6264:
	jne	d2,#0,.L825
.L6265:
	st.w	[a15]2448,d8
.L6266:
	mov	e4,d15,d8
	j	Fee_lGcRead
.L2786:
	
__Fee_lGcCopyReadNxtPage_function_end:
	.size	Fee_lGcCopyReadNxtPage,__Fee_lGcCopyReadNxtPage_function_end-Fee_lGcCopyReadNxtPage
.L1496:
	; End of function
	
	.sdecl	'.text.Fee_lGcErasePrevSector.Code.Cpu0',code,cluster('Fee_lGcErasePrevSector')
	.sect	'.text.Fee_lGcErasePrevSector.Code.Cpu0'
	.align	2
	
; Function Fee_lGcErasePrevSector
.L1166:
Fee_lGcErasePrevSector:	.type	func
	mov	d9,d4
.L3823:
	mov	d8,#0
.L3824:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6622:
	ld.a	a2,[a15]
.L3825:
	ld.bu	d0,[a2]2524
.L6623:
	jne	d0,#2,.L826
.L6624:
	st.b	[a2]2524,d8
.L6625:
	ld.bu	d15,[a2]2526
.L6626:
	jne	d15,#1,.L827
.L6627:
	ld.bu	d15,[a2]2536
.L6628:
	jne	d15,#0,.L828
.L6629:
	mov	d8,#5
.L6630:
	j	.L829
.L828:
.L827:
	ld.bu	d15,[a2]2526
.L6631:
	jne	d15,#0,.L830
.L6632:
	jne	d9,#3,.L831
.L6633:
	mov	d15,#10
.L6634:
	j	.L832
.L831:
	ld.w	d15,[a2]904
.L6635:
	add	d15,#1
	st.w	[a2]904,d15
.L6636:
	mov	d15,#12
.L832:
	st.b	[a2]2515,d15
.L6637:
	ld.w	d15,[a2]2444
.L6638:
	movh	d0,#8
.L6639:
	eq	d15,d15,d0
.L3827:
	mul	d15,d15,#40
.L3828:
	addsc.a	a15,a2,d15,#0
.L6640:
	mov	d15,#0
.L6641:
	st.b	[a15]36,d15
.L6642:
	st.w	[a15]4,d15
.L6643:
	st.w	[a15]8,d15
.L829:
	mov	d15,#0
.L6644:
	st.b	[a2]2530,d15
.L6645:
	j	.L833
.L830:
	mov	d0,#0
.L6646:
	st.b	[a2]2536,d0
.L6647:
	ld.bu	d15,[a2]2530
.L6648:
	jne	d15,#0,.L834
.L6649:
	add	d0,#1
	st.b	[a2]2530,d0
.L6650:
	j	.L835
.L826:
	ld.bu	d15,[a2]2533
.L6651:
	jeq	d15,#0,.L836
.L834:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6652:
	ld.a	a12,[a15]
.L3829:
	ld.bu	d15,[a12]2533
.L6653:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10508    if(StateDataPtr->FeeSectorCount == 0U)      (inlined)
	jne	d15,#0,.L837
.L6654:
	st.w	[a12]2468,d15
.L6655:
	st.w	[a12]2472,d15
.L6656:
	st.b	[a12]2532,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10508    if(StateDataPtr->FeeSectorCount == 0U)      (inlined)
.L837:
	ld.w	d4,[a12]2444
.L3822:
	movh	d15,#8
.L6657:
	eq	d10,d4,d15
.L3830:
	lea	a4,[a12]2468
.L6658:
	lea	a5,[a12]2532
.L6659:
	ld.bu	d5,[a12]2533
	call	Fls_17_Dmu_VerifySectorErase
.L3826:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10531    if(ReturnVal == E_NOT_OK)      (inlined)
	jne	d2,#1,.L838
.L6660:
	mov	d15,#0
.L6661:
	st.b	[a12]2530,d15
.L6662:
	mov	d4,#5
.L6663:
	mov.u	d5,#65535
	call	Fee_lGcErrorHandler
.L3831:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10539      StateDataPtr->FeeIntrJobFailCount = FEE_RESET;      (inlined)
	j	.L839

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10531    if(ReturnVal == E_NOT_OK)      (inlined)
.L838:
	ld.bu	d15,[a12]2533
.L6664:
	add	d15,#1
	st.b	[a12]2533,d15
.L6665:
	ld.bu	d0,[a12]2533
.L6666:
	mov	d15,#128
.L6667:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10548      if(StateDataPtr->FeeSectorCount == (uint8)FLS_ERASE_SECTORS)      (inlined)
	jne	d15,d0,.L840
.L6668:
	mul	d15,d10,#40
	addsc.a	a15,a12,d15,#0
.L6669:
	ld.bu	d15,[a12]2532
.L6670:
	st.b	[a15]36,d15
.L6671:
	ld.w	d15,[a12]2468
.L6672:
	st.w	[a15]4,d15
.L6673:
	ld.w	d15,[a12]2472
.L6674:
	st.w	[a15]8,d15
.L6675:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10557        if(GcState == FEE_GC_ERASE_PREV_SECTOR)      (inlined)
	jne	d9,#3,.L841
.L6676:
	mov	d15,#10
.L3832:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10559          NewGcState = FEE_GC_MARK_SECTOR0_E_SP;      (inlined)
	j	.L842

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10557        if(GcState == FEE_GC_ERASE_PREV_SECTOR)      (inlined)
.L841:
	ld.w	d15,[a12]904
.L6677:
	add	d15,#1
	st.w	[a12]904,d15
.L6678:
	mov	d15,#12

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10562        else      (inlined)
.L842:
	st.b	[a12]2515,d15
.L6679:
	mov	d15,#0
.L3833:
	st.b	[a12]2533,d15
.L6680:
	st.b	[a12]2530,d15
.L2976:
	j	.L843
.L836:
	mov	d15,#1
.L6681:
	st.b	[a2]2524,d15
.L6682:
	mov	d15,#2
.L6683:
	st.b	[a2]2523,d15
.L6684:
	ld.w	d4,[a2]2444
.L3834:
	movh	d5,#8
	call	Fls_17_Dmu_Erase
.L3835:
	jne	d2,#1,.L844
.L6685:
	mov	d8,#5
.L844:
.L843:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10548      if(StateDataPtr->FeeSectorCount == (uint8)FLS_ERASE_SECTORS)      (inlined)
.L840:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10542    else      (inlined)
.L839:
.L835:
.L833:
	mov	d2,d8
.L3836:
	ret
.L2968:
	
__Fee_lGcErasePrevSector_function_end:
	.size	Fee_lGcErasePrevSector,__Fee_lGcErasePrevSector_function_end-Fee_lGcErasePrevSector
.L1546:
	; End of function
	
	.sdecl	'.text.Fee_lGcProgramStatePage.Code.Cpu0',code,cluster('Fee_lGcProgramStatePage')
	.sect	'.text.Fee_lGcProgramStatePage.Code.Cpu0'
	.align	2
	
; Function Fee_lGcProgramStatePage
.L1168:
Fee_lGcProgramStatePage:	.type	func
	sub.a	a10,#8
.L3837:
	mov	d8,d4
.L3839:
	mov	d9,#0
.L3841:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6690:
	ld.a	a15,[a15]
.L3842:
	ld.bu	d0,[a15]2524
.L6691:
	jne	d0,#2,.L846
.L6692:
	mov	d0,d9
.L3844:
	st.b	[a15]2524,d0
.L6693:
	ld.bu	d15,[a15]2526
.L6694:
	jne	d15,#1,.L847
.L6695:
	ld.bu	d15,[a15]2537
.L6696:
	jne	d15,#0,.L848
.L6697:
	mov	d9,#3
.L3845:
	j	.L849
.L848:
.L847:
	mov	d12,d8
.L2994:
	mov	d10,#14
.L3846:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3843:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6698:
	ld.a	a12,[a15]
.L3847:
	ld.w	d11,[a12]2444
.L3848:
	lea	a4,[a12]1420
.L3849:
	mov	d2,#0
.L3850:
	ld.bu	d15,[a12]2537
.L6699:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10762    if(StateDataPtr->FeeProgVerErr == FEE_RESET)      (inlined)
	jne	d15,#0,.L850
.L6700:
	mov	d5,#32
	mov	d4,d11
.L3838:
	call	Fls_17_Dmu_CompareWordsSync

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10762    if(StateDataPtr->FeeProgVerErr == FEE_RESET)      (inlined)
.L850:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10782    if((ReturnVal1 == E_NOT_OK) || (StateDataPtr->FeeProgVerErr == FEE_SET))      (inlined)
	jeq	d2,#1,.L851
.L6701:
	ld.bu	d0,[a12]2537
.L6702:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10782    if((ReturnVal1 == E_NOT_OK) || (StateDataPtr->FeeProgVerErr == FEE_SET))      (inlined)
	jne	d0,#1,.L852
.L851:
	ld.bu	d15,[a12]2530
.L6703:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10785      if(StateDataPtr->FeeIntrJobFailCount == FEE_RESET)      (inlined)
	jne	d15,#0,.L853
.L6704:
	mov	d0,#0
.L6705:
	st.b	[a12]2537,d0
.L6706:
	ld.bu	d15,[a12]2530
.L6707:
	add	d15,#1
	st.b	[a12]2530,d15
.L3004:
	insert	d15,d11,#0,#0,#9
.L3007:
	addi	d15,d15,#512
.L3005:
	addi	d15,d15,#512
.L6708:
	st.w	[a12]2444,d15
.L6709:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10793        switch (GcState)      (inlined)
	mov	d15,#13
	jlt	d15,d8,.L855
	mov	d15,#8
	jlt	d8,d15,.L855
	sub	d15,d8,d15
	movh.a	a15,#@his(.2.jmp)
	lea	a15,[a15]@los(.2.jmp)
	addsc.a	a15,a15,d15,#2
	ld.a	a15,[a15]
	ji	a15
.L3840:
	
	.sdecl	'.rodata.Fee..2.jmp',data,rom
	.sect	'.rodata.Fee..2.jmp'
	.align	4
.2.jmp:	.type	object
	.word	.L856
	.word	.L857
	.word	.L858
	.word	.L859
	.word	.L860
	.word	.L861
	
	.sect	'.text.Fee_lGcProgramStatePage.Code.Cpu0'

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10797          case FEE_GC_MARK_SECTOR1_V_M:      (inlined)
.L857:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10796          case FEE_GC_MARK_SECTOR1_V_SP:      (inlined)
.L856:
	mov	d10,#8
.L6710:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10800            break;      (inlined)
	j	.L862

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10804          case FEE_GC_MARK_SECTOR0_E_M:      (inlined)
.L859:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10803          case FEE_GC_MARK_SECTOR0_E_SP:      (inlined)
.L858:
	mov	d10,#10
.L6711:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10807            break;      (inlined)
	j	.L863

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10812          case FEE_GC_INIT_MARK_SECTOR0_E_M:      (inlined)
.L861:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10811          case FEE_GC_INIT_MARK_SECTOR0_E_SP:      (inlined)
.L860:
	mov	d10,#12
.L6712:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10822        StateDataPtr->FeeGcState = NewGcState;      (inlined)
	j	.L864

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10785      if(StateDataPtr->FeeIntrJobFailCount == FEE_RESET)      (inlined)
.L853:
	mov	d4,#3
.L6713:
	mov.u	d5,#65535
	call	Fee_lGcErrorHandler
.L3852:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10824      else      (inlined)
	j	.L865

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10782    if((ReturnVal1 == E_NOT_OK) || (StateDataPtr->FeeProgVerErr == FEE_SET))      (inlined)
.L852:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6714:
	ld.a	a13,[a15]
.L3853:
	ld.w	d3,[a13]2444
.L3854:
	lea	a14,[a13]2514
.L3855:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10882      switch (GcState)      (inlined)
	mov	d0,#13
	jlt	d0,d12,.L867
	mov	d15,#8
	jlt	d12,d15,.L867
	sub	d15,d12,d15
	movh.a	a15,#@his(.3.jmp)
	lea	a15,[a15]@los(.3.jmp)
	addsc.a	a15,a15,d15,#2
	ld.a	a15,[a15]
	ji	a15
.L3851:
	
	.sdecl	'.rodata.Fee..3.jmp',data,rom
	.sect	'.rodata.Fee..3.jmp'
	.align	4
.3.jmp:	.type	object
	.word	.L868
	.word	.L869
	.word	.L870
	.word	.L871
	.word	.L872
	.word	.L873
	
	.sect	'.text.Fee_lGcProgramStatePage.Code.Cpu0'

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10885        case FEE_GC_MARK_SECTOR1_V_SP:      (inlined)
.L868:
	mov	d10,#9
.L3025:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10888          break;      (inlined)
	j	.L874

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10892        case FEE_GC_MARK_SECTOR1_V_M:      (inlined)
.L869:
	mov	d0,#0
.L6715:
	st.b	[a13]2530,d0
.L6716:
	ld.bu	d1,[a13]2512
.L6717:
	extr.u	d2,d1,#2,#1
.L3861:
	xor	d2,d2,#1
	insert	d1,d1,d2,#2,#1
	st.b	[a13]2512,d1
.L6718:
	extr.u	d8,d1,#2,#1
.L3859:
	mul	d15,d8,#40
	addsc.a	a15,a13,d15,#0
.L3863:
	st.w	[a15]28,d3
.L6719:
	mov	d15,d3
.L3038:
	insert	d15,d15,#0,#0,#9
.L3040:
	addi	d15,d15,#512
.L3039:
	st.w	[a15]32,d15
.L6720:
	st.w	[a13]2452,d15
.L6721:
	st.h	[a13]734,d0
.L6722:
	ld.bu	d15,[a13]736
.L6723:
	insert	d15,d15,#0,#1,#1
	st.b	[a13]736,d15
.L6724:
	ld.w	d5,[a15]32
	mov	d4,d8
.L3865:
	call	Fee_lGetFreeDFLASHPages
.L3856:
	mov	d15,#64
.L3041:
	sub	d2,d15
.L3866:
	sha	d2,#3
.L6725:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3864:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6726:
	ld.w	d15,[a15]16
.L3867:
	lt	d15,d2,d15
.L3868:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10916          if ((boolean)TRUE ==      (inlined)
	jeq	d15,#0,.L875
.L3042:
	mov	d15,#10
.L3869:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10934            break;      (inlined)
	j	.L876

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10916          if ((boolean)TRUE ==      (inlined)
.L875:
	eq	d15,d8,#0
.L3870:
	sh	d15,d15,#19
.L6727:
	st.w	[a13]2444,d15
.L6728:
	ld.bu	d0,[a14]
.L6729:
	mov	d15,#8
.L6730:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10948          if((*PendReqStatePtr == FEE_REQ_NORM_WRITE) ||      (inlined)
	jeq	d15,d0,.L877
.L6731:
	mov	d15,#9
.L6732:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10949              (*PendReqStatePtr == FEE_REQ_IMM_WRITE))      (inlined)
	jne	d15,d0,.L878

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10948          if((*PendReqStatePtr == FEE_REQ_NORM_WRITE) ||      (inlined)
.L877:
	ld.hu	d4,[a13]760
.L3871:
	call	Fee_lGetUsrBlockIndex
.L3872:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6733:
	ld.a	a2,[a15]4
.L6734:
	addsc.a	a14,a2,d2,#3
.L3046:
	mov	d8,#1
.L3862:
	ld.a	a15,[a15]
.L3874:
	st.a	[a10],a15
.L3876:
	ld.bu	d15,[a15]2512
	extr.u	d10,d15,#2,#1
.L3860:
	ld.w	d11,[a15]2452
.L3857:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14016    if (StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus == (uint32)FEE_SET )      (inlined)
	jz.t	d15:3,.L879
.L6735:
	mov	d12,#2
.L3877:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14018      BlkPages = FEE_INVALID_BLOCK_PAGES;      (inlined)
	j	.L880

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14016    if (StateDataPtr->FeeStatusFlags.FeeBlkInvalidStatus == (uint32)FEE_SET )      (inlined)
.L879:
	ld.hu	d4,[a14]6
	call	Fee_lGetDFLASHPages
.L3873:
	mov	d12,d2

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14020    else      (inlined)
.L880:
	and	d15,d11,#511
.L3057:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14027    if(Fee_lIsWLBeginning(DestAddr) == FEE_NEW_WL_BEGIN)      (inlined)
	jeq	d15,#0,.L881
.L3059:
	insert	d0,d11,#0,#0,#9
.L3061:
	addi	d0,d0,#512
.L3060:
	addi	d5,d0,#512
.L3878:
	mov	d4,d10
.L3880:
	call	Fee_lGetFreeDFLASHPages
.L3879:
	extr.u	d0,d11,#3,#6
.L3882:
	add	d0,d12
.L3062:
	sub	d2,d0
.L3881:
	sha	d2,#3
.L6736:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3875:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6737:
	ld.w	d15,[a15]16
.L6738:
	lt	d15,d2,d15
.L3883:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14056      if ((boolean)TRUE == Fee_lIsSectorThresholdCrossed((uint32)RemainingPages,      (inlined)
	jeq	d15,#0,.L882
.L3063:
	insert	d15,d11,#0,#0,#9
.L3066:
	addi	d11,d15,#512
.L3065:
	ld.a	a15,[a10]
.L3884:
	st.w	[a15]2452,d11

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14056      if ((boolean)TRUE == Fee_lIsSectorThresholdCrossed((uint32)RemainingPages,      (inlined)
.L882:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14031    else      (inlined)
.L881:
	mov	e4,d11,d10
	call	Fee_lGetFreeDFLASHPages
.L3067:
	sub	d0,d2,d12
	sha	d0,#3
.L6739:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6740:
	ld.w	d15,[a15]16
.L6741:
	lt	d15,d0,d15
.L3885:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14068    if ((boolean)TRUE == Fee_lIsSectorThresholdCrossed((uint32)RemainingPages,      (inlined)
	jeq	d15,#0,.L883
.L3068:
	ld.bu	d15,[a14]3
.L3886:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14074      if( (BlockPtr->FeeImmediateData == (uint32)FEE_NORMAL_DATA) ||      (inlined)
	jeq	d15,#0,.L884
.L6742:
	ld.a	a15,[a10]
.L3887:
	ld.bu	d15,[a15]2512
.L6743:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14076           == (uint32)FEE_SET )      (inlined)
	jnz.t	d15:3,.L885
.L6744:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14086        if(RemainingPages < BlkPages)      (inlined)
	jlt.u	d2,d12,.L886
.L6745:
	mov	d15,#1
.L6746:
	st.b	[a15]2535,d15
.L6747:
	mov	d8,#0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14091        else      (inlined)
.L886:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14082      else      (inlined)
.L885:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14074      if( (BlockPtr->FeeImmediateData == (uint32)FEE_NORMAL_DATA) ||      (inlined)
.L884:
	ld.a	a15,[a10]
.L3888:
	ld.bu	d0,[a15]2515
.L6748:
	mov	d15,#14
.L6749:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14100      if (StateDataPtr->FeeGcState == FEE_GC_IDLE)      (inlined)
	jne	d15,d0,.L887
.L6750:
	ld.bu	d15,[a15]2534
.L6751:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14104        if(StateDataPtr->FeeDisableGCStart == (boolean)FALSE)      (inlined)
	jne	d15,#0,.L888
.L6752:
	mov	d15,#5
.L6753:
	st.b	[a15]2515,d15
.L6754:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14100      if (StateDataPtr->FeeGcState == FEE_GC_IDLE)      (inlined)
	j	.L889

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14068    if ((boolean)TRUE == Fee_lIsSectorThresholdCrossed((uint32)RemainingPages,      (inlined)
.L883:
	mov	d8,#0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14112    else      (inlined)
.L889:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14104        if(StateDataPtr->FeeDisableGCStart == (boolean)FALSE)      (inlined)
.L888:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14100      if (StateDataPtr->FeeGcState == FEE_GC_IDLE)      (inlined)
.L887:
	mov	d15,d8
.L3047:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10957            if (E_NOT_OK == Fee_lPerformCurrBlkCheck(PendReqBlkPtr))      (inlined)
	jeq	d15,#0,.L890
.L6755:
	mov	d15,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11019      return NewGcState;      (inlined)
.L876:
	mov	d4,#7
.L6756:
	mov.u	d5,#65535
	call	Fee_lGcErrorHandler
.L6757:
	st.b	[a13]2514,d15
.L6758:
	mov	d15,#0
.L6759:
	st.b	[a13]2524,d15
.L6760:
	mov	d15,#1
.L6761:
	st.b	[a13]2526,d15
.L3030:
	mov	d10,#15
.L3031:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10971              break;      (inlined)
	j	.L891

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10957            if (E_NOT_OK == Fee_lPerformCurrBlkCheck(PendReqBlkPtr))      (inlined)
.L890:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10948          if((*PendReqStatePtr == FEE_REQ_NORM_WRITE) ||      (inlined)
.L878:
	mov	d10,#3
.L3032:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10983          break;      (inlined)
	j	.L892

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10986        case FEE_GC_MARK_SECTOR0_E_SP:      (inlined)
.L870:
	mov	d10,#11
.L3033:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10990          break;      (inlined)
	j	.L893

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10993        case FEE_GC_INIT_MARK_SECTOR0_E_SP:      (inlined)
.L872:
	mov	d10,#13
.L3034:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10996          break;      (inlined)
	j	.L894

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11000        case FEE_GC_INIT_MARK_SECTOR0_E_M:      (inlined)
.L873:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10999        case FEE_GC_MARK_SECTOR0_E_M:      (inlined)
.L871:
	mov	d0,#0
.L6762:
	st.b	[a13]2530,d0
.L6763:
	ld.bu	d0,[a13]2512
	extr.u	d0,d0,#2,#1
.L6764:
	xor	d15,d0,#1
.L3890:
	mul	d15,d15,#40
.L3891:
	addsc.a	a15,a13,d15,#0
.L3892:
	st.w	[a15]28,d3
.L3070:
	insert	d15,d3,#0,#0,#9
.L3072:
	addi	d15,d15,#512
.L3071:
	st.w	[a15]32,d15
.L3035:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3893:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6765:
	ld.a	a15,[a15]
.L3894:
	mov	d15,#11
.L6766:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11053      if (GcState == FEE_GC_MARK_SECTOR0_E_M)      (inlined)
	jne	d15,d8,.L895
.L6767:
	mov	d10,#14
.L6768:
	ld.bu	d15,[a15]2538
.L6769:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11062      if(StateDataPtr->FeeSetModeReqPend == FEE_SET)      (inlined)
	jne	d15,#1,.L896
.L6770:
	ld.bu	d4,[a15]2539
	call	Fls_17_Dmu_SetMode
.L3889:
	mov	d15,#0
.L6771:
	st.b	[a15]2538,d15
.L6772:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11062      if(StateDataPtr->FeeSetModeReqPend == FEE_SET)      (inlined)
	j	.L897

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11053      if (GcState == FEE_GC_MARK_SECTOR0_E_M)      (inlined)
.L895:
	mov	d10,#5

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11072      else      (inlined)
.L897:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11062      if(StateDataPtr->FeeSetModeReqPend == FEE_SET)      (inlined)
.L896:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11019      return NewGcState;      (inlined)
.L894:
.L893:
.L892:
.L891:
.L874:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11014        default:      (inlined)
.L867:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10824      else      (inlined)
.L864:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10822        StateDataPtr->FeeGcState = NewGcState;      (inlined)
.L863:
.L862:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10817        default:      (inlined)
.L855:
	st.b	[a12]2515,d10
.L2995:
	j	.L898
.L846:
	ld.w	d10,[a15]2444
.L3896:
	movh	d15,#8
.L6773:
	ge.u	d4,d10,d15
.L3895:
	mov	d15,#13
	jlt	d15,d8,.L900
	mov	d15,#8
	jlt	d8,d15,.L900
	sub	d15,d8,d15
	movh.a	a2,#@his(.4.jmp)
	lea	a2,[a2]@los(.4.jmp)
	addsc.a	a2,a2,d15,#2
	ld.a	a2,[a2]
	ji	a2
.L3858:
	
	.sdecl	'.rodata.Fee..4.jmp',data,rom
	.sect	'.rodata.Fee..4.jmp'
	.align	4
.4.jmp:	.type	object
	.word	.L901
	.word	.L902
	.word	.L903
	.word	.L904
	.word	.L905
	.word	.L906
	
	.sect	'.text.Fee_lGcProgramStatePage.Code.Cpu0'
.L905:
.L903:
.L901:
	ld.bu	d15,[a15]2530
.L6774:
	jne	d15,#0,.L907
.L6775:
	mov	d15,#8
.L6776:
	jne	d15,d8,.L908
.L6777:
	mov	d5,#209
	call	Fee_lPrepareStatePageBuffer
.L3897:
	j	.L911
.L908:
	mov	d5,#30
	call	Fee_lPrepareStatePageBuffer
.L3899:
	j	.L911
.L907:
	call	Fee_lClearMarkerBuffer
.L3900:
	j	.L911
.L912:
	mov	d15,d10
.L3073:
	insert	d15,d15,#0,#0,#9
.L3074:
	addi	d10,d15,#512
.L911:
	mov	d4,d10
	call	Fee_lIsUnerasableAddr
.L6778:
	jne	d2,#0,.L912
.L6779:
	st.w	[a15]2444,d10
.L6780:
	ld.bu	d15,[a15]2512
	extr.u	d15,d15,#2,#1
.L6781:
	xor	d4,d15,#1
.L3901:
	mov	d5,d10
	call	Fee_lGetFreeDFLASHPages
.L3076:
	lt.u	d15,d2,#64
.L3902:
	jeq	d15,#0,.L913
.L3077:
	mov	d9,#7
.L6782:
	j	.L914
.L913:
	mov	d15,#120
.L3903:
	mov	d5,#0
	mov	d4,d10
.L6783:
	j	.L915
.L906:
.L904:
.L902:
	call	Fee_lPrepareMarkerBuffer
.L3904:
	mov	d15,#8
.L6784:
	add	d4,d10,#120
.L6785:
	mov	d5,#120
.L915:
	st.w	[a15]2486,d15
.L6786:
	call	Fee_lGcWrite
.L3898:
	mov	d9,d2
.L914:
.L900:
.L898:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 10834    else      (inlined)
.L865:
.L849:
	mov	d2,d9
.L3905:
	ret
.L2984:
	
__Fee_lGcProgramStatePage_function_end:
	.size	Fee_lGcProgramStatePage,__Fee_lGcProgramStatePage_function_end-Fee_lGcProgramStatePage
.L1551:
	; End of function
	
	.sdecl	'.text.Fee_lGarbageCollection.Code.Cpu0',code,cluster('Fee_lGarbageCollection')
	.sect	'.text.Fee_lGarbageCollection.Code.Cpu0'
	.align	2
	
; Function Fee_lGarbageCollection
.L1170:
Fee_lGarbageCollection:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6271:
	ld.a	a12,[a15]
.L3906:
	call	Fee_lGcPrologue
.L6272:
	ld.bu	d15,[a12]2515
.L6273:
	jne	d15,#5,.L917
.L2797:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6274:
	ld.a	a2,[a15]
.L3907:
	lea	a15,[a2]80
.L3908:
	mov	d0,#0
.L3910:
	movh.a	a4,#@his(Fee_CfgPtr)

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9374    } while(BlockCount != Fee_CfgPtr->FeeBlkCnt);      (inlined)
.L918:
	ld.bu	d15,[a15]10
.L6275:
	insert	d15,d15,#0,#2,#1
.L6276:
	insert	d15,d15,#0,#5,#1
	st.b	[a15]10,d15
.L6277:
	add	d0,#1
.L3911:
	extr.u	d0,d0,#0,#16
.L3912:
	lea	a15,[a15]24
.L6278:
	ld.a	a5,[a4]@los(Fee_CfgPtr)
.L6279:
	ld.hu	d15,[a5]20
.L6280:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9374    } while(BlockCount != Fee_CfgPtr->FeeBlkCnt);      (inlined)
	jne	d15,d0,.L918
.L6281:
	ld.bu	d15,[a2]2512
.L6282:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9377    if(StateDataPtr->FeeStatusFlags.FeeCurrSector == (uint32)FEE_SECTOR0)      (inlined)
	jnz.t	d15:2,.L919
.L6283:
	ld.w	d15,[a2]72
.L6284:
	st.w	[a2]2444,d15
.L6285:
	mov	d15,#0
.L6286:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9379      StateDataPtr->FeeGcDestAddr = StateDataPtr->FeeSectorInfo[1].NextFreeWLAddr;      (inlined)
	j	.L920

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9377    if(StateDataPtr->FeeStatusFlags.FeeCurrSector == (uint32)FEE_SECTOR0)      (inlined)
.L919:
	ld.w	d15,[a2]32
.L6287:
	st.w	[a2]2444,d15
.L6288:
	movh	d15,#8

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9382    else      (inlined)
.L920:
	st.w	[a2]2448,d15
.L6289:
	mov	d0,#0
.L6290:
	st.h	[a2]2494,d0
.L6291:
	ld.bu	d15,[a2]2512
.L6292:
	insert	d15,d15,#0,#0,#1
	st.b	[a2]2512,d15
.L6293:
	st.h	[a2]2502,d0
.L6294:
	mov	d1,#1
.L3914:
	st.b	[a2]2517,d0
.L6295:
	mov.aa	a15,a4
.L3909:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6296:
	ld.bu	d15,[a15]22
.L6297:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9400    if ((Fee_CfgPtr->FeeGCConfigSetting.FeeUnconfigBlock ==      (inlined)
	jz.t	d15:0,.L921
.L6298:
	ld.hu	d15,[a2]2506
.L6299:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9402        && (StateDataPtr->FeeUnConfigBlockCount != FEE_RESET))      (inlined)
	jeq	d15,#0,.L922
.L6300:
	mov.aa	a15,a4
.L6301:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9406      while(BlockCount < StateDataPtr->FeeUnConfigBlockCount)      (inlined)
	j	.L923
.L924:
	ld.a	a4,[a15]@los(Fee_CfgPtr)
.L6302:
	ld.hu	d15,[a4]20
.L6303:
	add	d15,d0
.L6304:
	mul	d15,d15,#24
	addsc.a	a4,a2,d15,#0
.L6305:
	ld.bu	d15,[a4]90
.L6306:
	insert	d15,d15,#0,#2,#1
	st.b	[a4]90,d15
.L6307:
	add	d0,#1
.L3913:
	extr.u	d0,d0,#0,#16

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9406      while(BlockCount < StateDataPtr->FeeUnConfigBlockCount)      (inlined)
.L923:
	ld.hu	d15,[a2]2506
.L6308:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9406      while(BlockCount < StateDataPtr->FeeUnConfigBlockCount)      (inlined)
	jlt.u	d0,d15,.L924
.L6309:
	mov	d15,#0
.L6310:
	st.h	[a2]2504,d15
.L6311:
	mov	d1,#16

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9400    if ((Fee_CfgPtr->FeeGCConfigSetting.FeeUnconfigBlock ==      (inlined)
.L922:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	  9402        && (StateDataPtr->FeeUnConfigBlockCount != FEE_RESET))      (inlined)
.L921:
	st.b	[a2]2515,d1
.L917:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19076      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19077    #if (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19078    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19079    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19080    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19081      /*[cover parentID={5921193C-62AF-4957-AFCB-31CD52ECD989}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19082      if(StateDataPtr->FeeEraseSuspendStatus < FEE_RESUME_ERASE_LIMIT)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19083      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19084        /* [cover parentID={80C27FFF-BC04-4758-B6E5-3696C361C36F}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19085        Resume erase operation
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19086        [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19087        /*[cover parentID={3C1A8023-910E-45f6-A5FF-928F35205A16}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19088        if(E_OK == Fls_17_Dmu_ResumeErase())
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19089        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19090          /*[cover parentID={BBDCAA49-9A4C-4b31-835B-498C848D9A09}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19091          StateDataPtr->FeeEraseSuspendStatus = FEE_ERASE_NOT_SUSPENDED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19092        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19093        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19094        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19095          StateDataPtr->FeeEraseSuspendStatus++;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19096          /*[cover parentID={81909B46-2A7E-4582-A431-7757B992477D}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19097          /* [cover parentID={9E85D234-B457-4074-B933-C9C6DA3043BA}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19098            Check for erase suspend status
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19099          [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19100          if(FEE_RESUME_ERASE_LIMIT ==
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19101              StateDataPtr->FeeEraseSuspendStatus)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19102          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19103            /* Erased failed raise the illegal notification.block index
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19104            parameter is not used for erase error,so passed as parameter not
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19105            used.Block index is used only for read error to drop the block
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19106            from GC process. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19107            /*[cover parentID={ED591944-DD3B-4ea1-A50C-E0BCCDE5D0CC}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19108            Fee_lGcErrorHandler(FEE_GC_ERASE, FEE_UNUSED_PARAM);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19109          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19110        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19111      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19112    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19113    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19114  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19115  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19116  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19117  ** Syntax : LOCAL_INLINE void Fee_lHandleGcCopy(void)                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19118  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19119  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19120  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19121  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19122  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19123  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19124  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19125  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19126  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19127  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19128  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19129  ** Return value    :  Uint8 : GC error code                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19130  **                    FEE_GC_WRITE : GC write operation failed.               **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19131  **                    FEE_GC_READ : GC Read operation failed.                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19132  ** Description : This function handle the GC read , write operation as per GC **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19133  ** state . This function is called from Fee_lGarbageCollection function.      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19134  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19135  /*[cover parentID={63F8D762-7E5A-4d8e-89B0-A2FEE60D0CCB}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19136  LOCAL_INLINE  uint8 Fee_lHandleGcCopy(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19137  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19138    const Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19139    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6312:
	ld.a	a15,[a15]
.L2819:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19140    uint8                  Error;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19141    Error = FEE_GC_E_OK;
	mov	d8,#0
.L3915:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19142  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19143    /********* FEE_GC_UNCFG_START_COPY *******/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19144    /*  Reading the first page of an Unconfig block is done here */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19145    /* [cover parentID={9125A3B6-EBF3-4c87-BB26-7DBDCC8511FA}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19146    Check if GC has to start copying unconfig blocks
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19147    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19148    if(StateDataPtr->FeeGcState == FEE_GC_UNCFG_START_COPY)
	ld.bu	d0,[a15]2515
.L6313:
	mov	d15,#16
.L6314:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19148    if(StateDataPtr->FeeGcState == FEE_GC_UNCFG_START_COPY)      (inlined)
	jne	d15,d0,.L925
.L6315:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19149    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19150      /*[cover parentID={EC542E78-FD4E-4094-827C-E727E45922C7}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19151      Fee_lGcStartCopy();
	call	Fee_lGcStartCopy

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19148    if(StateDataPtr->FeeGcState == FEE_GC_UNCFG_START_COPY)      (inlined)
.L925:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19152  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19153    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19154  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19155    /*********** FEE_GC_UNCFG_COPY_WRITE *******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19156    /* [cover parentID={78F787F6-47A6-4077-9E99-7681FB79AD9A}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19157    Check if GC has to start to write unconfig block
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19158    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19159    /*  Writing a page of an unconfigure block is done here */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19160    if(StateDataPtr->FeeGcState == FEE_GC_UNCFG_COPY_WRITE)
	ld.bu	d15,[a15]2515
.L6316:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19160    if(StateDataPtr->FeeGcState == FEE_GC_UNCFG_COPY_WRITE)      (inlined)
	jne	d15,#6,.L926
.L6317:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19161    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19162      /*[cover parentID={563929C9-2AFB-4834-9C67-D62A473BEEBF}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19163      Error = Fee_lGcStartCopyWrite();
	call	Fee_lGcStartCopyWrite
.L3916:
	mov	d8,d2

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19160    if(StateDataPtr->FeeGcState == FEE_GC_UNCFG_COPY_WRITE)      (inlined)
.L926:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19164    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19165  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19166    /*********** FEE_GC_UNCFG_COPY_READ_NXTPAGE *******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19167    /*  Reading the subsequent pages of an Unconfigure block is done here */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19168    /*[cover parentID={6760C467-873C-40d6-8A66-F5A73B18D641}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19169    if(StateDataPtr->FeeGcState == FEE_GC_UNCFG_COPY_READ_NXTPAGE)
	ld.bu	d15,[a15]2515
.L6318:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19169    if(StateDataPtr->FeeGcState == FEE_GC_UNCFG_COPY_READ_NXTPAGE)      (inlined)
	jne	d15,#0,.L927
.L6319:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19170    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19171      Fee_lGcCopyReadNxtPage();
	call	Fee_lGcCopyReadNxtPage

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19169    if(StateDataPtr->FeeGcState == FEE_GC_UNCFG_COPY_READ_NXTPAGE)      (inlined)
.L927:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19172  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19173    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19174  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19175  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19176    /*********** FEE_GC_START_COPY *******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19177    /* [cover parentID={9C849D4D-AB46-45a8-87B0-F4DA96ACE8B9}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19178    /*  Reading the first page of a Configure block is done here */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19179    if(StateDataPtr->FeeGcState == FEE_GC_START_COPY)
	ld.bu	d15,[a15]2515
.L6320:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19179    if(StateDataPtr->FeeGcState == FEE_GC_START_COPY)      (inlined)
	jne	d15,#1,.L928
.L6321:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19180    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19181      /*[cover parentID={560892F1-209A-4f70-A718-4BE7C6DAD395}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19182      Fee_lGcStartCopy();
	call	Fee_lGcStartCopy

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19179    if(StateDataPtr->FeeGcState == FEE_GC_START_COPY)      (inlined)
.L928:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19183  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19184    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19185  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19186  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19187    /*********** FEE_GC_COPY_WRITE *******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19188    /*  Writing a page of a Configure block is done here */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19189    /*[cover parentID={96E8EE84-B8A1-4bc4-B33E-9BBE8AAC5A2B}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19190    if(StateDataPtr->FeeGcState == FEE_GC_COPY_WRITE)
	ld.bu	d15,[a15]2515
.L6322:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19190    if(StateDataPtr->FeeGcState == FEE_GC_COPY_WRITE)      (inlined)
	jne	d15,#7,.L929
.L6323:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19191    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19192      /*[cover parentID={3168C533-96A8-440a-9372-52A243E91183}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19193      Error = Fee_lGcStartCopyWrite();
	call	Fee_lGcStartCopyWrite
.L3917:
	mov	d8,d2

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19190    if(StateDataPtr->FeeGcState == FEE_GC_COPY_WRITE)      (inlined)
.L929:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19194    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19195  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19196  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19197    /*********** FEE_GC_COPY_READ_NXTPAGE *******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19198    /*  Reading the subsequent pages of a Configure block is done here */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19199    /*[cover parentID={94A978B9-20DF-4560-B067-5A736A5D6062}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19200    if(StateDataPtr->FeeGcState == FEE_GC_COPY_READ_NXTPAGE)
	ld.bu	d15,[a15]2515
.L6324:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19200    if(StateDataPtr->FeeGcState == FEE_GC_COPY_READ_NXTPAGE)      (inlined)
	jne	d15,#2,.L930
.L6325:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19201    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19202      /*[cover parentID={8D1A56A8-5412-4906-A310-4877D32C2C31}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19203      Fee_lGcCopyReadNxtPage();
	call	Fee_lGcCopyReadNxtPage

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19200    if(StateDataPtr->FeeGcState == FEE_GC_COPY_READ_NXTPAGE)      (inlined)
.L930:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19204  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19205    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19206  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19207    /*********** FEE_GC_MARK_SECTOR1_V_SP *******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19208    /*  Writing the valid state page content is done here */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19209    /*[cover parentID={F772B3BA-89DC-431b-BE4D-C47367057ECC}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19210    if(StateDataPtr->FeeGcState == FEE_GC_MARK_SECTOR1_V_SP)
	ld.bu	d15,[a15]2515
.L6326:
	mov	d4,#8
.L6327:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19210    if(StateDataPtr->FeeGcState == FEE_GC_MARK_SECTOR1_V_SP)      (inlined)
	jne	d15,d4,.L931
.L6328:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19211    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19212      /*[cover parentID={7BC28FAC-3A6F-484e-8AB8-342BF55D1966}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19213      Error = Fee_lGcProgramStatePage(FEE_GC_MARK_SECTOR1_V_SP);
	call	Fee_lGcProgramStatePage
.L3918:
	mov	d8,d2

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19210    if(StateDataPtr->FeeGcState == FEE_GC_MARK_SECTOR1_V_SP)      (inlined)
.L931:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19214    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19215  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19216  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19217    /*********** FEE_GC_MARK_SECTOR1_V_M *******************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19218    /*  Writing the valid state page marker is done here */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19219    /*[cover parentID={45E0D28C-B56F-448d-A3C7-B4B906ADBB29}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19220    if(StateDataPtr->FeeGcState == FEE_GC_MARK_SECTOR1_V_M)
	ld.bu	d15,[a15]2515
.L6329:
	mov	d4,#9
.L6330:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19220    if(StateDataPtr->FeeGcState == FEE_GC_MARK_SECTOR1_V_M)      (inlined)
	jne	d15,d4,.L932
.L6331:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19221    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19222      /*[cover parentID={D8BFCCF6-B3B4-4ce8-9BBA-2E9E637B0E22}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19223      Error = Fee_lGcProgramStatePage(FEE_GC_MARK_SECTOR1_V_M);
	call	Fee_lGcProgramStatePage
.L3919:
	mov	d8,d2

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19220    if(StateDataPtr->FeeGcState == FEE_GC_MARK_SECTOR1_V_M)      (inlined)
.L932:
	ld.bu	d15,[a12]2515
.L6332:
	jne	d15,#3,.L933
.L6333:
	mov	d4,#3
	call	Fee_lGcErasePrevSector
.L2807:
	mov	d8,d2
.L933:
	ld.bu	d15,[a12]2515
.L6334:
	jne	d15,#4,.L934
.L6335:
	mov	d4,#4
	call	Fee_lGcErasePrevSector
.L2808:
	mov	d8,d2
.L934:
	ld.bu	d15,[a12]2515
.L6336:
	mov	d4,#10
.L6337:
	jne	d15,d4,.L935
.L6338:
	call	Fee_lGcProgramStatePage
.L2809:
	mov	d8,d2
.L935:
	ld.bu	d15,[a12]2515
.L6339:
	mov	d4,#12
.L6340:
	jne	d15,d4,.L936
.L6341:
	call	Fee_lGcProgramStatePage
.L2810:
	mov	d8,d2
.L936:
	ld.bu	d15,[a12]2515
.L6342:
	mov	d4,#11
.L6343:
	jne	d15,d4,.L937
.L6344:
	call	Fee_lGcProgramStatePage
.L2811:
	mov	d8,d2
.L937:
	ld.bu	d15,[a12]2515
.L6345:
	mov	d4,#13
.L6346:
	jne	d15,d4,.L938
.L6347:
	call	Fee_lGcProgramStatePage
.L2812:
	mov	d8,d2
.L938:
	jeq	d8,#0,.L939
.L2813:
	mov	d15,#0
.L6348:
	st.b	[a12]2524,d15
.L6349:
	mov	d0,#1
.L6350:
	st.b	[a12]2526,d0
.L6351:
	st.b	[a12]2523,d15
.L6352:
	mov.u	d5,#65535
.L2814:
	mov	d4,d8
.L2815:
	j	Fee_lGcErrorHandler
.L939:
	ret
.L2793:
	
__Fee_lGarbageCollection_function_end:
	.size	Fee_lGarbageCollection,__Fee_lGarbageCollection_function_end-Fee_lGarbageCollection
.L1501:
	; End of function
	
	.sdecl	'.text.Fee_lGetDFLASHPages.Code.Cpu0',code,cluster('Fee_lGetDFLASHPages')
	.sect	'.text.Fee_lGetDFLASHPages.Code.Cpu0'
	.align	2
	
; Function Fee_lGetDFLASHPages
.L1172:
Fee_lGetDFLASHPages:	.type	func
	mov	d15,#2
.L3920:
	j	.L940
.L941:
	add	d15,#1
.L3921:
	extr.u	d15,d15,#0,#16
.L3922:
	add	d4,#-7
.L940:
	jge.u	d4,#7,.L941
.L6791:
	ne	d0,d4,#0
.L6792:
	add	d15,d0
.L3923:
	extr.u	d2,d15,#0,#16
.L3924:
	ret
.L3084:
	
__Fee_lGetDFLASHPages_function_end:
	.size	Fee_lGetDFLASHPages,__Fee_lGetDFLASHPages_function_end-Fee_lGetDFLASHPages
.L1556:
	; End of function
	
	.sdecl	'.text.Fee_lGetFreeDFLASHPages.Code.Cpu0',code,cluster('Fee_lGetFreeDFLASHPages')
	.sect	'.text.Fee_lGetFreeDFLASHPages.Code.Cpu0'
	.align	2
	
; Function Fee_lGetFreeDFLASHPages
.L1174:
Fee_lGetFreeDFLASHPages:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6797:
	ld.a	a2,[a15]
.L3925:
	ne	d15,d4,#0
.L6798:
	sh	d0,d15,#19
.L6799:
	movh	d15,#8
.L3926:
	add	d0,d15
.L6800:
	sub	d1,d0,d5
.L6801:
	ge	d15,d1,#0
.L3927:
	caddn	d1,d15,#7
	sha	d1,#-3
.L6802:
	mov	d2,#0
.L3928:
	j	.L943
.L944:
	mul	d15,d4,#40
	addsc.a	a15,a2,d15,#0
.L6803:
	addsc.a	a15,a15,d2,#2
	ld.w	d15,[a15]4
.L3930:
	jlt.u	d15,d5,.L945
.L6804:
	ge.u	d15,d0,d15
.L3931:
	sha	d15,#6
.L6805:
	sub	d1,d15
.L945:
	add	d2,#1
.L3929:
	extr.u	d2,d2,#0,#8
.L943:
	mul	d15,d4,#40
	addsc.a	a15,a2,d15,#0
.L6806:
	ld.bu	d15,[a15]36
.L6807:
	jlt.u	d2,d15,.L944
.L6808:
	max	d2,d1,#0
.L3932:
	ret
.L3089:
	
__Fee_lGetFreeDFLASHPages_function_end:
	.size	Fee_lGetFreeDFLASHPages,__Fee_lGetFreeDFLASHPages_function_end-Fee_lGetFreeDFLASHPages
.L1561:
	; End of function
	
	.sdecl	'.text.Fee_lGetUsrBlockIndex.Code.Cpu0',code,cluster('Fee_lGetUsrBlockIndex')
	.sect	'.text.Fee_lGetUsrBlockIndex.Code.Cpu0'
	.align	2
	
; Function Fee_lGetUsrBlockIndex
.L1176:
Fee_lGetUsrBlockIndex:	.type	func
	mov	d0,#0
.L3933:
	mov	d15,d0
.L3934:
	mov.u	d2,#65535
.L3936:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4912:
	ld.hu	d1,[a15]20
.L3937:
	add	d1,#-1
.L4913:
	ld.a	a15,[a15]4
.L4914:
	addsc.a	a15,a15,d0,#3
.L3938:
	j	.L947
.L948:
	sub	d3,d1,d0
.L4915:
	ge	d15,d3,#0
.L3935:
	caddn	d3,d15,#1
	sha	d3,#-1
.L4916:
	add	d15,d0,d3
.L3940:
	addsc.a	a2,a15,d15,#3
.L4917:
	ld.hu	d3,[a2]4
.L4918:
	jne	d3,d4,.L949
.L4919:
	extr.u	d2,d15,#0,#16
.L4920:
	j	.L950
.L949:
	addsc.a	a2,a15,d15,#3
.L4921:
	ld.hu	d3,[a2]4
.L4922:
	jge.u	d3,d4,.L951
.L4923:
	add	d0,d15,#1
.L4924:
	j	.L952
.L951:
	add	d1,d15,#-1
.L952:
.L947:
	jge	d1,d0,.L948
.L950:
	addsc.a	a15,a15,d15,#3
.L3939:
	ld.hu	d15,[a15]4
.L3941:
	jeq	d15,d4,.L953
.L4925:
	mov.u	d2,#65535
.L953:
	ret
.L2089:
	
__Fee_lGetUsrBlockIndex_function_end:
	.size	Fee_lGetUsrBlockIndex,__Fee_lGetUsrBlockIndex_function_end-Fee_lGetUsrBlockIndex
.L1371:
	; End of function
	
	.sdecl	'.text.Fee_lUpdateCache.Code.Cpu0',code,cluster('Fee_lUpdateCache')
	.sect	'.text.Fee_lUpdateCache.Code.Cpu0'
	.align	2
	
; Function Fee_lUpdateCache
.L1178:
Fee_lUpdateCache:	.type	func
	sub.a	a10,#24
.L3942:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5099:
	ld.a	a15,[a15]
.L3943:
	st.a	[a10]4,a15
.L3945:
	ld.bu	d15,[a15]2512
.L5100:
	jnz.t	d15:2,.L955
.L5101:
	mov	d12,#0
.L3946:
	mov	d9,d12
.L3947:
	j	.L956
.L955:
	movh	d12,#8
.L3948:
	mov	d9,#1
.L956:
	mul	d15,d9,#40
	addsc.a	a2,a15,d15,#0
.L3949:
	st.a	[a10]16,a2
.L3950:
	ld.bu	d0,[a15]2520
.L5102:
	jne	d0,#0,.L957
.L2156:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3944:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5103:
	ld.a	a12,[a15]
.L3951:
	addsc.a	a15,a12,d15,#0
.L3952:
	mov	d8,#0
.L3954:
	ld.w	d15,[a15]32
.L5104:
	st.w	[a12]2452,d15
.L5105:
	ld.w	d15,[a15]32
.L5106:
	addi	d0,d15,#-512
.L3955:
	ld.w	d15,[a15]28
.L5107:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11507    if((TempAddrPrevWL != SectorInfoPtr->StatePageAddr) &&      (inlined)
	jeq	d15,d0,.L958
.L5108:
	ld.bu	d15,[a15]36
.L5109:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11508        (!((SectorInfoPtr->UnerasableWLCount != FEE_RESET) &&      (inlined)
	jeq	d15,#0,.L959
.L5110:
	ld.w	d15,[a15]4
.L5111:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11509           ((SectorInfoPtr->UnerasableWLAddr[0]  == TempAddrPrevWL) ||      (inlined)
	jeq	d15,d0,.L960
.L5112:
	ld.w	d15,[a15]8
.L5113:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11510            (SectorInfoPtr->UnerasableWLAddr[1]  == TempAddrPrevWL)))))      (inlined)
	jeq	d15,d0,.L961

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11508        (!((SectorInfoPtr->UnerasableWLCount != FEE_RESET) &&      (inlined)
.L959:
	ld.w	d13,[a15]32
.L3957:
	add	d10,d0,#8
.L3956:
	mov	d11,#156
.L5114:
	mov	d14,#163

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11557      } while ((TempAddr > TempAddrPrevWL) && (LoopEnd == FEE_RESET));      (inlined)
.L962:
	add	d13,#-8
.L5115:
	lea	a4,[a12]908
.L5116:
	mov	d5,#2
	mov	d4,d13
.L3958:
	call	Fls_17_Dmu_ReadWordsSync
.L3959:
	lea	a2,[a12]908
.L3960:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11534        if((RetVal == E_OK) && (*(TempDataPtr) == (uint32)FEE_RESET) &&      (inlined)
	jne	d2,#0,.L963
.L5117:
	ld.w	d15,[a2]
.L5118:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11534        if((RetVal == E_OK) && (*(TempDataPtr) == (uint32)FEE_RESET) &&      (inlined)
	jne	d15,#0,.L964
.L5119:
	ld.w	d15,[a12]912
.L5120:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11535            (TempDataPtr[1] == (uint32)FEE_RESET))      (inlined)
	jne	d15,#0,.L965
.L5121:
	st.w	[a12]2452,d13
.L5122:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11537          StateDataPtr->FeeNextFreePageAddr = TempAddr;      (inlined)
	j	.L966

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11534        if((RetVal == E_OK) && (*(TempDataPtr) == (uint32)FEE_RESET) &&      (inlined)
.L965:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11535            (TempDataPtr[1] == (uint32)FEE_RESET))      (inlined)
.L964:
.L963:
	mov	d8,#1
.L5123:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11542          if ((RetVal == E_OK) &&      (inlined)
	jne	d2,#0,.L967
.L5124:
	ld.bu	d15,[a12]908
.L5125:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11543              ((StateDataPtr->FeeReadWriteBuffer[0] == FEE_DATA_NEXT_PAGE_ID) ||      (inlined)
	jeq	d15,d11,.L968
.L5126:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11544               (StateDataPtr->FeeReadWriteBuffer[0] == FEE_DATA_FIRST_PAGE_ID)))      (inlined)
	jne	d15,d14,.L969

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11543              ((StateDataPtr->FeeReadWriteBuffer[0] == FEE_DATA_NEXT_PAGE_ID) ||      (inlined)
.L968:
	mov	d15,#2
.L5127:
	st.b	[a12]2513,d15
.L5128:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11546            StateDataPtr->FeeLastWrittenBlockDirty = FEE_LWB_CHECK_FOR_DIRTY;      (inlined)
	j	.L970

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11542          if ((RetVal == E_OK) &&      (inlined)
.L969:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11544               (StateDataPtr->FeeReadWriteBuffer[0] == FEE_DATA_FIRST_PAGE_ID)))      (inlined)
.L967:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11548          else if (RetVal != E_OK)      (inlined)
	jeq	d2,#0,.L971
.L5129:
	ld.w	d15,[a15]32
.L5130:
	st.w	[a12]2452,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11548          else if (RetVal != E_OK)      (inlined)
.L971:
.L970:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11539        else      (inlined)
.L966:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11557      } while ((TempAddr > TempAddrPrevWL) && (LoopEnd == FEE_RESET));      (inlined)
	jge.u	d10,d13,.L972
.L5131:
	jeq	d8,#0,.L962
.L972:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11507    if((TempAddrPrevWL != SectorInfoPtr->StatePageAddr) &&      (inlined)
.L961:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11510            (SectorInfoPtr->UnerasableWLAddr[1]  == TempAddrPrevWL)))))      (inlined)
.L960:
.L958:
	ld.a	a15,[a10]4
.L3953:
	ld.w	d15,[a15]2452
.L5132:
	add	d15,#-8
.L5133:
	st.w	[a15]2464,d15
.L5134:
	mov.u	d15,#65535
.L5135:
	st.h	[a15]2494,d15
.L5136:
	mov	d15,#1
.L5137:
	st.b	[a15]2520,d15
.L5138:
	j	.L973
.L957:
	ld.bu	d15,[a15]2520
.L5139:
	jne	d15,#1,.L974
.L5140:
	mov.u	d15,#65535
.L5141:
	st.h	[a15]2494,d15
.L973:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5142:
	ld.a	a12,[a15]
.L3961:
	lea	a13,[a12]908
.L3962:
	mov	d8,#0
.L3963:
	mov.u	d15,#44901
	addih	d15,d15,#62965
	st.w	[a10]12,d15
.L5143:
	mul	d15,d9,#40
	st.w	[a10]8,d15
.L5144:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11805            (StateDataPtr->FeeBlkPageCount!= FEE_ZERO))      (inlined)
	j	.L976
.L977:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5145:
	ld.a	a15,[a15]
.L3964:
	ld.w	d15,[a15]2464
.L5146:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12302    if( StateDataPtr->FeeCurrSectSrcAddr != EndAddr )      (inlined)
	jeq	d15,d12,.L978
.L5147:
	add	d15,#-8
	st.w	[a15]2464,d15
.L5148:
	ld.hu	d15,[a15]2494
.L5149:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12309      if(StateDataPtr->FeeBlkPageCount != FEE_ZERO)      (inlined)
	jeq	d15,#0,.L979
.L5150:
	add	d15,#-1
	st.h	[a15]2494,d15
.L5151:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12309      if(StateDataPtr->FeeBlkPageCount != FEE_ZERO)      (inlined)
	j	.L980

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12302    if( StateDataPtr->FeeCurrSectSrcAddr != EndAddr )      (inlined)
.L978:
	mov	d15,#3
.L5152:
	st.b	[a15]2520,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12314    else      (inlined)
.L980:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12309      if(StateDataPtr->FeeBlkPageCount != FEE_ZERO)      (inlined)
.L979:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11805            (StateDataPtr->FeeBlkPageCount!= FEE_ZERO))      (inlined)
.L976:
	ld.w	d4,[a12]2464
	call	Fee_lIsUnerasableAddr
.L5153:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11803      while((Fee_lIsUnerasableAddr(StateDataPtr->FeeCurrSectSrcAddr) == TRUE) &&      (inlined)
	jeq	d2,#0,.L981
.L5154:
	ld.bu	d15,[a12]2520
.L5155:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11804            (StateDataPtr->FeeCacheState != FEE_CACHE_UPDATE_COMPLETE) &&      (inlined)
	jeq	d15,#3,.L982
.L5156:
	ld.hu	d15,[a12]2494
.L5157:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11805            (StateDataPtr->FeeBlkPageCount!= FEE_ZERO))      (inlined)
	jne	d15,#0,.L977

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11804            (StateDataPtr->FeeCacheState != FEE_CACHE_UPDATE_COMPLETE) &&      (inlined)
.L982:
.L981:
	ld.bu	d15,[a12]2520
.L5158:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11811      if ((StateDataPtr->FeeCacheState != FEE_CACHE_UPDATE_COMPLETE) &&      (inlined)
	jeq	d15,#3,.L983
.L5159:
	ld.hu	d15,[a12]2494
.L5160:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11812          (StateDataPtr->FeeBlkPageCount!= FEE_ZERO))      (inlined)
	jeq	d15,#0,.L984
.L5161:
	ld.w	d4,[a12]2464
.L5162:
	mov	d5,#2
	mov.aa	a4,a13
.L3965:
	call	Fls_17_Dmu_ReadWordsSync
.L3966:
	ld.bu	d15,[a12]2513
.L5163:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11827        if(StateDataPtr->FeeLastWrittenBlockDirty == FEE_LWB_CHECK_FOR_DIRTY)      (inlined)
	jne	d15,#2,.L985
.L5164:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11830          if((RetVal == E_NOT_OK) ||      (inlined)
	jeq	d2,#1,.L986
.L5165:
	ld.bu	d0,[a13]
.L5166:
	mov	d15,#163
.L5167:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11831              ((ReadWriteBufferPtr[0] != FEE_DATA_FIRST_PAGE_ID) &&      (inlined)
	jeq	d15,d0,.L987
.L5168:
	mov	d15,#156
.L5169:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11832               (ReadWriteBufferPtr[0] != FEE_DATA_NEXT_PAGE_ID)))      (inlined)
	jeq	d15,d0,.L988

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11830          if((RetVal == E_NOT_OK) ||      (inlined)
.L986:
	mov	d15,#0
.L5170:
	st.b	[a12]2513,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11830          if((RetVal == E_NOT_OK) ||      (inlined)
.L988:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11832               (ReadWriteBufferPtr[0] != FEE_DATA_NEXT_PAGE_ID)))      (inlined)
.L987:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11827        if(StateDataPtr->FeeLastWrittenBlockDirty == FEE_LWB_CHECK_FOR_DIRTY)      (inlined)
.L985:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11838        if(RetVal == E_NOT_OK)      (inlined)
	jeq	d2,#1,.L989
.L5171:
	ld.bu	d0,[a13]
.L3967:
	ld.w	d1,[a13]
.L5172:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11861          if (WordValue[0] == FEE_DP_MARKER_WORD)      (inlined)
	ld.w	d15,[a10]12
	jne	d15,d1,.L990
.L5173:
	mov	d8,#0
.L5174:
	ld.bu	d15,[a12]915
.L5175:
	sha	d13,d15,#8
.L5176:
	ld.bu	d15,[a12]914
.L3968:
	or	d13,d15
.L5177:
	insert	d11,d13,#0,#15,#17
.L3969:
	ld.bu	d15,[a12]913
.L5178:
	sha	d10,d15,#8
.L5179:
	ld.bu	d15,[a12]912
.L3971:
	or	d10,d15
.L5180:
	ld.w	d9,[a12]2464
.L3973:
	ld.w	d15,[a10]8
	addsc.a	a15,a12,d15,#0
.L5181:
	ld.bu	d15,[a15]36
.L5182:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11874            if(StateDataPtr->FeeSectorInfo[BankNumber].UnerasableWLCount ==      (inlined)
	jne	d15,#0,.L991
.L5183:
	sh	d15,d11,#3
.L5184:
	sub	d14,d9,d15
.L3974:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11878                                   (uint32)PageCount << FEE_PAGE_TO_BYTE);      (inlined)
	j	.L992

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11874            if(StateDataPtr->FeeSectorInfo[BankNumber].UnerasableWLCount ==      (inlined)
.L991:
	sh	d15,d11,#3
.L3975:
	mov	d14,d9

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12094    } while(BlockSize > FEE_ZERO);      (inlined)
.L993:
	add	d14,#-8
.L5185:
	mov	d4,d14
.L3976:
	call	Fee_lIsUnerasableAddr
.L3977:
	eq	d0,d2,#0
	sh	d0,#3
.L5186:
	sub	d15,d0
.L5187:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12094    } while(BlockSize > FEE_ZERO);      (inlined)
	jne	d15,#0,.L993

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11880            else      (inlined)
.L992:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11886            if((LWBHeaderAddress > EndAddr) && (PageCount1 != FEE_RESET) &&      (inlined)
	jge.u	d12,d14,.L994
.L5188:
	jeq	d13,#0,.L995
.L5189:
	movh	d15,#16
.L5190:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11887                (LWBHeaderAddress < (FEE_DFLASH_SECTOR_SIZE * FEE_TWO )))      (inlined)
	jge.u	d14,d15,.L996
.L5191:
	mov	d5,#2
	mov	d4,d14
	mov.aa	a4,a13
.L3978:
	call	Fls_17_Dmu_ReadWordsSync
.L3979:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11901              if(RetVal == E_OK)      (inlined)
	jne	d2,#0,.L997
.L2199:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5192:
	ld.a	a15,[a15]
.L3981:
	lea	a2,[a15]908
.L3983:
	ld.bu	d15,[a15]910
.L5193:
	sha	d15,d15,#8
.L5194:
	ld.bu	d0,[a15]909
.L3984:
	or	d15,d0
.L5195:
	ld.bu	d0,[a15]915
.L5196:
	sha	d0,d0,#8
.L5197:
	ld.bu	d1,[a15]914
.L3986:
	or	d0,d1
.L5198:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12036    if((BlockNumber == BlockNumber1) &&      (inlined)
	jne	d15,d10,.L998
.L5199:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12037        (BlockPageCount == PageCount1) &&      (inlined)
	jne	d13,d0,.L999
.L5200:
	ld.bu	d0,[a2]
.L3987:
	mov	d15,#163
.L3985:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12038        (ReadWriteBufferPtr[0] == FEE_DATA_FIRST_PAGE_ID))      (inlined)
	jne	d15,d0,.L1000
.L5201:
	mov	d15,#0
.L3988:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12040      RetVal = E_OK;      (inlined)
	j	.L1001

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12036    if((BlockNumber == BlockNumber1) &&      (inlined)
.L1000:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12038        (ReadWriteBufferPtr[0] == FEE_DATA_FIRST_PAGE_ID))      (inlined)
.L999:
.L998:
	mov	d15,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12042    else      (inlined)
.L1001:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11906                if(RetVal == E_OK)      (inlined)
	jne	d15,#0,.L1002
.L2200:
	ld.bu	d15,[a10]
.L3989:
	insert	d15,d15,#1,#1,#5
	st.b	[a10],d15
.L5202:
	movh.a	a15,#@his(Fee_CfgPtr)
.L3982:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5203:
	ld.a	a15,[a15]
.L3990:
	lea	a14,[a15]728
.L3991:
	st.w	[a15]2464,d14
.L5204:
	ld.bu	d15,[a15]910
.L5205:
	sha	d10,d15,#8
.L3972:
	ld.bu	d15,[a15]909
.L3992:
	or	d10,d15
.L5206:
	mov	d4,d10
.L3993:
	call	Fee_lGetUsrBlockIndex
.L3980:
	ld.bu	d15,[a15]915
.L5207:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12156    if((ReadWriteBufferPtr[7] & FEE_VALID_MASK) != FEE_RESET)      (inlined)
	jz.t	d15:7,.L1003
.L5208:
	ld.bu	d15,[a10]
.L5209:
	or	d15,#1
.L5210:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12158      Status.Valid = FEE_SET ;      (inlined)
	j	.L1004

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12156    if((ReadWriteBufferPtr[7] & FEE_VALID_MASK) != FEE_RESET)      (inlined)
.L1003:
	ld.bu	d15,[a10]
.L5211:
	insert	d15,d15,#0,#0,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12160    else      (inlined)
.L1004:
	st.b	[a10],d15
.L5212:
	mov.u	d15,#65535
.L5213:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12167    if ((Index != FEE_LOG_BLOCK_NOT_FOUND))      (inlined)
	jeq	d15,d2,.L1005
.L5214:
	mov.aa	a4,a10
.L5215:
	mov	e4,d11,d2
	call	Fee_lUpdateBlockInfo
.L3994:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12176      Fee_lUpdateBlockInfo(&(Status), Index, PageCount);      (inlined)
	j	.L1006

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12167    if ((Index != FEE_LOG_BLOCK_NOT_FOUND))      (inlined)
.L1005:
	mov	e4,d11,d10
	call	Fee_lUpdateUnconfigBlockInfo

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12179    else      (inlined)
.L1006:
	ld.hu	d15,[a15]734
.L5216:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12187    if(LastWrittenBlkPtr->BlockNumber == FEE_RESET)      (inlined)
	jne	d15,#0,.L1007
.L5217:
	ld.w	d15,[a15]2452
.L2227:
	insert	d15,d15,#0,#0,#9
.L2228:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12191      if((LWBHeaderAddress < NextFreePageWLAddr) &&      (inlined)
	jge.u	d14,d15,.L1008
.L5218:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12192          (LWBMarkerAddress >= NextFreePageWLAddr))      (inlined)
	jlt.u	d9,d15,.L1009
.L5219:
	add	d11,#1
.L3970:
	st.h	[a15]732,d11
.L5220:
	st.w	[a14],d14
.L5221:
	st.h	[a15]734,d10
.L5222:
	ld.bu	d15,[a15]736
.L5223:
	or	d15,#2
	st.b	[a15]736,d15
.L5224:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12194        LastWrittenBlkPtr->PageCount = PageCount + FEE_ONE;      (inlined)
	j	.L1010

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12191      if((LWBHeaderAddress < NextFreePageWLAddr) &&      (inlined)
.L1009:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12192          (LWBMarkerAddress >= NextFreePageWLAddr))      (inlined)
.L1008:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12200      else if (LWBMarkerAddress < NextFreePageWLAddr)      (inlined)
	jge.u	d9,d15,.L1011
.L5225:
	mov.u	d15,#65535
.L5226:
	st.h	[a15]734,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12200      else if (LWBMarkerAddress < NextFreePageWLAddr)      (inlined)
.L1011:
.L1010:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12187    if(LastWrittenBlkPtr->BlockNumber == FEE_RESET)      (inlined)
.L1007:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11906                if(RetVal == E_OK)      (inlined)
.L1002:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11901              if(RetVal == E_OK)      (inlined)
.L997:
	st.w	[a12]2464,d14
.L5227:
	ld.hu	d15,[a12]2494
.L5228:
	add	d15,#-1
	st.h	[a12]2494,d15
.L5229:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11941              StateDataPtr->FeeBlkPageCount -= FEE_ONE;      (inlined)
	j	.L1012

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11861          if (WordValue[0] == FEE_DP_MARKER_WORD)      (inlined)
.L990:
	mov	d15,#156
.L5230:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11950          else if (PageId == FEE_DATA_NEXT_PAGE_ID)      (inlined)
	jne	d15,d0,.L1013
.L5231:
	add	d8,#1
.L5232:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11952            DataNextPageCount++;      (inlined)
	j	.L1014

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11950          else if (PageId == FEE_DATA_NEXT_PAGE_ID)      (inlined)
.L1013:
	mov	d15,#163
.L5233:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11956          else if (PageId == FEE_DATA_FIRST_PAGE_ID)      (inlined)
	jne	d15,d0,.L1015
.L2231:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5234:
	ld.a	a15,[a15]
.L3996:
	ld.bu	d15,[a15]915
.L5235:
	sha	d15,d15,#8
.L5236:
	ld.bu	d0,[a15]914
.L3995:
	or	d15,d0
.L5237:
	insert	d15,d15,#0,#15,#17
.L5238:
	add	d15,#-1
	extr.u	d0,d15,#0,#16
.L3997:
	ld.bu	d15,[a15]2513
.L5239:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12251    if(StateDataPtr->FeeLastWrittenBlockDirty == FEE_LWB_CHECK_FOR_DIRTY)      (inlined)
	jne	d15,#2,.L1016
.L5240:
	eq	d15,d0,d8
.L5241:
	st.b	[a15]2513,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12251    if(StateDataPtr->FeeLastWrittenBlockDirty == FEE_LWB_CHECK_FOR_DIRTY)      (inlined)
.L1016:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11956          else if (PageId == FEE_DATA_FIRST_PAGE_ID)      (inlined)
.L1015:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11886            if((LWBHeaderAddress > EndAddr) && (PageCount1 != FEE_RESET) &&      (inlined)
.L996:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11887                (LWBHeaderAddress < (FEE_DFLASH_SECTOR_SIZE * FEE_TWO )))      (inlined)
.L995:
.L994:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11848        else      (inlined)
.L989:
	mov	d8,#0

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11956          else if (PageId == FEE_DATA_FIRST_PAGE_ID)      (inlined)
.L1014:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11943            else      (inlined)
.L1012:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5242:
	ld.a	a15,[a15]
.L3998:
	ld.w	d15,[a15]2464
.L5243:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12302    if( StateDataPtr->FeeCurrSectSrcAddr != EndAddr )      (inlined)
	jeq	d15,d12,.L1017
.L5244:
	add	d15,#-8
	st.w	[a15]2464,d15
.L5245:
	ld.hu	d15,[a15]2494
.L5246:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12309      if(StateDataPtr->FeeBlkPageCount != FEE_ZERO)      (inlined)
	jeq	d15,#0,.L1018
.L5247:
	add	d15,#-1
	st.h	[a15]2494,d15
.L5248:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12309      if(StateDataPtr->FeeBlkPageCount != FEE_ZERO)      (inlined)
	j	.L1019

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12302    if( StateDataPtr->FeeCurrSectSrcAddr != EndAddr )      (inlined)
.L1017:
	mov	d15,#3
.L5249:
	st.b	[a15]2520,d15

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12314    else      (inlined)
.L1019:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12309      if(StateDataPtr->FeeBlkPageCount != FEE_ZERO)      (inlined)
.L1018:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11811      if ((StateDataPtr->FeeCacheState != FEE_CACHE_UPDATE_COMPLETE) &&      (inlined)
.L984:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11812          (StateDataPtr->FeeBlkPageCount!= FEE_ZERO))      (inlined)
.L983:
	ld.bu	d15,[a12]2520
.L5250:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11984    } while((StateDataPtr->FeeCacheState == FEE_CACHE_FIND_NEXT_BLK) &&      (inlined)
	jne	d15,#1,.L1020
.L5251:
	ld.hu	d15,[a12]2494
.L5252:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11985            (StateDataPtr->FeeBlkPageCount!= FEE_ZERO));      (inlined)
	jne	d15,#0,.L976

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 11984    } while((StateDataPtr->FeeCacheState == FEE_CACHE_FIND_NEXT_BLK) &&      (inlined)
.L1020:
.L974:
	ld.a	a15,[a10]4
.L3999:
	ld.bu	d15,[a15]2520
.L5253:
	jne	d15,#3,.L1021
.L5254:
	mov	d15,#0
.L5255:
	st.h	[a15]2494,d15
.L1021:
	ld.bu	d15,[a15]2513
.L5256:
	jne	d15,#1,.L1022
.L5257:
	ld.bu	d15,[a15]2520
.L5258:
	jne	d15,#3,.L1023
.L5259:
	ld.w	d15,[a15]2452
.L5260:
	add	d15,d15,#8
	st.w	[a15]2452,d15
.L2241:
	and	d15,d15,#511
.L2242:
	jne	d15,#0,.L1024
.L5261:
	st.h	[a15]734,d15
.L5262:
	ld.bu	d15,[a15]736
.L5263:
	insert	d15,d15,#0,#1,#1
	st.b	[a15]736,d15
.L1024:
	ld.w	d0,[a15]2452
.L5264:
	ld.a	a15,[a10]16
.L4000:
	ld.w	d15,[a15]32
.L5265:
	jge.u	d15,d0,.L1025
.L5266:
	addi	d15,d15,#512
	st.w	[a15]32,d15
.L1025:
.L1023:
.L1022:
	ret
.L2150:
	
__Fee_lUpdateCache_function_end:
	.size	Fee_lUpdateCache,__Fee_lUpdateCache_function_end-Fee_lUpdateCache
.L1416:
	; End of function
	
	.sdecl	'.text.Fee_lGetBlkCycleCount.Code.Cpu0',code,cluster('Fee_lGetBlkCycleCount')
	.sect	'.text.Fee_lGetBlkCycleCount.Code.Cpu0'
	.align	2
	
; Function Fee_lGetBlkCycleCount
.L1180:
Fee_lGetBlkCycleCount:	.type	func
	mov	d8,d4
.L4002:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4963:
	ld.a	a15,[a15]
.L4003:
	mov	d2,#-1
.L4004:
	mov	d15,#0
.L4964:
	st.w	[a15]896,d15
.L4965:
	st.w	[a15]900,d15
.L4966:
	mul	d15,d8,#24
	addsc.a	a2,a15,d15,#0
.L4967:
	ld.w	d4,[a2]80
.L4001:
	jeq	d4,#0,.L1026
.L4968:
	lea	a4,[a15]896
.L4969:
	mov	d5,#2
	call	Fls_17_Dmu_ReadWordsSync
.L4005:
	jeq	d2,#0,.L1027
.L4970:
	mul	d15,d8,#24
	addsc.a	a2,a15,d15,#0
.L4971:
	ld.w	d4,[a2]92
.L4006:
	jeq	d4,#0,.L1028
.L4972:
	lea	a4,[a15]896
.L4973:
	mov	d5,#2
	call	Fls_17_Dmu_ReadWordsSync
.L4007:
	jne	d2,#0,.L1029
.L4974:
	ld.w	d15,[a15]898
.L4008:
	sh	d15,#-8
.L4009:
	add	d2,d15,#1
.L1026:
	ret
.L1029:
.L1028:
	mov	d2,#-1
.L4010:
	ret
.L1027:
	ld.w	d2,[a15]898
.L4011:
	sh	d2,#-8
.L4012:
	ret
.L2109:
	
__Fee_lGetBlkCycleCount_function_end:
	.size	Fee_lGetBlkCycleCount,__Fee_lGetBlkCycleCount_function_end-Fee_lGetBlkCycleCount
.L1386:
	; End of function
	
	.sdecl	'.text.Fee_lUpdateNonZeroWLInfo.Code.Cpu0',code,cluster('Fee_lUpdateNonZeroWLInfo')
	.sect	'.text.Fee_lUpdateNonZeroWLInfo.Code.Cpu0'
	.align	2
	
; Function Fee_lUpdateNonZeroWLInfo
.L1182:
Fee_lUpdateNonZeroWLInfo:	.type	func
	ld.w	d15,[a4]24
.L4013:
	jge.u	d15,#3,.L1033
.L6357:
	addsc.a	a15,a4,d15,#2
.L6358:
	st.w	[a15]12,d4
.L1033:
	ld.w	d15,[a4]24
.L4014:
	add	d15,#1
	st.w	[a4]24,d15
.L6359:
	ret
.L2821:
	
__Fee_lUpdateNonZeroWLInfo_function_end:
	.size	Fee_lUpdateNonZeroWLInfo,__Fee_lUpdateNonZeroWLInfo_function_end-Fee_lUpdateNonZeroWLInfo
.L1506:
	; End of function
	
	.sdecl	'.text.Fee_lIsUnerasableAddr.Code.Cpu0',code,cluster('Fee_lIsUnerasableAddr')
	.sect	'.text.Fee_lIsUnerasableAddr.Code.Cpu0'
	.align	2
	
; Function Fee_lIsUnerasableAddr
.L1184:
Fee_lIsUnerasableAddr:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4768:
	ld.a	a2,[a15]
.L4015:
	movh	d15,#8
.L4769:
	ge.u	d0,d4,d15
.L4016:
	mov	d1,#0
.L4017:
	mov	d2,d1
.L2010:
	insert	d3,d4,#0,#0,#9
.L2011:
	j	.L1034
.L1035:
	mul	d15,d0,#40
	addsc.a	a15,a2,d15,#0
.L4770:
	addsc.a	a15,a15,d1,#2
	ld.w	d15,[a15]4
.L4771:
	jne	d15,d3,.L1036
.L4772:
	mov	d2,#1
.L4773:
	j	.L1037
.L1036:
	add	d1,#1
.L4018:
	extr.u	d1,d1,#0,#8
.L1037:
.L1034:
	mul	d15,d0,#40
	addsc.a	a15,a2,d15,#0
.L4774:
	ld.bu	d15,[a15]36
.L4775:
	jeq	d15,d1,.L1038
.L4776:
	jeq	d2,#0,.L1035
.L1038:
	ret
.L2002:
	
__Fee_lIsUnerasableAddr_function_end:
	.size	Fee_lIsUnerasableAddr,__Fee_lIsUnerasableAddr_function_end-Fee_lIsUnerasableAddr
.L1331:
	; End of function
	
	.sdecl	'.text.Fee_lPrepareStatePageBuffer.Code.Cpu0',code,cluster('Fee_lPrepareStatePageBuffer')
	.sect	'.text.Fee_lPrepareStatePageBuffer.Code.Cpu0'
	.align	2
	
; Function Fee_lPrepareStatePageBuffer
.L1186:
Fee_lPrepareStatePageBuffer:	.type	func
	mov	d15,d4
.L4020:
	mov	d8,d5
.L4022:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L5271:
	ld.a	a12,[a15]
.L4023:
	call	Fee_lClearFeeGcReadWriteBuffer
.L4019:
	ld.w	d0,[a12]904
.L4024:
	add	d0,#1
.L5272:
	mul	d15,d15,#40
.L4021:
	addsc.a	a15,a12,d15,#0
.L5273:
	ld.bu	d1,[a15]36
.L4025:
	ld.w	d2,[a15]4
.L4027:
	ld.w	d3,[a15]8
.L4029:
	mov	d15,#89
.L5274:
	st.b	[a12]1420,d15
.L5275:
	st.b	[a12]1421,d8
.L5276:
	st.b	[a12]1461,d8
.L5277:
	sh	d15,d1,#4
.L5278:
	and	d15,#240
.L5279:
	st.b	[a12]1423,d15
.L5280:
	st.b	[a12]1463,d15
.L5281:
	st.w	[a12]1424,d0
.L5282:
	st.w	[a12]1464,d0
.L5283:
	jeq	d1,#0,.L1040
.L5284:
	st.w	[a12]1432,d2
.L5285:
	st.w	[a12]1440,d3
.L5286:
	st.w	[a12]1472,d2
.L5287:
	st.w	[a12]1480,d3
.L1040:
	lea	a15,[a12]1428
.L4030:
	mov	d1,#1
.L4026:
	mov	d15,#198
.L5288:
	j	.L1041
.L1042:
	st.b	[a15+]8,d15
.L5289:
	add	d1,#1
.L1041:
	jlt.u	d1,#10,.L1042
.L5290:
	lea	a15,[a12]1500
.L5291:
	mov	d15,#0
.L4031:
	j	.L1043
.L1044:
	movh.a	a2,#@his(Fee_StateHalf)
	lea	a2,[a2]@los(Fee_StateHalf)
.L5292:
	addsc.a	a2,a2,d15,#2
	ld.w	d1,[a2]
.L5293:
	st.w	[a15+],d1
.L5294:
	add	d15,#1
.L1043:
	jlt.u	d15,#9,.L1044
.L5295:
	lea	a15,[a12]1536
.L5296:
	mov	d15,#29
.L4032:
	lea	a2,[a12]1420
.L2257:
	mov	d1,#0
.L4033:
	mov	d2,d1
.L4028:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12890    for(Index = FEE_RESET; Index < Length; Index++)      (inlined)
	j	.L1045
.L1046:
	addsc.a	a4,a2,d2,#2
	ld.w	d3,[a4]
	crc32b.w	d1,d1,d3
.L5297:
	add	d2,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 12890    for(Index = FEE_RESET; Index < Length; Index++)      (inlined)
.L1045:
	jlt.u	d2,d15,.L1046
.L5298:
	st.w	[a15],d1
.L2258:
	st.w	[a12]904,d0
.L5299:
	ret
.L2244:
	
__Fee_lPrepareStatePageBuffer_function_end:
	.size	Fee_lPrepareStatePageBuffer,__Fee_lPrepareStatePageBuffer_function_end-Fee_lPrepareStatePageBuffer
.L1421:
	; End of function
	
	.sdecl	'.text.Fee_lPrepareMarkerBuffer.Code.Cpu0',code,cluster('Fee_lPrepareMarkerBuffer')
	.sect	'.text.Fee_lPrepareMarkerBuffer.Code.Cpu0'
	.align	2
	
; Function Fee_lPrepareMarkerBuffer
.L1188:
Fee_lPrepareMarkerBuffer:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4986:
	ld.a	a15,[a15]
.L4034:
	mov.u	d15,#62778
	addih	d15,d15,#44975
.L4987:
	st.w	[a15]1540,d15
.L4988:
	mov.u	d15,#62965
	addih	d15,d15,#44975
.L4989:
	st.w	[a15]1544,d15
.L4990:
	ret
.L2124:
	
__Fee_lPrepareMarkerBuffer_function_end:
	.size	Fee_lPrepareMarkerBuffer,__Fee_lPrepareMarkerBuffer_function_end-Fee_lPrepareMarkerBuffer
.L1396:
	; End of function
	
	.sdecl	'.text.Fee_lClearMarkerBuffer.Code.Cpu0',code,cluster('Fee_lClearMarkerBuffer')
	.sect	'.text.Fee_lClearMarkerBuffer.Code.Cpu0'
	.align	2
	
; Function Fee_lClearMarkerBuffer
.L1190:
Fee_lClearMarkerBuffer:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4995:
	ld.a	a15,[a15]
.L4035:
	mov	d15,#0
.L4996:
	st.w	[a15]1540,d15
.L4997:
	st.w	[a15]1544,d15
.L4998:
	ret
.L2127:
	
__Fee_lClearMarkerBuffer_function_end:
	.size	Fee_lClearMarkerBuffer,__Fee_lClearMarkerBuffer_function_end-Fee_lClearMarkerBuffer
.L1401:
	; End of function
	
	.sdecl	'.text.Fee_lClearFeeReadWriteBuffer.Code.Cpu0',code,cluster('Fee_lClearFeeReadWriteBuffer')
	.sect	'.text.Fee_lClearFeeReadWriteBuffer.Code.Cpu0'
	.align	2
	
; Function Fee_lClearFeeReadWriteBuffer
.L1192:
Fee_lClearFeeReadWriteBuffer:	.type	func
	mov	d15,#0
.L4036:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4979:
	ld.a	a15,[a15]
.L4037:
	lea	a15,[a15]908
.L4038:
	mov	d0,#128
.L4039:
	mov	d1,d15
.L1047:
	addsc.a	a2,a15,d15,#2
.L4040:
	st.w	[a2],d1
.L4041:
	add	d15,#1
.L4980:
	jne	d15,d0,.L1047
.L4981:
	ret
.L2118:
	
__Fee_lClearFeeReadWriteBuffer_function_end:
	.size	Fee_lClearFeeReadWriteBuffer,__Fee_lClearFeeReadWriteBuffer_function_end-Fee_lClearFeeReadWriteBuffer
.L1391:
	; End of function
	
	.sdecl	'.text.Fee_lClearFeeGcReadWriteBuffer.Code.Cpu0',code,cluster('Fee_lClearFeeGcReadWriteBuffer')
	.sect	'.text.Fee_lClearFeeGcReadWriteBuffer.Code.Cpu0'
	.align	2
	
; Function Fee_lClearFeeGcReadWriteBuffer
.L1194:
Fee_lClearFeeGcReadWriteBuffer:	.type	func
	mov	d15,#0
.L4042:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6244:
	ld.a	a15,[a15]
.L4043:
	lea	a15,[a15]1420
.L4044:
	mov	d0,#128
.L4045:
	mov	d1,d15
.L1048:
	addsc.a	a2,a15,d15,#2
.L4046:
	st.w	[a2],d1
.L4047:
	add	d15,#1
.L6245:
	jne	d15,d0,.L1048
.L6246:
	ret
.L2779:
	
__Fee_lClearFeeGcReadWriteBuffer_function_end:
	.size	Fee_lClearFeeGcReadWriteBuffer,__Fee_lClearFeeGcReadWriteBuffer_function_end-Fee_lClearFeeGcReadWriteBuffer
.L1486:
	; End of function
	
	.sdecl	'.text.Fee_lHandleInitGcFail.Code.Cpu0',code,cluster('Fee_lHandleInitGcFail')
	.sect	'.text.Fee_lHandleInitGcFail.Code.Cpu0'
	.align	2
	
; Function Fee_lHandleInitGcFail
.L1196:
Fee_lHandleInitGcFail:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a2,[a15]@los(Fee_CfgPtr)
.L6251:
	ld.a	a2,[a2]
.L4048:
	mov	d15,#6
.L6252:
	st.b	[a2]2518,d15
.L6253:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L6254:
	ld.w	d15,[a15]24
.L6255:
	jeq	d15,#0,.L1049
.L6256:
	ld.a	a15,[a15]24
.L6257:
	ji	a15
.L1049:
	ret
.L2784:
	
__Fee_lHandleInitGcFail_function_end:
	.size	Fee_lHandleInitGcFail,__Fee_lHandleInitGcFail_function_end-Fee_lHandleInitGcFail
.L1491:
	; End of function
	
	.sdecl	'.text.Fee_lHandleWriteFail.Code.Cpu0',code,cluster('Fee_lHandleWriteFail')
	.sect	'.text.Fee_lHandleWriteFail.Code.Cpu0'
	.align	2
	
; Function Fee_lHandleWriteFail
.L1198:
Fee_lHandleWriteFail:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a2,[a15]@los(Fee_CfgPtr)
.L4781:
	ld.a	a2,[a2]
.L4049:
	mov	d15,#15
.L4782:
	st.b	[a2]2514,d15
.L4783:
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4784:
	ld.w	d15,[a15]24
.L4785:
	jeq	d15,#0,.L1050
.L4786:
	ld.a	a15,[a15]24
.L4787:
	ji	a15
.L1050:
	ret
.L2013:
	
__Fee_lHandleWriteFail_function_end:
	.size	Fee_lHandleWriteFail,__Fee_lHandleWriteFail_function_end-Fee_lHandleWriteFail
.L1336:
	; End of function
	
	.sdecl	'.text.Fee_lUpdateBlockInfo.Code.Cpu0',code,cluster('Fee_lUpdateBlockInfo')
	.sect	'.text.Fee_lUpdateBlockInfo.Code.Cpu0'
	.align	2
	
; Function Fee_lUpdateBlockInfo
.L1200:
Fee_lUpdateBlockInfo:	.type	func
	mov.aa	a13,a4
.L4051:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4815:
	ld.a	a12,[a15]
.L4052:
	mul	d15,d4,#24
	addsc.a	a15,a12,d15,#0
.L4816:
	add	d8,d5,#-1
.L4053:
	ld.w	d15,[+a15]80
.L4817:
	jne	d15,#0,.L1051
.L4818:
	ld.w	d0,[a12]2464
.L4819:
	st.w	[a15],d0
.L4820:
	ld.bu	d0,[a15]10
.L4821:
	ld.bu	d15,[a13]
	and	d15,#1
.L4822:
	insert	d15,d0,d15,#0,#1
	st.b	[a15]10,d15
.L4823:
	ld.bu	d0,[a13]
	extr.u	d0,d0,#1,#1
.L4824:
	insert	d15,d15,d0,#1,#1
	st.b	[a15]10,d15
.L4825:
	ld.bu	d0,[a13]
	extr.u	d0,d0,#2,#1
.L4826:
	insert	d15,d15,d0,#2,#1
	st.b	[a15]10,d15
.L4827:
	mul	d15,d8,#7
.L4828:
	st.w	[a15]4,d15
.L4829:
	ret
.L1051:
	ld.w	d15,[a15]12
.L4830:
	jne	d15,#0,.L1053
.L4831:
	call	Fee_lGetBlkCycleCount
.L4050:
	ld.w	d15,[a12]910
.L4055:
	sh	d15,#-8
.L4832:
	add	d2,#-1
.L4054:
	jne	d15,d2,.L1054
.L4833:
	ld.w	d15,[a12]2464
.L4056:
	st.w	[a15]12,d15
.L4834:
	mul	d15,d8,#7
.L4835:
	st.w	[a15]16,d15
.L4836:
	ld.bu	d0,[a15]10
.L4837:
	ld.bu	d15,[a13]
	and	d15,#1
.L4838:
	insert	d15,d0,d15,#3,#1
	st.b	[a15]10,d15
.L4839:
	ld.bu	d0,[a13]
	extr.u	d0,d0,#1,#1
.L4840:
	insert	d15,d15,d0,#4,#1
	st.b	[a15]10,d15
.L4841:
	ld.bu	d0,[a13]
	extr.u	d0,d0,#2,#1
.L4842:
	insert	d15,d15,d0,#5,#1
	st.b	[a15]10,d15
.L1054:
.L1053:
	ret
.L2019:
	
__Fee_lUpdateBlockInfo_function_end:
	.size	Fee_lUpdateBlockInfo,__Fee_lUpdateBlockInfo_function_end-Fee_lUpdateBlockInfo
.L1346:
	; End of function
	
	.sdecl	'.text.Fee_lUpdateUnconfigBlockInfo.Code.Cpu0',code,cluster('Fee_lUpdateUnconfigBlockInfo')
	.sect	'.text.Fee_lUpdateUnconfigBlockInfo.Code.Cpu0'
	.align	2
	
; Function Fee_lUpdateUnconfigBlockInfo
.L1202:
Fee_lUpdateUnconfigBlockInfo:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4847:
	ld.a	a2,[a15]
.L4057:
	ld.hu	d0,[a2]2506
.L4058:
	mov	d1,#0
.L4060:
	ld.hu	d15,[a15]20
.L4848:
	mul	d15,d15,#24
	addsc.a	a15,a2,d15,#0
	lea	a15,[a15]80
.L4062:
	j	.L1055
.L1056:
	add	d1,#1
.L4061:
	extr.u	d1,d1,#0,#16
.L4063:
	lea	a15,[a15]24
.L1055:
	jge.u	d1,d0,.L1057
.L4849:
	ld.hu	d15,[a15]8
.L4850:
	jne	d15,d4,.L1056
.L1057:
	jne	d1,d0,.L1058
.L4851:
	movh.a	a4,#@his(Fee_CfgPtr)
	ld.a	a4,[a4]@los(Fee_CfgPtr)
.L4852:
	ld.hu	d1,[a4]20
.L4064:
	add	d1,d0
.L4853:
	mov	d15,#27
.L4854:
	jge	d1,d15,.L1059
.L4855:
	ld.w	d15,[a2]2464
.L4856:
	st.w	[a15],d15
.L4857:
	st.h	[a15]8,d4
.L4858:
	mul	d15,d5,#7
.L4859:
	st.w	[a15]4,d15
.L4860:
	add	d0,#1
.L4059:
	extr.u	d0,d0,#0,#16
.L4065:
	j	.L1060
.L1059:
	mov	d15,#255
.L4861:
	st.b	[a2]2531,d15
.L1060:
.L1058:
	st.h	[a2]2506,d0
.L4862:
	ret
.L2032:
	
__Fee_lUpdateUnconfigBlockInfo_function_end:
	.size	Fee_lUpdateUnconfigBlockInfo,__Fee_lUpdateUnconfigBlockInfo_function_end-Fee_lUpdateUnconfigBlockInfo
.L1351:
	; End of function
	
	.sdecl	'.text.Fee_lRegisterNvmRead.Code.Cpu0',code,cluster('Fee_lRegisterNvmRead')
	.sect	'.text.Fee_lRegisterNvmRead.Code.Cpu0'
	.align	2
	
; Function Fee_lRegisterNvmRead
.L1204:
Fee_lRegisterNvmRead:	.type	func
	mov	e8,d5,d4
	mov.aa	a12,a4
.L4069:
	mov	d10,d6
.L4070:
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4889:
	ld.a	a15,[a15]
.L4071:
	lea	a13,[a15]752
.L4072:
	ld.bu	d15,[a15]2514
	ne	d15,d15,#1
.L2064:
	mov	d2,#0
.L4074:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14822    if(RetVal == E_OK)      (inlined)
	jne	d15,#0,.L1061
.L4890:
	ld.bu	d15,[a15]2512
.L4073:
	or	d15,#2
	st.b	[a15]2512,d15
.L4891:
	mov	d15,#6
.L4892:
	st.b	[a15]2514,d15
.L4893:
	mov	d15,#2
.L4894:
	st.b	[a15]2480,d15
.L4895:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14836      UNUSED_PARAMETER (GetPrevCopy);      (inlined)
	j	.L1062

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14822    if(RetVal == E_OK)      (inlined)
.L1061:
	mov	d4,#2
.L4066:
	mov	d5,#6
.L4067:
	mov	d6,d4
.L4068:
	call	Fee_lReportError
.L2076:
	mov	d2,#1

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 14845    else      (inlined)
.L1062:
	jne	d2,#0,.L1063
.L2065:
	st.h	[a15]760,d8
.L4075:
	st.h	[a15]762,d9
.L4076:
	st.a	[a13],a12
.L4896:
	st.h	[a15]764,d10
.L1063:
	ret
.L2047:
	
__Fee_lRegisterNvmRead_function_end:
	.size	Fee_lRegisterNvmRead,__Fee_lRegisterNvmRead_function_end-Fee_lRegisterNvmRead
.L1361:
	; End of function
	
	.sdecl	'.text.Fee_lRegisterNvmWrite.Code.Cpu0',code,cluster('Fee_lRegisterNvmWrite')
	.sect	'.text.Fee_lRegisterNvmWrite.Code.Cpu0'
	.align	2
	
; Function Fee_lRegisterNvmWrite
.L1206:
Fee_lRegisterNvmWrite:	.type	func
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4901:
	ld.a	a15,[a15]
.L4078:
	ld.bu	d15,[a15]2514
.L4902:
	jne	d15,#1,.L1065
.L4903:
	ld.bu	d15,[a15]2512
.L4904:
	insert	d15,d15,#0,#3,#1
	st.b	[a15]2512,d15
.L4905:
	call	Fee_lRegisterWriteRequest
.L4077:
	mov	d2,#0
.L4079:
	ret
.L1065:
	mov	d4,#3
.L4906:
	mov	d5,#6
.L4907:
	mov	d6,#2
	call	Fee_lReportError
.L4080:
	mov	d2,#1
.L4081:
	ret
.L2082:
	
__Fee_lRegisterNvmWrite_function_end:
	.size	Fee_lRegisterNvmWrite,__Fee_lRegisterNvmWrite_function_end-Fee_lRegisterNvmWrite
.L1366:
	; End of function
	
	.sdecl	'.text.Fee_lReportError.Code.Cpu0',code,cluster('Fee_lReportError')
	.sect	'.text.Fee_lReportError.Code.Cpu0'
	.align	2
	
; Function Fee_lReportError
.L1208:
Fee_lReportError:	.type	func
	mov	d15,d4
.L4085:
	mov	d7,d5
.L4086:
	jne	d6,#2,.L1068
.L6813:
	mov	d4,#21
.L4082:
	mov	d5,#0
.L4083:
	mov	d6,d15
.L4084:
	j	Mcal_Wrapper_Det_ReportRuntimeError
.L1068:
	ret
.L3100:
	
__Fee_lReportError_function_end:
	.size	Fee_lReportError,__Fee_lReportError_function_end-Fee_lReportError
.L1566:
	; End of function
	
	.sdecl	'.text.Fee_17_JobEraseErrorNotification.Code.Cpu0',code,cluster('Fee_17_JobEraseErrorNotification')
	.sect	'.text.Fee_17_JobEraseErrorNotification.Code.Cpu0'
	.align	2
	
	.global	Fee_17_JobEraseErrorNotification

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19224    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19225  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19226    return(Error);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19227  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19228  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19229  #if (FEE_DATA_BLOCK_SUPPORTED == FEE_DOUBLE_SECTOR_AND_QUASI_STATIC_DATA)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19230  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19231  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19232  ** Syntax : Std_ReturnType  Fee_lIsQsWriteReadAllowed(void)                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19233  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19234  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19235  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19236  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19237  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19238  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19239  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19240  ** Parameters (in-out) : None                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19241  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19242  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19243  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19244  ** Return value    :  boolean : GC error code                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19245  **                    TRUE : QS Read/Write is allowed                         **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19246  **                    FALSE :QS Read/Write is not allowed .                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19247  ** Description : This function will check if there Qs write or read is        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19248  ** pending and can be executed                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19249  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19250  /* [cover parentID={45200610-4BB9-47b9-8FA8-69777362FF35}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19251  Fee_lIsQsWriteReadAllowedbyGC
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19252  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19253  /* [cover parentID={FA629D11-03AC-476f-A96D-DBE4102A85BA}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19254  static boolean Fee_lIsQsWriteReadAllowedbyGC(void)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19255  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19256    #if (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19257    Fee_StateDataType *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19258    Std_ReturnType     FlsRetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19259  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19260    #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19261    const Fee_StateDataType *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19262    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19263    boolean            RetVal;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19264  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19265    RetVal = (boolean)FALSE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19266    StateDataPtr = Fee_CfgPtr->FeeStatePtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19267  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19268    /* [cover parentID={D77485C3-84EE-43f5-ADB8-DAC33879E083}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19269    if((StateDataPtr->FeePendReqStatus == FEE_REQ_QUASI_WRITE) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19270        (StateDataPtr->FeePendReqStatus == FEE_REQ_QUASI_READ))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19271    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19272      /*Check if GC in erase state as part of normal GC opertaion.Pending request
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19273      can not be executed when GC in erase state as part init GC because of cache
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19274      table is not yet build and initialization activity is not finished */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19275      /* [cover parentID={662B3AB5-68FC-4ace-87A3-04D29F233B7C}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19276      if((StateDataPtr->FeeGcState == FEE_GC_ERASE_PREV_SECTOR) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19277          (StateDataPtr->FeeGcState == FEE_GC_INIT_ERASE_PREV_SECTOR))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19278      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19279        /* [cover parentID={635491B4-D99B-4786-B393-2063B328A1DB}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19280        if(StateDataPtr->FeeIntrJobStatus == FEE_JOB_REQSTD)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19281        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19282          /*Check if erase operation can be suspended*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19283          #if (FEE_FLS_SUPPORTS_ERASE_SUSPEND == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19284          if(FEE_ERASE_NOT_SUSPENDED == StateDataPtr->FeeEraseSuspendStatus)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19285          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19286            /* [cover parentID={891C2ACF-0493-4ae4-B472-14359F1C6843}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19287            FlsRetVal = Fls_17_Dmu_SuspendErase();
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19288            /* [cover parentID={7D299142-85D9-4dd0-A61F-70C1632538FF}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19289            if(E_OK == FlsRetVal)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19290            {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19291              RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19292              /* [cover parentID={C2498C15-66C1-490b-9DE1-1C4C6F6A3E16}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19293              StateDataPtr->FeeEraseSuspendStatus = FEE_ERASE_SUSPENDED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19294            }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19295          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19296          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19297          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19298            RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19299            StateDataPtr->FeeEraseSuspendStatus = FEE_ERASE_SUSPENDED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19300          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19301          #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19302        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19303        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19304        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19305          /*Erase is not started or finshed. QS request can be executed*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19306          RetVal = (boolean)TRUE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19307        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19308      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19309    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19310  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19311    return(RetVal);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19312  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19313  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19314  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19315  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19316  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19317  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19318  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19319  #if (FEE_DEM_ENABLED == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19320  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19321  ** Syntax : static void  Fee_lReportDemError(void)                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19322  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19323  ** Service ID:                                                                **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19324  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19325  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19326  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19327  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19328  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19329  ** Description      : This function reports the production error status       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19330  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19331  ** Parameters (in)  : EventId - ID of the event reported                      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19332  **                    EventStatus - Status of the event reported              **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19333  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19334  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19335  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19336  ** Return value     : None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19337  *                                                                             **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19338  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19339  /* [cover parentID={B184A912-3160-492c-A464-8FB1E1AC1E4D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19340  static void  Fee_lReportDemError( const Dem_EventIdType EventId,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19341      const Dem_EventStatusType EventStatus)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19342  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19343    #if (MCAL_AR_VERSION == MCAL_AR_422)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19344    /* [cover parentID={BC2DA35E-9826-43ab-A4C2-E7CE9297552E}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19345    Mcal_Wrapper_Dem_ReportErrorStatus(EventId, EventStatus);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19346    #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19347    /* [cover parentID={2E64DEC3-C18D-4b9a-92DE-741E7E20CD0D}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19348    (void)Mcal_Wrapper_Dem_SetEventStatus(EventId, EventStatus);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19349    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19350  }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19351  #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19352  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19353  /* Memory Map of the FEE Code */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19354  #define FEE_STOP_SEC_CODE_ASIL_B_LOCAL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19355  /*MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19356  without safegaurd. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19357  /*MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19358  guideline. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19359  #include "Fee_MemMap.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19360  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19361  #define FEE_START_SEC_ERASEERRORNOTI_CODE_ASIL_B_LOCAL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19362  /*MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19363  without safegaurd. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19364  /*MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19365  guideline. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19366  #include "Fee_MemMap.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19367  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19368  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19369  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19370  ** TRACEABILITY: TBD                                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19371  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19372  ** Syntax : void Fee_17_JobEraseErrorNotification(void)                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19373  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19374  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19375  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19376  ** Service ID:  0x29                                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19377  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19378  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19379  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19380  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19381  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19382  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19383  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19384  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19385  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19386  ** Return value    : void                                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19387  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19388  ** Description : Service to report to FEE module the failure of an  Erase     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19389  ** operation and EVR(Erase Verify ) Error occurred.                           **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19390  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19391  /* [cover parentID={F0283E12-60D5-4eef-B6EE-538CD842131D}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19392  Fee_17_JobEraseErrorNotification
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19393  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19394  void Fee_17_JobEraseErrorNotification(void)
; Function Fee_17_JobEraseErrorNotification
.L1210:
Fee_17_JobEraseErrorNotification:	.type	func

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19395  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19396    /* [cover parentID={436E0729-5394-4d12-97E0-CF59109131FF}]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19397    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19398    Fls_17_Dmu_Job_Type Job;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19399    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19400    #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19401    const Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19402    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19403  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19404    /* [cover parentID={039EA806-07C1-488a-886B-B0799058E979}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19405    SAFETY ENABLE
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19406    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19407    #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19408    /* [cover parentID={D9161B1B-F3D9-4a6d-9EAD-0E52B4DFFF80}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19409    if(Fee_CfgPtr != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19410    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19411    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19412      StateDataPtr = Fee_CfgPtr->FeeStatePtr;
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4639:
	ld.a	a15,[a15]
.L4087:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19413  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19414      #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19415      Job = Fls_17_Dmu_GetNotifCaller();
	call	Fls_17_Dmu_GetNotifCaller
.L4088:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19416      /* [cover parentID={BECDA997-B9CC-412c-B19D-DC4750413F24}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19417      if(Job == StateDataPtr->FeeIntrJob)
	ld.bu	d15,[a15]2523
.L4640:
	jne	d15,d2,.L1069
.L4641:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19418      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19419        /* GC Erase is operation is failed.(Internal Operation) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19420        /* [cover parentID={3D2907CE-F5CA-4d50-9727-B91782927B11}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19421        StateDataPtr->FeeIntrJobStatus = FEE_JOB_DONE;
	mov	d15,#2
.L4642:
	st.b	[a15]2524,d15
.L4643:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19422        StateDataPtr->FeeIntrJobResult = FEE_JOB_FAIL;
	mov	d15,#1
.L4644:
	st.b	[a15]2526,d15
.L4645:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19423        StateDataPtr->FeeIntrJob = FEE_NO_JOB;
	mov	d0,#0
.L4646:
	st.b	[a15]2523,d0
.L4647:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19424        StateDataPtr->FeeEraseVerErr = FEE_SET ;
	st.b	[a15]2536,d15
.L1069:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19425      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19426      #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19427      /* [cover parentID={0DFAD396-D004-4885-A6D7-7AFB53EBD95B}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19428      Check if QS job is requested
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19429      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19430      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19431      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19432  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19433        /* [cover parentID={9A0F298B-959C-4053-9AAB-B5374E877F97}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19434        Fee_lHandleQsJobFailure((FEE_NOT_CANCEL));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19435      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19436      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19437  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19438      #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19439      /* [cover parentID={717A9A00-F636-4d4f-AB8A-8F055AC20A57}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19440      if(StateDataPtr->FeeQsJob != FEE_NO_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19441      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19442        /* [cover parentID={016F9895-5CA7-4be1-8B55-2FDED57FFD99}][/cover]*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19443        Fee_lHandleQsJobFailure((FEE_NOT_CANCEL));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19444      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19445      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19446    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19447    #if(FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19448    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19449    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19450      /* [cover parentID={0123A4A1-A624-4c22-A827-E1334FE6BFEF}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19451      Report error FEE_E_UNINIT
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19452      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19453      Fee_lReportError(FEE_SID_JOBERASEERRORNOTIF,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19454                          FEE_SE_UNINIT, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19455    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19456    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19457  }
	ret
.L1935:
	
__Fee_17_JobEraseErrorNotification_function_end:
	.size	Fee_17_JobEraseErrorNotification,__Fee_17_JobEraseErrorNotification_function_end-Fee_17_JobEraseErrorNotification
.L1311:
	; End of function
	
	.sdecl	'.text.Fee_17_JobProgErrorNotification.Code.Cpu0',code,cluster('Fee_17_JobProgErrorNotification')
	.sect	'.text.Fee_17_JobProgErrorNotification.Code.Cpu0'
	.align	2
	
	.global	Fee_17_JobProgErrorNotification

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19458  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19459  #define FEE_STOP_SEC_ERASEERRORNOTI_CODE_ASIL_B_LOCAL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19460  /*MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19461  without safegaurd. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19462  /*MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19463  guideline. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19464  #include "Fee_MemMap.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19465  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19466  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19467  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19468  #define FEE_START_SEC_PROGERRORNOTI_CODE_ASIL_B_LOCAL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19469  /*MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19470  without safegaurd. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19471  /*MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19472  guideline. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19473  #include "Fee_MemMap.h"
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19474  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19475  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19476  /*******************************************************************************
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19477  ** TRACEABILITY: TBD                                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19478  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19479  ** Syntax : void Fee_17_JobProgErrorNotification(void)                        **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19480  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19481  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19482  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19483  ** Service ID:  0x31                                                          **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19484  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19485  ** Sync/Async:  Synchronous                                                   **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19486  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19487  ** Reentrancy:  Non reentrant                                                 **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19488  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19489  ** Parameters (in) :  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19490  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19491  ** Parameters (out):  None                                                    **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19492  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19493  ** Return value    : void                                                     **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19494  **                                                                            **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19495  ** Description : Service to report to FEE module if Program Verify Error      **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19496  **  occurred while programming/writing.                                       **
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19497  *******************************************************************************/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19498  /* [cover parentID={ABEBA1F6-6119-4326-9549-FB898E5A4E86},
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19499  {2B346D07-6920-4f9c-90AC-DA91AD86E39E}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19500  Fee_17_JobProgErrorNotification
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19501  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19502  /* [cover parentID={828AE813-7199-4dd4-A7F7-A89D3FB90B98}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19503  Program verify error notfication
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19504  [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19505  void Fee_17_JobProgErrorNotification(void)
; Function Fee_17_JobProgErrorNotification
.L1212:
Fee_17_JobProgErrorNotification:	.type	func

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19506  {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19507  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19508    #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19509    Fls_17_Dmu_Job_Type Job;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19510    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19511    Fee_StateDataType  *StateDataPtr;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19512    /* [cover parentID={8647E160-A868-4483-AD03-7DABDE73F7C7}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19513    Safety is enabled
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19514    [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19515    #if (FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19516    /* [cover parentID={99A3E686-2F5F-4829-8708-F7AD61FDE3FE}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19517    if(Fee_CfgPtr != NULL_PTR)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19518    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19519    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19520      StateDataPtr = Fee_CfgPtr->FeeStatePtr;
	movh.a	a15,#@his(Fee_CfgPtr)
	ld.a	a15,[a15]@los(Fee_CfgPtr)
.L4652:
	ld.a	a15,[a15]
.L4089:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19521  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19522      #if (FEE_DATA_BLOCK_SUPPORTED != FEE_QUASI_STATIC_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19523      Job = Fls_17_Dmu_GetNotifCaller();
	call	Fls_17_Dmu_GetNotifCaller
.L4090:
	mov	d15,d2
.L4092:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19524      /* [cover parentID={1D58564F-1E3C-422c-A275-732F390B7DED}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19525      if(Job == StateDataPtr->FeeIntrJob)
	ld.bu	d0,[a15]2523
.L4653:
	jne	d15,d0,.L1070
.L4654:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19526      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19527        /* [cover parentID={9999D7DD-046C-4ef8-85A9-658BDE0A59F0}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19528        /* GC Write operation is failed.(Internal Operation) */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19529        StateDataPtr->FeeIntrJobStatus = FEE_JOB_DONE;
	mov	d15,#2
.L4093:
	st.b	[a15]2524,d15
.L4655:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19530        StateDataPtr->FeeIntrJobResult = FEE_JOB_FAIL;
	mov	d15,#1
.L4656:
	st.b	[a15]2526,d15
.L4657:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19531        StateDataPtr->FeeIntrJob = FEE_NO_JOB;
	mov	d15,#0
.L4658:
	st.b	[a15]2523,d15
.L4659:
	j	.L1071
.L1070:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19532        StateDataPtr->FeeProgVerErr = FEE_SET ;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19533      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19534      /* [cover parentID={933D6827-C388-49ee-858C-1E193FA665DD}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19535      else if( Job == Fee_lGetUserJob(StateDataPtr->FeePendReqStatus))
	ld.bu	d4,[a15]2514
	call	Fee_lGetUserJob
.L4091:
	jne	d15,d2,.L1072
.L4660:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19536      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19537        /* [cover parentID={250338CD-3F8A-41a3-9A3F-B5062C7948E1}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19538        /* User write Job is failed  */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19539        StateDataPtr->FeeUserJobStatus = FEE_JOB_DONE;
	mov	d15,#2
.L4094:
	st.b	[a15]2525,d15
.L4661:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19540        StateDataPtr->FeeUserJobResult = FEE_JOB_FAIL;
	mov	d15,#1
.L4662:
	st.b	[a15]2527,d15
.L1071:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19541        StateDataPtr->FeeProgVerErr = FEE_SET ;
	mov	d15,#1
.L4663:
	st.b	[a15]2537,d15
.L1072:

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19542      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19543      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19544      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19545        /* [cover parentID={09C4915A-FFAD-42cd-B6DF-AD557D634759}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19546        #if (FEE_DATA_BLOCK_SUPPORTED != FEE_DOUBLE_SECTOR_DATA_ONLY)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19547        /* [cover parentID={F9382416-FFC2-4d4d-9ECB-5CF34B43F31B}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19548        if(StateDataPtr->FeeQsIntrJob != FEE_NO_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19549        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19550          StateDataPtr->FeeQsIntrJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19551          StateDataPtr->FeeQsIntrJobResult = MEMIF_JOB_FAILED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19552        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19553        /*Check if the Qs job is on going.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19554        /* [cover parentID={E98460C4-D3BE-4779-B1C7-3D5574D1C162}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19555        else if(StateDataPtr->FeeQsJob != FEE_NO_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19556        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19557          /*Check if erase started marker or destroying of all marker write failed
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19558          in this case ignore the error and continue. All other case raise the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19559          job error notification.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19560          /* [cover parentID={9BBF778D-19B3-4c0e-8DA6-706A97925D40}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19561          if((StateDataPtr->FeeQsJob == FEE_ERASE_JOB ) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19562            ((StateDataPtr->FeeQsState == (uint8)FEE_QS_PROG_STATE_ERASE_STARTED) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19563             (StateDataPtr->FeeQsState == (uint8)FEE_QS_PROG_STATE_DESTROY)))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19564          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19565            /*Reset the StateDataPtr->FeeQsJobStatus to idle.So Fee_lMainQs
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19566            get served*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19567            StateDataPtr->FeeQsJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19568          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19569          else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19570          {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19571            Fee_lHandleQsJobFailure((FEE_NOT_CANCEL));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19572          }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19573  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19574        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19575        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19576        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19577          /*dummy for misra*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19578        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19579        #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19580      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19581  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19582  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19583      #else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19584      /* [cover parentID={FA8C6C3A-D6D7-4304-B51E-151E5CA2069F}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19585      if(StateDataPtr->FeeQsIntrJob != FEE_NO_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19586      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19587        StateDataPtr->FeeQsIntrJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19588        StateDataPtr->FeeQsIntrJobResult = MEMIF_JOB_FAILED;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19589      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19590  	/* [cover parentID={5A5DAA06-2D7D-4170-9A98-DA674E3C7215}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19591      else if(StateDataPtr->FeeQsJob != FEE_NO_JOB)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19592      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19593        /*Check if erase started marker or destroying of all marker write failed
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19594        in this case ignore the error and continue. All other case raise the
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19595        job error notification.*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19596        /* [cover parentID={9BBF778D-19B3-4c0e-8DA6-706A97925D40}][/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19597        if((StateDataPtr->FeeQsJob == FEE_ERASE_JOB ) &&
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19598            ((StateDataPtr->FeeQsState == (uint8)FEE_QS_PROG_STATE_ERASE_STARTED) ||
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19599             (StateDataPtr->FeeQsState == (uint8)FEE_QS_PROG_STATE_DESTROY)))
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19600        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19601          /*Reset the StateDataPtr->FeeQsJobStatus to idle.So Fee_lMainQs
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19602          get served*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19603          StateDataPtr->FeeQsJobStatus = FEE_JOB_IDLE;
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19604        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19605        else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19606        {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19607          Fee_lHandleQsJobFailure((FEE_NOT_CANCEL));
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19608        }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19609      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19610      else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19611      {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19612        /*dummy for misra*/
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19613      }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19614      #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19615  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19616    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19617    #if(FEE_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19618    else
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19619    {
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19620      /* [cover parentID={83CC42E0-B3A9-41a3-B6FC-2ADDB075E8B8}]
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19621      Report safety error with FEE_E_UNINIT
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19622      [/cover] */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19623      Fee_lReportError(FEE_SID_JOBPROGERRORNOTIF,
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19624                          FEE_SE_UNINIT, FEE_SAFETY_ERROR);
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19625    }
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19626    #endif
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19627  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19628  }
	ret
.L1938:
	
__Fee_17_JobProgErrorNotification_function_end:
	.size	Fee_17_JobProgErrorNotification,__Fee_17_JobProgErrorNotification_function_end-Fee_17_JobProgErrorNotification
.L1316:
	; End of function
	
	.sdecl	'.bss.Fee_CfgPtr.ClearedData.Cpu0.32bit',data,cluster('Fee_CfgPtr')
	.sect	'.bss.Fee_CfgPtr.ClearedData.Cpu0.32bit'
	.align	4
Fee_CfgPtr:	.type	object
	.size	Fee_CfgPtr,4
	.space	4
	.sdecl	'.bss.Fee_DataStrcutInitCrc.ClearedData.Cpu0.32bit',data,cluster('Fee_DataStrcutInitCrc')
	.sect	'.bss.Fee_DataStrcutInitCrc.ClearedData.Cpu0.32bit'
	.align	4
Fee_DataStrcutInitCrc:	.type	object
	.size	Fee_DataStrcutInitCrc,4
	.space	4
	.sdecl	'.rodata.Fee_StateHalf.Const.Cpu0.32bit',data,rom,cluster('Fee_StateHalf')
	.sect	'.rodata.Fee_StateHalf.Const.Cpu0.32bit'
	.align	4
Fee_StateHalf:	.type	object
	.size	Fee_StateHalf,36
	.word	-58,-1,-58,-1
	.word	-58,-1,-58,-1
	.word	-84254778
	.calls	'Fee_Init','Fee_lClearFeeReadWriteBuffer'
	.calls	'Fee_Init','Fee_lClearFeeGcReadWriteBuffer'
	.calls	'Fee_Init','Fls_17_Dmu_ReadWordsSync'
	.calls	'Fee_Init','Fee_lUpdateNonZeroWLInfo'
	.calls	'Fee_Init','Fee_lIsUnerasableAddr'
	.calls	'Fee_SetMode','Fee_lGetStatus'
	.calls	'Fee_SetMode','Fls_17_Dmu_SetMode'
	.calls	'Fee_SetMode','Fee_lReportError'
	.calls	'Fee_Read','Fee_lGetStatus'
	.calls	'Fee_Read','Fee_lRegisterNvmRead'
	.calls	'Fee_Write','Fee_lGetStatus'
	.calls	'Fee_Write','Fee_lGetUsrBlockIndex'
	.calls	'Fee_Write','Fee_lRegisterNvmWrite'
	.calls	'Fee_Cancel','Fee_lGetStatus'
	.calls	'Fee_Cancel','Fee_lReportError'
	.calls	'Fee_Cancel','Fls_17_Dmu_CancelNonEraseJobs'
	.calls	'Fee_Cancel','Fee_lHandleUsrJobFailure'
	.calls	'Fee_GetStatus','Fee_lGetStatus'
	.calls	'Fee_GetJobResult','Fee_lGetStatus'
	.calls	'Fee_InvalidateBlock','Fee_lGetStatus'
	.calls	'Fee_InvalidateBlock','Fee_lGetUsrBlockIndex'
	.calls	'Fee_InvalidateBlock','Fee_lRegisterWriteRequest'
	.calls	'Fee_InvalidateBlock','Fee_lReportError'
	.calls	'Fee_JobEndNotification','Fls_17_Dmu_GetNotifCaller'
	.calls	'Fee_JobEndNotification','Fee_lGetUserJob'
	.calls	'Fee_JobEndNotification','__INDIRECT__'
	.calls	'Fee_JobErrorNotification','Fls_17_Dmu_GetNotifCaller'
	.calls	'Fee_JobErrorNotification','Fee_lGetUserJob'
	.calls	'Fee_JobErrorNotification','Fee_lHandleUsrJobFailure'
	.calls	'Fee_JobErrorNotification','Fee_lHandleWriteFail'
	.calls	'Fee_JobErrorNotification','Fee_lGetUsrBlockIndex'
	.calls	'Fee_17_IllegalStateNotification','__INDIRECT__'
	.calls	'Fee_17_GetCycleCount','Fee_lGetStatus'
	.calls	'Fee_17_GetCycleCount','Fee_lGetUsrBlockIndex'
	.calls	'Fee_17_GetCycleCount','Fee_lGetBlkCycleCount'
	.calls	'Fee_17_GetCycleCount','Fee_lReportError'
	.calls	'Fee_17_EnableGcStart','Fee_lGetStatus'
	.calls	'Fee_17_DisableGcStart','Fee_lGetStatus'
	.calls	'Fee_MainFunction','Fee_lDecideMainJob'
	.calls	'Fee_MainFunction','Fee_lInitGC'
	.calls	'Fee_MainFunction','Fee_lUpdateCache'
	.calls	'Fee_MainFunction','Fee_lLocalWrite'
	.calls	'Fee_MainFunction','Fee_lLocalRead'
	.calls	'Fee_MainFunction','Fee_lGarbageCollection'
	.calls	'Fee_17_GetEccErrorInfo','Fee_lGetStatus'
	.calls	'Fee_17_GetEccErrorInfo','Fls_17_Dmu_GetEccErrorPageAddress'
	.calls	'Fee_17_GetEccErrorInfo','Fee_lGetDFLASHPages'
	.calls	'Fee_17_GetEccErrorInfo','Fee_lReportError'
	.calls	'Fee_lHandleUsrJobFailure','__INDIRECT__'
	.calls	'Fee_lIsWriteInvldAllowedbyGC','Fee_lGetUsrBlockIndex'
	.calls	'Fee_lIsWriteInvldAllowedbyGC','Fee_lGetDFLASHPages'
	.calls	'Fee_lIsWriteInvldAllowedbyGC','Fee_lGetFreeDFLASHPages'
	.calls	'Fee_lDecideMainJob','Fee_lIsReadAllowedbyGC'
	.calls	'Fee_lDecideMainJob','Fee_lIsWriteInvldAllowedbyGC'
	.calls	'Fee_lHandleWritePrepDFLASH','Fee_lIsUnerasableAddr'
	.calls	'Fee_lHandleWritePrepDFLASH','Fls_17_Dmu_Write'
	.calls	'Fee_lHandleWritePrepDFLASH','Fee_lHandleInitGcFail'
	.calls	'Fee_lInitGC','Fee_lHandleInitGcFail'
	.calls	'Fee_lInitGC','Fls_17_Dmu_CompareWordsSync'
	.calls	'Fee_lInitGC','Fls_17_Dmu_VerifyErase'
	.calls	'Fee_lInitGC','Fee_lClearFeeGcReadWriteBuffer'
	.calls	'Fee_lInitGC','Fls_17_Dmu_ReadWordsSync'
	.calls	'Fee_lInitGC','Fee_lPrepareMarkerBuffer'
	.calls	'Fee_lInitGC','Fls_17_Dmu_Write'
	.calls	'Fee_lInitGC','Fls_17_Dmu_Erase'
	.calls	'Fee_lInitGC','Fee_lPrepareStatePageBuffer'
	.calls	'Fee_lInitGC','Fee_lClearMarkerBuffer'
	.calls	'Fee_lInitGC','Fee_lHandleWritePrepDFLASH'
	.calls	'Fee_lLastPgHandler','Fee_lGetUsrBlockIndex'
	.calls	'Fee_lLastPgHandler','__INDIRECT__'
	.calls	'Fee_lIsLastWrittenWLAffected','Fee_lGetUsrBlockIndex'
	.calls	'Fee_lIsBlockAcrossWLLatest','Fee_lGetUsrBlockIndex'
	.calls	'Fee_lHandleUserWrite','Fee_lGetBlkCycleCount'
	.calls	'Fee_lHandleUserWrite','Fee_lIsUnerasableAddr'
	.calls	'Fee_lHandleUserWrite','Fee_lGetDFLASHPages'
	.calls	'Fee_lHandleUserWrite','Fls_17_Dmu_Write'
	.calls	'Fee_lHandleUserWrite','Fee_lHandleUsrJobFailure'
	.calls	'Fee_lHandleIntrWrite','Fee_lIsUnerasableAddr'
	.calls	'Fee_lHandleIntrWrite','Fls_17_Dmu_Write'
	.calls	'Fee_lHandleIntrWrite','Fee_lHandleWriteFail'
	.calls	'Fee_lLocalWrite','Fee_lGetUsrBlockIndex'
	.calls	'Fee_lLocalWrite','Fee_lGetBlkCycleCount'
	.calls	'Fee_lLocalWrite','__INDIRECT__'
	.calls	'Fee_lLocalWrite','Fee_lIsUnerasableAddr'
	.calls	'Fee_lLocalWrite','Fee_lGetFreeDFLASHPages'
	.calls	'Fee_lLocalWrite','Fee_lGetDFLASHPages'
	.calls	'Fee_lLocalWrite','Fls_17_Dmu_ReadWordsSync'
	.calls	'Fee_lLocalWrite','Fls_17_Dmu_CompareWordsSync'
	.calls	'Fee_lLocalWrite','Fee_lIsBlockAcrossWLLatest'
	.calls	'Fee_lLocalWrite','Fee_lIsLastWrittenWLAffected'
	.calls	'Fee_lLocalWrite','Fee_lRegisterWriteRequest'
	.calls	'Fee_lLocalWrite','Fee_lHandleUsrJobFailure'
	.calls	'Fee_lLocalWrite','Fee_lLastPgHandler'
	.calls	'Fee_lLocalWrite','Fee_lHandleUserWrite'
	.calls	'Fee_lLocalWrite','Fee_lHandleWriteFail'
	.calls	'Fee_lLocalWrite','Fee_lClearFeeReadWriteBuffer'
	.calls	'Fee_lLocalWrite','Fee_lHandleIntrWrite'
	.calls	'Fee_lLocalRead','Fee_lGetUsrBlockIndex'
	.calls	'Fee_lLocalRead','__INDIRECT__'
	.calls	'Fee_lLocalRead','Fee_lIsUnerasableAddr'
	.calls	'Fee_lLocalRead','Fee_lCheckReadLength'
	.calls	'Fee_lLocalRead','Fee_lClearFeeReadWriteBuffer'
	.calls	'Fee_lLocalRead','Fls_17_Dmu_Read'
	.calls	'Fee_lLocalRead','Fee_lHandleUsrJobFailure'
	.calls	'Fee_lCheckReadLength','Fee_lIsUnerasableAddr'
	.calls	'Fee_lCheckReadLength','Fee_lGetDFLASHPages'
	.calls	'Fee_lGcErrorHandler','Fee_lGcDiscardUnconfigBlk'
	.calls	'Fee_lGcErrorHandler','Fee_lGcDiscardConfigBlk'
	.calls	'Fee_lGcErrorHandler','__INDIRECT__'
	.calls	'Fee_lGcRead','Fee_lIsUnerasableAddr'
	.calls	'Fee_lGcRead','Fls_17_Dmu_Read'
	.calls	'Fee_lGcRead','Fee_lGetUsrBlockIndex'
	.calls	'Fee_lGcRead','Fee_lGcErrorHandler'
	.calls	'Fee_lGcWrite','Fls_17_Dmu_Write'
	.calls	'Fee_lGcPrologue','Fee_lGetUsrBlockIndex'
	.calls	'Fee_lGcPrologue','Fee_lGcErrorHandler'
	.calls	'Fee_lGcStartCopy','Fee_lGetUsrBlockIndex'
	.calls	'Fee_lGcStartCopy','Fee_lGcCheckBlkCopy'
	.calls	'Fee_lGcStartCopy','Fee_lClearFeeGcReadWriteBuffer'
	.calls	'Fee_lGcStartCopy','Fls_17_Dmu_ReadWordsSync'
	.calls	'Fee_lGcStartCopy','Fee_lGcRead'
	.calls	'Fee_lGcStartCopy','Fee_lGcErrorHandler'
	.calls	'Fee_lGcStartCopyWrite','Fls_17_Dmu_CompareWordsSync'
	.calls	'Fee_lGcStartCopyWrite','Fee_lGetUsrBlockIndex'
	.calls	'Fee_lGcStartCopyWrite','Fee_lGcErrorHandler'
	.calls	'Fee_lGcStartCopyWrite','Fee_lIsUnerasableAddr'
	.calls	'Fee_lGcStartCopyWrite','Fee_lGetFreeDFLASHPages'
	.calls	'Fee_lGcStartCopyWrite','Fee_lGcWrite'
	.calls	'Fee_lGcCopyReadNxtPage','Fee_lIsUnerasableAddr'
	.calls	'Fee_lGcCopyReadNxtPage','Fee_lGcRead'
	.calls	'Fee_lGcErasePrevSector','Fls_17_Dmu_VerifySectorErase'
	.calls	'Fee_lGcErasePrevSector','Fee_lGcErrorHandler'
	.calls	'Fee_lGcErasePrevSector','Fls_17_Dmu_Erase'
	.calls	'Fee_lGcProgramStatePage','Fls_17_Dmu_CompareWordsSync'
	.calls	'Fee_lGcProgramStatePage','Fee_lGcErrorHandler'
	.calls	'Fee_lGcProgramStatePage','Fee_lGetFreeDFLASHPages'
	.calls	'Fee_lGcProgramStatePage','Fee_lGetUsrBlockIndex'
	.calls	'Fee_lGcProgramStatePage','Fee_lGetDFLASHPages'
	.calls	'Fee_lGcProgramStatePage','Fls_17_Dmu_SetMode'
	.calls	'Fee_lGcProgramStatePage','Fee_lPrepareStatePageBuffer'
	.calls	'Fee_lGcProgramStatePage','Fee_lClearMarkerBuffer'
	.calls	'Fee_lGcProgramStatePage','Fee_lIsUnerasableAddr'
	.calls	'Fee_lGcProgramStatePage','Fee_lGcWrite'
	.calls	'Fee_lGcProgramStatePage','Fee_lPrepareMarkerBuffer'
	.calls	'Fee_lGarbageCollection','Fee_lGcPrologue'
	.calls	'Fee_lGarbageCollection','Fee_lGcStartCopy'
	.calls	'Fee_lGarbageCollection','Fee_lGcStartCopyWrite'
	.calls	'Fee_lGarbageCollection','Fee_lGcCopyReadNxtPage'
	.calls	'Fee_lGarbageCollection','Fee_lGcProgramStatePage'
	.calls	'Fee_lGarbageCollection','Fee_lGcErasePrevSector'
	.calls	'Fee_lGarbageCollection','Fee_lGcErrorHandler'
	.calls	'Fee_lUpdateCache','Fls_17_Dmu_ReadWordsSync'
	.calls	'Fee_lUpdateCache','Fee_lIsUnerasableAddr'
	.calls	'Fee_lUpdateCache','Fee_lGetUsrBlockIndex'
	.calls	'Fee_lUpdateCache','Fee_lUpdateBlockInfo'
	.calls	'Fee_lUpdateCache','Fee_lUpdateUnconfigBlockInfo'
	.calls	'Fee_lGetBlkCycleCount','Fls_17_Dmu_ReadWordsSync'
	.calls	'Fee_lPrepareStatePageBuffer','Fee_lClearFeeGcReadWriteBuffer'
	.calls	'Fee_lHandleInitGcFail','__INDIRECT__'
	.calls	'Fee_lHandleWriteFail','__INDIRECT__'
	.calls	'Fee_lUpdateBlockInfo','Fee_lGetBlkCycleCount'
	.calls	'Fee_lRegisterNvmRead','Fee_lReportError'
	.calls	'Fee_lRegisterNvmWrite','Fee_lRegisterWriteRequest'
	.calls	'Fee_lRegisterNvmWrite','Fee_lReportError'
	.calls	'Fee_lReportError','Mcal_Wrapper_Det_ReportRuntimeError'
	.calls	'Fee_17_JobEraseErrorNotification','Fls_17_Dmu_GetNotifCaller'
	.calls	'Fee_17_JobProgErrorNotification','Fls_17_Dmu_GetNotifCaller'
	.calls	'Fee_17_JobProgErrorNotification','Fee_lGetUserJob'
	.calls	'Fee_Init','',32
	.calls	'Fee_SetMode','',0
	.calls	'Fee_Read','',0
	.calls	'Fee_Write','',0
	.calls	'Fee_Cancel','',0
	.calls	'Fee_GetStatus','',0
	.calls	'Fee_GetJobResult','',0
	.calls	'Fee_InvalidateBlock','',0
	.calls	'Fee_EraseImmediateBlock','',0
	.calls	'Fee_17_InitCheck','',0
	.calls	'Fee_JobEndNotification','',0
	.calls	'Fee_JobErrorNotification','',0
	.calls	'Fee_17_IllegalStateNotification','',0
	.calls	'Fee_17_GetCycleCount','',0
	.calls	'Fee_17_EnableGcStart','',0
	.calls	'Fee_17_DisableGcStart','',0
	.calls	'Fee_MainFunction','',0
	.calls	'Fee_17_GetEccErrorInfo','',8
	.calls	'Fee_GetVersionInfo','',0
	.calls	'Fee_lHandleUsrJobFailure','',0
	.calls	'Fee_lGetStatus','',0
	.calls	'Fee_lGetUserJob','',0
	.calls	'Fee_lIsReadAllowedbyGC','',0
	.calls	'Fee_lIsWriteInvldAllowedbyGC','',0
	.calls	'Fee_lDecideMainJob','',0
	.calls	'Fee_lHandleWritePrepDFLASH','',0
	.calls	'Fee_lInitGC','',0
	.calls	'Fee_lLastPgHandler','',0
	.calls	'Fee_lIsLastWrittenWLAffected','',8
	.calls	'Fee_lIsBlockAcrossWLLatest','',0
	.calls	'Fee_lHandleUserWrite','',0
	.calls	'Fee_lHandleIntrWrite','',0
	.calls	'Fee_lLocalWrite','',8
	.calls	'Fee_lRegisterWriteRequest','',0
	.calls	'Fee_lLocalRead','',0
	.calls	'Fee_lCheckReadLength','',0
	.calls	'Fee_lGcErrorHandler','',0
	.calls	'Fee_lGcRead','',0
	.calls	'Fee_lGcWrite','',0
	.calls	'Fee_lGcPrologue','',0
	.calls	'Fee_lGcDiscardUnconfigBlk','',0
	.calls	'Fee_lGcDiscardConfigBlk','',0
	.calls	'Fee_lGcCheckBlkCopy','',0
	.calls	'Fee_lGcStartCopy','',0
	.calls	'Fee_lGcStartCopyWrite','',0
	.calls	'Fee_lGcCopyReadNxtPage','',0
	.calls	'Fee_lGcErasePrevSector','',0
	.calls	'Fee_lGcProgramStatePage','',8
	.calls	'Fee_lGarbageCollection','',0
	.calls	'Fee_lGetDFLASHPages','',0
	.calls	'Fee_lGetFreeDFLASHPages','',0
	.calls	'Fee_lGetUsrBlockIndex','',0
	.calls	'Fee_lUpdateCache','',24
	.calls	'Fee_lGetBlkCycleCount','',0
	.calls	'Fee_lUpdateNonZeroWLInfo','',0
	.calls	'Fee_lIsUnerasableAddr','',0
	.calls	'Fee_lPrepareStatePageBuffer','',0
	.calls	'Fee_lPrepareMarkerBuffer','',0
	.calls	'Fee_lClearMarkerBuffer','',0
	.calls	'Fee_lClearFeeReadWriteBuffer','',0
	.calls	'Fee_lClearFeeGcReadWriteBuffer','',0
	.calls	'Fee_lHandleInitGcFail','',0
	.calls	'Fee_lHandleWriteFail','',0
	.calls	'Fee_lUpdateBlockInfo','',0
	.calls	'Fee_lUpdateUnconfigBlockInfo','',0
	.calls	'Fee_lRegisterNvmRead','',0
	.calls	'Fee_lRegisterNvmWrite','',0
	.calls	'Fee_lReportError','',0
	.calls	'Fee_17_JobEraseErrorNotification','',0
	.extern	Mcal_Wrapper_Det_ReportRuntimeError
	.extern	Fls_17_Dmu_Erase
	.extern	Fls_17_Dmu_Write
	.extern	Fls_17_Dmu_GetEccErrorPageAddress
	.extern	Fls_17_Dmu_CancelNonEraseJobs
	.extern	Fls_17_Dmu_SetMode
	.extern	Fls_17_Dmu_Read
	.extern	Fls_17_Dmu_ReadWordsSync
	.extern	Fls_17_Dmu_GetNotifCaller
	.extern	Fls_17_Dmu_CompareWordsSync
	.extern	Fls_17_Dmu_VerifyErase
	.extern	Fls_17_Dmu_VerifySectorErase
	.extern	__INDIRECT__
	.calls	'Fee_17_JobProgErrorNotification','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L1214:
	.word	130127
	.half	3
	.word	.L1215
	.byte	4
.L1213:
	.byte	1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1216
.L1592:
	.byte	2
	.byte	'unsigned char',0,1,8,2
	.byte	'unsigned int',0,4,7,3
	.byte	'OsIntc_InISR2',0,3,1,227,1,31,1,1,4
	.byte	'CoreID',0,1,229,1,16
	.word	157
	.byte	4
	.byte	'ISRID',0,1,230,1,13
	.word	157
	.byte	4
	.byte	'val',0,1,231,1,15
	.word	174
	.byte	4
	.byte	'fcx',0,1,232,1,15
	.word	174
	.byte	5,0
.L1781:
	.byte	2
	.byte	'unsigned short int',0,2,7
.L1589:
	.byte	2
	.byte	'unsigned long int',0,4,7,6
	.word	293
.L1876:
	.byte	7
	.byte	'Fee_lGetEccErrorBlockNumber',0,3,2,157,31,21
	.word	271
	.byte	1,1
.L1879:
	.byte	4
	.byte	'PageAddress',0,2,157,31,62
	.word	314
.L1881:
	.byte	5,0,6
	.word	157
.L2075:
	.byte	3
	.byte	'Fee_lRegNvmReadDetCheck',0,3,2,129,115,19,1,1
.L2077:
	.byte	4
	.byte	'DetCall',0,2,129,115,49
	.word	157
.L2079:
	.byte	4
	.byte	'GetPrevCopy',0,2,129,115,70
	.word	382
.L2081:
	.byte	5,0,6
	.word	157
.L2063:
	.byte	7
	.byte	'Fee_lRegisterNvmReadUpdate',0,3,2,219,115,29
	.word	157
	.byte	1,1
.L2066:
	.byte	4
	.byte	'DetCall',0,2,219,115,62
	.word	157
.L2068:
	.byte	4
	.byte	'RetVal',0,2,220,115,49
	.word	157
.L2070:
	.byte	4
	.byte	'GetPrevCopy',0,2,220,115,69
	.word	459
.L2072:
	.byte	8,5,0,0
.L1948:
	.byte	3
	.byte	'Fee_lMainNoneTransHdlr',0,3,2,239,39,19,1,1
.L1950:
	.byte	8,5,5,0,0
.L1974:
	.byte	3
	.byte	'Fee_lMainReadTransHdlr',0,3,2,161,41,19,1,1
.L1975:
	.byte	8,5,5,0,0
.L1988:
	.byte	3
	.byte	'Fee_lMainWriteTransHdlr',0,3,2,245,41,19,1,1
.L1990:
	.byte	8,5,0,0
.L1965:
	.byte	3
	.byte	'Fee_lMainCacheUpdtTransHdlr',0,3,2,213,40,19,1,1
.L1967:
	.byte	8,5,5,0,0,6
	.word	293
.L2185:
	.byte	3
	.byte	'Fee_lCheckPrevPage',0,3,2,134,96,19,1,1
.L2186:
	.byte	4
	.byte	'EndAddr',0,2,134,96,51
	.word	710
.L2188:
	.byte	5,0,6
	.word	293
.L1644:
	.byte	9
	.word	157
	.byte	6
	.word	766
.L2278:
	.byte	3
	.byte	'Fee_lPrepareInvldReqBuff',0,3,2,188,54,19,1,1
.L2281:
	.byte	4
	.byte	'BlockCycleCount',0,2,188,54,57
	.word	761
.L2283:
	.byte	4
	.byte	'ReadWriteBuffPtr',0,2,189,54,19
	.word	771
.L2285:
	.byte	5,0,6
	.word	157
	.byte	6
	.word	293
.L2230:
	.byte	3
	.byte	'Fee_lHandleBlkHeaderFound',0,3,2,203,95,19,1,1
.L2232:
	.byte	4
	.byte	'PotentialMarkerPage',0,2,203,95,57
	.word	862
.L2234:
	.byte	4
	.byte	'DataNextPageCount',0,2,204,95,18
	.word	867
.L2236:
	.byte	5,0,6
	.word	293
	.byte	6
	.word	293
	.byte	6
	.word	271
.L2211:
	.byte	3
	.byte	'Fee_lHandleBlkMarkerFound',0,3,2,225,94,19,1,1
.L2212:
	.byte	4
	.byte	'LWBHeaderAddress',0,2,225,94,58
	.word	964
.L2214:
	.byte	4
	.byte	'LWBMarkerAddress',0,2,226,94,18
	.word	969
.L2216:
	.byte	4
	.byte	'PageCount',0,2,227,94,18
	.word	974
.L2218:
	.byte	8,5,0,0
.L1646:
	.byte	10,8
	.word	293
	.byte	11,1,0
.L1679:
	.byte	10,12
	.word	293
	.byte	11,2,0,12,3,213,2,10,1,13
	.byte	'Dirty',0,1
	.word	157
	.byte	1,7,2,35,0,13
	.byte	'Used',0,1
	.word	157
	.byte	1,6,2,35,0,13
	.byte	'unused',0,1
	.word	157
	.byte	6,0,2,35,0,0,12,3,226,2,9,40,14
	.byte	'StateCount',0
	.word	293
	.byte	4,2,35,0,14
	.byte	'UnerasableWLAddr',0
	.word	1088
	.byte	8,2,35,4,14
	.byte	'NonZeroWLAddr',0
	.word	1097
	.byte	12,2,35,12,14
	.byte	'NonZeroWLCount',0
	.word	293
	.byte	4,2,35,24,14
	.byte	'StatePageAddr',0
	.word	293
	.byte	4,2,35,28,14
	.byte	'NextFreeWLAddr',0
	.word	293
	.byte	4,2,35,32,14
	.byte	'UnerasableWLCount',0
	.word	157
	.byte	1,2,35,36,14
	.byte	'State',0
	.word	157
	.byte	1,2,35,37,14
	.byte	'Status',0
	.word	1106
	.byte	1,2,35,38,0
.L1585:
	.byte	9
	.word	1164
	.byte	6
	.word	1369
.L1707:
	.byte	3
	.byte	'Fee_lComputeNextWLAddr',0,3,2,176,91,19,1,1
.L1709:
	.byte	4
	.byte	'SectorInfoPtr',0,2,177,91,5
	.word	1374
.L1711:
	.byte	8,5,0,0
.L1615:
	.byte	7
	.byte	'Fee_lEvaluateStatePage',0,3,2,248,100,20
	.word	157
	.byte	1,1
.L1616:
	.byte	8,5,5,0,0
.L1627:
	.byte	7
	.byte	'Fee_lEvaluateStatePageFormat',0,3,2,215,99,20
	.word	157
	.byte	1,1
.L1629:
	.byte	8,5,0,0
.L1639:
	.byte	7
	.byte	'Fee_lEvaluateStatePageMarker',0,3,2,133,99,20
	.word	157
	.byte	1,1
.L1640:
	.byte	5,0,6
	.word	293
.L1608:
	.byte	9
	.word	1565
	.byte	6
	.word	1570
	.byte	6
	.word	293
.L1650:
	.byte	7
	.byte	'Fee_lEvaluateStatePageCrc',0,3,2,210,100,21
	.word	293
	.byte	1,1
.L1653:
	.byte	4
	.byte	'DataPtr',0,2,210,100,68
	.word	1575
.L1655:
	.byte	4
	.byte	'Length',0,2,211,100,18
	.word	1580
.L1657:
	.byte	5,0,6
	.word	293
.L1912:
	.byte	7
	.byte	'Fee_lIsWLBeginning',0,3,2,248,32,21
	.word	293
	.byte	1,1
.L1915:
	.byte	4
	.byte	'address',0,2,248,32,53
	.word	1658
.L1917:
	.byte	5,0,6
	.word	293
.L1684:
	.byte	7
	.byte	'Fee_lGetNextWLAddr',0,3,2,174,33,21
	.word	293
	.byte	1,1
.L1687:
	.byte	4
	.byte	'address',0,2,174,33,53
	.word	1713
.L1689:
	.byte	8,5,0,0,6
	.word	293
.L1690:
	.byte	7
	.byte	'Fee_lGetWLBeginning',0,3,2,148,33,21
	.word	293
	.byte	1,1
.L1691:
	.byte	4
	.byte	'address',0,2,148,33,54
	.word	1770
.L1693:
	.byte	5,0,6
	.word	271
	.byte	6
	.word	293
.L2878:
	.byte	7
	.byte	'Fee_lIsBlockAffected',0,3,2,167,60,22
	.word	157
	.byte	1,1
.L2880:
	.byte	4
	.byte	'BlockNumber',0,2,167,60,56
	.word	1826
.L2882:
	.byte	4
	.byte	'BlockAddr',0,2,168,60,18
	.word	1831
.L2884:
	.byte	5,0,6
	.word	271
	.byte	6
	.word	271
.L2198:
	.byte	7
	.byte	'Fee_lEvaluateBlkHeader',0,3,2,241,93,29
	.word	157
	.byte	1,1
.L2201:
	.byte	4
	.byte	'BlockNumber',0,2,241,93,65
	.word	1911
.L2203:
	.byte	4
	.byte	'BlockPageCount',0,2,242,93,18
	.word	1916
.L2205:
	.byte	5,0,6
	.word	271
.L2460:
	.byte	7
	.byte	'Fee_lPerformReadCheck',0,3,2,174,111,29
	.word	157
	.byte	1,1
.L2463:
	.byte	4
	.byte	'UserBlockIndex',0,2,174,111,64
	.word	2003
.L2465:
	.byte	5,0,12,3,215,1,9,8,13
	.byte	'CycleCountLimit',0,4
	.word	174
	.byte	24,8,2,35,0,13
	.byte	'FeeImmediateData',0,1
	.word	157
	.byte	8,0,2,35,3,13
	.byte	'BlockNumber',0,2
	.word	271
	.byte	16,0,2,35,4,13
	.byte	'Size',0,2
	.word	271
	.byte	16,0,2,35,6,0,6
	.word	2068
.L1807:
	.byte	9
	.word	2169
	.byte	6
	.word	2174
	.byte	6
	.word	293
.L2555:
	.byte	7
	.byte	'Fee_lCheckBlkCycleCnt',0,3,2,172,56,29
	.word	157
	.byte	1,1
.L2557:
	.byte	4
	.byte	'BlockPtr',0,2,173,56,30
	.word	2179
.L2559:
	.byte	4
	.byte	'BlockCycleCount',0,2,174,56,16
	.word	2184
.L2561:
	.byte	5,0,6
	.word	157
	.byte	6
	.word	157
.L1731:
	.byte	7
	.byte	'Fee_lIsSectorEmpty',0,3,2,210,32,22
	.word	157
	.byte	1,1
.L1733:
	.byte	4
	.byte	'state',0,2,210,32,53
	.word	2268
.L1735:
	.byte	4
	.byte	'used',0,2,210,32,72
	.word	2273
.L1737:
	.byte	5,0,10,80
	.word	1164
	.byte	11,1,0
.L2222:
	.byte	12,3,239,1,9,1,13
	.byte	'Valid',0,1
	.word	157
	.byte	1,7,2,35,0,13
	.byte	'Consistent',0,1
	.word	157
	.byte	1,6,2,35,0,13
	.byte	'Copied',0,1
	.word	157
	.byte	1,5,2,35,0,13
	.byte	'PrevCopyValid',0,1
	.word	157
	.byte	1,4,2,35,0,13
	.byte	'PrevCopyConsistent',0,1
	.word	157
	.byte	1,3,2,35,0,13
	.byte	'PrevCopyCopied',0,1
	.word	157
	.byte	1,2,2,35,0,0,12,3,134,2,9,24,14
	.byte	'Address',0
	.word	293
	.byte	4,2,35,0,14
	.byte	'BlockSize',0
	.word	293
	.byte	4,2,35,4,14
	.byte	'BlockNumber',0
	.word	271
	.byte	2,2,35,8,14
	.byte	'Status',0
	.word	2349
	.byte	1,2,35,10,14
	.byte	'PrevCopyAddress',0
	.word	293
	.byte	4,2,35,12,14
	.byte	'PrevBlkSize',0
	.word	293
	.byte	4,2,35,16,14
	.byte	'Blkcylcnt',0
	.word	271
	.byte	2,2,35,20,0,10,136,5
	.word	2494
	.byte	11,26,0,12,3,133,3,9,12,14
	.byte	'Addr',0
	.word	293
	.byte	4,2,35,0,14
	.byte	'PageCount',0
	.word	271
	.byte	2,2,35,4,14
	.byte	'BlockNumber',0
	.word	271
	.byte	2,2,35,6,14
	.byte	'Status',0
	.word	2349
	.byte	1,2,35,8,0,12,3,146,3,9,12,14
	.byte	'Addr',0
	.word	293
	.byte	4,2,35,0,14
	.byte	'PageCount',0
	.word	271
	.byte	2,2,35,4,14
	.byte	'BlockNumber',0
	.word	271
	.byte	2,2,35,6,14
	.byte	'Consistent',0
	.word	157
	.byte	1,2,35,8,0,6
	.word	157
.L1622:
	.byte	9
	.word	2807
	.byte	12,3,158,2,9,16,14
	.byte	'DataBufferPtr',0
	.word	766
	.byte	4,2,35,0,14
	.byte	'DataWriteBufferPtr',0
	.word	2812
	.byte	4,2,35,4,14
	.byte	'BlockNumber',0
	.word	271
	.byte	2,2,35,8,14
	.byte	'BlockOffset',0
	.word	271
	.byte	2,2,35,10,14
	.byte	'Length',0
	.word	271
	.byte	2,2,35,12,0,10,128,1
	.word	293
	.byte	11,31,0,10,128,4
	.word	157
	.byte	11,255,3,0
.L1829:
	.byte	15,4,45,9,1,16
	.byte	'MEMIF_JOB_OK',0,0,16
	.byte	'MEMIF_JOB_FAILED',0,1,16
	.byte	'MEMIF_JOB_PENDING',0,2,16
	.byte	'MEMIF_JOB_CANCELED',0,3,16
	.byte	'MEMIF_BLOCK_INCONSISTENT',0,4,16
	.byte	'MEMIF_BLOCK_INVALID',0,5,0,12,3,181,2,10,1,13
	.byte	'FeeBlkModified',0,1
	.word	157
	.byte	1,7,2,35,0,13
	.byte	'FeeStartInitGC',0,1
	.word	157
	.byte	1,6,2,35,0,13
	.byte	'FeeCurrSector',0,1
	.word	157
	.byte	1,5,2,35,0,13
	.byte	'FeeBlkInvalidStatus',0,1
	.word	157
	.byte	1,4,2,35,0,13
	.byte	'FeeWriteInvldQSeraseAPICalled',0,1
	.word	157
	.byte	1,3,2,35,0,13
	.byte	'unused',0,1
	.word	157
	.byte	2,1,2,35,0,0,15,4,55,9,1,16
	.byte	'MEMIF_MODE_SLOW',0,0,16
	.byte	'MEMIF_MODE_FAST',0,1,0,12,3,171,3,9,236,19,14
	.byte	'FeeSectorInfo',0
	.word	2340
	.byte	80,2,35,0,14
	.byte	'FeeBlockInfo',0
	.word	2639
	.byte	136,5,2,35,80,14
	.byte	'FeeLastWrittenBlkInfo',0
	.word	2649
	.byte	12,3,35,216,5,14
	.byte	'FeeGcCurrBlkInfo',0
	.word	2726
	.byte	12,3,35,228,5,14
	.byte	'FeePendReqInfo',0
	.word	2817
	.byte	16,3,35,240,5,14
	.byte	'FeeGcLWBGcSrcAddr',0
	.word	2933
	.byte	128,1,3,35,128,6,14
	.byte	'FeeTempArray',0
	.word	1088
	.byte	8,3,35,128,7,14
	.byte	'FeeStateCount',0
	.word	293
	.byte	4,3,35,136,7,14
	.byte	'FeeReadWriteBuffer',0
	.word	2943
	.byte	128,4,3,35,140,7,14
	.byte	'FeeGcReadWriteBuffer',0
	.word	2943
	.byte	128,4,3,35,140,11,14
	.byte	'FeeLastWrittenBlkBuffer',0
	.word	2943
	.byte	128,4,3,35,140,15,14
	.byte	'FeeGcDestAddr',0
	.word	293
	.byte	4,3,35,140,19,14
	.byte	'FeeGcSrcAddr',0
	.word	293
	.byte	4,3,35,144,19,14
	.byte	'FeeNextFreePageAddr',0
	.word	293
	.byte	4,3,35,148,19,14
	.byte	'FeeWriteAffectedAddr',0
	.word	293
	.byte	4,3,35,152,19,14
	.byte	'FeeBlockStartAddr',0
	.word	293
	.byte	4,3,35,156,19,14
	.byte	'FeeCurrSectSrcAddr',0
	.word	293
	.byte	4,3,35,160,19,14
	.byte	'FeeUnErasableWLAddrTemp',0
	.word	1088
	.byte	8,3,35,164,19,14
	.byte	'FeeUserReadDestPtr',0
	.word	766
	.byte	4,3,35,172,19,14
	.byte	'FeeJobResult',0
	.word	2954
	.byte	1,3,35,176,19,14
	.byte	'FeeLastWriteSize',0
	.word	293
	.byte	4,3,35,178,19,14
	.byte	'FeeLastReadSize',0
	.word	293
	.byte	4,3,35,182,19,14
	.byte	'FeeComparedLen',0
	.word	271
	.byte	2,3,35,186,19,14
	.byte	'FeeReadLen',0
	.word	271
	.byte	2,3,35,188,19,14
	.byte	'FeeBlkPageCount',0
	.word	271
	.byte	2,3,35,190,19,14
	.byte	'FeeUserWriteBytesCount',0
	.word	271
	.byte	2,3,35,192,19,14
	.byte	'FeeCurrReqBlockNum',0
	.word	271
	.byte	2,3,35,194,19,14
	.byte	'FeeIntrCurrReqPageCount',0
	.word	271
	.byte	2,3,35,196,19,14
	.byte	'FeeGCCopyIndex',0
	.word	271
	.byte	2,3,35,198,19,14
	.byte	'FeeGCUnconfigBlkCopyIndex',0
	.word	271
	.byte	2,3,35,200,19,14
	.byte	'FeeUnConfigBlockCount',0
	.word	271
	.byte	2,3,35,202,19,14
	.byte	'FeeGcPrevBlockNumber',0
	.word	271
	.byte	2,3,35,204,19,14
	.byte	'FeeGcFirstBlkNumInWL',0
	.word	271
	.byte	2,3,35,206,19,14
	.byte	'FeeStatusFlags',0
	.word	3084
	.byte	1,3,35,208,19,14
	.byte	'FeeLastWrittenBlockDirty',0
	.word	157
	.byte	1,3,35,209,19,14
	.byte	'FeePendReqStatus',0
	.word	157
	.byte	1,3,35,210,19,14
	.byte	'FeeGcState',0
	.word	157
	.byte	1,3,35,211,19,14
	.byte	'FeeGcResumeState',0
	.word	157
	.byte	1,3,35,212,19,14
	.byte	'FeeGcBlkIndexInWL',0
	.word	157
	.byte	1,3,35,213,19,14
	.byte	'FeeInitGCState',0
	.word	157
	.byte	1,3,35,214,19,14
	.byte	'FeePrepDFLASHState',0
	.word	157
	.byte	1,3,35,215,19,14
	.byte	'FeeCacheState',0
	.word	157
	.byte	1,3,35,216,19,14
	.byte	'FeeRepairStep',0
	.word	157
	.byte	1,3,35,217,19,14
	.byte	'FeeWLAffectedType',0
	.word	157
	.byte	1,3,35,218,19,14
	.byte	'FeeIntrJob',0
	.word	157
	.byte	1,3,35,219,19,14
	.byte	'FeeIntrJobStatus',0
	.word	157
	.byte	1,3,35,220,19,14
	.byte	'FeeUserJobStatus',0
	.word	157
	.byte	1,3,35,221,19,14
	.byte	'FeeIntrJobResult',0
	.word	157
	.byte	1,3,35,222,19,14
	.byte	'FeeUserJobResult',0
	.word	157
	.byte	1,3,35,223,19,14
	.byte	'FeeMainJob',0
	.word	157
	.byte	1,3,35,224,19,14
	.byte	'FeeUserJobFailCount',0
	.word	157
	.byte	1,3,35,225,19,14
	.byte	'FeeIntrJobFailCount',0
	.word	157
	.byte	1,3,35,226,19,14
	.byte	'FeeUncfgBlksExceeded',0
	.word	157
	.byte	1,3,35,227,19,14
	.byte	'FeeUnErasableWLCountTemp',0
	.word	157
	.byte	1,3,35,228,19,14
	.byte	'FeeSectorCount',0
	.word	157
	.byte	1,3,35,229,19,14
	.byte	'FeeDisableGCStart',0
	.word	157
	.byte	1,3,35,230,19,14
	.byte	'FeeGCImmBlkWrite',0
	.word	157
	.byte	1,3,35,231,19,14
	.byte	'FeeEraseVerErr',0
	.word	157
	.byte	1,3,35,232,19,14
	.byte	'FeeProgVerErr',0
	.word	157
	.byte	1,3,35,233,19,14
	.byte	'FeeSetModeReqPend',0
	.word	157
	.byte	1,3,35,234,19,14
	.byte	'FeeChangeReqMode',0
	.word	3258
	.byte	1,3,35,235,19,0,6
	.word	3300
.L1631:
	.byte	9
	.word	4991
	.byte	6
	.word	4996
.L1952:
	.byte	7
	.byte	'Fee_lIsUserReadReqstd',0,3,2,128,32,22
	.word	157
	.byte	1,1
.L1955:
	.byte	4
	.byte	's_ptr',0,2,129,32,11
	.word	5001
.L1957:
	.byte	5,0,6
	.word	4996
.L1959:
	.byte	7
	.byte	'Fee_lIsUserWriteInvldReqstd',0,3,2,166,32,22
	.word	157
	.byte	1,1
.L1961:
	.byte	4
	.byte	's_ptr',0,2,167,32,34
	.word	5057
.L1963:
	.byte	5,0,6
	.word	157
.L1815:
	.byte	7
	.byte	'Fee_lInitSafetyCheck',0,3,2,218,143,1,29
	.word	157
	.byte	1,1
.L1818:
	.byte	4
	.byte	'ApiId',0,2,218,143,1,62
	.word	5119
.L1820:
	.byte	5,0,6
	.word	1570
.L1785:
	.byte	7
	.byte	'Fee_lGetCycleSafetyCheck',0,3,2,243,145,1,29
	.word	157
	.byte	1,1
.L1788:
	.byte	4
	.byte	'CountPtr',0,2,244,145,1,33
	.word	5176
.L1790:
	.byte	5,0
.L2684:
	.byte	3
	.byte	'Fee_lHandleIntrRead',0,3,2,180,62,19,1,1
.L2686:
	.byte	8,5,5,5,0,0,6
	.word	293
.L2155:
	.byte	3
	.byte	'Fee_lComputeNextFreePageAddr',0,3,2,218,89,19,1,1
.L2157:
	.byte	4
	.byte	'BankNumber',0,2,218,89,61
	.word	5274
.L2159:
	.byte	5,0,6
	.word	293
	.byte	6
	.word	293
.L2168:
	.byte	3
	.byte	'Fee_lUpdateCacheTable',0,3,2,131,92,19,1,1
.L2169:
	.byte	4
	.byte	'BankNumber',0,2,131,92,54
	.word	5338
.L2171:
	.byte	4
	.byte	'EndAddr',0,2,132,92,54
	.word	5343
.L2173:
	.byte	8,5,5,5,5,5,5,0,0,6
	.word	2174
.L2544:
	.byte	7
	.byte	'Fee_lPerformWriteCheck',0,3,2,187,110,29
	.word	157
	.byte	1,1
.L2547:
	.byte	4
	.byte	'BlockPtr',0,2,188,110,31
	.word	5424
.L2549:
	.byte	8,5,5,5,5,0,0,6
	.word	2174
.L2602:
	.byte	7
	.byte	'Fee_lPerformCurrBlkCheck',0,3,2,173,109,29
	.word	157
	.byte	1,1
.L2603:
	.byte	4
	.byte	'BlockPtr',0,2,174,109,31
	.word	5489
.L2605:
	.byte	8,5,5,5,5,5,0,0,6
	.word	293
	.byte	6
	.word	271
.L2190:
	.byte	7
	.byte	'Fee_lGetBlockHeaderAddress',0,3,2,173,94,21
	.word	293
	.byte	1,1
.L2191:
	.byte	4
	.byte	'LWBMarkerAddress',0,2,173,94,61
	.word	5557
.L2193:
	.byte	4
	.byte	'PageCount',0,2,174,94,18
	.word	5562
.L2195:
	.byte	5,0,6
	.word	4996
.L1979:
	.byte	7
	.byte	'Fee_lIsGcTriggeredOnce',0,3,2,205,33,22
	.word	157
	.byte	1,1
.L1982:
	.byte	4
	.byte	'StateDataPtr',0,2,206,33,13
	.word	5653
.L1984:
	.byte	5,0,6
	.word	293
	.byte	6
	.word	293
.L2588:
	.byte	7
	.byte	'Fee_lIsSectorThresholdCrossed',0,3,2,251,33,22
	.word	157
	.byte	1,1
.L2591:
	.byte	4
	.byte	'FreePages',0,2,251,33,65
	.word	5717
.L2593:
	.byte	4
	.byte	'PageCount',0,2,252,33,18
	.word	5722
.L2595:
	.byte	5,0,6
	.word	293
	.byte	6
	.word	293
.L3075:
	.byte	7
	.byte	'Fee_lIsSectorEndCrossed',0,3,2,171,34,22
	.word	157
	.byte	1,1
.L3078:
	.byte	4
	.byte	'FreePages',0,2,171,34,59
	.word	5809
.L3080:
	.byte	4
	.byte	'PageCount',0,2,172,34,18
	.word	5814
.L3082:
	.byte	5,0
.L2741:
	.byte	7
	.byte	'Fee_lGcCheckUnconfigBlkCopy',0,3,2,211,36,22
	.word	157
	.byte	1,1
.L2744:
	.byte	5,0,6
	.word	157
	.byte	6
	.word	271
.L2436:
	.byte	7
	.byte	'Fee_lLocalReadStart',0,3,2,221,69,21
	.word	271
	.byte	1,1
.L2439:
	.byte	4
	.byte	'ReturnValue',0,2,221,69,62
	.word	5937
.L2441:
	.byte	4
	.byte	'UserBlockIndex',0,2,222,69,54
	.word	5942
.L2443:
	.byte	8,5,5,0,0
.L1994:
	.byte	3
	.byte	'Fee_lMainGCTransHdlr',0,3,2,172,39,19,1,1
.L1996:
	.byte	8,5,5,0,0
.L2418:
	.byte	3
	.byte	'Fee_lHandleErasePrepDFLASH',0,3,2,225,43,19,1,1
.L2419:
	.byte	5,0
.L2395:
	.byte	3
	.byte	'Fee_lIDSM',0,3,2,222,44,19,1,1
.L2397:
	.byte	8,5,0,0
.L2408:
	.byte	3
	.byte	'Fee_lINSM',0,3,2,200,45,19,1,1
.L2410:
	.byte	5,0
.L2412:
	.byte	3
	.byte	'Fee_lIPrepDFlashSM',0,3,2,178,46,19,1,1
.L2414:
	.byte	8,5,0,0
.L2324:
	.byte	3
	.byte	'Fee_lInitGCDSMTransHandler',0,3,2,174,47,19,1,1
.L2326:
	.byte	5,0
.L2334:
	.byte	3
	.byte	'Fee_lInitGCPrepDFlsTransHandler',0,3,2,237,48,19,1,1
.L2336:
	.byte	8,5,5,5,5,5,5,5,5,0,0
.L2365:
	.byte	7
	.byte	'Fee_lPrepDFlashStateEraseS0',0,3,2,163,51,20
	.word	157
	.byte	1,1
.L2367:
	.byte	5,0
.L2372:
	.byte	7
	.byte	'Fee_lPrepDFlashStateEraseS1',0,3,2,205,50,20
	.word	157
	.byte	1,1
.L2374:
	.byte	5,0,6
	.word	157
.L2344:
	.byte	7
	.byte	'Fee_lPrepDFlashStatepageProgram',0,3,2,147,50,20
	.word	157
	.byte	1,1
.L2347:
	.byte	4
	.byte	'PrepDFlashStatePrm',0,2,147,50,64
	.word	6345
.L2349:
	.byte	5,0
.L2320:
	.byte	3
	.byte	'Fee_lInitGCTransHandler',0,3,2,255,51,19,1,1
.L2322:
	.byte	8,5,5,0,0
.L2713:
	.byte	3
	.byte	'Fee_lHandleGcFail',0,3,2,202,71,19,1,1
.L2714:
	.byte	5,0
.L2796:
	.byte	3
	.byte	'Fee_lGcRequested',0,3,2,138,73,19,1,1
.L2798:
	.byte	5,0
.L2914:
	.byte	3
	.byte	'Fee_lGcBlkCompare',0,3,2,189,78,19,1,1
.L2916:
	.byte	8,5,5,5,5,5,0,0
.L2931:
	.byte	3
	.byte	'Fee_lHandleUnConfigGcCopyError',0,3,2,133,80,19,1,1
.L2933:
	.byte	5,0
.L2941:
	.byte	3
	.byte	'Fee_lHandleConfigGcCopyError',0,3,2,193,80,19,1,1
.L2943:
	.byte	5,0,6
	.word	157
.L2975:
	.byte	3
	.byte	'Fee_lGcEraseCompare',0,3,2,131,82,19,1,1
.L2977:
	.byte	4
	.byte	'GcState',0,2,131,82,51
	.word	6630
.L2979:
	.byte	5,0,6
	.word	157
.L2993:
	.byte	3
	.byte	'Fee_lGcStatePageCompare',0,3,2,251,83,19,1,1
.L2996:
	.byte	4
	.byte	'GcState',0,2,251,83,55
	.word	6682
.L2998:
	.byte	8,5,5,0,0,6
	.word	157
.L3009:
	.byte	7
	.byte	'Fee_lGcStatePageComparePass',0,3,2,240,84,20
	.word	157
	.byte	1,1
.L3010:
	.byte	4
	.byte	'GcState',0,2,240,84,60
	.word	6741
.L3012:
	.byte	8,5,5,5,5,5,0,0,6
	.word	157
.L3024:
	.byte	7
	.byte	'Fee_lGcStatePageComparePassSetnewState',0,3,2,163,86,20
	.word	157
	.byte	1,1
.L3026:
	.byte	4
	.byte	'GcState',0,2,163,86,71
	.word	6811
.L3028:
	.byte	5,0,6
	.word	1369
	.byte	6
	.word	293
.L1662:
	.byte	7
	.byte	'Fee_lCheckPrevWordline',0,3,2,185,97,20
	.word	157
	.byte	1,1
.L1663:
	.byte	4
	.byte	'SectorInfoPtr',0,2,186,97,5
	.word	6886
.L1665:
	.byte	4
	.byte	'EndAddr',0,2,186,97,33
	.word	6891
.L1667:
	.byte	8,5,5,0,0,6
	.word	1369
.L1673:
	.byte	3
	.byte	'Fee_lGetSectorFreeWL',0,3,2,149,98,19,1,1
.L1674:
	.byte	4
	.byte	'SectorInfoPtr',0,2,149,98,66
	.word	6976
.L1676:
	.byte	8,5,5,5,5,5,5,5,5,5,0,0,6
	.word	157
.L1744:
	.byte	3
	.byte	'Fee_lSetInitGc',0,3,2,183,101,19,1,1
.L1747:
	.byte	4
	.byte	'DFlashStatus',0,2,183,101,46
	.word	7045
.L1749:
	.byte	5,0
.L1720:
	.byte	7
	.byte	'Fee_lBuildDFlashStatus',0,3,2,230,102,20
	.word	157
	.byte	1,1
.L1722:
	.byte	8,5,5,0,0,6
	.word	293
	.byte	6
	.word	293
.L1595:
	.byte	7
	.byte	'Fee_lGetSectorInfo',0,3,2,237,103,20
	.word	157
	.byte	1,1
.L1598:
	.byte	4
	.byte	'BankNumber',0,2,237,103,52
	.word	7137
.L1600:
	.byte	4
	.byte	'EndAddr',0,2,238,103,52
	.word	7142
.L1602:
	.byte	8,5,5,0,0
.L2571:
	.byte	3
	.byte	'Fee_lPerformPrevBlkCheck',0,3,2,198,108,19,1,1
.L2573:
	.byte	8,5,5,5,5,0,0
.L2751:
	.byte	3
	.byte	'Fee_lUpdateGcCurrBlockInfo',0,3,2,194,113,19,1,1
.L2754:
	.byte	5,0,6
	.word	271
.L2478:
	.byte	3
	.byte	'Fee_lPerformStuffCheck',0,3,2,236,116,19,1,1
.L2479:
	.byte	4
	.byte	'UserBlockIndex',0,2,236,116,55
	.word	7297
.L2481:
	.byte	5,0,6
	.word	293
	.byte	6
	.word	766
	.byte	6
	.word	271
.L2289:
	.byte	3
	.byte	'Fee_lPrepareWriteReqBuff',0,3,2,140,55,19,1,1
.L2290:
	.byte	4
	.byte	'BlockCycleCount',0,2,140,55,57
	.word	7359
.L2292:
	.byte	4
	.byte	'ReadWriteBuffPtr',0,2,141,55,19
	.word	7364
.L2294:
	.byte	4
	.byte	'BlockSize',0,2,142,55,18
	.word	7369
.L2296:
	.byte	8,5,5,5,0,0,6
	.word	271
.L2529:
	.byte	3
	.byte	'Fee_lHandleUserWriteReq',0,3,2,243,56,19,1,1
.L2530:
	.byte	4
	.byte	'UserBlockIndex',0,2,243,56,56
	.word	7483
.L2532:
	.byte	8,5,5,5,5,5,0,0,6
	.word	271
.L2633:
	.byte	3
	.byte	'Fee_lHandleUserWriteCompare',0,3,2,163,58,19,1,1
.L2635:
	.byte	4
	.byte	'UserBlockIndex',0,2,163,58,60
	.word	7552
.L2637:
	.byte	8,5,5,5,0,0,6
	.word	271
.L2656:
	.byte	3
	.byte	'Fee_lHandleIntrWriteCompare',0,3,2,210,64,19,1,1
.L2658:
	.byte	4
	.byte	'UserBlockIndex',0,2,210,64,60
	.word	7623
.L2660:
	.byte	8
.L2675:
	.byte	5,5,5,0,0
.L1943:
	.byte	3
	.byte	'Fee_lMainGCHdlr',0,3,2,241,148,1,19,1,1
.L1944:
	.byte	5,0
.L2804:
	.byte	7
	.byte	'Fee_lHandleGcCopy',0,3,2,192,149,1,21
	.word	157
	.byte	1,1
.L2805:
	.byte	8
.L2817:
	.byte	5,0,0
.L1822:
	.byte	7
	.byte	'Fee_lCancelDetSafetyCheck',0,3,2,171,143,1,29
	.word	157
	.byte	1,1
.L1824:
	.byte	5,0
.L1905:
	.byte	3
	.byte	'Fee_lHandleCancelNotification',0,3,2,196,146,1,19,1,1
.L1908:
	.byte	8,5,5,0,0
.L1923:
	.byte	3
	.byte	'Fee_lHandleUsrJobErrorNotification',0,3,2,156,147,1,19,1,1
.L1924:
	.byte	4
	.byte	'Job',0,2,156,147,1,74
	.word	157
.L1926:
	.byte	8,5,0,0
.L1894:
	.byte	3
	.byte	'Fee_lHandleReadJobEndNotification',0,3,2,249,147,1,19,1,1
.L1896:
	.byte	5,0
.L1759:
	.byte	7
	.byte	'Fee_lCalDataStructCrc',0,3,2,202,20,22
	.word	293
	.byte	1,1
.L1761:
	.byte	5,0,17
	.byte	'__crc32b',0
	.word	174
	.byte	1,1,1,1,18
	.byte	'b',0
	.word	174
	.byte	18
	.byte	'a',0
	.word	157
	.byte	0,17
	.byte	'__crc32',0
	.word	174
	.byte	1,1,1,1,18
	.byte	'b',0
	.word	174
	.byte	18
	.byte	'a',0
	.word	174
	.byte	0,19
	.word	190
	.byte	20
	.word	212
	.byte	20
	.word	228
	.byte	20
	.word	243
	.byte	20
	.word	256
	.byte	5,0,21
	.byte	'Mcal_Wrapper_Det_ReportRuntimeError',0,5,67,23
	.word	157
	.byte	1,1,1,1,4
	.byte	'ModuleId',0,5,67,66
	.word	271
	.byte	4
	.byte	'InstanceId',0,5,68,7
	.word	157
	.byte	4
	.byte	'ApiId',0,5,68,25
	.word	157
	.byte	4
	.byte	'ErrorId',0,5,68,38
	.word	157
	.byte	0,6
	.word	293
	.byte	6
	.word	293
	.byte	21
	.byte	'Fls_17_Dmu_Erase',0,6,239,7,23
	.word	157
	.byte	1,1,1,1,4
	.byte	'TargetAddress',0,6,240,7,60
	.word	8191
	.byte	4
	.byte	'Length',0,6,241,7,59
	.word	8196
	.byte	0,6
	.word	293
	.byte	6
	.word	2812
	.byte	6
	.word	293
	.byte	21
	.byte	'Fls_17_Dmu_Write',0,6,142,8,23
	.word	157
	.byte	1,1,1,1,4
	.byte	'TargetAddress',0,6,143,8,63
	.word	8271
	.byte	4
	.byte	'SourceAddressPtr',0,6,144,8,53
	.word	8276
	.byte	4
	.byte	'Length',0,6,145,8,62
	.word	8281
	.byte	0
.L2120:
	.byte	9
	.word	293
	.byte	6
	.word	8382
	.byte	21
	.byte	'Fls_17_Dmu_GetEccErrorPageAddress',0,6,156,9,23
	.word	157
	.byte	1,1,1,1,4
	.byte	'PageAddressPtr',0,6,157,9,65
	.word	8387
	.byte	0,22
	.byte	'Fls_17_Dmu_CancelNonEraseJobs',0,6,190,9,13,1,1,1,1,6
	.word	3258
	.byte	23
	.byte	'Fls_17_Dmu_SetMode',0,6,154,10,13,1,1,1,1,4
	.byte	'Mode',0,6,154,10,53
	.word	8503
	.byte	0,6
	.word	293
	.byte	6
	.word	766
	.byte	6
	.word	293
	.byte	21
	.byte	'Fls_17_Dmu_Read',0,6,185,10,23
	.word	157
	.byte	1,1,1,1,4
	.byte	'SourceAddress',0,6,186,10,62
	.word	8551
	.byte	4
	.byte	'TargetAddressPtr',0,6,187,10,46
	.word	8556
	.byte	4
	.byte	'Length',0,6,188,10,61
	.word	8561
	.byte	0,6
	.word	293
	.byte	6
	.word	8382
	.byte	6
	.word	293
	.byte	21
	.byte	'Fls_17_Dmu_ReadWordsSync',0,6,215,10,23
	.word	157
	.byte	1,1,1,1,4
	.byte	'SourceAddress',0,6,216,10,61
	.word	8661
	.byte	4
	.byte	'TargetAddressPtr',0,6,217,10,46
	.word	8666
	.byte	4
	.byte	'Length',0,6,218,10,45
	.word	8671
	.byte	0,24
	.byte	'Fls_17_Dmu_GetNotifCaller',0,6,239,10,28
	.word	157
	.byte	1,1,1,1,6
	.word	293
	.byte	6
	.word	1570
	.byte	6
	.word	293
	.byte	21
	.byte	'Fls_17_Dmu_CompareWordsSync',0,6,134,11,23
	.word	157
	.byte	1,1,1,1,4
	.byte	'SourceAddress',0,6,135,11,60
	.word	8819
	.byte	4
	.byte	'TargetAddressPtr',0,6,136,11,51
	.word	8824
	.byte	4
	.byte	'Length',0,6,137,11,44
	.word	8829
	.byte	0,6
	.word	293
	.byte	6
	.word	8382
	.byte	6
	.word	766
	.byte	21
	.byte	'Fls_17_Dmu_VerifyErase',0,6,162,11,23
	.word	157
	.byte	1,1,1,1,4
	.byte	'TargetAddress',0,6,163,11,65
	.word	8941
	.byte	4
	.byte	'UnerasedWordlineAddressPtr',0,6,164,11,50
	.word	8946
	.byte	4
	.byte	'UnerasedWordlineCountPtr',0,6,165,11,49
	.word	8951
	.byte	0,6
	.word	293
	.byte	6
	.word	8382
	.byte	6
	.word	766
	.byte	6
	.word	157
	.byte	21
	.byte	'Fls_17_Dmu_VerifySectorErase',0,6,198,11,23
	.word	157
	.byte	1,1,1,1,4
	.byte	'TargetAddress',0,6,199,11,64
	.word	9086
	.byte	4
	.byte	'UnerasedWordlineAddressPtr',0,6,200,11,49
	.word	9091
	.byte	4
	.byte	'UnerasedWordlineCountPtr',0,6,201,11,49
	.word	9096
	.byte	4
	.byte	'Sector',0,6,202,11,47
	.word	9101
	.byte	0,12,7,116,9,8,14
	.byte	'vendorID',0
	.word	271
	.byte	2,2,35,0,14
	.byte	'moduleID',0
	.word	271
	.byte	2,2,35,2,14
	.byte	'sw_major_version',0
	.word	157
	.byte	1,2,35,4,14
	.byte	'sw_minor_version',0
	.word	157
	.byte	1,2,35,5,14
	.byte	'sw_patch_version',0
	.word	157
	.byte	1,2,35,6,0,9
	.word	9258
.L1574:
	.byte	6
	.word	9378
.L1579:
	.byte	9
	.word	3300
	.byte	25,1,1,9
	.word	9393
	.byte	26
	.byte	'Fee_NotifFunctionPtrType',0,3,211,1,16
	.word	9396
	.byte	12,3,182,5,9,1,13
	.byte	'FeeUnconfigBlock',0,1
	.word	157
	.byte	1,7,2,35,0,13
	.byte	'FeeGcRestartPoint',0,1
	.word	157
	.byte	1,6,2,35,0,13
	.byte	'FeeUseEraseSuspend',0,1
	.word	157
	.byte	1,5,2,35,0,13
	.byte	'unused',0,1
	.word	157
	.byte	5,0,2,35,0,0,12,3,207,5,9,40,14
	.byte	'FeeStatePtr',0
	.word	9388
	.byte	4,2,35,0,14
	.byte	'FeeBlockConfigPtr',0
	.word	2174
	.byte	4,2,35,4,14
	.byte	'FeeNvmJobEndNotification',0
	.word	9401
	.byte	4,2,35,8,14
	.byte	'FeeNvmJobErrorNotification',0
	.word	9401
	.byte	4,2,35,12,14
	.byte	'FeeThresholdLimit',0
	.word	293
	.byte	4,2,35,16,14
	.byte	'FeeBlkCnt',0
	.word	271
	.byte	2,2,35,20,14
	.byte	'FeeGCConfigSetting',0
	.word	9435
	.byte	1,2,35,22,14
	.byte	'FeeNvmIllegalStateNotification',0
	.word	9401
	.byte	4,2,35,24,14
	.byte	'FeeQsIllegalStateNotification',0
	.word	9401
	.byte	4,2,35,28,14
	.byte	'FeeQsHardenErrorNotification',0
	.word	9401
	.byte	4,2,35,32,14
	.byte	'FeeEraseAllEnable',0
	.word	157
	.byte	1,2,35,36,0,6
	.word	9547
.L3104:
	.byte	9
	.word	9890
.L1577:
	.byte	6
	.word	9895
	.byte	9
	.word	9393
.L1581:
	.byte	9
	.word	2726
.L1583:
	.byte	9
	.word	2494
.L1587:
	.byte	9
	.word	2649
.L1769:
	.byte	6
	.word	3258
.L1771:
	.byte	15,4,37,9,1,16
	.byte	'MEMIF_UNINIT',0,0,16
	.byte	'MEMIF_IDLE',0,1,16
	.byte	'MEMIF_BUSY',0,2,16
	.byte	'MEMIF_BUSY_INTERNAL',0,3,0
.L1775:
	.byte	6
	.word	271
.L1777:
	.byte	6
	.word	8382
.L1793:
	.byte	6
	.word	271
.L1795:
	.byte	6
	.word	271
.L1797:
	.byte	6
	.word	766
.L1799:
	.byte	6
	.word	271
.L1803:
	.byte	6
	.word	271
.L1805:
	.byte	6
	.word	2812
.L1834:
	.byte	6
	.word	271
.L1849:
	.byte	6
	.word	271
.L1852:
	.byte	6
	.word	9895
	.byte	9
	.word	271
.L1869:
	.byte	6
	.word	10054
.L1871:
	.byte	6
	.word	8382
	.byte	6
	.word	2494
.L1884:
	.byte	9
	.word	10069
	.byte	19
	.word	319
	.byte	20
	.word	359
	.byte	5,0
.L2003:
	.byte	6
	.word	293
.L2016:
	.byte	6
	.word	157
	.byte	6
	.word	2349
	.byte	9
	.word	10101
.L2020:
	.byte	6
	.word	10106
.L2022:
	.byte	6
	.word	271
.L2024:
	.byte	6
	.word	271
.L2033:
	.byte	6
	.word	271
.L2035:
	.byte	6
	.word	271
.L2042:
	.byte	6
	.word	2812
.L2044:
	.byte	6
	.word	2174
.L2048:
	.byte	6
	.word	271
.L2050:
	.byte	6
	.word	271
.L2052:
	.byte	6
	.word	766
.L2054:
	.byte	6
	.word	271
.L2056:
	.byte	6
	.word	157
.L2061:
	.byte	9
	.word	2817
	.byte	19
	.word	387
	.byte	20
	.word	419
	.byte	20
	.word	436
	.byte	5,0,19
	.word	464
	.byte	20
	.word	503
	.byte	20
	.word	520
	.byte	20
	.word	536
	.byte	8,27
	.word	387
	.byte	20
	.word	419
	.byte	20
	.word	436
	.byte	28
	.word	457
	.byte	0,5,0,0
.L2083:
	.byte	6
	.word	2812
.L2085:
	.byte	6
	.word	2174
.L2090:
	.byte	6
	.word	271
.L2093:
	.byte	2
	.byte	'long int',0,4,5
.L2099:
	.byte	6
	.word	157
	.byte	19
	.word	561
	.byte	8,27
	.word	5006
	.byte	20
	.word	5040
	.byte	28
	.word	5055
	.byte	0,5,27
	.word	5062
	.byte	20
	.word	5102
	.byte	28
	.word	5117
	.byte	0,5,0,0,19
	.word	597
	.byte	8,27
	.word	5062
	.byte	20
	.word	5102
	.byte	28
	.word	5117
	.byte	0,5,27
	.word	5658
	.byte	20
	.word	5693
	.byte	28
	.word	5715
	.byte	0,5,0,0,19
	.word	633
	.byte	8,27
	.word	5006
	.byte	20
	.word	5040
	.byte	28
	.word	5055
	.byte	0,5,0,0,19
	.word	669
	.byte	8,27
	.word	5006
	.byte	20
	.word	5040
	.byte	28
	.word	5055
	.byte	0,5,27
	.word	5062
	.byte	20
	.word	5102
	.byte	28
	.word	5117
	.byte	0,5,0,0,19
	.word	715
	.byte	20
	.word	742
	.byte	5,0,19
	.word	776
	.byte	20
	.word	809
	.byte	20
	.word	834
	.byte	5,0,19
	.word	872
	.byte	20
	.word	906
	.byte	20
	.word	935
	.byte	5,0,19
	.word	979
	.byte	20
	.word	1013
	.byte	20
	.word	1039
	.byte	20
	.word	1065
	.byte	8,27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,5,0,0,19
	.word	1379
	.byte	20
	.word	1410
	.byte	8,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,0,0,19
	.word	1437
	.byte	8,27
	.word	1522
	.byte	28
	.word	1563
	.byte	0,5,27
	.word	1477
	.byte	29
	.word	1518
	.byte	27
	.word	1585
	.byte	20
	.word	1623
	.byte	20
	.word	1640
	.byte	28
	.word	1656
	.byte	0,28
	.word	1519
	.byte	0,0,5,0,0,19
	.word	1477
	.byte	8,27
	.word	1585
	.byte	20
	.word	1623
	.byte	20
	.word	1640
	.byte	28
	.word	1656
	.byte	0,5,0,0,19
	.word	1522
	.byte	5,0,19
	.word	1585
	.byte	20
	.word	1623
	.byte	20
	.word	1640
	.byte	5,0,19
	.word	1663
	.byte	20
	.word	1694
	.byte	5,0,19
	.word	1718
	.byte	20
	.word	1749
	.byte	8,27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,5,0,0,19
	.word	1775
	.byte	20
	.word	1807
	.byte	5,0,19
	.word	1836
	.byte	20
	.word	1869
	.byte	20
	.word	1890
	.byte	5,0,19
	.word	1921
	.byte	20
	.word	1956
	.byte	20
	.word	1977
	.byte	5,0,19
	.word	2008
	.byte	20
	.word	2042
	.byte	5,0,19
	.word	2189
	.byte	20
	.word	2223
	.byte	20
	.word	2241
	.byte	5,0,19
	.word	2278
	.byte	20
	.word	2309
	.byte	20
	.word	2324
	.byte	5,0,19
	.word	5006
	.byte	20
	.word	5040
	.byte	5,0,19
	.word	5062
	.byte	20
	.word	5102
	.byte	5,0,19
	.word	5124
	.byte	20
	.word	5158
	.byte	5,0,19
	.word	5181
	.byte	20
	.word	5219
	.byte	5,0
.L2110:
	.byte	6
	.word	271
	.byte	6
	.word	1164
.L2161:
	.byte	9
	.word	10859
.L2245:
	.byte	6
	.word	157
.L2247:
	.byte	6
	.word	157
.L2264:
	.byte	6
	.word	271
.L2312:
	.byte	6
	.word	2812
	.byte	6
	.word	2817
.L2455:
	.byte	9
	.word	10889
.L2497:
	.byte	6
	.word	293
.L2499:
	.byte	6
	.word	271
	.byte	6
	.word	2649
.L2641:
	.byte	9
	.word	10909
.L2708:
	.byte	6
	.word	157
.L2710:
	.byte	6
	.word	271
.L2717:
	.byte	6
	.word	293
.L2719:
	.byte	6
	.word	271
.L2769:
	.byte	6
	.word	271
.L2776:
	.byte	6
	.word	271
.L2822:
	.byte	6
	.word	1369
.L2824:
	.byte	6
	.word	293
.L2866:
	.byte	6
	.word	271
	.byte	6
	.word	2726
.L2906:
	.byte	9
	.word	10964
.L2960:
	.byte	6
	.word	293
.L2962:
	.byte	6
	.word	271
.L2969:
	.byte	6
	.word	157
.L2985:
	.byte	6
	.word	157
.L3085:
	.byte	6
	.word	271
.L3090:
	.byte	6
	.word	157
.L3092:
	.byte	6
	.word	293
	.byte	19
	.word	5240
	.byte	8,27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,0,0,19
	.word	5279
	.byte	20
	.word	5316
	.byte	5,0,19
	.word	5348
	.byte	20
	.word	5378
	.byte	20
	.word	5398
	.byte	8,27
	.word	5567
	.byte	20
	.word	5606
	.byte	20
	.word	5632
	.byte	28
	.word	5651
	.byte	0,5,27
	.word	872
	.byte	20
	.word	906
	.byte	20
	.word	935
	.byte	28
	.word	962
	.byte	0,5,27
	.word	715
	.byte	20
	.word	742
	.byte	28
	.word	759
	.byte	0,5,27
	.word	715
	.byte	20
	.word	742
	.byte	28
	.word	759
	.byte	0,5,27
	.word	1921
	.byte	20
	.word	1956
	.byte	20
	.word	1977
	.byte	28
	.word	2001
	.byte	0,5,27
	.word	979
	.byte	20
	.word	1013
	.byte	20
	.word	1039
	.byte	20
	.word	1065
	.byte	29
	.word	1084
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1085
	.byte	0,0,5,0,0,19
	.word	5429
	.byte	20
	.word	5464
	.byte	8,27
	.word	1663
	.byte	20
	.word	1694
	.byte	28
	.word	1711
	.byte	0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	7220
	.byte	29
	.word	7253
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7254
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7255
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7256
	.byte	27
	.word	5727
	.byte	20
	.word	5769
	.byte	20
	.word	5788
	.byte	28
	.word	5807
	.byte	0,28
	.word	7257
	.byte	0,0,5,27
	.word	5494
	.byte	20
	.word	5531
	.byte	29
	.word	5549
	.byte	27
	.word	1663
	.byte	20
	.word	1694
	.byte	28
	.word	1711
	.byte	0,28
	.word	5550
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	5551
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	5552
	.byte	27
	.word	5727
	.byte	20
	.word	5769
	.byte	20
	.word	5788
	.byte	28
	.word	5807
	.byte	0,28
	.word	5553
	.byte	27
	.word	5727
	.byte	20
	.word	5769
	.byte	20
	.word	5788
	.byte	28
	.word	5807
	.byte	0,28
	.word	5554
	.byte	0,0,5,0,0,19
	.word	5494
	.byte	20
	.word	5531
	.byte	8,27
	.word	1663
	.byte	20
	.word	1694
	.byte	28
	.word	1711
	.byte	0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	5727
	.byte	20
	.word	5769
	.byte	20
	.word	5788
	.byte	28
	.word	5807
	.byte	0,5,27
	.word	5727
	.byte	20
	.word	5769
	.byte	20
	.word	5788
	.byte	28
	.word	5807
	.byte	0,5,0,0,19
	.word	5567
	.byte	20
	.word	5606
	.byte	20
	.word	5632
	.byte	5,0,19
	.word	5658
	.byte	20
	.word	5693
	.byte	5,0,19
	.word	5727
	.byte	20
	.word	5769
	.byte	20
	.word	5788
	.byte	5,0,19
	.word	5819
	.byte	20
	.word	5855
	.byte	20
	.word	5874
	.byte	5,0,19
	.word	5895
	.byte	5,0,19
	.word	5947
	.byte	20
	.word	5979
	.byte	20
	.word	6000
	.byte	8,27
	.word	1663
	.byte	20
	.word	1694
	.byte	28
	.word	1711
	.byte	0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,0,0,19
	.word	6029
	.byte	8,27
	.word	5006
	.byte	20
	.word	5040
	.byte	28
	.word	5055
	.byte	0,5,27
	.word	5062
	.byte	20
	.word	5102
	.byte	28
	.word	5117
	.byte	0,5,0,0,19
	.word	6063
	.byte	5,0,19
	.word	6100
	.byte	8,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,0,0,19
	.word	6122
	.byte	5,0,19
	.word	6142
	.byte	8,27
	.word	6063
	.byte	28
	.word	6098
	.byte	0,5,0,0,19
	.word	6173
	.byte	5,0,19
	.word	6210
	.byte	8,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	6350
	.byte	20
	.word	6394
	.byte	28
	.word	6422
	.byte	0,5,27
	.word	6261
	.byte	28
	.word	6301
	.byte	0,5,27
	.word	6303
	.byte	28
	.word	6343
	.byte	0,5,0,0,19
	.word	6261
	.byte	5,0,19
	.word	6303
	.byte	5,0,19
	.word	6350
	.byte	20
	.word	6394
	.byte	5,0,19
	.word	6424
	.byte	8,27
	.word	6173
	.byte	28
	.word	6208
	.byte	0,5,27
	.word	6210
	.byte	29
	.word	6250
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	6251
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	6252
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	6253
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	6254
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	6255
	.byte	27
	.word	6350
	.byte	20
	.word	6394
	.byte	28
	.word	6422
	.byte	0,28
	.word	6256
	.byte	27
	.word	6261
	.byte	28
	.word	6301
	.byte	0,28
	.word	6257
	.byte	27
	.word	6303
	.byte	28
	.word	6343
	.byte	0,28
	.word	6258
	.byte	0,0,5,0,0,19
	.word	6461
	.byte	5,0,19
	.word	6489
	.byte	5,0,19
	.word	6516
	.byte	8,27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	6591
	.byte	28
	.word	6628
	.byte	0,5,27
	.word	6550
	.byte	28
	.word	6589
	.byte	0,5,0,0,19
	.word	6550
	.byte	5,0,19
	.word	6591
	.byte	5,0,19
	.word	6635
	.byte	20
	.word	6663
	.byte	5,0,19
	.word	6687
	.byte	20
	.word	6719
	.byte	8,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	6746
	.byte	20
	.word	6786
	.byte	29
	.word	6803
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	6804
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	6805
	.byte	27
	.word	5727
	.byte	20
	.word	5769
	.byte	20
	.word	5788
	.byte	28
	.word	5807
	.byte	0,28
	.word	6806
	.byte	27
	.word	6816
	.byte	20
	.word	6867
	.byte	28
	.word	6884
	.byte	0,28
	.word	6807
	.byte	27
	.word	5494
	.byte	20
	.word	5531
	.byte	29
	.word	5549
	.byte	27
	.word	1663
	.byte	20
	.word	1694
	.byte	28
	.word	1711
	.byte	0,28
	.word	5550
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	5551
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	5552
	.byte	27
	.word	5727
	.byte	20
	.word	5769
	.byte	20
	.word	5788
	.byte	28
	.word	5807
	.byte	0,28
	.word	5553
	.byte	27
	.word	5727
	.byte	20
	.word	5769
	.byte	20
	.word	5788
	.byte	28
	.word	5807
	.byte	0,28
	.word	5554
	.byte	0,0,28
	.word	6808
	.byte	0,0,5,0,0,19
	.word	6746
	.byte	20
	.word	6786
	.byte	8,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	5727
	.byte	20
	.word	5769
	.byte	20
	.word	5788
	.byte	28
	.word	5807
	.byte	0,5,27
	.word	6816
	.byte	20
	.word	6867
	.byte	28
	.word	6884
	.byte	0,5,27
	.word	5494
	.byte	20
	.word	5531
	.byte	29
	.word	5549
	.byte	27
	.word	1663
	.byte	20
	.word	1694
	.byte	28
	.word	1711
	.byte	0,28
	.word	5550
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	5551
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	5552
	.byte	27
	.word	5727
	.byte	20
	.word	5769
	.byte	20
	.word	5788
	.byte	28
	.word	5807
	.byte	0,28
	.word	5553
	.byte	27
	.word	5727
	.byte	20
	.word	5769
	.byte	20
	.word	5788
	.byte	28
	.word	5807
	.byte	0,28
	.word	5554
	.byte	0,0,5,0,0,19
	.word	6816
	.byte	20
	.word	6867
	.byte	5,0,19
	.word	6896
	.byte	20
	.word	6931
	.byte	20
	.word	6954
	.byte	8,27
	.word	1379
	.byte	20
	.word	1410
	.byte	29
	.word	1433
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	1434
	.byte	0,0,5,27
	.word	6981
	.byte	20
	.word	7010
	.byte	29
	.word	7033
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7034
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7035
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7036
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7037
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7038
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7039
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7040
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7041
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7042
	.byte	0,0,5,0,0,19
	.word	6981
	.byte	20
	.word	7010
	.byte	8,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,0,0,19
	.word	7050
	.byte	20
	.word	7073
	.byte	5,0,19
	.word	7097
	.byte	8,27
	.word	2278
	.byte	20
	.word	2309
	.byte	20
	.word	2324
	.byte	28
	.word	2338
	.byte	0,5,27
	.word	2278
	.byte	20
	.word	2309
	.byte	20
	.word	2324
	.byte	28
	.word	2338
	.byte	0,5,0,0,19
	.word	7147
	.byte	20
	.word	7178
	.byte	20
	.word	7198
	.byte	8,27
	.word	1437
	.byte	29
	.word	1472
	.byte	27
	.word	1522
	.byte	28
	.word	1563
	.byte	0,28
	.word	1473
	.byte	27
	.word	1477
	.byte	29
	.word	1518
	.byte	27
	.word	1585
	.byte	20
	.word	1623
	.byte	20
	.word	1640
	.byte	28
	.word	1656
	.byte	0,28
	.word	1519
	.byte	0,0,28
	.word	1474
	.byte	0,0,5,27
	.word	6896
	.byte	20
	.word	6931
	.byte	20
	.word	6954
	.byte	29
	.word	6971
	.byte	27
	.word	1379
	.byte	20
	.word	1410
	.byte	29
	.word	1433
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	1434
	.byte	0,0,28
	.word	6972
	.byte	27
	.word	6981
	.byte	20
	.word	7010
	.byte	29
	.word	7033
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7034
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7035
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7036
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7037
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7038
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7039
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7040
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7041
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7042
	.byte	0,0,28
	.word	6973
	.byte	0,0,5,0,0,19
	.word	7220
	.byte	8,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	5727
	.byte	20
	.word	5769
	.byte	20
	.word	5788
	.byte	28
	.word	5807
	.byte	0,5,0,0,19
	.word	7260
	.byte	5,0,19
	.word	7302
	.byte	20
	.word	7333
	.byte	5,0,19
	.word	7374
	.byte	20
	.word	7407
	.byte	20
	.word	7432
	.byte	20
	.word	7458
	.byte	8,27
	.word	1663
	.byte	20
	.word	1694
	.byte	28
	.word	1711
	.byte	0,5,27
	.word	1663
	.byte	20
	.word	1694
	.byte	28
	.word	1711
	.byte	0,5,27
	.word	1663
	.byte	20
	.word	1694
	.byte	28
	.word	1711
	.byte	0,5,0,0,19
	.word	7488
	.byte	20
	.word	7520
	.byte	8,27
	.word	1663
	.byte	20
	.word	1694
	.byte	28
	.word	1711
	.byte	0,5,27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	2189
	.byte	20
	.word	2223
	.byte	20
	.word	2241
	.byte	28
	.word	2266
	.byte	0,5,27
	.word	5429
	.byte	20
	.word	5464
	.byte	29
	.word	5482
	.byte	27
	.word	1663
	.byte	20
	.word	1694
	.byte	28
	.word	1711
	.byte	0,28
	.word	5483
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	5484
	.byte	27
	.word	7220
	.byte	29
	.word	7253
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7254
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7255
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	7256
	.byte	27
	.word	5727
	.byte	20
	.word	5769
	.byte	20
	.word	5788
	.byte	28
	.word	5807
	.byte	0,28
	.word	7257
	.byte	0,0,28
	.word	5485
	.byte	27
	.word	5494
	.byte	20
	.word	5531
	.byte	29
	.word	5549
	.byte	27
	.word	1663
	.byte	20
	.word	1694
	.byte	28
	.word	1711
	.byte	0,28
	.word	5550
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	5551
	.byte	27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,28
	.word	5552
	.byte	27
	.word	5727
	.byte	20
	.word	5769
	.byte	20
	.word	5788
	.byte	28
	.word	5807
	.byte	0,28
	.word	5553
	.byte	27
	.word	5727
	.byte	20
	.word	5769
	.byte	20
	.word	5788
	.byte	28
	.word	5807
	.byte	0,28
	.word	5554
	.byte	0,0,28
	.word	5486
	.byte	0,0,5,0,0,19
	.word	7557
	.byte	20
	.word	7593
	.byte	8,27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,0,0,19
	.word	7628
	.byte	20
	.word	7664
	.byte	8,8,27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,0,5,5,0,0,19
	.word	7694
	.byte	5,0,19
	.word	7721
	.byte	8,5,0,0,19
	.word	7756
	.byte	5,0,19
	.word	7797
	.byte	8,27
	.word	1663
	.byte	20
	.word	1694
	.byte	28
	.word	1711
	.byte	0,5,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,0,0,19
	.word	7841
	.byte	20
	.word	7885
	.byte	8,27
	.word	1718
	.byte	20
	.word	1749
	.byte	29
	.word	1766
	.byte	27
	.word	1775
	.byte	20
	.word	1807
	.byte	28
	.word	1824
	.byte	0,28
	.word	1767
	.byte	0,0,5,0,0,19
	.word	7903
	.byte	5,0,19
	.word	7948
	.byte	5,0,30
	.byte	'__INDIRECT__',0,2,1,1,1,1,1,31,1,9
	.word	16184
	.byte	26
	.byte	'__codeptr',0,2,1,1
	.word	16186
	.byte	26
	.byte	'boolean',0,8,102,29
	.word	157
	.byte	26
	.byte	'uint8',0,8,106,29
	.word	157
	.byte	26
	.byte	'uint16',0,8,110,29
	.word	271
	.byte	26
	.byte	'uint32',0,8,114,29
	.word	293
	.byte	2
	.byte	'unsigned long long int',0,8,7,26
	.byte	'uint64',0,8,119,29
	.word	16269
	.byte	2
	.byte	'char',0,1,6,26
	.byte	'sint8',0,8,123,29
	.word	16310
	.byte	2
	.byte	'short int',0,2,5,26
	.byte	'sint16',0,8,127,29
	.word	16332
	.byte	26
	.byte	'sint32',0,8,132,1,29
	.word	10253
	.byte	2
	.byte	'long long int',0,8,5,26
	.byte	'sint64',0,8,139,1,29
	.word	16376
	.byte	2
	.byte	'float',0,4,4,26
	.byte	'float32',0,8,168,1,29
	.word	16409
	.byte	26
	.byte	'StatusType',0,7,70,25
	.word	157
	.byte	26
	.byte	'Std_ReturnType',0,7,109,16
	.word	157
	.byte	26
	.byte	'Std_VersionInfoType',0,7,123,2
	.word	9258
	.byte	26
	.byte	'unsigned_int',0,9,75,22
	.word	174
	.byte	26
	.byte	'MemIf_StatusType',0,4,43,3
	.word	9930
	.byte	26
	.byte	'MemIf_JobResultType',0,4,53,3
	.word	2954
	.byte	26
	.byte	'MemIf_ModeType',0,4,59,3
	.word	3258
	.byte	26
	.byte	'PduIdType',0,10,37,21
	.word	157
	.byte	26
	.byte	'PduLengthType',0,10,41,22
	.word	271
	.byte	26
	.byte	'SduDataPtrType',0,11,189,1,40
	.word	766
	.byte	15,11,204,1,9,1,16
	.byte	'TP_DATACONF',0,0,16
	.byte	'TP_DATARETRY',0,1,16
	.byte	'TP_CONFPENDING',0,2,0,26
	.byte	'TpDataStateType',0,11,216,1,3
	.word	16666
	.byte	26
	.byte	'Os_uint8',0,12,45,29
	.word	157
	.byte	26
	.byte	'Os_uint16',0,12,46,29
	.word	271
	.byte	26
	.byte	'Os_uint32',0,12,47,29
	.word	174
	.byte	26
	.byte	'Os_boolean',0,12,55,29
	.word	157
	.byte	26
	.byte	'Os_AddrType',0,12,60,20
	.word	174
	.byte	26
	.byte	'Os_TpTickType',0,13,40,19
	.word	174
	.byte	26
	.byte	'Os_SysTickType',0,13,41,19
	.word	174
	.byte	26
	.byte	'Os_Pl_SpinlockType',0,13,44,19
	.word	174
	.byte	15,13,47,9,1,16
	.byte	'ACCESSMODE_USER_0',0,0,16
	.byte	'ACCESSMODE_USER_1',0,1,16
	.byte	'ACCESSMODE_PRIVILEGED',0,2,0,26
	.byte	'Os_Pl_AccessModeType',0,13,52,3
	.word	16908
	.byte	26
	.byte	'ApplicationType',0,14,49,18
	.word	157
	.byte	15,14,53,9,1,16
	.byte	'APPLICATION_ACCESSIBLE',0,0,16
	.byte	'APPLICATION_RESTARTING',0,1,16
	.byte	'APPLICATION_TERMINATED',0,2,0,26
	.byte	'ApplicationStateType',0,14,58,3
	.word	17031
	.byte	26
	.byte	'ISRType',0,14,108,18
	.word	157
	.byte	15,14,136,1,9,1,16
	.byte	'SCHEDULETABLE_STOPPED',0,0,16
	.byte	'SCHEDULETABLE_NEXT',0,1,16
	.byte	'SCHEDULETABLE_WAITING',0,2,16
	.byte	'SCHEDULETABLE_RUNNING',0,3,16
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,26
	.byte	'ScheduleTableStatusType',0,14,143,1,3
	.word	17157
	.byte	26
	.byte	'CounterType',0,14,152,1,19
	.word	157
	.byte	26
	.byte	'CoreIdType',0,14,179,1,18
	.word	157
	.byte	26
	.byte	'TaskType',0,15,55,18
	.word	157
	.byte	15,15,72,9,1,16
	.byte	'OS_TASK_SUSPENDED',0,0,16
	.byte	'OS_TASK_NEW',0,1,16
	.byte	'OS_TASK_READY',0,2,16
	.byte	'OS_TASK_RUNNING',0,3,16
	.byte	'OS_TASK_WAITING',0,4,16
	.byte	'OS_TASK_WAITING_TO_READY',0,5,0,26
	.byte	'TaskStateType',0,15,80,3
	.word	17388
	.byte	26
	.byte	'TickType',0,15,87,19
	.word	174
	.byte	12,15,89,9,12,14
	.byte	'maxallowedvalue',0
	.word	174
	.byte	4,2,35,0,14
	.byte	'ticksperbase',0
	.word	174
	.byte	4,2,35,4,14
	.byte	'mincycle',0
	.word	174
	.byte	4,2,35,8,0,26
	.byte	'AlarmBaseType',0,15,94,3
	.word	17546
	.byte	26
	.byte	'AlarmType',0,15,97,18
	.word	157
	.byte	26
	.byte	'EventMaskType',0,15,112,19
	.word	174
	.byte	26
	.byte	'OSServiceIdType',0,15,120,19
	.word	271
	.byte	26
	.byte	'ResourceType',0,15,126,18
	.word	157
	.byte	32
	.byte	'_Os_SRC_SRCR_Bits',0,16,151,1,16,4,13
	.byte	'SRPN',0,1
	.word	157
	.byte	8,0,2,35,0,13
	.byte	'reserved_8',0,1
	.word	157
	.byte	2,6,2,35,1,13
	.byte	'SRE',0,1
	.word	157
	.byte	1,5,2,35,1,13
	.byte	'TOS',0,1
	.word	157
	.byte	3,2,2,35,1,13
	.byte	'reserved_14',0,1
	.word	157
	.byte	2,0,2,35,1,13
	.byte	'ECC',0,1
	.word	157
	.byte	5,3,2,35,2,13
	.byte	'reserved_21',0,1
	.word	157
	.byte	3,0,2,35,2,13
	.byte	'SRR',0,1
	.word	157
	.byte	1,7,2,35,3,13
	.byte	'CLRR',0,1
	.word	157
	.byte	1,6,2,35,3,13
	.byte	'SETR',0,1
	.word	157
	.byte	1,5,2,35,3,13
	.byte	'IOV',0,1
	.word	157
	.byte	1,4,2,35,3,13
	.byte	'IOVCLR',0,1
	.word	157
	.byte	1,3,2,35,3,13
	.byte	'SWS',0,1
	.word	157
	.byte	1,2,2,35,3,13
	.byte	'SWSCLR',0,1
	.word	157
	.byte	1,1,2,35,3,13
	.byte	'reserved_31',0,1
	.word	157
	.byte	1,0,2,35,3,0,26
	.byte	'Os_SRC_SRCR_Bits',0,16,172,1,3
	.word	17724
	.byte	26
	.byte	'Os_PrioType',0,17,178,1,19
	.word	271
	.byte	15,17,241,1,9,1,16
	.byte	'OS_ISR_SUSPENDED',0,0,16
	.byte	'OS_ISR_READY',0,1,16
	.byte	'OS_ISR_RUNNING',0,2,0,26
	.byte	'ISRStateType',0,17,246,1,3
	.word	18061
	.byte	12,17,166,2,9,4,14
	.byte	'Os_Q_front',0
	.word	271
	.byte	2,2,35,0,14
	.byte	'Os_Q_rear',0
	.word	271
	.byte	2,2,35,2,0,26
	.byte	'Os_TaskQueueCtlType',0,17,170,2,3
	.word	18141
	.byte	26
	.byte	'Os_ApplicationMaskType',0,17,208,2,19
	.word	174
	.byte	15,17,245,2,9,1,16
	.byte	'OS_TP_NONE',0,0,16
	.byte	'OS_TP_EXECBUDGET',0,1,16
	.byte	'OS_TP_RESOURCELOCK',0,2,16
	.byte	'OS_TP_ISRLOCK',0,3,16
	.byte	'OS_TP_FRAMECHECK',0,4,0,26
	.byte	'Os_TpMonitorType',0,17,252,2,3
	.word	18248
	.byte	26
	.byte	'Os_TaskFuncType',0,17,136,3,16
	.word	9396
	.byte	9
	.word	18141
	.byte	6
	.word	18394
	.byte	9
	.word	157
	.byte	6
	.word	18404
	.byte	12,17,200,3,9,12,14
	.byte	'Q_Ctl_Ptr',0
	.word	18399
	.byte	4,2,35,0,14
	.byte	'Q_Size',0
	.word	271
	.byte	2,2,35,4,14
	.byte	'Q_Buf',0
	.word	18409
	.byte	4,2,35,8,0,26
	.byte	'Os_TaskQueCfgType',0,17,210,3,3
	.word	18414
	.byte	9
	.word	174
	.byte	6
	.word	18498
	.byte	6
	.word	18498
	.byte	12,17,216,3,9,12,14
	.byte	'p_table_line',0
	.word	18503
	.byte	4,2,35,0,14
	.byte	'p_table',0
	.word	18508
	.byte	4,2,35,4,14
	.byte	'p_table_size',0
	.word	157
	.byte	1,2,35,8,0,26
	.byte	'Os_TaskPriReadyTblCfgType',0,17,221,3,3
	.word	18513
	.byte	33
	.byte	'void',0,9
	.word	18616
	.byte	34,1,1,35
	.word	18622
	.byte	0,9
	.word	18627
	.byte	26
	.byte	'Os_TrustedFunctionPtrType',0,17,210,4,16
	.word	18636
	.byte	12,17,221,4,9,4,14
	.byte	'ObjId',0
	.word	174
	.byte	4,2,35,0,0,26
	.byte	'Os_CounterTreeQueEleType',0,17,228,4,3
	.word	18676
	.byte	15,17,252,4,9,1,16
	.byte	'OS_ALARM_TASK',0,0,16
	.byte	'OS_ALARM_EVENT',0,1,16
	.byte	'OS_ALARM_CALLBACK',0,2,16
	.byte	'OS_ALARM_INCREMENTCOUNTER',0,3,0,26
	.byte	'Os_AlarmActionType',0,17,130,5,3
	.word	18732
	.byte	15,17,239,5,9,1,16
	.byte	'OS_RES_TASK_ONLY',0,0,16
	.byte	'OS_RES_ISR_ONLY',0,1,16
	.byte	'OS_RES_SHARE',0,2,0,26
	.byte	'Os_ResAccessype',0,17,244,5,3
	.word	18848
	.byte	15,17,139,6,9,1,16
	.byte	'OS_LOCK_NOTHING',0,0,16
	.byte	'OS_LOCK_ALL_INTERRUPTS',0,1,16
	.byte	'OS_LOCK_CAT2_INTERRUPTS',0,2,16
	.byte	'OS_LOCK_WITH_RES_SCHEDULER',0,3,0,26
	.byte	'Os_SpinlockMethodType',0,17,145,6,3
	.word	18932
	.byte	26
	.byte	'Dcm_SecLevelType',0,18,45,15
	.word	157
	.byte	26
	.byte	'Dcm_SesCtrlType',0,18,50,15
	.word	157
	.byte	26
	.byte	'Dcm_ProtocolType',0,18,54,15
	.word	157
	.byte	26
	.byte	'Dem_EventIdType',0,18,175,1,16
	.word	271
	.byte	26
	.byte	'Dem_EventStatusType',0,18,178,1,15
	.word	157
	.byte	26
	.byte	'Dem_UdsStatusByteType',0,18,202,1,15
	.word	157
	.byte	26
	.byte	'Dem_IndicatorStatusType',0,18,216,1,15
	.word	157
	.byte	26
	.byte	'ABSActive_IDT',0,18,151,3,15
	.word	157
	.byte	26
	.byte	'ABSFailed_IDT',0,18,152,3,15
	.word	157
	.byte	26
	.byte	'ABS_EBDFailed_IDT',0,18,153,3,15
	.word	157
	.byte	26
	.byte	'ABS_FLWheelDirection_IDT',0,18,154,3,15
	.word	157
	.byte	26
	.byte	'ABS_FLWheelSpeedInvalid_IDT',0,18,155,3,15
	.word	157
	.byte	26
	.byte	'ABS_FLWheelSpeedKPH_IDT',0,18,156,3,16
	.word	271
	.byte	26
	.byte	'ABS_FLWheelSpeedRCSts_IDT',0,18,157,3,15
	.word	157
	.byte	26
	.byte	'ABS_FLWheelSpeedRC_IDT',0,18,158,3,16
	.word	271
	.byte	26
	.byte	'ABS_FRWheelDirection_IDT',0,18,159,3,15
	.word	157
	.byte	26
	.byte	'ABS_FRWheelSpeedInvalid_IDT',0,18,160,3,15
	.word	157
	.byte	26
	.byte	'ABS_FRWheelSpeedKPH_IDT',0,18,161,3,16
	.word	271
	.byte	26
	.byte	'ABS_FRWheelSpeedRCSts_IDT',0,18,162,3,15
	.word	157
	.byte	26
	.byte	'ABS_FRWheelSpeedRC_IDT',0,18,163,3,16
	.word	271
	.byte	26
	.byte	'ABS_FWSpeMCUKPH_AliveCounter_IDT',0,18,164,3,15
	.word	157
	.byte	26
	.byte	'ABS_FWSpeMCUKPH_CheckSum_IDT',0,18,165,3,15
	.word	157
	.byte	26
	.byte	'ABS_HAZActive_IDT',0,18,166,3,15
	.word	157
	.byte	26
	.byte	'ABS_LowBrakeFluid_IDT',0,18,167,3,15
	.word	157
	.byte	26
	.byte	'ABS_RLWheelDirection_IDT',0,18,168,3,15
	.word	157
	.byte	26
	.byte	'ABS_RLWheelSpeedInvalid_IDT',0,18,169,3,15
	.word	157
	.byte	26
	.byte	'ABS_RLWheelSpeedKPH_IDT',0,18,170,3,16
	.word	271
	.byte	26
	.byte	'ABS_RLWheelSpeedRCSts_IDT',0,18,171,3,15
	.word	157
	.byte	26
	.byte	'ABS_RLWheelSpeedRC_IDT',0,18,172,3,16
	.word	271
	.byte	26
	.byte	'ABS_RRWheelDirection_IDT',0,18,173,3,15
	.word	157
	.byte	26
	.byte	'ABS_RRWheelSpeedInvalid_IDT',0,18,174,3,15
	.word	157
	.byte	26
	.byte	'ABS_RRWheelSpeedKPH_IDT',0,18,175,3,16
	.word	271
	.byte	26
	.byte	'ABS_RRWheelSpeedRCSts_IDT',0,18,176,3,15
	.word	157
	.byte	26
	.byte	'ABS_RRWheelSpeedRC_IDT',0,18,177,3,16
	.word	271
	.byte	26
	.byte	'ABS_RWSpeMCUKPH_AliveCounter_IDT',0,18,178,3,15
	.word	157
	.byte	26
	.byte	'ABS_RWSpeMCUKPH_CheckSum_IDT',0,18,179,3,15
	.word	157
	.byte	26
	.byte	'ABS_Status_AliveCounter_IDT',0,18,180,3,15
	.word	157
	.byte	26
	.byte	'ABS_Status_CheckSum_IDT',0,18,181,3,15
	.word	157
	.byte	26
	.byte	'ABS_VehicleSpeedInvalid_IDT',0,18,182,3,15
	.word	157
	.byte	26
	.byte	'ABS_VehicleSpeed_IDT',0,18,183,3,16
	.word	271
	.byte	26
	.byte	'ABS_WheelSpeMCURC_AliveCounter_IDT',0,18,184,3,15
	.word	157
	.byte	26
	.byte	'ABS_WheelSpeMCURC_CheckSum_IDT',0,18,185,3,15
	.word	157
	.byte	26
	.byte	'ACC_ObjDispSts_IDT',0,18,197,3,15
	.word	157
	.byte	12,18,198,3,9,36,14
	.byte	'ADAS_ACC_SpdUnit',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'ADAS_ACC_TargetSpeed',0
	.word	157
	.byte	1,2,35,1,14
	.byte	'ADAS_ACC_OperatingSts',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'ADAS_ACC_TimeGapLevel',0
	.word	157
	.byte	1,2,35,3,14
	.byte	'ADAS_ACC_DistanceLevel',0
	.word	157
	.byte	1,2,35,4,14
	.byte	'ADAS_ACC_ObjDispSts',0
	.word	157
	.byte	1,2,35,5,14
	.byte	'ADAS_ACC_TakeOverReq',0
	.word	157
	.byte	1,2,35,6,14
	.byte	'ADAS_AccelerationReq',0
	.word	16409
	.byte	4,2,35,8,14
	.byte	'ADAS_MaxSoftAcceleration',0
	.word	16409
	.byte	4,2,35,12,14
	.byte	'ADAS_MinSoftAcceleration',0
	.word	16409
	.byte	4,2,35,16,14
	.byte	'ADAS_IBS_StopReq',0
	.word	157
	.byte	1,2,35,20,14
	.byte	'ADAS_IBS_CarStarting',0
	.word	157
	.byte	1,2,35,21,14
	.byte	'ADAS_ACC_BrakePreferred',0
	.word	157
	.byte	1,2,35,22,14
	.byte	'ADAS_IBS_MinBreakReq',0
	.word	157
	.byte	1,2,35,23,14
	.byte	'ADAS_VLCShutDownReq',0
	.word	157
	.byte	1,2,35,24,14
	.byte	'ADAS_VLCModeReq',0
	.word	157
	.byte	1,2,35,25,14
	.byte	'ACC_AdtUpperJerkLimit',0
	.word	16409
	.byte	4,2,35,26,14
	.byte	'ACC_AdtLowerJerkLimit',0
	.word	16409
	.byte	4,2,35,30,14
	.byte	'ACC_TxtInfoForDriver',0
	.word	157
	.byte	1,2,35,34,14
	.byte	'ACC_DriveoffReq',0
	.word	157
	.byte	1,2,35,35,0,26
	.byte	'ACC_Output',0,18,220,3,3
	.word	20484
	.byte	26
	.byte	'ACC_TakeOverReq_IDT',0,18,222,3,15
	.word	157
	.byte	26
	.byte	'ACU_AirbagWarningStatus_IDT',0,18,224,3,15
	.word	157
	.byte	26
	.byte	'ACU_AliveCounter_IDT',0,18,225,3,15
	.word	157
	.byte	26
	.byte	'ACU_CheckSum_IDT',0,18,226,3,15
	.word	157
	.byte	26
	.byte	'ACU_CoDAirbagStatus_IDT',0,18,227,3,15
	.word	157
	.byte	26
	.byte	'ACU_CoDSeatOccupSensorStat_IDT',0,18,228,3,15
	.word	157
	.byte	26
	.byte	'ACU_CoDSeatbeltBucklestatus_IDT',0,18,229,3,15
	.word	157
	.byte	26
	.byte	'ACU_CoDSeatbletPTighten_IDT',0,18,230,3,15
	.word	157
	.byte	26
	.byte	'ACU_CrashFrontOutputSts_IDT',0,18,231,3,15
	.word	157
	.byte	26
	.byte	'ACU_CrashLeftOutputSts_IDT',0,18,232,3,15
	.word	157
	.byte	26
	.byte	'ACU_CrashRearOutputSts_IDT',0,18,233,3,15
	.word	157
	.byte	26
	.byte	'ACU_CrashRightOutputSts_IDT',0,18,234,3,15
	.word	157
	.byte	26
	.byte	'ACU_CrashSts_IDT',0,18,235,3,15
	.word	157
	.byte	26
	.byte	'ACU_DAirbagStatus_IDT',0,18,236,3,15
	.word	157
	.byte	26
	.byte	'ACU_DSeatOccupSensorStat_IDT',0,18,237,3,15
	.word	157
	.byte	26
	.byte	'ACU_DSeatbeltBucklestatus_IDT',0,18,238,3,15
	.word	157
	.byte	26
	.byte	'ACU_DSeatbletPTighten_IDT',0,18,239,3,15
	.word	157
	.byte	26
	.byte	'ACU_LCABsts_IDT',0,18,240,3,15
	.word	157
	.byte	26
	.byte	'ACU_LPSeatOccupSensorStat_IDT',0,18,241,3,15
	.word	157
	.byte	26
	.byte	'ACU_LPSeatbeltBucklestatus_IDT',0,18,242,3,15
	.word	157
	.byte	26
	.byte	'ACU_LSABsts_IDT',0,18,243,3,15
	.word	157
	.byte	26
	.byte	'ACU_MPSeatOccupSensorStat_IDT',0,18,244,3,15
	.word	157
	.byte	26
	.byte	'ACU_MPSeatbeltBucklestatus_IDT',0,18,245,3,15
	.word	157
	.byte	26
	.byte	'ACU_RCABsts_IDT',0,18,246,3,15
	.word	157
	.byte	26
	.byte	'ACU_RPSeatOccupSensorStat_IDT',0,18,247,3,15
	.word	157
	.byte	26
	.byte	'ACU_RPSeatbeltBucklestatus_IDT',0,18,248,3,15
	.word	157
	.byte	26
	.byte	'ACU_RSABsts_IDT',0,18,249,3,15
	.word	157
	.byte	26
	.byte	'ADAS_01_Checksum_IDT',0,18,250,3,15
	.word	157
	.byte	26
	.byte	'ADAS_01_RollingCounter_IDT',0,18,251,3,15
	.word	157
	.byte	26
	.byte	'ADAS_02_Checksum_IDT',0,18,252,3,15
	.word	157
	.byte	26
	.byte	'ADAS_02_RollingCounter_IDT',0,18,253,3,15
	.word	157
	.byte	26
	.byte	'ADAS_03_Checksum_IDT',0,18,254,3,15
	.word	157
	.byte	26
	.byte	'ADAS_03_RollingCounter_IDT',0,18,255,3,15
	.word	157
	.byte	26
	.byte	'ADAS_ACC_DistanceLevel_IDT',0,18,129,4,15
	.word	157
	.byte	26
	.byte	'ADAS_ACC_OperatingSts_IDT',0,18,131,4,15
	.word	157
	.byte	26
	.byte	'ADAS_ACC_SpdUnit_IDT',0,18,132,4,15
	.word	157
	.byte	26
	.byte	'ADAS_ACC_TargetSpeed_IDT',0,18,134,4,15
	.word	157
	.byte	26
	.byte	'ADAS_ACC_TimeGapLevel_IDT',0,18,135,4,15
	.word	157
	.byte	26
	.byte	'ADAS_AEB_TgtDecel_ReqValue_IDT',0,18,139,4,16
	.word	271
	.byte	26
	.byte	'ADAS_AccelerationReq_IDT',0,18,159,4,16
	.word	271
	.byte	12,18,160,4,9,20,14
	.byte	'ADAS_AEB_TgtDecel_ReqValue',0
	.word	16409
	.byte	4,2,35,0,14
	.byte	'ADAS_AEB_AbpReq',0
	.word	157
	.byte	1,2,35,4,14
	.byte	'ADAS_IBS_EBAReq',0
	.word	157
	.byte	1,2,35,5,14
	.byte	'AEB_AWB_Level',0
	.word	157
	.byte	1,2,35,6,14
	.byte	'AEB_ABA_Req',0
	.word	157
	.byte	1,2,35,7,14
	.byte	'AEB_VehHldReq',0
	.word	157
	.byte	1,2,35,8,14
	.byte	'AEB_TgtDecel_Req',0
	.word	157
	.byte	1,2,35,9,14
	.byte	'AEB_AWB_Req',0
	.word	157
	.byte	1,2,35,10,14
	.byte	'ADAS_AEB_AbaLevel',0
	.word	157
	.byte	1,2,35,11,14
	.byte	'ADAS_AEB_FuncSWResp',0
	.word	157
	.byte	1,2,35,12,14
	.byte	'AEB_FuncSts',0
	.word	157
	.byte	1,2,35,13,14
	.byte	'AEB_VehActive',0
	.word	157
	.byte	1,2,35,14,14
	.byte	'AEB_VRUActive',0
	.word	157
	.byte	1,2,35,15,14
	.byte	'AEB_ErrorSts',0
	.word	157
	.byte	1,2,35,16,14
	.byte	'AEB_FCW_SnvtyResp',0
	.word	157
	.byte	1,2,35,17,14
	.byte	'AEB_FCW_Warning',0
	.word	157
	.byte	1,2,35,18,0,26
	.byte	'AEB_OutPut',0,18,178,4,3
	.word	22475
	.byte	12,18,180,4,9,24,14
	.byte	'ADAS_LSS_AssidFormResp',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'ADAS_LSS_AngCmdReqPortnValue',0
	.word	16409
	.byte	4,2,35,2,14
	.byte	'ADAS_EPS_TargetSteeringAngle',0
	.word	16409
	.byte	4,2,35,6,14
	.byte	'ADAS_EPS_Vibration_Req',0
	.word	157
	.byte	1,2,35,10,14
	.byte	'ADAS_LSS_VoiceWarn',0
	.word	157
	.byte	1,2,35,11,14
	.byte	'ADAS_LSS_HandsoffWarn',0
	.word	157
	.byte	1,2,35,12,14
	.byte	'ADAS_LSS_FuncResp',0
	.word	157
	.byte	1,2,35,13,14
	.byte	'ADAS_EPS_AngReqSts',0
	.word	157
	.byte	1,2,35,14,14
	.byte	'ADAS_LSS_LeLineTrackingSts',0
	.word	157
	.byte	1,2,35,15,14
	.byte	'ADAS_LSS_RiLineTrackingSts',0
	.word	157
	.byte	1,2,35,16,14
	.byte	'ADAS_LSS_Available',0
	.word	157
	.byte	1,2,35,17,14
	.byte	'ADAS_LSS_FunSts',0
	.word	157
	.byte	1,2,35,18,14
	.byte	'ADAS_LSS_ErrSts',0
	.word	157
	.byte	1,2,35,19,14
	.byte	'ADAS_LSS_WarnFromResp',0
	.word	157
	.byte	1,2,35,20,14
	.byte	'FC_CalibrationSts',0
	.word	157
	.byte	1,2,35,21,14
	.byte	'FC_BlockageSts',0
	.word	157
	.byte	1,2,35,22,0,26
	.byte	'LSS_Output',0,18,198,4,3
	.word	22899
	.byte	12,18,200,4,9,12,14
	.byte	'ADAS_TSR_SWSts',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'TSR_SLWSwtResp',0
	.word	157
	.byte	1,2,35,1,14
	.byte	'ADAS_TSR_OperationSts',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'ADAS_TSR_SpeedLimit',0
	.word	157
	.byte	1,2,35,3,14
	.byte	'TSR_TrafSign',0
	.word	157
	.byte	1,2,35,4,14
	.byte	'TSR_SpdAssistInfoDisp',0
	.word	157
	.byte	1,2,35,5,14
	.byte	'TSR_Warning_offset',0
	.word	157
	.byte	1,2,35,6,14
	.byte	'TSR_SLWVisualWarn',0
	.word	157
	.byte	1,2,35,7,14
	.byte	'TSR_SLWVoiceWarn',0
	.word	157
	.byte	1,2,35,8,0,26
	.byte	'TSR_Output',0,18,211,4,3
	.word	23412
	.byte	26
	.byte	'ADAS_EPS_AngReqSts_IDT',0,18,223,4,15
	.word	157
	.byte	26
	.byte	'ADAS_EPS_TargetSteeringAngle_IDT',0,18,224,4,16
	.word	271
	.byte	26
	.byte	'ADAS_EPS_Vibration_Req_IDT',0,18,225,4,15
	.word	157
	.byte	26
	.byte	'ADAS_LSS_AngCmdReqPortnValue_IDT',0,18,235,4,16
	.word	271
	.byte	26
	.byte	'ADAS_LSS_AssidFormResp_IDT',0,18,236,4,15
	.word	157
	.byte	26
	.byte	'ADAS_LSS_FuncResp_IDT',0,18,240,4,15
	.word	157
	.byte	26
	.byte	'ADAS_LSS_HandsoffWarn_IDT',0,18,241,4,15
	.word	157
	.byte	26
	.byte	'ADAS_LSS_LeLineTrackingSts_IDT',0,18,242,4,15
	.word	157
	.byte	26
	.byte	'ADAS_LSS_RiLineTrackingSts_IDT',0,18,243,4,15
	.word	157
	.byte	26
	.byte	'ADAS_LSS_VoiceWarn_IDT',0,18,244,4,15
	.word	157
	.byte	26
	.byte	'ADAS_MaxSoftAcceleration_IDT',0,18,247,4,16
	.word	271
	.byte	26
	.byte	'ADAS_MinSoftAcceleration_IDT',0,18,248,4,16
	.word	271
	.byte	10,16
	.word	157
	.byte	11,15,0,26
	.byte	'serial_number_16',0,18,170,5,15
	.word	24123
	.byte	12,18,171,5,9,84,14
	.byte	'time_stamp',0
	.word	16269
	.byte	8,2,35,0,14
	.byte	'frame_index',0
	.word	293
	.byte	4,2,35,8,14
	.byte	'p0_x',0
	.word	16409
	.byte	4,2,35,12,14
	.byte	'p0_y',0
	.word	16409
	.byte	4,2,35,16,14
	.byte	'p1_x',0
	.word	16409
	.byte	4,2,35,20,14
	.byte	'p1_y',0
	.word	16409
	.byte	4,2,35,24,14
	.byte	'p2_x',0
	.word	16409
	.byte	4,2,35,28,14
	.byte	'p2_y',0
	.word	16409
	.byte	4,2,35,32,14
	.byte	'p3_x',0
	.word	16409
	.byte	4,2,35,36,14
	.byte	'p3_y',0
	.word	16409
	.byte	4,2,35,40,14
	.byte	'width',0
	.word	16409
	.byte	4,2,35,44,14
	.byte	'depth',0
	.word	16409
	.byte	4,2,35,48,14
	.byte	'direction',0
	.word	157
	.byte	1,2,35,52,14
	.byte	'slot_type',0
	.word	157
	.byte	1,2,35,53,14
	.byte	'slot_status',0
	.word	157
	.byte	1,2,35,54,14
	.byte	'slot_detection_type',0
	.word	157
	.byte	1,2,35,55,14
	.byte	'slot_occupied',0
	.word	157
	.byte	1,2,35,56,14
	.byte	'quality',0
	.word	157
	.byte	1,2,35,57,14
	.byte	'angle',0
	.word	16409
	.byte	4,2,35,58,14
	.byte	'lane_width',0
	.word	16409
	.byte	4,2,35,62,14
	.byte	'tracking_id',0
	.word	157
	.byte	1,2,35,66,14
	.byte	'serial_number',0
	.word	24132
	.byte	16,2,35,67,0,26
	.byte	'ParkingSlot',0,18,195,5,3
	.word	24158
	.byte	10,16
	.word	157
	.byte	11,15,0,12,18,197,5,9,88,14
	.byte	'replan_counter',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'planning_slot',0
	.word	24158
	.byte	84,2,35,4,0,26
	.byte	'PlanningSlotLocked',0,18,201,5,3
	.word	24585
	.byte	12,18,203,5,9,40,14
	.byte	'x',0
	.word	16409
	.byte	4,2,35,0,14
	.byte	'y',0
	.word	16409
	.byte	4,2,35,4,14
	.byte	'heading',0
	.word	16409
	.byte	4,2,35,8,14
	.byte	'arc_length_to_end',0
	.word	16409
	.byte	4,2,35,12,14
	.byte	'curve',0
	.word	16409
	.byte	4,2,35,16,14
	.byte	'steering_angle',0
	.word	16409
	.byte	4,2,35,20,14
	.byte	'maxvel',0
	.word	16409
	.byte	4,2,35,24,14
	.byte	'acc',0
	.word	16409
	.byte	4,2,35,28,14
	.byte	'speed',0
	.word	16409
	.byte	4,2,35,32,14
	.byte	'time_to_end',0
	.word	16409
	.byte	4,2,35,36,0,26
	.byte	'TrajectoryPoint',0,18,215,5,3
	.word	24667
	.byte	12,18,217,5,9,112,14
	.byte	'replan_counter',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'trajectory_id',0
	.word	157
	.byte	1,2,35,1,14
	.byte	'trajectory_point_id',0
	.word	293
	.byte	4,2,35,2,14
	.byte	'cur_vehicle_brake',0
	.word	16409
	.byte	4,2,35,6,14
	.byte	'exp_vehicle_brake',0
	.word	16409
	.byte	4,2,35,10,14
	.byte	'cur_vehicle_throttle',0
	.word	16409
	.byte	4,2,35,14,14
	.byte	'exp_vehicle_throttle',0
	.word	16409
	.byte	4,2,35,18,14
	.byte	'cur_vehicle_lon_acc',0
	.word	16409
	.byte	4,2,35,22,14
	.byte	'exp_vehicle_lon_acc',0
	.word	16409
	.byte	4,2,35,26,14
	.byte	'cur_vehicle_gear',0
	.word	157
	.byte	1,2,35,30,14
	.byte	'exp_vehicle_gear',0
	.word	157
	.byte	1,2,35,31,14
	.byte	'exp_point',0
	.word	24667
	.byte	40,2,35,32,14
	.byte	'cur_point',0
	.word	24667
	.byte	40,2,35,72,0,26
	.byte	'TrackingPointsDebug',0,18,232,5,3
	.word	24869
	.byte	12,18,234,5,9,4,14
	.byte	'tracking_error_status',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'cur_trajectory_finish',0
	.word	157
	.byte	1,2,35,1,14
	.byte	'points_to_end',0
	.word	157
	.byte	1,2,35,2,0,26
	.byte	'TrackingState',0,18,239,5,3
	.word	25243
	.byte	10,240,7
	.word	24158
	.byte	11,11,0,26
	.byte	'slot_set_12',0,18,241,5,21
	.word	25358
	.byte	12,18,242,5,9,136,8,14
	.byte	'time_stamp',0
	.word	16269
	.byte	8,2,35,0,14
	.byte	'time_stamp_slot',0
	.word	16269
	.byte	8,2,35,8,14
	.byte	'frame_index',0
	.word	293
	.byte	4,2,35,16,14
	.byte	'slot_cnt',0
	.word	157
	.byte	1,2,35,20,14
	.byte	'slot_set',0
	.word	25368
	.byte	240,7,2,35,24,0,26
	.byte	'ParkingSlotSet',0,18,249,5,3
	.word	25389
	.byte	10,240,7
	.word	24158
	.byte	11,11,0,26
	.byte	'APA_EPS_TargetSteeringAngle_IDT',0,18,136,6,16
	.word	271
	.byte	26
	.byte	'APA_WCB_BrakeControlReq_IDT',0,18,154,6,15
	.word	157
	.byte	26
	.byte	'ARS_CFGSTATE_CRC16_Checksum_IDT',0,18,147,7,16
	.word	271
	.byte	26
	.byte	'ARS_CFGSTATE_Mode_IDT',0,18,148,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFGSTATE_MsgCounter_IDT',0,18,149,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFGSTATE_SensorID_CFGflag_IDT',0,18,150,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFGSTATE_SensorID_IDT',0,18,151,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFGSTATE_VehParCoverDamping_IDT',0,18,152,7,16
	.word	271
	.byte	26
	.byte	'ARS_CFGSTATE_VehParLatPos_IDT',0,18,153,7,16
	.word	271
	.byte	26
	.byte	'ARS_CFGSTATE_VehParLongPos_IDT',0,18,154,7,16
	.word	271
	.byte	26
	.byte	'ARS_CFGSTATE_VehParSteeringRatio_IDT',0,18,155,7,16
	.word	271
	.byte	26
	.byte	'ARS_CFGSTATE_VehParVertPos_IDT',0,18,156,7,16
	.word	271
	.byte	26
	.byte	'ARS_CFGSTATE_VehParWheelBase_IDT',0,18,157,7,16
	.word	271
	.byte	26
	.byte	'ARS_CFGSTATE_VehParYawAngle_IDT',0,18,158,7,16
	.word	271
	.byte	26
	.byte	'ARS_CFGST_TmeSynEnFl_IDT',0,18,159,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFGST_VehParStrRatio_CFGfl_IDT',0,18,160,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFGST_VehPrAxLdDistr0_IDT',0,18,161,7,16
	.word	271
	.byte	26
	.byte	'ARS_CFGST_VehPrAxLdDstr_CFGfl_IDT',0,18,162,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFGST_VehPrCntrGrvHght_CFGfl_IDT',0,18,163,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFGST_VehPrCntrOfGrvHght_IDT',0,18,164,7,16
	.word	271
	.byte	26
	.byte	'ARS_CFGST_VehPrCvrDmp_CFGfl_IDT',0,18,165,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFGST_VehPrLatPos_CFGfl_IDT',0,18,166,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFGST_VehPrLngPosCoG_CFGfl_IDT',0,18,167,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFGST_VehPrLngPosCoG_IDT',0,18,168,7,16
	.word	271
	.byte	26
	.byte	'ARS_CFGST_VehPrLngPos_CFGfl_IDT',0,18,169,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFGST_VehPrSnsrOri_CFGfl_IDT',0,18,170,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFGST_VehPrSnsrOri_IDT',0,18,171,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFGST_VehPrTrWdFrnt_CFGfl_IDT',0,18,172,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFGST_VehPrTrWdRear_CFGfl_IDT',0,18,173,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFGST_VehPrTrkWdthFrnt_IDT',0,18,174,7,16
	.word	271
	.byte	26
	.byte	'ARS_CFGST_VehPrTrkWdthRear_IDT',0,18,175,7,16
	.word	271
	.byte	26
	.byte	'ARS_CFGST_VehPrVehWght_CFGfl_IDT',0,18,176,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFGST_VehPrVehWght_IDT',0,18,177,7,16
	.word	271
	.byte	26
	.byte	'ARS_CFGST_VehPrVrtPos_CFGfl_IDT',0,18,178,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFGST_VehPrWhlBs_CFGfl_IDT',0,18,179,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFGST_VehPrYwAng_CFGfl_IDT',0,18,180,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFG_ProtoclFlag_P_IDT',0,18,181,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFG_VParPitchAngle_CFGflag_IDT',0,18,182,7,15
	.word	157
	.byte	26
	.byte	'ARS_CFG_VParPitchAngle_IDT',0,18,183,7,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_00_IDT',0,18,184,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_01_IDT',0,18,185,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_02_IDT',0,18,186,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_03_IDT',0,18,187,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_04_IDT',0,18,188,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_05_IDT',0,18,189,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_06_IDT',0,18,190,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_07_IDT',0,18,191,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_08_IDT',0,18,192,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_09_IDT',0,18,193,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_10_IDT',0,18,194,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_11_IDT',0,18,195,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_12_IDT',0,18,196,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_13_IDT',0,18,197,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_14_IDT',0,18,198,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_15_IDT',0,18,199,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_16_IDT',0,18,200,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_17_IDT',0,18,201,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_18_IDT',0,18,202,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_19_IDT',0,18,203,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_20_IDT',0,18,204,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_21_IDT',0,18,205,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_22_IDT',0,18,206,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_23_IDT',0,18,207,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_24_IDT',0,18,208,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_25_IDT',0,18,209,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_26_IDT',0,18,210,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_27_IDT',0,18,211,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_28_IDT',0,18,212,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_29_IDT',0,18,213,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_30_IDT',0,18,214,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_31_IDT',0,18,215,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_32_IDT',0,18,216,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_33_IDT',0,18,217,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_34_IDT',0,18,218,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_35_IDT',0,18,219,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_36_IDT',0,18,220,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_37_IDT',0,18,221,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_38_IDT',0,18,222,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_39_IDT',0,18,223,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_40_IDT',0,18,224,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_41_IDT',0,18,225,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_42_IDT',0,18,226,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_43_IDT',0,18,227,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_44_IDT',0,18,228,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_45_IDT',0,18,229,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_46_IDT',0,18,230,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_47_IDT',0,18,231,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_48_IDT',0,18,232,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_49_IDT',0,18,233,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_50_IDT',0,18,234,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_51_IDT',0,18,235,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_52_IDT',0,18,236,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_53_IDT',0,18,237,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_54_IDT',0,18,238,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_55_IDT',0,18,239,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_56_IDT',0,18,240,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_57_IDT',0,18,241,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_58_IDT',0,18,242,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsXStd_Obj_59_IDT',0,18,243,7,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_00_IDT',0,18,244,7,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_01_IDT',0,18,245,7,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_02_IDT',0,18,246,7,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_03_IDT',0,18,247,7,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_04_IDT',0,18,248,7,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_05_IDT',0,18,249,7,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_06_IDT',0,18,250,7,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_07_IDT',0,18,251,7,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_08_IDT',0,18,252,7,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_09_IDT',0,18,253,7,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_10_IDT',0,18,254,7,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_11_IDT',0,18,255,7,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_12_IDT',0,18,128,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_13_IDT',0,18,129,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_14_IDT',0,18,130,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_15_IDT',0,18,131,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_16_IDT',0,18,132,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_17_IDT',0,18,133,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_18_IDT',0,18,134,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_19_IDT',0,18,135,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_20_IDT',0,18,136,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_21_IDT',0,18,137,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_22_IDT',0,18,138,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_23_IDT',0,18,139,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_24_IDT',0,18,140,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_25_IDT',0,18,141,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_26_IDT',0,18,142,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_27_IDT',0,18,143,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_28_IDT',0,18,144,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_29_IDT',0,18,145,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_30_IDT',0,18,146,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_31_IDT',0,18,147,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_32_IDT',0,18,148,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_33_IDT',0,18,149,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_34_IDT',0,18,150,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_35_IDT',0,18,151,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_36_IDT',0,18,152,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_37_IDT',0,18,153,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_38_IDT',0,18,154,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_39_IDT',0,18,155,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_40_IDT',0,18,156,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_41_IDT',0,18,157,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_42_IDT',0,18,158,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_43_IDT',0,18,159,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_44_IDT',0,18,160,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_45_IDT',0,18,161,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_46_IDT',0,18,162,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_47_IDT',0,18,163,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_48_IDT',0,18,164,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_49_IDT',0,18,165,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_50_IDT',0,18,166,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_51_IDT',0,18,167,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_52_IDT',0,18,168,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_53_IDT',0,18,169,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_54_IDT',0,18,170,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_55_IDT',0,18,171,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_56_IDT',0,18,172,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_57_IDT',0,18,173,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_58_IDT',0,18,174,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsX_Obj_59_IDT',0,18,175,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_00_IDT',0,18,176,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_01_IDT',0,18,177,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_02_IDT',0,18,178,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_03_IDT',0,18,179,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_04_IDT',0,18,180,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_05_IDT',0,18,181,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_06_IDT',0,18,182,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_07_IDT',0,18,183,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_08_IDT',0,18,184,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_09_IDT',0,18,185,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_10_IDT',0,18,186,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_11_IDT',0,18,187,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_12_IDT',0,18,188,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_13_IDT',0,18,189,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_14_IDT',0,18,190,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_15_IDT',0,18,191,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_16_IDT',0,18,192,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_17_IDT',0,18,193,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_18_IDT',0,18,194,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_19_IDT',0,18,195,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_20_IDT',0,18,196,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_21_IDT',0,18,197,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_22_IDT',0,18,198,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_23_IDT',0,18,199,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_24_IDT',0,18,200,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_25_IDT',0,18,201,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_26_IDT',0,18,202,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_27_IDT',0,18,203,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_28_IDT',0,18,204,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_29_IDT',0,18,205,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_30_IDT',0,18,206,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_31_IDT',0,18,207,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_32_IDT',0,18,208,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_33_IDT',0,18,209,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_34_IDT',0,18,210,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_35_IDT',0,18,211,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_36_IDT',0,18,212,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_37_IDT',0,18,213,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_38_IDT',0,18,214,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_39_IDT',0,18,215,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_40_IDT',0,18,216,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_41_IDT',0,18,217,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_42_IDT',0,18,218,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_43_IDT',0,18,219,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_44_IDT',0,18,220,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_45_IDT',0,18,221,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_46_IDT',0,18,222,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_47_IDT',0,18,223,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_48_IDT',0,18,224,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_49_IDT',0,18,225,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_50_IDT',0,18,226,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_51_IDT',0,18,227,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_52_IDT',0,18,228,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_53_IDT',0,18,229,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_54_IDT',0,18,230,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_55_IDT',0,18,231,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_56_IDT',0,18,232,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_57_IDT',0,18,233,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_58_IDT',0,18,234,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsYStd_Obj_59_IDT',0,18,235,8,15
	.word	157
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_00_IDT',0,18,236,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_01_IDT',0,18,237,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_02_IDT',0,18,238,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_03_IDT',0,18,239,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_04_IDT',0,18,240,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_05_IDT',0,18,241,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_06_IDT',0,18,242,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_07_IDT',0,18,243,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_08_IDT',0,18,244,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_09_IDT',0,18,245,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_10_IDT',0,18,246,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_11_IDT',0,18,247,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_12_IDT',0,18,248,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_13_IDT',0,18,249,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_14_IDT',0,18,250,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_15_IDT',0,18,251,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_16_IDT',0,18,252,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_17_IDT',0,18,253,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_18_IDT',0,18,254,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_19_IDT',0,18,255,8,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_20_IDT',0,18,128,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_21_IDT',0,18,129,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_22_IDT',0,18,130,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_23_IDT',0,18,131,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_24_IDT',0,18,132,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_25_IDT',0,18,133,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_26_IDT',0,18,134,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_27_IDT',0,18,135,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_28_IDT',0,18,136,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_29_IDT',0,18,137,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_30_IDT',0,18,138,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_31_IDT',0,18,139,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_32_IDT',0,18,140,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_33_IDT',0,18,141,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_34_IDT',0,18,142,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_35_IDT',0,18,143,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_36_IDT',0,18,144,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_37_IDT',0,18,145,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_38_IDT',0,18,146,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_39_IDT',0,18,147,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_40_IDT',0,18,148,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_41_IDT',0,18,149,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_42_IDT',0,18,150,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_43_IDT',0,18,151,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_44_IDT',0,18,152,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_45_IDT',0,18,153,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_46_IDT',0,18,154,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_47_IDT',0,18,155,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_48_IDT',0,18,156,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_49_IDT',0,18,157,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_50_IDT',0,18,158,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_51_IDT',0,18,159,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_52_IDT',0,18,160,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_53_IDT',0,18,161,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_54_IDT',0,18,162,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_55_IDT',0,18,163,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_56_IDT',0,18,164,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_57_IDT',0,18,165,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_58_IDT',0,18,166,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_AabsY_Obj_59_IDT',0,18,167,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Header_IDT',0,18,168,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_00_01_IDT',0,18,169,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_02_03_IDT',0,18,170,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_04_05_IDT',0,18,171,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_06_07_IDT',0,18,172,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_08_09_IDT',0,18,173,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_10_11_IDT',0,18,174,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_12_13_IDT',0,18,175,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_14_15_IDT',0,18,176,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_16_17_IDT',0,18,177,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_18_19_IDT',0,18,178,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_20_21_IDT',0,18,179,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_22_23_IDT',0,18,180,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_24_25_IDT',0,18,181,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_26_27_IDT',0,18,182,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_28_29_IDT',0,18,183,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_30_31_IDT',0,18,184,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_32_33_IDT',0,18,185,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_34_35_IDT',0,18,186,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_36_37_IDT',0,18,187,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_38_39_IDT',0,18,188,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_40_41_IDT',0,18,189,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_42_43_IDT',0,18,190,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_44_45_IDT',0,18,191,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_46_47_IDT',0,18,192,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_48_49_IDT',0,18,193,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_50_51_IDT',0,18,194,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_52_53_IDT',0,18,195,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_54_55_IDT',0,18,196,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_56_57_IDT',0,18,197,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_CRC16_Checksum_Obj_58_59_IDT',0,18,198,9,16
	.word	271
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_00_IDT',0,18,199,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_01_IDT',0,18,200,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_02_IDT',0,18,201,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_03_IDT',0,18,202,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_04_IDT',0,18,203,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_05_IDT',0,18,204,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_06_IDT',0,18,205,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_07_IDT',0,18,206,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_08_IDT',0,18,207,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_09_IDT',0,18,208,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_10_IDT',0,18,209,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_11_IDT',0,18,210,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_12_IDT',0,18,211,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_13_IDT',0,18,212,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_14_IDT',0,18,213,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_15_IDT',0,18,214,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_16_IDT',0,18,215,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_17_IDT',0,18,216,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_18_IDT',0,18,217,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_19_IDT',0,18,218,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_20_IDT',0,18,219,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_21_IDT',0,18,220,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_22_IDT',0,18,221,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_23_IDT',0,18,222,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_24_IDT',0,18,223,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_25_IDT',0,18,224,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_26_IDT',0,18,225,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_27_IDT',0,18,226,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_28_IDT',0,18,227,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_29_IDT',0,18,228,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_30_IDT',0,18,229,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_31_IDT',0,18,230,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_32_IDT',0,18,231,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_33_IDT',0,18,232,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_34_IDT',0,18,233,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_35_IDT',0,18,234,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_36_IDT',0,18,235,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_37_IDT',0,18,236,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_38_IDT',0,18,237,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_39_IDT',0,18,238,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_40_IDT',0,18,239,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_41_IDT',0,18,240,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_42_IDT',0,18,241,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_43_IDT',0,18,242,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_44_IDT',0,18,243,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_45_IDT',0,18,244,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_46_IDT',0,18,245,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_47_IDT',0,18,246,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_48_IDT',0,18,247,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_49_IDT',0,18,248,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_50_IDT',0,18,249,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_51_IDT',0,18,250,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_52_IDT',0,18,251,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_53_IDT',0,18,252,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_54_IDT',0,18,253,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_55_IDT',0,18,254,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_56_IDT',0,18,255,9,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_57_IDT',0,18,128,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_58_IDT',0,18,129,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ClassConf_Obj_59_IDT',0,18,130,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_00_IDT',0,18,131,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_01_IDT',0,18,132,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_02_IDT',0,18,133,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_03_IDT',0,18,134,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_04_IDT',0,18,135,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_05_IDT',0,18,136,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_06_IDT',0,18,137,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_07_IDT',0,18,138,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_08_IDT',0,18,139,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_09_IDT',0,18,140,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_10_IDT',0,18,141,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_11_IDT',0,18,142,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_12_IDT',0,18,143,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_13_IDT',0,18,144,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_14_IDT',0,18,145,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_15_IDT',0,18,146,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_16_IDT',0,18,147,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_17_IDT',0,18,148,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_18_IDT',0,18,149,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_19_IDT',0,18,150,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_20_IDT',0,18,151,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_21_IDT',0,18,152,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_22_IDT',0,18,153,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_23_IDT',0,18,154,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_24_IDT',0,18,155,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_25_IDT',0,18,156,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_26_IDT',0,18,157,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_27_IDT',0,18,158,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_28_IDT',0,18,159,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_29_IDT',0,18,160,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_30_IDT',0,18,161,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_31_IDT',0,18,162,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_32_IDT',0,18,163,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_33_IDT',0,18,164,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_34_IDT',0,18,165,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_35_IDT',0,18,166,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_36_IDT',0,18,167,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_37_IDT',0,18,168,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_38_IDT',0,18,169,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_39_IDT',0,18,170,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_40_IDT',0,18,171,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_41_IDT',0,18,172,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_42_IDT',0,18,173,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_43_IDT',0,18,174,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_44_IDT',0,18,175,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_45_IDT',0,18,176,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_46_IDT',0,18,177,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_47_IDT',0,18,178,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_48_IDT',0,18,179,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_49_IDT',0,18,180,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_50_IDT',0,18,181,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_51_IDT',0,18,182,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_52_IDT',0,18,183,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_53_IDT',0,18,184,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_54_IDT',0,18,185,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_55_IDT',0,18,186,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_56_IDT',0,18,187,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_57_IDT',0,18,188,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_58_IDT',0,18,189,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Classification_Obj_59_IDT',0,18,190,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_CycleCounter_IDT',0,18,191,10,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_00_IDT',0,18,192,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_01_IDT',0,18,193,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_02_IDT',0,18,194,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_03_IDT',0,18,195,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_04_IDT',0,18,196,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_05_IDT',0,18,197,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_06_IDT',0,18,198,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_07_IDT',0,18,199,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_08_IDT',0,18,200,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_09_IDT',0,18,201,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_10_IDT',0,18,202,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_11_IDT',0,18,203,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_12_IDT',0,18,204,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_13_IDT',0,18,205,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_14_IDT',0,18,206,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_15_IDT',0,18,207,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_16_IDT',0,18,208,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_17_IDT',0,18,209,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_18_IDT',0,18,210,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_19_IDT',0,18,211,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_20_IDT',0,18,212,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_21_IDT',0,18,213,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_22_IDT',0,18,214,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_23_IDT',0,18,215,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_24_IDT',0,18,216,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_25_IDT',0,18,217,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_26_IDT',0,18,218,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_27_IDT',0,18,219,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_28_IDT',0,18,220,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_29_IDT',0,18,221,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_30_IDT',0,18,222,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_31_IDT',0,18,223,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_32_IDT',0,18,224,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_33_IDT',0,18,225,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_34_IDT',0,18,226,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_35_IDT',0,18,227,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_36_IDT',0,18,228,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_37_IDT',0,18,229,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_38_IDT',0,18,230,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_39_IDT',0,18,231,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_40_IDT',0,18,232,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_41_IDT',0,18,233,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_42_IDT',0,18,234,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_43_IDT',0,18,235,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_44_IDT',0,18,236,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_45_IDT',0,18,237,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_46_IDT',0,18,238,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_47_IDT',0,18,239,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_48_IDT',0,18,240,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_49_IDT',0,18,241,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_50_IDT',0,18,242,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_51_IDT',0,18,243,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_52_IDT',0,18,244,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_53_IDT',0,18,245,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_54_IDT',0,18,246,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_55_IDT',0,18,247,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_56_IDT',0,18,248,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_57_IDT',0,18,249,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_58_IDT',0,18,250,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistXStd_Obj_59_IDT',0,18,251,10,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistX_Obj_00_IDT',0,18,252,10,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_01_IDT',0,18,253,10,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_02_IDT',0,18,254,10,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_03_IDT',0,18,255,10,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_04_IDT',0,18,128,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_05_IDT',0,18,129,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_06_IDT',0,18,130,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_07_IDT',0,18,131,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_08_IDT',0,18,132,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_09_IDT',0,18,133,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_10_IDT',0,18,134,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_11_IDT',0,18,135,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_12_IDT',0,18,136,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_13_IDT',0,18,137,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_14_IDT',0,18,138,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_15_IDT',0,18,139,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_16_IDT',0,18,140,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_17_IDT',0,18,141,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_18_IDT',0,18,142,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_19_IDT',0,18,143,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_20_IDT',0,18,144,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_21_IDT',0,18,145,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_22_IDT',0,18,146,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_23_IDT',0,18,147,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_24_IDT',0,18,148,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_25_IDT',0,18,149,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_26_IDT',0,18,150,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_27_IDT',0,18,151,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_28_IDT',0,18,152,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_29_IDT',0,18,153,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_30_IDT',0,18,154,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_31_IDT',0,18,155,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_32_IDT',0,18,156,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_33_IDT',0,18,157,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_34_IDT',0,18,158,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_35_IDT',0,18,159,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_36_IDT',0,18,160,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_37_IDT',0,18,161,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_38_IDT',0,18,162,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_39_IDT',0,18,163,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_40_IDT',0,18,164,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_41_IDT',0,18,165,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_42_IDT',0,18,166,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_43_IDT',0,18,167,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_44_IDT',0,18,168,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_45_IDT',0,18,169,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_46_IDT',0,18,170,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_47_IDT',0,18,171,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_48_IDT',0,18,172,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_49_IDT',0,18,173,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_50_IDT',0,18,174,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_51_IDT',0,18,175,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_52_IDT',0,18,176,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_53_IDT',0,18,177,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_54_IDT',0,18,178,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_55_IDT',0,18,179,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_56_IDT',0,18,180,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_57_IDT',0,18,181,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_58_IDT',0,18,182,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistX_Obj_59_IDT',0,18,183,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_00_IDT',0,18,184,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_01_IDT',0,18,185,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_02_IDT',0,18,186,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_03_IDT',0,18,187,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_04_IDT',0,18,188,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_05_IDT',0,18,189,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_06_IDT',0,18,190,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_07_IDT',0,18,191,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_08_IDT',0,18,192,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_09_IDT',0,18,193,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_10_IDT',0,18,194,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_11_IDT',0,18,195,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_12_IDT',0,18,196,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_13_IDT',0,18,197,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_14_IDT',0,18,198,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_15_IDT',0,18,199,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_16_IDT',0,18,200,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_17_IDT',0,18,201,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_18_IDT',0,18,202,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_19_IDT',0,18,203,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_20_IDT',0,18,204,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_21_IDT',0,18,205,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_22_IDT',0,18,206,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_23_IDT',0,18,207,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_24_IDT',0,18,208,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_25_IDT',0,18,209,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_26_IDT',0,18,210,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_27_IDT',0,18,211,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_28_IDT',0,18,212,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_29_IDT',0,18,213,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_30_IDT',0,18,214,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_31_IDT',0,18,215,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_32_IDT',0,18,216,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_33_IDT',0,18,217,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_34_IDT',0,18,218,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_35_IDT',0,18,219,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_36_IDT',0,18,220,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_37_IDT',0,18,221,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_38_IDT',0,18,222,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_39_IDT',0,18,223,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_40_IDT',0,18,224,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_41_IDT',0,18,225,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_42_IDT',0,18,226,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_43_IDT',0,18,227,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_44_IDT',0,18,228,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_45_IDT',0,18,229,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_46_IDT',0,18,230,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_47_IDT',0,18,231,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_48_IDT',0,18,232,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_49_IDT',0,18,233,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_50_IDT',0,18,234,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_51_IDT',0,18,235,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_52_IDT',0,18,236,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_53_IDT',0,18,237,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_54_IDT',0,18,238,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_55_IDT',0,18,239,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_56_IDT',0,18,240,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_57_IDT',0,18,241,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_58_IDT',0,18,242,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistYStd_Obj_59_IDT',0,18,243,11,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DistY_Obj_00_IDT',0,18,244,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_01_IDT',0,18,245,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_02_IDT',0,18,246,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_03_IDT',0,18,247,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_04_IDT',0,18,248,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_05_IDT',0,18,249,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_06_IDT',0,18,250,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_07_IDT',0,18,251,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_08_IDT',0,18,252,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_09_IDT',0,18,253,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_10_IDT',0,18,254,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_11_IDT',0,18,255,11,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_12_IDT',0,18,128,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_13_IDT',0,18,129,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_14_IDT',0,18,130,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_15_IDT',0,18,131,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_16_IDT',0,18,132,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_17_IDT',0,18,133,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_18_IDT',0,18,134,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_19_IDT',0,18,135,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_20_IDT',0,18,136,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_21_IDT',0,18,137,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_22_IDT',0,18,138,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_23_IDT',0,18,139,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_24_IDT',0,18,140,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_25_IDT',0,18,141,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_26_IDT',0,18,142,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_27_IDT',0,18,143,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_28_IDT',0,18,144,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_29_IDT',0,18,145,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_30_IDT',0,18,146,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_31_IDT',0,18,147,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_32_IDT',0,18,148,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_33_IDT',0,18,149,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_34_IDT',0,18,150,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_35_IDT',0,18,151,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_36_IDT',0,18,152,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_37_IDT',0,18,153,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_38_IDT',0,18,154,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_39_IDT',0,18,155,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_40_IDT',0,18,156,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_41_IDT',0,18,157,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_42_IDT',0,18,158,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_43_IDT',0,18,159,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_44_IDT',0,18,160,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_45_IDT',0,18,161,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_46_IDT',0,18,162,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_47_IDT',0,18,163,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_48_IDT',0,18,164,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_49_IDT',0,18,165,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_50_IDT',0,18,166,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_51_IDT',0,18,167,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_52_IDT',0,18,168,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_53_IDT',0,18,169,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_54_IDT',0,18,170,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_55_IDT',0,18,171,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_56_IDT',0,18,172,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_57_IDT',0,18,173,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_58_IDT',0,18,174,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DistY_Obj_59_IDT',0,18,175,12,16
	.word	271
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_00_IDT',0,18,176,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_01_IDT',0,18,177,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_02_IDT',0,18,178,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_03_IDT',0,18,179,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_04_IDT',0,18,180,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_05_IDT',0,18,181,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_06_IDT',0,18,182,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_07_IDT',0,18,183,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_08_IDT',0,18,184,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_09_IDT',0,18,185,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_10_IDT',0,18,186,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_11_IDT',0,18,187,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_12_IDT',0,18,188,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_13_IDT',0,18,189,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_14_IDT',0,18,190,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_15_IDT',0,18,191,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_16_IDT',0,18,192,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_17_IDT',0,18,193,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_18_IDT',0,18,194,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_19_IDT',0,18,195,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_20_IDT',0,18,196,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_21_IDT',0,18,197,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_22_IDT',0,18,198,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_23_IDT',0,18,199,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_24_IDT',0,18,200,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_25_IDT',0,18,201,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_26_IDT',0,18,202,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_27_IDT',0,18,203,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_28_IDT',0,18,204,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_29_IDT',0,18,205,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_30_IDT',0,18,206,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_31_IDT',0,18,207,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_32_IDT',0,18,208,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_33_IDT',0,18,209,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_34_IDT',0,18,210,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_35_IDT',0,18,211,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_36_IDT',0,18,212,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_37_IDT',0,18,213,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_38_IDT',0,18,214,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_39_IDT',0,18,215,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_40_IDT',0,18,216,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_41_IDT',0,18,217,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_42_IDT',0,18,218,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_43_IDT',0,18,219,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_44_IDT',0,18,220,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_45_IDT',0,18,221,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_46_IDT',0,18,222,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_47_IDT',0,18,223,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_48_IDT',0,18,224,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_49_IDT',0,18,225,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_50_IDT',0,18,226,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_51_IDT',0,18,227,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_52_IDT',0,18,228,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_53_IDT',0,18,229,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_54_IDT',0,18,230,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_55_IDT',0,18,231,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_56_IDT',0,18,232,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_57_IDT',0,18,233,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_58_IDT',0,18,234,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynConf_Obj_59_IDT',0,18,235,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_00_IDT',0,18,236,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_01_IDT',0,18,237,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_02_IDT',0,18,238,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_03_IDT',0,18,239,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_04_IDT',0,18,240,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_05_IDT',0,18,241,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_06_IDT',0,18,242,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_07_IDT',0,18,243,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_08_IDT',0,18,244,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_09_IDT',0,18,245,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_10_IDT',0,18,246,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_11_IDT',0,18,247,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_12_IDT',0,18,248,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_13_IDT',0,18,249,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_14_IDT',0,18,250,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_15_IDT',0,18,251,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_16_IDT',0,18,252,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_17_IDT',0,18,253,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_18_IDT',0,18,254,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_19_IDT',0,18,255,12,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_20_IDT',0,18,128,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_21_IDT',0,18,129,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_22_IDT',0,18,130,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_23_IDT',0,18,131,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_24_IDT',0,18,132,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_25_IDT',0,18,133,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_26_IDT',0,18,134,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_27_IDT',0,18,135,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_28_IDT',0,18,136,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_29_IDT',0,18,137,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_30_IDT',0,18,138,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_31_IDT',0,18,139,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_32_IDT',0,18,140,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_33_IDT',0,18,141,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_34_IDT',0,18,142,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_35_IDT',0,18,143,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_36_IDT',0,18,144,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_37_IDT',0,18,145,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_38_IDT',0,18,146,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_39_IDT',0,18,147,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_40_IDT',0,18,148,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_41_IDT',0,18,149,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_42_IDT',0,18,150,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_43_IDT',0,18,151,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_44_IDT',0,18,152,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_45_IDT',0,18,153,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_46_IDT',0,18,154,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_47_IDT',0,18,155,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_48_IDT',0,18,156,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_49_IDT',0,18,157,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_50_IDT',0,18,158,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_51_IDT',0,18,159,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_52_IDT',0,18,160,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_53_IDT',0,18,161,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_54_IDT',0,18,162,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_55_IDT',0,18,163,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_56_IDT',0,18,164,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_57_IDT',0,18,165,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_58_IDT',0,18,166,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_DynProp_Obj_59_IDT',0,18,167,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_EgoAcceleration_IDT',0,18,168,13,16
	.word	271
	.byte	26
	.byte	'ARS_OD_EgoCurvature_IDT',0,18,169,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_EgoVelocityStd_IDT',0,18,170,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_EgoVelocity_IDT',0,18,171,13,16
	.word	271
	.byte	26
	.byte	'ARS_OD_EgoYawRate_IDT',0,18,172,13,16
	.word	271
	.byte	26
	.byte	'ARS_OD_ExtendedCycleFlag_IDT',0,18,173,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_00_IDT',0,18,174,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_01_IDT',0,18,175,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_02_IDT',0,18,176,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_03_IDT',0,18,177,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_04_IDT',0,18,178,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_05_IDT',0,18,179,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_06_IDT',0,18,180,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_07_IDT',0,18,181,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_08_IDT',0,18,182,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_09_IDT',0,18,183,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_10_IDT',0,18,184,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_11_IDT',0,18,185,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_12_IDT',0,18,186,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_13_IDT',0,18,187,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_14_IDT',0,18,188,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_15_IDT',0,18,189,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_16_IDT',0,18,190,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_17_IDT',0,18,191,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_18_IDT',0,18,192,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_19_IDT',0,18,193,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_20_IDT',0,18,194,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_21_IDT',0,18,195,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_22_IDT',0,18,196,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_23_IDT',0,18,197,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_24_IDT',0,18,198,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_25_IDT',0,18,199,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_26_IDT',0,18,200,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_27_IDT',0,18,201,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_28_IDT',0,18,202,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_29_IDT',0,18,203,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_30_IDT',0,18,204,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_31_IDT',0,18,205,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_32_IDT',0,18,206,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_33_IDT',0,18,207,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_34_IDT',0,18,208,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_35_IDT',0,18,209,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_36_IDT',0,18,210,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_37_IDT',0,18,211,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_38_IDT',0,18,212,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_39_IDT',0,18,213,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_40_IDT',0,18,214,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_41_IDT',0,18,215,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_42_IDT',0,18,216,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_43_IDT',0,18,217,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_44_IDT',0,18,218,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_45_IDT',0,18,219,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_46_IDT',0,18,220,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_47_IDT',0,18,221,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_48_IDT',0,18,222,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_49_IDT',0,18,223,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_50_IDT',0,18,224,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_51_IDT',0,18,225,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_52_IDT',0,18,226,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_53_IDT',0,18,227,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_54_IDT',0,18,228,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_55_IDT',0,18,229,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_56_IDT',0,18,230,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_57_IDT',0,18,231,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_58_IDT',0,18,232,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ID_59_IDT',0,18,233,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Latency_IDT',0,18,234,13,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Length_Obj_00_IDT',0,18,235,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_01_IDT',0,18,236,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_02_IDT',0,18,237,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_03_IDT',0,18,238,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_04_IDT',0,18,239,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_05_IDT',0,18,240,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_06_IDT',0,18,241,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_07_IDT',0,18,242,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_08_IDT',0,18,243,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_09_IDT',0,18,244,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_10_IDT',0,18,245,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_11_IDT',0,18,246,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_12_IDT',0,18,247,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_13_IDT',0,18,248,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_14_IDT',0,18,249,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_15_IDT',0,18,250,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_16_IDT',0,18,251,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_17_IDT',0,18,252,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_18_IDT',0,18,253,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_19_IDT',0,18,254,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_20_IDT',0,18,255,13,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_21_IDT',0,18,128,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_22_IDT',0,18,129,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_23_IDT',0,18,130,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_24_IDT',0,18,131,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_25_IDT',0,18,132,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_26_IDT',0,18,133,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_27_IDT',0,18,134,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_28_IDT',0,18,135,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_29_IDT',0,18,136,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_30_IDT',0,18,137,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_31_IDT',0,18,138,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_32_IDT',0,18,139,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_33_IDT',0,18,140,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_34_IDT',0,18,141,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_35_IDT',0,18,142,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_36_IDT',0,18,143,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_37_IDT',0,18,144,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_38_IDT',0,18,145,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_39_IDT',0,18,146,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_40_IDT',0,18,147,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_41_IDT',0,18,148,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_42_IDT',0,18,149,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_43_IDT',0,18,150,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_44_IDT',0,18,151,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_45_IDT',0,18,152,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_46_IDT',0,18,153,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_47_IDT',0,18,154,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_48_IDT',0,18,155,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_49_IDT',0,18,156,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_50_IDT',0,18,157,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_51_IDT',0,18,158,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_52_IDT',0,18,159,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_53_IDT',0,18,160,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_54_IDT',0,18,161,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_55_IDT',0,18,162,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_56_IDT',0,18,163,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_57_IDT',0,18,164,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_58_IDT',0,18,165,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Length_Obj_59_IDT',0,18,166,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_00_IDT',0,18,167,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_01_IDT',0,18,168,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_02_IDT',0,18,169,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_03_IDT',0,18,170,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_04_IDT',0,18,171,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_05_IDT',0,18,172,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_06_IDT',0,18,173,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_07_IDT',0,18,174,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_08_IDT',0,18,175,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_09_IDT',0,18,176,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_10_IDT',0,18,177,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_11_IDT',0,18,178,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_12_IDT',0,18,179,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_13_IDT',0,18,180,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_14_IDT',0,18,181,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_15_IDT',0,18,182,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_16_IDT',0,18,183,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_17_IDT',0,18,184,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_18_IDT',0,18,185,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_19_IDT',0,18,186,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_20_IDT',0,18,187,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_21_IDT',0,18,188,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_22_IDT',0,18,189,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_23_IDT',0,18,190,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_24_IDT',0,18,191,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_25_IDT',0,18,192,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_26_IDT',0,18,193,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_27_IDT',0,18,194,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_28_IDT',0,18,195,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_29_IDT',0,18,196,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_30_IDT',0,18,197,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_31_IDT',0,18,198,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_32_IDT',0,18,199,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_33_IDT',0,18,200,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_34_IDT',0,18,201,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_35_IDT',0,18,202,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_36_IDT',0,18,203,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_37_IDT',0,18,204,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_38_IDT',0,18,205,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_39_IDT',0,18,206,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_40_IDT',0,18,207,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_41_IDT',0,18,208,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_42_IDT',0,18,209,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_43_IDT',0,18,210,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_44_IDT',0,18,211,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_45_IDT',0,18,212,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_46_IDT',0,18,213,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_47_IDT',0,18,214,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_48_IDT',0,18,215,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_49_IDT',0,18,216,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_50_IDT',0,18,217,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_51_IDT',0,18,218,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_52_IDT',0,18,219,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_53_IDT',0,18,220,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_54_IDT',0,18,221,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_55_IDT',0,18,222,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_56_IDT',0,18,223,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_57_IDT',0,18,224,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_58_IDT',0,18,225,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_LifeCycle_Obj_59_IDT',0,18,226,14,16
	.word	271
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_00_IDT',0,18,227,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_01_IDT',0,18,228,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_02_IDT',0,18,229,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_03_IDT',0,18,230,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_04_IDT',0,18,231,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_05_IDT',0,18,232,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_06_IDT',0,18,233,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_07_IDT',0,18,234,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_08_IDT',0,18,235,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_09_IDT',0,18,236,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_10_IDT',0,18,237,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_11_IDT',0,18,238,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_12_IDT',0,18,239,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_13_IDT',0,18,240,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_14_IDT',0,18,241,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_15_IDT',0,18,242,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_16_IDT',0,18,243,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_17_IDT',0,18,244,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_18_IDT',0,18,245,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_19_IDT',0,18,246,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_20_IDT',0,18,247,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_21_IDT',0,18,248,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_22_IDT',0,18,249,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_23_IDT',0,18,250,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_24_IDT',0,18,251,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_25_IDT',0,18,252,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_26_IDT',0,18,253,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_27_IDT',0,18,254,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_28_IDT',0,18,255,14,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_29_IDT',0,18,128,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_30_IDT',0,18,129,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_31_IDT',0,18,130,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_32_IDT',0,18,131,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_33_IDT',0,18,132,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_34_IDT',0,18,133,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_35_IDT',0,18,134,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_36_IDT',0,18,135,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_37_IDT',0,18,136,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_38_IDT',0,18,137,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_39_IDT',0,18,138,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_40_IDT',0,18,139,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_41_IDT',0,18,140,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_42_IDT',0,18,141,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_43_IDT',0,18,142,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_44_IDT',0,18,143,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_45_IDT',0,18,144,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_46_IDT',0,18,145,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_47_IDT',0,18,146,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_48_IDT',0,18,147,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_49_IDT',0,18,148,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_50_IDT',0,18,149,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_51_IDT',0,18,150,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_52_IDT',0,18,151,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_53_IDT',0,18,152,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_54_IDT',0,18,153,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_55_IDT',0,18,154,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_56_IDT',0,18,155,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_57_IDT',0,18,156,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_58_IDT',0,18,157,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MaintenanceState_Obj_59_IDT',0,18,158,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MeasCounter_IDT',0,18,159,15,16
	.word	271
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_00_IDT',0,18,160,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_01_IDT',0,18,161,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_02_IDT',0,18,162,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_03_IDT',0,18,163,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_04_IDT',0,18,164,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_05_IDT',0,18,165,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_06_IDT',0,18,166,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_07_IDT',0,18,167,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_08_IDT',0,18,168,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_09_IDT',0,18,169,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_10_IDT',0,18,170,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_11_IDT',0,18,171,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_12_IDT',0,18,172,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_13_IDT',0,18,173,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_14_IDT',0,18,174,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_15_IDT',0,18,175,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_16_IDT',0,18,176,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_17_IDT',0,18,177,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_18_IDT',0,18,178,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_19_IDT',0,18,179,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_20_IDT',0,18,180,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_21_IDT',0,18,181,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_22_IDT',0,18,182,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_23_IDT',0,18,183,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_24_IDT',0,18,184,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_25_IDT',0,18,185,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_26_IDT',0,18,186,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_27_IDT',0,18,187,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_28_IDT',0,18,188,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_29_IDT',0,18,189,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_30_IDT',0,18,190,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_31_IDT',0,18,191,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_32_IDT',0,18,192,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_33_IDT',0,18,193,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_34_IDT',0,18,194,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_35_IDT',0,18,195,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_36_IDT',0,18,196,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_37_IDT',0,18,197,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_38_IDT',0,18,198,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_39_IDT',0,18,199,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_40_IDT',0,18,200,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_41_IDT',0,18,201,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_42_IDT',0,18,202,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_43_IDT',0,18,203,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_44_IDT',0,18,204,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_45_IDT',0,18,205,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_46_IDT',0,18,206,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_47_IDT',0,18,207,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_48_IDT',0,18,208,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_49_IDT',0,18,209,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_50_IDT',0,18,210,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_51_IDT',0,18,211,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_52_IDT',0,18,212,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_53_IDT',0,18,213,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_54_IDT',0,18,214,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_55_IDT',0,18,215,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_56_IDT',0,18,216,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_57_IDT',0,18,217,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_58_IDT',0,18,218,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MicroDopplerFlag_59_IDT',0,18,219,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_00_IDT',0,18,220,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_01_IDT',0,18,221,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_02_IDT',0,18,222,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_03_IDT',0,18,223,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_04_IDT',0,18,224,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_05_IDT',0,18,225,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_06_IDT',0,18,226,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_07_IDT',0,18,227,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_08_IDT',0,18,228,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_09_IDT',0,18,229,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_10_IDT',0,18,230,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_11_IDT',0,18,231,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_12_IDT',0,18,232,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_13_IDT',0,18,233,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_14_IDT',0,18,234,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_15_IDT',0,18,235,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_16_IDT',0,18,236,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_17_IDT',0,18,237,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_18_IDT',0,18,238,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_19_IDT',0,18,239,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_20_IDT',0,18,240,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_21_IDT',0,18,241,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_22_IDT',0,18,242,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_23_IDT',0,18,243,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_24_IDT',0,18,244,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_25_IDT',0,18,245,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_26_IDT',0,18,246,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_27_IDT',0,18,247,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_28_IDT',0,18,248,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_29_IDT',0,18,249,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_30_IDT',0,18,250,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_31_IDT',0,18,251,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_32_IDT',0,18,252,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_33_IDT',0,18,253,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_34_IDT',0,18,254,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_35_IDT',0,18,255,15,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_36_IDT',0,18,128,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_37_IDT',0,18,129,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_38_IDT',0,18,130,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_39_IDT',0,18,131,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_40_IDT',0,18,132,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_41_IDT',0,18,133,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_42_IDT',0,18,134,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_43_IDT',0,18,135,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_44_IDT',0,18,136,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_45_IDT',0,18,137,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_46_IDT',0,18,138,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_47_IDT',0,18,139,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_48_IDT',0,18,140,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_49_IDT',0,18,141,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_50_IDT',0,18,142,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_51_IDT',0,18,143,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_52_IDT',0,18,144,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_53_IDT',0,18,145,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_54_IDT',0,18,146,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_55_IDT',0,18,147,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_56_IDT',0,18,148,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_57_IDT',0,18,149,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_58_IDT',0,18,150,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MirrorProb_Obj_59_IDT',0,18,151,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Header_IDT',0,18,152,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_00_01_IDT',0,18,153,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_02_03_IDT',0,18,154,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_04_05_IDT',0,18,155,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_06_07_IDT',0,18,156,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_08_09_IDT',0,18,157,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_10_11_IDT',0,18,158,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_12_13_IDT',0,18,159,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_14_15_IDT',0,18,160,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_16_17_IDT',0,18,161,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_18_19_IDT',0,18,162,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_20_21_IDT',0,18,163,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_22_23_IDT',0,18,164,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_24_25_IDT',0,18,165,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_26_27_IDT',0,18,166,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_28_29_IDT',0,18,167,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_30_31_IDT',0,18,168,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_32_33_IDT',0,18,169,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_34_35_IDT',0,18,170,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_36_37_IDT',0,18,171,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_38_39_IDT',0,18,172,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_40_41_IDT',0,18,173,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_42_43_IDT',0,18,174,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_44_45_IDT',0,18,175,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_46_47_IDT',0,18,176,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_48_49_IDT',0,18,177,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_50_51_IDT',0,18,178,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_52_53_IDT',0,18,179,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_54_55_IDT',0,18,180,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_56_57_IDT',0,18,181,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_MsgCounter_Obj_58_59_IDT',0,18,182,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_NumOfObjects_IDT',0,18,183,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_00_IDT',0,18,184,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_01_IDT',0,18,185,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_02_IDT',0,18,186,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_03_IDT',0,18,187,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_04_IDT',0,18,188,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_05_IDT',0,18,189,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_06_IDT',0,18,190,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_07_IDT',0,18,191,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_08_IDT',0,18,192,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_09_IDT',0,18,193,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_10_IDT',0,18,194,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_11_IDT',0,18,195,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_12_IDT',0,18,196,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_13_IDT',0,18,197,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_14_IDT',0,18,198,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_15_IDT',0,18,199,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_16_IDT',0,18,200,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_17_IDT',0,18,201,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_18_IDT',0,18,202,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_19_IDT',0,18,203,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_20_IDT',0,18,204,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_21_IDT',0,18,205,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_22_IDT',0,18,206,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_23_IDT',0,18,207,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_24_IDT',0,18,208,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_25_IDT',0,18,209,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_26_IDT',0,18,210,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_27_IDT',0,18,211,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_28_IDT',0,18,212,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_29_IDT',0,18,213,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_30_IDT',0,18,214,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_31_IDT',0,18,215,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_32_IDT',0,18,216,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_33_IDT',0,18,217,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_34_IDT',0,18,218,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_35_IDT',0,18,219,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_36_IDT',0,18,220,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_37_IDT',0,18,221,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_38_IDT',0,18,222,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_39_IDT',0,18,223,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_40_IDT',0,18,224,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_41_IDT',0,18,225,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_42_IDT',0,18,226,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_43_IDT',0,18,227,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_44_IDT',0,18,228,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_45_IDT',0,18,229,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_46_IDT',0,18,230,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_47_IDT',0,18,231,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_48_IDT',0,18,232,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_49_IDT',0,18,233,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_50_IDT',0,18,234,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_51_IDT',0,18,235,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_52_IDT',0,18,236,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_53_IDT',0,18,237,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_54_IDT',0,18,238,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_55_IDT',0,18,239,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_56_IDT',0,18,240,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_57_IDT',0,18,241,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_58_IDT',0,18,242,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ObstacleProb_Obj_59_IDT',0,18,243,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_00_IDT',0,18,244,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_01_IDT',0,18,245,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_02_IDT',0,18,246,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_03_IDT',0,18,247,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_04_IDT',0,18,248,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_05_IDT',0,18,249,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_06_IDT',0,18,250,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_07_IDT',0,18,251,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_08_IDT',0,18,252,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_09_IDT',0,18,253,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_10_IDT',0,18,254,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_11_IDT',0,18,255,16,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_12_IDT',0,18,128,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_13_IDT',0,18,129,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_14_IDT',0,18,130,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_15_IDT',0,18,131,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_16_IDT',0,18,132,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_17_IDT',0,18,133,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_18_IDT',0,18,134,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_19_IDT',0,18,135,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_20_IDT',0,18,136,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_21_IDT',0,18,137,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_22_IDT',0,18,138,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_23_IDT',0,18,139,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_24_IDT',0,18,140,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_25_IDT',0,18,141,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_26_IDT',0,18,142,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_27_IDT',0,18,143,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_28_IDT',0,18,144,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_29_IDT',0,18,145,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_30_IDT',0,18,146,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_31_IDT',0,18,147,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_32_IDT',0,18,148,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_33_IDT',0,18,149,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_34_IDT',0,18,150,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_35_IDT',0,18,151,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_36_IDT',0,18,152,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_37_IDT',0,18,153,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_38_IDT',0,18,154,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_39_IDT',0,18,155,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_40_IDT',0,18,156,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_41_IDT',0,18,157,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_42_IDT',0,18,158,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_43_IDT',0,18,159,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_44_IDT',0,18,160,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_45_IDT',0,18,161,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_46_IDT',0,18,162,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_47_IDT',0,18,163,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_48_IDT',0,18,164,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_49_IDT',0,18,165,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_50_IDT',0,18,166,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_51_IDT',0,18,167,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_52_IDT',0,18,168,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_53_IDT',0,18,169,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_54_IDT',0,18,170,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_55_IDT',0,18,171,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_56_IDT',0,18,172,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_57_IDT',0,18,173,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_58_IDT',0,18,174,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_OrientationStd_Obj_59_IDT',0,18,175,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_00_IDT',0,18,176,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_01_IDT',0,18,177,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_02_IDT',0,18,178,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_03_IDT',0,18,179,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_04_IDT',0,18,180,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_05_IDT',0,18,181,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_06_IDT',0,18,182,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_07_IDT',0,18,183,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_08_IDT',0,18,184,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_09_IDT',0,18,185,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_10_IDT',0,18,186,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_11_IDT',0,18,187,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_12_IDT',0,18,188,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_13_IDT',0,18,189,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_14_IDT',0,18,190,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_15_IDT',0,18,191,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_16_IDT',0,18,192,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_17_IDT',0,18,193,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_18_IDT',0,18,194,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_19_IDT',0,18,195,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_20_IDT',0,18,196,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_21_IDT',0,18,197,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_22_IDT',0,18,198,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_23_IDT',0,18,199,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_24_IDT',0,18,200,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_25_IDT',0,18,201,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_26_IDT',0,18,202,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_27_IDT',0,18,203,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_28_IDT',0,18,204,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_29_IDT',0,18,205,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_30_IDT',0,18,206,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_31_IDT',0,18,207,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_32_IDT',0,18,208,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_33_IDT',0,18,209,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_34_IDT',0,18,210,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_35_IDT',0,18,211,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_36_IDT',0,18,212,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_37_IDT',0,18,213,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_38_IDT',0,18,214,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_39_IDT',0,18,215,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_40_IDT',0,18,216,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_41_IDT',0,18,217,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_42_IDT',0,18,218,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_43_IDT',0,18,219,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_44_IDT',0,18,220,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_45_IDT',0,18,221,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_46_IDT',0,18,222,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_47_IDT',0,18,223,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_48_IDT',0,18,224,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_49_IDT',0,18,225,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_50_IDT',0,18,226,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_51_IDT',0,18,227,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_52_IDT',0,18,228,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_53_IDT',0,18,229,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_54_IDT',0,18,230,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_55_IDT',0,18,231,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_56_IDT',0,18,232,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_57_IDT',0,18,233,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_58_IDT',0,18,234,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Orientation_Obj_59_IDT',0,18,235,17,16
	.word	271
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_00_IDT',0,18,236,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_01_IDT',0,18,237,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_02_IDT',0,18,238,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_03_IDT',0,18,239,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_04_IDT',0,18,240,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_05_IDT',0,18,241,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_06_IDT',0,18,242,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_07_IDT',0,18,243,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_08_IDT',0,18,244,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_09_IDT',0,18,245,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_10_IDT',0,18,246,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_11_IDT',0,18,247,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_12_IDT',0,18,248,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_13_IDT',0,18,249,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_14_IDT',0,18,250,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_15_IDT',0,18,251,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_16_IDT',0,18,252,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_17_IDT',0,18,253,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_18_IDT',0,18,254,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_19_IDT',0,18,255,17,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_20_IDT',0,18,128,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_21_IDT',0,18,129,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_22_IDT',0,18,130,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_23_IDT',0,18,131,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_24_IDT',0,18,132,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_25_IDT',0,18,133,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_26_IDT',0,18,134,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_27_IDT',0,18,135,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_28_IDT',0,18,136,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_29_IDT',0,18,137,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_30_IDT',0,18,138,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_31_IDT',0,18,139,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_32_IDT',0,18,140,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_33_IDT',0,18,141,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_34_IDT',0,18,142,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_35_IDT',0,18,143,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_36_IDT',0,18,144,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_37_IDT',0,18,145,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_38_IDT',0,18,146,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_39_IDT',0,18,147,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_40_IDT',0,18,148,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_41_IDT',0,18,149,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_42_IDT',0,18,150,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_43_IDT',0,18,151,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_44_IDT',0,18,152,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_45_IDT',0,18,153,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_46_IDT',0,18,154,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_47_IDT',0,18,155,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_48_IDT',0,18,156,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_49_IDT',0,18,157,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_50_IDT',0,18,158,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_51_IDT',0,18,159,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_52_IDT',0,18,160,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_53_IDT',0,18,161,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_54_IDT',0,18,162,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_55_IDT',0,18,163,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_56_IDT',0,18,164,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_57_IDT',0,18,165,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_58_IDT',0,18,166,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_ProbOfExist_Obj_59_IDT',0,18,167,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RCS_Obj_00_IDT',0,18,168,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_01_IDT',0,18,169,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_02_IDT',0,18,170,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_03_IDT',0,18,171,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_04_IDT',0,18,172,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_05_IDT',0,18,173,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_06_IDT',0,18,174,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_07_IDT',0,18,175,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_08_IDT',0,18,176,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_09_IDT',0,18,177,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_10_IDT',0,18,178,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_11_IDT',0,18,179,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_12_IDT',0,18,180,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_13_IDT',0,18,181,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_14_IDT',0,18,182,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_15_IDT',0,18,183,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_16_IDT',0,18,184,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_17_IDT',0,18,185,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_18_IDT',0,18,186,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_19_IDT',0,18,187,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_20_IDT',0,18,188,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_21_IDT',0,18,189,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_22_IDT',0,18,190,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_23_IDT',0,18,191,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_24_IDT',0,18,192,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_25_IDT',0,18,193,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_26_IDT',0,18,194,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_27_IDT',0,18,195,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_28_IDT',0,18,196,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_29_IDT',0,18,197,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_30_IDT',0,18,198,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_31_IDT',0,18,199,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_32_IDT',0,18,200,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_33_IDT',0,18,201,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_34_IDT',0,18,202,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_35_IDT',0,18,203,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_36_IDT',0,18,204,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_37_IDT',0,18,205,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_38_IDT',0,18,206,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_39_IDT',0,18,207,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_40_IDT',0,18,208,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_41_IDT',0,18,209,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_42_IDT',0,18,210,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_43_IDT',0,18,211,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_44_IDT',0,18,212,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_45_IDT',0,18,213,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_46_IDT',0,18,214,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_47_IDT',0,18,215,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_48_IDT',0,18,216,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_49_IDT',0,18,217,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_50_IDT',0,18,218,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_51_IDT',0,18,219,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_52_IDT',0,18,220,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_53_IDT',0,18,221,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_54_IDT',0,18,222,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_55_IDT',0,18,223,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_56_IDT',0,18,224,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_57_IDT',0,18,225,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_58_IDT',0,18,226,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RCS_Obj_59_IDT',0,18,227,18,16
	.word	271
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_00_IDT',0,18,228,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_01_IDT',0,18,229,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_02_IDT',0,18,230,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_03_IDT',0,18,231,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_04_IDT',0,18,232,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_05_IDT',0,18,233,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_06_IDT',0,18,234,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_07_IDT',0,18,235,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_08_IDT',0,18,236,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_09_IDT',0,18,237,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_10_IDT',0,18,238,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_11_IDT',0,18,239,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_12_IDT',0,18,240,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_13_IDT',0,18,241,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_14_IDT',0,18,242,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_15_IDT',0,18,243,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_16_IDT',0,18,244,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_17_IDT',0,18,245,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_18_IDT',0,18,246,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_19_IDT',0,18,247,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_20_IDT',0,18,248,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_21_IDT',0,18,249,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_22_IDT',0,18,250,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_23_IDT',0,18,251,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_24_IDT',0,18,252,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_25_IDT',0,18,253,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_26_IDT',0,18,254,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_27_IDT',0,18,255,18,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_28_IDT',0,18,128,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_29_IDT',0,18,129,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_30_IDT',0,18,130,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_31_IDT',0,18,131,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_32_IDT',0,18,132,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_33_IDT',0,18,133,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_34_IDT',0,18,134,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_35_IDT',0,18,135,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_36_IDT',0,18,136,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_37_IDT',0,18,137,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_38_IDT',0,18,138,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_39_IDT',0,18,139,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_40_IDT',0,18,140,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_41_IDT',0,18,141,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_42_IDT',0,18,142,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_43_IDT',0,18,143,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_44_IDT',0,18,144,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_45_IDT',0,18,145,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_46_IDT',0,18,146,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_47_IDT',0,18,147,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_48_IDT',0,18,148,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_49_IDT',0,18,149,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_50_IDT',0,18,150,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_51_IDT',0,18,151,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_52_IDT',0,18,152,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_53_IDT',0,18,153,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_54_IDT',0,18,154,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_55_IDT',0,18,155,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_56_IDT',0,18,156,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_57_IDT',0,18,157,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_58_IDT',0,18,158,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_RefPoint_Obj_59_IDT',0,18,159,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_TaskValidFlag_IDT',0,18,160,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_TimeStampGlobNanoSec_IDT',0,18,161,19,16
	.word	293
	.byte	26
	.byte	'ARS_OD_TimeStampGlobSec_IDT',0,18,162,19,16
	.word	293
	.byte	26
	.byte	'ARS_OD_TimeStampLocal_IDT',0,18,163,19,16
	.word	293
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_00_IDT',0,18,164,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_01_IDT',0,18,165,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_02_IDT',0,18,166,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_03_IDT',0,18,167,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_04_IDT',0,18,168,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_05_IDT',0,18,169,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_06_IDT',0,18,170,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_07_IDT',0,18,171,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_08_IDT',0,18,172,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_09_IDT',0,18,173,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_10_IDT',0,18,174,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_11_IDT',0,18,175,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_12_IDT',0,18,176,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_13_IDT',0,18,177,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_14_IDT',0,18,178,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_15_IDT',0,18,179,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_16_IDT',0,18,180,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_17_IDT',0,18,181,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_18_IDT',0,18,182,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_19_IDT',0,18,183,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_20_IDT',0,18,184,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_21_IDT',0,18,185,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_22_IDT',0,18,186,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_23_IDT',0,18,187,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_24_IDT',0,18,188,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_25_IDT',0,18,189,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_26_IDT',0,18,190,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_27_IDT',0,18,191,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_28_IDT',0,18,192,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_29_IDT',0,18,193,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_30_IDT',0,18,194,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_31_IDT',0,18,195,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_32_IDT',0,18,196,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_33_IDT',0,18,197,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_34_IDT',0,18,198,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_35_IDT',0,18,199,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_36_IDT',0,18,200,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_37_IDT',0,18,201,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_38_IDT',0,18,202,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_39_IDT',0,18,203,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_40_IDT',0,18,204,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_41_IDT',0,18,205,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_42_IDT',0,18,206,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_43_IDT',0,18,207,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_44_IDT',0,18,208,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_45_IDT',0,18,209,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_46_IDT',0,18,210,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_47_IDT',0,18,211,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_48_IDT',0,18,212,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_49_IDT',0,18,213,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_50_IDT',0,18,214,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_51_IDT',0,18,215,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_52_IDT',0,18,216,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_53_IDT',0,18,217,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_54_IDT',0,18,218,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_55_IDT',0,18,219,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_56_IDT',0,18,220,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_57_IDT',0,18,221,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_58_IDT',0,18,222,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsXStd_Obj_59_IDT',0,18,223,19,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_00_IDT',0,18,224,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_01_IDT',0,18,225,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_02_IDT',0,18,226,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_03_IDT',0,18,227,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_04_IDT',0,18,228,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_05_IDT',0,18,229,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_06_IDT',0,18,230,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_07_IDT',0,18,231,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_08_IDT',0,18,232,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_09_IDT',0,18,233,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_10_IDT',0,18,234,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_11_IDT',0,18,235,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_12_IDT',0,18,236,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_13_IDT',0,18,237,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_14_IDT',0,18,238,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_15_IDT',0,18,239,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_16_IDT',0,18,240,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_17_IDT',0,18,241,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_18_IDT',0,18,242,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_19_IDT',0,18,243,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_20_IDT',0,18,244,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_21_IDT',0,18,245,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_22_IDT',0,18,246,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_23_IDT',0,18,247,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_24_IDT',0,18,248,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_25_IDT',0,18,249,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_26_IDT',0,18,250,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_27_IDT',0,18,251,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_28_IDT',0,18,252,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_29_IDT',0,18,253,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_30_IDT',0,18,254,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_31_IDT',0,18,255,19,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_32_IDT',0,18,128,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_33_IDT',0,18,129,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_34_IDT',0,18,130,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_35_IDT',0,18,131,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_36_IDT',0,18,132,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_37_IDT',0,18,133,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_38_IDT',0,18,134,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_39_IDT',0,18,135,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_40_IDT',0,18,136,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_41_IDT',0,18,137,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_42_IDT',0,18,138,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_43_IDT',0,18,139,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_44_IDT',0,18,140,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_45_IDT',0,18,141,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_46_IDT',0,18,142,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_47_IDT',0,18,143,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_48_IDT',0,18,144,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_49_IDT',0,18,145,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_50_IDT',0,18,146,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_51_IDT',0,18,147,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_52_IDT',0,18,148,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_53_IDT',0,18,149,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_54_IDT',0,18,150,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_55_IDT',0,18,151,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_56_IDT',0,18,152,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_57_IDT',0,18,153,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_58_IDT',0,18,154,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsX_Obj_59_IDT',0,18,155,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_00_IDT',0,18,156,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_01_IDT',0,18,157,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_02_IDT',0,18,158,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_03_IDT',0,18,159,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_04_IDT',0,18,160,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_05_IDT',0,18,161,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_06_IDT',0,18,162,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_07_IDT',0,18,163,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_08_IDT',0,18,164,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_09_IDT',0,18,165,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_10_IDT',0,18,166,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_11_IDT',0,18,167,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_12_IDT',0,18,168,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_13_IDT',0,18,169,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_14_IDT',0,18,170,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_15_IDT',0,18,171,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_16_IDT',0,18,172,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_17_IDT',0,18,173,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_18_IDT',0,18,174,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_19_IDT',0,18,175,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_20_IDT',0,18,176,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_21_IDT',0,18,177,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_22_IDT',0,18,178,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_23_IDT',0,18,179,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_24_IDT',0,18,180,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_25_IDT',0,18,181,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_26_IDT',0,18,182,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_27_IDT',0,18,183,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_28_IDT',0,18,184,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_29_IDT',0,18,185,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_30_IDT',0,18,186,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_31_IDT',0,18,187,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_32_IDT',0,18,188,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_33_IDT',0,18,189,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_34_IDT',0,18,190,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_35_IDT',0,18,191,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_36_IDT',0,18,192,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_37_IDT',0,18,193,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_38_IDT',0,18,194,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_39_IDT',0,18,195,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_40_IDT',0,18,196,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_41_IDT',0,18,197,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_42_IDT',0,18,198,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_43_IDT',0,18,199,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_44_IDT',0,18,200,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_45_IDT',0,18,201,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_46_IDT',0,18,202,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_47_IDT',0,18,203,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_48_IDT',0,18,204,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_49_IDT',0,18,205,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_50_IDT',0,18,206,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_51_IDT',0,18,207,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_52_IDT',0,18,208,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_53_IDT',0,18,209,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_54_IDT',0,18,210,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_55_IDT',0,18,211,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_56_IDT',0,18,212,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_57_IDT',0,18,213,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_58_IDT',0,18,214,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsYStd_Obj_59_IDT',0,18,215,20,15
	.word	157
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_00_IDT',0,18,216,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_01_IDT',0,18,217,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_02_IDT',0,18,218,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_03_IDT',0,18,219,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_04_IDT',0,18,220,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_05_IDT',0,18,221,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_06_IDT',0,18,222,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_07_IDT',0,18,223,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_08_IDT',0,18,224,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_09_IDT',0,18,225,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_10_IDT',0,18,226,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_11_IDT',0,18,227,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_12_IDT',0,18,228,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_13_IDT',0,18,229,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_14_IDT',0,18,230,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_15_IDT',0,18,231,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_16_IDT',0,18,232,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_17_IDT',0,18,233,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_18_IDT',0,18,234,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_19_IDT',0,18,235,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_20_IDT',0,18,236,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_21_IDT',0,18,237,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_22_IDT',0,18,238,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_23_IDT',0,18,239,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_24_IDT',0,18,240,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_25_IDT',0,18,241,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_26_IDT',0,18,242,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_27_IDT',0,18,243,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_28_IDT',0,18,244,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_29_IDT',0,18,245,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_30_IDT',0,18,246,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_31_IDT',0,18,247,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_32_IDT',0,18,248,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_33_IDT',0,18,249,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_34_IDT',0,18,250,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_35_IDT',0,18,251,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_36_IDT',0,18,252,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_37_IDT',0,18,253,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_38_IDT',0,18,254,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_39_IDT',0,18,255,20,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_40_IDT',0,18,128,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_41_IDT',0,18,129,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_42_IDT',0,18,130,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_43_IDT',0,18,131,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_44_IDT',0,18,132,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_45_IDT',0,18,133,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_46_IDT',0,18,134,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_47_IDT',0,18,135,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_48_IDT',0,18,136,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_49_IDT',0,18,137,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_50_IDT',0,18,138,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_51_IDT',0,18,139,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_52_IDT',0,18,140,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_53_IDT',0,18,141,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_54_IDT',0,18,142,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_55_IDT',0,18,143,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_56_IDT',0,18,144,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_57_IDT',0,18,145,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_58_IDT',0,18,146,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_VabsY_Obj_59_IDT',0,18,147,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_Width_Obj_00_IDT',0,18,148,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_01_IDT',0,18,149,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_02_IDT',0,18,150,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_03_IDT',0,18,151,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_04_IDT',0,18,152,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_05_IDT',0,18,153,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_06_IDT',0,18,154,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_07_IDT',0,18,155,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_08_IDT',0,18,156,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_09_IDT',0,18,157,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_10_IDT',0,18,158,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_11_IDT',0,18,159,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_12_IDT',0,18,160,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_13_IDT',0,18,161,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_14_IDT',0,18,162,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_15_IDT',0,18,163,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_16_IDT',0,18,164,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_17_IDT',0,18,165,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_18_IDT',0,18,166,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_19_IDT',0,18,167,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_20_IDT',0,18,168,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_21_IDT',0,18,169,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_22_IDT',0,18,170,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_23_IDT',0,18,171,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_24_IDT',0,18,172,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_25_IDT',0,18,173,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_26_IDT',0,18,174,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_27_IDT',0,18,175,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_28_IDT',0,18,176,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_29_IDT',0,18,177,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_30_IDT',0,18,178,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_31_IDT',0,18,179,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_32_IDT',0,18,180,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_33_IDT',0,18,181,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_34_IDT',0,18,182,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_35_IDT',0,18,183,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_36_IDT',0,18,184,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_37_IDT',0,18,185,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_38_IDT',0,18,186,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_39_IDT',0,18,187,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_40_IDT',0,18,188,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_41_IDT',0,18,189,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_42_IDT',0,18,190,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_43_IDT',0,18,191,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_44_IDT',0,18,192,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_45_IDT',0,18,193,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_46_IDT',0,18,194,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_47_IDT',0,18,195,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_48_IDT',0,18,196,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_49_IDT',0,18,197,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_50_IDT',0,18,198,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_51_IDT',0,18,199,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_52_IDT',0,18,200,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_53_IDT',0,18,201,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_54_IDT',0,18,202,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_55_IDT',0,18,203,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_56_IDT',0,18,204,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_57_IDT',0,18,205,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_58_IDT',0,18,206,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_Width_Obj_59_IDT',0,18,207,21,15
	.word	157
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_00_IDT',0,18,208,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_01_IDT',0,18,209,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_02_IDT',0,18,210,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_03_IDT',0,18,211,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_04_IDT',0,18,212,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_05_IDT',0,18,213,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_06_IDT',0,18,214,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_07_IDT',0,18,215,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_08_IDT',0,18,216,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_09_IDT',0,18,217,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_10_IDT',0,18,218,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_11_IDT',0,18,219,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_12_IDT',0,18,220,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_13_IDT',0,18,221,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_14_IDT',0,18,222,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_15_IDT',0,18,223,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_16_IDT',0,18,224,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_17_IDT',0,18,225,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_18_IDT',0,18,226,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_19_IDT',0,18,227,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_20_IDT',0,18,228,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_21_IDT',0,18,229,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_22_IDT',0,18,230,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_23_IDT',0,18,231,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_24_IDT',0,18,232,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_25_IDT',0,18,233,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_26_IDT',0,18,234,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_27_IDT',0,18,235,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_28_IDT',0,18,236,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_29_IDT',0,18,237,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_30_IDT',0,18,238,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_31_IDT',0,18,239,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_32_IDT',0,18,240,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_33_IDT',0,18,241,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_34_IDT',0,18,242,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_35_IDT',0,18,243,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_36_IDT',0,18,244,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_37_IDT',0,18,245,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_38_IDT',0,18,246,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_39_IDT',0,18,247,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_40_IDT',0,18,248,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_41_IDT',0,18,249,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_42_IDT',0,18,250,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_43_IDT',0,18,251,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_44_IDT',0,18,252,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_45_IDT',0,18,253,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_46_IDT',0,18,254,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_47_IDT',0,18,255,21,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_48_IDT',0,18,128,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_49_IDT',0,18,129,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_50_IDT',0,18,130,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_51_IDT',0,18,131,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_52_IDT',0,18,132,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_53_IDT',0,18,133,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_54_IDT',0,18,134,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_55_IDT',0,18,135,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_56_IDT',0,18,136,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_57_IDT',0,18,137,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_58_IDT',0,18,138,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbsStd_Obj_59_IDT',0,18,139,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_00_IDT',0,18,140,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_01_IDT',0,18,141,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_02_IDT',0,18,142,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_03_IDT',0,18,143,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_04_IDT',0,18,144,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_05_IDT',0,18,145,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_06_IDT',0,18,146,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_07_IDT',0,18,147,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_08_IDT',0,18,148,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_09_IDT',0,18,149,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_10_IDT',0,18,150,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_11_IDT',0,18,151,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_12_IDT',0,18,152,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_13_IDT',0,18,153,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_14_IDT',0,18,154,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_15_IDT',0,18,155,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_16_IDT',0,18,156,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_17_IDT',0,18,157,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_18_IDT',0,18,158,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_19_IDT',0,18,159,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_20_IDT',0,18,160,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_21_IDT',0,18,161,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_22_IDT',0,18,162,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_23_IDT',0,18,163,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_24_IDT',0,18,164,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_25_IDT',0,18,165,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_26_IDT',0,18,166,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_27_IDT',0,18,167,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_28_IDT',0,18,168,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_29_IDT',0,18,169,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_30_IDT',0,18,170,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_31_IDT',0,18,171,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_32_IDT',0,18,172,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_33_IDT',0,18,173,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_34_IDT',0,18,174,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_35_IDT',0,18,175,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_36_IDT',0,18,176,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_37_IDT',0,18,177,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_38_IDT',0,18,178,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_39_IDT',0,18,179,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_40_IDT',0,18,180,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_41_IDT',0,18,181,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_42_IDT',0,18,182,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_43_IDT',0,18,183,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_44_IDT',0,18,184,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_45_IDT',0,18,185,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_46_IDT',0,18,186,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_47_IDT',0,18,187,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_48_IDT',0,18,188,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_49_IDT',0,18,189,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_50_IDT',0,18,190,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_51_IDT',0,18,191,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_52_IDT',0,18,192,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_53_IDT',0,18,193,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_54_IDT',0,18,194,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_55_IDT',0,18,195,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_56_IDT',0,18,196,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_57_IDT',0,18,197,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_58_IDT',0,18,198,22,16
	.word	271
	.byte	26
	.byte	'ARS_OD_YawRateAbs_Obj_59_IDT',0,18,199,22,16
	.word	271
	.byte	26
	.byte	'ARS_SP_CRC16_Checksum_IDT',0,18,201,22,16
	.word	271
	.byte	26
	.byte	'ARS_SP_ErrStateGroup_1_IDT',0,18,204,22,15
	.word	157
	.byte	26
	.byte	'ARS_SP_ErrStateGroup_2_IDT',0,18,205,22,15
	.word	157
	.byte	26
	.byte	'ARS_SP_ErrStateGroup_3_IDT',0,18,206,22,15
	.word	157
	.byte	26
	.byte	'ARS_SP_MsgCounter_IDT',0,18,208,22,15
	.word	157
	.byte	26
	.byte	'ARS_TSYNC_CRC16_Checksum_IDT',0,18,213,22,16
	.word	271
	.byte	26
	.byte	'ARS_TSYNC_LastTimeLeap_IDT',0,18,214,22,16
	.word	271
	.byte	26
	.byte	'ARS_TSYNC_MaxTimeLeap_IDT',0,18,215,22,16
	.word	271
	.byte	26
	.byte	'ARS_TSYNC_MsgCounter_IDT',0,18,216,22,15
	.word	157
	.byte	26
	.byte	'ARS_TSYNC_TimeStampGlobNSec_IDT',0,18,217,22,16
	.word	293
	.byte	26
	.byte	'ARS_TSYNC_TimeStampGlobSec_IDT',0,18,218,22,16
	.word	293
	.byte	12,18,219,22,9,20,14
	.byte	'distance',0
	.word	271
	.byte	2,2,35,0,14
	.byte	'type',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'width',0
	.word	271
	.byte	2,2,35,4,14
	.byte	'peak',0
	.word	157
	.byte	1,2,35,6,14
	.byte	'counter',0
	.word	157
	.byte	1,2,35,7,14
	.byte	'time_stamp',0
	.word	16269
	.byte	8,2,35,8,14
	.byte	'reserve',0
	.word	157
	.byte	1,2,35,16,0,26
	.byte	'ApaDistT',0,18,228,22,3
	.word	97899
	.byte	12,18,230,22,9,80,14
	.byte	'ARS_OD_ID',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'ARS_OD_DistX_Obj',0
	.word	16409
	.byte	4,2,35,2,14
	.byte	'ARS_OD_DistY_Obj',0
	.word	16409
	.byte	4,2,35,6,14
	.byte	'ARS_OD_VabsX_Obj',0
	.word	16409
	.byte	4,2,35,10,14
	.byte	'ARS_OD_VabsY_Obj',0
	.word	16409
	.byte	4,2,35,14,14
	.byte	'ARS_OD_AabsX_Obj',0
	.word	16409
	.byte	4,2,35,18,14
	.byte	'ARS_OD_AabsY_Obj',0
	.word	16409
	.byte	4,2,35,22,14
	.byte	'ARS_OD_DistXStd_Obj',0
	.word	157
	.byte	1,2,35,26,14
	.byte	'ARS_OD_DistYStd_Obj',0
	.word	157
	.byte	1,2,35,27,14
	.byte	'ARS_OD_VabsXStd_Obj',0
	.word	157
	.byte	1,2,35,28,14
	.byte	'ARS_OD_VabsYStd_Obj',0
	.word	157
	.byte	1,2,35,29,14
	.byte	'ARS_OD_AabsXStd_Obj',0
	.word	157
	.byte	1,2,35,30,14
	.byte	'ARS_OD_AabsYStd_Obj',0
	.word	157
	.byte	1,2,35,31,14
	.byte	'ARS_OD_RCS_Obj',0
	.word	16409
	.byte	4,2,35,32,14
	.byte	'ARS_OD_Length_Obj',0
	.word	16409
	.byte	4,2,35,36,14
	.byte	'ARS_OD_Width_Obj',0
	.word	16409
	.byte	4,2,35,40,14
	.byte	'ARS_OD_Orientation_Obj',0
	.word	16409
	.byte	4,2,35,44,14
	.byte	'ARS_OD_OrientationStd_Obj',0
	.word	16409
	.byte	4,2,35,48,14
	.byte	'ARS_OD_YawRateAbs_Obj',0
	.word	16409
	.byte	4,2,35,52,14
	.byte	'ARS_OD_YawRateAbsStd_Obj',0
	.word	16409
	.byte	4,2,35,56,14
	.byte	'ARS_OD_RefPoint',0
	.word	157
	.byte	1,2,35,60,14
	.byte	'ARS_OD_Classification_Obj',0
	.word	157
	.byte	1,2,35,61,14
	.byte	'ARS_OD_ClassConf_Obj',0
	.word	157
	.byte	1,2,35,62,14
	.byte	'ARS_OD_DynProp_Obj',0
	.word	157
	.byte	1,2,35,63,14
	.byte	'ARS_OD_DynConf_Obj',0
	.word	157
	.byte	1,2,35,64,14
	.byte	'ARS_OD_ProbOfExist_Obj',0
	.word	157
	.byte	1,2,35,65,14
	.byte	'ARS_OD_MirrorProb_Obj',0
	.word	157
	.byte	1,2,35,66,14
	.byte	'ARS_OD_ObstacleProb_Obj',0
	.word	157
	.byte	1,2,35,67,14
	.byte	'ARS_OD_MaintenanceState_Obj',0
	.word	157
	.byte	1,2,35,68,14
	.byte	'ARS_OD_LifeCycle_Obj',0
	.word	271
	.byte	2,2,35,70,14
	.byte	'ARS_OD_MicroDopplerFlag',0
	.word	157
	.byte	1,2,35,72,14
	.byte	'DistHeight_Obj',0
	.word	16409
	.byte	4,2,35,74,0,26
	.byte	'ArsObjectInfo',0,18,136,23,3
	.word	98039
	.byte	10,192,37
	.word	98039
	.byte	11,59,0,26
	.byte	'ArsObjectInfo_60',0,18,138,23,23
	.word	98993
	.byte	12,18,139,23,9,20,14
	.byte	'gear_status',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'gear_enable',0
	.word	157
	.byte	1,2,35,1,14
	.byte	'driver_override',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'can_time',0
	.word	16269
	.byte	8,2,35,4,14
	.byte	'system_time',0
	.word	16269
	.byte	8,2,35,12,0,26
	.byte	'AutoGearInfo',0,18,146,23,3
	.word	99029
	.byte	26
	.byte	'BAS_CtrlActv_IDT',0,18,148,23,15
	.word	157
	.byte	26
	.byte	'BAS_FlgFlt_IDT',0,18,149,23,15
	.word	157
	.byte	26
	.byte	'BCM_AmbeLightZone1Sts_IDT',0,18,151,23,15
	.word	157
	.byte	26
	.byte	'BCM_AmbeLightZone2Sts_IDT',0,18,152,23,15
	.word	157
	.byte	26
	.byte	'BCM_BrakeLightSts_IDT',0,18,154,23,15
	.word	157
	.byte	26
	.byte	'BCM_DayRunningLampSts_IDT',0,18,157,23,15
	.word	157
	.byte	26
	.byte	'BCM_FFogLampSWSts_IDT',0,18,163,23,15
	.word	157
	.byte	26
	.byte	'BCM_Fr_domelampSts_IDT',0,18,168,23,15
	.word	157
	.byte	26
	.byte	'BCM_FrontFogLampLightSts_IDT',0,18,169,23,15
	.word	157
	.byte	26
	.byte	'BCM_HeadLight_adjustSts_IDT',0,18,174,23,15
	.word	157
	.byte	26
	.byte	'BCM_HighBeamSWSts_IDT',0,18,175,23,15
	.word	157
	.byte	26
	.byte	'BCM_HighBeamSts_IDT',0,18,176,23,15
	.word	157
	.byte	26
	.byte	'BCM_LicensePlateLightSts_IDT',0,18,177,23,15
	.word	157
	.byte	26
	.byte	'BCM_LowBeamSWSts_IDT',0,18,178,23,15
	.word	157
	.byte	26
	.byte	'BCM_LowBeamSts_IDT',0,18,179,23,15
	.word	157
	.byte	26
	.byte	'BCM_PosLmpSts_IDT',0,18,180,23,15
	.word	157
	.byte	26
	.byte	'BCM_RFogLampSWSts_IDT',0,18,181,23,15
	.word	157
	.byte	26
	.byte	'BCM_RMarkerLightSts_IDT',0,18,184,23,15
	.word	157
	.byte	26
	.byte	'BCM_RearFogLampLightSts_IDT',0,18,187,23,15
	.word	157
	.byte	26
	.byte	'BCM_ReverseLightSts_IDT',0,18,194,23,15
	.word	157
	.byte	26
	.byte	'BCM_Rr_domelampSts_IDT',0,18,195,23,15
	.word	157
	.byte	26
	.byte	'BCM_STAT_HazardWarn_IDT',0,18,196,23,15
	.word	157
	.byte	26
	.byte	'BCM_STAT_Horn_IDT',0,18,197,23,15
	.word	157
	.byte	26
	.byte	'BCM_STAT_InteriorLight_IDT',0,18,198,23,15
	.word	157
	.byte	26
	.byte	'BCM_STAT_SwLightBrightness_IDT',0,18,199,23,15
	.word	157
	.byte	26
	.byte	'BCM_Tail_MicroSW_IDT',0,18,201,23,15
	.word	157
	.byte	26
	.byte	'BCM_TurnIndicatorSts_IDT',0,18,203,23,15
	.word	157
	.byte	26
	.byte	'BCM_TurnLightSWSts_IDT',0,18,204,23,15
	.word	157
	.byte	26
	.byte	'BCM_TurnLight_FaultSts_IDT',0,18,205,23,15
	.word	157
	.byte	26
	.byte	'BCM_WPC_Off_Req_IDT',0,18,206,23,15
	.word	157
	.byte	12,18,213,23,9,36,14
	.byte	'turn_light_status',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'brake_light_status',0
	.word	157
	.byte	1,2,35,1,14
	.byte	'high_beam',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'low_beam',0
	.word	157
	.byte	1,2,35,3,14
	.byte	'wiper',0
	.word	157
	.byte	1,2,35,4,14
	.byte	'door_driver',0
	.word	157
	.byte	1,2,35,5,14
	.byte	'door_passenger',0
	.word	157
	.byte	1,2,35,6,14
	.byte	'door_left_rear',0
	.word	157
	.byte	1,2,35,7,14
	.byte	'door_right_rear',0
	.word	157
	.byte	1,2,35,8,14
	.byte	'hood',0
	.word	157
	.byte	1,2,35,9,14
	.byte	'trunk',0
	.word	157
	.byte	1,2,35,10,14
	.byte	'passenger_detect',0
	.word	157
	.byte	1,2,35,11,14
	.byte	'driver_seat_belt',0
	.word	157
	.byte	1,2,35,12,14
	.byte	'passenger_seat_belt',0
	.word	157
	.byte	1,2,35,13,14
	.byte	'temperature',0
	.word	16409
	.byte	4,2,35,14,14
	.byte	'can_time',0
	.word	16269
	.byte	8,2,35,20,14
	.byte	'system_time',0
	.word	16269
	.byte	8,2,35,28,0,26
	.byte	'BodyInfo',0,18,232,23,3
	.word	100134
	.byte	12,18,234,23,9,16,14
	.byte	'x',0
	.word	16409
	.byte	4,2,35,0,14
	.byte	'y',0
	.word	16409
	.byte	4,2,35,4,14
	.byte	'width',0
	.word	16409
	.byte	4,2,35,8,14
	.byte	'height',0
	.word	16409
	.byte	4,2,35,12,0,26
	.byte	'BoxRect',0,18,240,23,3
	.word	100530
	.byte	12,18,242,23,9,12,14
	.byte	'brake_enable',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'brake_prefill',0
	.word	157
	.byte	1,2,35,1,14
	.byte	'brake_system_mode',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'brake_command',0
	.word	16409
	.byte	4,2,35,4,14
	.byte	'dec_to_stop_flag',0
	.word	157
	.byte	1,2,35,8,14
	.byte	'brake_control_mode',0
	.word	157
	.byte	1,2,35,9,0,26
	.byte	'BrakeCommand',0,18,250,23,3
	.word	100607
	.byte	12,18,252,23,9,32,14
	.byte	'braking_status',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'brake_pedal_output',0
	.word	16409
	.byte	4,2,35,2,14
	.byte	'master_cylinder_pressure',0
	.word	16409
	.byte	4,2,35,6,14
	.byte	'brake_control_available',0
	.word	157
	.byte	1,2,35,10,14
	.byte	'brake_error',0
	.word	157
	.byte	1,2,35,11,14
	.byte	'brake_enable',0
	.word	157
	.byte	1,2,35,12,14
	.byte	'driver_override',0
	.word	157
	.byte	1,2,35,13,14
	.byte	'abs_enable',0
	.word	157
	.byte	1,2,35,14,14
	.byte	'abs_active',0
	.word	157
	.byte	1,2,35,15,14
	.byte	'can_time',0
	.word	16269
	.byte	8,2,35,16,14
	.byte	'system_time',0
	.word	16269
	.byte	8,2,35,24,0,26
	.byte	'BrakeInfo',0,18,137,24,3
	.word	100785
	.byte	12,18,155,24,9,28,14
	.byte	'calib_status',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'yaw',0
	.word	16409
	.byte	4,2,35,2,14
	.byte	'pitch',0
	.word	16409
	.byte	4,2,35,6,14
	.byte	'roll',0
	.word	16409
	.byte	4,2,35,10,14
	.byte	'camera_x',0
	.word	16409
	.byte	4,2,35,14,14
	.byte	'camera_y',0
	.word	16409
	.byte	4,2,35,18,14
	.byte	'camera_z',0
	.word	16409
	.byte	4,2,35,22,0,26
	.byte	'Camera_Calib_Results',0,18,164,24,3
	.word	101077
	.byte	12,18,166,24,9,4,14
	.byte	'sensor_ID',0
	.word	293
	.byte	4,2,35,0,0,26
	.byte	'Camera_Intrinsic_Params',0,18,169,24,3
	.word	101232
	.byte	12,18,171,24,9,12,14
	.byte	'steer_enable',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'steer_system_mode',0
	.word	157
	.byte	1,2,35,1,14
	.byte	'steer_clear',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'steering_command',0
	.word	16409
	.byte	4,2,35,4,14
	.byte	'steering_speed_command',0
	.word	16409
	.byte	4,2,35,8,0,26
	.byte	'SteerCommand',0,18,178,24,3
	.word	101291
	.byte	12,18,180,24,9,12,14
	.byte	'throttle_enable',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'throttle_ignore',0
	.word	157
	.byte	1,2,35,1,14
	.byte	'throttle_system_mode',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'throttle_command',0
	.word	16409
	.byte	4,2,35,4,14
	.byte	'target_acce',0
	.word	16409
	.byte	4,2,35,8,0,26
	.byte	'ThrottleCommand',0,18,187,24,3
	.word	101448
	.byte	12,18,189,24,9,4,14
	.byte	'gear_enable',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'gear_ignore',0
	.word	157
	.byte	1,2,35,1,14
	.byte	'gear_clear',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'gear_command',0
	.word	157
	.byte	1,2,35,3,0,26
	.byte	'GearCommand',0,18,195,24,3
	.word	101607
	.byte	12,18,197,24,9,2,14
	.byte	'epb_enable',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'epb_command',0
	.word	157
	.byte	1,2,35,1,0,26
	.byte	'EPBCommand',0,18,201,24,3
	.word	101719
	.byte	12,18,231,24,9,32,14
	.byte	'steering_angle',0
	.word	16409
	.byte	4,2,35,0,14
	.byte	'steering_enable',0
	.word	157
	.byte	1,2,35,4,14
	.byte	'steering_column_torque',0
	.word	16409
	.byte	4,2,35,6,14
	.byte	'driver_override',0
	.word	157
	.byte	1,2,35,10,14
	.byte	'steering_control_available',0
	.word	157
	.byte	1,2,35,11,14
	.byte	'steering_angle_speed',0
	.word	16409
	.byte	4,2,35,12,14
	.byte	'can_time',0
	.word	16269
	.byte	8,2,35,16,14
	.byte	'system_time',0
	.word	16269
	.byte	8,2,35,24,0,26
	.byte	'SteeringInfo',0,18,241,24,3
	.word	101787
	.byte	12,18,243,24,9,72,14
	.byte	'wheel_speed_rear_right',0
	.word	16409
	.byte	4,2,35,0,14
	.byte	'wheel_speed_rear_left',0
	.word	16409
	.byte	4,2,35,4,14
	.byte	'wheel_speed_front_right',0
	.word	16409
	.byte	4,2,35,8,14
	.byte	'wheel_speed_front_left',0
	.word	16409
	.byte	4,2,35,12,14
	.byte	'wheel_speed_rear_right_dir',0
	.word	157
	.byte	1,2,35,16,14
	.byte	'wheel_speed_rear_left_dir',0
	.word	157
	.byte	1,2,35,17,14
	.byte	'wheel_speed_front_right_dir',0
	.word	157
	.byte	1,2,35,18,14
	.byte	'wheel_speed_front_left_dir',0
	.word	157
	.byte	1,2,35,19,14
	.byte	'wheel_position_rear_right',0
	.word	16332
	.byte	2,2,35,20,14
	.byte	'wheel_position_rear_left',0
	.word	16332
	.byte	2,2,35,22,14
	.byte	'wheel_position_front_right',0
	.word	16332
	.byte	2,2,35,24,14
	.byte	'wheel_position_front_left',0
	.word	16332
	.byte	2,2,35,26,14
	.byte	'vehicle_speed',0
	.word	16409
	.byte	4,2,35,28,14
	.byte	'vehicle_stand_still',0
	.word	157
	.byte	1,2,35,32,14
	.byte	'longitude_acce',0
	.word	16409
	.byte	4,2,35,34,14
	.byte	'longitude_acce_valid',0
	.word	157
	.byte	1,2,35,38,14
	.byte	'lateral_acce',0
	.word	16409
	.byte	4,2,35,40,14
	.byte	'lateral_acce_valid',0
	.word	157
	.byte	1,2,35,44,14
	.byte	'roll_rate',0
	.word	16409
	.byte	4,2,35,46,14
	.byte	'yaw_rate',0
	.word	16409
	.byte	4,2,35,50,14
	.byte	'can_time',0
	.word	16269
	.byte	8,2,35,56,14
	.byte	'system_time',0
	.word	16269
	.byte	8,2,35,64,0,26
	.byte	'VehicleSpeedInfo',0,18,139,25,3
	.word	102027
	.byte	12,18,141,25,9,32,14
	.byte	'throttle_pedal_output',0
	.word	16409
	.byte	4,2,35,0,14
	.byte	'torque_output_fr',0
	.word	16409
	.byte	4,2,35,4,14
	.byte	'torque_output_rr',0
	.word	16409
	.byte	4,2,35,8,14
	.byte	'throttle_enable',0
	.word	157
	.byte	1,2,35,12,14
	.byte	'driver_override',0
	.word	157
	.byte	1,2,35,13,14
	.byte	'throttle_error',0
	.word	157
	.byte	1,2,35,14,14
	.byte	'throttle_control_available',0
	.word	157
	.byte	1,2,35,15,14
	.byte	'can_time',0
	.word	16269
	.byte	8,2,35,16,14
	.byte	'system_time',0
	.word	16269
	.byte	8,2,35,24,0,26
	.byte	'ThrottleInfo',0,18,152,25,3
	.word	102704
	.byte	12,18,154,25,9,20,14
	.byte	'epb_status',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'driver_override',0
	.word	157
	.byte	1,2,35,1,14
	.byte	'epb_enable',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'can_time',0
	.word	16269
	.byte	8,2,35,4,14
	.byte	'system_time',0
	.word	16269
	.byte	8,2,35,12,0,26
	.byte	'EPBInfo',0,18,161,25,3
	.word	102965
	.byte	12,18,175,25,9,12,14
	.byte	'front_left_pressure',0
	.word	271
	.byte	2,2,35,0,14
	.byte	'front_right_pressure',0
	.word	271
	.byte	2,2,35,2,14
	.byte	'rear_left_pressure',0
	.word	271
	.byte	2,2,35,4,14
	.byte	'rear_right_pressure',0
	.word	271
	.byte	2,2,35,6,14
	.byte	'front_left_pressure_alarm',0
	.word	157
	.byte	1,2,35,8,14
	.byte	'front_right_pressure_alarm',0
	.word	157
	.byte	1,2,35,9,14
	.byte	'rear_left_pressure_alarm',0
	.word	157
	.byte	1,2,35,10,14
	.byte	'rear_right_pressure_alarm',0
	.word	157
	.byte	1,2,35,11,0,26
	.byte	'TirePressureInfo',0,18,185,25,3
	.word	103093
	.byte	12,18,195,25,9,24,14
	.byte	'x',0
	.word	16409
	.byte	4,2,35,0,14
	.byte	'y',0
	.word	16409
	.byte	4,2,35,4,14
	.byte	'class_type',0
	.word	157
	.byte	1,2,35,8,14
	.byte	'edge',0
	.word	157
	.byte	1,2,35,9,14
	.byte	'id',0
	.word	271
	.byte	2,2,35,10,14
	.byte	'vehicle_x',0
	.word	16409
	.byte	4,2,35,12,14
	.byte	'vehicle_y',0
	.word	16409
	.byte	4,2,35,16,14
	.byte	'vehicle_heading',0
	.word	16409
	.byte	4,2,35,20,0,26
	.byte	'Cc_Point2f',0,18,205,25,3
	.word	103382
	.byte	26
	.byte	'CheckSum_0x106_IDT',0,18,207,25,15
	.word	157
	.byte	26
	.byte	'CheckSum_0x109_IDT',0,18,208,25,15
	.word	157
	.byte	26
	.byte	'CheckSum_0x17F_IDT',0,18,209,25,15
	.word	157
	.byte	26
	.byte	'CheckSum_0x3F1_IDT',0,18,210,25,15
	.word	157
	.byte	26
	.byte	'CheckSum_0x3F5_IDT',0,18,211,25,15
	.word	157
	.byte	26
	.byte	'CheckSum_0x3F7_IDT',0,18,212,25,15
	.word	157
	.byte	26
	.byte	'CheckSum_1F8_IDT',0,18,213,25,15
	.word	157
	.byte	26
	.byte	'Checksum_0x132_IDT',0,18,214,25,15
	.word	157
	.byte	26
	.byte	'Checksum_0x17E_IDT',0,18,215,25,15
	.word	157
	.byte	26
	.byte	'Checksum_230_IDT',0,18,217,25,15
	.word	157
	.byte	12,18,237,25,9,20,14
	.byte	'time_stamp',0
	.word	16269
	.byte	8,2,35,0,14
	.byte	'x',0
	.word	16409
	.byte	4,2,35,8,14
	.byte	'y',0
	.word	16409
	.byte	4,2,35,12,14
	.byte	'heading',0
	.word	16409
	.byte	4,2,35,16,0,26
	.byte	'LocationPoint',0,18,243,25,3
	.word	103816
	.byte	10,160,6
	.word	16409
	.byte	11,199,1,0,26
	.byte	'rt_Array_float32_200',0,18,245,25,17
	.word	103905
	.byte	12,18,246,25,9,196,37,14
	.byte	'x',0
	.word	103916
	.byte	160,6,2,35,0,14
	.byte	'y',0
	.word	103916
	.byte	160,6,3,35,160,6,14
	.byte	'heading',0
	.word	103916
	.byte	160,6,3,35,192,12,14
	.byte	'curve',0
	.word	103916
	.byte	160,6,3,35,224,18,14
	.byte	'acc',0
	.word	103916
	.byte	160,6,3,35,128,25,14
	.byte	'speed',0
	.word	103916
	.byte	160,6,3,35,160,31,14
	.byte	'gear',0
	.word	157
	.byte	1,3,35,192,37,14
	.byte	'points_cnt',0
	.word	157
	.byte	1,3,35,193,37,0,26
	.byte	'Trajectory',0,18,128,26,3
	.word	103946
	.byte	10,160,6
	.word	16409
	.byte	11,199,1,0,26
	.byte	'DistHeight_Obj_00_IDT',0,18,142,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_01_IDT',0,18,143,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_02_IDT',0,18,144,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_03_IDT',0,18,145,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_04_IDT',0,18,146,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_05_IDT',0,18,147,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_06_IDT',0,18,148,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_07_IDT',0,18,149,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_08_IDT',0,18,150,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_09_IDT',0,18,151,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_10_IDT',0,18,152,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_11_IDT',0,18,153,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_12_IDT',0,18,154,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_13_IDT',0,18,155,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_14_IDT',0,18,156,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_15_IDT',0,18,157,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_16_IDT',0,18,158,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_17_IDT',0,18,159,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_18_IDT',0,18,160,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_19_IDT',0,18,161,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_20_IDT',0,18,162,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_21_IDT',0,18,163,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_22_IDT',0,18,164,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_23_IDT',0,18,165,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_24_IDT',0,18,166,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_25_IDT',0,18,167,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_26_IDT',0,18,168,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_27_IDT',0,18,169,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_28_IDT',0,18,170,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_29_IDT',0,18,171,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_30_IDT',0,18,172,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_31_IDT',0,18,173,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_32_IDT',0,18,174,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_33_IDT',0,18,175,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_34_IDT',0,18,176,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_35_IDT',0,18,177,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_36_IDT',0,18,178,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_37_IDT',0,18,179,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_38_IDT',0,18,180,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_39_IDT',0,18,181,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_40_IDT',0,18,182,26,15
	.word	157
	.byte	26
	.byte	'DistHeight_Obj_41_IDT',0,18,183,26,15
	.word	157
	.byte	26
	.byte	'EPB_AVHFeedbackSts_IDT',0,18,188,26,15
	.word	157
	.byte	26
	.byte	'EPB_AVHStatIndReqV_IDT',0,18,189,26,15
	.word	157
	.byte	26
	.byte	'EPB_AVHStatIndReq_IDT',0,18,190,26,15
	.word	157
	.byte	26
	.byte	'EPB_AVHWrnIndReqV_IDT',0,18,191,26,15
	.word	157
	.byte	26
	.byte	'EPB_AVHWrnIndReq_IDT',0,18,192,26,15
	.word	157
	.byte	26
	.byte	'EPB_Sts_IDT',0,18,193,26,15
	.word	157
	.byte	26
	.byte	'EPB_SysBrkLtsReq_IDT',0,18,194,26,15
	.word	157
	.byte	26
	.byte	'EPB_SysDspMsgReqV_IDT',0,18,195,26,15
	.word	157
	.byte	26
	.byte	'EPB_SysDspMsgReq_IDT',0,18,196,26,15
	.word	157
	.byte	26
	.byte	'EPB_SysStatIndReqV_IDT',0,18,197,26,15
	.word	157
	.byte	26
	.byte	'EPB_SysStatIndReq_IDT',0,18,198,26,15
	.word	157
	.byte	26
	.byte	'EPB_SysWrnIndReqV_IDT',0,18,199,26,15
	.word	157
	.byte	26
	.byte	'EPB_SysWrnIndReq_IDT',0,18,200,26,15
	.word	157
	.byte	26
	.byte	'EPS_ADAS_CtrlAbortFeedback_IDT',0,18,201,26,15
	.word	157
	.byte	26
	.byte	'EPS_ADAS_ModActv_IDT',0,18,202,26,15
	.word	157
	.byte	26
	.byte	'EPS_ADAS_ModAvail_IDT',0,18,203,26,15
	.word	157
	.byte	26
	.byte	'EPS_DrStrTorqV_IDT',0,18,207,26,15
	.word	157
	.byte	26
	.byte	'EPS_DrStrTorqVal_IDT',0,18,208,26,15
	.word	157
	.byte	26
	.byte	'EPS_LKARespTorq_IDT',0,18,209,26,16
	.word	271
	.byte	26
	.byte	'EPS_SterFltMod_IDT',0,18,212,26,15
	.word	157
	.byte	26
	.byte	'EPS_SterModV_IDT',0,18,213,26,15
	.word	157
	.byte	26
	.byte	'EPS_SterMod_IDT',0,18,214,26,15
	.word	157
	.byte	26
	.byte	'ESC_EscCtrlActv_IDT',0,18,215,26,15
	.word	157
	.byte	26
	.byte	'ESC_EscDisableSts_IDT',0,18,216,26,15
	.word	157
	.byte	26
	.byte	'ESC_EscFlgFlt_IDT',0,18,217,26,15
	.word	157
	.byte	26
	.byte	'ESC_HBAFlgFlt_IDT',0,18,218,26,15
	.word	157
	.byte	26
	.byte	'ESC_HSA_Control_Status_IDT',0,18,219,26,15
	.word	157
	.byte	26
	.byte	'ESC_HSA_Status_Fault_IDT',0,18,220,26,15
	.word	157
	.byte	26
	.byte	'ESC_HbaCtrlActv_IDT',0,18,221,26,15
	.word	157
	.byte	26
	.byte	'ESC_MasterCylinderPressureV_IDT',0,18,226,26,15
	.word	157
	.byte	26
	.byte	'ESC_MasterCylinderPressure_IDT',0,18,227,26,16
	.word	271
	.byte	26
	.byte	'ESC_SlopeGradeAngle_IDT',0,18,228,26,15
	.word	157
	.byte	26
	.byte	'ESC_TcsCtrlActv_IDT',0,18,229,26,15
	.word	157
	.byte	26
	.byte	'ESC_TcsDisableSts_IDT',0,18,230,26,15
	.word	157
	.byte	26
	.byte	'ESC_TcsFlgFlt_IDT',0,18,231,26,15
	.word	157
	.byte	26
	.byte	'Float',0,18,242,26,17
	.word	16409
	.byte	10,128,75
	.word	103382
	.byte	11,143,3,0,26
	.byte	'vehicle_points_400',0,18,243,26,20
	.word	106504
	.byte	12,18,244,26,9,136,75,14
	.byte	'point_num',0
	.word	271
	.byte	2,2,35,0,14
	.byte	'closed_contour',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'vehicle_points',0
	.word	106515
	.byte	128,75,2,35,4,14
	.byte	'color_type',0
	.word	157
	.byte	1,3,35,132,75,14
	.byte	'class_type',0
	.word	157
	.byte	1,3,35,133,75,0,26
	.byte	'FreespaceInfo',0,18,251,26,3
	.word	106543
	.byte	10,128,75
	.word	103382
	.byte	11,143,3,0,12,18,134,27,9,36,14
	.byte	'ARS_OD_TimeStampGlobSec',0
	.word	16269
	.byte	8,2,35,0,14
	.byte	'ARS_OD_TimeStampGlobNanoSec',0
	.word	16269
	.byte	8,2,35,8,14
	.byte	'ARS_OD_TimeStampLocal',0
	.word	16269
	.byte	8,2,35,16,14
	.byte	'ARS_OD_Latency',0
	.word	271
	.byte	2,2,35,24,14
	.byte	'ARS_OD_MeasCounter',0
	.word	271
	.byte	2,2,35,26,14
	.byte	'ARS_OD_CycleCounter',0
	.word	157
	.byte	1,2,35,28,14
	.byte	'ARS_OD_NumOfObjects',0
	.word	157
	.byte	1,2,35,29,14
	.byte	'ARS_OD_TaskValidFlag',0
	.word	157
	.byte	1,2,35,30,14
	.byte	'ARS_OD_ExtendedCycleFlag',0
	.word	157
	.byte	1,2,35,31,14
	.byte	'ARS_OD_MsgCounter_Header',0
	.word	157
	.byte	1,2,35,32,14
	.byte	'ARS_OD_CRC16_Checksum_Header',0
	.word	271
	.byte	2,2,35,34,0,26
	.byte	'RadarHeader',0,18,147,27,3
	.word	106695
	.byte	12,18,142,28,9,40,14
	.byte	'time_stamp',0
	.word	16269
	.byte	8,2,35,0,14
	.byte	'time_stamp_can',0
	.word	16269
	.byte	8,2,35,8,14
	.byte	'x',0
	.word	16409
	.byte	4,2,35,16,14
	.byte	'y',0
	.word	16409
	.byte	4,2,35,20,14
	.byte	'z',0
	.word	16409
	.byte	4,2,35,24,14
	.byte	'heading',0
	.word	16409
	.byte	4,2,35,28,14
	.byte	'pitch',0
	.word	16409
	.byte	4,2,35,32,14
	.byte	'roll',0
	.word	16409
	.byte	4,2,35,36,0,26
	.byte	'GlobalPoseEstimation',0,18,152,28,3
	.word	107070
	.byte	10,224,3
	.word	107070
	.byte	11,11,0,26
	.byte	'global_pose_10',0,18,154,28,30
	.word	107230
	.byte	26
	.byte	'IBS_ESCOFF_StsFB_IDT',0,18,174,28,15
	.word	157
	.byte	26
	.byte	'IPC_IPCTotalOdometerV_IDT',0,18,192,28,15
	.word	157
	.byte	26
	.byte	'IPC_IPCTotalOdometer_IDT',0,18,193,28,16
	.word	293
	.byte	26
	.byte	'IPC_Remain_Maintenance_IDT',0,18,194,28,16
	.word	271
	.byte	26
	.byte	'MFS_ACC_CruiseCancel_IDT',0,18,196,28,15
	.word	157
	.byte	26
	.byte	'MFS_ACC_CruiseGapSet_IDT',0,18,197,28,15
	.word	157
	.byte	26
	.byte	'MFS_ACC_CruiseOn_Off_IDT',0,18,198,28,15
	.word	157
	.byte	26
	.byte	'MFS_ACC_CruiseSpdDecrease_IDT',0,18,199,28,15
	.word	157
	.byte	26
	.byte	'MFS_ACC_CruiseSpdIncrease_IDT',0,18,200,28,15
	.word	157
	.byte	26
	.byte	'MFS_L1_Central_Control_IDT',0,18,201,28,15
	.word	157
	.byte	26
	.byte	'MFS_L1_DownControl_IDT',0,18,202,28,15
	.word	157
	.byte	26
	.byte	'MFS_L1_Failure_IDT',0,18,203,28,15
	.word	157
	.byte	26
	.byte	'MFS_L1_LeftControl_IDT',0,18,204,28,15
	.word	157
	.byte	26
	.byte	'MFS_L1_RightControl_IDT',0,18,205,28,15
	.word	157
	.byte	26
	.byte	'MFS_L1_UpControl_IDT',0,18,206,28,15
	.word	157
	.byte	26
	.byte	'MFS_L2_Failure_IDT',0,18,207,28,15
	.word	157
	.byte	12,18,239,28,9,52,14
	.byte	'distance_x',0
	.word	16409
	.byte	4,2,35,0,14
	.byte	'distance_y',0
	.word	16409
	.byte	4,2,35,4,14
	.byte	'tracking_id',0
	.word	271
	.byte	2,2,35,8,14
	.byte	'class_id',0
	.word	157
	.byte	1,2,35,10,14
	.byte	'angle_view',0
	.word	157
	.byte	1,2,35,11,14
	.byte	'confidence',0
	.word	157
	.byte	1,2,35,12,14
	.byte	'width',0
	.word	16409
	.byte	4,2,35,14,14
	.byte	'height',0
	.word	16409
	.byte	4,2,35,18,14
	.byte	'length',0
	.word	16409
	.byte	4,2,35,22,14
	.byte	'yaw',0
	.word	16409
	.byte	4,2,35,26,14
	.byte	'relative_velocity_x',0
	.word	16409
	.byte	4,2,35,30,14
	.byte	'relative_velocity_y',0
	.word	16409
	.byte	4,2,35,34,14
	.byte	'relative_acceleration_x',0
	.word	16409
	.byte	4,2,35,38,14
	.byte	'relative_acceleration_y',0
	.word	16409
	.byte	4,2,35,42,14
	.byte	'motion_status',0
	.word	157
	.byte	1,2,35,46,14
	.byte	'valid_status',0
	.word	271
	.byte	2,2,35,48,14
	.byte	'target_source',0
	.word	157
	.byte	1,2,35,50,0,26
	.byte	'ObjectInfo',0,18,130,29,3
	.word	107798
	.byte	10,128,26
	.word	107798
	.byte	11,63,0,26
	.byte	'object_set_64',0,18,132,29,20
	.word	108196
	.byte	26
	.byte	'PEPS_IGN1RelaySts_IDT',0,18,142,29,15
	.word	157
	.byte	26
	.byte	'PEPS_IGN1RelayValidity_IDT',0,18,143,29,15
	.word	157
	.byte	26
	.byte	'PEPS_Learning_Status_IDT',0,18,144,29,15
	.word	157
	.byte	26
	.byte	'PEPS_Message_Sts_AliveCounter_IDT',0,18,145,29,15
	.word	157
	.byte	26
	.byte	'PEPS_Message_Sts_CheckSum_IDT',0,18,146,29,15
	.word	157
	.byte	26
	.byte	'PEPS_PowerModeValidity_IDT',0,18,147,29,15
	.word	157
	.byte	26
	.byte	'PEPS_PowerMode_IDT',0,18,148,29,15
	.word	157
	.byte	26
	.byte	'PEPS_RemoteControlSt_IDT',0,18,149,29,15
	.word	157
	.byte	12,18,157,29,9,12,14
	.byte	'flc_info',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'flm_info',0
	.word	157
	.byte	1,2,35,1,14
	.byte	'frm_info',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'frc_info',0
	.word	157
	.byte	1,2,35,3,14
	.byte	'rlc_info',0
	.word	157
	.byte	1,2,35,4,14
	.byte	'rlm_info',0
	.word	157
	.byte	1,2,35,5,14
	.byte	'rrm_info',0
	.word	157
	.byte	1,2,35,6,14
	.byte	'rrc_info',0
	.word	157
	.byte	1,2,35,7,14
	.byte	'fls_info',0
	.word	157
	.byte	1,2,35,8,14
	.byte	'frs_info',0
	.word	157
	.byte	1,2,35,9,14
	.byte	'rls_info',0
	.word	157
	.byte	1,2,35,10,14
	.byte	'rrs_info',0
	.word	157
	.byte	1,2,35,11,0,26
	.byte	'PdcAlertInfo',0,18,171,29,3
	.word	108510
	.byte	12,18,173,29,9,24,14
	.byte	'flc_distance',0
	.word	271
	.byte	2,2,35,0,14
	.byte	'flm_distance',0
	.word	271
	.byte	2,2,35,2,14
	.byte	'frm_distance',0
	.word	271
	.byte	2,2,35,4,14
	.byte	'frc_distance',0
	.word	271
	.byte	2,2,35,6,14
	.byte	'rlc_distance',0
	.word	271
	.byte	2,2,35,8,14
	.byte	'rlm_distance',0
	.word	271
	.byte	2,2,35,10,14
	.byte	'rrm_distance',0
	.word	271
	.byte	2,2,35,12,14
	.byte	'rrc_distance',0
	.word	271
	.byte	2,2,35,14,14
	.byte	'fls_distance',0
	.word	271
	.byte	2,2,35,16,14
	.byte	'frs_distance',0
	.word	271
	.byte	2,2,35,18,14
	.byte	'rls_distance',0
	.word	271
	.byte	2,2,35,20,14
	.byte	'rrs_distance',0
	.word	271
	.byte	2,2,35,22,0,26
	.byte	'PdcDistInfo',0,18,187,29,3
	.word	108755
	.byte	12,18,189,29,9,40,14
	.byte	'flc_distance_left',0
	.word	271
	.byte	2,2,35,0,14
	.byte	'flc_distance_right',0
	.word	271
	.byte	2,2,35,2,14
	.byte	'flm_distance_left',0
	.word	271
	.byte	2,2,35,4,14
	.byte	'flm_distance_right',0
	.word	271
	.byte	2,2,35,6,14
	.byte	'frm_distance_left',0
	.word	271
	.byte	2,2,35,8,14
	.byte	'frm_distance_right',0
	.word	271
	.byte	2,2,35,10,14
	.byte	'frc_distance_left',0
	.word	271
	.byte	2,2,35,12,14
	.byte	'frc_distance_right',0
	.word	271
	.byte	2,2,35,14,14
	.byte	'rlc_distance_left',0
	.word	271
	.byte	2,2,35,16,14
	.byte	'rlc_distance_right',0
	.word	271
	.byte	2,2,35,18,14
	.byte	'rlm_distance_left',0
	.word	271
	.byte	2,2,35,20,14
	.byte	'rlm_distance_right',0
	.word	271
	.byte	2,2,35,22,14
	.byte	'rrm_distance_left',0
	.word	271
	.byte	2,2,35,24,14
	.byte	'rrm_distance_right',0
	.word	271
	.byte	2,2,35,26,14
	.byte	'rrc_distance_left',0
	.word	271
	.byte	2,2,35,28,14
	.byte	'rrc_distance_right',0
	.word	271
	.byte	2,2,35,30,14
	.byte	'fls_distance',0
	.word	271
	.byte	2,2,35,32,14
	.byte	'frs_distance',0
	.word	271
	.byte	2,2,35,34,14
	.byte	'rls_distance',0
	.word	271
	.byte	2,2,35,36,14
	.byte	'rrs_distance',0
	.word	271
	.byte	2,2,35,38,0,26
	.byte	'PdcDistInfoAvm',0,18,211,29,3
	.word	109047
	.byte	12,18,213,29,9,4,14
	.byte	'ls_info',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'rs_info',0
	.word	157
	.byte	1,2,35,1,14
	.byte	'ls_distance',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'rs_distance',0
	.word	157
	.byte	1,2,35,3,0,26
	.byte	'PdcSideInfo',0,18,219,29,3
	.word	109606
	.byte	10,12
	.word	109606
	.byte	11,2,0,26
	.byte	'PdcSideInfo_3',0,18,221,29,21
	.word	109710
	.byte	12,18,235,29,9,24,14
	.byte	'camera_position',0
	.word	10253
	.byte	4,2,35,0,14
	.byte	'timestamp',0
	.word	16376
	.byte	8,2,35,4,14
	.byte	'blockage_status',0
	.word	16310
	.byte	1,2,35,12,14
	.byte	'weather_status',0
	.word	16310
	.byte	1,2,35,13,14
	.byte	'illumination_status',0
	.word	16310
	.byte	1,2,35,14,14
	.byte	'image_limited_status',0
	.word	16310
	.byte	1,2,35,15,14
	.byte	'out_of_focus',0
	.word	157
	.byte	1,2,35,16,14
	.byte	'impacted_technologies',0
	.word	10253
	.byte	4,2,35,18,0,26
	.byte	'PerceptionFailsafe',0,18,245,29,3
	.word	109742
	.byte	10,160,2
	.word	109742
	.byte	11,11,0,26
	.byte	'PerceptionFailsafe_12',0,18,247,29,28
	.word	109982
	.byte	12,18,248,29,9,84,14
	.byte	'track_id',0
	.word	10253
	.byte	4,2,35,0,14
	.byte	'age',0
	.word	10253
	.byte	4,2,35,4,14
	.byte	'exist_probability',0
	.word	16409
	.byte	4,2,35,8,14
	.byte	'quality',0
	.word	157
	.byte	1,2,35,12,14
	.byte	'prediction_type',0
	.word	16376
	.byte	8,2,35,16,14
	.byte	'prediction_source',0
	.word	16376
	.byte	8,2,35,24,14
	.byte	'color',0
	.word	157
	.byte	1,2,35,32,14
	.byte	'color_confidence',0
	.word	16409
	.byte	4,2,35,34,14
	.byte	'lanemark_type',0
	.word	157
	.byte	1,2,35,38,14
	.byte	'lanemark_type_confidence',0
	.word	16409
	.byte	4,2,35,40,14
	.byte	'dlm_type',0
	.word	157
	.byte	1,2,35,44,14
	.byte	'role',0
	.word	157
	.byte	1,2,35,45,14
	.byte	'marker_width',0
	.word	16409
	.byte	4,2,35,46,14
	.byte	'marker_width_std',0
	.word	16409
	.byte	4,2,35,50,14
	.byte	'line_c3',0
	.word	16409
	.byte	4,2,35,54,14
	.byte	'line_c2',0
	.word	16409
	.byte	4,2,35,58,14
	.byte	'line_c1',0
	.word	16409
	.byte	4,2,35,62,14
	.byte	'line_c0',0
	.word	16409
	.byte	4,2,35,66,14
	.byte	'view_range_start',0
	.word	16409
	.byte	4,2,35,70,14
	.byte	'view_range_end',0
	.word	16409
	.byte	4,2,35,74,14
	.byte	'measured_view_range_end',0
	.word	16409
	.byte	4,2,35,78,14
	.byte	'camera_position',0
	.word	157
	.byte	1,2,35,82,14
	.byte	'is_valid',0
	.word	157
	.byte	1,2,35,83,0,26
	.byte	'PerceptionLaneAdjacent',0,18,145,30,3
	.word	110023
	.byte	10,208,2
	.word	110023
	.byte	11,3,0,26
	.byte	'PerceptionLaneAdjacent_4',0,18,147,30,32
	.word	110561
	.byte	12,18,148,30,9,132,1,14
	.byte	'timestamp',0
	.word	16376
	.byte	8,2,35,0,14
	.byte	'track_id',0
	.word	10253
	.byte	4,2,35,8,14
	.byte	'age',0
	.word	10253
	.byte	4,2,35,12,14
	.byte	'exist_probability',0
	.word	16409
	.byte	4,2,35,16,14
	.byte	'quality',0
	.word	157
	.byte	1,2,35,20,14
	.byte	'prediction_source',0
	.word	16376
	.byte	8,2,35,24,14
	.byte	'prediction_type',0
	.word	16376
	.byte	8,2,35,32,14
	.byte	'color',0
	.word	157
	.byte	1,2,35,40,14
	.byte	'color_confidence',0
	.word	16409
	.byte	4,2,35,42,14
	.byte	'lanemark_type',0
	.word	157
	.byte	1,2,35,46,14
	.byte	'lanemark_type_confidence',0
	.word	16409
	.byte	4,2,35,48,14
	.byte	'dlm_type',0
	.word	157
	.byte	1,2,35,52,14
	.byte	'decel_type',0
	.word	157
	.byte	1,2,35,53,14
	.byte	'side',0
	.word	157
	.byte	1,2,35,54,14
	.byte	'crossing',0
	.word	157
	.byte	1,2,35,55,14
	.byte	'marker_width',0
	.word	16409
	.byte	4,2,35,56,14
	.byte	'marker_width_std',0
	.word	16409
	.byte	4,2,35,60,14
	.byte	'dash_average_length',0
	.word	16409
	.byte	4,2,35,64,14
	.byte	'dash_average_gap',0
	.word	16409
	.byte	4,2,35,68,14
	.byte	'is_multi_clothoid',0
	.word	157
	.byte	1,2,35,72,14
	.byte	'first_line_c0',0
	.word	16409
	.byte	4,2,35,74,14
	.byte	'first_line_c1',0
	.word	16409
	.byte	4,2,35,78,14
	.byte	'first_line_c2',0
	.word	16409
	.byte	4,2,35,82,14
	.byte	'first_line_c3',0
	.word	16409
	.byte	4,2,35,86,14
	.byte	'first_view_range_start',0
	.word	16409
	.byte	4,2,35,90,14
	.byte	'first_view_range_end',0
	.word	16409
	.byte	4,2,35,94,14
	.byte	'first_measured_view_range_end',0
	.word	16409
	.byte	4,2,35,98,14
	.byte	'second_line_c0',0
	.word	16409
	.byte	4,2,35,102,14
	.byte	'second_line_c1',0
	.word	16409
	.byte	4,2,35,106,14
	.byte	'second_line_c2',0
	.word	16409
	.byte	4,2,35,110,14
	.byte	'second_line_c3',0
	.word	16409
	.byte	4,2,35,114,14
	.byte	'second_view_range_start',0
	.word	16409
	.byte	4,2,35,118,14
	.byte	'second_view_range_end',0
	.word	16409
	.byte	4,2,35,122,14
	.byte	'second_measured_view_range_end',0
	.word	16409
	.byte	4,2,35,126,14
	.byte	'camera_position',0
	.word	157
	.byte	1,3,35,130,1,14
	.byte	'is_valid',0
	.word	157
	.byte	1,3,35,131,1,0,26
	.byte	'PerceptionLaneHost',0,18,186,30,3
	.word	110605
	.byte	10,136,2
	.word	110605
	.byte	11,1,0,26
	.byte	'PerceptionLaneHost_2',0,18,188,30,28
	.word	111523
	.byte	12,18,189,30,9,216,1,14
	.byte	'timestamp',0
	.word	16269
	.byte	8,2,35,0,14
	.byte	'frame_index',0
	.word	16269
	.byte	8,2,35,8,14
	.byte	'camera_position',0
	.word	16310
	.byte	1,2,35,16,14
	.byte	'id',0
	.word	157
	.byte	1,2,35,17,14
	.byte	'class',0
	.word	16310
	.byte	1,2,35,18,14
	.byte	'subclass',0
	.word	16310
	.byte	1,2,35,19,14
	.byte	'confidence',0
	.word	16409
	.byte	4,2,35,20,14
	.byte	'bbox',0
	.word	100530
	.byte	16,2,35,24,14
	.byte	'length',0
	.word	16409
	.byte	4,2,35,40,14
	.byte	'length_std',0
	.word	16409
	.byte	4,2,35,44,14
	.byte	'width',0
	.word	16409
	.byte	4,2,35,48,14
	.byte	'width_std',0
	.word	16409
	.byte	4,2,35,52,14
	.byte	'height',0
	.word	16409
	.byte	4,2,35,56,14
	.byte	'height_std',0
	.word	16409
	.byte	4,2,35,60,14
	.byte	'age_count',0
	.word	16310
	.byte	1,2,35,64,14
	.byte	'age_seconds',0
	.word	16409
	.byte	4,2,35,66,14
	.byte	'visibility_side',0
	.word	16310
	.byte	1,2,35,70,14
	.byte	'heading',0
	.word	16409
	.byte	4,2,35,72,14
	.byte	'heading_std',0
	.word	16409
	.byte	4,2,35,76,14
	.byte	'inverse_ttc',0
	.word	16409
	.byte	4,2,35,80,14
	.byte	'inverse_ttc_std',0
	.word	16409
	.byte	4,2,35,84,14
	.byte	'angle_left',0
	.word	16409
	.byte	4,2,35,88,14
	.byte	'angle_right',0
	.word	16409
	.byte	4,2,35,92,14
	.byte	'angle_side',0
	.word	16409
	.byte	4,2,35,96,14
	.byte	'angle_rate',0
	.word	16409
	.byte	4,2,35,100,14
	.byte	'top_out_of_image',0
	.word	16310
	.byte	1,2,35,104,14
	.byte	'bottom_out_of_image',0
	.word	16310
	.byte	1,2,35,105,14
	.byte	'left_out_of_image',0
	.word	16310
	.byte	1,2,35,106,14
	.byte	'right_out_of_image',0
	.word	16310
	.byte	1,2,35,107,14
	.byte	'brake_light',0
	.word	16310
	.byte	1,2,35,108,14
	.byte	'turn_indicator_left',0
	.word	16310
	.byte	1,2,35,109,14
	.byte	'turn_indicator_right',0
	.word	16310
	.byte	1,2,35,110,14
	.byte	'measuring_status_0',0
	.word	16310
	.byte	1,2,35,111,14
	.byte	'measuring_status_1',0
	.word	16310
	.byte	1,2,35,112,14
	.byte	'measuring_status_2',0
	.word	16310
	.byte	1,2,35,113,14
	.byte	'motion_orientation',0
	.word	16310
	.byte	1,2,35,114,14
	.byte	'motion_category',0
	.word	16310
	.byte	1,2,35,115,14
	.byte	'motion_status',0
	.word	16310
	.byte	1,2,35,116,14
	.byte	'cutin_cutout',0
	.word	16310
	.byte	1,2,35,117,14
	.byte	'lat_distance',0
	.word	16409
	.byte	4,2,35,118,14
	.byte	'lat_distance_std',0
	.word	16409
	.byte	4,2,35,122,14
	.byte	'long_distance',0
	.word	16409
	.byte	4,2,35,126,14
	.byte	'long_distance_std',0
	.word	16409
	.byte	4,3,35,130,1,14
	.byte	'relative_lat_velocity',0
	.word	16409
	.byte	4,3,35,134,1,14
	.byte	'relative_lat_velocity_std',0
	.word	16409
	.byte	4,3,35,138,1,14
	.byte	'relative_long_velocity',0
	.word	16409
	.byte	4,3,35,142,1,14
	.byte	'relative_long_velocity_std',0
	.word	16409
	.byte	4,3,35,146,1,14
	.byte	'abs_lat_velocity',0
	.word	16409
	.byte	4,3,35,150,1,14
	.byte	'abs_lat_velocity_std',0
	.word	16409
	.byte	4,3,35,154,1,14
	.byte	'abs_long_velocity',0
	.word	16409
	.byte	4,3,35,158,1,14
	.byte	'abs_long_velocity_std',0
	.word	16409
	.byte	4,3,35,162,1,14
	.byte	'relative_lat_acc',0
	.word	16409
	.byte	4,3,35,166,1,14
	.byte	'relative_lat_acc_std',0
	.word	16409
	.byte	4,3,35,170,1,14
	.byte	'relative_long_acc',0
	.word	16409
	.byte	4,3,35,174,1,14
	.byte	'relative_long_acc_std',0
	.word	16409
	.byte	4,3,35,178,1,14
	.byte	'abs_lat_acc',0
	.word	16409
	.byte	4,3,35,182,1,14
	.byte	'abs_lat_acc_std',0
	.word	16409
	.byte	4,3,35,186,1,14
	.byte	'abs_long_acc',0
	.word	16409
	.byte	4,3,35,190,1,14
	.byte	'abs_long_acc_std',0
	.word	16409
	.byte	4,3,35,194,1,14
	.byte	'abs_speed',0
	.word	16409
	.byte	4,3,35,198,1,14
	.byte	'abs_speed_std',0
	.word	16409
	.byte	4,3,35,202,1,14
	.byte	'abs_acceleration',0
	.word	16409
	.byte	4,3,35,206,1,14
	.byte	'abs_acceleration_std',0
	.word	16409
	.byte	4,3,35,210,1,0,26
	.byte	'PerceptionOutObject',0,18,254,30,3
	.word	111563
	.byte	10,128,54
	.word	111563
	.byte	11,31,0,26
	.byte	'PerceptionOutObject_32',0,18,128,31,29
	.word	113125
	.byte	12,18,129,31,9,44,14
	.byte	'exist_probability',0
	.word	16409
	.byte	4,2,35,0,14
	.byte	'height',0
	.word	16409
	.byte	4,2,35,4,14
	.byte	'height_std',0
	.word	16409
	.byte	4,2,35,8,14
	.byte	'line_c3',0
	.word	16409
	.byte	4,2,35,12,14
	.byte	'line_c2',0
	.word	16409
	.byte	4,2,35,16,14
	.byte	'line_c1',0
	.word	16409
	.byte	4,2,35,20,14
	.byte	'line_c0',0
	.word	16409
	.byte	4,2,35,24,14
	.byte	'view_range_start',0
	.word	16409
	.byte	4,2,35,28,14
	.byte	'view_range_end',0
	.word	16409
	.byte	4,2,35,32,14
	.byte	'measured_view_range_end',0
	.word	16409
	.byte	4,2,35,36,14
	.byte	'camera_position',0
	.word	157
	.byte	1,2,35,40,0,26
	.byte	'PerceptionRoadEdge',0,18,142,31,3
	.word	113167
	.byte	10,88
	.word	113167
	.byte	11,1,0,26
	.byte	'PerceptionRoadEdge_2',0,18,144,31,28
	.word	113441
	.byte	12,18,145,31,9,44,14
	.byte	'bbox',0
	.word	100530
	.byte	16,2,35,0,14
	.byte	'height',0
	.word	16409
	.byte	4,2,35,16,14
	.byte	'width',0
	.word	16409
	.byte	4,2,35,20,14
	.byte	'lat_distance',0
	.word	16409
	.byte	4,2,35,24,14
	.byte	'lat_distance_std',0
	.word	16409
	.byte	4,2,35,28,14
	.byte	'long_distance',0
	.word	16409
	.byte	4,2,35,32,14
	.byte	'long_distance_std',0
	.word	16409
	.byte	4,2,35,36,14
	.byte	'relevance',0
	.word	157
	.byte	1,2,35,40,0,26
	.byte	'PerceptionTrafficSign',0,18,155,31,3
	.word	113480
	.byte	12,18,157,31,9,6,14
	.byte	'sign',0
	.word	10253
	.byte	4,2,35,0,14
	.byte	'type',0
	.word	157
	.byte	1,2,35,4,0,26
	.byte	'TrafficSignType',0,18,161,31,3
	.word	113680
	.byte	10,144,1
	.word	113680
	.byte	11,23,0,26
	.byte	'TrafficSignType_24',0,18,163,31,25
	.word	113740
	.byte	12,18,164,31,9,200,1,14
	.byte	'sign',0
	.word	113680
	.byte	6,2,35,0,14
	.byte	'derived_signs',0
	.word	113750
	.byte	144,1,2,35,6,14
	.byte	'bbox',0
	.word	100530
	.byte	16,3,35,152,1,14
	.byte	'lat_distance',0
	.word	16409
	.byte	4,3,35,168,1,14
	.byte	'long_distance',0
	.word	16409
	.byte	4,3,35,172,1,14
	.byte	'panel_width',0
	.word	16409
	.byte	4,3,35,176,1,14
	.byte	'panel_height',0
	.word	16409
	.byte	4,3,35,180,1,14
	.byte	'height',0
	.word	16409
	.byte	4,3,35,184,1,14
	.byte	'speed_limit',0
	.word	16409
	.byte	4,3,35,188,1,14
	.byte	'height_limit',0
	.word	16409
	.byte	4,3,35,192,1,14
	.byte	'weight_limit',0
	.word	16409
	.byte	4,3,35,196,1,0,26
	.byte	'PerceptionTrafficSignStatus',0,18,177,31,3
	.word	113778
	.byte	10,144,1
	.word	113680
	.byte	11,23,0,10,128,25
	.word	113778
	.byte	11,15,0,26
	.byte	'PerceptionTrafficSignStatus_16',0,18,179,31,37
	.word	114063
	.byte	10,192,5
	.word	113480
	.byte	11,15,0,26
	.byte	'PerceptionTrafficSign_16',0,18,180,31,31
	.word	114113
	.byte	26
	.byte	'RollingCounter_0x106_IDT',0,18,206,31,15
	.word	157
	.byte	26
	.byte	'RollingCounter_0x109_IDT',0,18,207,31,15
	.word	157
	.byte	26
	.byte	'RollingCounter_0x132_IDT',0,18,208,31,15
	.word	157
	.byte	26
	.byte	'RollingCounter_0x17F_IDT',0,18,209,31,15
	.word	157
	.byte	26
	.byte	'RollingCounter_0x3F1_IDT',0,18,211,31,15
	.word	157
	.byte	26
	.byte	'RollingCounter_0x3F5_IDT',0,18,212,31,15
	.word	157
	.byte	26
	.byte	'RollingCounter_0x3F7_IDT',0,18,213,31,15
	.word	157
	.byte	26
	.byte	'RollingCounter_1F8_IDT',0,18,214,31,15
	.word	157
	.byte	26
	.byte	'RollingCounter_230_IDT',0,18,215,31,15
	.word	157
	.byte	26
	.byte	'Rolling_counter_0x17E_IDT',0,18,216,31,15
	.word	157
	.byte	26
	.byte	'SAS_Calibrated_IDT',0,18,217,31,15
	.word	157
	.byte	26
	.byte	'SAS_SASFailure_IDT',0,18,218,31,15
	.word	157
	.byte	26
	.byte	'SAS_SASStsSnsr_IDT',0,18,219,31,15
	.word	157
	.byte	26
	.byte	'SAS_SteerWheelAngle_IDT',0,18,221,31,16
	.word	271
	.byte	26
	.byte	'SAS_SteerWhlRotSpdStatus_IDT',0,18,223,31,15
	.word	157
	.byte	26
	.byte	'SAS_SteerWhlRotSpd_IDT',0,18,224,31,16
	.word	271
	.byte	26
	.byte	'SAS_SteeringAngleValid_IDT',0,18,225,31,15
	.word	157
	.byte	26
	.byte	'STAT_Central_LockSts_IDT',0,18,226,31,15
	.word	157
	.byte	26
	.byte	'WCBS_Trailermode_Feedback_IDT',0,18,167,33,15
	.word	157
	.byte	26
	.byte	'VCU_ModeGearSts_IDT',0,18,128,34,15
	.word	157
	.byte	26
	.byte	'VCU_Warning_IMMO_Fail_IDT',0,18,129,34,15
	.word	157
	.byte	26
	.byte	'VCU_Ready_IDT',0,18,130,34,15
	.word	157
	.byte	26
	.byte	'VCU_RegencyLevInd_IDT',0,18,131,34,15
	.word	157
	.byte	26
	.byte	'VCU_Ctrl_AliveCounter_IDT',0,18,132,34,15
	.word	157
	.byte	26
	.byte	'VCU_LimpHomeSts_IDT',0,18,133,34,15
	.word	157
	.byte	26
	.byte	'VCU_Ctrl_CheckSum_IDT',0,18,134,34,15
	.word	157
	.byte	26
	.byte	'VCU_StsAccPedalFault_IDT',0,18,146,34,15
	.word	157
	.byte	26
	.byte	'VCU_StsSysFault_IDT',0,18,147,34,15
	.word	157
	.byte	26
	.byte	'VCU_AccPedalPosition_IDT',0,18,148,34,15
	.word	157
	.byte	26
	.byte	'VCU_AccPedal_Active_IDT',0,18,149,34,15
	.word	157
	.byte	26
	.byte	'VCU_StsEpt_AliveCounter_IDT',0,18,150,34,15
	.word	157
	.byte	26
	.byte	'VCU_StsEpt_CheckSum_IDT',0,18,151,34,15
	.word	157
	.byte	10,24
	.word	271
	.byte	11,11,0,26
	.byte	'distance_12',0,18,221,51,16
	.word	115203
	.byte	12,18,222,51,9,32,14
	.byte	'distance',0
	.word	115212
	.byte	24,2,35,0,14
	.byte	'time_stamp',0
	.word	16269
	.byte	8,2,35,24,0,26
	.byte	'UpaDistT',0,18,226,51,3
	.word	115233
	.byte	10,24
	.word	271
	.byte	11,11,0,10,24
	.word	10253
	.byte	11,5,0,26
	.byte	'x_6',0,18,228,51,16
	.word	115305
	.byte	26
	.byte	'y_6',0,18,229,51,16
	.word	115305
	.byte	10,6
	.word	157
	.byte	11,5,0,26
	.byte	'type_6',0,18,230,51,15
	.word	115340
	.byte	12,18,231,51,9,64,14
	.byte	'x',0
	.word	115314
	.byte	24,2,35,0,14
	.byte	'y',0
	.word	115327
	.byte	24,2,35,24,14
	.byte	'type',0
	.word	115349
	.byte	6,2,35,48,14
	.byte	'time_stamp',0
	.word	16269
	.byte	8,2,35,56,0,26
	.byte	'UpaObjectInfo',0,18,237,51,3
	.word	115365
	.byte	10,24
	.word	10253
	.byte	11,5,0,10,24
	.word	10253
	.byte	11,5,0,10,6
	.word	157
	.byte	11,5,0,10,192,1
	.word	115365
	.byte	11,2,0,26
	.byte	'upa_object_3',0,18,239,51,23
	.word	115478
	.byte	12,18,240,51,9,192,1,14
	.byte	'upa_object',0
	.word	115488
	.byte	192,1,2,35,0,0,26
	.byte	'UpaObjsT',0,18,243,51,3
	.word	115510
	.byte	10,192,1
	.word	115365
	.byte	11,2,0,10,80
	.word	97899
	.byte	11,3,0,26
	.byte	'apa_dist_info_4',0,18,251,51,18
	.word	115567
	.byte	10,128,3
	.word	115510
	.byte	11,1,0,26
	.byte	'upa_objs_2',0,18,252,51,18
	.word	115601
	.byte	10,64
	.word	115233
	.byte	11,1,0,26
	.byte	'upa_dist_2',0,18,253,51,18
	.word	115631
	.byte	26
	.byte	'min_distance_12',0,18,254,51,16
	.word	115203
	.byte	26
	.byte	'ring_time_uint16_array_12',0,18,136,52,16
	.word	115203
	.byte	10,56
	.word	157
	.byte	11,55,0,26
	.byte	'reserved_data_uint8_array_56',0,18,137,52,15
	.word	115720
	.byte	10,20
	.word	271
	.byte	11,9,0,26
	.byte	'distance_10',0,18,164,52,16
	.word	115767
	.byte	26
	.byte	'width_10',0,18,165,52,16
	.word	115767
	.byte	10,10
	.word	157
	.byte	11,9,0,26
	.byte	'peak_10',0,18,166,52,15
	.word	115815
	.byte	12,18,167,52,9,68,14
	.byte	'echo_num',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'distance',0
	.word	115776
	.byte	20,2,35,2,14
	.byte	'width',0
	.word	115797
	.byte	20,2,35,22,14
	.byte	'peak',0
	.word	115824
	.byte	10,2,35,42,14
	.byte	'ring_time',0
	.word	271
	.byte	2,2,35,52,14
	.byte	'valid_fram',0
	.word	157
	.byte	1,2,35,54,14
	.byte	'confidence',0
	.word	157
	.byte	1,2,35,55,14
	.byte	'status_work',0
	.word	157
	.byte	1,2,35,56,14
	.byte	'counter',0
	.word	157
	.byte	1,2,35,57,14
	.byte	'system_time',0
	.word	16269
	.byte	8,2,35,60,0,26
	.byte	'UssRawData',0,18,179,52,3
	.word	115841
	.byte	10,20
	.word	271
	.byte	11,9,0,10,20
	.word	271
	.byte	11,9,0,10,10
	.word	157
	.byte	11,9,0,10,176,6
	.word	115841
	.byte	11,11,0,26
	.byte	'sensor_info_12',0,18,181,52,20
	.word	116078
	.byte	12,18,189,52,9,12,14
	.byte	'diagnosis_info',0
	.word	271
	.byte	2,2,35,0,14
	.byte	'remind_info',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'counter',0
	.word	157
	.byte	1,2,35,3,14
	.byte	'system_time',0
	.word	16269
	.byte	8,2,35,4,0,26
	.byte	'UssStatus',0,18,195,52,3
	.word	116112
	.byte	10,144,1
	.word	116112
	.byte	11,11,0,26
	.byte	'sensor_status_12',0,18,197,52,19
	.word	116221
	.byte	26
	.byte	'NvM_RequestResultType',0,19,153,1,16
	.word	157
	.byte	26
	.byte	'NvM_BlockIdType',0,19,155,1,16
	.word	271
	.byte	15,19,158,1,9,1,16
	.byte	'NVM_BLOCK_NATIVE',0,0,16
	.byte	'NVM_BLOCK_REDUNDANT',0,1,16
	.byte	'NVM_BLOCK_DATASET',0,2,0,26
	.byte	'NvM_BlockManagementType',0,19,163,1,3
	.word	116313
	.byte	12,19,204,2,9,1,13
	.byte	'NvValid',0,1
	.word	157
	.byte	1,7,2,35,0,13
	.byte	'NvChanged',0,1
	.word	157
	.byte	1,6,2,35,0,13
	.byte	'res1',0,1
	.word	157
	.byte	1,5,2,35,0,13
	.byte	'res2',0,1
	.word	157
	.byte	1,4,2,35,0,13
	.byte	'lossRedundant',0,1
	.word	157
	.byte	1,3,2,35,0,13
	.byte	'unused',0,1
	.word	157
	.byte	3,0,2,35,0,0,26
	.byte	'NvM_AttriStruct_Type',0,19,226,2,3
	.word	116414
	.byte	36,19,229,2,9,1,14
	.byte	'AttriByte',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'A',0
	.word	116414
	.byte	1,2,35,0,0,26
	.byte	'NvM_Attri_Type',0,19,233,2,3
	.word	116566
	.byte	26
	.byte	'Dem_DTCSeverityType',0,20,80,15
	.word	157
	.byte	26
	.byte	'Dem_EventMemoryEntryStorageTriggerType',0,20,158,3,15
	.word	157
	.byte	26
	.byte	'Dem_OperationCycleType',0,20,207,3,15
	.word	157
	.byte	12,20,246,3,9,8,14
	.byte	'Number',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'DemEnableConditionRef',0
	.word	2812
	.byte	4,2,35,4,0,26
	.byte	'Dem_EnableConditionGroupType',0,20,251,3,3
	.word	116735
	.byte	26
	.byte	'Dem_UdsDTCType',0,20,200,4,16
	.word	293
	.byte	15,20,160,6,9,1,16
	.byte	'DEM_EVENT_SIGNIFICANCE_OCCURRENCE',0,0,16
	.byte	'DEM_EVENT_SIGNIFICANCE_FAULT',0,1,0,26
	.byte	'Dem_DTCSignificanceType',0,20,164,6,3
	.word	116851
	.byte	15,20,167,6,9,1,16
	.byte	'DEM_AGINGCTR_DOWNCNT',0,0,16
	.byte	'DEM_AGINGCTR_UPCNT',0,1,16
	.byte	'DEM_CURRENT_FDC',0,2,16
	.byte	'DEM_CYCLES_SINCE_FIRST_FAILED',0,3,16
	.byte	'DEM_CYCLES_SINCE_LAST_FAILED',0,4,16
	.byte	'DEM_FAILED_CYCLES',0,5,16
	.byte	'DEM_MAX_FDC_DURING_CURRENT_CYCLE',0,6,16
	.byte	'DEM_MAX_FDC_SINCE_LAST_CLEAR',0,7,16
	.byte	'DEM_OCCCTR',0,8,16
	.byte	'DEM_OVFLIND',0,9,16
	.byte	'DEM_SIGNIFICANCE',0,10,16
	.byte	'DEM_OBD_PASSED_CYCLES_SINCE_LAST_FAILED',0,14,16
	.byte	'DEM_AGED_COUNTER',0,15,0,26
	.byte	'Dem_InternalDataElementType',0,20,187,6,3
	.word	116958
	.byte	9
	.word	157
	.byte	37
	.word	157
	.byte	1,1,35
	.word	117320
	.byte	0,9
	.word	117325
	.byte	26
	.byte	'Dem_DataElementReadFncType',0,20,190,6,9
	.word	117338
	.byte	12,20,196,6,9,2,14
	.byte	'DemDataElementDataSize',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'DemInternalDataElement',0
	.word	116958
	.byte	1,2,35,1,0,26
	.byte	'Dem_InternalDataElementClassType',0,20,202,6,3
	.word	117379
	.byte	12,20,205,6,9,12,14
	.byte	'DemDataElementDataSize',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'DemDataElementReadFnc',0
	.word	117343
	.byte	4,2,35,4,14
	.byte	'DemDataElementUsePort',0
	.word	157
	.byte	1,2,35,8,0,26
	.byte	'Dem_ExternalCSDataElementClassType',0,20,213,6,3
	.word	117492
	.byte	9
	.word	117325
	.byte	6
	.word	117379
	.byte	9
	.word	117642
	.byte	6
	.word	117492
	.byte	9
	.word	117652
	.byte	12,20,217,6,9,8,14
	.byte	'DemInternalDataElementClass',0
	.word	117647
	.byte	4,2,35,0,14
	.byte	'DemExternalCSDataElementClass',0
	.word	117657
	.byte	4,2,35,4,0,26
	.byte	'Dem_DataElementClassType',0,20,223,6,3
	.word	117662
	.byte	12,20,250,6,9,8,14
	.byte	'Number',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'DemJ1939NmNodeRef',0
	.word	2812
	.byte	4,2,35,4,0,26
	.byte	'Dem_J1939NodeType',0,20,255,6,3
	.word	117779
	.byte	26
	.byte	'Dem_PriorityType',0,20,130,7,16
	.word	271
	.byte	15,20,183,7,9,1,16
	.byte	'DEM_EVENT_KIND_BSW',0,0,16
	.byte	'DEM_EVENT_KIND_SWC',0,1,0,26
	.byte	'Dem_EventKindType',0,20,187,7,3
	.word	117882
	.byte	15,20,189,7,9,1,16
	.byte	'DEM_REPORT_AFTER_INIT',0,1,16
	.byte	'DEM_REPORT_BEFORE_INIT',0,2,0,26
	.byte	'Dem_ReportBehaviorType',0,20,193,7,3
	.word	117958
	.byte	15,20,195,7,9,1,16
	.byte	'DEM_DEBOUNCE_FREEZE',0,0,16
	.byte	'DEM_DEBOUNCE_RESET',0,1,0,26
	.byte	'Dem_DebounceBehaviorType',0,20,199,7,3
	.word	118046
	.byte	12,20,204,7,9,20,14
	.byte	'DemDebounceBehavior',0
	.word	118046
	.byte	1,2,35,0,14
	.byte	'DemDebounceCounterDecrementStepSize',0
	.word	271
	.byte	2,2,35,2,14
	.byte	'DemDebounceCounterIncrementStepSize',0
	.word	271
	.byte	2,2,35,4,14
	.byte	'DemDebounceCounterPassedThreshold',0
	.word	16332
	.byte	2,2,35,6,14
	.byte	'DemDebounceCounterFailedThreshold',0
	.word	16332
	.byte	2,2,35,8,14
	.byte	'DemDebounceCounterJumpDown',0
	.word	157
	.byte	1,2,35,10,14
	.byte	'DemDebounceCounterJumpUp',0
	.word	157
	.byte	1,2,35,11,14
	.byte	'DemDebounceCounterJumpDownValue',0
	.word	16332
	.byte	2,2,35,12,14
	.byte	'DemDebounceCounterJumpUpValue',0
	.word	16332
	.byte	2,2,35,14,14
	.byte	'DemDebounceCounterStorage',0
	.word	157
	.byte	1,2,35,16,0,26
	.byte	'Dem_DebounceCounterBasedClassType',0,20,226,7,3
	.word	118130
	.byte	12,20,232,7,9,12,14
	.byte	'DemDebounceBehavior',0
	.word	118046
	.byte	1,2,35,0,14
	.byte	'DemDebounceTimePassedThreshold',0
	.word	293
	.byte	4,2,35,2,14
	.byte	'DemDebounceTimeFailedThreshold',0
	.word	293
	.byte	4,2,35,6,0,26
	.byte	'Dem_DebounceTimeBaseClassType',0,20,240,7,3
	.word	118570
	.byte	9
	.word	16310
	.byte	37
	.word	157
	.byte	1,1,35
	.word	118725
	.byte	0,9
	.word	118730
	.byte	26
	.byte	'Dem_CallbackGetFDCFncType',0,20,243,7,9
	.word	118743
	.byte	6
	.word	118130
	.byte	9
	.word	118783
	.byte	6
	.word	118570
	.byte	9
	.word	118793
	.byte	6
	.word	118748
	.byte	12,20,250,7,9,12,14
	.byte	'DemDebounceCounterBasedClassRef',0
	.word	118788
	.byte	4,2,35,0,14
	.byte	'DemDebounceTimeBaseRef',0
	.word	118798
	.byte	4,2,35,4,14
	.byte	'DemCallbackGetFDCFnc',0
	.word	118803
	.byte	4,2,35,8,0,26
	.byte	'Dem_DebounceAlgorithmClassType',0,20,135,8,3
	.word	118808
	.byte	9
	.word	118730
	.byte	26
	.byte	'Dem_CallbackClearEventAllowedFncType',0,20,138,8,9
	.word	117338
	.byte	15,20,143,8,9,1,16
	.byte	'DEM_NO_STATUS_BYTE_CHANGE',0,0,16
	.byte	'DEM_ONLY_THIS_CYCLE_AND_READINESS',0,1,0,26
	.byte	'Dem_ClearEventAllowedBehaviorType',0,20,147,8,3
	.word	119009
	.byte	12,20,149,8,9,8,14
	.byte	'DemCallbackClearEventAllowedFnc',0
	.word	118963
	.byte	4,2,35,0,14
	.byte	'DemClearEventAllowedBehavior',0
	.word	119009
	.byte	1,2,35,4,0,26
	.byte	'Dem_CallbackClearEventAllowedType',0,20,155,8,3
	.word	119123
	.byte	9
	.word	117325
	.byte	38
	.word	157
	.byte	1,1,9
	.word	119257
	.byte	26
	.byte	'Dem_CallbackEventDataChangedFncType',0,20,158,8,9
	.word	119264
	.byte	37
	.word	157
	.byte	1,1,35
	.word	157
	.byte	35
	.word	157
	.byte	0,9
	.word	119314
	.byte	26
	.byte	'Dem_CallbackEventStatusChangedFncType',0,20,164,8,9
	.word	119332
	.byte	37
	.word	157
	.byte	1,1,35
	.word	157
	.byte	0,9
	.word	119384
	.byte	26
	.byte	'Dem_DemCallbackInitMForEFncType',0,20,171,8,9
	.word	119397
	.byte	15,20,154,9,9,1,16
	.byte	'DEM_UPDATE_RECORD_NO',0,0,16
	.byte	'DEM_UPDATE_RECORD_YES',0,1,0,26
	.byte	'Dem_RecordUpdateType',0,20,158,9,3
	.word	119443
	.byte	12,20,216,9,9,8,14
	.byte	'FirstFailedEvent',0
	.word	271
	.byte	2,2,35,0,14
	.byte	'FirstConfirmedEvent',0
	.word	271
	.byte	2,2,35,2,14
	.byte	'MostRecentFailedEvent',0
	.word	271
	.byte	2,2,35,4,14
	.byte	'MostRecentConfirmedEvent',0
	.word	271
	.byte	2,2,35,6,0,26
	.byte	'Dem_EventHeadType',0,20,226,9,3
	.word	119527
	.byte	12,20,228,9,9,16,14
	.byte	'EventFaultConfCnt',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'EventOccurrence',0
	.word	157
	.byte	1,2,35,1,14
	.byte	'EventDebounceCnt',0
	.word	16332
	.byte	2,2,35,2,14
	.byte	'EventDebounceTimer',0
	.word	293
	.byte	4,2,35,4,14
	.byte	'TimerDirection',0
	.word	157
	.byte	1,2,35,8,14
	.byte	'EventMaxFdcDuringCurrentCycle',0
	.word	16310
	.byte	1,2,35,9,14
	.byte	'EventMaxFdcSinceLastClear',0
	.word	16310
	.byte	1,2,35,10,14
	.byte	'EventCyclesSinceLastFailed',0
	.word	157
	.byte	1,2,35,11,14
	.byte	'EventCyclesSinceFirstFailed',0
	.word	157
	.byte	1,2,35,12,14
	.byte	'EventFailedCyclesSinceLastCleared',0
	.word	157
	.byte	1,2,35,13,0,26
	.byte	'Dem_EventEntryType',0,20,148,10,3
	.word	119681
	.byte	12,20,150,10,9,6,14
	.byte	'DtcStatus',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'DtcLastStatus',0
	.word	157
	.byte	1,2,35,1,14
	.byte	'DtcAgingCounter',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'DtcAgedCounter',0
	.word	157
	.byte	1,2,35,3,14
	.byte	'DataEntryRef',0
	.word	271
	.byte	2,2,35,4,0,26
	.byte	'Dem_DTCEntryType',0,20,164,10,3
	.word	120036
	.byte	10,46
	.word	157
	.byte	11,45,0,10,8
	.word	157
	.byte	11,7,0,12,20,166,10,9,56,14
	.byte	'Used',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'FreezeFrameData',0
	.word	120182
	.byte	46,2,35,1,14
	.byte	'ExtendedData',0
	.word	120191
	.byte	8,2,35,47,0,26
	.byte	'Dem_DTCDataEntryType',0,20,182,10,3
	.word	120200
	.byte	26
	.byte	'Dcm_SecRefType',0,21,67,16
	.word	271
	.byte	26
	.byte	'Dcm_SesRefType',0,21,68,16
	.word	271
	.byte	15,21,142,1,9,1,16
	.byte	'DCM_USE_BLOCK_ID',0,0,16
	.byte	'DCM_USE_DATA_ASYNCH_CLIENT_SERVER',0,1,16
	.byte	'DCM_USE_DATA_ASYNCH_CLIENT_SERVER_ERROR',0,2,16
	.byte	'DCM_USE_DATA_ASYNCH_FNC',0,3,16
	.byte	'DCM_USE_DATA_ASYNCH_FNC_ERROR',0,4,16
	.byte	'DCM_USE_DATA_SENDER_RECEIVER',0,5,16
	.byte	'DCM_USE_DATA_SENDER_RECEIVER_AS_SERVICE',0,6,16
	.byte	'DCM_USE_DATA_SYNCH_CLIENT_SERVER',0,7,16
	.byte	'DCM_USE_DATA_SYNCH_FNC',0,8,16
	.byte	'DCM_USE_ECU_SIGNAL',0,9,0,26
	.byte	'Dcm_DspDataUsePortType',0,21,154,1,3
	.word	120344
	.byte	26
	.byte	'Dcm_MsgItemType',0,21,192,1,15
	.word	157
	.byte	9
	.word	157
	.byte	26
	.byte	'Dcm_MsgType',0,21,194,1,57
	.word	120717
	.byte	26
	.byte	'Dcm_MsgLenType',0,21,196,1,16
	.word	293
	.byte	26
	.byte	'Dcm_BitType',0,21,200,1,15
	.word	157
	.byte	12,21,201,1,9,1,13
	.byte	'reqType',0,1
	.word	157
	.byte	1,7,2,35,0,13
	.byte	'suppressPosResponse',0,1
	.word	157
	.byte	1,6,2,35,0,0,26
	.byte	'Dcm_MsgAddInfoType',0,21,209,1,3
	.word	120788
	.byte	15,21,212,1,9,1,16
	.byte	'DCM_PHYSICAL_TYPE',0,0,16
	.byte	'DCM_FUNCTIONAL_TYPE',0,1,0,26
	.byte	'Dcm_RequestAddrseeType',0,21,216,1,3
	.word	120873
	.byte	26
	.byte	'Dcm_IdContextType',0,21,224,1,15
	.word	157
	.byte	12,21,226,1,9,28,14
	.byte	'reqData',0
	.word	120722
	.byte	4,2,35,0,14
	.byte	'reqDataLen',0
	.word	293
	.byte	4,2,35,4,14
	.byte	'resData',0
	.word	120722
	.byte	4,2,35,8,14
	.byte	'resDataLen',0
	.word	293
	.byte	4,2,35,12,14
	.byte	'CopyDataIndex',0
	.word	293
	.byte	4,2,35,16,14
	.byte	'msgAddInfo',0
	.word	120788
	.byte	1,2,35,20,14
	.byte	'resMaxDataLen',0
	.word	293
	.byte	4,2,35,22,14
	.byte	'idContext',0
	.word	157
	.byte	1,2,35,26,14
	.byte	'RxPduId',0
	.word	157
	.byte	1,2,35,27,0,9
	.word	120981
	.byte	37
	.word	157
	.byte	1,1,35
	.word	157
	.byte	35
	.word	121164
	.byte	35
	.word	117320
	.byte	0,9
	.word	121169
	.byte	26
	.byte	'EcucFunctionServiceFncDef',0,21,248,1,9
	.word	121192
	.byte	9
	.word	157
	.byte	12,21,128,2,9,12,14
	.byte	'DcmDsdSubServiceId',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'DcmDsdSubServiceUsed',0
	.word	157
	.byte	1,2,35,1,14
	.byte	'DcmDsdSubServiceSupportAddress',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'DcmDsdSubServiceSecurityLevelRef',0
	.word	271
	.byte	2,2,35,4,14
	.byte	'DcmDsdSubServiceSessionLevelRef',0
	.word	271
	.byte	2,2,35,6,14
	.byte	'DcmDsdSubServiceFnc',0
	.word	121197
	.byte	4,2,35,8,0,26
	.byte	'Dcm_DsdSubServiceType',0,21,145,2,3
	.word	121237
	.byte	9
	.word	121169
	.byte	6
	.word	121237
	.byte	9
	.word	121490
	.byte	12,21,148,2,9,24,14
	.byte	'DcmDsdSidTabServiceId',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'DcmDsdServiceUsed',0
	.word	157
	.byte	1,2,35,1,14
	.byte	'DcmDsdServiceSupportAddress',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'DcmDsdServiceMinLength',0
	.word	271
	.byte	2,2,35,4,14
	.byte	'DcmDsdSidTabFnc',0
	.word	121197
	.byte	4,2,35,8,14
	.byte	'DcmDsdSidTabSubfuncAvail',0
	.word	157
	.byte	1,2,35,12,14
	.byte	'DcmDsdSidTabSecurityLevelRef',0
	.word	271
	.byte	2,2,35,14,14
	.byte	'DcmDsdSidTabSessionLevelRef',0
	.word	271
	.byte	2,2,35,16,14
	.byte	'NumOfSubService',0
	.word	157
	.byte	1,2,35,18,14
	.byte	'DcmDsdSubService',0
	.word	121495
	.byte	4,2,35,20,0,26
	.byte	'Dcm_DsdServiceType',0,21,173,2,3
	.word	121500
	.byte	6
	.word	121500
	.byte	9
	.word	121847
	.byte	12,21,176,2,9,8,14
	.byte	'DcmDsdSidTabId',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'NumOfService',0
	.word	157
	.byte	1,2,35,1,14
	.byte	'DcmDsdService',0
	.word	121852
	.byte	4,2,35,4,0,26
	.byte	'Dcm_DsdServiceTableType',0,21,183,2,3
	.word	121857
	.byte	12,21,192,2,9,8,14
	.byte	'DcmDslBufferSize',0
	.word	293
	.byte	4,2,35,0,14
	.byte	'DataPtr',0
	.word	766
	.byte	4,2,35,4,0,26
	.byte	'Dcm_DslBufferType',0,21,197,2,3
	.word	121966
	.byte	15,21,209,2,9,1,16
	.byte	'DCM_TYPE1',0,0,16
	.byte	'DCM_TYPE2',0,1,0,26
	.byte	'Dcm_DslProtocolTransType',0,21,213,2,3
	.word	122043
	.byte	12,21,217,2,9,6,14
	.byte	'DcmDslProtocolRxAddrType',0
	.word	120873
	.byte	1,2,35,0,14
	.byte	'DcmDslProtocolRxPduId',0
	.word	271
	.byte	2,2,35,2,14
	.byte	'DcmDslProtocolRxPduRef',0
	.word	157
	.byte	1,2,35,4,0,26
	.byte	'Dcm_DslProtocolRxType',0,21,225,2,3
	.word	122108
	.byte	12,21,228,2,9,4,14
	.byte	'DcmDslTxConfirmationPduId',0
	.word	271
	.byte	2,2,35,0,14
	.byte	'DcmDslProtocolTxPduRef',0
	.word	157
	.byte	1,2,35,2,0,26
	.byte	'Dcm_DslProtocolTxType',0,21,234,2,3
	.word	122243
	.byte	12,21,238,2,9,4,14
	.byte	'DcmDslPeriodicTxConfirmationPduId',0
	.word	271
	.byte	2,2,35,0,14
	.byte	'DcmDslPeriodicTxPduRef',0
	.word	157
	.byte	1,2,35,2,0,26
	.byte	'Dcm_DslPeriodicConnectionType',0,21,244,2,3
	.word	122348
	.byte	6
	.word	122348
	.byte	9
	.word	122469
	.byte	12,21,248,2,9,8,14
	.byte	'NumOfPeriodicConnection',0
	.word	271
	.byte	2,2,35,0,14
	.byte	'DcmDslPeriodicConnection',0
	.word	122474
	.byte	4,2,35,4,0,26
	.byte	'Dcm_DslPeriodicTransmissionType',0,21,252,2,3
	.word	122479
	.byte	6
	.word	122108
	.byte	9
	.word	122594
	.byte	6
	.word	122243
	.byte	9
	.word	122604
	.byte	12,21,255,2,9,16,14
	.byte	'DcmDslProtocolRxTesterSourceAddr',0
	.word	271
	.byte	2,2,35,0,14
	.byte	'DcmDslProtocolComMChannelRef',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'NumOfRxPdu',0
	.word	271
	.byte	2,2,35,4,14
	.byte	'DcmDslProtocolRx',0
	.word	122599
	.byte	4,2,35,8,14
	.byte	'DcmDslProtocolTx',0
	.word	122609
	.byte	4,2,35,12,0,26
	.byte	'Dcm_DslMainConnectionType',0,21,140,3,3
	.word	122614
	.byte	6
	.word	122614
	.byte	9
	.word	122808
	.byte	6
	.word	122479
	.byte	9
	.word	122818
	.byte	12,21,143,3,9,8,14
	.byte	'DcmDslMainConnection',0
	.word	122813
	.byte	4,2,35,0,14
	.byte	'DcmDslPeriodicTransmission',0
	.word	122823
	.byte	4,2,35,4,0,26
	.byte	'Dcm_DslConnectionType',0,21,148,3,3
	.word	122828
	.byte	15,21,187,3,9,1,16
	.byte	'DCM_OPAQUE',0,0,16
	.byte	'DCM_BIG_ENDIAN',0,1,16
	.byte	'DCM_LITTLE_ENDIAN',0,2,0,26
	.byte	'Dcm_DataEndiannessType',0,21,192,3,3
	.word	122932
	.byte	15,21,194,3,9,1,16
	.byte	'DCM_BOOLEAN',0,0,16
	.byte	'DCM_SINT16',0,1,16
	.byte	'DCM_SINT16_N',0,2,16
	.byte	'DCM_SINT32',0,3,16
	.byte	'DCM_SINT32_N',0,4,16
	.byte	'DCM_SINT8',0,5,16
	.byte	'DCM_SINT8_N',0,6,16
	.byte	'DCM_UINT16',0,7,16
	.byte	'DCM_UINT16_N',0,8,16
	.byte	'DCM_UINT32',0,9,16
	.byte	'DCM_UINT32_N',0,10,16
	.byte	'DCM_UINT8',0,11,16
	.byte	'DCM_UINT8_DYN',0,12,16
	.byte	'DCM_UINT8_N',0,13,16
	.byte	'DCM_VARIABLE_LENGTH',0,14,0,26
	.byte	'Dcm_DataType',0,21,211,3,3
	.word	123021
	.byte	15,21,251,3,9,1,16
	.byte	'DCM_NO_BOOT',0,0,16
	.byte	'DCM_OEM_BOOT',0,1,16
	.byte	'DCM_OEM_BOOT_RESPAPP',0,2,16
	.byte	'DCM_SYS_BOOT',0,3,16
	.byte	'DCM_SYS_BOOT_RESPAPP',0,4,0,26
	.byte	'Dcm_DspSessionForBootType',0,21,130,4,3
	.word	123266
	.byte	12,21,133,4,9,8,14
	.byte	'DcmDspSessionBoot',0
	.word	123266
	.byte	1,2,35,0,14
	.byte	'DcmDspSessionLevel',0
	.word	157
	.byte	1,2,35,1,14
	.byte	'DcmDspSessionMask',0
	.word	271
	.byte	2,2,35,2,14
	.byte	'DcmDspSessionP2ServerMax',0
	.word	271
	.byte	2,2,35,4,14
	.byte	'DcmDspSessionP2StarServerMax',0
	.word	271
	.byte	2,2,35,6,0,26
	.byte	'Dcm_DspSessionRowType',0,21,144,4,3
	.word	123398
	.byte	15,21,165,5,9,1,16
	.byte	'DCM_USE_ASYNCH_CLIENT_SERVER',0,0,16
	.byte	'DCM_USE_ASYNCH_FNC',0,1,0,26
	.byte	'Dcm_DspSecurityUsePortType',0,21,169,5,3
	.word	123590
	.byte	6
	.word	157
	.byte	9
	.word	123685
	.byte	37
	.word	157
	.byte	1,1,35
	.word	123690
	.byte	35
	.word	157
	.byte	35
	.word	117320
	.byte	35
	.word	117320
	.byte	0,9
	.word	123695
	.byte	26
	.byte	'EcucFncGetSeedDefA',0,21,174,5,9
	.word	123723
	.byte	37
	.word	157
	.byte	1,1,35
	.word	157
	.byte	35
	.word	117320
	.byte	35
	.word	117320
	.byte	0,9
	.word	123756
	.byte	26
	.byte	'EcucFncGetSeedDefB',0,21,182,5,9
	.word	123779
	.byte	37
	.word	157
	.byte	1,1,35
	.word	117320
	.byte	35
	.word	157
	.byte	35
	.word	117320
	.byte	0,9
	.word	123812
	.byte	26
	.byte	'EcucFncCompareKeyDef',0,21,189,5,9
	.word	123835
	.byte	37
	.word	157
	.byte	1,1,35
	.word	157
	.byte	35
	.word	117320
	.byte	0,9
	.word	123870
	.byte	26
	.byte	'EcucFncGetAttemptCounterDef',0,21,197,5,9
	.word	123888
	.byte	26
	.byte	'EcucFncSetAttemptCounterDef',0,21,203,5,9
	.word	119332
	.byte	12,21,209,5,9,44,14
	.byte	'DcmDspSecurityADRSize',0
	.word	293
	.byte	4,2,35,0,14
	.byte	'DcmDspSecurityAttemptCounterEnabled',0
	.word	157
	.byte	1,2,35,4,14
	.byte	'DcmDspSecurityCompareKeyFnc',0
	.word	123840
	.byte	4,2,35,8,14
	.byte	'DcmDspSecurityDelayTime',0
	.word	293
	.byte	4,2,35,12,14
	.byte	'DcmDspSecurityDelayTimeOnBoot',0
	.word	293
	.byte	4,2,35,16,14
	.byte	'DcmDspSecurityGetAttemptCounterFnc',0
	.word	123893
	.byte	4,2,35,20,14
	.byte	'DcmDspSecurityGetSeedFncIndex',0
	.word	157
	.byte	1,2,35,24,14
	.byte	'DcmDspSecurityKeySize',0
	.word	293
	.byte	4,2,35,26,14
	.byte	'DcmDspSecurityLevel',0
	.word	157
	.byte	1,2,35,30,14
	.byte	'DcmDspSecurityNumAttDelay',0
	.word	157
	.byte	1,2,35,31,14
	.byte	'DcmDspSecuritySeedSize',0
	.word	293
	.byte	4,2,35,32,14
	.byte	'DcmDspSecuritySetAttemptCounterFnc',0
	.word	123930
	.byte	4,2,35,36,14
	.byte	'DcmDspSecurityUsePort',0
	.word	123590
	.byte	1,2,35,40,14
	.byte	'DcmDspSecurityMask',0
	.word	271
	.byte	2,2,35,42,0,26
	.byte	'Dcm_DspSecurityRowType',0,21,239,5,3
	.word	123967
	.byte	9
	.word	123812
	.byte	9
	.word	123870
	.byte	9
	.word	119314
	.byte	26
	.byte	'EcucSwitchFncCommunicationControl',0,21,152,6,9
	.word	119397
	.byte	12,21,157,6,9,8,14
	.byte	'DcmDspComControlAllChannelUsed',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'DcmDspAllComMChannelRef',0
	.word	157
	.byte	1,2,35,1,14
	.byte	'SwitchCommunicationControlAllChannelFnc',0
	.word	124519
	.byte	4,2,35,4,0,26
	.byte	'Dcm_DspComControlAllChannelType',0,21,164,6,3
	.word	124562
	.byte	9
	.word	119384
	.byte	12,21,174,6,9,8,14
	.byte	'DcmDspComControlSpecificChannelUsed',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'DcmDspSubnetNumber',0
	.word	157
	.byte	1,2,35,1,14
	.byte	'DcmDspComMChannelRef',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'SwitchCommunicationControlSpecificChannelFnc',0
	.word	124519
	.byte	4,2,35,4,0,26
	.byte	'Dcm_DspComControlSpecificChannelType',0,21,183,6,3
	.word	124737
	.byte	12,21,186,6,9,8,14
	.byte	'DcmDspComControlSubNodeId',0
	.word	271
	.byte	2,2,35,0,14
	.byte	'DcmDspComControlSubNodeUsed',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'DcmDspComControlSubNodeComMChannelRef',0
	.word	157
	.byte	1,2,35,3,14
	.byte	'SwitchCommunicationControlSubNodeFnc',0
	.word	124519
	.byte	4,2,35,4,0,26
	.byte	'Dcm_DspComControlSubNodeType',0,21,195,6,3
	.word	124947
	.byte	26
	.byte	'EcucFncRoutineRequestResultDefA',0,21,167,7,9
	.word	123779
	.byte	9
	.word	271
	.byte	37
	.word	157
	.byte	1,1,35
	.word	157
	.byte	35
	.word	117320
	.byte	35
	.word	125198
	.byte	35
	.word	117320
	.byte	0,9
	.word	125203
	.byte	26
	.byte	'EcucFncRoutineRequestResultDefB',0,21,174,7,9
	.word	125231
	.byte	37
	.word	157
	.byte	1,1,35
	.word	117320
	.byte	35
	.word	157
	.byte	35
	.word	117320
	.byte	35
	.word	117320
	.byte	0,9
	.word	125277
	.byte	26
	.byte	'EcucFncRoutineStartStopDefA',0,21,184,7,9
	.word	125305
	.byte	37
	.word	157
	.byte	1,1,35
	.word	117320
	.byte	35
	.word	157
	.byte	35
	.word	117320
	.byte	35
	.word	125198
	.byte	35
	.word	117320
	.byte	0,9
	.word	125347
	.byte	26
	.byte	'EcucFncRoutineStartStopDefB',0,21,193,7,9
	.word	125380
	.byte	37
	.word	157
	.byte	1,1,35
	.word	117320
	.byte	35
	.word	157
	.byte	35
	.word	117320
	.byte	35
	.word	271
	.byte	35
	.word	117320
	.byte	0,9
	.word	125422
	.byte	26
	.byte	'EcucFncRoutineStartStopDefC',0,21,203,7,9
	.word	125455
	.byte	26
	.byte	'EcucFncRoutineStartStopDefD',0,21,213,7,9
	.word	125380
	.byte	12,21,222,7,9,12,14
	.byte	'DcmDspRoutineSignalEndianness',0
	.word	122932
	.byte	1,2,35,0,14
	.byte	'DcmDspRoutineSignalLength',0
	.word	293
	.byte	4,2,35,2,14
	.byte	'DcmDspRoutineSignalPos',0
	.word	293
	.byte	4,2,35,6,14
	.byte	'DcmDspRoutineSignalType',0
	.word	123021
	.byte	1,2,35,10,0,26
	.byte	'Dcm_DspRoutineSignalType',0,21,240,7,3
	.word	125534
	.byte	12,21,243,7,9,6,14
	.byte	'DcmDspCommonAuthorizationSupportAddress',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'DcmDspCommonAuthorizationSecurityLevelRef',0
	.word	271
	.byte	2,2,35,2,14
	.byte	'DcmDspCommonAuthorizationSessionRef',0
	.word	271
	.byte	2,2,35,4,0,26
	.byte	'Dcm_DspCommonAuthorizationType',0,21,254,7,3
	.word	125714
	.byte	6
	.word	125714
	.byte	9
	.word	125906
	.byte	12,21,129,8,9,20,14
	.byte	'DcmDspRequestRoutineResultsFncIndex',0
	.word	271
	.byte	2,2,35,0,14
	.byte	'DcmDspRequestRoutineResultsCommonAuthorizationRef',0
	.word	125911
	.byte	4,2,35,4,14
	.byte	'DcmDspRequestRoutineResultsOut',0
	.word	125534
	.byte	12,2,35,8,0,26
	.byte	'Dcm_DspRequestRoutineResultsType',0,21,141,8,3
	.word	125916
	.byte	12,21,144,8,9,32,14
	.byte	'DcmDspStopRoutineFncIndex',0
	.word	271
	.byte	2,2,35,0,14
	.byte	'DcmDspStopRoutineCommonAuthorizationRef',0
	.word	125911
	.byte	4,2,35,4,14
	.byte	'DcmDspStopRoutineIn',0
	.word	125534
	.byte	12,2,35,8,14
	.byte	'DcmDspStopRoutineOut',0
	.word	125534
	.byte	12,2,35,20,0,26
	.byte	'Dcm_DspStopRoutineType',0,21,157,8,3
	.word	126109
	.byte	12,21,160,8,9,32,14
	.byte	'DcmDspStartRoutineFncIndex',0
	.word	271
	.byte	2,2,35,0,14
	.byte	'DcmDspStartRoutineCommonAuthorizationRef',0
	.word	125911
	.byte	4,2,35,4,14
	.byte	'DcmDspStartRoutineIn',0
	.word	125534
	.byte	12,2,35,8,14
	.byte	'DcmDspStartRoutineOut',0
	.word	125534
	.byte	12,2,35,20,0,26
	.byte	'Dcm_DspStartRoutineType',0,21,173,8,3
	.word	126291
	.byte	6
	.word	126291
	.byte	9
	.word	126478
	.byte	6
	.word	126109
	.byte	9
	.word	126488
	.byte	6
	.word	125916
	.byte	9
	.word	126498
	.byte	12,21,175,8,9,16,14
	.byte	'DcmDspRoutineIdentifier',0
	.word	271
	.byte	2,2,35,0,14
	.byte	'DcmDspRoutineUsePort',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'DcmDspRoutineUsed',0
	.word	157
	.byte	1,2,35,3,14
	.byte	'DcmDspStartRoutine',0
	.word	126483
	.byte	4,2,35,4,14
	.byte	'DcmDspStopRoutine',0
	.word	126493
	.byte	4,2,35,8,14
	.byte	'DcmDspRequestRoutineResults',0
	.word	126503
	.byte	4,2,35,12,0,26
	.byte	'Dcm_DspRoutineIdInfoType',0,21,188,8,3
	.word	126508
	.byte	15,21,238,8,9,1,16
	.byte	'DCM_CONTROLMASK_EXTERNAL',0,0,16
	.byte	'DCM_CONTROLMASK_INTERNAL',0,1,16
	.byte	'DCM_CONTROLMASK_NO',0,2,0,26
	.byte	'Dcm_DspDidControlMaskType',0,21,243,8,3
	.word	126731
	.byte	12,21,246,8,9,1,14
	.byte	'DcmDspDidControlMaskBitPosition',0
	.word	157
	.byte	1,2,35,0,0,26
	.byte	'Dcm_DspDidControlEnableMaskType',0,21,250,8,3
	.word	126848
	.byte	12,21,153,9,9,6,14
	.byte	'DcmDspDidReadSupportAddress',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'DcmDspDidReadSecurityLevelRef',0
	.word	271
	.byte	2,2,35,2,14
	.byte	'DcmDspDidReadSessionRef',0
	.word	271
	.byte	2,2,35,4,0,26
	.byte	'Dcm_DspDidReadType',0,21,164,9,3
	.word	126937
	.byte	12,21,167,9,9,6,14
	.byte	'DcmDspDidWriteSupportAddress',0
	.word	157
	.byte	1,2,35,0,14
	.byte	'DcmDspDidWriteSecurityLevelRef',0
	.word	271
	.byte	2,2,35,2,14
	.byte	'DcmDspDidWriteSessionRef',0
	.word	271
	.byte	2,2,35,4,0,26
	.byte	'Dcm_DspDidWriteType',0,21,178,9,3
	.word	127081
	.byte	6
	.word	126937
	.byte	9
	.word	127229
	.byte	6
	.word	127081
	.byte	9
	.word	127239
	.byte	12,21,184,9,9,8,14
	.byte	'DcmDspDidRead',0
	.word	127234
	.byte	4,2,35,0,14
	.byte	'DcmDspDidWrite',0
	.word	127244
	.byte	4,2,35,4,0,26
	.byte	'Dcm_DspDidInfoType',0,21,203,9,3
	.word	127249
	.byte	26
	.byte	'EcucFncDataServicesConditionCheckReadDefA',0,21,216,9,9
	.word	123888
	.byte	26
	.byte	'EcucFncDataServicesConditionCheckReadDefB',0,21,222,9,9
	.word	117338
	.byte	26
	.byte	'EcucFncDataServicesReadDataDefA',0,21,240,9,9
	.word	123888
	.byte	26
	.byte	'EcucFncDataServicesReadDataDefB',0,21,246,9,9
	.word	123779
	.byte	26
	.byte	'EcucFncDataServicesReadDataDefC',0,21,253,9,9
	.word	117338
	.byte	37
	.word	157
	.byte	1,1,35
	.word	157
	.byte	35
	.word	125198
	.byte	0,9
	.word	127556
	.byte	26
	.byte	'EcucFncDataServicesReadDataLengthDefA',0,21,133,10,9
	.word	127574
	.byte	37
	.word	157
	.byte	1,1,35
	.word	125198
	.byte	0,9
	.word	127626
	.byte	26
	.byte	'EcucFncDataServicesReadDataLengthDefB',0,21,140,10,9
	.word	127639
	.byte	26
	.byte	'EcucFncDataServicesWriteDataDefA',0,21,148,10,9
	.word	123835
	.byte	37
	.word	157
	.byte	1,1,35
	.word	117320
	.byte	35
	.word	271
	.byte	35
	.word	157
	.byte	35
	.word	117320
	.byte	0,9
	.word	127733
	.byte	26
	.byte	'EcucFncDataServicesWriteDataDefB',0,21,157,10,9
	.word	127761
	.byte	37
	.word	157
	.byte	1,1,35
	.word	117320
	.byte	35
	.word	117320
	.byte	0,9
	.word	127808
	.byte	26
	.byte	'EcucFncDataServicesWriteDataDefC',0,21,166,10,9
	.word	127826
	.byte	37
	.word	157
	.byte	1,1,35
	.word	117320
	.byte	35
	.word	271
	.byte	35
	.word	117320
	.byte	0,9
	.word	127873
	.byte	26
	.byte	'EcucFncDataServicesWriteDataDefD',0,21,173,10,9
	.word	127896
	.byte	12,21,165,11,9,20,14
	.byte	'DcmDspDataEndianness',0
	.word	122932
	.byte	1,2,35,0,14
	.byte	'DcmDspDataConditionCheckReadFncIndex',0
	.word	271
	.byte	2,2,35,2,14
	.byte	'DcmDspDataConditionCheckReadFncUsed',0
	.word	157
	.byte	1,2,35,4,14
	.byte	'DcmDspDataReadDataLengthFncIndex',0
	.word	271
	.byte	2,2,35,6,14
	.byte	'DcmDspDataReadFncIndex',0
	.word	271
	.byte	2,2,35,8,14
	.byte	'DcmDspDataSize',0
	.word	271
	.byte	2,2,35,10,14
	.byte	'DcmDspDataType',0
	.word	123021
	.byte	1,2,35,12,14
	.byte	'DcmDspDataUsePort',0
	.word	120344
	.byte	1,2,35,13,14
	.byte	'DcmDspDataWriteFncIndex',0
	.word	271
	.byte	2,2,35,14,14
	.byte	'DcmDspDataBlockIdRef',0
	.word	271
	.byte	2,2,35,16,0,26
	.byte	'Dcm_DspDataTableType',0,21,220,11,3
	.word	127943
	.byte	12,21,139,12,9,4,14
	.byte	'DcmDspDidDataPos',0
	.word	271
	.byte	2,2,35,0,14
	.byte	'DcmDspDidDataRef',0
	.word	271
	.byte	2,2,35,2,0,26
	.byte	'Dcm_DspDidSignalType',0,21,145,12,3
	.word	128313
	.byte	6
	.word	128313
	.byte	9
	.word	128402
	.byte	12,21,149,12,9,20,14
	.byte	'DcmDspDidIdentifier',0
	.word	271
	.byte	2,2,35,0,14
	.byte	'DcmDspDidUsed',0
	.word	157
	.byte	1,2,35,2,14
	.byte	'DcmDspDidInfoRef',0
	.word	127249
	.byte	8,2,35,4,14
	.byte	'NumOfDidSignal',0
	.word	271
	.byte	2,2,35,12,14
	.byte	'DcmDspDidSignal',0
	.word	128407
	.byte	4,2,35,16,0,26
	.byte	'Dcm_DspDidTableType',0,21,168,12,3
	.word	128412
	.byte	26
	.byte	'Fls_17_Dmu_AddressType',0,6,234,5,16
	.word	293
	.byte	26
	.byte	'Fls_17_Dmu_LengthType',0,6,238,5,16
	.word	293
	.byte	12,6,241,5,9,1,13
	.byte	'Reserved1',0,1
	.word	157
	.byte	1,7,2,35,0,13
	.byte	'Write',0,1
	.word	157
	.byte	1,6,2,35,0,13
	.byte	'Erase',0,1
	.word	157
	.byte	1,5,2,35,0,13
	.byte	'Read',0,1
	.word	157
	.byte	1,4,2,35,0,13
	.byte	'Compare',0,1
	.word	157
	.byte	1,3,2,35,0,13
	.byte	'Reserved2',0,1
	.word	157
	.byte	3,0,2,35,0,0,26
	.byte	'Fls_17_Dmu_JobStartType',0,6,254,5,3
	.word	128638
	.byte	26
	.byte	'Fls_17_Dmu_Job_Type',0,6,132,6,15
	.word	157
	.byte	12,6,146,6,9,44,14
	.byte	'FlsReadAddress',0
	.word	293
	.byte	4,2,35,0,14
	.byte	'FlsWriteAddress',0
	.word	293
	.byte	4,2,35,4,14
	.byte	'FlsEraseAddress',0
	.word	293
	.byte	4,2,35,8,14
	.byte	'FlsReadLength',0
	.word	293
	.byte	4,2,35,12,14
	.byte	'FlsWriteLength',0
	.word	293
	.byte	4,2,35,16,14
	.byte	'FlsReadBufferPtr',0
	.word	766
	.byte	4,2,35,20,14
	.byte	'FlsWriteBufferPtr',0
	.word	2812
	.byte	4,2,35,24,14
	.byte	'FlsJobResult',0
	.word	2954
	.byte	1,2,35,28,14
	.byte	'FlsMode',0
	.word	3258
	.byte	1,2,35,29,14
	.byte	'NotifCaller',0
	.word	157
	.byte	1,2,35,30,14
	.byte	'JobStarted',0
	.word	128638
	.byte	1,2,35,31,14
	.byte	'FlsEraseNumSectors',0
	.word	271
	.byte	2,2,35,32,14
	.byte	'FlsEraseNumSecPerCmd',0
	.word	157
	.byte	1,2,35,34,14
	.byte	'FlsJobType',0
	.word	157
	.byte	1,2,35,35,14
	.byte	'FlsPver',0
	.word	157
	.byte	1,2,35,36,14
	.byte	'FlsEver',0
	.word	157
	.byte	1,2,35,37,14
	.byte	'FlsTimeoutErr',0
	.word	157
	.byte	1,2,35,38,14
	.byte	'FlsEccErrorPageAddress',0
	.word	293
	.byte	4,2,35,40,0,26
	.byte	'Fls_17_Dmu_StateType',0,6,204,6,3
	.word	128818
	.byte	26
	.byte	'Fls_17_Dmu_NotifFunctionPtrType',0,6,210,6,16
	.word	9396
	.byte	26
	.byte	'Fee_PageType',0,3,169,1,17
	.word	271
	.byte	15,3,188,1,9,1,16
	.byte	'FEE_QS_PROG_STATE_ERASE_STARTED',0,0,16
	.byte	'FEE_QS_PROG_STATE_DESTROY',0,1,16
	.byte	'FEE_QS_PROG_STATE_ERASE_COMPLETE',0,2,16
	.byte	'FEE_QS_PROG_STATE_WRITE_COMPLETE',0,3,16
	.byte	'FEE_QS_PROG_STATE_WRITE_STARTED',0,4,16
	.byte	'FEE_QS_START_ERASE',0,5,16
	.byte	'FEE_QS_START_BCC_WRITE',0,6,16
	.byte	'FEE_QS_START_BLOCK_WRITE',0,7,16
	.byte	'FEE_QS_ERASE_COMPLETE',0,8,16
	.byte	'FEE_QS_DIRTY_ERASE',0,9,16
	.byte	'FEE_QS_WRITE_COMPLETE',0,10,16
	.byte	'FEE_QS_DIRTY_WRITE',0,11,16
	.byte	'FEE_QS_ERASE_STARTED',0,12,16
	.byte	'FEE_QS_WRITE_STARTED',0,13,16
	.byte	'FEE_QS_DESTROY',0,14,16
	.byte	'FEE_QS_INVALID',0,25,0,26
	.byte	'Fee_QsBlock_StateType',0,3,206,1,3
	.word	129339
	.byte	26
	.byte	'Fee_BlockType',0,3,231,1,3
	.word	2068
	.byte	26
	.byte	'Fee_CacheStatusType',0,3,131,2,3
	.word	2349
	.byte	26
	.byte	'Fee_CacheType',0,3,151,2,3
	.word	2494
	.byte	26
	.byte	'Fee_PendReqBufType',0,3,172,2,3
	.word	2817
	.byte	26
	.byte	'Fee_StatusFlagsType',0,3,205,2,3
	.word	3084
	.byte	26
	.byte	'Fee_SectorStatusType',0,3,220,2,3
	.word	1106
	.byte	26
	.byte	'Fee_SectorInfoType',0,3,130,3,3
	.word	1164
	.byte	26
	.byte	'Fee_LastWrittenBlkInfoType',0,3,143,3,3
	.word	2649
	.byte	26
	.byte	'Fee_GcBlkInfoType',0,3,156,3,3
	.word	2726
	.byte	26
	.byte	'Fee_StateDataType',0,3,178,5,3
	.word	3300
	.byte	26
	.byte	'Fee_GCConfigType',0,3,199,5,3
	.word	9435
	.byte	26
	.byte	'Fee_ConfigType',0,3,248,5,3
	.word	9547
	.byte	10,36
	.word	293
	.byte	11,8,0
.L3105:
	.byte	6
	.word	130116
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L1215:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,54,15,39,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,11,0,0,0,6,38,0,73,19,0,0,7,46,1,3,8,32
	.byte	13,58,15,59,15,57,15,73,19,54,15,39,12,0,0,8,11,1,0,0,9,15,0,73,19,0,0,10,1,1,11,15,73,19,0,0,11,33,0
	.byte	47,15,0,0,12,19,1,58,15,59,15,57,15,11,15,0,0,13,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,14,13,0,3,8
	.byte	73,19,11,15,56,9,0,0,15,4,1,58,15,59,15,57,15,11,15,0,0,16,40,0,3,8,28,13,0,0,17,46,1,3,8,73,19,54,15
	.byte	39,12,63,12,60,12,0,0,18,5,0,3,8,73,19,0,0,19,46,1,49,19,0,0,20,5,0,49,19,0,0,21,46,1,3,8,58,15,59,15
	.byte	57,15,73,19,54,15,39,12,63,12,60,12,0,0,22,46,0,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,23,46
	.byte	1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,24,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63
	.byte	12,60,12,0,0,25,21,0,54,15,39,12,0,0,26,22,0,3,8,58,15,59,15,57,15,73,19,0,0,27,29,1,49,19,0,0,28,11,0
	.byte	49,19,0,0,29,11,1,49,19,0,0,30,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,31,21,0,54,15,0,0,32,19
	.byte	1,3,8,58,15,59,15,57,15,11,15,0,0,33,59,0,3,8,0,0,34,21,1,54,15,39,12,0,0,35,5,0,73,19,0,0,36,23,1,58
	.byte	15,59,15,57,15,11,15,0,0,37,21,1,73,19,54,15,39,12,0,0,38,21,0,73,19,54,15,39,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L1216:
	.word	.L4096-.L4095
.L4095:
	.half	3
	.word	.L4098-.L4097
.L4097:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm',0,0
	.byte	'Os_Pl_Inl.h',0,1,0,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0
	.byte	'Fee.h',0,2,0,0
	.byte	'MemIf_Types.h',0,3,0,0
	.byte	'Mcal_Wrapper.h',0,4,0,0
	.byte	'Fls_17_Dmu.h',0,5,0,0
	.byte	'Std_Types.h',0,6,0,0
	.byte	'Platform_Types.h',0,6,0,0
	.byte	'Mcal_Compiler.h',0,7,0,0
	.byte	'ComStack_Types_Cfg.h',0,8,0,0
	.byte	'ComStack_Types.h',0,4,0,0
	.byte	'Os_BasicTypes.h',0,1,0,0
	.byte	'Os_Pl_Types.h',0,1,0,0
	.byte	'Os_AsrTypes.h',0,9,0,0
	.byte	'Os_OsekTypes.h',0,9,0,0
	.byte	'Os_Pl_HwDef.h',0,1,0,0
	.byte	'Os_Types.h',0,9,0,0
	.byte	'Rte_Type.h',0,10,0,0
	.byte	'NvM_Types.h',0,11,0,0
	.byte	'Dem_Types.h',0,12,0,0
	.byte	'Dcm_Types.h',0,13,0,0,0
.L4098:
.L4096:
	.sdecl	'.debug_info',debug,cluster('Fee_GetVersionInfo')
	.sect	'.debug_info'
.L1217:
	.word	240
	.half	3
	.word	.L1218
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1220,.L1219
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_GetVersionInfo',0,1,217,30,6,1,1,1
	.word	.L1110,.L1573,.L1109
	.byte	4
	.byte	'VersionInfoPtr',0,1,217,30,53
	.word	.L1574,.L1575
	.byte	5
	.word	.L1110,.L1573
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_GetVersionInfo')
	.sect	'.debug_abbrev'
.L1218:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_GetVersionInfo')
	.sect	'.debug_line'
.L1219:
	.word	.L4100-.L4099
.L4099:
	.half	3
	.word	.L4102-.L4101
.L4101:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4102:
	.byte	5,58,7,0,5,2
	.word	.L1110
	.byte	3,239,30,1,5,56,9
	.half	.L4103-.L1110
	.byte	1,5,58,9
	.half	.L4104-.L4103
	.byte	3,2,1,5,56,9
	.half	.L4105-.L4104
	.byte	1,5,7,9
	.half	.L4106-.L4105
	.byte	3,3,1,5,64,9
	.half	.L4107-.L4106
	.byte	3,127,1,5,7,9
	.half	.L4108-.L4107
	.byte	3,4,1,5,64,9
	.half	.L4109-.L4108
	.byte	3,127,1,5,7,9
	.half	.L4110-.L4109
	.byte	3,4,1,5,64,9
	.half	.L4111-.L4110
	.byte	3,127,1,5,1,9
	.half	.L4112-.L4111
	.byte	3,6,1,7,9
	.half	.L1221-.L4112
	.byte	0,1,1
.L4100:
	.sdecl	'.debug_ranges',debug,cluster('Fee_GetVersionInfo')
	.sect	'.debug_ranges'
.L1220:
	.word	-1,.L1110,0,.L1221-.L1110,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_Init')
	.sect	'.debug_info'
.L1222:
	.word	3214
	.half	3
	.word	.L1223
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1225,.L1224
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_Init',0,1,214,9,6,1,1,1
	.word	.L1074,.L1576,.L1073
	.byte	4
	.byte	'ConfigPtr',0,1,214,9,44
	.word	.L1577,.L1578
	.byte	5
	.word	.L1074,.L1576
	.byte	6
	.byte	'StateDataPtr',0,1,217,9,23
	.word	.L1579,.L1580
	.byte	6
	.byte	'GcBlkInfoPtr',0,1,218,9,23
	.word	.L1581,.L1582
	.byte	6
	.byte	'BlockPtr',0,1,219,9,23
	.word	.L1583,.L1584
	.byte	6
	.byte	'SectorInfoPtr',0,1,220,9,23
	.word	.L1585,.L1586
	.byte	6
	.byte	'LastBlkInfoPtr',0,1,221,9,32
	.word	.L1587,.L1588
	.byte	6
	.byte	'Index',0,1,223,9,10
	.word	.L1589,.L1590
	.byte	6
	.byte	'EndAddr',0,1,225,9,10
	.word	.L1589,.L1591
	.byte	6
	.byte	'DFlashStatus',0,1,226,9,10
	.word	.L1592,.L1593
	.byte	6
	.byte	'ReturnVal',0,1,227,9,10
	.word	.L1592,.L1594
	.byte	7
	.word	.L1595,.L1596,.L1597
	.byte	8
	.word	.L1598,.L1599
	.byte	8
	.word	.L1600,.L1601
	.byte	9
	.word	.L1602,.L1603
	.byte	6
	.byte	'StateDataPtr',0,1,240,103,24
	.word	.L1579,.L1606
	.byte	6
	.byte	'SectorInfoPtr',0,1,241,103,24
	.word	.L1585,.L1607
	.byte	6
	.byte	'BuffPtr',0,1,242,103,30
	.word	.L1608,.L1609
	.byte	6
	.byte	'SrcAddr',0,1,243,103,24
	.word	.L1589,.L1610
	.byte	6
	.byte	'StateCount1',0,1,244,103,24
	.word	.L1589,.L1611
	.byte	6
	.byte	'StateCount2',0,1,245,103,24
	.word	.L1589,.L1612
	.byte	6
	.byte	'RetVal',0,1,246,103,24
	.word	.L1592,.L1613
	.byte	6
	.byte	'ReturnVal',0,1,247,103,24
	.word	.L1592,.L1614
	.byte	7
	.word	.L1615,.L1596,.L1597
	.byte	9
	.word	.L1616,.L1617
	.byte	6
	.byte	'StateDataPtr',0,1,250,100,22
	.word	.L1579,.L1621
	.byte	6
	.byte	'BufferPtr',0,1,251,100,28
	.word	.L1622,.L1623
	.byte	6
	.byte	'FlsRetVal',0,1,252,100,22
	.word	.L1592,.L1624
	.byte	6
	.byte	'State',0,1,253,100,22
	.word	.L1592,.L1625
	.byte	6
	.byte	'ReturnVal',0,1,254,100,22
	.word	.L1592,.L1626
	.byte	7
	.word	.L1627,.L1596,.L1628
	.byte	9
	.word	.L1629,.L1630
	.byte	6
	.byte	'StateDataPtr',0,1,217,99,28
	.word	.L1631,.L1632
	.byte	6
	.byte	'BufferPtr',0,1,218,99,29
	.word	.L1608,.L1633
	.byte	6
	.byte	'BufferPtr2',0,1,219,99,29
	.word	.L1608,.L1634
	.byte	6
	.byte	'Data',0,1,220,99,22
	.word	.L1589,.L1635
	.byte	6
	.byte	'Index',0,1,221,99,22
	.word	.L1589,.L1636
	.byte	6
	.byte	'Length',0,1,222,99,22
	.word	.L1589,.L1637
	.byte	6
	.byte	'ReturnVal',0,1,223,99,22
	.word	.L1592,.L1638
	.byte	7
	.word	.L1650,.L1651,.L1652
	.byte	8
	.word	.L1653,.L1654
	.byte	8
	.word	.L1655,.L1656
	.byte	9
	.word	.L1657,.L1658
	.byte	6
	.byte	'Index',0,1,213,100,22
	.word	.L1589,.L1660
	.byte	6
	.byte	'Crc32',0,1,214,100,22
	.word	.L1589,.L1661
	.byte	0,0,7
	.word	.L1650,.L1659,.L22
	.byte	8
	.word	.L1653,.L1654
	.byte	8
	.word	.L1655,.L1656
	.byte	0,0,0,7
	.word	.L1639,.L1628,.L1597
	.byte	9
	.word	.L1640,.L1641
	.byte	6
	.byte	'StateDataPtr',0,1,135,99,22
	.word	.L1579,.L1643
	.byte	6
	.byte	'BufferPtr',0,1,136,99,22
	.word	.L1644,.L1645
	.byte	6
	.byte	'Marker',0,1,137,99,22
	.word	.L1646,.L1647
	.byte	6
	.byte	'FlsRetVal',0,1,138,99,22
	.word	.L1592,.L1648
	.byte	6
	.byte	'ReturnVal',0,1,139,99,22
	.word	.L1592,.L1649
	.byte	0,0,10
	.word	.L1627,.L20,.L33
	.byte	10
	.word	.L1639,.L1642,.L37
	.byte	0,0,10
	.word	.L1615,.L1618,.L44
	.byte	10
	.word	.L1615,.L1619,.L1620
	.byte	7
	.word	.L1662,.L17,.L50
	.byte	8
	.word	.L1663,.L1664
	.byte	8
	.word	.L1665,.L1666
	.byte	11
	.word	.L1667,.L17,.L50
	.byte	6
	.byte	'StateDataPtr',0,1,188,97,24
	.word	.L1579,.L1668
	.byte	6
	.byte	'RetVal',0,1,189,97,24
	.word	.L1592,.L1669
	.byte	6
	.byte	'NonZeroWlCount',0,1,190,97,24
	.word	.L1589,.L1670
	.byte	6
	.byte	'SectorState',0,1,191,97,24
	.word	.L1592,.L1671
	.byte	6
	.byte	'UnerasableWlCount',0,1,192,97,24
	.word	.L1592,.L1672
	.byte	7
	.word	.L1673,.L49,.L58
	.byte	8
	.word	.L1674,.L1675
	.byte	11
	.word	.L1676,.L49,.L58
	.byte	6
	.byte	'UnerasableWlAddr1',0,1,152,98,24
	.word	.L1589,.L1677
	.byte	6
	.byte	'UnerasableWlAddr2',0,1,153,98,24
	.word	.L1589,.L1678
	.byte	6
	.byte	'NonZeroWlAddr',0,1,154,98,24
	.word	.L1679,.L1680
	.byte	6
	.byte	'StatePageAddr',0,1,155,98,24
	.word	.L1589,.L1681
	.byte	6
	.byte	'UnerasableWlCount',0,1,156,98,24
	.word	.L1592,.L1682
	.byte	6
	.byte	'SectorState',0,1,157,98,24
	.word	.L1592,.L1683
	.byte	7
	.word	.L1684,.L1685,.L1686
	.byte	8
	.word	.L1687,.L1688
	.byte	11
	.word	.L1689,.L1685,.L1686
	.byte	7
	.word	.L1690,.L1685,.L1686
	.byte	8
	.word	.L1691,.L1692
	.byte	12
	.word	.L1693,.L1685,.L1686
	.byte	0,0,0,7
	.word	.L1684,.L1694,.L1695
	.byte	8
	.word	.L1687,.L1688
	.byte	11
	.word	.L1689,.L1694,.L1695
	.byte	7
	.word	.L1690,.L1694,.L56
	.byte	8
	.word	.L1691,.L1692
	.byte	12
	.word	.L1693,.L1694,.L56
	.byte	0,0,0,7
	.word	.L1684,.L1696,.L1697
	.byte	8
	.word	.L1687,.L1688
	.byte	11
	.word	.L1689,.L1696,.L1697
	.byte	7
	.word	.L1690,.L1696,.L1698
	.byte	8
	.word	.L1691,.L1692
	.byte	12
	.word	.L1693,.L1696,.L1698
	.byte	0,0,0,7
	.word	.L1684,.L1699,.L1700
	.byte	8
	.word	.L1687,.L1688
	.byte	11
	.word	.L1689,.L1699,.L1700
	.byte	7
	.word	.L1690,.L1699,.L1700
	.byte	8
	.word	.L1691,.L1692
	.byte	12
	.word	.L1693,.L1699,.L1700
	.byte	0,0,0,7
	.word	.L1684,.L63,.L1701
	.byte	8
	.word	.L1687,.L1688
	.byte	11
	.word	.L1689,.L63,.L1701
	.byte	7
	.word	.L1690,.L63,.L1702
	.byte	8
	.word	.L1691,.L1692
	.byte	12
	.word	.L1693,.L63,.L1702
	.byte	0,0,0,7
	.word	.L1684,.L66,.L1703
	.byte	8
	.word	.L1687,.L1688
	.byte	11
	.word	.L1689,.L66,.L1703
	.byte	7
	.word	.L1690,.L66,.L1704
	.byte	8
	.word	.L1691,.L1692
	.byte	12
	.word	.L1693,.L66,.L1704
	.byte	0,0,0,7
	.word	.L1684,.L1705,.L1706
	.byte	8
	.word	.L1687,.L1688
	.byte	11
	.word	.L1689,.L1705,.L1706
	.byte	7
	.word	.L1690,.L1705,.L61
	.byte	8
	.word	.L1691,.L1692
	.byte	12
	.word	.L1693,.L1705,.L61
	.byte	0,0,0,0,0,7
	.word	.L1707,.L1708,.L69
	.byte	8
	.word	.L1709,.L1710
	.byte	11
	.word	.L1711,.L1708,.L69
	.byte	6
	.byte	'index',0,1,179,91,10
	.word	.L1589,.L1712
	.byte	6
	.byte	'SrcPtr',0,1,180,91,17
	.word	.L1608,.L1713
	.byte	6
	.byte	'StateDataPtr',0,1,181,91,23
	.word	.L1579,.L1714
	.byte	6
	.byte	'ReturnValueFls',0,1,182,91,23
	.word	.L1592,.L1715
	.byte	6
	.byte	'Length',0,1,183,91,10
	.word	.L1589,.L1716
	.byte	7
	.word	.L1684,.L1717,.L1718
	.byte	8
	.word	.L1687,.L1688
	.byte	11
	.word	.L1689,.L1717,.L1718
	.byte	7
	.word	.L1690,.L1717,.L1719
	.byte	8
	.word	.L1691,.L1692
	.byte	12
	.word	.L1693,.L1717,.L1719
	.byte	0,0,0,0,0,0,0,0,0,7
	.word	.L1595,.L1604,.L1605
	.byte	8
	.word	.L1598,.L1599
	.byte	8
	.word	.L1600,.L1601
	.byte	0,7
	.word	.L1720,.L1721,.L92
	.byte	11
	.word	.L1722,.L1721,.L92
	.byte	6
	.byte	'StateDataPtr',0,1,232,102,28
	.word	.L1631,.L1723
	.byte	6
	.byte	'S0State',0,1,233,102,22
	.word	.L1592,.L1724
	.byte	6
	.byte	'S1State',0,1,234,102,22
	.word	.L1592,.L1725
	.byte	6
	.byte	'S0Used',0,1,235,102,22
	.word	.L1592,.L1726
	.byte	6
	.byte	'S1Used',0,1,236,102,22
	.word	.L1592,.L1727
	.byte	6
	.byte	'RetVal',0,1,237,102,22
	.word	.L1592,.L1728
	.byte	6
	.byte	'S0Empty',0,1,238,102,22
	.word	.L1592,.L1729
	.byte	6
	.byte	'S1Empty',0,1,239,102,22
	.word	.L1592,.L1730
	.byte	7
	.word	.L1731,.L1732,.L86
	.byte	8
	.word	.L1733,.L1734
	.byte	8
	.word	.L1735,.L1736
	.byte	9
	.word	.L1737,.L1738
	.byte	6
	.byte	'RetVal',0,1,212,32,11
	.word	.L1592,.L1740
	.byte	0,0,7
	.word	.L1731,.L86,.L89
	.byte	8
	.word	.L1733,.L1734
	.byte	8
	.word	.L1735,.L1736
	.byte	9
	.word	.L1737,.L1741
	.byte	6
	.byte	'RetVal',0,1,212,32,11
	.word	.L1592,.L1743
	.byte	0,0,7
	.word	.L1731,.L100,.L1739
	.byte	8
	.word	.L1733,.L1734
	.byte	8
	.word	.L1735,.L1736
	.byte	0,7
	.word	.L1731,.L1739,.L1742
	.byte	8
	.word	.L1733,.L1734
	.byte	8
	.word	.L1735,.L1736
	.byte	0,0,0,7
	.word	.L1744,.L1745,.L1746
	.byte	8
	.word	.L1747,.L1748
	.byte	11
	.word	.L1749,.L1745,.L1746
	.byte	6
	.byte	'StateDataPtr',0,1,186,101,23
	.word	.L1579,.L1750
	.byte	6
	.byte	'SectorInfoPtr0',0,1,187,101,23
	.word	.L1585,.L1751
	.byte	6
	.byte	'SectorInfoPtr1',0,1,188,101,23
	.word	.L1585,.L1752
	.byte	6
	.byte	'S0StateCnt',0,1,189,101,23
	.word	.L1589,.L1753
	.byte	6
	.byte	'S1StateCnt',0,1,190,101,23
	.word	.L1589,.L1754
	.byte	6
	.byte	'S0Used',0,1,195,101,23
	.word	.L1592,.L1755
	.byte	6
	.byte	'S1Used',0,1,196,101,23
	.word	.L1592,.L1756
	.byte	6
	.byte	'S0Dirty',0,1,197,101,23
	.word	.L1592,.L1757
	.byte	6
	.byte	'S1Dirty',0,1,198,101,23
	.word	.L1592,.L1758
	.byte	0,0,7
	.word	.L1759,.L124,.L1760
	.byte	9
	.word	.L1761,.L1762
	.byte	6
	.byte	'FeeDataStructSize',0,1,204,20,23
	.word	.L1589,.L1764
	.byte	6
	.byte	'Index',0,1,205,20,23
	.word	.L1589,.L1765
	.byte	6
	.byte	'Crc32',0,1,206,20,23
	.word	.L1589,.L1766
	.byte	6
	.byte	'FeeDataStructPtr',0,1,207,20,23
	.word	.L1622,.L1767
	.byte	0,0,10
	.word	.L1759,.L1763,.L2
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_Init')
	.sect	'.debug_abbrev'
.L1223:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,85,6,0,0
	.byte	10,29,0,49,16,17,1,18,1,0,0,11,11,1,49,16,17,1,18,1,0,0,12,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_Init')
	.sect	'.debug_line'
.L1224:
	.word	.L4114-.L4113
.L4113:
	.half	3
	.word	.L4116-.L4115
.L4115:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4116:
	.byte	5,6,7,0,5,2
	.word	.L1074
	.byte	3,213,9,1,5,3,9
	.half	.L3106-.L1074
	.byte	3,22,1,5,21,7,9
	.half	.L4117-.L3106
	.byte	3,11,1,5,11,9
	.half	.L4118-.L4117
	.byte	1,5,21,7,9
	.half	.L4119-.L4118
	.byte	3,1,1,5,41,9
	.half	.L4120-.L4119
	.byte	1,5,5,7,9
	.half	.L4121-.L4120
	.byte	3,2,1,5,16,9
	.half	.L4122-.L4121
	.byte	1,5,30,9
	.half	.L4123-.L4122
	.byte	3,1,1,5,11,9
	.half	.L3109-.L4123
	.byte	3,8,1,5,27,9
	.half	.L3110-.L3109
	.byte	3,4,1,5,21,9
	.half	.L3112-.L3110
	.byte	3,13,1,5,46,9
	.half	.L5-.L3112
	.byte	3,114,1,5,25,9
	.half	.L3114-.L5
	.byte	3,1,1,5,27,9
	.half	.L4124-.L3114
	.byte	3,1,1,5,29,9
	.half	.L4125-.L4124
	.byte	3,1,1,5,30,9
	.half	.L4126-.L4125
	.byte	3,1,1,5,33,9
	.half	.L4127-.L4126
	.byte	3,6,1,5,29,9
	.half	.L4128-.L4127
	.byte	3,1,1,5,12,9
	.half	.L3115-.L4128
	.byte	3,2,1,5,53,9
	.half	.L4129-.L3115
	.byte	3,1,1,5,33,7,9
	.half	.L4130-.L4129
	.byte	3,1,1,5,45,9
	.half	.L4131-.L4130
	.byte	3,2,1,5,40,9
	.half	.L4132-.L4131
	.byte	3,1,1,5,41,9
	.half	.L4133-.L4132
	.byte	3,1,1,5,31,9
	.half	.L4134-.L4133
	.byte	3,3,1,5,29,9
	.half	.L4135-.L4134
	.byte	3,1,1,5,24,9
	.half	.L4136-.L4135
	.byte	3,1,1,5,30,9
	.half	.L4137-.L4136
	.byte	3,1,1,5,48,9
	.half	.L3117-.L4137
	.byte	3,4,1,5,36,9
	.half	.L3111-.L3117
	.byte	3,126,1,5,61,9
	.half	.L4138-.L3111
	.byte	1,5,38,9
	.half	.L7-.L4138
	.byte	3,2,1,5,46,9
	.half	.L3119-.L7
	.byte	1,5,68,9
	.half	.L3120-.L3119
	.byte	3,126,1,5,61,9
	.half	.L6-.L3120
	.byte	1,5,37,7,9
	.half	.L3121-.L6
	.byte	3,4,1,5,32,9
	.half	.L4139-.L3121
	.byte	3,2,1,5,30,9
	.half	.L4140-.L4139
	.byte	1,5,34,9
	.half	.L4141-.L4140
	.byte	3,1,1,5,32,9
	.half	.L4142-.L4141
	.byte	3,1,1,5,33,9
	.half	.L4143-.L4142
	.byte	3,1,1,5,37,9
	.half	.L4144-.L4143
	.byte	3,1,1,5,36,9
	.half	.L4145-.L4144
	.byte	3,1,1,5,34,9
	.half	.L4146-.L4145
	.byte	3,8,1,5,38,9
	.half	.L4147-.L4146
	.byte	3,1,1,5,33,9
	.half	.L4148-.L4147
	.byte	3,1,1,5,36,9
	.half	.L4149-.L4148
	.byte	3,1,1,5,38,9
	.half	.L4150-.L4149
	.byte	3,3,1,5,36,9
	.half	.L4151-.L4150
	.byte	1,5,44,9
	.half	.L4152-.L4151
	.byte	3,1,1,5,26,9
	.half	.L4153-.L4152
	.byte	3,3,1,5,33,9
	.half	.L4154-.L4153
	.byte	3,1,1,5,31,9
	.half	.L4155-.L4154
	.byte	3,1,1,5,34,9
	.half	.L4156-.L4155
	.byte	3,1,1,5,39,9
	.half	.L4157-.L4156
	.byte	3,7,1,5,37,9
	.half	.L4158-.L4157
	.byte	3,1,1,5,40,9
	.half	.L4159-.L4158
	.byte	3,2,1,5,38,9
	.half	.L4160-.L4159
	.byte	1,5,33,9
	.half	.L4161-.L4160
	.byte	3,3,1,5,35,9
	.half	.L3107-.L4161
	.byte	3,1,1,5,37,9
	.half	.L4162-.L3107
	.byte	3,3,1,5,35,9
	.half	.L3123-.L4162
	.byte	1,5,38,9
	.half	.L4163-.L3123
	.byte	3,1,1,5,42,9
	.half	.L4164-.L4163
	.byte	3,1,1,5,39,9
	.half	.L4165-.L4164
	.byte	3,1,1,5,33,9
	.half	.L4166-.L4165
	.byte	3,2,1,5,54,9
	.half	.L4167-.L4166
	.byte	1,5,49,9
	.half	.L4168-.L4167
	.byte	3,1,1,5,64,9
	.half	.L4169-.L4168
	.byte	3,1,1,5,49,9
	.half	.L4170-.L4169
	.byte	3,1,1,5,30,9
	.half	.L4171-.L4170
	.byte	3,3,1,5,32,9
	.half	.L4172-.L4171
	.byte	3,1,1,5,30,9
	.half	.L4173-.L4172
	.byte	3,1,1,5,36,9
	.half	.L4174-.L4173
	.byte	3,1,1,9
	.half	.L4175-.L4174
	.byte	3,1,1,9
	.half	.L4176-.L4175
	.byte	3,1,1,9
	.half	.L4177-.L4176
	.byte	3,1,1,5,39,9
	.half	.L4178-.L4177
	.byte	3,1,1,5,37,9
	.half	.L4179-.L4178
	.byte	3,2,1,5,40,9
	.half	.L4180-.L4179
	.byte	3,1,1,5,36,9
	.half	.L4181-.L4180
	.byte	3,6,1,5,47,9
	.half	.L3125-.L4181
	.byte	3,126,1,5,20,9
	.half	.L9-.L3125
	.byte	3,2,1,5,34,9
	.half	.L3127-.L9
	.byte	1,5,39,9
	.half	.L4182-.L3127
	.byte	3,1,1,5,46,9
	.half	.L4183-.L4182
	.byte	3,1,1,5,48,9
	.half	.L4184-.L4183
	.byte	3,1,1,9
	.half	.L4185-.L4184
	.byte	3,1,1,5,27,9
	.half	.L3128-.L4185
	.byte	3,1,1,5,41,9
	.half	.L4186-.L3128
	.byte	1,5,42,9
	.half	.L3129-.L4186
	.byte	3,2,1,5,43,9
	.half	.L4187-.L3129
	.byte	3,1,1,9
	.half	.L4188-.L4187
	.byte	3,1,1,5,45,9
	.half	.L4189-.L4188
	.byte	3,1,1,9
	.half	.L4190-.L4189
	.byte	3,1,1,5,54,9
	.half	.L3130-.L4190
	.byte	3,115,1,5,47,9
	.half	.L8-.L3130
	.byte	1,5,35,7,9
	.half	.L4191-.L8
	.byte	3,15,1,5,33,9
	.half	.L3132-.L4191
	.byte	1,5,34,9
	.half	.L4192-.L3132
	.byte	3,1,1,9
	.half	.L4193-.L4192
	.byte	3,1,1,5,30,9
	.half	.L4194-.L4193
	.byte	3,1,1,5,46,9
	.half	.L4195-.L4194
	.byte	3,1,1,9
	.half	.L4196-.L4195
	.byte	3,1,1,5,44,9
	.half	.L4197-.L4196
	.byte	3,1,1,5,66,9
	.half	.L4198-.L4197
	.byte	3,15,1,5,14,9
	.half	.L1596-.L4198
	.byte	3,154,217,0,1,5,25,9
	.half	.L1628-.L1596
	.byte	3,143,127,1,5,47,9
	.half	.L1597-.L1628
	.byte	3,204,167,127,1,5,10,9
	.half	.L11-.L1597
	.byte	3,2,1,5,16,9
	.half	.L4199-.L11
	.byte	1,5,50,9
	.half	.L3136-.L4199
	.byte	3,8,1,5,40,9
	.half	.L4200-.L3136
	.byte	1,5,47,9
	.half	.L1604-.L4200
	.byte	3,240,220,0,1,5,18,9
	.half	.L12-.L1604
	.byte	3,127,1,5,28,9
	.half	.L4201-.L12
	.byte	1,5,47,9
	.half	.L3139-.L4201
	.byte	3,1,1,5,25,9
	.half	.L3141-.L3139
	.byte	3,2,1,5,59,9
	.half	.L3142-.L3141
	.byte	3,9,1,5,37,9
	.half	.L4202-.L3142
	.byte	3,1,1,5,3,9
	.half	.L3145-.L4202
	.byte	3,7,1,5,10,7,9
	.half	.L4203-.L3145
	.byte	3,7,1,5,9,9
	.half	.L4204-.L4203
	.byte	1,5,45,7,9
	.half	.L4205-.L4204
	.byte	1,5,56,9
	.half	.L4206-.L4205
	.byte	1,5,18,7,9
	.half	.L4207-.L4206
	.byte	3,1,1,5,29,9
	.half	.L4208-.L4207
	.byte	1,5,55,7,9
	.half	.L4209-.L4208
	.byte	1,5,68,9
	.half	.L4210-.L4209
	.byte	1,5,47,7,9
	.half	.L14-.L4210
	.byte	3,9,1,5,44,9
	.half	.L3146-.L14
	.byte	3,3,1,5,12,9
	.half	.L4211-.L3146
	.byte	3,1,1,5,7,9
	.half	.L4212-.L4211
	.byte	3,127,1,5,18,7,9
	.half	.L1618-.L4212
	.byte	3,219,124,1,5,28,9
	.half	.L4213-.L1618
	.byte	1,5,53,9
	.half	.L3149-.L4213
	.byte	3,4,1,5,39,9
	.half	.L4214-.L3149
	.byte	3,4,1,5,17,9
	.half	.L4215-.L4214
	.byte	3,1,1,5,20,9
	.half	.L3151-.L4215
	.byte	3,3,1,5,7,9
	.half	.L3153-.L3151
	.byte	3,3,1,5,20,7,9
	.half	.L4216-.L3153
	.byte	3,1,1,5,10,9
	.half	.L4217-.L4216
	.byte	1,5,44,7,9
	.half	.L4218-.L4217
	.byte	1,5,41,9
	.half	.L4219-.L4218
	.byte	1,5,18,7,9
	.half	.L20-.L4219
	.byte	3,209,126,1,5,28,9
	.half	.L4220-.L20
	.byte	1,5,13,9
	.half	.L3155-.L4220
	.byte	3,2,1,5,43,9
	.half	.L3152-.L3155
	.byte	3,3,1,5,46,9
	.half	.L3156-.L3152
	.byte	3,4,1,5,7,9
	.half	.L3157-.L3156
	.byte	3,5,1,5,18,9
	.half	.L3154-.L3157
	.byte	1,5,8,9
	.half	.L4221-.L3154
	.byte	3,1,1,5,20,9
	.half	.L4222-.L4221
	.byte	1,5,3,9
	.half	.L4223-.L4222
	.byte	3,127,1,5,15,7,9
	.half	.L4224-.L4223
	.byte	3,11,1,5,71,9
	.half	.L3158-.L4224
	.byte	1,5,10,9
	.half	.L25-.L3158
	.byte	3,6,1,5,24,9
	.half	.L4225-.L25
	.byte	1,5,7,9
	.half	.L4226-.L4225
	.byte	1,5,19,7,9
	.half	.L4227-.L4226
	.byte	3,2,1,5,9,9
	.half	.L4228-.L4227
	.byte	3,1,1,5,78,9
	.half	.L26-.L4228
	.byte	3,119,1,5,71,9
	.half	.L24-.L26
	.byte	1,5,5,7,9
	.half	.L27-.L24
	.byte	3,15,1,5,49,7,9
	.half	.L4229-.L27
	.byte	3,6,1,5,17,9
	.half	.L4230-.L4229
	.byte	3,7,1,5,44,9
	.half	.L4231-.L4230
	.byte	1,5,12,9
	.half	.L30-.L4231
	.byte	3,2,1,5,26,9
	.half	.L4232-.L30
	.byte	1,5,39,9
	.half	.L4233-.L4232
	.byte	1,5,9,9
	.half	.L4234-.L4233
	.byte	1,5,21,7,9
	.half	.L4235-.L4234
	.byte	3,2,1,5,11,9
	.half	.L4236-.L4235
	.byte	3,1,1,5,18,9
	.half	.L31-.L4236
	.byte	3,3,1,5,51,9
	.half	.L4237-.L31
	.byte	3,120,1,5,44,9
	.half	.L29-.L4237
	.byte	1,5,5,7,9
	.half	.L28-.L29
	.byte	3,12,1,5,49,7,9
	.half	.L4238-.L28
	.byte	3,4,1,5,56,9
	.half	.L3159-.L4238
	.byte	3,9,1,5,9,9
	.half	.L1651-.L3159
	.byte	3,41,1,5,13,9
	.half	.L3160-.L1651
	.byte	3,2,1,5,40,9
	.half	.L3161-.L3160
	.byte	1,5,13,9
	.half	.L35-.L3161
	.byte	3,2,1,5,47,9
	.half	.L4239-.L35
	.byte	3,126,1,5,40,9
	.half	.L34-.L4239
	.byte	1,5,19,7,9
	.half	.L1652-.L34
	.byte	3,88,1,5,7,9
	.half	.L1659-.L1652
	.byte	1,5,19,7,9
	.half	.L22-.L1659
	.byte	3,2,1,5,3,9
	.half	.L33-.L22
	.byte	3,231,0,1,5,13,7,9
	.half	.L1642-.L33
	.byte	3,242,125,1,5,18,9
	.half	.L3163-.L1642
	.byte	3,1,1,5,28,9
	.half	.L4240-.L3163
	.byte	1,5,29,9
	.half	.L3150-.L4240
	.byte	3,5,1,5,57,9
	.half	.L3164-.L3150
	.byte	3,8,1,5,78,9
	.half	.L4241-.L3164
	.byte	1,5,20,9
	.half	.L4242-.L4241
	.byte	3,3,1,5,3,9
	.half	.L3162-.L4242
	.byte	3,4,1,5,17,7,9
	.half	.L4243-.L3162
	.byte	3,8,1,9
	.half	.L4244-.L4243
	.byte	3,4,1,5,15,9
	.half	.L3167-.L4244
	.byte	3,2,1,5,8,9
	.half	.L4245-.L3167
	.byte	1,5,43,7,9
	.half	.L4246-.L4245
	.byte	1,5,47,9
	.half	.L4247-.L4246
	.byte	1,5,17,7,9
	.half	.L4248-.L4247
	.byte	3,2,1,5,33,9
	.half	.L4249-.L4248
	.byte	1,5,18,9
	.half	.L39-.L4249
	.byte	3,6,1,5,11,9
	.half	.L3166-.L39
	.byte	1,5,25,9
	.half	.L4250-.L3166
	.byte	3,1,1,5,22,9
	.half	.L4251-.L4250
	.byte	1,5,19,7,9
	.half	.L38-.L4251
	.byte	3,2,1,5,3,9
	.half	.L41-.L38
	.byte	3,4,1,5,14,9
	.half	.L37-.L41
	.byte	3,236,4,1,5,50,7,9
	.half	.L4252-.L37
	.byte	1,5,32,7,9
	.half	.L44-.L4252
	.byte	3,4,1,5,38,9
	.half	.L3168-.L44
	.byte	3,1,1,5,11,9
	.half	.L3170-.L3168
	.byte	3,2,1,5,34,7,9
	.half	.L4253-.L3170
	.byte	3,2,1,5,41,9
	.half	.L1619-.L4253
	.byte	1,5,47,9
	.half	.L4254-.L1619
	.byte	3,2,1,5,34,9
	.half	.L4255-.L4254
	.byte	3,127,1,5,48,9
	.half	.L4256-.L4255
	.byte	3,3,1,5,75,9
	.half	.L4257-.L4256
	.byte	1,5,46,9
	.half	.L4258-.L4257
	.byte	3,127,1,5,39,9
	.half	.L4259-.L4258
	.byte	3,3,1,5,64,9
	.half	.L4260-.L4259
	.byte	3,4,1,5,55,9
	.half	.L3169-.L4260
	.byte	1,5,64,9
	.half	.L4261-.L3169
	.byte	3,1,1,5,55,9
	.half	.L4262-.L4261
	.byte	1,5,42,9
	.half	.L4263-.L4262
	.byte	3,1,1,5,5,9
	.half	.L4264-.L4263
	.byte	3,96,1,5,45,9
	.half	.L13-.L4264
	.byte	3,47,1,5,10,9
	.half	.L17-.L13
	.byte	3,243,120,1,5,18,9
	.half	.L3143-.L17
	.byte	3,1,1,5,28,9
	.half	.L4265-.L3143
	.byte	1,5,33,9
	.half	.L3173-.L4265
	.byte	3,1,1,5,30,9
	.half	.L3174-.L3173
	.byte	3,1,1,5,36,9
	.half	.L3175-.L3174
	.byte	3,1,1,5,20,9
	.half	.L3176-.L3175
	.byte	3,4,1,5,3,9
	.half	.L4266-.L3176
	.byte	1,5,12,7,9
	.half	.L4267-.L4266
	.byte	3,3,1,5,5,9
	.half	.L4268-.L4267
	.byte	3,4,1,5,37,7,9
	.half	.L4269-.L4268
	.byte	3,4,1,5,46,9
	.half	.L4270-.L4269
	.byte	1,5,54,9
	.half	.L49-.L4270
	.byte	3,203,0,1,9
	.half	.L3177-.L49
	.byte	3,1,1,5,36,9
	.half	.L3178-.L3177
	.byte	3,1,1,5,50,9
	.half	.L3179-.L3178
	.byte	3,1,1,5,20,9
	.half	.L4271-.L3179
	.byte	1,5,50,9
	.half	.L4272-.L4271
	.byte	3,1,1,5,20,9
	.half	.L4273-.L4272
	.byte	1,5,50,9
	.half	.L4274-.L4273
	.byte	3,1,1,5,20,9
	.half	.L4275-.L4274
	.byte	1,5,32,9
	.half	.L4276-.L4275
	.byte	3,1,1,5,30,9
	.half	.L3180-.L4276
	.byte	3,1,1,5,7,9
	.half	.L3181-.L3180
	.byte	3,4,1,5,26,7,9
	.half	.L4277-.L3181
	.byte	3,1,1,5,22,7,9
	.half	.L51-.L4277
	.byte	3,1,1,5,8,9
	.half	.L4278-.L51
	.byte	1,5,27,7,9
	.half	.L4279-.L4278
	.byte	3,1,1,5,23,7,9
	.half	.L52-.L4279
	.byte	3,3,1,5,5,9
	.half	.L4280-.L52
	.byte	1,5,18,7,9
	.half	.L1685-.L4280
	.byte	3,229,190,127,1,5,74,9
	.half	.L1686-.L1685
	.byte	3,158,193,0,1,5,56,9
	.half	.L57-.L1686
	.byte	3,3,1,5,18,9
	.half	.L1694-.L57
	.byte	3,223,190,127,1,5,41,9
	.half	.L56-.L1694
	.byte	3,27,1,5,39,9
	.half	.L1695-.L56
	.byte	3,133,193,0,1,5,49,9
	.half	.L4281-.L1695
	.byte	3,126,1,5,74,9
	.half	.L4282-.L4281
	.byte	1,7,9
	.half	.L4283-.L4282
	.byte	1,5,23,9
	.half	.L55-.L4283
	.byte	3,11,1,5,7,9
	.half	.L4284-.L55
	.byte	1,5,73,7,9
	.half	.L4285-.L4284
	.byte	3,2,1,5,18,9
	.half	.L1696-.L4285
	.byte	3,213,190,127,1,5,41,9
	.half	.L1698-.L1696
	.byte	3,27,1,5,39,9
	.half	.L1697-.L1698
	.byte	3,144,193,0,1,5,9,9
	.half	.L4286-.L1697
	.byte	3,1,1,5,18,7,9
	.half	.L1699-.L4286
	.byte	3,212,190,127,1,5,9,9
	.half	.L1700-.L1699
	.byte	3,172,193,0,1,5,25,9
	.half	.L59-.L1700
	.byte	3,12,1,5,9,9
	.half	.L4287-.L59
	.byte	1,5,43,7,9
	.half	.L4288-.L4287
	.byte	3,3,1,5,77,9
	.half	.L4289-.L4288
	.byte	3,1,1,5,58,9
	.half	.L64-.L4289
	.byte	3,3,1,5,18,9
	.half	.L63-.L64
	.byte	3,193,190,127,1,5,41,9
	.half	.L1702-.L63
	.byte	3,27,1,5,43,9
	.half	.L1701-.L1702
	.byte	3,163,193,0,1,5,52,9
	.half	.L4290-.L1701
	.byte	3,126,1,5,77,9
	.half	.L4291-.L4290
	.byte	1,7,9
	.half	.L4292-.L4291
	.byte	1,5,58,9
	.half	.L67-.L4292
	.byte	3,13,1,5,18,9
	.half	.L66-.L67
	.byte	3,183,190,127,1,5,41,9
	.half	.L1704-.L66
	.byte	3,27,1,5,43,9
	.half	.L1703-.L1704
	.byte	3,173,193,0,1,5,52,9
	.half	.L4293-.L1703
	.byte	3,126,1,5,77,9
	.half	.L4294-.L4293
	.byte	1,5,5,7,9
	.half	.L4295-.L4294
	.byte	3,94,1,5,69,9
	.half	.L53-.L4295
	.byte	3,46,1,5,18,9
	.half	.L1705-.L53
	.byte	3,174,190,127,1,5,41,9
	.half	.L61-.L1705
	.byte	3,27,1,5,35,9
	.half	.L1706-.L61
	.byte	3,183,193,0,1,5,24,9
	.half	.L58-.L1706
	.byte	3,243,126,1,5,55,9
	.half	.L4296-.L58
	.byte	1,5,53,9
	.half	.L4297-.L4296
	.byte	1,5,7,9
	.half	.L4298-.L4297
	.byte	1,5,18,7,9
	.half	.L1708-.L4298
	.byte	3,221,121,1,5,28,9
	.half	.L4299-.L1708
	.byte	1,5,34,9
	.half	.L3182-.L4299
	.byte	3,4,1,5,10,9
	.half	.L3140-.L3182
	.byte	3,1,1,5,57,9
	.half	.L3184-.L3140
	.byte	3,7,1,5,43,9
	.half	.L4300-.L3184
	.byte	3,1,1,5,44,9
	.half	.L3185-.L4300
	.byte	3,1,1,5,3,9
	.half	.L3183-.L3185
	.byte	3,4,1,5,11,7,9
	.half	.L4301-.L3183
	.byte	3,9,1,5,61,9
	.half	.L3186-.L4301
	.byte	3,1,1,5,13,9
	.half	.L72-.L3186
	.byte	3,3,1,5,12,9
	.half	.L4302-.L72
	.byte	3,1,1,5,10,9
	.half	.L71-.L4302
	.byte	3,101,1,5,11,9
	.half	.L3187-.L71
	.byte	3,23,1,5,32,7,9
	.half	.L4303-.L3187
	.byte	1,5,40,9
	.half	.L3188-.L4303
	.byte	1,5,10,7,9
	.half	.L73-.L3188
	.byte	3,105,1,5,5,9
	.half	.L3189-.L73
	.byte	3,30,1,5,41,7,9
	.half	.L70-.L3189
	.byte	3,3,1,5,18,9
	.half	.L1717-.L70
	.byte	3,184,69,1,5,41,9
	.half	.L1719-.L1717
	.byte	3,27,1,5,37,9
	.half	.L1718-.L1719
	.byte	3,172,58,1,5,26,9
	.half	.L69-.L1718
	.byte	3,134,6,1,5,7,9
	.half	.L4304-.L69
	.byte	1,5,13,7,9
	.half	.L4305-.L4304
	.byte	3,2,1,5,65,7,9
	.half	.L4306-.L4305
	.byte	1,5,14,7,9
	.half	.L76-.L4306
	.byte	3,1,1,5,64,7,9
	.half	.L4307-.L76
	.byte	1,5,14,7,9
	.half	.L78-.L4307
	.byte	3,1,1,5,64,7,9
	.half	.L4308-.L78
	.byte	1,5,32,7,9
	.half	.L77-.L4308
	.byte	3,3,1,5,38,9
	.half	.L4309-.L77
	.byte	1,5,50,9
	.half	.L4310-.L4309
	.byte	1,5,30,9
	.half	.L75-.L4310
	.byte	3,9,1,5,36,9
	.half	.L4311-.L75
	.byte	1,5,5,9
	.half	.L4312-.L4311
	.byte	3,100,1,5,17,9
	.half	.L48-.L4312
	.byte	3,35,1,5,38,9
	.half	.L4313-.L48
	.byte	1,5,40,9
	.half	.L50-.L4313
	.byte	3,154,169,127,1,5,54,7,9
	.half	.L1605-.L50
	.byte	3,112,1,5,47,9
	.half	.L10-.L1605
	.byte	1,5,18,9
	.half	.L1721-.L10
	.byte	3,237,219,0,1,5,28,9
	.half	.L4314-.L1721
	.byte	1,5,43,9
	.half	.L3193-.L4314
	.byte	3,2,1,9
	.half	.L3195-.L3193
	.byte	3,1,1,5,49,9
	.half	.L3197-.L3195
	.byte	3,1,1,9
	.half	.L3199-.L3197
	.byte	3,1,1,5,6,9
	.half	.L1732-.L3199
	.byte	3,224,185,127,1,5,40,7,9
	.half	.L4315-.L1732
	.byte	1,5,12,7,9
	.half	.L4316-.L4315
	.byte	3,2,1,5,27,9
	.half	.L3202-.L4316
	.byte	1,5,12,9
	.half	.L84-.L3202
	.byte	3,4,1,5,6,9
	.half	.L86-.L84
	.byte	3,122,1,5,40,7,9
	.half	.L4317-.L86
	.byte	1,5,12,7,9
	.half	.L4318-.L4317
	.byte	3,2,1,5,27,9
	.half	.L3201-.L4318
	.byte	1,5,12,9
	.half	.L87-.L3201
	.byte	3,4,1,5,20,9
	.half	.L89-.L87
	.byte	3,160,198,0,1,5,8,9
	.half	.L3200-.L89
	.byte	1,5,46,7,9
	.half	.L4319-.L3200
	.byte	1,5,43,9
	.half	.L4320-.L4319
	.byte	1,5,12,7,9
	.half	.L4321-.L4320
	.byte	3,2,1,5,26,9
	.half	.L3205-.L4321
	.byte	1,5,25,9
	.half	.L90-.L3205
	.byte	3,3,1,5,13,9
	.half	.L4322-.L90
	.byte	1,5,52,7,9
	.half	.L4323-.L4322
	.byte	1,5,49,9
	.half	.L4324-.L4323
	.byte	1,5,12,7,9
	.half	.L4325-.L4324
	.byte	3,2,1,5,26,9
	.half	.L3206-.L4325
	.byte	1,5,25,9
	.half	.L93-.L3206
	.byte	3,3,1,5,13,9
	.half	.L4326-.L93
	.byte	1,5,48,7,9
	.half	.L4327-.L4326
	.byte	1,5,13,7,9
	.half	.L96-.L4327
	.byte	3,7,1,5,48,7,9
	.half	.L4328-.L96
	.byte	1,5,13,7,9
	.half	.L98-.L4328
	.byte	3,7,1,5,52,7,9
	.half	.L4329-.L98
	.byte	1,5,12,7,9
	.half	.L97-.L4329
	.byte	3,4,1,5,29,9
	.half	.L3207-.L97
	.byte	1,5,12,9
	.half	.L100-.L3207
	.byte	3,3,1,5,51,7,9
	.half	.L1739-.L100
	.byte	1,5,12,7,9
	.half	.L1742-.L1739
	.byte	3,2,1,5,29,9
	.half	.L3208-.L1742
	.byte	1,5,12,9
	.half	.L103-.L3208
	.byte	3,5,1,5,36,9
	.half	.L92-.L103
	.byte	3,134,164,127,1,5,34,9
	.half	.L3196-.L92
	.byte	1,9
	.half	.L4330-.L3196
	.byte	3,1,1,5,18,9
	.half	.L1745-.L4330
	.byte	3,159,218,0,1,5,28,9
	.half	.L4331-.L1745
	.byte	1,5,34,9
	.half	.L3211-.L4331
	.byte	3,4,1,5,32,9
	.half	.L3198-.L3211
	.byte	1,5,30,9
	.half	.L4332-.L3198
	.byte	3,2,1,9
	.half	.L3204-.L4332
	.byte	3,1,1,5,34,9
	.half	.L3203-.L3204
	.byte	3,5,1,9
	.half	.L3213-.L3203
	.byte	3,1,1,5,35,9
	.half	.L3214-.L3213
	.byte	3,1,1,9
	.half	.L3134-.L3214
	.byte	3,1,1,5,18,9
	.half	.L3215-.L3134
	.byte	3,4,1,5,33,9
	.half	.L4333-.L3215
	.byte	3,3,1,5,10,9
	.half	.L3216-.L4333
	.byte	3,18,1,7,9
	.half	.L3217-.L3216
	.byte	3,14,1,7,9
	.half	.L4334-.L3217
	.byte	3,18,1,7,9
	.half	.L4335-.L4334
	.byte	3,21,1,7,9
	.half	.L4336-.L4335
	.byte	3,19,1,7,9
	.half	.L4337-.L4336
	.byte	1,5,38,9
	.half	.L106-.L4337
	.byte	3,187,127,1,5,36,9
	.half	.L3209-.L106
	.byte	1,5,42,9
	.half	.L4338-.L3209
	.byte	3,1,1,5,40,9
	.half	.L4339-.L4338
	.byte	1,5,39,9
	.half	.L4340-.L4339
	.byte	3,2,1,5,40,9
	.half	.L4341-.L4340
	.byte	3,127,1,5,15,9
	.half	.L3218-.L4341
	.byte	3,2,1,5,7,9
	.half	.L3219-.L3218
	.byte	3,3,1,9
	.half	.L107-.L3219
	.byte	3,8,1,5,42,7,9
	.half	.L4342-.L107
	.byte	3,2,1,5,68,9
	.half	.L3220-.L4342
	.byte	1,5,42,9
	.half	.L113-.L3220
	.byte	3,6,1,5,40,9
	.half	.L3221-.L113
	.byte	1,5,7,9
	.half	.L4343-.L3221
	.byte	3,2,1,5,35,9
	.half	.L108-.L4343
	.byte	3,7,1,5,50,9
	.half	.L3222-.L108
	.byte	1,5,7,9
	.half	.L4344-.L3222
	.byte	3,3,1,5,42,7,9
	.half	.L4345-.L4344
	.byte	3,3,1,5,68,9
	.half	.L4346-.L4345
	.byte	1,5,42,9
	.half	.L116-.L4346
	.byte	3,6,1,5,40,9
	.half	.L4347-.L116
	.byte	1,5,7,9
	.half	.L4348-.L4347
	.byte	3,2,1,9
	.half	.L109-.L4348
	.byte	3,7,1,5,42,7,9
	.half	.L4349-.L109
	.byte	3,3,1,5,40,9
	.half	.L114-.L4349
	.byte	1,5,17,9
	.half	.L112-.L114
	.byte	3,1,1,5,61,9
	.half	.L3223-.L112
	.byte	3,127,1,5,37,9
	.half	.L119-.L3223
	.byte	3,7,1,5,52,9
	.half	.L3224-.L119
	.byte	1,5,42,9
	.half	.L4350-.L3224
	.byte	3,1,1,5,40,9
	.half	.L117-.L4350
	.byte	1,5,17,9
	.half	.L3225-.L117
	.byte	3,1,1,5,7,9
	.half	.L3226-.L3225
	.byte	3,2,1,5,15,9
	.half	.L110-.L3226
	.byte	3,4,1,9
	.half	.L3228-.L110
	.byte	3,1,1,5,38,9
	.half	.L4351-.L3228
	.byte	3,1,1,5,36,9
	.half	.L3227-.L4351
	.byte	1,5,8,9
	.half	.L111-.L3227
	.byte	3,11,1,5,43,7,9
	.half	.L4352-.L111
	.byte	1,5,36,7,9
	.half	.L122-.L4352
	.byte	3,3,1,5,34,9
	.half	.L4353-.L122
	.byte	1,5,33,9
	.half	.L4354-.L4353
	.byte	3,1,1,5,25,9
	.half	.L123-.L4354
	.byte	3,3,1,5,32,9
	.half	.L4355-.L123
	.byte	1,5,25,9
	.half	.L4356-.L4355
	.byte	3,1,1,5,32,9
	.half	.L4357-.L4356
	.byte	1,5,9,9
	.half	.L1746-.L4357
	.byte	3,221,164,127,1,5,39,9
	.half	.L4358-.L1746
	.byte	1,5,5,9
	.half	.L4359-.L4358
	.byte	1,5,35,7,9
	.half	.L4360-.L4359
	.byte	3,8,1,5,51,9
	.half	.L4361-.L4360
	.byte	1,5,22,9
	.half	.L124-.L4361
	.byte	3,158,9,1,5,9,9
	.half	.L3230-.L124
	.byte	3,2,1,5,30,9
	.half	.L3231-.L3230
	.byte	3,2,1,5,40,9
	.half	.L4362-.L3231
	.byte	1,5,13,9
	.half	.L3232-.L4362
	.byte	3,3,1,5,51,9
	.half	.L3233-.L3232
	.byte	1,5,13,9
	.half	.L126-.L3233
	.byte	3,2,1,5,58,9
	.half	.L4363-.L126
	.byte	3,126,1,5,51,9
	.half	.L125-.L4363
	.byte	1,5,5,7,9
	.half	.L1760-.L125
	.byte	3,234,118,1,5,27,9
	.half	.L1763-.L1760
	.byte	1,5,1,9
	.half	.L2-.L1763
	.byte	3,18,1,7,9
	.half	.L1226-.L2
	.byte	0,1,1
.L4114:
	.sdecl	'.debug_ranges',debug,cluster('Fee_Init')
	.sect	'.debug_ranges'
.L1225:
	.word	-1,.L1074,0,.L1226-.L1074,0,0
.L1603:
	.word	-1,.L1074,.L1596-.L1074,.L1597-.L1074,.L1604-.L1074,.L1605-.L1074,0,0
.L1617:
	.word	-1,.L1074,.L1596-.L1074,.L1597-.L1074,.L1618-.L1074,.L44-.L1074,.L1619-.L1074,.L1620-.L1074,0,0
.L1630:
	.word	-1,.L1074,.L1596-.L1074,.L1628-.L1074,.L20-.L1074,.L33-.L1074,0,0
.L1641:
	.word	-1,.L1074,.L1628-.L1074,.L1597-.L1074,.L1642-.L1074,.L37-.L1074,0,0
.L1658:
	.word	-1,.L1074,.L1651-.L1074,.L1652-.L1074,.L1659-.L1074,.L22-.L1074,0,0
.L1738:
	.word	-1,.L1074,.L1732-.L1074,.L86-.L1074,.L100-.L1074,.L1739-.L1074,0,0
.L1741:
	.word	-1,.L1074,.L86-.L1074,.L89-.L1074,.L1739-.L1074,.L1742-.L1074,0,0
.L1762:
	.word	-1,.L1074,.L124-.L1074,.L1760-.L1074,.L1763-.L1074,.L2-.L1074,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_SetMode')
	.sect	'.debug_info'
.L1227:
	.word	273
	.half	3
	.word	.L1228
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1230,.L1229
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_SetMode',0,1,210,12,6,1,1,1
	.word	.L1076,.L1768,.L1075
	.byte	4
	.byte	'Mode',0,1,210,12,39
	.word	.L1769,.L1770
	.byte	5
	.word	.L1076,.L1768
	.byte	6
	.byte	'FeeStatus',0,1,212,12,22
	.word	.L1771,.L1772
	.byte	6
	.byte	'StateDataPtr',0,1,213,12,23
	.word	.L1579,.L1773
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_SetMode')
	.sect	'.debug_abbrev'
.L1228:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_SetMode')
	.sect	'.debug_line'
.L1229:
	.word	.L4365-.L4364
.L4364:
	.half	3
	.word	.L4367-.L4366
.L4366:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4367:
	.byte	5,6,7,0,5,2
	.word	.L1076
	.byte	3,209,12,1,9
	.half	.L3235-.L1076
	.byte	3,9,1,5,3,9
	.half	.L4368-.L3235
	.byte	1,5,31,7,9
	.half	.L4369-.L4368
	.byte	3,5,1,5,5,9
	.half	.L3234-.L4369
	.byte	3,4,1,5,24,7,9
	.half	.L4370-.L3234
	.byte	3,2,1,5,34,9
	.half	.L4371-.L4370
	.byte	1,5,7,9
	.half	.L3236-.L4371
	.byte	3,6,1,5,43,7,9
	.half	.L4372-.L3236
	.byte	3,5,1,5,41,9
	.half	.L4373-.L4372
	.byte	1,5,40,9
	.half	.L4374-.L4373
	.byte	3,1,1,5,1,9
	.half	.L127-.L4374
	.byte	3,49,1,5,12,7,9
	.half	.L129-.L127
	.byte	3,81,1,5,28,7,9
	.half	.L4375-.L129
	.byte	3,6,1,5,26,9
	.half	.L131-.L4375
	.byte	3,12,1,5,43,9
	.half	.L4376-.L131
	.byte	1,5,55,9
	.half	.L4377-.L4376
	.byte	1,5,1,9
	.half	.L1231-.L4377
	.byte	3,29,0,1,1
.L4365:
	.sdecl	'.debug_ranges',debug,cluster('Fee_SetMode')
	.sect	'.debug_ranges'
.L1230:
	.word	-1,.L1076,0,.L1231-.L1076,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_17_GetCycleCount')
	.sect	'.debug_info'
.L1232:
	.word	439
	.half	3
	.word	.L1233
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1235,.L1234
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_17_GetCycleCount',0,1,236,23,16
	.word	.L1592
	.byte	1,1,1
	.word	.L1100,.L1774,.L1099
	.byte	4
	.byte	'BlockNumber',0,1,236,23,50
	.word	.L1775,.L1776
	.byte	4
	.byte	'CountPtr',0,1,237,23,52
	.word	.L1777,.L1778
	.byte	5
	.word	.L1100,.L1774
	.byte	6
	.byte	'RawCnt',0,1,239,23,24
	.word	.L1589,.L1779
	.byte	6
	.byte	'StateDataPtr',0,1,240,23,30
	.word	.L1631,.L1780
	.byte	6
	.byte	'BlockIndex',0,1,241,23,24
	.word	.L1781,.L1782
	.byte	6
	.byte	'ReturnValue',0,1,242,23,24
	.word	.L1592,.L1783
	.byte	6
	.byte	'Status',0,1,243,23,24
	.word	.L1771,.L1784
	.byte	7
	.word	.L1785,.L1786,.L1787
	.byte	8
	.word	.L1788,.L1789
	.byte	9
	.word	.L1790,.L1786,.L1787
	.byte	6
	.byte	'RetVal',0,1,246,145,1,18
	.word	.L1592,.L1791
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_17_GetCycleCount')
	.sect	'.debug_abbrev'
.L1233:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_17_GetCycleCount')
	.sect	'.debug_line'
.L1234:
	.word	.L4379-.L4378
.L4378:
	.half	3
	.word	.L4381-.L4380
.L4380:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4381:
	.byte	5,16,7,0,5,2
	.word	.L1100
	.byte	3,235,23,1,5,15,9
	.half	.L3303-.L1100
	.byte	3,12,1,5,22,9
	.half	.L1786-.L3303
	.byte	3,143,250,0,1,5,3,9
	.half	.L1787-.L1786
	.byte	3,245,133,127,1,5,22,7,9
	.half	.L4382-.L1787
	.byte	3,24,1,5,32,9
	.half	.L4383-.L4382
	.byte	1,5,30,9
	.half	.L3304-.L4383
	.byte	3,1,1,5,7,9
	.half	.L3305-.L3304
	.byte	3,7,1,5,25,7,9
	.half	.L4384-.L3305
	.byte	3,4,1,5,12,9
	.half	.L4385-.L4384
	.byte	1,5,26,7,9
	.half	.L4386-.L4385
	.byte	3,1,1,5,42,9
	.half	.L4387-.L4386
	.byte	1,5,39,9
	.half	.L4388-.L4387
	.byte	1,5,11,7,9
	.half	.L4389-.L4388
	.byte	3,5,1,5,36,7,9
	.half	.L4390-.L4389
	.byte	3,11,1,5,52,9
	.half	.L4391-.L4390
	.byte	1,5,65,9
	.half	.L4392-.L4391
	.byte	1,5,76,9
	.half	.L3306-.L4392
	.byte	1,5,48,9
	.half	.L212-.L3306
	.byte	3,20,1,5,30,9
	.half	.L3307-.L212
	.byte	3,8,1,5,13,9
	.half	.L4393-.L3307
	.byte	1,5,48,7,9
	.half	.L4394-.L4393
	.byte	3,23,1,5,17,9
	.half	.L3309-.L4394
	.byte	3,8,1,5,29,7,9
	.half	.L213-.L3309
	.byte	3,6,1,5,31,9
	.half	.L4395-.L213
	.byte	3,1,1,5,54,9
	.half	.L4396-.L4395
	.byte	3,174,127,1,5,9,9
	.half	.L209-.L4396
	.byte	3,243,0,1,5,28,7,9
	.half	.L4397-.L209
	.byte	3,9,1,5,31,9
	.half	.L4398-.L4397
	.byte	3,1,1,5,43,9
	.half	.L4399-.L4398
	.byte	1,5,3,9
	.half	.L208-.L4399
	.byte	3,9,1,5,1,9
	.half	.L3311-.L208
	.byte	3,2,1,7,9
	.half	.L1236-.L3311
	.byte	0,1,1
.L4379:
	.sdecl	'.debug_ranges',debug,cluster('Fee_17_GetCycleCount')
	.sect	'.debug_ranges'
.L1235:
	.word	-1,.L1100,0,.L1236-.L1100,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_Read')
	.sect	'.debug_info'
.L1237:
	.word	329
	.half	3
	.word	.L1238
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1240,.L1239
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_Read',0,1,204,13,16
	.word	.L1592
	.byte	1,1,1
	.word	.L1078,.L1792,.L1077
	.byte	4
	.byte	'BlockNumber',0,1,204,13,38
	.word	.L1793,.L1794
	.byte	4
	.byte	'BlockOffset',0,1,205,13,38
	.word	.L1795,.L1796
	.byte	4
	.byte	'DataBufferPtr',0,1,206,13,38
	.word	.L1797,.L1798
	.byte	4
	.byte	'Length',0,1,207,13,38
	.word	.L1799,.L1800
	.byte	5
	.word	.L1078,.L1792
	.byte	6
	.byte	'ReturnValue',0,1,211,13,24
	.word	.L1592,.L1801
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_Read')
	.sect	'.debug_abbrev'
.L1238:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_Read')
	.sect	'.debug_line'
.L1239:
	.word	.L4401-.L4400
.L4400:
	.half	3
	.word	.L4403-.L4402
.L4402:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4403:
	.byte	5,16,7,0,5,2
	.word	.L1078
	.byte	3,203,13,1,5,7,9
	.half	.L3240-.L1078
	.byte	3,13,1,5,3,9
	.half	.L4404-.L3240
	.byte	1,5,22,7,9
	.half	.L4405-.L4404
	.byte	3,6,1,5,5,9
	.half	.L3238-.L4405
	.byte	1,5,67,7,9
	.half	.L4406-.L3238
	.byte	3,49,1,5,17,9
	.half	.L133-.L4406
	.byte	3,20,1,5,1,9
	.half	.L3245-.L133
	.byte	3,15,1,7,9
	.half	.L1241-.L3245
	.byte	0,1,1
.L4401:
	.sdecl	'.debug_ranges',debug,cluster('Fee_Read')
	.sect	'.debug_ranges'
.L1240:
	.word	-1,.L1078,0,.L1241-.L1078,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_Write')
	.sect	'.debug_info'
.L1242:
	.word	335
	.half	3
	.word	.L1243
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1245,.L1244
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_Write',0,1,214,14,16
	.word	.L1592
	.byte	1,1,1
	.word	.L1080,.L1802,.L1079
	.byte	4
	.byte	'BlockNumber',0,1,214,14,39
	.word	.L1803,.L1804
	.byte	4
	.byte	'DataBufferPtr',0,1,215,14,45
	.word	.L1805,.L1806
	.byte	5
	.word	.L1080,.L1802
	.byte	6
	.byte	'BlockPtr',0,1,221,14,26
	.word	.L1807,.L1808
	.byte	6
	.byte	'UserBlockIndex',0,1,222,14,26
	.word	.L1781,.L1809
	.byte	6
	.byte	'ReturnValue',0,1,223,14,26
	.word	.L1592,.L1810
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_Write')
	.sect	'.debug_abbrev'
.L1243:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_Write')
	.sect	'.debug_line'
.L1244:
	.word	.L4408-.L4407
.L4407:
	.half	3
	.word	.L4410-.L4409
.L4409:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4410:
	.byte	5,16,7,0,5,2
	.word	.L1080
	.byte	3,213,14,1,5,6,9
	.half	.L3248-.L1080
	.byte	3,15,1,5,3,9
	.half	.L4411-.L3248
	.byte	1,5,22,7,9
	.half	.L4412-.L4411
	.byte	3,3,1,5,5,9
	.half	.L3246-.L4412
	.byte	1,5,46,7,9
	.half	.L4413-.L3246
	.byte	3,3,1,5,20,9
	.half	.L3250-.L4413
	.byte	3,1,1,5,30,9
	.half	.L4414-.L3250
	.byte	1,5,49,9
	.half	.L4415-.L4414
	.byte	1,5,62,9
	.half	.L3251-.L4415
	.byte	3,205,0,1,5,17,9
	.half	.L137-.L3251
	.byte	3,21,1,5,1,9
	.half	.L3253-.L137
	.byte	3,18,1,7,9
	.half	.L1246-.L3253
	.byte	0,1,1
.L4408:
	.sdecl	'.debug_ranges',debug,cluster('Fee_Write')
	.sect	'.debug_ranges'
.L1245:
	.word	-1,.L1080,0,.L1246-.L1080,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_Cancel')
	.sect	'.debug_info'
.L1247:
	.word	412
	.half	3
	.word	.L1248
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1250,.L1249
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_Cancel',0,1,135,16,6,1,1,1
	.word	.L1082,.L1811,.L1081
	.byte	4
	.word	.L1082,.L1811
	.byte	5
	.byte	'StateDataPtr',0,1,138,16,29
	.word	.L1631,.L1812
	.byte	5
	.byte	'NotifyCancel',0,1,139,16,9
	.word	.L1592,.L1813
	.byte	5
	.byte	'Error',0,1,146,16,19
	.word	.L1592,.L1814
	.byte	6
	.word	.L1815,.L1816,.L1817
	.byte	7
	.word	.L1818,.L1819
	.byte	8
	.word	.L1820,.L1816,.L1817
	.byte	5
	.byte	'RetVal',0,1,223,143,1,18
	.word	.L1592,.L1821
	.byte	0,0,6
	.word	.L1822,.L1817,.L1823
	.byte	8
	.word	.L1824,.L1817,.L1823
	.byte	5
	.byte	'FeeStatus',0,1,173,143,1,22
	.word	.L1771,.L1825
	.byte	5
	.byte	'ReturnValue',0,1,174,143,1,22
	.word	.L1592,.L1826
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_Cancel')
	.sect	'.debug_abbrev'
.L1248:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1
	.byte	49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_Cancel')
	.sect	'.debug_line'
.L1249:
	.word	.L4417-.L4416
.L4416:
	.half	3
	.word	.L4419-.L4418
.L4418:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4419:
	.byte	5,17,7,0,5,2
	.word	.L1082
	.byte	3,149,16,1,5,25,9
	.half	.L1816-.L1082
	.byte	3,201,255,0,1,5,6,9
	.half	.L3254-.L1816
	.byte	3,9,1,5,3,9
	.half	.L4420-.L3254
	.byte	1,5,22,7,9
	.half	.L4421-.L4420
	.byte	3,6,1,5,5,9
	.half	.L4422-.L4421
	.byte	1,5,14,7,9
	.half	.L4423-.L4422
	.byte	3,3,1,5,3,9
	.half	.L141-.L4423
	.byte	3,167,128,127,1,5,15,7,9
	.half	.L1817-.L141
	.byte	3,152,255,0,1,5,29,9
	.half	.L3255-.L1817
	.byte	3,1,1,5,3,9
	.half	.L3257-.L3255
	.byte	3,2,1,5,22,7,9
	.half	.L4424-.L3257
	.byte	3,7,1,5,38,9
	.half	.L4425-.L4424
	.byte	1,5,60,9
	.half	.L4426-.L4425
	.byte	1,5,17,9
	.half	.L3258-.L4426
	.byte	3,4,1,5,5,9
	.half	.L144-.L3258
	.byte	3,228,128,127,1,5,22,7,9
	.half	.L1823-.L144
	.byte	3,3,1,5,32,9
	.half	.L4427-.L1823
	.byte	1,5,26,9
	.half	.L3259-.L4427
	.byte	3,1,1,5,14,9
	.half	.L3256-.L3259
	.byte	3,16,1,7,9
	.half	.L4428-.L3256
	.byte	3,1,1,7,9
	.half	.L4429-.L4428
	.byte	3,115,1,7,9
	.half	.L4430-.L4429
	.byte	3,1,1,9
	.half	.L4431-.L4430
	.byte	3,1,1,5,26,9
	.half	.L146-.L4431
	.byte	3,14,1,5,11,9
	.half	.L4432-.L146
	.byte	1,5,42,7,9
	.half	.L4433-.L4432
	.byte	3,10,1,5,44,9
	.half	.L4434-.L4433
	.byte	1,5,27,9
	.half	.L148-.L4434
	.byte	3,6,1,5,7,9
	.half	.L151-.L148
	.byte	3,38,1,5,34,7,9
	.half	.L4435-.L151
	.byte	3,7,1,5,1,9
	.half	.L143-.L4435
	.byte	3,8,1,7,9
	.half	.L1251-.L143
	.byte	0,1,1
.L4417:
	.sdecl	'.debug_ranges',debug,cluster('Fee_Cancel')
	.sect	'.debug_ranges'
.L1250:
	.word	-1,.L1082,0,.L1251-.L1082,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_GetStatus')
	.sect	'.debug_info'
.L1252:
	.word	238
	.half	3
	.word	.L1253
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1255,.L1254
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_GetStatus',0,1,153,17,18
	.word	.L1771
	.byte	1,1,1
	.word	.L1084,.L1827,.L1083
	.byte	4
	.word	.L1084,.L1827
	.byte	5
	.byte	'ReturnStatus',0,1,156,17,22
	.word	.L1771,.L1828
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_GetStatus')
	.sect	'.debug_abbrev'
.L1253:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_GetStatus')
	.sect	'.debug_line'
.L1254:
	.word	.L4437-.L4436
.L4436:
	.half	3
	.word	.L4439-.L4438
.L4438:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4439:
	.byte	5,6,7,0,5,2
	.word	.L1084
	.byte	3,159,17,1,5,3,9
	.half	.L4440-.L1084
	.byte	1,5,34,7,9
	.half	.L4441-.L4440
	.byte	3,6,1,5,18,7,9
	.half	.L155-.L4441
	.byte	3,8,1,5,1,9
	.half	.L3260-.L155
	.byte	3,7,1,7,9
	.half	.L1256-.L3260
	.byte	0,1,1
.L4437:
	.sdecl	'.debug_ranges',debug,cluster('Fee_GetStatus')
	.sect	'.debug_ranges'
.L1255:
	.word	-1,.L1084,0,.L1256-.L1084,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_GetJobResult')
	.sect	'.debug_info'
.L1257:
	.word	266
	.half	3
	.word	.L1258
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1260,.L1259
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_GetJobResult',0,1,209,17,21
	.word	.L1829
	.byte	1,1,1
	.word	.L1086,.L1830,.L1085
	.byte	4
	.word	.L1086,.L1830
	.byte	5
	.byte	'StateDataPtr',0,1,211,17,29
	.word	.L1631,.L1831
	.byte	5
	.byte	'ReturnValue',0,1,212,17,23
	.word	.L1829,.L1832
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_GetJobResult')
	.sect	'.debug_abbrev'
.L1258:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_GetJobResult')
	.sect	'.debug_line'
.L1259:
	.word	.L4443-.L4442
.L4442:
	.half	3
	.word	.L4445-.L4444
.L4444:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4445:
	.byte	5,35,7,0,5,2
	.word	.L1086
	.byte	3,211,17,1,5,22,9
	.half	.L3261-.L1086
	.byte	3,11,1,5,5,9
	.half	.L4446-.L3261
	.byte	1,5,22,7,9
	.half	.L4447-.L4446
	.byte	3,3,1,5,32,9
	.half	.L4448-.L4447
	.byte	1,5,33,9
	.half	.L3262-.L4448
	.byte	3,1,1,5,3,9
	.half	.L158-.L3262
	.byte	3,34,1,5,1,9
	.half	.L3263-.L158
	.byte	3,4,1,7,9
	.half	.L1261-.L3263
	.byte	0,1,1
.L4443:
	.sdecl	'.debug_ranges',debug,cluster('Fee_GetJobResult')
	.sect	'.debug_ranges'
.L1260:
	.word	-1,.L1086,0,.L1261-.L1086,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_InvalidateBlock')
	.sect	'.debug_info'
.L1262:
	.word	447
	.half	3
	.word	.L1263
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1265,.L1264
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_InvalidateBlock',0,1,164,18,16
	.word	.L1592
	.byte	1,1,1
	.word	.L1088,.L1833,.L1087
	.byte	4
	.byte	'BlockNumber',0,1,164,18,49
	.word	.L1834,.L1835
	.byte	5
	.word	.L1088,.L1833
	.byte	6
	.byte	'StateDataPtr',0,1,167,18,24
	.word	.L1579,.L1836
	.byte	6
	.byte	'BlockPtr',0,1,168,18,24
	.word	.L1807,.L1837
	.byte	6
	.byte	'UserBlockIndex',0,1,169,18,24
	.word	.L1781,.L1838
	.byte	6
	.byte	'ReturnStatus',0,1,170,18,23
	.word	.L1771,.L1839
	.byte	6
	.byte	'ReturnValue',0,1,172,18,24
	.word	.L1592,.L1840
	.byte	7
	.word	.L1815,.L1841,.L1842
	.byte	8
	.word	.L1818,.L1843
	.byte	9
	.word	.L1820,.L1844
	.byte	6
	.byte	'RetVal',0,1,223,143,1,18
	.word	.L1592,.L1847
	.byte	0,0,7
	.word	.L1815,.L1845,.L1846
	.byte	8
	.word	.L1818,.L1843
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_InvalidateBlock')
	.sect	'.debug_abbrev'
.L1263:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,85
	.byte	6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_InvalidateBlock')
	.sect	'.debug_line'
.L1264:
	.word	.L4450-.L4449
.L4449:
	.half	3
	.word	.L4452-.L4451
.L4451:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4452:
	.byte	5,16,7,0,5,2
	.word	.L1088
	.byte	3,163,18,1,5,25,9
	.half	.L1841-.L1088
	.byte	3,187,253,0,1,5,6,9
	.half	.L3265-.L1841
	.byte	3,9,1,5,3,9
	.half	.L4453-.L3265
	.byte	1,5,22,7,9
	.half	.L4454-.L4453
	.byte	3,6,1,5,5,9
	.half	.L3264-.L4454
	.byte	1,5,14,7,9
	.half	.L4455-.L3264
	.byte	3,3,1,5,3,9
	.half	.L160-.L4455
	.byte	3,200,130,127,1,5,20,7,9
	.half	.L1842-.L160
	.byte	3,2,1,5,30,9
	.half	.L4456-.L1842
	.byte	1,5,44,9
	.half	.L3266-.L4456
	.byte	3,4,1,5,20,9
	.half	.L3268-.L3266
	.byte	1,5,35,9
	.half	.L3270-.L3268
	.byte	3,60,1,5,7,9
	.half	.L3269-.L3270
	.byte	3,8,1,5,24,7,9
	.half	.L4457-.L3269
	.byte	3,27,1,5,34,9
	.half	.L4458-.L4457
	.byte	1,5,53,9
	.half	.L4459-.L4458
	.byte	1,5,39,9
	.half	.L3273-.L4459
	.byte	3,2,1,5,60,9
	.half	.L3271-.L3273
	.byte	1,5,49,9
	.half	.L4460-.L3271
	.byte	3,1,1,5,71,9
	.half	.L4461-.L4460
	.byte	1,5,70,9
	.half	.L3272-.L4461
	.byte	3,125,1,5,26,9
	.half	.L163-.L3272
	.byte	3,18,1,5,51,9
	.half	.L4462-.L163
	.byte	1,5,63,9
	.half	.L4463-.L4462
	.byte	1,5,21,9
	.half	.L1845-.L4463
	.byte	3,8,1,5,3,9
	.half	.L162-.L1845
	.byte	3,8,1,5,1,9
	.half	.L1846-.L162
	.byte	3,2,1,7,9
	.half	.L1266-.L1846
	.byte	0,1,1
.L4450:
	.sdecl	'.debug_ranges',debug,cluster('Fee_InvalidateBlock')
	.sect	'.debug_ranges'
.L1265:
	.word	-1,.L1088,0,.L1266-.L1088,0,0
.L1844:
	.word	-1,.L1088,.L1841-.L1088,.L1842-.L1088,.L1845-.L1088,.L1846-.L1088,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_EraseImmediateBlock')
	.sect	'.debug_info'
.L1267:
	.word	246
	.half	3
	.word	.L1268
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1270,.L1269
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_EraseImmediateBlock',0,1,223,19,16
	.word	.L1592
	.byte	1,1,1
	.word	.L1090,.L1848,.L1089
	.byte	4
	.byte	'BlockNumber',0,1,223,19,53
	.word	.L1849,.L1850
	.byte	5
	.word	.L1090,.L1848
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_EraseImmediateBlock')
	.sect	'.debug_abbrev'
.L1268:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_EraseImmediateBlock')
	.sect	'.debug_line'
.L1269:
	.word	.L4465-.L4464
.L4464:
	.half	3
	.word	.L4467-.L4466
.L4466:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4467:
	.byte	5,10,7,0,5,2
	.word	.L1090
	.byte	3,228,19,1,5,1,9
	.half	.L4468-.L1090
	.byte	3,4,1,7,9
	.half	.L1271-.L4468
	.byte	0,1,1
.L4465:
	.sdecl	'.debug_ranges',debug,cluster('Fee_EraseImmediateBlock')
	.sect	'.debug_ranges'
.L1270:
	.word	-1,.L1090,0,.L1271-.L1090,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_17_InitCheck')
	.sect	'.debug_info'
.L1272:
	.word	394
	.half	3
	.word	.L1273
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1275,.L1274
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_17_InitCheck',0,1,144,20,16
	.word	.L1592
	.byte	1,1,1
	.word	.L1092,.L1851,.L1091
	.byte	4
	.byte	'ConfigPtr',0,1,144,20,62
	.word	.L1852,.L1853
	.byte	5
	.word	.L1092,.L1851
	.byte	6
	.byte	'RetVal',0,1,146,20,23
	.word	.L1592,.L1854
	.byte	7
	.word	.L1759,.L1855,.L1856
	.byte	8
	.word	.L1761,.L1857
	.byte	6
	.byte	'FeeDataStructSize',0,1,204,20,23
	.word	.L1589,.L1860
	.byte	6
	.byte	'Index',0,1,205,20,23
	.word	.L1589,.L1861
	.byte	6
	.byte	'Crc32',0,1,206,20,23
	.word	.L1589,.L1862
	.byte	6
	.byte	'FeeDataStructPtr',0,1,207,20,23
	.word	.L1622,.L1863
	.byte	0,0,9
	.word	.L1759,.L1858,.L1859
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_17_InitCheck')
	.sect	'.debug_abbrev'
.L1273:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,85,6,0,0,9,29,0,49,16
	.byte	17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_17_InitCheck')
	.sect	'.debug_line'
.L1274:
	.word	.L4470-.L4469
.L4469:
	.half	3
	.word	.L4472-.L4471
.L4471:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4472:
	.byte	5,10,7,0,5,2
	.word	.L1092
	.byte	3,147,20,1,5,3,9
	.half	.L3274-.L1092
	.byte	3,3,1,5,9,7,9
	.half	.L4473-.L3274
	.byte	3,4,1,5,8,9
	.half	.L4474-.L4473
	.byte	1,5,37,7,9
	.half	.L4475-.L4474
	.byte	1,5,48,9
	.half	.L4476-.L4475
	.byte	1,5,22,7,9
	.half	.L1855-.L4476
	.byte	3,55,1,5,9,9
	.half	.L3275-.L1855
	.byte	3,2,1,5,40,9
	.half	.L3276-.L3275
	.byte	3,2,1,5,13,9
	.half	.L3277-.L3276
	.byte	3,3,1,5,51,9
	.half	.L3279-.L3277
	.byte	1,5,13,9
	.half	.L171-.L3279
	.byte	3,2,1,5,58,9
	.half	.L4477-.L171
	.byte	3,126,1,5,51,9
	.half	.L170-.L4477
	.byte	1,5,10,7,9
	.half	.L1856-.L170
	.byte	3,75,1,5,7,9
	.half	.L1858-.L1856
	.byte	1,5,16,7,9
	.half	.L1859-.L1858
	.byte	3,2,1,5,1,9
	.half	.L167-.L1859
	.byte	3,10,1,7,9
	.half	.L1276-.L167
	.byte	0,1,1
.L4470:
	.sdecl	'.debug_ranges',debug,cluster('Fee_17_InitCheck')
	.sect	'.debug_ranges'
.L1275:
	.word	-1,.L1092,0,.L1276-.L1092,0,0
.L1857:
	.word	-1,.L1092,.L1855-.L1092,.L1856-.L1092,.L1858-.L1092,.L1859-.L1092,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_17_EnableGcStart')
	.sect	'.debug_info'
.L1277:
	.word	241
	.half	3
	.word	.L1278
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1280,.L1279
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_17_EnableGcStart',0,1,199,25,6,1,1,1
	.word	.L1102,.L1864,.L1101
	.byte	4
	.word	.L1102,.L1864
	.byte	5
	.byte	'StateDataPtr',0,1,202,25,23
	.word	.L1579,.L1865
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_17_EnableGcStart')
	.sect	'.debug_abbrev'
.L1278:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_17_EnableGcStart')
	.sect	'.debug_line'
.L1279:
	.word	.L4479-.L4478
.L4478:
	.half	3
	.word	.L4481-.L4480
.L4480:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4481:
	.byte	5,22,7,0,5,2
	.word	.L1102
	.byte	3,217,25,1,5,5,9
	.half	.L4482-.L1102
	.byte	1,5,20,7,9
	.half	.L4483-.L4482
	.byte	3,3,1,5,30,9
	.half	.L4484-.L4483
	.byte	1,5,39,9
	.half	.L3312-.L4484
	.byte	3,4,1,5,37,9
	.half	.L4485-.L3312
	.byte	1,5,1,9
	.half	.L219-.L4485
	.byte	3,20,1,7,9
	.half	.L1281-.L219
	.byte	0,1,1
.L4479:
	.sdecl	'.debug_ranges',debug,cluster('Fee_17_EnableGcStart')
	.sect	'.debug_ranges'
.L1280:
	.word	-1,.L1102,0,.L1281-.L1102,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_17_DisableGcStart')
	.sect	'.debug_info'
.L1282:
	.word	242
	.half	3
	.word	.L1283
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1285,.L1284
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_17_DisableGcStart',0,1,149,26,6,1,1,1
	.word	.L1104,.L1866,.L1103
	.byte	4
	.word	.L1104,.L1866
	.byte	5
	.byte	'StateDataPtr',0,1,152,26,23
	.word	.L1579,.L1867
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_17_DisableGcStart')
	.sect	'.debug_abbrev'
.L1283:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_17_DisableGcStart')
	.sect	'.debug_line'
.L1284:
	.word	.L4487-.L4486
.L4486:
	.half	3
	.word	.L4489-.L4488
.L4488:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4489:
	.byte	5,22,7,0,5,2
	.word	.L1104
	.byte	3,165,26,1,5,5,9
	.half	.L4490-.L1104
	.byte	1,5,22,7,9
	.half	.L4491-.L4490
	.byte	3,3,1,5,32,9
	.half	.L4492-.L4491
	.byte	1,5,22,9
	.half	.L3313-.L4492
	.byte	3,5,1,5,7,9
	.half	.L4493-.L3313
	.byte	1,5,24,7,9
	.half	.L4494-.L4493
	.byte	3,10,1,5,40,9
	.half	.L4495-.L4494
	.byte	1,5,9,9
	.half	.L4496-.L4495
	.byte	1,5,45,7,9
	.half	.L4497-.L4496
	.byte	3,6,1,5,43,9
	.half	.L4498-.L4497
	.byte	1,5,1,9
	.half	.L220-.L4498
	.byte	3,26,1,7,9
	.half	.L1286-.L220
	.byte	0,1,1
.L4487:
	.sdecl	'.debug_ranges',debug,cluster('Fee_17_DisableGcStart')
	.sect	'.debug_ranges'
.L1285:
	.word	-1,.L1104,0,.L1286-.L1104,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_17_GetEccErrorInfo')
	.sect	'.debug_info'
.L1287:
	.word	587
	.half	3
	.word	.L1288
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1290,.L1289
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_17_GetEccErrorInfo',0,1,198,29,16
	.word	.L1592
	.byte	1,1,1
	.word	.L1108,.L1868,.L1107
	.byte	4
	.byte	'BlockNumberPtr',0,1,198,29,55
	.word	.L1869,.L1870
	.byte	4
	.byte	'PageAddressPtr',0,1,199,29,45
	.word	.L1871,.L1872
	.byte	5
	.word	.L1108,.L1868
	.byte	6
	.byte	'DriverStatus',0,1,201,29,20
	.word	.L1771,.L1873
	.byte	6
	.byte	'RetVal',0,1,205,29,18
	.word	.L1592,.L1874
	.byte	6
	.byte	'BlkNumber',0,1,206,29,10
	.word	.L1781,.L1875
	.byte	7
	.word	.L1876,.L1877,.L1878
	.byte	8
	.word	.L1879,.L1880
	.byte	9
	.word	.L1881,.L1877,.L1878
	.byte	6
	.byte	'BlockIndex',0,1,159,31,29
	.word	.L1781,.L1882
	.byte	6
	.byte	'StateDataPtr',0,1,161,31,30
	.word	.L1631,.L1883
	.byte	6
	.byte	'CachePtr',0,1,162,31,36
	.word	.L1884,.L1885
	.byte	6
	.byte	'BlockCfgPtr',0,1,164,31,30
	.word	.L1807,.L1886
	.byte	6
	.byte	'BlockEndAddress',0,1,165,31,29
	.word	.L1589,.L1887
	.byte	6
	.byte	'BlockStartAddress',0,1,166,31,29
	.word	.L1589,.L1888
	.byte	6
	.byte	'RetVal',0,1,167,31,10
	.word	.L1781,.L1889
	.byte	6
	.byte	'NumberOfPages',0,1,169,31,10
	.word	.L1589,.L1890
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_17_GetEccErrorInfo')
	.sect	'.debug_abbrev'
.L1288:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17
	.byte	1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_17_GetEccErrorInfo')
	.sect	'.debug_line'
.L1289:
	.word	.L4500-.L4499
.L4499:
	.half	3
	.word	.L4502-.L4501
.L4501:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4502:
	.byte	5,16,7,0,5,2
	.word	.L1108
	.byte	3,197,29,1,5,25,9
	.half	.L3320-.L1108
	.byte	3,7,1,5,34,9
	.half	.L3321-.L3320
	.byte	3,10,1,5,5,9
	.half	.L3318-.L3321
	.byte	3,5,1,5,7,7,9
	.half	.L4503-.L3318
	.byte	3,6,1,5,12,7,9
	.half	.L4504-.L4503
	.byte	3,5,1,5,60,9
	.half	.L4505-.L4504
	.byte	1,5,54,7,9
	.half	.L4506-.L4505
	.byte	3,5,1,5,18,9
	.half	.L3322-.L4506
	.byte	1,5,11,9
	.half	.L3325-.L3322
	.byte	3,4,1,5,16,7,9
	.half	.L4507-.L3325
	.byte	3,5,1,5,13,9
	.half	.L4508-.L4507
	.byte	1,5,40,7,9
	.half	.L1877-.L4508
	.byte	3,170,1,1,5,17,9
	.half	.L3326-.L1877
	.byte	3,8,1,5,47,9
	.half	.L3328-.L3326
	.byte	3,18,1,5,20,9
	.half	.L4509-.L3328
	.byte	3,39,1,5,22,9
	.half	.L4510-.L4509
	.byte	3,79,1,5,43,9
	.half	.L4511-.L4510
	.byte	1,5,21,9
	.half	.L245-.L4511
	.byte	3,2,1,5,31,9
	.half	.L4512-.L245
	.byte	1,5,50,9
	.half	.L4513-.L4512
	.byte	1,5,30,9
	.half	.L3329-.L4513
	.byte	3,2,1,5,44,9
	.half	.L3330-.L3329
	.byte	3,1,1,5,52,9
	.half	.L3331-.L3330
	.byte	3,2,1,5,16,9
	.half	.L3332-.L3331
	.byte	3,1,1,5,5,9
	.half	.L4514-.L3332
	.byte	1,5,45,7,9
	.half	.L4515-.L4514
	.byte	3,2,1,5,47,9
	.half	.L3334-.L4515
	.byte	3,1,1,5,44,9
	.half	.L3333-.L3334
	.byte	1,5,63,9
	.half	.L4516-.L3333
	.byte	3,127,1,5,25,9
	.half	.L246-.L4516
	.byte	3,5,1,5,23,9
	.half	.L3335-.L246
	.byte	3,1,1,5,12,9
	.half	.L247-.L3335
	.byte	3,30,1,5,63,7,9
	.half	.L4517-.L247
	.byte	1,5,27,7,9
	.half	.L4518-.L4517
	.byte	3,2,1,5,20,9
	.half	.L4519-.L4518
	.byte	3,1,1,5,30,9
	.half	.L4520-.L4519
	.byte	1,5,16,9
	.half	.L248-.L4520
	.byte	3,2,1,5,22,9
	.half	.L244-.L248
	.byte	3,77,1,5,32,9
	.half	.L4521-.L244
	.byte	1,5,43,9
	.half	.L4522-.L4521
	.byte	1,5,33,7,9
	.half	.L1878-.L4522
	.byte	3,205,126,1,5,61,9
	.half	.L4523-.L1878
	.byte	3,127,1,5,35,9
	.half	.L243-.L4523
	.byte	3,5,1,5,33,9
	.half	.L4524-.L243
	.byte	1,5,72,9
	.half	.L4525-.L4524
	.byte	3,103,1,5,9,9
	.half	.L239-.L4525
	.byte	3,49,1,5,28,7,9
	.half	.L4526-.L239
	.byte	3,7,1,5,53,9
	.half	.L4527-.L4526
	.byte	1,5,65,9
	.half	.L4528-.L4527
	.byte	1,5,3,9
	.half	.L238-.L4528
	.byte	3,23,1,5,1,9
	.half	.L3338-.L238
	.byte	3,1,1,7,9
	.half	.L1291-.L3338
	.byte	0,1,1
.L4500:
	.sdecl	'.debug_ranges',debug,cluster('Fee_17_GetEccErrorInfo')
	.sect	'.debug_ranges'
.L1290:
	.word	-1,.L1108,0,.L1291-.L1108,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_JobEndNotification')
	.sect	'.debug_info'
.L1292:
	.word	414
	.half	3
	.word	.L1293
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1295,.L1294
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_JobEndNotification',0,1,137,21,6,1,1,1
	.word	.L1094,.L1891,.L1093
	.byte	4
	.word	.L1094,.L1891
	.byte	5
	.byte	'StateDataPtr',0,1,139,21,23
	.word	.L1579,.L1892
	.byte	5
	.byte	'Job',0,1,140,21,23
	.word	.L1592,.L1893
	.byte	6
	.word	.L1894,.L1895,.L176
	.byte	7
	.word	.L1896,.L1895,.L176
	.byte	5
	.byte	'StateDataPtr',0,1,251,147,1,23
	.word	.L1579,.L1897
	.byte	5
	.byte	'DataByteCount',0,1,252,147,1,22
	.word	.L1781,.L1898
	.byte	5
	.byte	'BlockOffset',0,1,253,147,1,22
	.word	.L1781,.L1899
	.byte	5
	.byte	'Length',0,1,254,147,1,22
	.word	.L1781,.L1900
	.byte	5
	.byte	'LoopIndex',0,1,255,147,1,22
	.word	.L1781,.L1901
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_JobEndNotification')
	.sect	'.debug_abbrev'
.L1293:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1
	.byte	49,16,17,1,18,1,0,0,7,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_JobEndNotification')
	.sect	'.debug_line'
.L1294:
	.word	.L4530-.L4529
.L4529:
	.half	3
	.word	.L4532-.L4531
.L4531:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4532:
	.byte	5,20,7,0,5,2
	.word	.L1094
	.byte	3,147,21,1,5,30,9
	.half	.L4533-.L1094
	.byte	1,5,36,9
	.half	.L3280-.L4533
	.byte	3,5,1,5,9,9
	.half	.L3282-.L3280
	.byte	1,5,27,9
	.half	.L3284-.L3282
	.byte	3,4,1,5,5,9
	.half	.L4534-.L3284
	.byte	1,5,40,7,9
	.half	.L4535-.L4534
	.byte	3,8,1,5,38,9
	.half	.L4536-.L4535
	.byte	1,5,40,9
	.half	.L4537-.L4536
	.byte	3,1,1,5,38,9
	.half	.L4538-.L4537
	.byte	1,5,32,9
	.half	.L4539-.L4538
	.byte	3,1,1,5,1,9
	.half	.L4540-.L4539
	.byte	3,63,1,5,42,7,9
	.half	.L174-.L4540
	.byte	3,70,1,5,10,9
	.half	.L3283-.L174
	.byte	1,5,40,7,9
	.half	.L4541-.L3283
	.byte	3,4,1,5,38,9
	.half	.L4542-.L4541
	.byte	1,9
	.half	.L4543-.L4542
	.byte	3,1,1,5,7,9
	.half	.L4544-.L4543
	.byte	3,5,1,5,18,7,9
	.half	.L1895-.L4544
	.byte	3,203,254,0,1,5,28,9
	.half	.L4545-.L1895
	.byte	1,5,18,9
	.half	.L3285-.L4545
	.byte	3,4,1,5,3,9
	.half	.L4546-.L3285
	.byte	1,5,42,7,9
	.half	.L4547-.L4546
	.byte	3,2,1,5,47,9
	.half	.L3287-.L4547
	.byte	3,1,1,5,19,9
	.half	.L3288-.L3287
	.byte	3,1,1,5,5,9
	.half	.L3289-.L3288
	.byte	3,3,1,5,61,7,9
	.half	.L4548-.L3289
	.byte	3,2,1,5,37,9
	.half	.L181-.L4548
	.byte	3,3,1,5,58,9
	.half	.L4549-.L181
	.byte	3,1,1,5,43,9
	.half	.L4550-.L4549
	.byte	1,5,55,9
	.half	.L4551-.L4550
	.byte	3,127,1,5,20,9
	.half	.L4552-.L4551
	.byte	3,2,1,5,37,9
	.half	.L4553-.L4552
	.byte	3,2,1,5,51,9
	.half	.L4554-.L4553
	.byte	1,5,15,9
	.half	.L4555-.L4554
	.byte	3,1,1,5,13,9
	.half	.L180-.L4555
	.byte	3,120,1,5,50,7,9
	.half	.L4556-.L180
	.byte	1,5,21,7,9
	.half	.L182-.L4556
	.byte	3,10,1,5,56,9
	.half	.L4557-.L182
	.byte	3,2,1,5,21,9
	.half	.L184-.L4557
	.byte	3,2,1,5,57,9
	.half	.L3290-.L184
	.byte	3,1,1,5,37,9
	.half	.L186-.L3290
	.byte	3,4,1,5,51,9
	.half	.L4558-.L186
	.byte	1,5,58,9
	.half	.L4559-.L4558
	.byte	3,1,1,5,43,9
	.half	.L4560-.L4559
	.byte	1,5,63,9
	.half	.L4561-.L4560
	.byte	3,127,1,5,15,9
	.half	.L4562-.L4561
	.byte	3,2,1,5,20,9
	.half	.L4563-.L4562
	.byte	3,123,1,5,11,9
	.half	.L185-.L4563
	.byte	3,127,1,5,46,7,9
	.half	.L4564-.L185
	.byte	1,5,35,7,9
	.half	.L187-.L4564
	.byte	3,12,1,5,50,9
	.half	.L4565-.L187
	.byte	1,5,21,9
	.half	.L4566-.L4565
	.byte	3,1,1,5,39,9
	.half	.L183-.L4566
	.byte	3,112,1,5,56,9
	.half	.L4567-.L183
	.byte	1,5,40,7,9
	.half	.L4568-.L4567
	.byte	3,36,1,5,38,9
	.half	.L4569-.L4568
	.byte	1,5,34,9
	.half	.L4570-.L4569
	.byte	3,6,1,5,32,9
	.half	.L4571-.L4570
	.byte	1,5,10,9
	.half	.L4572-.L4571
	.byte	3,16,1,5,20,9
	.half	.L4573-.L4572
	.byte	1,5,5,9
	.half	.L4574-.L4573
	.byte	1,5,18,7,9
	.half	.L4575-.L4574
	.byte	3,2,1,5,45,9
	.half	.L4576-.L4575
	.byte	1,5,1,7,9
	.half	.L176-.L4576
	.byte	3,144,129,127,1,7,9
	.half	.L1296-.L176
	.byte	0,1,1
.L4530:
	.sdecl	'.debug_ranges',debug,cluster('Fee_JobEndNotification')
	.sect	'.debug_ranges'
.L1295:
	.word	-1,.L1094,0,.L1296-.L1094,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_JobErrorNotification')
	.sect	'.debug_info'
.L1297:
	.word	638
	.half	3
	.word	.L1298
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1300,.L1299
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_JobErrorNotification',0,1,141,22,6,1,1,1
	.word	.L1096,.L1902,.L1095
	.byte	4
	.word	.L1096,.L1902
	.byte	5
	.byte	'StateDataPtr',0,1,143,22,23
	.word	.L1579,.L1903
	.byte	5
	.byte	'Job',0,1,144,22,23
	.word	.L1592,.L1904
	.byte	6
	.word	.L1905,.L1906,.L1907
	.byte	7
	.word	.L1908,.L1909
	.byte	5
	.byte	'StateDataPtr',0,1,198,146,1,23
	.word	.L1579,.L1911
	.byte	6
	.word	.L1912,.L1913,.L1914
	.byte	8
	.word	.L1915,.L1916
	.byte	9
	.word	.L1917,.L1913,.L1914
	.byte	0,6
	.word	.L1684,.L1918,.L1919
	.byte	8
	.word	.L1687,.L1920
	.byte	10
	.word	.L1689,.L1918,.L1919
	.byte	6
	.word	.L1690,.L1918,.L1921
	.byte	8
	.word	.L1691,.L1922
	.byte	9
	.word	.L1693,.L1918,.L1921
	.byte	0,0,0,0,0,11
	.word	.L1905,.L193,.L1910
	.byte	6
	.word	.L1923,.L199,.L1902
	.byte	8
	.word	.L1924,.L1925
	.byte	10
	.word	.L1926,.L199,.L1902
	.byte	5
	.byte	'StateDataPtr',0,1,159,147,1,23
	.word	.L1579,.L1927
	.byte	5
	.byte	'Error',0,1,160,147,1,23
	.word	.L1592,.L1928
	.byte	5
	.byte	'BlockIndex',0,1,161,147,1,23
	.word	.L1781,.L1929
	.byte	5
	.byte	'BlkPtr',0,1,162,147,1,23
	.word	.L1583,.L1930
	.byte	6
	.word	.L1684,.L1931,.L1932
	.byte	8
	.word	.L1687,.L1920
	.byte	10
	.word	.L1689,.L1931,.L1932
	.byte	6
	.word	.L1690,.L1931,.L1933
	.byte	8
	.word	.L1691,.L1922
	.byte	9
	.word	.L1693,.L1931,.L1933
	.byte	0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_JobErrorNotification')
	.sect	'.debug_abbrev'
.L1298:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1
	.byte	49,16,17,1,18,1,0,0,7,11,1,49,16,85,6,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18,1,0,0,10,11,1,49,16
	.byte	17,1,18,1,0,0,11,29,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_JobErrorNotification')
	.sect	'.debug_line'
.L1299:
	.word	.L4578-.L4577
.L4577:
	.half	3
	.word	.L4580-.L4579
.L4579:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4580:
	.byte	5,20,7,0,5,2
	.word	.L1096
	.byte	3,155,22,1,5,30,9
	.half	.L4581-.L1096
	.byte	1,5,36,9
	.half	.L3291-.L4581
	.byte	3,1,1,5,9,9
	.half	.L3293-.L3291
	.byte	1,5,5,9
	.half	.L3295-.L3293
	.byte	3,2,1,5,18,7,9
	.half	.L1906-.L3295
	.byte	3,168,252,0,1,5,28,9
	.half	.L4582-.L1906
	.byte	1,5,36,9
	.half	.L3296-.L4582
	.byte	3,22,1,5,5,9
	.half	.L3294-.L3296
	.byte	1,5,19,7,9
	.half	.L4583-.L3294
	.byte	3,2,1,5,56,9
	.half	.L4584-.L4583
	.byte	1,5,41,9
	.half	.L4585-.L4584
	.byte	1,5,18,9
	.half	.L1913-.L4585
	.byte	3,155,142,127,1,5,7,9
	.half	.L1914-.L1913
	.byte	3,231,241,0,1,5,18,7,9
	.half	.L1918-.L1914
	.byte	3,181,142,127,1,5,41,9
	.half	.L1921-.L1918
	.byte	3,27,1,5,43,9
	.half	.L1919-.L1921
	.byte	3,179,241,0,1,5,19,9
	.half	.L191-.L1919
	.byte	3,3,1,5,41,9
	.half	.L4586-.L191
	.byte	1,5,68,9
	.half	.L4587-.L4586
	.byte	1,5,41,9
	.half	.L190-.L4587
	.byte	3,7,1,5,10,9
	.half	.L4588-.L190
	.byte	1,5,32,7,9
	.half	.L192-.L4588
	.byte	3,3,1,5,40,9
	.half	.L4589-.L192
	.byte	3,1,1,5,38,9
	.half	.L4590-.L4589
	.byte	1,5,40,9
	.half	.L4591-.L4590
	.byte	3,1,1,5,38,9
	.half	.L4592-.L4591
	.byte	1,5,1,9
	.half	.L1907-.L4592
	.byte	3,233,131,127,1,5,40,7,9
	.half	.L193-.L1907
	.byte	3,157,252,0,1,5,38,9
	.half	.L4593-.L193
	.byte	1,5,40,9
	.half	.L4594-.L4593
	.byte	3,1,1,5,38,9
	.half	.L4595-.L4594
	.byte	1,5,34,9
	.half	.L4596-.L4595
	.byte	3,1,1,5,32,9
	.half	.L4597-.L4596
	.byte	1,5,1,9
	.half	.L1910-.L4597
	.byte	3,225,131,127,1,5,32,7,9
	.half	.L189-.L1910
	.byte	3,72,1,5,10,9
	.half	.L4598-.L189
	.byte	1,5,40,7,9
	.half	.L4599-.L4598
	.byte	3,3,1,5,38,9
	.half	.L4600-.L4599
	.byte	1,5,40,9
	.half	.L4601-.L4600
	.byte	3,1,1,5,38,9
	.half	.L4602-.L4601
	.byte	1,5,34,9
	.half	.L4603-.L4602
	.byte	3,1,1,5,32,9
	.half	.L4604-.L4603
	.byte	1,5,1,9
	.half	.L4605-.L4604
	.byte	3,51,1,5,49,7,9
	.half	.L196-.L4605
	.byte	3,80,1,5,10,9
	.half	.L3297-.L196
	.byte	1,5,23,7,9
	.half	.L4606-.L3297
	.byte	3,4,1,5,45,9
	.half	.L4607-.L4606
	.byte	1,5,7,9
	.half	.L4608-.L4607
	.byte	1,5,29,7,9
	.half	.L4609-.L4608
	.byte	3,2,1,5,1,7,9
	.half	.L198-.L4609
	.byte	3,42,1,5,18,7,9
	.half	.L199-.L198
	.byte	3,199,252,0,1,5,28,9
	.half	.L4610-.L199
	.byte	1,5,3,9
	.half	.L3299-.L4610
	.byte	3,6,1,5,36,7,9
	.half	.L4611-.L3299
	.byte	3,3,1,5,5,9
	.half	.L4612-.L4611
	.byte	1,5,56,7,9
	.half	.L4613-.L4612
	.byte	3,3,1,5,13,9
	.half	.L4614-.L4613
	.byte	3,1,1,5,67,9
	.half	.L3300-.L4614
	.byte	3,127,1,5,13,9
	.half	.L202-.L3300
	.byte	3,5,1,5,17,9
	.half	.L203-.L202
	.byte	3,4,1,5,54,9
	.half	.L4615-.L203
	.byte	1,5,39,9
	.half	.L4616-.L4615
	.byte	1,5,18,9
	.half	.L1931-.L4616
	.byte	3,222,141,127,1,5,41,9
	.half	.L1933-.L1931
	.byte	3,27,1,5,39,9
	.half	.L1932-.L1933
	.byte	3,139,242,0,1,5,72,9
	.half	.L4617-.L1932
	.byte	3,124,1,5,41,9
	.half	.L201-.L4617
	.byte	3,14,1,5,22,9
	.half	.L3301-.L201
	.byte	3,1,1,5,5,9
	.half	.L4618-.L3301
	.byte	1,5,42,7,9
	.half	.L4619-.L4618
	.byte	3,2,1,5,21,9
	.half	.L4620-.L4619
	.byte	3,10,1,5,33,9
	.half	.L4621-.L4620
	.byte	1,5,22,9
	.half	.L4622-.L4621
	.byte	3,1,1,5,46,9
	.half	.L4623-.L4622
	.byte	3,1,1,5,7,9
	.half	.L4624-.L4623
	.byte	3,127,1,5,51,7,9
	.half	.L4625-.L4624
	.byte	3,3,1,5,63,9
	.half	.L4626-.L4625
	.byte	1,5,11,9
	.half	.L205-.L4626
	.byte	3,5,1,5,28,9
	.half	.L204-.L205
	.byte	3,3,1,5,1,7,9
	.half	.L1301-.L204
	.byte	3,253,130,127,0,1,1
.L4578:
	.sdecl	'.debug_ranges',debug,cluster('Fee_JobErrorNotification')
	.sect	'.debug_ranges'
.L1300:
	.word	-1,.L1096,0,.L1301-.L1096,0,0
.L1909:
	.word	-1,.L1096,.L1906-.L1096,.L1907-.L1096,.L193-.L1096,.L1910-.L1096,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_17_IllegalStateNotification')
	.sect	'.debug_info'
.L1302:
	.word	225
	.half	3
	.word	.L1303
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1305,.L1304
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_17_IllegalStateNotification',0,1,129,23,6,1,1,1
	.word	.L1098,.L1934,.L1097
	.byte	4
	.word	.L1098,.L1934
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_17_IllegalStateNotification')
	.sect	'.debug_abbrev'
.L1303:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_17_IllegalStateNotification')
	.sect	'.debug_line'
.L1304:
	.word	.L4628-.L4627
.L4627:
	.half	3
	.word	.L4630-.L4629
.L4629:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4630:
	.byte	5,8,7,0,5,2
	.word	.L1098
	.byte	3,167,23,1,5,18,9
	.half	.L4631-.L1098
	.byte	1,5,5,9
	.half	.L4632-.L4631
	.byte	1,5,17,7,9
	.half	.L4633-.L4632
	.byte	3,5,1,5,49,9
	.half	.L4634-.L4633
	.byte	1,5,1,7,9
	.half	.L207-.L4634
	.byte	3,14,1,7,9
	.half	.L1306-.L207
	.byte	0,1,1
.L4628:
	.sdecl	'.debug_ranges',debug,cluster('Fee_17_IllegalStateNotification')
	.sect	'.debug_ranges'
.L1305:
	.word	-1,.L1098,0,.L1306-.L1098,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_17_JobEraseErrorNotification')
	.sect	'.debug_info'
.L1307:
	.word	273
	.half	3
	.word	.L1308
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1310,.L1309
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_17_JobEraseErrorNotification',0,1,194,151,1,6,1,1,1
	.word	.L1210,.L1935,.L1209
	.byte	4
	.word	.L1210,.L1935
	.byte	5
	.byte	'Job',0,1,198,151,1,23
	.word	.L1592,.L1936
	.byte	5
	.byte	'StateDataPtr',0,1,199,151,1,23
	.word	.L1579,.L1937
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_17_JobEraseErrorNotification')
	.sect	'.debug_abbrev'
.L1308:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_17_JobEraseErrorNotification')
	.sect	'.debug_line'
.L1309:
	.word	.L4636-.L4635
.L4635:
	.half	3
	.word	.L4638-.L4637
.L4637:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4638:
	.byte	5,20,7,0,5,2
	.word	.L1210
	.byte	3,211,151,1,1,5,30,9
	.half	.L4639-.L1210
	.byte	1,5,36,9
	.half	.L4087-.L4639
	.byte	3,3,1,5,27,9
	.half	.L4088-.L4087
	.byte	3,2,1,5,5,9
	.half	.L4640-.L4088
	.byte	1,5,40,7,9
	.half	.L4641-.L4640
	.byte	3,4,1,5,38,9
	.half	.L4642-.L4641
	.byte	1,5,40,9
	.half	.L4643-.L4642
	.byte	3,1,1,5,38,9
	.half	.L4644-.L4643
	.byte	1,5,34,9
	.half	.L4645-.L4644
	.byte	3,1,1,5,32,9
	.half	.L4646-.L4645
	.byte	1,5,36,9
	.half	.L4647-.L4646
	.byte	3,1,1,5,1,9
	.half	.L1069-.L4647
	.byte	3,33,1,7,9
	.half	.L1311-.L1069
	.byte	0,1,1
.L4636:
	.sdecl	'.debug_ranges',debug,cluster('Fee_17_JobEraseErrorNotification')
	.sect	'.debug_ranges'
.L1310:
	.word	-1,.L1210,0,.L1311-.L1210,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_17_JobProgErrorNotification')
	.sect	'.debug_info'
.L1312:
	.word	272
	.half	3
	.word	.L1313
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1315,.L1314
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_17_JobProgErrorNotification',0,1,177,152,1,6,1,1,1
	.word	.L1212,.L1938,.L1211
	.byte	4
	.word	.L1212,.L1938
	.byte	5
	.byte	'Job',0,1,181,152,1,23
	.word	.L1592,.L1939
	.byte	5
	.byte	'StateDataPtr',0,1,183,152,1,23
	.word	.L1579,.L1940
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_17_JobProgErrorNotification')
	.sect	'.debug_abbrev'
.L1313:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_17_JobProgErrorNotification')
	.sect	'.debug_line'
.L1314:
	.word	.L4649-.L4648
.L4648:
	.half	3
	.word	.L4651-.L4650
.L4650:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4651:
	.byte	5,20,7,0,5,2
	.word	.L1212
	.byte	3,191,152,1,1,5,30,9
	.half	.L4652-.L1212
	.byte	1,5,36,9
	.half	.L4089-.L4652
	.byte	3,3,1,5,9,9
	.half	.L4090-.L4089
	.byte	1,5,27,9
	.half	.L4092-.L4090
	.byte	3,2,1,5,5,9
	.half	.L4653-.L4092
	.byte	1,5,40,7,9
	.half	.L4654-.L4653
	.byte	3,4,1,5,38,9
	.half	.L4093-.L4654
	.byte	1,5,40,9
	.half	.L4655-.L4093
	.byte	3,1,1,5,38,9
	.half	.L4656-.L4655
	.byte	1,5,34,9
	.half	.L4657-.L4656
	.byte	3,1,1,5,32,9
	.half	.L4658-.L4657
	.byte	1,5,52,9
	.half	.L4659-.L4658
	.byte	3,126,1,5,49,9
	.half	.L1070-.L4659
	.byte	3,6,1,5,10,9
	.half	.L4091-.L1070
	.byte	1,5,40,7,9
	.half	.L4660-.L4091
	.byte	3,4,1,5,38,9
	.half	.L4094-.L4660
	.byte	1,5,40,9
	.half	.L4661-.L4094
	.byte	3,1,1,5,38,9
	.half	.L4662-.L4661
	.byte	1,5,37,9
	.half	.L1071-.L4662
	.byte	3,1,1,5,35,9
	.half	.L4663-.L1071
	.byte	1,5,1,9
	.half	.L1072-.L4663
	.byte	3,215,0,1,7,9
	.half	.L1316-.L1072
	.byte	0,1,1
.L4649:
	.sdecl	'.debug_ranges',debug,cluster('Fee_17_JobProgErrorNotification')
	.sect	'.debug_ranges'
.L1315:
	.word	-1,.L1212,0,.L1316-.L1212,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_MainFunction')
	.sect	'.debug_info'
.L1317:
	.word	292
	.half	3
	.word	.L1318
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1320,.L1319
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_MainFunction',0,1,246,26,6,1,1,1
	.word	.L1106,.L1941,.L1105
	.byte	4
	.word	.L1106,.L1941
	.byte	5
	.byte	'StateDataPtr',0,1,249,26,29
	.word	.L1631,.L1942
	.byte	6
	.word	.L1943,.L228,.L230
	.byte	7
	.word	.L1944,.L228,.L230
	.byte	5
	.byte	'StateDataPtr',0,1,247,148,1,29
	.word	.L1631,.L1945
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_MainFunction')
	.sect	'.debug_abbrev'
.L1318:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1
	.byte	49,16,17,1,18,1,0,0,7,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_MainFunction')
	.sect	'.debug_line'
.L1319:
	.word	.L4665-.L4664
.L4664:
	.half	3
	.word	.L4667-.L4666
.L4666:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4667:
	.byte	5,6,7,0,5,2
	.word	.L1106
	.byte	3,255,26,1,5,3,9
	.half	.L4668-.L1106
	.byte	1,5,20,7,9
	.half	.L4669-.L4668
	.byte	3,2,1,5,30,9
	.half	.L4670-.L4669
	.byte	1,5,23,9
	.half	.L3314-.L4670
	.byte	3,3,1,5,24,9
	.half	.L4671-.L3314
	.byte	3,3,1,5,12,9
	.half	.L4672-.L4671
	.byte	3,4,1,7,9
	.half	.L4673-.L4672
	.byte	3,35,1,7,9
	.half	.L4674-.L4673
	.byte	3,37,1,7,9
	.half	.L4675-.L4674
	.byte	3,117,1,7,9
	.half	.L4676-.L4675
	.byte	3,24,1,5,1,7,9
	.half	.L223-.L4676
	.byte	3,18,1,5,24,7,9
	.half	.L224-.L223
	.byte	3,156,127,1,5,9,9
	.half	.L4677-.L224
	.byte	1,5,22,7,9
	.half	.L4678-.L4677
	.byte	3,3,1,5,25,7,9
	.half	.L225-.L4678
	.byte	3,33,1,5,24,7,9
	.half	.L227-.L225
	.byte	3,25,1,5,9,9
	.half	.L4679-.L227
	.byte	1,5,26,7,9
	.half	.L4680-.L4679
	.byte	3,3,1,5,24,7,9
	.half	.L226-.L4680
	.byte	3,8,1,5,9,9
	.half	.L4681-.L226
	.byte	1,5,25,7,9
	.half	.L4682-.L4681
	.byte	3,5,1,5,18,7,9
	.half	.L228-.L4682
	.byte	3,157,249,0,1,5,28,9
	.half	.L4683-.L228
	.byte	1,5,20,9
	.half	.L3316-.L4683
	.byte	3,7,1,5,5,9
	.half	.L4684-.L3316
	.byte	1,5,29,7,9
	.half	.L4685-.L4684
	.byte	3,3,1,5,1,7,9
	.half	.L230-.L4685
	.byte	3,240,134,127,1,7,9
	.half	.L1321-.L230
	.byte	0,1,1
.L4665:
	.sdecl	'.debug_ranges',debug,cluster('Fee_MainFunction')
	.sect	'.debug_ranges'
.L1320:
	.word	-1,.L1106,0,.L1321-.L1106,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lDecideMainJob')
	.sect	'.debug_info'
.L1322:
	.word	1043
	.half	3
	.word	.L1323
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1325,.L1324
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lDecideMainJob',0,1,216,42,13,1,1
	.word	.L1122,.L1946,.L1121
	.byte	4
	.word	.L1122,.L1946
	.byte	5
	.byte	'StateDataPtr',0,1,218,42,26
	.word	.L1579,.L1947
	.byte	6
	.word	.L1948,.L316,.L1949
	.byte	7
	.word	.L1950,.L316,.L1949
	.byte	5
	.byte	'StateDataPtr',0,1,241,39,22
	.word	.L1579,.L1951
	.byte	6
	.word	.L1952,.L1953,.L1954
	.byte	8
	.word	.L1955,.L1956
	.byte	7
	.word	.L1957,.L1953,.L1954
	.byte	5
	.byte	'RetVal',0,1,131,32,11
	.word	.L1592,.L1958
	.byte	0,0,6
	.word	.L1959,.L319,.L1960
	.byte	8
	.word	.L1961,.L1962
	.byte	7
	.word	.L1963,.L319,.L1960
	.byte	5
	.byte	'RetVal',0,1,169,32,11
	.word	.L1592,.L1964
	.byte	0,0,0,0,6
	.word	.L1965,.L312,.L1966
	.byte	7
	.word	.L1967,.L312,.L1966
	.byte	5
	.byte	'StateDataPtr',0,1,215,40,22
	.word	.L1579,.L1968
	.byte	6
	.word	.L1952,.L1969,.L1970
	.byte	8
	.word	.L1955,.L1956
	.byte	7
	.word	.L1957,.L1969,.L1970
	.byte	5
	.byte	'RetVal',0,1,131,32,11
	.word	.L1592,.L1971
	.byte	0,0,6
	.word	.L1959,.L327,.L1972
	.byte	8
	.word	.L1961,.L1962
	.byte	7
	.word	.L1963,.L327,.L1972
	.byte	5
	.byte	'RetVal',0,1,169,32,11
	.word	.L1592,.L1973
	.byte	0,0,0,0,6
	.word	.L1974,.L313,.L309
	.byte	9
	.word	.L1975,.L1976
	.byte	5
	.byte	'StateDataPtr',0,1,163,41,22
	.word	.L1579,.L1978
	.byte	6
	.word	.L1979,.L1980,.L1981
	.byte	8
	.word	.L1982,.L1983
	.byte	7
	.word	.L1984,.L1980,.L1981
	.byte	5
	.byte	'RetVal',0,1,208,33,11
	.word	.L1592,.L1985
	.byte	0,0,6
	.word	.L1959,.L337,.L1986
	.byte	8
	.word	.L1961,.L1962
	.byte	7
	.word	.L1963,.L337,.L1986
	.byte	5
	.byte	'RetVal',0,1,169,32,11
	.word	.L1592,.L1987
	.byte	0,0,0,0,10
	.word	.L1974,.L341,.L1977
	.byte	10
	.word	.L1974,.L337,.L348
	.byte	6
	.word	.L1988,.L314,.L1989
	.byte	7
	.word	.L1990,.L314,.L1989
	.byte	5
	.byte	'StateDataPtr',0,1,247,41,22
	.word	.L1579,.L1991
	.byte	6
	.word	.L1952,.L354,.L1992
	.byte	8
	.word	.L1955,.L1956
	.byte	7
	.word	.L1957,.L354,.L1992
	.byte	5
	.byte	'RetVal',0,1,131,32,11
	.word	.L1592,.L1993
	.byte	0,0,0,0,6
	.word	.L1994,.L315,.L1995
	.byte	7
	.word	.L1996,.L315,.L1995
	.byte	5
	.byte	'StateDataPtr',0,1,174,39,22
	.word	.L1579,.L1997
	.byte	6
	.word	.L1952,.L360,.L1998
	.byte	8
	.word	.L1955,.L1956
	.byte	7
	.word	.L1957,.L360,.L1998
	.byte	5
	.byte	'RetVal',0,1,131,32,11
	.word	.L1592,.L1999
	.byte	0,0,6
	.word	.L1959,.L363,.L2000
	.byte	8
	.word	.L1961,.L1962
	.byte	7
	.word	.L1963,.L363,.L2000
	.byte	5
	.byte	'RetVal',0,1,169,32,11
	.word	.L1592,.L2001
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lDecideMainJob')
	.sect	'.debug_abbrev'
.L1323:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1,49,16
	.byte	17,1,18,1,0,0,7,11,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,85,6,0,0,10,29,0,49,16,17,1
	.byte	18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lDecideMainJob')
	.sect	'.debug_line'
.L1324:
	.word	.L4687-.L4686
.L4686:
	.half	3
	.word	.L4689-.L4688
.L4688:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4689:
	.byte	5,18,7,0,5,2
	.word	.L1122
	.byte	3,219,42,1,5,28,9
	.half	.L4690-.L1122
	.byte	1,5,22,9
	.half	.L3366-.L4690
	.byte	3,3,1,5,3,9
	.half	.L4691-.L3366
	.byte	1,5,22,9
	.half	.L311-.L4691
	.byte	3,8,1,5,7,9
	.half	.L4692-.L311
	.byte	1,5,36,7,9
	.half	.L4693-.L4692
	.byte	3,20,1,5,7,9
	.half	.L4694-.L4693
	.byte	3,7,1,5,18,9
	.half	.L316-.L4694
	.byte	3,241,124,1,5,28,9
	.half	.L4695-.L316
	.byte	1,5,12,9
	.half	.L1953-.L4695
	.byte	3,147,120,1,5,3,9
	.half	.L1954-.L1953
	.byte	3,241,7,1,5,34,7,9
	.half	.L4696-.L1954
	.byte	3,21,1,5,47,9
	.half	.L4697-.L4696
	.byte	1,5,14,9
	.half	.L319-.L4697
	.byte	3,160,120,1,5,36,9
	.half	.L4698-.L319
	.byte	1,5,6,9
	.half	.L4699-.L4698
	.byte	1,5,37,7,9
	.half	.L4700-.L4699
	.byte	3,1,1,5,34,9
	.half	.L4701-.L4700
	.byte	1,5,12,7,9
	.half	.L321-.L4701
	.byte	3,2,1,5,27,9
	.half	.L3369-.L321
	.byte	1,5,12,9
	.half	.L322-.L3369
	.byte	3,4,1,5,8,9
	.half	.L323-.L322
	.byte	3,225,7,1,5,34,7,9
	.half	.L1960-.L323
	.byte	3,20,1,5,7,9
	.half	.L1949-.L1960
	.byte	3,236,2,1,5,18,9
	.half	.L312-.L1949
	.byte	3,197,125,1,5,28,9
	.half	.L4702-.L312
	.byte	1,5,18,9
	.half	.L3371-.L4702
	.byte	3,9,1,5,3,9
	.half	.L4703-.L3371
	.byte	1,5,12,7,9
	.half	.L1969-.L4703
	.byte	3,164,119,1,5,5,9
	.half	.L1970-.L1969
	.byte	3,235,8,1,5,34,7,9
	.half	.L4704-.L1970
	.byte	3,2,1,5,47,9
	.half	.L4705-.L4704
	.byte	1,5,14,9
	.half	.L327-.L4705
	.byte	3,185,119,1,5,36,9
	.half	.L4706-.L327
	.byte	1,5,6,9
	.half	.L4707-.L4706
	.byte	1,5,37,7,9
	.half	.L4708-.L4707
	.byte	3,1,1,5,34,9
	.half	.L4709-.L4708
	.byte	1,5,12,7,9
	.half	.L329-.L4709
	.byte	3,2,1,5,27,9
	.half	.L3372-.L329
	.byte	1,5,12,9
	.half	.L330-.L3372
	.byte	3,4,1,5,10,9
	.half	.L331-.L330
	.byte	3,195,8,1,5,34,7,9
	.half	.L1972-.L331
	.byte	3,2,1,5,48,9
	.half	.L3373-.L1972
	.byte	1,5,25,9
	.half	.L332-.L3373
	.byte	3,10,1,5,41,9
	.half	.L4710-.L332
	.byte	1,5,10,9
	.half	.L3374-.L4710
	.byte	1,5,34,7,9
	.half	.L4711-.L3374
	.byte	3,2,1,5,45,9
	.half	.L4712-.L4711
	.byte	1,5,34,9
	.half	.L334-.L4712
	.byte	3,4,1,5,7,9
	.half	.L1966-.L334
	.byte	3,147,2,1,5,18,9
	.half	.L313-.L1966
	.byte	3,138,126,1,5,28,9
	.half	.L4713-.L313
	.byte	1,5,18,9
	.half	.L3376-.L4713
	.byte	3,4,1,5,3,9
	.half	.L4714-.L3376
	.byte	1,5,38,7,9
	.half	.L1980-.L4714
	.byte	3,170,120,1,5,7,9
	.half	.L4715-.L1980
	.byte	1,5,39,7,9
	.half	.L4716-.L4715
	.byte	3,2,1,5,70,9
	.half	.L4717-.L4716
	.byte	1,5,12,7,9
	.half	.L4718-.L4717
	.byte	3,3,1,5,27,9
	.half	.L3377-.L4718
	.byte	1,5,12,9
	.half	.L338-.L3377
	.byte	3,4,1,5,8,9
	.half	.L340-.L338
	.byte	3,210,7,1,5,22,7,9
	.half	.L1981-.L340
	.byte	3,1,1,5,38,9
	.half	.L4719-.L1981
	.byte	1,5,35,9
	.half	.L3378-.L4719
	.byte	1,5,34,7,9
	.half	.L4720-.L3378
	.byte	3,2,1,5,32,9
	.half	.L4721-.L4720
	.byte	1,5,1,9
	.half	.L309-.L4721
	.byte	3,152,2,1,5,34,7,9
	.half	.L341-.L309
	.byte	3,237,125,1,5,32,9
	.half	.L4722-.L341
	.byte	1,5,1,9
	.half	.L1977-.L4722
	.byte	3,147,2,1,5,14,7,9
	.half	.L337-.L1977
	.byte	3,227,116,1,5,36,9
	.half	.L4723-.L337
	.byte	1,5,6,9
	.half	.L4724-.L4723
	.byte	1,5,37,7,9
	.half	.L4725-.L4724
	.byte	3,1,1,5,34,9
	.half	.L4726-.L4725
	.byte	1,5,12,7,9
	.half	.L345-.L4726
	.byte	3,2,1,5,27,9
	.half	.L3379-.L345
	.byte	1,5,12,9
	.half	.L346-.L3379
	.byte	3,4,1,5,8,9
	.half	.L347-.L346
	.byte	3,136,9,1,5,32,7,9
	.half	.L1986-.L347
	.byte	3,2,1,5,30,9
	.half	.L3380-.L1986
	.byte	1,5,1,9
	.half	.L348-.L3380
	.byte	3,140,2,1,5,18,7,9
	.half	.L314-.L348
	.byte	3,176,126,1,5,28,9
	.half	.L4727-.L314
	.byte	1,5,18,9
	.half	.L3382-.L4727
	.byte	3,5,1,5,3,9
	.half	.L4728-.L3382
	.byte	1,5,21,7,9
	.half	.L4729-.L4728
	.byte	3,5,1,5,37,9
	.half	.L4730-.L4729
	.byte	1,5,5,9
	.half	.L4731-.L4730
	.byte	1,5,34,7,9
	.half	.L4732-.L4731
	.byte	3,6,1,5,5,9
	.half	.L4733-.L4732
	.byte	3,126,1,5,25,9
	.half	.L350-.L4733
	.byte	3,6,1,5,47,9
	.half	.L4734-.L350
	.byte	1,5,12,9
	.half	.L4735-.L4734
	.byte	1,5,47,7,9
	.half	.L4736-.L4735
	.byte	3,1,1,5,44,9
	.half	.L4737-.L4736
	.byte	1,5,22,7,9
	.half	.L353-.L4737
	.byte	3,7,1,5,38,9
	.half	.L4738-.L353
	.byte	1,5,9,9
	.half	.L4739-.L4738
	.byte	1,5,22,7,9
	.half	.L4740-.L4739
	.byte	3,1,1,5,35,9
	.half	.L4741-.L4740
	.byte	1,5,34,7,9
	.half	.L351-.L4741
	.byte	3,2,1,5,41,9
	.half	.L4742-.L351
	.byte	3,126,1,5,12,9
	.half	.L354-.L4742
	.byte	3,240,117,1,5,8,9
	.half	.L1992-.L354
	.byte	3,163,10,1,5,32,7,9
	.half	.L4743-.L1992
	.byte	3,2,1,5,7,9
	.half	.L1989-.L4743
	.byte	3,252,0,1,5,18,9
	.half	.L315-.L1989
	.byte	3,137,124,1,5,28,9
	.half	.L4744-.L315
	.byte	1,5,34,9
	.half	.L3384-.L4744
	.byte	3,4,1,5,6,9
	.half	.L4745-.L3384
	.byte	1,5,35,7,9
	.half	.L4746-.L4745
	.byte	3,1,1,5,8,9
	.half	.L4747-.L4746
	.byte	1,5,20,9
	.half	.L4748-.L4747
	.byte	1,5,32,7,9
	.half	.L4749-.L4748
	.byte	3,2,1,5,45,9
	.half	.L4750-.L4749
	.byte	1,5,12,9
	.half	.L360-.L4750
	.byte	3,207,120,1,5,8,9
	.half	.L1998-.L360
	.byte	3,181,7,1,5,30,7,9
	.half	.L4751-.L1998
	.byte	3,3,1,5,5,9
	.half	.L4752-.L4751
	.byte	1,5,34,7,9
	.half	.L4753-.L4752
	.byte	3,2,1,5,5,9
	.half	.L4754-.L4753
	.byte	3,126,1,5,14,9
	.half	.L363-.L4754
	.byte	3,238,120,1,5,36,9
	.half	.L4755-.L363
	.byte	1,5,6,9
	.half	.L4756-.L4755
	.byte	1,5,37,7,9
	.half	.L4757-.L4756
	.byte	3,1,1,5,34,9
	.half	.L4758-.L4757
	.byte	1,5,12,7,9
	.half	.L366-.L4758
	.byte	3,2,1,5,27,9
	.half	.L3385-.L366
	.byte	1,5,12,9
	.half	.L367-.L3385
	.byte	3,4,1,5,11,9
	.half	.L368-.L367
	.byte	3,145,7,1,5,39,7,9
	.half	.L2000-.L368
	.byte	3,1,1,5,24,9
	.half	.L3386-.L2000
	.byte	1,5,36,7,9
	.half	.L4759-.L3386
	.byte	3,3,1,5,5,9
	.half	.L4760-.L4759
	.byte	1,5,34,7,9
	.half	.L4761-.L4760
	.byte	3,2,1,5,7,9
	.half	.L1995-.L4761
	.byte	3,237,3,1,5,38,9
	.half	.L310-.L1995
	.byte	3,7,1,5,7,9
	.half	.L4762-.L310
	.byte	1,5,36,7,9
	.half	.L4763-.L4762
	.byte	3,2,1,5,34,9
	.half	.L372-.L4763
	.byte	1,5,1,9
	.half	.L355-.L372
	.byte	3,9,1,7,9
	.half	.L1326-.L355
	.byte	0,1,1
.L4687:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lDecideMainJob')
	.sect	'.debug_ranges'
.L1325:
	.word	-1,.L1122,0,.L1326-.L1122,0,0
.L1976:
	.word	-1,.L1122,.L313-.L1122,.L309-.L1122,.L341-.L1122,.L1977-.L1122,.L337-.L1122,.L348-.L1122,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lIsUnerasableAddr')
	.sect	'.debug_info'
.L1327:
	.word	387
	.half	3
	.word	.L1328
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1330,.L1329
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lIsUnerasableAddr',0,1,243,104,16
	.word	.L1592
	.byte	1,1
	.word	.L1184,.L2002,.L1183
	.byte	4
	.byte	'Addr',0,1,243,104,51
	.word	.L2003,.L2004
	.byte	5
	.word	.L1184,.L2002
	.byte	6
	.byte	'StateDataPtr',0,1,245,104,28
	.word	.L1631,.L2005
	.byte	6
	.byte	'RetVal',0,1,246,104,22
	.word	.L1592,.L2006
	.byte	6
	.byte	'UnErCount',0,1,247,104,22
	.word	.L1592,.L2007
	.byte	6
	.byte	'NewAddr',0,1,248,104,22
	.word	.L1589,.L2008
	.byte	6
	.byte	'BankNumber',0,1,249,104,22
	.word	.L1592,.L2009
	.byte	7
	.word	.L1690,.L2010,.L2011
	.byte	8
	.word	.L1691,.L2012
	.byte	9
	.word	.L1693,.L2010,.L2011
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lIsUnerasableAddr')
	.sect	'.debug_abbrev'
.L1328:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lIsUnerasableAddr')
	.sect	'.debug_line'
.L1329:
	.word	.L4765-.L4764
.L4764:
	.half	3
	.word	.L4767-.L4766
.L4766:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4767:
	.byte	5,18,7,0,5,2
	.word	.L1184
	.byte	3,250,232,0,1,5,28,9
	.half	.L4768-.L1184
	.byte	1,5,14,9
	.half	.L4015-.L4768
	.byte	3,3,1,5,11,9
	.half	.L4769-.L4015
	.byte	1,5,13,9
	.half	.L4016-.L4769
	.byte	3,9,1,5,10,9
	.half	.L4017-.L4016
	.byte	3,2,1,5,18,9
	.half	.L2010-.L4017
	.byte	3,141,184,127,1,5,29,9
	.half	.L2011-.L2010
	.byte	3,252,199,0,1,5,36,9
	.half	.L1035-.L2011
	.byte	3,4,1,5,65,9
	.half	.L4770-.L1035
	.byte	1,5,5,9
	.half	.L4771-.L4770
	.byte	3,127,1,5,14,7,9
	.half	.L4772-.L4771
	.byte	3,3,1,5,29,9
	.half	.L4773-.L4772
	.byte	1,5,16,9
	.half	.L1036-.L4773
	.byte	3,4,1,5,50,9
	.half	.L1034-.L1036
	.byte	3,117,1,5,62,9
	.half	.L4774-.L1034
	.byte	1,5,9,9
	.half	.L4775-.L4774
	.byte	1,5,20,7,9
	.half	.L4776-.L4775
	.byte	3,1,1,5,1,7,9
	.half	.L1038-.L4776
	.byte	3,14,1,7,9
	.half	.L1331-.L1038
	.byte	0,1,1
.L4765:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lIsUnerasableAddr')
	.sect	'.debug_ranges'
.L1330:
	.word	-1,.L1184,0,.L1331-.L1184,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lHandleWriteFail')
	.sect	'.debug_info'
.L1332:
	.word	240
	.half	3
	.word	.L1333
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1335,.L1334
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lHandleWriteFail',0,1,240,110,13,1,1
	.word	.L1198,.L2013,.L1197
	.byte	4
	.word	.L1198,.L2013
	.byte	5
	.byte	'StateDataPtr',0,1,242,110,23
	.word	.L1579,.L2014
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lHandleWriteFail')
	.sect	'.debug_abbrev'
.L1333:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lHandleWriteFail')
	.sect	'.debug_line'
.L1334:
	.word	.L4778-.L4777
.L4777:
	.half	3
	.word	.L4780-.L4779
.L4779:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4780:
	.byte	5,18,7,0,5,2
	.word	.L1198
	.byte	3,243,238,0,1,5,28,9
	.half	.L4781-.L1198
	.byte	1,5,36,9
	.half	.L4049-.L4781
	.byte	3,3,1,5,34,9
	.half	.L4782-.L4049
	.byte	1,5,6,9
	.half	.L4783-.L4782
	.byte	3,17,1,5,16,9
	.half	.L4784-.L4783
	.byte	1,5,3,9
	.half	.L4785-.L4784
	.byte	1,5,15,7,9
	.half	.L4786-.L4785
	.byte	3,6,1,5,47,9
	.half	.L4787-.L4786
	.byte	1,5,1,7,9
	.half	.L1050-.L4787
	.byte	3,2,1,7,9
	.half	.L1336-.L1050
	.byte	0,1,1
.L4778:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lHandleWriteFail')
	.sect	'.debug_ranges'
.L1335:
	.word	-1,.L1198,0,.L1336-.L1198,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lHandleUsrJobFailure')
	.sect	'.debug_info'
.L1337:
	.word	263
	.half	3
	.word	.L1338
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1340,.L1339
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lHandleUsrJobFailure',0,1,214,34,13,1,1
	.word	.L1112,.L2015,.L1111
	.byte	4
	.byte	'Error',0,1,214,34,50
	.word	.L2016,.L2017
	.byte	5
	.word	.L1112,.L2015
	.byte	6
	.byte	'StateDataPtr',0,1,216,34,26
	.word	.L1579,.L2018
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lHandleUsrJobFailure')
	.sect	'.debug_abbrev'
.L1338:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lHandleUsrJobFailure')
	.sect	'.debug_line'
.L1339:
	.word	.L4789-.L4788
.L4788:
	.half	3
	.word	.L4791-.L4790
.L4790:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4791:
	.byte	5,18,7,0,5,2
	.word	.L1112
	.byte	3,217,34,1,5,28,9
	.half	.L4792-.L1112
	.byte	1,5,3,9
	.half	.L3339-.L4792
	.byte	3,4,1,5,34,7,9
	.half	.L4793-.L3339
	.byte	3,2,1,5,32,9
	.half	.L4794-.L4793
	.byte	1,5,37,9
	.half	.L4795-.L4794
	.byte	3,7,1,5,35,9
	.half	.L4796-.L4795
	.byte	1,5,50,9
	.half	.L4797-.L4796
	.byte	3,121,1,5,34,9
	.half	.L254-.L4797
	.byte	3,11,1,5,32,9
	.half	.L4798-.L254
	.byte	1,5,38,9
	.half	.L255-.L4798
	.byte	3,17,1,5,36,9
	.half	.L4799-.L255
	.byte	1,5,31,9
	.half	.L4800-.L4799
	.byte	3,5,1,5,52,9
	.half	.L4801-.L4800
	.byte	1,5,36,9
	.half	.L4802-.L4801
	.byte	3,1,1,5,34,9
	.half	.L4803-.L4802
	.byte	1,9
	.half	.L4804-.L4803
	.byte	3,1,1,5,37,9
	.half	.L4805-.L4804
	.byte	3,1,1,5,6,9
	.half	.L4806-.L4805
	.byte	3,47,1,5,16,9
	.half	.L4807-.L4806
	.byte	1,5,3,9
	.half	.L4808-.L4807
	.byte	1,5,16,7,9
	.half	.L4809-.L4808
	.byte	3,5,1,5,45,9
	.half	.L4810-.L4809
	.byte	1,5,1,7,9
	.half	.L256-.L4810
	.byte	3,3,1,7,9
	.half	.L1341-.L256
	.byte	0,1,1
.L4789:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lHandleUsrJobFailure')
	.sect	'.debug_ranges'
.L1340:
	.word	-1,.L1112,0,.L1341-.L1112,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lUpdateBlockInfo')
	.sect	'.debug_info'
.L1342:
	.word	437
	.half	3
	.word	.L1343
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1345,.L1344
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lUpdateBlockInfo',0,1,140,112,13,1,1
	.word	.L1200,.L2019,.L1199
	.byte	4
	.byte	'Status',0,1,140,112,68
	.word	.L2020,.L2021
	.byte	4
	.byte	'Index',0,1,141,112,47
	.word	.L2022,.L2023
	.byte	4
	.byte	'pageCount',0,1,141,112,67
	.word	.L2024,.L2025
	.byte	5
	.word	.L1200,.L2019
	.byte	6
	.byte	'CachePtr',0,1,143,112,28
	.word	.L1583,.L2026
	.byte	6
	.byte	'StateDataPtr',0,1,144,112,28
	.word	.L1579,.L2027
	.byte	6
	.byte	'NewPageCount',0,1,145,112,28
	.word	.L1589,.L2028
	.byte	6
	.byte	'BlockCycleCount',0,1,146,112,28
	.word	.L1589,.L2029
	.byte	6
	.byte	'PrvBlockCycleCount',0,1,147,112,28
	.word	.L1589,.L2030
	.byte	6
	.byte	'TempArrayPtr',0,1,148,112,29
	.word	.L1622,.L2031
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lUpdateBlockInfo')
	.sect	'.debug_abbrev'
.L1343:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lUpdateBlockInfo')
	.sect	'.debug_line'
.L1344:
	.word	.L4812-.L4811
.L4811:
	.half	3
	.word	.L4814-.L4813
.L4813:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4814:
	.byte	5,13,7,0,5,2
	.word	.L1200
	.byte	3,139,240,0,1,5,18,9
	.half	.L4051-.L1200
	.byte	3,13,1,5,28,9
	.half	.L4815-.L4051
	.byte	1,5,42,9
	.half	.L4052-.L4815
	.byte	3,1,1,5,32,9
	.half	.L4816-.L4052
	.byte	3,5,1,5,14,9
	.half	.L4053-.L4816
	.byte	3,4,1,5,3,9
	.half	.L4817-.L4053
	.byte	1,5,37,7,9
	.half	.L4818-.L4817
	.byte	3,7,1,5,23,9
	.half	.L4819-.L4818
	.byte	1,5,21,9
	.half	.L4820-.L4819
	.byte	3,1,1,5,36,9
	.half	.L4821-.L4820
	.byte	1,5,28,9
	.half	.L4822-.L4821
	.byte	1,5,41,9
	.half	.L4823-.L4822
	.byte	3,1,1,5,33,9
	.half	.L4824-.L4823
	.byte	1,5,37,9
	.half	.L4825-.L4824
	.byte	3,1,1,5,29,9
	.half	.L4826-.L4825
	.byte	1,5,41,9
	.half	.L4827-.L4826
	.byte	3,1,1,5,25,9
	.half	.L4828-.L4827
	.byte	1,5,1,9
	.half	.L4829-.L4828
	.byte	3,46,1,5,19,7,9
	.half	.L1051-.L4829
	.byte	3,87,1,5,8,9
	.half	.L4830-.L1051
	.byte	1,5,45,7,9
	.half	.L4831-.L4830
	.byte	3,4,1,5,26,9
	.half	.L4050-.L4831
	.byte	3,9,1,5,46,9
	.half	.L4055-.L4050
	.byte	3,2,1,5,47,9
	.half	.L4832-.L4055
	.byte	3,8,1,5,5,9
	.half	.L4054-.L4832
	.byte	1,5,47,7,9
	.half	.L4833-.L4054
	.byte	3,3,1,5,33,9
	.half	.L4056-.L4833
	.byte	1,5,45,9
	.half	.L4834-.L4056
	.byte	3,1,1,5,29,9
	.half	.L4835-.L4834
	.byte	1,5,23,9
	.half	.L4836-.L4835
	.byte	3,1,1,5,46,9
	.half	.L4837-.L4836
	.byte	1,5,38,9
	.half	.L4838-.L4837
	.byte	1,5,51,9
	.half	.L4839-.L4838
	.byte	3,1,1,5,43,9
	.half	.L4840-.L4839
	.byte	1,5,47,9
	.half	.L4841-.L4840
	.byte	3,1,1,5,39,9
	.half	.L4842-.L4841
	.byte	1,5,1,9
	.half	.L1053-.L4842
	.byte	3,11,1,7,9
	.half	.L1346-.L1053
	.byte	0,1,1
.L4812:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lUpdateBlockInfo')
	.sect	'.debug_ranges'
.L1345:
	.word	-1,.L1200,0,.L1346-.L1200,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lUpdateUnconfigBlockInfo')
	.sect	'.debug_info'
.L1347:
	.word	394
	.half	3
	.word	.L1348
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1350,.L1349
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lUpdateUnconfigBlockInfo',0,1,242,112,13,1,1
	.word	.L1202,.L2032,.L1201
	.byte	4
	.byte	'BlockNumber',0,1,242,112,55
	.word	.L2033,.L2034
	.byte	4
	.byte	'PageCount',0,1,243,112,18
	.word	.L2035,.L2036
	.byte	5
	.word	.L1202,.L2032
	.byte	6
	.byte	'StateDataPtr',0,1,245,112,28
	.word	.L1579,.L2037
	.byte	6
	.byte	'UnconfigBlockPtr',0,1,246,112,28
	.word	.L1583,.L2038
	.byte	6
	.byte	'UnconfigBlockIndex',0,1,247,112,28
	.word	.L1781,.L2039
	.byte	6
	.byte	'TempUnConfigBlockCount',0,1,248,112,28
	.word	.L1781,.L2040
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lUpdateUnconfigBlockInfo')
	.sect	'.debug_abbrev'
.L1348:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lUpdateUnconfigBlockInfo')
	.sect	'.debug_line'
.L1349:
	.word	.L4844-.L4843
.L4843:
	.half	3
	.word	.L4846-.L4845
.L4845:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4846:
	.byte	5,18,7,0,5,2
	.word	.L1202
	.byte	3,250,240,0,1,5,28,9
	.half	.L4847-.L1202
	.byte	1,5,40,9
	.half	.L4057-.L4847
	.byte	3,1,1,5,22,9
	.half	.L4058-.L4057
	.byte	3,2,1,5,61,9
	.half	.L4060-.L4058
	.byte	3,2,1,5,50,9
	.half	.L4848-.L4060
	.byte	1,5,55,9
	.half	.L4062-.L4848
	.byte	3,5,1,5,23,9
	.half	.L1056-.L4062
	.byte	3,2,1,5,21,9
	.half	.L4063-.L1056
	.byte	3,2,1,5,9,9
	.half	.L1055-.L4063
	.byte	3,123,1,5,26,7,9
	.half	.L4849-.L1055
	.byte	3,1,1,5,40,9
	.half	.L4850-.L4849
	.byte	1,5,3,7,9
	.half	.L1057-.L4850
	.byte	3,7,1,5,10,7,9
	.half	.L4851-.L1057
	.byte	3,3,1,5,20,9
	.half	.L4852-.L4851
	.byte	1,5,33,9
	.half	.L4064-.L4852
	.byte	1,5,9,9
	.half	.L4853-.L4064
	.byte	3,1,1,5,5,9
	.half	.L4854-.L4853
	.byte	3,127,1,5,47,7,9
	.half	.L4855-.L4854
	.byte	3,18,1,5,33,9
	.half	.L4856-.L4855
	.byte	1,5,37,9
	.half	.L4857-.L4856
	.byte	3,1,1,5,64,9
	.half	.L4858-.L4857
	.byte	3,1,1,5,35,9
	.half	.L4859-.L4858
	.byte	1,5,29,9
	.half	.L4860-.L4859
	.byte	3,1,1,5,67,9
	.half	.L4065-.L4860
	.byte	3,125,1,5,44,9
	.half	.L1059-.L4065
	.byte	3,8,1,5,42,9
	.half	.L4861-.L1059
	.byte	1,5,39,9
	.half	.L1058-.L4861
	.byte	3,3,1,5,1,9
	.half	.L4862-.L1058
	.byte	3,1,1,7,9
	.half	.L1351-.L4862
	.byte	0,1,1
.L4844:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lUpdateUnconfigBlockInfo')
	.sect	'.debug_ranges'
.L1350:
	.word	-1,.L1202,0,.L1351-.L1202,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lRegisterWriteRequest')
	.sect	'.debug_info'
.L1352:
	.word	299
	.half	3
	.word	.L1353
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1355,.L1354
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lRegisterWriteRequest',0,1,224,66,13,1,1
	.word	.L1140,.L2041,.L1139
	.byte	4
	.byte	'DataWriteBufferPtr',0,1,224,66,59
	.word	.L2042,.L2043
	.byte	4
	.byte	'BlockPtr',0,1,225,66,67
	.word	.L2044,.L2045
	.byte	5
	.word	.L1140,.L2041
	.byte	6
	.byte	'StateDataPtr',0,1,227,66,26
	.word	.L1579,.L2046
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lRegisterWriteRequest')
	.sect	'.debug_abbrev'
.L1353:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lRegisterWriteRequest')
	.sect	'.debug_line'
.L1354:
	.word	.L4864-.L4863
.L4863:
	.half	3
	.word	.L4866-.L4865
.L4865:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4866:
	.byte	5,18,7,0,5,2
	.word	.L1140
	.byte	3,228,194,0,1,5,28,9
	.half	.L4867-.L1140
	.byte	1,5,31,9
	.half	.L3652-.L4867
	.byte	3,1,1,5,62,9
	.half	.L4868-.L3652
	.byte	1,5,47,9
	.half	.L4869-.L4868
	.byte	3,1,1,5,18,9
	.half	.L4870-.L4869
	.byte	3,4,1,5,8,9
	.half	.L4871-.L4870
	.byte	1,5,10,7,9
	.half	.L4872-.L4871
	.byte	3,3,1,5,38,7,9
	.half	.L4873-.L4872
	.byte	3,4,1,5,55,9
	.half	.L4874-.L4873
	.byte	1,5,38,9
	.half	.L671-.L4874
	.byte	3,4,1,5,36,9
	.half	.L673-.L671
	.byte	1,5,32,9
	.half	.L4875-.L673
	.byte	3,6,1,5,30,9
	.half	.L4876-.L4875
	.byte	1,5,55,9
	.half	.L4877-.L4876
	.byte	3,5,1,5,45,9
	.half	.L4878-.L4877
	.byte	1,5,51,9
	.half	.L4879-.L4878
	.byte	3,1,1,5,46,9
	.half	.L4880-.L4879
	.byte	3,3,1,5,36,9
	.half	.L4881-.L4880
	.byte	1,5,30,9
	.half	.L4882-.L4881
	.byte	3,3,1,5,28,9
	.half	.L4883-.L4882
	.byte	1,5,1,9
	.half	.L4884-.L4883
	.byte	3,1,1,7,9
	.half	.L1356-.L4884
	.byte	0,1,1
.L4864:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lRegisterWriteRequest')
	.sect	'.debug_ranges'
.L1355:
	.word	-1,.L1140,0,.L1356-.L1140,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lRegisterNvmRead')
	.sect	'.debug_info'
.L1357:
	.word	580
	.half	3
	.word	.L1358
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1360,.L1359
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lRegisterNvmRead',0,1,137,114,23
	.word	.L1592
	.byte	1,1
	.word	.L1204,.L2047,.L1203
	.byte	4
	.byte	'BlockNumber',0,1,137,114,58
	.word	.L2048,.L2049
	.byte	4
	.byte	'BlockOffset',0,1,138,114,18
	.word	.L2050,.L2051
	.byte	4
	.byte	'DataBufferPtr',0,1,138,114,45
	.word	.L2052,.L2053
	.byte	4
	.byte	'Length',0,1,138,114,73
	.word	.L2054,.L2055
	.byte	4
	.byte	'GetPrevCopy',0,1,139,114,17
	.word	.L2056,.L2057
	.byte	5
	.word	.L1204,.L2047
	.byte	6
	.byte	'StateDataPtr',0,1,141,114,23
	.word	.L1579,.L2058
	.byte	6
	.byte	'RetVal',0,1,142,114,18
	.word	.L1592,.L2059
	.byte	6
	.byte	'RetValue',0,1,143,114,18
	.word	.L1592,.L2060
	.byte	6
	.byte	'PendReqPtr',0,1,144,114,25
	.word	.L2061,.L2062
	.byte	7
	.word	.L2063,.L2064,.L2065
	.byte	8
	.word	.L2066,.L2067
	.byte	8
	.word	.L2068,.L2069
	.byte	8
	.word	.L2070,.L2071
	.byte	9
	.word	.L2072,.L2064,.L2065
	.byte	6
	.byte	'StateDataPtr',0,1,222,115,23
	.word	.L1579,.L2073
	.byte	6
	.byte	'RetValue',0,1,223,115,18
	.word	.L1592,.L2074
	.byte	7
	.word	.L2075,.L1061,.L2076
	.byte	8
	.word	.L2077,.L2078
	.byte	8
	.word	.L2079,.L2080
	.byte	10
	.word	.L2081,.L1061,.L2076
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lRegisterNvmRead')
	.sect	'.debug_abbrev'
.L1358:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18
	.byte	1,0,0,10,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lRegisterNvmRead')
	.sect	'.debug_line'
.L1359:
	.word	.L4886-.L4885
.L4885:
	.half	3
	.word	.L4888-.L4887
.L4887:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4888:
	.byte	5,23,7,0,5,2
	.word	.L1204
	.byte	3,136,242,0,1,5,18,9
	.half	.L4070-.L1204
	.byte	3,11,1,5,28,9
	.half	.L4889-.L4070
	.byte	1,5,30,9
	.half	.L4071-.L4889
	.byte	3,1,1,5,18,9
	.half	.L4072-.L4071
	.byte	3,8,1,5,27,9
	.half	.L2064-.L4072
	.byte	3,194,1,1,5,3,9
	.half	.L4074-.L2064
	.byte	3,7,1,5,33,7,9
	.half	.L4890-.L4074
	.byte	3,16,1,5,49,9
	.half	.L4073-.L4890
	.byte	1,5,38,9
	.half	.L4891-.L4073
	.byte	3,4,1,5,36,9
	.half	.L4892-.L4891
	.byte	1,5,34,9
	.half	.L4893-.L4892
	.byte	3,1,1,5,32,9
	.half	.L4894-.L4893
	.byte	1,5,35,9
	.half	.L4895-.L4894
	.byte	3,121,1,5,26,9
	.half	.L1061-.L4895
	.byte	3,64,1,5,40,9
	.half	.L4066-.L1061
	.byte	1,5,52,9
	.half	.L4067-.L4066
	.byte	1,5,15,9
	.half	.L2076-.L4067
	.byte	3,210,0,1,5,3,9
	.half	.L1062-.L2076
	.byte	3,204,126,1,5,29,7,9
	.half	.L2065-.L1062
	.byte	3,7,1,9
	.half	.L4075-.L2065
	.byte	3,1,1,5,31,9
	.half	.L4076-.L4075
	.byte	3,1,1,5,24,9
	.half	.L4896-.L4076
	.byte	3,1,1,5,1,9
	.half	.L1063-.L4896
	.byte	3,9,1,7,9
	.half	.L1361-.L1063
	.byte	0,1,1
.L4886:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lRegisterNvmRead')
	.sect	'.debug_ranges'
.L1360:
	.word	-1,.L1204,0,.L1361-.L1204,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lRegisterNvmWrite')
	.sect	'.debug_info'
.L1362:
	.word	319
	.half	3
	.word	.L1363
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1365,.L1364
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lRegisterNvmWrite',0,1,168,116,23
	.word	.L1592
	.byte	1,1
	.word	.L1206,.L2082,.L1205
	.byte	4
	.byte	'DataWriteBufferPtr',0,1,169,116,25
	.word	.L2083,.L2084
	.byte	4
	.byte	'BlockPtr',0,1,170,116,33
	.word	.L2085,.L2086
	.byte	5
	.word	.L1206,.L2082
	.byte	6
	.byte	'StateDataPtr',0,1,173,116,23
	.word	.L1579,.L2087
	.byte	6
	.byte	'RetVal',0,1,174,116,18
	.word	.L1592,.L2088
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lRegisterNvmWrite')
	.sect	'.debug_abbrev'
.L1363:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lRegisterNvmWrite')
	.sect	'.debug_line'
.L1364:
	.word	.L4898-.L4897
.L4897:
	.half	3
	.word	.L4900-.L4899
.L4899:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4900:
	.byte	5,18,7,0,5,2
	.word	.L1206
	.byte	3,174,244,0,1,5,28,9
	.half	.L4901-.L1206
	.byte	1,5,18,9
	.half	.L4078-.L4901
	.byte	3,2,1,5,3,9
	.half	.L4902-.L4078
	.byte	1,5,33,7,9
	.half	.L4903-.L4902
	.byte	3,6,1,5,54,9
	.half	.L4904-.L4903
	.byte	1,5,51,9
	.half	.L4905-.L4904
	.byte	3,1,1,5,12,9
	.half	.L4077-.L4905
	.byte	3,4,1,5,1,9
	.half	.L4079-.L4077
	.byte	3,26,1,5,22,7,9
	.half	.L1065-.L4079
	.byte	3,113,1,5,37,9
	.half	.L4906-.L1065
	.byte	1,5,49,9
	.half	.L4907-.L4906
	.byte	1,5,12,9
	.half	.L4080-.L4907
	.byte	3,11,1,5,1,9
	.half	.L4081-.L4080
	.byte	3,4,1,7,9
	.half	.L1366-.L4081
	.byte	0,1,1
.L4898:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lRegisterNvmWrite')
	.sect	'.debug_ranges'
.L1365:
	.word	-1,.L1206,0,.L1366-.L1206,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lGetUsrBlockIndex')
	.sect	'.debug_info'
.L1367:
	.word	358
	.half	3
	.word	.L1368
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1370,.L1369
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lGetUsrBlockIndex',0,1,213,88,15
	.word	.L1781
	.byte	1,1
	.word	.L1176,.L2089,.L1175
	.byte	4
	.byte	'BlockNumber',0,1,213,88,50
	.word	.L2090,.L2091
	.byte	5
	.word	.L1176,.L2089
	.byte	6
	.byte	'BlockPtr',0,1,215,88,25
	.word	.L1807,.L2092
	.byte	6
	.byte	'BlockMiddle',0,1,216,88,25
	.word	.L2093,.L2094
	.byte	6
	.byte	'BlockFirst',0,1,217,88,25
	.word	.L2093,.L2095
	.byte	6
	.byte	'BlockLast',0,1,218,88,25
	.word	.L2093,.L2096
	.byte	6
	.byte	'RetVal',0,1,219,88,25
	.word	.L1781,.L2097
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lGetUsrBlockIndex')
	.sect	'.debug_abbrev'
.L1368:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lGetUsrBlockIndex')
	.sect	'.debug_line'
.L1369:
	.word	.L4909-.L4908
.L4908:
	.half	3
	.word	.L4911-.L4910
.L4910:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4911:
	.byte	5,15,7,0,5,2
	.word	.L1176
	.byte	3,220,216,0,1,9
	.half	.L3933-.L1176
	.byte	3,1,1,5,10,9
	.half	.L3934-.L3933
	.byte	3,1,1,5,25,9
	.half	.L3936-.L3934
	.byte	3,13,1,5,35,9
	.half	.L4912-.L3936
	.byte	1,5,48,9
	.half	.L3937-.L4912
	.byte	1,5,26,9
	.half	.L4913-.L3937
	.byte	3,3,1,5,45,9
	.half	.L4914-.L4913
	.byte	1,5,32,9
	.half	.L3938-.L4914
	.byte	3,6,1,5,43,9
	.half	.L948-.L3938
	.byte	3,2,1,5,58,9
	.half	.L4915-.L948
	.byte	1,5,30,9
	.half	.L4916-.L4915
	.byte	1,5,16,9
	.half	.L3940-.L4916
	.byte	3,2,1,5,29,9
	.half	.L4917-.L3940
	.byte	1,5,5,9
	.half	.L4918-.L4917
	.byte	1,5,18,7,9
	.half	.L4919-.L4918
	.byte	3,2,1,5,9,9
	.half	.L4920-.L4919
	.byte	3,1,1,5,21,9
	.half	.L949-.L4920
	.byte	3,4,1,5,34,9
	.half	.L4921-.L949
	.byte	1,5,10,9
	.half	.L4922-.L4921
	.byte	1,5,32,7,9
	.half	.L4923-.L4922
	.byte	3,2,1,5,35,9
	.half	.L4924-.L4923
	.byte	1,5,31,9
	.half	.L951-.L4924
	.byte	3,5,1,5,32,9
	.half	.L947-.L951
	.byte	3,110,1,5,14,7,9
	.half	.L950-.L947
	.byte	3,24,1,5,27,9
	.half	.L3939-.L950
	.byte	1,5,3,9
	.half	.L3941-.L3939
	.byte	1,5,12,7,9
	.half	.L4925-.L3941
	.byte	3,38,1,5,1,9
	.half	.L953-.L4925
	.byte	3,6,1,7,9
	.half	.L1371-.L953
	.byte	0,1,1
.L4909:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lGetUsrBlockIndex')
	.sect	'.debug_ranges'
.L1370:
	.word	-1,.L1176,0,.L1371-.L1176,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lGetUserJob')
	.sect	'.debug_info'
.L1372:
	.word	258
	.half	3
	.word	.L1373
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1375,.L1374
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lGetUserJob',0,1,251,36,28
	.word	.L1592
	.byte	1,1
	.word	.L1116,.L2098,.L1115
	.byte	4
	.byte	'PendReqType',0,1,251,36,56
	.word	.L2099,.L2100
	.byte	5
	.word	.L1116,.L2098
	.byte	6
	.byte	'RetVal',0,1,253,36,23
	.word	.L1592,.L2101
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lGetUserJob')
	.sect	'.debug_abbrev'
.L1373:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lGetUserJob')
	.sect	'.debug_line'
.L1374:
	.word	.L4927-.L4926
.L4926:
	.half	3
	.word	.L4929-.L4928
.L4928:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4929:
	.byte	5,30,7,0,5,2
	.word	.L1116
	.byte	3,252,36,1,5,10,9
	.half	.L3344-.L1116
	.byte	3,15,1,7,9
	.half	.L4930-.L3344
	.byte	3,1,1,7,9
	.half	.L4931-.L4930
	.byte	3,118,1,9
	.half	.L4932-.L4931
	.byte	3,1,1,5,14,9
	.half	.L273-.L4932
	.byte	3,2,1,5,1,9
	.half	.L275-.L273
	.byte	3,21,1,5,14,7,9
	.half	.L271-.L275
	.byte	3,116,1,5,1,9
	.half	.L4933-.L271
	.byte	3,12,1,7,9
	.half	.L1376-.L4933
	.byte	0,1,1
.L4927:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lGetUserJob')
	.sect	'.debug_ranges'
.L1375:
	.word	-1,.L1116,0,.L1376-.L1116,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lGetStatus')
	.sect	'.debug_info'
.L1377:
	.word	321
	.half	3
	.word	.L1378
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1380,.L1379
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lGetStatus',0,1,207,35,25
	.word	.L1771
	.byte	1,1
	.word	.L1114,.L2102,.L1113
	.byte	4
	.word	.L1114,.L2102
	.byte	5
	.byte	'StateDataPtr',0,1,209,35,29
	.word	.L1631,.L2103
	.byte	5
	.byte	'ReturnStatus',0,1,210,35,22
	.word	.L1771,.L2104
	.byte	6
	.word	.L1979,.L2105,.L2106
	.byte	7
	.word	.L1982,.L2107
	.byte	8
	.word	.L1984,.L2105,.L2106
	.byte	5
	.byte	'RetVal',0,1,208,33,11
	.word	.L1592,.L2108
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lGetStatus')
	.sect	'.debug_abbrev'
.L1378:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1
	.byte	49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lGetStatus')
	.sect	'.debug_line'
.L1379:
	.word	.L4935-.L4934
.L4934:
	.half	3
	.word	.L4937-.L4936
.L4936:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4937:
	.byte	5,18,7,0,5,2
	.word	.L1114
	.byte	3,211,35,1,5,28,9
	.half	.L4938-.L1114
	.byte	1,5,16,9
	.half	.L3341-.L4938
	.byte	3,2,1,5,18,9
	.half	.L3342-.L3341
	.byte	3,5,1,5,40,9
	.half	.L4939-.L3342
	.byte	1,5,3,9
	.half	.L4940-.L4939
	.byte	1,5,8,7,9
	.half	.L4941-.L4940
	.byte	3,6,1,5,18,7,9
	.half	.L4942-.L4941
	.byte	3,5,1,5,1,9
	.half	.L257-.L4942
	.byte	3,212,0,1,5,39,7,9
	.half	.L258-.L257
	.byte	3,179,127,1,5,8,9
	.half	.L4943-.L258
	.byte	1,5,24,7,9
	.half	.L4944-.L4943
	.byte	3,10,1,5,40,9
	.half	.L4945-.L4944
	.byte	1,5,11,9
	.half	.L4946-.L4945
	.byte	1,5,24,7,9
	.half	.L4947-.L4946
	.byte	3,1,1,5,41,9
	.half	.L4948-.L4947
	.byte	1,5,23,7,9
	.half	.L4949-.L4948
	.byte	3,7,1,5,8,9
	.half	.L4950-.L4949
	.byte	1,5,16,7,9
	.half	.L4951-.L4950
	.byte	3,11,1,5,1,9
	.half	.L260-.L4951
	.byte	3,48,1,5,23,7,9
	.half	.L263-.L260
	.byte	3,101,1,5,39,9
	.half	.L4952-.L263
	.byte	1,5,8,9
	.half	.L4953-.L4952
	.byte	1,7,9
	.half	.L2105-.L4953
	.byte	3,180,125,1,5,38,9
	.half	.L4954-.L2105
	.byte	1,5,7,9
	.half	.L4955-.L4954
	.byte	1,5,39,7,9
	.half	.L4956-.L4955
	.byte	3,2,1,5,70,9
	.half	.L4957-.L4956
	.byte	1,5,12,7,9
	.half	.L4958-.L4957
	.byte	3,3,1,5,27,9
	.half	.L3343-.L4958
	.byte	1,5,12,9
	.half	.L266-.L3343
	.byte	3,4,1,5,5,9
	.half	.L268-.L266
	.byte	3,202,2,1,5,20,7,9
	.half	.L2106-.L268
	.byte	3,9,1,5,1,9
	.half	.L265-.L2106
	.byte	3,11,1,7,9
	.half	.L1381-.L265
	.byte	0,1,1
.L4935:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lGetStatus')
	.sect	'.debug_ranges'
.L1380:
	.word	-1,.L1114,0,.L1381-.L1114,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lGetBlkCycleCount')
	.sect	'.debug_info'
.L1382:
	.word	381
	.half	3
	.word	.L1383
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1385,.L1384
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lGetBlkCycleCount',0,1,180,96,15
	.word	.L1589
	.byte	1,1
	.word	.L1180,.L2109,.L1179
	.byte	4
	.byte	'Index',0,1,180,96,50
	.word	.L2110,.L2111
	.byte	5
	.word	.L1180,.L2109
	.byte	6
	.byte	'StateDataPtr',0,1,182,96,23
	.word	.L1579,.L2112
	.byte	6
	.byte	'TempArrayPtr',0,1,183,96,23
	.word	.L1622,.L2113
	.byte	6
	.byte	'Address',0,1,184,96,23
	.word	.L1589,.L2114
	.byte	6
	.byte	'BlockCycleCount',0,1,185,96,23
	.word	.L1589,.L2115
	.byte	6
	.byte	'TempVal',0,1,186,96,23
	.word	.L1589,.L2116
	.byte	6
	.byte	'RetVal',0,1,187,96,23
	.word	.L1592,.L2117
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lGetBlkCycleCount')
	.sect	'.debug_abbrev'
.L1383:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lGetBlkCycleCount')
	.sect	'.debug_line'
.L1384:
	.word	.L4960-.L4959
.L4959:
	.half	3
	.word	.L4962-.L4961
.L4961:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4962:
	.byte	5,15,7,0,5,2
	.word	.L1180
	.byte	3,179,224,0,1,5,18,9
	.half	.L4002-.L1180
	.byte	3,9,1,5,28,9
	.half	.L4963-.L4002
	.byte	1,5,19,9
	.half	.L4003-.L4963
	.byte	3,2,1,5,36,9
	.half	.L4004-.L4003
	.byte	3,3,1,5,34,9
	.half	.L4964-.L4004
	.byte	1,9
	.half	.L4965-.L4964
	.byte	3,1,1,5,40,9
	.half	.L4966-.L4965
	.byte	3,3,1,5,48,9
	.half	.L4967-.L4966
	.byte	1,5,3,9
	.half	.L4001-.L4967
	.byte	3,2,1,5,62,7,9
	.half	.L4968-.L4001
	.byte	3,9,1,5,39,9
	.half	.L4969-.L4968
	.byte	3,1,1,5,5,9
	.half	.L4005-.L4969
	.byte	3,4,1,5,44,7,9
	.half	.L4970-.L4005
	.byte	3,6,1,5,52,9
	.half	.L4971-.L4970
	.byte	1,5,7,9
	.half	.L4006-.L4971
	.byte	3,1,1,5,65,7,9
	.half	.L4972-.L4006
	.byte	3,4,1,5,55,9
	.half	.L4973-.L4972
	.byte	3,1,1,5,9,9
	.half	.L4007-.L4973
	.byte	3,3,1,5,21,7,9
	.half	.L4974-.L4007
	.byte	3,14,1,5,38,9
	.half	.L4008-.L4974
	.byte	3,1,1,5,45,9
	.half	.L4009-.L4008
	.byte	3,3,1,5,1,9
	.half	.L1026-.L4009
	.byte	3,35,1,5,25,7,9
	.half	.L1028-.L1026
	.byte	3,102,1,5,1,9
	.half	.L4010-.L1028
	.byte	3,26,1,5,17,7,9
	.half	.L1027-.L4010
	.byte	3,119,1,5,34,9
	.half	.L4011-.L1027
	.byte	3,1,1,5,1,9
	.half	.L4012-.L4011
	.byte	3,8,1,7,9
	.half	.L1386-.L4012
	.byte	0,1,1
.L4960:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lGetBlkCycleCount')
	.sect	'.debug_ranges'
.L1385:
	.word	-1,.L1180,0,.L1386-.L1180,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lClearFeeReadWriteBuffer')
	.sect	'.debug_info'
.L1387:
	.word	323
	.half	3
	.word	.L1388
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1390,.L1389
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lClearFeeReadWriteBuffer',0,1,193,107,13,1,1
	.word	.L1192,.L2118,.L1191
	.byte	4
	.word	.L1192,.L2118
	.byte	5
	.byte	'StateDataPtr',0,1,195,107,23
	.word	.L1579,.L2119
	.byte	5
	.byte	'ReadWriteBuffPtr',0,1,196,107,23
	.word	.L2120,.L2121
	.byte	5
	.byte	'DataByteCnt',0,1,197,107,23
	.word	.L1781,.L2122
	.byte	5
	.byte	'Length',0,1,198,107,23
	.word	.L1589,.L2123
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lClearFeeReadWriteBuffer')
	.sect	'.debug_abbrev'
.L1388:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lClearFeeReadWriteBuffer')
	.sect	'.debug_line'
.L1389:
	.word	.L4976-.L4975
.L4975:
	.half	3
	.word	.L4978-.L4977
.L4977:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4978:
	.byte	5,15,7,0,5,2
	.word	.L1192
	.byte	3,199,235,0,1,5,18,9
	.half	.L4036-.L1192
	.byte	3,1,1,5,28,9
	.half	.L4979-.L4036
	.byte	1,5,44,9
	.half	.L4037-.L4979
	.byte	3,3,1,5,10,9
	.half	.L4038-.L4037
	.byte	3,1,1,5,37,9
	.half	.L4039-.L4038
	.byte	3,4,1,5,21,9
	.half	.L1047-.L4039
	.byte	1,5,35,9
	.half	.L4040-.L1047
	.byte	1,5,16,9
	.half	.L4041-.L4040
	.byte	3,1,1,5,34,9
	.half	.L4980-.L4041
	.byte	3,1,1,5,1,7,9
	.half	.L4981-.L4980
	.byte	3,2,1,7,9
	.half	.L1391-.L4981
	.byte	0,1,1
.L4976:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lClearFeeReadWriteBuffer')
	.sect	'.debug_ranges'
.L1390:
	.word	-1,.L1192,0,.L1391-.L1192,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lPrepareMarkerBuffer')
	.sect	'.debug_info'
.L1392:
	.word	267
	.half	3
	.word	.L1393
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1395,.L1394
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lPrepareMarkerBuffer',0,1,253,106,13,1,1
	.word	.L1188,.L2124,.L1187
	.byte	4
	.word	.L1188,.L2124
	.byte	5
	.byte	'StateDataPtr',0,1,255,106,23
	.word	.L1579,.L2125
	.byte	5
	.byte	'BufferPtr',0,1,128,107,23
	.word	.L1644,.L2126
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lPrepareMarkerBuffer')
	.sect	'.debug_abbrev'
.L1393:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lPrepareMarkerBuffer')
	.sect	'.debug_line'
.L1394:
	.word	.L4983-.L4982
.L4982:
	.half	3
	.word	.L4985-.L4984
.L4984:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4985:
	.byte	5,18,7,0,5,2
	.word	.L1188
	.byte	3,129,235,0,1,5,28,9
	.half	.L4986-.L1188
	.byte	1,5,29,9
	.half	.L4034-.L4986
	.byte	3,5,1,5,27,9
	.half	.L4987-.L4034
	.byte	1,5,36,9
	.half	.L4988-.L4987
	.byte	3,3,1,5,34,9
	.half	.L4989-.L4988
	.byte	1,5,1,9
	.half	.L4990-.L4989
	.byte	3,1,1,7,9
	.half	.L1396-.L4990
	.byte	0,1,1
.L4983:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lPrepareMarkerBuffer')
	.sect	'.debug_ranges'
.L1395:
	.word	-1,.L1188,0,.L1396-.L1188,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lClearMarkerBuffer')
	.sect	'.debug_info'
.L1397:
	.word	265
	.half	3
	.word	.L1398
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1400,.L1399
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lClearMarkerBuffer',0,1,160,107,13,1,1
	.word	.L1190,.L2127,.L1189
	.byte	4
	.word	.L1190,.L2127
	.byte	5
	.byte	'StateDataPtr',0,1,162,107,23
	.word	.L1579,.L2128
	.byte	5
	.byte	'BufferPtr',0,1,163,107,23
	.word	.L1644,.L2129
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lClearMarkerBuffer')
	.sect	'.debug_abbrev'
.L1398:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lClearMarkerBuffer')
	.sect	'.debug_line'
.L1399:
	.word	.L4992-.L4991
.L4991:
	.half	3
	.word	.L4994-.L4993
.L4993:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L4994:
	.byte	5,18,7,0,5,2
	.word	.L1190
	.byte	3,164,235,0,1,5,28,9
	.half	.L4995-.L1190
	.byte	1,5,29,9
	.half	.L4035-.L4995
	.byte	3,4,1,5,27,9
	.half	.L4996-.L4035
	.byte	1,5,34,9
	.half	.L4997-.L4996
	.byte	3,3,1,5,1,9
	.half	.L4998-.L4997
	.byte	3,1,1,7,9
	.half	.L1401-.L4998
	.byte	0,1,1
.L4992:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lClearMarkerBuffer')
	.sect	'.debug_ranges'
.L1400:
	.word	-1,.L1190,0,.L1401-.L1190,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lHandleIntrWrite')
	.sect	'.debug_info'
.L1402:
	.word	405
	.half	3
	.word	.L1403
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1405,.L1404
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lHandleIntrWrite',0,1,248,63,13,1,1
	.word	.L1136,.L2130,.L1135
	.byte	4
	.word	.L1136,.L2130
	.byte	5
	.byte	'StateDataPtr',0,1,251,63,26
	.word	.L1579,.L2131
	.byte	5
	.byte	'ReadWriteBuffPtr',0,1,252,63,26
	.word	.L1622,.L2132
	.byte	5
	.byte	'DestAddr',0,1,253,63,26
	.word	.L1589,.L2133
	.byte	5
	.byte	'Offset',0,1,254,63,26
	.word	.L1781,.L2134
	.byte	5
	.byte	'RetVal',0,1,255,63,26
	.word	.L1592,.L2135
	.byte	6
	.word	.L1684,.L556,.L555
	.byte	7
	.word	.L1687,.L2136
	.byte	8
	.word	.L1689,.L556,.L555
	.byte	6
	.word	.L1690,.L556,.L2137
	.byte	7
	.word	.L1691,.L2138
	.byte	9
	.word	.L1693,.L556,.L2137
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lHandleIntrWrite')
	.sect	'.debug_abbrev'
.L1403:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1,49,16
	.byte	17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lHandleIntrWrite')
	.sect	'.debug_line'
.L1404:
	.word	.L5000-.L4999
.L4999:
	.half	3
	.word	.L5002-.L5001
.L5001:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L5002:
	.byte	5,18,7,0,5,2
	.word	.L1136
	.byte	3,128,192,0,1,5,28,9
	.half	.L5003-.L1136
	.byte	1,5,48,9
	.half	.L3506-.L5003
	.byte	3,1,1,5,34,9
	.half	.L5004-.L3506
	.byte	1,5,26,9
	.half	.L5005-.L5004
	.byte	3,1,1,5,31,9
	.half	.L3507-.L5005
	.byte	3,1,1,5,3,9
	.half	.L3508-.L3507
	.byte	3,4,1,5,51,7,9
	.half	.L5006-.L3508
	.byte	3,3,1,5,18,9
	.half	.L556-.L5006
	.byte	3,139,97,1,5,41,9
	.half	.L2137-.L556
	.byte	3,27,1,5,34,9
	.half	.L555-.L2137
	.byte	3,218,30,1,5,51,9
	.half	.L5007-.L555
	.byte	1,5,39,7,9
	.half	.L5008-.L5007
	.byte	3,8,1,5,55,9
	.half	.L5009-.L5008
	.byte	3,1,1,5,53,9
	.half	.L5010-.L5009
	.byte	1,5,47,9
	.half	.L5011-.L5010
	.byte	3,1,1,5,59,9
	.half	.L5012-.L5011
	.byte	1,5,18,9
	.half	.L554-.L5012
	.byte	3,3,1,5,3,9
	.half	.L5013-.L554
	.byte	1,5,37,7,9
	.half	.L5014-.L5013
	.byte	3,5,1,5,56,9
	.half	.L557-.L5014
	.byte	3,3,1,5,15,9
	.half	.L3510-.L557
	.byte	3,1,1,5,33,9
	.half	.L3509-.L3510
	.byte	3,1,1,5,53,9
	.half	.L5015-.L3509
	.byte	1,5,33,9
	.half	.L5016-.L5015
	.byte	3,127,1,5,36,9
	.half	.L5017-.L5016
	.byte	3,2,1,5,34,9
	.half	.L5018-.L5017
	.byte	1,5,36,9
	.half	.L5019-.L5018
	.byte	3,1,1,5,34,9
	.half	.L5020-.L5019
	.byte	1,5,40,9
	.half	.L5021-.L5020
	.byte	3,6,1,5,3,9
	.half	.L3511-.L5021
	.byte	3,4,1,5,25,7,9
	.half	.L5022-.L3511
	.byte	3,5,1,5,1,7,9
	.half	.L558-.L5022
	.byte	3,2,1,7,9
	.half	.L1406-.L558
	.byte	0,1,1
.L5000:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lHandleIntrWrite')
	.sect	'.debug_ranges'
.L1405:
	.word	-1,.L1136,0,.L1406-.L1136,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lLastPgHandler')
	.sect	'.debug_info'
.L1407:
	.word	433
	.half	3
	.word	.L1408
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1410,.L1409
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lLastPgHandler',0,1,175,53,13,1,1
	.word	.L1128,.L2139,.L1127
	.byte	4
	.word	.L1128,.L2139
	.byte	5
	.byte	'StateDataPtr',0,1,177,53,32
	.word	.L1579,.L2140
	.byte	5
	.byte	'LastBlkInfoPtr',0,1,178,53,32
	.word	.L1587,.L2141
	.byte	5
	.byte	'BlkPtr',0,1,179,53,32
	.word	.L1583,.L2142
	.byte	5
	.byte	'BlockCfgPtr',0,1,180,53,32
	.word	.L1807,.L2143
	.byte	5
	.byte	'LWBMarkerAddress',0,1,181,53,32
	.word	.L1589,.L2144
	.byte	5
	.byte	'NextFreePageWLAddr',0,1,182,53,32
	.word	.L1589,.L2145
	.byte	5
	.byte	'BlockIndex',0,1,183,53,32
	.word	.L1781,.L2146
	.byte	6
	.word	.L1690,.L2147,.L2148
	.byte	7
	.word	.L1691,.L2149
	.byte	8
	.word	.L1693,.L2147,.L2148
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lLastPgHandler')
	.sect	'.debug_abbrev'
.L1408:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1,49,16
	.byte	17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lLastPgHandler')
	.sect	'.debug_line'
.L1409:
	.word	.L5024-.L5023
.L5023:
	.half	3
	.word	.L5026-.L5025
.L5025:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L5026:
	.byte	5,18,7,0,5,2
	.word	.L1128
	.byte	3,184,53,1,5,28,9
	.half	.L5027-.L1128
	.byte	1,5,50,9
	.half	.L3444-.L5027
	.byte	3,2,1,5,19,9
	.half	.L3445-.L3444
	.byte	3,1,1,5,29,9
	.half	.L5028-.L3445
	.byte	1,5,48,9
	.half	.L5029-.L5028
	.byte	1,5,40,9
	.half	.L3446-.L5029
	.byte	3,1,1,5,17,9
	.half	.L3447-.L3446
	.byte	3,5,1,5,48,9
	.half	.L5030-.L3447
	.byte	1,5,32,9
	.half	.L5031-.L5030
	.byte	1,5,53,9
	.half	.L5032-.L5031
	.byte	3,1,1,5,37,9
	.half	.L5033-.L5032
	.byte	1,5,49,9
	.half	.L5034-.L5033
	.byte	3,1,1,5,33,9
	.half	.L5035-.L5034
	.byte	1,5,35,9
	.half	.L5036-.L5035
	.byte	3,1,1,5,27,9
	.half	.L5037-.L5036
	.byte	1,5,31,9
	.half	.L5038-.L5037
	.byte	3,1,1,5,23,9
	.half	.L5039-.L5038
	.byte	1,5,33,9
	.half	.L5040-.L5039
	.byte	3,3,1,5,19,9
	.half	.L5041-.L5040
	.byte	1,5,17,9
	.half	.L5042-.L5041
	.byte	3,1,1,5,29,9
	.half	.L5043-.L5042
	.byte	1,5,34,9
	.half	.L5044-.L5043
	.byte	3,4,1,5,3,9
	.half	.L5045-.L5044
	.byte	1,5,26,7,9
	.half	.L5046-.L5045
	.byte	3,2,1,5,37,9
	.half	.L5047-.L5046
	.byte	1,5,19,9
	.half	.L495-.L5047
	.byte	3,4,1,5,26,9
	.half	.L5048-.L495
	.byte	1,5,36,9
	.half	.L5049-.L5048
	.byte	3,1,1,5,23,9
	.half	.L5050-.L5049
	.byte	1,5,18,9
	.half	.L496-.L5050
	.byte	3,5,1,5,34,9
	.half	.L5051-.L496
	.byte	1,5,3,9
	.half	.L5052-.L5051
	.byte	1,5,8,7,9
	.half	.L5053-.L5052
	.byte	3,5,1,5,35,7,9
	.half	.L5054-.L5053
	.byte	3,1,1,5,24,7,9
	.half	.L5055-.L5054
	.byte	3,3,1,5,7,9
	.half	.L5056-.L5055
	.byte	1,5,39,7,9
	.half	.L5057-.L5056
	.byte	3,2,1,5,49,9
	.half	.L5058-.L5057
	.byte	1,5,23,9
	.half	.L500-.L5058
	.byte	3,4,1,5,39,9
	.half	.L5059-.L500
	.byte	1,5,29,9
	.half	.L5060-.L5059
	.byte	3,2,1,5,35,9
	.half	.L5061-.L5060
	.byte	3,1,1,5,51,9
	.half	.L5062-.L5061
	.byte	1,5,34,9
	.half	.L497-.L5062
	.byte	3,5,1,5,56,9
	.half	.L5063-.L497
	.byte	1,5,18,9
	.half	.L2147-.L5063
	.byte	3,165,107,1,5,20,9
	.half	.L2148-.L2147
	.byte	3,222,20,1,5,6,9
	.half	.L5064-.L2148
	.byte	1,5,25,7,9
	.half	.L5065-.L5064
	.byte	3,1,1,5,47,7,9
	.half	.L5066-.L5065
	.byte	3,3,1,5,33,9
	.half	.L5067-.L5066
	.byte	1,5,45,9
	.half	.L5068-.L5067
	.byte	3,1,1,5,31,9
	.half	.L5069-.L5068
	.byte	1,5,40,9
	.half	.L5070-.L5069
	.byte	3,1,1,5,26,9
	.half	.L5071-.L5070
	.byte	1,5,27,9
	.half	.L5072-.L5071
	.byte	3,1,1,5,39,9
	.half	.L5073-.L5072
	.byte	1,5,36,9
	.half	.L502-.L5073
	.byte	3,4,1,5,34,9
	.half	.L5074-.L502
	.byte	1,5,31,9
	.half	.L5075-.L5074
	.byte	3,1,1,5,52,9
	.half	.L5076-.L5075
	.byte	1,5,32,9
	.half	.L5077-.L5076
	.byte	3,1,1,5,30,9
	.half	.L5078-.L5077
	.byte	1,5,37,9
	.half	.L5079-.L5078
	.byte	3,1,1,5,33,9
	.half	.L5080-.L5079
	.byte	3,1,1,5,18,9
	.half	.L5081-.L5080
	.byte	3,3,1,5,3,9
	.half	.L5082-.L5081
	.byte	1,5,10,7,9
	.half	.L5083-.L5082
	.byte	3,4,1,5,20,9
	.half	.L5084-.L5083
	.byte	1,5,5,9
	.half	.L5085-.L5084
	.byte	1,5,18,7,9
	.half	.L5086-.L5085
	.byte	3,5,1,5,45,9
	.half	.L5087-.L5086
	.byte	1,5,10,7,9
	.half	.L504-.L5087
	.byte	3,7,1,5,20,9
	.half	.L5088-.L504
	.byte	1,5,5,9
	.half	.L5089-.L5088
	.byte	1,5,18,7,9
	.half	.L5090-.L5089
	.byte	3,5,1,5,45,9
	.half	.L5091-.L5090
	.byte	1,5,38,9
	.half	.L507-.L5091
	.byte	3,2,1,5,36,9
	.half	.L5092-.L507
	.byte	1,5,32,9
	.half	.L5093-.L5092
	.byte	3,1,1,5,30,9
	.half	.L5094-.L5093
	.byte	1,5,1,9
	.half	.L505-.L5094
	.byte	3,3,1,7,9
	.half	.L1411-.L505
	.byte	0,1,1
.L5024:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lLastPgHandler')
	.sect	'.debug_ranges'
.L1410:
	.word	-1,.L1128,0,.L1411-.L1128,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lUpdateCache')
	.sect	'.debug_info'
.L1412:
	.word	1685
	.half	3
	.word	.L1413
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1415,.L1414
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lUpdateCache',0,1,188,90,13,1,1
	.word	.L1178,.L2150,.L1177
	.byte	4
	.word	.L1178,.L2150
	.byte	5
	.byte	'StateDataPtr',0,1,190,90,27
	.word	.L1579,.L2151
	.byte	5
	.byte	'SectorInfoPtr',0,1,191,90,27
	.word	.L1585,.L2152
	.byte	5
	.byte	'EndAddr',0,1,192,90,27
	.word	.L1589,.L2153
	.byte	5
	.byte	'BankNumber',0,1,193,90,27
	.word	.L1589,.L2154
	.byte	6
	.word	.L2155,.L2156,.L958
	.byte	7
	.word	.L2157,.L2158
	.byte	8
	.word	.L2159,.L2156,.L958
	.byte	5
	.byte	'StateDataPtr',0,1,220,89,23
	.word	.L1579,.L2160
	.byte	5
	.byte	'SectorInfoPtr',0,1,221,89,29
	.word	.L2161,.L2162
	.byte	5
	.byte	'TempDataPtr',0,1,222,89,29
	.word	.L1608,.L2163
	.byte	5
	.byte	'TempAddr',0,1,223,89,23
	.word	.L1589,.L2164
	.byte	5
	.byte	'TempAddrPrevWL',0,1,224,89,23
	.word	.L1589,.L2165
	.byte	5
	.byte	'RetVal',0,1,225,89,23
	.word	.L1592,.L2166
	.byte	5
	.byte	'LoopEnd',0,1,226,89,23
	.word	.L1592,.L2167
	.byte	0,0,6
	.word	.L2168,.L973,.L974
	.byte	7
	.word	.L2169,.L2170
	.byte	7
	.word	.L2171,.L2172
	.byte	8
	.word	.L2173,.L973,.L974
	.byte	5
	.byte	'StateDataPtr',0,1,134,92,28
	.word	.L1579,.L2174
	.byte	5
	.byte	'ReadWriteBufferPtr',0,1,135,92,22
	.word	.L1644,.L2175
	.byte	5
	.byte	'WordValue',0,1,136,92,28
	.word	.L1646,.L2176
	.byte	5
	.byte	'LWBHeaderAddress',0,1,137,92,28
	.word	.L1589,.L2177
	.byte	5
	.byte	'LWBMarkerAddress',0,1,138,92,28
	.word	.L1589,.L2178
	.byte	5
	.byte	'DataNextPageCount',0,1,139,92,28
	.word	.L1589,.L2179
	.byte	5
	.byte	'PageCount',0,1,140,92,28
	.word	.L1781,.L2180
	.byte	5
	.byte	'PageCount1',0,1,141,92,28
	.word	.L1781,.L2181
	.byte	5
	.byte	'BlockNumber',0,1,142,92,28
	.word	.L1781,.L2182
	.byte	5
	.byte	'PageId',0,1,143,92,28
	.word	.L1592,.L2183
	.byte	5
	.byte	'RetVal',0,1,145,92,28
	.word	.L1592,.L2184
	.byte	6
	.word	.L2185,.L977,.L976
	.byte	7
	.word	.L2186,.L2187
	.byte	8
	.word	.L2188,.L977,.L976
	.byte	5
	.byte	'StateDataPtr',0,1,136,96,28
	.word	.L1579,.L2189
	.byte	0,0,6
	.word	.L2190,.L991,.L992
	.byte	7
	.word	.L2191,.L2192
	.byte	7
	.word	.L2193,.L2194
	.byte	8
	.word	.L2195,.L991,.L992
	.byte	5
	.byte	'BlockSize',0,1,176,94,10
	.word	.L1589,.L2196
	.byte	5
	.byte	'NewLWBMarkerAddress',0,1,177,94,10
	.word	.L1589,.L2197
	.byte	0,0,6
	.word	.L2198,.L2199,.L2200
	.byte	7
	.word	.L2201,.L2202
	.byte	7
	.word	.L2203,.L2204
	.byte	8
	.word	.L2205,.L2199,.L2200
	.byte	5
	.byte	'StateDataPtr',0,1,244,93,37
	.word	.L1631,.L2206
	.byte	5
	.byte	'ReadWriteBufferPtr',0,1,245,93,31
	.word	.L1622,.L2207
	.byte	5
	.byte	'BlockNumber1',0,1,246,93,31
	.word	.L1781,.L2208
	.byte	5
	.byte	'PageCount1',0,1,247,93,31
	.word	.L1781,.L2209
	.byte	5
	.byte	'RetVal',0,1,248,93,31
	.word	.L1592,.L2210
	.byte	0,0,6
	.word	.L2211,.L2200,.L997
	.byte	7
	.word	.L2212,.L2213
	.byte	7
	.word	.L2214,.L2215
	.byte	7
	.word	.L2216,.L2217
	.byte	8
	.word	.L2218,.L2200,.L997
	.byte	5
	.byte	'StateDataPtr',0,1,229,94,31
	.word	.L1579,.L2219
	.byte	5
	.byte	'LastWrittenBlkPtr',0,1,230,94,31
	.word	.L1587,.L2220
	.byte	5
	.byte	'ReadWriteBufferPtr',0,1,231,94,37
	.word	.L1622,.L2221
	.byte	5
	.byte	'Status',0,1,232,94,31
	.word	.L2222,.L2223
	.byte	5
	.byte	'NextFreePageWLAddr',0,1,233,94,31
	.word	.L1589,.L2224
	.byte	5
	.byte	'BlockNumber',0,1,234,94,31
	.word	.L1781,.L2225
	.byte	5
	.byte	'Index',0,1,235,94,31
	.word	.L1781,.L2226
	.byte	6
	.word	.L1690,.L2227,.L2228
	.byte	7
	.word	.L1691,.L2229
	.byte	9
	.word	.L1693,.L2227,.L2228
	.byte	0,0,0,6
	.word	.L2230,.L2231,.L989
	.byte	7
	.word	.L2232,.L2233
	.byte	7
	.word	.L2234,.L2235
	.byte	8
	.word	.L2236,.L2231,.L989
	.byte	5
	.byte	'StateDataPtr',0,1,206,95,31
	.word	.L1579,.L2237
	.byte	5
	.byte	'ReadWriteBufferPtr',0,1,207,95,37
	.word	.L1622,.L2238
	.byte	5
	.byte	'PageCount',0,1,208,95,31
	.word	.L1781,.L2239
	.byte	0,0,6
	.word	.L2185,.L1012,.L983
	.byte	7
	.word	.L2186,.L2187
	.byte	8
	.word	.L2188,.L1012,.L983
	.byte	5
	.byte	'StateDataPtr',0,1,136,96,28
	.word	.L1579,.L2240
	.byte	0,0,0,0,6
	.word	.L1912,.L2241,.L2242
	.byte	7
	.word	.L1915,.L2243
	.byte	9
	.word	.L1917,.L2241,.L2242
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lUpdateCache')
	.sect	'.debug_abbrev'
.L1413:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1,49,16
	.byte	17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lUpdateCache')
	.sect	'.debug_line'
.L1414:
	.word	.L5096-.L5095
.L5095:
	.half	3
	.word	.L5098-.L5097
.L5097:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L5098:
	.byte	5,13,7,0,5,2
	.word	.L1178
	.byte	3,187,218,0,1,5,18,9
	.half	.L3942-.L1178
	.byte	3,7,1,5,28,9
	.half	.L5099-.L3942
	.byte	1,5,34,9
	.half	.L3945-.L5099
	.byte	3,3,1,5,3,9
	.half	.L5100-.L3945
	.byte	1,5,13,7,9
	.half	.L5101-.L5100
	.byte	3,2,1,5,16,9
	.half	.L3946-.L5101
	.byte	3,1,1,5,36,9
	.half	.L3947-.L3946
	.byte	3,127,1,5,15,9
	.half	.L955-.L3947
	.byte	3,5,1,5,16,9
	.half	.L3948-.L955
	.byte	3,1,1,5,47,9
	.half	.L956-.L3948
	.byte	3,3,1,5,18,9
	.half	.L3950-.L956
	.byte	3,4,1,5,3,9
	.half	.L5102-.L3950
	.byte	1,5,18,7,9
	.half	.L2156-.L5102
	.byte	3,143,127,1,5,28,9
	.half	.L5103-.L2156
	.byte	1,5,47,9
	.half	.L3951-.L5103
	.byte	3,1,1,5,11,9
	.half	.L3952-.L3951
	.byte	3,1,1,5,52,9
	.half	.L3954-.L3952
	.byte	3,3,1,5,37,9
	.half	.L5104-.L3954
	.byte	1,5,33,9
	.half	.L5105-.L5104
	.byte	3,3,1,5,50,9
	.half	.L5106-.L5105
	.byte	1,5,38,9
	.half	.L3955-.L5106
	.byte	3,7,1,5,6,9
	.half	.L5107-.L3955
	.byte	1,5,24,7,9
	.half	.L5108-.L5107
	.byte	3,1,1,5,10,9
	.half	.L5109-.L5108
	.byte	1,5,43,7,9
	.half	.L5110-.L5109
	.byte	3,1,1,5,11,9
	.half	.L5111-.L5110
	.byte	1,5,43,7,9
	.half	.L5112-.L5111
	.byte	3,1,1,5,48,9
	.half	.L5113-.L5112
	.byte	1,5,29,7,9
	.half	.L959-.L5113
	.byte	3,2,1,5,20,9
	.half	.L3957-.L959
	.byte	3,2,1,5,54,9
	.half	.L3956-.L3957
	.byte	3,29,1,9
	.half	.L5114-.L3956
	.byte	3,1,1,5,16,9
	.half	.L962-.L5114
	.byte	3,102,1,5,55,9
	.half	.L5115-.L962
	.byte	3,8,1,5,33,9
	.half	.L5116-.L5115
	.byte	3,1,1,5,43,9
	.half	.L3959-.L5116
	.byte	3,5,1,5,10,9
	.half	.L3960-.L3959
	.byte	3,2,1,5,31,7,9
	.half	.L5117-.L3960
	.byte	1,5,46,9
	.half	.L5118-.L5117
	.byte	1,5,23,7,9
	.half	.L5119-.L5118
	.byte	3,1,1,5,27,9
	.half	.L5120-.L5119
	.byte	1,5,43,7,9
	.half	.L5121-.L5120
	.byte	3,2,1,5,53,9
	.half	.L5122-.L5121
	.byte	1,5,17,9
	.half	.L963-.L5122
	.byte	3,4,1,5,13,9
	.half	.L5123-.L963
	.byte	3,1,1,5,47,7,9
	.half	.L5124-.L5123
	.byte	3,1,1,5,14,9
	.half	.L5125-.L5124
	.byte	1,5,51,7,9
	.half	.L5126-.L5125
	.byte	3,1,1,5,52,7,9
	.half	.L968-.L5126
	.byte	3,2,1,5,50,9
	.half	.L5127-.L968
	.byte	1,5,75,9
	.half	.L5128-.L5127
	.byte	1,5,14,9
	.half	.L967-.L5128
	.byte	3,2,1,5,60,7,9
	.half	.L5129-.L967
	.byte	3,2,1,5,45,9
	.half	.L5130-.L5129
	.byte	1,5,14,9
	.half	.L966-.L5130
	.byte	3,7,1,5,54,7,9
	.half	.L5131-.L966
	.byte	1,5,50,7,9
	.half	.L958-.L5131
	.byte	3,55,1,5,72,9
	.half	.L5132-.L958
	.byte	1,5,36,9
	.half	.L5133-.L5132
	.byte	1,5,37,9
	.half	.L5134-.L5133
	.byte	3,4,1,5,35,9
	.half	.L5135-.L5134
	.byte	1,5,33,9
	.half	.L5136-.L5135
	.byte	3,3,1,5,31,9
	.half	.L5137-.L5136
	.byte	1,5,43,9
	.half	.L5138-.L5137
	.byte	3,118,1,5,23,9
	.half	.L957-.L5138
	.byte	3,17,1,5,8,9
	.half	.L5139-.L957
	.byte	1,5,37,7,9
	.half	.L5140-.L5139
	.byte	3,3,1,5,35,9
	.half	.L5141-.L5140
	.byte	1,5,18,9
	.half	.L973-.L5141
	.byte	3,166,1,1,5,28,9
	.half	.L5142-.L973
	.byte	1,5,36,9
	.half	.L3961-.L5142
	.byte	3,1,1,5,21,9
	.half	.L3962-.L3961
	.byte	3,2,1,5,29,9
	.half	.L3963-.L3962
	.byte	3,63,1,5,41,9
	.half	.L5143-.L3963
	.byte	3,13,1,5,53,9
	.half	.L5144-.L5143
	.byte	3,187,127,1,5,18,9
	.half	.L977-.L5144
	.byte	3,237,3,1,5,28,9
	.half	.L5145-.L977
	.byte	1,5,19,9
	.half	.L3964-.L5145
	.byte	3,4,1,5,3,9
	.half	.L5146-.L3964
	.byte	1,5,38,7,9
	.half	.L5147-.L5146
	.byte	3,3,1,5,20,9
	.half	.L5148-.L5147
	.byte	3,4,1,5,5,9
	.half	.L5149-.L5148
	.byte	1,5,37,7,9
	.half	.L5150-.L5149
	.byte	3,2,1,5,5,9
	.half	.L5151-.L5150
	.byte	3,126,1,5,35,9
	.half	.L978-.L5151
	.byte	3,8,1,5,33,9
	.half	.L5152-.L978
	.byte	1,5,46,9
	.half	.L976-.L5152
	.byte	3,254,123,1,5,11,9
	.half	.L5153-.L976
	.byte	1,5,24,7,9
	.half	.L5154-.L5153
	.byte	3,1,1,5,40,9
	.half	.L5155-.L5154
	.byte	1,5,24,7,9
	.half	.L5156-.L5155
	.byte	3,1,1,5,41,9
	.half	.L5157-.L5156
	.byte	1,5,22,7,9
	.half	.L981-.L5157
	.byte	3,6,1,5,9,9
	.half	.L5158-.L981
	.byte	1,5,22,7,9
	.half	.L5159-.L5158
	.byte	3,1,1,5,39,9
	.half	.L5160-.L5159
	.byte	1,5,57,7,9
	.half	.L5161-.L5160
	.byte	3,10,1,5,21,9
	.half	.L5162-.L5161
	.byte	3,2,1,5,22,9
	.half	.L3966-.L5162
	.byte	3,3,1,5,7,9
	.half	.L5163-.L3966
	.byte	1,5,12,7,9
	.half	.L5164-.L5163
	.byte	3,3,1,5,33,7,9
	.half	.L5165-.L5164
	.byte	3,1,1,5,40,9
	.half	.L5166-.L5165
	.byte	1,5,14,9
	.half	.L5167-.L5166
	.byte	1,5,40,7,9
	.half	.L5168-.L5167
	.byte	3,1,1,5,37,9
	.half	.L5169-.L5168
	.byte	1,5,52,7,9
	.half	.L986-.L5169
	.byte	3,2,1,5,50,9
	.half	.L5170-.L986
	.byte	1,5,7,9
	.half	.L985-.L5170
	.byte	3,4,1,5,18,7,9
	.half	.L5171-.L985
	.byte	3,13,1,5,22,9
	.half	.L3967-.L5171
	.byte	3,10,1,5,9,9
	.half	.L5172-.L3967
	.byte	1,5,29,9
	.half	.L5173-.L5172
	.byte	3,3,1,5,61,9
	.half	.L5174-.L5173
	.byte	3,3,1,5,66,9
	.half	.L5175-.L5174
	.byte	1,5,43,9
	.half	.L5176-.L5175
	.byte	3,1,1,5,80,9
	.half	.L3968-.L5176
	.byte	3,127,1,5,35,9
	.half	.L5177-.L3968
	.byte	3,2,1,5,62,9
	.half	.L3969-.L5177
	.byte	3,2,1,5,67,9
	.half	.L5178-.L3969
	.byte	1,5,44,9
	.half	.L5179-.L5178
	.byte	3,1,1,5,81,9
	.half	.L3971-.L5179
	.byte	3,127,1,5,42,9
	.half	.L5180-.L3971
	.byte	3,2,1,5,41,9
	.half	.L3973-.L5180
	.byte	3,1,1,5,53,9
	.half	.L5181-.L3973
	.byte	1,5,11,9
	.half	.L5182-.L5181
	.byte	1,5,52,7,9
	.half	.L5183-.L5182
	.byte	3,4,1,5,49,9
	.half	.L5184-.L5183
	.byte	3,127,1,5,72,9
	.half	.L3974-.L5184
	.byte	3,1,1,5,33,9
	.half	.L991-.L3974
	.byte	3,205,1,1,5,23,9
	.half	.L3975-.L991
	.byte	3,1,1,5,25,9
	.half	.L993-.L3975
	.byte	3,4,1,5,30,9
	.half	.L5185-.L993
	.byte	3,2,1,5,51,9
	.half	.L3977-.L5185
	.byte	1,5,17,9
	.half	.L5186-.L3977
	.byte	3,2,1,5,32,9
	.half	.L5187-.L5186
	.byte	3,2,1,5,14,7,9
	.half	.L992-.L5187
	.byte	3,176,126,1,5,58,7,9
	.half	.L5188-.L992
	.byte	1,5,59,7,9
	.half	.L5189-.L5188
	.byte	3,1,1,5,33,9
	.half	.L5190-.L5189
	.byte	1,7,9
	.half	.L5191-.L5190
	.byte	3,11,1,5,13,9
	.half	.L3979-.L5191
	.byte	3,3,1,5,18,7,9
	.half	.L2199-.L3979
	.byte	3,253,0,1,5,28,9
	.half	.L5192-.L2199
	.byte	1,5,36,9
	.half	.L3981-.L5192
	.byte	3,1,1,5,53,9
	.half	.L3983-.L3981
	.byte	3,2,1,5,57,9
	.half	.L5193-.L3983
	.byte	1,5,36,9
	.half	.L5194-.L5193
	.byte	3,1,1,5,71,9
	.half	.L3984-.L5194
	.byte	3,127,1,5,53,9
	.half	.L5195-.L3984
	.byte	3,3,1,5,57,9
	.half	.L5196-.L5195
	.byte	1,5,36,9
	.half	.L5197-.L5196
	.byte	3,1,1,5,71,9
	.half	.L3986-.L5197
	.byte	3,127,1,5,6,9
	.half	.L5198-.L3986
	.byte	3,4,1,5,23,7,9
	.half	.L5199-.L5198
	.byte	3,1,1,5,26,7,9
	.half	.L5200-.L5199
	.byte	3,1,1,5,33,9
	.half	.L3987-.L5200
	.byte	1,5,30,9
	.half	.L3985-.L3987
	.byte	1,5,12,7,9
	.half	.L5201-.L3985
	.byte	3,2,1,5,18,9
	.half	.L3988-.L5201
	.byte	1,5,12,9
	.half	.L998-.L3988
	.byte	3,4,1,5,15,9
	.half	.L1001-.L998
	.byte	3,246,126,1,5,3,7,9
	.half	.L2200-.L1001
	.byte	3,235,1,1,5,21,9
	.half	.L3989-.L2200
	.byte	1,5,18,9
	.half	.L5202-.L3989
	.byte	3,5,1,5,28,9
	.half	.L5203-.L5202
	.byte	1,5,37,9
	.half	.L3990-.L5203
	.byte	3,2,1,5,36,9
	.half	.L3991-.L3990
	.byte	3,1,1,5,52,9
	.half	.L5204-.L3991
	.byte	3,2,1,5,56,9
	.half	.L5205-.L5204
	.byte	1,5,35,9
	.half	.L3972-.L5205
	.byte	3,1,1,5,70,9
	.half	.L3992-.L3972
	.byte	3,127,1,5,33,9
	.half	.L5206-.L3992
	.byte	3,2,1,5,25,9
	.half	.L3980-.L5206
	.byte	3,3,1,5,3,9
	.half	.L5207-.L3980
	.byte	1,5,11,7,9
	.half	.L5208-.L5207
	.byte	3,2,1,5,18,9
	.half	.L5209-.L5208
	.byte	1,5,28,9
	.half	.L5210-.L5209
	.byte	1,5,11,9
	.half	.L1003-.L5210
	.byte	3,4,1,5,18,9
	.half	.L5211-.L1003
	.byte	1,5,17,9
	.half	.L5212-.L5211
	.byte	3,5,1,5,3,9
	.half	.L5213-.L5212
	.byte	1,5,28,7,9
	.half	.L5214-.L5213
	.byte	3,9,1,5,44,9
	.half	.L5215-.L5214
	.byte	1,5,54,9
	.half	.L3994-.L5215
	.byte	1,5,47,9
	.half	.L1005-.L3994
	.byte	3,6,1,5,23,9
	.half	.L1006-.L1005
	.byte	3,5,1,5,3,9
	.half	.L5216-.L1006
	.byte	1,5,58,7,9
	.half	.L5217-.L5216
	.byte	3,2,1,5,18,9
	.half	.L2227-.L5217
	.byte	3,249,65,1,5,8,9
	.half	.L2228-.L2227
	.byte	3,137,62,1,5,27,7,9
	.half	.L5218-.L2228
	.byte	3,1,1,5,48,7,9
	.half	.L5219-.L5218
	.byte	3,2,1,5,36,9
	.half	.L3970-.L5219
	.byte	1,5,31,9
	.half	.L5220-.L3970
	.byte	3,1,1,5,38,9
	.half	.L5221-.L5220
	.byte	3,1,1,5,32,9
	.half	.L5222-.L5221
	.byte	3,1,1,5,44,9
	.half	.L5223-.L5222
	.byte	1,5,57,9
	.half	.L5224-.L5223
	.byte	3,125,1,5,10,9
	.half	.L1008-.L5224
	.byte	3,6,1,5,40,7,9
	.half	.L5225-.L1008
	.byte	3,2,1,5,38,9
	.half	.L5226-.L5225
	.byte	1,5,48,9
	.half	.L997-.L5226
	.byte	3,247,125,1,5,25,9
	.half	.L5227-.L997
	.byte	3,4,1,5,43,9
	.half	.L5228-.L5227
	.byte	1,5,53,9
	.half	.L5229-.L5228
	.byte	1,5,28,9
	.half	.L990-.L5229
	.byte	3,9,1,5,14,9
	.half	.L5230-.L990
	.byte	1,5,28,7,9
	.half	.L5231-.L5230
	.byte	3,2,1,5,30,9
	.half	.L5232-.L5231
	.byte	1,5,28,9
	.half	.L1013-.L5232
	.byte	3,4,1,5,14,9
	.half	.L5233-.L1013
	.byte	1,5,18,7,9
	.half	.L2231-.L5233
	.byte	3,158,2,1,5,28,9
	.half	.L5234-.L2231
	.byte	1,5,50,9
	.half	.L3996-.L5234
	.byte	3,5,1,5,54,9
	.half	.L5235-.L3996
	.byte	1,5,33,9
	.half	.L5236-.L5235
	.byte	3,1,1,5,68,9
	.half	.L3995-.L5236
	.byte	3,127,1,5,26,9
	.half	.L5237-.L3995
	.byte	3,2,1,5,57,9
	.half	.L5238-.L5237
	.byte	1,5,18,9
	.half	.L3997-.L5238
	.byte	3,2,1,5,3,9
	.half	.L5239-.L3997
	.byte	1,5,18,7,9
	.half	.L5240-.L5239
	.byte	3,3,1,5,46,9
	.half	.L5241-.L5240
	.byte	3,2,1,5,29,9
	.half	.L989-.L5241
	.byte	3,220,125,1,5,18,9
	.half	.L1012-.L989
	.byte	3,206,2,1,5,28,9
	.half	.L5242-.L1012
	.byte	1,5,19,9
	.half	.L3998-.L5242
	.byte	3,4,1,5,3,9
	.half	.L5243-.L3998
	.byte	1,5,38,7,9
	.half	.L5244-.L5243
	.byte	3,3,1,5,20,9
	.half	.L5245-.L5244
	.byte	3,4,1,5,5,9
	.half	.L5246-.L5245
	.byte	1,5,37,7,9
	.half	.L5247-.L5246
	.byte	3,2,1,5,5,9
	.half	.L5248-.L5247
	.byte	3,126,1,5,35,9
	.half	.L1017-.L5248
	.byte	3,8,1,5,33,9
	.half	.L5249-.L1017
	.byte	1,5,24,9
	.half	.L983-.L5249
	.byte	3,179,125,1,5,11,9
	.half	.L5250-.L983
	.byte	1,5,24,7,9
	.half	.L5251-.L5250
	.byte	3,1,1,5,41,9
	.half	.L5252-.L5251
	.byte	1,5,18,7,9
	.half	.L974-.L5252
	.byte	3,164,125,1,5,3,9
	.half	.L5253-.L974
	.byte	1,5,37,7,9
	.half	.L5254-.L5253
	.byte	3,3,1,5,35,9
	.half	.L5255-.L5254
	.byte	1,5,19,9
	.half	.L1021-.L5255
	.byte	3,5,1,5,6,9
	.half	.L5256-.L1021
	.byte	1,5,20,7,9
	.half	.L5257-.L5256
	.byte	3,1,1,5,36,9
	.half	.L5258-.L5257
	.byte	1,5,17,7,9
	.half	.L5259-.L5258
	.byte	3,4,1,5,39,9
	.half	.L5260-.L5259
	.byte	1,5,18,9
	.half	.L2241-.L5260
	.byte	3,248,69,1,5,5,9
	.half	.L2242-.L2241
	.byte	3,139,58,1,5,55,7,9
	.half	.L5261-.L2242
	.byte	3,4,1,5,49,9
	.half	.L5262-.L5261
	.byte	3,1,1,5,61,9
	.half	.L5263-.L5262
	.byte	1,5,20,9
	.half	.L1024-.L5263
	.byte	3,4,1,5,57,9
	.half	.L5264-.L1024
	.byte	1,5,5,9
	.half	.L5265-.L5264
	.byte	1,5,37,7,9
	.half	.L5266-.L5265
	.byte	3,3,1,5,1,9
	.half	.L1022-.L5266
	.byte	3,4,1,7,9
	.half	.L1416-.L1022
	.byte	0,1,1
.L5096:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lUpdateCache')
	.sect	'.debug_ranges'
.L1415:
	.word	-1,.L1178,0,.L1416-.L1178,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lPrepareStatePageBuffer')
	.sect	'.debug_info'
.L1417:
	.word	533
	.half	3
	.word	.L1418
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1420,.L1419
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lPrepareStatePageBuffer',0,1,188,105,13,1,1
	.word	.L1186,.L2244,.L1185
	.byte	4
	.byte	'Bank',0,1,188,105,53
	.word	.L2245,.L2246
	.byte	4
	.byte	'SectorState',0,1,189,105,53
	.word	.L2247,.L2248
	.byte	5
	.word	.L1186,.L2244
	.byte	6
	.byte	'StateCnt',0,1,191,105,23
	.word	.L1589,.L2249
	.byte	6
	.byte	'WordlineAddr',0,1,192,105,23
	.word	.L1589,.L2250
	.byte	6
	.byte	'WordlineAddr2',0,1,193,105,23
	.word	.L1589,.L2251
	.byte	6
	.byte	'Index',0,1,194,105,23
	.word	.L1589,.L2252
	.byte	6
	.byte	'Length',0,1,195,105,23
	.word	.L1589,.L2253
	.byte	6
	.byte	'StateDataPtr',0,1,196,105,23
	.word	.L1579,.L2254
	.byte	6
	.byte	'ArrPtr',0,1,197,105,23
	.word	.L1644,.L2255
	.byte	6
	.byte	'WordlineCnt',0,1,198,105,23
	.word	.L1592,.L2256
	.byte	7
	.word	.L1650,.L2257,.L2258
	.byte	8
	.word	.L1653,.L2259
	.byte	8
	.word	.L1655,.L2260
	.byte	9
	.word	.L1657,.L2257,.L2258
	.byte	6
	.byte	'Index',0,1,213,100,22
	.word	.L1589,.L2261
	.byte	6
	.byte	'Crc32',0,1,214,100,22
	.word	.L1589,.L2262
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lPrepareStatePageBuffer')
	.sect	'.debug_abbrev'
.L1418:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18,1,0,0
	.byte	0
	.sdecl	'.debug_line',debug,cluster('Fee_lPrepareStatePageBuffer')
	.sect	'.debug_line'
.L1419:
	.word	.L5268-.L5267
.L5267:
	.half	3
	.word	.L5270-.L5269
.L5269:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L5270:
	.byte	5,13,7,0,5,2
	.word	.L1186
	.byte	3,187,233,0,1,5,18,9
	.half	.L4022-.L1186
	.byte	3,17,1,5,28,9
	.half	.L5271-.L4022
	.byte	1,5,33,9
	.half	.L4023-.L5271
	.byte	3,2,1,5,26,9
	.half	.L4019-.L4023
	.byte	3,4,1,5,23,9
	.half	.L4024-.L4019
	.byte	3,1,1,5,44,9
	.half	.L5272-.L4024
	.byte	3,3,1,5,50,9
	.half	.L5273-.L5272
	.byte	1,5,68,9
	.half	.L4025-.L5273
	.byte	3,7,1,5,69,9
	.half	.L4027-.L4025
	.byte	3,1,1,5,13,9
	.half	.L4029-.L4027
	.byte	3,4,1,5,11,9
	.half	.L5274-.L4029
	.byte	1,5,36,9
	.half	.L5275-.L5274
	.byte	3,1,1,5,70,9
	.half	.L5276-.L5275
	.byte	3,1,1,5,52,9
	.half	.L5277-.L5276
	.byte	3,13,1,5,58,9
	.half	.L5278-.L5277
	.byte	1,5,36,9
	.half	.L5279-.L5278
	.byte	1,5,70,9
	.half	.L5280-.L5279
	.byte	3,2,1,5,56,9
	.half	.L5281-.L5280
	.byte	3,9,1,5,5,9
	.half	.L5282-.L5281
	.byte	3,9,1,5,3,9
	.half	.L5283-.L5282
	.byte	3,3,1,5,61,7,9
	.half	.L5284-.L5283
	.byte	3,10,1,9
	.half	.L5285-.L5284
	.byte	3,7,1,5,52,9
	.half	.L5286-.L5285
	.byte	3,12,1,9
	.half	.L5287-.L5286
	.byte	3,13,1,5,24,9
	.half	.L1040-.L5287
	.byte	3,6,1,5,13,9
	.half	.L4030-.L1040
	.byte	3,2,1,5,15,9
	.half	.L4026-.L4030
	.byte	3,2,1,5,58,9
	.half	.L5288-.L4026
	.byte	3,126,1,5,13,9
	.half	.L1042-.L5288
	.byte	3,2,1,5,65,9
	.half	.L5289-.L1042
	.byte	3,126,1,5,58,9
	.half	.L1041-.L5289
	.byte	1,5,26,7,9
	.half	.L5290-.L1041
	.byte	3,10,1,5,13,9
	.half	.L5291-.L5290
	.byte	3,6,1,5,40,9
	.half	.L4031-.L5291
	.byte	1,5,27,9
	.half	.L1044-.L4031
	.byte	3,4,1,5,40,9
	.half	.L5292-.L1044
	.byte	1,5,25,9
	.half	.L5293-.L5292
	.byte	1,5,47,9
	.half	.L5294-.L5293
	.byte	3,124,1,5,40,9
	.half	.L1043-.L5294
	.byte	1,5,26,7,9
	.half	.L5295-.L1043
	.byte	3,14,1,5,10,9
	.half	.L5296-.L5295
	.byte	3,2,1,5,29,9
	.half	.L4032-.L5296
	.byte	3,7,1,5,9,9
	.half	.L2257-.L4032
	.byte	3,246,121,1,5,13,9
	.half	.L4033-.L2257
	.byte	3,2,1,5,40,9
	.half	.L4028-.L4033
	.byte	1,5,13,9
	.half	.L1046-.L4028
	.byte	3,2,1,5,47,9
	.half	.L5297-.L1046
	.byte	3,126,1,5,40,9
	.half	.L1045-.L5297
	.byte	1,5,23,7,9
	.half	.L5298-.L1045
	.byte	3,132,6,1,5,31,9
	.half	.L2258-.L5298
	.byte	3,6,1,5,1,9
	.half	.L5299-.L2258
	.byte	3,2,1,7,9
	.half	.L1421-.L5299
	.byte	0,1,1
.L5268:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lPrepareStatePageBuffer')
	.sect	'.debug_ranges'
.L1420:
	.word	-1,.L1186,0,.L1421-.L1186,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lHandleUserWrite')
	.sect	'.debug_info'
.L1422:
	.word	988
	.half	3
	.word	.L1423
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1425,.L1424
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lHandleUserWrite',0,1,188,61,13,1,1
	.word	.L1134,.L2263,.L1133
	.byte	4
	.byte	'UserBlockIndex',0,1,188,61,47
	.word	.L2264,.L2265
	.byte	5
	.word	.L1134,.L2263
	.byte	6
	.byte	'StateDataPtr',0,1,190,61,26
	.word	.L1579,.L2266
	.byte	6
	.byte	'BlockPtr',0,1,191,61,26
	.word	.L1807,.L2267
	.byte	6
	.byte	'ReadWriteBuffPtr',0,1,192,61,26
	.word	.L1644,.L2268
	.byte	6
	.byte	'DestAddr',0,1,193,61,26
	.word	.L1589,.L2269
	.byte	6
	.byte	'BlockCycleCount',0,1,194,61,26
	.word	.L1589,.L2270
	.byte	6
	.byte	'BlockSize',0,1,195,61,26
	.word	.L1781,.L2271
	.byte	6
	.byte	'Offset',0,1,196,61,26
	.word	.L1781,.L2272
	.byte	6
	.byte	'RetVal',0,1,197,61,26
	.word	.L1592,.L2273
	.byte	7
	.word	.L1684,.L2274,.L529
	.byte	8
	.word	.L1687,.L2275
	.byte	9
	.word	.L1689,.L2274,.L529
	.byte	7
	.word	.L1690,.L2274,.L2276
	.byte	8
	.word	.L1691,.L2277
	.byte	10
	.word	.L1693,.L2274,.L2276
	.byte	0,0,0,7
	.word	.L2278,.L2279,.L2280
	.byte	8
	.word	.L2281,.L2282
	.byte	8
	.word	.L2283,.L2284
	.byte	9
	.word	.L2285,.L2279,.L2280
	.byte	6
	.byte	'StateDataPtr',0,1,191,54,26
	.word	.L1579,.L2286
	.byte	6
	.byte	'BlockNumber',0,1,192,54,26
	.word	.L1781,.L2287
	.byte	6
	.byte	'NewBlockCycleCount',0,1,193,54,26
	.word	.L1589,.L2288
	.byte	0,0,7
	.word	.L2289,.L531,.L534
	.byte	8
	.word	.L2290,.L2291
	.byte	8
	.word	.L2292,.L2293
	.byte	8
	.word	.L2294,.L2295
	.byte	9
	.word	.L2296,.L531,.L534
	.byte	6
	.byte	'StateDataPtr',0,1,144,55,26
	.word	.L1579,.L2297
	.byte	6
	.byte	'DataBufferPtr',0,1,145,55,26
	.word	.L1622,.L2298
	.byte	6
	.byte	'BlockPages_1',0,1,146,55,26
	.word	.L1781,.L2299
	.byte	6
	.byte	'DataByteCnt',0,1,147,55,26
	.word	.L1781,.L2300
	.byte	6
	.byte	'BlockNumber',0,1,148,55,26
	.word	.L1781,.L2301
	.byte	6
	.byte	'EndOfWLReached',0,1,149,55,26
	.word	.L1592,.L2302
	.byte	6
	.byte	'NewBlockCycleCount',0,1,150,55,26
	.word	.L1589,.L2303
	.byte	7
	.word	.L1912,.L2304,.L2305
	.byte	8
	.word	.L1915,.L2306
	.byte	10
	.word	.L1917,.L2304,.L2305
	.byte	0,7
	.word	.L1912,.L2307,.L2308
	.byte	8
	.word	.L1915,.L2306
	.byte	10
	.word	.L1917,.L2307,.L2308
	.byte	0,7
	.word	.L1912,.L2309,.L2310
	.byte	8
	.word	.L1915,.L2306
	.byte	10
	.word	.L1917,.L2309,.L2310
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lHandleUserWrite')
	.sect	'.debug_abbrev'
.L1423:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18,1,0,0
	.byte	10,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lHandleUserWrite')
	.sect	'.debug_line'
.L1424:
	.word	.L5301-.L5300
.L5300:
	.half	3
	.word	.L5303-.L5302
.L5302:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L5303:
	.byte	5,18,7,0,5,2
	.word	.L1134
	.byte	3,198,61,1,5,28,9
	.half	.L5304-.L1134
	.byte	1,5,26,9
	.half	.L3476-.L5304
	.byte	3,3,1,5,45,9
	.half	.L5305-.L3476
	.byte	1,5,31,9
	.half	.L3477-.L5305
	.byte	3,1,1,5,19,9
	.half	.L3479-.L3477
	.byte	3,1,1,5,33,9
	.half	.L3480-.L3479
	.byte	3,4,1,5,49,9
	.half	.L3478-.L3480
	.byte	1,5,3,9
	.half	.L5306-.L3478
	.byte	1,5,45,7,9
	.half	.L5307-.L5306
	.byte	3,2,1,5,21,9
	.half	.L3475-.L5307
	.byte	1,5,26,9
	.half	.L527-.L3475
	.byte	3,3,1,5,22,9
	.half	.L3482-.L527
	.byte	3,1,1,5,31,9
	.half	.L5308-.L3482
	.byte	1,5,3,9
	.half	.L3483-.L5308
	.byte	3,2,1,5,51,7,9
	.half	.L5309-.L3483
	.byte	3,5,1,5,37,9
	.half	.L530-.L5309
	.byte	3,5,1,5,18,9
	.half	.L2274-.L530
	.byte	3,180,99,1,5,41,9
	.half	.L2276-.L2274
	.byte	3,27,1,5,34,9
	.half	.L529-.L2276
	.byte	3,172,28,1,5,51,9
	.half	.L5310-.L529
	.byte	1,5,39,7,9
	.half	.L5311-.L5310
	.byte	3,7,1,5,55,9
	.half	.L5312-.L5311
	.byte	3,1,1,5,53,9
	.half	.L5313-.L5312
	.byte	1,5,47,9
	.half	.L5314-.L5313
	.byte	3,1,1,5,59,9
	.half	.L5315-.L5314
	.byte	1,5,37,9
	.half	.L5316-.L5315
	.byte	3,1,1,5,56,9
	.half	.L528-.L5316
	.byte	3,3,1,5,34,9
	.half	.L3485-.L528
	.byte	3,4,1,5,3,9
	.half	.L3484-.L3485
	.byte	1,5,18,7,9
	.half	.L2279-.L3484
	.byte	3,213,120,1,5,28,9
	.half	.L5317-.L2279
	.byte	1,5,45,9
	.half	.L3486-.L5317
	.byte	3,2,1,5,36,9
	.half	.L3487-.L3486
	.byte	3,1,1,5,40,9
	.half	.L3489-.L3487
	.byte	3,1,1,5,18,9
	.half	.L3481-.L3489
	.byte	3,4,1,5,3,9
	.half	.L5318-.L3481
	.byte	1,5,28,7,9
	.half	.L5319-.L5318
	.byte	3,3,1,5,26,9
	.half	.L5320-.L5319
	.byte	1,9
	.half	.L5321-.L5320
	.byte	3,1,1,5,48,9
	.half	.L5322-.L5321
	.byte	3,1,1,5,26,9
	.half	.L3488-.L5322
	.byte	1,9
	.half	.L5323-.L3488
	.byte	3,1,1,5,55,9
	.half	.L5324-.L5323
	.byte	3,1,1,5,26,9
	.half	.L5325-.L5324
	.byte	1,5,55,9
	.half	.L5326-.L5325
	.byte	3,1,1,5,26,9
	.half	.L5327-.L5326
	.byte	1,5,28,9
	.half	.L5328-.L5327
	.byte	3,1,1,5,26,9
	.half	.L5329-.L5328
	.byte	1,5,28,9
	.half	.L5330-.L5329
	.byte	3,2,1,5,26,9
	.half	.L5331-.L5330
	.byte	1,5,50,9
	.half	.L5332-.L5331
	.byte	3,120,1,5,28,9
	.half	.L532-.L5332
	.byte	3,14,1,5,26,9
	.half	.L5333-.L532
	.byte	1,5,28,9
	.half	.L5334-.L5333
	.byte	3,1,1,5,26,9
	.half	.L5335-.L5334
	.byte	1,5,28,9
	.half	.L5336-.L5335
	.byte	3,1,1,5,26,9
	.half	.L5337-.L5336
	.byte	1,9
	.half	.L5338-.L5337
	.byte	3,1,1,9
	.half	.L5339-.L5338
	.byte	3,1,1,5,48,9
	.half	.L5340-.L5339
	.byte	3,1,1,5,26,9
	.half	.L3490-.L5340
	.byte	1,5,28,9
	.half	.L5341-.L3490
	.byte	3,2,1,5,26,9
	.half	.L5342-.L5341
	.byte	1,5,28,9
	.half	.L5343-.L5342
	.byte	3,1,1,5,26,9
	.half	.L5344-.L5343
	.byte	1,5,37,9
	.half	.L5345-.L5344
	.byte	3,2,1,5,35,9
	.half	.L533-.L5345
	.byte	1,5,30,9
	.half	.L5346-.L533
	.byte	3,2,1,5,28,9
	.half	.L5347-.L5346
	.byte	1,5,36,9
	.half	.L5348-.L5347
	.byte	3,1,1,5,34,9
	.half	.L5349-.L5348
	.byte	1,5,64,9
	.half	.L2280-.L5349
	.byte	3,135,7,1,5,18,9
	.half	.L531-.L2280
	.byte	3,168,121,1,9
	.half	.L3492-.L531
	.byte	3,1,1,5,28,9
	.half	.L5350-.L3492
	.byte	1,5,45,9
	.half	.L3493-.L5350
	.byte	3,1,1,5,48,9
	.half	.L3494-.L3493
	.byte	3,2,1,5,40,9
	.half	.L3496-.L3494
	.byte	3,2,1,5,38,9
	.half	.L3491-.L3496
	.byte	3,1,1,5,49,9
	.half	.L3498-.L3491
	.byte	1,5,36,9
	.half	.L3499-.L3498
	.byte	3,2,1,5,18,9
	.half	.L5351-.L3499
	.byte	3,3,1,5,3,9
	.half	.L5352-.L5351
	.byte	1,5,28,7,9
	.half	.L5353-.L5352
	.byte	3,3,1,5,26,9
	.half	.L5354-.L5353
	.byte	1,5,28,9
	.half	.L5355-.L5354
	.byte	3,1,1,5,26,9
	.half	.L5356-.L5355
	.byte	1,5,28,9
	.half	.L5357-.L5356
	.byte	3,1,1,5,26,9
	.half	.L5358-.L5357
	.byte	1,9
	.half	.L5359-.L5358
	.byte	3,1,1,9
	.half	.L5360-.L5359
	.byte	3,1,1,5,48,9
	.half	.L5361-.L5360
	.byte	3,1,1,5,26,9
	.half	.L3495-.L5361
	.byte	1,9
	.half	.L5362-.L3495
	.byte	3,1,1,5,50,9
	.half	.L5363-.L5362
	.byte	3,1,1,5,63,9
	.half	.L3500-.L5363
	.byte	1,5,26,9
	.half	.L5364-.L3500
	.byte	1,5,17,9
	.half	.L5365-.L5364
	.byte	3,2,1,5,34,9
	.half	.L5366-.L5365
	.byte	1,5,38,9
	.half	.L5367-.L5366
	.byte	3,2,1,5,36,9
	.half	.L5368-.L5367
	.byte	1,5,32,9
	.half	.L5369-.L5368
	.byte	3,1,1,5,30,9
	.half	.L5370-.L5369
	.byte	1,5,51,9
	.half	.L5371-.L5370
	.byte	3,116,1,5,20,9
	.half	.L535-.L5371
	.byte	3,18,1,5,5,9
	.half	.L5372-.L535
	.byte	1,5,30,7,9
	.half	.L5373-.L5372
	.byte	3,3,1,5,28,9
	.half	.L5374-.L5373
	.byte	1,9
	.half	.L5375-.L5374
	.byte	3,1,1,5,50,9
	.half	.L5376-.L5375
	.byte	3,1,1,5,28,9
	.half	.L3501-.L5376
	.byte	1,9
	.half	.L5377-.L3501
	.byte	3,1,1,5,57,9
	.half	.L5378-.L5377
	.byte	3,1,1,5,28,9
	.half	.L5379-.L5378
	.byte	1,5,57,9
	.half	.L5380-.L5379
	.byte	3,1,1,5,28,9
	.half	.L5381-.L5380
	.byte	1,9
	.half	.L5382-.L5381
	.byte	3,1,1,5,52,9
	.half	.L5383-.L5382
	.byte	3,1,1,5,66,9
	.half	.L3502-.L5383
	.byte	1,5,28,9
	.half	.L5384-.L3502
	.byte	1,5,34,9
	.half	.L5385-.L5384
	.byte	3,3,1,5,32,9
	.half	.L5386-.L5385
	.byte	1,5,19,9
	.half	.L5387-.L5386
	.byte	3,3,1,5,36,9
	.half	.L5388-.L5387
	.byte	1,5,41,9
	.half	.L5389-.L5388
	.byte	3,3,1,5,63,9
	.half	.L5390-.L5389
	.byte	1,5,18,9
	.half	.L2304-.L5390
	.byte	3,174,105,1,5,7,9
	.half	.L2305-.L2304
	.byte	3,210,22,1,5,24,7,9
	.half	.L5391-.L2305
	.byte	3,4,1,5,42,9
	.half	.L5392-.L5391
	.byte	3,1,1,5,40,9
	.half	.L5393-.L5392
	.byte	1,5,5,9
	.half	.L537-.L5393
	.byte	3,5,1,5,33,7,9
	.half	.L5394-.L537
	.byte	3,3,1,5,56,9
	.half	.L3503-.L5394
	.byte	3,6,1,5,14,9
	.half	.L5395-.L3503
	.byte	3,19,1,5,25,9
	.half	.L540-.L5395
	.byte	3,107,1,5,38,9
	.half	.L5396-.L540
	.byte	1,5,9,9
	.half	.L5397-.L5396
	.byte	1,5,27,7,9
	.half	.L5398-.L5397
	.byte	3,2,1,5,54,9
	.half	.L5399-.L5398
	.byte	1,5,23,9
	.half	.L5400-.L5399
	.byte	3,2,1,5,40,9
	.half	.L5401-.L5400
	.byte	1,5,23,9
	.half	.L5402-.L5401
	.byte	3,1,1,5,35,9
	.half	.L5403-.L5402
	.byte	1,5,77,9
	.half	.L5404-.L5403
	.byte	3,125,1,5,40,9
	.half	.L541-.L5404
	.byte	3,8,1,5,27,9
	.half	.L5405-.L541
	.byte	1,5,56,9
	.half	.L5406-.L5405
	.byte	1,5,54,9
	.half	.L5407-.L5406
	.byte	1,5,23,9
	.half	.L5408-.L5407
	.byte	3,1,1,5,35,9
	.half	.L5409-.L5408
	.byte	1,5,23,9
	.half	.L5410-.L5409
	.byte	3,3,1,5,47,9
	.half	.L5411-.L5410
	.byte	1,5,45,9
	.half	.L542-.L5411
	.byte	3,3,1,5,44,9
	.half	.L5412-.L542
	.byte	3,1,1,5,67,9
	.half	.L5413-.L5412
	.byte	3,127,1,5,18,9
	.half	.L2307-.L5413
	.byte	3,140,105,1,5,13,9
	.half	.L2308-.L2307
	.byte	3,244,22,1,5,26,7,9
	.half	.L5414-.L2308
	.byte	3,2,1,5,51,9
	.half	.L5415-.L5414
	.byte	1,5,40,7,9
	.half	.L5416-.L5415
	.byte	3,1,1,5,55,9
	.half	.L5417-.L5416
	.byte	1,5,22,7,9
	.half	.L543-.L5417
	.byte	3,6,1,5,7,9
	.half	.L5418-.L543
	.byte	1,5,56,7,9
	.half	.L5419-.L5418
	.byte	3,5,1,5,66,9
	.half	.L5420-.L5419
	.byte	3,126,1,5,40,9
	.half	.L547-.L5420
	.byte	3,2,1,5,27,9
	.half	.L5421-.L547
	.byte	1,5,54,9
	.half	.L5422-.L5421
	.byte	1,5,23,9
	.half	.L5423-.L5422
	.byte	3,1,1,5,35,9
	.half	.L5424-.L5423
	.byte	1,5,28,9
	.half	.L546-.L5424
	.byte	3,125,1,5,41,9
	.half	.L5425-.L546
	.byte	1,5,66,9
	.half	.L5426-.L5425
	.byte	1,5,63,7,9
	.half	.L5427-.L5426
	.byte	3,5,1,5,46,9
	.half	.L545-.L5427
	.byte	3,5,1,9
	.half	.L5428-.L545
	.byte	3,1,1,5,68,9
	.half	.L5429-.L5428
	.byte	3,127,1,5,18,9
	.half	.L2309-.L5429
	.byte	3,246,104,1,5,12,9
	.half	.L2310-.L2309
	.byte	3,138,23,1,5,42,7,9
	.half	.L548-.L2310
	.byte	3,3,1,5,40,9
	.half	.L5430-.L548
	.byte	1,5,55,9
	.half	.L549-.L5430
	.byte	3,8,1,5,18,9
	.half	.L534-.L549
	.byte	3,232,5,1,5,40,9
	.half	.L5431-.L534
	.byte	1,5,3,9
	.half	.L5432-.L5431
	.byte	1,5,51,7,9
	.half	.L5433-.L5432
	.byte	3,4,1,5,36,9
	.half	.L5434-.L5433
	.byte	3,127,1,5,38,9
	.half	.L5435-.L5434
	.byte	3,3,1,5,36,9
	.half	.L5436-.L5435
	.byte	1,5,45,9
	.half	.L5437-.L5436
	.byte	3,6,1,5,32,9
	.half	.L3505-.L5437
	.byte	3,1,1,5,30,9
	.half	.L5438-.L3505
	.byte	1,5,5,9
	.half	.L5439-.L5438
	.byte	3,8,1,5,38,7,9
	.half	.L5440-.L5439
	.byte	3,2,1,5,7,9
	.half	.L5441-.L5440
	.byte	1,5,34,7,9
	.half	.L5442-.L5441
	.byte	3,2,1,5,49,9
	.half	.L5443-.L5442
	.byte	1,5,34,9
	.half	.L552-.L5443
	.byte	3,4,1,5,1,9
	.half	.L550-.L552
	.byte	3,4,1,7,9
	.half	.L1426-.L550
	.byte	0,1,1
.L5301:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lHandleUserWrite')
	.sect	'.debug_ranges'
.L1425:
	.word	-1,.L1134,0,.L1426-.L1134,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lHandleWritePrepDFLASH')
	.sect	'.debug_info'
.L1427:
	.word	345
	.half	3
	.word	.L1428
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1430,.L1429
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lHandleWritePrepDFLASH',0,1,143,44,13,1,1
	.word	.L1124,.L2311,.L1123
	.byte	4
	.byte	'SrcPtr',0,1,143,44,59
	.word	.L2312,.L2313
	.byte	5
	.word	.L1124,.L2311
	.byte	6
	.byte	'StateDataPtr',0,1,145,44,24
	.word	.L1579,.L2314
	.byte	6
	.byte	'DestAddr',0,1,146,44,31
	.word	.L1589,.L2315
	.byte	6
	.byte	'ReturnValueFls',0,1,147,44,24
	.word	.L1592,.L2316
	.byte	6
	.byte	'PrepDFlashState',0,1,148,44,24
	.word	.L1592,.L2317
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lHandleWritePrepDFLASH')
	.sect	'.debug_abbrev'
.L1428:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lHandleWritePrepDFLASH')
	.sect	'.debug_line'
.L1429:
	.word	.L5445-.L5444
.L5444:
	.half	3
	.word	.L5447-.L5446
.L5446:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L5447:
	.byte	5,13,7,0,5,2
	.word	.L1124
	.byte	3,142,44,1,5,39,9
	.half	.L3387-.L1124
	.byte	3,4,1,5,18,9
	.half	.L3388-.L3387
	.byte	3,3,1,5,28,9
	.half	.L5448-.L3388
	.byte	1,5,26,9
	.half	.L3390-.L5448
	.byte	3,1,1,5,48,9
	.half	.L3391-.L3390
	.byte	3,2,1,5,14,9
	.half	.L375-.L3391
	.byte	3,3,1,5,31,9
	.half	.L374-.L375
	.byte	3,125,1,5,48,9
	.half	.L3394-.L374
	.byte	1,5,36,7,9
	.half	.L5449-.L3394
	.byte	3,5,1,9
	.half	.L5450-.L5449
	.byte	3,1,1,5,34,9
	.half	.L5451-.L5450
	.byte	1,5,28,9
	.half	.L5452-.L5451
	.byte	3,1,1,5,33,9
	.half	.L5453-.L5452
	.byte	3,2,1,5,10,9
	.half	.L3395-.L5453
	.byte	3,5,1,7,9
	.half	.L5454-.L3395
	.byte	3,9,1,7,9
	.half	.L5455-.L5454
	.byte	3,120,1,7,9
	.half	.L5456-.L5455
	.byte	3,9,1,7,9
	.half	.L5457-.L5456
	.byte	3,120,1,7,9
	.half	.L5458-.L5457
	.byte	3,9,1,7,9
	.half	.L5459-.L5458
	.byte	1,5,30,9
	.half	.L376-.L5459
	.byte	3,122,1,5,5,9
	.half	.L3397-.L376
	.byte	3,2,1,5,16,9
	.half	.L377-.L3397
	.byte	3,6,1,5,31,9
	.half	.L3392-.L377
	.byte	3,2,1,5,22,9
	.half	.L3389-.L3392
	.byte	3,127,1,5,3,9
	.half	.L382-.L3389
	.byte	3,10,1,5,38,7,9
	.half	.L5460-.L382
	.byte	3,2,1,5,36,9
	.half	.L3396-.L5460
	.byte	1,5,30,9
	.half	.L5461-.L3396
	.byte	3,1,1,5,26,9
	.half	.L5462-.L5461
	.byte	3,2,1,5,1,7,9
	.half	.L384-.L5462
	.byte	3,2,1,7,9
	.half	.L1431-.L384
	.byte	0,1,1
.L5445:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lHandleWritePrepDFLASH')
	.sect	'.debug_ranges'
.L1430:
	.word	-1,.L1124,0,.L1431-.L1124,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lInitGC')
	.sect	'.debug_info'
.L1432:
	.word	2168
	.half	3
	.word	.L1433
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1435,.L1434
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lInitGC',0,1,202,52,13,1,1
	.word	.L1126,.L2318,.L1125
	.byte	4
	.word	.L1126,.L2318
	.byte	5
	.byte	'StateDataPtr',0,1,204,52,23
	.word	.L1579,.L2319
	.byte	6
	.word	.L2320,.L2321,.L385
	.byte	7
	.word	.L2322,.L2321,.L385
	.byte	5
	.byte	'StateDataPtr',0,1,129,52,23
	.word	.L1579,.L2323
	.byte	6
	.word	.L2324,.L2325,.L390
	.byte	7
	.word	.L2326,.L2325,.L390
	.byte	5
	.byte	'StateDataPtr',0,1,176,47,23
	.word	.L1579,.L2327
	.byte	5
	.byte	'SectorInfoPtr',0,1,177,47,23
	.word	.L1585,.L2328
	.byte	5
	.byte	'ReadWriteBuffPtr',0,1,178,47,23
	.word	.L1622,.L2329
	.byte	5
	.byte	'BankNumber',0,1,179,47,23
	.word	.L1589,.L2330
	.byte	5
	.byte	'EndAddr',0,1,180,47,23
	.word	.L1589,.L2331
	.byte	5
	.byte	'DestAddr',0,1,181,47,30
	.word	.L1589,.L2332
	.byte	5
	.byte	'ReturnVal1',0,1,182,47,23
	.word	.L1592,.L2333
	.byte	0,0,6
	.word	.L2334,.L2335,.L389
	.byte	7
	.word	.L2336,.L2335,.L389
	.byte	5
	.byte	'StateDataPtr',0,1,239,48,23
	.word	.L1579,.L2337
	.byte	5
	.byte	'SectorInfoPtr0',0,1,240,48,23
	.word	.L1585,.L2338
	.byte	5
	.byte	'SectorInfoPtr1',0,1,241,48,23
	.word	.L1585,.L2339
	.byte	5
	.byte	'SrcAddr',0,1,242,48,29
	.word	.L1622,.L2340
	.byte	5
	.byte	'DestAddr',0,1,243,48,23
	.word	.L1589,.L2341
	.byte	5
	.byte	'PrepDFlashState',0,1,244,48,23
	.word	.L1592,.L2342
	.byte	5
	.byte	'ReturnVal1',0,1,245,48,23
	.word	.L1592,.L2343
	.byte	6
	.word	.L2344,.L2345,.L2346
	.byte	8
	.word	.L2347,.L2348
	.byte	9
	.word	.L2349,.L2350
	.byte	5
	.byte	'PrepDFlashState',0,1,149,50,11
	.word	.L1592,.L2364
	.byte	0,0,6
	.word	.L2344,.L2351,.L2352
	.byte	8
	.word	.L2347,.L2348
	.byte	0,6
	.word	.L2365,.L2352,.L2366
	.byte	7
	.word	.L2367,.L2352,.L2366
	.byte	5
	.byte	'PrepDFlashState',0,1,165,51,11
	.word	.L1592,.L2368
	.byte	5
	.byte	'StateDataPtr',0,1,166,51,25
	.word	.L1579,.L2369
	.byte	5
	.byte	'SectorInfoPtr0',0,1,167,51,25
	.word	.L1585,.L2370
	.byte	5
	.byte	'ReturnVal1',0,1,168,51,25
	.word	.L1592,.L2371
	.byte	0,0,6
	.word	.L2344,.L409,.L2353
	.byte	8
	.word	.L2347,.L2348
	.byte	0,6
	.word	.L2372,.L2353,.L2373
	.byte	7
	.word	.L2374,.L2353,.L2373
	.byte	5
	.byte	'PrepDFlashState',0,1,207,50,11
	.word	.L1592,.L2375
	.byte	5
	.byte	'StateDataPtr',0,1,208,50,25
	.word	.L1579,.L2376
	.byte	5
	.byte	'SectorInfoPtr1',0,1,209,50,25
	.word	.L1585,.L2377
	.byte	5
	.byte	'ReturnVal1',0,1,210,50,25
	.word	.L1592,.L2378
	.byte	0,0,6
	.word	.L1684,.L2379,.L2380
	.byte	8
	.word	.L1687,.L2381
	.byte	7
	.word	.L1689,.L2379,.L2380
	.byte	6
	.word	.L1690,.L2379,.L2382
	.byte	8
	.word	.L1691,.L2383
	.byte	10
	.word	.L1693,.L2379,.L2382
	.byte	0,0,0,6
	.word	.L1684,.L2380,.L2384
	.byte	8
	.word	.L1687,.L2381
	.byte	7
	.word	.L1689,.L2380,.L2384
	.byte	6
	.word	.L1690,.L2380,.L2385
	.byte	8
	.word	.L1691,.L2383
	.byte	10
	.word	.L1693,.L2380,.L2385
	.byte	0,0,0,6
	.word	.L2344,.L2354,.L2355
	.byte	8
	.word	.L2347,.L2348
	.byte	0,6
	.word	.L2344,.L427,.L2356
	.byte	8
	.word	.L2347,.L2348
	.byte	0,6
	.word	.L2344,.L440,.L2357
	.byte	8
	.word	.L2347,.L2348
	.byte	0,6
	.word	.L1684,.L2386,.L2387
	.byte	8
	.word	.L1687,.L2381
	.byte	7
	.word	.L1689,.L2386,.L2387
	.byte	6
	.word	.L1690,.L2386,.L2388
	.byte	8
	.word	.L1691,.L2383
	.byte	10
	.word	.L1693,.L2386,.L2388
	.byte	0,0,0,6
	.word	.L2344,.L2358,.L2359
	.byte	8
	.word	.L2347,.L2348
	.byte	0,6
	.word	.L2344,.L442,.L2360
	.byte	8
	.word	.L2347,.L2348
	.byte	0,6
	.word	.L1684,.L2389,.L2390
	.byte	8
	.word	.L1687,.L2381
	.byte	7
	.word	.L1689,.L2389,.L2390
	.byte	6
	.word	.L1690,.L2389,.L2391
	.byte	8
	.word	.L1691,.L2383
	.byte	10
	.word	.L1693,.L2389,.L2391
	.byte	0,0,0,6
	.word	.L2344,.L2361,.L2362
	.byte	8
	.word	.L2347,.L2348
	.byte	0,6
	.word	.L2344,.L444,.L2363
	.byte	8
	.word	.L2347,.L2348
	.byte	0,6
	.word	.L1684,.L2392,.L2393
	.byte	8
	.word	.L1687,.L2381
	.byte	7
	.word	.L1689,.L2392,.L2393
	.byte	6
	.word	.L1690,.L2392,.L2394
	.byte	8
	.word	.L1691,.L2383
	.byte	10
	.word	.L1693,.L2392,.L2394
	.byte	0,0,0,6
	.word	.L2344,.L416,.L389
	.byte	8
	.word	.L2347,.L2348
	.byte	0,0,0,0,0,6
	.word	.L2395,.L2396,.L456
	.byte	7
	.word	.L2397,.L2396,.L456
	.byte	5
	.byte	'StateDataPtr',0,1,224,44,26
	.word	.L1579,.L2398
	.byte	5
	.byte	'SectorInfoPtr',0,1,225,44,26
	.word	.L1585,.L2399
	.byte	5
	.byte	'ReadWriteBuffPtr',0,1,226,44,20
	.word	.L1644,.L2400
	.byte	5
	.byte	'DestWriteAddress',0,1,227,44,33
	.word	.L1589,.L2401
	.byte	5
	.byte	'BankNumber',0,1,228,44,26
	.word	.L1589,.L2402
	.byte	5
	.byte	'WriteLength',0,1,229,44,26
	.word	.L1589,.L2403
	.byte	5
	.byte	'ReturnValueFls',0,1,230,44,26
	.word	.L1592,.L2404
	.byte	6
	.word	.L1684,.L2405,.L2406
	.byte	8
	.word	.L1687,.L2381
	.byte	7
	.word	.L1689,.L2405,.L2406
	.byte	6
	.word	.L1690,.L2405,.L2407
	.byte	8
	.word	.L1691,.L2383
	.byte	10
	.word	.L1693,.L2405,.L2407
	.byte	0,0,0,0,0,6
	.word	.L2408,.L2409,.L464
	.byte	7
	.word	.L2410,.L2409,.L464
	.byte	5
	.byte	'StateDataPtr',0,1,202,45,23
	.word	.L1579,.L2411
	.byte	0,0,6
	.word	.L2412,.L2413,.L476
	.byte	9
	.word	.L2414,.L2415
	.byte	5
	.byte	'StateDataPtr',0,1,180,46,29
	.word	.L1631,.L2416
	.byte	5
	.byte	'BufferPtr',0,1,181,46,29
	.word	.L1622,.L2417
	.byte	6
	.word	.L2418,.L477,.L486
	.byte	7
	.word	.L2419,.L477,.L486
	.byte	5
	.byte	'StateDataPtr',0,1,227,43,24
	.word	.L1579,.L2420
	.byte	5
	.byte	'DestAddr',0,1,228,43,31
	.word	.L1589,.L2421
	.byte	5
	.byte	'ReturnValueFls',0,1,229,43,24
	.word	.L1592,.L2422
	.byte	0,0,0,0,11
	.word	.L2412,.L477,.L486
	.byte	11
	.word	.L2412,.L479,.L2318
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lInitGC')
	.sect	'.debug_abbrev'
.L1433:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1,49,16
	.byte	17,1,18,1,0,0,7,11,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,85,6,0,0,10,11,0,49,16,17,1
	.byte	18,1,0,0,11,29,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lInitGC')
	.sect	'.debug_line'
.L1434:
	.word	.L5464-.L5463
.L5463:
	.half	3
	.word	.L5466-.L5465
.L5465:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L5466:
	.byte	5,18,7,0,5,2
	.word	.L1126
	.byte	3,205,52,1,5,28,9
	.half	.L5467-.L1126
	.byte	1,5,18,9
	.half	.L2321-.L5467
	.byte	3,189,127,1,5,3,9
	.half	.L5468-.L2321
	.byte	1,5,21,7,9
	.half	.L5469-.L5468
	.byte	3,5,1,5,8,9
	.half	.L5470-.L5469
	.byte	1,5,22,7,9
	.half	.L5471-.L5470
	.byte	3,1,1,5,39,9
	.half	.L5472-.L5471
	.byte	1,5,22,7,9
	.half	.L5473-.L5472
	.byte	3,1,1,5,39,9
	.half	.L5474-.L5473
	.byte	1,5,28,7,9
	.half	.L5475-.L5474
	.byte	3,2,1,5,30,9
	.half	.L5476-.L5475
	.byte	1,5,23,9
	.half	.L386-.L5476
	.byte	3,7,1,5,7,9
	.half	.L5477-.L386
	.byte	1,5,18,7,9
	.half	.L2325-.L5477
	.byte	3,157,123,1,5,28,9
	.half	.L5478-.L2325
	.byte	1,5,16,9
	.half	.L3399-.L5478
	.byte	3,1,1,5,50,9
	.half	.L3400-.L3399
	.byte	3,2,1,5,45,9
	.half	.L3402-.L3400
	.byte	3,2,1,5,47,9
	.half	.L3403-.L3402
	.byte	3,1,1,5,27,9
	.half	.L3404-.L3403
	.byte	3,5,1,5,3,9
	.half	.L5479-.L3404
	.byte	1,5,29,7,9
	.half	.L5480-.L5479
	.byte	3,2,1,5,49,9
	.half	.L5481-.L5480
	.byte	3,1,1,5,22,9
	.half	.L391-.L5481
	.byte	3,3,1,5,10,9
	.half	.L5482-.L391
	.byte	3,227,0,1,7,9
	.half	.L5483-.L5482
	.byte	3,159,127,1,5,22,7,9
	.half	.L5484-.L5483
	.byte	3,4,1,5,7,9
	.half	.L5485-.L5484
	.byte	1,5,40,7,9
	.half	.L5486-.L5485
	.byte	3,2,1,5,24,9
	.half	.L3405-.L5486
	.byte	3,10,1,5,10,9
	.half	.L395-.L3405
	.byte	3,5,1,5,24,7,9
	.half	.L5487-.L395
	.byte	3,1,1,5,40,9
	.half	.L5488-.L5487
	.byte	1,5,39,7,9
	.half	.L396-.L5488
	.byte	3,3,1,5,37,9
	.half	.L5489-.L396
	.byte	1,5,24,9
	.half	.L5490-.L5489
	.byte	3,3,1,5,9,9
	.half	.L5491-.L5490
	.byte	1,5,14,7,9
	.half	.L5492-.L5491
	.byte	3,4,1,5,25,9
	.half	.L5493-.L5492
	.byte	1,5,45,9
	.half	.L5494-.L5493
	.byte	3,9,1,5,29,9
	.half	.L3406-.L5494
	.byte	3,127,1,5,28,9
	.half	.L5495-.L3406
	.byte	3,2,1,5,11,9
	.half	.L5496-.L5495
	.byte	1,5,46,7,9
	.half	.L5497-.L5496
	.byte	3,21,1,5,43,9
	.half	.L5498-.L5497
	.byte	3,1,1,5,11,9
	.half	.L5499-.L5498
	.byte	3,125,1,5,45,9
	.half	.L397-.L5499
	.byte	3,16,1,5,43,9
	.half	.L5500-.L397
	.byte	1,5,30,9
	.half	.L399-.L5500
	.byte	3,1,1,5,37,9
	.half	.L5501-.L399
	.byte	1,5,50,9
	.half	.L5502-.L5501
	.byte	3,2,1,5,12,9
	.half	.L5503-.L5502
	.byte	1,5,51,7,9
	.half	.L5504-.L5503
	.byte	3,2,1,5,14,9
	.half	.L5505-.L5504
	.byte	3,1,1,5,42,7,9
	.half	.L5506-.L5505
	.byte	3,3,1,5,40,9
	.half	.L5507-.L5506
	.byte	1,5,7,9
	.half	.L5508-.L5507
	.byte	3,8,1,5,22,9
	.half	.L392-.L5508
	.byte	3,8,1,5,7,9
	.half	.L5509-.L392
	.byte	1,5,40,7,9
	.half	.L5510-.L5509
	.byte	3,2,1,5,24,9
	.half	.L3407-.L5510
	.byte	3,10,1,5,10,9
	.half	.L404-.L3407
	.byte	3,6,1,5,25,7,9
	.half	.L5511-.L404
	.byte	3,1,1,5,41,9
	.half	.L5512-.L5511
	.byte	1,5,39,7,9
	.half	.L405-.L5512
	.byte	3,3,1,5,37,9
	.half	.L5513-.L405
	.byte	1,5,30,9
	.half	.L398-.L5513
	.byte	3,1,1,5,48,9
	.half	.L3401-.L398
	.byte	3,127,1,5,39,9
	.half	.L406-.L3401
	.byte	3,5,1,5,37,9
	.half	.L400-.L406
	.byte	1,5,22,9
	.half	.L390-.L400
	.byte	3,215,3,1,5,7,9
	.half	.L5514-.L390
	.byte	1,5,18,7,9
	.half	.L2335-.L5514
	.byte	3,212,124,1,5,28,9
	.half	.L5515-.L2335
	.byte	1,5,44,9
	.half	.L3408-.L5515
	.byte	3,1,1,5,42,9
	.half	.L3409-.L3408
	.byte	1,5,44,9
	.half	.L5516-.L3409
	.byte	3,1,1,9
	.half	.L5517-.L5516
	.byte	3,1,1,5,33,9
	.half	.L2345-.L5517
	.byte	3,4,1,5,51,9
	.half	.L2346-.L2345
	.byte	3,1,1,5,3,9
	.half	.L2351-.L2346
	.byte	3,5,1,5,20,7,9
	.half	.L2352-.L2351
	.byte	3,166,2,1,5,30,9
	.half	.L5518-.L2352
	.byte	1,5,21,9
	.half	.L3412-.L5518
	.byte	3,1,1,5,20,9
	.half	.L3413-.L3412
	.byte	3,3,1,5,5,9
	.half	.L5519-.L3413
	.byte	1,5,22,7,9
	.half	.L5520-.L5519
	.byte	3,5,1,5,7,9
	.half	.L5521-.L5520
	.byte	1,5,29,7,9
	.half	.L3414-.L5521
	.byte	3,7,1,5,43,9
	.half	.L3411-.L3414
	.byte	3,1,1,9
	.half	.L5522-.L3411
	.byte	3,1,1,5,9,9
	.half	.L3410-.L5522
	.byte	3,4,1,5,47,7,9
	.half	.L5523-.L3410
	.byte	3,2,1,5,45,9
	.half	.L5524-.L5523
	.byte	1,5,32,9
	.half	.L5525-.L5524
	.byte	3,1,1,5,56,9
	.half	.L3415-.L5525
	.byte	3,127,1,5,23,9
	.half	.L412-.L3415
	.byte	3,6,1,5,45,9
	.half	.L5526-.L412
	.byte	3,127,1,5,48,9
	.half	.L5527-.L5526
	.byte	3,3,1,5,47,9
	.half	.L5528-.L5527
	.byte	3,127,1,5,48,9
	.half	.L5529-.L5528
	.byte	3,3,1,5,47,9
	.half	.L5530-.L5529
	.byte	3,127,1,5,46,9
	.half	.L5531-.L5530
	.byte	3,2,1,5,44,9
	.half	.L5532-.L5531
	.byte	1,5,27,9
	.half	.L5533-.L5532
	.byte	3,1,1,5,47,9
	.half	.L3416-.L5533
	.byte	3,1,1,5,9,9
	.half	.L5534-.L3416
	.byte	3,118,1,5,21,9
	.half	.L411-.L5534
	.byte	3,15,1,5,42,9
	.half	.L5535-.L411
	.byte	1,5,38,9
	.half	.L413-.L5535
	.byte	3,3,1,5,36,9
	.half	.L5536-.L413
	.byte	1,5,47,9
	.half	.L5537-.L5536
	.byte	1,5,19,9
	.half	.L410-.L5537
	.byte	3,5,1,5,41,9
	.half	.L5538-.L410
	.byte	3,127,1,5,44,9
	.half	.L5539-.L5538
	.byte	3,3,1,5,43,9
	.half	.L5540-.L5539
	.byte	3,127,1,5,44,9
	.half	.L5541-.L5540
	.byte	3,3,1,5,43,9
	.half	.L5542-.L5541
	.byte	3,127,1,5,42,9
	.half	.L5543-.L5542
	.byte	3,2,1,5,40,9
	.half	.L5544-.L5543
	.byte	1,5,23,9
	.half	.L5545-.L5544
	.byte	3,1,1,5,43,9
	.half	.L5546-.L5545
	.byte	3,1,1,5,41,9
	.half	.L5547-.L5546
	.byte	1,5,53,9
	.half	.L2366-.L5547
	.byte	3,163,125,1,5,8,9
	.half	.L409-.L2366
	.byte	3,5,1,5,20,7,9
	.half	.L2353-.L409
	.byte	3,201,1,1,5,30,9
	.half	.L5548-.L2353
	.byte	1,5,20,9
	.half	.L3418-.L5548
	.byte	3,4,1,5,5,9
	.half	.L5549-.L3418
	.byte	1,5,22,7,9
	.half	.L5550-.L5549
	.byte	3,5,1,5,7,9
	.half	.L5551-.L5550
	.byte	1,5,29,7,9
	.half	.L5552-.L5551
	.byte	3,6,1,5,44,9
	.half	.L5553-.L5552
	.byte	3,1,1,9
	.half	.L5554-.L5553
	.byte	3,1,1,5,9,9
	.half	.L3417-.L5554
	.byte	3,3,1,5,47,7,9
	.half	.L5555-.L3417
	.byte	3,2,1,5,45,9
	.half	.L5556-.L5555
	.byte	1,5,32,9
	.half	.L5557-.L5556
	.byte	3,1,1,5,56,9
	.half	.L3419-.L5557
	.byte	3,127,1,5,23,9
	.half	.L420-.L3419
	.byte	3,6,1,5,45,9
	.half	.L5558-.L420
	.byte	3,127,1,5,48,9
	.half	.L5559-.L5558
	.byte	3,3,1,5,47,9
	.half	.L5560-.L5559
	.byte	3,127,1,5,48,9
	.half	.L5561-.L5560
	.byte	3,3,1,5,47,9
	.half	.L5562-.L5561
	.byte	3,127,1,5,46,9
	.half	.L5563-.L5562
	.byte	3,2,1,5,44,9
	.half	.L5564-.L5563
	.byte	1,5,27,9
	.half	.L5565-.L5564
	.byte	3,1,1,5,9,9
	.half	.L5566-.L5565
	.byte	3,119,1,5,42,9
	.half	.L419-.L5566
	.byte	3,16,1,5,38,9
	.half	.L421-.L419
	.byte	3,2,1,5,36,9
	.half	.L5567-.L421
	.byte	1,5,47,9
	.half	.L5568-.L5567
	.byte	1,5,54,9
	.half	.L418-.L5568
	.byte	3,4,1,5,41,9
	.half	.L5569-.L418
	.byte	1,5,44,9
	.half	.L5570-.L5569
	.byte	3,2,1,5,43,9
	.half	.L5571-.L5570
	.byte	3,127,1,5,44,9
	.half	.L5572-.L5571
	.byte	3,3,1,5,43,9
	.half	.L5573-.L5572
	.byte	3,127,1,5,42,9
	.half	.L5574-.L5573
	.byte	3,2,1,5,40,9
	.half	.L5575-.L5574
	.byte	1,5,23,9
	.half	.L5576-.L5575
	.byte	3,1,1,5,41,9
	.half	.L5577-.L5576
	.byte	3,1,1,5,53,9
	.half	.L2373-.L5577
	.byte	3,131,126,1,5,20,9
	.half	.L417-.L2373
	.byte	3,7,1,5,5,9
	.half	.L5578-.L417
	.byte	1,5,29,7,9
	.half	.L5579-.L5578
	.byte	3,2,1,5,20,9
	.half	.L3421-.L5579
	.byte	3,10,1,5,8,9
	.half	.L425-.L3421
	.byte	3,5,1,5,49,7,9
	.half	.L5580-.L425
	.byte	1,5,65,9
	.half	.L5581-.L5580
	.byte	1,5,37,7,9
	.half	.L426-.L5581
	.byte	3,2,1,5,35,9
	.half	.L5582-.L426
	.byte	1,5,22,9
	.half	.L5583-.L5582
	.byte	3,3,1,5,7,9
	.half	.L5584-.L5583
	.byte	1,5,42,7,9
	.half	.L5585-.L5584
	.byte	3,2,1,5,18,9
	.half	.L2379-.L5585
	.byte	3,234,111,1,5,41,9
	.half	.L2382-.L2379
	.byte	3,27,1,5,18,9
	.half	.L2380-.L2382
	.byte	3,101,1,5,41,9
	.half	.L2385-.L2380
	.byte	3,27,1,5,42,9
	.half	.L2384-.L2385
	.byte	3,254,15,1,5,14,9
	.half	.L2354-.L2384
	.byte	3,237,0,1,7,9
	.half	.L5586-.L2354
	.byte	3,1,1,7,9
	.half	.L5587-.L5586
	.byte	3,6,1,7,9
	.half	.L5588-.L5587
	.byte	3,1,1,7,9
	.half	.L5589-.L5588
	.byte	3,7,1,7,9
	.half	.L5590-.L5589
	.byte	3,1,1,7,9
	.half	.L5591-.L5590
	.byte	1,5,27,9
	.half	.L429-.L5591
	.byte	3,115,1,5,11,9
	.half	.L5592-.L429
	.byte	3,1,1,5,27,9
	.half	.L431-.L5592
	.byte	3,6,1,5,11,9
	.half	.L5593-.L431
	.byte	3,1,1,5,27,9
	.half	.L433-.L5593
	.byte	3,7,1,5,44,9
	.half	.L2355-.L433
	.byte	3,254,126,1,5,30,9
	.half	.L428-.L2355
	.byte	3,11,1,5,7,9
	.half	.L3420-.L428
	.byte	3,125,1,5,14,9
	.half	.L427-.L3420
	.byte	3,12,1,7,9
	.half	.L5594-.L427
	.byte	3,6,1,7,9
	.half	.L5595-.L5594
	.byte	3,9,1,7,9
	.half	.L5596-.L5595
	.byte	3,6,1,7,9
	.half	.L5597-.L5596
	.byte	3,12,1,7,9
	.half	.L5598-.L5597
	.byte	3,7,1,7,9
	.half	.L2356-.L5598
	.byte	1,5,27,9
	.half	.L440-.L2356
	.byte	3,90,1,5,11,9
	.half	.L2357-.L440
	.byte	3,1,1,5,47,9
	.half	.L441-.L2357
	.byte	3,5,1,5,45,9
	.half	.L5599-.L441
	.byte	1,5,41,9
	.half	.L5600-.L5599
	.byte	3,1,1,5,18,9
	.half	.L2386-.L5600
	.byte	3,205,111,1,5,41,9
	.half	.L2388-.L2386
	.byte	3,27,1,5,44,9
	.half	.L2387-.L2388
	.byte	3,153,16,1,5,27,9
	.half	.L2358-.L2387
	.byte	3,1,1,5,11,9
	.half	.L2359-.L2358
	.byte	3,1,1,5,27,9
	.half	.L442-.L2359
	.byte	3,5,1,5,11,9
	.half	.L2360-.L442
	.byte	3,1,1,5,47,9
	.half	.L443-.L2360
	.byte	3,5,1,5,45,9
	.half	.L5601-.L443
	.byte	1,5,41,9
	.half	.L5602-.L5601
	.byte	3,1,1,5,18,9
	.half	.L2389-.L5602
	.byte	3,190,111,1,5,41,9
	.half	.L2391-.L2389
	.byte	3,27,1,5,45,9
	.half	.L2390-.L2391
	.byte	3,169,16,1,5,42,9
	.half	.L5603-.L2390
	.byte	3,1,1,5,46,9
	.half	.L5604-.L5603
	.byte	3,1,1,5,44,9
	.half	.L5605-.L5604
	.byte	1,5,27,9
	.half	.L2361-.L5605
	.byte	3,1,1,5,11,9
	.half	.L2362-.L2361
	.byte	3,1,1,5,27,9
	.half	.L444-.L2362
	.byte	3,5,1,5,11,9
	.half	.L2363-.L444
	.byte	3,1,1,5,47,9
	.half	.L445-.L2363
	.byte	3,6,1,5,45,9
	.half	.L5606-.L445
	.byte	1,5,41,9
	.half	.L5607-.L5606
	.byte	3,1,1,5,18,9
	.half	.L2392-.L5607
	.byte	3,171,111,1,5,41,9
	.half	.L2394-.L2392
	.byte	3,27,1,5,42,9
	.half	.L2393-.L2394
	.byte	3,188,16,1,5,38,9
	.half	.L5608-.L2393
	.byte	3,2,1,5,36,9
	.half	.L5609-.L5608
	.byte	1,5,42,9
	.half	.L5610-.L5609
	.byte	3,2,1,5,40,9
	.half	.L5611-.L5610
	.byte	1,5,36,9
	.half	.L416-.L5611
	.byte	3,11,1,5,38,9
	.half	.L389-.L416
	.byte	3,172,2,1,5,36,9
	.half	.L5612-.L389
	.byte	1,5,18,9
	.half	.L385-.L5612
	.byte	3,54,1,5,3,9
	.half	.L5613-.L385
	.byte	1,5,8,7,9
	.half	.L5614-.L5613
	.byte	3,5,1,5,18,9
	.half	.L5615-.L5614
	.byte	1,5,5,9
	.half	.L5616-.L5615
	.byte	1,5,38,7,9
	.half	.L5617-.L5616
	.byte	3,2,1,5,36,9
	.half	.L5618-.L5617
	.byte	1,5,42,9
	.half	.L5619-.L5618
	.byte	3,1,1,5,40,9
	.half	.L5620-.L5619
	.byte	1,9
	.half	.L5621-.L5620
	.byte	3,1,1,5,35,9
	.half	.L5622-.L5621
	.byte	3,1,1,5,63,9
	.half	.L5623-.L5622
	.byte	3,125,1,5,28,9
	.half	.L453-.L5623
	.byte	3,11,1,5,18,9
	.half	.L452-.L453
	.byte	3,6,1,5,3,9
	.half	.L5624-.L452
	.byte	1,5,38,7,9
	.half	.L5625-.L5624
	.byte	3,5,1,5,36,9
	.half	.L5626-.L5625
	.byte	1,5,18,9
	.half	.L455-.L5626
	.byte	3,11,1,5,3,9
	.half	.L5627-.L455
	.byte	1,5,37,7,9
	.half	.L2396-.L5627
	.byte	3,220,119,1,5,50,9
	.half	.L3423-.L2396
	.byte	3,1,1,5,38,9
	.half	.L3425-.L3423
	.byte	3,2,1,5,18,9
	.half	.L3426-.L3425
	.byte	3,3,1,5,28,9
	.half	.L5628-.L3426
	.byte	1,5,45,9
	.half	.L3427-.L5628
	.byte	3,1,1,5,47,9
	.half	.L3428-.L3427
	.byte	3,1,1,5,27,9
	.half	.L3430-.L3428
	.byte	3,2,1,5,3,9
	.half	.L5629-.L3430
	.byte	1,5,29,7,9
	.half	.L5630-.L5629
	.byte	3,2,1,5,49,9
	.half	.L3429-.L5630
	.byte	3,1,1,5,22,9
	.half	.L457-.L3429
	.byte	3,3,1,5,10,9
	.half	.L5631-.L457
	.byte	3,31,1,7,9
	.half	.L5632-.L5631
	.byte	3,100,1,5,55,7,9
	.half	.L5633-.L5632
	.byte	3,2,1,5,40,9
	.half	.L5634-.L5633
	.byte	1,5,23,9
	.half	.L5635-.L5634
	.byte	3,2,1,5,7,9
	.half	.L5636-.L5635
	.byte	1,5,39,7,9
	.half	.L5637-.L5636
	.byte	3,2,1,5,40,9
	.half	.L3424-.L5637
	.byte	3,1,1,5,45,9
	.half	.L3432-.L3424
	.byte	3,2,1,5,9,9
	.half	.L5638-.L3432
	.byte	3,7,1,5,31,9
	.half	.L461-.L5638
	.byte	3,3,1,5,40,9
	.half	.L5639-.L461
	.byte	3,2,1,5,19,9
	.half	.L3433-.L5639
	.byte	3,2,1,5,38,9
	.half	.L3435-.L3433
	.byte	3,1,1,5,59,9
	.half	.L5640-.L3435
	.byte	1,5,7,9
	.half	.L3436-.L5640
	.byte	3,2,1,5,55,9
	.half	.L458-.L3436
	.byte	3,4,1,5,40,9
	.half	.L5641-.L458
	.byte	1,5,38,9
	.half	.L5642-.L5641
	.byte	3,1,1,5,36,9
	.half	.L5643-.L5642
	.byte	3,2,1,5,40,9
	.half	.L5644-.L5643
	.byte	3,2,1,5,18,9
	.half	.L2405-.L5644
	.byte	3,254,115,1,5,41,9
	.half	.L2407-.L2405
	.byte	3,27,1,5,37,9
	.half	.L2406-.L2407
	.byte	3,230,11,1,5,19,9
	.half	.L5645-.L2406
	.byte	3,2,1,5,38,9
	.half	.L5646-.L5645
	.byte	3,1,1,5,30,9
	.half	.L460-.L5646
	.byte	3,8,1,5,28,9
	.half	.L5647-.L460
	.byte	1,5,34,9
	.half	.L5648-.L5647
	.byte	3,1,1,5,60,9
	.half	.L5649-.L5648
	.byte	3,3,1,5,3,9
	.half	.L3434-.L5649
	.byte	3,2,1,5,38,7,9
	.half	.L5650-.L3434
	.byte	3,2,1,5,36,9
	.half	.L5651-.L5650
	.byte	1,5,30,9
	.half	.L5652-.L5651
	.byte	3,1,1,5,26,9
	.half	.L5653-.L5652
	.byte	3,2,1,5,18,9
	.half	.L456-.L5653
	.byte	3,224,7,1,5,3,9
	.half	.L5654-.L456
	.byte	1,5,18,7,9
	.half	.L2409-.L5654
	.byte	3,191,120,1,5,28,9
	.half	.L5655-.L2409
	.byte	1,5,23,9
	.half	.L3437-.L5655
	.byte	3,2,1,5,10,9
	.half	.L5656-.L3437
	.byte	3,49,1,9
	.half	.L5657-.L5656
	.byte	3,83,1,9
	.half	.L5658-.L5657
	.byte	3,46,1,9
	.half	.L5659-.L5658
	.byte	3,94,1,9
	.half	.L5660-.L5659
	.byte	3,24,1,9
	.half	.L5661-.L5660
	.byte	3,116,1,5,42,9
	.half	.L466-.L5661
	.byte	3,106,1,5,40,9
	.half	.L5662-.L466
	.byte	1,5,34,9
	.half	.L5663-.L5662
	.byte	3,1,1,5,37,9
	.half	.L5664-.L5663
	.byte	3,1,1,5,7,9
	.half	.L5665-.L5664
	.byte	3,3,1,5,42,9
	.half	.L468-.L5665
	.byte	3,7,1,5,40,9
	.half	.L5666-.L468
	.byte	1,5,34,9
	.half	.L5667-.L5666
	.byte	3,1,1,5,37,9
	.half	.L5668-.L5667
	.byte	3,1,1,5,35,9
	.half	.L472-.L5668
	.byte	1,5,34,9
	.half	.L5669-.L472
	.byte	3,1,1,5,32,9
	.half	.L5670-.L5669
	.byte	1,5,7,9
	.half	.L5671-.L5670
	.byte	3,2,1,5,42,9
	.half	.L470-.L5671
	.byte	3,7,1,5,40,9
	.half	.L5672-.L470
	.byte	1,5,34,9
	.half	.L5673-.L5672
	.byte	3,1,1,5,37,9
	.half	.L5674-.L5673
	.byte	3,1,1,5,7,9
	.half	.L5675-.L5674
	.byte	3,3,1,5,42,9
	.half	.L469-.L5675
	.byte	3,7,1,5,40,9
	.half	.L5676-.L469
	.byte	1,5,34,9
	.half	.L5677-.L5676
	.byte	3,1,1,5,37,9
	.half	.L5678-.L5677
	.byte	3,1,1,5,35,9
	.half	.L474-.L5678
	.byte	1,5,34,9
	.half	.L5679-.L474
	.byte	3,1,1,5,32,9
	.half	.L5680-.L5679
	.byte	1,5,7,9
	.half	.L5681-.L5680
	.byte	3,2,1,5,34,9
	.half	.L465-.L5681
	.byte	3,6,1,5,32,9
	.half	.L5682-.L465
	.byte	1,5,38,9
	.half	.L5683-.L5682
	.byte	3,3,1,5,53,9
	.half	.L5684-.L5683
	.byte	1,5,42,9
	.half	.L5685-.L5684
	.byte	3,2,1,5,34,9
	.half	.L471-.L5685
	.byte	3,16,1,5,32,9
	.half	.L5686-.L471
	.byte	1,5,19,9
	.half	.L464-.L5686
	.byte	3,252,6,1,5,3,9
	.half	.L5687-.L464
	.byte	1,5,18,7,9
	.half	.L2413-.L5687
	.byte	3,163,121,1,5,28,9
	.half	.L5688-.L2413
	.byte	1,5,22,9
	.half	.L3438-.L5688
	.byte	3,2,1,5,10,9
	.half	.L5689-.L3438
	.byte	3,3,1,7,9
	.half	.L5690-.L5689
	.byte	3,1,1,7,9
	.half	.L5691-.L5690
	.byte	3,6,1,7,9
	.half	.L5692-.L5691
	.byte	3,60,1,7,9
	.half	.L5693-.L5692
	.byte	3,88,1,7,9
	.half	.L5694-.L5693
	.byte	3,41,1,7,9
	.half	.L5695-.L5694
	.byte	3,107,1,7,9
	.half	.L5696-.L5695
	.byte	3,22,1,5,1,7,9
	.half	.L476-.L5696
	.byte	3,152,6,1,5,18,7,9
	.half	.L477-.L476
	.byte	3,206,118,1,5,28,9
	.half	.L5697-.L477
	.byte	1,5,26,9
	.half	.L3440-.L5697
	.byte	3,1,1,5,36,9
	.half	.L3441-.L3440
	.byte	3,1,1,5,34,9
	.half	.L5698-.L3441
	.byte	1,5,30,9
	.half	.L5699-.L5698
	.byte	3,1,1,5,28,9
	.half	.L5700-.L5699
	.byte	1,5,37,9
	.half	.L5701-.L5700
	.byte	3,5,1,5,3,9
	.half	.L3442-.L5701
	.byte	3,2,1,5,38,7,9
	.half	.L5702-.L3442
	.byte	3,2,1,5,36,9
	.half	.L5703-.L5702
	.byte	1,5,30,9
	.half	.L5704-.L5703
	.byte	3,1,1,5,26,9
	.half	.L5705-.L5704
	.byte	3,1,1,5,1,7,9
	.half	.L486-.L5705
	.byte	3,164,9,1,5,23,7,9
	.half	.L479-.L486
	.byte	3,174,121,1,5,7,9
	.half	.L5706-.L479
	.byte	1,5,37,7,9
	.half	.L5707-.L5706
	.byte	3,2,1,5,50,9
	.half	.L5708-.L5707
	.byte	1,5,61,9
	.half	.L5709-.L5708
	.byte	1,5,23,9
	.half	.L481-.L5709
	.byte	3,18,1,5,7,9
	.half	.L5710-.L481
	.byte	1,5,37,7,9
	.half	.L5711-.L5710
	.byte	3,2,1,5,50,9
	.half	.L5712-.L5711
	.byte	1,5,60,9
	.half	.L5713-.L5712
	.byte	1,5,23,9
	.half	.L483-.L5713
	.byte	3,18,1,5,7,9
	.half	.L5714-.L483
	.byte	1,5,37,7,9
	.half	.L5715-.L5714
	.byte	3,2,1,5,50,9
	.half	.L5716-.L5715
	.byte	1,5,61,9
	.half	.L5717-.L5716
	.byte	1,5,31,9
	.half	.L488-.L5717
	.byte	3,6,1,9
	.half	.L489-.L488
	.byte	3,3,1,5,7,9
	.half	.L3443-.L489
	.byte	3,2,1,5,31,9
	.half	.L480-.L3443
	.byte	3,8,1,5,33,9
	.half	.L5718-.L480
	.byte	3,2,1,5,34,9
	.half	.L494-.L5718
	.byte	3,2,1,5,1,7,9
	.half	.L1436-.L494
	.byte	3,145,6,0,1,1
.L5464:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lInitGC')
	.sect	'.debug_ranges'
.L1435:
	.word	-1,.L1126,0,.L1436-.L1126,0,0
.L2350:
	.word	-1,.L1126,.L2345-.L1126,.L2346-.L1126,.L2351-.L1126,.L2352-.L1126,.L409-.L1126,.L2353-.L1126,.L2354-.L1126
	.word	.L2355-.L1126,.L427-.L1126,.L2356-.L1126,.L440-.L1126,.L2357-.L1126,.L2358-.L1126,.L2359-.L1126,.L442-.L1126
	.word	.L2360-.L1126,.L2361-.L1126,.L2362-.L1126,.L444-.L1126,.L2363-.L1126,.L416-.L1126,.L389-.L1126,0,0
.L2415:
	.word	-1,.L1126,.L2413-.L1126,.L476-.L1126,.L477-.L1126,.L486-.L1126,.L479-.L1126,.L2318-.L1126,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lLocalRead')
	.sect	'.debug_info'
.L1437:
	.word	1502
	.half	3
	.word	.L1438
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1440,.L1439
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lLocalRead',0,1,170,67,13,1,1
	.word	.L1142,.L2423,.L1141
	.byte	4
	.word	.L1142,.L2423
	.byte	5
	.byte	'PendReqPtr',0,1,172,67,25
	.word	.L2061,.L2424
	.byte	5
	.byte	'StateDataPtr',0,1,173,67,25
	.word	.L1579,.L2425
	.byte	5
	.byte	'DataBufferPtr',0,1,174,67,25
	.word	.L1644,.L2426
	.byte	5
	.byte	'ActualAddr',0,1,175,67,25
	.word	.L1589,.L2427
	.byte	5
	.byte	'ReadLength',0,1,177,67,25
	.word	.L1781,.L2428
	.byte	5
	.byte	'BlockNumber',0,1,178,67,25
	.word	.L1781,.L2429
	.byte	5
	.byte	'BlockOffset',0,1,179,67,25
	.word	.L1781,.L2430
	.byte	5
	.byte	'Length',0,1,180,67,25
	.word	.L1781,.L2431
	.byte	5
	.byte	'UserBlockIndex',0,1,181,67,25
	.word	.L1781,.L2432
	.byte	5
	.byte	'DataByteCount',0,1,182,67,25
	.word	.L1781,.L2433
	.byte	5
	.byte	'ReturnValue',0,1,183,67,25
	.word	.L1592,.L2434
	.byte	5
	.byte	'LoopIndex',0,1,184,67,25
	.word	.L1592,.L2435
	.byte	6
	.word	.L2436,.L2437,.L2438
	.byte	7
	.word	.L2439,.L2440
	.byte	7
	.word	.L2441,.L2442
	.byte	8
	.word	.L2443,.L2444
	.byte	5
	.byte	'PendReqPtr',0,1,224,69,31
	.word	.L2455,.L2456
	.byte	5
	.byte	'StateDataPtr',0,1,225,69,25
	.word	.L1579,.L2457
	.byte	5
	.byte	'StartAddr',0,1,226,69,25
	.word	.L1589,.L2458
	.byte	5
	.byte	'BlockOffset',0,1,227,69,25
	.word	.L1781,.L2459
	.byte	6
	.word	.L1912,.L693,.L2490
	.byte	7
	.word	.L1915,.L2491
	.byte	9
	.word	.L1917,.L693,.L2490
	.byte	0,6
	.word	.L1684,.L696,.L695
	.byte	7
	.word	.L1687,.L2492
	.byte	10
	.word	.L1689,.L696,.L695
	.byte	6
	.word	.L1690,.L696,.L2493
	.byte	7
	.word	.L1691,.L2494
	.byte	9
	.word	.L1693,.L696,.L2493
	.byte	0,0,0,0,0,6
	.word	.L2460,.L2461,.L2462
	.byte	7
	.word	.L2463,.L2464
	.byte	8
	.word	.L2465,.L2466
	.byte	5
	.byte	'StateDataPtr',0,1,176,111,26
	.word	.L1579,.L2471
	.byte	5
	.byte	'BlockPtr',0,1,177,111,32
	.word	.L1884,.L2472
	.byte	5
	.byte	'RetVal',0,1,178,111,26
	.word	.L1592,.L2473
	.byte	0,0,6
	.word	.L1952,.L2474,.L2475
	.byte	7
	.word	.L1955,.L2476
	.byte	10
	.word	.L1957,.L2474,.L2475
	.byte	5
	.byte	'RetVal',0,1,131,32,11
	.word	.L1592,.L2477
	.byte	0,0,6
	.word	.L2460,.L2467,.L2468
	.byte	7
	.word	.L2463,.L2464
	.byte	0,6
	.word	.L2478,.L2468,.L679
	.byte	7
	.word	.L2479,.L2480
	.byte	10
	.word	.L2481,.L2468,.L679
	.byte	5
	.byte	'StateDataPtr',0,1,238,116,23
	.word	.L1579,.L2482
	.byte	5
	.byte	'DataBufPtr',0,1,239,116,22
	.word	.L1644,.L2483
	.byte	5
	.byte	'Count',0,1,240,116,22
	.word	.L1781,.L2484
	.byte	5
	.byte	'DflashBlkSize',0,1,241,116,22
	.word	.L1781,.L2485
	.byte	5
	.byte	'BlkOffset',0,1,242,116,22
	.word	.L1781,.L2486
	.byte	5
	.byte	'BlkLength',0,1,243,116,22
	.word	.L1781,.L2487
	.byte	5
	.byte	'TmpCount',0,1,244,116,22
	.word	.L1781,.L2488
	.byte	5
	.byte	'StuffLen',0,1,245,116,22
	.word	.L1781,.L2489
	.byte	0,0,6
	.word	.L2436,.L679,.L691
	.byte	7
	.word	.L2439,.L2440
	.byte	7
	.word	.L2441,.L2442
	.byte	0,6
	.word	.L2460,.L2469,.L674
	.byte	7
	.word	.L2463,.L2464
	.byte	0,6
	.word	.L2436,.L2445,.L2446
	.byte	7
	.word	.L2439,.L2440
	.byte	7
	.word	.L2441,.L2442
	.byte	0,6
	.word	.L2436,.L2447,.L2448
	.byte	7
	.word	.L2439,.L2440
	.byte	7
	.word	.L2441,.L2442
	.byte	0,6
	.word	.L2436,.L2449,.L2450
	.byte	7
	.word	.L2439,.L2440
	.byte	7
	.word	.L2441,.L2442
	.byte	0,6
	.word	.L2436,.L701,.L2451
	.byte	7
	.word	.L2439,.L2440
	.byte	7
	.word	.L2441,.L2442
	.byte	0,6
	.word	.L2460,.L699,.L2470
	.byte	7
	.word	.L2463,.L2464
	.byte	0,6
	.word	.L2436,.L2452,.L2453
	.byte	7
	.word	.L2439,.L2440
	.byte	7
	.word	.L2441,.L2442
	.byte	0,6
	.word	.L1684,.L714,.L713
	.byte	7
	.word	.L1687,.L2492
	.byte	10
	.word	.L1689,.L714,.L713
	.byte	6
	.word	.L1690,.L714,.L2495
	.byte	7
	.word	.L1691,.L2494
	.byte	9
	.word	.L1693,.L714,.L2495
	.byte	0,0,0,6
	.word	.L2436,.L712,.L2454
	.byte	7
	.word	.L2439,.L2440
	.byte	7
	.word	.L2441,.L2442
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lLocalRead')
	.sect	'.debug_abbrev'
.L1438:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1,49,16
	.byte	17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,85,6,0,0,9,11,0,49,16,17,1,18,1,0,0,10,11,1,49,16,17,1
	.byte	18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lLocalRead')
	.sect	'.debug_line'
.L1439:
	.word	.L5720-.L5719
.L5719:
	.half	3
	.word	.L5722-.L5721
.L5721:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L5722:
	.byte	5,18,7,0,5,2
	.word	.L1142
	.byte	3,186,195,0,1,5,28,9
	.half	.L5723-.L1142
	.byte	1,5,29,9
	.half	.L3653-.L5723
	.byte	3,1,1,5,27,9
	.half	.L3654-.L3653
	.byte	3,1,1,9
	.half	.L2437-.L3654
	.byte	3,1,1,5,29,9
	.half	.L2438-.L2437
	.byte	3,1,1,5,17,9
	.half	.L3655-.L2438
	.byte	3,1,1,5,15,9
	.half	.L2461-.L3655
	.byte	3,2,1,5,42,9
	.half	.L2462-.L2461
	.byte	3,1,1,5,18,9
	.half	.L3657-.L2462
	.byte	1,5,12,9
	.half	.L2474-.L3657
	.byte	3,195,92,1,5,3,9
	.half	.L2475-.L2474
	.byte	3,205,35,1,5,18,7,9
	.half	.L2467-.L2475
	.byte	3,225,43,1,5,28,9
	.half	.L5724-.L2467
	.byte	1,5,41,9
	.half	.L3659-.L5724
	.byte	3,1,1,5,25,9
	.half	.L3661-.L3659
	.byte	3,41,1,5,5,9
	.half	.L5725-.L3661
	.byte	1,5,36,7,9
	.half	.L5726-.L5725
	.byte	3,2,1,5,34,9
	.half	.L5727-.L5726
	.byte	1,5,60,9
	.half	.L5728-.L5727
	.byte	1,5,30,9
	.half	.L675-.L5728
	.byte	3,7,1,5,10,9
	.half	.L5729-.L675
	.byte	1,5,36,7,9
	.half	.L5730-.L5729
	.byte	3,2,1,5,34,9
	.half	.L5731-.L5730
	.byte	1,5,14,9
	.half	.L676-.L5731
	.byte	3,1,1,5,5,9
	.half	.L677-.L676
	.byte	3,242,83,1,5,18,7,9
	.half	.L2468-.L677
	.byte	3,155,49,1,5,28,9
	.half	.L5732-.L2468
	.byte	1,5,55,9
	.half	.L3663-.L5732
	.byte	3,10,1,5,71,9
	.half	.L3660-.L3663
	.byte	1,5,21,9
	.half	.L5733-.L3660
	.byte	1,5,43,9
	.half	.L3665-.L5733
	.byte	3,2,1,9
	.half	.L3667-.L3665
	.byte	3,1,1,5,44,9
	.half	.L3658-.L3667
	.byte	3,2,1,5,3,9
	.half	.L3670-.L3658
	.byte	3,2,1,5,5,7,9
	.half	.L5734-.L3670
	.byte	3,6,1,5,17,7,9
	.half	.L5735-.L5734
	.byte	3,2,1,5,29,9
	.half	.L3672-.L5735
	.byte	3,2,1,5,47,9
	.half	.L3666-.L3672
	.byte	3,126,1,5,19,9
	.half	.L683-.L3666
	.byte	3,2,1,5,27,9
	.half	.L3674-.L683
	.byte	1,5,54,9
	.half	.L3675-.L3674
	.byte	3,126,1,5,47,9
	.half	.L682-.L3675
	.byte	1,5,7,7,9
	.half	.L5736-.L682
	.byte	3,25,1,5,25,9
	.half	.L681-.L5736
	.byte	3,10,1,5,10,9
	.half	.L5737-.L681
	.byte	1,5,32,7,9
	.half	.L5738-.L5737
	.byte	3,2,1,5,28,9
	.half	.L3677-.L5738
	.byte	3,1,1,5,43,9
	.half	.L3679-.L3677
	.byte	3,1,1,5,50,9
	.half	.L5739-.L3679
	.byte	3,1,1,5,64,9
	.half	.L3664-.L5739
	.byte	1,5,17,9
	.half	.L3671-.L3664
	.byte	3,5,1,5,29,9
	.half	.L3678-.L3671
	.byte	3,2,1,5,46,9
	.half	.L3668-.L3678
	.byte	3,126,1,5,19,9
	.half	.L687-.L3668
	.byte	3,2,1,5,27,9
	.half	.L3681-.L687
	.byte	1,5,53,9
	.half	.L3682-.L3681
	.byte	3,126,1,5,46,9
	.half	.L686-.L3682
	.byte	1,5,5,7,9
	.half	.L5740-.L686
	.byte	3,118,1,5,40,9
	.half	.L680-.L5740
	.byte	3,35,1,5,38,9
	.half	.L5741-.L680
	.byte	1,5,34,9
	.half	.L5742-.L5741
	.byte	3,3,1,5,32,9
	.half	.L5743-.L5742
	.byte	1,5,10,9
	.half	.L5744-.L5743
	.byte	3,8,1,5,20,9
	.half	.L5745-.L5744
	.byte	1,5,5,9
	.half	.L5746-.L5745
	.byte	1,5,18,7,9
	.half	.L5747-.L5746
	.byte	3,5,1,5,45,9
	.half	.L5748-.L5747
	.byte	1,5,18,9
	.half	.L679-.L5748
	.byte	3,255,79,1,5,28,9
	.half	.L5749-.L679
	.byte	1,5,27,9
	.half	.L3684-.L5749
	.byte	3,2,1,5,3,9
	.half	.L5750-.L3684
	.byte	3,3,1,5,40,7,9
	.half	.L5751-.L5750
	.byte	3,15,1,5,38,9
	.half	.L5752-.L5751
	.byte	1,5,10,9
	.half	.L5753-.L5752
	.byte	3,4,1,5,20,9
	.half	.L3685-.L5753
	.byte	1,5,5,9
	.half	.L5754-.L3685
	.byte	1,5,18,7,9
	.half	.L5755-.L5754
	.byte	3,5,1,5,47,9
	.half	.L5756-.L5755
	.byte	1,5,5,9
	.half	.L5757-.L5756
	.byte	3,123,1,5,46,9
	.half	.L690-.L5757
	.byte	3,22,1,5,62,9
	.half	.L5758-.L690
	.byte	1,5,19,9
	.half	.L5759-.L5758
	.byte	3,1,1,5,18,9
	.half	.L693-.L5759
	.byte	3,230,90,1,5,7,9
	.half	.L2490-.L693
	.byte	3,163,37,1,5,56,7,9
	.half	.L5760-.L2490
	.byte	3,2,1,5,18,9
	.half	.L696-.L5760
	.byte	3,247,90,1,5,41,9
	.half	.L2493-.L696
	.byte	3,27,1,5,38,9
	.half	.L695-.L2493
	.byte	3,238,36,1,5,56,9
	.half	.L5761-.L695
	.byte	1,5,7,7,9
	.half	.L694-.L5761
	.byte	3,6,1,5,19,7,9
	.half	.L5762-.L694
	.byte	3,2,1,5,21,9
	.half	.L5763-.L5762
	.byte	3,1,1,5,38,9
	.half	.L697-.L5763
	.byte	3,2,1,7,9
	.half	.L5764-.L697
	.byte	3,3,1,5,20,9
	.half	.L691-.L5764
	.byte	3,189,125,1,5,5,9
	.half	.L5765-.L691
	.byte	1,5,19,7,9
	.half	.L2469-.L5765
	.byte	3,3,1,5,36,9
	.half	.L674-.L2469
	.byte	3,6,1,5,19,9
	.half	.L5766-.L674
	.byte	3,4,1,5,3,9
	.half	.L5767-.L5766
	.byte	1,5,5,7,9
	.half	.L2445-.L5767
	.byte	3,2,1,5,36,7,9
	.half	.L2446-.L2445
	.byte	3,2,1,5,21,9
	.half	.L702-.L2446
	.byte	3,3,1,5,58,9
	.half	.L2447-.L702
	.byte	3,1,1,5,43,9
	.half	.L2448-.L2447
	.byte	1,5,45,9
	.half	.L5768-.L2448
	.byte	3,127,1,5,20,9
	.half	.L2449-.L5768
	.byte	3,2,1,5,21,9
	.half	.L2450-.L2449
	.byte	3,2,1,5,41,9
	.half	.L5769-.L2450
	.byte	1,5,36,9
	.half	.L701-.L5769
	.byte	3,121,1,5,19,7,9
	.half	.L5770-.L701
	.byte	3,9,1,5,21,9
	.half	.L2451-.L5770
	.byte	3,1,1,5,56,9
	.half	.L5771-.L2451
	.byte	3,2,1,5,21,9
	.half	.L704-.L5771
	.byte	3,2,1,5,55,9
	.half	.L3686-.L704
	.byte	1,5,21,9
	.half	.L706-.L3686
	.byte	3,3,1,5,41,9
	.half	.L5772-.L706
	.byte	1,5,58,9
	.half	.L5773-.L5772
	.byte	3,1,1,5,43,9
	.half	.L5774-.L5773
	.byte	1,5,53,9
	.half	.L5775-.L5774
	.byte	3,127,1,5,66,9
	.half	.L5776-.L5775
	.byte	3,125,1,5,55,9
	.half	.L705-.L5776
	.byte	1,5,19,7,9
	.half	.L5777-.L705
	.byte	3,10,1,5,40,9
	.half	.L5778-.L5777
	.byte	1,5,21,9
	.half	.L5779-.L5778
	.byte	3,1,1,5,39,9
	.half	.L703-.L5779
	.byte	3,115,1,5,56,9
	.half	.L5780-.L703
	.byte	1,5,8,7,9
	.half	.L699-.L5780
	.byte	3,18,1,5,21,7,9
	.half	.L2470-.L699
	.byte	3,1,1,5,40,9
	.half	.L5781-.L2470
	.byte	1,5,20,7,9
	.half	.L707-.L5781
	.byte	3,1,1,5,39,9
	.half	.L5782-.L707
	.byte	1,5,30,7,9
	.half	.L708-.L5782
	.byte	3,8,1,5,29,9
	.half	.L2452-.L708
	.byte	3,5,1,5,24,9
	.half	.L2453-.L2452
	.byte	3,1,1,5,51,9
	.half	.L3687-.L2453
	.byte	3,2,1,5,16,9
	.half	.L3688-.L3687
	.byte	1,5,33,9
	.half	.L3691-.L3688
	.byte	3,2,1,5,35,9
	.half	.L3690-.L3691
	.byte	3,2,1,5,40,9
	.half	.L5783-.L3690
	.byte	3,4,1,5,28,9
	.half	.L5784-.L5783
	.byte	3,1,1,5,5,9
	.half	.L3692-.L5784
	.byte	3,4,1,5,32,7,9
	.half	.L5785-.L3692
	.byte	3,5,1,5,40,9
	.half	.L710-.L5785
	.byte	3,4,1,5,22,9
	.half	.L5786-.L710
	.byte	3,4,1,5,7,9
	.half	.L5787-.L5786
	.byte	1,5,20,7,9
	.half	.L5788-.L5787
	.byte	3,4,1,5,57,9
	.half	.L5789-.L5788
	.byte	3,3,1,5,18,9
	.half	.L714-.L5789
	.byte	3,202,92,1,5,41,9
	.half	.L2495-.L714
	.byte	3,27,1,5,38,9
	.half	.L713-.L2495
	.byte	3,155,35,1,5,57,9
	.half	.L5790-.L713
	.byte	1,5,42,7,9
	.half	.L5791-.L5790
	.byte	3,5,1,5,31,9
	.half	.L712-.L5791
	.byte	3,4,1,5,47,9
	.half	.L2454-.L712
	.byte	3,2,1,5,33,9
	.half	.L5792-.L2454
	.byte	1,5,1,9
	.half	.L709-.L5792
	.byte	3,4,1,7,9
	.half	.L1441-.L709
	.byte	0,1,1
.L5720:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lLocalRead')
	.sect	'.debug_ranges'
.L1440:
	.word	-1,.L1142,0,.L1441-.L1142,0,0
.L2444:
	.word	-1,.L1142,.L2437-.L1142,.L2438-.L1142,.L679-.L1142,.L691-.L1142,.L2445-.L1142,.L2446-.L1142,.L2447-.L1142
	.word	.L2448-.L1142,.L2449-.L1142,.L2450-.L1142,.L701-.L1142,.L2451-.L1142,.L2452-.L1142,.L2453-.L1142,.L712-.L1142
	.word	.L2454-.L1142,0,0
.L2466:
	.word	-1,.L1142,.L2461-.L1142,.L2462-.L1142,.L2467-.L1142,.L2468-.L1142,.L2469-.L1142,.L674-.L1142,.L699-.L1142
	.word	.L2470-.L1142,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lCheckReadLength')
	.sect	'.debug_info'
.L1442:
	.word	635
	.half	3
	.word	.L1443
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1445,.L1444
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lCheckReadLength',0,1,248,68,15
	.word	.L1781
	.byte	1,1
	.word	.L1144,.L2496,.L1143
	.byte	4
	.byte	'ActualAddr',0,1,248,68,65
	.word	.L2497,.L2498
	.byte	4
	.byte	'Length',0,1,249,68,49
	.word	.L2499,.L2500
	.byte	5
	.word	.L1144,.L2496
	.byte	6
	.byte	'StateDataPtr',0,1,251,68,25
	.word	.L1579,.L2501
	.byte	6
	.byte	'PendReqPtr',0,1,252,68,25
	.word	.L2061,.L2502
	.byte	6
	.byte	'ReadLengthPages',0,1,253,68,25
	.word	.L1592,.L2503
	.byte	6
	.byte	'ReadLimit',0,1,254,68,25
	.word	.L1781,.L2504
	.byte	6
	.byte	'ReadLength',0,1,255,68,25
	.word	.L1781,.L2505
	.byte	6
	.byte	'BlockOffset',0,1,128,69,25
	.word	.L1781,.L2506
	.byte	6
	.byte	'SizeInCurrentWL',0,1,129,69,25
	.word	.L1781,.L2507
	.byte	6
	.byte	'TempAddress',0,1,130,69,25
	.word	.L1589,.L2508
	.byte	6
	.byte	'NewLength',0,1,131,69,25
	.word	.L1781,.L2509
	.byte	7
	.word	.L1912,.L2510,.L2511
	.byte	8
	.word	.L1915,.L2512
	.byte	9
	.word	.L1917,.L2510,.L2511
	.byte	0,7
	.word	.L1912,.L2513,.L2514
	.byte	8
	.word	.L1915,.L2512
	.byte	9
	.word	.L1917,.L2513,.L2514
	.byte	0,7
	.word	.L1684,.L2515,.L2516
	.byte	8
	.word	.L1687,.L2517
	.byte	10
	.word	.L1689,.L2515,.L2516
	.byte	7
	.word	.L1690,.L2515,.L2518
	.byte	8
	.word	.L1691,.L2519
	.byte	9
	.word	.L1693,.L2515,.L2518
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lCheckReadLength')
	.sect	'.debug_abbrev'
.L1443:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,10,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lCheckReadLength')
	.sect	'.debug_line'
.L1444:
	.word	.L5794-.L5793
.L5793:
	.half	3
	.word	.L5796-.L5795
.L5795:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L5796:
	.byte	5,15,7,0,5,2
	.word	.L1144
	.byte	3,247,196,0,1,5,18,9
	.half	.L3694-.L1144
	.byte	3,13,1,5,28,9
	.half	.L5797-.L3694
	.byte	1,5,27,9
	.half	.L3696-.L5797
	.byte	3,2,1,5,18,9
	.half	.L2510-.L3696
	.byte	3,243,91,1,5,3,9
	.half	.L2511-.L2510
	.byte	3,145,36,1,5,15,7,9
	.half	.L5798-.L2511
	.byte	3,2,1,5,43,9
	.half	.L3697-.L5798
	.byte	1,5,23,9
	.half	.L715-.L3697
	.byte	3,4,1,5,43,9
	.half	.L5799-.L715
	.byte	3,1,1,5,56,9
	.half	.L3698-.L5799
	.byte	3,127,1,5,34,9
	.half	.L5800-.L3698
	.byte	3,2,1,5,55,9
	.half	.L3699-.L5800
	.byte	1,5,27,9
	.half	.L716-.L3699
	.byte	3,3,1,5,3,9
	.half	.L5801-.L716
	.byte	1,5,18,7,9
	.half	.L2513-.L5801
	.byte	3,228,91,1,5,5,9
	.half	.L2514-.L2513
	.byte	3,159,36,1,5,18,7,9
	.half	.L2515-.L2514
	.byte	3,253,91,1,5,41,9
	.half	.L2518-.L2515
	.byte	3,27,1,5,50,9
	.half	.L2516-.L2518
	.byte	3,236,35,1,5,7,9
	.half	.L3693-.L2516
	.byte	1,5,19,7,9
	.half	.L5802-.L3693
	.byte	3,2,1,5,25,9
	.half	.L717-.L5802
	.byte	3,5,1,5,3,9
	.half	.L3701-.L717
	.byte	3,2,1,5,24,7,9
	.half	.L5803-.L3701
	.byte	3,3,1,5,38,9
	.half	.L3703-.L5803
	.byte	3,1,1,5,27,9
	.half	.L5804-.L3703
	.byte	3,126,1,5,16,9
	.half	.L720-.L5804
	.byte	3,6,1,5,38,9
	.half	.L5805-.L720
	.byte	3,1,1,5,36,9
	.half	.L721-.L5805
	.byte	1,9
	.half	.L5806-.L721
	.byte	3,4,1,5,34,9
	.half	.L5807-.L5806
	.byte	1,5,18,9
	.half	.L5808-.L5807
	.byte	3,2,1,5,35,9
	.half	.L5809-.L5808
	.byte	1,5,3,9
	.half	.L5810-.L5809
	.byte	1,5,42,7,9
	.half	.L5811-.L5810
	.byte	3,2,1,5,29,9
	.half	.L5812-.L5811
	.byte	1,5,50,9
	.half	.L3704-.L5812
	.byte	3,1,1,5,62,9
	.half	.L3705-.L3704
	.byte	1,5,56,9
	.half	.L5813-.L3705
	.byte	3,127,1,5,50,9
	.half	.L722-.L5813
	.byte	3,6,1,5,62,9
	.half	.L3706-.L722
	.byte	1,5,40,9
	.half	.L3707-.L3706
	.byte	3,3,1,5,22,9
	.half	.L3708-.L3707
	.byte	3,1,1,5,1,9
	.half	.L5814-.L3708
	.byte	3,3,1,7,9
	.half	.L1446-.L5814
	.byte	0,1,1
.L5794:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lCheckReadLength')
	.sect	'.debug_ranges'
.L1445:
	.word	-1,.L1144,0,.L1446-.L1144,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lLocalWrite')
	.sect	'.debug_info'
.L1447:
	.word	3953
	.half	3
	.word	.L1448
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1450,.L1449
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lLocalWrite',0,1,130,66,13,1,1
	.word	.L1138,.L2520,.L1137
	.byte	4
	.word	.L1138,.L2520
	.byte	5
	.byte	'StateDataPtr',0,1,132,66,32
	.word	.L1631,.L2521
	.byte	5
	.byte	'PendReqStatePtr',0,1,133,66,32
	.word	.L1622,.L2522
	.byte	5
	.byte	'BlockNumber',0,1,134,66,26
	.word	.L1781,.L2523
	.byte	5
	.byte	'UserBlockIndex',0,1,135,66,26
	.word	.L1781,.L2524
	.byte	6
	.word	.L1959,.L2525,.L2526
	.byte	7
	.word	.L1961,.L2527
	.byte	8
	.word	.L1963,.L2525,.L2526
	.byte	5
	.byte	'RetVal',0,1,169,32,11
	.word	.L1592,.L2528
	.byte	0,0,6
	.word	.L2529,.L2526,.L562
	.byte	7
	.word	.L2530,.L2531
	.byte	8
	.word	.L2532,.L2526,.L562
	.byte	5
	.byte	'StateDataPtr',0,1,245,56,32
	.word	.L1579,.L2533
	.byte	5
	.byte	'BlockPtr',0,1,246,56,32
	.word	.L1807,.L2534
	.byte	5
	.byte	'PendReqStatePtr',0,1,247,56,32
	.word	.L1644,.L2535
	.byte	5
	.byte	'LastWrittenBlkPtr',0,1,248,56,32
	.word	.L1587,.L2536
	.byte	5
	.byte	'BlockCycleCount',0,1,249,56,32
	.word	.L1589,.L2537
	.byte	5
	.byte	'DestAddr',0,1,250,56,32
	.word	.L1589,.L2538
	.byte	5
	.byte	'TempAddr',0,1,251,56,32
	.word	.L1589,.L2539
	.byte	5
	.byte	'Index',0,1,252,56,32
	.word	.L1589,.L2540
	.byte	5
	.byte	'Offset',0,1,253,56,32
	.word	.L1781,.L2541
	.byte	5
	.byte	'Length',0,1,254,56,39
	.word	.L1589,.L2542
	.byte	5
	.byte	'ReturnValue',0,1,255,56,32
	.word	.L1592,.L2543
	.byte	6
	.word	.L2544,.L2545,.L2546
	.byte	7
	.word	.L2547,.L2548
	.byte	9
	.word	.L2549,.L2550
	.byte	5
	.byte	'DestAddr',0,1,190,110,22
	.word	.L1589,.L2552
	.byte	5
	.byte	'StateDataPtr',0,1,191,110,22
	.word	.L1579,.L2553
	.byte	5
	.byte	'ReturnValue',0,1,192,110,22
	.word	.L1592,.L2554
	.byte	6
	.word	.L1684,.L571,.L570
	.byte	7
	.word	.L1687,.L2565
	.byte	8
	.word	.L1689,.L571,.L570
	.byte	6
	.word	.L1690,.L571,.L2566
	.byte	7
	.word	.L1691,.L2567
	.byte	10
	.word	.L1693,.L571,.L2566
	.byte	0,0,0,6
	.word	.L1912,.L2568,.L2569
	.byte	7
	.word	.L1915,.L2570
	.byte	10
	.word	.L1917,.L2568,.L2569
	.byte	0,6
	.word	.L2571,.L2572,.L572
	.byte	8
	.word	.L2573,.L2572,.L572
	.byte	5
	.byte	'StateDataPtr',0,1,200,108,22
	.word	.L1579,.L2574
	.byte	5
	.byte	'DestAddr',0,1,201,108,22
	.word	.L1589,.L2575
	.byte	5
	.byte	'Offset',0,1,202,108,22
	.word	.L1589,.L2576
	.byte	5
	.byte	'WLAddr',0,1,203,108,22
	.word	.L1589,.L2577
	.byte	5
	.byte	'LWBType',0,1,204,108,22
	.word	.L1592,.L2578
	.byte	5
	.byte	'LWBPageCount',0,1,205,108,22
	.word	.L1781,.L2579
	.byte	5
	.byte	'RemainingPages',0,1,206,108,22
	.word	.L1589,.L2580
	.byte	5
	.byte	'LWBNum',0,1,207,108,22
	.word	.L1781,.L2581
	.byte	5
	.byte	'LWBIndex',0,1,208,108,22
	.word	.L1781,.L2582
	.byte	5
	.byte	'BankNumber',0,1,209,108,22
	.word	.L1592,.L2583
	.byte	5
	.byte	'ThresholdCrossed',0,1,210,108,22
	.word	.L1592,.L2584
	.byte	6
	.word	.L1684,.L2585,.L2586
	.byte	7
	.word	.L1687,.L2565
	.byte	8
	.word	.L1689,.L2585,.L2586
	.byte	6
	.word	.L1690,.L2585,.L2587
	.byte	7
	.word	.L1691,.L2567
	.byte	10
	.word	.L1693,.L2585,.L2587
	.byte	0,0,0,6
	.word	.L2588,.L2589,.L2590
	.byte	7
	.word	.L2591,.L2592
	.byte	7
	.word	.L2593,.L2594
	.byte	9
	.word	.L2595,.L2596
	.byte	5
	.byte	'RetVal',0,1,254,33,11
	.word	.L1592,.L2598
	.byte	0,0,6
	.word	.L2588,.L2597,.L576
	.byte	7
	.word	.L2591,.L2592
	.byte	7
	.word	.L2593,.L2594
	.byte	0,6
	.word	.L1684,.L577,.L2599
	.byte	7
	.word	.L1687,.L2565
	.byte	8
	.word	.L1689,.L577,.L2599
	.byte	6
	.word	.L1690,.L577,.L2600
	.byte	7
	.word	.L1691,.L2567
	.byte	10
	.word	.L1693,.L577,.L2600
	.byte	0,0,0,6
	.word	.L1684,.L581,.L580
	.byte	7
	.word	.L1687,.L2565
	.byte	8
	.word	.L1689,.L581,.L580
	.byte	6
	.word	.L1690,.L581,.L2601
	.byte	7
	.word	.L1691,.L2567
	.byte	10
	.word	.L1693,.L581,.L2601
	.byte	0,0,0,0,0,6
	.word	.L2602,.L572,.L563
	.byte	7
	.word	.L2603,.L2604
	.byte	8
	.word	.L2605,.L572,.L563
	.byte	5
	.byte	'StateDataPtr',0,1,176,109,22
	.word	.L1579,.L2606
	.byte	5
	.byte	'DestAddr',0,1,177,109,22
	.word	.L1589,.L2607
	.byte	5
	.byte	'WLAddr',0,1,178,109,22
	.word	.L1589,.L2608
	.byte	5
	.byte	'Offset',0,1,179,109,22
	.word	.L1589,.L2609
	.byte	5
	.byte	'BlkPages',0,1,180,109,22
	.word	.L1781,.L2610
	.byte	5
	.byte	'RemainingPages',0,1,181,109,22
	.word	.L1589,.L2611
	.byte	5
	.byte	'BankNumber',0,1,182,109,22
	.word	.L1592,.L2612
	.byte	5
	.byte	'ReturnValue',0,1,183,109,22
	.word	.L1592,.L2613
	.byte	6
	.word	.L1912,.L583,.L2614
	.byte	7
	.word	.L1915,.L2570
	.byte	10
	.word	.L1917,.L583,.L2614
	.byte	0,6
	.word	.L1684,.L2615,.L2616
	.byte	7
	.word	.L1687,.L2565
	.byte	8
	.word	.L1689,.L2615,.L2616
	.byte	6
	.word	.L1690,.L2615,.L2617
	.byte	7
	.word	.L1691,.L2567
	.byte	10
	.word	.L1693,.L2615,.L2617
	.byte	0,0,0,6
	.word	.L2588,.L2618,.L2619
	.byte	7
	.word	.L2591,.L2592
	.byte	7
	.word	.L2593,.L2594
	.byte	8
	.word	.L2595,.L2618,.L2619
	.byte	5
	.byte	'RetVal',0,1,254,33,11
	.word	.L1592,.L2620
	.byte	0,0,6
	.word	.L1684,.L2619,.L2621
	.byte	7
	.word	.L1687,.L2565
	.byte	8
	.word	.L1689,.L2619,.L2621
	.byte	6
	.word	.L1690,.L2619,.L2622
	.byte	7
	.word	.L1691,.L2567
	.byte	10
	.word	.L1693,.L2619,.L2622
	.byte	0,0,0,6
	.word	.L2588,.L2623,.L2624
	.byte	7
	.word	.L2591,.L2592
	.byte	7
	.word	.L2593,.L2594
	.byte	8
	.word	.L2595,.L2623,.L2624
	.byte	5
	.byte	'RetVal',0,1,254,33,11
	.word	.L1592,.L2625
	.byte	0,0,0,0,0,0,6
	.word	.L2555,.L2556,.L565
	.byte	7
	.word	.L2557,.L2558
	.byte	7
	.word	.L2559,.L2560
	.byte	8
	.word	.L2561,.L2556,.L565
	.byte	5
	.byte	'StateDataPtr',0,1,176,56,26
	.word	.L1579,.L2562
	.byte	5
	.byte	'CycleCountCfg',0,1,177,56,26
	.word	.L1589,.L2563
	.byte	5
	.byte	'RetVal',0,1,178,56,26
	.word	.L1592,.L2564
	.byte	0,0,6
	.word	.L2544,.L565,.L2551
	.byte	7
	.word	.L2547,.L2548
	.byte	0,6
	.word	.L1912,.L2626,.L2627
	.byte	7
	.word	.L1915,.L2570
	.byte	10
	.word	.L1917,.L2626,.L2627
	.byte	0,6
	.word	.L1690,.L2628,.L2629
	.byte	7
	.word	.L1691,.L2567
	.byte	10
	.word	.L1693,.L2628,.L2629
	.byte	0,6
	.word	.L1684,.L2630,.L2631
	.byte	7
	.word	.L1687,.L2565
	.byte	8
	.word	.L1689,.L2630,.L2631
	.byte	6
	.word	.L1690,.L2630,.L2632
	.byte	7
	.word	.L1691,.L2567
	.byte	10
	.word	.L1693,.L2630,.L2632
	.byte	0,0,0,0,0,6
	.word	.L2633,.L2634,.L607
	.byte	7
	.word	.L2635,.L2636
	.byte	8
	.word	.L2637,.L2634,.L607
	.byte	5
	.byte	'StateDataPtr',0,1,165,58,32
	.word	.L1579,.L2638
	.byte	5
	.byte	'PendReqStatePtr',0,1,166,58,32
	.word	.L1644,.L2639
	.byte	5
	.byte	'BlockPtr',0,1,167,58,32
	.word	.L1807,.L2640
	.byte	5
	.byte	'LastWrittenBlkPtr',0,1,168,58,38
	.word	.L2641,.L2642
	.byte	5
	.byte	'DestAddr',0,1,169,58,32
	.word	.L1589,.L2643
	.byte	5
	.byte	'TempAddr',0,1,170,58,32
	.word	.L1589,.L2644
	.byte	5
	.byte	'CompareLength',0,1,171,58,39
	.word	.L1589,.L2645
	.byte	5
	.byte	'TmpCompareLength',0,1,172,58,39
	.word	.L1589,.L2646
	.byte	5
	.byte	'ReturnValueFls',0,1,173,58,32
	.word	.L1592,.L2647
	.byte	5
	.byte	'Error',0,1,174,58,32
	.word	.L1592,.L2648
	.byte	6
	.word	.L1690,.L2649,.L2650
	.byte	7
	.word	.L1691,.L2567
	.byte	10
	.word	.L1693,.L2649,.L2650
	.byte	0,6
	.word	.L1684,.L2651,.L2652
	.byte	7
	.word	.L1687,.L2565
	.byte	8
	.word	.L1689,.L2651,.L2652
	.byte	6
	.word	.L1690,.L2651,.L2653
	.byte	7
	.word	.L1691,.L2567
	.byte	10
	.word	.L1693,.L2651,.L2653
	.byte	0,0,0,6
	.word	.L1684,.L611,.L2654
	.byte	7
	.word	.L1687,.L2565
	.byte	8
	.word	.L1689,.L611,.L2654
	.byte	6
	.word	.L1690,.L611,.L2655
	.byte	7
	.word	.L1691,.L2567
	.byte	10
	.word	.L1693,.L611,.L2655
	.byte	0,0,0,0,0,6
	.word	.L2656,.L2657,.L628
	.byte	7
	.word	.L2658,.L2659
	.byte	8
	.word	.L2660,.L2657,.L628
	.byte	5
	.byte	'StateDataPtr',0,1,213,64,26
	.word	.L1579,.L2661
	.byte	5
	.byte	'PendReqStatePtr',0,1,214,64,26
	.word	.L1644,.L2662
	.byte	5
	.byte	'BlockPtr',0,1,215,64,26
	.word	.L1807,.L2663
	.byte	5
	.byte	'UnconfigBlockPtr',0,1,216,64,26
	.word	.L1583,.L2664
	.byte	5
	.byte	'DestAddr',0,1,217,64,25
	.word	.L1589,.L2665
	.byte	5
	.byte	'TempAddr',0,1,218,64,25
	.word	.L1589,.L2666
	.byte	5
	.byte	'BlockNumber',0,1,219,64,25
	.word	.L1781,.L2667
	.byte	5
	.byte	'CompareLength',0,1,220,64,25
	.word	.L1781,.L2668
	.byte	5
	.byte	'TmpCompareLength',0,1,221,64,25
	.word	.L1781,.L2669
	.byte	5
	.byte	'StartOffset',0,1,222,64,25
	.word	.L1589,.L2670
	.byte	5
	.byte	'UnconfigBlockIndex',0,1,223,64,25
	.word	.L1781,.L2671
	.byte	5
	.byte	'ReturnValueFls',0,1,224,64,25
	.word	.L1592,.L2672
	.byte	5
	.byte	'RetVal',0,1,225,64,25
	.word	.L1592,.L2673
	.byte	5
	.byte	'NewUserBlockIndex',0,1,226,64,25
	.word	.L1781,.L2674
	.byte	8
	.word	.L2675,.L2676,.L628
	.byte	5
	.byte	'LWBMarkerAddress',0,1,229,64,25
	.word	.L1589,.L2677
	.byte	5
	.byte	'NextFreePageWLAddr',0,1,230,64,25
	.word	.L1589,.L2678
	.byte	5
	.byte	'LastBlkInfoPtr',0,1,231,64,32
	.word	.L1587,.L2679
	.byte	6
	.word	.L1690,.L2680,.L2681
	.byte	7
	.word	.L1691,.L2567
	.byte	10
	.word	.L1693,.L2680,.L2681
	.byte	0,6
	.word	.L1690,.L2682,.L2683
	.byte	7
	.word	.L1691,.L2567
	.byte	10
	.word	.L1693,.L2682,.L2683
	.byte	0,0,0,0,6
	.word	.L2684,.L2685,.L647
	.byte	8
	.word	.L2686,.L2685,.L647
	.byte	5
	.byte	'StateDataPtr',0,1,183,62,23
	.word	.L1579,.L2687
	.byte	5
	.byte	'ReadWriteBuffPtr',0,1,184,62,23
	.word	.L1644,.L2688
	.byte	5
	.byte	'LWBBufferPtr',0,1,185,62,29
	.word	.L1622,.L2689
	.byte	5
	.byte	'SrcAddr',0,1,186,62,23
	.word	.L1589,.L2690
	.byte	5
	.byte	'AffectedWLAddr',0,1,187,62,23
	.word	.L1589,.L2691
	.byte	5
	.byte	'SrcAddrNextWLAddr',0,1,188,62,23
	.word	.L1589,.L2692
	.byte	5
	.byte	'Offset',0,1,189,62,23
	.word	.L1781,.L2693
	.byte	5
	.byte	'ReadLength',0,1,190,62,23
	.word	.L1781,.L2694
	.byte	5
	.byte	'ReadLengthInWL',0,1,191,62,23
	.word	.L1781,.L2695
	.byte	5
	.byte	'TempIndex',0,1,192,62,23
	.word	.L1781,.L2696
	.byte	5
	.byte	'RemainingPageCount',0,1,193,62,23
	.word	.L1781,.L2697
	.byte	5
	.byte	'LWBPageCount',0,1,194,62,23
	.word	.L1781,.L2698
	.byte	5
	.byte	'ReadLengthMax',0,1,195,62,23
	.word	.L1781,.L2699
	.byte	5
	.byte	'ReturnValueFls',0,1,196,62,23
	.word	.L1592,.L2700
	.byte	6
	.word	.L1690,.L2701,.L2702
	.byte	7
	.word	.L1691,.L2567
	.byte	10
	.word	.L1693,.L2701,.L2702
	.byte	0,6
	.word	.L1684,.L2703,.L2704
	.byte	7
	.word	.L1687,.L2565
	.byte	8
	.word	.L1689,.L2703,.L2704
	.byte	6
	.word	.L1690,.L2703,.L2705
	.byte	7
	.word	.L1691,.L2567
	.byte	10
	.word	.L1693,.L2703,.L2705
	.byte	0,0,0,6
	.word	.L1684,.L660,.L659
	.byte	7
	.word	.L1687,.L2565
	.byte	8
	.word	.L1689,.L660,.L659
	.byte	6
	.word	.L1690,.L660,.L2706
	.byte	7
	.word	.L1691,.L2567
	.byte	10
	.word	.L1693,.L660,.L2706
	.byte	0,0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lLocalWrite')
	.sect	'.debug_abbrev'
.L1448:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1,49,16
	.byte	17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,11,1,49,16,85,6,0,0,10,11,0,49,16,17,1
	.byte	18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lLocalWrite')
	.sect	'.debug_line'
.L1449:
	.word	.L5816-.L5815
.L5815:
	.half	3
	.word	.L5818-.L5817
.L5817:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L5818:
	.byte	5,13,7,0,5,2
	.word	.L1138
	.byte	3,129,194,0,1,5,18,9
	.half	.L3512-.L1138
	.byte	3,7,1,5,28,9
	.half	.L5819-.L3512
	.byte	1,5,45,9
	.half	.L3513-.L5819
	.byte	3,2,1,5,42,9
	.half	.L3515-.L3513
	.byte	3,2,1,5,18,9
	.half	.L3516-.L3515
	.byte	1,5,35,9
	.half	.L3517-.L3516
	.byte	3,2,1,5,14,9
	.half	.L2525-.L3517
	.byte	3,157,94,1,5,36,9
	.half	.L5820-.L2525
	.byte	1,5,6,9
	.half	.L5821-.L5820
	.byte	1,5,37,7,9
	.half	.L5822-.L5821
	.byte	3,1,1,5,34,9
	.half	.L5823-.L5822
	.byte	1,5,12,7,9
	.half	.L559-.L5823
	.byte	3,2,1,5,27,9
	.half	.L3520-.L559
	.byte	1,5,12,9
	.half	.L560-.L3520
	.byte	3,4,1,5,3,9
	.half	.L561-.L560
	.byte	3,229,33,1,5,19,7,9
	.half	.L2526-.L561
	.byte	3,233,118,1,5,15,9
	.half	.L2545-.L2526
	.byte	3,1,1,5,10,9
	.half	.L2546-.L2545
	.byte	3,1,1,5,18,9
	.half	.L3523-.L2546
	.byte	3,1,1,5,28,9
	.half	.L5824-.L3523
	.byte	1,5,26,9
	.half	.L3514-.L5824
	.byte	3,2,1,5,45,9
	.half	.L5825-.L3514
	.byte	1,5,35,9
	.half	.L3524-.L5825
	.byte	3,1,1,5,18,9
	.half	.L3527-.L3524
	.byte	3,3,1,5,3,9
	.half	.L3521-.L3527
	.byte	1,5,35,7,9
	.half	.L5826-.L3521
	.byte	3,4,1,5,51,9
	.half	.L5827-.L5826
	.byte	1,5,5,9
	.half	.L5828-.L5827
	.byte	1,5,47,7,9
	.half	.L5829-.L5828
	.byte	3,5,1,5,21,9
	.half	.L564-.L5829
	.byte	3,6,1,5,5,9
	.half	.L5830-.L564
	.byte	1,5,10,7,9
	.half	.L2556-.L5830
	.byte	3,155,127,1,5,18,9
	.half	.L5831-.L2556
	.byte	3,1,1,5,28,9
	.half	.L3526-.L5831
	.byte	1,5,27,9
	.half	.L3529-.L3526
	.byte	3,1,1,5,7,9
	.half	.L3531-.L3529
	.byte	3,5,1,5,56,7,9
	.half	.L5832-.L3531
	.byte	1,5,34,7,9
	.half	.L5833-.L5832
	.byte	3,14,1,5,32,9
	.half	.L3532-.L5833
	.byte	1,5,36,9
	.half	.L5834-.L3532
	.byte	3,1,1,5,10,9
	.half	.L5835-.L5834
	.byte	3,4,1,5,20,9
	.half	.L3530-.L5835
	.byte	1,5,5,9
	.half	.L5836-.L3530
	.byte	1,5,18,7,9
	.half	.L5837-.L5836
	.byte	3,5,1,5,47,9
	.half	.L5838-.L5837
	.byte	1,5,12,9
	.half	.L568-.L5838
	.byte	3,2,1,5,5,9
	.half	.L565-.L568
	.byte	3,201,0,1,5,18,7,9
	.half	.L5839-.L565
	.byte	3,164,53,1,5,28,9
	.half	.L5840-.L5839
	.byte	1,5,26,9
	.half	.L3533-.L5840
	.byte	3,1,1,5,48,9
	.half	.L3535-.L3533
	.byte	3,2,1,5,18,9
	.half	.L571-.L3535
	.byte	3,209,178,127,1,5,41,9
	.half	.L2566-.L571
	.byte	3,27,1,5,31,9
	.half	.L570-.L2566
	.byte	3,148,205,0,1,5,48,9
	.half	.L5841-.L570
	.byte	1,5,37,7,9
	.half	.L5842-.L5841
	.byte	3,4,1,5,18,9
	.half	.L2568-.L5842
	.byte	3,177,178,127,1,5,7,9
	.half	.L2569-.L2568
	.byte	3,212,205,0,1,5,50,7,9
	.half	.L5843-.L2569
	.byte	3,1,1,5,62,9
	.half	.L5844-.L5843
	.byte	1,5,18,7,9
	.half	.L2572-.L5844
	.byte	3,134,126,1,5,28,9
	.half	.L5845-.L2572
	.byte	1,5,44,9
	.half	.L3536-.L5845
	.byte	3,2,1,5,26,9
	.half	.L3522-.L3536
	.byte	3,1,1,5,47,9
	.half	.L3537-.L3522
	.byte	3,2,1,5,53,9
	.half	.L3538-.L3537
	.byte	3,1,1,5,36,9
	.half	.L3540-.L3538
	.byte	3,1,1,5,12,9
	.half	.L3539-.L3540
	.byte	1,5,18,9
	.half	.L2585-.L3539
	.byte	3,186,180,127,1,5,41,9
	.half	.L2587-.L2585
	.byte	3,27,1,5,19,9
	.half	.L2586-.L2587
	.byte	3,177,203,0,1,5,20,9
	.half	.L3543-.L2586
	.byte	3,3,1,5,21,9
	.half	.L3542-.L3543
	.byte	3,1,1,5,18,9
	.half	.L3545-.L3542
	.byte	3,4,1,5,3,9
	.half	.L5846-.L3545
	.byte	1,5,13,7,9
	.half	.L5847-.L5846
	.byte	3,2,1,5,37,9
	.half	.L3547-.L5847
	.byte	1,5,23,9
	.half	.L574-.L3547
	.byte	3,4,1,5,33,9
	.half	.L5848-.L574
	.byte	1,5,52,9
	.half	.L5849-.L5848
	.byte	1,5,62,9
	.half	.L5850-.L5849
	.byte	1,5,55,9
	.half	.L575-.L5850
	.byte	3,5,1,5,31,9
	.half	.L3546-.L575
	.byte	1,5,35,9
	.half	.L2589-.L3546
	.byte	3,143,181,127,1,5,18,9
	.half	.L5851-.L2589
	.byte	3,2,1,5,28,9
	.half	.L5852-.L5851
	.byte	1,5,7,9
	.half	.L5853-.L5852
	.byte	1,5,6,9
	.half	.L2590-.L5853
	.byte	3,246,202,0,1,5,63,7,9
	.half	.L2597-.L2590
	.byte	1,5,12,7,9
	.half	.L576-.L2597
	.byte	3,8,1,5,28,7,9
	.half	.L5854-.L576
	.byte	3,1,1,5,18,7,9
	.half	.L577-.L5854
	.byte	3,145,180,127,1,5,41,9
	.half	.L2600-.L577
	.byte	3,27,1,5,49,9
	.half	.L2599-.L2600
	.byte	3,223,203,0,1,5,18,9
	.half	.L581-.L2599
	.byte	3,134,180,127,1,5,41,9
	.half	.L2601-.L581
	.byte	3,27,1,5,32,9
	.half	.L580-.L2601
	.byte	3,223,203,0,1,5,49,9
	.half	.L5855-.L580
	.byte	1,5,37,7,9
	.half	.L5856-.L5855
	.byte	3,4,1,5,15,9
	.half	.L572-.L5856
	.byte	3,37,1,5,18,9
	.half	.L3548-.L572
	.byte	3,2,1,5,28,9
	.half	.L5857-.L3548
	.byte	1,5,44,9
	.half	.L3549-.L5857
	.byte	3,1,1,5,26,9
	.half	.L3550-.L3549
	.byte	3,1,1,5,3,9
	.half	.L3551-.L3550
	.byte	3,3,1,5,14,7,9
	.half	.L5858-.L3551
	.byte	3,2,1,5,39,9
	.half	.L3552-.L5858
	.byte	1,5,53,9
	.half	.L582-.L3552
	.byte	3,4,1,5,14,9
	.half	.L3553-.L582
	.byte	1,5,18,9
	.half	.L583-.L3553
	.byte	3,180,179,127,1,5,3,9
	.half	.L2614-.L583
	.byte	3,209,204,0,1,5,18,7,9
	.half	.L2615-.L2614
	.byte	3,203,179,127,1,5,41,9
	.half	.L2617-.L2615
	.byte	3,27,1,5,44,9
	.half	.L2616-.L2617
	.byte	3,166,204,0,1,5,58,9
	.half	.L3554-.L2616
	.byte	3,2,1,5,24,9
	.half	.L3555-.L3554
	.byte	3,4,1,5,12,9
	.half	.L3558-.L3555
	.byte	3,4,1,5,35,9
	.half	.L2618-.L3558
	.byte	3,163,180,127,1,5,18,9
	.half	.L5859-.L2618
	.byte	3,2,1,5,28,9
	.half	.L5860-.L5859
	.byte	1,5,7,9
	.half	.L3559-.L5860
	.byte	1,5,5,9
	.half	.L3560-.L3559
	.byte	3,226,203,0,1,5,18,7,9
	.half	.L2619-.L3560
	.byte	3,174,179,127,1,5,41,9
	.half	.L2622-.L2619
	.byte	3,27,1,9
	.half	.L2621-.L2622
	.byte	3,186,204,0,1,5,58,9
	.half	.L584-.L2621
	.byte	3,5,1,5,35,9
	.half	.L2623-.L584
	.byte	3,148,180,127,1,5,18,9
	.half	.L5861-.L2623
	.byte	3,2,1,5,28,9
	.half	.L5862-.L5861
	.byte	1,5,7,9
	.half	.L5863-.L5862
	.byte	1,5,3,9
	.half	.L3561-.L5863
	.byte	3,238,203,0,1,5,18,7,9
	.half	.L2624-.L3561
	.byte	3,6,1,5,9,9
	.half	.L3562-.L2624
	.byte	1,5,38,7,9
	.half	.L5864-.L3562
	.byte	3,1,1,5,10,9
	.half	.L5865-.L5864
	.byte	3,1,1,5,7,7,9
	.half	.L5866-.L5865
	.byte	3,10,1,5,42,7,9
	.half	.L5867-.L5866
	.byte	3,7,1,5,40,9
	.half	.L5868-.L5867
	.byte	1,5,21,9
	.half	.L5869-.L5868
	.byte	3,1,1,9
	.half	.L587-.L5869
	.byte	3,6,1,5,37,9
	.half	.L5870-.L587
	.byte	1,5,5,9
	.half	.L5871-.L5870
	.byte	1,5,22,7,9
	.half	.L5872-.L5871
	.byte	3,4,1,5,7,9
	.half	.L5873-.L5872
	.byte	1,5,36,7,9
	.half	.L5874-.L5873
	.byte	3,3,1,5,34,9
	.half	.L5875-.L5874
	.byte	1,5,5,9
	.half	.L5876-.L5875
	.byte	3,121,1,5,17,9
	.half	.L586-.L5876
	.byte	3,14,1,5,3,9
	.half	.L563-.L586
	.byte	3,133,75,1,5,28,7,9
	.half	.L2551-.L563
	.byte	3,2,1,5,18,9
	.half	.L2626-.L2551
	.byte	3,209,103,1,5,5,9
	.half	.L2627-.L2626
	.byte	3,180,24,1,5,18,7,9
	.half	.L2628-.L2627
	.byte	3,232,103,1,5,29,9
	.half	.L2629-.L2628
	.byte	3,159,24,1,5,14,9
	.half	.L5877-.L2629
	.byte	1,5,17,9
	.half	.L5878-.L5877
	.byte	3,2,1,5,7,9
	.half	.L5879-.L5878
	.byte	3,5,1,5,18,7,9
	.half	.L3563-.L5879
	.byte	3,2,1,5,79,9
	.half	.L5880-.L3563
	.byte	3,8,1,5,29,9
	.half	.L5881-.L5880
	.byte	3,2,1,5,9,9
	.half	.L3564-.L5881
	.byte	3,3,1,5,38,7,9
	.half	.L5882-.L3564
	.byte	3,2,1,5,36,9
	.half	.L5883-.L5882
	.byte	1,9
	.half	.L5884-.L5883
	.byte	3,5,1,5,48,9
	.half	.L5885-.L5884
	.byte	1,5,42,9
	.half	.L5886-.L5885
	.byte	3,1,1,5,43,9
	.half	.L5887-.L5886
	.byte	3,1,1,5,18,9
	.half	.L2630-.L5887
	.byte	3,194,103,1,5,41,9
	.half	.L2632-.L2630
	.byte	3,27,1,5,57,9
	.half	.L2631-.L2632
	.byte	3,165,24,1,5,22,9
	.half	.L598-.L2631
	.byte	3,3,1,5,40,9
	.half	.L597-.L598
	.byte	3,125,1,5,57,9
	.half	.L5888-.L597
	.byte	1,7,9
	.half	.L5889-.L5888
	.byte	1,5,33,9
	.half	.L596-.L5889
	.byte	3,10,1,5,18,9
	.half	.L3565-.L596
	.byte	1,5,63,9
	.half	.L3566-.L3565
	.byte	3,3,1,5,45,9
	.half	.L601-.L3566
	.byte	3,2,1,5,52,9
	.half	.L5890-.L601
	.byte	3,1,1,5,53,9
	.half	.L5891-.L5890
	.byte	3,127,1,5,70,9
	.half	.L5892-.L5891
	.byte	3,126,1,5,63,9
	.half	.L600-.L5892
	.byte	1,5,23,7,9
	.half	.L5893-.L600
	.byte	3,5,1,5,36,9
	.half	.L3567-.L5893
	.byte	1,5,9,9
	.half	.L5894-.L3567
	.byte	3,116,1,5,37,9
	.half	.L595-.L5894
	.byte	3,19,1,5,9,9
	.half	.L5895-.L595
	.byte	1,5,45,7,9
	.half	.L5896-.L5895
	.byte	3,2,1,5,71,9
	.half	.L5897-.L5896
	.byte	1,5,45,9
	.half	.L603-.L5897
	.byte	3,4,1,5,39,9
	.half	.L604-.L603
	.byte	3,8,1,5,5,9
	.half	.L599-.L604
	.byte	3,6,1,5,34,7,9
	.half	.L5898-.L599
	.byte	3,2,1,5,32,9
	.half	.L5899-.L5898
	.byte	1,5,37,9
	.half	.L5900-.L5899
	.byte	3,1,1,5,44,9
	.half	.L5901-.L5900
	.byte	3,1,1,5,39,9
	.half	.L5902-.L5901
	.byte	3,1,1,5,41,9
	.half	.L5903-.L5902
	.byte	3,1,1,5,26,9
	.half	.L5904-.L5903
	.byte	3,1,1,5,24,9
	.half	.L5905-.L5904
	.byte	1,5,6,9
	.half	.L562-.L5905
	.byte	3,151,8,1,5,26,9
	.half	.L5906-.L562
	.byte	1,5,3,9
	.half	.L5907-.L5906
	.byte	1,5,18,7,9
	.half	.L2634-.L5907
	.byte	3,143,120,1,5,28,9
	.half	.L5908-.L2634
	.byte	1,5,18,9
	.half	.L3571-.L5908
	.byte	3,1,1,5,26,9
	.half	.L3572-.L3571
	.byte	3,2,1,5,45,9
	.half	.L5909-.L3572
	.byte	1,5,37,9
	.half	.L3574-.L5909
	.byte	3,1,1,5,35,9
	.half	.L3575-.L3574
	.byte	3,1,1,5,26,9
	.half	.L3576-.L3575
	.byte	3,2,1,5,18,9
	.half	.L2649-.L3576
	.byte	3,223,102,1,5,28,9
	.half	.L2650-.L2649
	.byte	3,164,25,1,5,32,9
	.half	.L5910-.L2650
	.byte	3,1,1,5,17,9
	.half	.L3577-.L5910
	.byte	1,5,33,9
	.half	.L5911-.L3577
	.byte	3,2,1,5,17,9
	.half	.L5912-.L5911
	.byte	1,5,20,9
	.half	.L5913-.L5912
	.byte	3,2,1,5,18,9
	.half	.L3578-.L5913
	.byte	3,8,1,5,3,9
	.half	.L5914-.L3578
	.byte	1,5,56,7,9
	.half	.L5915-.L5914
	.byte	3,11,1,5,35,9
	.half	.L5916-.L5915
	.byte	3,3,1,5,23,9
	.half	.L5917-.L5916
	.byte	3,2,1,5,17,9
	.half	.L5918-.L5917
	.byte	3,2,1,5,34,9
	.half	.L5919-.L5918
	.byte	1,5,6,9
	.half	.L608-.L5919
	.byte	3,4,1,5,20,7,9
	.half	.L5920-.L608
	.byte	3,1,1,5,36,9
	.half	.L5921-.L5920
	.byte	1,7,9
	.half	.L609-.L5921
	.byte	3,2,1,5,34,9
	.half	.L5922-.L609
	.byte	1,5,33,9
	.half	.L5923-.L5922
	.byte	3,2,1,5,20,9
	.half	.L5924-.L5923
	.byte	3,3,1,5,5,9
	.half	.L5925-.L5924
	.byte	1,5,40,7,9
	.half	.L5926-.L5925
	.byte	3,2,1,5,56,9
	.half	.L5927-.L5926
	.byte	3,1,1,5,42,9
	.half	.L5928-.L5927
	.byte	1,5,18,9
	.half	.L2651-.L5928
	.byte	3,174,102,1,5,41,9
	.half	.L2653-.L2651
	.byte	3,27,1,5,16,9
	.half	.L2652-.L2653
	.byte	3,186,25,1,5,41,9
	.half	.L3580-.L2652
	.byte	3,1,1,5,35,9
	.half	.L5929-.L3580
	.byte	3,6,1,5,21,9
	.half	.L5930-.L5929
	.byte	3,1,1,5,55,9
	.half	.L5931-.L5930
	.byte	3,127,1,5,37,9
	.half	.L5932-.L5931
	.byte	3,4,1,5,10,9
	.half	.L3573-.L5932
	.byte	1,5,23,7,9
	.half	.L5933-.L3573
	.byte	3,1,1,5,43,9
	.half	.L5934-.L5933
	.byte	1,5,61,7,9
	.half	.L5935-.L5934
	.byte	3,5,1,5,42,9
	.half	.L5936-.L5935
	.byte	1,5,61,9
	.half	.L5937-.L5936
	.byte	3,1,1,5,42,9
	.half	.L5938-.L5937
	.byte	1,5,67,9
	.half	.L5939-.L5938
	.byte	3,127,1,5,45,9
	.half	.L612-.L5939
	.byte	3,9,1,5,15,9
	.half	.L5940-.L612
	.byte	1,5,27,7,9
	.half	.L5941-.L5940
	.byte	3,1,1,5,47,9
	.half	.L5942-.L5941
	.byte	1,5,41,7,9
	.half	.L614-.L5942
	.byte	3,3,1,5,39,9
	.half	.L5943-.L614
	.byte	1,5,41,9
	.half	.L5944-.L5943
	.byte	3,1,1,5,28,9
	.half	.L5945-.L5944
	.byte	3,2,1,5,50,9
	.half	.L5946-.L5945
	.byte	3,125,1,5,39,9
	.half	.L615-.L5946
	.byte	3,10,1,5,11,9
	.half	.L5947-.L615
	.byte	3,1,1,5,7,9
	.half	.L3582-.L5947
	.byte	3,113,1,5,18,9
	.half	.L611-.L3582
	.byte	3,145,102,1,5,41,9
	.half	.L2655-.L611
	.byte	3,27,1,9
	.half	.L2654-.L2655
	.byte	3,235,25,1,5,38,9
	.half	.L5948-.L2654
	.byte	3,4,1,5,7,9
	.half	.L5949-.L5948
	.byte	1,5,58,7,9
	.half	.L5950-.L5949
	.byte	3,3,1,5,15,9
	.half	.L5951-.L5950
	.byte	3,1,1,5,69,9
	.half	.L3584-.L5951
	.byte	3,127,1,5,15,9
	.half	.L619-.L3584
	.byte	3,5,1,5,32,9
	.half	.L620-.L619
	.byte	3,2,1,5,5,9
	.half	.L3583-.L620
	.byte	3,110,1,5,20,9
	.half	.L610-.L3583
	.byte	3,25,1,5,5,9
	.half	.L3586-.L610
	.byte	1,5,38,7,9
	.half	.L3587-.L3586
	.byte	3,2,1,5,36,9
	.half	.L5952-.L3587
	.byte	1,5,19,9
	.half	.L5953-.L5952
	.byte	3,1,1,5,56,9
	.half	.L5954-.L5953
	.byte	1,5,41,9
	.half	.L5955-.L5954
	.byte	1,5,39,9
	.half	.L5956-.L5955
	.byte	3,3,1,5,10,9
	.half	.L5957-.L5956
	.byte	1,5,24,7,9
	.half	.L5958-.L5957
	.byte	3,2,1,5,42,9
	.half	.L5959-.L5958
	.byte	1,5,27,7,9
	.half	.L623-.L5959
	.byte	3,6,1,5,52,9
	.half	.L5960-.L623
	.byte	3,1,1,5,12,9
	.half	.L3585-.L5960
	.byte	3,127,1,5,27,7,9
	.half	.L624-.L3585
	.byte	3,3,1,5,29,9
	.half	.L5961-.L624
	.byte	1,5,28,9
	.half	.L625-.L5961
	.byte	3,4,1,5,26,9
	.half	.L617-.L625
	.byte	1,5,6,9
	.half	.L607-.L617
	.byte	3,227,6,1,5,3,9
	.half	.L5962-.L607
	.byte	1,5,26,7,9
	.half	.L5963-.L5962
	.byte	3,3,1,5,7,9
	.half	.L627-.L5963
	.byte	3,6,1,5,27,9
	.half	.L5964-.L627
	.byte	1,5,3,9
	.half	.L5965-.L5964
	.byte	1,5,10,7,9
	.half	.L2657-.L5965
	.byte	3,177,126,1,5,18,9
	.half	.L3591-.L2657
	.byte	3,1,1,5,28,9
	.half	.L5966-.L3591
	.byte	1,5,26,9
	.half	.L2676-.L5966
	.byte	3,5,1,5,45,9
	.half	.L5967-.L2676
	.byte	1,5,61,9
	.half	.L3592-.L5967
	.byte	3,1,1,5,50,9
	.half	.L5968-.L3592
	.byte	1,5,35,9
	.half	.L3593-.L5968
	.byte	3,1,1,5,18,9
	.half	.L3595-.L3593
	.byte	3,1,1,5,26,9
	.half	.L3596-.L3595
	.byte	3,2,1,5,18,9
	.half	.L2680-.L3596
	.byte	3,168,96,1,5,53,9
	.half	.L2681-.L2680
	.byte	3,221,31,1,5,38,9
	.half	.L5969-.L2681
	.byte	1,5,74,9
	.half	.L5970-.L5969
	.byte	1,5,19,9
	.half	.L5971-.L5970
	.byte	1,5,33,9
	.half	.L3599-.L5971
	.byte	3,3,1,5,17,9
	.half	.L5972-.L3599
	.byte	1,5,20,9
	.half	.L5973-.L5972
	.byte	3,1,1,5,18,9
	.half	.L3600-.L5973
	.byte	3,8,1,5,3,9
	.half	.L5974-.L3600
	.byte	1,5,32,7,9
	.half	.L5975-.L5974
	.byte	3,9,1,5,35,9
	.half	.L5976-.L5975
	.byte	3,2,1,5,23,9
	.half	.L5977-.L5976
	.byte	3,1,1,5,17,9
	.half	.L5978-.L5977
	.byte	3,3,1,5,34,9
	.half	.L5979-.L5978
	.byte	1,5,6,9
	.half	.L629-.L5979
	.byte	3,5,1,5,20,7,9
	.half	.L5980-.L629
	.byte	3,1,1,5,36,9
	.half	.L5981-.L5980
	.byte	1,7,9
	.half	.L630-.L5981
	.byte	3,2,1,5,34,9
	.half	.L5982-.L630
	.byte	1,5,25,9
	.half	.L5983-.L5982
	.byte	3,2,1,5,45,9
	.half	.L3597-.L5983
	.byte	3,126,1,5,23,9
	.half	.L631-.L3597
	.byte	3,4,1,5,8,9
	.half	.L3603-.L631
	.byte	1,5,36,7,9
	.half	.L3604-.L3603
	.byte	3,8,1,5,34,9
	.half	.L5984-.L3604
	.byte	1,5,28,9
	.half	.L5985-.L5984
	.byte	3,3,1,5,21,9
	.half	.L3605-.L5985
	.byte	3,2,1,5,43,9
	.half	.L5986-.L3605
	.byte	1,5,8,9
	.half	.L5987-.L5986
	.byte	1,5,43,7,9
	.half	.L5988-.L5987
	.byte	3,1,1,5,10,9
	.half	.L3606-.L5988
	.byte	3,1,1,5,58,9
	.half	.L5989-.L3606
	.byte	3,127,1,5,34,7,9
	.half	.L5990-.L5989
	.byte	3,3,1,5,39,9
	.half	.L3598-.L5990
	.byte	3,1,1,5,18,9
	.half	.L2682-.L3598
	.byte	3,234,95,1,5,39,9
	.half	.L2683-.L2682
	.byte	3,153,32,1,5,25,9
	.half	.L3608-.L2683
	.byte	3,2,1,5,11,9
	.half	.L3602-.L3608
	.byte	1,5,29,7,9
	.half	.L5991-.L3602
	.byte	3,1,1,5,39,7,9
	.half	.L5992-.L5991
	.byte	3,4,1,5,51,9
	.half	.L5993-.L5992
	.byte	3,1,1,5,37,9
	.half	.L3607-.L5993
	.byte	1,5,46,9
	.half	.L5994-.L3607
	.byte	3,1,1,5,32,9
	.half	.L5995-.L5994
	.byte	1,5,33,9
	.half	.L5996-.L5995
	.byte	3,1,1,5,45,9
	.half	.L5997-.L5996
	.byte	1,5,50,9
	.half	.L636-.L5997
	.byte	3,3,1,5,32,9
	.half	.L3609-.L636
	.byte	3,1,1,5,8,9
	.half	.L5998-.L3609
	.byte	1,5,37,7,9
	.half	.L5999-.L5998
	.byte	3,2,1,5,23,9
	.half	.L3594-.L5999
	.byte	3,1,1,5,65,9
	.half	.L6000-.L3594
	.byte	3,127,1,5,42,9
	.half	.L6001-.L6000
	.byte	3,1,1,5,30,9
	.half	.L638-.L6001
	.byte	3,4,1,5,41,9
	.half	.L3611-.L638
	.byte	3,2,1,5,33,9
	.half	.L641-.L3611
	.byte	3,2,1,5,53,9
	.half	.L6002-.L641
	.byte	1,5,13,9
	.half	.L6003-.L6002
	.byte	1,5,27,7,9
	.half	.L6004-.L6003
	.byte	3,4,1,5,60,9
	.half	.L6005-.L6004
	.byte	3,127,1,5,22,9
	.half	.L6006-.L6005
	.byte	3,2,1,5,46,9
	.half	.L6007-.L6006
	.byte	3,127,1,5,33,9
	.half	.L642-.L6007
	.byte	3,5,1,5,52,9
	.half	.L640-.L642
	.byte	3,116,1,5,17,9
	.half	.L6008-.L640
	.byte	1,5,23,7,9
	.half	.L6009-.L6008
	.byte	3,1,1,5,17,7,9
	.half	.L634-.L6009
	.byte	3,17,1,5,55,9
	.half	.L6010-.L634
	.byte	1,5,39,9
	.half	.L6011-.L6010
	.byte	1,5,24,9
	.half	.L6012-.L6011
	.byte	3,1,1,5,22,9
	.half	.L6013-.L6012
	.byte	1,5,20,9
	.half	.L6014-.L6013
	.byte	3,4,1,5,5,9
	.half	.L6015-.L6014
	.byte	1,5,39,7,9
	.half	.L6016-.L6015
	.byte	3,2,1,5,37,9
	.half	.L6017-.L6016
	.byte	1,5,33,9
	.half	.L6018-.L6017
	.byte	3,1,1,5,54,9
	.half	.L6019-.L6018
	.byte	1,5,39,9
	.half	.L3613-.L6019
	.byte	3,3,1,5,7,9
	.half	.L3614-.L3613
	.byte	1,5,39,7,9
	.half	.L6020-.L3614
	.byte	3,5,1,5,11,9
	.half	.L6021-.L6020
	.byte	3,1,1,5,55,9
	.half	.L3616-.L6021
	.byte	3,1,1,5,41,9
	.half	.L6022-.L3616
	.byte	1,5,7,9
	.half	.L628-.L6022
	.byte	3,209,0,1,5,27,9
	.half	.L6023-.L628
	.byte	1,5,3,9
	.half	.L6024-.L6023
	.byte	1,5,18,7,9
	.half	.L2685-.L6024
	.byte	3,140,124,1,5,28,9
	.half	.L6025-.L2685
	.byte	1,5,52,9
	.half	.L3619-.L6025
	.byte	3,1,1,5,18,9
	.half	.L2701-.L3619
	.byte	3,207,98,1,5,25,9
	.half	.L2702-.L2701
	.byte	3,178,29,1,5,34,9
	.half	.L3620-.L2702
	.byte	3,1,1,5,57,9
	.half	.L6026-.L3620
	.byte	1,5,3,9
	.half	.L3622-.L6026
	.byte	3,3,1,5,33,7,9
	.half	.L6027-.L3622
	.byte	3,2,1,5,56,9
	.half	.L648-.L6027
	.byte	3,3,1,5,19,9
	.half	.L3624-.L648
	.byte	3,1,1,5,52,9
	.half	.L3625-.L3624
	.byte	1,5,18,9
	.half	.L6028-.L3625
	.byte	3,4,1,5,3,9
	.half	.L6029-.L6028
	.byte	1,5,5,7,9
	.half	.L6030-.L6029
	.byte	3,4,1,5,25,7,9
	.half	.L6031-.L6030
	.byte	3,2,1,5,33,9
	.half	.L3623-.L6031
	.byte	1,5,36,9
	.half	.L3628-.L3623
	.byte	3,1,1,5,66,9
	.half	.L3629-.L3628
	.byte	3,1,1,5,63,9
	.half	.L3627-.L3629
	.byte	3,1,1,5,41,9
	.half	.L6032-.L3627
	.byte	1,5,7,9
	.half	.L3631-.L6032
	.byte	3,2,1,5,20,7,9
	.half	.L6033-.L3631
	.byte	3,3,1,5,43,9
	.half	.L3633-.L6033
	.byte	3,1,1,5,41,9
	.half	.L3626-.L3633
	.byte	1,5,42,9
	.half	.L6034-.L3626
	.byte	3,127,1,5,54,9
	.half	.L651-.L6034
	.byte	3,5,1,5,43,9
	.half	.L3632-.L651
	.byte	1,5,54,9
	.half	.L6035-.L3632
	.byte	1,5,26,9
	.half	.L6036-.L6035
	.byte	3,2,1,5,21,9
	.half	.L652-.L6036
	.byte	3,5,1,5,56,9
	.half	.L3634-.L652
	.byte	1,5,25,9
	.half	.L654-.L3634
	.byte	3,4,1,5,62,9
	.half	.L6037-.L654
	.byte	1,5,51,9
	.half	.L6038-.L6037
	.byte	1,5,37,9
	.half	.L6039-.L6038
	.byte	1,5,67,9
	.half	.L6040-.L6039
	.byte	3,124,1,5,56,9
	.half	.L653-.L6040
	.byte	1,5,19,7,9
	.half	.L6041-.L653
	.byte	3,6,1,5,40,9
	.half	.L6042-.L6041
	.byte	1,5,53,9
	.half	.L6043-.L6042
	.byte	1,5,20,9
	.half	.L650-.L6043
	.byte	3,6,1,5,53,9
	.half	.L3636-.L650
	.byte	1,5,46,9
	.half	.L6044-.L3636
	.byte	3,1,1,5,18,9
	.half	.L2703-.L6044
	.byte	3,153,98,1,5,41,9
	.half	.L2705-.L2703
	.byte	3,27,1,5,51,9
	.half	.L2704-.L2705
	.byte	3,205,29,1,5,24,9
	.half	.L3635-.L2704
	.byte	1,5,7,9
	.half	.L3637-.L3635
	.byte	3,2,1,5,54,7,9
	.half	.L6045-.L3637
	.byte	3,4,1,5,13,9
	.half	.L6046-.L6045
	.byte	1,5,32,7,9
	.half	.L6047-.L6046
	.byte	3,1,1,5,22,7,9
	.half	.L657-.L6047
	.byte	3,2,1,5,24,9
	.half	.L656-.L657
	.byte	3,13,1,5,22,9
	.half	.L3639-.L656
	.byte	3,125,1,5,15,9
	.half	.L3641-.L3639
	.byte	3,6,1,5,52,9
	.half	.L6048-.L3641
	.byte	3,2,1,5,18,9
	.half	.L660-.L6048
	.byte	3,253,97,1,5,41,9
	.half	.L2706-.L660
	.byte	3,27,1,5,36,9
	.half	.L659-.L2706
	.byte	3,232,29,1,5,52,9
	.half	.L6049-.L659
	.byte	1,5,40,7,9
	.half	.L6050-.L6049
	.byte	3,4,1,5,7,9
	.half	.L6051-.L6050
	.byte	3,2,1,5,29,7,9
	.half	.L6052-.L6051
	.byte	3,8,1,5,5,9
	.half	.L6053-.L6052
	.byte	3,82,1,5,31,9
	.half	.L649-.L6053
	.byte	3,55,1,5,34,9
	.half	.L3642-.L649
	.byte	3,1,1,5,20,9
	.half	.L3644-.L3642
	.byte	3,3,1,5,5,9
	.half	.L6054-.L3644
	.byte	1,5,18,7,9
	.half	.L6055-.L6054
	.byte	3,2,1,5,41,9
	.half	.L3645-.L6055
	.byte	3,1,1,5,39,9
	.half	.L3643-.L3645
	.byte	1,5,40,9
	.half	.L6056-.L3643
	.byte	3,127,1,5,25,9
	.half	.L663-.L6056
	.byte	3,4,1,5,10,9
	.half	.L6057-.L663
	.byte	1,5,43,7,9
	.half	.L6058-.L6057
	.byte	3,3,1,5,65,9
	.half	.L6059-.L6058
	.byte	1,5,34,9
	.half	.L6060-.L6059
	.byte	3,1,1,5,79,9
	.half	.L6061-.L6060
	.byte	3,127,1,5,47,9
	.half	.L6062-.L6061
	.byte	3,2,1,5,60,9
	.half	.L6063-.L6062
	.byte	3,1,1,5,7,9
	.half	.L3647-.L6063
	.byte	3,2,1,5,20,7,9
	.half	.L6064-.L3647
	.byte	3,2,1,5,43,9
	.half	.L6065-.L6064
	.byte	3,1,1,5,41,9
	.half	.L3646-.L6065
	.byte	1,5,35,9
	.half	.L6066-.L3646
	.byte	3,127,1,5,42,9
	.half	.L665-.L6066
	.byte	3,10,1,9
	.half	.L3648-.L665
	.byte	3,1,1,5,69,9
	.half	.L6067-.L3648
	.byte	3,127,1,5,20,9
	.half	.L6068-.L6067
	.byte	1,5,32,9
	.half	.L6069-.L6068
	.byte	3,2,1,5,41,9
	.half	.L666-.L6069
	.byte	3,2,1,5,39,9
	.half	.L6070-.L666
	.byte	1,5,19,9
	.half	.L664-.L6070
	.byte	3,4,1,5,54,9
	.half	.L3649-.L664
	.byte	1,5,23,9
	.half	.L669-.L3649
	.byte	3,3,1,5,60,9
	.half	.L6071-.L669
	.byte	1,5,49,9
	.half	.L6072-.L6071
	.byte	1,5,35,9
	.half	.L6073-.L6072
	.byte	1,5,65,9
	.half	.L6074-.L6073
	.byte	3,125,1,5,54,9
	.half	.L668-.L6074
	.byte	1,5,48,7,9
	.half	.L6075-.L668
	.byte	3,5,1,5,38,9
	.half	.L3621-.L6075
	.byte	1,9
	.half	.L655-.L3621
	.byte	3,1,1,5,36,9
	.half	.L6076-.L655
	.byte	1,5,33,9
	.half	.L662-.L6076
	.byte	3,3,1,5,7,9
	.half	.L647-.L662
	.byte	3,228,2,1,5,27,9
	.half	.L6077-.L647
	.byte	1,5,3,9
	.half	.L6078-.L6077
	.byte	1,5,25,7,9
	.half	.L6079-.L6078
	.byte	3,3,1,5,1,7,9
	.half	.L670-.L6079
	.byte	3,2,1,7,9
	.half	.L1451-.L670
	.byte	0,1,1
.L5816:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lLocalWrite')
	.sect	'.debug_ranges'
.L1450:
	.word	-1,.L1138,0,.L1451-.L1138,0,0
.L2550:
	.word	-1,.L1138,.L2545-.L1138,.L2546-.L1138,.L565-.L1138,.L2551-.L1138,0,0
.L2596:
	.word	-1,.L1138,.L2589-.L1138,.L2590-.L1138,.L2597-.L1138,.L576-.L1138,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lGcErrorHandler')
	.sect	'.debug_info'
.L1452:
	.word	331
	.half	3
	.word	.L1453
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1455,.L1454
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lGcErrorHandler',0,1,203,70,13,1,1
	.word	.L1146,.L2707,.L1145
	.byte	4
	.byte	'Error',0,1,203,70,45
	.word	.L2708,.L2709
	.byte	4
	.byte	'Index',0,1,203,70,65
	.word	.L2710,.L2711
	.byte	5
	.word	.L1146,.L2707
	.byte	6
	.byte	'StateDataPtr',0,1,205,70,23
	.word	.L1579,.L2712
	.byte	7
	.word	.L2713,.L725,.L734
	.byte	8
	.word	.L2714,.L725,.L734
	.byte	6
	.byte	'StateDataPtr',0,1,204,71,26
	.word	.L1579,.L2715
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lGcErrorHandler')
	.sect	'.debug_abbrev'
.L1453:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,11,1,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lGcErrorHandler')
	.sect	'.debug_line'
.L1454:
	.word	.L6081-.L6080
.L6080:
	.half	3
	.word	.L6083-.L6082
.L6082:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6083:
	.byte	5,18,7,0,5,2
	.word	.L1146
	.byte	3,206,198,0,1,5,28,9
	.half	.L6084-.L1146
	.byte	1,5,10,9
	.half	.L3711-.L6084
	.byte	3,6,1,7,9
	.half	.L6085-.L3711
	.byte	3,20,1,7,9
	.half	.L6086-.L6085
	.byte	3,35,1,7,9
	.half	.L6087-.L6086
	.byte	3,16,1,5,1,7,9
	.half	.L6088-.L6087
	.byte	3,25,1,5,23,7,9
	.half	.L726-.L6088
	.byte	3,66,1,5,39,9
	.half	.L6089-.L726
	.byte	1,5,10,9
	.half	.L6090-.L6089
	.byte	1,5,37,7,9
	.half	.L6091-.L6090
	.byte	3,1,1,5,35,7,9
	.half	.L730-.L6091
	.byte	3,4,1,5,36,9
	.half	.L3710-.L730
	.byte	3,1,1,5,34,9
	.half	.L6092-.L3710
	.byte	1,5,1,9
	.half	.L6093-.L6092
	.byte	3,56,1,5,33,7,9
	.half	.L731-.L6093
	.byte	3,79,1,5,36,9
	.half	.L3714-.L731
	.byte	3,1,1,5,34,9
	.half	.L6094-.L3714
	.byte	1,5,1,9
	.half	.L6095-.L6094
	.byte	3,48,1,5,18,7,9
	.half	.L725-.L6095
	.byte	3,25,1,5,28,9
	.half	.L6096-.L725
	.byte	1,5,30,9
	.half	.L3715-.L6096
	.byte	3,3,1,5,28,9
	.half	.L6097-.L3715
	.byte	1,5,6,9
	.half	.L6098-.L6097
	.byte	3,5,1,5,16,9
	.half	.L6099-.L6098
	.byte	1,5,3,9
	.half	.L6100-.L6099
	.byte	1,5,15,7,9
	.half	.L6101-.L6100
	.byte	3,6,1,5,47,9
	.half	.L6102-.L6101
	.byte	1,5,1,7,9
	.half	.L734-.L6102
	.byte	3,89,1,7,9
	.half	.L1456-.L734
	.byte	0,1,1
.L6081:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lGcErrorHandler')
	.sect	'.debug_ranges'
.L1455:
	.word	-1,.L1146,0,.L1456-.L1146,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lGcRead')
	.sect	'.debug_info'
.L1457:
	.word	463
	.half	3
	.word	.L1458
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1460,.L1459
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lGcRead',0,1,244,71,13,1,1
	.word	.L1148,.L2716,.L1147
	.byte	4
	.byte	'Position',0,1,244,71,54
	.word	.L2717,.L2718
	.byte	4
	.byte	'Offset',0,1,245,71,38
	.word	.L2719,.L2720
	.byte	5
	.word	.L1148,.L2716
	.byte	6
	.byte	'StateDataPtr',0,1,247,71,25
	.word	.L1579,.L2721
	.byte	6
	.byte	'GcReadWriteBufferPtr',0,1,248,71,25
	.word	.L1644,.L2722
	.byte	6
	.byte	'PendingPageCount',0,1,249,71,25
	.word	.L1781,.L2723
	.byte	6
	.byte	'ReadLength',0,1,250,71,32
	.word	.L1589,.L2724
	.byte	6
	.byte	'PendingBlockSize',0,1,251,71,25
	.word	.L1589,.L2725
	.byte	6
	.byte	'GcSrcAddrOffset',0,1,252,71,25
	.word	.L1781,.L2726
	.byte	6
	.byte	'Error',0,1,253,71,23
	.word	.L1592,.L2727
	.byte	6
	.byte	'BlockIndex',0,1,254,71,23
	.word	.L1781,.L2728
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lGcRead')
	.sect	'.debug_abbrev'
.L1458:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lGcRead')
	.sect	'.debug_line'
.L1459:
	.word	.L6104-.L6103
.L6103:
	.half	3
	.word	.L6106-.L6105
.L6105:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6106:
	.byte	5,13,7,0,5,2
	.word	.L1148
	.byte	3,243,199,0,1,5,14,9
	.half	.L3719-.L1148
	.byte	3,13,1,5,18,9
	.half	.L3720-.L3719
	.byte	3,1,1,5,28,9
	.half	.L6107-.L3720
	.byte	1,5,52,9
	.half	.L3721-.L6107
	.byte	3,2,1,5,34,9
	.half	.L6108-.L3721
	.byte	3,1,1,5,63,9
	.half	.L6109-.L6108
	.byte	3,127,1,5,48,9
	.half	.L3722-.L6109
	.byte	3,2,1,5,3,9
	.half	.L3724-.L3722
	.byte	3,2,1,5,28,7,9
	.half	.L6110-.L3724
	.byte	3,3,1,5,53,9
	.half	.L3723-.L6110
	.byte	1,5,25,9
	.half	.L6111-.L3723
	.byte	1,5,41,9
	.half	.L6112-.L6111
	.byte	3,8,1,5,56,9
	.half	.L3725-.L6112
	.byte	3,2,1,5,5,9
	.half	.L6113-.L3725
	.byte	3,127,1,5,41,7,9
	.half	.L6114-.L6113
	.byte	3,3,1,5,7,9
	.half	.L3716-.L6114
	.byte	1,5,11,7,9
	.half	.L6115-.L3716
	.byte	3,3,1,5,59,9
	.half	.L6116-.L6115
	.byte	1,5,62,9
	.half	.L735-.L6116
	.byte	3,9,1,5,59,9
	.half	.L3726-.L735
	.byte	3,3,1,5,3,9
	.half	.L3727-.L3726
	.byte	3,2,1,5,35,7,9
	.half	.L6117-.L3727
	.byte	3,2,1,5,38,9
	.half	.L6118-.L6117
	.byte	3,1,1,5,36,9
	.half	.L6119-.L6118
	.byte	1,5,32,9
	.half	.L6120-.L6119
	.byte	3,1,1,5,30,9
	.half	.L6121-.L6120
	.byte	1,5,1,9
	.half	.L6122-.L6121
	.byte	3,13,1,5,50,7,9
	.half	.L738-.L6122
	.byte	3,120,1,5,25,9
	.half	.L3728-.L738
	.byte	3,6,1,5,38,9
	.half	.L6123-.L3728
	.byte	1,5,1,9
	.half	.L1461-.L6123
	.byte	3,2,0,1,1
.L6104:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lGcRead')
	.sect	'.debug_ranges'
.L1460:
	.word	-1,.L1148,0,.L1461-.L1148,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lGcPrologue')
	.sect	'.debug_info'
.L1462:
	.word	259
	.half	3
	.word	.L1463
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1465,.L1464
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lGcPrologue',0,1,229,73,13,1,1
	.word	.L1152,.L2729,.L1151
	.byte	4
	.word	.L1152,.L2729
	.byte	5
	.byte	'StateDataPtr',0,1,231,73,26
	.word	.L1579,.L2730
	.byte	5
	.byte	'BlockIndex',0,1,232,73,26
	.word	.L1781,.L2731
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lGcPrologue')
	.sect	'.debug_abbrev'
.L1463:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lGcPrologue')
	.sect	'.debug_line'
.L1464:
	.word	.L6125-.L6124
.L6124:
	.half	3
	.word	.L6127-.L6126
.L6126:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6127:
	.byte	5,18,7,0,5,2
	.word	.L1152
	.byte	3,233,201,0,1,5,28,9
	.half	.L6128-.L1152
	.byte	1,5,19,9
	.half	.L3736-.L6128
	.byte	3,2,1,5,3,9
	.half	.L6129-.L3736
	.byte	1,5,21,7,9
	.half	.L6130-.L6129
	.byte	3,3,1,5,5,9
	.half	.L6131-.L6130
	.byte	1,5,38,7,9
	.half	.L6132-.L6131
	.byte	3,3,1,5,22,9
	.half	.L6133-.L6132
	.byte	3,2,1,5,7,9
	.half	.L6134-.L6133
	.byte	1,5,36,7,9
	.half	.L6135-.L6134
	.byte	3,10,1,5,7,9
	.half	.L6136-.L6135
	.byte	3,126,1,5,26,9
	.half	.L743-.L6136
	.byte	3,6,1,5,10,9
	.half	.L6137-.L743
	.byte	1,5,40,7,9
	.half	.L6138-.L6137
	.byte	3,2,1,5,38,9
	.half	.L6139-.L6138
	.byte	1,5,22,9
	.half	.L6140-.L6139
	.byte	3,2,1,5,7,9
	.half	.L6141-.L6140
	.byte	1,5,54,7,9
	.half	.L744-.L6141
	.byte	3,3,1,5,29,9
	.half	.L3737-.L744
	.byte	3,1,1,5,42,9
	.half	.L6142-.L3737
	.byte	1,5,36,9
	.half	.L747-.L6142
	.byte	3,4,1,5,34,9
	.half	.L745-.L747
	.byte	1,5,1,9
	.half	.L742-.L745
	.byte	3,8,1,7,9
	.half	.L1466-.L742
	.byte	0,1,1
.L6125:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lGcPrologue')
	.sect	'.debug_ranges'
.L1465:
	.word	-1,.L1152,0,.L1466-.L1152,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lGcStartCopy')
	.sect	'.debug_info'
.L1467:
	.word	795
	.half	3
	.word	.L1468
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1470,.L1469
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lGcStartCopy',0,1,206,75,13,1,1
	.word	.L1160,.L2732,.L1159
	.byte	4
	.word	.L1160,.L2732
	.byte	5
	.byte	'CachePtr',0,1,208,75,26
	.word	.L1583,.L2733
	.byte	5
	.byte	'UnconfigBlockPtr',0,1,209,75,32
	.word	.L1884,.L2734
	.byte	5
	.byte	'StateDataPtr',0,1,210,75,26
	.word	.L1579,.L2735
	.byte	5
	.byte	'DestAddr',0,1,211,75,26
	.word	.L1589,.L2736
	.byte	5
	.byte	'Offset',0,1,212,75,26
	.word	.L1781,.L2737
	.byte	5
	.byte	'Index',0,1,213,75,26
	.word	.L1781,.L2738
	.byte	5
	.byte	'StateFlag',0,1,214,75,26
	.word	.L1592,.L2739
	.byte	5
	.byte	'Error',0,1,215,75,26
	.word	.L1592,.L2740
	.byte	6
	.word	.L2741,.L2742,.L2743
	.byte	7
	.word	.L2744,.L2745
	.byte	5
	.byte	'StateDataPtr',0,1,213,36,32
	.word	.L1631,.L2749
	.byte	5
	.byte	'RetVal',0,1,214,36,25
	.word	.L1592,.L2750
	.byte	0,0,8
	.word	.L2741,.L769,.L2746
	.byte	8
	.word	.L2741,.L2747,.L2748
	.byte	6
	.word	.L2751,.L2752,.L2753
	.byte	9
	.word	.L2754,.L2752,.L2753
	.byte	5
	.byte	'StateDataPtr',0,1,196,113,25
	.word	.L1579,.L2755
	.byte	5
	.byte	'GcBlkPtr',0,1,197,113,25
	.word	.L1581,.L2756
	.byte	5
	.byte	'ReadWriteBufferPtr',0,1,198,113,31
	.word	.L1622,.L2757
	.byte	5
	.byte	'PageCount',0,1,199,113,25
	.word	.L1781,.L2758
	.byte	5
	.byte	'WordValue',0,1,200,113,25
	.word	.L1589,.L2759
	.byte	5
	.byte	'BlockNumber',0,1,201,113,25
	.word	.L1781,.L2760
	.byte	5
	.byte	'Offset',0,1,202,113,25
	.word	.L1781,.L2761
	.byte	0,0,6
	.word	.L1912,.L773,.L2762
	.byte	10
	.word	.L1915,.L2763
	.byte	11
	.word	.L1917,.L773,.L2762
	.byte	0,6
	.word	.L1684,.L2764,.L780
	.byte	10
	.word	.L1687,.L2765
	.byte	9
	.word	.L1689,.L2764,.L780
	.byte	6
	.word	.L1690,.L2764,.L2766
	.byte	10
	.word	.L1691,.L2767
	.byte	11
	.word	.L1693,.L2764,.L2766
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lGcStartCopy')
	.sect	'.debug_abbrev'
.L1468:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1,49,16
	.byte	17,1,18,1,0,0,7,11,1,49,16,85,6,0,0,8,29,0,49,16,17,1,18,1,0,0,9,11,1,49,16,17,1,18,1,0,0,10,5,0,49,16
	.byte	2,6,0,0,11,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lGcStartCopy')
	.sect	'.debug_line'
.L1469:
	.word	.L6144-.L6143
.L6143:
	.half	3
	.word	.L6146-.L6145
.L6145:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6146:
	.byte	5,18,7,0,5,2
	.word	.L1160
	.byte	3,216,203,0,1,5,28,9
	.half	.L6147-.L1160
	.byte	1,5,19,9
	.half	.L3756-.L6147
	.byte	3,3,1,5,3,9
	.half	.L6148-.L3756
	.byte	1,5,38,7,9
	.half	.L6149-.L6148
	.byte	3,2,1,5,36,9
	.half	.L6150-.L6149
	.byte	1,5,20,9
	.half	.L6151-.L6150
	.byte	3,2,1,5,5,9
	.half	.L6152-.L6151
	.byte	1,5,67,7,9
	.half	.L6153-.L6152
	.byte	3,2,1,5,13,9
	.half	.L3757-.L6153
	.byte	1,5,80,9
	.half	.L3758-.L3757
	.byte	1,5,22,9
	.half	.L764-.L3758
	.byte	3,6,1,5,7,9
	.half	.L6154-.L764
	.byte	1,5,36,7,9
	.half	.L6155-.L6154
	.byte	3,2,1,5,53,9
	.half	.L6156-.L6155
	.byte	1,5,36,9
	.half	.L766-.L6156
	.byte	3,4,1,5,5,9
	.half	.L6157-.L766
	.byte	3,119,1,5,36,9
	.half	.L763-.L6157
	.byte	3,17,1,5,20,9
	.half	.L3759-.L763
	.byte	3,5,1,5,36,9
	.half	.L6158-.L3759
	.byte	1,5,5,9
	.half	.L6159-.L6158
	.byte	1,5,18,7,9
	.half	.L2742-.L6159
	.byte	3,221,88,1,5,28,9
	.half	.L6160-.L2742
	.byte	1,5,18,9
	.half	.L3760-.L6160
	.byte	3,4,1,5,19,9
	.half	.L6161-.L3760
	.byte	3,1,1,5,46,9
	.half	.L6162-.L6161
	.byte	3,127,1,5,48,9
	.half	.L2743-.L6162
	.byte	3,162,39,1,5,38,9
	.half	.L769-.L2743
	.byte	3,6,1,5,7,9
	.half	.L3761-.L769
	.byte	3,2,1,5,40,7,9
	.half	.L2746-.L3761
	.byte	3,4,1,5,9,9
	.half	.L6163-.L2746
	.byte	1,5,55,7,9
	.half	.L6164-.L6163
	.byte	3,2,1,5,42,9
	.half	.L6165-.L6164
	.byte	3,1,1,5,40,9
	.half	.L6166-.L6165
	.byte	1,5,42,9
	.half	.L2747-.L6166
	.byte	3,2,1,5,5,9
	.half	.L770-.L2747
	.byte	3,7,1,5,22,7,9
	.half	.L2748-.L770
	.byte	3,3,1,5,38,9
	.half	.L6167-.L2748
	.byte	1,5,7,9
	.half	.L6168-.L6167
	.byte	1,5,58,7,9
	.half	.L6169-.L6168
	.byte	3,3,1,5,68,9
	.half	.L6170-.L6169
	.byte	1,5,45,9
	.half	.L6171-.L6170
	.byte	3,1,1,5,30,9
	.half	.L6172-.L6171
	.byte	1,5,56,9
	.half	.L6173-.L6172
	.byte	3,127,1,5,54,9
	.half	.L6174-.L6173
	.byte	3,3,1,5,36,9
	.half	.L6175-.L6174
	.byte	1,5,29,9
	.half	.L6176-.L6175
	.byte	3,4,1,5,75,9
	.half	.L3762-.L6176
	.byte	3,122,1,5,61,9
	.half	.L774-.L3762
	.byte	3,12,1,5,48,9
	.half	.L6177-.L774
	.byte	1,5,46,9
	.half	.L6178-.L6177
	.byte	3,1,1,5,36,9
	.half	.L6179-.L6178
	.byte	1,5,29,9
	.half	.L6180-.L6179
	.byte	3,4,1,5,39,9
	.half	.L775-.L6180
	.byte	3,2,1,5,37,9
	.half	.L6181-.L775
	.byte	1,5,35,9
	.half	.L6182-.L6181
	.byte	3,1,1,5,7,9
	.half	.L3763-.L6182
	.byte	3,2,1,5,39,7,9
	.half	.L6183-.L3763
	.byte	3,2,1,5,56,9
	.half	.L776-.L6183
	.byte	3,12,1,5,67,9
	.half	.L6184-.L776
	.byte	3,1,1,5,20,9
	.half	.L6185-.L6184
	.byte	3,1,1,5,7,9
	.half	.L3764-.L6185
	.byte	3,3,1,5,18,7,9
	.half	.L2752-.L3764
	.byte	3,136,37,1,5,28,9
	.half	.L6186-.L2752
	.byte	1,5,34,9
	.half	.L3766-.L6186
	.byte	3,2,1,5,51,9
	.half	.L6187-.L3766
	.byte	1,5,60,9
	.half	.L3767-.L6187
	.byte	3,1,1,5,15,9
	.half	.L6188-.L3767
	.byte	3,5,1,5,36,9
	.half	.L3768-.L6188
	.byte	3,1,1,5,15,9
	.half	.L3770-.L3768
	.byte	3,4,1,5,26,9
	.half	.L6189-.L3770
	.byte	3,1,1,5,32,9
	.half	.L3771-.L6189
	.byte	3,3,1,5,18,9
	.half	.L3765-.L3771
	.byte	1,5,25,9
	.half	.L6190-.L3765
	.byte	3,1,1,5,23,9
	.half	.L6191-.L6190
	.byte	3,1,1,5,26,9
	.half	.L6192-.L6191
	.byte	3,1,1,5,24,9
	.half	.L3769-.L6192
	.byte	1,5,34,9
	.half	.L2753-.L3769
	.byte	3,234,90,1,5,51,9
	.half	.L6193-.L2753
	.byte	1,5,29,9
	.half	.L765-.L6193
	.byte	3,7,1,5,42,9
	.half	.L6194-.L765
	.byte	1,5,18,9
	.half	.L773-.L6194
	.byte	3,167,84,1,5,7,9
	.half	.L2762-.L773
	.byte	3,226,43,1,5,18,7,9
	.half	.L2764-.L2762
	.byte	3,186,84,1,5,41,9
	.half	.L2766-.L2764
	.byte	3,27,1,5,37,9
	.half	.L780-.L2766
	.byte	3,175,43,1,5,35,9
	.half	.L3774-.L780
	.byte	3,1,1,5,43,9
	.half	.L6195-.L3774
	.byte	3,3,1,5,41,9
	.half	.L3775-.L6195
	.byte	1,5,22,9
	.half	.L6196-.L3775
	.byte	3,2,1,5,7,9
	.half	.L6197-.L6196
	.byte	1,5,50,7,9
	.half	.L782-.L6197
	.byte	3,9,1,5,31,9
	.half	.L3777-.L782
	.byte	3,1,1,5,11,9
	.half	.L6198-.L3777
	.byte	1,5,41,7,9
	.half	.L6199-.L6198
	.byte	3,3,1,5,39,9
	.half	.L6200-.L6199
	.byte	1,5,21,9
	.half	.L6201-.L6200
	.byte	3,1,1,5,44,9
	.half	.L6202-.L6201
	.byte	1,5,16,9
	.half	.L783-.L6202
	.byte	3,4,1,5,25,9
	.half	.L3779-.L783
	.byte	3,1,1,5,35,9
	.half	.L6203-.L3779
	.byte	1,5,47,9
	.half	.L6204-.L6203
	.byte	1,5,36,7,9
	.half	.L6205-.L6204
	.byte	3,3,1,5,60,9
	.half	.L6206-.L6205
	.byte	1,5,36,9
	.half	.L781-.L6206
	.byte	3,6,1,5,34,9
	.half	.L784-.L781
	.byte	1,5,1,9
	.half	.L6207-.L784
	.byte	3,4,1,7,9
	.half	.L1471-.L6207
	.byte	0,1,1
.L6144:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lGcStartCopy')
	.sect	'.debug_ranges'
.L1470:
	.word	-1,.L1160,0,.L1471-.L1160,0,0
.L2745:
	.word	-1,.L1160,.L2742-.L1160,.L2743-.L1160,.L769-.L1160,.L2746-.L1160,.L2747-.L1160,.L2748-.L1160,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lGcDiscardUnconfigBlk')
	.sect	'.debug_info'
.L1472:
	.word	337
	.half	3
	.word	.L1473
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1475,.L1474
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lGcDiscardUnconfigBlk',0,1,174,74,13,1,1
	.word	.L1154,.L2768,.L1153
	.byte	4
	.byte	'Index',0,1,174,74,52
	.word	.L2769,.L2770
	.byte	5
	.word	.L1154,.L2768
	.byte	6
	.byte	'StateDataPtr',0,1,176,74,26
	.word	.L1579,.L2771
	.byte	6
	.byte	'UnconfigBlockPtr',0,1,177,74,26
	.word	.L1583,.L2772
	.byte	6
	.byte	'BlockIndex',0,1,178,74,26
	.word	.L1781,.L2773
	.byte	6
	.byte	'Count',0,1,179,74,26
	.word	.L1781,.L2774
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lGcDiscardUnconfigBlk')
	.sect	'.debug_abbrev'
.L1473:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lGcDiscardUnconfigBlk')
	.sect	'.debug_line'
.L1474:
	.word	.L6209-.L6208
.L6208:
	.half	3
	.word	.L6211-.L6210
.L6210:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6211:
	.byte	5,18,7,0,5,2
	.word	.L1154
	.byte	3,180,202,0,1,5,28,9
	.half	.L6212-.L1154
	.byte	1,5,6,9
	.half	.L3740-.L6212
	.byte	3,5,1,5,3,9
	.half	.L6213-.L3740
	.byte	1,5,52,7,9
	.half	.L6214-.L6213
	.byte	3,3,1,5,23,9
	.half	.L3741-.L6214
	.byte	3,127,1,5,16,9
	.half	.L749-.L3741
	.byte	3,6,1,5,53,9
	.half	.L6215-.L749
	.byte	3,1,1,5,63,9
	.half	.L6216-.L6215
	.byte	1,5,52,9
	.half	.L6217-.L6216
	.byte	1,5,42,9
	.half	.L3742-.L6217
	.byte	3,3,1,5,17,9
	.half	.L752-.L3742
	.byte	3,2,1,5,23,9
	.half	.L3743-.L752
	.byte	3,1,1,5,38,9
	.half	.L751-.L3743
	.byte	3,123,1,5,11,9
	.half	.L6218-.L751
	.byte	1,5,42,7,9
	.half	.L6219-.L6218
	.byte	3,1,1,5,28,9
	.half	.L6220-.L6219
	.byte	3,1,1,5,55,9
	.half	.L6221-.L6220
	.byte	3,127,1,5,16,7,9
	.half	.L750-.L6221
	.byte	3,10,1,5,40,9
	.half	.L6222-.L750
	.byte	1,5,9,9
	.half	.L6223-.L6222
	.byte	3,1,1,5,59,9
	.half	.L3745-.L6223
	.byte	3,2,1,5,21,9
	.half	.L755-.L3745
	.byte	3,3,1,5,40,9
	.half	.L6224-.L755
	.byte	3,1,1,5,41,9
	.half	.L6225-.L6224
	.byte	3,127,1,5,40,9
	.half	.L6226-.L6225
	.byte	3,4,1,5,37,9
	.half	.L6227-.L6226
	.byte	3,127,1,5,15,9
	.half	.L6228-.L6227
	.byte	3,3,1,5,11,9
	.half	.L3747-.L6228
	.byte	3,1,1,5,35,9
	.half	.L754-.L3747
	.byte	3,118,1,5,59,9
	.half	.L6229-.L754
	.byte	1,5,1,7,9
	.half	.L6230-.L6229
	.byte	3,13,1,7,9
	.half	.L1476-.L6230
	.byte	0,1,1
.L6209:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lGcDiscardUnconfigBlk')
	.sect	'.debug_ranges'
.L1475:
	.word	-1,.L1154,0,.L1476-.L1154,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lGcDiscardConfigBlk')
	.sect	'.debug_info'
.L1477:
	.word	262
	.half	3
	.word	.L1478
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1480,.L1479
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lGcDiscardConfigBlk',0,1,249,74,13,1,1
	.word	.L1156,.L2775,.L1155
	.byte	4
	.byte	'Index',0,1,249,74,50
	.word	.L2776,.L2777
	.byte	5
	.word	.L1156,.L2775
	.byte	6
	.byte	'StateDataPtr',0,1,251,74,26
	.word	.L1579,.L2778
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lGcDiscardConfigBlk')
	.sect	'.debug_abbrev'
.L1478:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lGcDiscardConfigBlk')
	.sect	'.debug_line'
.L1479:
	.word	.L6232-.L6231
.L6231:
	.half	3
	.word	.L6234-.L6233
.L6233:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6234:
	.byte	5,18,7,0,5,2
	.word	.L1156
	.byte	3,251,202,0,1,5,28,9
	.half	.L6235-.L1156
	.byte	1,5,29,9
	.half	.L3748-.L6235
	.byte	3,3,1,5,43,9
	.half	.L3749-.L3748
	.byte	1,5,55,9
	.half	.L6236-.L3749
	.byte	1,5,47,9
	.half	.L6237-.L6236
	.byte	3,1,1,5,45,9
	.half	.L6238-.L6237
	.byte	1,5,1,9
	.half	.L6239-.L6238
	.byte	3,1,1,7,9
	.half	.L1481-.L6239
	.byte	0,1,1
.L6232:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lGcDiscardConfigBlk')
	.sect	'.debug_ranges'
.L1480:
	.word	-1,.L1156,0,.L1481-.L1156,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lClearFeeGcReadWriteBuffer')
	.sect	'.debug_info'
.L1482:
	.word	327
	.half	3
	.word	.L1483
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1485,.L1484
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lClearFeeGcReadWriteBuffer',0,1,233,107,13,1,1
	.word	.L1194,.L2779,.L1193
	.byte	4
	.word	.L1194,.L2779
	.byte	5
	.byte	'StateDataPtr',0,1,235,107,23
	.word	.L1579,.L2780
	.byte	5
	.byte	'GcReadWriteBuffPtr',0,1,236,107,23
	.word	.L2120,.L2781
	.byte	5
	.byte	'DataByteCnt',0,1,237,107,23
	.word	.L1781,.L2782
	.byte	5
	.byte	'Length',0,1,238,107,23
	.word	.L1589,.L2783
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lClearFeeGcReadWriteBuffer')
	.sect	'.debug_abbrev'
.L1483:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lClearFeeGcReadWriteBuffer')
	.sect	'.debug_line'
.L1484:
	.word	.L6241-.L6240
.L6240:
	.half	3
	.word	.L6243-.L6242
.L6242:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6243:
	.byte	5,15,7,0,5,2
	.word	.L1194
	.byte	3,239,235,0,1,5,18,9
	.half	.L4042-.L1194
	.byte	3,1,1,5,28,9
	.half	.L6244-.L4042
	.byte	1,5,46,9
	.half	.L4043-.L6244
	.byte	3,3,1,5,10,9
	.half	.L4044-.L4043
	.byte	3,1,1,5,39,9
	.half	.L4045-.L4044
	.byte	3,5,1,5,23,9
	.half	.L1048-.L4045
	.byte	1,5,37,9
	.half	.L4046-.L1048
	.byte	1,5,16,9
	.half	.L4047-.L4046
	.byte	3,1,1,5,34,9
	.half	.L6245-.L4047
	.byte	3,1,1,5,1,7,9
	.half	.L6246-.L6245
	.byte	3,1,1,7,9
	.half	.L1486-.L6246
	.byte	0,1,1
.L6241:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lClearFeeGcReadWriteBuffer')
	.sect	'.debug_ranges'
.L1485:
	.word	-1,.L1194,0,.L1486-.L1194,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lHandleInitGcFail')
	.sect	'.debug_info'
.L1487:
	.word	241
	.half	3
	.word	.L1488
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1490,.L1489
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lHandleInitGcFail',0,1,146,108,13,1,1
	.word	.L1196,.L2784,.L1195
	.byte	4
	.word	.L1196,.L2784
	.byte	5
	.byte	'StateDataPtr',0,1,148,108,26
	.word	.L1579,.L2785
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lHandleInitGcFail')
	.sect	'.debug_abbrev'
.L1488:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lHandleInitGcFail')
	.sect	'.debug_line'
.L1489:
	.word	.L6248-.L6247
.L6247:
	.half	3
	.word	.L6250-.L6249
.L6249:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6250:
	.byte	5,18,7,0,5,2
	.word	.L1196
	.byte	3,149,236,0,1,5,28,9
	.half	.L6251-.L1196
	.byte	1,5,34,9
	.half	.L4048-.L6251
	.byte	3,3,1,5,32,9
	.half	.L6252-.L4048
	.byte	1,5,6,9
	.half	.L6253-.L6252
	.byte	3,16,1,5,16,9
	.half	.L6254-.L6253
	.byte	1,5,3,9
	.half	.L6255-.L6254
	.byte	1,5,15,7,9
	.half	.L6256-.L6255
	.byte	3,6,1,5,47,9
	.half	.L6257-.L6256
	.byte	1,5,1,7,9
	.half	.L1049-.L6257
	.byte	3,2,1,7,9
	.half	.L1491-.L1049
	.byte	0,1,1
.L6248:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lHandleInitGcFail')
	.sect	'.debug_ranges'
.L1490:
	.word	-1,.L1196,0,.L1491-.L1196,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lGcCopyReadNxtPage')
	.sect	'.debug_info'
.L1492:
	.word	356
	.half	3
	.word	.L1493
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1495,.L1494
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lGcCopyReadNxtPage',0,1,143,78,13,1,1
	.word	.L1164,.L2786,.L1163
	.byte	4
	.word	.L1164,.L2786
	.byte	5
	.byte	'SrcAddr',0,1,145,78,26
	.word	.L1589,.L2787
	.byte	5
	.byte	'StateDataPtr',0,1,146,78,26
	.word	.L1579,.L2788
	.byte	5
	.byte	'Offset',0,1,147,78,26
	.word	.L1781,.L2789
	.byte	6
	.word	.L1684,.L825,.L824
	.byte	7
	.word	.L1687,.L2790
	.byte	8
	.word	.L1689,.L825,.L824
	.byte	6
	.word	.L1690,.L825,.L2791
	.byte	7
	.word	.L1691,.L2792
	.byte	9
	.word	.L1693,.L825,.L2791
	.byte	0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lGcCopyReadNxtPage')
	.sect	'.debug_abbrev'
.L1493:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1,49,16
	.byte	17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lGcCopyReadNxtPage')
	.sect	'.debug_line'
.L1494:
	.word	.L6259-.L6258
.L6258:
	.half	3
	.word	.L6261-.L6260
.L6260:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6261:
	.byte	5,18,7,0,5,2
	.word	.L1164
	.byte	3,148,206,0,1,5,28,9
	.half	.L6262-.L1164
	.byte	1,5,35,9
	.half	.L3819-.L6262
	.byte	3,5,1,5,52,9
	.half	.L6263-.L3819
	.byte	1,5,25,9
	.half	.L3820-.L6263
	.byte	3,2,1,5,47,9
	.half	.L3821-.L3820
	.byte	3,2,1,5,18,9
	.half	.L825-.L3821
	.byte	3,248,82,1,5,41,9
	.half	.L2791-.L825
	.byte	3,27,1,5,31,9
	.half	.L824-.L2791
	.byte	3,237,44,1,5,47,9
	.half	.L6264-.L824
	.byte	1,5,30,7,9
	.half	.L6265-.L6264
	.byte	3,4,1,5,69,9
	.half	.L6266-.L6265
	.byte	3,2,1,5,1,9
	.half	.L1496-.L6266
	.byte	3,1,0,1,1
.L6259:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lGcCopyReadNxtPage')
	.sect	'.debug_ranges'
.L1495:
	.word	-1,.L1164,0,.L1496-.L1164,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lGarbageCollection')
	.sect	'.debug_info'
.L1497:
	.word	584
	.half	3
	.word	.L1498
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1500,.L1499
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lGarbageCollection',0,1,223,86,13,1,1
	.word	.L1170,.L2793,.L1169
	.byte	4
	.word	.L1170,.L2793
	.byte	5
	.byte	'StateDataPtr',0,1,225,86,26
	.word	.L1579,.L2794
	.byte	5
	.byte	'Error',0,1,226,86,26
	.word	.L1592,.L2795
	.byte	6
	.word	.L2796,.L2797,.L917
	.byte	7
	.word	.L2798,.L2797,.L917
	.byte	5
	.byte	'CachePtr',0,1,140,73,26
	.word	.L1583,.L2799
	.byte	5
	.byte	'StateDataPtr',0,1,141,73,26
	.word	.L1579,.L2800
	.byte	5
	.byte	'UnconfigBlockPtr',0,1,142,73,26
	.word	.L1583,.L2801
	.byte	5
	.byte	'BlockCount',0,1,143,73,26
	.word	.L1781,.L2802
	.byte	5
	.byte	'GcState',0,1,144,73,26
	.word	.L1592,.L2803
	.byte	0,0,6
	.word	.L2804,.L917,.L932
	.byte	8
	.word	.L2805,.L2806
	.byte	5
	.byte	'StateDataPtr',0,1,194,149,1,29
	.word	.L1631,.L2816
	.byte	8
	.word	.L2817,.L2818
	.byte	5
	.byte	'Error',0,1,196,149,1,26
	.word	.L1592,.L2820
	.byte	0,0,0,9
	.word	.L2804,.L2807,.L933
	.byte	9
	.word	.L2804,.L2808,.L934
	.byte	9
	.word	.L2804,.L2809,.L935
	.byte	9
	.word	.L2804,.L2810,.L936
	.byte	9
	.word	.L2804,.L2811,.L937
	.byte	9
	.word	.L2804,.L2812,.L2813
	.byte	9
	.word	.L2804,.L2814,.L2815
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lGarbageCollection')
	.sect	'.debug_abbrev'
.L1498:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1,49,16
	.byte	17,1,18,1,0,0,7,11,1,49,16,17,1,18,1,0,0,8,11,1,49,16,85,6,0,0,9,29,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lGarbageCollection')
	.sect	'.debug_line'
.L1499:
	.word	.L6268-.L6267
.L6267:
	.half	3
	.word	.L6270-.L6269
.L6269:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6270:
	.byte	5,18,7,0,5,2
	.word	.L1170
	.byte	3,227,214,0,1,5,28,9
	.half	.L6271-.L1170
	.byte	1,5,18,9
	.half	.L3906-.L6271
	.byte	3,4,1,9
	.half	.L6272-.L3906
	.byte	3,9,1,5,3,9
	.half	.L6273-.L6272
	.byte	1,5,18,7,9
	.half	.L2797-.L6273
	.byte	3,161,114,1,5,28,9
	.half	.L6274-.L2797
	.byte	1,5,26,9
	.half	.L3907-.L6274
	.byte	3,2,1,5,14,9
	.half	.L3908-.L3907
	.byte	3,1,1,5,25,9
	.half	.L3910-.L3908
	.byte	3,9,1,5,21,9
	.half	.L918-.L3910
	.byte	3,123,1,5,29,9
	.half	.L6275-.L918
	.byte	1,5,37,9
	.half	.L6276-.L6275
	.byte	3,1,1,5,15,9
	.half	.L6277-.L6276
	.byte	3,1,1,5,13,9
	.half	.L3912-.L6277
	.byte	3,2,1,5,25,9
	.half	.L6278-.L3912
	.byte	3,1,1,5,35,9
	.half	.L6279-.L6278
	.byte	1,5,47,9
	.half	.L6280-.L6279
	.byte	1,5,34,7,9
	.half	.L6281-.L6280
	.byte	3,3,1,5,3,9
	.half	.L6282-.L6281
	.byte	1,5,65,7,9
	.half	.L6283-.L6282
	.byte	3,2,1,5,33,9
	.half	.L6284-.L6283
	.byte	1,5,34,9
	.half	.L6285-.L6284
	.byte	3,1,1,5,80,9
	.half	.L6286-.L6285
	.byte	3,127,1,5,65,9
	.half	.L919-.L6286
	.byte	3,5,1,5,33,9
	.half	.L6287-.L919
	.byte	1,5,34,9
	.half	.L6288-.L6287
	.byte	3,1,1,5,32,9
	.half	.L920-.L6288
	.byte	1,5,35,9
	.half	.L6289-.L920
	.byte	3,2,1,5,33,9
	.half	.L6290-.L6289
	.byte	1,5,31,9
	.half	.L6291-.L6290
	.byte	3,1,1,5,47,9
	.half	.L6292-.L6291
	.byte	1,5,32,9
	.half	.L6293-.L6292
	.byte	3,1,1,5,11,9
	.half	.L6294-.L6293
	.byte	3,3,1,5,35,9
	.half	.L3914-.L6294
	.byte	3,2,1,5,8,9
	.half	.L6295-.L3914
	.byte	3,6,1,5,38,9
	.half	.L6296-.L6295
	.byte	1,5,7,9
	.half	.L6297-.L6296
	.byte	1,5,23,7,9
	.half	.L6298-.L6297
	.byte	3,2,1,5,47,9
	.half	.L6299-.L6298
	.byte	1,5,56,7,9
	.half	.L6300-.L6299
	.byte	3,7,1,5,59,9
	.half	.L6301-.L6300
	.byte	3,125,1,5,56,9
	.half	.L924-.L6301
	.byte	3,3,1,5,66,9
	.half	.L6302-.L924
	.byte	1,5,28,9
	.half	.L6303-.L6302
	.byte	3,1,1,5,54,9
	.half	.L6304-.L6303
	.byte	3,127,1,5,31,9
	.half	.L6305-.L6304
	.byte	3,2,1,5,39,9
	.half	.L6306-.L6305
	.byte	1,5,17,9
	.half	.L6307-.L6306
	.byte	3,1,1,5,36,9
	.half	.L923-.L6307
	.byte	3,122,1,5,59,9
	.half	.L6308-.L923
	.byte	1,5,47,7,9
	.half	.L6309-.L6308
	.byte	3,9,1,5,45,9
	.half	.L6310-.L6309
	.byte	1,5,13,9
	.half	.L6311-.L6310
	.byte	3,1,1,5,28,9
	.half	.L921-.L6311
	.byte	3,3,1,5,18,9
	.half	.L917-.L921
	.byte	3,248,203,0,1,5,28,9
	.half	.L6312-.L917
	.byte	1,5,9,9
	.half	.L2819-.L6312
	.byte	3,2,1,5,18,9
	.half	.L3915-.L2819
	.byte	3,7,1,5,34,9
	.half	.L6313-.L3915
	.byte	1,5,3,9
	.half	.L6314-.L6313
	.byte	1,5,21,7,9
	.half	.L6315-.L6314
	.byte	3,3,1,5,18,9
	.half	.L925-.L6315
	.byte	3,9,1,5,3,9
	.half	.L6316-.L925
	.byte	1,5,34,7,9
	.half	.L6317-.L6316
	.byte	3,3,1,5,11,9
	.half	.L3916-.L6317
	.byte	1,5,18,9
	.half	.L926-.L3916
	.byte	3,6,1,5,3,9
	.half	.L6318-.L926
	.byte	1,5,27,7,9
	.half	.L6319-.L6318
	.byte	3,2,1,5,18,9
	.half	.L927-.L6319
	.byte	3,8,1,5,3,9
	.half	.L6320-.L927
	.byte	1,5,21,7,9
	.half	.L6321-.L6320
	.byte	3,3,1,5,18,9
	.half	.L928-.L6321
	.byte	3,8,1,5,3,9
	.half	.L6322-.L928
	.byte	1,5,34,7,9
	.half	.L6323-.L6322
	.byte	3,3,1,5,11,9
	.half	.L3917-.L6323
	.byte	1,5,18,9
	.half	.L929-.L3917
	.byte	3,7,1,5,3,9
	.half	.L6324-.L929
	.byte	1,5,27,7,9
	.half	.L6325-.L6324
	.byte	3,3,1,5,18,9
	.half	.L930-.L6325
	.byte	3,7,1,5,34,9
	.half	.L6326-.L930
	.byte	1,5,3,9
	.half	.L6327-.L6326
	.byte	1,5,37,7,9
	.half	.L6328-.L6327
	.byte	3,3,1,5,11,9
	.half	.L3918-.L6328
	.byte	1,5,18,9
	.half	.L931-.L3918
	.byte	3,7,1,5,34,9
	.half	.L6329-.L931
	.byte	1,5,3,9
	.half	.L6330-.L6329
	.byte	1,5,37,7,9
	.half	.L6331-.L6330
	.byte	3,3,1,5,11,9
	.half	.L3919-.L6331
	.byte	1,5,19,9
	.half	.L932-.L3919
	.byte	3,236,64,1,5,3,9
	.half	.L6332-.L932
	.byte	1,5,36,7,9
	.half	.L6333-.L6332
	.byte	3,3,1,5,11,9
	.half	.L2807-.L6333
	.byte	1,5,19,9
	.half	.L933-.L2807
	.byte	3,2,1,5,3,9
	.half	.L6334-.L933
	.byte	1,5,36,7,9
	.half	.L6335-.L6334
	.byte	3,3,1,5,11,9
	.half	.L2808-.L6335
	.byte	1,5,19,9
	.half	.L934-.L2808
	.byte	3,8,1,5,35,9
	.half	.L6336-.L934
	.byte	1,5,3,9
	.half	.L6337-.L6336
	.byte	1,5,37,7,9
	.half	.L6338-.L6337
	.byte	3,3,1,5,11,9
	.half	.L2809-.L6338
	.byte	1,5,19,9
	.half	.L935-.L2809
	.byte	3,3,1,5,35,9
	.half	.L6339-.L935
	.byte	1,5,3,9
	.half	.L6340-.L6339
	.byte	1,5,37,7,9
	.half	.L6341-.L6340
	.byte	3,3,1,5,11,9
	.half	.L2810-.L6341
	.byte	1,5,19,9
	.half	.L936-.L2810
	.byte	3,7,1,5,35,9
	.half	.L6342-.L936
	.byte	1,5,3,9
	.half	.L6343-.L6342
	.byte	1,5,37,7,9
	.half	.L6344-.L6343
	.byte	3,3,1,5,11,9
	.half	.L2811-.L6344
	.byte	1,5,19,9
	.half	.L937-.L2811
	.byte	3,3,1,5,35,9
	.half	.L6345-.L937
	.byte	1,5,3,9
	.half	.L6346-.L6345
	.byte	1,5,37,7,9
	.half	.L6347-.L6346
	.byte	3,3,1,5,11,9
	.half	.L2812-.L6347
	.byte	1,5,3,9
	.half	.L938-.L2812
	.byte	3,14,1,5,38,7,9
	.half	.L2813-.L938
	.byte	3,3,1,5,36,9
	.half	.L6348-.L2813
	.byte	1,5,38,9
	.half	.L6349-.L6348
	.byte	3,1,1,5,36,9
	.half	.L6350-.L6349
	.byte	1,5,30,9
	.half	.L6351-.L6350
	.byte	3,1,1,5,32,9
	.half	.L6352-.L6351
	.byte	3,7,1,5,1,9
	.half	.L939-.L6352
	.byte	3,2,1,7,9
	.half	.L1501-.L939
	.byte	0,1,1
.L6268:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lGarbageCollection')
	.sect	'.debug_ranges'
.L1500:
	.word	-1,.L1170,0,.L1501-.L1170,0,0
.L2806:
	.word	-1,.L1170,.L917-.L1170,.L932-.L1170,.L2807-.L1170,.L933-.L1170,.L2808-.L1170,.L934-.L1170,.L2809-.L1170
	.word	.L935-.L1170,.L2810-.L1170,.L936-.L1170,.L2811-.L1170,.L937-.L1170,.L2812-.L1170,.L2813-.L1170,.L2814-.L1170
	.word	.L2815-.L1170,0,0
.L2818:
	.word	-1,.L1170,.L2819-.L1170,.L932-.L1170,.L2807-.L1170,.L933-.L1170,.L2808-.L1170,.L934-.L1170,.L2809-.L1170
	.word	.L935-.L1170,.L2810-.L1170,.L936-.L1170,.L2811-.L1170,.L937-.L1170,.L2812-.L1170,.L2813-.L1170,.L2814-.L1170
	.word	.L2815-.L1170,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lUpdateNonZeroWLInfo')
	.sect	'.debug_info'
.L1502:
	.word	294
	.half	3
	.word	.L1503
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1505,.L1504
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lUpdateNonZeroWLInfo',0,1,192,103,13,1,1
	.word	.L1182,.L2821,.L1181
	.byte	4
	.byte	'SectorInfoPtr',0,1,192,103,64
	.word	.L2822,.L2823
	.byte	4
	.byte	'SrcAddr',0,1,193,103,51
	.word	.L2824,.L2825
	.byte	5
	.word	.L1182,.L2821
	.byte	6
	.byte	'NonZeroWlCount',0,1,195,103,10
	.word	.L1589,.L2826
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lUpdateNonZeroWLInfo')
	.sect	'.debug_abbrev'
.L1503:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lUpdateNonZeroWLInfo')
	.sect	'.debug_line'
.L1504:
	.word	.L6354-.L6353
.L6353:
	.half	3
	.word	.L6356-.L6355
.L6355:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6356:
	.byte	5,33,7,0,5,2
	.word	.L1182
	.byte	3,195,231,0,1,5,3,9
	.half	.L4013-.L1182
	.byte	3,5,1,5,33,7,9
	.half	.L6357-.L4013
	.byte	3,2,1,5,50,9
	.half	.L6358-.L6357
	.byte	1,5,16,9
	.half	.L1033-.L6358
	.byte	3,4,1,5,32,9
	.half	.L4014-.L1033
	.byte	1,5,1,9
	.half	.L6359-.L4014
	.byte	3,1,1,7,9
	.half	.L1506-.L6359
	.byte	0,1,1
.L6354:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lUpdateNonZeroWLInfo')
	.sect	'.debug_ranges'
.L1505:
	.word	-1,.L1182,0,.L1506-.L1182,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lIsReadAllowedbyGC')
	.sect	'.debug_info'
.L1507:
	.word	266
	.half	3
	.word	.L1508
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1510,.L1509
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lIsReadAllowedbyGC',0,1,185,37,16
	.word	.L1592
	.byte	1,1
	.word	.L1118,.L2827,.L1117
	.byte	4
	.word	.L1118,.L2827
	.byte	5
	.byte	'StateDataPtr',0,1,192,37,28
	.word	.L1631,.L2828
	.byte	5
	.byte	'RetVal',0,1,194,37,22
	.word	.L1592,.L2829
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lIsReadAllowedbyGC')
	.sect	'.debug_abbrev'
.L1508:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lIsReadAllowedbyGC')
	.sect	'.debug_line'
.L1509:
	.word	.L6361-.L6360
.L6360:
	.half	3
	.word	.L6363-.L6362
.L6362:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6363:
	.byte	5,18,7,0,5,2
	.word	.L1118
	.byte	3,195,37,1,5,28,9
	.half	.L6364-.L1118
	.byte	1,5,10,9
	.half	.L3345-.L6364
	.byte	3,2,1,5,18,9
	.half	.L3346-.L3345
	.byte	3,5,1,5,3,9
	.half	.L6365-.L3346
	.byte	1,5,40,7,9
	.half	.L6366-.L6365
	.byte	3,9,1,5,11,9
	.half	.L6367-.L6366
	.byte	1,5,24,7,9
	.half	.L6368-.L6367
	.byte	3,1,1,5,43,9
	.half	.L6369-.L6368
	.byte	1,5,24,7,9
	.half	.L279-.L6369
	.byte	3,9,1,5,11,9
	.half	.L6370-.L279
	.byte	1,5,24,7,9
	.half	.L6371-.L6370
	.byte	3,1,1,5,43,9
	.half	.L6372-.L6371
	.byte	1,5,24,7,9
	.half	.L281-.L6372
	.byte	3,9,1,5,11,9
	.half	.L6373-.L281
	.byte	1,5,38,7,9
	.half	.L6374-.L6373
	.byte	3,1,1,5,20,7,9
	.half	.L283-.L6374
	.byte	3,4,1,5,5,9
	.half	.L6375-.L283
	.byte	1,5,14,7,9
	.half	.L278-.L6375
	.byte	3,31,1,5,1,9
	.half	.L284-.L278
	.byte	3,10,1,7,9
	.half	.L1511-.L284
	.byte	0,1,1
.L6361:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lIsReadAllowedbyGC')
	.sect	'.debug_ranges'
.L1510:
	.word	-1,.L1118,0,.L1511-.L1118,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lIsWriteInvldAllowedbyGC')
	.sect	'.debug_info'
.L1512:
	.word	922
	.half	3
	.word	.L1513
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1515,.L1514
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lIsWriteInvldAllowedbyGC',0,1,180,38,16
	.word	.L1592
	.byte	1,1
	.word	.L1120,.L2830,.L1119
	.byte	4
	.word	.L1120,.L2830
	.byte	5
	.byte	'StateDataPtr',0,1,186,38,28
	.word	.L1631,.L2831
	.byte	5
	.byte	'RetVal',0,1,188,38,22
	.word	.L1592,.L2832
	.byte	5
	.byte	'PendReqBlkNum',0,1,189,38,22
	.word	.L1781,.L2833
	.byte	5
	.byte	'PendReqBlkIndex',0,1,190,38,22
	.word	.L1781,.L2834
	.byte	5
	.byte	'PendBlkWritable',0,1,191,38,22
	.word	.L1592,.L2835
	.byte	5
	.byte	'PendReqBlkPtr',0,1,192,38,25
	.word	.L1807,.L2836
	.byte	6
	.word	.L2602,.L2837,.L2838
	.byte	7
	.word	.L2603,.L2839
	.byte	8
	.word	.L2605,.L2837,.L2838
	.byte	5
	.byte	'StateDataPtr',0,1,176,109,22
	.word	.L1579,.L2840
	.byte	5
	.byte	'DestAddr',0,1,177,109,22
	.word	.L1589,.L2841
	.byte	5
	.byte	'WLAddr',0,1,178,109,22
	.word	.L1589,.L2842
	.byte	5
	.byte	'Offset',0,1,179,109,22
	.word	.L1589,.L2843
	.byte	5
	.byte	'BlkPages',0,1,180,109,22
	.word	.L1781,.L2844
	.byte	5
	.byte	'RemainingPages',0,1,181,109,22
	.word	.L1589,.L2845
	.byte	5
	.byte	'BankNumber',0,1,182,109,22
	.word	.L1592,.L2846
	.byte	5
	.byte	'ReturnValue',0,1,183,109,22
	.word	.L1592,.L2847
	.byte	6
	.word	.L1912,.L295,.L2848
	.byte	7
	.word	.L1915,.L2849
	.byte	9
	.word	.L1917,.L295,.L2848
	.byte	0,6
	.word	.L1684,.L2850,.L2851
	.byte	7
	.word	.L1687,.L2852
	.byte	8
	.word	.L1689,.L2850,.L2851
	.byte	6
	.word	.L1690,.L2850,.L2853
	.byte	7
	.word	.L1691,.L2854
	.byte	9
	.word	.L1693,.L2850,.L2853
	.byte	0,0,0,6
	.word	.L2588,.L2855,.L2856
	.byte	7
	.word	.L2591,.L2857
	.byte	7
	.word	.L2593,.L2858
	.byte	8
	.word	.L2595,.L2855,.L2856
	.byte	5
	.byte	'RetVal',0,1,254,33,11
	.word	.L1592,.L2859
	.byte	0,0,6
	.word	.L1684,.L2856,.L2860
	.byte	7
	.word	.L1687,.L2852
	.byte	8
	.word	.L1689,.L2856,.L2860
	.byte	6
	.word	.L1690,.L2856,.L2861
	.byte	7
	.word	.L1691,.L2854
	.byte	9
	.word	.L1693,.L2856,.L2861
	.byte	0,0,0,6
	.word	.L2588,.L2862,.L2863
	.byte	7
	.word	.L2591,.L2857
	.byte	7
	.word	.L2593,.L2858
	.byte	8
	.word	.L2595,.L2862,.L2863
	.byte	5
	.byte	'RetVal',0,1,254,33,11
	.word	.L1592,.L2864
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lIsWriteInvldAllowedbyGC')
	.sect	'.debug_abbrev'
.L1513:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1
	.byte	49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lIsWriteInvldAllowedbyGC')
	.sect	'.debug_line'
.L1514:
	.word	.L6377-.L6376
.L6376:
	.half	3
	.word	.L6379-.L6378
.L6378:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6379:
	.byte	5,18,7,0,5,2
	.word	.L1120
	.byte	3,193,38,1,5,28,9
	.half	.L6380-.L1120
	.byte	1,5,10,9
	.half	.L3347-.L6380
	.byte	3,2,1,5,19,9
	.half	.L3348-.L3347
	.byte	3,4,1,5,41,9
	.half	.L6381-.L3348
	.byte	1,5,6,9
	.half	.L6382-.L6381
	.byte	1,5,36,7,9
	.half	.L6383-.L6382
	.byte	3,1,1,5,57,9
	.half	.L6384-.L6383
	.byte	1,5,21,7,9
	.half	.L6385-.L6384
	.byte	3,1,1,5,37,9
	.half	.L6386-.L6385
	.byte	1,5,8,9
	.half	.L6387-.L6386
	.byte	1,5,37,7,9
	.half	.L6388-.L6387
	.byte	3,1,1,5,21,7,9
	.half	.L289-.L6388
	.byte	3,7,1,5,5,9
	.half	.L6389-.L289
	.byte	1,7,9
	.half	.L6390-.L6389
	.byte	1,5,20,9
	.half	.L287-.L6390
	.byte	3,13,1,5,5,9
	.half	.L6391-.L287
	.byte	1,5,51,7,9
	.half	.L6392-.L6391
	.byte	3,2,1,5,47,9
	.half	.L3349-.L6392
	.byte	3,1,1,5,23,9
	.half	.L3350-.L3349
	.byte	3,4,1,5,33,9
	.half	.L6393-.L3350
	.byte	1,5,53,9
	.half	.L6394-.L6393
	.byte	1,5,15,9
	.half	.L2837-.L6394
	.byte	3,211,198,0,1,5,28,9
	.half	.L3352-.L2837
	.byte	3,2,1,5,44,9
	.half	.L3353-.L3352
	.byte	3,1,1,5,26,9
	.half	.L3354-.L3353
	.byte	3,1,1,5,3,9
	.half	.L3355-.L3354
	.byte	3,3,1,5,14,7,9
	.half	.L6395-.L3355
	.byte	3,2,1,5,39,9
	.half	.L3356-.L6395
	.byte	1,5,53,9
	.half	.L294-.L3356
	.byte	3,4,1,5,14,9
	.half	.L3351-.L294
	.byte	1,5,18,9
	.half	.L295-.L3351
	.byte	3,180,179,127,1,5,3,9
	.half	.L2848-.L295
	.byte	3,209,204,0,1,5,18,7,9
	.half	.L2850-.L2848
	.byte	3,203,179,127,1,5,41,9
	.half	.L2853-.L2850
	.byte	3,27,1,5,44,9
	.half	.L2851-.L2853
	.byte	3,166,204,0,1,5,58,9
	.half	.L3357-.L2851
	.byte	3,2,1,5,24,9
	.half	.L3358-.L3357
	.byte	3,4,1,5,12,9
	.half	.L3361-.L3358
	.byte	3,4,1,5,35,9
	.half	.L2855-.L3361
	.byte	3,163,180,127,1,5,18,9
	.half	.L6396-.L2855
	.byte	3,2,1,5,28,9
	.half	.L6397-.L6396
	.byte	1,5,7,9
	.half	.L6398-.L6397
	.byte	1,5,5,9
	.half	.L3362-.L6398
	.byte	3,226,203,0,1,5,18,7,9
	.half	.L2856-.L3362
	.byte	3,174,179,127,1,5,41,9
	.half	.L2861-.L2856
	.byte	3,27,1,9
	.half	.L2860-.L2861
	.byte	3,186,204,0,1,5,58,9
	.half	.L296-.L2860
	.byte	3,5,1,5,35,9
	.half	.L2862-.L296
	.byte	3,148,180,127,1,5,18,9
	.half	.L6399-.L2862
	.byte	3,2,1,5,28,9
	.half	.L6400-.L6399
	.byte	1,5,7,9
	.half	.L6401-.L6400
	.byte	1,5,3,9
	.half	.L3363-.L6401
	.byte	3,238,203,0,1,5,18,7,9
	.half	.L2863-.L3363
	.byte	3,6,1,5,9,9
	.half	.L3364-.L2863
	.byte	1,5,38,7,9
	.half	.L6402-.L3364
	.byte	3,1,1,5,10,9
	.half	.L6403-.L6402
	.byte	3,1,1,5,7,7,9
	.half	.L6404-.L6403
	.byte	3,10,1,5,42,7,9
	.half	.L6405-.L6404
	.byte	3,7,1,5,40,9
	.half	.L6406-.L6405
	.byte	1,5,21,9
	.half	.L6407-.L6406
	.byte	3,1,1,9
	.half	.L299-.L6407
	.byte	3,6,1,5,37,9
	.half	.L6408-.L299
	.byte	1,5,5,9
	.half	.L6409-.L6408
	.byte	1,5,22,7,9
	.half	.L6410-.L6409
	.byte	3,4,1,5,7,9
	.half	.L6411-.L6410
	.byte	1,5,36,7,9
	.half	.L6412-.L6411
	.byte	3,3,1,5,34,9
	.half	.L6413-.L6412
	.byte	1,5,5,9
	.half	.L6414-.L6413
	.byte	3,121,1,5,17,9
	.half	.L298-.L6414
	.byte	3,14,1,5,3,9
	.half	.L302-.L298
	.byte	3,3,1,5,22,9
	.half	.L2838-.L302
	.byte	3,196,184,127,1,5,7,9
	.half	.L6415-.L2838
	.byte	1,5,9,7,9
	.half	.L6416-.L6415
	.byte	3,34,1,5,18,7,9
	.half	.L292-.L6416
	.byte	3,2,1,5,3,9
	.half	.L291-.L292
	.byte	3,7,1,5,1,9
	.half	.L3365-.L291
	.byte	3,2,1,7,9
	.half	.L1516-.L3365
	.byte	0,1,1
.L6377:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lIsWriteInvldAllowedbyGC')
	.sect	'.debug_ranges'
.L1515:
	.word	-1,.L1120,0,.L1516-.L1120,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lIsLastWrittenWLAffected')
	.sect	'.debug_info'
.L1517:
	.word	674
	.half	3
	.word	.L1518
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1520,.L1519
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lIsLastWrittenWLAffected',0,1,224,59,16
	.word	.L1592
	.byte	1,1
	.word	.L1130,.L2865,.L1129
	.byte	4
	.byte	'StartOffset',0,1,224,59,58
	.word	.L2866,.L2867
	.byte	5
	.word	.L1130,.L2865
	.byte	6
	.byte	'StateDataPtr',0,1,226,59,29
	.word	.L1631,.L2868
	.byte	6
	.byte	'LWBBufferPtr',0,1,227,59,29
	.word	.L1622,.L2869
	.byte	6
	.byte	'WLAddr',0,1,228,59,23
	.word	.L1589,.L2870
	.byte	6
	.byte	'EndOffset',0,1,229,59,23
	.word	.L1781,.L2871
	.byte	6
	.byte	'BlockNumber',0,1,230,59,23
	.word	.L1781,.L2872
	.byte	6
	.byte	'RetVal',0,1,231,59,23
	.word	.L1592,.L2873
	.byte	6
	.byte	'NewStartOffset',0,1,232,59,23
	.word	.L1781,.L2874
	.byte	7
	.word	.L1690,.L2875,.L2876
	.byte	8
	.word	.L1691,.L2877
	.byte	9
	.word	.L1693,.L2875,.L2876
	.byte	0,7
	.word	.L2878,.L2879,.L509
	.byte	8
	.word	.L2880,.L2881
	.byte	8
	.word	.L2882,.L2883
	.byte	10
	.word	.L2884,.L2885
	.byte	6
	.byte	'StateDataPtr',0,1,170,60,26
	.word	.L1579,.L2887
	.byte	6
	.byte	'CachePtr',0,1,171,60,32
	.word	.L1884,.L2888
	.byte	6
	.byte	'UnconfigBlockPtr',0,1,172,60,32
	.word	.L1884,.L2889
	.byte	6
	.byte	'TempIndex',0,1,173,60,10
	.word	.L1781,.L2890
	.byte	6
	.byte	'BlockIndex',0,1,174,60,10
	.word	.L1781,.L2891
	.byte	6
	.byte	'RetVal',0,1,175,60,11
	.word	.L1592,.L2892
	.byte	0,0,7
	.word	.L2878,.L2886,.L510
	.byte	8
	.word	.L2880,.L2881
	.byte	8
	.word	.L2882,.L2883
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lIsLastWrittenWLAffected')
	.sect	'.debug_abbrev'
.L1518:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18
	.byte	1,0,0,10,11,1,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lIsLastWrittenWLAffected')
	.sect	'.debug_line'
.L1519:
	.word	.L6418-.L6417
.L6417:
	.half	3
	.word	.L6420-.L6419
.L6419:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6420:
	.byte	5,16,7,0,5,2
	.word	.L1130
	.byte	3,223,59,1,5,10,9
	.half	.L3451-.L1130
	.byte	3,10,1,5,18,9
	.half	.L3452-.L3451
	.byte	3,1,1,5,28,9
	.half	.L6421-.L3452
	.byte	1,5,32,9
	.half	.L3455-.L6421
	.byte	3,1,1,5,37,9
	.half	.L3456-.L3455
	.byte	3,1,1,5,61,9
	.half	.L6422-.L3456
	.byte	1,5,3,9
	.half	.L3457-.L6422
	.byte	3,6,1,5,18,7,9
	.half	.L2875-.L3457
	.byte	3,163,101,1,5,15,9
	.half	.L2876-.L2875
	.byte	3,224,26,1,5,42,9
	.half	.L6423-.L2876
	.byte	3,5,1,5,20,9
	.half	.L2879-.L6423
	.byte	3,59,1,5,53,9
	.half	.L6424-.L2879
	.byte	3,5,1,5,22,9
	.half	.L509-.L6424
	.byte	3,64,1,5,7,9
	.half	.L6425-.L509
	.byte	1,5,31,7,9
	.half	.L6426-.L6425
	.byte	3,4,1,5,73,9
	.half	.L6427-.L6426
	.byte	1,5,34,9
	.half	.L6428-.L6427
	.byte	3,2,1,5,24,9
	.half	.L3458-.L6428
	.byte	3,127,1,5,60,9
	.half	.L6429-.L3458
	.byte	3,4,1,5,10,9
	.half	.L2886-.L6429
	.byte	3,45,1,5,18,9
	.half	.L3459-.L2886
	.byte	3,1,1,5,28,9
	.half	.L6430-.L3459
	.byte	1,5,38,9
	.half	.L3460-.L6430
	.byte	3,2,1,5,3,9
	.half	.L3453-.L3460
	.byte	3,2,1,5,15,7,9
	.half	.L6431-.L3453
	.byte	3,3,1,5,53,9
	.half	.L3462-.L6431
	.byte	3,2,1,5,63,9
	.half	.L6432-.L3462
	.byte	1,5,52,9
	.half	.L6433-.L6432
	.byte	1,5,37,9
	.half	.L3464-.L6433
	.byte	3,3,1,5,27,9
	.half	.L513-.L3464
	.byte	3,5,1,5,10,9
	.half	.L3465-.L513
	.byte	1,5,28,7,9
	.half	.L6434-.L3465
	.byte	3,1,1,5,38,9
	.half	.L6435-.L6434
	.byte	1,5,16,7,9
	.half	.L6436-.L6435
	.byte	3,2,1,5,31,9
	.half	.L6437-.L6436
	.byte	1,5,18,9
	.half	.L514-.L6437
	.byte	3,4,1,5,23,9
	.half	.L516-.L514
	.byte	3,3,1,5,37,9
	.half	.L512-.L516
	.byte	3,112,1,5,11,9
	.half	.L6438-.L512
	.byte	1,5,19,7,9
	.half	.L6439-.L6438
	.byte	3,1,1,5,63,9
	.half	.L6440-.L6439
	.byte	3,127,1,5,44,9
	.half	.L511-.L6440
	.byte	3,21,1,5,16,9
	.half	.L6441-.L511
	.byte	3,3,1,5,5,9
	.half	.L6442-.L6441
	.byte	1,5,14,7,9
	.half	.L6443-.L6442
	.byte	3,2,1,5,3,9
	.half	.L517-.L6443
	.byte	3,4,1,5,38,9
	.half	.L6444-.L517
	.byte	3,4,1,9
	.half	.L6445-.L6444
	.byte	3,1,1,5,3,9
	.half	.L520-.L6445
	.byte	3,3,1,5,22,9
	.half	.L510-.L520
	.byte	3,163,127,1,5,13,9
	.half	.L6446-.L510
	.byte	3,1,1,5,53,7,9
	.half	.L6447-.L6446
	.byte	1,5,1,7,9
	.half	.L508-.L6447
	.byte	3,5,1,7,9
	.half	.L1521-.L508
	.byte	0,1,1
.L6418:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lIsLastWrittenWLAffected')
	.sect	'.debug_ranges'
.L1520:
	.word	-1,.L1130,0,.L1521-.L1130,0,0
.L2885:
	.word	-1,.L1130,.L2879-.L1130,.L509-.L1130,.L2886-.L1130,.L510-.L1130,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lIsBlockAcrossWLLatest')
	.sect	'.debug_info'
.L1522:
	.word	353
	.half	3
	.word	.L1523
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1525,.L1524
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lIsBlockAcrossWLLatest',0,1,250,60,16
	.word	.L1592
	.byte	1,1
	.word	.L1132,.L2893,.L1131
	.byte	4
	.word	.L1132,.L2893
	.byte	5
	.byte	'StateDataPtr',0,1,252,60,23
	.word	.L1579,.L2894
	.byte	5
	.byte	'RetVal',0,1,253,60,23
	.word	.L1592,.L2895
	.byte	5
	.byte	'BlockIndex',0,1,254,60,23
	.word	.L1781,.L2896
	.byte	5
	.byte	'LastWrittenBlkPtr',0,1,255,60,32
	.word	.L1587,.L2897
	.byte	5
	.byte	'ConfigBlockPtr',0,1,128,61,32
	.word	.L1884,.L2898
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lIsBlockAcrossWLLatest')
	.sect	'.debug_abbrev'
.L1523:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lIsBlockAcrossWLLatest')
	.sect	'.debug_line'
.L1524:
	.word	.L6449-.L6448
.L6448:
	.half	3
	.word	.L6451-.L6450
.L6450:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6451:
	.byte	5,18,7,0,5,2
	.word	.L1132
	.byte	3,129,61,1,5,28,9
	.half	.L6452-.L1132
	.byte	1,5,37,9
	.half	.L3470-.L6452
	.byte	3,1,1,5,55,9
	.half	.L3471-.L3470
	.byte	3,2,1,5,20,9
	.half	.L3472-.L3471
	.byte	3,2,1,5,3,9
	.half	.L6453-.L3472
	.byte	1,5,49,7,9
	.half	.L6454-.L6453
	.byte	3,6,1,5,23,9
	.half	.L6455-.L6454
	.byte	3,2,1,5,53,9
	.half	.L6456-.L6455
	.byte	1,5,5,9
	.half	.L6457-.L6456
	.byte	1,5,14,7,9
	.half	.L523-.L6457
	.byte	3,2,1,5,1,9
	.half	.L3473-.L523
	.byte	3,12,1,5,32,7,9
	.half	.L524-.L3473
	.byte	3,120,1,5,44,9
	.half	.L6458-.L524
	.byte	1,5,40,9
	.half	.L6459-.L6458
	.byte	3,1,1,5,38,9
	.half	.L3474-.L6459
	.byte	1,5,41,9
	.half	.L6460-.L3474
	.byte	3,1,1,5,39,9
	.half	.L6461-.L6460
	.byte	1,5,1,9
	.half	.L6462-.L6461
	.byte	3,6,1,7,9
	.half	.L1526-.L6462
	.byte	0,1,1
.L6449:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lIsBlockAcrossWLLatest')
	.sect	'.debug_ranges'
.L1525:
	.word	-1,.L1132,0,.L1526-.L1132,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lGcCheckBlkCopy')
	.sect	'.debug_info'
.L1527:
	.word	309
	.half	3
	.word	.L1528
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1530,.L1529
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lGcCheckBlkCopy',0,1,152,75,16
	.word	.L1592
	.byte	1,1
	.word	.L1158,.L2899,.L1157
	.byte	4
	.word	.L1158,.L2899
	.byte	5
	.byte	'StateDataPtr',0,1,154,75,25
	.word	.L1579,.L2900
	.byte	5
	.byte	'CachePtr',0,1,155,75,31
	.word	.L1884,.L2901
	.byte	5
	.byte	'BlockCount',0,1,156,75,25
	.word	.L1781,.L2902
	.byte	5
	.byte	'RetVal',0,1,157,75,27
	.word	.L1592,.L2903
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lGcCheckBlkCopy')
	.sect	'.debug_abbrev'
.L1528:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lGcCheckBlkCopy')
	.sect	'.debug_line'
.L1529:
	.word	.L6464-.L6463
.L6463:
	.half	3
	.word	.L6466-.L6465
.L6465:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6466:
	.byte	5,10,7,0,5,2
	.word	.L1158
	.byte	3,158,203,0,1,5,18,9
	.half	.L3750-.L1158
	.byte	3,2,1,5,28,9
	.half	.L6467-.L3750
	.byte	1,9
	.half	.L3751-.L6467
	.byte	3,1,1,5,42,9
	.half	.L3752-.L3751
	.byte	3,2,1,5,46,9
	.half	.L3754-.L3752
	.byte	3,2,1,5,68,9
	.half	.L6468-.L3754
	.byte	1,5,26,9
	.half	.L757-.L6468
	.byte	3,4,1,5,9,9
	.half	.L6469-.L757
	.byte	1,5,34,7,9
	.half	.L6470-.L6469
	.byte	3,1,1,5,14,7,9
	.half	.L6471-.L6470
	.byte	3,2,1,5,21,9
	.half	.L6472-.L6471
	.byte	1,5,17,9
	.half	.L758-.L6472
	.byte	3,4,1,5,15,9
	.half	.L3755-.L758
	.byte	3,2,1,5,10,9
	.half	.L756-.L3755
	.byte	3,115,1,5,46,7,9
	.half	.L6473-.L756
	.byte	1,5,56,9
	.half	.L6474-.L6473
	.byte	1,5,43,9
	.half	.L6475-.L6474
	.byte	1,5,32,7,9
	.half	.L761-.L6475
	.byte	3,16,1,5,1,9
	.half	.L6476-.L761
	.byte	3,3,1,7,9
	.half	.L1531-.L6476
	.byte	0,1,1
.L6464:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lGcCheckBlkCopy')
	.sect	'.debug_ranges'
.L1530:
	.word	-1,.L1158,0,.L1531-.L1158,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lGcStartCopyWrite')
	.sect	'.debug_info'
.L1532:
	.word	1250
	.half	3
	.word	.L1533
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1535,.L1534
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lGcStartCopyWrite',0,1,158,77,14
	.word	.L1592
	.byte	1,1
	.word	.L1162,.L2904,.L1161
	.byte	4
	.word	.L1162,.L2904
	.byte	5
	.byte	'StateDataPtr',0,1,160,77,25
	.word	.L1579,.L2905
	.byte	5
	.byte	'GcCurrBlkPtr',0,1,161,77,31
	.word	.L2906,.L2907
	.byte	5
	.byte	'DestAddr',0,1,162,77,25
	.word	.L1589,.L2908
	.byte	5
	.byte	'PageCount',0,1,163,77,25
	.word	.L1589,.L2909
	.byte	5
	.byte	'FreePages',0,1,164,77,25
	.word	.L1589,.L2910
	.byte	5
	.byte	'Offset',0,1,165,77,25
	.word	.L1781,.L2911
	.byte	5
	.byte	'BankNumber',0,1,166,77,25
	.word	.L1592,.L2912
	.byte	5
	.byte	'Error',0,1,167,77,25
	.word	.L1592,.L2913
	.byte	6
	.word	.L2914,.L786,.L2915
	.byte	7
	.word	.L2916,.L786,.L2915
	.byte	5
	.byte	'StateDataPtr',0,1,191,78,26
	.word	.L1579,.L2917
	.byte	5
	.byte	'GcCurrBlkPtr',0,1,192,78,32
	.word	.L2906,.L2918
	.byte	5
	.byte	'CachePtr',0,1,193,78,26
	.word	.L1583,.L2919
	.byte	5
	.byte	'UnconfigBlockPtr',0,1,194,78,26
	.word	.L1583,.L2920
	.byte	5
	.byte	'DestAddr',0,1,195,78,26
	.word	.L1589,.L2921
	.byte	5
	.byte	'CompAddr',0,1,196,78,33
	.word	.L1589,.L2922
	.byte	5
	.byte	'CompLength',0,1,197,78,33
	.word	.L1589,.L2923
	.byte	5
	.byte	'TmpCompareLength',0,1,198,78,33
	.word	.L1589,.L2924
	.byte	5
	.byte	'BlockNumber',0,1,199,78,26
	.word	.L1781,.L2925
	.byte	5
	.byte	'Index',0,1,200,78,26
	.word	.L1781,.L2926
	.byte	5
	.byte	'ReturnVal',0,1,201,78,26
	.word	.L1592,.L2927
	.byte	6
	.word	.L1690,.L2928,.L2929
	.byte	8
	.word	.L1691,.L2930
	.byte	9
	.word	.L1693,.L2928,.L2929
	.byte	0,6
	.word	.L2931,.L791,.L2932
	.byte	10
	.word	.L2933,.L2934
	.byte	5
	.byte	'StateDataPtr',0,1,135,80,26
	.word	.L1579,.L2938
	.byte	5
	.byte	'UnconfigBlockPtr',0,1,136,80,26
	.word	.L1583,.L2939
	.byte	5
	.byte	'BlockIndex',0,1,137,80,26
	.word	.L1781,.L2940
	.byte	0,0,11
	.word	.L2931,.L2935,.L2936
	.byte	11
	.word	.L2931,.L2937,.L795
	.byte	6
	.word	.L2941,.L2942,.L802
	.byte	7
	.word	.L2943,.L2942,.L802
	.byte	5
	.byte	'StateDataPtr',0,1,195,80,26
	.word	.L1579,.L2944
	.byte	5
	.byte	'CachePtr',0,1,196,80,26
	.word	.L1583,.L2945
	.byte	5
	.byte	'BlockIndex',0,1,197,80,26
	.word	.L1781,.L2946
	.byte	0,0,6
	.word	.L1684,.L2947,.L2948
	.byte	8
	.word	.L1687,.L2949
	.byte	7
	.word	.L1689,.L2947,.L2948
	.byte	6
	.word	.L1690,.L2947,.L2950
	.byte	8
	.word	.L1691,.L2930
	.byte	9
	.word	.L1693,.L2947,.L2950
	.byte	0,0,0,6
	.word	.L1684,.L2948,.L2951
	.byte	8
	.word	.L1687,.L2949
	.byte	7
	.word	.L1689,.L2948,.L2951
	.byte	6
	.word	.L1690,.L2948,.L2952
	.byte	8
	.word	.L1691,.L2930
	.byte	9
	.word	.L1693,.L2948,.L2952
	.byte	0,0,0,0,0,6
	.word	.L1684,.L817,.L816
	.byte	8
	.word	.L1687,.L2949
	.byte	7
	.word	.L1689,.L817,.L816
	.byte	6
	.word	.L1690,.L817,.L2953
	.byte	8
	.word	.L1691,.L2930
	.byte	9
	.word	.L1693,.L817,.L2953
	.byte	0,0,0,6
	.word	.L2588,.L2954,.L2955
	.byte	8
	.word	.L2591,.L2956
	.byte	8
	.word	.L2593,.L2957
	.byte	7
	.word	.L2595,.L2954,.L2955
	.byte	5
	.byte	'RetVal',0,1,254,33,11
	.word	.L1592,.L2958
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lGcStartCopyWrite')
	.sect	'.debug_abbrev'
.L1533:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1
	.byte	49,16,17,1,18,1,0,0,7,11,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18,1,0,0,10,11,1
	.byte	49,16,85,6,0,0,11,29,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lGcStartCopyWrite')
	.sect	'.debug_line'
.L1534:
	.word	.L6478-.L6477
.L6477:
	.half	3
	.word	.L6480-.L6479
.L6479:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6480:
	.byte	5,9,7,0,5,2
	.word	.L1162
	.byte	3,168,205,0,1,5,18,9
	.half	.L3780-.L1162
	.byte	3,1,1,5,28,9
	.half	.L6481-.L3780
	.byte	1,5,19,9
	.half	.L3782-.L6481
	.byte	3,3,1,5,3,9
	.half	.L6482-.L3782
	.byte	1,5,38,7,9
	.half	.L6483-.L6482
	.byte	3,2,1,5,36,9
	.half	.L3784-.L6483
	.byte	1,5,21,9
	.half	.L6484-.L3784
	.byte	3,5,1,5,8,9
	.half	.L3785-.L6484
	.byte	1,5,22,7,9
	.half	.L6485-.L3785
	.byte	3,1,1,5,38,9
	.half	.L6486-.L6485
	.byte	1,5,13,7,9
	.half	.L6487-.L6486
	.byte	3,3,1,5,27,9
	.half	.L6488-.L6487
	.byte	1,5,23,9
	.half	.L785-.L6488
	.byte	3,9,1,5,8,9
	.half	.L6489-.L785
	.byte	1,5,18,7,9
	.half	.L786-.L6489
	.byte	3,138,1,1,5,28,9
	.half	.L6490-.L786
	.byte	1,5,26,9
	.half	.L3783-.L6490
	.byte	3,1,1,5,13,9
	.half	.L3786-.L3783
	.byte	3,1,1,5,61,9
	.half	.L3788-.L3786
	.byte	3,1,1,5,50,9
	.half	.L6491-.L3788
	.byte	1,5,26,9
	.half	.L3790-.L6491
	.byte	3,4,1,5,18,9
	.half	.L2928-.L3790
	.byte	3,196,82,1,5,46,9
	.half	.L2929-.L2928
	.byte	3,192,45,1,5,30,9
	.half	.L6492-.L2929
	.byte	3,2,1,5,14,9
	.half	.L3792-.L6492
	.byte	1,5,30,9
	.half	.L6493-.L3792
	.byte	3,3,1,5,14,9
	.half	.L6494-.L6493
	.byte	1,5,17,9
	.half	.L6495-.L6494
	.byte	3,2,1,5,18,9
	.half	.L3793-.L6495
	.byte	3,6,1,5,3,9
	.half	.L6496-.L3793
	.byte	1,5,27,7,9
	.half	.L6497-.L6496
	.byte	3,8,1,5,30,9
	.half	.L6498-.L6497
	.byte	3,2,1,5,18,9
	.half	.L6499-.L6498
	.byte	3,1,1,5,17,9
	.half	.L6500-.L6499
	.byte	3,2,1,5,34,9
	.half	.L6501-.L6500
	.byte	1,5,6,9
	.half	.L790-.L6501
	.byte	3,5,1,5,20,7,9
	.half	.L6502-.L790
	.byte	3,1,1,5,36,9
	.half	.L6503-.L6502
	.byte	1,7,9
	.half	.L791-.L6503
	.byte	3,2,1,5,34,9
	.half	.L3795-.L791
	.byte	1,5,33,9
	.half	.L6504-.L3795
	.byte	3,2,1,5,20,9
	.half	.L2932-.L6504
	.byte	3,2,1,5,5,9
	.half	.L6505-.L2932
	.byte	1,5,40,7,9
	.half	.L2935-.L6505
	.byte	3,2,1,5,22,9
	.half	.L6506-.L2935
	.byte	3,2,1,5,7,9
	.half	.L6507-.L6506
	.byte	1,5,24,7,9
	.half	.L6508-.L6507
	.byte	3,3,1,5,9,9
	.half	.L6509-.L6508
	.byte	1,5,18,7,9
	.half	.L2937-.L6509
	.byte	3,136,1,1,5,28,9
	.half	.L6510-.L2937
	.byte	1,5,61,9
	.half	.L3797-.L6510
	.byte	3,2,1,5,50,9
	.half	.L6511-.L3797
	.byte	1,5,80,9
	.half	.L3798-.L6511
	.byte	3,6,1,5,15,9
	.half	.L797-.L3798
	.byte	3,2,1,5,21,9
	.half	.L3799-.L797
	.byte	3,2,1,5,36,9
	.half	.L796-.L3799
	.byte	3,123,1,5,9,9
	.half	.L6512-.L796
	.byte	1,5,27,7,9
	.half	.L6513-.L6512
	.byte	3,1,1,5,57,9
	.half	.L6514-.L6513
	.byte	1,5,42,9
	.half	.L6515-.L6514
	.byte	1,5,43,7,9
	.half	.L798-.L6515
	.byte	3,6,1,5,18,9
	.half	.L6516-.L798
	.byte	3,4,1,5,51,9
	.half	.L6517-.L6516
	.byte	3,1,1,5,29,9
	.half	.L800-.L6517
	.byte	3,3,1,5,37,9
	.half	.L6518-.L800
	.byte	1,5,64,9
	.half	.L6519-.L6518
	.byte	3,1,1,5,31,9
	.half	.L6520-.L6519
	.byte	1,5,17,9
	.half	.L6521-.L6520
	.byte	3,125,1,5,32,9
	.half	.L799-.L6521
	.byte	3,127,1,5,51,9
	.half	.L6522-.L799
	.byte	1,5,37,7,9
	.half	.L6523-.L6522
	.byte	3,8,1,5,35,9
	.half	.L6524-.L6523
	.byte	1,5,36,9
	.half	.L795-.L6524
	.byte	3,226,126,1,5,59,9
	.half	.L6525-.L795
	.byte	1,5,24,9
	.half	.L794-.L6525
	.byte	3,5,1,5,9,9
	.half	.L6526-.L794
	.byte	1,5,18,7,9
	.half	.L2942-.L6526
	.byte	3,186,1,1,5,28,9
	.half	.L6527-.L2942
	.byte	1,5,50,9
	.half	.L3787-.L6527
	.byte	3,1,1,5,42,9
	.half	.L3789-.L3787
	.byte	3,1,1,5,32,9
	.half	.L3803-.L3789
	.byte	3,2,1,5,18,9
	.half	.L6528-.L3803
	.byte	3,2,1,5,51,9
	.half	.L3802-.L6528
	.byte	3,1,1,5,24,9
	.half	.L804-.L3802
	.byte	3,4,1,5,5,9
	.half	.L6529-.L804
	.byte	1,5,31,7,9
	.half	.L6530-.L6529
	.byte	3,4,1,5,58,9
	.half	.L6531-.L6530
	.byte	3,1,1,5,25,9
	.half	.L6532-.L6531
	.byte	1,5,42,9
	.half	.L6533-.L6532
	.byte	3,127,1,5,23,9
	.half	.L805-.L6533
	.byte	3,8,1,5,39,9
	.half	.L6534-.L805
	.byte	1,5,13,9
	.half	.L806-.L6534
	.byte	3,3,1,5,17,9
	.half	.L6535-.L806
	.byte	3,110,1,5,32,9
	.half	.L803-.L6535
	.byte	3,127,1,5,51,9
	.half	.L6536-.L803
	.byte	1,5,37,7,9
	.half	.L6537-.L6536
	.byte	3,21,1,5,35,9
	.half	.L6538-.L6537
	.byte	1,5,36,9
	.half	.L802-.L6538
	.byte	3,174,126,1,5,34,9
	.half	.L801-.L802
	.byte	1,5,18,9
	.half	.L2947-.L801
	.byte	3,133,82,1,5,41,9
	.half	.L2950-.L2947
	.byte	3,27,1,5,18,9
	.half	.L2948-.L2950
	.byte	3,101,1,5,41,9
	.half	.L2952-.L2948
	.byte	3,27,1,5,35,9
	.half	.L2951-.L2952
	.byte	3,229,45,1,5,46,9
	.half	.L6539-.L2951
	.byte	3,126,1,5,27,9
	.half	.L793-.L6539
	.byte	3,11,1,5,41,9
	.half	.L6540-.L793
	.byte	1,5,5,9
	.half	.L3805-.L6540
	.byte	3,121,1,5,23,9
	.half	.L792-.L3805
	.byte	3,10,1,5,43,9
	.half	.L3808-.L792
	.byte	1,5,8,9
	.half	.L3809-.L3808
	.byte	1,5,36,7,9
	.half	.L6541-.L3809
	.byte	3,8,1,5,34,9
	.half	.L6542-.L6541
	.byte	1,5,17,9
	.half	.L6543-.L6542
	.byte	3,1,1,5,47,9
	.half	.L6544-.L6543
	.byte	1,5,32,9
	.half	.L6545-.L6544
	.byte	1,5,17,9
	.half	.L6546-.L6545
	.byte	3,1,1,5,48,9
	.half	.L6547-.L6546
	.byte	1,5,33,9
	.half	.L6548-.L6547
	.byte	1,5,17,9
	.half	.L6549-.L6548
	.byte	3,2,1,5,34,9
	.half	.L6550-.L6549
	.byte	3,1,1,5,53,9
	.half	.L6551-.L6550
	.byte	1,5,35,9
	.half	.L6552-.L6551
	.byte	3,127,1,5,21,9
	.half	.L6553-.L6552
	.byte	3,3,1,5,55,9
	.half	.L6554-.L6553
	.byte	1,5,67,9
	.half	.L6555-.L6554
	.byte	1,5,5,9
	.half	.L6556-.L6555
	.byte	1,5,23,7,9
	.half	.L6557-.L6556
	.byte	3,5,1,5,52,9
	.half	.L6558-.L6557
	.byte	1,5,7,9
	.half	.L6559-.L6558
	.byte	1,5,43,7,9
	.half	.L6560-.L6559
	.byte	3,2,1,5,33,9
	.half	.L811-.L6560
	.byte	3,3,1,5,22,9
	.half	.L3810-.L811
	.byte	3,3,1,5,7,9
	.half	.L6561-.L3810
	.byte	1,5,42,7,9
	.half	.L6562-.L6561
	.byte	3,4,1,5,29,9
	.half	.L6563-.L6562
	.byte	1,5,33,9
	.half	.L6564-.L6563
	.byte	3,1,1,5,41,9
	.half	.L6565-.L6564
	.byte	1,5,53,9
	.half	.L6566-.L6565
	.byte	3,1,1,5,40,9
	.half	.L6567-.L6566
	.byte	1,5,27,9
	.half	.L6568-.L6567
	.byte	3,1,1,5,74,9
	.half	.L6569-.L6568
	.byte	3,127,1,5,49,9
	.half	.L6570-.L6569
	.byte	3,2,1,5,35,9
	.half	.L6571-.L6570
	.byte	1,5,21,9
	.half	.L6572-.L6571
	.byte	3,1,1,5,48,9
	.half	.L6573-.L6572
	.byte	1,5,36,9
	.half	.L6574-.L6573
	.byte	3,3,1,5,71,9
	.half	.L6575-.L6574
	.byte	3,120,1,5,39,9
	.half	.L812-.L6575
	.byte	3,12,1,5,30,9
	.half	.L3807-.L812
	.byte	3,2,1,5,25,9
	.half	.L3806-.L3807
	.byte	3,1,1,5,33,9
	.half	.L6576-.L3806
	.byte	1,5,53,9
	.half	.L6577-.L6576
	.byte	3,1,1,5,40,9
	.half	.L6578-.L6577
	.byte	1,5,19,9
	.half	.L6579-.L6578
	.byte	3,1,1,5,74,9
	.half	.L6580-.L6579
	.byte	3,127,1,5,41,9
	.half	.L6581-.L6580
	.byte	3,2,1,5,27,9
	.half	.L6582-.L6581
	.byte	1,5,21,9
	.half	.L6583-.L6582
	.byte	3,1,1,5,37,9
	.half	.L6584-.L6583
	.byte	1,5,36,9
	.half	.L6585-.L6584
	.byte	3,3,1,5,34,9
	.half	.L813-.L6585
	.byte	1,5,56,9
	.half	.L6586-.L813
	.byte	3,4,1,5,42,9
	.half	.L6587-.L6586
	.byte	1,5,20,9
	.half	.L6588-.L6587
	.byte	3,2,1,5,40,9
	.half	.L6589-.L6588
	.byte	1,5,69,9
	.half	.L6590-.L6589
	.byte	3,126,1,5,22,9
	.half	.L810-.L6590
	.byte	3,7,1,5,35,9
	.half	.L6591-.L810
	.byte	1,5,34,9
	.half	.L6592-.L6591
	.byte	3,2,1,5,24,9
	.half	.L2915-.L6592
	.byte	3,223,125,1,5,36,9
	.half	.L789-.L2915
	.byte	3,5,1,5,50,9
	.half	.L3811-.L789
	.byte	3,2,1,5,18,9
	.half	.L817-.L3811
	.byte	3,203,83,1,5,41,9
	.half	.L2953-.L817
	.byte	3,27,1,5,33,9
	.half	.L816-.L2953
	.byte	3,154,44,1,5,50,9
	.half	.L6593-.L816
	.byte	1,5,33,7,9
	.half	.L6594-.L6593
	.byte	3,4,1,5,21,9
	.half	.L6595-.L6594
	.byte	3,4,1,5,5,9
	.half	.L6596-.L6595
	.byte	1,5,54,7,9
	.half	.L6597-.L6596
	.byte	3,3,1,5,68,9
	.half	.L6598-.L6597
	.byte	1,5,55,9
	.half	.L3812-.L6598
	.byte	3,2,1,5,57,9
	.half	.L3813-.L3812
	.byte	3,2,1,5,35,9
	.half	.L2954-.L3813
	.byte	3,170,84,1,5,18,9
	.half	.L6599-.L2954
	.byte	3,2,1,5,28,9
	.half	.L6600-.L6599
	.byte	1,5,7,9
	.half	.L3815-.L6600
	.byte	1,9
	.half	.L3816-.L3815
	.byte	3,215,43,1,5,15,7,9
	.half	.L2955-.L3816
	.byte	3,2,1,5,5,9
	.half	.L818-.L2955
	.byte	3,4,1,5,35,7,9
	.half	.L6601-.L818
	.byte	3,2,1,5,7,9
	.half	.L3817-.L6601
	.byte	3,2,1,5,58,7,9
	.half	.L6602-.L3817
	.byte	3,2,1,5,44,9
	.half	.L6603-.L6602
	.byte	1,5,43,9
	.half	.L6604-.L6603
	.byte	3,1,1,5,41,9
	.half	.L6605-.L6604
	.byte	1,5,22,9
	.half	.L821-.L6605
	.byte	3,3,1,5,7,9
	.half	.L6606-.L821
	.byte	1,5,41,7,9
	.half	.L6607-.L6606
	.byte	3,2,1,5,62,9
	.half	.L822-.L6607
	.byte	3,3,1,5,13,9
	.half	.L3781-.L822
	.byte	1,5,3,9
	.half	.L788-.L3781
	.byte	3,4,1,5,1,9
	.half	.L3818-.L788
	.byte	3,1,1,7,9
	.half	.L1536-.L3818
	.byte	0,1,1
.L6478:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lGcStartCopyWrite')
	.sect	'.debug_ranges'
.L1535:
	.word	-1,.L1162,0,.L1536-.L1162,0,0
.L2934:
	.word	-1,.L1162,.L791-.L1162,.L2932-.L1162,.L2935-.L1162,.L2936-.L1162,.L2937-.L1162,.L795-.L1162,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lGcWrite')
	.sect	'.debug_info'
.L1537:
	.word	359
	.half	3
	.word	.L1538
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1540,.L1539
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lGcWrite',0,1,214,72,14
	.word	.L1592
	.byte	1,1
	.word	.L1150,.L2959,.L1149
	.byte	4
	.byte	'Position',0,1,214,72,56
	.word	.L2960,.L2961
	.byte	4
	.byte	'Offset',0,1,215,72,40
	.word	.L2962,.L2963
	.byte	5
	.word	.L1150,.L2959
	.byte	6
	.byte	'ReturnValueFls',0,1,217,72,23
	.word	.L1592,.L2964
	.byte	6
	.byte	'StateDataPtr',0,1,218,72,23
	.word	.L1579,.L2965
	.byte	6
	.byte	'GcReadWriteBufferPtr',0,1,219,72,29
	.word	.L1622,.L2966
	.byte	6
	.byte	'Error',0,1,220,72,23
	.word	.L1592,.L2967
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lGcWrite')
	.sect	'.debug_abbrev'
.L1538:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lGcWrite')
	.sect	'.debug_line'
.L1539:
	.word	.L6609-.L6608
.L6608:
	.half	3
	.word	.L6611-.L6610
.L6610:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6611:
	.byte	5,18,7,0,5,2
	.word	.L1150
	.byte	3,221,200,0,1,5,28,9
	.half	.L6612-.L1150
	.byte	1,5,9,9
	.half	.L3732-.L6612
	.byte	3,1,1,5,62,9
	.half	.L3733-.L3732
	.byte	3,2,1,5,36,9
	.half	.L3734-.L3733
	.byte	3,1,1,5,34,9
	.half	.L6613-.L3734
	.byte	1,5,28,9
	.half	.L6614-.L6613
	.byte	3,1,1,5,48,9
	.half	.L6615-.L6614
	.byte	3,1,1,5,34,9
	.half	.L3730-.L6615
	.byte	1,5,49,9
	.half	.L6616-.L3730
	.byte	3,4,1,5,3,9
	.half	.L3731-.L6616
	.byte	3,4,1,5,11,7,9
	.half	.L6617-.L3731
	.byte	3,5,1,5,3,9
	.half	.L740-.L6617
	.byte	3,3,1,5,1,9
	.half	.L3735-.L740
	.byte	3,1,1,7,9
	.half	.L1541-.L3735
	.byte	0,1,1
.L6609:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lGcWrite')
	.sect	'.debug_ranges'
.L1540:
	.word	-1,.L1150,0,.L1541-.L1150,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lGcErasePrevSector')
	.sect	'.debug_info'
.L1542:
	.word	472
	.half	3
	.word	.L1543
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1545,.L1544
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lGcErasePrevSector',0,1,254,80,14
	.word	.L1592
	.byte	1,1
	.word	.L1166,.L2968,.L1165
	.byte	4
	.byte	'GcState',0,1,254,80,49
	.word	.L2969,.L2970
	.byte	5
	.word	.L1166,.L2968
	.byte	6
	.byte	'StateDataPtr',0,1,128,81,24
	.word	.L1579,.L2971
	.byte	6
	.byte	'ReturnValueFls',0,1,129,81,24
	.word	.L1592,.L2972
	.byte	6
	.byte	'Error',0,1,130,81,24
	.word	.L1592,.L2973
	.byte	6
	.byte	'BankNumber',0,1,131,81,25
	.word	.L1589,.L2974
	.byte	7
	.word	.L2975,.L834,.L2976
	.byte	8
	.word	.L2977,.L2978
	.byte	9
	.word	.L2979,.L834,.L2976
	.byte	6
	.byte	'StateDataPtr',0,1,133,82,25
	.word	.L1579,.L2980
	.byte	6
	.byte	'BankNumber',0,1,134,82,25
	.word	.L1589,.L2981
	.byte	6
	.byte	'ReturnVal',0,1,135,82,25
	.word	.L1592,.L2982
	.byte	6
	.byte	'NewGcState',0,1,136,82,25
	.word	.L1592,.L2983
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lGcErasePrevSector')
	.sect	'.debug_abbrev'
.L1543:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18
	.byte	1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lGcErasePrevSector')
	.sect	'.debug_line'
.L1544:
	.word	.L6619-.L6618
.L6618:
	.half	3
	.word	.L6621-.L6620
.L6620:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6621:
	.byte	5,14,7,0,5,2
	.word	.L1166
	.byte	3,253,208,0,1,5,9,9
	.half	.L3823-.L1166
	.byte	3,7,1,5,18,9
	.half	.L3824-.L3823
	.byte	3,2,1,5,28,9
	.half	.L6622-.L3824
	.byte	1,5,19,9
	.half	.L3825-.L6622
	.byte	3,2,1,5,3,9
	.half	.L6623-.L3825
	.byte	1,5,36,7,9
	.half	.L6624-.L6623
	.byte	3,2,1,5,21,9
	.half	.L6625-.L6624
	.byte	3,5,1,5,8,9
	.half	.L6626-.L6625
	.byte	1,5,22,7,9
	.half	.L6627-.L6626
	.byte	3,1,1,5,39,9
	.half	.L6628-.L6627
	.byte	1,5,13,7,9
	.half	.L6629-.L6628
	.byte	3,2,1,5,27,9
	.half	.L6630-.L6629
	.byte	1,5,25,9
	.half	.L827-.L6630
	.byte	3,3,1,5,10,9
	.half	.L6631-.L827
	.byte	1,5,7,7,9
	.half	.L6632-.L6631
	.byte	3,2,1,5,36,7,9
	.half	.L6633-.L6632
	.byte	3,2,1,5,60,9
	.half	.L6634-.L6633
	.byte	1,5,21,9
	.half	.L831-.L6634
	.byte	3,10,1,5,37,9
	.half	.L6635-.L831
	.byte	1,5,36,9
	.half	.L6636-.L6635
	.byte	3,1,1,5,34,9
	.half	.L832-.L6636
	.byte	1,5,22,9
	.half	.L6637-.L832
	.byte	3,5,1,5,41,9
	.half	.L6638-.L6637
	.byte	1,5,38,9
	.half	.L6639-.L6638
	.byte	1,5,34,9
	.half	.L3827-.L6639
	.byte	3,8,1,5,67,9
	.half	.L6640-.L3827
	.byte	1,5,65,9
	.half	.L6641-.L6640
	.byte	1,5,67,9
	.half	.L6642-.L6641
	.byte	3,1,1,9
	.half	.L6643-.L6642
	.byte	3,1,1,5,43,9
	.half	.L829-.L6643
	.byte	3,2,1,5,41,9
	.half	.L6644-.L829
	.byte	1,5,76,9
	.half	.L6645-.L6644
	.byte	3,124,1,5,38,9
	.half	.L830-.L6645
	.byte	3,13,1,5,36,9
	.half	.L6646-.L830
	.byte	1,5,22,9
	.half	.L6647-.L6646
	.byte	3,5,1,5,7,9
	.half	.L6648-.L6647
	.byte	1,5,42,7,9
	.half	.L6649-.L6648
	.byte	3,9,1,5,5,9
	.half	.L6650-.L6649
	.byte	3,73,1,5,23,9
	.half	.L826-.L6650
	.byte	3,60,1,5,8,9
	.half	.L6651-.L826
	.byte	1,5,18,7,9
	.half	.L834-.L6651
	.byte	3,56,1,5,28,9
	.half	.L6652-.L834
	.byte	1,5,18,9
	.half	.L3829-.L6652
	.byte	3,2,1,5,3,9
	.half	.L6653-.L3829
	.byte	1,5,46,7,9
	.half	.L6654-.L6653
	.byte	3,2,1,9
	.half	.L6655-.L6654
	.byte	3,1,1,5,44,9
	.half	.L6656-.L6655
	.byte	3,1,1,5,18,9
	.half	.L837-.L6656
	.byte	3,3,1,5,37,9
	.half	.L3822-.L837
	.byte	1,5,34,9
	.half	.L6657-.L3822
	.byte	1,5,29,9
	.half	.L3830-.L6657
	.byte	3,12,1,9
	.half	.L6658-.L3830
	.byte	3,1,1,5,27,9
	.half	.L6659-.L6658
	.byte	3,1,1,5,3,9
	.half	.L3826-.L6659
	.byte	3,2,1,5,41,7,9
	.half	.L6660-.L3826
	.byte	3,8,1,5,39,9
	.half	.L6661-.L6660
	.byte	1,5,25,9
	.half	.L6662-.L6661
	.byte	3,1,1,5,39,9
	.half	.L6663-.L6662
	.byte	1,5,50,9
	.half	.L3831-.L6663
	.byte	3,127,1,5,17,9
	.half	.L838-.L3831
	.byte	3,5,1,5,33,9
	.half	.L6664-.L838
	.byte	1,5,20,9
	.half	.L6665-.L6664
	.byte	3,4,1,5,40,9
	.half	.L6666-.L6665
	.byte	1,5,5,9
	.half	.L6667-.L6666
	.byte	1,5,34,7,9
	.half	.L6668-.L6667
	.byte	3,2,1,5,21,9
	.half	.L6669-.L6668
	.byte	3,1,1,5,65,9
	.half	.L6670-.L6669
	.byte	3,127,1,5,46,9
	.half	.L6671-.L6670
	.byte	3,3,1,5,67,9
	.half	.L6672-.L6671
	.byte	3,127,1,5,46,9
	.half	.L6673-.L6672
	.byte	3,3,1,5,67,9
	.half	.L6674-.L6673
	.byte	3,127,1,5,7,9
	.half	.L6675-.L6674
	.byte	3,3,1,5,20,7,9
	.half	.L6676-.L6675
	.byte	3,2,1,5,46,9
	.half	.L3832-.L6676
	.byte	1,5,21,9
	.half	.L841-.L3832
	.byte	3,10,1,5,37,9
	.half	.L6677-.L841
	.byte	1,5,20,9
	.half	.L6678-.L6677
	.byte	3,1,1,5,32,9
	.half	.L842-.L6678
	.byte	3,3,1,5,38,9
	.half	.L6679-.L842
	.byte	3,1,1,5,36,9
	.half	.L3833-.L6679
	.byte	1,5,41,9
	.half	.L6680-.L3833
	.byte	3,2,1,5,33,9
	.half	.L2976-.L6680
	.byte	3,133,127,1,5,38,9
	.half	.L836-.L2976
	.byte	3,6,1,5,36,9
	.half	.L6681-.L836
	.byte	1,5,32,9
	.half	.L6682-.L6681
	.byte	3,1,1,5,30,9
	.half	.L6683-.L6682
	.byte	1,5,60,9
	.half	.L6684-.L6683
	.byte	3,3,1,5,24,9
	.half	.L3834-.L6684
	.byte	3,1,1,5,5,9
	.half	.L3835-.L3834
	.byte	3,4,1,5,13,7,9
	.half	.L6685-.L3835
	.byte	3,4,1,5,3,9
	.half	.L833-.L6685
	.byte	3,4,1,5,1,9
	.half	.L3836-.L833
	.byte	3,1,1,7,9
	.half	.L1546-.L3836
	.byte	0,1,1
.L6619:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lGcErasePrevSector')
	.sect	'.debug_ranges'
.L1545:
	.word	-1,.L1166,0,.L1546-.L1166,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lGcProgramStatePage')
	.sect	'.debug_info'
.L1547:
	.word	2011
	.half	3
	.word	.L1548
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1550,.L1549
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lGcProgramStatePage',0,1,238,82,14
	.word	.L1592
	.byte	1,1
	.word	.L1168,.L2984,.L1167
	.byte	4
	.byte	'GcState',0,1,238,82,50
	.word	.L2985,.L2986
	.byte	5
	.word	.L1168,.L2984
	.byte	6
	.byte	'DestAddr',0,1,240,82,26
	.word	.L1589,.L2987
	.byte	6
	.byte	'FreePages',0,1,241,82,26
	.word	.L1589,.L2988
	.byte	6
	.byte	'PageCount',0,1,242,82,26
	.word	.L1589,.L2989
	.byte	6
	.byte	'StateDataPtr',0,1,243,82,26
	.word	.L1579,.L2990
	.byte	6
	.byte	'BankNumber',0,1,244,82,26
	.word	.L1592,.L2991
	.byte	6
	.byte	'Error',0,1,245,82,26
	.word	.L1592,.L2992
	.byte	7
	.word	.L2993,.L2994,.L2995
	.byte	8
	.word	.L2996,.L2997
	.byte	9
	.word	.L2998,.L2994,.L2995
	.byte	6
	.byte	'StateDataPtr',0,1,253,83,25
	.word	.L1579,.L2999
	.byte	6
	.byte	'SrcAddr',0,1,254,83,25
	.word	.L1622,.L3000
	.byte	6
	.byte	'DestAddr',0,1,255,83,25
	.word	.L1589,.L3001
	.byte	6
	.byte	'ReturnVal1',0,1,128,84,25
	.word	.L1592,.L3002
	.byte	6
	.byte	'NewGcState',0,1,129,84,25
	.word	.L1592,.L3003
	.byte	7
	.word	.L1684,.L3004,.L3005
	.byte	8
	.word	.L1687,.L3006
	.byte	9
	.word	.L1689,.L3004,.L3005
	.byte	7
	.word	.L1690,.L3004,.L3007
	.byte	8
	.word	.L1691,.L3008
	.byte	10
	.word	.L1693,.L3004,.L3007
	.byte	0,0,0,7
	.word	.L3009,.L852,.L855
	.byte	8
	.word	.L3010,.L3011
	.byte	9
	.word	.L3012,.L852,.L855
	.byte	6
	.byte	'StateDataPtr',0,1,242,84,27
	.word	.L1579,.L3013
	.byte	6
	.byte	'SectorInfoPtr',0,1,243,84,27
	.word	.L1585,.L3014
	.byte	6
	.byte	'BankNumber',0,1,244,84,27
	.word	.L1592,.L3015
	.byte	6
	.byte	'NewGcState',0,1,245,84,27
	.word	.L1592,.L3016
	.byte	6
	.byte	'DestAddr',0,1,246,84,27
	.word	.L1589,.L3017
	.byte	6
	.byte	'FreePages',0,1,247,84,27
	.word	.L1589,.L3018
	.byte	6
	.byte	'PageCount',0,1,248,84,27
	.word	.L1589,.L3019
	.byte	6
	.byte	'PendReqStatePtr',0,1,249,84,27
	.word	.L1622,.L3020
	.byte	6
	.byte	'PendReqBlkNum',0,1,250,84,24
	.word	.L1781,.L3021
	.byte	6
	.byte	'PendReqBlkIndex',0,1,251,84,24
	.word	.L1781,.L3022
	.byte	6
	.byte	'PendReqBlkPtr',0,1,252,84,27
	.word	.L1807,.L3023
	.byte	7
	.word	.L3024,.L868,.L3025
	.byte	8
	.word	.L3026,.L3027
	.byte	11
	.word	.L3028,.L3029
	.byte	6
	.byte	'NewGcState',0,1,165,86,27
	.word	.L1592,.L3036
	.byte	6
	.byte	'StateDataPtr',0,1,169,86,27
	.word	.L1579,.L3037
	.byte	0,0,7
	.word	.L1684,.L3038,.L3039
	.byte	8
	.word	.L1687,.L3006
	.byte	9
	.word	.L1689,.L3038,.L3039
	.byte	7
	.word	.L1690,.L3038,.L3040
	.byte	8
	.word	.L1691,.L3008
	.byte	10
	.word	.L1693,.L3038,.L3040
	.byte	0,0,0,7
	.word	.L2588,.L3041,.L3042
	.byte	8
	.word	.L2591,.L3043
	.byte	8
	.word	.L2593,.L3044
	.byte	9
	.word	.L2595,.L3041,.L3042
	.byte	6
	.byte	'RetVal',0,1,254,33,11
	.word	.L1592,.L3045
	.byte	0,0,7
	.word	.L2602,.L3046,.L3047
	.byte	8
	.word	.L2603,.L3048
	.byte	9
	.word	.L2605,.L3046,.L3047
	.byte	6
	.byte	'StateDataPtr',0,1,176,109,22
	.word	.L1579,.L3049
	.byte	6
	.byte	'DestAddr',0,1,177,109,22
	.word	.L1589,.L3050
	.byte	6
	.byte	'WLAddr',0,1,178,109,22
	.word	.L1589,.L3051
	.byte	6
	.byte	'Offset',0,1,179,109,22
	.word	.L1589,.L3052
	.byte	6
	.byte	'BlkPages',0,1,180,109,22
	.word	.L1781,.L3053
	.byte	6
	.byte	'RemainingPages',0,1,181,109,22
	.word	.L1589,.L3054
	.byte	6
	.byte	'BankNumber',0,1,182,109,22
	.word	.L1592,.L3055
	.byte	6
	.byte	'ReturnValue',0,1,183,109,22
	.word	.L1592,.L3056
	.byte	7
	.word	.L1912,.L880,.L3057
	.byte	8
	.word	.L1915,.L3058
	.byte	10
	.word	.L1917,.L880,.L3057
	.byte	0,7
	.word	.L1684,.L3059,.L3060
	.byte	8
	.word	.L1687,.L3006
	.byte	9
	.word	.L1689,.L3059,.L3060
	.byte	7
	.word	.L1690,.L3059,.L3061
	.byte	8
	.word	.L1691,.L3008
	.byte	10
	.word	.L1693,.L3059,.L3061
	.byte	0,0,0,7
	.word	.L2588,.L3062,.L3063
	.byte	8
	.word	.L2591,.L3043
	.byte	8
	.word	.L2593,.L3044
	.byte	9
	.word	.L2595,.L3062,.L3063
	.byte	6
	.byte	'RetVal',0,1,254,33,11
	.word	.L1592,.L3064
	.byte	0,0,7
	.word	.L1684,.L3063,.L3065
	.byte	8
	.word	.L1687,.L3006
	.byte	9
	.word	.L1689,.L3063,.L3065
	.byte	7
	.word	.L1690,.L3063,.L3066
	.byte	8
	.word	.L1691,.L3008
	.byte	10
	.word	.L1693,.L3063,.L3066
	.byte	0,0,0,7
	.word	.L2588,.L3067,.L3068
	.byte	8
	.word	.L2591,.L3043
	.byte	8
	.word	.L2593,.L3044
	.byte	9
	.word	.L2595,.L3067,.L3068
	.byte	6
	.byte	'RetVal',0,1,254,33,11
	.word	.L1592,.L3069
	.byte	0,0,0,0,7
	.word	.L3024,.L3030,.L3031
	.byte	8
	.word	.L3026,.L3027
	.byte	0,7
	.word	.L3024,.L878,.L3032
	.byte	8
	.word	.L3026,.L3027
	.byte	0,7
	.word	.L3024,.L870,.L3033
	.byte	8
	.word	.L3026,.L3027
	.byte	0,7
	.word	.L3024,.L872,.L3034
	.byte	8
	.word	.L3026,.L3027
	.byte	0,7
	.word	.L1684,.L3070,.L3071
	.byte	8
	.word	.L1687,.L3006
	.byte	9
	.word	.L1689,.L3070,.L3071
	.byte	7
	.word	.L1690,.L3070,.L3072
	.byte	8
	.word	.L1691,.L3008
	.byte	10
	.word	.L1693,.L3070,.L3072
	.byte	0,0,0,7
	.word	.L3024,.L3035,.L855
	.byte	8
	.word	.L3026,.L3027
	.byte	0,0,0,0,0,7
	.word	.L1684,.L3073,.L911
	.byte	8
	.word	.L1687,.L3006
	.byte	9
	.word	.L1689,.L3073,.L911
	.byte	7
	.word	.L1690,.L3073,.L3074
	.byte	8
	.word	.L1691,.L3008
	.byte	10
	.word	.L1693,.L3073,.L3074
	.byte	0,0,0,7
	.word	.L3075,.L3076,.L3077
	.byte	8
	.word	.L3078,.L3079
	.byte	8
	.word	.L3080,.L3081
	.byte	9
	.word	.L3082,.L3076,.L3077
	.byte	6
	.byte	'RetVal',0,1,174,34,11
	.word	.L1592,.L3083
	.byte	0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lGcProgramStatePage')
	.sect	'.debug_abbrev'
.L1548:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,29,1,49,16,17,1,18,1,0,0,8,5,0,49,16,2,6,0,0,9,11,1,49,16,17,1,18
	.byte	1,0,0,10,11,0,49,16,17,1,18,1,0,0,11,11,1,49,16,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lGcProgramStatePage')
	.sect	'.debug_line'
.L1549:
	.word	.L6687-.L6686
.L6686:
	.half	3
	.word	.L6689-.L6688
.L6688:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6689:
	.byte	5,14,7,0,5,2
	.word	.L1168
	.byte	3,237,210,0,1,5,9,9
	.half	.L3839-.L1168
	.byte	3,9,1,5,18,9
	.half	.L3841-.L3839
	.byte	3,1,1,5,28,9
	.half	.L6690-.L3841
	.byte	1,5,19,9
	.half	.L3842-.L6690
	.byte	3,2,1,5,3,9
	.half	.L6691-.L3842
	.byte	1,5,38,7,9
	.half	.L6692-.L6691
	.byte	3,2,1,5,36,9
	.half	.L3844-.L6692
	.byte	1,5,21,9
	.half	.L6693-.L3844
	.byte	3,2,1,5,8,9
	.half	.L6694-.L6693
	.byte	1,5,22,7,9
	.half	.L6695-.L6694
	.byte	3,1,1,5,38,9
	.half	.L6696-.L6695
	.byte	1,5,13,7,9
	.half	.L6697-.L6696
	.byte	3,2,1,5,27,9
	.half	.L3845-.L6697
	.byte	1,5,31,9
	.half	.L847-.L3845
	.byte	3,4,1,5,36,9
	.half	.L2994-.L847
	.byte	3,252,0,1,5,18,9
	.half	.L3846-.L2994
	.byte	3,3,1,5,28,9
	.half	.L6698-.L3846
	.byte	1,5,26,9
	.half	.L3847-.L6698
	.byte	3,1,1,5,25,9
	.half	.L3848-.L3847
	.byte	3,1,1,5,14,9
	.half	.L3849-.L3848
	.byte	3,1,1,5,18,9
	.half	.L3850-.L3849
	.byte	3,3,1,5,3,9
	.half	.L6699-.L3850
	.byte	1,5,39,7,9
	.half	.L6700-.L6699
	.byte	3,15,1,5,6,9
	.half	.L850-.L6700
	.byte	3,5,1,5,47,7,9
	.half	.L6701-.L850
	.byte	1,5,63,9
	.half	.L6702-.L6701
	.byte	1,5,20,7,9
	.half	.L851-.L6702
	.byte	3,3,1,5,5,9
	.half	.L6703-.L851
	.byte	1,5,37,7,9
	.half	.L6704-.L6703
	.byte	3,3,1,5,35,9
	.half	.L6705-.L6704
	.byte	1,5,19,9
	.half	.L6706-.L6705
	.byte	3,1,1,5,40,9
	.half	.L6707-.L6706
	.byte	1,5,18,9
	.half	.L3004-.L6707
	.byte	3,241,76,1,5,41,9
	.half	.L3007-.L3004
	.byte	3,27,1,5,47,9
	.half	.L3005-.L3007
	.byte	3,246,50,1,5,35,9
	.half	.L6708-.L3005
	.byte	1,5,7,9
	.half	.L6709-.L6708
	.byte	3,2,1,5,22,9
	.half	.L856-.L6709
	.byte	3,6,1,5,11,9
	.half	.L6710-.L856
	.byte	3,1,1,5,22,9
	.half	.L858-.L6710
	.byte	3,6,1,5,11,9
	.half	.L6711-.L858
	.byte	3,1,1,5,22,9
	.half	.L860-.L6711
	.byte	3,7,1,5,44,9
	.half	.L6712-.L860
	.byte	3,8,1,5,27,9
	.half	.L853-.L6712
	.byte	3,9,1,5,41,9
	.half	.L6713-.L853
	.byte	1,5,5,9
	.half	.L3852-.L6713
	.byte	3,121,1,5,20,9
	.half	.L852-.L3852
	.byte	3,54,1,5,30,9
	.half	.L6714-.L852
	.byte	1,5,28,9
	.half	.L3853-.L6714
	.byte	3,1,1,5,37,9
	.half	.L3854-.L3853
	.byte	3,1,1,5,5,9
	.half	.L3855-.L3854
	.byte	3,2,1,5,20,9
	.half	.L868-.L3855
	.byte	3,5,1,5,9,9
	.half	.L3025-.L868
	.byte	3,1,1,5,45,9
	.half	.L869-.L3025
	.byte	3,6,1,5,43,9
	.half	.L6715-.L869
	.byte	1,5,37,9
	.half	.L6716-.L6715
	.byte	3,2,1,5,52,9
	.half	.L6717-.L6716
	.byte	1,5,50,9
	.half	.L6718-.L6717
	.byte	3,3,1,5,53,9
	.half	.L3859-.L6718
	.byte	3,1,1,5,38,9
	.half	.L3863-.L3859
	.byte	3,1,1,5,60,9
	.half	.L6719-.L3863
	.byte	3,1,1,5,18,9
	.half	.L3038-.L6719
	.byte	3,128,76,1,5,41,9
	.half	.L3040-.L3038
	.byte	3,27,1,5,39,9
	.half	.L3039-.L3040
	.byte	3,229,51,1,5,43,9
	.half	.L6720-.L3039
	.byte	3,2,1,5,57,9
	.half	.L6721-.L6720
	.byte	3,2,1,5,51,9
	.half	.L6722-.L6721
	.byte	3,1,1,5,63,9
	.half	.L6723-.L6722
	.byte	1,5,48,9
	.half	.L6724-.L6723
	.byte	3,3,1,5,19,9
	.half	.L3856-.L6724
	.byte	3,2,1,5,35,9
	.half	.L3041-.L3856
	.byte	3,228,76,1,5,18,9
	.half	.L6725-.L3041
	.byte	3,2,1,5,28,9
	.half	.L6726-.L6725
	.byte	1,5,7,9
	.half	.L3867-.L6726
	.byte	1,5,9,9
	.half	.L3868-.L3867
	.byte	3,158,51,1,5,44,7,9
	.half	.L3042-.L3868
	.byte	3,11,1,5,11,9
	.half	.L3869-.L3042
	.byte	3,7,1,5,23,9
	.half	.L875-.L3869
	.byte	3,3,1,5,39,9
	.half	.L6727-.L875
	.byte	3,2,1,5,13,9
	.half	.L6728-.L6727
	.byte	3,9,1,5,33,9
	.half	.L6729-.L6728
	.byte	1,5,12,9
	.half	.L6730-.L6729
	.byte	1,5,34,7,9
	.half	.L6731-.L6730
	.byte	3,1,1,5,31,9
	.half	.L6732-.L6731
	.byte	1,5,55,7,9
	.half	.L877-.L6732
	.byte	3,5,1,5,51,9
	.half	.L3871-.L877
	.byte	3,1,1,5,29,9
	.half	.L3872-.L3871
	.byte	3,1,1,5,39,9
	.half	.L6733-.L3872
	.byte	1,5,58,9
	.half	.L6734-.L6733
	.byte	1,5,15,9
	.half	.L3046-.L6734
	.byte	3,237,23,1,5,28,9
	.half	.L3862-.L3046
	.byte	3,2,1,5,44,9
	.half	.L3876-.L3862
	.byte	3,1,1,5,26,9
	.half	.L3860-.L3876
	.byte	3,1,1,5,3,9
	.half	.L3857-.L3860
	.byte	3,3,1,5,14,7,9
	.half	.L6735-.L3857
	.byte	3,2,1,5,39,9
	.half	.L3877-.L6735
	.byte	1,5,53,9
	.half	.L879-.L3877
	.byte	3,4,1,5,14,9
	.half	.L3873-.L879
	.byte	1,5,18,9
	.half	.L880-.L3873
	.byte	3,180,179,127,1,5,3,9
	.half	.L3057-.L880
	.byte	3,209,204,0,1,5,18,7,9
	.half	.L3059-.L3057
	.byte	3,203,179,127,1,5,41,9
	.half	.L3061-.L3059
	.byte	3,27,1,5,44,9
	.half	.L3060-.L3061
	.byte	3,166,204,0,1,5,58,9
	.half	.L3878-.L3060
	.byte	3,2,1,5,24,9
	.half	.L3879-.L3878
	.byte	3,4,1,5,12,9
	.half	.L3882-.L3879
	.byte	3,4,1,5,35,9
	.half	.L3062-.L3882
	.byte	3,163,180,127,1,5,18,9
	.half	.L6736-.L3062
	.byte	3,2,1,5,28,9
	.half	.L6737-.L6736
	.byte	1,5,7,9
	.half	.L6738-.L6737
	.byte	1,5,5,9
	.half	.L3883-.L6738
	.byte	3,226,203,0,1,5,18,7,9
	.half	.L3063-.L3883
	.byte	3,174,179,127,1,5,41,9
	.half	.L3066-.L3063
	.byte	3,27,1,9
	.half	.L3065-.L3066
	.byte	3,186,204,0,1,5,58,9
	.half	.L881-.L3065
	.byte	3,5,1,5,35,9
	.half	.L3067-.L881
	.byte	3,148,180,127,1,5,18,9
	.half	.L6739-.L3067
	.byte	3,2,1,5,28,9
	.half	.L6740-.L6739
	.byte	1,5,7,9
	.half	.L6741-.L6740
	.byte	1,5,3,9
	.half	.L3885-.L6741
	.byte	3,238,203,0,1,5,18,7,9
	.half	.L3068-.L3885
	.byte	3,6,1,5,9,9
	.half	.L3886-.L3068
	.byte	1,5,38,7,9
	.half	.L6742-.L3886
	.byte	3,1,1,5,10,9
	.half	.L6743-.L6742
	.byte	3,1,1,5,7,7,9
	.half	.L6744-.L6743
	.byte	3,10,1,5,42,7,9
	.half	.L6745-.L6744
	.byte	3,7,1,5,40,9
	.half	.L6746-.L6745
	.byte	1,5,21,9
	.half	.L6747-.L6746
	.byte	3,1,1,9
	.half	.L884-.L6747
	.byte	3,6,1,5,37,9
	.half	.L6748-.L884
	.byte	1,5,5,9
	.half	.L6749-.L6748
	.byte	1,5,22,7,9
	.half	.L6750-.L6749
	.byte	3,4,1,5,7,9
	.half	.L6751-.L6750
	.byte	1,5,36,7,9
	.half	.L6752-.L6751
	.byte	3,3,1,5,34,9
	.half	.L6753-.L6752
	.byte	1,5,5,9
	.half	.L6754-.L6753
	.byte	3,121,1,5,17,9
	.half	.L883-.L6754
	.byte	3,14,1,5,3,9
	.half	.L887-.L883
	.byte	3,3,1,5,11,9
	.half	.L3047-.L887
	.byte	3,168,103,1,5,46,7,9
	.half	.L6755-.L3047
	.byte	3,7,1,5,33,9
	.half	.L876-.L6755
	.byte	3,126,1,5,46,9
	.half	.L6756-.L876
	.byte	1,5,44,9
	.half	.L6757-.L6756
	.byte	3,2,1,5,46,9
	.half	.L6758-.L6757
	.byte	3,1,1,5,44,9
	.half	.L6759-.L6758
	.byte	1,5,46,9
	.half	.L6760-.L6759
	.byte	3,1,1,5,44,9
	.half	.L6761-.L6760
	.byte	1,5,24,9
	.half	.L3030-.L6761
	.byte	3,1,1,5,13,9
	.half	.L3031-.L3030
	.byte	3,4,1,5,20,9
	.half	.L878-.L3031
	.byte	3,10,1,5,9,9
	.half	.L3032-.L878
	.byte	3,2,1,5,20,9
	.half	.L870-.L3032
	.byte	3,6,1,5,9,9
	.half	.L3033-.L870
	.byte	3,1,1,5,20,9
	.half	.L872-.L3033
	.byte	3,5,1,5,9,9
	.half	.L3034-.L872
	.byte	3,1,1,5,45,9
	.half	.L871-.L3034
	.byte	3,6,1,5,43,9
	.half	.L6762-.L871
	.byte	1,5,50,9
	.half	.L6763-.L6762
	.byte	3,2,1,5,33,9
	.half	.L6764-.L6763
	.byte	3,2,1,5,53,9
	.half	.L3890-.L6764
	.byte	3,2,1,5,38,9
	.half	.L3892-.L3890
	.byte	3,1,1,5,18,9
	.half	.L3070-.L3892
	.byte	3,149,75,1,5,41,9
	.half	.L3072-.L3070
	.byte	3,27,1,5,39,9
	.half	.L3071-.L3072
	.byte	3,209,52,1,5,20,9
	.half	.L3035-.L3071
	.byte	3,41,1,5,30,9
	.half	.L6765-.L3035
	.byte	1,5,20,9
	.half	.L3894-.L6765
	.byte	3,2,1,5,5,9
	.half	.L6766-.L3894
	.byte	1,5,16,7,9
	.half	.L6767-.L6766
	.byte	3,2,1,5,20,9
	.half	.L6768-.L6767
	.byte	3,7,1,5,5,9
	.half	.L6769-.L6768
	.byte	1,5,38,7,9
	.half	.L6770-.L6769
	.byte	3,5,1,5,41,9
	.half	.L3889-.L6770
	.byte	3,1,1,5,39,9
	.half	.L6771-.L3889
	.byte	1,5,5,9
	.half	.L6772-.L6771
	.byte	3,122,1,5,18,9
	.half	.L895-.L6772
	.byte	3,12,1,5,30,9
	.half	.L855-.L895
	.byte	3,148,126,1,5,5,9
	.half	.L2995-.L855
	.byte	3,173,126,1,5,28,9
	.half	.L846-.L2995
	.byte	3,7,1,5,20,9
	.half	.L3896-.L846
	.byte	3,1,1,5,17,9
	.half	.L6773-.L3896
	.byte	1,5,5,9
	.half	.L3895-.L6773
	.byte	3,9,1,5,25,9
	.half	.L901-.L3895
	.byte	3,8,1,5,9,9
	.half	.L6774-.L901
	.byte	1,5,26,7,9
	.half	.L6775-.L6774
	.byte	3,3,1,5,11,9
	.half	.L6776-.L6775
	.byte	1,5,53,7,9
	.half	.L6777-.L6776
	.byte	3,3,1,5,63,9
	.half	.L3897-.L6777
	.byte	1,5,53,9
	.half	.L908-.L3897
	.byte	3,5,1,5,11,9
	.half	.L3899-.L908
	.byte	3,125,1,5,33,9
	.half	.L907-.L3899
	.byte	3,11,1,5,54,9
	.half	.L3900-.L907
	.byte	3,2,1,5,41,9
	.half	.L912-.L3900
	.byte	3,2,1,5,18,9
	.half	.L3073-.L912
	.byte	3,227,77,1,5,41,9
	.half	.L3074-.L3073
	.byte	3,27,1,5,37,9
	.half	.L911-.L3074
	.byte	3,128,50,1,5,54,9
	.half	.L6778-.L911
	.byte	1,5,37,7,9
	.half	.L6779-.L6778
	.byte	3,4,1,5,57,9
	.half	.L6780-.L6779
	.byte	3,5,1,5,72,9
	.half	.L6781-.L6780
	.byte	1,5,57,9
	.half	.L3901-.L6781
	.byte	3,2,1,5,17,9
	.half	.L3076-.L3901
	.byte	3,245,78,1,5,9,9
	.half	.L3902-.L3076
	.byte	3,144,49,1,5,17,7,9
	.half	.L3077-.L3902
	.byte	3,2,1,5,30,9
	.half	.L6782-.L3077
	.byte	1,5,43,9
	.half	.L913-.L6782
	.byte	3,4,1,5,66,9
	.half	.L3903-.L913
	.byte	3,2,1,5,9,9
	.half	.L6783-.L3903
	.byte	3,2,1,5,33,9
	.half	.L902-.L6783
	.byte	3,9,1,5,41,9
	.half	.L3904-.L902
	.byte	3,1,1,5,40,9
	.half	.L6784-.L3904
	.byte	3,2,1,5,30,9
	.half	.L6785-.L6784
	.byte	3,1,1,5,39,9
	.half	.L915-.L6785
	.byte	3,125,1,5,30,9
	.half	.L6786-.L915
	.byte	3,3,1,5,15,9
	.half	.L3898-.L6786
	.byte	3,126,1,5,3,9
	.half	.L849-.L3898
	.byte	3,12,1,5,1,9
	.half	.L3905-.L849
	.byte	3,1,1,7,9
	.half	.L1551-.L3905
	.byte	0,1,1
.L6687:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lGcProgramStatePage')
	.sect	'.debug_ranges'
.L1550:
	.word	-1,.L1168,0,.L1551-.L1168,0,0
.L3029:
	.word	-1,.L1168,.L868-.L1168,.L3025-.L1168,.L3030-.L1168,.L3031-.L1168,.L878-.L1168,.L3032-.L1168,.L870-.L1168
	.word	.L3033-.L1168,.L872-.L1168,.L3034-.L1168,.L3035-.L1168,.L855-.L1168,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lGetDFLASHPages')
	.sect	'.debug_info'
.L1552:
	.word	283
	.half	3
	.word	.L1553
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1555,.L1554
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lGetDFLASHPages',0,1,221,87,21
	.word	.L1781
	.byte	1,1
	.word	.L1172,.L3084,.L1171
	.byte	4
	.byte	'Size',0,1,221,87,54
	.word	.L3085,.L3086
	.byte	5
	.word	.L1172,.L3084
	.byte	6
	.byte	'PhysicalPages',0,1,223,87,17
	.word	.L1781,.L3087
	.byte	6
	.byte	'NewSize',0,1,224,87,17
	.word	.L1781,.L3088
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lGetDFLASHPages')
	.sect	'.debug_abbrev'
.L1553:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lGetDFLASHPages')
	.sect	'.debug_line'
.L1554:
	.word	.L6788-.L6787
.L6787:
	.half	3
	.word	.L6790-.L6789
.L6789:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6790:
	.byte	5,17,7,0,5,2
	.word	.L1172
	.byte	3,225,215,0,1,5,30,9
	.half	.L3920-.L1172
	.byte	3,4,1,5,18,9
	.half	.L941-.L3920
	.byte	3,2,1,5,13,9
	.half	.L3922-.L941
	.byte	3,1,1,5,30,9
	.half	.L940-.L3922
	.byte	3,125,1,5,15,7,9
	.half	.L6791-.L940
	.byte	3,7,1,5,18,9
	.half	.L6792-.L6791
	.byte	3,2,1,5,1,9
	.half	.L3924-.L6792
	.byte	3,5,1,7,9
	.half	.L1556-.L3924
	.byte	0,1,1
.L6788:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lGetDFLASHPages')
	.sect	'.debug_ranges'
.L1555:
	.word	-1,.L1172,0,.L1556-.L1172,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lGetFreeDFLASHPages')
	.sect	'.debug_info'
.L1557:
	.word	405
	.half	3
	.word	.L1558
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1560,.L1559
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lGetFreeDFLASHPages',0,1,141,88,15
	.word	.L1589
	.byte	1,1
	.word	.L1174,.L3089,.L1173
	.byte	4
	.byte	'BankNumber',0,1,141,88,51
	.word	.L3090,.L3091
	.byte	4
	.byte	'StartAddr',0,1,142,88,52
	.word	.L3092,.L3093
	.byte	5
	.word	.L1174,.L3089
	.byte	6
	.byte	'StateDataPtr',0,1,144,88,28
	.word	.L1631,.L3094
	.byte	6
	.byte	'FreePages',0,1,145,88,22
	.word	.L1589,.L3095
	.byte	6
	.byte	'EndAddr',0,1,146,88,22
	.word	.L1589,.L3096
	.byte	6
	.byte	'WLAddr',0,1,147,88,22
	.word	.L1589,.L3097
	.byte	6
	.byte	'RemainingPages',0,1,148,88,22
	.word	.L2093,.L3098
	.byte	6
	.byte	'Count',0,1,149,88,22
	.word	.L1592,.L3099
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lGetFreeDFLASHPages')
	.sect	'.debug_abbrev'
.L1558:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lGetFreeDFLASHPages')
	.sect	'.debug_line'
.L1559:
	.word	.L6794-.L6793
.L6793:
	.half	3
	.word	.L6796-.L6795
.L6795:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6796:
	.byte	5,18,7,0,5,2
	.word	.L1174
	.byte	3,150,216,0,1,5,28,9
	.half	.L6797-.L1174
	.byte	1,5,7,9
	.half	.L3925-.L6797
	.byte	3,3,1,5,18,9
	.half	.L6798-.L3925
	.byte	1,5,37,9
	.half	.L6799-.L6798
	.byte	3,2,1,5,18,9
	.half	.L3926-.L6799
	.byte	3,126,1,5,39,9
	.half	.L6800-.L3926
	.byte	3,9,1,5,60,9
	.half	.L6801-.L6800
	.byte	1,5,9,9
	.half	.L6802-.L6801
	.byte	3,4,1,5,74,9
	.half	.L3928-.L6802
	.byte	3,1,1,5,41,9
	.half	.L944-.L3928
	.byte	3,2,1,5,70,9
	.half	.L6803-.L944
	.byte	1,5,10,9
	.half	.L3930-.L6803
	.byte	3,1,1,5,43,7,9
	.half	.L6804-.L3930
	.byte	1,5,39,9
	.half	.L6805-.L6804
	.byte	3,2,1,5,10,9
	.half	.L945-.L6805
	.byte	3,3,1,5,44,9
	.half	.L943-.L945
	.byte	3,120,1,5,56,9
	.half	.L6806-.L943
	.byte	1,5,74,9
	.half	.L6807-.L6806
	.byte	1,5,22,7,9
	.half	.L6808-.L6807
	.byte	3,12,1,5,1,9
	.half	.L3932-.L6808
	.byte	3,11,1,7,9
	.half	.L1561-.L3932
	.byte	0,1,1
.L6794:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lGetFreeDFLASHPages')
	.sect	'.debug_ranges'
.L1560:
	.word	-1,.L1174,0,.L1561-.L1174,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_lReportError')
	.sect	'.debug_info'
.L1562:
	.word	276
	.half	3
	.word	.L1563
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1565,.L1564
	.byte	2
	.word	.L1213
	.byte	3
	.byte	'Fee_lReportError',0,1,230,141,1,13,1,1
	.word	.L1208,.L3100,.L1207
	.byte	4
	.byte	'ApiId',0,1,230,141,1,36
	.word	.L1592,.L3101
	.byte	4
	.byte	'ErrorId',0,1,230,141,1,49
	.word	.L1592,.L3102
	.byte	4
	.byte	'ErrorType',0,1,230,141,1,64
	.word	.L1592,.L3103
	.byte	5
	.word	.L1208,.L3100
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_lReportError')
	.sect	'.debug_abbrev'
.L1563:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Fee_lReportError')
	.sect	'.debug_line'
.L1564:
	.word	.L6810-.L6809
.L6809:
	.half	3
	.word	.L6812-.L6811
.L6811:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0,0,0,0,0
.L6812:
	.byte	5,13,7,0,5,2
	.word	.L1208
	.byte	3,229,141,1,1,5,3,9
	.half	.L4086-.L1208
	.byte	3,44,1,5,47,7,9
	.half	.L6813-.L4086
	.byte	3,5,1,5,62,9
	.half	.L4082-.L6813
	.byte	1,5,86,9
	.half	.L4083-.L4082
	.byte	1,5,1,9
	.half	.L1068-.L4083
	.byte	3,4,1,7,9
	.half	.L1566-.L1068
	.byte	0,1,1
.L6810:
	.sdecl	'.debug_ranges',debug,cluster('Fee_lReportError')
	.sect	'.debug_ranges'
.L1565:
	.word	-1,.L1208,0,.L1566-.L1208,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_CfgPtr')
	.sect	'.debug_info'
.L1567:
	.word	181
	.half	3
	.word	.L1568
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1213
	.byte	3
	.byte	'Fee_CfgPtr',0,2,241,8,31
	.word	.L3104
	.byte	5,3
	.word	Fee_CfgPtr
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_CfgPtr')
	.sect	'.debug_abbrev'
.L1568:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_DataStrcutInitCrc')
	.sect	'.debug_info'
.L1569:
	.word	192
	.half	3
	.word	.L1570
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1213
	.byte	3
	.byte	'Fee_DataStrcutInitCrc',0,2,245,8,15
	.word	.L1589
	.byte	5,3
	.word	Fee_DataStrcutInitCrc
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_DataStrcutInitCrc')
	.sect	'.debug_abbrev'
.L1570:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Fee_StateHalf')
	.sect	'.debug_info'
.L1571:
	.word	184
	.half	3
	.word	.L1572
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Fee\\ssc\\src\\Fee.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1213
	.byte	3
	.byte	'Fee_StateHalf',0,2,154,9,21
	.word	.L3105
	.byte	5,3
	.word	Fee_StateHalf
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Fee_StateHalf')
	.sect	'.debug_abbrev'
.L1572:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_17_DisableGcStart')
	.sect	'.debug_loc'
.L1103:
	.word	-1,.L1104,0,.L1866-.L1104
	.half	2
	.byte	138,0
	.word	0,0
.L1867:
	.word	-1,.L1104,.L3313-.L1104,.L220-.L1104
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_17_EnableGcStart')
	.sect	'.debug_loc'
.L1101:
	.word	-1,.L1102,0,.L1864-.L1102
	.half	2
	.byte	138,0
	.word	0,0
.L1865:
	.word	-1,.L1102,.L3312-.L1102,.L219-.L1102
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_17_GetCycleCount')
	.sect	'.debug_loc'
.L1782:
	.word	-1,.L1100,.L3307-.L1100,.L3309-.L1100
	.half	1
	.byte	82
	.word	.L3310-.L1100,.L3309-.L1100
	.half	1
	.byte	84
	.word	0,0
.L1776:
	.word	-1,.L1100,0,.L1787-.L1100
	.half	1
	.byte	84
	.word	.L3302-.L1100,.L1774-.L1100
	.half	1
	.byte	88
	.word	.L3308-.L1100,.L3307-.L1100
	.half	1
	.byte	84
	.word	0,0
.L1778:
	.word	-1,.L1100,0,.L1787-.L1100
	.half	1
	.byte	100
	.word	.L3303-.L1100,.L1774-.L1100
	.half	1
	.byte	111
	.word	0,0
.L1789:
	.word	0,0
.L1099:
	.word	-1,.L1100,0,.L1774-.L1100
	.half	2
	.byte	138,0
	.word	0,0
.L1779:
	.word	-1,.L1100,.L3306-.L1100,.L212-.L1100
	.half	1
	.byte	82
	.word	.L3309-.L1100,.L209-.L1100
	.half	1
	.byte	82
	.word	0,0
.L1791:
	.word	0,0
.L1783:
	.word	-1,.L1100,.L1786-.L1100,.L1774-.L1100
	.half	1
	.byte	89
	.word	.L3311-.L1100,.L1774-.L1100
	.half	1
	.byte	82
	.word	0,0
.L1780:
	.word	-1,.L1100,.L3304-.L1100,.L208-.L1100
	.half	1
	.byte	108
	.word	0,0
.L1784:
	.word	-1,.L1100,.L3305-.L1100,.L3306-.L1100
	.half	1
	.byte	82
	.word	.L212-.L1100,.L3307-.L1100
	.half	1
	.byte	82
	.word	.L209-.L1100,.L208-.L1100
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_17_GetEccErrorInfo')
	.sect	'.debug_loc'
.L1875:
	.word	0,0
.L1886:
	.word	-1,.L1108,.L3329-.L1108,.L244-.L1108
	.half	1
	.byte	110
	.word	0,0
.L1887:
	.word	-1,.L1108,.L3333-.L1108,.L246-.L1108
	.half	1
	.byte	82
	.word	.L247-.L1108,.L244-.L1108
	.half	1
	.byte	82
	.word	0,0
.L1882:
	.word	-1,.L1108,.L3326-.L1108,.L3327-.L1108
	.half	1
	.byte	90
	.word	.L244-.L1108,.L243-.L1108
	.half	1
	.byte	90
	.word	0,0
.L1870:
	.word	-1,.L1108,0,.L3318-.L1108
	.half	1
	.byte	100
	.word	.L3319-.L1108,.L1868-.L1108
	.half	2
	.byte	145,120
	.word	.L3323-.L1108,.L3322-.L1108
	.half	1
	.byte	98
	.word	.L3336-.L1108,.L243-.L1108
	.half	1
	.byte	111
	.word	.L3337-.L1108,.L239-.L1108
	.half	1
	.byte	111
	.word	0,0
.L1888:
	.word	-1,.L1108,.L3334-.L1108,.L246-.L1108
	.half	5
	.byte	144,32,157,32,0
	.word	.L3335-.L1108,.L244-.L1108
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1885:
	.word	0,0
.L1873:
	.word	-1,.L1108,.L3318-.L1108,.L3322-.L1108
	.half	1
	.byte	82
	.word	.L239-.L1108,.L238-.L1108
	.half	1
	.byte	82
	.word	0,0
.L1107:
	.word	-1,.L1108,0,.L3317-.L1108
	.half	2
	.byte	138,0
	.word	.L3317-.L1108,.L1868-.L1108
	.half	2
	.byte	138,8
	.word	.L1868-.L1108,.L1868-.L1108
	.half	2
	.byte	138,0
	.word	0,0
.L1890:
	.word	-1,.L1108,.L3332-.L1108,.L3333-.L1108
	.half	1
	.byte	82
	.word	.L246-.L1108,.L247-.L1108
	.half	1
	.byte	82
	.word	0,0
.L1880:
	.word	0,0
.L1872:
	.word	-1,.L1108,0,.L3318-.L1108
	.half	1
	.byte	101
	.word	.L3320-.L1108,.L245-.L1108
	.half	1
	.byte	111
	.word	.L3324-.L1108,.L3322-.L1108
	.half	1
	.byte	100
	.word	.L243-.L1108,.L3337-.L1108
	.half	1
	.byte	111
	.word	.L239-.L1108,.L238-.L1108
	.half	1
	.byte	111
	.word	0,0
.L1874:
	.word	-1,.L1108,.L3321-.L1108,.L3322-.L1108
	.half	1
	.byte	88
	.word	.L3322-.L1108,.L245-.L1108
	.half	1
	.byte	82
	.word	.L3325-.L1108,.L1868-.L1108
	.half	1
	.byte	88
	.word	.L243-.L1108,.L239-.L1108
	.half	1
	.byte	82
	.word	.L3338-.L1108,.L1868-.L1108
	.half	1
	.byte	82
	.word	0,0
.L1889:
	.word	-1,.L1108,.L3328-.L1108,.L243-.L1108
	.half	1
	.byte	91
	.word	0,0
.L1883:
	.word	-1,.L1108,.L3330-.L1108,.L3331-.L1108
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_17_IllegalStateNotification')
	.sect	'.debug_loc'
.L1097:
	.word	-1,.L1098,0,.L1934-.L1098
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_17_InitCheck')
	.sect	'.debug_loc'
.L1853:
	.word	-1,.L1092,0,.L1851-.L1092
	.half	1
	.byte	100
	.word	0,0
.L1862:
	.word	-1,.L1092,.L3276-.L1092,.L167-.L1092
	.half	1
	.byte	81
	.word	0,0
.L1863:
	.word	-1,.L1092,.L3277-.L1092,.L3278-.L1092
	.half	1
	.byte	111
	.word	0,0
.L1860:
	.word	-1,.L1092,.L3275-.L1092,.L167-.L1092
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1091:
	.word	-1,.L1092,0,.L1851-.L1092
	.half	2
	.byte	138,0
	.word	0,0
.L1861:
	.word	-1,.L1092,.L3279-.L1092,.L1858-.L1092
	.half	1
	.byte	95
	.word	0,0
.L1854:
	.word	-1,.L1092,.L3274-.L1092,.L1851-.L1092
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_17_JobEraseErrorNotification')
	.sect	'.debug_loc'
.L1209:
	.word	-1,.L1210,0,.L1935-.L1210
	.half	2
	.byte	138,0
	.word	0,0
.L1936:
	.word	-1,.L1210,.L4088-.L1210,.L1935-.L1210
	.half	1
	.byte	82
	.word	0,0
.L1937:
	.word	-1,.L1210,.L4087-.L1210,.L1935-.L1210
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_17_JobProgErrorNotification')
	.sect	'.debug_loc'
.L1211:
	.word	-1,.L1212,0,.L1938-.L1212
	.half	2
	.byte	138,0
	.word	0,0
.L1939:
	.word	-1,.L1212,.L4090-.L1212,.L4091-.L1212
	.half	1
	.byte	82
	.word	.L4092-.L1212,.L4093-.L1212
	.half	1
	.byte	95
	.word	.L1070-.L1212,.L4094-.L1212
	.half	1
	.byte	95
	.word	0,0
.L1940:
	.word	-1,.L1212,.L4089-.L1212,.L1938-.L1212
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_Cancel')
	.sect	'.debug_loc'
.L1819:
	.word	0,0
.L1814:
	.word	0,0
.L1825:
	.word	-1,.L1082,.L3257-.L1082,.L3258-.L1082
	.half	1
	.byte	82
	.word	0,0
.L1081:
	.word	-1,.L1082,0,.L1811-.L1082
	.half	2
	.byte	138,0
	.word	0,0
.L1813:
	.word	-1,.L1082,.L1816-.L1082,.L1811-.L1082
	.half	1
	.byte	88
	.word	0,0
.L1821:
	.word	-1,.L1082,.L3254-.L1082,.L1811-.L1082
	.half	1
	.byte	89
	.word	0,0
.L1826:
	.word	-1,.L1082,.L3255-.L1082,.L3256-.L1082
	.half	1
	.byte	95
	.word	0,0
.L1812:
	.word	-1,.L1082,.L3259-.L1082,.L143-.L1082
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_EraseImmediateBlock')
	.sect	'.debug_loc'
.L1850:
	.word	-1,.L1090,0,.L1848-.L1090
	.half	1
	.byte	84
	.word	0,0
.L1089:
	.word	-1,.L1090,0,.L1848-.L1090
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_GetJobResult')
	.sect	'.debug_loc'
.L1085:
	.word	-1,.L1086,0,.L1830-.L1086
	.half	2
	.byte	138,0
	.word	0,0
.L1832:
	.word	-1,.L1086,.L3261-.L1086,.L1830-.L1086
	.half	1
	.byte	95
	.word	.L3263-.L1086,.L1830-.L1086
	.half	1
	.byte	82
	.word	0,0
.L1831:
	.word	-1,.L1086,.L3262-.L1086,.L158-.L1086
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_GetStatus')
	.sect	'.debug_loc'
.L1083:
	.word	-1,.L1084,0,.L1827-.L1084
	.half	2
	.byte	138,0
	.word	0,0
.L1828:
	.word	-1,.L1084,.L3260-.L1084,.L1827-.L1084
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_GetVersionInfo')
	.sect	'.debug_loc'
.L1109:
	.word	-1,.L1110,0,.L1573-.L1110
	.half	2
	.byte	138,0
	.word	0,0
.L1575:
	.word	-1,.L1110,0,.L1573-.L1110
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_Init')
	.sect	'.debug_loc'
.L1599:
	.word	0,0
.L1584:
	.word	0,0
.L1609:
	.word	0,0
.L1645:
	.word	-1,.L1074,.L3164-.L1074,.L37-.L1074
	.half	1
	.byte	110
	.word	.L3165-.L1074,.L3162-.L1074
	.half	1
	.byte	100
	.word	0,0
.L1633:
	.word	-1,.L1074,.L3156-.L1074,.L28-.L1074
	.half	1
	.byte	100
	.word	.L3159-.L1074,.L22-.L1074
	.half	1
	.byte	100
	.word	0,0
.L1623:
	.word	0,0
.L1634:
	.word	-1,.L1074,.L3157-.L1074,.L30-.L1074
	.half	1
	.byte	101
	.word	0,0
.L1578:
	.word	-1,.L1074,0,.L3107-.L1074
	.half	1
	.byte	100
	.word	0,0
.L1766:
	.word	-1,.L1074,.L3231-.L1074,.L2-.L1074
	.half	1
	.byte	81
	.word	0,0
.L1661:
	.word	-1,.L1074,.L3160-.L1074,.L22-.L1074
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1593:
	.word	0,0
.L1748:
	.word	0,0
.L1635:
	.word	0,0
.L1654:
	.word	0,0
.L1591:
	.word	-1,.L1074,.L3136-.L1074,.L10-.L1074
	.half	1
	.byte	89
	.word	0,0
.L1666:
	.word	0,0
.L1601:
	.word	0,0
.L1767:
	.word	-1,.L1074,.L3232-.L1074,.L1763-.L1074
	.half	1
	.byte	111
	.word	0,0
.L1764:
	.word	-1,.L1074,.L3230-.L1074,.L2-.L1074
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1073:
	.word	-1,.L1074,0,.L3106-.L1074
	.half	2
	.byte	138,0
	.word	.L3106-.L1074,.L1576-.L1074
	.half	2
	.byte	138,32
	.word	.L1576-.L1074,.L1576-.L1074
	.half	2
	.byte	138,0
	.word	0,0
.L1648:
	.word	-1,.L1074,.L3162-.L1074,.L3166-.L1074
	.half	1
	.byte	82
	.word	0,0
.L1624:
	.word	-1,.L1074,.L3151-.L1074,.L3152-.L1074
	.half	1
	.byte	82
	.word	0,0
.L1582:
	.word	0,0
.L1590:
	.word	-1,.L1074,.L3110-.L1074,.L3111-.L1074
	.half	5
	.byte	144,32,157,32,0
	.word	.L3112-.L1074,.L5-.L1074
	.half	1
	.byte	81
	.word	.L3114-.L1074,.L3115-.L1074
	.half	1
	.byte	81
	.word	.L3116-.L1074,.L3117-.L1074
	.half	1
	.byte	81
	.word	.L3118-.L1074,.L3119-.L1074
	.half	1
	.byte	81
	.word	.L3120-.L1074,.L3121-.L1074
	.half	1
	.byte	81
	.word	.L3123-.L1074,.L3124-.L1074
	.half	5
	.byte	144,32,157,32,0
	.word	.L3125-.L1074,.L9-.L1074
	.half	1
	.byte	95
	.word	.L3127-.L1074,.L3128-.L1074
	.half	1
	.byte	95
	.word	.L3129-.L1074,.L3130-.L1074
	.half	1
	.byte	95
	.word	.L3124-.L1074,.L3131-.L1074
	.half	1
	.byte	95
	.word	.L3132-.L1074,.L2-.L1074
	.half	2
	.byte	145,116
	.word	.L11-.L1074,.L3135-.L1074
	.half	1
	.byte	95
	.word	.L3138-.L1074,.L12-.L1074
	.half	1
	.byte	95
	.word	.L3190-.L1074,.L10-.L1074
	.half	1
	.byte	95
	.word	.L3191-.L1074,.L3192-.L1074
	.half	1
	.byte	95
	.word	0,0
.L1765:
	.word	-1,.L1074,.L3233-.L1074,.L2-.L1074
	.half	1
	.byte	95
	.word	0,0
.L1636:
	.word	-1,.L1074,.L3158-.L1074,.L28-.L1074
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1660:
	.word	-1,.L1074,.L3161-.L1074,.L1659-.L1074
	.half	1
	.byte	95
	.word	0,0
.L1588:
	.word	0,0
.L1716:
	.word	-1,.L1074,.L3184-.L1074,.L3183-.L1074
	.half	1
	.byte	85
	.word	.L3187-.L1074,.L3188-.L1074
	.half	1
	.byte	95
	.word	.L3189-.L1074,.L70-.L1074
	.half	1
	.byte	95
	.word	0,0
.L1637:
	.word	-1,.L1074,.L1628-.L1074,.L3134-.L1074
	.half	1
	.byte	88
	.word	0,0
.L1656:
	.word	0,0
.L1647:
	.word	-1,.L1074,.L3167-.L1074,.L38-.L1074
	.half	2
	.byte	144,32
	.word	0,0
.L1680:
	.word	-1,.L1074,0,.L1576-.L1074
	.half	2
	.byte	145,96
	.word	0,0
.L1670:
	.word	-1,.L1074,.L3174-.L1074,.L10-.L1074
	.half	1
	.byte	92
	.word	0,0
.L1740:
	.word	-1,.L1074,.L3202-.L1074,.L84-.L1074
	.half	1
	.byte	83
	.word	.L86-.L1074,.L3203-.L1074
	.half	1
	.byte	83
	.word	0,0
.L1743:
	.word	-1,.L1074,.L3201-.L1074,.L87-.L1074
	.half	1
	.byte	82
	.word	.L89-.L1074,.L3204-.L1074
	.half	1
	.byte	82
	.word	0,0
.L1669:
	.word	-1,.L1074,.L3143-.L1074,.L10-.L1074
	.half	1
	.byte	91
	.word	0,0
.L1728:
	.word	-1,.L1074,.L3205-.L1074,.L90-.L1074
	.half	1
	.byte	95
	.word	.L3206-.L1074,.L93-.L1074
	.half	1
	.byte	95
	.word	.L3207-.L1074,.L100-.L1074
	.half	1
	.byte	95
	.word	.L3208-.L1074,.L103-.L1074
	.half	1
	.byte	95
	.word	.L92-.L1074,.L3209-.L1074
	.half	1
	.byte	95
	.word	.L107-.L1074,.L3220-.L1074
	.half	1
	.byte	95
	.word	.L113-.L1074,.L3221-.L1074
	.half	1
	.byte	95
	.word	.L108-.L1074,.L3222-.L1074
	.half	1
	.byte	95
	.word	.L109-.L1074,.L114-.L1074
	.half	1
	.byte	95
	.word	.L119-.L1074,.L3224-.L1074
	.half	1
	.byte	95
	.word	.L110-.L1074,.L3227-.L1074
	.half	1
	.byte	95
	.word	0,0
.L1613:
	.word	-1,.L1074,.L3145-.L1074,.L3146-.L1074
	.half	1
	.byte	82
	.word	.L13-.L1074,.L17-.L1074
	.half	1
	.byte	82
	.word	0,0
.L1594:
	.word	0,0
.L1649:
	.word	-1,.L1074,.L3163-.L1074,.L37-.L1074
	.half	1
	.byte	92
	.word	0,0
.L1638:
	.word	-1,.L1074,.L3152-.L1074,.L22-.L1074
	.half	1
	.byte	82
	.word	.L33-.L1074,.L3162-.L1074
	.half	1
	.byte	82
	.word	.L37-.L1074,.L13-.L1074
	.half	1
	.byte	82
	.word	0,0
.L1626:
	.word	0,0
.L1614:
	.word	0,0
.L1715:
	.word	-1,.L1074,.L3183-.L1074,.L69-.L1074
	.half	1
	.byte	82
	.word	0,0
.L1757:
	.word	-1,.L1074,.L3196-.L1074,.L3134-.L1074
	.half	5
	.byte	144,32,157,32,0
	.word	.L3134-.L1074,.L2-.L1074
	.half	1
	.byte	88
	.word	.L3216-.L1074,.L3217-.L1074
	.half	5
	.byte	144,32,157,32,0
	.word	.L3218-.L1074,.L3219-.L1074
	.half	5
	.byte	144,32,157,32,0
	.word	.L112-.L1074,.L3223-.L1074
	.half	5
	.byte	144,32,157,32,0
	.word	.L3225-.L1074,.L3226-.L1074
	.half	5
	.byte	144,32,157,32,0
	.word	.L110-.L1074,.L3228-.L1074
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1729:
	.word	0,0
.L1724:
	.word	-1,.L1074,.L3195-.L1074,.L3196-.L1074
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1753:
	.word	-1,.L1074,.L3204-.L1074,.L126-.L1074
	.half	1
	.byte	82
	.word	0,0
.L1755:
	.word	-1,.L1074,.L3213-.L1074,.L2-.L1074
	.half	1
	.byte	85
	.word	0,0
.L1726:
	.word	-1,.L1074,.L3199-.L1074,.L3200-.L1074
	.half	1
	.byte	95
	.word	0,0
.L1758:
	.word	-1,.L1074,.L3215-.L1074,.L2-.L1074
	.half	1
	.byte	86
	.word	0,0
.L1730:
	.word	0,0
.L1725:
	.word	-1,.L1074,.L3197-.L1074,.L3198-.L1074
	.half	1
	.byte	81
	.word	0,0
.L1754:
	.word	-1,.L1074,.L3203-.L1074,.L2-.L1074
	.half	1
	.byte	83
	.word	0,0
.L1756:
	.word	-1,.L1074,.L3214-.L1074,.L2-.L1074
	.half	1
	.byte	87
	.word	0,0
.L1727:
	.word	-1,.L1074,.L1732-.L1074,.L3201-.L1074
	.half	1
	.byte	82
	.word	.L87-.L1074,.L89-.L1074
	.half	1
	.byte	82
	.word	0,0
.L1586:
	.word	0,0
.L1710:
	.word	0,0
.L1664:
	.word	0,0
.L1675:
	.word	0,0
.L1607:
	.word	-1,.L1074,.L3141-.L1074,.L10-.L1074
	.half	1
	.byte	111
	.word	.L3147-.L1074,.L3146-.L1074
	.half	1
	.byte	100
	.word	.L3171-.L1074,.L17-.L1074
	.half	1
	.byte	100
	.word	0,0
.L1751:
	.word	0,0
.L1752:
	.word	0,0
.L1671:
	.word	-1,.L1074,.L3175-.L1074,.L10-.L1074
	.half	1
	.byte	93
	.word	0,0
.L1683:
	.word	-1,.L1074,.L3181-.L1074,.L57-.L1074
	.half	1
	.byte	84
	.word	.L55-.L1074,.L64-.L1074
	.half	1
	.byte	84
	.word	.L53-.L1074,.L58-.L1074
	.half	1
	.byte	84
	.word	0,0
.L1610:
	.word	-1,.L1074,.L3142-.L1074,.L3143-.L1074
	.half	1
	.byte	91
	.word	.L3144-.L1074,.L3145-.L1074
	.half	1
	.byte	84
	.word	.L3148-.L1074,.L3146-.L1074
	.half	1
	.byte	84
	.word	.L3172-.L1074,.L17-.L1074
	.half	1
	.byte	84
	.word	0,0
.L1713:
	.word	-1,.L1074,.L3140-.L1074,.L69-.L1074
	.half	1
	.byte	108
	.word	.L3185-.L1074,.L3183-.L1074
	.half	1
	.byte	100
	.word	0,0
.L1625:
	.word	-1,.L1074,.L3153-.L1074,.L3154-.L1074
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1611:
	.word	-1,.L1074,.L3170-.L1074,.L1619-.L1074
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1612:
	.word	-1,.L1074,.L3168-.L1074,.L3169-.L1074
	.half	1
	.byte	95
	.word	0,0
.L1580:
	.word	-1,.L1074,.L3108-.L1074,.L5-.L1074
	.half	1
	.byte	111
	.word	.L3109-.L1074,.L2-.L1074
	.half	2
	.byte	145,108
	.word	.L3113-.L1074,.L3114-.L1074
	.half	1
	.byte	111
	.word	.L3116-.L1074,.L7-.L1074
	.half	1
	.byte	111
	.word	.L3118-.L1074,.L3119-.L1074
	.half	1
	.byte	111
	.word	.L3122-.L1074,.L9-.L1074
	.half	1
	.byte	111
	.word	.L3126-.L1074,.L3127-.L1074
	.half	1
	.byte	111
	.word	.L3133-.L1074,.L11-.L1074
	.half	1
	.byte	111
	.word	.L3137-.L1074,.L12-.L1074
	.half	1
	.byte	111
	.word	.L3194-.L1074,.L3210-.L1074
	.half	1
	.byte	111
	.word	.L3229-.L1074,.L124-.L1074
	.half	1
	.byte	111
	.word	0,0
.L1714:
	.word	-1,.L1074,.L3182-.L1074,.L3183-.L1074
	.half	1
	.byte	98
	.word	0,0
.L1668:
	.word	-1,.L1074,.L3173-.L1074,.L57-.L1074
	.half	1
	.byte	98
	.word	.L55-.L1074,.L64-.L1074
	.half	1
	.byte	98
	.word	.L53-.L1074,.L58-.L1074
	.half	1
	.byte	98
	.word	.L48-.L1074,.L50-.L1074
	.half	1
	.byte	98
	.word	0,0
.L1643:
	.word	-1,.L1074,.L3150-.L1074,.L37-.L1074
	.half	1
	.byte	109
	.word	0,0
.L1632:
	.word	-1,.L1074,.L3155-.L1074,.L1651-.L1074
	.half	1
	.byte	98
	.word	0,0
.L1621:
	.word	-1,.L1074,.L3149-.L1074,.L3150-.L1074
	.half	1
	.byte	109
	.word	0,0
.L1750:
	.word	-1,.L1074,.L3211-.L1074,.L3212-.L1074
	.half	1
	.byte	111
	.word	0,0
.L1723:
	.word	-1,.L1074,.L3193-.L1074,.L3194-.L1074
	.half	1
	.byte	111
	.word	0,0
.L1606:
	.word	-1,.L1074,.L3139-.L1074,.L3140-.L1074
	.half	1
	.byte	108
	.word	.L48-.L1074,.L50-.L1074
	.half	1
	.byte	108
	.word	0,0
.L1681:
	.word	-1,.L1074,.L3180-.L1074,.L57-.L1074
	.half	1
	.byte	83
	.word	.L55-.L1074,.L64-.L1074
	.half	1
	.byte	83
	.word	.L53-.L1074,.L58-.L1074
	.half	1
	.byte	83
	.word	0,0
.L1677:
	.word	-1,.L1074,.L3177-.L1074,.L57-.L1074
	.half	1
	.byte	85
	.word	.L55-.L1074,.L64-.L1074
	.half	1
	.byte	85
	.word	.L53-.L1074,.L58-.L1074
	.half	1
	.byte	85
	.word	0,0
.L1678:
	.word	-1,.L1074,.L3178-.L1074,.L57-.L1074
	.half	5
	.byte	144,32,157,32,0
	.word	.L55-.L1074,.L64-.L1074
	.half	5
	.byte	144,32,157,32,0
	.word	.L53-.L1074,.L58-.L1074
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1672:
	.word	-1,.L1074,.L3176-.L1074,.L10-.L1074
	.half	1
	.byte	94
	.word	0,0
.L1682:
	.word	-1,.L1074,.L3179-.L1074,.L57-.L1074
	.half	1
	.byte	81
	.word	.L55-.L1074,.L64-.L1074
	.half	1
	.byte	81
	.word	.L53-.L1074,.L58-.L1074
	.half	1
	.byte	81
	.word	0,0
.L1692:
	.word	0,0
.L1688:
	.word	0,0
.L1712:
	.word	-1,.L1074,.L3186-.L1074,.L70-.L1074
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1734:
	.word	0,0
.L1736:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_InvalidateBlock')
	.sect	'.debug_loc'
.L1843:
	.word	0,0
.L1835:
	.word	-1,.L1088,0,.L3264-.L1088
	.half	1
	.byte	84
	.word	.L1841-.L1088,.L1833-.L1088
	.half	1
	.byte	88
	.word	.L3267-.L1088,.L3268-.L1088
	.half	1
	.byte	84
	.word	0,0
.L1837:
	.word	-1,.L1088,.L3273-.L1088,.L3272-.L1088
	.half	1
	.byte	101
	.word	0,0
.L1087:
	.word	-1,.L1088,0,.L1833-.L1088
	.half	2
	.byte	138,0
	.word	0,0
.L1847:
	.word	-1,.L1088,.L3265-.L1088,.L1833-.L1088
	.half	1
	.byte	89
	.word	.L1846-.L1088,.L1833-.L1088
	.half	1
	.byte	82
	.word	0,0
.L1839:
	.word	-1,.L1088,.L3269-.L1088,.L3272-.L1088
	.half	1
	.byte	82
	.word	.L163-.L1088,.L1845-.L1088
	.half	1
	.byte	82
	.word	0,0
.L1840:
	.word	0,0
.L1836:
	.word	-1,.L1088,.L3266-.L1088,.L162-.L1088
	.half	1
	.byte	108
	.word	0,0
.L1838:
	.word	-1,.L1088,.L3268-.L1088,.L3269-.L1088
	.half	1
	.byte	82
	.word	.L3270-.L1088,.L3271-.L1088
	.half	1
	.byte	95
	.word	.L163-.L1088,.L162-.L1088
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_JobEndNotification')
	.sect	'.debug_loc'
.L1899:
	.word	-1,.L1094,.L3288-.L1094,.L184-.L1094
	.half	1
	.byte	81
	.word	0,0
.L1898:
	.word	-1,.L1094,.L3289-.L1094,.L176-.L1094
	.half	1
	.byte	82
	.word	0,0
.L1093:
	.word	-1,.L1094,0,.L1891-.L1094
	.half	2
	.byte	138,0
	.word	0,0
.L1893:
	.word	-1,.L1094,.L3282-.L1094,.L3283-.L1094
	.half	1
	.byte	82
	.word	.L3284-.L1094,.L1891-.L1094
	.half	1
	.byte	88
	.word	0,0
.L1900:
	.word	-1,.L1094,.L3287-.L1094,.L176-.L1094
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1901:
	.word	-1,.L1094,.L3290-.L1094,.L183-.L1094
	.half	1
	.byte	81
	.word	0,0
.L1892:
	.word	-1,.L1094,.L3280-.L1094,.L3281-.L1094
	.half	1
	.byte	111
	.word	0,0
.L1897:
	.word	-1,.L1094,.L3285-.L1094,.L3286-.L1094
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_JobErrorNotification')
	.sect	'.debug_loc'
.L1930:
	.word	0,0
.L1929:
	.word	-1,.L1096,.L3301-.L1096,.L204-.L1096
	.half	1
	.byte	82
	.word	0,0
.L1928:
	.word	-1,.L1096,.L3300-.L1096,.L202-.L1096
	.half	1
	.byte	84
	.word	.L203-.L1096,.L201-.L1096
	.half	1
	.byte	84
	.word	.L204-.L1096,.L1902-.L1096
	.half	1
	.byte	84
	.word	0,0
.L1095:
	.word	-1,.L1096,0,.L1902-.L1096
	.half	2
	.byte	138,0
	.word	0,0
.L1904:
	.word	-1,.L1096,.L3293-.L1096,.L3294-.L1096
	.half	1
	.byte	82
	.word	.L3295-.L1096,.L1902-.L1096
	.half	1
	.byte	88
	.word	.L189-.L1096,.L3297-.L1096
	.half	1
	.byte	82
	.word	0,0
.L1925:
	.word	0,0
.L1903:
	.word	-1,.L1096,.L3291-.L1096,.L3292-.L1096
	.half	1
	.byte	111
	.word	.L189-.L1096,.L3298-.L1096
	.half	1
	.byte	111
	.word	0,0
.L1911:
	.word	-1,.L1096,.L3296-.L1096,.L189-.L1096
	.half	1
	.byte	111
	.word	0,0
.L1927:
	.word	-1,.L1096,.L3299-.L1096,.L1902-.L1096
	.half	1
	.byte	111
	.word	0,0
.L1916:
	.word	0,0
.L1922:
	.word	0,0
.L1920:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_MainFunction')
	.sect	'.debug_loc'
.L1105:
	.word	-1,.L1106,0,.L1941-.L1106
	.half	2
	.byte	138,0
	.word	0,0
.L1942:
	.word	-1,.L1106,.L3314-.L1106,.L223-.L1106
	.half	1
	.byte	111
	.word	.L224-.L1106,.L3315-.L1106
	.half	1
	.byte	111
	.word	0,0
.L1945:
	.word	-1,.L1106,.L3316-.L1106,.L230-.L1106
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_Read')
	.sect	'.debug_loc'
.L1794:
	.word	-1,.L1078,0,.L3238-.L1078
	.half	1
	.byte	84
	.word	.L3241-.L1078,.L3242-.L1078
	.half	1
	.byte	88
	.word	0,0
.L1796:
	.word	-1,.L1078,0,.L3238-.L1078
	.half	1
	.byte	85
	.word	.L3241-.L1078,.L3242-.L1078
	.half	1
	.byte	89
	.word	0,0
.L1798:
	.word	-1,.L1078,0,.L3238-.L1078
	.half	1
	.byte	100
	.word	.L3239-.L1078,.L1792-.L1078
	.half	1
	.byte	111
	.word	.L3243-.L1078,.L133-.L1078
	.half	1
	.byte	100
	.word	0,0
.L1077:
	.word	-1,.L1078,0,.L1792-.L1078
	.half	2
	.byte	138,0
	.word	0,0
.L1800:
	.word	-1,.L1078,0,.L3238-.L1078
	.half	1
	.byte	86
	.word	.L3240-.L1078,.L1792-.L1078
	.half	1
	.byte	90
	.word	.L3244-.L1078,.L133-.L1078
	.half	1
	.byte	86
	.word	0,0
.L1801:
	.word	-1,.L1078,.L3245-.L1078,.L1792-.L1078
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_SetMode')
	.sect	'.debug_loc'
.L1772:
	.word	-1,.L1076,.L3234-.L1076,.L127-.L1076
	.half	1
	.byte	82
	.word	.L129-.L1076,.L1768-.L1076
	.half	1
	.byte	82
	.word	0,0
.L1075:
	.word	-1,.L1076,0,.L1768-.L1076
	.half	2
	.byte	138,0
	.word	0,0
.L1770:
	.word	-1,.L1076,0,.L3234-.L1076
	.half	1
	.byte	84
	.word	.L3235-.L1076,.L1768-.L1076
	.half	1
	.byte	88
	.word	.L3237-.L1076,.L131-.L1076
	.half	1
	.byte	84
	.word	0,0
.L1773:
	.word	-1,.L1076,.L3236-.L1076,.L127-.L1076
	.half	1
	.byte	111
	.word	.L129-.L1076,.L1768-.L1076
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_Write')
	.sect	'.debug_loc'
.L1804:
	.word	-1,.L1080,0,.L3246-.L1080
	.half	1
	.byte	84
	.word	.L3247-.L1080,.L1802-.L1080
	.half	1
	.byte	88
	.word	.L3249-.L1080,.L3250-.L1080
	.half	1
	.byte	84
	.word	0,0
.L1808:
	.word	-1,.L1080,.L3251-.L1080,.L137-.L1080
	.half	1
	.byte	101
	.word	0,0
.L1806:
	.word	-1,.L1080,0,.L3246-.L1080
	.half	1
	.byte	100
	.word	.L3248-.L1080,.L1802-.L1080
	.half	1
	.byte	108
	.word	.L3252-.L1080,.L137-.L1080
	.half	1
	.byte	100
	.word	0,0
.L1079:
	.word	-1,.L1080,0,.L1802-.L1080
	.half	2
	.byte	138,0
	.word	0,0
.L1810:
	.word	-1,.L1080,.L3253-.L1080,.L1802-.L1080
	.half	1
	.byte	82
	.word	0,0
.L1809:
	.word	-1,.L1080,.L3250-.L1080,.L137-.L1080
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lCheckReadLength')
	.sect	'.debug_loc'
.L2498:
	.word	-1,.L1144,0,.L2516-.L1144
	.half	1
	.byte	84
	.word	0,0
.L2506:
	.word	-1,.L1144,.L2510-.L1144,.L2496-.L1144
	.half	1
	.byte	89
	.word	0,0
.L1143:
	.word	-1,.L1144,0,.L2496-.L1144
	.half	2
	.byte	138,0
	.word	0,0
.L2500:
	.word	-1,.L1144,0,.L3693-.L1144
	.half	1
	.byte	85
	.word	.L3694-.L1144,.L3695-.L1144
	.half	1
	.byte	88
	.word	.L3703-.L1144,.L2496-.L1144
	.half	1
	.byte	88
	.word	0,0
.L2509:
	.word	0,0
.L2502:
	.word	0,0
.L2505:
	.word	-1,.L1144,.L3704-.L1144,.L3705-.L1144
	.half	1
	.byte	84
	.word	.L3707-.L1144,.L2496-.L1144
	.half	1
	.byte	82
	.word	0,0
.L2503:
	.word	-1,.L1144,.L3707-.L1144,.L3708-.L1144
	.half	1
	.byte	82
	.word	0,0
.L2504:
	.word	-1,.L1144,.L3697-.L1144,.L715-.L1144
	.half	1
	.byte	95
	.word	.L716-.L1144,.L3700-.L1144
	.half	1
	.byte	95
	.word	.L3701-.L1144,.L3702-.L1144
	.half	1
	.byte	84
	.word	.L722-.L1144,.L3706-.L1144
	.half	1
	.byte	84
	.word	0,0
.L2507:
	.word	-1,.L1144,.L3698-.L1144,.L3699-.L1144
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2501:
	.word	-1,.L1144,.L3696-.L1144,.L2496-.L1144
	.half	1
	.byte	111
	.word	0,0
.L2508:
	.word	0,0
.L2512:
	.word	0,0
.L2519:
	.word	0,0
.L2517:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lClearFeeGcReadWriteBuffer')
	.sect	'.debug_loc'
.L2782:
	.word	-1,.L1194,.L4042-.L1194,.L2779-.L1194
	.half	1
	.byte	95
	.word	.L4046-.L1194,.L4047-.L1194
	.half	1
	.byte	81
	.word	0,0
.L1193:
	.word	-1,.L1194,0,.L2779-.L1194
	.half	2
	.byte	138,0
	.word	0,0
.L2781:
	.word	-1,.L1194,.L4044-.L1194,.L2779-.L1194
	.half	1
	.byte	111
	.word	0,0
.L2783:
	.word	-1,.L1194,.L4045-.L1194,.L2779-.L1194
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2780:
	.word	-1,.L1194,.L4043-.L1194,.L4044-.L1194
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lClearFeeReadWriteBuffer')
	.sect	'.debug_loc'
.L2122:
	.word	-1,.L1192,.L4036-.L1192,.L2118-.L1192
	.half	1
	.byte	95
	.word	.L4040-.L1192,.L4041-.L1192
	.half	1
	.byte	81
	.word	0,0
.L1191:
	.word	-1,.L1192,0,.L2118-.L1192
	.half	2
	.byte	138,0
	.word	0,0
.L2123:
	.word	-1,.L1192,.L4039-.L1192,.L2118-.L1192
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2121:
	.word	-1,.L1192,.L4038-.L1192,.L2118-.L1192
	.half	1
	.byte	111
	.word	0,0
.L2119:
	.word	-1,.L1192,.L4037-.L1192,.L4038-.L1192
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lClearMarkerBuffer')
	.sect	'.debug_loc'
.L2129:
	.word	0,0
.L1189:
	.word	-1,.L1190,0,.L2127-.L1190
	.half	2
	.byte	138,0
	.word	0,0
.L2128:
	.word	-1,.L1190,.L4035-.L1190,.L2127-.L1190
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lDecideMainJob')
	.sect	'.debug_loc'
.L1121:
	.word	-1,.L1122,0,.L1946-.L1122
	.half	2
	.byte	138,0
	.word	0,0
.L1971:
	.word	0,0
.L1999:
	.word	0,0
.L1993:
	.word	0,0
.L1958:
	.word	0,0
.L1987:
	.word	-1,.L1122,.L3379-.L1122,.L346-.L1122
	.half	1
	.byte	95
	.word	.L347-.L1122,.L3380-.L1122
	.half	1
	.byte	95
	.word	0,0
.L2001:
	.word	-1,.L1122,.L3385-.L1122,.L367-.L1122
	.half	1
	.byte	95
	.word	.L368-.L1122,.L3386-.L1122
	.half	1
	.byte	95
	.word	0,0
.L1964:
	.word	-1,.L1122,.L3369-.L1122,.L322-.L1122
	.half	1
	.byte	95
	.word	.L323-.L1122,.L1949-.L1122
	.half	1
	.byte	95
	.word	0,0
.L1973:
	.word	-1,.L1122,.L3372-.L1122,.L330-.L1122
	.half	1
	.byte	95
	.word	.L331-.L1122,.L3373-.L1122
	.half	1
	.byte	95
	.word	.L332-.L1122,.L3374-.L1122
	.half	1
	.byte	95
	.word	0,0
.L1985:
	.word	-1,.L1122,.L3377-.L1122,.L338-.L1122
	.half	1
	.byte	95
	.word	.L340-.L1122,.L3378-.L1122
	.half	1
	.byte	95
	.word	0,0
.L1983:
	.word	0,0
.L1997:
	.word	-1,.L1122,.L3384-.L1122,.L310-.L1122
	.half	1
	.byte	111
	.word	0,0
.L1951:
	.word	-1,.L1122,.L1953-.L1122,.L312-.L1122
	.half	1
	.byte	111
	.word	0,0
.L1968:
	.word	-1,.L1122,.L3371-.L1122,.L313-.L1122
	.half	1
	.byte	111
	.word	0,0
.L1978:
	.word	-1,.L1122,.L3376-.L1122,.L309-.L1122
	.half	1
	.byte	98
	.word	.L341-.L1122,.L314-.L1122
	.half	1
	.byte	98
	.word	0,0
.L1991:
	.word	-1,.L1122,.L3382-.L1122,.L315-.L1122
	.half	1
	.byte	111
	.word	0,0
.L1947:
	.word	-1,.L1122,.L3366-.L1122,.L3367-.L1122
	.half	1
	.byte	111
	.word	.L311-.L1122,.L3368-.L1122
	.half	1
	.byte	111
	.word	.L312-.L1122,.L3370-.L1122
	.half	1
	.byte	111
	.word	.L313-.L1122,.L3375-.L1122
	.half	1
	.byte	111
	.word	.L314-.L1122,.L3381-.L1122
	.half	1
	.byte	111
	.word	.L315-.L1122,.L3383-.L1122
	.half	1
	.byte	111
	.word	.L310-.L1122,.L355-.L1122
	.half	1
	.byte	111
	.word	0,0
.L1956:
	.word	0,0
.L1962:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lGarbageCollection')
	.sect	'.debug_loc'
.L2802:
	.word	-1,.L1170,.L3910-.L1170,.L3911-.L1170
	.half	5
	.byte	144,32,157,32,0
	.word	.L3912-.L1170,.L3913-.L1170
	.half	5
	.byte	144,32,157,32,0
	.word	.L923-.L1170,.L917-.L1170
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2799:
	.word	-1,.L1170,.L3908-.L1170,.L3909-.L1170
	.half	1
	.byte	111
	.word	0,0
.L2795:
	.word	0,0
.L2820:
	.word	-1,.L1170,.L3915-.L1170,.L3916-.L1170
	.half	1
	.byte	88
	.word	.L3916-.L1170,.L926-.L1170
	.half	1
	.byte	82
	.word	.L926-.L1170,.L3917-.L1170
	.half	1
	.byte	88
	.word	.L3917-.L1170,.L929-.L1170
	.half	1
	.byte	82
	.word	.L929-.L1170,.L3918-.L1170
	.half	1
	.byte	88
	.word	.L3918-.L1170,.L931-.L1170
	.half	1
	.byte	82
	.word	.L931-.L1170,.L3919-.L1170
	.half	1
	.byte	88
	.word	.L3919-.L1170,.L932-.L1170
	.half	1
	.byte	82
	.word	.L932-.L1170,.L2807-.L1170
	.half	1
	.byte	88
	.word	.L2807-.L1170,.L933-.L1170
	.half	1
	.byte	82
	.word	.L933-.L1170,.L2808-.L1170
	.half	1
	.byte	88
	.word	.L2808-.L1170,.L934-.L1170
	.half	1
	.byte	82
	.word	.L934-.L1170,.L2809-.L1170
	.half	1
	.byte	88
	.word	.L2809-.L1170,.L935-.L1170
	.half	1
	.byte	82
	.word	.L935-.L1170,.L2810-.L1170
	.half	1
	.byte	88
	.word	.L2810-.L1170,.L936-.L1170
	.half	1
	.byte	82
	.word	.L936-.L1170,.L2811-.L1170
	.half	1
	.byte	88
	.word	.L2811-.L1170,.L937-.L1170
	.half	1
	.byte	82
	.word	.L937-.L1170,.L2812-.L1170
	.half	1
	.byte	88
	.word	.L2812-.L1170,.L938-.L1170
	.half	1
	.byte	82
	.word	.L938-.L1170,.L2793-.L1170
	.half	1
	.byte	88
	.word	.L2815-.L1170,.L939-.L1170
	.half	1
	.byte	84
	.word	0,0
.L1169:
	.word	-1,.L1170,0,.L2793-.L1170
	.half	2
	.byte	138,0
	.word	0,0
.L2803:
	.word	-1,.L1170,.L3914-.L1170,.L917-.L1170
	.half	1
	.byte	81
	.word	0,0
.L2800:
	.word	-1,.L1170,.L3907-.L1170,.L917-.L1170
	.half	1
	.byte	98
	.word	0,0
.L2794:
	.word	-1,.L1170,.L3906-.L1170,.L2793-.L1170
	.half	1
	.byte	108
	.word	0,0
.L2816:
	.word	-1,.L1170,.L2819-.L1170,.L2793-.L1170
	.half	1
	.byte	111
	.word	0,0
.L2801:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lGcCheckBlkCopy')
	.sect	'.debug_loc'
.L2902:
	.word	-1,.L1158,.L3752-.L1158,.L3753-.L1158
	.half	5
	.byte	144,32,157,32,0
	.word	.L3755-.L1158,.L2899-.L1158
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2901:
	.word	-1,.L1158,.L3754-.L1158,.L2899-.L1158
	.half	1
	.byte	111
	.word	0,0
.L1157:
	.word	-1,.L1158,0,.L2899-.L1158
	.half	2
	.byte	138,0
	.word	0,0
.L2903:
	.word	-1,.L1158,.L3750-.L1158,.L2899-.L1158
	.half	1
	.byte	82
	.word	0,0
.L2900:
	.word	-1,.L1158,.L3751-.L1158,.L2899-.L1158
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lGcCopyReadNxtPage')
	.sect	'.debug_loc'
.L1163:
	.word	-1,.L1164,0,.L2786-.L1164
	.half	2
	.byte	138,0
	.word	0,0
.L2789:
	.word	-1,.L1164,.L3820-.L1164,.L2786-.L1164
	.half	1
	.byte	95
	.word	0,0
.L2787:
	.word	-1,.L1164,.L3821-.L1164,.L2786-.L1164
	.half	1
	.byte	88
	.word	0,0
.L2788:
	.word	-1,.L1164,.L3819-.L1164,.L2786-.L1164
	.half	1
	.byte	111
	.word	0,0
.L2792:
	.word	0,0
.L2790:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lGcDiscardConfigBlk')
	.sect	'.debug_loc'
.L1155:
	.word	-1,.L1156,0,.L2775-.L1156
	.half	2
	.byte	138,0
	.word	0,0
.L2777:
	.word	-1,.L1156,0,.L2775-.L1156
	.half	1
	.byte	84
	.word	0,0
.L2778:
	.word	-1,.L1156,.L3748-.L1156,.L3749-.L1156
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lGcDiscardUnconfigBlk')
	.sect	'.debug_loc'
.L2773:
	.word	-1,.L1154,0,.L3739-.L1154
	.half	1
	.byte	84
	.word	.L3743-.L1154,.L3744-.L1154
	.half	1
	.byte	84
	.word	.L3747-.L1154,.L2768-.L1154
	.half	1
	.byte	84
	.word	0,0
.L2774:
	.word	-1,.L1154,.L3745-.L1154,.L3746-.L1154
	.half	5
	.byte	144,32,157,32,0
	.word	.L754-.L1154,.L2768-.L1154
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1153:
	.word	-1,.L1154,0,.L2768-.L1154
	.half	2
	.byte	138,0
	.word	0,0
.L2770:
	.word	-1,.L1154,0,.L3739-.L1154
	.half	1
	.byte	84
	.word	.L3743-.L1154,.L3744-.L1154
	.half	1
	.byte	84
	.word	.L3747-.L1154,.L2768-.L1154
	.half	1
	.byte	84
	.word	0,0
.L2771:
	.word	-1,.L1154,.L3740-.L1154,.L2768-.L1154
	.half	1
	.byte	98
	.word	0,0
.L2772:
	.word	-1,.L1154,.L3741-.L1154,.L749-.L1154
	.half	1
	.byte	100
	.word	.L3742-.L1154,.L2768-.L1154
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lGcErasePrevSector')
	.sect	'.debug_loc'
.L2974:
	.word	-1,.L1166,.L3827-.L1166,.L3828-.L1166
	.half	1
	.byte	95
	.word	0,0
.L2981:
	.word	-1,.L1166,.L3830-.L1166,.L836-.L1166
	.half	1
	.byte	90
	.word	0,0
.L2973:
	.word	-1,.L1166,.L3824-.L1166,.L2968-.L1166
	.half	1
	.byte	88
	.word	.L3836-.L1166,.L2968-.L1166
	.half	1
	.byte	82
	.word	0,0
.L1165:
	.word	-1,.L1166,0,.L2968-.L1166
	.half	2
	.byte	138,0
	.word	0,0
.L2970:
	.word	-1,.L1166,0,.L3822-.L1166
	.half	1
	.byte	84
	.word	.L3823-.L1166,.L2968-.L1166
	.half	1
	.byte	89
	.word	.L836-.L1166,.L3834-.L1166
	.half	1
	.byte	84
	.word	0,0
.L2978:
	.word	0,0
.L2983:
	.word	-1,.L1166,.L3832-.L1166,.L841-.L1166
	.half	1
	.byte	95
	.word	.L842-.L1166,.L3833-.L1166
	.half	1
	.byte	95
	.word	0,0
.L2982:
	.word	-1,.L1166,.L3826-.L1166,.L3831-.L1166
	.half	1
	.byte	82
	.word	.L838-.L1166,.L836-.L1166
	.half	1
	.byte	82
	.word	0,0
.L2972:
	.word	-1,.L1166,.L3835-.L1166,.L833-.L1166
	.half	1
	.byte	82
	.word	0,0
.L2971:
	.word	-1,.L1166,.L3825-.L1166,.L3826-.L1166
	.half	1
	.byte	98
	.word	.L836-.L1166,.L3835-.L1166
	.half	1
	.byte	98
	.word	0,0
.L2980:
	.word	-1,.L1166,.L3829-.L1166,.L836-.L1166
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lGcErrorHandler')
	.sect	'.debug_loc'
.L2709:
	.word	-1,.L1146,0,.L3709-.L1146
	.half	1
	.byte	84
	.word	.L731-.L1146,.L3713-.L1146
	.half	1
	.byte	84
	.word	.L725-.L1146,.L2707-.L1146
	.half	1
	.byte	84
	.word	0,0
.L1145:
	.word	-1,.L1146,0,.L2707-.L1146
	.half	2
	.byte	138,0
	.word	0,0
.L2711:
	.word	-1,.L1146,0,.L3710-.L1146
	.half	1
	.byte	85
	.word	.L3709-.L1146,.L3710-.L1146
	.half	1
	.byte	84
	.word	.L731-.L1146,.L3714-.L1146
	.half	1
	.byte	85
	.word	.L3713-.L1146,.L3714-.L1146
	.half	1
	.byte	84
	.word	.L725-.L1146,.L2707-.L1146
	.half	1
	.byte	85
	.word	0,0
.L2712:
	.word	-1,.L1146,.L3711-.L1146,.L3712-.L1146
	.half	1
	.byte	111
	.word	0,0
.L2715:
	.word	-1,.L1146,.L3715-.L1146,.L2707-.L1146
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lGcProgramStatePage')
	.sect	'.debug_loc'
.L2991:
	.word	-1,.L1168,.L3895-.L1168,.L3858-.L1168
	.half	1
	.byte	84
	.word	.L901-.L1168,.L3897-.L1168
	.half	1
	.byte	84
	.word	.L908-.L1168,.L3899-.L1168
	.half	1
	.byte	84
	.word	.L907-.L1168,.L3900-.L1168
	.half	1
	.byte	84
	.word	.L3901-.L1168,.L3076-.L1168
	.half	1
	.byte	84
	.word	.L902-.L1168,.L3904-.L1168
	.half	1
	.byte	84
	.word	0,0
.L3015:
	.word	-1,.L1168,.L3859-.L1168,.L3862-.L1168
	.half	1
	.byte	88
	.word	.L3865-.L1168,.L3856-.L1168
	.half	1
	.byte	84
	.word	.L3890-.L1168,.L3891-.L1168
	.half	1
	.byte	95
	.word	0,0
.L3055:
	.word	-1,.L1168,.L3860-.L1168,.L876-.L1168
	.half	1
	.byte	90
	.word	.L3880-.L1168,.L3879-.L1168
	.half	1
	.byte	84
	.word	0,0
.L3053:
	.word	-1,.L1168,.L3877-.L1168,.L879-.L1168
	.half	1
	.byte	92
	.word	.L3873-.L1168,.L880-.L1168
	.half	1
	.byte	82
	.word	.L880-.L1168,.L876-.L1168
	.half	1
	.byte	92
	.word	0,0
.L3048:
	.word	0,0
.L2987:
	.word	-1,.L1168,.L3896-.L1168,.L3858-.L1168
	.half	1
	.byte	90
	.word	.L901-.L1168,.L849-.L1168
	.half	1
	.byte	90
	.word	0,0
.L3001:
	.word	-1,.L1168,.L3848-.L1168,.L3840-.L1168
	.half	1
	.byte	91
	.word	.L3838-.L1168,.L850-.L1168
	.half	1
	.byte	84
	.word	.L856-.L1168,.L3851-.L1168
	.half	1
	.byte	91
	.word	.L868-.L1168,.L3857-.L1168
	.half	1
	.byte	91
	.word	.L870-.L1168,.L855-.L1168
	.half	1
	.byte	91
	.word	0,0
.L3017:
	.word	-1,.L1168,.L3854-.L1168,.L3851-.L1168
	.half	1
	.byte	83
	.word	.L868-.L1168,.L3856-.L1168
	.half	1
	.byte	83
	.word	.L870-.L1168,.L3889-.L1168
	.half	1
	.byte	83
	.word	.L895-.L1168,.L855-.L1168
	.half	1
	.byte	83
	.word	0,0
.L3050:
	.word	-1,.L1168,.L3857-.L1168,.L876-.L1168
	.half	1
	.byte	91
	.word	0,0
.L2992:
	.word	-1,.L1168,.L3841-.L1168,.L3840-.L1168
	.half	1
	.byte	89
	.word	.L3844-.L1168,.L3845-.L1168
	.half	5
	.byte	144,32,157,32,0
	.word	.L847-.L1168,.L850-.L1168
	.half	5
	.byte	144,32,157,32,0
	.word	.L856-.L1168,.L3851-.L1168
	.half	1
	.byte	89
	.word	.L868-.L1168,.L3858-.L1168
	.half	1
	.byte	89
	.word	.L901-.L1168,.L3898-.L1168
	.half	1
	.byte	89
	.word	.L3898-.L1168,.L849-.L1168
	.half	1
	.byte	82
	.word	.L849-.L1168,.L2984-.L1168
	.half	1
	.byte	89
	.word	.L3905-.L1168,.L2984-.L1168
	.half	1
	.byte	82
	.word	0,0
.L1167:
	.word	-1,.L1168,0,.L3837-.L1168
	.half	2
	.byte	138,0
	.word	.L3837-.L1168,.L2984-.L1168
	.half	2
	.byte	138,8
	.word	.L2984-.L1168,.L2984-.L1168
	.half	2
	.byte	138,0
	.word	0,0
.L3043:
	.word	0,0
.L3079:
	.word	0,0
.L2988:
	.word	-1,.L1168,.L3076-.L1168,.L902-.L1168
	.half	1
	.byte	82
	.word	0,0
.L3018:
	.word	-1,.L1168,.L3856-.L1168,.L3866-.L1168
	.half	1
	.byte	82
	.word	0,0
.L2986:
	.word	-1,.L1168,0,.L3838-.L1168
	.half	1
	.byte	84
	.word	.L3839-.L1168,.L3840-.L1168
	.half	1
	.byte	88
	.word	.L856-.L1168,.L3851-.L1168
	.half	1
	.byte	88
	.word	.L868-.L1168,.L3859-.L1168
	.half	1
	.byte	88
	.word	.L870-.L1168,.L855-.L1168
	.half	1
	.byte	88
	.word	.L846-.L1168,.L3858-.L1168
	.half	1
	.byte	88
	.word	.L846-.L1168,.L3895-.L1168
	.half	1
	.byte	84
	.word	.L901-.L1168,.L849-.L1168
	.half	1
	.byte	88
	.word	0,0
.L2997:
	.word	0,0
.L3011:
	.word	0,0
.L3027:
	.word	0,0
.L3003:
	.word	-1,.L1168,.L3846-.L1168,.L3840-.L1168
	.half	1
	.byte	90
	.word	.L856-.L1168,.L3851-.L1168
	.half	1
	.byte	90
	.word	.L868-.L1168,.L3860-.L1168
	.half	1
	.byte	90
	.word	.L3031-.L1168,.L878-.L1168
	.half	1
	.byte	90
	.word	.L3032-.L1168,.L846-.L1168
	.half	1
	.byte	90
	.word	0,0
.L3016:
	.word	0,0
.L3036:
	.word	-1,.L1168,.L3846-.L1168,.L3840-.L1168
	.half	1
	.byte	90
	.word	.L856-.L1168,.L3851-.L1168
	.half	1
	.byte	90
	.word	.L868-.L1168,.L3860-.L1168
	.half	1
	.byte	90
	.word	.L3031-.L1168,.L878-.L1168
	.half	1
	.byte	90
	.word	.L3032-.L1168,.L846-.L1168
	.half	1
	.byte	90
	.word	0,0
.L3052:
	.word	-1,.L1168,.L3882-.L1168,.L881-.L1168
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L3044:
	.word	0,0
.L3081:
	.word	0,0
.L2989:
	.word	0,0
.L3019:
	.word	-1,.L1168,.L3041-.L1168,.L3867-.L1168
	.half	1
	.byte	95
	.word	0,0
.L3022:
	.word	-1,.L1168,.L3872-.L1168,.L3873-.L1168
	.half	1
	.byte	82
	.word	0,0
.L3021:
	.word	-1,.L1168,.L3871-.L1168,.L3872-.L1168
	.half	1
	.byte	84
	.word	0,0
.L3023:
	.word	-1,.L1168,.L3046-.L1168,.L876-.L1168
	.half	1
	.byte	110
	.word	0,0
.L3020:
	.word	-1,.L1168,.L3855-.L1168,.L3851-.L1168
	.half	1
	.byte	110
	.word	.L868-.L1168,.L3046-.L1168
	.half	1
	.byte	110
	.word	.L870-.L1168,.L855-.L1168
	.half	1
	.byte	110
	.word	0,0
.L3054:
	.word	-1,.L1168,.L3879-.L1168,.L3881-.L1168
	.half	1
	.byte	82
	.word	.L3067-.L1168,.L876-.L1168
	.half	1
	.byte	82
	.word	0,0
.L3069:
	.word	-1,.L1168,.L3885-.L1168,.L3886-.L1168
	.half	1
	.byte	95
	.word	.L883-.L1168,.L887-.L1168
	.half	1
	.byte	95
	.word	0,0
.L3064:
	.word	-1,.L1168,.L3883-.L1168,.L3066-.L1168
	.half	1
	.byte	95
	.word	0,0
.L3045:
	.word	-1,.L1168,.L3868-.L1168,.L3869-.L1168
	.half	1
	.byte	95
	.word	.L875-.L1168,.L3870-.L1168
	.half	1
	.byte	95
	.word	0,0
.L3083:
	.word	-1,.L1168,.L3902-.L1168,.L3903-.L1168
	.half	1
	.byte	95
	.word	0,0
.L3002:
	.word	-1,.L1168,.L3850-.L1168,.L3840-.L1168
	.half	1
	.byte	82
	.word	.L856-.L1168,.L3852-.L1168
	.half	1
	.byte	82
	.word	.L852-.L1168,.L3851-.L1168
	.half	1
	.byte	82
	.word	.L868-.L1168,.L3861-.L1168
	.half	1
	.byte	82
	.word	.L870-.L1168,.L3889-.L1168
	.half	1
	.byte	82
	.word	.L895-.L1168,.L855-.L1168
	.half	1
	.byte	82
	.word	0,0
.L3056:
	.word	-1,.L1168,.L3862-.L1168,.L876-.L1168
	.half	1
	.byte	88
	.word	0,0
.L3014:
	.word	-1,.L1168,.L3863-.L1168,.L3864-.L1168
	.half	1
	.byte	111
	.word	.L3892-.L1168,.L3893-.L1168
	.half	1
	.byte	111
	.word	0,0
.L3000:
	.word	-1,.L1168,.L3849-.L1168,.L850-.L1168
	.half	1
	.byte	100
	.word	0,0
.L2990:
	.word	-1,.L1168,.L3842-.L1168,.L3843-.L1168
	.half	1
	.byte	111
	.word	.L846-.L1168,.L3858-.L1168
	.half	1
	.byte	111
	.word	.L901-.L1168,.L849-.L1168
	.half	1
	.byte	111
	.word	0,0
.L2999:
	.word	-1,.L1168,.L3847-.L1168,.L3840-.L1168
	.half	1
	.byte	108
	.word	.L856-.L1168,.L3851-.L1168
	.half	1
	.byte	108
	.word	.L868-.L1168,.L846-.L1168
	.half	1
	.byte	108
	.word	0,0
.L3013:
	.word	-1,.L1168,.L3853-.L1168,.L3851-.L1168
	.half	1
	.byte	109
	.word	.L868-.L1168,.L855-.L1168
	.half	1
	.byte	109
	.word	0,0
.L3037:
	.word	-1,.L1168,.L3894-.L1168,.L855-.L1168
	.half	1
	.byte	111
	.word	0,0
.L3049:
	.word	-1,.L1168,.L3874-.L1168,.L3875-.L1168
	.half	1
	.byte	111
	.word	.L3876-.L1168,.L876-.L1168
	.half	2
	.byte	145,120
	.word	.L3884-.L1168,.L881-.L1168
	.half	1
	.byte	111
	.word	.L3887-.L1168,.L884-.L1168
	.half	1
	.byte	111
	.word	.L3888-.L1168,.L883-.L1168
	.half	1
	.byte	111
	.word	0,0
.L3051:
	.word	-1,.L1168,.L3878-.L1168,.L3879-.L1168
	.half	1
	.byte	85
	.word	0,0
.L3058:
	.word	0,0
.L3008:
	.word	0,0
.L3006:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lGcPrologue')
	.sect	'.debug_loc'
.L2731:
	.word	-1,.L1152,.L3737-.L1152,.L747-.L1152
	.half	1
	.byte	82
	.word	.L3738-.L1152,.L747-.L1152
	.half	1
	.byte	85
	.word	0,0
.L1151:
	.word	-1,.L1152,0,.L2729-.L1152
	.half	2
	.byte	138,0
	.word	0,0
.L2730:
	.word	-1,.L1152,.L3736-.L1152,.L2729-.L1152
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lGcRead')
	.sect	'.debug_loc'
.L2728:
	.word	-1,.L1148,.L3728-.L1148,.L2716-.L1148
	.half	1
	.byte	82
	.word	.L3729-.L1148,.L2716-.L1148
	.half	1
	.byte	85
	.word	0,0
.L2727:
	.word	-1,.L1148,.L3727-.L1148,.L3728-.L1148
	.half	1
	.byte	82
	.word	0,0
.L1147:
	.word	-1,.L1148,0,.L2716-.L1148
	.half	2
	.byte	138,0
	.word	0,0
.L2722:
	.word	-1,.L1148,.L3726-.L1148,.L3727-.L1148
	.half	1
	.byte	100
	.word	0,0
.L2726:
	.word	-1,.L1148,.L3725-.L1148,.L735-.L1148
	.half	1
	.byte	91
	.word	0,0
.L2720:
	.word	-1,.L1148,0,.L3716-.L1148
	.half	1
	.byte	85
	.word	.L3719-.L1148,.L2716-.L1148
	.half	1
	.byte	90
	.word	0,0
.L2725:
	.word	-1,.L1148,.L3724-.L1148,.L3716-.L1148
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2723:
	.word	-1,.L1148,.L3722-.L1148,.L3723-.L1148
	.half	1
	.byte	95
	.word	0,0
.L2718:
	.word	-1,.L1148,0,.L3717-.L1148
	.half	1
	.byte	84
	.word	.L3718-.L1148,.L2716-.L1148
	.half	1
	.byte	89
	.word	0,0
.L2724:
	.word	-1,.L1148,.L3720-.L1148,.L2716-.L1148
	.half	1
	.byte	88
	.word	0,0
.L2721:
	.word	-1,.L1148,.L3721-.L1148,.L2716-.L1148
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lGcStartCopy')
	.sect	'.debug_loc'
.L2760:
	.word	-1,.L1160,.L3768-.L1160,.L3769-.L1160
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2733:
	.word	-1,.L1160,.L3777-.L1160,.L3778-.L1160
	.half	1
	.byte	111
	.word	0,0
.L2736:
	.word	-1,.L1160,.L3759-.L1160,.L765-.L1160
	.half	1
	.byte	89
	.word	.L773-.L1160,.L784-.L1160
	.half	1
	.byte	89
	.word	0,0
.L2740:
	.word	-1,.L1160,.L3764-.L1160,.L3765-.L1160
	.half	1
	.byte	82
	.word	0,0
.L1159:
	.word	-1,.L1160,0,.L2732-.L1160
	.half	2
	.byte	138,0
	.word	0,0
.L2756:
	.word	0,0
.L2738:
	.word	-1,.L1160,.L3757-.L1160,.L764-.L1160
	.half	1
	.byte	82
	.word	.L3758-.L1160,.L764-.L1160
	.half	1
	.byte	88
	.word	.L3762-.L1160,.L774-.L1160
	.half	1
	.byte	88
	.word	.L775-.L1160,.L773-.L1160
	.half	1
	.byte	88
	.word	.L3773-.L1160,.L773-.L1160
	.half	1
	.byte	85
	.word	.L3775-.L1160,.L3776-.L1160
	.half	5
	.byte	144,32,157,32,0
	.word	.L3779-.L1160,.L784-.L1160
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2737:
	.word	-1,.L1160,.L3763-.L1160,.L765-.L1160
	.half	1
	.byte	95
	.word	.L3772-.L1160,.L765-.L1160
	.half	1
	.byte	85
	.word	0,0
.L2761:
	.word	-1,.L1160,.L3767-.L1160,.L3768-.L1160
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2758:
	.word	-1,.L1160,.L3771-.L1160,.L765-.L1160
	.half	1
	.byte	81
	.word	0,0
.L2757:
	.word	0,0
.L2750:
	.word	-1,.L1160,.L2743-.L1160,.L769-.L1160
	.half	1
	.byte	82
	.word	.L3761-.L1160,.L776-.L1160
	.half	1
	.byte	82
	.word	.L773-.L1160,.L3774-.L1160
	.half	1
	.byte	82
	.word	0,0
.L2749:
	.word	-1,.L1160,.L3760-.L1160,.L769-.L1160
	.half	1
	.byte	111
	.word	0,0
.L2735:
	.word	-1,.L1160,.L3756-.L1160,.L2732-.L1160
	.half	1
	.byte	108
	.word	0,0
.L2755:
	.word	-1,.L1160,.L3766-.L1160,.L765-.L1160
	.half	1
	.byte	111
	.word	0,0
.L2739:
	.word	0,0
.L2734:
	.word	0,0
.L2759:
	.word	-1,.L1160,.L3768-.L1160,.L3770-.L1160
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2763:
	.word	0,0
.L2767:
	.word	0,0
.L2765:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lGcStartCopyWrite')
	.sect	'.debug_loc'
.L2912:
	.word	-1,.L1162,.L3812-.L1162,.L3813-.L1162
	.half	1
	.byte	84
	.word	0,0
.L2940:
	.word	-1,.L1162,.L3795-.L1162,.L3796-.L1162
	.half	5
	.byte	144,32,157,32,0
	.word	.L3799-.L1162,.L3800-.L1162
	.half	5
	.byte	144,32,157,32,0
	.word	.L799-.L1162,.L795-.L1162
	.half	5
	.byte	144,32,157,32,0
	.word	.L794-.L1162,.L3789-.L1162
	.half	5
	.byte	144,32,157,32,0
	.word	.L793-.L1162,.L3805-.L1162
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2946:
	.word	-1,.L1162,.L3789-.L1162,.L3802-.L1162
	.half	1
	.byte	82
	.word	.L3802-.L1162,.L3804-.L1162
	.half	5
	.byte	144,32,157,32,0
	.word	.L803-.L1162,.L802-.L1162
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2925:
	.word	-1,.L1162,.L3810-.L1162,.L3807-.L1162
	.half	1
	.byte	84
	.word	0,0
.L2919:
	.word	-1,.L1162,.L3786-.L1162,.L3787-.L1162
	.half	1
	.byte	109
	.word	.L793-.L1162,.L3806-.L1162
	.half	1
	.byte	109
	.word	.L3806-.L1162,.L813-.L1162
	.half	1
	.byte	111
	.word	.L810-.L1162,.L789-.L1162
	.half	1
	.byte	109
	.word	0,0
.L2945:
	.word	-1,.L1162,.L3803-.L1162,.L802-.L1162
	.half	1
	.byte	111
	.word	0,0
.L2922:
	.word	0,0
.L2923:
	.word	-1,.L1162,.L3792-.L1162,.L3793-.L1162
	.half	1
	.byte	88
	.word	.L3793-.L1162,.L3794-.L1162
	.half	1
	.byte	90
	.word	.L3808-.L1162,.L3809-.L1162
	.half	1
	.byte	88
	.word	0,0
.L2908:
	.word	-1,.L1162,.L3811-.L1162,.L788-.L1162
	.half	1
	.byte	88
	.word	0,0
.L2921:
	.word	-1,.L1162,.L2928-.L1162,.L2948-.L1162
	.half	1
	.byte	91
	.word	.L2948-.L1162,.L2952-.L1162
	.half	1
	.byte	95
	.word	.L793-.L1162,.L789-.L1162
	.half	1
	.byte	91
	.word	0,0
.L2913:
	.word	-1,.L1162,.L3780-.L1162,.L3781-.L1162
	.half	1
	.byte	89
	.word	.L3784-.L1162,.L3785-.L1162
	.half	1
	.byte	95
	.word	.L3781-.L1162,.L788-.L1162
	.half	1
	.byte	82
	.word	.L788-.L1162,.L2904-.L1162
	.half	1
	.byte	89
	.word	.L3818-.L1162,.L2904-.L1162
	.half	1
	.byte	82
	.word	0,0
.L1161:
	.word	-1,.L1162,0,.L2904-.L1162
	.half	2
	.byte	138,0
	.word	0,0
.L2956:
	.word	0,0
.L2910:
	.word	-1,.L1162,.L3813-.L1162,.L3814-.L1162
	.half	1
	.byte	82
	.word	0,0
.L2907:
	.word	0,0
.L2918:
	.word	0,0
.L2926:
	.word	-1,.L1162,.L3807-.L1162,.L813-.L1162
	.half	1
	.byte	82
	.word	0,0
.L2911:
	.word	-1,.L1162,.L3817-.L1162,.L3781-.L1162
	.half	1
	.byte	85
	.word	0,0
.L2957:
	.word	0,0
.L2909:
	.word	-1,.L1162,.L2954-.L1162,.L3815-.L1162
	.half	1
	.byte	95
	.word	0,0
.L2958:
	.word	-1,.L1162,.L3816-.L1162,.L818-.L1162
	.half	1
	.byte	95
	.word	0,0
.L2927:
	.word	-1,.L1162,.L3788-.L1162,.L3789-.L1162
	.half	1
	.byte	82
	.word	.L793-.L1162,.L3805-.L1162
	.half	1
	.byte	82
	.word	.L792-.L1162,.L3807-.L1162
	.half	1
	.byte	82
	.word	.L810-.L1162,.L789-.L1162
	.half	1
	.byte	82
	.word	0,0
.L2905:
	.word	-1,.L1162,.L3782-.L1162,.L3783-.L1162
	.half	1
	.byte	108
	.word	.L789-.L1162,.L788-.L1162
	.half	1
	.byte	108
	.word	0,0
.L2917:
	.word	-1,.L1162,.L3783-.L1162,.L789-.L1162
	.half	1
	.byte	108
	.word	0,0
.L2938:
	.word	-1,.L1162,.L3797-.L1162,.L795-.L1162
	.half	1
	.byte	98
	.word	0,0
.L2944:
	.word	-1,.L1162,.L3787-.L1162,.L802-.L1162
	.half	1
	.byte	109
	.word	0,0
.L2924:
	.word	0,0
.L2920:
	.word	-1,.L1162,.L3790-.L1162,.L3791-.L1162
	.half	1
	.byte	111
	.word	.L794-.L1162,.L3801-.L1162
	.half	1
	.byte	111
	.word	.L793-.L1162,.L3806-.L1162
	.half	1
	.byte	111
	.word	.L810-.L1162,.L789-.L1162
	.half	1
	.byte	111
	.word	0,0
.L2939:
	.word	-1,.L1162,.L3798-.L1162,.L795-.L1162
	.half	1
	.byte	111
	.word	0,0
.L2930:
	.word	0,0
.L2949:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lGcWrite')
	.sect	'.debug_loc'
.L2967:
	.word	-1,.L1150,.L3733-.L1150,.L2959-.L1150
	.half	1
	.byte	95
	.word	.L3735-.L1150,.L2959-.L1150
	.half	1
	.byte	82
	.word	0,0
.L1149:
	.word	-1,.L1150,0,.L2959-.L1150
	.half	2
	.byte	138,0
	.word	0,0
.L2966:
	.word	-1,.L1150,.L3734-.L1150,.L3731-.L1150
	.half	1
	.byte	100
	.word	0,0
.L2963:
	.word	-1,.L1150,0,.L3730-.L1150
	.half	1
	.byte	85
	.word	0,0
.L2961:
	.word	-1,.L1150,0,.L3731-.L1150
	.half	1
	.byte	84
	.word	0,0
.L2964:
	.word	-1,.L1150,.L3731-.L1150,.L3735-.L1150
	.half	1
	.byte	82
	.word	0,0
.L2965:
	.word	-1,.L1150,.L3732-.L1150,.L2959-.L1150
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lGetBlkCycleCount')
	.sect	'.debug_loc'
.L2114:
	.word	-1,.L1180,.L4001-.L1180,.L4005-.L1180
	.half	1
	.byte	84
	.word	.L4006-.L1180,.L4007-.L1180
	.half	1
	.byte	84
	.word	0,0
.L2115:
	.word	-1,.L1180,.L4004-.L1180,.L4005-.L1180
	.half	1
	.byte	82
	.word	.L1026-.L1180,.L1028-.L1180
	.half	1
	.byte	82
	.word	.L4010-.L1180,.L1027-.L1180
	.half	1
	.byte	82
	.word	.L4011-.L1180,.L2109-.L1180
	.half	1
	.byte	82
	.word	0,0
.L1179:
	.word	-1,.L1180,0,.L2109-.L1180
	.half	2
	.byte	138,0
	.word	0,0
.L2111:
	.word	-1,.L1180,0,.L4001-.L1180
	.half	1
	.byte	84
	.word	.L4002-.L1180,.L2109-.L1180
	.half	1
	.byte	88
	.word	0,0
.L2117:
	.word	-1,.L1180,.L4005-.L1180,.L1026-.L1180
	.half	1
	.byte	82
	.word	.L1027-.L1180,.L4011-.L1180
	.half	1
	.byte	82
	.word	0,0
.L2112:
	.word	-1,.L1180,.L4003-.L1180,.L2109-.L1180
	.half	1
	.byte	111
	.word	0,0
.L2113:
	.word	0,0
.L2116:
	.word	-1,.L1180,.L4008-.L1180,.L4009-.L1180
	.half	1
	.byte	95
	.word	.L4011-.L1180,.L4012-.L1180
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lGetDFLASHPages')
	.sect	'.debug_loc'
.L1171:
	.word	-1,.L1172,0,.L3084-.L1172
	.half	2
	.byte	138,0
	.word	0,0
.L3088:
	.word	-1,.L1172,0,.L3084-.L1172
	.half	1
	.byte	84
	.word	0,0
.L3087:
	.word	-1,.L1172,.L3920-.L1172,.L3921-.L1172
	.half	1
	.byte	95
	.word	.L3922-.L1172,.L3923-.L1172
	.half	1
	.byte	95
	.word	.L3924-.L1172,.L3084-.L1172
	.half	1
	.byte	82
	.word	0,0
.L3086:
	.word	-1,.L1172,0,.L3084-.L1172
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lGetFreeDFLASHPages')
	.sect	'.debug_loc'
.L3091:
	.word	-1,.L1174,0,.L3089-.L1174
	.half	1
	.byte	84
	.word	0,0
.L3099:
	.word	-1,.L1174,.L3928-.L1174,.L3929-.L1174
	.half	1
	.byte	82
	.word	.L943-.L1174,.L3932-.L1174
	.half	1
	.byte	82
	.word	0,0
.L3096:
	.word	-1,.L1174,.L3926-.L1174,.L3089-.L1174
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1173:
	.word	-1,.L1174,0,.L3089-.L1174
	.half	2
	.byte	138,0
	.word	0,0
.L3095:
	.word	-1,.L1174,.L3932-.L1174,.L3089-.L1174
	.half	1
	.byte	82
	.word	0,0
.L3098:
	.word	-1,.L1174,.L3927-.L1174,.L3089-.L1174
	.half	1
	.byte	81
	.word	0,0
.L3093:
	.word	-1,.L1174,0,.L3089-.L1174
	.half	1
	.byte	85
	.word	0,0
.L3094:
	.word	-1,.L1174,.L3925-.L1174,.L3089-.L1174
	.half	1
	.byte	98
	.word	0,0
.L3097:
	.word	-1,.L1174,.L3930-.L1174,.L3931-.L1174
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lGetStatus')
	.sect	'.debug_loc'
.L1113:
	.word	-1,.L1114,0,.L2102-.L1114
	.half	2
	.byte	138,0
	.word	0,0
.L2108:
	.word	-1,.L1114,.L3343-.L1114,.L266-.L1114
	.half	1
	.byte	95
	.word	.L268-.L1114,.L265-.L1114
	.half	1
	.byte	95
	.word	0,0
.L2104:
	.word	-1,.L1114,.L3342-.L1114,.L2102-.L1114
	.half	1
	.byte	82
	.word	0,0
.L2107:
	.word	0,0
.L2103:
	.word	-1,.L1114,.L3341-.L1114,.L2102-.L1114
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lGetUserJob')
	.sect	'.debug_loc'
.L1115:
	.word	-1,.L1116,0,.L2098-.L1116
	.half	2
	.byte	138,0
	.word	0,0
.L2100:
	.word	-1,.L1116,0,.L2098-.L1116
	.half	1
	.byte	84
	.word	0,0
.L2101:
	.word	-1,.L1116,.L3344-.L1116,.L2098-.L1116
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lGetUsrBlockIndex')
	.sect	'.debug_loc'
.L2095:
	.word	-1,.L1176,.L3933-.L1176,.L2089-.L1176
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2096:
	.word	-1,.L1176,.L3937-.L1176,.L2089-.L1176
	.half	1
	.byte	81
	.word	0,0
.L2094:
	.word	-1,.L1176,.L3934-.L1176,.L3935-.L1176
	.half	1
	.byte	95
	.word	.L3940-.L1176,.L3941-.L1176
	.half	1
	.byte	95
	.word	0,0
.L2091:
	.word	-1,.L1176,0,.L2089-.L1176
	.half	1
	.byte	84
	.word	0,0
.L2092:
	.word	-1,.L1176,.L3938-.L1176,.L3939-.L1176
	.half	1
	.byte	111
	.word	0,0
.L1175:
	.word	-1,.L1176,0,.L2089-.L1176
	.half	2
	.byte	138,0
	.word	0,0
.L2097:
	.word	-1,.L1176,.L3936-.L1176,.L2089-.L1176
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lHandleInitGcFail')
	.sect	'.debug_loc'
.L1195:
	.word	-1,.L1196,0,.L2784-.L1196
	.half	2
	.byte	138,0
	.word	0,0
.L2785:
	.word	-1,.L1196,.L4048-.L1196,.L2784-.L1196
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lHandleIntrWrite')
	.sect	'.debug_loc'
.L2133:
	.word	-1,.L1136,.L3507-.L1136,.L2130-.L1136
	.half	1
	.byte	88
	.word	0,0
.L1135:
	.word	-1,.L1136,0,.L2130-.L1136
	.half	2
	.byte	138,0
	.word	0,0
.L2134:
	.word	-1,.L1136,.L3508-.L1136,.L3509-.L1136
	.half	1
	.byte	95
	.word	0,0
.L2132:
	.word	-1,.L1136,.L3510-.L1136,.L3511-.L1136
	.half	1
	.byte	100
	.word	0,0
.L2135:
	.word	-1,.L1136,.L3511-.L1136,.L2130-.L1136
	.half	1
	.byte	82
	.word	0,0
.L2131:
	.word	-1,.L1136,.L3506-.L1136,.L2130-.L1136
	.half	1
	.byte	111
	.word	0,0
.L2138:
	.word	0,0
.L2136:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lHandleUserWrite')
	.sect	'.debug_loc'
.L2282:
	.word	0,0
.L2291:
	.word	0,0
.L2270:
	.word	-1,.L1134,.L3480-.L1134,.L3475-.L1134
	.half	1
	.byte	89
	.word	.L3475-.L1134,.L527-.L1134
	.half	1
	.byte	82
	.word	.L527-.L1134,.L3481-.L1134
	.half	1
	.byte	89
	.word	.L531-.L1134,.L3491-.L1134
	.half	1
	.byte	89
	.word	0,0
.L2287:
	.word	-1,.L1134,.L3487-.L1134,.L3488-.L1134
	.half	5
	.byte	144,32,157,32,0
	.word	.L532-.L1134,.L3490-.L1134
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2301:
	.word	-1,.L1134,.L3494-.L1134,.L3495-.L1134
	.half	1
	.byte	91
	.word	.L535-.L1134,.L3501-.L1134
	.half	1
	.byte	91
	.word	0,0
.L2299:
	.word	-1,.L1134,.L3499-.L1134,.L3500-.L1134
	.half	5
	.byte	144,32,157,32,0
	.word	.L535-.L1134,.L3502-.L1134
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2267:
	.word	-1,.L1134,.L3477-.L1134,.L3478-.L1134
	.half	1
	.byte	111
	.word	0,0
.L2295:
	.word	0,0
.L2271:
	.word	-1,.L1134,.L3479-.L1134,.L2263-.L1134
	.half	1
	.byte	88
	.word	.L3497-.L1134,.L3498-.L1134
	.half	1
	.byte	84
	.word	0,0
.L2298:
	.word	-1,.L1134,.L3496-.L1134,.L534-.L1134
	.half	1
	.byte	110
	.word	0,0
.L2300:
	.word	-1,.L1134,.L3503-.L1134,.L534-.L1134
	.half	1
	.byte	81
	.word	0,0
.L2269:
	.word	-1,.L1134,.L3482-.L1134,.L2263-.L1134
	.half	1
	.byte	90
	.word	0,0
.L2302:
	.word	-1,.L1134,.L3492-.L1134,.L534-.L1134
	.half	1
	.byte	92
	.word	0,0
.L1133:
	.word	-1,.L1134,0,.L2263-.L1134
	.half	2
	.byte	138,0
	.word	0,0
.L2288:
	.word	-1,.L1134,.L3489-.L1134,.L531-.L1134
	.half	1
	.byte	89
	.word	0,0
.L2303:
	.word	-1,.L1134,.L3496-.L1134,.L534-.L1134
	.half	1
	.byte	89
	.word	0,0
.L2272:
	.word	-1,.L1134,.L3483-.L1134,.L3484-.L1134
	.half	1
	.byte	95
	.word	0,0
.L2284:
	.word	0,0
.L2293:
	.word	0,0
.L2268:
	.word	-1,.L1134,.L3485-.L1134,.L2263-.L1134
	.half	1
	.byte	111
	.word	.L3504-.L1134,.L3505-.L1134
	.half	1
	.byte	100
	.word	0,0
.L2273:
	.word	-1,.L1134,.L3505-.L1134,.L550-.L1134
	.half	1
	.byte	82
	.word	0,0
.L2286:
	.word	-1,.L1134,.L3486-.L1134,.L531-.L1134
	.half	1
	.byte	98
	.word	0,0
.L2297:
	.word	-1,.L1134,.L3493-.L1134,.L534-.L1134
	.half	1
	.byte	109
	.word	0,0
.L2266:
	.word	-1,.L1134,.L3476-.L1134,.L2263-.L1134
	.half	1
	.byte	108
	.word	0,0
.L2265:
	.word	-1,.L1134,0,.L3475-.L1134
	.half	1
	.byte	84
	.word	0,0
.L2306:
	.word	0,0
.L2277:
	.word	0,0
.L2275:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lHandleUsrJobFailure')
	.sect	'.debug_loc'
.L2017:
	.word	-1,.L1112,0,.L2015-.L1112
	.half	1
	.byte	84
	.word	0,0
.L1111:
	.word	-1,.L1112,0,.L2015-.L1112
	.half	2
	.byte	138,0
	.word	0,0
.L2018:
	.word	-1,.L1112,.L3339-.L1112,.L3340-.L1112
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lHandleWriteFail')
	.sect	'.debug_loc'
.L1197:
	.word	-1,.L1198,0,.L2013-.L1198
	.half	2
	.byte	138,0
	.word	0,0
.L2014:
	.word	-1,.L1198,.L4049-.L1198,.L2013-.L1198
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lHandleWritePrepDFLASH')
	.sect	'.debug_loc'
.L2315:
	.word	-1,.L1124,.L3391-.L1124,.L3392-.L1124
	.half	1
	.byte	89
	.word	.L3393-.L1124,.L3394-.L1124
	.half	1
	.byte	84
	.word	.L3397-.L1124,.L377-.L1124
	.half	1
	.byte	84
	.word	.L3392-.L1124,.L383-.L1124
	.half	1
	.byte	84
	.word	.L3398-.L1124,.L3389-.L1124
	.half	1
	.byte	84
	.word	0,0
.L1123:
	.word	-1,.L1124,0,.L2311-.L1124
	.half	2
	.byte	138,0
	.word	0,0
.L2317:
	.word	-1,.L1124,.L3395-.L1124,.L3396-.L1124
	.half	1
	.byte	95
	.word	.L384-.L1124,.L2311-.L1124
	.half	1
	.byte	95
	.word	0,0
.L2316:
	.word	-1,.L1124,.L3388-.L1124,.L3389-.L1124
	.half	1
	.byte	88
	.word	.L3389-.L1124,.L382-.L1124
	.half	1
	.byte	82
	.word	.L382-.L1124,.L2311-.L1124
	.half	1
	.byte	88
	.word	0,0
.L2313:
	.word	-1,.L1124,0,.L375-.L1124
	.half	1
	.byte	100
	.word	.L3387-.L1124,.L2311-.L1124
	.half	1
	.byte	111
	.word	.L3398-.L1124,.L3389-.L1124
	.half	1
	.byte	100
	.word	0,0
.L2314:
	.word	-1,.L1124,.L3390-.L1124,.L2311-.L1124
	.half	1
	.byte	108
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lInitGC')
	.sect	'.debug_loc'
.L2402:
	.word	-1,.L1126,.L3428-.L1126,.L3429-.L1126
	.half	5
	.byte	144,32,157,32,0
	.word	.L3429-.L1126,.L3431-.L1126
	.half	1
	.byte	95
	.word	0,0
.L2330:
	.word	-1,.L1126,.L3403-.L1126,.L390-.L1126
	.half	1
	.byte	88
	.word	0,0
.L2417:
	.word	-1,.L1126,.L3443-.L1126,.L480-.L1126
	.half	1
	.byte	100
	.word	.L494-.L1126,.L2318-.L1126
	.half	1
	.byte	100
	.word	0,0
.L2421:
	.word	-1,.L1126,.L3441-.L1126,.L3442-.L1126
	.half	1
	.byte	84
	.word	0,0
.L2332:
	.word	-1,.L1126,.L3402-.L1126,.L395-.L1126
	.half	1
	.byte	84
	.word	.L392-.L1126,.L404-.L1126
	.half	1
	.byte	84
	.word	0,0
.L2341:
	.word	-1,.L1126,.L2351-.L1126,.L2380-.L1126
	.half	1
	.byte	89
	.word	.L3422-.L1126,.L425-.L1126
	.half	1
	.byte	84
	.word	.L2380-.L1126,.L2385-.L1126
	.half	1
	.byte	95
	.word	.L428-.L1126,.L416-.L1126
	.half	1
	.byte	89
	.word	0,0
.L2401:
	.word	-1,.L1126,.L3425-.L1126,.L3424-.L1126
	.half	1
	.byte	84
	.word	.L3436-.L1126,.L3434-.L1126
	.half	1
	.byte	84
	.word	0,0
.L2331:
	.word	-1,.L1126,.L3406-.L1126,.L397-.L1126
	.half	1
	.byte	81
	.word	0,0
.L1125:
	.word	-1,.L1126,0,.L2318-.L1126
	.half	2
	.byte	138,0
	.word	0,0
.L2342:
	.word	0,0
.L2364:
	.word	-1,.L1126,.L3409-.L1126,.L2346-.L1126
	.half	1
	.byte	82
	.word	.L2346-.L1126,.L3411-.L1126
	.half	1
	.byte	88
	.word	.L3412-.L1126,.L3413-.L1126
	.half	1
	.byte	82
	.word	.L3414-.L1126,.L3411-.L1126
	.half	1
	.byte	82
	.word	.L3411-.L1126,.L3410-.L1126
	.half	1
	.byte	84
	.word	.L3416-.L1126,.L413-.L1126
	.half	1
	.byte	88
	.word	.L410-.L1126,.L389-.L1126
	.half	1
	.byte	88
	.word	0,0
.L2375:
	.word	0,0
.L2368:
	.word	0,0
.L2348:
	.word	0,0
.L2400:
	.word	-1,.L1126,.L3423-.L1126,.L3424-.L1126
	.half	1
	.byte	100
	.word	.L3432-.L1126,.L461-.L1126
	.half	1
	.byte	100
	.word	.L3433-.L1126,.L3434-.L1126
	.half	1
	.byte	100
	.word	0,0
.L2329:
	.word	-1,.L1126,.L3405-.L1126,.L395-.L1126
	.half	1
	.byte	100
	.word	.L3407-.L1126,.L404-.L1126
	.half	1
	.byte	100
	.word	0,0
.L2333:
	.word	-1,.L1126,.L3400-.L1126,.L3401-.L1126
	.half	1
	.byte	82
	.word	.L406-.L1126,.L390-.L1126
	.half	1
	.byte	82
	.word	0,0
.L2343:
	.word	-1,.L1126,.L3409-.L1126,.L3410-.L1126
	.half	1
	.byte	82
	.word	.L411-.L1126,.L414-.L1126
	.half	1
	.byte	82
	.word	.L410-.L1126,.L3417-.L1126
	.half	1
	.byte	82
	.word	.L419-.L1126,.L422-.L1126
	.half	1
	.byte	82
	.word	.L418-.L1126,.L3420-.L1126
	.half	1
	.byte	82
	.word	.L427-.L1126,.L416-.L1126
	.half	1
	.byte	82
	.word	0,0
.L2378:
	.word	-1,.L1126,.L3417-.L1126,.L3419-.L1126
	.half	1
	.byte	82
	.word	.L420-.L1126,.L419-.L1126
	.half	1
	.byte	82
	.word	0,0
.L2371:
	.word	-1,.L1126,.L3410-.L1126,.L3415-.L1126
	.half	1
	.byte	82
	.word	.L412-.L1126,.L411-.L1126
	.half	1
	.byte	82
	.word	0,0
.L2422:
	.word	-1,.L1126,.L3442-.L1126,.L479-.L1126
	.half	1
	.byte	82
	.word	0,0
.L2404:
	.word	-1,.L1126,.L3434-.L1126,.L456-.L1126
	.half	1
	.byte	82
	.word	0,0
.L2399:
	.word	-1,.L1126,.L3430-.L1126,.L456-.L1126
	.half	1
	.byte	111
	.word	0,0
.L2328:
	.word	-1,.L1126,.L3404-.L1126,.L390-.L1126
	.half	1
	.byte	111
	.word	0,0
.L2338:
	.word	0,0
.L2370:
	.word	0,0
.L2339:
	.word	0,0
.L2377:
	.word	0,0
.L2340:
	.word	-1,.L1126,.L3421-.L1126,.L425-.L1126
	.half	1
	.byte	100
	.word	0,0
.L2420:
	.word	-1,.L1126,.L3440-.L1126,.L479-.L1126
	.half	1
	.byte	111
	.word	0,0
.L2398:
	.word	-1,.L1126,.L3427-.L1126,.L456-.L1126
	.half	1
	.byte	108
	.word	0,0
.L2411:
	.word	-1,.L1126,.L3437-.L1126,.L464-.L1126
	.half	1
	.byte	111
	.word	0,0
.L2416:
	.word	-1,.L1126,.L3438-.L1126,.L476-.L1126
	.half	1
	.byte	111
	.word	.L477-.L1126,.L3439-.L1126
	.half	1
	.byte	111
	.word	.L479-.L1126,.L2318-.L1126
	.half	1
	.byte	111
	.word	0,0
.L2327:
	.word	-1,.L1126,.L3399-.L1126,.L390-.L1126
	.half	1
	.byte	108
	.word	0,0
.L2337:
	.word	-1,.L1126,.L3408-.L1126,.L389-.L1126
	.half	1
	.byte	108
	.word	0,0
.L2376:
	.word	-1,.L1126,.L3418-.L1126,.L417-.L1126
	.half	1
	.byte	111
	.word	0,0
.L2369:
	.word	-1,.L1126,.L3412-.L1126,.L409-.L1126
	.half	1
	.byte	111
	.word	0,0
.L2323:
	.word	0,0
.L2319:
	.word	-1,.L1126,.L2321-.L1126,.L2318-.L1126
	.half	1
	.byte	109
	.word	0,0
.L2403:
	.word	-1,.L1126,.L3426-.L1126,.L3424-.L1126
	.half	1
	.byte	85
	.word	.L3435-.L1126,.L3434-.L1126
	.half	1
	.byte	85
	.word	0,0
.L2383:
	.word	0,0
.L2381:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lIsBlockAcrossWLLatest')
	.sect	'.debug_loc'
.L2896:
	.word	-1,.L1132,.L3472-.L1132,.L3473-.L1132
	.half	1
	.byte	82
	.word	.L524-.L1132,.L3474-.L1132
	.half	1
	.byte	82
	.word	0,0
.L2898:
	.word	0,0
.L1131:
	.word	-1,.L1132,0,.L2893-.L1132
	.half	2
	.byte	138,0
	.word	0,0
.L2897:
	.word	-1,.L1132,.L3471-.L1132,.L2893-.L1132
	.half	1
	.byte	108
	.word	0,0
.L2895:
	.word	-1,.L1132,.L3473-.L1132,.L524-.L1132
	.half	1
	.byte	82
	.word	.L3474-.L1132,.L2893-.L1132
	.half	1
	.byte	82
	.word	0,0
.L2894:
	.word	-1,.L1132,.L3470-.L1132,.L2893-.L1132
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lIsLastWrittenWLAffected')
	.sect	'.debug_loc'
.L2883:
	.word	0,0
.L2891:
	.word	-1,.L1130,.L3453-.L1130,.L510-.L1130
	.half	1
	.byte	82
	.word	0,0
.L2872:
	.word	-1,.L1130,.L3458-.L1130,.L510-.L1130
	.half	1
	.byte	89
	.word	.L3461-.L1130,.L3453-.L1130
	.half	1
	.byte	84
	.word	0,0
.L2881:
	.word	0,0
.L2888:
	.word	0,0
.L2871:
	.word	-1,.L1130,.L3457-.L1130,.L508-.L1130
	.half	1
	.byte	88
	.word	0,0
.L1129:
	.word	-1,.L1130,0,.L3450-.L1130
	.half	2
	.byte	138,0
	.word	.L3450-.L1130,.L2865-.L1130
	.half	2
	.byte	138,8
	.word	.L2865-.L1130,.L2865-.L1130
	.half	2
	.byte	138,0
	.word	0,0
.L2869:
	.word	-1,.L1130,.L3456-.L1130,.L2865-.L1130
	.half	1
	.byte	109
	.word	0,0
.L2874:
	.word	0,0
.L2873:
	.word	-1,.L1130,.L3452-.L1130,.L3453-.L1130
	.half	1
	.byte	82
	.word	.L510-.L1130,.L2865-.L1130
	.half	1
	.byte	82
	.word	0,0
.L2892:
	.word	-1,.L1130,.L3452-.L1130,.L3454-.L1130
	.half	1
	.byte	82
	.word	.L3454-.L1130,.L3453-.L1130
	.half	5
	.byte	144,32,157,32,0
	.word	.L3459-.L1130,.L510-.L1130
	.half	2
	.byte	145,120
	.word	.L513-.L1130,.L3465-.L1130
	.half	1
	.byte	95
	.word	.L3466-.L1130,.L514-.L1130
	.half	1
	.byte	95
	.word	.L3467-.L1130,.L511-.L1130
	.half	1
	.byte	95
	.word	.L3468-.L1130,.L517-.L1130
	.half	1
	.byte	95
	.word	.L3469-.L1130,.L510-.L1130
	.half	1
	.byte	95
	.word	.L510-.L1130,.L2865-.L1130
	.half	1
	.byte	82
	.word	0,0
.L2867:
	.word	-1,.L1130,0,.L509-.L1130
	.half	1
	.byte	84
	.word	.L3451-.L1130,.L2865-.L1130
	.half	1
	.byte	91
	.word	0,0
.L2868:
	.word	-1,.L1130,.L3455-.L1130,.L2865-.L1130
	.half	1
	.byte	108
	.word	0,0
.L2887:
	.word	-1,.L1130,.L3460-.L1130,.L510-.L1130
	.half	1
	.byte	111
	.word	0,0
.L2890:
	.word	-1,.L1130,.L3462-.L1130,.L3463-.L1130
	.half	5
	.byte	144,32,157,32,0
	.word	.L516-.L1130,.L511-.L1130
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2889:
	.word	-1,.L1130,.L3464-.L1130,.L511-.L1130
	.half	1
	.byte	98
	.word	0,0
.L2870:
	.word	0,0
.L2877:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lIsReadAllowedbyGC')
	.sect	'.debug_loc'
.L1117:
	.word	-1,.L1118,0,.L2827-.L1118
	.half	2
	.byte	138,0
	.word	0,0
.L2829:
	.word	-1,.L1118,.L3346-.L1118,.L2827-.L1118
	.half	1
	.byte	82
	.word	0,0
.L2828:
	.word	-1,.L1118,.L3345-.L1118,.L2827-.L1118
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lIsUnerasableAddr')
	.sect	'.debug_loc'
.L2004:
	.word	-1,.L1184,0,.L2002-.L1184
	.half	1
	.byte	84
	.word	0,0
.L2009:
	.word	-1,.L1184,.L4016-.L1184,.L2002-.L1184
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1183:
	.word	-1,.L1184,0,.L2002-.L1184
	.half	2
	.byte	138,0
	.word	0,0
.L2008:
	.word	-1,.L1184,.L2011-.L1184,.L2002-.L1184
	.half	1
	.byte	83
	.word	0,0
.L2006:
	.word	-1,.L1184,.L2010-.L1184,.L2002-.L1184
	.half	1
	.byte	82
	.word	0,0
.L2005:
	.word	-1,.L1184,.L4015-.L1184,.L2002-.L1184
	.half	1
	.byte	98
	.word	0,0
.L2007:
	.word	-1,.L1184,.L4017-.L1184,.L4018-.L1184
	.half	1
	.byte	81
	.word	.L1034-.L1184,.L2002-.L1184
	.half	1
	.byte	81
	.word	0,0
.L2012:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lIsWriteInvldAllowedbyGC')
	.sect	'.debug_loc'
.L2846:
	.word	-1,.L1120,.L3354-.L1120,.L292-.L1120
	.half	1
	.byte	90
	.word	.L3359-.L1120,.L3358-.L1120
	.half	1
	.byte	84
	.word	0,0
.L2844:
	.word	-1,.L1120,.L3356-.L1120,.L294-.L1120
	.half	1
	.byte	92
	.word	.L3351-.L1120,.L295-.L1120
	.half	1
	.byte	82
	.word	.L295-.L1120,.L292-.L1120
	.half	1
	.byte	92
	.word	0,0
.L2839:
	.word	0,0
.L2841:
	.word	-1,.L1120,.L3355-.L1120,.L292-.L1120
	.half	1
	.byte	91
	.word	0,0
.L1119:
	.word	-1,.L1120,0,.L2830-.L1120
	.half	2
	.byte	138,0
	.word	0,0
.L2857:
	.word	0,0
.L2843:
	.word	-1,.L1120,.L3361-.L1120,.L296-.L1120
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2858:
	.word	0,0
.L2835:
	.word	0,0
.L2834:
	.word	-1,.L1120,.L3350-.L1120,.L3351-.L1120
	.half	1
	.byte	82
	.word	0,0
.L2833:
	.word	-1,.L1120,.L3349-.L1120,.L3350-.L1120
	.half	1
	.byte	84
	.word	0,0
.L2836:
	.word	-1,.L1120,.L2837-.L1120,.L292-.L1120
	.half	1
	.byte	109
	.word	0,0
.L2845:
	.word	-1,.L1120,.L3358-.L1120,.L3360-.L1120
	.half	1
	.byte	82
	.word	.L2862-.L1120,.L292-.L1120
	.half	1
	.byte	82
	.word	0,0
.L2859:
	.word	-1,.L1120,.L3362-.L1120,.L2861-.L1120
	.half	1
	.byte	95
	.word	0,0
.L2864:
	.word	-1,.L1120,.L3363-.L1120,.L3364-.L1120
	.half	1
	.byte	95
	.word	.L298-.L1120,.L302-.L1120
	.half	1
	.byte	95
	.word	0,0
.L2832:
	.word	-1,.L1120,.L3348-.L1120,.L2830-.L1120
	.half	1
	.byte	88
	.word	.L3365-.L1120,.L2830-.L1120
	.half	1
	.byte	82
	.word	0,0
.L2847:
	.word	-1,.L1120,.L3352-.L1120,.L292-.L1120
	.half	1
	.byte	89
	.word	0,0
.L2831:
	.word	-1,.L1120,.L3347-.L1120,.L2830-.L1120
	.half	1
	.byte	108
	.word	0,0
.L2840:
	.word	-1,.L1120,.L3353-.L1120,.L292-.L1120
	.half	1
	.byte	110
	.word	0,0
.L2842:
	.word	-1,.L1120,.L3357-.L1120,.L3358-.L1120
	.half	1
	.byte	85
	.word	0,0
.L2849:
	.word	0,0
.L2854:
	.word	0,0
.L2852:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lLastPgHandler')
	.sect	'.debug_loc'
.L2142:
	.word	-1,.L1128,.L3447-.L1128,.L3448-.L1128
	.half	1
	.byte	111
	.word	.L504-.L1128,.L3449-.L1128
	.half	1
	.byte	111
	.word	0,0
.L2143:
	.word	-1,.L1128,.L3446-.L1128,.L507-.L1128
	.half	1
	.byte	98
	.word	0,0
.L2146:
	.word	-1,.L1128,.L3445-.L1128,.L507-.L1128
	.half	1
	.byte	82
	.word	0,0
.L1127:
	.word	-1,.L1128,0,.L2139-.L1128
	.half	2
	.byte	138,0
	.word	0,0
.L2144:
	.word	-1,.L1128,.L2147-.L1128,.L507-.L1128
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2141:
	.word	0,0
.L2145:
	.word	0,0
.L2140:
	.word	-1,.L1128,.L3444-.L1128,.L2139-.L1128
	.half	1
	.byte	108
	.word	0,0
.L2149:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lLocalRead')
	.sect	'.debug_loc'
.L2427:
	.word	-1,.L1142,.L2452-.L1142,.L712-.L1142
	.half	1
	.byte	89
	.word	.L3689-.L1142,.L3688-.L1142
	.half	1
	.byte	84
	.word	0,0
.L2487:
	.word	-1,.L1142,.L3658-.L1142,.L3669-.L1142
	.half	1
	.byte	82
	.word	.L680-.L1142,.L679-.L1142
	.half	1
	.byte	82
	.word	0,0
.L2486:
	.word	-1,.L1142,.L3667-.L1142,.L3668-.L1142
	.half	1
	.byte	81
	.word	.L680-.L1142,.L679-.L1142
	.half	1
	.byte	81
	.word	0,0
.L2429:
	.word	-1,.L1142,.L2437-.L1142,.L2423-.L1142
	.half	1
	.byte	88
	.word	.L3656-.L1142,.L3657-.L1142
	.half	1
	.byte	84
	.word	0,0
.L2430:
	.word	0,0
.L2459:
	.word	-1,.L1142,.L2438-.L1142,.L2423-.L1142
	.half	1
	.byte	92
	.word	0,0
.L2472:
	.word	-1,.L1142,.L3661-.L1142,.L3662-.L1142
	.half	1
	.byte	111
	.word	0,0
.L2484:
	.word	-1,.L1142,.L3672-.L1142,.L3673-.L1142
	.half	1
	.byte	95
	.word	.L3666-.L1142,.L683-.L1142
	.half	5
	.byte	144,32,157,32,0
	.word	.L3674-.L1142,.L3675-.L1142
	.half	5
	.byte	144,32,157,32,0
	.word	.L682-.L1142,.L681-.L1142
	.half	1
	.byte	95
	.word	.L3678-.L1142,.L3680-.L1142
	.half	1
	.byte	95
	.word	.L3668-.L1142,.L687-.L1142
	.half	1
	.byte	81
	.word	.L3681-.L1142,.L3682-.L1142
	.half	1
	.byte	81
	.word	.L686-.L1142,.L680-.L1142
	.half	1
	.byte	95
	.word	0,0
.L2483:
	.word	-1,.L1142,.L3670-.L1142,.L3671-.L1142
	.half	1
	.byte	98
	.word	.L3671-.L1142,.L680-.L1142
	.half	1
	.byte	111
	.word	.L680-.L1142,.L679-.L1142
	.half	1
	.byte	98
	.word	0,0
.L2426:
	.word	-1,.L1142,.L3655-.L1142,.L2423-.L1142
	.half	1
	.byte	110
	.word	0,0
.L2433:
	.word	-1,.L1142,.L2461-.L1142,.L2452-.L1142
	.half	1
	.byte	89
	.word	0,0
.L2485:
	.word	-1,.L1142,.L3665-.L1142,.L3666-.L1142
	.half	5
	.byte	144,32,157,32,0
	.word	.L681-.L1142,.L3676-.L1142
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1141:
	.word	-1,.L1142,0,.L2423-.L1142
	.half	2
	.byte	138,0
	.word	0,0
.L2431:
	.word	-1,.L1142,.L3687-.L1142,.L3688-.L1142
	.half	1
	.byte	85
	.word	0,0
.L2435:
	.word	-1,.L1142,.L3686-.L1142,.L703-.L1142
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2424:
	.word	-1,.L1142,.L3654-.L1142,.L2423-.L1142
	.half	1
	.byte	109
	.word	0,0
.L2456:
	.word	0,0
.L2428:
	.word	-1,.L1142,.L3688-.L1142,.L3690-.L1142
	.half	1
	.byte	82
	.word	.L3691-.L1142,.L709-.L1142
	.half	1
	.byte	90
	.word	0,0
.L2477:
	.word	0,0
.L2473:
	.word	-1,.L1142,.L2462-.L1142,.L2423-.L1142
	.half	1
	.byte	91
	.word	0,0
.L2434:
	.word	-1,.L1142,.L3692-.L1142,.L714-.L1142
	.half	1
	.byte	82
	.word	0,0
.L2440:
	.word	0,0
.L2458:
	.word	-1,.L1142,.L693-.L1142,.L691-.L1142
	.half	1
	.byte	90
	.word	0,0
.L2425:
	.word	-1,.L1142,.L3653-.L1142,.L2423-.L1142
	.half	1
	.byte	108
	.word	0,0
.L2457:
	.word	-1,.L1142,.L3684-.L1142,.L3685-.L1142
	.half	1
	.byte	111
	.word	.L690-.L1142,.L691-.L1142
	.half	1
	.byte	111
	.word	0,0
.L2471:
	.word	-1,.L1142,.L3659-.L1142,.L3660-.L1142
	.half	1
	.byte	98
	.word	0,0
.L2482:
	.word	-1,.L1142,.L3663-.L1142,.L3664-.L1142
	.half	1
	.byte	111
	.word	.L680-.L1142,.L3683-.L1142
	.half	1
	.byte	111
	.word	0,0
.L2489:
	.word	-1,.L1142,.L3679-.L1142,.L680-.L1142
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2488:
	.word	-1,.L1142,.L3677-.L1142,.L3678-.L1142
	.half	1
	.byte	95
	.word	0,0
.L2432:
	.word	-1,.L1142,.L3657-.L1142,.L3658-.L1142
	.half	1
	.byte	82
	.word	.L2474-.L1142,.L693-.L1142
	.half	1
	.byte	90
	.word	0,0
.L2442:
	.word	0,0
.L2464:
	.word	0,0
.L2480:
	.word	0,0
.L2491:
	.word	0,0
.L2494:
	.word	0,0
.L2492:
	.word	0,0
.L2476:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lLocalWrite')
	.sect	'.debug_loc'
.L2691:
	.word	0,0
.L2583:
	.word	-1,.L1138,.L3522-.L1138,.L572-.L1138
	.half	1
	.byte	89
	.word	.L3544-.L1138,.L3542-.L1138
	.half	1
	.byte	84
	.word	0,0
.L2612:
	.word	-1,.L1138,.L3550-.L1138,.L563-.L1138
	.half	1
	.byte	91
	.word	.L3556-.L1138,.L3555-.L1138
	.half	1
	.byte	84
	.word	0,0
.L2610:
	.word	-1,.L1138,.L3552-.L1138,.L582-.L1138
	.half	1
	.byte	93
	.word	.L3553-.L1138,.L583-.L1138
	.half	1
	.byte	82
	.word	.L583-.L1138,.L563-.L1138
	.half	1
	.byte	93
	.word	0,0
.L2560:
	.word	0,0
.L2537:
	.word	-1,.L1138,.L2545-.L1138,.L568-.L1138
	.half	1
	.byte	82
	.word	0,0
.L2667:
	.word	-1,.L1138,.L3598-.L1138,.L634-.L1138
	.half	1
	.byte	88
	.word	.L3610-.L1138,.L3609-.L1138
	.half	1
	.byte	84
	.word	0,0
.L2523:
	.word	-1,.L1138,.L3515-.L1138,.L3516-.L1138
	.half	1
	.byte	84
	.word	0,0
.L2558:
	.word	0,0
.L2534:
	.word	-1,.L1138,.L3524-.L1138,.L562-.L1138
	.half	1
	.byte	109
	.word	0,0
.L2640:
	.word	-1,.L1138,.L3574-.L1138,.L607-.L1138
	.half	1
	.byte	111
	.word	.L3581-.L1138,.L3582-.L1138
	.half	1
	.byte	101
	.word	0,0
.L2663:
	.word	-1,.L1138,.L3592-.L1138,.L628-.L1138
	.half	1
	.byte	109
	.word	.L3615-.L1138,.L3616-.L1138
	.half	1
	.byte	101
	.word	0,0
.L2604:
	.word	0,0
.L2548:
	.word	0,0
.L2645:
	.word	-1,.L1138,.L3577-.L1138,.L3578-.L1138
	.half	1
	.byte	89
	.word	.L3578-.L1138,.L3579-.L1138
	.half	1
	.byte	90
	.word	.L3586-.L1138,.L3587-.L1138
	.half	1
	.byte	89
	.word	0,0
.L2668:
	.word	-1,.L1138,.L3599-.L1138,.L3600-.L1138
	.half	1
	.byte	91
	.word	.L3600-.L1138,.L3601-.L1138
	.half	1
	.byte	90
	.word	.L3603-.L1138,.L3604-.L1138
	.half	1
	.byte	91
	.word	0,0
.L2563:
	.word	-1,.L1138,.L3531-.L1138,.L3532-.L1138
	.half	1
	.byte	95
	.word	0,0
.L2538:
	.word	-1,.L1138,.L2626-.L1138,.L562-.L1138
	.half	1
	.byte	89
	.word	0,0
.L2643:
	.word	-1,.L1138,.L2649-.L1138,.L607-.L1138
	.half	1
	.byte	91
	.word	0,0
.L2665:
	.word	-1,.L1138,.L2680-.L1138,.L3598-.L1138
	.half	1
	.byte	88
	.word	0,0
.L2575:
	.word	-1,.L1138,.L3537-.L1138,.L572-.L1138
	.half	1
	.byte	92
	.word	0,0
.L2607:
	.word	-1,.L1138,.L3551-.L1138,.L563-.L1138
	.half	1
	.byte	92
	.word	0,0
.L2552:
	.word	-1,.L1138,.L3535-.L1138,.L2566-.L1138
	.half	1
	.byte	95
	.word	.L570-.L1138,.L2569-.L1138
	.half	1
	.byte	95
	.word	0,0
.L2648:
	.word	-1,.L1138,.L3584-.L1138,.L619-.L1138
	.half	1
	.byte	84
	.word	.L620-.L1138,.L3583-.L1138
	.half	1
	.byte	84
	.word	0,0
.L1137:
	.word	-1,.L1138,0,.L3512-.L1138
	.half	2
	.byte	138,0
	.word	.L3512-.L1138,.L670-.L1138
	.half	2
	.byte	138,8
	.word	.L670-.L1138,.L670-.L1138
	.half	2
	.byte	138,0
	.word	.L670-.L1138,.L2520-.L1138
	.half	2
	.byte	138,8
	.word	.L2520-.L1138,.L2520-.L1138
	.half	2
	.byte	138,0
	.word	0,0
.L2592:
	.word	0,0
.L2540:
	.word	-1,.L1138,.L3565-.L1138,.L595-.L1138
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2689:
	.word	-1,.L1138,.L3629-.L1138,.L650-.L1138
	.half	1
	.byte	111
	.word	.L3644-.L1138,.L655-.L1138
	.half	1
	.byte	111
	.word	0,0
.L2582:
	.word	-1,.L1138,.L3539-.L1138,.L3542-.L1138
	.half	1
	.byte	82
	.word	.L2585-.L1138,.L572-.L1138
	.half	1
	.byte	93
	.word	0,0
.L2677:
	.word	-1,.L1138,.L2682-.L1138,.L3607-.L1138
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2581:
	.word	-1,.L1138,.L3538-.L1138,.L3539-.L1138
	.half	1
	.byte	84
	.word	0,0
.L2698:
	.word	-1,.L1138,.L3627-.L1138,.L3630-.L1138
	.half	1
	.byte	95
	.word	0,0
.L2579:
	.word	-1,.L1138,.L3540-.L1138,.L3541-.L1138
	.half	1
	.byte	91
	.word	.L2589-.L1138,.L581-.L1138
	.half	1
	.byte	83
	.word	0,0
.L2578:
	.word	-1,.L1138,.L3547-.L1138,.L574-.L1138
	.half	1
	.byte	81
	.word	.L575-.L1138,.L581-.L1138
	.half	1
	.byte	81
	.word	0,0
.L2679:
	.word	-1,.L1138,.L3608-.L1138,.L3609-.L1138
	.half	1
	.byte	98
	.word	0,0
.L2536:
	.word	0,0
.L2642:
	.word	-1,.L1138,.L3575-.L1138,.L607-.L1138
	.half	1
	.byte	109
	.word	0,0
.L2542:
	.word	-1,.L1138,.L3523-.L1138,.L562-.L1138
	.half	1
	.byte	90
	.word	0,0
.L2674:
	.word	-1,.L1138,.L3609-.L1138,.L634-.L1138
	.half	1
	.byte	82
	.word	0,0
.L2678:
	.word	0,0
.L2541:
	.word	-1,.L1138,.L3566-.L1138,.L3567-.L1138
	.half	1
	.byte	95
	.word	0,0
.L2693:
	.word	-1,.L1138,.L3622-.L1138,.L3623-.L1138
	.half	1
	.byte	95
	.word	.L3628-.L1138,.L650-.L1138
	.half	1
	.byte	81
	.word	.L650-.L1138,.L2703-.L1138
	.half	1
	.byte	95
	.word	.L649-.L1138,.L3642-.L1138
	.half	1
	.byte	95
	.word	.L3642-.L1138,.L655-.L1138
	.half	1
	.byte	83
	.word	0,0
.L2576:
	.word	-1,.L1138,.L3545-.L1138,.L3546-.L1138
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2609:
	.word	-1,.L1138,.L3558-.L1138,.L3559-.L1138
	.half	1
	.byte	95
	.word	0,0
.L2594:
	.word	0,0
.L2535:
	.word	-1,.L1138,.L3525-.L1138,.L3526-.L1138
	.half	1
	.byte	111
	.word	.L3527-.L1138,.L562-.L1138
	.half	2
	.byte	145,120
	.word	.L3568-.L1138,.L562-.L1138
	.half	1
	.byte	111
	.word	0,0
.L2639:
	.word	-1,.L1138,.L3576-.L1138,.L607-.L1138
	.half	1
	.byte	110
	.word	0,0
.L2662:
	.word	-1,.L1138,.L3595-.L1138,.L628-.L1138
	.half	1
	.byte	110
	.word	0,0
.L2522:
	.word	-1,.L1138,.L3518-.L1138,.L3519-.L1138
	.half	1
	.byte	111
	.word	.L2525-.L1138,.L2520-.L1138
	.half	2
	.byte	145,124
	.word	.L3569-.L1138,.L3570-.L1138
	.half	1
	.byte	111
	.word	.L3588-.L1138,.L3589-.L1138
	.half	1
	.byte	111
	.word	.L3617-.L1138,.L3618-.L1138
	.half	1
	.byte	111
	.word	.L3651-.L1138,.L2520-.L1138
	.half	1
	.byte	111
	.word	0,0
.L2694:
	.word	-1,.L1138,.L3633-.L1138,.L651-.L1138
	.half	1
	.byte	88
	.word	.L652-.L1138,.L650-.L1138
	.half	1
	.byte	88
	.word	.L3636-.L1138,.L649-.L1138
	.half	1
	.byte	88
	.word	.L3645-.L1138,.L663-.L1138
	.half	1
	.byte	88
	.word	.L3647-.L1138,.L665-.L1138
	.half	1
	.byte	88
	.word	.L666-.L1138,.L647-.L1138
	.half	1
	.byte	88
	.word	0,0
.L2695:
	.word	-1,.L1138,.L3637-.L1138,.L649-.L1138
	.half	1
	.byte	91
	.word	0,0
.L2699:
	.word	-1,.L1138,.L3625-.L1138,.L3626-.L1138
	.half	5
	.byte	144,32,157,32,0
	.word	.L651-.L1138,.L652-.L1138
	.half	5
	.byte	144,32,157,32,0
	.word	.L650-.L1138,.L3635-.L1138
	.half	5
	.byte	144,32,157,32,0
	.word	.L649-.L1138,.L3643-.L1138
	.half	5
	.byte	144,32,157,32,0
	.word	.L663-.L1138,.L3646-.L1138
	.half	5
	.byte	144,32,157,32,0
	.word	.L665-.L1138,.L3648-.L1138
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2688:
	.word	-1,.L1138,.L3624-.L1138,.L647-.L1138
	.half	1
	.byte	109
	.word	.L3640-.L1138,.L3639-.L1138
	.half	1
	.byte	100
	.word	0,0
.L2697:
	.word	-1,.L1138,.L3631-.L1138,.L3632-.L1138
	.half	1
	.byte	95
	.word	0,0
.L2580:
	.word	-1,.L1138,.L3542-.L1138,.L581-.L1138
	.half	1
	.byte	82
	.word	0,0
.L2611:
	.word	-1,.L1138,.L3555-.L1138,.L3557-.L1138
	.half	1
	.byte	82
	.word	.L2623-.L1138,.L563-.L1138
	.half	1
	.byte	82
	.word	0,0
.L2528:
	.word	-1,.L1138,.L3520-.L1138,.L560-.L1138
	.half	5
	.byte	144,32,157,32,0
	.word	.L561-.L1138,.L3521-.L1138
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2598:
	.word	-1,.L1138,.L2590-.L1138,.L2600-.L1138
	.half	1
	.byte	95
	.word	0,0
.L2620:
	.word	-1,.L1138,.L3560-.L1138,.L2622-.L1138
	.half	1
	.byte	95
	.word	0,0
.L2625:
	.word	-1,.L1138,.L3561-.L1138,.L3562-.L1138
	.half	1
	.byte	95
	.word	.L586-.L1138,.L563-.L1138
	.half	1
	.byte	95
	.word	0,0
.L2564:
	.word	-1,.L1138,.L2546-.L1138,.L3522-.L1138
	.half	1
	.byte	89
	.word	.L3548-.L1138,.L2626-.L1138
	.half	1
	.byte	89
	.word	0,0
.L2673:
	.word	-1,.L1138,.L3591-.L1138,.L628-.L1138
	.half	1
	.byte	89
	.word	0,0
.L2543:
	.word	-1,.L1138,.L3564-.L1138,.L598-.L1138
	.half	1
	.byte	82
	.word	.L596-.L1138,.L595-.L1138
	.half	1
	.byte	82
	.word	0,0
.L2613:
	.word	-1,.L1138,.L2546-.L1138,.L3522-.L1138
	.half	1
	.byte	89
	.word	.L3548-.L1138,.L2626-.L1138
	.half	1
	.byte	89
	.word	0,0
.L2554:
	.word	0,0
.L2647:
	.word	-1,.L1138,.L3572-.L1138,.L3573-.L1138
	.half	1
	.byte	82
	.word	.L611-.L1138,.L3583-.L1138
	.half	1
	.byte	82
	.word	.L610-.L1138,.L3585-.L1138
	.half	1
	.byte	82
	.word	0,0
.L2700:
	.word	-1,.L1138,.L3639-.L1138,.L660-.L1138
	.half	1
	.byte	82
	.word	.L3641-.L1138,.L649-.L1138
	.half	1
	.byte	95
	.word	0,0
.L2672:
	.word	-1,.L1138,.L3596-.L1138,.L3597-.L1138
	.half	1
	.byte	82
	.word	.L631-.L1138,.L3602-.L1138
	.half	1
	.byte	82
	.word	0,0
.L2690:
	.word	-1,.L1138,.L3620-.L1138,.L3621-.L1138
	.half	1
	.byte	89
	.word	.L3623-.L1138,.L3627-.L1138
	.half	1
	.byte	95
	.word	.L3638-.L1138,.L3639-.L1138
	.half	1
	.byte	84
	.word	0,0
.L2692:
	.word	0,0
.L2670:
	.word	-1,.L1138,.L3605-.L1138,.L3606-.L1138
	.half	5
	.byte	144,32,157,32,0
	.word	.L3613-.L1138,.L3614-.L1138
	.half	1
	.byte	84
	.word	0,0
.L2562:
	.word	-1,.L1138,.L3529-.L1138,.L3530-.L1138
	.half	1
	.byte	111
	.word	0,0
.L2533:
	.word	-1,.L1138,.L3514-.L1138,.L562-.L1138
	.half	1
	.byte	108
	.word	0,0
.L2638:
	.word	-1,.L1138,.L3571-.L1138,.L607-.L1138
	.half	1
	.byte	108
	.word	0,0
.L2687:
	.word	-1,.L1138,.L3619-.L1138,.L647-.L1138
	.half	1
	.byte	108
	.word	0,0
.L2661:
	.word	-1,.L1138,.L2676-.L1138,.L628-.L1138
	.half	1
	.byte	108
	.word	0,0
.L2521:
	.word	-1,.L1138,.L3513-.L1138,.L3514-.L1138
	.half	1
	.byte	108
	.word	0,0
.L2574:
	.word	-1,.L1138,.L3536-.L1138,.L572-.L1138
	.half	1
	.byte	110
	.word	0,0
.L2606:
	.word	-1,.L1138,.L3549-.L1138,.L563-.L1138
	.half	1
	.byte	110
	.word	0,0
.L2553:
	.word	-1,.L1138,.L3533-.L1138,.L3534-.L1138
	.half	1
	.byte	111
	.word	0,0
.L2539:
	.word	-1,.L1138,.L3563-.L1138,.L3564-.L1138
	.half	1
	.byte	84
	.word	0,0
.L2644:
	.word	-1,.L1138,.L3580-.L1138,.L611-.L1138
	.half	1
	.byte	89
	.word	0,0
.L2666:
	.word	0,0
.L2696:
	.word	-1,.L1138,.L3634-.L1138,.L650-.L1138
	.half	1
	.byte	95
	.word	.L3649-.L1138,.L3650-.L1138
	.half	1
	.byte	95
	.word	.L668-.L1138,.L655-.L1138
	.half	1
	.byte	95
	.word	0,0
.L2584:
	.word	0,0
.L2646:
	.word	0,0
.L2669:
	.word	0,0
.L2671:
	.word	-1,.L1138,.L3611-.L1138,.L3612-.L1138
	.half	5
	.byte	144,32,157,32,0
	.word	.L640-.L1138,.L634-.L1138
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2664:
	.word	-1,.L1138,.L3593-.L1138,.L3594-.L1138
	.half	1
	.byte	111
	.word	.L638-.L1138,.L634-.L1138
	.half	1
	.byte	111
	.word	0,0
.L2531:
	.word	0,0
.L2636:
	.word	0,0
.L2659:
	.word	0,0
.L2524:
	.word	-1,.L1138,.L3516-.L1138,.L2545-.L1138
	.half	1
	.byte	82
	.word	.L3517-.L1138,.L2680-.L1138
	.half	1
	.byte	88
	.word	.L3528-.L1138,.L564-.L1138
	.half	1
	.byte	84
	.word	.L3590-.L1138,.L627-.L1138
	.half	1
	.byte	84
	.word	0,0
.L2577:
	.word	-1,.L1138,.L3543-.L1138,.L3542-.L1138
	.half	1
	.byte	85
	.word	0,0
.L2608:
	.word	-1,.L1138,.L3554-.L1138,.L3555-.L1138
	.half	1
	.byte	85
	.word	0,0
.L2570:
	.word	0,0
.L2567:
	.word	0,0
.L2565:
	.word	0,0
.L2527:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lPrepareMarkerBuffer')
	.sect	'.debug_loc'
.L2126:
	.word	0,0
.L1187:
	.word	-1,.L1188,0,.L2124-.L1188
	.half	2
	.byte	138,0
	.word	0,0
.L2125:
	.word	-1,.L1188,.L4034-.L1188,.L2124-.L1188
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lPrepareStatePageBuffer')
	.sect	'.debug_loc'
.L2255:
	.word	-1,.L1186,.L4030-.L1186,.L2244-.L1186
	.half	1
	.byte	111
	.word	0,0
.L2246:
	.word	-1,.L1186,0,.L4019-.L1186
	.half	1
	.byte	84
	.word	.L4020-.L1186,.L4021-.L1186
	.half	1
	.byte	95
	.word	0,0
.L2262:
	.word	-1,.L1186,.L4033-.L1186,.L2244-.L1186
	.half	1
	.byte	81
	.word	0,0
.L2259:
	.word	0,0
.L1185:
	.word	-1,.L1186,0,.L2244-.L1186
	.half	2
	.byte	138,0
	.word	0,0
.L2261:
	.word	-1,.L1186,.L4028-.L1186,.L2244-.L1186
	.half	1
	.byte	82
	.word	0,0
.L2252:
	.word	-1,.L1186,.L4026-.L1186,.L4031-.L1186
	.half	1
	.byte	81
	.word	.L4031-.L1186,.L4032-.L1186
	.half	1
	.byte	95
	.word	0,0
.L2260:
	.word	0,0
.L2253:
	.word	-1,.L1186,.L4032-.L1186,.L2244-.L1186
	.half	1
	.byte	95
	.word	0,0
.L2248:
	.word	-1,.L1186,0,.L4019-.L1186
	.half	1
	.byte	85
	.word	.L4022-.L1186,.L2244-.L1186
	.half	1
	.byte	88
	.word	0,0
.L2249:
	.word	-1,.L1186,.L4024-.L1186,.L2244-.L1186
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2254:
	.word	-1,.L1186,.L4023-.L1186,.L2244-.L1186
	.half	1
	.byte	108
	.word	0,0
.L2250:
	.word	-1,.L1186,.L4027-.L1186,.L4028-.L1186
	.half	1
	.byte	82
	.word	0,0
.L2251:
	.word	-1,.L1186,.L4029-.L1186,.L1046-.L1186
	.half	1
	.byte	83
	.word	0,0
.L2256:
	.word	-1,.L1186,.L4025-.L1186,.L4026-.L1186
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lRegisterNvmRead')
	.sect	'.debug_loc'
.L2049:
	.word	-1,.L1204,0,.L4066-.L1204
	.half	1
	.byte	84
	.word	.L2065-.L1204,.L4075-.L1204
	.half	1
	.byte	88
	.word	0,0
.L2051:
	.word	-1,.L1204,0,.L4067-.L1204
	.half	1
	.byte	85
	.word	.L4075-.L1204,.L4076-.L1204
	.half	1
	.byte	89
	.word	0,0
.L2053:
	.word	-1,.L1204,0,.L2076-.L1204
	.half	1
	.byte	100
	.word	.L4069-.L1204,.L2047-.L1204
	.half	1
	.byte	108
	.word	0,0
.L2078:
	.word	0,0
.L2067:
	.word	0,0
.L1203:
	.word	-1,.L1204,0,.L2047-.L1204
	.half	2
	.byte	138,0
	.word	0,0
.L2057:
	.word	-1,.L1204,0,.L2076-.L1204
	.half	1
	.byte	87
	.word	0,0
.L2080:
	.word	0,0
.L2071:
	.word	0,0
.L2055:
	.word	-1,.L1204,0,.L4068-.L1204
	.half	1
	.byte	86
	.word	.L4070-.L1204,.L2047-.L1204
	.half	1
	.byte	90
	.word	0,0
.L2062:
	.word	-1,.L1204,.L4072-.L1204,.L2047-.L1204
	.half	1
	.byte	109
	.word	0,0
.L2059:
	.word	-1,.L1204,.L2064-.L1204,.L4073-.L1204
	.half	1
	.byte	95
	.word	.L1061-.L1204,.L1062-.L1204
	.half	1
	.byte	95
	.word	0,0
.L2069:
	.word	0,0
.L2060:
	.word	0,0
.L2074:
	.word	-1,.L1204,.L4074-.L1204,.L2076-.L1204
	.half	1
	.byte	82
	.word	.L1062-.L1204,.L2047-.L1204
	.half	1
	.byte	82
	.word	0,0
.L2058:
	.word	-1,.L1204,.L4071-.L1204,.L2047-.L1204
	.half	1
	.byte	111
	.word	0,0
.L2073:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lRegisterNvmWrite')
	.sect	'.debug_loc'
.L2086:
	.word	-1,.L1206,0,.L4077-.L1206
	.half	1
	.byte	101
	.word	.L1065-.L1206,.L4080-.L1206
	.half	1
	.byte	101
	.word	0,0
.L2084:
	.word	-1,.L1206,0,.L4077-.L1206
	.half	1
	.byte	100
	.word	.L1065-.L1206,.L4080-.L1206
	.half	1
	.byte	100
	.word	0,0
.L1205:
	.word	-1,.L1206,0,.L2082-.L1206
	.half	2
	.byte	138,0
	.word	0,0
.L2088:
	.word	-1,.L1206,.L4079-.L1206,.L1065-.L1206
	.half	1
	.byte	82
	.word	.L4081-.L1206,.L2082-.L1206
	.half	1
	.byte	82
	.word	0,0
.L2087:
	.word	-1,.L1206,.L4078-.L1206,.L2082-.L1206
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lRegisterWriteRequest')
	.sect	'.debug_loc'
.L2045:
	.word	-1,.L1140,0,.L2041-.L1140
	.half	1
	.byte	101
	.word	0,0
.L2043:
	.word	-1,.L1140,0,.L2041-.L1140
	.half	1
	.byte	100
	.word	0,0
.L1139:
	.word	-1,.L1140,0,.L2041-.L1140
	.half	2
	.byte	138,0
	.word	0,0
.L2046:
	.word	-1,.L1140,.L3652-.L1140,.L2041-.L1140
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lReportError')
	.sect	'.debug_loc'
.L3101:
	.word	-1,.L1208,0,.L4082-.L1208
	.half	1
	.byte	84
	.word	.L4085-.L1208,.L3100-.L1208
	.half	1
	.byte	95
	.word	.L4084-.L1208,.L1068-.L1208
	.half	1
	.byte	86
	.word	.L1068-.L1208,.L3100-.L1208
	.half	1
	.byte	84
	.word	0,0
.L3102:
	.word	-1,.L1208,0,.L4083-.L1208
	.half	1
	.byte	85
	.word	.L4086-.L1208,.L3100-.L1208
	.half	1
	.byte	87
	.word	.L1068-.L1208,.L3100-.L1208
	.half	1
	.byte	85
	.word	0,0
.L3103:
	.word	-1,.L1208,0,.L4084-.L1208
	.half	1
	.byte	86
	.word	.L1068-.L1208,.L3100-.L1208
	.half	1
	.byte	86
	.word	0,0
.L1207:
	.word	-1,.L1208,0,.L3100-.L1208
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lUpdateBlockInfo')
	.sect	'.debug_loc'
.L2029:
	.word	-1,.L1200,.L4050-.L1200,.L4054-.L1200
	.half	1
	.byte	82
	.word	0,0
.L2026:
	.word	-1,.L1200,.L4053-.L1200,.L2019-.L1200
	.half	1
	.byte	111
	.word	0,0
.L1199:
	.word	-1,.L1200,0,.L2019-.L1200
	.half	2
	.byte	138,0
	.word	0,0
.L2023:
	.word	-1,.L1200,0,.L4050-.L1200
	.half	1
	.byte	84
	.word	0,0
.L2028:
	.word	-1,.L1200,.L4053-.L1200,.L2019-.L1200
	.half	1
	.byte	88
	.word	0,0
.L2030:
	.word	-1,.L1200,.L4055-.L1200,.L4056-.L1200
	.half	1
	.byte	95
	.word	0,0
.L2027:
	.word	-1,.L1200,.L4052-.L1200,.L2019-.L1200
	.half	1
	.byte	108
	.word	0,0
.L2021:
	.word	-1,.L1200,0,.L4050-.L1200
	.half	1
	.byte	100
	.word	.L4051-.L1200,.L2019-.L1200
	.half	1
	.byte	109
	.word	0,0
.L2031:
	.word	0,0
.L2025:
	.word	-1,.L1200,0,.L4050-.L1200
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lUpdateCache')
	.sect	'.debug_loc'
.L2158:
	.word	0,0
.L2154:
	.word	-1,.L1178,.L3947-.L1178,.L955-.L1178
	.half	1
	.byte	89
	.word	.L956-.L1178,.L977-.L1178
	.half	1
	.byte	89
	.word	0,0
.L2170:
	.word	0,0
.L2182:
	.word	-1,.L1178,.L3971-.L1178,.L3972-.L1178
	.half	1
	.byte	90
	.word	0,0
.L2202:
	.word	0,0
.L2225:
	.word	-1,.L1178,.L3992-.L1178,.L997-.L1178
	.half	1
	.byte	90
	.word	.L3993-.L1178,.L3980-.L1178
	.half	1
	.byte	84
	.word	0,0
.L2208:
	.word	-1,.L1178,.L3984-.L1178,.L3985-.L1178
	.half	1
	.byte	95
	.word	0,0
.L2204:
	.word	0,0
.L2196:
	.word	-1,.L1178,.L3975-.L1178,.L992-.L1178
	.half	1
	.byte	95
	.word	0,0
.L2179:
	.word	-1,.L1178,.L3963-.L1178,.L974-.L1178
	.half	1
	.byte	88
	.word	0,0
.L2235:
	.word	0,0
.L2153:
	.word	-1,.L1178,.L3946-.L1178,.L955-.L1178
	.half	1
	.byte	92
	.word	.L3948-.L1178,.L2150-.L1178
	.half	1
	.byte	92
	.word	0,0
.L2172:
	.word	0,0
.L2187:
	.word	0,0
.L1177:
	.word	-1,.L1178,0,.L3942-.L1178
	.half	2
	.byte	138,0
	.word	.L3942-.L1178,.L2150-.L1178
	.half	2
	.byte	138,24
	.word	.L2150-.L1178,.L2150-.L1178
	.half	2
	.byte	138,0
	.word	0,0
.L2226:
	.word	-1,.L1178,.L3980-.L1178,.L3994-.L1178
	.half	1
	.byte	82
	.word	.L1005-.L1178,.L1006-.L1178
	.half	1
	.byte	82
	.word	0,0
.L2177:
	.word	-1,.L1178,.L3974-.L1178,.L991-.L1178
	.half	1
	.byte	94
	.word	.L993-.L1178,.L990-.L1178
	.half	1
	.byte	94
	.word	0,0
.L2213:
	.word	0,0
.L2178:
	.word	-1,.L1178,.L3973-.L1178,.L990-.L1178
	.half	1
	.byte	89
	.word	0,0
.L2192:
	.word	0,0
.L2215:
	.word	0,0
.L2220:
	.word	-1,.L1178,.L3991-.L1178,.L997-.L1178
	.half	1
	.byte	110
	.word	0,0
.L2167:
	.word	-1,.L1178,.L3954-.L1178,.L957-.L1178
	.half	1
	.byte	88
	.word	0,0
.L2197:
	.word	-1,.L1178,.L3974-.L1178,.L991-.L1178
	.half	1
	.byte	94
	.word	.L993-.L1178,.L990-.L1178
	.half	1
	.byte	94
	.word	.L3976-.L1178,.L3977-.L1178
	.half	1
	.byte	84
	.word	0,0
.L2224:
	.word	0,0
.L2180:
	.word	-1,.L1178,.L3969-.L1178,.L3970-.L1178
	.half	1
	.byte	91
	.word	.L1008-.L1178,.L997-.L1178
	.half	1
	.byte	91
	.word	0,0
.L2194:
	.word	0,0
.L2217:
	.word	0,0
.L2239:
	.word	-1,.L1178,.L3997-.L1178,.L989-.L1178
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2181:
	.word	-1,.L1178,.L3968-.L1178,.L990-.L1178
	.half	1
	.byte	93
	.word	0,0
.L2209:
	.word	-1,.L1178,.L3986-.L1178,.L3987-.L1178
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2183:
	.word	-1,.L1178,.L3967-.L1178,.L993-.L1178
	.half	5
	.byte	144,32,157,32,0
	.word	.L990-.L1178,.L3995-.L1178
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2233:
	.word	0,0
.L2175:
	.word	-1,.L1178,.L3962-.L1178,.L974-.L1178
	.half	1
	.byte	109
	.word	.L3965-.L1178,.L3966-.L1178
	.half	1
	.byte	100
	.word	.L3978-.L1178,.L3979-.L1178
	.half	1
	.byte	100
	.word	0,0
.L2207:
	.word	-1,.L1178,.L3983-.L1178,.L3980-.L1178
	.half	1
	.byte	98
	.word	0,0
.L2221:
	.word	0,0
.L2238:
	.word	0,0
.L2166:
	.word	-1,.L1178,.L3959-.L1178,.L958-.L1178
	.half	1
	.byte	82
	.word	0,0
.L2184:
	.word	-1,.L1178,.L3966-.L1178,.L993-.L1178
	.half	1
	.byte	82
	.word	.L3979-.L1178,.L3980-.L1178
	.half	1
	.byte	82
	.word	.L990-.L1178,.L989-.L1178
	.half	1
	.byte	82
	.word	0,0
.L2210:
	.word	-1,.L1178,.L3988-.L1178,.L998-.L1178
	.half	1
	.byte	95
	.word	.L1001-.L1178,.L3989-.L1178
	.half	1
	.byte	95
	.word	0,0
.L2162:
	.word	-1,.L1178,.L3952-.L1178,.L3953-.L1178
	.half	1
	.byte	111
	.word	0,0
.L2152:
	.word	-1,.L1178,.L3949-.L1178,.L962-.L1178
	.half	1
	.byte	98
	.word	.L3950-.L1178,.L2150-.L1178
	.half	2
	.byte	145,120
	.word	.L957-.L1178,.L973-.L1178
	.half	1
	.byte	98
	.word	.L4000-.L1178,.L1022-.L1178
	.half	1
	.byte	111
	.word	0,0
.L2160:
	.word	-1,.L1178,.L3951-.L1178,.L957-.L1178
	.half	1
	.byte	108
	.word	0,0
.L2151:
	.word	-1,.L1178,.L3943-.L1178,.L3944-.L1178
	.half	1
	.byte	111
	.word	.L3945-.L1178,.L2150-.L1178
	.half	2
	.byte	145,108
	.word	.L3953-.L1178,.L973-.L1178
	.half	1
	.byte	111
	.word	.L3999-.L1178,.L4000-.L1178
	.half	1
	.byte	111
	.word	0,0
.L2174:
	.word	-1,.L1178,.L3961-.L1178,.L974-.L1178
	.half	1
	.byte	108
	.word	0,0
.L2206:
	.word	-1,.L1178,.L3981-.L1178,.L3982-.L1178
	.half	1
	.byte	111
	.word	0,0
.L2219:
	.word	-1,.L1178,.L3990-.L1178,.L997-.L1178
	.half	1
	.byte	111
	.word	0,0
.L2237:
	.word	-1,.L1178,.L3996-.L1178,.L989-.L1178
	.half	1
	.byte	111
	.word	0,0
.L2240:
	.word	-1,.L1178,.L3998-.L1178,.L983-.L1178
	.half	1
	.byte	111
	.word	0,0
.L2189:
	.word	-1,.L1178,.L3964-.L1178,.L976-.L1178
	.half	1
	.byte	111
	.word	0,0
.L2223:
	.word	-1,.L1178,0,.L2150-.L1178
	.half	2
	.byte	145,104
	.word	0,0
.L2164:
	.word	-1,.L1178,.L3957-.L1178,.L958-.L1178
	.half	1
	.byte	93
	.word	.L3958-.L1178,.L3959-.L1178
	.half	1
	.byte	84
	.word	0,0
.L2165:
	.word	-1,.L1178,.L3955-.L1178,.L3956-.L1178
	.half	5
	.byte	144,32,157,32,0
	.word	.L3956-.L1178,.L958-.L1178
	.half	1
	.byte	90
	.word	0,0
.L2163:
	.word	-1,.L1178,.L3960-.L1178,.L958-.L1178
	.half	1
	.byte	98
	.word	0,0
.L2176:
	.word	0,0
.L2243:
	.word	0,0
.L2229:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lUpdateNonZeroWLInfo')
	.sect	'.debug_loc'
.L1181:
	.word	-1,.L1182,0,.L2821-.L1182
	.half	2
	.byte	138,0
	.word	0,0
.L2826:
	.word	-1,.L1182,.L4013-.L1182,.L4014-.L1182
	.half	1
	.byte	95
	.word	0,0
.L2823:
	.word	-1,.L1182,0,.L2821-.L1182
	.half	1
	.byte	100
	.word	0,0
.L2825:
	.word	-1,.L1182,0,.L2821-.L1182
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Fee_lUpdateUnconfigBlockInfo')
	.sect	'.debug_loc'
.L2034:
	.word	-1,.L1202,0,.L2032-.L1202
	.half	1
	.byte	84
	.word	0,0
.L1201:
	.word	-1,.L1202,0,.L2032-.L1202
	.half	2
	.byte	138,0
	.word	0,0
.L2036:
	.word	-1,.L1202,0,.L2032-.L1202
	.half	1
	.byte	85
	.word	0,0
.L2037:
	.word	-1,.L1202,.L4057-.L1202,.L2032-.L1202
	.half	1
	.byte	98
	.word	0,0
.L2040:
	.word	-1,.L1202,.L4058-.L1202,.L4059-.L1202
	.half	5
	.byte	144,32,157,32,0
	.word	.L4065-.L1202,.L2032-.L1202
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2039:
	.word	-1,.L1202,.L4060-.L1202,.L4061-.L1202
	.half	1
	.byte	81
	.word	.L4063-.L1202,.L4064-.L1202
	.half	1
	.byte	81
	.word	0,0
.L2038:
	.word	-1,.L1202,.L4062-.L1202,.L2032-.L1202
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L6814:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Fee_Init')
	.sect	'.debug_frame'
	.word	36
	.word	.L6814,.L1074,.L1576-.L1074
	.byte	4
	.word	(.L3106-.L1074)/2
	.byte	19,32,22,26,3,19,138,32,4
	.word	(.L1576-.L3106)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Fee_SetMode')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1076,.L1768-.L1076
	.sdecl	'.debug_frame',debug,cluster('Fee_Read')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1078,.L1792-.L1078
	.sdecl	'.debug_frame',debug,cluster('Fee_Write')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1080,.L1802-.L1080
	.sdecl	'.debug_frame',debug,cluster('Fee_Cancel')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1082,.L1811-.L1082
	.sdecl	'.debug_frame',debug,cluster('Fee_GetStatus')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1084,.L1827-.L1084
	.sdecl	'.debug_frame',debug,cluster('Fee_GetJobResult')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1086,.L1830-.L1086
	.sdecl	'.debug_frame',debug,cluster('Fee_InvalidateBlock')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1088,.L1833-.L1088
	.sdecl	'.debug_frame',debug,cluster('Fee_EraseImmediateBlock')
	.sect	'.debug_frame'
	.word	24
	.word	.L6814,.L1090,.L1848-.L1090
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fee_17_InitCheck')
	.sect	'.debug_frame'
	.word	20
	.word	.L6814,.L1092,.L1851-.L1092
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fee_JobEndNotification')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1094,.L1891-.L1094
	.sdecl	'.debug_frame',debug,cluster('Fee_JobErrorNotification')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1096,.L1902-.L1096
	.sdecl	'.debug_frame',debug,cluster('Fee_17_IllegalStateNotification')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1098,.L1934-.L1098
	.sdecl	'.debug_frame',debug,cluster('Fee_17_GetCycleCount')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1100,.L1774-.L1100
	.sdecl	'.debug_frame',debug,cluster('Fee_17_EnableGcStart')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1102,.L1864-.L1102
	.sdecl	'.debug_frame',debug,cluster('Fee_17_DisableGcStart')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1104,.L1866-.L1104
	.sdecl	'.debug_frame',debug,cluster('Fee_MainFunction')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1106,.L1941-.L1106
	.sdecl	'.debug_frame',debug,cluster('Fee_17_GetEccErrorInfo')
	.sect	'.debug_frame'
	.word	36
	.word	.L6814,.L1108,.L1868-.L1108
	.byte	4
	.word	(.L3317-.L1108)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L1868-.L3317)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Fee_GetVersionInfo')
	.sect	'.debug_frame'
	.word	24
	.word	.L6814,.L1110,.L1573-.L1110
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Fee_lHandleUsrJobFailure')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1112,.L2015-.L1112
	.sdecl	'.debug_frame',debug,cluster('Fee_lGetStatus')
	.sect	'.debug_frame'
	.word	24
	.word	.L6814,.L1114,.L2102-.L1114
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Fee_lGetUserJob')
	.sect	'.debug_frame'
	.word	24
	.word	.L6814,.L1116,.L2098-.L1116
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fee_lIsReadAllowedbyGC')
	.sect	'.debug_frame'
	.word	24
	.word	.L6814,.L1118,.L2827-.L1118
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fee_lIsWriteInvldAllowedbyGC')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1120,.L2830-.L1120
	.sdecl	'.debug_frame',debug,cluster('Fee_lDecideMainJob')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1122,.L1946-.L1122
	.sdecl	'.debug_frame',debug,cluster('Fee_lHandleWritePrepDFLASH')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1124,.L2311-.L1124
	.sdecl	'.debug_frame',debug,cluster('Fee_lInitGC')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1126,.L2318-.L1126
	.sdecl	'.debug_frame',debug,cluster('Fee_lLastPgHandler')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1128,.L2139-.L1128
	.sdecl	'.debug_frame',debug,cluster('Fee_lIsLastWrittenWLAffected')
	.sect	'.debug_frame'
	.word	36
	.word	.L6814,.L1130,.L2865-.L1130
	.byte	4
	.word	(.L3450-.L1130)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L2865-.L3450)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Fee_lIsBlockAcrossWLLatest')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1132,.L2893-.L1132
	.sdecl	'.debug_frame',debug,cluster('Fee_lHandleUserWrite')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1134,.L2263-.L1134
	.sdecl	'.debug_frame',debug,cluster('Fee_lHandleIntrWrite')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1136,.L2130-.L1136
	.sdecl	'.debug_frame',debug,cluster('Fee_lLocalWrite')
	.sect	'.debug_frame'
	.word	52
	.word	.L6814,.L1138,.L2520-.L1138
	.byte	4
	.word	(.L3512-.L1138)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L670-.L3512)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L2520-.L670)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('Fee_lRegisterWriteRequest')
	.sect	'.debug_frame'
	.word	20
	.word	.L6814,.L1140,.L2041-.L1140
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fee_lLocalRead')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1142,.L2423-.L1142
	.sdecl	'.debug_frame',debug,cluster('Fee_lCheckReadLength')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1144,.L2496-.L1144
	.sdecl	'.debug_frame',debug,cluster('Fee_lGcErrorHandler')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1146,.L2707-.L1146
	.sdecl	'.debug_frame',debug,cluster('Fee_lGcRead')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1148,.L2716-.L1148
	.sdecl	'.debug_frame',debug,cluster('Fee_lGcWrite')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1150,.L2959-.L1150
	.sdecl	'.debug_frame',debug,cluster('Fee_lGcPrologue')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1152,.L2729-.L1152
	.sdecl	'.debug_frame',debug,cluster('Fee_lGcDiscardUnconfigBlk')
	.sect	'.debug_frame'
	.word	20
	.word	.L6814,.L1154,.L2768-.L1154
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fee_lGcDiscardConfigBlk')
	.sect	'.debug_frame'
	.word	24
	.word	.L6814,.L1156,.L2775-.L1156
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fee_lGcCheckBlkCopy')
	.sect	'.debug_frame'
	.word	20
	.word	.L6814,.L1158,.L2899-.L1158
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Fee_lGcStartCopy')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1160,.L2732-.L1160
	.sdecl	'.debug_frame',debug,cluster('Fee_lGcStartCopyWrite')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1162,.L2904-.L1162
	.sdecl	'.debug_frame',debug,cluster('Fee_lGcCopyReadNxtPage')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1164,.L2786-.L1164
	.sdecl	'.debug_frame',debug,cluster('Fee_lGcErasePrevSector')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1166,.L2968-.L1166
	.sdecl	'.debug_frame',debug,cluster('Fee_lGcProgramStatePage')
	.sect	'.debug_frame'
	.word	36
	.word	.L6814,.L1168,.L2984-.L1168
	.byte	4
	.word	(.L3837-.L1168)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L2984-.L3837)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Fee_lGarbageCollection')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1170,.L2793-.L1170
	.sdecl	'.debug_frame',debug,cluster('Fee_lGetDFLASHPages')
	.sect	'.debug_frame'
	.word	24
	.word	.L6814,.L1172,.L3084-.L1172
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fee_lGetFreeDFLASHPages')
	.sect	'.debug_frame'
	.word	24
	.word	.L6814,.L1174,.L3089-.L1174
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Fee_lGetUsrBlockIndex')
	.sect	'.debug_frame'
	.word	24
	.word	.L6814,.L1176,.L2089-.L1176
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Fee_lUpdateCache')
	.sect	'.debug_frame'
	.word	36
	.word	.L6814,.L1178,.L2150-.L1178
	.byte	4
	.word	(.L3942-.L1178)/2
	.byte	19,24,22,26,3,19,138,24,4
	.word	(.L2150-.L3942)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Fee_lGetBlkCycleCount')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1180,.L2109-.L1180
	.sdecl	'.debug_frame',debug,cluster('Fee_lUpdateNonZeroWLInfo')
	.sect	'.debug_frame'
	.word	24
	.word	.L6814,.L1182,.L2821-.L1182
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Fee_lIsUnerasableAddr')
	.sect	'.debug_frame'
	.word	24
	.word	.L6814,.L1184,.L2002-.L1184
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Fee_lPrepareStatePageBuffer')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1186,.L2244-.L1186
	.sdecl	'.debug_frame',debug,cluster('Fee_lPrepareMarkerBuffer')
	.sect	'.debug_frame'
	.word	24
	.word	.L6814,.L1188,.L2124-.L1188
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fee_lClearMarkerBuffer')
	.sect	'.debug_frame'
	.word	24
	.word	.L6814,.L1190,.L2127-.L1190
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fee_lClearFeeReadWriteBuffer')
	.sect	'.debug_frame'
	.word	24
	.word	.L6814,.L1192,.L2118-.L1192
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Fee_lClearFeeGcReadWriteBuffer')
	.sect	'.debug_frame'
	.word	24
	.word	.L6814,.L1194,.L2779-.L1194
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Fee_lHandleInitGcFail')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1196,.L2784-.L1196
	.sdecl	'.debug_frame',debug,cluster('Fee_lHandleWriteFail')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1198,.L2013-.L1198
	.sdecl	'.debug_frame',debug,cluster('Fee_lUpdateBlockInfo')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1200,.L2019-.L1200
	.sdecl	'.debug_frame',debug,cluster('Fee_lUpdateUnconfigBlockInfo')
	.sect	'.debug_frame'
	.word	20
	.word	.L6814,.L1202,.L2032-.L1202
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Fee_lRegisterNvmRead')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1204,.L2047-.L1204
	.sdecl	'.debug_frame',debug,cluster('Fee_lRegisterNvmWrite')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1206,.L2082-.L1206
	.sdecl	'.debug_frame',debug,cluster('Fee_lReportError')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1208,.L3100-.L1208
	.sdecl	'.debug_frame',debug,cluster('Fee_17_JobEraseErrorNotification')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1210,.L1935-.L1210
	.sdecl	'.debug_frame',debug,cluster('Fee_17_JobProgErrorNotification')
	.sect	'.debug_frame'
	.word	12
	.word	.L6814,.L1212,.L1938-.L1212

; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19629  
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19630  #define FEE_STOP_SEC_PROGERRORNOTI_CODE_ASIL_B_LOCAL
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19631  /*MISRA2012_RULE_4_10_JUSTIFICATION: Memmap header is repeatedly included
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19632  without safegaurd. It complies to Autosar guidelines. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19633  /*MISRA2012_RULE_20_1_JUSTIFICATION: Memmap header usage as per Autosar
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19634  guideline. */
; ..\Mcal\Tricore\Fee\ssc\src\Fee.c	 19635  #include "Fee_MemMap.h"

	; Module end
