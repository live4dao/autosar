	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 09003395"
	.compiler_invocation	"ctc -f cc29512a --dep-file=Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\.Ifx_Ssw_Tc1.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --fp-model=+float -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Lib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\App_Func -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\demo -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Adc_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Gtm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\AscLin_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Can_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\EthV2_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Stm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Main -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\APP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\BswM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanSm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Com -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\ComM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Common -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Crc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Det -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\DoIP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EcuM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Eth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthSM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTrcv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FiM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FlsTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Nm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\PduR -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\RamTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\StbM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\arpa -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\net -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\sys -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\stdc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\apps -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\priv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\UdpNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Cal -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Daq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pag -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pgm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Std -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\XcpOnEth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Library\\Vfx_ComE2E -g2 --make-target=Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc1.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O1 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc1.src ..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc1.c"
	.compiler_name		"ctc"
	;source	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc1.c'

	
$TC162
	

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	     2   * \file Ifx_Ssw_Tc1.c
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	     3   * \brief Startup Software for Core1
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	     8   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	     9   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    11   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    14   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    15   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    16   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    22   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    23   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    24  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    25  /*******************************************************************************
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    26  **                      Includes                                              **
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    27  *******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    28  #include "Ifx_Cfg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    29  #include "Ifx_Ssw.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    30  #include "Ifx_Ssw_Infra.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    31  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    32  #include "IfxScu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    33  #include "IfxStm_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    34  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    35  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    36  /*                          Macros                                            */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    37  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    38  /** \brief Configuration for cache enable.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    39   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    40   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    41  #ifndef IFX_CFG_SSW_ENABLE_TRICORE1_PCACHE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    42  #   define IFX_CFG_SSW_ENABLE_TRICORE1_PCACHE (1)  /**< Program Cache enabled by default*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    43  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    44  #ifndef IFX_CFG_SSW_ENABLE_TRICORE1_DCACHE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    45  #   define IFX_CFG_SSW_ENABLE_TRICORE1_DCACHE (1)  /**< Data Cache enabled by default*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    46  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    47  /*******************************************************************************
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    48  **                      Imported Function Declarations                        **
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    49  *******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    50  IFX_SSW_COMMON_LINKER_SYMBOLS();
		 .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    51  IFX_SSW_CORE_LINKER_SYMBOLS(1);
		 .extern __USTACK1

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    52  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    53  extern void core1_main(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    54  #if defined(__TASKING__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    55  __asm("\t .extern core1_main");
		 .extern core1_main
	.sdecl	'.text.Ifx_Ssw_Tc1.__Core1_start',code,cluster('__Core1_start')
	.sect	'.text.Ifx_Ssw_Tc1.__Core1_start'
	.align	2
	
	.global	__Core1_start

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    56  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    57  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    58  /*******************************************************************************
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    59  **                      Private Constant Definitions                          **
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    60  *******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    61  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    62  /*********************************************************************************
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    63  * - startup code
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    64  *********************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    65  /*Add options to eliminate usage of stack pointers unnecessarily*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    66  #if defined(__HIGHTEC__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    67  #pragma GCC optimize "O2"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    68  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    69  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    70  void __Core1_start(void)
; Function __Core1_start
.L11:
__Core1_start:	.type	func

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    71  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    72      unsigned int   stmCount;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    73      unsigned int   stmCountBegin = STM0_TIM0.U;     /* it is necessary to get this value to have minimum 100uS delay in subsequent CPU start */
	ld.w	d8,0xf0001010
.L97:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    74      unsigned short wdtPassword   = Ifx_Ssw_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[1]);
	movh.a	a15,#61443
.L35:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     8   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    11   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    14   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    15   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    16   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    22   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    23   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    24  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    25  #ifndef IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    26  #define IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    27  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    28  #include "Ifx_Ssw_Compilers.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    29  #include "Ifx_Cfg_Ssw.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    30  #include "IfxScu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    31  #include "IfxCpu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    32  #include "IfxScu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    33  #include "IfxCpu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    34  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    35  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    36  /*-----------------------------------Macros-----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    37  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    39  /** \brief PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    40   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    41  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    42      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    43       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    44       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    45       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    46       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    47       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    48       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    49  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    50  /** \brief Application Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    51   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    52  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    53      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    54       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    55       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    56       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    57       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    58       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    59       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    63  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    64  /** \brief Cold PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    65   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    66  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    67      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    68       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    69       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    70       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    71  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    72  /** \brief Application reset enabled
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    73   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    74   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    75  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    76  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    77  /** \brief Reload value mask */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    78  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    79  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    80  /** \brief Mask values is used to invert the password value bits */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    81  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    82  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    83  /** \brief CSA size */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    84  #define IFX_SSW_CSA_SIZE                          16U
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    86  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    87  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    88  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    89  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    90  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    91  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    92  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    94  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    95  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    96  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    97  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    98  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    99  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   100  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   102  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   103  /*-------------------------Infrastructure Functions---------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   104  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   105  /** \brief clear safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   106   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   107   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   109      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   110          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   111          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   112                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   113                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   114                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   115          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   116          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   117                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   118                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   119                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   120          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   121          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   122      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   123  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   124  /** \brief set safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   125   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   126   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   127  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   128      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   129          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   130          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   131                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   132                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   133                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   134          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   135          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   136                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   137                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   138                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   139          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   140          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   141      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   142  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   143  /** \brief Fetch current password of CPU Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   144   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   145   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   146   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   147   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   148   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   149   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   150  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   151  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   152  /** \brief Fetch current password of Safety Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   153   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   154   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   155   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   156   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   157   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   158  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   159  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   160  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   161   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   162   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   163   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   164   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   165   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   166   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   167   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   168   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   169   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   170  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   171  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   172  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   173   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   174   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   175   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   176   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   177   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   178   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   179   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   180  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   181  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   182  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   183   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   184   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   185   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   186   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   187   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   188   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   189   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   190   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   191  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   192  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   193  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   194   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   195   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   196   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   197   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   198   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   199   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   200  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   201  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   202  /** \brief Disable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   203   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   204   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   205   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   206   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   207   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   208   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   209   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   210  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   211  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   212  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   213   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   214   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   215   *   periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   216   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   217   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   218   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   219   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   220  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   221  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   222  /** \brief Disable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   223   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   224   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   225   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   226   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   227   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   228   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   229  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   230  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   231  /** \brief Enable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   232   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   233   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   234   * periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   235   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   236   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   237   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   238  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   239  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   240  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   241   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   242   * \param programCounter Program counter value to start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   243   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   244  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   245  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   246  /** \brief Set CPU0 to idle state */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   247  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   248  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   249  /** \brief Initialise the C runtime environment */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   250  extern void Ifx_Ssw_C_Init(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   251  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   252  /** \brief Returns the system timer frequency.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   253   * \return the system timer frequency in Hz.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   254   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   255  extern float Ifx_Ssw_getStmFrequency(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   256  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   257  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   258   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   259   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   260   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   261   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   262   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   263   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   264   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   265   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   266  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   267  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   268  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   269   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   270   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   271   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   272   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   273   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   274   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   275   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   276  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   277  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   278  /*Endinit Functions*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   279  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   280  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   281      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   282       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   283       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   284  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   285      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   286      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   287  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   288  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   289  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   290  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   291  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   292      /* Clear EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   293      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   294  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   295      /* Read back of the register is mandatory to ensure the register update */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   296      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   297  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   298  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   299  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   300  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   301  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   302      /* Set EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   303      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   304                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   305                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   306  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   307      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   308      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   309  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   310  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   311  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   312  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   313  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   314      unsigned short password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   315  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   316      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   317       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   318       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   319      password  = watchdog->CON0.B.PW;
	ld.w	d15,[a15]@los(0xf0036258)
	extr.u	d15,d15,#2,#14
.L119:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   320      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
	xor	d2,d15,#63
.L36:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    75  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    76      /* Load user stack pointer */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    77      Ifx_Ssw_setAddressReg(sp, __USTACK(1));
	 movh.a	 sp,#@his(__USTACK1)
 lea	 sp,[sp]@los(__USTACK1)
.L42:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     2   * \file Ifx_Ssw_CompilersTasking.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     3   * \brief Startup Software for Tasking compiler options
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     8   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     9   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    11   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    12   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    13   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    14   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    15   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    16   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    17   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    18   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    19   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    20   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    21   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    22   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    23  #ifndef IFX_SSW_COMPILERSTASKING_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    24  #define IFX_SSW_COMPILERSTASKING_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    25  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    26  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    27  /*----------------------------------Includes----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    28  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    29  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    30  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    31  /*-----------------------------------Macros-----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    32  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    33  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    34  /*Linker definitions which are specific to Tasking */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    35  /* IFX_CFG_USE_COMPILER_DEFAULT_LINKER shall be defined in Ifx_Cfg.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    36   * to use the default compiler linker varaibles and startup */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    37  #ifndef IFX_CFG_USE_COMPILER_DEFAULT_LINKER
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    39  /*Start: Common definitions ********************************************** */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    40  #define IFX_SSW_COMMON_LINKER_SYMBOLS()                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    41      __asm("\t .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_"); \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    42      extern unsigned int __START0[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    43      extern unsigned int __START1[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    44      extern unsigned int __START2[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    45      extern unsigned int __START3[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    46      extern unsigned int __START4[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    47      extern unsigned int __START5[];     /**< Pointer to the startup code */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    48  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    49  /*End: Common definitions ************************************************ */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    50  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    51  /*Start: Core 0 definitions ********************************************** */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    52  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    53  /*C extern defintions */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    54  #define IFX_SSW_CORE_LINKER_SYMBOLS(cpu)                                                                             \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    55      __asm("\t .extern __USTACK"#cpu);         /**< user stack end is required as asm to be used with setreg macro */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    56      extern unsigned int __ISTACK##cpu[];      /**< interrupt stack end */                                            \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    57      extern unsigned int __INTTAB_CPU##cpu[];  /**< interrupt vector table */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    58      extern unsigned int __TRAPTAB_CPU##cpu[]; /**< trap vector table */                                              \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    59      extern unsigned int __CSA##cpu[];         /**< context save area begin */                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    60      extern unsigned int __CSA##cpu##_END[];   /**< context save area end   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    61  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    62  #define __USTACK(cpu)      __USTACK##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    63  #define __ISTACK(cpu)      __ISTACK##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    64  #define __INTTAB_CPU(cpu)  __INTTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    65  #define __TRAPTAB_CPU(cpu) __TRAPTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    66  #define __CSA(cpu)         __CSA##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    67  #define __CSA_END(cpu)     __CSA##cpu##_END
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    68  #define __START(cpu)       __START##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    69  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    70  /*Wrapper macros for the tool specific definitions */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    71  #if defined(IFX_USE_SW_MANAGED_INT)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    72  #define __INTTAB(cpu)      ((unsigned int)__INTTAB_CPU##cpu | (unsigned int)0x1FE0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    73  #else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    74  #define __INTTAB(cpu)      __INTTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    75  #endif /*defined(IFX_USE_SW_MANAGED_INT) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    76  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    77  #define __TRAPTAB(cpu)     __TRAPTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    78  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    79  #define __SDATA1(cpu)      _SMALL_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    80  #define __SDATA2(cpu)      _LITERAL_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    81  #define __SDATA3(cpu)      _A8_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    82  #define __SDATA4(cpu)      _A9_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    83  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    84  #endif /*IFX_CFG_USE_COMPILER_DEFAULT_LINKER*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    86  #ifdef __cplusplus
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    87  #define IFX_SSW_INLINE   static inline
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    88  #else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    89  #define IFX_SSW_INLINE   inline
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    90  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    91  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    92  #define IFX_SSW_NULL_PTR ((void *)0x0U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    94  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    95  /*----------------------------   GNU Intrinsics  -----------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    96  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    97  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    98  #define Ifx_Ssw_MTCR(reg, val) __mtcr(reg, val);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    99  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   100  #define Ifx_Ssw_MFCR(reg)      __mfcr(reg);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   102  IFX_SSW_INLINE void Ifx_Ssw_NOP(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   103  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   104      __nop();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   105  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   106  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   107  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   108  IFX_SSW_INLINE void Ifx_Ssw_DSYNC(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   109  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   110      __dsync();
	dsync
.L43:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    78      Ifx_Ssw_DSYNC();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    79  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    80      /* Set the PSW to its reset value in case of a warm start,clear PSW.IS */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    81      Ifx_Ssw_MTCR(CPU_PSW, IFX_CFG_SSW_PSW_DEFAULT);
	mov	d15,#2432
	mtcr	#65028,d15
	isync
.L120:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    82  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    83      /* Clear the ENDINIT bit in the WDT_CON0 register, inline function */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    84      Ifx_Ssw_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[1], wdtPassword);
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf0036258)
.L46:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     8   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    11   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    14   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    15   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    16   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    22   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    23   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    24  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    25  #ifndef IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    26  #define IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    27  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    28  #include "Ifx_Ssw_Compilers.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    29  #include "Ifx_Cfg_Ssw.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    30  #include "IfxScu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    31  #include "IfxCpu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    32  #include "IfxScu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    33  #include "IfxCpu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    34  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    35  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    36  /*-----------------------------------Macros-----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    37  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    39  /** \brief PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    40   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    41  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    42      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    43       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    44       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    45       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    46       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    47       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    48       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    49  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    50  /** \brief Application Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    51   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    52  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    53      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    54       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    55       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    56       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    57       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    58       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    59       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    63  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    64  /** \brief Cold PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    65   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    66  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    67      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    68       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    69       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    70       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    71  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    72  /** \brief Application reset enabled
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    73   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    74   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    75  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    76  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    77  /** \brief Reload value mask */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    78  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    79  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    80  /** \brief Mask values is used to invert the password value bits */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    81  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    82  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    83  /** \brief CSA size */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    84  #define IFX_SSW_CSA_SIZE                          16U
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    86  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    87  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    88  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    89  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    90  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    91  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    92  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    94  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    95  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    96  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    97  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    98  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    99  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   100  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   102  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   103  /*-------------------------Infrastructure Functions---------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   104  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   105  /** \brief clear safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   106   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   107   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   109      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   110          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   111          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   112                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   113                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   114                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   115          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   116          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   117                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   118                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   119                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   120          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   121          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   122      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   123  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   124  /** \brief set safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   125   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   126   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   127  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   128      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   129          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   130          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   131                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   132                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   133                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   134          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   135          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   136                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   137                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   138                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   139          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   140          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   141      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   142  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   143  /** \brief Fetch current password of CPU Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   144   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   145   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   146   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   147   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   148   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   149   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   150  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   151  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   152  /** \brief Fetch current password of Safety Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   153   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   154   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   155   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   156   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   157   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   158  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   159  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   160  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   161   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   162   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   163   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   164   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   165   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   166   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   167   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   168   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   169   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   170  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   171  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   172  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   173   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   174   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   175   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   176   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   177   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   178   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   179   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   180  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   181  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   182  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   183   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   184   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   185   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   186   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   187   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   188   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   189   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   190   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   191  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   192  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   193  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   194   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   195   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   196   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   197   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   198   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   199   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   200  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   201  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   202  /** \brief Disable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   203   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   204   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   205   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   206   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   207   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   208   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   209   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   210  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   211  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   212  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   213   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   214   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   215   *   periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   216   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   217   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   218   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   219   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   220  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   221  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   222  /** \brief Disable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   223   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   224   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   225   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   226   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   227   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   228   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   229  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   230  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   231  /** \brief Enable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   232   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   233   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   234   * periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   235   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   236   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   237   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   238  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   239  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   240  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   241   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   242   * \param programCounter Program counter value to start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   243   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   244  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   245  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   246  /** \brief Set CPU0 to idle state */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   247  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   248  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   249  /** \brief Initialise the C runtime environment */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   250  extern void Ifx_Ssw_C_Init(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   251  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   252  /** \brief Returns the system timer frequency.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   253   * \return the system timer frequency in Hz.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   254   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   255  extern float Ifx_Ssw_getStmFrequency(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   256  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   257  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   258   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   259   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   260   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   261   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   262   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   263   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   264   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   265   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   266  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   267  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   268  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   269   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   270   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   271   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   272   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   273   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   274   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   275   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   276  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   277  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   278  /*Endinit Functions*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   279  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   280  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   281      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   282       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   283       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   284  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   285      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   286      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   287  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   288  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   289  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   290  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   291  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   292      /* Clear EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   293      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   294  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   295      /* Read back of the register is mandatory to ensure the register update */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   296      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   297  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   298  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   299  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   300  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   301  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   302      /* Set EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   303      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   304                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   305                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   306  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   307      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   308      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   309  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   310  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   311  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   312  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   313  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   314      unsigned short password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   315  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   316      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   317       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   318       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   319      password  = watchdog->CON0.B.PW;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   320      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   321  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   322      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   323  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   324  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   325  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   326  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   327  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   328      unsigned short password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   329      Ifx_SCU_WDTS  *watchdog;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   330      watchdog  = &MODULE_SCU.WDTS;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   331      /* Read Password from Safety WDT CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   332       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   333       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   334      password  = watchdog->CON0.B.PW;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   335      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   336  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   337      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   338  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   339  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   340  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   341  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   342  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   343      if (watchdog->CON0.B.LCK)
	ld.w	d15,[a15]
.L121:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   343      if (watchdog->CON0.B.LCK)      (inlined)
	jz.t	d15:1,.L2
.L122:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   344      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   345          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   346          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   347                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   348                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	sh	d15,d2,#2
	or	d15,#1
.L123:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   349                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	ld.w	d0,[a15]
	extr.u	d0,d0,#16,#16
.L124:
	sh	d0,d0,#16
.L125:
	or	d15,d0
.L126:
	st.w	[a15],d15

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   343      if (watchdog->CON0.B.LCK)      (inlined)
.L2:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   350      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   351  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   352      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   353      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   354                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   355                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	sh	d0,d2,#2
	or	d15,d0,#2
.L127:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   356                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	ld.w	d1,[a15]
	extr.u	d1,d1,#16,#16
.L128:
	sh	d1,d1,#16
.L129:
	or	d15,d1
.L130:
	st.w	[a15],d15
.L131:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   357  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   358      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   359      watchdog->CON0.U;
	ld.w	d15,[a15]
.L47:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    86      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    87          Ifx_CPU_PCON0 pcon0;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    88          pcon0.U       = 0;
	mov	d15,#0
.L99:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    89          pcon0.B.PCBYP = IFX_CFG_SSW_ENABLE_TRICORE1_PCACHE ? 0 : 1; /*depending on the enable bypass bit is reset/set */
	insert	d1,d15,#0,#1,#1
.L100:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    90          Ifx_Ssw_MTCR(CPU_PCON0, pcon0.U);
	mtcr	#37388,d1
	isync
.L57:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     2   * \file Ifx_Ssw_CompilersTasking.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     3   * \brief Startup Software for Tasking compiler options
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     8   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     9   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    11   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    12   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    13   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    14   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    15   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    16   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    17   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    18   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    19   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    20   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    21   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    22   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    23  #ifndef IFX_SSW_COMPILERSTASKING_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    24  #define IFX_SSW_COMPILERSTASKING_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    25  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    26  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    27  /*----------------------------------Includes----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    28  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    29  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    30  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    31  /*-----------------------------------Macros-----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    32  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    33  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    34  /*Linker definitions which are specific to Tasking */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    35  /* IFX_CFG_USE_COMPILER_DEFAULT_LINKER shall be defined in Ifx_Cfg.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    36   * to use the default compiler linker varaibles and startup */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    37  #ifndef IFX_CFG_USE_COMPILER_DEFAULT_LINKER
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    39  /*Start: Common definitions ********************************************** */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    40  #define IFX_SSW_COMMON_LINKER_SYMBOLS()                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    41      __asm("\t .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_"); \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    42      extern unsigned int __START0[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    43      extern unsigned int __START1[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    44      extern unsigned int __START2[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    45      extern unsigned int __START3[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    46      extern unsigned int __START4[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    47      extern unsigned int __START5[];     /**< Pointer to the startup code */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    48  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    49  /*End: Common definitions ************************************************ */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    50  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    51  /*Start: Core 0 definitions ********************************************** */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    52  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    53  /*C extern defintions */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    54  #define IFX_SSW_CORE_LINKER_SYMBOLS(cpu)                                                                             \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    55      __asm("\t .extern __USTACK"#cpu);         /**< user stack end is required as asm to be used with setreg macro */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    56      extern unsigned int __ISTACK##cpu[];      /**< interrupt stack end */                                            \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    57      extern unsigned int __INTTAB_CPU##cpu[];  /**< interrupt vector table */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    58      extern unsigned int __TRAPTAB_CPU##cpu[]; /**< trap vector table */                                              \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    59      extern unsigned int __CSA##cpu[];         /**< context save area begin */                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    60      extern unsigned int __CSA##cpu##_END[];   /**< context save area end   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    61  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    62  #define __USTACK(cpu)      __USTACK##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    63  #define __ISTACK(cpu)      __ISTACK##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    64  #define __INTTAB_CPU(cpu)  __INTTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    65  #define __TRAPTAB_CPU(cpu) __TRAPTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    66  #define __CSA(cpu)         __CSA##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    67  #define __CSA_END(cpu)     __CSA##cpu##_END
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    68  #define __START(cpu)       __START##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    69  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    70  /*Wrapper macros for the tool specific definitions */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    71  #if defined(IFX_USE_SW_MANAGED_INT)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    72  #define __INTTAB(cpu)      ((unsigned int)__INTTAB_CPU##cpu | (unsigned int)0x1FE0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    73  #else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    74  #define __INTTAB(cpu)      __INTTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    75  #endif /*defined(IFX_USE_SW_MANAGED_INT) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    76  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    77  #define __TRAPTAB(cpu)     __TRAPTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    78  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    79  #define __SDATA1(cpu)      _SMALL_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    80  #define __SDATA2(cpu)      _LITERAL_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    81  #define __SDATA3(cpu)      _A8_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    82  #define __SDATA4(cpu)      _A9_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    83  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    84  #endif /*IFX_CFG_USE_COMPILER_DEFAULT_LINKER*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    86  #ifdef __cplusplus
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    87  #define IFX_SSW_INLINE   static inline
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    88  #else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    89  #define IFX_SSW_INLINE   inline
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    90  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    91  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    92  #define IFX_SSW_NULL_PTR ((void *)0x0U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    94  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    95  /*----------------------------   GNU Intrinsics  -----------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    96  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    97  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    98  #define Ifx_Ssw_MTCR(reg, val) __mtcr(reg, val);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    99  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   100  #define Ifx_Ssw_MFCR(reg)      __mfcr(reg);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   102  IFX_SSW_INLINE void Ifx_Ssw_NOP(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   103  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   104      __nop();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   105  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   106  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   107  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   108  IFX_SSW_INLINE void Ifx_Ssw_DSYNC(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   109  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   110      __dsync();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   111  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   112  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   113  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   114  IFX_SSW_INLINE void Ifx_Ssw_ISYNC(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   115  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   116      __isync();
	isync
.L53:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    91          Ifx_Ssw_ISYNC();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    92      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    94      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    95          Ifx_CPU_DCON0 dcon0;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    96          dcon0.U       = 0;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    97          dcon0.B.DCBYP = IFX_CFG_SSW_ENABLE_TRICORE1_DCACHE ? 0 : 1; /*depending on the enable bypass bit is reset/set */
	insert	d15,d15,#0,#1,#1
.L102:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    98          Ifx_Ssw_MTCR(CPU_DCON0, dcon0.U);
	mtcr	#36928,d15
	isync
.L62:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     2   * \file Ifx_Ssw_CompilersTasking.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     3   * \brief Startup Software for Tasking compiler options
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     8   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     9   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    11   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    12   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    13   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    14   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    15   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    16   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    17   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    18   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    19   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    20   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    21   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    22   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    23  #ifndef IFX_SSW_COMPILERSTASKING_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    24  #define IFX_SSW_COMPILERSTASKING_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    25  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    26  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    27  /*----------------------------------Includes----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    28  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    29  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    30  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    31  /*-----------------------------------Macros-----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    32  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    33  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    34  /*Linker definitions which are specific to Tasking */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    35  /* IFX_CFG_USE_COMPILER_DEFAULT_LINKER shall be defined in Ifx_Cfg.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    36   * to use the default compiler linker varaibles and startup */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    37  #ifndef IFX_CFG_USE_COMPILER_DEFAULT_LINKER
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    39  /*Start: Common definitions ********************************************** */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    40  #define IFX_SSW_COMMON_LINKER_SYMBOLS()                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    41      __asm("\t .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_"); \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    42      extern unsigned int __START0[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    43      extern unsigned int __START1[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    44      extern unsigned int __START2[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    45      extern unsigned int __START3[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    46      extern unsigned int __START4[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    47      extern unsigned int __START5[];     /**< Pointer to the startup code */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    48  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    49  /*End: Common definitions ************************************************ */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    50  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    51  /*Start: Core 0 definitions ********************************************** */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    52  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    53  /*C extern defintions */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    54  #define IFX_SSW_CORE_LINKER_SYMBOLS(cpu)                                                                             \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    55      __asm("\t .extern __USTACK"#cpu);         /**< user stack end is required as asm to be used with setreg macro */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    56      extern unsigned int __ISTACK##cpu[];      /**< interrupt stack end */                                            \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    57      extern unsigned int __INTTAB_CPU##cpu[];  /**< interrupt vector table */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    58      extern unsigned int __TRAPTAB_CPU##cpu[]; /**< trap vector table */                                              \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    59      extern unsigned int __CSA##cpu[];         /**< context save area begin */                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    60      extern unsigned int __CSA##cpu##_END[];   /**< context save area end   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    61  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    62  #define __USTACK(cpu)      __USTACK##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    63  #define __ISTACK(cpu)      __ISTACK##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    64  #define __INTTAB_CPU(cpu)  __INTTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    65  #define __TRAPTAB_CPU(cpu) __TRAPTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    66  #define __CSA(cpu)         __CSA##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    67  #define __CSA_END(cpu)     __CSA##cpu##_END
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    68  #define __START(cpu)       __START##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    69  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    70  /*Wrapper macros for the tool specific definitions */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    71  #if defined(IFX_USE_SW_MANAGED_INT)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    72  #define __INTTAB(cpu)      ((unsigned int)__INTTAB_CPU##cpu | (unsigned int)0x1FE0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    73  #else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    74  #define __INTTAB(cpu)      __INTTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    75  #endif /*defined(IFX_USE_SW_MANAGED_INT) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    76  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    77  #define __TRAPTAB(cpu)     __TRAPTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    78  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    79  #define __SDATA1(cpu)      _SMALL_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    80  #define __SDATA2(cpu)      _LITERAL_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    81  #define __SDATA3(cpu)      _A8_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    82  #define __SDATA4(cpu)      _A9_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    83  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    84  #endif /*IFX_CFG_USE_COMPILER_DEFAULT_LINKER*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    86  #ifdef __cplusplus
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    87  #define IFX_SSW_INLINE   static inline
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    88  #else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    89  #define IFX_SSW_INLINE   inline
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    90  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    91  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    92  #define IFX_SSW_NULL_PTR ((void *)0x0U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    94  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    95  /*----------------------------   GNU Intrinsics  -----------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    96  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    97  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    98  #define Ifx_Ssw_MTCR(reg, val) __mtcr(reg, val);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    99  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   100  #define Ifx_Ssw_MFCR(reg)      __mfcr(reg);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   102  IFX_SSW_INLINE void Ifx_Ssw_NOP(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   103  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   104      __nop();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   105  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   106  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   107  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   108  IFX_SSW_INLINE void Ifx_Ssw_DSYNC(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   109  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   110      __dsync();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   111  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   112  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   113  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   114  IFX_SSW_INLINE void Ifx_Ssw_ISYNC(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   115  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   116      __isync();
	isync
.L59:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	    99          Ifx_Ssw_ISYNC();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   100      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   102      /* Load Base Address of Trap Vector Table. */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   103      Ifx_Ssw_MTCR(CPU_BTV, (unsigned int)__TRAPTAB(1));
	movh.a	a15,#@his(__TRAPTAB_CPU1)
	lea	a15,[a15]@los(__TRAPTAB_CPU1)
	mov.d	d15,a15
.L103:
	mtcr	#65060,d15
	isync
.L132:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   104  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   105      /* Load Base Address of Interrupt Vector Table. we will do this later in the program */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   106      Ifx_Ssw_MTCR(CPU_BIV, (unsigned int)__INTTAB(1));
	movh.a	a15,#@his(__INTTAB_CPU1)
	lea	a15,[a15]@los(__INTTAB_CPU1)
	mov.d	d15,a15
	mtcr	#65056,d15
	isync
.L133:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   107  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   108      /* Load interrupt stack pointer. */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   109      Ifx_Ssw_MTCR(CPU_ISP, (unsigned int)__ISTACK(1));
	movh.a	a15,#@his(__ISTACK1)
	lea	a15,[a15]@los(__ISTACK1)
	mov.d	d15,a15
	mtcr	#65064,d15
	isync
.L134:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   110  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   111      Ifx_Ssw_setCpuEndinitInline(&MODULE_SCU.WDTCPU[1], wdtPassword);
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf0036258)
.L64:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     8   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    11   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    14   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    15   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    16   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    22   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    23   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    24  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    25  #ifndef IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    26  #define IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    27  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    28  #include "Ifx_Ssw_Compilers.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    29  #include "Ifx_Cfg_Ssw.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    30  #include "IfxScu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    31  #include "IfxCpu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    32  #include "IfxScu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    33  #include "IfxCpu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    34  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    35  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    36  /*-----------------------------------Macros-----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    37  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    39  /** \brief PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    40   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    41  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    42      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    43       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    44       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    45       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    46       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    47       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    48       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    49  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    50  /** \brief Application Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    51   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    52  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    53      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    54       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    55       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    56       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    57       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    58       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    59       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    63  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    64  /** \brief Cold PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    65   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    66  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    67      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    68       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    69       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    70       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    71  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    72  /** \brief Application reset enabled
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    73   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    74   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    75  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    76  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    77  /** \brief Reload value mask */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    78  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    79  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    80  /** \brief Mask values is used to invert the password value bits */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    81  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    82  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    83  /** \brief CSA size */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    84  #define IFX_SSW_CSA_SIZE                          16U
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    86  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    87  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    88  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    89  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    90  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    91  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    92  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    94  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    95  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    96  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    97  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    98  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    99  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   100  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   102  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   103  /*-------------------------Infrastructure Functions---------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   104  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   105  /** \brief clear safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   106   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   107   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   109      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   110          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   111          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   112                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   113                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   114                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   115          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   116          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   117                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   118                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   119                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   120          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   121          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   122      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   123  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   124  /** \brief set safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   125   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   126   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   127  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   128      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   129          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   130          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   131                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   132                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   133                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   134          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   135          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   136                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   137                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   138                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   139          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   140          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   141      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   142  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   143  /** \brief Fetch current password of CPU Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   144   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   145   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   146   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   147   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   148   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   149   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   150  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   151  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   152  /** \brief Fetch current password of Safety Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   153   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   154   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   155   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   156   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   157   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   158  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   159  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   160  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   161   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   162   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   163   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   164   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   165   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   166   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   167   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   168   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   169   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   170  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   171  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   172  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   173   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   174   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   175   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   176   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   177   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   178   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   179   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   180  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   181  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   182  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   183   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   184   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   185   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   186   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   187   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   188   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   189   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   190   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   191  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   192  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   193  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   194   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   195   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   196   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   197   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   198   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   199   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   200  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   201  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   202  /** \brief Disable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   203   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   204   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   205   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   206   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   207   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   208   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   209   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   210  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   211  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   212  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   213   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   214   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   215   *   periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   216   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   217   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   218   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   219   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   220  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   221  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   222  /** \brief Disable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   223   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   224   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   225   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   226   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   227   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   228   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   229  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   230  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   231  /** \brief Enable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   232   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   233   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   234   * periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   235   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   236   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   237   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   238  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   239  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   240  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   241   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   242   * \param programCounter Program counter value to start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   243   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   244  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   245  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   246  /** \brief Set CPU0 to idle state */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   247  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   248  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   249  /** \brief Initialise the C runtime environment */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   250  extern void Ifx_Ssw_C_Init(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   251  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   252  /** \brief Returns the system timer frequency.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   253   * \return the system timer frequency in Hz.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   254   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   255  extern float Ifx_Ssw_getStmFrequency(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   256  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   257  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   258   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   259   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   260   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   261   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   262   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   263   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   264   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   265   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   266  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   267  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   268  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   269   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   270   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   271   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   272   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   273   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   274   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   275   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   276  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   277  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   278  /*Endinit Functions*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   279  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   280  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   281      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   282       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   283       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   284  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   285      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   286      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   287  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   288  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   289  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   290  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   291  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   292      /* Clear EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   293      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   294  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   295      /* Read back of the register is mandatory to ensure the register update */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   296      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   297  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   298  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   299  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   300  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   301  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   302      /* Set EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   303      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   304                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   305                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   306  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   307      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   308      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   309  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   310  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   311  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   312  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   313  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   314      unsigned short password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   315  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   316      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   317       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   318       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   319      password  = watchdog->CON0.B.PW;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   320      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   321  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   322      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   323  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   324  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   325  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   326  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   327  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   328      unsigned short password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   329      Ifx_SCU_WDTS  *watchdog;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   330      watchdog  = &MODULE_SCU.WDTS;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   331      /* Read Password from Safety WDT CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   332       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   333       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   334      password  = watchdog->CON0.B.PW;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   335      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   336  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   337      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   338  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   339  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   340  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   341  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   342  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   343      if (watchdog->CON0.B.LCK)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   344      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   345          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   346          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   347                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   348                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   349                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   350      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   351  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   352      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   353      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   354                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   355                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   356                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   357  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   358      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   359      watchdog->CON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   360  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   361  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   362  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   363  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   364  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   365      if (SCU_WDTS_CON0.B.LCK)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   366      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   367          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   368          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   369                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   370                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   371                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   372      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   373  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   374      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   375      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   376                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   377                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   378                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   379  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   380      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   381      SCU_WDTS_CON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   382  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   383  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   384  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   385  IFX_SSW_INLINE void Ifx_Ssw_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   386  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   387      if (watchdog->CON0.B.LCK)
	ld.w	d15,[a15]
.L135:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   387      if (watchdog->CON0.B.LCK)      (inlined)
	jz.t	d15:1,.L3
.L136:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   388      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   389          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   390          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   391                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   392                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	or	d15,d0,#1
.L137:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   393                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	ld.w	d0,[a15]
	extr.u	d0,d0,#16,#16
.L138:
	sh	d0,d0,#16
.L139:
	or	d15,d0
.L140:
	st.w	[a15],d15

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   387      if (watchdog->CON0.B.LCK)      (inlined)
.L3:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   394      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   395  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   396      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   397      watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   398                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   399                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	sh	d2,#2
.L98:
	or	d15,d2,#3
.L141:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   400                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	ld.w	d0,[a15]
	extr.u	d0,d0,#16,#16
.L142:
	sh	d0,d0,#16
.L143:
	or	d15,d0
.L144:
	st.w	[a15],d15
.L145:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   401  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   402      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   403      watchdog->CON0.U;
	ld.w	d15,[a15]
.L65:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   112  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   113      /* initialize SDA base pointers */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   114      Ifx_Ssw_setAddressReg(a0, __SDATA1(1));
	 movh.a	 a0,#@his(_SMALL_DATA_)
 lea	 a0,[a0]@los(_SMALL_DATA_)
.L146:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   115      Ifx_Ssw_setAddressReg(a1, __SDATA2(1));
	 movh.a	 a1,#@his(_LITERAL_DATA_)
 lea	 a1,[a1]@los(_LITERAL_DATA_)
.L147:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   116      Ifx_Ssw_setAddressReg(a8, __SDATA3(1));
	 movh.a	 a8,#@his(_A8_DATA_)
 lea	 a8,[a8]@los(_A8_DATA_)
.L148:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   117      Ifx_Ssw_setAddressReg(a9, __SDATA4(1));
	 movh.a	 a9,#@his(_A9_DATA_)
 lea	 a9,[a9]@los(_A9_DATA_)
.L149:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   118  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   119      Ifx_Ssw_initCSA((unsigned int *)__CSA(1), (unsigned int *)__CSA_END(1));
	movh.a	a15,#@his(__CSA1)
.L104:
	lea	a15,[a15]@los(__CSA1)
.L150:
	movh.a	a2,#@his(__CSA1_END)
	lea	a2,[a2]@los(__CSA1_END)
.L72:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     8   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    11   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    14   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    15   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    16   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    22   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    23   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    24  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    25  #ifndef IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    26  #define IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    27  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    28  #include "Ifx_Ssw_Compilers.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    29  #include "Ifx_Cfg_Ssw.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    30  #include "IfxScu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    31  #include "IfxCpu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    32  #include "IfxScu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    33  #include "IfxCpu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    34  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    35  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    36  /*-----------------------------------Macros-----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    37  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    39  /** \brief PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    40   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    41  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    42      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    43       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    44       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    45       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    46       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    47       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    48       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    49  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    50  /** \brief Application Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    51   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    52  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    53      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    54       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    55       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    56       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    57       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    58       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    59       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    63  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    64  /** \brief Cold PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    65   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    66  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    67      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    68       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    69       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    70       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    71  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    72  /** \brief Application reset enabled
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    73   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    74   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    75  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    76  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    77  /** \brief Reload value mask */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    78  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    79  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    80  /** \brief Mask values is used to invert the password value bits */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    81  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    82  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    83  /** \brief CSA size */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    84  #define IFX_SSW_CSA_SIZE                          16U
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    86  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    87  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    88  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    89  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    90  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    91  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    92  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    94  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    95  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    96  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    97  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    98  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    99  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   100  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   102  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   103  /*-------------------------Infrastructure Functions---------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   104  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   105  /** \brief clear safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   106   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   107   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   109      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   110          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   111          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   112                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   113                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   114                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   115          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   116          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   117                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   118                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   119                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   120          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   121          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   122      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   123  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   124  /** \brief set safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   125   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   126   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   127  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   128      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   129          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   130          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   131                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   132                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   133                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   134          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   135          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   136                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   137                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   138                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   139          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   140          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   141      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   142  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   143  /** \brief Fetch current password of CPU Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   144   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   145   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   146   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   147   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   148   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   149   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   150  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   151  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   152  /** \brief Fetch current password of Safety Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   153   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   154   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   155   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   156   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   157   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   158  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   159  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   160  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   161   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   162   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   163   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   164   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   165   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   166   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   167   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   168   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   169   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   170  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   171  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   172  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   173   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   174   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   175   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   176   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   177   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   178   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   179   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   180  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   181  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   182  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   183   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   184   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   185   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   186   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   187   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   188   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   189   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   190   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   191  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   192  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   193  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   194   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   195   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   196   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   197   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   198   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   199   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   200  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   201  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   202  /** \brief Disable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   203   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   204   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   205   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   206   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   207   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   208   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   209   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   210  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   211  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   212  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   213   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   214   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   215   *   periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   216   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   217   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   218   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   219   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   220  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   221  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   222  /** \brief Disable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   223   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   224   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   225   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   226   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   227   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   228   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   229  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   230  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   231  /** \brief Enable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   232   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   233   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   234   * periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   235   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   236   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   237   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   238  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   239  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   240  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   241   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   242   * \param programCounter Program counter value to start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   243   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   244  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   245  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   246  /** \brief Set CPU0 to idle state */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   247  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   248  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   249  /** \brief Initialise the C runtime environment */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   250  extern void Ifx_Ssw_C_Init(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   251  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   252  /** \brief Returns the system timer frequency.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   253   * \return the system timer frequency in Hz.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   254   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   255  extern float Ifx_Ssw_getStmFrequency(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   256  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   257  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   258   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   259   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   260   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   261   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   262   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   263   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   264   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   265   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   266  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   267  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   268  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   269   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   270   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   271   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   272   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   273   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   274   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   275   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   276  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   277  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   278  /*Endinit Functions*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   279  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   280  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   281      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   282       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   283       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   284  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   285      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   286      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   287  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   288  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   289  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   290  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   291  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   292      /* Clear EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   293      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   294  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   295      /* Read back of the register is mandatory to ensure the register update */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   296      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   297  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   298  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   299  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   300  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   301  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   302      /* Set EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   303      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   304                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   305                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   306  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   307      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   308      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   309  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   310  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   311  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   312  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   313  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   314      unsigned short password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   315  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   316      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   317       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   318       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   319      password  = watchdog->CON0.B.PW;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   320      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   321  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   322      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   323  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   324  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   325  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   326  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   327  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   328      unsigned short password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   329      Ifx_SCU_WDTS  *watchdog;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   330      watchdog  = &MODULE_SCU.WDTS;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   331      /* Read Password from Safety WDT CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   332       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   333       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   334      password  = watchdog->CON0.B.PW;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   335      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   336  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   337      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   338  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   339  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   340  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   341  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   342  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   343      if (watchdog->CON0.B.LCK)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   344      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   345          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   346          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   347                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   348                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   349                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   350      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   351  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   352      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   353      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   354                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   355                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   356                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   357  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   358      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   359      watchdog->CON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   360  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   361  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   362  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   363  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   364  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   365      if (SCU_WDTS_CON0.B.LCK)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   366      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   367          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   368          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   369                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   370                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   371                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   372      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   373  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   374      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   375      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   376                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   377                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   378                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   379  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   380      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   381      SCU_WDTS_CON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   382  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   383  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   384  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   385  IFX_SSW_INLINE void Ifx_Ssw_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   386  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   387      if (watchdog->CON0.B.LCK)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   388      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   389          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   390          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   391                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   392                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   393                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   394      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   395  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   396      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   397      watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   398                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   399                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   400                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   401  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   402      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   403      watchdog->CON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   404  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   405  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   406  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   407  IFX_SSW_INLINE void Ifx_Ssw_setSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   408  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   409      if (SCU_WDTS_CON0.B.LCK)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   410      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   411          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   412          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   413                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   414                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   415                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   416      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   417  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   418      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   419      SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   420                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   421                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   422                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   423  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   424      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   425      SCU_WDTS_CON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   426  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   427  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   428  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   429  /* Check if Cold PowerOn Reset */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   430  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   431  IFX_SSW_INLINE char Ifx_Ssw_isColdPoweronReset(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   432  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   433      return (char)((SCU_RSTSTAT.U & IFX_SSW_COLD_POWERONRESET_MASK) > 0);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   434  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   435  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   436  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   437  /*Add options to eliminate usage of stack pointers unnecessarily*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   438  #if defined(__HIGHTEC__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   439  #pragma GCC optimize "O2"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   440  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   441  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   442  IFX_SSW_INLINE unsigned char Ifx_Ssw_isApplicationReset(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   443  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   444      unsigned char returnVal;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   445      unsigned int  tempValue = SCU_RSTSTAT.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   446  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   447      if ((tempValue & IFX_SSW_POWERONRESET_MASK) > 0U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   448      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   449          returnVal = 0U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   450      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   451      else if ((tempValue & IFX_SSW_APPLICATIONRESET_MASK) > 0U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   452      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   453          /* get the bit which is set at RSTSTAT (assumption: RSTSTAT register was cleared before and only one bit can be set) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   454          tempValue = tempValue & IFX_SSW_APPLICATIONRESET_MASK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   455          tempValue = (SCU_RSTCON.U >> ((31U - Ifx_Ssw_CLZ(tempValue)) << 1U)) & 3U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   456  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   457          if (tempValue == IFX_SSW_APPLICATIONRESET)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   458          {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   459              returnVal = 1U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   460          }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   461          else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   462          {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   463              returnVal = 0U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   464          }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   465      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   466      else if (((unsigned int)tempValue & ((unsigned int)IFX_SCU_RSTSTAT_CB3_MSK << IFX_SCU_RSTSTAT_CB3_OFF)))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   467      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   468          /* CB3 reset is not configurable and is always application reset */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   469          returnVal = 1U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   470      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   471      else if (CPU0_KRST0.B.RSTSTAT != 0)   /*CPU0 KRST status */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   472      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   473          returnVal = 1U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   474      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   475      else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   476      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   477          returnVal = 0U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   478      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   479  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   480      return returnVal;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   481  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   482  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   483  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   484  /*Restore the options to command line provided ones*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   485  #if defined(__HIGHTEC__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   486  #pragma GCC reset_options
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   487  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   488  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   489  IFX_SSW_INLINE void Ifx_Ssw_initCSA(unsigned int *csaBegin, unsigned int *csaEnd)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   490  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   491      unsigned int  k;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   492      unsigned int  nxt_cxi_val = 0U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   493      unsigned int *prvCsa      = 0U;
	mov.a	a4,#0
.L106:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   494      unsigned int *nxtCsa      = csaBegin;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   495      unsigned int  numOfCsa    = (((unsigned int)csaEnd - (unsigned int)csaBegin) / 64U);
	mov.d	d15,a2
.L151:
	mov.d	d0,a15
.L152:
	sub	d15,d0
	sh	d0,d15,#-6
.L108:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   496  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   497      for (k = 0U; k < numOfCsa; k++)
	mov	d1,#0
.L101:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   498      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   499          nxt_cxi_val = ((unsigned int)((unsigned int)nxtCsa & ((unsigned int)0XFU << 28U)) >> 12U) | \ 
	movh	d2,#15
.L153:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   497      for (k = 0U; k < numOfCsa; k++)      (inlined)
	j	.L4
.L5:
	mov.d	d3,a15
.L154:
	sh	d15,d3,#-12
.L155:
	and	d15,d2
.L156:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   500                        ((unsigned int)((unsigned int)nxtCsa & ((unsigned int)0XFFFFU << 6U)) >> 6U);
	extr.u	d3,d3,#6,#16
.L109:
	or	d3,d15
.L157:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   502          if (k == 0U)      (inlined)
	jne	d1,#0,.L6
.L158:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   501  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   502          if (k == 0U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   503          {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   504              Ifx_Ssw_MTCR(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */
	mtcr	#65080,d3
	isync

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   504              Ifx_Ssw_MTCR(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */      (inlined)
	j	.L7

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   502          if (k == 0U)      (inlined)
.L6:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   505          }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   506          else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   507          {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   508              *prvCsa = nxt_cxi_val;
	st.w	[a4],d3

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   506          else      (inlined)
.L7:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   509          }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   510  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   511          if (k == (numOfCsa - 3U))
	add	d15,d0,#-3
.L159:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   511          if (k == (numOfCsa - 3U))      (inlined)
	jne	d15,d1,.L8
.L160:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   512          {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   513              Ifx_Ssw_MTCR(CPU_LCX, nxt_cxi_val);   /* Last but 2 context save area is pointed in LCX to know if there is CSA depletion */
	mtcr	#65084,d3
	isync

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   511          if (k == (numOfCsa - 3U))      (inlined)
.L8:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   514          }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   515  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   516          prvCsa  = (unsigned int *)nxtCsa;
	mov.aa	a4,a15
.L161:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   517          nxtCsa += IFX_SSW_CSA_SIZE; /* next CSA */
	lea	a15,[a15]64
.L162:
	add	d1,#1

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   497      for (k = 0U; k < numOfCsa; k++)      (inlined)
.L4:
	jlt.u	d1,d0,.L5
.L163:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   518      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   519  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   520      *prvCsa = 0U;                   /* Store null pointer in last CSA (= very first time!) */
	mov	d15,#0
.L164:
	st.w	[a4],d15
.L85:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     2   * \file Ifx_Ssw_CompilersTasking.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     3   * \brief Startup Software for Tasking compiler options
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     8   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     9   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    11   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    12   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    13   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    14   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    15   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    16   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    17   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    18   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    19   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    20   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    21   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    22   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    23  #ifndef IFX_SSW_COMPILERSTASKING_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    24  #define IFX_SSW_COMPILERSTASKING_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    25  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    26  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    27  /*----------------------------------Includes----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    28  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    29  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    30  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    31  /*-----------------------------------Macros-----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    32  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    33  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    34  /*Linker definitions which are specific to Tasking */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    35  /* IFX_CFG_USE_COMPILER_DEFAULT_LINKER shall be defined in Ifx_Cfg.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    36   * to use the default compiler linker varaibles and startup */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    37  #ifndef IFX_CFG_USE_COMPILER_DEFAULT_LINKER
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    39  /*Start: Common definitions ********************************************** */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    40  #define IFX_SSW_COMMON_LINKER_SYMBOLS()                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    41      __asm("\t .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_"); \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    42      extern unsigned int __START0[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    43      extern unsigned int __START1[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    44      extern unsigned int __START2[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    45      extern unsigned int __START3[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    46      extern unsigned int __START4[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    47      extern unsigned int __START5[];     /**< Pointer to the startup code */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    48  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    49  /*End: Common definitions ************************************************ */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    50  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    51  /*Start: Core 0 definitions ********************************************** */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    52  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    53  /*C extern defintions */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    54  #define IFX_SSW_CORE_LINKER_SYMBOLS(cpu)                                                                             \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    55      __asm("\t .extern __USTACK"#cpu);         /**< user stack end is required as asm to be used with setreg macro */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    56      extern unsigned int __ISTACK##cpu[];      /**< interrupt stack end */                                            \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    57      extern unsigned int __INTTAB_CPU##cpu[];  /**< interrupt vector table */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    58      extern unsigned int __TRAPTAB_CPU##cpu[]; /**< trap vector table */                                              \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    59      extern unsigned int __CSA##cpu[];         /**< context save area begin */                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    60      extern unsigned int __CSA##cpu##_END[];   /**< context save area end   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    61  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    62  #define __USTACK(cpu)      __USTACK##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    63  #define __ISTACK(cpu)      __ISTACK##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    64  #define __INTTAB_CPU(cpu)  __INTTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    65  #define __TRAPTAB_CPU(cpu) __TRAPTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    66  #define __CSA(cpu)         __CSA##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    67  #define __CSA_END(cpu)     __CSA##cpu##_END
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    68  #define __START(cpu)       __START##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    69  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    70  /*Wrapper macros for the tool specific definitions */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    71  #if defined(IFX_USE_SW_MANAGED_INT)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    72  #define __INTTAB(cpu)      ((unsigned int)__INTTAB_CPU##cpu | (unsigned int)0x1FE0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    73  #else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    74  #define __INTTAB(cpu)      __INTTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    75  #endif /*defined(IFX_USE_SW_MANAGED_INT) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    76  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    77  #define __TRAPTAB(cpu)     __TRAPTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    78  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    79  #define __SDATA1(cpu)      _SMALL_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    80  #define __SDATA2(cpu)      _LITERAL_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    81  #define __SDATA3(cpu)      _A8_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    82  #define __SDATA4(cpu)      _A9_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    83  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    84  #endif /*IFX_CFG_USE_COMPILER_DEFAULT_LINKER*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    86  #ifdef __cplusplus
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    87  #define IFX_SSW_INLINE   static inline
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    88  #else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    89  #define IFX_SSW_INLINE   inline
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    90  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    91  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    92  #define IFX_SSW_NULL_PTR ((void *)0x0U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    94  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    95  /*----------------------------   GNU Intrinsics  -----------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    96  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    97  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    98  #define Ifx_Ssw_MTCR(reg, val) __mtcr(reg, val);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    99  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   100  #define Ifx_Ssw_MFCR(reg)      __mfcr(reg);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   102  IFX_SSW_INLINE void Ifx_Ssw_NOP(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   103  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   104      __nop();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   105  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   106  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   107  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   108  IFX_SSW_INLINE void Ifx_Ssw_DSYNC(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   109  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   110      __dsync();
	dsync
.L73:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   111  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   112  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   113  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   114  IFX_SSW_INLINE void Ifx_Ssw_ISYNC(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   115  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   116      __isync();
	isync
.L86:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   120  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   121      /* Clears any instruction buffer */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   122      Ifx_Ssw_ISYNC();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   123  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   124      stmCount = (unsigned int)(Ifx_Ssw_getStmFrequency() * IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS);
	call	Ifx_Ssw_getStmFrequency
.L107:
	mov.u	d15,#46871
	addih	d15,d15,#14545
.L165:
	mul.f	d15,d2,d15
.L166:
	ftouz	d0,d15

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   125  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   126      while ((unsigned int)(STM0_TIM0.U - stmCountBegin) < stmCount)
.L9:
	ld.w	d15,0xf0001010
.L167:
	sub	d15,d8
.L168:
	jlt.u	d15,d0,.L9
.L169:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   127      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   128          /* There is no need to check overflow of the STM timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   129           * When counter after overflow subtracted with counter before overflow,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   130           * the subtraction result will be as expected, as long as both are unsigned 32 bits
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   131           * eg: stmCountBegin= 0xFFFFFFFE (before overflow)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   132           *     stmCountNow = 0x00000002 (before overflow)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   133           *     diff= stmCountNow - stmCountBegin = 4 as expected.*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   134      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   135  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   136      /*Start remaining cores down the line in a daisy-chain fashion*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   137  #if (IFX_CFG_SSW_ENABLE_TRICORE2 != 0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   138      (void)Ifx_Ssw_startCore(&MODULE_CPU2, (unsigned int)__START(2));       /*The status returned by function call is ignored */
	movh.a	a4,#63620
.L170:
	movh.a	a15,#@his(__START2)
.L105:
	lea	a15,[a15]@los(__START2)
	mov.d	d4,a15
.L171:
	call	Ifx_Ssw_startCore
.L110:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   139  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   140  #if (IFX_CFG_SSW_ENABLE_TRICORE2 == 0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   141  #if (IFX_CFG_SSW_ENABLE_TRICORE3 != 0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   142      (void)Ifx_Ssw_startCore(&MODULE_CPU3, (unsigned int)__START(3));       /*The status returned by function call is ignored */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   143  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   144  #if (IFX_CFG_SSW_ENABLE_TRICORE3 == 0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   145  #if (IFX_CFG_SSW_ENABLE_TRICORE4 != 0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   146      (void)Ifx_Ssw_startCore(&MODULE_CPU4, (unsigned int)__START(4));       /*The status returned by function call is ignored */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   147  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   148  #if (IFX_CFG_SSW_ENABLE_TRICORE4 == 0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   149  #if (IFX_CFG_SSW_ENABLE_TRICORE5 != 0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   150      (void)Ifx_Ssw_startCore(&MODULE_CPU5, (unsigned int)__START(5));       /*The status returned by function call is ignored */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   151  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   152  #endif /* #if (IFX_CFG_SSW_ENABLE_TRICORE4 == 0) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   153  #endif /* #if (IFX_CFG_SSW_ENABLE_TRICORE3 == 0) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   154  #endif /* #if (IFX_CFG_SSW_ENABLE_TRICORE2 == 0) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   155  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   156      /*Initialize CPU Private Global Variables*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   157      //TODO : This implementation is done once all compilers support this
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   158  #if (IFX_CFG_SSW_ENABLE_INDIVIDUAL_C_INIT != 0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   159      (void)Ifx_Ssw_C_Init();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   160  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   161  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   162      /*Call main function of Cpu1 */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   163      Ifx_Ssw_jumpToFunction(core1_main);
	movh.a	a15,#@his(core1_main)
	lea	a15,[a15]@los(core1_main)
.L88:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   149      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L89:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   164  }
	ret
.L28:
	
____Core1_start_function_end:
	.size	__Core1_start,____Core1_start_function_end-__Core1_start
.L22:
	; End of function
	
	.sdecl	'.text.start_cpu1',code,cluster('_START1'),protect
	.sect	'.text.start_cpu1'
	.align	2
	
	.global	_START1

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   165  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   166  /******************************************************************************
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   167   *                        reset vector address                                *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   168   *****************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   169  #if defined(__HIGHTEC__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   170  #pragma section
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   171  #pragma section ".start_cpu1" x
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   172  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   173  #if defined(__TASKING__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   174  #pragma protect on
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   175  #pragma section code "start_cpu1"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   176  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   177  #if defined(__DCC__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   178  #pragma section CODE ".start_cpu1" X
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   179  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   180  #if defined(__ghs__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   181  #pragma ghs section text=".start_cpu1"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   182  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   183  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   184  void _START1(void)
; Function _START1
.L13:
_START1:	.type	func

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   185  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   186      Ifx_Ssw_jumpToFunction(__Core1_start);
	movh.a	a15,#@his(__Core1_start)
	lea	a15,[a15]@los(__Core1_start)
.L94:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   149      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L95:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   187  }
	ret
.L93:
	
___START1_function_end:
	.size	_START1,___START1_function_end-_START1
.L27:
	; End of function
	
	.calls	'__INDIRECT__','__Core1_start'
	.calls	'__INDIRECT__','core1_main'
	.calls	'__Core1_start','Ifx_Ssw_getStmFrequency'
	.calls	'__Core1_start','Ifx_Ssw_startCore'
	.calls	'__Core1_start','',0
	.extern	Ifx_Ssw_startCore
	.extern	Ifx_Ssw_getStmFrequency
	.extern	__START2
	.extern	__ISTACK1
	.extern	__INTTAB_CPU1
	.extern	__TRAPTAB_CPU1
	.extern	__CSA1
	.extern	__CSA1_END
	.extern	core1_main
	.extern	__INDIRECT__
	.calls	'_START1','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L15:
	.word	64160
	.half	3
	.word	.L16
	.byte	4
.L14:
	.byte	1
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc1.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L17
.L41:
	.byte	2
	.byte	'Ifx_Ssw_DSYNC',0,3,1,108,21,1,1
.L44:
	.byte	3,0
.L56:
	.byte	2
	.byte	'Ifx_Ssw_ISYNC',0,3,1,114,21,1,1
.L58:
	.byte	3,0,4
	.byte	'void',0,5
	.word	220
.L87:
	.byte	2
	.byte	'Ifx_Ssw_jumpToFunction',0,3,1,147,1,21,1,1
.L90:
	.byte	6
	.byte	'fun',0,1,147,1,50
	.word	226
.L92:
	.byte	3,0
.L32:
	.byte	7
	.byte	'unsigned short int',0,2,7
.L29:
	.byte	7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5,7
	.byte	'unsigned int',0,4,7,8
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,3,240,9,16,4,9
	.byte	'ENDINIT',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'LCK',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'PW',0,4
	.word	322
	.byte	14,16,2,35,0,9
	.byte	'REL',0,4
	.word	322
	.byte	16,0,2,35,0,0,10,3,191,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	338
	.byte	4,2,35,0,0,7
	.byte	'unsigned char',0,1,8,8
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,3,249,9,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'reserved_1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'IR0',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'DR',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'IR1',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'UR',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'PAR',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'TCR',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'TCTR',0,1
	.word	474
	.byte	7,0,2,35,1,9
	.byte	'reserved_16',0,2
	.word	277
	.byte	16,0,2,35,2,0,10,3,199,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	491
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,3,137,10,16,4,9
	.byte	'AE',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'OE',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'IS0',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'DS',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'TO',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'IS1',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'US',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'PAS',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'TCS',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'TCT',0,1
	.word	474
	.byte	7,0,2,35,1,9
	.byte	'TIM',0,2
	.word	277
	.byte	16,0,2,35,2,0,10,3,207,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	757
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_SCU_WDTCPU',0,3,138,17,25,12,11
	.byte	'CON0',0
	.word	434
	.byte	4,2,35,0,11
	.byte	'CON1',0
	.word	717
	.byte	4,2,35,4,11
	.byte	'SR',0
	.word	948
	.byte	4,2,35,8,0,12
	.word	988
	.byte	5
	.word	1051
.L34:
	.byte	13
	.byte	'Ifx_Ssw_getCpuWatchdogPasswordInline',0,3,2,184,2,31
	.word	277
	.byte	1,1
.L37:
	.byte	6
	.byte	'watchdog',0,2,184,2,84
	.word	1056
.L39:
	.byte	3,0
.L45:
	.byte	2
	.byte	'Ifx_Ssw_clearCpuEndinitInline',0,3,2,213,2,21,1,1
.L48:
	.byte	6
	.byte	'watchdog',0,2,213,2,67
	.word	1056
.L50:
	.byte	6
	.byte	'password',0,2,213,2,92
	.word	277
.L52:
	.byte	3,0
.L63:
	.byte	2
	.byte	'Ifx_Ssw_setCpuEndinitInline',0,3,2,129,3,21,1,1
.L66:
	.byte	6
	.byte	'watchdog',0,2,129,3,65
	.word	1056
.L68:
	.byte	6
	.byte	'password',0,2,129,3,90
	.word	277
.L70:
	.byte	3,0
.L81:
	.byte	5
	.word	299
.L71:
	.byte	2
	.byte	'Ifx_Ssw_initCSA',0,3,2,233,3,21,1,1
.L74:
	.byte	6
	.byte	'csaBegin',0,2,233,3,51
	.word	1280
.L76:
	.byte	6
	.byte	'csaEnd',0,2,233,3,75
	.word	1280
.L78:
	.byte	14,3,0,0,15
	.byte	'__mtcr',0,1,1,1,1,16
	.word	315
	.byte	16
	.word	315
	.byte	0,17
	.byte	'__isync',0,1,1,1,1,17
	.byte	'__dsync',0,1,1,1,1,18
	.word	174
	.byte	3,0,18
	.word	197
	.byte	3,0,18
	.word	231
	.byte	19
	.word	262
	.byte	3,0,8
	.byte	'_Ifx_CPU_PCON0_Bits',0,4,171,6,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'PCBYP',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'reserved_2',0,4
	.word	322
	.byte	30,0,2,35,0,0
.L54:
	.byte	10,4,182,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	1422
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DCON0_Bits',0,4,240,1,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'DCBYP',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'reserved_2',0,4
	.word	322
	.byte	30,0,2,35,0,0
.L60:
	.byte	10,4,206,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	1550
	.byte	4,2,35,0,0,20,128,34
	.word	474
	.byte	21,255,33,0,8
	.byte	'_Ifx_CPU_FLASHCON0_Bits',0,4,146,4,16,4,9
	.byte	'TAG1',0,4
	.word	322
	.byte	6,26,2,35,0,9
	.byte	'reserved_6',0,4
	.word	322
	.byte	2,24,2,35,0,9
	.byte	'TAG2',0,4
	.word	322
	.byte	6,18,2,35,0,9
	.byte	'reserved_14',0,4
	.word	322
	.byte	2,16,2,35,0,9
	.byte	'TAG3',0,4
	.word	322
	.byte	6,10,2,35,0,9
	.byte	'reserved_22',0,4
	.word	322
	.byte	2,8,2,35,0,9
	.byte	'TAG4',0,4
	.word	322
	.byte	6,2,2,35,0,9
	.byte	'reserved_30',0,4
	.word	322
	.byte	2,0,2,35,0,0,10,4,238,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	1689
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FLASHCON1_Bits',0,4,159,4,16,4,9
	.byte	'STALL',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'reserved_1',0,4
	.word	322
	.byte	15,16,2,35,0,9
	.byte	'MASKUECC',0,4
	.word	322
	.byte	2,14,2,35,0,9
	.byte	'reserved_18',0,4
	.word	322
	.byte	6,8,2,35,0,9
	.byte	'reserved_24',0,4
	.word	322
	.byte	2,6,2,35,0,9
	.byte	'reserved_26',0,4
	.word	322
	.byte	6,0,2,35,0,0,10,4,246,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	1915
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FLASHCON2_Bits',0,4,170,4,16,4,9
	.byte	'RECDIS',0,4
	.word	322
	.byte	2,30,2,35,0,9
	.byte	'ECCCORDIS',0,4
	.word	322
	.byte	2,28,2,35,0,9
	.byte	'reserved_4',0,4
	.word	322
	.byte	4,24,2,35,0,9
	.byte	'HMARGIN',0,4
	.word	322
	.byte	2,22,2,35,0,9
	.byte	'MSEL',0,4
	.word	322
	.byte	2,20,2,35,0,9
	.byte	'reserved_12',0,4
	.word	322
	.byte	4,16,2,35,0,9
	.byte	'ECCSCLR',0,4
	.word	322
	.byte	2,14,2,35,0,9
	.byte	'reserved_18',0,4
	.word	322
	.byte	6,8,2,35,0,9
	.byte	'SBABCLR',0,4
	.word	322
	.byte	2,6,2,35,0,9
	.byte	'DBABCLR',0,4
	.word	322
	.byte	2,4,2,35,0,9
	.byte	'MBABCLR',0,4
	.word	322
	.byte	2,2,2,35,0,9
	.byte	'ZBABCLR',0,4
	.word	322
	.byte	2,0,2,35,0,0,10,4,254,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	2114
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FLASHCON3_Bits',0,4,187,4,16,4,9
	.byte	'ECCERRINJ',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EDCERRINJ',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'SBABERRINJ',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'DBABERRINJ',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'MBABERRINJ',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'ZBABERRINJ',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'SBERERRINJ',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'DBERERRINJ',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'NVMCERRINJ',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'FLCONERRINJ',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'reserved_10',0,4
	.word	322
	.byte	22,0,2,35,0,0,10,4,134,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	2422
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FLASHCON4_Bits',0,4,203,4,16,4,9
	.byte	'DDIS',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'reserved_1',0,4
	.word	322
	.byte	31,0,2,35,0,0,10,4,142,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	2735
	.byte	4,2,35,0,0,20,236,253,2
	.word	474
	.byte	21,235,253,2,0,8
	.byte	'_Ifx_CPU_KRST0_Bits',0,4,161,5,16,4,9
	.byte	'RST',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'RSTSTAT',0,4
	.word	322
	.byte	2,29,2,35,0,9
	.byte	'reserved_3',0,4
	.word	322
	.byte	29,0,2,35,0,0,10,4,222,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	2857
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_KRST1_Bits',0,4,169,5,16,4,9
	.byte	'RST',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'reserved_1',0,4
	.word	322
	.byte	31,0,2,35,0,0,10,4,230,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	2980
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_KRSTCLR_Bits',0,4,176,5,16,4,9
	.byte	'CLR',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'reserved_1',0,4
	.word	322
	.byte	31,0,2,35,0,0,10,4,238,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	3084
	.byte	4,2,35,0,0,20,244,31
	.word	474
	.byte	21,243,31,0,8
	.byte	'_Ifx_CPU_RGN_LA_Bits',0,4,224,7,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	5,27,2,35,0,9
	.byte	'ADDR',0,4
	.word	322
	.byte	27,0,2,35,0,0,10,4,158,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	3201
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_RGN_UA_Bits',0,4,231,7,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	5,27,2,35,0,9
	.byte	'ADDR',0,4
	.word	322
	.byte	27,0,2,35,0,0,10,4,166,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	3307
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_RGN_ACCENA_Bits',0,4,150,7,16,4,9
	.byte	'EN0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN1',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN2',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN3',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN4',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN5',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN6',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN7',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN8',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN9',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN10',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN11',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN12',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN13',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN14',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN15',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN16',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN17',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN18',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN19',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN20',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN21',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN22',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN23',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN24',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN25',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN26',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN27',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN28',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN29',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN30',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN31',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,142,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	3413
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_RGN_ACCENB_Bits',0,4,187,7,16,4,9
	.byte	'EN32',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN33',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN34',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN35',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN36',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN37',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN38',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN39',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN40',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN41',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN42',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN43',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN44',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN45',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN46',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN47',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN48',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN49',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN50',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN51',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN52',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN53',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN54',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN55',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN56',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN57',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN58',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN59',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN60',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN61',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN62',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN63',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,150,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	3987
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_RGN',0,4,223,16,25,16,11
	.byte	'LA',0
	.word	3267
	.byte	4,2,35,0,11
	.byte	'UA',0
	.word	3373
	.byte	4,2,35,4,11
	.byte	'ACCENA',0
	.word	3947
	.byte	4,2,35,8,11
	.byte	'ACCENB',0
	.word	4531
	.byte	4,2,35,12,0,20,128,1
	.word	4571
	.byte	21,7,0,12
	.word	4647
	.byte	20,8
	.word	474
	.byte	21,7,0,8
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,4,201,8,16,4,9
	.byte	'EN0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN1',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN2',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN3',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN4',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN5',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN6',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN7',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN8',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN9',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN10',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN11',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN12',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN13',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN14',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN15',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN16',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN17',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN18',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN19',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN20',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN21',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN22',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN23',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN24',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN25',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN26',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN27',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN28',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN29',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN30',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN31',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,206,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	4671
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,4,238,8,16,4,9
	.byte	'EN32',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN33',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN34',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN35',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN36',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN37',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN38',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN39',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN40',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN41',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN42',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN43',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN44',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN45',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN46',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN47',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN48',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN49',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN50',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN51',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN52',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN53',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN54',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN55',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN56',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN57',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN58',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN59',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN60',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN61',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN62',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN63',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,214,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	5256
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,4,247,7,16,4,9
	.byte	'EN0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN1',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN2',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN3',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN4',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN5',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN6',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN7',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN8',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN9',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN10',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN11',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN12',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN13',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN14',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN15',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN16',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN17',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN18',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN19',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN20',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN21',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN22',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN23',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN24',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN25',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN26',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN27',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN28',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN29',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN30',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN31',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,182,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	5851
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,4,156,8,16,4,9
	.byte	'EN32',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN33',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN34',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN35',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN36',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN37',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN38',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN39',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN40',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN41',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN42',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN43',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN44',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN45',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN46',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN47',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN48',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN49',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN50',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN51',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN52',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN53',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN54',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN55',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN56',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN57',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN58',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN59',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN60',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN61',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN62',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN63',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,190,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	6433
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,4,191,5,16,4,9
	.byte	'EN0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN1',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN2',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN3',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN4',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN5',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN6',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN7',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN8',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN9',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN10',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN11',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN12',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN13',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN14',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN15',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN16',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN17',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN18',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN19',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN20',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN21',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN22',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN23',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN24',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN25',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN26',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN27',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN28',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN29',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN30',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN31',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,254,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	7025
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,4,228,5,16,4,9
	.byte	'EN32',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN33',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN34',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN35',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN36',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN37',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN38',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN39',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN40',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN41',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN42',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN43',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN44',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN45',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN46',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN47',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN48',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN49',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN50',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN51',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN52',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN53',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN54',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN55',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN56',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN57',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN58',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN59',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN60',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN61',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN62',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN63',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,134,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	7607
	.byte	4,2,35,0,0,20,232,1
	.word	474
	.byte	21,231,1,0,8
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,4,184,3,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	5,27,2,35,0,9
	.byte	'ADDR',0,4
	.word	322
	.byte	27,0,2,35,0,0,10,4,158,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	8210
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,4,191,3,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	5,27,2,35,0,9
	.byte	'ADDR',0,4
	.word	322
	.byte	27,0,2,35,0,0,10,4,166,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	8326
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,4,201,2,16,4,9
	.byte	'EN0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN1',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN2',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN3',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN4',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN5',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN6',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN7',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN8',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN9',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN10',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN11',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN12',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN13',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN14',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN15',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN16',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN17',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN18',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN19',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN20',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN21',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN22',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN23',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN24',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN25',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN26',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN27',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN28',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN29',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN30',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN31',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,134,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	8442
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,4,147,3,16,4,9
	.byte	'EN32',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN33',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN34',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN35',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN36',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN37',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN38',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN39',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN40',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN41',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN42',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN43',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN44',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN45',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN46',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN47',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN48',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN49',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN50',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN51',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN52',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN53',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN54',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN55',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN56',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN57',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN58',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN59',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN60',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN61',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN62',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN63',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,150,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	9028
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,4,164,2,16,4,9
	.byte	'EN0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN1',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN2',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN3',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN4',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN5',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN6',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN7',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN8',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN9',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN10',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN11',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN12',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN13',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN14',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN15',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN16',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN17',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN18',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN19',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN20',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN21',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN22',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN23',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN24',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN25',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN26',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN27',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN28',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN29',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN30',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN31',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,254,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	9624
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,4,238,2,16,4,9
	.byte	'EN32',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN33',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN34',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN35',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN36',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN37',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN38',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN39',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN40',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN41',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN42',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN43',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN44',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN45',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN46',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN47',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN48',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN49',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN50',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN51',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN52',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN53',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN54',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN55',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN56',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN57',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN58',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN59',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN60',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN61',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN62',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN63',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,142,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	10210
	.byte	4,2,35,0,0,20,128,48
	.word	474
	.byte	21,255,47,0,8
	.byte	'_Ifx_CPU_OSEL_Bits',0,4,158,6,16,4,9
	.byte	'SHOVEN_X',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,166,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	10817
	.byte	4,2,35,0,0,20,12
	.word	474
	.byte	21,11,0,8
	.byte	'_Ifx_CPU_BLK_RABR_Bits',0,4,100,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	5,27,2,35,0,9
	.byte	'OBASE',0,4
	.word	322
	.byte	17,10,2,35,0,9
	.byte	'reserved_22',0,4
	.word	322
	.byte	2,8,2,35,0,9
	.byte	'OMEM',0,4
	.word	322
	.byte	4,4,2,35,0,9
	.byte	'reserved_28',0,4
	.word	322
	.byte	3,1,2,35,0,9
	.byte	'OVEN',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,206,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	10912
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_BLK_OTAR_Bits',0,4,92,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	5,27,2,35,0,9
	.byte	'TBASE',0,4
	.word	322
	.byte	23,4,2,35,0,9
	.byte	'reserved_28',0,4
	.word	322
	.byte	4,0,2,35,0,0,10,4,198,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	11098
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_BLK_OMASK_Bits',0,4,83,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	5,27,2,35,0,9
	.byte	'OMASK',0,4
	.word	322
	.byte	12,15,2,35,0,9
	.byte	'ONE',0,4
	.word	322
	.byte	11,4,2,35,0,9
	.byte	'reserved_28',0,4
	.word	322
	.byte	4,0,2,35,0,0,10,4,190,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	11229
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_BLK',0,4,244,16,25,12,11
	.byte	'RABR',0
	.word	11058
	.byte	4,2,35,0,11
	.byte	'OTAR',0
	.word	11189
	.byte	4,2,35,4,11
	.byte	'OMASK',0
	.word	11336
	.byte	4,2,35,8,0,20,128,3
	.word	11376
	.byte	21,31,0,12
	.word	11439
	.byte	20,160,39
	.word	474
	.byte	21,159,39,0,8
	.byte	'_Ifx_CPU_SEGEN_Bits',0,4,238,7,16,4,9
	.byte	'ADFLIP',0,4
	.word	322
	.byte	8,24,2,35,0,9
	.byte	'ADTYPE',0,4
	.word	322
	.byte	2,22,2,35,0,9
	.byte	'reserved_10',0,4
	.word	322
	.byte	21,1,2,35,0,9
	.byte	'AE',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,174,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	11465
	.byte	4,2,35,0,0,20,208,223,1
	.word	474
	.byte	21,207,223,1,0,8
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,4,176,9,16,4,9
	.byte	'ASI',0,4
	.word	322
	.byte	5,27,2,35,0,9
	.byte	'reserved_5',0,4
	.word	322
	.byte	27,0,2,35,0,0,10,4,238,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	11618
	.byte	4,2,35,0,0,20,248,1
	.word	474
	.byte	21,247,1,0,8
	.byte	'_Ifx_CPU_PMA0_Bits',0,4,229,6,16,4,9
	.byte	'DAC',0,4
	.word	322
	.byte	16,16,2,35,0,9
	.byte	'reserved_16',0,4
	.word	322
	.byte	16,0,2,35,0,0,10,4,230,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	11736
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_PMA1_Bits',0,4,236,6,16,4,9
	.byte	'CAC',0,4
	.word	322
	.byte	16,16,2,35,0,9
	.byte	'reserved_16',0,4
	.word	322
	.byte	16,0,2,35,0,0,10,4,238,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	11840
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_PMA2_Bits',0,4,243,6,16,4,9
	.byte	'PSI',0,4
	.word	322
	.byte	16,16,2,35,0,9
	.byte	'reserved_16',0,4
	.word	322
	.byte	16,0,2,35,0,0,10,4,246,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	11944
	.byte	4,2,35,0,0,20,244,29
	.word	474
	.byte	21,243,29,0,8
	.byte	'_Ifx_CPU_DCON2_Bits',0,4,248,1,16,4,9
	.byte	'DCACHE_SZE',0,4
	.word	322
	.byte	16,16,2,35,0,9
	.byte	'DSCRATCH_SZE',0,4
	.word	322
	.byte	16,0,2,35,0,0,10,4,214,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	12059
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_SMACON_Bits',0,4,193,8,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	24,8,2,35,0,9
	.byte	'IODT',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'reserved_25',0,4
	.word	322
	.byte	7,0,2,35,0,0,10,4,198,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	12172
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DSTR_Bits',0,4,233,3,16,4,9
	.byte	'SRE',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'GAE',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'LBE',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'DRE',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'reserved_4',0,4
	.word	322
	.byte	2,26,2,35,0,9
	.byte	'CRE',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'reserved_7',0,4
	.word	322
	.byte	7,18,2,35,0,9
	.byte	'DTME',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'LOE',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'SDE',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'SCE',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'CAC',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'MPE',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'CLE',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'reserved_21',0,4
	.word	322
	.byte	3,8,2,35,0,9
	.byte	'ALN',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'reserved_25',0,4
	.word	322
	.byte	7,0,2,35,0,0,10,4,214,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	12301
	.byte	4,2,35,0,0,20,4
	.word	474
	.byte	21,3,0,8
	.byte	'_Ifx_CPU_DATR_Bits',0,4,205,1,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	3,29,2,35,0,9
	.byte	'SBE',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'reserved_4',0,4
	.word	322
	.byte	5,23,2,35,0,9
	.byte	'CWE',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'CFE',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'reserved_11',0,4
	.word	322
	.byte	3,18,2,35,0,9
	.byte	'SOE',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'reserved_15',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'reserved_16',0,4
	.word	322
	.byte	16,0,2,35,0,0,10,4,182,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	12662
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DEADD_Bits',0,4,134,2,16,4,9
	.byte	'ERROR_ADDRESS',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,230,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	12901
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DIEAR_Bits',0,4,140,2,16,4,9
	.byte	'TA',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,238,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	12993
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DIETR_Bits',0,4,146,2,16,4,9
	.byte	'IED',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'IE_T',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'IE_C',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'IE_S',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'IE_BI',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'E_INFO',0,4
	.word	322
	.byte	6,21,2,35,0,9
	.byte	'IE_UNC',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'IE_SP',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'IE_BS',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'IE_DLMU',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'IE_LPB',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'IE_MTMV',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'reserved_17',0,4
	.word	322
	.byte	15,0,2,35,0,0,10,4,246,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	13074
	.byte	4,2,35,0,0,20,24
	.word	474
	.byte	21,23,0,20,188,3
	.word	474
	.byte	21,187,3,0,8
	.byte	'_Ifx_CPU_PSTR_Bits',0,4,250,6,16,4,9
	.byte	'FRE',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'reserved_1',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'FBE',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'reserved_3',0,4
	.word	322
	.byte	9,20,2,35,0,9
	.byte	'FPE',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'reserved_13',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'FME',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'reserved_15',0,4
	.word	322
	.byte	17,0,2,35,0,0,10,4,254,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	13390
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_PCON1_Bits',0,4,179,6,16,4,9
	.byte	'PCINV',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'PBINV',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'reserved_2',0,4
	.word	322
	.byte	30,0,2,35,0,0,10,4,190,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	13606
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_PCON2_Bits',0,4,187,6,16,4,9
	.byte	'PCACHE_SZE',0,4
	.word	322
	.byte	16,16,2,35,0,9
	.byte	'PSCRATCH_SZE',0,4
	.word	322
	.byte	16,0,2,35,0,0,10,4,198,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	13729
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_PIEAR_Bits',0,4,205,6,16,4,9
	.byte	'TA',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,214,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	13842
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_PIETR_Bits',0,4,211,6,16,4,9
	.byte	'IED',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'IE_T',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'IE_C',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'IE_S',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'IE_BI',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'E_INFO',0,4
	.word	322
	.byte	6,21,2,35,0,9
	.byte	'IE_UNC',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'IE_SP',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'IE_BS',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'IE_ADDR',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'IE_LPB',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'IE_MTMV',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'reserved_17',0,4
	.word	322
	.byte	15,0,2,35,0,0,10,4,222,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	13923
	.byte	4,2,35,0,0,20,232,3
	.word	474
	.byte	21,231,3,0,8
	.byte	'_Ifx_CPU_COMPAT_Bits',0,4,136,1,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	3,29,2,35,0,9
	.byte	'RM',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'SP',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'reserved_5',0,4
	.word	322
	.byte	27,0,2,35,0,0,10,4,238,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	14230
	.byte	4,2,35,0,0,20,252,23
	.word	474
	.byte	21,251,23,0,8
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,4,210,4,16,4,9
	.byte	'TST',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'TCL',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'reserved_2',0,4
	.word	322
	.byte	6,24,2,35,0,9
	.byte	'RM',0,4
	.word	322
	.byte	2,22,2,35,0,9
	.byte	'reserved_10',0,4
	.word	322
	.byte	8,14,2,35,0,9
	.byte	'FXE',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'FUE',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'FZE',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'FVE',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'FIE',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'reserved_23',0,4
	.word	322
	.byte	3,6,2,35,0,9
	.byte	'FX',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'FU',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'FZ',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'FV',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'FI',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'reserved_31',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,150,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	14381
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,4,242,4,16,4,9
	.byte	'PC',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,166,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	14735
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,4,232,4,16,4,9
	.byte	'OPC',0,4
	.word	322
	.byte	8,24,2,35,0,9
	.byte	'FMT',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'reserved_9',0,4
	.word	322
	.byte	7,16,2,35,0,9
	.byte	'DREG',0,4
	.word	322
	.byte	4,12,2,35,0,9
	.byte	'reserved_20',0,4
	.word	322
	.byte	12,0,2,35,0,0,10,4,158,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	14822
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,4,248,4,16,4,9
	.byte	'SRC1',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,174,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	14987
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,4,254,4,16,4,9
	.byte	'SRC2',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,182,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	15078
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,4,132,5,16,4,9
	.byte	'SRC3',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,190,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	15169
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FPU_TRAP',0,4,136,17,25,28,11
	.byte	'CON',0
	.word	14695
	.byte	4,2,35,0,11
	.byte	'PC',0
	.word	14782
	.byte	4,2,35,4,11
	.byte	'OPC',0
	.word	14947
	.byte	4,2,35,8,11
	.byte	'reserved_C',0
	.word	12653
	.byte	4,2,35,12,11
	.byte	'SRC1',0
	.word	15038
	.byte	4,2,35,16,11
	.byte	'SRC2',0
	.word	15129
	.byte	4,2,35,20,11
	.byte	'SRC3',0
	.word	15220
	.byte	4,2,35,24,0,12
	.word	15260
	.byte	20,228,63
	.word	474
	.byte	21,227,63,0,8
	.byte	'_Ifx_CPU_DPR_L_Bits',0,4,212,3,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	3,29,2,35,0,9
	.byte	'LOWBND',0,4
	.word	322
	.byte	29,0,2,35,0,0,10,4,190,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	15401
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DPR_U_Bits',0,4,219,3,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	3,29,2,35,0,9
	.byte	'UPPBND',0,4
	.word	322
	.byte	29,0,2,35,0,0,10,4,198,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	15508
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DPR',0,4,160,17,25,8,11
	.byte	'L',0
	.word	15468
	.byte	4,2,35,0,11
	.byte	'U',0
	.word	15575
	.byte	4,2,35,4,0,20,144,1
	.word	15615
	.byte	21,17,0,12
	.word	15657
	.byte	20,240,30
	.word	474
	.byte	21,239,30,0,8
	.byte	'_Ifx_CPU_CPR_L_Bits',0,4,152,1,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	5,27,2,35,0,9
	.byte	'LOWBND',0,4
	.word	322
	.byte	27,0,2,35,0,0,10,4,254,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	15683
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_CPR_U_Bits',0,4,159,1,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	5,27,2,35,0,9
	.byte	'UPPBND',0,4
	.word	322
	.byte	27,0,2,35,0,0,10,4,134,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	15790
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_CPR',0,4,179,17,25,8,11
	.byte	'L',0
	.word	15750
	.byte	4,2,35,0,11
	.byte	'U',0
	.word	15857
	.byte	4,2,35,4,0,20,80
	.word	15897
	.byte	21,9,0,12
	.word	15939
	.byte	20,176,31
	.word	474
	.byte	21,175,31,0,8
	.byte	'_Ifx_CPU_CPXE_Bits',0,4,174,1,16,4,9
	.byte	'XE_N',0,4
	.word	322
	.byte	10,22,2,35,0,9
	.byte	'reserved_10',0,4
	.word	322
	.byte	22,0,2,35,0,0,10,4,150,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	15964
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DPRE_Bits',0,4,205,3,16,4,9
	.byte	'RE_N',0,4
	.word	322
	.byte	18,14,2,35,0,9
	.byte	'reserved_18',0,4
	.word	322
	.byte	14,0,2,35,0,0,10,4,182,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	16069
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DPWE_Bits',0,4,226,3,16,4,9
	.byte	'WE_N',0,4
	.word	322
	.byte	18,14,2,35,0,9
	.byte	'reserved_18',0,4
	.word	322
	.byte	14,0,2,35,0,0,10,4,206,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	16174
	.byte	4,2,35,0,0,20,16
	.word	474
	.byte	21,15,0,20,152,7
	.word	474
	.byte	21,151,7,0,8
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,4,183,9,16,4,9
	.byte	'TEXP0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'TEXP1',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'TEXP2',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'reserved_3',0,4
	.word	322
	.byte	13,16,2,35,0,9
	.byte	'TTRAP',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'reserved_17',0,4
	.word	322
	.byte	15,0,2,35,0,0,10,4,246,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	16299
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,4,251,9,16,4,9
	.byte	'TIMER',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,182,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	16481
	.byte	4,2,35,0,0,20,12
	.word	16529
	.byte	21,2,0,8
	.byte	'_Ifx_CPU_TPS',0,4,198,17,25,16,11
	.byte	'CON',0
	.word	16441
	.byte	4,2,35,0,11
	.byte	'TIMER',0
	.word	16569
	.byte	12,2,35,4,0,12
	.word	16578
	.byte	20,48
	.word	474
	.byte	21,47,0,8
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,4,208,9,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	4,28,2,35,0,9
	.byte	'ENTRY_LVAL',0,4
	.word	322
	.byte	8,20,2,35,0,9
	.byte	'reserved_12',0,4
	.word	322
	.byte	20,0,2,35,0,0,10,4,142,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	16640
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,4,201,9,16,4,9
	.byte	'ENTRY_CVAL',0,4
	.word	322
	.byte	12,20,2,35,0,9
	.byte	'reserved_12',0,4
	.word	322
	.byte	20,0,2,35,0,0,10,4,134,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	16789
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,4,223,9,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	4,28,2,35,0,9
	.byte	'EXIT_LVAL',0,4
	.word	322
	.byte	20,8,2,35,0,9
	.byte	'reserved_24',0,4
	.word	322
	.byte	8,0,2,35,0,0,10,4,158,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	16916
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,4,216,9,16,4,9
	.byte	'EXIT_CVAL',0,4
	.word	322
	.byte	24,8,2,35,0,9
	.byte	'reserved_24',0,4
	.word	322
	.byte	8,0,2,35,0,0,10,4,150,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	17063
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,4,194,9,16,4,9
	.byte	'EXTIM_CLASS_EN',0,4
	.word	322
	.byte	8,24,2,35,0,9
	.byte	'reserved_8',0,4
	.word	322
	.byte	24,0,2,35,0,0,10,4,254,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	17188
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_TPS_EXTIM_STAT_Bits',0,4,238,9,16,4,9
	.byte	'EXIT_TIN',0,4
	.word	322
	.byte	8,24,2,35,0,9
	.byte	'EXIT_CLASS',0,4
	.word	322
	.byte	3,21,2,35,0,9
	.byte	'reserved_11',0,4
	.word	322
	.byte	4,17,2,35,0,9
	.byte	'EXIT_AT',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'ENTRY_TIN',0,4
	.word	322
	.byte	8,8,2,35,0,9
	.byte	'ENTRY_CLASS',0,4
	.word	322
	.byte	3,5,2,35,0,9
	.byte	'reserved_27',0,4
	.word	322
	.byte	4,1,2,35,0,9
	.byte	'ENTRY_AT',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,174,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	17316
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_TPS_EXTIM_FCX_Bits',0,4,231,9,16,4,9
	.byte	'EXIT_FCX',0,4
	.word	322
	.byte	20,12,2,35,0,9
	.byte	'reserved_20',0,4
	.word	322
	.byte	12,0,2,35,0,0,10,4,166,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	17563
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_TPS_EXTIM',0,4,217,17,25,28,11
	.byte	'ENTRY_LVAL',0
	.word	16749
	.byte	4,2,35,0,11
	.byte	'ENTRY_CVAL',0
	.word	16876
	.byte	4,2,35,4,11
	.byte	'EXIT_LVAL',0
	.word	17023
	.byte	4,2,35,8,11
	.byte	'EXIT_CVAL',0
	.word	17148
	.byte	4,2,35,12,11
	.byte	'CLASS_EN',0
	.word	17276
	.byte	4,2,35,16,11
	.byte	'STAT',0
	.word	17523
	.byte	4,2,35,20,11
	.byte	'FCX',0
	.word	17641
	.byte	4,2,35,24,0,12
	.word	17681
	.byte	20,164,23
	.word	474
	.byte	21,163,23,0,8
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,4,149,10,16,4,9
	.byte	'EVTA',0,4
	.word	322
	.byte	3,29,2,35,0,9
	.byte	'BBM',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'BOD',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'SUSP',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'CNT',0,4
	.word	322
	.byte	2,24,2,35,0,9
	.byte	'reserved_8',0,4
	.word	322
	.byte	4,20,2,35,0,9
	.byte	'TYP',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'RNG',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'reserved_14',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'ASI_EN',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'ASI',0,4
	.word	322
	.byte	5,11,2,35,0,9
	.byte	'reserved_21',0,4
	.word	322
	.byte	6,5,2,35,0,9
	.byte	'AST',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'ALD',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'reserved_29',0,4
	.word	322
	.byte	3,0,2,35,0,0,10,4,206,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	17846
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,4,143,10,16,4,9
	.byte	'ADDR',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,198,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	18175
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_TR',0,4,241,17,25,8,11
	.byte	'EVT',0
	.word	18135
	.byte	4,2,35,0,11
	.byte	'ADR',0
	.word	18219
	.byte	4,2,35,4,0,20,64
	.word	18259
	.byte	21,7,0,12
	.word	18304
	.byte	20,192,23
	.word	474
	.byte	21,191,23,0,8
	.byte	'_Ifx_CPU_CCTRL_Bits',0,4,125,16,4,9
	.byte	'CM',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'CE',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'M1',0,4
	.word	322
	.byte	3,27,2,35,0,9
	.byte	'M2',0,4
	.word	322
	.byte	3,24,2,35,0,9
	.byte	'M3',0,4
	.word	322
	.byte	3,21,2,35,0,9
	.byte	'reserved_11',0,4
	.word	322
	.byte	21,0,2,35,0,0,10,4,230,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	18329
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_CCNT_Bits',0,4,118,16,4,9
	.byte	'COUNTVALUE',0,4
	.word	322
	.byte	31,1,2,35,0,9
	.byte	'SOVF',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,222,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	18488
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_ICNT_Bits',0,4,138,5,16,4,9
	.byte	'COUNTVALUE',0,4
	.word	322
	.byte	31,1,2,35,0,9
	.byte	'SOVF',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,198,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	18591
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_M1CNT_Bits',0,4,137,6,16,4,9
	.byte	'COUNTVALUE',0,4
	.word	322
	.byte	31,1,2,35,0,9
	.byte	'SOVF',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,142,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	18695
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_M2CNT_Bits',0,4,144,6,16,4,9
	.byte	'COUNTVALUE',0,4
	.word	322
	.byte	31,1,2,35,0,9
	.byte	'SOVF',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,150,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	18800
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_M3CNT_Bits',0,4,151,6,16,4,9
	.byte	'COUNTVALUE',0,4
	.word	322
	.byte	31,1,2,35,0,9
	.byte	'SOVF',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,158,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	18905
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DBGSR_Bits',0,4,219,1,16,4,9
	.byte	'DE',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'HALT',0,4
	.word	322
	.byte	2,29,2,35,0,9
	.byte	'SIH',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'SUSP',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'reserved_5',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'PREVSUSP',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'PEVT',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EVTSRC',0,4
	.word	322
	.byte	5,19,2,35,0,9
	.byte	'reserved_13',0,4
	.word	322
	.byte	19,0,2,35,0,0,10,4,190,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	19010
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_EXEVT_Bits',0,4,255,3,16,4,9
	.byte	'EVTA',0,4
	.word	322
	.byte	3,29,2,35,0,9
	.byte	'BBM',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'BOD',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'SUSP',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'CNT',0,4
	.word	322
	.byte	2,24,2,35,0,9
	.byte	'reserved_8',0,4
	.word	322
	.byte	24,0,2,35,0,0,10,4,222,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	19237
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_CREVT_Bits',0,4,181,1,16,4,9
	.byte	'EVTA',0,4
	.word	322
	.byte	3,29,2,35,0,9
	.byte	'BBM',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'BOD',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'SUSP',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'CNT',0,4
	.word	322
	.byte	2,24,2,35,0,9
	.byte	'reserved_8',0,4
	.word	322
	.byte	24,0,2,35,0,0,10,4,158,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	19403
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_SWEVT_Bits',0,4,147,9,16,4,9
	.byte	'EVTA',0,4
	.word	322
	.byte	3,29,2,35,0,9
	.byte	'BBM',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'BOD',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'SUSP',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'CNT',0,4
	.word	322
	.byte	2,24,2,35,0,9
	.byte	'reserved_8',0,4
	.word	322
	.byte	24,0,2,35,0,0,10,4,222,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	19569
	.byte	4,2,35,0,0,20,28
	.word	474
	.byte	21,27,0,8
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,4,129,10,16,4,9
	.byte	'T0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'T1',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'T2',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'T3',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'T4',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'T5',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'T6',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'T7',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'reserved_8',0,4
	.word	322
	.byte	24,0,2,35,0,0,10,4,190,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	19744
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DMS_Bits',0,4,198,3,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'DMSVALUE',0,4
	.word	322
	.byte	31,0,2,35,0,0,10,4,174,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	19948
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DCX_Bits',0,4,255,1,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	6,26,2,35,0,9
	.byte	'DCXVALUE',0,4
	.word	322
	.byte	26,0,2,35,0,0,10,4,222,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	20055
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,4,233,1,16,4,9
	.byte	'DTA',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'reserved_1',0,4
	.word	322
	.byte	31,0,2,35,0,0,10,4,198,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	20162
	.byte	4,2,35,0,0,20,180,1
	.word	474
	.byte	21,179,1,0,8
	.byte	'_Ifx_CPU_PCXI_Bits',0,4,194,6,16,4,9
	.byte	'PCXO',0,4
	.word	322
	.byte	16,16,2,35,0,9
	.byte	'PCXS',0,4
	.word	322
	.byte	4,12,2,35,0,9
	.byte	'UL',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'PIE',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'PCPN',0,4
	.word	322
	.byte	8,2,2,35,0,9
	.byte	'reserved_30',0,4
	.word	322
	.byte	2,0,2,35,0,0,10,4,206,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	20278
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_PSW_Bits',0,4,135,7,16,4,9
	.byte	'CDC',0,4
	.word	322
	.byte	7,25,2,35,0,9
	.byte	'CDE',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'GW',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'IS',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'IO',0,4
	.word	322
	.byte	2,20,2,35,0,9
	.byte	'PRS',0,4
	.word	322
	.byte	2,18,2,35,0,9
	.byte	'S',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'PRS2',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'reserved_16',0,4
	.word	322
	.byte	8,8,2,35,0,9
	.byte	'USB',0,4
	.word	322
	.byte	8,0,2,35,0,0,10,4,134,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	20444
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_PC_Bits',0,4,164,6,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'PC',0,4
	.word	322
	.byte	31,0,2,35,0,0,10,4,174,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	20663
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_SYSCON_Bits',0,4,158,9,16,4,9
	.byte	'FCDSF',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'PROTEN',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'TPROTEN',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'IS',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'TS',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'reserved_5',0,4
	.word	322
	.byte	3,24,2,35,0,9
	.byte	'ESDIS',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'reserved_9',0,4
	.word	322
	.byte	7,16,2,35,0,9
	.byte	'U1_IED',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'U1_IOS',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'reserved_18',0,4
	.word	322
	.byte	6,8,2,35,0,9
	.byte	'BHALT',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'reserved_25',0,4
	.word	322
	.byte	7,0,2,35,0,0,10,4,230,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	20763
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,4,166,1,16,4,9
	.byte	'MOD_REV',0,4
	.word	322
	.byte	8,24,2,35,0,9
	.byte	'MOD_32B',0,4
	.word	322
	.byte	8,16,2,35,0,9
	.byte	'MOD',0,4
	.word	322
	.byte	16,0,2,35,0,0,10,4,142,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	21073
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,4,145,1,16,4,9
	.byte	'CORE_ID',0,4
	.word	322
	.byte	3,29,2,35,0,9
	.byte	'reserved_3',0,4
	.word	322
	.byte	29,0,2,35,0,0,10,4,246,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	21194
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_BIV_Bits',0,4,76,16,4,9
	.byte	'VSS',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'BIV',0,4
	.word	322
	.byte	31,0,2,35,0,0,10,4,182,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	21304
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_BTV_Bits',0,4,111,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'BTV',0,4
	.word	322
	.byte	31,0,2,35,0,0,10,4,214,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	21398
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_ISP_Bits',0,4,155,5,16,4,9
	.byte	'ISP',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,214,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	21499
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_ICR_Bits',0,4,145,5,16,4,9
	.byte	'CCPN',0,4
	.word	322
	.byte	8,24,2,35,0,9
	.byte	'reserved_8',0,4
	.word	322
	.byte	7,17,2,35,0,9
	.byte	'IE',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'PIPN',0,4
	.word	322
	.byte	8,8,2,35,0,9
	.byte	'reserved_24',0,4
	.word	322
	.byte	8,0,2,35,0,0,10,4,206,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	21579
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FCX_Bits',0,4,138,4,16,4,9
	.byte	'FCXO',0,4
	.word	322
	.byte	16,16,2,35,0,9
	.byte	'FCXS',0,4
	.word	322
	.byte	4,12,2,35,0,9
	.byte	'reserved_20',0,4
	.word	322
	.byte	12,0,2,35,0,0,10,4,230,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	21735
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_LCX_Bits',0,4,183,5,16,4,9
	.byte	'LCXO',0,4
	.word	322
	.byte	16,16,2,35,0,9
	.byte	'LCXS',0,4
	.word	322
	.byte	4,12,2,35,0,9
	.byte	'reserved_20',0,4
	.word	322
	.byte	12,0,2,35,0,0,10,4,246,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	21855
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,4,192,1,16,4,9
	.byte	'CID',0,4
	.word	322
	.byte	3,29,2,35,0,9
	.byte	'reserved_3',0,4
	.word	322
	.byte	29,0,2,35,0,0,10,4,166,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	21975
	.byte	4,2,35,0,0,20,172,1
	.word	474
	.byte	21,171,1,0,8
	.byte	'_Ifx_CPU_D_Bits',0,4,199,1,16,4,9
	.byte	'DATA',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,174,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	22091
	.byte	4,2,35,0,0,20,64
	.word	22130
	.byte	21,15,0,20,64
	.word	474
	.byte	21,63,0,8
	.byte	'_Ifx_CPU_A_Bits',0,4,70,16,4,9
	.byte	'ADDR',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,174,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	22188
	.byte	4,2,35,0,0,20,64
	.word	22226
	.byte	21,15,0,8
	.byte	'_Ifx_CPU',0,4,132,18,25,128,128,8,11
	.byte	'reserved_0',0
	.word	1678
	.byte	128,34,2,35,0,11
	.byte	'FLASHCON0',0
	.word	1875
	.byte	4,3,35,128,34,11
	.byte	'FLASHCON1',0
	.word	2074
	.byte	4,3,35,132,34,11
	.byte	'FLASHCON2',0
	.word	2382
	.byte	4,3,35,136,34,11
	.byte	'FLASHCON3',0
	.word	2695
	.byte	4,3,35,140,34,11
	.byte	'FLASHCON4',0
	.word	2804
	.byte	4,3,35,144,34,11
	.byte	'reserved_1114',0
	.word	2844
	.byte	236,253,2,3,35,148,34,11
	.byte	'KRST0',0
	.word	2940
	.byte	4,4,35,128,160,3,11
	.byte	'KRST1',0
	.word	3044
	.byte	4,4,35,132,160,3,11
	.byte	'KRSTCLR',0
	.word	3150
	.byte	4,4,35,136,160,3,11
	.byte	'reserved_D00C',0
	.word	3190
	.byte	244,31,4,35,140,160,3,11
	.byte	'RGN',0
	.word	4657
	.byte	128,1,4,35,128,192,3,11
	.byte	'reserved_E080',0
	.word	4662
	.byte	8,4,35,128,193,3,11
	.byte	'SPR_SPROT_RGNACCENA_R0',0
	.word	5216
	.byte	4,4,35,136,193,3,11
	.byte	'SPR_SPROT_RGNACCENB_R0',0
	.word	5811
	.byte	4,4,35,140,193,3,11
	.byte	'reserved_E090',0
	.word	4662
	.byte	8,4,35,144,193,3,11
	.byte	'SPR_SPROT_RGNACCENA_R1',0
	.word	5216
	.byte	4,4,35,152,193,3,11
	.byte	'SPR_SPROT_RGNACCENB_R1',0
	.word	5811
	.byte	4,4,35,156,193,3,11
	.byte	'reserved_E0A0',0
	.word	4662
	.byte	8,4,35,160,193,3,11
	.byte	'SPR_SPROT_RGNACCENA_R2',0
	.word	5216
	.byte	4,4,35,168,193,3,11
	.byte	'SPR_SPROT_RGNACCENB_R2',0
	.word	5811
	.byte	4,4,35,172,193,3,11
	.byte	'reserved_E0B0',0
	.word	4662
	.byte	8,4,35,176,193,3,11
	.byte	'SPR_SPROT_RGNACCENA_R3',0
	.word	5216
	.byte	4,4,35,184,193,3,11
	.byte	'SPR_SPROT_RGNACCENB_R3',0
	.word	5811
	.byte	4,4,35,188,193,3,11
	.byte	'reserved_E0C0',0
	.word	4662
	.byte	8,4,35,192,193,3,11
	.byte	'SPR_SPROT_RGNACCENA_R4',0
	.word	5216
	.byte	4,4,35,200,193,3,11
	.byte	'SPR_SPROT_RGNACCENB_R4',0
	.word	5811
	.byte	4,4,35,204,193,3,11
	.byte	'reserved_E0D0',0
	.word	4662
	.byte	8,4,35,208,193,3,11
	.byte	'SPR_SPROT_RGNACCENA_R5',0
	.word	5216
	.byte	4,4,35,216,193,3,11
	.byte	'SPR_SPROT_RGNACCENB_R5',0
	.word	5811
	.byte	4,4,35,220,193,3,11
	.byte	'reserved_E0E0',0
	.word	4662
	.byte	8,4,35,224,193,3,11
	.byte	'SPR_SPROT_RGNACCENA_R6',0
	.word	5216
	.byte	4,4,35,232,193,3,11
	.byte	'SPR_SPROT_RGNACCENB_R6',0
	.word	5811
	.byte	4,4,35,236,193,3,11
	.byte	'reserved_E0F0',0
	.word	4662
	.byte	8,4,35,240,193,3,11
	.byte	'SPR_SPROT_RGNACCENA_R7',0
	.word	5216
	.byte	4,4,35,248,193,3,11
	.byte	'SPR_SPROT_RGNACCENB_R7',0
	.word	5811
	.byte	4,4,35,252,193,3,11
	.byte	'SFR_SPROT_ACCENA_W',0
	.word	6393
	.byte	4,4,35,128,194,3,11
	.byte	'SFR_SPROT_ACCENB_W',0
	.word	6985
	.byte	4,4,35,132,194,3,11
	.byte	'reserved_E108',0
	.word	4662
	.byte	8,4,35,136,194,3,11
	.byte	'LPB_SPROT_ACCENA_R',0
	.word	7567
	.byte	4,4,35,144,194,3,11
	.byte	'LPB_SPROT_ACCENB_R',0
	.word	8159
	.byte	4,4,35,148,194,3,11
	.byte	'reserved_E118',0
	.word	8199
	.byte	232,1,4,35,152,194,3,11
	.byte	'DLMU_SPROT_RGNLA0',0
	.word	8286
	.byte	4,4,35,128,196,3,11
	.byte	'DLMU_SPROT_RGNUA0',0
	.word	8402
	.byte	4,4,35,132,196,3,11
	.byte	'DLMU_SPROT_RGNACCENA_W0',0
	.word	8988
	.byte	4,4,35,136,196,3,11
	.byte	'DLMU_SPROT_RGNACCENB_W0',0
	.word	9584
	.byte	4,4,35,140,196,3,11
	.byte	'DLMU_SPROT_RGNLA1',0
	.word	8286
	.byte	4,4,35,144,196,3,11
	.byte	'DLMU_SPROT_RGNUA1',0
	.word	8402
	.byte	4,4,35,148,196,3,11
	.byte	'DLMU_SPROT_RGNACCENA_W1',0
	.word	8988
	.byte	4,4,35,152,196,3,11
	.byte	'DLMU_SPROT_RGNACCENB_W1',0
	.word	9584
	.byte	4,4,35,156,196,3,11
	.byte	'DLMU_SPROT_RGNLA2',0
	.word	8286
	.byte	4,4,35,160,196,3,11
	.byte	'DLMU_SPROT_RGNUA2',0
	.word	8402
	.byte	4,4,35,164,196,3,11
	.byte	'DLMU_SPROT_RGNACCENA_W2',0
	.word	8988
	.byte	4,4,35,168,196,3,11
	.byte	'DLMU_SPROT_RGNACCENB_W2',0
	.word	9584
	.byte	4,4,35,172,196,3,11
	.byte	'DLMU_SPROT_RGNLA3',0
	.word	8286
	.byte	4,4,35,176,196,3,11
	.byte	'DLMU_SPROT_RGNUA3',0
	.word	8402
	.byte	4,4,35,180,196,3,11
	.byte	'DLMU_SPROT_RGNACCENA_W3',0
	.word	8988
	.byte	4,4,35,184,196,3,11
	.byte	'DLMU_SPROT_RGNACCENB_W3',0
	.word	9584
	.byte	4,4,35,188,196,3,11
	.byte	'DLMU_SPROT_RGNLA4',0
	.word	8286
	.byte	4,4,35,192,196,3,11
	.byte	'DLMU_SPROT_RGNUA4',0
	.word	8402
	.byte	4,4,35,196,196,3,11
	.byte	'DLMU_SPROT_RGNACCENA_W4',0
	.word	8988
	.byte	4,4,35,200,196,3,11
	.byte	'DLMU_SPROT_RGNACCENB_W4',0
	.word	9584
	.byte	4,4,35,204,196,3,11
	.byte	'DLMU_SPROT_RGNLA5',0
	.word	8286
	.byte	4,4,35,208,196,3,11
	.byte	'DLMU_SPROT_RGNUA5',0
	.word	8402
	.byte	4,4,35,212,196,3,11
	.byte	'DLMU_SPROT_RGNACCENA_W5',0
	.word	8988
	.byte	4,4,35,216,196,3,11
	.byte	'DLMU_SPROT_RGNACCENB_W5',0
	.word	9584
	.byte	4,4,35,220,196,3,11
	.byte	'DLMU_SPROT_RGNLA6',0
	.word	8286
	.byte	4,4,35,224,196,3,11
	.byte	'DLMU_SPROT_RGNUA6',0
	.word	8402
	.byte	4,4,35,228,196,3,11
	.byte	'DLMU_SPROT_RGNACCENA_W6',0
	.word	8988
	.byte	4,4,35,232,196,3,11
	.byte	'DLMU_SPROT_RGNACCENB_W6',0
	.word	9584
	.byte	4,4,35,236,196,3,11
	.byte	'DLMU_SPROT_RGNLA7',0
	.word	8286
	.byte	4,4,35,240,196,3,11
	.byte	'DLMU_SPROT_RGNUA7',0
	.word	8402
	.byte	4,4,35,244,196,3,11
	.byte	'DLMU_SPROT_RGNACCENA_W7',0
	.word	8988
	.byte	4,4,35,248,196,3,11
	.byte	'DLMU_SPROT_RGNACCENB_W7',0
	.word	9584
	.byte	4,4,35,252,196,3,11
	.byte	'reserved_E280',0
	.word	4662
	.byte	8,4,35,128,197,3,11
	.byte	'DLMU_SPROT_RGNACCENA_R0',0
	.word	10170
	.byte	4,4,35,136,197,3,11
	.byte	'DLMU_SPROT_RGNACCENB_R0',0
	.word	10766
	.byte	4,4,35,140,197,3,11
	.byte	'reserved_E290',0
	.word	4662
	.byte	8,4,35,144,197,3,11
	.byte	'DLMU_SPROT_RGNACCENA_R1',0
	.word	10170
	.byte	4,4,35,152,197,3,11
	.byte	'DLMU_SPROT_RGNACCENB_R1',0
	.word	10766
	.byte	4,4,35,156,197,3,11
	.byte	'reserved_E2A0',0
	.word	4662
	.byte	8,4,35,160,197,3,11
	.byte	'DLMU_SPROT_RGNACCENA_R2',0
	.word	10170
	.byte	4,4,35,168,197,3,11
	.byte	'DLMU_SPROT_RGNACCENB_R2',0
	.word	10766
	.byte	4,4,35,172,197,3,11
	.byte	'reserved_E2B0',0
	.word	4662
	.byte	8,4,35,176,197,3,11
	.byte	'DLMU_SPROT_RGNACCENA_R3',0
	.word	10170
	.byte	4,4,35,184,197,3,11
	.byte	'DLMU_SPROT_RGNACCENB_R3',0
	.word	10766
	.byte	4,4,35,188,197,3,11
	.byte	'reserved_E2C0',0
	.word	4662
	.byte	8,4,35,192,197,3,11
	.byte	'DLMU_SPROT_RGNACCENA_R4',0
	.word	10170
	.byte	4,4,35,200,197,3,11
	.byte	'DLMU_SPROT_RGNACCENB_R4',0
	.word	10766
	.byte	4,4,35,204,197,3,11
	.byte	'reserved_E2D0',0
	.word	4662
	.byte	8,4,35,208,197,3,11
	.byte	'DLMU_SPROT_RGNACCENA_R5',0
	.word	10170
	.byte	4,4,35,216,197,3,11
	.byte	'DLMU_SPROT_RGNACCENB_R5',0
	.word	10766
	.byte	4,4,35,220,197,3,11
	.byte	'reserved_E2E0',0
	.word	4662
	.byte	8,4,35,224,197,3,11
	.byte	'DLMU_SPROT_RGNACCENA_R6',0
	.word	10170
	.byte	4,4,35,232,197,3,11
	.byte	'DLMU_SPROT_RGNACCENB_R6',0
	.word	10766
	.byte	4,4,35,236,197,3,11
	.byte	'reserved_E2F0',0
	.word	4662
	.byte	8,4,35,240,197,3,11
	.byte	'DLMU_SPROT_RGNACCENA_R7',0
	.word	10170
	.byte	4,4,35,248,197,3,11
	.byte	'DLMU_SPROT_RGNACCENB_R7',0
	.word	10766
	.byte	4,4,35,252,197,3,11
	.byte	'reserved_E300',0
	.word	10806
	.byte	128,48,4,35,128,198,3,11
	.byte	'OSEL',0
	.word	10863
	.byte	4,4,35,128,246,3,11
	.byte	'reserved_FB04',0
	.word	10903
	.byte	12,4,35,132,246,3,11
	.byte	'BLK',0
	.word	11449
	.byte	128,3,4,35,144,246,3,11
	.byte	'reserved_FC90',0
	.word	11454
	.byte	160,39,4,35,144,249,3,11
	.byte	'SEGEN',0
	.word	11565
	.byte	4,4,35,176,160,4,11
	.byte	'reserved_11034',0
	.word	11605
	.byte	208,223,1,4,35,180,160,4,11
	.byte	'TASK_ASI',0
	.word	11685
	.byte	4,4,35,132,128,6,11
	.byte	'reserved_18008',0
	.word	11725
	.byte	248,1,4,35,136,128,6,11
	.byte	'PMA0',0
	.word	11800
	.byte	4,4,35,128,130,6,11
	.byte	'PMA1',0
	.word	11904
	.byte	4,4,35,132,130,6,11
	.byte	'PMA2',0
	.word	12008
	.byte	4,4,35,136,130,6,11
	.byte	'reserved_1810C',0
	.word	12048
	.byte	244,29,4,35,140,130,6,11
	.byte	'DCON2',0
	.word	12132
	.byte	4,4,35,128,160,6,11
	.byte	'reserved_19004',0
	.word	4662
	.byte	8,4,35,132,160,6,11
	.byte	'SMACON',0
	.word	12261
	.byte	4,4,35,140,160,6,11
	.byte	'DSTR',0
	.word	12613
	.byte	4,4,35,144,160,6,11
	.byte	'reserved_19014',0
	.word	12653
	.byte	4,4,35,148,160,6,11
	.byte	'DATR',0
	.word	12861
	.byte	4,4,35,152,160,6,11
	.byte	'DEADD',0
	.word	12953
	.byte	4,4,35,156,160,6,11
	.byte	'DIEAR',0
	.word	13034
	.byte	4,4,35,160,160,6,11
	.byte	'DIETR',0
	.word	13330
	.byte	4,4,35,164,160,6,11
	.byte	'reserved_19028',0
	.word	13370
	.byte	24,4,35,168,160,6,11
	.byte	'DCON0',0
	.word	1638
	.byte	4,4,35,192,160,6,11
	.byte	'reserved_19044',0
	.word	13379
	.byte	188,3,4,35,196,160,6,11
	.byte	'PSTR',0
	.word	13566
	.byte	4,4,35,128,164,6,11
	.byte	'PCON1',0
	.word	13689
	.byte	4,4,35,132,164,6,11
	.byte	'PCON2',0
	.word	13802
	.byte	4,4,35,136,164,6,11
	.byte	'PCON0',0
	.word	1510
	.byte	4,4,35,140,164,6,11
	.byte	'PIEAR',0
	.word	13883
	.byte	4,4,35,144,164,6,11
	.byte	'PIETR',0
	.word	14179
	.byte	4,4,35,148,164,6,11
	.byte	'reserved_19218',0
	.word	14219
	.byte	232,3,4,35,152,164,6,11
	.byte	'COMPAT',0
	.word	14330
	.byte	4,4,35,128,168,6,11
	.byte	'reserved_19404',0
	.word	14370
	.byte	252,23,4,35,132,168,6,11
	.byte	'FPU_TRAP',0
	.word	15385
	.byte	28,4,35,128,192,6,11
	.byte	'reserved_1A01C',0
	.word	15390
	.byte	228,63,4,35,156,192,6,11
	.byte	'DPR',0
	.word	15667
	.byte	144,1,4,35,128,128,7,11
	.byte	'reserved_1C090',0
	.word	15672
	.byte	240,30,4,35,144,129,7,11
	.byte	'CPR',0
	.word	15948
	.byte	80,4,35,128,160,7,11
	.byte	'reserved_1D050',0
	.word	15953
	.byte	176,31,4,35,208,160,7,11
	.byte	'CPXE_0',0
	.word	16029
	.byte	4,4,35,128,192,7,11
	.byte	'CPXE_1',0
	.word	16029
	.byte	4,4,35,132,192,7,11
	.byte	'CPXE_2',0
	.word	16029
	.byte	4,4,35,136,192,7,11
	.byte	'CPXE_3',0
	.word	16029
	.byte	4,4,35,140,192,7,11
	.byte	'DPRE_0',0
	.word	16134
	.byte	4,4,35,144,192,7,11
	.byte	'DPRE_1',0
	.word	16134
	.byte	4,4,35,148,192,7,11
	.byte	'DPRE_2',0
	.word	16134
	.byte	4,4,35,152,192,7,11
	.byte	'DPRE_3',0
	.word	16134
	.byte	4,4,35,156,192,7,11
	.byte	'DPWE_0',0
	.word	16239
	.byte	4,4,35,160,192,7,11
	.byte	'DPWE_1',0
	.word	16239
	.byte	4,4,35,164,192,7,11
	.byte	'DPWE_2',0
	.word	16239
	.byte	4,4,35,168,192,7,11
	.byte	'DPWE_3',0
	.word	16239
	.byte	4,4,35,172,192,7,11
	.byte	'reserved_1E030',0
	.word	16279
	.byte	16,4,35,176,192,7,11
	.byte	'CPXE_4',0
	.word	16029
	.byte	4,4,35,192,192,7,11
	.byte	'CPXE_5',0
	.word	16029
	.byte	4,4,35,196,192,7,11
	.byte	'reserved_1E048',0
	.word	4662
	.byte	8,4,35,200,192,7,11
	.byte	'DPRE_4',0
	.word	16134
	.byte	4,4,35,208,192,7,11
	.byte	'DPRE_5',0
	.word	16134
	.byte	4,4,35,212,192,7,11
	.byte	'reserved_1E058',0
	.word	4662
	.byte	8,4,35,216,192,7,11
	.byte	'DPWE_4',0
	.word	16239
	.byte	4,4,35,224,192,7,11
	.byte	'DPWE_5',0
	.word	16239
	.byte	4,4,35,228,192,7,11
	.byte	'reserved_1E068',0
	.word	16288
	.byte	152,7,4,35,232,192,7,11
	.byte	'TPS',0
	.word	16626
	.byte	16,4,35,128,200,7,11
	.byte	'reserved_1E410',0
	.word	16631
	.byte	48,4,35,144,200,7,11
	.byte	'TPS_EXTIM',0
	.word	17830
	.byte	28,4,35,192,200,7,11
	.byte	'reserved_1E45C',0
	.word	17835
	.byte	164,23,4,35,220,200,7,11
	.byte	'TR',0
	.word	18313
	.byte	64,4,35,128,224,7,11
	.byte	'reserved_1F040',0
	.word	18318
	.byte	192,23,4,35,192,224,7,11
	.byte	'CCTRL',0
	.word	18448
	.byte	4,4,35,128,248,7,11
	.byte	'CCNT',0
	.word	18551
	.byte	4,4,35,132,248,7,11
	.byte	'ICNT',0
	.word	18655
	.byte	4,4,35,136,248,7,11
	.byte	'M1CNT',0
	.word	18760
	.byte	4,4,35,140,248,7,11
	.byte	'M2CNT',0
	.word	18865
	.byte	4,4,35,144,248,7,11
	.byte	'M3CNT',0
	.word	18970
	.byte	4,4,35,148,248,7,11
	.byte	'reserved_1FC18',0
	.word	8199
	.byte	232,1,4,35,152,248,7,11
	.byte	'DBGSR',0
	.word	19197
	.byte	4,4,35,128,250,7,11
	.byte	'reserved_1FD04',0
	.word	12653
	.byte	4,4,35,132,250,7,11
	.byte	'EXEVT',0
	.word	19363
	.byte	4,4,35,136,250,7,11
	.byte	'CREVT',0
	.word	19529
	.byte	4,4,35,140,250,7,11
	.byte	'SWEVT',0
	.word	19695
	.byte	4,4,35,144,250,7,11
	.byte	'reserved_1FD14',0
	.word	19735
	.byte	28,4,35,148,250,7,11
	.byte	'TRIG_ACC',0
	.word	19908
	.byte	4,4,35,176,250,7,11
	.byte	'reserved_1FD34',0
	.word	10903
	.byte	12,4,35,180,250,7,11
	.byte	'DMS',0
	.word	20015
	.byte	4,4,35,192,250,7,11
	.byte	'DCX',0
	.word	20122
	.byte	4,4,35,196,250,7,11
	.byte	'DBGTCR',0
	.word	20227
	.byte	4,4,35,200,250,7,11
	.byte	'reserved_1FD4C',0
	.word	20267
	.byte	180,1,4,35,204,250,7,11
	.byte	'PCXI',0
	.word	20404
	.byte	4,4,35,128,252,7,11
	.byte	'PSW',0
	.word	20623
	.byte	4,4,35,132,252,7,11
	.byte	'PC',0
	.word	20723
	.byte	4,4,35,136,252,7,11
	.byte	'reserved_1FE0C',0
	.word	4662
	.byte	8,4,35,140,252,7,11
	.byte	'SYSCON',0
	.word	21033
	.byte	4,4,35,148,252,7,11
	.byte	'CPU_ID',0
	.word	21154
	.byte	4,4,35,152,252,7,11
	.byte	'CORE_ID',0
	.word	21264
	.byte	4,4,35,156,252,7,11
	.byte	'BIV',0
	.word	21358
	.byte	4,4,35,160,252,7,11
	.byte	'BTV',0
	.word	21459
	.byte	4,4,35,164,252,7,11
	.byte	'ISP',0
	.word	21539
	.byte	4,4,35,168,252,7,11
	.byte	'ICR',0
	.word	21695
	.byte	4,4,35,172,252,7,11
	.byte	'reserved_1FE30',0
	.word	4662
	.byte	8,4,35,176,252,7,11
	.byte	'FCX',0
	.word	21815
	.byte	4,4,35,184,252,7,11
	.byte	'LCX',0
	.word	21935
	.byte	4,4,35,188,252,7,11
	.byte	'reserved_1FE40',0
	.word	16279
	.byte	16,4,35,192,252,7,11
	.byte	'CUS_ID',0
	.word	22040
	.byte	4,4,35,208,252,7,11
	.byte	'reserved_1FE54',0
	.word	22080
	.byte	172,1,4,35,212,252,7,11
	.byte	'D',0
	.word	22170
	.byte	64,4,35,128,254,7,11
	.byte	'reserved_1FF40',0
	.word	22179
	.byte	64,4,35,192,254,7,11
	.byte	'A',0
	.word	22266
	.byte	64,4,35,128,255,7,11
	.byte	'reserved_1FFC0',0
	.word	22179
	.byte	64,4,35,192,255,7,0,12
	.word	22275
	.byte	5
	.word	27373
	.byte	22
	.byte	'Ifx_Ssw_startCore',0,2,244,1,13,1,1,1,1,6
	.byte	'cpu',0,2,244,1,40
	.word	27378
	.byte	6
	.byte	'programCounter',0,2,244,1,58
	.word	299
	.byte	0,7
	.byte	'float',0,4,4,23
	.byte	'Ifx_Ssw_getStmFrequency',0,2,255,1,14
	.word	27448
	.byte	1,1,1,1,18
	.word	1061
	.byte	19
	.word	1110
	.byte	3,0,18
	.word	1130
	.byte	19
	.word	1168
	.byte	19
	.word	1186
	.byte	3,0,18
	.word	1206
	.byte	19
	.word	1242
	.byte	19
	.word	1260
	.byte	3,0,18
	.word	1285
	.byte	19
	.word	1309
	.byte	19
	.word	1327
	.byte	14,24
	.word	174
	.byte	25
	.word	195
	.byte	0,3,0,0,26
	.byte	'core1_main',0,5,53,13,1,1,1,1,27
	.byte	'__INDIRECT__',0,5,1,1,1,1,1,28,1,5
	.word	27609
	.byte	29
	.byte	'__codeptr',0,5,1,1
	.word	27611
	.byte	29
	.byte	'Ifx_UReg_8Bit',0,6,79,24
	.word	474
	.byte	29
	.byte	'Ifx_UReg_32Bit',0,6,81,24
	.word	299
	.byte	29
	.byte	'Ifx_SReg_32Bit',0,6,84,24
	.word	315
	.byte	8
	.byte	'_Ifx_SCU_ACCEN00_Bits',0,3,70,16,4,9
	.byte	'EN0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'EN1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'EN2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'EN3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'EN4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'EN5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'EN6',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'EN7',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'EN8',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'EN9',0,1
	.word	474
	.byte	1,6,2,35,1,9
	.byte	'EN10',0,1
	.word	474
	.byte	1,5,2,35,1,9
	.byte	'EN11',0,1
	.word	474
	.byte	1,4,2,35,1,9
	.byte	'EN12',0,1
	.word	474
	.byte	1,3,2,35,1,9
	.byte	'EN13',0,1
	.word	474
	.byte	1,2,2,35,1,9
	.byte	'EN14',0,1
	.word	474
	.byte	1,1,2,35,1,9
	.byte	'EN15',0,1
	.word	474
	.byte	1,0,2,35,1,9
	.byte	'EN16',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'EN17',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'EN18',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'EN19',0,1
	.word	474
	.byte	1,4,2,35,2,9
	.byte	'EN20',0,1
	.word	474
	.byte	1,3,2,35,2,9
	.byte	'EN21',0,1
	.word	474
	.byte	1,2,2,35,2,9
	.byte	'EN22',0,1
	.word	474
	.byte	1,1,2,35,2,9
	.byte	'EN23',0,1
	.word	474
	.byte	1,0,2,35,2,9
	.byte	'EN24',0,1
	.word	474
	.byte	1,7,2,35,3,9
	.byte	'EN25',0,1
	.word	474
	.byte	1,6,2,35,3,9
	.byte	'EN26',0,1
	.word	474
	.byte	1,5,2,35,3,9
	.byte	'EN27',0,1
	.word	474
	.byte	1,4,2,35,3,9
	.byte	'EN28',0,1
	.word	474
	.byte	1,3,2,35,3,9
	.byte	'EN29',0,1
	.word	474
	.byte	1,2,2,35,3,9
	.byte	'EN30',0,1
	.word	474
	.byte	1,1,2,35,3,9
	.byte	'EN31',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_ACCEN00_Bits',0,3,104,3
	.word	27702
	.byte	8
	.byte	'_Ifx_SCU_ACCEN01_Bits',0,3,107,16,4,9
	.byte	'reserved_0',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN01_Bits',0,3,110,3
	.word	28261
	.byte	8
	.byte	'_Ifx_SCU_ACCEN10_Bits',0,3,113,16,4,9
	.byte	'EN0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'EN1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'EN2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'EN3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'EN4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'EN5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'EN6',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'EN7',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'EN8',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'EN9',0,1
	.word	474
	.byte	1,6,2,35,1,9
	.byte	'EN10',0,1
	.word	474
	.byte	1,5,2,35,1,9
	.byte	'EN11',0,1
	.word	474
	.byte	1,4,2,35,1,9
	.byte	'EN12',0,1
	.word	474
	.byte	1,3,2,35,1,9
	.byte	'EN13',0,1
	.word	474
	.byte	1,2,2,35,1,9
	.byte	'EN14',0,1
	.word	474
	.byte	1,1,2,35,1,9
	.byte	'EN15',0,1
	.word	474
	.byte	1,0,2,35,1,9
	.byte	'EN16',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'EN17',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'EN18',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'EN19',0,1
	.word	474
	.byte	1,4,2,35,2,9
	.byte	'EN20',0,1
	.word	474
	.byte	1,3,2,35,2,9
	.byte	'EN21',0,1
	.word	474
	.byte	1,2,2,35,2,9
	.byte	'EN22',0,1
	.word	474
	.byte	1,1,2,35,2,9
	.byte	'EN23',0,1
	.word	474
	.byte	1,0,2,35,2,9
	.byte	'EN24',0,1
	.word	474
	.byte	1,7,2,35,3,9
	.byte	'EN25',0,1
	.word	474
	.byte	1,6,2,35,3,9
	.byte	'EN26',0,1
	.word	474
	.byte	1,5,2,35,3,9
	.byte	'EN27',0,1
	.word	474
	.byte	1,4,2,35,3,9
	.byte	'EN28',0,1
	.word	474
	.byte	1,3,2,35,3,9
	.byte	'EN29',0,1
	.word	474
	.byte	1,2,2,35,3,9
	.byte	'EN30',0,1
	.word	474
	.byte	1,1,2,35,3,9
	.byte	'EN31',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_ACCEN10_Bits',0,3,147,1,3
	.word	28340
	.byte	8
	.byte	'_Ifx_SCU_ACCEN11_Bits',0,3,150,1,16,4,9
	.byte	'reserved_0',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN11_Bits',0,3,153,1,3
	.word	28900
	.byte	8
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,3,156,1,16,4,9
	.byte	'STM0DIS',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'STM1DIS',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'STM2DIS',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'STM3DIS',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'STM4DIS',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'STM5DIS',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,1
	.word	474
	.byte	2,0,2,35,0,9
	.byte	'reserved_8',0,4
	.word	299
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,3,166,1,3
	.word	28981
	.byte	8
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,3,169,1,16,4,9
	.byte	'STMDIV',0,1
	.word	474
	.byte	4,4,2,35,0,9
	.byte	'GTMDIV',0,1
	.word	474
	.byte	4,0,2,35,0,9
	.byte	'SRIDIV',0,1
	.word	474
	.byte	4,4,2,35,1,9
	.byte	'LPDIV',0,1
	.word	474
	.byte	3,1,2,35,1,9
	.byte	'reserved_15',0,1
	.word	474
	.byte	1,0,2,35,1,9
	.byte	'SPBDIV',0,1
	.word	474
	.byte	4,4,2,35,2,9
	.byte	'BBBDIV',0,1
	.word	474
	.byte	4,0,2,35,2,9
	.byte	'FSIDIV',0,1
	.word	474
	.byte	2,6,2,35,3,9
	.byte	'FSI2DIV',0,1
	.word	474
	.byte	2,4,2,35,3,9
	.byte	'CLKSEL',0,1
	.word	474
	.byte	2,2,2,35,3,9
	.byte	'UP',0,1
	.word	474
	.byte	1,1,2,35,3,9
	.byte	'LCK',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON0_Bits',0,3,183,1,3
	.word	29198
	.byte	8
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,3,186,1,16,4,9
	.byte	'MCANDIV',0,1
	.word	474
	.byte	4,4,2,35,0,9
	.byte	'CLKSELMCAN',0,1
	.word	474
	.byte	2,2,2,35,0,9
	.byte	'reserved_6',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'PLL1DIVDIS',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'I2CDIV',0,1
	.word	474
	.byte	4,4,2,35,1,9
	.byte	'reserved_12',0,1
	.word	474
	.byte	4,0,2,35,1,9
	.byte	'MSCDIV',0,1
	.word	474
	.byte	4,4,2,35,2,9
	.byte	'CLKSELMSC',0,1
	.word	474
	.byte	2,2,2,35,2,9
	.byte	'reserved_22',0,1
	.word	474
	.byte	2,0,2,35,2,9
	.byte	'QSPIDIV',0,1
	.word	474
	.byte	4,4,2,35,3,9
	.byte	'CLKSELQSPI',0,1
	.word	474
	.byte	2,2,2,35,3,9
	.byte	'reserved_30',0,1
	.word	474
	.byte	1,1,2,35,3,9
	.byte	'LCK',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON1_Bits',0,3,201,1,3
	.word	29471
	.byte	8
	.byte	'_Ifx_SCU_CCUCON10_Bits',0,3,204,1,16,4,9
	.byte	'CPU4DIV',0,1
	.word	474
	.byte	6,2,2,35,0,9
	.byte	'reserved_6',0,4
	.word	299
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON10_Bits',0,3,208,1,3
	.word	29797
	.byte	8
	.byte	'_Ifx_SCU_CCUCON11_Bits',0,3,211,1,16,4,9
	.byte	'CPU5DIV',0,1
	.word	474
	.byte	6,2,2,35,0,9
	.byte	'reserved_6',0,4
	.word	299
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON11_Bits',0,3,215,1,3
	.word	29899
	.byte	8
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,3,218,1,16,4,9
	.byte	'ASCLINFDIV',0,1
	.word	474
	.byte	4,4,2,35,0,9
	.byte	'reserved_4',0,1
	.word	474
	.byte	4,0,2,35,0,9
	.byte	'ASCLINSDIV',0,1
	.word	474
	.byte	4,4,2,35,1,9
	.byte	'CLKSELASCLINS',0,1
	.word	474
	.byte	2,2,2,35,1,9
	.byte	'reserved_14',0,4
	.word	299
	.byte	10,8,2,35,0,9
	.byte	'EBUPERON',0,1
	.word	474
	.byte	1,7,2,35,3,9
	.byte	'ERAYPERON',0,1
	.word	474
	.byte	1,6,2,35,3,9
	.byte	'HSPDMPERON',0,1
	.word	474
	.byte	1,5,2,35,3,9
	.byte	'reserved_27',0,1
	.word	474
	.byte	4,1,2,35,3,9
	.byte	'LCK',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON2_Bits',0,3,230,1,3
	.word	30001
	.byte	8
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,3,233,1,16,4,9
	.byte	'PLL0MONEN',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'PLL1MONEN',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'PLL2MONEN',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'SPBMONEN',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'BACKMONEN',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'reserved_5',0,1
	.word	474
	.byte	3,0,2,35,0,9
	.byte	'PLL0MONTST',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'PLL1MONTST',0,1
	.word	474
	.byte	1,6,2,35,1,9
	.byte	'PLL2MONTST',0,1
	.word	474
	.byte	1,5,2,35,1,9
	.byte	'SPBMONTST',0,1
	.word	474
	.byte	1,4,2,35,1,9
	.byte	'BACKMONTST',0,1
	.word	474
	.byte	1,3,2,35,1,9
	.byte	'reserved_13',0,4
	.word	299
	.byte	11,8,2,35,0,9
	.byte	'reserved_24',0,1
	.word	474
	.byte	6,2,2,35,3,9
	.byte	'UP',0,1
	.word	474
	.byte	1,1,2,35,3,9
	.byte	'LCK',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON3_Bits',0,3,250,1,3
	.word	30275
	.byte	8
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,3,253,1,16,4,9
	.byte	'LOTHR',0,2
	.word	277
	.byte	12,4,2,35,0,9
	.byte	'UPTHR',0,4
	.word	299
	.byte	12,8,2,35,0,9
	.byte	'MONEN',0,1
	.word	474
	.byte	1,7,2,35,3,9
	.byte	'MONTST',0,1
	.word	474
	.byte	1,6,2,35,3,9
	.byte	'reserved_26',0,1
	.word	474
	.byte	4,2,2,35,3,9
	.byte	'UP',0,1
	.word	474
	.byte	1,1,2,35,3,9
	.byte	'LCK',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON4_Bits',0,3,134,2,3
	.word	30644
	.byte	8
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,3,137,2,16,4,9
	.byte	'GETHDIV',0,1
	.word	474
	.byte	4,4,2,35,0,9
	.byte	'MCANHDIV',0,1
	.word	474
	.byte	4,0,2,35,0,9
	.byte	'ADASDIV',0,1
	.word	474
	.byte	4,4,2,35,1,9
	.byte	'reserved_12',0,4
	.word	299
	.byte	18,2,2,35,0,9
	.byte	'UP',0,1
	.word	474
	.byte	1,1,2,35,3,9
	.byte	'LCK',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON5_Bits',0,3,145,2,3
	.word	30824
	.byte	8
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,3,148,2,16,4,9
	.byte	'CPU0DIV',0,1
	.word	474
	.byte	6,2,2,35,0,9
	.byte	'reserved_6',0,4
	.word	299
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON6_Bits',0,3,152,2,3
	.word	30993
	.byte	8
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,3,155,2,16,4,9
	.byte	'CPU1DIV',0,1
	.word	474
	.byte	6,2,2,35,0,9
	.byte	'reserved_6',0,4
	.word	299
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON7_Bits',0,3,159,2,3
	.word	31093
	.byte	8
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,3,162,2,16,4,9
	.byte	'CPU2DIV',0,1
	.word	474
	.byte	6,2,2,35,0,9
	.byte	'reserved_6',0,4
	.word	299
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON8_Bits',0,3,166,2,3
	.word	31193
	.byte	8
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,3,169,2,16,4,9
	.byte	'CPU3DIV',0,1
	.word	474
	.byte	6,2,2,35,0,9
	.byte	'reserved_6',0,4
	.word	299
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON9_Bits',0,3,173,2,3
	.word	31293
	.byte	8
	.byte	'_Ifx_SCU_CHIPID_Bits',0,3,176,2,16,4,9
	.byte	'CHREV',0,1
	.word	474
	.byte	6,2,2,35,0,9
	.byte	'CHTEC',0,1
	.word	474
	.byte	2,0,2,35,0,9
	.byte	'CHPK',0,1
	.word	474
	.byte	4,4,2,35,1,9
	.byte	'CHID',0,1
	.word	474
	.byte	4,0,2,35,1,9
	.byte	'EEA',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'UCODE',0,1
	.word	474
	.byte	7,0,2,35,2,9
	.byte	'FSIZE',0,1
	.word	474
	.byte	4,4,2,35,3,9
	.byte	'VART',0,1
	.word	474
	.byte	3,1,2,35,3,9
	.byte	'SEC',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CHIPID_Bits',0,3,187,2,3
	.word	31393
	.byte	8
	.byte	'_Ifx_SCU_DTSCLIM_Bits',0,3,190,2,16,4,9
	.byte	'LOWER',0,2
	.word	277
	.byte	12,4,2,35,0,9
	.byte	'reserved_12',0,1
	.word	474
	.byte	1,3,2,35,1,9
	.byte	'BGPOK',0,1
	.word	474
	.byte	1,2,2,35,1,9
	.byte	'EN',0,1
	.word	474
	.byte	1,1,2,35,1,9
	.byte	'LLU',0,1
	.word	474
	.byte	1,0,2,35,1,9
	.byte	'UPPER',0,2
	.word	277
	.byte	12,4,2,35,2,9
	.byte	'INTEN',0,1
	.word	474
	.byte	1,3,2,35,3,9
	.byte	'reserved_29',0,1
	.word	474
	.byte	1,2,2,35,3,9
	.byte	'INT',0,1
	.word	474
	.byte	1,1,2,35,3,9
	.byte	'UOF',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_DTSCLIM_Bits',0,3,202,2,3
	.word	31596
	.byte	8
	.byte	'_Ifx_SCU_DTSCSTAT_Bits',0,3,205,2,16,4,9
	.byte	'RESULT',0,2
	.word	277
	.byte	12,4,2,35,0,9
	.byte	'reserved_12',0,4
	.word	299
	.byte	20,0,2,35,0,0,29
	.byte	'Ifx_SCU_DTSCSTAT_Bits',0,3,209,2,3
	.word	31828
	.byte	8
	.byte	'_Ifx_SCU_EICON0_Bits',0,3,212,2,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'ENDINIT',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EPW',0,4
	.word	322
	.byte	14,16,2,35,0,9
	.byte	'REL',0,4
	.word	322
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_SCU_EICON0_Bits',0,3,218,2,3
	.word	31930
	.byte	8
	.byte	'_Ifx_SCU_EICON1_Bits',0,3,221,2,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'reserved_1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'IR0',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'DR',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'IR1',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,4
	.word	299
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_EICON1_Bits',0,3,230,2,3
	.word	32058
	.byte	8
	.byte	'_Ifx_SCU_EICR_Bits',0,3,233,2,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	4,4,2,35,0,9
	.byte	'EXIS0',0,1
	.word	474
	.byte	3,1,2,35,0,9
	.byte	'reserved_7',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'FEN0',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'REN0',0,1
	.word	474
	.byte	1,6,2,35,1,9
	.byte	'LDEN0',0,1
	.word	474
	.byte	1,5,2,35,1,9
	.byte	'EIEN0',0,1
	.word	474
	.byte	1,4,2,35,1,9
	.byte	'INP0',0,1
	.word	474
	.byte	3,1,2,35,1,9
	.byte	'reserved_15',0,4
	.word	299
	.byte	5,12,2,35,0,9
	.byte	'EXIS1',0,1
	.word	474
	.byte	3,1,2,35,2,9
	.byte	'reserved_23',0,1
	.word	474
	.byte	1,0,2,35,2,9
	.byte	'FEN1',0,1
	.word	474
	.byte	1,7,2,35,3,9
	.byte	'REN1',0,1
	.word	474
	.byte	1,6,2,35,3,9
	.byte	'LDEN1',0,1
	.word	474
	.byte	1,5,2,35,3,9
	.byte	'EIEN1',0,1
	.word	474
	.byte	1,4,2,35,3,9
	.byte	'INP1',0,1
	.word	474
	.byte	3,1,2,35,3,9
	.byte	'reserved_31',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EICR_Bits',0,3,252,2,3
	.word	32247
	.byte	8
	.byte	'_Ifx_SCU_EIFILT_Bits',0,3,255,2,16,4,9
	.byte	'FILRQ0A',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'FILRQ5A',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'FILRQ2A',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'FILRQ3A',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'FILRQ0C',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'FILRQ1C',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'FILRQ3C',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'FILRQ2C',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'FILRQ4A',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'FILRQ6A',0,1
	.word	474
	.byte	1,6,2,35,1,9
	.byte	'FILRQ1A',0,1
	.word	474
	.byte	1,5,2,35,1,9
	.byte	'FILRQ7A',0,1
	.word	474
	.byte	1,4,2,35,1,9
	.byte	'FILRQ6D',0,1
	.word	474
	.byte	1,3,2,35,1,9
	.byte	'FILRQ4D',0,1
	.word	474
	.byte	1,2,2,35,1,9
	.byte	'FILRQ2B',0,1
	.word	474
	.byte	1,1,2,35,1,9
	.byte	'FILRQ3B',0,1
	.word	474
	.byte	1,0,2,35,1,9
	.byte	'FILRQ7C',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'reserved_17',0,1
	.word	474
	.byte	7,0,2,35,2,9
	.byte	'FILTDIV',0,1
	.word	474
	.byte	4,4,2,35,3,9
	.byte	'DEPTH',0,1
	.word	474
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_EIFILT_Bits',0,3,149,3,3
	.word	32611
	.byte	8
	.byte	'_Ifx_SCU_EIFR_Bits',0,3,152,3,16,4,9
	.byte	'INTF0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'INTF1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'INTF2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'INTF3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'INTF4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'INTF5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'INTF6',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'INTF7',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'reserved_8',0,4
	.word	299
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_EIFR_Bits',0,3,163,3,3
	.word	33050
	.byte	8
	.byte	'_Ifx_SCU_EISR_Bits',0,3,166,3,16,4,9
	.byte	'AE',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'OE',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'IS0',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'DS',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'TO',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'IS1',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,2
	.word	277
	.byte	10,0,2,35,0,9
	.byte	'TIM',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_EISR_Bits',0,3,176,3,3
	.word	33261
	.byte	8
	.byte	'_Ifx_SCU_EMSR_Bits',0,3,179,3,16,4,9
	.byte	'POL',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'MODE',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'ENON',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'PSEL',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,2
	.word	277
	.byte	12,0,2,35,0,9
	.byte	'EMSF',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'SEMSF',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'reserved_18',0,2
	.word	277
	.byte	14,0,2,35,2,0,29
	.byte	'Ifx_SCU_EMSR_Bits',0,3,189,3,3
	.word	33437
	.byte	8
	.byte	'_Ifx_SCU_EMSSW_Bits',0,3,192,3,16,4,9
	.byte	'reserved_0',0,4
	.word	299
	.byte	24,8,2,35,0,9
	.byte	'EMSFM',0,1
	.word	474
	.byte	2,6,2,35,3,9
	.byte	'SEMSFM',0,1
	.word	474
	.byte	2,4,2,35,3,9
	.byte	'reserved_28',0,1
	.word	474
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_EMSSW_Bits',0,3,198,3,3
	.word	33631
	.byte	8
	.byte	'_Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,3,201,3,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	7,1,2,35,0,9
	.byte	'EDCON',0,2
	.word	277
	.byte	2,7,2,35,0,9
	.byte	'reserved_9',0,4
	.word	299
	.byte	23,0,2,35,0,0,29
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,3,206,3,3
	.word	33766
	.byte	8
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,3,209,3,16,4,9
	.byte	'ARI',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'ARC',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'reserved_2',0,4
	.word	299
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_ESROCFG_Bits',0,3,214,3,3
	.word	33902
	.byte	8
	.byte	'_Ifx_SCU_EXTCON_Bits',0,3,217,3,16,4,9
	.byte	'EN0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'reserved_1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'SEL0',0,1
	.word	474
	.byte	4,2,2,35,0,9
	.byte	'reserved_6',0,2
	.word	277
	.byte	10,0,2,35,0,9
	.byte	'EN1',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'NSEL',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'SEL1',0,1
	.word	474
	.byte	4,2,2,35,2,9
	.byte	'reserved_22',0,1
	.word	474
	.byte	2,0,2,35,2,9
	.byte	'DIV1',0,1
	.word	474
	.byte	8,0,2,35,3,0,29
	.byte	'Ifx_SCU_EXTCON_Bits',0,3,228,3,3
	.word	34013
	.byte	8
	.byte	'_Ifx_SCU_FDR_Bits',0,3,231,3,16,4,9
	.byte	'STEP',0,2
	.word	277
	.byte	10,6,2,35,0,9
	.byte	'reserved_10',0,1
	.word	474
	.byte	4,2,2,35,1,9
	.byte	'DM',0,1
	.word	474
	.byte	2,0,2,35,1,9
	.byte	'RESULT',0,2
	.word	277
	.byte	10,6,2,35,2,9
	.byte	'reserved_26',0,1
	.word	474
	.byte	5,1,2,35,3,9
	.byte	'DISCLK',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_FDR_Bits',0,3,239,3,3
	.word	34231
	.byte	8
	.byte	'_Ifx_SCU_FMR_Bits',0,3,242,3,16,4,9
	.byte	'FS0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'FS1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'FS2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'FS3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'FS4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'FS5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'FS6',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'FS7',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'reserved_8',0,1
	.word	474
	.byte	8,0,2,35,1,9
	.byte	'FC0',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'FC1',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'FC2',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'FC3',0,1
	.word	474
	.byte	1,4,2,35,2,9
	.byte	'FC4',0,1
	.word	474
	.byte	1,3,2,35,2,9
	.byte	'FC5',0,1
	.word	474
	.byte	1,2,2,35,2,9
	.byte	'FC6',0,1
	.word	474
	.byte	1,1,2,35,2,9
	.byte	'FC7',0,1
	.word	474
	.byte	1,0,2,35,2,9
	.byte	'reserved_24',0,1
	.word	474
	.byte	8,0,2,35,3,0,29
	.byte	'Ifx_SCU_FMR_Bits',0,3,134,4,3
	.word	34394
	.byte	8
	.byte	'_Ifx_SCU_ID_Bits',0,3,137,4,16,4,9
	.byte	'MODREV',0,1
	.word	474
	.byte	8,0,2,35,0,9
	.byte	'MODTYPE',0,1
	.word	474
	.byte	8,0,2,35,1,9
	.byte	'MODNUMBER',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_ID_Bits',0,3,142,4,3
	.word	34730
	.byte	8
	.byte	'_Ifx_SCU_IGCR_Bits',0,3,145,4,16,4,9
	.byte	'IPEN00',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'IPEN01',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'IPEN02',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'IPEN03',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'IPEN04',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'IPEN05',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'IPEN06',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'IPEN07',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'reserved_8',0,1
	.word	474
	.byte	5,3,2,35,1,9
	.byte	'GEEN0',0,1
	.word	474
	.byte	1,2,2,35,1,9
	.byte	'IGP0',0,1
	.word	474
	.byte	2,0,2,35,1,9
	.byte	'IPEN10',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'IPEN11',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'IPEN12',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'IPEN13',0,1
	.word	474
	.byte	1,4,2,35,2,9
	.byte	'IPEN14',0,1
	.word	474
	.byte	1,3,2,35,2,9
	.byte	'IPEN15',0,1
	.word	474
	.byte	1,2,2,35,2,9
	.byte	'IPEN16',0,1
	.word	474
	.byte	1,1,2,35,2,9
	.byte	'IPEN17',0,1
	.word	474
	.byte	1,0,2,35,2,9
	.byte	'reserved_24',0,1
	.word	474
	.byte	5,3,2,35,3,9
	.byte	'GEEN1',0,1
	.word	474
	.byte	1,2,2,35,3,9
	.byte	'IGP1',0,1
	.word	474
	.byte	2,0,2,35,3,0,29
	.byte	'Ifx_SCU_IGCR_Bits',0,3,169,4,3
	.word	34837
	.byte	8
	.byte	'_Ifx_SCU_IN_Bits',0,3,172,4,16,4,9
	.byte	'P0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'P1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'reserved_2',0,4
	.word	299
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_IN_Bits',0,3,177,4,3
	.word	35289
	.byte	8
	.byte	'_Ifx_SCU_IOCR_Bits',0,3,180,4,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	4,4,2,35,0,9
	.byte	'PC0',0,1
	.word	474
	.byte	4,0,2,35,0,9
	.byte	'reserved_8',0,1
	.word	474
	.byte	4,4,2,35,1,9
	.byte	'PC1',0,1
	.word	474
	.byte	4,0,2,35,1,9
	.byte	'reserved_16',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_IOCR_Bits',0,3,187,4,3
	.word	35388
	.byte	8
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,3,190,4,16,4,9
	.byte	'LBISTREQ',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'LBISTRES',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'PATTERNS',0,4
	.word	299
	.byte	18,12,2,35,0,9
	.byte	'reserved_20',0,2
	.word	277
	.byte	8,4,2,35,2,9
	.byte	'LBISTDONE',0,1
	.word	474
	.byte	1,3,2,35,3,9
	.byte	'reserved_29',0,1
	.word	474
	.byte	1,2,2,35,3,9
	.byte	'LBISTERRINJ',0,1
	.word	474
	.byte	1,1,2,35,3,9
	.byte	'LBISTREQRED',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,3,200,4,3
	.word	35538
	.byte	8
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,3,203,4,16,4,9
	.byte	'SEED',0,4
	.word	299
	.byte	19,13,2,35,0,9
	.byte	'reserved_19',0,1
	.word	474
	.byte	5,0,2,35,2,9
	.byte	'SPLITSH',0,1
	.word	474
	.byte	3,5,2,35,3,9
	.byte	'BODY',0,1
	.word	474
	.byte	1,4,2,35,3,9
	.byte	'LBISTFREQU',0,1
	.word	474
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,3,210,4,3
	.word	35776
	.byte	8
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,3,213,4,16,4,9
	.byte	'LENGTH',0,2
	.word	277
	.byte	12,4,2,35,0,9
	.byte	'reserved_12',0,4
	.word	299
	.byte	20,0,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,3,217,4,3
	.word	35937
	.byte	8
	.byte	'_Ifx_SCU_LBISTCTRL3_Bits',0,3,220,4,16,4,9
	.byte	'SIGNATURE',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL3_Bits',0,3,223,4,3
	.word	36043
	.byte	8
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,3,226,4,16,4,9
	.byte	'LS2',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'reserved_1',0,2
	.word	277
	.byte	14,1,2,35,0,9
	.byte	'LSEN2',0,1
	.word	474
	.byte	1,0,2,35,1,9
	.byte	'LS0',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'reserved_17',0,2
	.word	277
	.byte	14,1,2,35,2,9
	.byte	'LSEN0',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_LCLCON0_Bits',0,3,234,4,3
	.word	36129
	.byte	8
	.byte	'_Ifx_SCU_LCLCON1_Bits',0,3,237,4,16,4,9
	.byte	'LS3',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'reserved_1',0,2
	.word	277
	.byte	14,1,2,35,0,9
	.byte	'LSEN3',0,1
	.word	474
	.byte	1,0,2,35,1,9
	.byte	'LS1',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'reserved_17',0,2
	.word	277
	.byte	14,1,2,35,2,9
	.byte	'LSEN1',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_LCLCON1_Bits',0,3,245,4,3
	.word	36297
	.byte	8
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,3,248,4,16,4,9
	.byte	'LCLT0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'LCLT1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'LCLT2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'LCLT3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'LCLT4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'LCLT5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,2
	.word	277
	.byte	10,0,2,35,0,9
	.byte	'PLCLT0',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'PLCLT1',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'PLCLT2',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'PLCLT3',0,1
	.word	474
	.byte	1,4,2,35,2,9
	.byte	'PLCLT4',0,1
	.word	474
	.byte	1,3,2,35,2,9
	.byte	'PLCLT5',0,1
	.word	474
	.byte	1,2,2,35,2,9
	.byte	'reserved_22',0,2
	.word	277
	.byte	10,0,2,35,2,0,29
	.byte	'Ifx_SCU_LCLTEST_Bits',0,3,136,5,3
	.word	36465
	.byte	8
	.byte	'_Ifx_SCU_MANID_Bits',0,3,139,5,16,4,9
	.byte	'DEPT',0,1
	.word	474
	.byte	5,3,2,35,0,9
	.byte	'MANUF',0,2
	.word	277
	.byte	11,0,2,35,0,9
	.byte	'reserved_16',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_MANID_Bits',0,3,144,5,3
	.word	36779
	.byte	8
	.byte	'_Ifx_SCU_OMR_Bits',0,3,147,5,16,4,9
	.byte	'PS0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'PS1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'reserved_2',0,2
	.word	277
	.byte	14,0,2,35,0,9
	.byte	'PCL0',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'PCL1',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'reserved_18',0,2
	.word	277
	.byte	14,0,2,35,2,0,29
	.byte	'Ifx_SCU_OMR_Bits',0,3,155,5,3
	.word	36890
	.byte	8
	.byte	'_Ifx_SCU_OSCCON_Bits',0,3,158,5,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'PLLLV',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'OSCRES',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'GAINSEL',0,1
	.word	474
	.byte	2,3,2,35,0,9
	.byte	'MODE',0,1
	.word	474
	.byte	2,1,2,35,0,9
	.byte	'SHBY',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'PLLHV',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'HYSEN',0,1
	.word	474
	.byte	1,6,2,35,1,9
	.byte	'HYSCTL',0,1
	.word	474
	.byte	2,4,2,35,1,9
	.byte	'AMPCTL',0,1
	.word	474
	.byte	2,2,2,35,1,9
	.byte	'reserved_14',0,1
	.word	474
	.byte	2,0,2,35,1,9
	.byte	'OSCVAL',0,1
	.word	474
	.byte	5,3,2,35,2,9
	.byte	'reserved_21',0,1
	.word	474
	.byte	2,1,2,35,2,9
	.byte	'APREN',0,1
	.word	474
	.byte	1,0,2,35,2,9
	.byte	'CAP0EN',0,1
	.word	474
	.byte	1,7,2,35,3,9
	.byte	'CAP1EN',0,1
	.word	474
	.byte	1,6,2,35,3,9
	.byte	'CAP2EN',0,1
	.word	474
	.byte	1,5,2,35,3,9
	.byte	'CAP3EN',0,1
	.word	474
	.byte	1,4,2,35,3,9
	.byte	'reserved_28',0,1
	.word	474
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_OSCCON_Bits',0,3,179,5,3
	.word	37048
	.byte	8
	.byte	'_Ifx_SCU_OUT_Bits',0,3,182,5,16,4,9
	.byte	'P0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'P1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'reserved_2',0,4
	.word	299
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_OUT_Bits',0,3,187,5,3
	.word	37459
	.byte	8
	.byte	'_Ifx_SCU_OVCCON_Bits',0,3,190,5,16,4,9
	.byte	'CSEL0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'CSEL1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'CSEL2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'CSEL3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'CSEL4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'CSEL5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,2
	.word	277
	.byte	10,0,2,35,0,9
	.byte	'OVSTRT',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'OVSTP',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'DCINVAL',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'reserved_19',0,1
	.word	474
	.byte	5,0,2,35,2,9
	.byte	'OVCONF',0,1
	.word	474
	.byte	1,7,2,35,3,9
	.byte	'POVCONF',0,1
	.word	474
	.byte	1,6,2,35,3,9
	.byte	'reserved_26',0,1
	.word	474
	.byte	6,0,2,35,3,0,29
	.byte	'Ifx_SCU_OVCCON_Bits',0,3,206,5,3
	.word	37560
	.byte	8
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,3,209,5,16,4,9
	.byte	'OVEN0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'OVEN1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'OVEN2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'OVEN3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'OVEN4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'OVEN5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,4
	.word	299
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,3,218,5,3
	.word	37878
	.byte	8
	.byte	'_Ifx_SCU_PDISC_Bits',0,3,221,5,16,4,9
	.byte	'PDIS0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'PDIS1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'reserved_2',0,4
	.word	299
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_PDISC_Bits',0,3,226,5,3
	.word	38065
	.byte	8
	.byte	'_Ifx_SCU_PDR_Bits',0,3,229,5,16,4,9
	.byte	'PD0',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'PL0',0,1
	.word	474
	.byte	2,4,2,35,0,9
	.byte	'PD1',0,1
	.word	474
	.byte	2,2,2,35,0,9
	.byte	'PL1',0,1
	.word	474
	.byte	2,0,2,35,0,9
	.byte	'reserved_8',0,4
	.word	299
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_PDR_Bits',0,3,236,5,3
	.word	38176
	.byte	8
	.byte	'_Ifx_SCU_PDRR_Bits',0,3,239,5,16,4,9
	.byte	'PDR0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'PDR1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'PDR2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'PDR3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'PDR4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'PDR5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'PDR6',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'PDR7',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'reserved_8',0,4
	.word	299
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_PDRR_Bits',0,3,250,5,3
	.word	38309
	.byte	8
	.byte	'_Ifx_SCU_PERPLLCON0_Bits',0,3,253,5,16,4,9
	.byte	'DIVBY',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'reserved_1',0,2
	.word	277
	.byte	8,7,2,35,0,9
	.byte	'NDIV',0,1
	.word	474
	.byte	7,0,2,35,1,9
	.byte	'PLLPWD',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'reserved_17',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'RESLD',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'reserved_19',0,1
	.word	474
	.byte	5,0,2,35,2,9
	.byte	'PDIV',0,1
	.word	474
	.byte	3,5,2,35,3,9
	.byte	'reserved_27',0,1
	.word	474
	.byte	5,0,2,35,3,0,29
	.byte	'Ifx_SCU_PERPLLCON0_Bits',0,3,136,6,3
	.word	38512
	.byte	8
	.byte	'_Ifx_SCU_PERPLLCON1_Bits',0,3,139,6,16,4,9
	.byte	'K2DIV',0,1
	.word	474
	.byte	3,5,2,35,0,9
	.byte	'reserved_3',0,1
	.word	474
	.byte	5,0,2,35,0,9
	.byte	'K3DIV',0,1
	.word	474
	.byte	3,5,2,35,1,9
	.byte	'reserved_11',0,4
	.word	299
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PERPLLCON1_Bits',0,3,145,6,3
	.word	38752
	.byte	8
	.byte	'_Ifx_SCU_PERPLLSTAT_Bits',0,3,148,6,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'PWDSTAT',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'LOCK',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'reserved_3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'K3RDY',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'K2RDY',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'reserved_7',0,4
	.word	299
	.byte	25,0,2,35,0,0,29
	.byte	'Ifx_SCU_PERPLLSTAT_Bits',0,3,158,6,3
	.word	38896
	.byte	8
	.byte	'_Ifx_SCU_PMCSR0_Bits',0,3,161,6,16,4,9
	.byte	'REQSLP',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	6,0,2,35,0,9
	.byte	'PMST',0,1
	.word	474
	.byte	3,5,2,35,1,9
	.byte	'reserved_11',0,4
	.word	299
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR0_Bits',0,3,167,6,3
	.word	39118
	.byte	8
	.byte	'_Ifx_SCU_PMCSR1_Bits',0,3,170,6,16,4,9
	.byte	'REQSLP',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	6,0,2,35,0,9
	.byte	'PMST',0,1
	.word	474
	.byte	3,5,2,35,1,9
	.byte	'reserved_11',0,4
	.word	299
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR1_Bits',0,3,176,6,3
	.word	39254
	.byte	8
	.byte	'_Ifx_SCU_PMCSR2_Bits',0,3,179,6,16,4,9
	.byte	'REQSLP',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	6,0,2,35,0,9
	.byte	'PMST',0,1
	.word	474
	.byte	3,5,2,35,1,9
	.byte	'reserved_11',0,4
	.word	299
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR2_Bits',0,3,185,6,3
	.word	39390
	.byte	8
	.byte	'_Ifx_SCU_PMCSR3_Bits',0,3,188,6,16,4,9
	.byte	'REQSLP',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	6,0,2,35,0,9
	.byte	'PMST',0,1
	.word	474
	.byte	3,5,2,35,1,9
	.byte	'reserved_11',0,4
	.word	299
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR3_Bits',0,3,194,6,3
	.word	39526
	.byte	8
	.byte	'_Ifx_SCU_PMCSR4_Bits',0,3,197,6,16,4,9
	.byte	'REQSLP',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	6,0,2,35,0,9
	.byte	'PMST',0,1
	.word	474
	.byte	3,5,2,35,1,9
	.byte	'reserved_11',0,4
	.word	299
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR4_Bits',0,3,203,6,3
	.word	39662
	.byte	8
	.byte	'_Ifx_SCU_PMCSR5_Bits',0,3,206,6,16,4,9
	.byte	'REQSLP',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	6,0,2,35,0,9
	.byte	'PMST',0,1
	.word	474
	.byte	3,5,2,35,1,9
	.byte	'reserved_11',0,4
	.word	299
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR5_Bits',0,3,212,6,3
	.word	39798
	.byte	8
	.byte	'_Ifx_SCU_PMSTAT0_Bits',0,3,215,6,16,4,9
	.byte	'CPU0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'CPU1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'CPU2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'CPU3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'CPU4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'CPU5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,2
	.word	277
	.byte	10,0,2,35,0,9
	.byte	'CPU0LS',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'CPU1LS',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'CPU2LS',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'CPU3LS',0,1
	.word	474
	.byte	1,4,2,35,2,9
	.byte	'reserved_20',0,2
	.word	277
	.byte	12,0,2,35,2,0,29
	.byte	'Ifx_SCU_PMSTAT0_Bits',0,3,229,6,3
	.word	39934
	.byte	8
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,3,232,6,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	8,0,2,35,0,9
	.byte	'CPUIDLSEL',0,1
	.word	474
	.byte	3,5,2,35,1,9
	.byte	'reserved_11',0,1
	.word	474
	.byte	1,4,2,35,1,9
	.byte	'IRADIS',0,1
	.word	474
	.byte	1,3,2,35,1,9
	.byte	'reserved_13',0,4
	.word	299
	.byte	11,8,2,35,0,9
	.byte	'CPUSEL',0,1
	.word	474
	.byte	3,5,2,35,3,9
	.byte	'STBYEVEN',0,1
	.word	474
	.byte	1,4,2,35,3,9
	.byte	'STBYEV',0,1
	.word	474
	.byte	3,1,2,35,3,9
	.byte	'reserved_31',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,3,243,6,3
	.word	40206
	.byte	8
	.byte	'_Ifx_SCU_PMTRCSR0_Bits',0,3,246,6,16,4,9
	.byte	'LJTEN',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'LJTOVEN',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'LJTOVIEN',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'LJTSTRT',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'LJTSTP',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'LJTCLR',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,2
	.word	277
	.byte	6,4,2,35,0,9
	.byte	'SDSTEP',0,1
	.word	474
	.byte	4,0,2,35,1,9
	.byte	'VDTEN',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'VDTOVEN',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'VDTOVIEN',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'VDTSTRT',0,1
	.word	474
	.byte	1,4,2,35,2,9
	.byte	'VDTSTP',0,1
	.word	474
	.byte	1,3,2,35,2,9
	.byte	'VDTCLR',0,1
	.word	474
	.byte	1,2,2,35,2,9
	.byte	'reserved_22',0,2
	.word	277
	.byte	7,3,2,35,2,9
	.byte	'LPSLPEN',0,1
	.word	474
	.byte	1,2,2,35,3,9
	.byte	'reserved_30',0,1
	.word	474
	.byte	2,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMTRCSR0_Bits',0,3,137,7,3
	.word	40451
	.byte	8
	.byte	'_Ifx_SCU_PMTRCSR1_Bits',0,3,140,7,16,4,9
	.byte	'LJTCV',0,2
	.word	277
	.byte	16,0,2,35,0,9
	.byte	'VDTCV',0,2
	.word	277
	.byte	10,6,2,35,2,9
	.byte	'reserved_26',0,1
	.word	474
	.byte	6,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMTRCSR1_Bits',0,3,145,7,3
	.word	40839
	.byte	8
	.byte	'_Ifx_SCU_PMTRCSR2_Bits',0,3,148,7,16,4,9
	.byte	'LDJMPREQ',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	2,4,2,35,0,9
	.byte	'LJTRUN',0,1
	.word	474
	.byte	2,2,2,35,0,9
	.byte	'reserved_6',0,1
	.word	474
	.byte	2,0,2,35,0,9
	.byte	'LJTOV',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'reserved_9',0,1
	.word	474
	.byte	3,4,2,35,1,9
	.byte	'LJTOVCLR',0,1
	.word	474
	.byte	1,3,2,35,1,9
	.byte	'reserved_13',0,1
	.word	474
	.byte	3,0,2,35,1,9
	.byte	'LJTCNT',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_PMTRCSR2_Bits',0,3,159,7,3
	.word	40957
	.byte	8
	.byte	'_Ifx_SCU_PMTRCSR3_Bits',0,3,162,7,16,4,9
	.byte	'VDROOPREQ',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	2,4,2,35,0,9
	.byte	'VDTRUN',0,1
	.word	474
	.byte	2,2,2,35,0,9
	.byte	'reserved_6',0,1
	.word	474
	.byte	2,0,2,35,0,9
	.byte	'VDTOV',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'reserved_9',0,1
	.word	474
	.byte	3,4,2,35,1,9
	.byte	'VDTOVCLR',0,1
	.word	474
	.byte	1,3,2,35,1,9
	.byte	'reserved_13',0,1
	.word	474
	.byte	3,0,2,35,1,9
	.byte	'VDTCNT',0,2
	.word	277
	.byte	10,6,2,35,2,9
	.byte	'reserved_26',0,1
	.word	474
	.byte	6,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMTRCSR3_Bits',0,3,174,7,3
	.word	41200
	.byte	8
	.byte	'_Ifx_SCU_RSTCON_Bits',0,3,177,7,16,4,9
	.byte	'ESR0',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'ESR1',0,1
	.word	474
	.byte	2,4,2,35,0,9
	.byte	'reserved_4',0,1
	.word	474
	.byte	2,2,2,35,0,9
	.byte	'SMU',0,1
	.word	474
	.byte	2,0,2,35,0,9
	.byte	'SW',0,1
	.word	474
	.byte	2,6,2,35,1,9
	.byte	'STM0',0,1
	.word	474
	.byte	2,4,2,35,1,9
	.byte	'STM1',0,1
	.word	474
	.byte	2,2,2,35,1,9
	.byte	'STM2',0,1
	.word	474
	.byte	2,0,2,35,1,9
	.byte	'STM3',0,1
	.word	474
	.byte	2,6,2,35,2,9
	.byte	'STM4',0,1
	.word	474
	.byte	2,4,2,35,2,9
	.byte	'STM5',0,1
	.word	474
	.byte	2,2,2,35,2,9
	.byte	'reserved_22',0,2
	.word	277
	.byte	10,0,2,35,2,0,29
	.byte	'Ifx_SCU_RSTCON_Bits',0,3,191,7,3
	.word	41467
	.byte	8
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,3,194,7,16,4,9
	.byte	'FRTO',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'CLRC',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'reserved_3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'reserved_5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'CSSX',0,2
	.word	277
	.byte	6,3,2,35,0,9
	.byte	'reserved_13',0,1
	.word	474
	.byte	1,2,2,35,1,9
	.byte	'reserved_14',0,1
	.word	474
	.byte	1,1,2,35,1,9
	.byte	'reserved_15',0,1
	.word	474
	.byte	1,0,2,35,1,9
	.byte	'USRINFO',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_RSTCON2_Bits',0,3,208,7,3
	.word	41726
	.byte	8
	.byte	'_Ifx_SCU_RSTCON3_Bits',0,3,211,7,16,4,9
	.byte	'reserved_0',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_RSTCON3_Bits',0,3,214,7,3
	.word	42031
	.byte	8
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,3,217,7,16,4,9
	.byte	'ESR0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'ESR1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'SMU',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'SW',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'STM0',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'STM1',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'STM2',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'STM3',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'STM4',0,1
	.word	474
	.byte	1,6,2,35,1,9
	.byte	'STM5',0,1
	.word	474
	.byte	1,5,2,35,1,9
	.byte	'reserved_11',0,1
	.word	474
	.byte	5,0,2,35,1,9
	.byte	'PORST',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'reserved_17',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'CB0',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'CB1',0,1
	.word	474
	.byte	1,4,2,35,2,9
	.byte	'CB3',0,1
	.word	474
	.byte	1,3,2,35,2,9
	.byte	'reserved_21',0,1
	.word	474
	.byte	1,2,2,35,2,9
	.byte	'reserved_22',0,1
	.word	474
	.byte	1,1,2,35,2,9
	.byte	'EVRC',0,1
	.word	474
	.byte	1,0,2,35,2,9
	.byte	'EVR33',0,1
	.word	474
	.byte	1,7,2,35,3,9
	.byte	'SWD',0,1
	.word	474
	.byte	1,6,2,35,3,9
	.byte	'HSMS',0,1
	.word	474
	.byte	1,5,2,35,3,9
	.byte	'HSMA',0,1
	.word	474
	.byte	1,4,2,35,3,9
	.byte	'STBYR',0,1
	.word	474
	.byte	1,3,2,35,3,9
	.byte	'LBPORST',0,1
	.word	474
	.byte	1,2,2,35,3,9
	.byte	'LBTERM',0,1
	.word	474
	.byte	1,1,2,35,3,9
	.byte	'reserved_31',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,3,247,7,3
	.word	42112
	.byte	8
	.byte	'_Ifx_SCU_SEICON0_Bits',0,3,250,7,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'ENDINIT',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EPW',0,4
	.word	322
	.byte	14,16,2,35,0,9
	.byte	'REL',0,4
	.word	322
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_SCU_SEICON0_Bits',0,3,128,8,3
	.word	42661
	.byte	8
	.byte	'_Ifx_SCU_SEICON1_Bits',0,3,131,8,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'reserved_1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'IR0',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'DR',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'IR1',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,4
	.word	299
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_SEICON1_Bits',0,3,140,8,3
	.word	42791
	.byte	8
	.byte	'_Ifx_SCU_SEISR_Bits',0,3,143,8,16,4,9
	.byte	'AE',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'OE',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'IS0',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'DS',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'TO',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'IS1',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,2
	.word	277
	.byte	10,0,2,35,0,9
	.byte	'TIM',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_SEISR_Bits',0,3,153,8,3
	.word	42982
	.byte	8
	.byte	'_Ifx_SCU_STCON_Bits',0,3,156,8,16,4,9
	.byte	'reserved_0',0,2
	.word	277
	.byte	13,3,2,35,0,9
	.byte	'SFCBAE',0,1
	.word	474
	.byte	1,2,2,35,1,9
	.byte	'CFCBAE',0,1
	.word	474
	.byte	1,1,2,35,1,9
	.byte	'STP',0,1
	.word	474
	.byte	1,0,2,35,1,9
	.byte	'reserved_16',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_STCON_Bits',0,3,163,8,3
	.word	43160
	.byte	8
	.byte	'_Ifx_SCU_STMEM1_Bits',0,3,166,8,16,4,9
	.byte	'MEM',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM1_Bits',0,3,169,8,3
	.word	43311
	.byte	8
	.byte	'_Ifx_SCU_STMEM2_Bits',0,3,172,8,16,4,9
	.byte	'MEM',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM2_Bits',0,3,175,8,3
	.word	43383
	.byte	8
	.byte	'_Ifx_SCU_STMEM3_Bits',0,3,178,8,16,4,9
	.byte	'MEM',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM3_Bits',0,3,181,8,3
	.word	43455
	.byte	8
	.byte	'_Ifx_SCU_STMEM4_Bits',0,3,184,8,16,4,9
	.byte	'MEM',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM4_Bits',0,3,187,8,3
	.word	43527
	.byte	8
	.byte	'_Ifx_SCU_STMEM5_Bits',0,3,190,8,16,4,9
	.byte	'MEM',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM5_Bits',0,3,193,8,3
	.word	43599
	.byte	8
	.byte	'_Ifx_SCU_STMEM6_Bits',0,3,196,8,16,4,9
	.byte	'MEM',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM6_Bits',0,3,199,8,3
	.word	43671
	.byte	8
	.byte	'_Ifx_SCU_STSTAT_Bits',0,3,202,8,16,4,9
	.byte	'HWCFG',0,1
	.word	474
	.byte	8,0,2,35,0,9
	.byte	'FTM',0,1
	.word	474
	.byte	7,1,2,35,1,9
	.byte	'MODE',0,1
	.word	474
	.byte	1,0,2,35,1,9
	.byte	'FCBAE',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'LUDIS',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'reserved_18',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'TRSTL',0,1
	.word	474
	.byte	1,4,2,35,2,9
	.byte	'SPDEN',0,1
	.word	474
	.byte	1,3,2,35,2,9
	.byte	'reserved_21',0,1
	.word	474
	.byte	1,2,2,35,2,9
	.byte	'reserved_22',0,1
	.word	474
	.byte	1,1,2,35,2,9
	.byte	'reserved_23',0,1
	.word	474
	.byte	1,0,2,35,2,9
	.byte	'RAMINT',0,1
	.word	474
	.byte	1,7,2,35,3,9
	.byte	'reserved_25',0,1
	.word	474
	.byte	3,4,2,35,3,9
	.byte	'reserved_28',0,1
	.word	474
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_STSTAT_Bits',0,3,218,8,3
	.word	43743
	.byte	8
	.byte	'_Ifx_SCU_SWAPCTRL_Bits',0,3,221,8,16,4,9
	.byte	'ADDRCFG',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'SPARE',0,2
	.word	277
	.byte	14,0,2,35,0,9
	.byte	'reserved_16',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_SWAPCTRL_Bits',0,3,226,8,3
	.word	44072
	.byte	8
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,3,229,8,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'SWRSTREQ',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	6,0,2,35,0,9
	.byte	'reserved_8',0,1
	.word	474
	.byte	8,0,2,35,1,9
	.byte	'reserved_16',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,3,236,8,3
	.word	44192
	.byte	8
	.byte	'_Ifx_SCU_SYSCON_Bits',0,3,239,8,16,4,9
	.byte	'CCTRIG0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'reserved_1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'RAMINTM',0,1
	.word	474
	.byte	2,4,2,35,0,9
	.byte	'SETLUDIS',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'reserved_5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'reserved_7',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'DDC',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'reserved_9',0,1
	.word	474
	.byte	7,0,2,35,1,9
	.byte	'reserved_16',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_SYSCON_Bits',0,3,251,8,3
	.word	44362
	.byte	8
	.byte	'_Ifx_SCU_SYSPLLCON0_Bits',0,3,254,8,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'MODEN',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'reserved_3',0,2
	.word	277
	.byte	6,7,2,35,0,9
	.byte	'NDIV',0,1
	.word	474
	.byte	7,0,2,35,1,9
	.byte	'PLLPWD',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'reserved_17',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'RESLD',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'reserved_19',0,1
	.word	474
	.byte	5,0,2,35,2,9
	.byte	'PDIV',0,1
	.word	474
	.byte	3,5,2,35,3,9
	.byte	'reserved_27',0,1
	.word	474
	.byte	3,2,2,35,3,9
	.byte	'INSEL',0,1
	.word	474
	.byte	2,0,2,35,3,0,29
	.byte	'Ifx_SCU_SYSPLLCON0_Bits',0,3,139,9,3
	.word	44625
	.byte	8
	.byte	'_Ifx_SCU_SYSPLLCON1_Bits',0,3,142,9,16,4,9
	.byte	'K2DIV',0,1
	.word	474
	.byte	3,5,2,35,0,9
	.byte	'reserved_3',0,4
	.word	299
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_SCU_SYSPLLCON1_Bits',0,3,146,9,3
	.word	44904
	.byte	8
	.byte	'_Ifx_SCU_SYSPLLCON2_Bits',0,3,149,9,16,4,9
	.byte	'MODCFG',0,2
	.word	277
	.byte	16,0,2,35,0,9
	.byte	'reserved_16',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_SYSPLLCON2_Bits',0,3,153,9,3
	.word	45008
	.byte	8
	.byte	'_Ifx_SCU_SYSPLLSTAT_Bits',0,3,156,9,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'PWDSTAT',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'LOCK',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'reserved_3',0,1
	.word	474
	.byte	2,3,2,35,0,9
	.byte	'K2RDY',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'MODRUN',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'reserved_8',0,4
	.word	299
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_SYSPLLSTAT_Bits',0,3,166,9,3
	.word	45114
	.byte	8
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,3,169,9,16,4,9
	.byte	'ESR0T',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'ESR1T',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'TRAP2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'SMUT',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,4
	.word	299
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,3,176,9,3
	.word	45337
	.byte	8
	.byte	'_Ifx_SCU_TRAPDIS0_Bits',0,3,179,9,16,4,9
	.byte	'CPU0ESR0T',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'CPU0ESR1T',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'CPU0TRAP2T',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'CPU0SMUT',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,1
	.word	474
	.byte	4,0,2,35,0,9
	.byte	'CPU1ESR0T',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'CPU1ESR1T',0,1
	.word	474
	.byte	1,6,2,35,1,9
	.byte	'CPU1TRAP2T',0,1
	.word	474
	.byte	1,5,2,35,1,9
	.byte	'CPU1SMUT',0,1
	.word	474
	.byte	1,4,2,35,1,9
	.byte	'reserved_12',0,1
	.word	474
	.byte	4,0,2,35,1,9
	.byte	'CPU2ESR0T',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'CPU2ESR1T',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'CPU2TRAP2T',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'CPU2SMUT',0,1
	.word	474
	.byte	1,4,2,35,2,9
	.byte	'reserved_20',0,1
	.word	474
	.byte	4,0,2,35,2,9
	.byte	'CPU3ESR0T',0,1
	.word	474
	.byte	1,7,2,35,3,9
	.byte	'CPU3ESR1T',0,1
	.word	474
	.byte	1,6,2,35,3,9
	.byte	'CPU3TRAP2T',0,1
	.word	474
	.byte	1,5,2,35,3,9
	.byte	'CPU3SMUT',0,1
	.word	474
	.byte	1,4,2,35,3,9
	.byte	'reserved_28',0,1
	.word	474
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_TRAPDIS0_Bits',0,3,201,9,3
	.word	45485
	.byte	8
	.byte	'_Ifx_SCU_TRAPDIS1_Bits',0,3,204,9,16,4,9
	.byte	'CPU4ESR0T',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'CPU4ESR1T',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'CPU4TRAP2T',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'CPU4SMUT',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,1
	.word	474
	.byte	4,0,2,35,0,9
	.byte	'CPU5ESR0T',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'CPU5ESR1T',0,1
	.word	474
	.byte	1,6,2,35,1,9
	.byte	'CPU5TRAP2T',0,1
	.word	474
	.byte	1,5,2,35,1,9
	.byte	'CPU5SMUT',0,1
	.word	474
	.byte	1,4,2,35,1,9
	.byte	'reserved_12',0,1
	.word	474
	.byte	4,0,2,35,1,9
	.byte	'reserved_16',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_TRAPDIS1_Bits',0,3,217,9,3
	.word	45973
	.byte	8
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,3,220,9,16,4,9
	.byte	'ESR0T',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'ESR1T',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'TRAP2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'SMUT',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,4
	.word	299
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSET_Bits',0,3,227,9,3
	.word	46270
	.byte	8
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,3,230,9,16,4,9
	.byte	'ESR0T',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'ESR1T',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'TRAP2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'SMUT',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,4
	.word	299
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,3,237,9,3
	.word	46418
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,3,246,9,3
	.word	338
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,3,134,10,3
	.word	491
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,3,150,10,3
	.word	757
	.byte	8
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,3,153,10,16,4,9
	.byte	'ENDINIT',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'LCK',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'PW',0,4
	.word	322
	.byte	14,16,2,35,0,9
	.byte	'REL',0,4
	.word	322
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,3,159,10,3
	.word	46668
	.byte	8
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,3,162,10,16,4,9
	.byte	'CLRIRF',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'reserved_1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'IR0',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'DR',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'IR1',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'UR',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'PAR',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'TCR',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'TCTR',0,1
	.word	474
	.byte	7,0,2,35,1,9
	.byte	'reserved_16',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,3,175,10,3
	.word	46794
	.byte	8
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,3,178,10,16,4,9
	.byte	'AE',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'OE',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'IS0',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'DS',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'TO',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'IS1',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'US',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'PAS',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'TCS',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'TCT',0,1
	.word	474
	.byte	7,0,2,35,1,9
	.byte	'TIM',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,3,191,10,3
	.word	47046
	.byte	10,3,199,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	27702
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN00',0,3,204,10,3
	.word	47265
	.byte	10,3,207,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	28261
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN01',0,3,212,10,3
	.word	47330
	.byte	10,3,215,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	28340
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN10',0,3,220,10,3
	.word	47395
	.byte	10,3,223,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	28900
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN11',0,3,228,10,3
	.word	47460
	.byte	10,3,231,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	28981
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ARSTDIS',0,3,236,10,3
	.word	47525
	.byte	10,3,239,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	29198
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON0',0,3,244,10,3
	.word	47590
	.byte	10,3,247,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	29471
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON1',0,3,252,10,3
	.word	47655
	.byte	10,3,255,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	29797
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON10',0,3,132,11,3
	.word	47720
	.byte	10,3,135,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	29899
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON11',0,3,140,11,3
	.word	47786
	.byte	10,3,143,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	30001
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON2',0,3,148,11,3
	.word	47852
	.byte	10,3,151,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	30275
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON3',0,3,156,11,3
	.word	47917
	.byte	10,3,159,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	30644
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON4',0,3,164,11,3
	.word	47982
	.byte	10,3,167,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	30824
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON5',0,3,172,11,3
	.word	48047
	.byte	10,3,175,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	30993
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON6',0,3,180,11,3
	.word	48112
	.byte	10,3,183,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	31093
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON7',0,3,188,11,3
	.word	48177
	.byte	10,3,191,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	31193
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON8',0,3,196,11,3
	.word	48242
	.byte	10,3,199,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	31293
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON9',0,3,204,11,3
	.word	48307
	.byte	10,3,207,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	31393
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CHIPID',0,3,212,11,3
	.word	48372
	.byte	10,3,215,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	31596
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_DTSCLIM',0,3,220,11,3
	.word	48436
	.byte	10,3,223,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	31828
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_DTSCSTAT',0,3,228,11,3
	.word	48501
	.byte	10,3,231,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	31930
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EICON0',0,3,236,11,3
	.word	48567
	.byte	10,3,239,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	32058
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EICON1',0,3,244,11,3
	.word	48631
	.byte	10,3,247,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	32247
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EICR',0,3,252,11,3
	.word	48695
	.byte	10,3,255,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	32611
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EIFILT',0,3,132,12,3
	.word	48757
	.byte	10,3,135,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	33050
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EIFR',0,3,140,12,3
	.word	48821
	.byte	10,3,143,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	33261
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EISR',0,3,148,12,3
	.word	48883
	.byte	10,3,151,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	33437
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EMSR',0,3,156,12,3
	.word	48945
	.byte	10,3,159,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	33631
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EMSSW',0,3,164,12,3
	.word	49007
	.byte	10,3,167,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	33766
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX',0,3,172,12,3
	.word	49070
	.byte	10,3,175,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	33902
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ESROCFG',0,3,180,12,3
	.word	49143
	.byte	10,3,183,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	34013
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EXTCON',0,3,188,12,3
	.word	49208
	.byte	10,3,191,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	34231
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_FDR',0,3,196,12,3
	.word	49272
	.byte	10,3,199,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	34394
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_FMR',0,3,204,12,3
	.word	49333
	.byte	10,3,207,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	34730
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ID',0,3,212,12,3
	.word	49394
	.byte	10,3,215,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	34837
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_IGCR',0,3,220,12,3
	.word	49454
	.byte	10,3,223,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	35289
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_IN',0,3,228,12,3
	.word	49516
	.byte	10,3,231,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	35388
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_IOCR',0,3,236,12,3
	.word	49576
	.byte	10,3,239,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	35538
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL0',0,3,244,12,3
	.word	49638
	.byte	10,3,247,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	35776
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL1',0,3,252,12,3
	.word	49706
	.byte	10,3,255,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	35937
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL2',0,3,132,13,3
	.word	49774
	.byte	10,3,135,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	36043
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL3',0,3,140,13,3
	.word	49842
	.byte	10,3,143,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	36129
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LCLCON0',0,3,148,13,3
	.word	49910
	.byte	10,3,151,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	36297
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LCLCON1',0,3,156,13,3
	.word	49975
	.byte	10,3,159,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	36465
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LCLTEST',0,3,164,13,3
	.word	50040
	.byte	10,3,167,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	36779
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_MANID',0,3,172,13,3
	.word	50105
	.byte	10,3,175,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	36890
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OMR',0,3,180,13,3
	.word	50168
	.byte	10,3,183,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	37048
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OSCCON',0,3,188,13,3
	.word	50229
	.byte	10,3,191,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	37459
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OUT',0,3,196,13,3
	.word	50293
	.byte	10,3,199,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	37560
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OVCCON',0,3,204,13,3
	.word	50354
	.byte	10,3,207,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	37878
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OVCENABLE',0,3,212,13,3
	.word	50418
	.byte	10,3,215,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	38065
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PDISC',0,3,220,13,3
	.word	50485
	.byte	10,3,223,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	38176
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PDR',0,3,228,13,3
	.word	50548
	.byte	10,3,231,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	38309
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PDRR',0,3,236,13,3
	.word	50609
	.byte	10,3,239,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	38512
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PERPLLCON0',0,3,244,13,3
	.word	50671
	.byte	10,3,247,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	38752
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PERPLLCON1',0,3,252,13,3
	.word	50739
	.byte	10,3,255,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	38896
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PERPLLSTAT',0,3,132,14,3
	.word	50807
	.byte	10,3,135,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	39118
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR0',0,3,140,14,3
	.word	50875
	.byte	10,3,143,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	39254
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR1',0,3,148,14,3
	.word	50939
	.byte	10,3,151,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	39390
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR2',0,3,156,14,3
	.word	51003
	.byte	10,3,159,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	39526
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR3',0,3,164,14,3
	.word	51067
	.byte	10,3,167,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	39662
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR4',0,3,172,14,3
	.word	51131
	.byte	10,3,175,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	39798
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR5',0,3,180,14,3
	.word	51195
	.byte	10,3,183,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	39934
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSTAT0',0,3,188,14,3
	.word	51259
	.byte	10,3,191,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	40206
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWCR1',0,3,196,14,3
	.word	51324
	.byte	10,3,199,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	40451
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMTRCSR0',0,3,204,14,3
	.word	51389
	.byte	10,3,207,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	40839
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMTRCSR1',0,3,212,14,3
	.word	51455
	.byte	10,3,215,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	40957
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMTRCSR2',0,3,220,14,3
	.word	51521
	.byte	10,3,223,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	41200
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMTRCSR3',0,3,228,14,3
	.word	51587
	.byte	10,3,231,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	41467
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTCON',0,3,236,14,3
	.word	51653
	.byte	10,3,239,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	41726
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTCON2',0,3,244,14,3
	.word	51717
	.byte	10,3,247,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	42031
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTCON3',0,3,252,14,3
	.word	51782
	.byte	10,3,255,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	42112
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTSTAT',0,3,132,15,3
	.word	51847
	.byte	10,3,135,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	42661
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SEICON0',0,3,140,15,3
	.word	51912
	.byte	10,3,143,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	42791
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SEICON1',0,3,148,15,3
	.word	51977
	.byte	10,3,151,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	42982
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SEISR',0,3,156,15,3
	.word	52042
	.byte	10,3,159,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	43160
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STCON',0,3,164,15,3
	.word	52105
	.byte	10,3,167,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	43311
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM1',0,3,172,15,3
	.word	52168
	.byte	10,3,175,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	43383
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM2',0,3,180,15,3
	.word	52232
	.byte	10,3,183,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	43455
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM3',0,3,188,15,3
	.word	52296
	.byte	10,3,191,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	43527
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM4',0,3,196,15,3
	.word	52360
	.byte	10,3,199,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	43599
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM5',0,3,204,15,3
	.word	52424
	.byte	10,3,207,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	43671
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM6',0,3,212,15,3
	.word	52488
	.byte	10,3,215,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	43743
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STSTAT',0,3,220,15,3
	.word	52552
	.byte	10,3,223,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	44072
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SWAPCTRL',0,3,228,15,3
	.word	52616
	.byte	10,3,231,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	44192
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SWRSTCON',0,3,236,15,3
	.word	52682
	.byte	10,3,239,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	44362
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SYSCON',0,3,244,15,3
	.word	52748
	.byte	10,3,247,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	44625
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SYSPLLCON0',0,3,252,15,3
	.word	52812
	.byte	10,3,255,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	44904
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SYSPLLCON1',0,3,132,16,3
	.word	52880
	.byte	10,3,135,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	45008
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SYSPLLCON2',0,3,140,16,3
	.word	52948
	.byte	10,3,143,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	45114
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SYSPLLSTAT',0,3,148,16,3
	.word	53016
	.byte	10,3,151,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	45337
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPCLR',0,3,156,16,3
	.word	53084
	.byte	10,3,159,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	45485
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPDIS0',0,3,164,16,3
	.word	53149
	.byte	10,3,167,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	45973
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPDIS1',0,3,172,16,3
	.word	53215
	.byte	10,3,175,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	46270
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSET',0,3,180,16,3
	.word	53281
	.byte	10,3,183,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	46418
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSTAT',0,3,188,16,3
	.word	53346
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_CON0',0,3,196,16,3
	.word	434
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_CON1',0,3,204,16,3
	.word	717
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_SR',0,3,212,16,3
	.word	948
	.byte	10,3,215,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	46668
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_CON0',0,3,220,16,3
	.word	53497
	.byte	10,3,223,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	46794
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_CON1',0,3,228,16,3
	.word	53564
	.byte	10,3,231,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	47046
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_WDTS_SR',0,3,236,16,3
	.word	53631
	.byte	8
	.byte	'_Ifx_SCU_ESRCFGX',0,3,248,16,25,4,11
	.byte	'ESRCFGX',0
	.word	49070
	.byte	4,2,35,0,0,12
	.word	53696
	.byte	29
	.byte	'Ifx_SCU_ESRCFGX',0,3,251,16,3
	.word	53737
	.byte	12
	.word	988
	.byte	29
	.byte	'Ifx_SCU_WDTCPU',0,3,143,17,3
	.word	53767
	.byte	8
	.byte	'_Ifx_SCU_WDTS',0,3,158,17,25,12,11
	.byte	'CON0',0
	.word	53497
	.byte	4,2,35,0,11
	.byte	'CON1',0
	.word	53564
	.byte	4,2,35,4,11
	.byte	'SR',0
	.word	53631
	.byte	4,2,35,8,0,12
	.word	53796
	.byte	29
	.byte	'Ifx_SCU_WDTS',0,3,163,17,3
	.word	53857
	.byte	29
	.byte	'Ifx_CPU_A_Bits',0,4,73,3
	.word	22188
	.byte	29
	.byte	'Ifx_CPU_BIV_Bits',0,4,80,3
	.word	21304
	.byte	29
	.byte	'Ifx_CPU_BLK_OMASK_Bits',0,4,89,3
	.word	11229
	.byte	29
	.byte	'Ifx_CPU_BLK_OTAR_Bits',0,4,97,3
	.word	11098
	.byte	29
	.byte	'Ifx_CPU_BLK_RABR_Bits',0,4,108,3
	.word	10912
	.byte	29
	.byte	'Ifx_CPU_BTV_Bits',0,4,115,3
	.word	21398
	.byte	29
	.byte	'Ifx_CPU_CCNT_Bits',0,4,122,3
	.word	18488
	.byte	29
	.byte	'Ifx_CPU_CCTRL_Bits',0,4,133,1,3
	.word	18329
	.byte	29
	.byte	'Ifx_CPU_COMPAT_Bits',0,4,142,1,3
	.word	14230
	.byte	29
	.byte	'Ifx_CPU_CORE_ID_Bits',0,4,149,1,3
	.word	21194
	.byte	29
	.byte	'Ifx_CPU_CPR_L_Bits',0,4,156,1,3
	.word	15683
	.byte	29
	.byte	'Ifx_CPU_CPR_U_Bits',0,4,163,1,3
	.word	15790
	.byte	29
	.byte	'Ifx_CPU_CPU_ID_Bits',0,4,171,1,3
	.word	21073
	.byte	29
	.byte	'Ifx_CPU_CPXE_Bits',0,4,178,1,3
	.word	15964
	.byte	29
	.byte	'Ifx_CPU_CREVT_Bits',0,4,189,1,3
	.word	19403
	.byte	29
	.byte	'Ifx_CPU_CUS_ID_Bits',0,4,196,1,3
	.word	21975
	.byte	29
	.byte	'Ifx_CPU_D_Bits',0,4,202,1,3
	.word	22091
	.byte	29
	.byte	'Ifx_CPU_DATR_Bits',0,4,216,1,3
	.word	12662
	.byte	29
	.byte	'Ifx_CPU_DBGSR_Bits',0,4,230,1,3
	.word	19010
	.byte	29
	.byte	'Ifx_CPU_DBGTCR_Bits',0,4,237,1,3
	.word	20162
	.byte	29
	.byte	'Ifx_CPU_DCON0_Bits',0,4,245,1,3
	.word	1550
	.byte	29
	.byte	'Ifx_CPU_DCON2_Bits',0,4,252,1,3
	.word	12059
	.byte	29
	.byte	'Ifx_CPU_DCX_Bits',0,4,131,2,3
	.word	20055
	.byte	29
	.byte	'Ifx_CPU_DEADD_Bits',0,4,137,2,3
	.word	12901
	.byte	29
	.byte	'Ifx_CPU_DIEAR_Bits',0,4,143,2,3
	.word	12993
	.byte	29
	.byte	'Ifx_CPU_DIETR_Bits',0,4,161,2,3
	.word	13074
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,4,198,2,3
	.word	9624
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,4,235,2,3
	.word	8442
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,4,144,3,3
	.word	10210
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,4,181,3,3
	.word	9028
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,4,188,3,3
	.word	8210
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,4,195,3,3
	.word	8326
	.byte	29
	.byte	'Ifx_CPU_DMS_Bits',0,4,202,3,3
	.word	19948
	.byte	29
	.byte	'Ifx_CPU_DPRE_Bits',0,4,209,3,3
	.word	16069
	.byte	29
	.byte	'Ifx_CPU_DPR_L_Bits',0,4,216,3,3
	.word	15401
	.byte	29
	.byte	'Ifx_CPU_DPR_U_Bits',0,4,223,3,3
	.word	15508
	.byte	29
	.byte	'Ifx_CPU_DPWE_Bits',0,4,230,3,3
	.word	16174
	.byte	29
	.byte	'Ifx_CPU_DSTR_Bits',0,4,252,3,3
	.word	12301
	.byte	29
	.byte	'Ifx_CPU_EXEVT_Bits',0,4,135,4,3
	.word	19237
	.byte	29
	.byte	'Ifx_CPU_FCX_Bits',0,4,143,4,3
	.word	21735
	.byte	29
	.byte	'Ifx_CPU_FLASHCON0_Bits',0,4,156,4,3
	.word	1689
	.byte	29
	.byte	'Ifx_CPU_FLASHCON1_Bits',0,4,167,4,3
	.word	1915
	.byte	29
	.byte	'Ifx_CPU_FLASHCON2_Bits',0,4,184,4,3
	.word	2114
	.byte	29
	.byte	'Ifx_CPU_FLASHCON3_Bits',0,4,200,4,3
	.word	2422
	.byte	29
	.byte	'Ifx_CPU_FLASHCON4_Bits',0,4,207,4,3
	.word	2735
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,4,229,4,3
	.word	14381
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,4,239,4,3
	.word	14822
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,4,245,4,3
	.word	14735
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,4,251,4,3
	.word	14987
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,4,129,5,3
	.word	15078
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,4,135,5,3
	.word	15169
	.byte	29
	.byte	'Ifx_CPU_ICNT_Bits',0,4,142,5,3
	.word	18591
	.byte	29
	.byte	'Ifx_CPU_ICR_Bits',0,4,152,5,3
	.word	21579
	.byte	29
	.byte	'Ifx_CPU_ISP_Bits',0,4,158,5,3
	.word	21499
	.byte	29
	.byte	'Ifx_CPU_KRST0_Bits',0,4,166,5,3
	.word	2857
	.byte	29
	.byte	'Ifx_CPU_KRST1_Bits',0,4,173,5,3
	.word	2980
	.byte	29
	.byte	'Ifx_CPU_KRSTCLR_Bits',0,4,180,5,3
	.word	3084
	.byte	29
	.byte	'Ifx_CPU_LCX_Bits',0,4,188,5,3
	.word	21855
	.byte	29
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,4,225,5,3
	.word	7025
	.byte	29
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,4,134,6,3
	.word	7607
	.byte	29
	.byte	'Ifx_CPU_M1CNT_Bits',0,4,141,6,3
	.word	18695
	.byte	29
	.byte	'Ifx_CPU_M2CNT_Bits',0,4,148,6,3
	.word	18800
	.byte	29
	.byte	'Ifx_CPU_M3CNT_Bits',0,4,155,6,3
	.word	18905
	.byte	29
	.byte	'Ifx_CPU_OSEL_Bits',0,4,161,6,3
	.word	10817
	.byte	29
	.byte	'Ifx_CPU_PC_Bits',0,4,168,6,3
	.word	20663
	.byte	29
	.byte	'Ifx_CPU_PCON0_Bits',0,4,176,6,3
	.word	1422
	.byte	29
	.byte	'Ifx_CPU_PCON1_Bits',0,4,184,6,3
	.word	13606
	.byte	29
	.byte	'Ifx_CPU_PCON2_Bits',0,4,191,6,3
	.word	13729
	.byte	29
	.byte	'Ifx_CPU_PCXI_Bits',0,4,202,6,3
	.word	20278
	.byte	29
	.byte	'Ifx_CPU_PIEAR_Bits',0,4,208,6,3
	.word	13842
	.byte	29
	.byte	'Ifx_CPU_PIETR_Bits',0,4,226,6,3
	.word	13923
	.byte	29
	.byte	'Ifx_CPU_PMA0_Bits',0,4,233,6,3
	.word	11736
	.byte	29
	.byte	'Ifx_CPU_PMA1_Bits',0,4,240,6,3
	.word	11840
	.byte	29
	.byte	'Ifx_CPU_PMA2_Bits',0,4,247,6,3
	.word	11944
	.byte	29
	.byte	'Ifx_CPU_PSTR_Bits',0,4,132,7,3
	.word	13390
	.byte	29
	.byte	'Ifx_CPU_PSW_Bits',0,4,147,7,3
	.word	20444
	.byte	29
	.byte	'Ifx_CPU_RGN_ACCENA_Bits',0,4,184,7,3
	.word	3413
	.byte	29
	.byte	'Ifx_CPU_RGN_ACCENB_Bits',0,4,221,7,3
	.word	3987
	.byte	29
	.byte	'Ifx_CPU_RGN_LA_Bits',0,4,228,7,3
	.word	3201
	.byte	29
	.byte	'Ifx_CPU_RGN_UA_Bits',0,4,235,7,3
	.word	3307
	.byte	29
	.byte	'Ifx_CPU_SEGEN_Bits',0,4,244,7,3
	.word	11465
	.byte	29
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,4,153,8,3
	.word	5851
	.byte	29
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,4,190,8,3
	.word	6433
	.byte	29
	.byte	'Ifx_CPU_SMACON_Bits',0,4,198,8,3
	.word	12172
	.byte	29
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,4,235,8,3
	.word	4671
	.byte	29
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,4,144,9,3
	.word	5256
	.byte	29
	.byte	'Ifx_CPU_SWEVT_Bits',0,4,155,9,3
	.word	19569
	.byte	29
	.byte	'Ifx_CPU_SYSCON_Bits',0,4,173,9,3
	.word	20763
	.byte	29
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,4,180,9,3
	.word	11618
	.byte	29
	.byte	'Ifx_CPU_TPS_CON_Bits',0,4,191,9,3
	.word	16299
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,4,198,9,3
	.word	17188
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,4,205,9,3
	.word	16789
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,4,213,9,3
	.word	16640
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,4,220,9,3
	.word	17063
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,4,228,9,3
	.word	16916
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_FCX_Bits',0,4,235,9,3
	.word	17563
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_STAT_Bits',0,4,248,9,3
	.word	17316
	.byte	29
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,4,254,9,3
	.word	16481
	.byte	29
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,4,140,10,3
	.word	19744
	.byte	29
	.byte	'Ifx_CPU_TR_ADR_Bits',0,4,146,10,3
	.word	18175
	.byte	29
	.byte	'Ifx_CPU_TR_EVT_Bits',0,4,166,10,3
	.word	17846
	.byte	29
	.byte	'Ifx_CPU_A',0,4,179,10,3
	.word	22226
	.byte	29
	.byte	'Ifx_CPU_BIV',0,4,187,10,3
	.word	21358
	.byte	29
	.byte	'Ifx_CPU_BLK_OMASK',0,4,195,10,3
	.word	11336
	.byte	29
	.byte	'Ifx_CPU_BLK_OTAR',0,4,203,10,3
	.word	11189
	.byte	29
	.byte	'Ifx_CPU_BLK_RABR',0,4,211,10,3
	.word	11058
	.byte	29
	.byte	'Ifx_CPU_BTV',0,4,219,10,3
	.word	21459
	.byte	29
	.byte	'Ifx_CPU_CCNT',0,4,227,10,3
	.word	18551
	.byte	29
	.byte	'Ifx_CPU_CCTRL',0,4,235,10,3
	.word	18448
	.byte	29
	.byte	'Ifx_CPU_COMPAT',0,4,243,10,3
	.word	14330
	.byte	29
	.byte	'Ifx_CPU_CORE_ID',0,4,251,10,3
	.word	21264
	.byte	29
	.byte	'Ifx_CPU_CPR_L',0,4,131,11,3
	.word	15750
	.byte	29
	.byte	'Ifx_CPU_CPR_U',0,4,139,11,3
	.word	15857
	.byte	29
	.byte	'Ifx_CPU_CPU_ID',0,4,147,11,3
	.word	21154
	.byte	29
	.byte	'Ifx_CPU_CPXE',0,4,155,11,3
	.word	16029
	.byte	29
	.byte	'Ifx_CPU_CREVT',0,4,163,11,3
	.word	19529
	.byte	29
	.byte	'Ifx_CPU_CUS_ID',0,4,171,11,3
	.word	22040
	.byte	29
	.byte	'Ifx_CPU_D',0,4,179,11,3
	.word	22130
	.byte	29
	.byte	'Ifx_CPU_DATR',0,4,187,11,3
	.word	12861
	.byte	29
	.byte	'Ifx_CPU_DBGSR',0,4,195,11,3
	.word	19197
	.byte	29
	.byte	'Ifx_CPU_DBGTCR',0,4,203,11,3
	.word	20227
	.byte	29
	.byte	'Ifx_CPU_DCON0',0,4,211,11,3
	.word	1638
	.byte	29
	.byte	'Ifx_CPU_DCON2',0,4,219,11,3
	.word	12132
	.byte	29
	.byte	'Ifx_CPU_DCX',0,4,227,11,3
	.word	20122
	.byte	29
	.byte	'Ifx_CPU_DEADD',0,4,235,11,3
	.word	12953
	.byte	29
	.byte	'Ifx_CPU_DIEAR',0,4,243,11,3
	.word	13034
	.byte	29
	.byte	'Ifx_CPU_DIETR',0,4,251,11,3
	.word	13330
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R',0,4,131,12,3
	.word	10170
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W',0,4,139,12,3
	.word	8988
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R',0,4,147,12,3
	.word	10766
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W',0,4,155,12,3
	.word	9584
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA',0,4,163,12,3
	.word	8286
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA',0,4,171,12,3
	.word	8402
	.byte	29
	.byte	'Ifx_CPU_DMS',0,4,179,12,3
	.word	20015
	.byte	29
	.byte	'Ifx_CPU_DPRE',0,4,187,12,3
	.word	16134
	.byte	29
	.byte	'Ifx_CPU_DPR_L',0,4,195,12,3
	.word	15468
	.byte	29
	.byte	'Ifx_CPU_DPR_U',0,4,203,12,3
	.word	15575
	.byte	29
	.byte	'Ifx_CPU_DPWE',0,4,211,12,3
	.word	16239
	.byte	29
	.byte	'Ifx_CPU_DSTR',0,4,219,12,3
	.word	12613
	.byte	29
	.byte	'Ifx_CPU_EXEVT',0,4,227,12,3
	.word	19363
	.byte	29
	.byte	'Ifx_CPU_FCX',0,4,235,12,3
	.word	21815
	.byte	29
	.byte	'Ifx_CPU_FLASHCON0',0,4,243,12,3
	.word	1875
	.byte	29
	.byte	'Ifx_CPU_FLASHCON1',0,4,251,12,3
	.word	2074
	.byte	29
	.byte	'Ifx_CPU_FLASHCON2',0,4,131,13,3
	.word	2382
	.byte	29
	.byte	'Ifx_CPU_FLASHCON3',0,4,139,13,3
	.word	2695
	.byte	29
	.byte	'Ifx_CPU_FLASHCON4',0,4,147,13,3
	.word	2804
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,4,155,13,3
	.word	14695
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,4,163,13,3
	.word	14947
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,4,171,13,3
	.word	14782
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,4,179,13,3
	.word	15038
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,4,187,13,3
	.word	15129
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,4,195,13,3
	.word	15220
	.byte	29
	.byte	'Ifx_CPU_ICNT',0,4,203,13,3
	.word	18655
	.byte	29
	.byte	'Ifx_CPU_ICR',0,4,211,13,3
	.word	21695
	.byte	29
	.byte	'Ifx_CPU_ISP',0,4,219,13,3
	.word	21539
	.byte	29
	.byte	'Ifx_CPU_KRST0',0,4,227,13,3
	.word	2940
	.byte	29
	.byte	'Ifx_CPU_KRST1',0,4,235,13,3
	.word	3044
	.byte	29
	.byte	'Ifx_CPU_KRSTCLR',0,4,243,13,3
	.word	3150
	.byte	29
	.byte	'Ifx_CPU_LCX',0,4,251,13,3
	.word	21935
	.byte	29
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R',0,4,131,14,3
	.word	7567
	.byte	29
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R',0,4,139,14,3
	.word	8159
	.byte	29
	.byte	'Ifx_CPU_M1CNT',0,4,147,14,3
	.word	18760
	.byte	29
	.byte	'Ifx_CPU_M2CNT',0,4,155,14,3
	.word	18865
	.byte	29
	.byte	'Ifx_CPU_M3CNT',0,4,163,14,3
	.word	18970
	.byte	29
	.byte	'Ifx_CPU_OSEL',0,4,171,14,3
	.word	10863
	.byte	29
	.byte	'Ifx_CPU_PC',0,4,179,14,3
	.word	20723
	.byte	29
	.byte	'Ifx_CPU_PCON0',0,4,187,14,3
	.word	1510
	.byte	29
	.byte	'Ifx_CPU_PCON1',0,4,195,14,3
	.word	13689
	.byte	29
	.byte	'Ifx_CPU_PCON2',0,4,203,14,3
	.word	13802
	.byte	29
	.byte	'Ifx_CPU_PCXI',0,4,211,14,3
	.word	20404
	.byte	29
	.byte	'Ifx_CPU_PIEAR',0,4,219,14,3
	.word	13883
	.byte	29
	.byte	'Ifx_CPU_PIETR',0,4,227,14,3
	.word	14179
	.byte	29
	.byte	'Ifx_CPU_PMA0',0,4,235,14,3
	.word	11800
	.byte	29
	.byte	'Ifx_CPU_PMA1',0,4,243,14,3
	.word	11904
	.byte	29
	.byte	'Ifx_CPU_PMA2',0,4,251,14,3
	.word	12008
	.byte	29
	.byte	'Ifx_CPU_PSTR',0,4,131,15,3
	.word	13566
	.byte	29
	.byte	'Ifx_CPU_PSW',0,4,139,15,3
	.word	20623
	.byte	29
	.byte	'Ifx_CPU_RGN_ACCENA',0,4,147,15,3
	.word	3947
	.byte	29
	.byte	'Ifx_CPU_RGN_ACCENB',0,4,155,15,3
	.word	4531
	.byte	29
	.byte	'Ifx_CPU_RGN_LA',0,4,163,15,3
	.word	3267
	.byte	29
	.byte	'Ifx_CPU_RGN_UA',0,4,171,15,3
	.word	3373
	.byte	29
	.byte	'Ifx_CPU_SEGEN',0,4,179,15,3
	.word	11565
	.byte	29
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W',0,4,187,15,3
	.word	6393
	.byte	29
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W',0,4,195,15,3
	.word	6985
	.byte	29
	.byte	'Ifx_CPU_SMACON',0,4,203,15,3
	.word	12261
	.byte	29
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R',0,4,211,15,3
	.word	5216
	.byte	29
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R',0,4,219,15,3
	.word	5811
	.byte	29
	.byte	'Ifx_CPU_SWEVT',0,4,227,15,3
	.word	19695
	.byte	29
	.byte	'Ifx_CPU_SYSCON',0,4,235,15,3
	.word	21033
	.byte	29
	.byte	'Ifx_CPU_TASK_ASI',0,4,243,15,3
	.word	11685
	.byte	29
	.byte	'Ifx_CPU_TPS_CON',0,4,251,15,3
	.word	16441
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN',0,4,131,16,3
	.word	17276
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL',0,4,139,16,3
	.word	16876
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL',0,4,147,16,3
	.word	16749
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL',0,4,155,16,3
	.word	17148
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL',0,4,163,16,3
	.word	17023
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_FCX',0,4,171,16,3
	.word	17641
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_STAT',0,4,179,16,3
	.word	17523
	.byte	29
	.byte	'Ifx_CPU_TPS_TIMER',0,4,187,16,3
	.word	16529
	.byte	29
	.byte	'Ifx_CPU_TRIG_ACC',0,4,195,16,3
	.word	19908
	.byte	29
	.byte	'Ifx_CPU_TR_ADR',0,4,203,16,3
	.word	18219
	.byte	29
	.byte	'Ifx_CPU_TR_EVT',0,4,211,16,3
	.word	18135
	.byte	12
	.word	4571
	.byte	29
	.byte	'Ifx_CPU_RGN',0,4,229,16,3
	.word	59688
	.byte	12
	.word	11376
	.byte	29
	.byte	'Ifx_CPU_BLK',0,4,249,16,3
	.word	59714
	.byte	12
	.word	15260
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP',0,4,145,17,3
	.word	59740
	.byte	12
	.word	15615
	.byte	29
	.byte	'Ifx_CPU_DPR',0,4,164,17,3
	.word	59771
	.byte	12
	.word	15897
	.byte	29
	.byte	'Ifx_CPU_CPR',0,4,183,17,3
	.word	59797
	.byte	12
	.word	16578
	.byte	29
	.byte	'Ifx_CPU_TPS',0,4,202,17,3
	.word	59823
	.byte	12
	.word	17681
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM',0,4,226,17,3
	.word	59849
	.byte	12
	.word	18259
	.byte	29
	.byte	'Ifx_CPU_TR',0,4,245,17,3
	.word	59881
	.byte	12
	.word	22275
	.byte	29
	.byte	'Ifx_CPU',0,4,212,19,3
	.word	59906
	.byte	8
	.byte	'_Ifx_STM_ACCEN0_Bits',0,7,70,16,4,9
	.byte	'EN0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'EN1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'EN2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'EN3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'EN4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'EN5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'EN6',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'EN7',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'EN8',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'EN9',0,1
	.word	474
	.byte	1,6,2,35,1,9
	.byte	'EN10',0,1
	.word	474
	.byte	1,5,2,35,1,9
	.byte	'EN11',0,1
	.word	474
	.byte	1,4,2,35,1,9
	.byte	'EN12',0,1
	.word	474
	.byte	1,3,2,35,1,9
	.byte	'EN13',0,1
	.word	474
	.byte	1,2,2,35,1,9
	.byte	'EN14',0,1
	.word	474
	.byte	1,1,2,35,1,9
	.byte	'EN15',0,1
	.word	474
	.byte	1,0,2,35,1,9
	.byte	'EN16',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'EN17',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'EN18',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'EN19',0,1
	.word	474
	.byte	1,4,2,35,2,9
	.byte	'EN20',0,1
	.word	474
	.byte	1,3,2,35,2,9
	.byte	'EN21',0,1
	.word	474
	.byte	1,2,2,35,2,9
	.byte	'EN22',0,1
	.word	474
	.byte	1,1,2,35,2,9
	.byte	'EN23',0,1
	.word	474
	.byte	1,0,2,35,2,9
	.byte	'EN24',0,1
	.word	474
	.byte	1,7,2,35,3,9
	.byte	'EN25',0,1
	.word	474
	.byte	1,6,2,35,3,9
	.byte	'EN26',0,1
	.word	474
	.byte	1,5,2,35,3,9
	.byte	'EN27',0,1
	.word	474
	.byte	1,4,2,35,3,9
	.byte	'EN28',0,1
	.word	474
	.byte	1,3,2,35,3,9
	.byte	'EN29',0,1
	.word	474
	.byte	1,2,2,35,3,9
	.byte	'EN30',0,1
	.word	474
	.byte	1,1,2,35,3,9
	.byte	'EN31',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_STM_ACCEN0_Bits',0,7,104,3
	.word	59928
	.byte	8
	.byte	'_Ifx_STM_ACCEN1_Bits',0,7,107,16,4,9
	.byte	'reserved_0',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_ACCEN1_Bits',0,7,110,3
	.word	60485
	.byte	8
	.byte	'_Ifx_STM_CAP_Bits',0,7,113,16,4,9
	.byte	'STMCAP_63_32',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_CAP_Bits',0,7,116,3
	.word	60562
	.byte	8
	.byte	'_Ifx_STM_CAPSV_Bits',0,7,119,16,4,9
	.byte	'STMCAP_63_32',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_CAPSV_Bits',0,7,122,3
	.word	60635
	.byte	8
	.byte	'_Ifx_STM_CLC_Bits',0,7,125,16,4,9
	.byte	'DISR',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'DISS',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'EDIS',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,4
	.word	299
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_STM_CLC_Bits',0,7,132,1,3
	.word	60712
	.byte	8
	.byte	'_Ifx_STM_CMCON_Bits',0,7,135,1,16,4,9
	.byte	'MSIZE0',0,1
	.word	474
	.byte	5,3,2,35,0,9
	.byte	'reserved_5',0,1
	.word	474
	.byte	3,0,2,35,0,9
	.byte	'MSTART0',0,1
	.word	474
	.byte	5,3,2,35,1,9
	.byte	'reserved_13',0,1
	.word	474
	.byte	3,0,2,35,1,9
	.byte	'MSIZE1',0,1
	.word	474
	.byte	5,3,2,35,2,9
	.byte	'reserved_21',0,1
	.word	474
	.byte	3,0,2,35,2,9
	.byte	'MSTART1',0,1
	.word	474
	.byte	5,3,2,35,3,9
	.byte	'reserved_29',0,1
	.word	474
	.byte	3,0,2,35,3,0,29
	.byte	'Ifx_STM_CMCON_Bits',0,7,145,1,3
	.word	60854
	.byte	8
	.byte	'_Ifx_STM_CMP_Bits',0,7,148,1,16,4,9
	.byte	'CMPVAL',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_CMP_Bits',0,7,151,1,3
	.word	61074
	.byte	8
	.byte	'_Ifx_STM_ICR_Bits',0,7,154,1,16,4,9
	.byte	'CMP0EN',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'CMP0IR',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'CMP0OS',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'reserved_3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'CMP1EN',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'CMP1IR',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'CMP1OS',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'reserved_7',0,4
	.word	299
	.byte	25,0,2,35,0,0,29
	.byte	'Ifx_STM_ICR_Bits',0,7,164,1,3
	.word	61143
	.byte	8
	.byte	'_Ifx_STM_ID_Bits',0,7,167,1,16,4,9
	.byte	'MODREV',0,1
	.word	474
	.byte	8,0,2,35,0,9
	.byte	'MODTYPE',0,1
	.word	474
	.byte	8,0,2,35,1,9
	.byte	'MODNUM',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_STM_ID_Bits',0,7,172,1,3
	.word	61346
	.byte	8
	.byte	'_Ifx_STM_ISCR_Bits',0,7,175,1,16,4,9
	.byte	'CMP0IRR',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'CMP0IRS',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'CMP1IRR',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'CMP1IRS',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,4
	.word	299
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_STM_ISCR_Bits',0,7,182,1,3
	.word	61450
	.byte	8
	.byte	'_Ifx_STM_KRST0_Bits',0,7,185,1,16,4,9
	.byte	'RST',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'RSTSTAT',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'reserved_2',0,4
	.word	299
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_STM_KRST0_Bits',0,7,190,1,3
	.word	61601
	.byte	8
	.byte	'_Ifx_STM_KRST1_Bits',0,7,193,1,16,4,9
	.byte	'RST',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'reserved_1',0,4
	.word	299
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_STM_KRST1_Bits',0,7,197,1,3
	.word	61712
	.byte	8
	.byte	'_Ifx_STM_KRSTCLR_Bits',0,7,200,1,16,4,9
	.byte	'CLR',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'reserved_1',0,4
	.word	299
	.byte	31,0,2,35,0,0,29
	.byte	'Ifx_STM_KRSTCLR_Bits',0,7,204,1,3
	.word	61804
	.byte	8
	.byte	'_Ifx_STM_OCS_Bits',0,7,207,1,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	3,5,2,35,0,9
	.byte	'reserved_3',0,4
	.word	299
	.byte	21,8,2,35,0,9
	.byte	'SUS',0,1
	.word	474
	.byte	4,4,2,35,3,9
	.byte	'SUS_P',0,1
	.word	474
	.byte	1,3,2,35,3,9
	.byte	'SUSSTA',0,1
	.word	474
	.byte	1,2,2,35,3,9
	.byte	'reserved_30',0,1
	.word	474
	.byte	2,0,2,35,3,0,29
	.byte	'Ifx_STM_OCS_Bits',0,7,215,1,3
	.word	61900
	.byte	8
	.byte	'_Ifx_STM_TIM0_Bits',0,7,218,1,16,4,9
	.byte	'STM_31_0',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM0_Bits',0,7,221,1,3
	.word	62068
	.byte	8
	.byte	'_Ifx_STM_TIM0SV_Bits',0,7,224,1,16,4,9
	.byte	'STM_31_0',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM0SV_Bits',0,7,227,1,3
	.word	62141
	.byte	8
	.byte	'_Ifx_STM_TIM1_Bits',0,7,230,1,16,4,9
	.byte	'STM_35_4',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM1_Bits',0,7,233,1,3
	.word	62218
	.byte	8
	.byte	'_Ifx_STM_TIM2_Bits',0,7,236,1,16,4,9
	.byte	'STM_39_8',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM2_Bits',0,7,239,1,3
	.word	62291
	.byte	8
	.byte	'_Ifx_STM_TIM3_Bits',0,7,242,1,16,4,9
	.byte	'STM_43_12',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM3_Bits',0,7,245,1,3
	.word	62364
	.byte	8
	.byte	'_Ifx_STM_TIM4_Bits',0,7,248,1,16,4,9
	.byte	'STM_47_16',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM4_Bits',0,7,251,1,3
	.word	62438
	.byte	8
	.byte	'_Ifx_STM_TIM5_Bits',0,7,254,1,16,4,9
	.byte	'STM_51_20',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM5_Bits',0,7,129,2,3
	.word	62512
	.byte	8
	.byte	'_Ifx_STM_TIM6_Bits',0,7,132,2,16,4,9
	.byte	'STM_63_32',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_STM_TIM6_Bits',0,7,135,2,3
	.word	62586
	.byte	10,7,143,2,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	59928
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_ACCEN0',0,7,148,2,3
	.word	62660
	.byte	10,7,151,2,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	60485
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_ACCEN1',0,7,156,2,3
	.word	62724
	.byte	10,7,159,2,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	60562
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_CAP',0,7,164,2,3
	.word	62788
	.byte	10,7,167,2,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	60635
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_CAPSV',0,7,172,2,3
	.word	62849
	.byte	10,7,175,2,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	60712
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_CLC',0,7,180,2,3
	.word	62912
	.byte	10,7,183,2,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	60854
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_CMCON',0,7,188,2,3
	.word	62973
	.byte	10,7,191,2,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	61074
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_CMP',0,7,196,2,3
	.word	63036
	.byte	10,7,199,2,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	61143
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_ICR',0,7,204,2,3
	.word	63097
	.byte	10,7,207,2,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	61346
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_ID',0,7,212,2,3
	.word	63158
	.byte	10,7,215,2,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	61450
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_ISCR',0,7,220,2,3
	.word	63218
	.byte	10,7,223,2,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	61601
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_KRST0',0,7,228,2,3
	.word	63280
	.byte	10,7,231,2,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	61712
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_KRST1',0,7,236,2,3
	.word	63343
	.byte	10,7,239,2,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	61804
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_KRSTCLR',0,7,244,2,3
	.word	63406
	.byte	10,7,247,2,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	61900
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_OCS',0,7,252,2,3
	.word	63471
	.byte	10,7,255,2,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	62068
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM0',0,7,132,3,3
	.word	63532
	.byte	10,7,135,3,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	62141
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM0SV',0,7,140,3,3
	.word	63594
	.byte	10,7,143,3,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	62218
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM1',0,7,148,3,3
	.word	63658
	.byte	10,7,151,3,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	62291
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM2',0,7,156,3,3
	.word	63720
	.byte	10,7,159,3,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	62364
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM3',0,7,164,3,3
	.word	63782
	.byte	10,7,167,3,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	62438
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM4',0,7,172,3,3
	.word	63844
	.byte	10,7,175,3,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	62512
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM5',0,7,180,3,3
	.word	63906
	.byte	10,7,183,3,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	62586
	.byte	4,2,35,0,0,29
	.byte	'Ifx_STM_TIM6',0,7,188,3,3
	.word	63968
	.byte	30
	.word	299
	.byte	31,0,32
	.byte	'__START2',0,5,50,1
	.word	64030
	.byte	1,1,32
	.byte	'__ISTACK1',0,5,51,1
	.word	64030
	.byte	1,1,32
	.byte	'__INTTAB_CPU1',0,5,51,1
	.word	64030
	.byte	1,1,32
	.byte	'__TRAPTAB_CPU1',0,5,51,1
	.word	64030
	.byte	1,1,32
	.byte	'__CSA1',0,5,51,1
	.word	64030
	.byte	1,1,32
	.byte	'__CSA1_END',0,5,51,1
	.word	64030
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L16:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,3,11
	.byte	0,0,0,4,59,0,3,8,0,0,5,15,0,73,19,0,0,6,5,0,3,8,58,15,59,15,57,15,73,19,0,0,7,36,0,3,8,11,15,62,15,0,0
	.byte	8,19,1,3,8,58,15,59,15,57,15,11,15,0,0,9,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,10,23,1,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,73,19,11,15,56,9,0,0,12,53,0,73,19,0,0,13,46,1,3,8,32,13,58,15,59,15,57,15
	.byte	73,19,54,15,39,12,0,0,14,11,1,0,0,15,46,1,3,8,54,15,39,12,63,12,60,12,0,0,16,5,0,73,19,0,0,17,46,0,3,8
	.byte	54,15,39,12,63,12,60,12,0,0,18,46,1,49,19,0,0,19,5,0,49,19,0,0,20,1,1,11,15,73,19,0,0,21,33,0,47,15,0
	.byte	0,22,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,23,46,0,3,8,58,15,59,15,57,15,73,19,54,15
	.byte	39,12,63,12,60,12,0,0,24,29,1,49,19,0,0,25,11,0,49,19,0,0,26,46,0,3,8,58,15,59,15,57,15,54,15,39,12,63
	.byte	12,60,12,0,0,27,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,28,21,0,54,15,0,0,29,22,0,3,8,58,15,59
	.byte	15,57,15,73,19,0,0,30,1,1,73,19,0,0,31,33,0,0,0,32,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L17:
	.word	.L112-.L111
.L111:
	.half	3
	.word	.L114-.L113
.L113:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg',0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_CompilersTasking.h',0,0,0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Infra.h',0,0,0,0
	.byte	'IfxScu_regdef.h',0,1,0,0
	.byte	'IfxCpu_regdef.h',0,1,0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc1.c',0,0,0,0
	.byte	'Ifx_TypesReg.h',0,1,0,0
	.byte	'IfxStm_regdef.h',0,1,0,0,0
.L114:
.L112:
	.sdecl	'.debug_info',debug,cluster('__Core1_start')
	.sect	'.debug_info'
.L18:
	.word	819
	.half	3
	.word	.L19
	.byte	4,1
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc1.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L21,.L20
	.byte	2
	.word	.L14
	.byte	3
	.byte	'__Core1_start',0,1,70,6,1,1,1
	.word	.L11,.L28,.L10
	.byte	4
	.word	.L11,.L28
	.byte	5
	.byte	'stmCount',0,1,72,20
	.word	.L29,.L30
	.byte	5
	.byte	'stmCountBegin',0,1,73,20
	.word	.L29,.L31
	.byte	5
	.byte	'wdtPassword',0,1,74,20
	.word	.L32,.L33
	.byte	6
	.word	.L34,.L35,.L36
	.byte	7
	.word	.L37,.L38
	.byte	8
	.word	.L39,.L35,.L36
	.byte	5
	.byte	'password',0,2,186,2,20
	.word	.L32,.L40
	.byte	0,0,6
	.word	.L41,.L42,.L43
	.byte	9
	.word	.L44,.L42,.L43
	.byte	0,6
	.word	.L45,.L46,.L47
	.byte	7
	.word	.L48,.L49
	.byte	7
	.word	.L50,.L51
	.byte	9
	.word	.L52,.L46,.L47
	.byte	0,4
	.word	.L47,.L53
	.byte	5
	.byte	'pcon0',0,1,87,23
	.word	.L54,.L55
	.byte	6
	.word	.L56,.L57,.L53
	.byte	9
	.word	.L58,.L57,.L53
	.byte	0,0,4
	.word	.L53,.L59
	.byte	5
	.byte	'dcon0',0,1,95,23
	.word	.L60,.L61
	.byte	6
	.word	.L56,.L62,.L59
	.byte	9
	.word	.L58,.L62,.L59
	.byte	0,0,6
	.word	.L63,.L64,.L65
	.byte	7
	.word	.L66,.L67
	.byte	7
	.word	.L68,.L69
	.byte	9
	.word	.L70,.L64,.L65
	.byte	0,6
	.word	.L71,.L72,.L73
	.byte	7
	.word	.L74,.L75
	.byte	7
	.word	.L76,.L77
	.byte	8
	.word	.L78,.L72,.L73
	.byte	5
	.byte	'k',0,2,235,3,19
	.word	.L29,.L79
	.byte	5
	.byte	'nxt_cxi_val',0,2,236,3,19
	.word	.L29,.L80
	.byte	5
	.byte	'prvCsa',0,2,237,3,19
	.word	.L81,.L82
	.byte	5
	.byte	'nxtCsa',0,2,238,3,19
	.word	.L81,.L83
	.byte	5
	.byte	'numOfCsa',0,2,239,3,19
	.word	.L29,.L84
	.byte	6
	.word	.L41,.L85,.L73
	.byte	9
	.word	.L44,.L85,.L73
	.byte	0,0,0,6
	.word	.L56,.L73,.L86
	.byte	9
	.word	.L58,.L73,.L86
	.byte	0,6
	.word	.L87,.L88,.L89
	.byte	7
	.word	.L90,.L91
	.byte	9
	.word	.L92,.L88,.L89
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('__Core1_start')
	.sect	'.debug_abbrev'
.L19:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1
	.byte	49,16,17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('__Core1_start')
	.sect	'.debug_line'
.L20:
	.word	.L116-.L115
.L115:
	.half	3
	.word	.L118-.L117
.L117:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc1.c',0,0,0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Infra.h',0,0,0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L118:
	.byte	5,45,7,0,5,2
	.word	.L11
	.byte	3,200,0,1,5,91,9
	.half	.L97-.L11
	.byte	3,1,1,4,2,5,33,9
	.half	.L35-.L97
	.byte	3,245,1,1,5,14,9
	.half	.L119-.L35
	.byte	3,1,1,4,1,5,5,9
	.half	.L36-.L119
	.byte	3,141,126,1,4,3,5,12,9
	.half	.L42-.L36
	.byte	3,33,1,4,1,5,5,9
	.half	.L43-.L42
	.byte	3,99,1,5,53,9
	.half	.L120-.L43
	.byte	3,3,1,4,2,5,25,9
	.half	.L46-.L120
	.byte	3,131,2,1,5,5,9
	.half	.L121-.L46
	.byte	1,5,52,7,9
	.half	.L122-.L121
	.byte	3,5,1,5,59,9
	.half	.L123-.L122
	.byte	3,1,1,5,64,9
	.half	.L124-.L123
	.byte	1,5,83,9
	.half	.L125-.L124
	.byte	3,127,1,5,26,9
	.half	.L126-.L125
	.byte	3,126,1,5,48,9
	.half	.L2-.L126
	.byte	3,9,1,5,55,9
	.half	.L127-.L2
	.byte	3,1,1,5,60,9
	.half	.L128-.L127
	.byte	1,5,79,9
	.half	.L129-.L128
	.byte	3,127,1,5,22,9
	.half	.L130-.L129
	.byte	3,126,1,5,19,9
	.half	.L131-.L130
	.byte	3,6,1,4,1,5,23,9
	.half	.L47-.L131
	.byte	3,241,125,1,9
	.half	.L99-.L47
	.byte	3,1,1,5,9,9
	.half	.L100-.L99
	.byte	3,1,1,4,3,5,12,9
	.half	.L57-.L100
	.byte	3,26,1,4,1,5,23,9
	.half	.L53-.L57
	.byte	3,109,1,5,9,9
	.half	.L102-.L53
	.byte	3,1,1,4,3,5,12,9
	.half	.L62-.L102
	.byte	3,18,1,4,1,5,5,9
	.half	.L59-.L62
	.byte	3,115,1,9
	.half	.L132-.L59
	.byte	3,3,1,9
	.half	.L133-.L132
	.byte	3,3,1,5,51,9
	.half	.L134-.L133
	.byte	3,2,1,4,2,5,25,9
	.half	.L64-.L134
	.byte	3,148,2,1,5,5,9
	.half	.L135-.L64
	.byte	1,5,52,7,9
	.half	.L136-.L135
	.byte	3,5,1,5,59,9
	.half	.L137-.L136
	.byte	3,1,1,5,64,9
	.half	.L138-.L137
	.byte	1,5,83,9
	.half	.L139-.L138
	.byte	3,127,1,5,26,9
	.half	.L140-.L139
	.byte	3,126,1,5,48,9
	.half	.L3-.L140
	.byte	3,9,1,5,55,9
	.half	.L141-.L3
	.byte	3,1,1,5,60,9
	.half	.L142-.L141
	.byte	1,5,79,9
	.half	.L143-.L142
	.byte	3,127,1,5,22,9
	.half	.L144-.L143
	.byte	3,126,1,5,19,9
	.half	.L145-.L144
	.byte	3,6,1,4,1,5,5,9
	.half	.L65-.L145
	.byte	3,223,125,1,9
	.half	.L146-.L65
	.byte	3,1,1,9
	.half	.L147-.L146
	.byte	3,1,1,9
	.half	.L148-.L147
	.byte	3,1,1,5,37,9
	.half	.L149-.L148
	.byte	3,2,1,5,63,9
	.half	.L150-.L149
	.byte	1,4,2,5,31,9
	.half	.L72-.L150
	.byte	3,246,2,1,5,49,9
	.half	.L106-.L72
	.byte	3,2,1,5,72,9
	.half	.L151-.L106
	.byte	1,5,56,9
	.half	.L152-.L151
	.byte	1,5,12,9
	.half	.L108-.L152
	.byte	3,2,1,5,91,9
	.half	.L101-.L108
	.byte	3,2,1,5,30,9
	.half	.L153-.L101
	.byte	3,126,1,5,53,9
	.half	.L5-.L153
	.byte	3,2,1,5,91,9
	.half	.L154-.L5
	.byte	1,5,60,9
	.half	.L155-.L154
	.byte	1,9
	.half	.L156-.L155
	.byte	3,1,1,5,99,9
	.half	.L109-.L156
	.byte	3,127,1,5,9,9
	.half	.L157-.L109
	.byte	3,3,1,5,13,7,9
	.half	.L158-.L157
	.byte	3,2,1,5,21,9
	.half	.L6-.L158
	.byte	3,4,1,5,28,9
	.half	.L7-.L6
	.byte	3,3,1,5,9,9
	.half	.L159-.L7
	.byte	1,5,13,7,9
	.half	.L160-.L159
	.byte	3,2,1,5,17,9
	.half	.L8-.L160
	.byte	3,3,1,5,16,9
	.half	.L161-.L8
	.byte	3,1,1,5,33,9
	.half	.L162-.L161
	.byte	3,108,1,5,30,9
	.half	.L4-.L162
	.byte	1,5,15,7,9
	.half	.L163-.L4
	.byte	3,23,1,5,13,9
	.half	.L164-.L163
	.byte	1,4,3,5,12,9
	.half	.L85-.L164
	.byte	3,230,124,1,9
	.half	.L73-.L85
	.byte	3,6,1,4,1,5,54,9
	.half	.L86-.L73
	.byte	3,8,1,5,59,9
	.half	.L107-.L86
	.byte	1,5,57,9
	.half	.L165-.L107
	.byte	1,5,16,9
	.half	.L166-.L165
	.byte	1,5,36,9
	.half	.L9-.L166
	.byte	3,2,1,5,39,9
	.half	.L167-.L9
	.byte	1,5,66,9
	.half	.L168-.L167
	.byte	1,5,30,7,9
	.half	.L169-.L168
	.byte	3,12,1,5,57,9
	.half	.L170-.L169
	.byte	1,5,43,9
	.half	.L171-.L170
	.byte	1,5,28,9
	.half	.L110-.L171
	.byte	3,25,1,4,3,5,5,9
	.half	.L88-.L110
	.byte	3,114,1,4,1,5,1,9
	.half	.L89-.L88
	.byte	3,15,1,7,9
	.half	.L22-.L89
	.byte	0,1,1
.L116:
	.sdecl	'.debug_ranges',debug,cluster('__Core1_start')
	.sect	'.debug_ranges'
.L21:
	.word	-1,.L11,0,.L22-.L11,0,0
	.sdecl	'.debug_info',debug,cluster('_START1')
	.sect	'.debug_info'
.L23:
	.word	255
	.half	3
	.word	.L24
	.byte	4,1
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc1.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L26,.L25
	.byte	2
	.word	.L14
	.byte	3
	.byte	'_START1',0,1,184,1,6,1,1,1
	.word	.L13,.L93,.L12
	.byte	4
	.word	.L13,.L93
	.byte	5
	.word	.L87,.L94,.L95
	.byte	6
	.word	.L90,.L96
	.byte	7
	.word	.L92,.L94,.L95
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('_START1')
	.sect	'.debug_abbrev'
.L24:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11
	.byte	0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('_START1')
	.sect	'.debug_line'
.L25:
	.word	.L173-.L172
.L172:
	.half	3
	.word	.L175-.L174
.L174:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc1.c',0,0,0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L175:
	.byte	5,28,7,0,5,2
	.word	.L13
	.byte	3,185,1,1,4,2,5,5,9
	.half	.L94-.L13
	.byte	3,91,1,4,1,5,1,9
	.half	.L95-.L94
	.byte	3,38,1,7,9
	.half	.L27-.L95
	.byte	0,1,1
.L173:
	.sdecl	'.debug_ranges',debug,cluster('_START1')
	.sect	'.debug_ranges'
.L26:
	.word	-1,.L13,0,.L27-.L13,0,0
	.sdecl	'.debug_loc',debug,cluster('_START1')
	.sect	'.debug_loc'
.L12:
	.word	-1,.L13,0,.L93-.L13
	.half	2
	.byte	138,0
	.word	0,0
.L96:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('__Core1_start')
	.sect	'.debug_loc'
.L10:
	.word	-1,.L11,0,.L28-.L11
	.half	2
	.byte	138,0
	.word	0,0
.L75:
	.word	0,0
.L77:
	.word	0,0
.L61:
	.word	-1,.L11,.L102-.L11,.L103-.L11
	.half	1
	.byte	95
	.word	0,0
.L91:
	.word	0,0
.L79:
	.word	-1,.L11,.L101-.L11,.L107-.L11
	.half	1
	.byte	81
	.word	0,0
.L84:
	.word	-1,.L11,.L108-.L11,.L107-.L11
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L83:
	.word	-1,.L11,.L104-.L11,.L105-.L11
	.half	1
	.byte	111
	.word	0,0
.L80:
	.word	-1,.L11,.L109-.L11,.L4-.L11
	.half	1
	.byte	83
	.word	0,0
.L40:
	.word	-1,.L11,.L36-.L11,.L98-.L11
	.half	1
	.byte	82
	.word	0,0
.L51:
	.word	0,0
.L69:
	.word	0,0
.L55:
	.word	-1,.L11,.L99-.L11,.L100-.L11
	.half	1
	.byte	95
	.word	.L100-.L11,.L101-.L11
	.half	1
	.byte	81
	.word	.L53-.L11,.L102-.L11
	.half	1
	.byte	95
	.word	0,0
.L82:
	.word	-1,.L11,.L106-.L11,.L107-.L11
	.half	1
	.byte	100
	.word	0,0
.L30:
	.word	-1,.L11,.L9-.L11,.L110-.L11
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L31:
	.word	-1,.L11,.L97-.L11,.L28-.L11
	.half	1
	.byte	88
	.word	0,0
.L38:
	.word	0,0
.L49:
	.word	0,0
.L67:
	.word	0,0
.L33:
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L176:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('__Core1_start')
	.sect	'.debug_frame'
	.word	12
	.word	.L176,.L11,.L28-.L11
	.sdecl	'.debug_frame',debug,cluster('_START1')
	.sect	'.debug_frame'
	.word	24
	.word	.L176,.L13,.L93-.L13
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   188  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   189  /* reset the sections defined above, to normal region */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   190  #if defined(__HIGHTEC__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   191  #pragma section
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   192  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   193  #if defined(__TASKING__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   194  #pragma protect restore
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   195  #pragma section code restore
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   196  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   197  #if defined(__DCC__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   198  #pragma section CODE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   199  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   200  #if defined(__ghs__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   201  #pragma ghs section text=default
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   202  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   203  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   204  /*Restore the options to command line provided ones*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   205  #if defined(__HIGHTEC__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   206  #pragma GCC reset_options
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc1.c	   207  #endif

	; Module end
