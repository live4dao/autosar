	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 09003395"
	.compiler_invocation	"ctc -f cc5408a --dep-file=Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\.Ifx_Ssw_Tc0.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --fp-model=+float -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Lib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\App_Func -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\demo -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Adc_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Gtm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\AscLin_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Can_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\EthV2_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Stm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Main -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\APP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\BswM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanSm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Com -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\ComM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Common -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Crc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Det -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\DoIP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EcuM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Eth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthSM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTrcv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FiM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FlsTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Nm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\PduR -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\RamTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\StbM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\arpa -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\net -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\sys -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\stdc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\apps -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\priv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\UdpNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Cal -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Daq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pag -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pgm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Std -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\XcpOnEth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Library\\Vfx_ComE2E -g2 --make-target=Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O1 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.src ..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c"
	.compiler_name		"ctc"
	;source	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c'

	
$TC162
	

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	     2   * \file Ifx_Ssw_Tc0.c
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	     3   * \brief Startup Software for Core0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	     8   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	     9   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    11   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    14   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    15   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    16   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    22   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    23   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    24  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    25  /*******************************************************************************
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    26  **                      Includes                                              **
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    27  *******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    28  #include "Ifx_Cfg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    29  #include "Ifx_Ssw.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    30  #include "Ifx_Ssw_Infra.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    31  #include "Ifx_Cfg_Ssw.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    32  /*******************************************************************************
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    33  **                       Macros                                               **
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    34  *******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    35  #ifndef IFX_CFG_SSW_ENABLE_TRICORE0_PCACHE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    36  #define IFX_CFG_SSW_ENABLE_TRICORE0_PCACHE (1U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    37  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    39  #ifndef IFX_CFG_SSW_ENABLE_TRICORE0_DCACHE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    40  #define IFX_CFG_SSW_ENABLE_TRICORE0_DCACHE (1U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    41  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    42  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    43  #ifndef IFX_CFG_SSW_CALLOUT_PMS_INIT
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    44  #define IFX_CFG_SSW_CALLOUT_PMS_INIT()
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    45  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    46  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    47  #ifndef IFX_CFG_SSW_CALLOUT_LBIST
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    48  #define IFX_CFG_SSW_CALLOUT_LBIST()
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    49  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    50  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    51  #ifndef IFX_CFG_SSW_CALLOUT_MONBIST
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    52  #define IFX_CFG_SSW_CALLOUT_MONBIST()
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    53  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    54  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    55  #ifndef IFX_CFG_SSW_CALLOUT_MMIC_CHECK
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    56  #define IFX_CFG_SSW_CALLOUT_MMIC_CHECK()
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    57  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    58  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    59  #ifndef IFX_CFG_SSW_CALLOUT_PLL_INIT
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    60  #define IFX_CFG_SSW_CALLOUT_PLL_INIT()
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    61  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    62  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    63  #ifndef IFX_CFG_SSW_CALLOUT_MBIST
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    64  #define IFX_CFG_SSW_CALLOUT_MBIST()
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    65  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    66  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    67  #ifndef IFX_CFG_SSW_CALLOUT_SMU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    68  #define IFX_CFG_SSW_CALLOUT_SMU()
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    69  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    70  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    71  #ifndef IFX_CFG_SSW_CALLOUT_EMEM_INIT
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    72  #define IFX_CFG_SSW_CALLOUT_EMEM_INIT()
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    73  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    74  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    75  #define IFX_SSW_INIT_CONTEXT()                                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    76      {                                                                            \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    77          /* Load user stack pointer */                                            \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    78          Ifx_Ssw_setAddressReg(a10, __USTACK(0));                                 \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    79          Ifx_Ssw_DSYNC();                                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    80                                                                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    81          /*Initialize the context save area for CPU0. Function Calls Possible */  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    82          /* Setup the context save area linked list */                            \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    83          Ifx_Ssw_initCSA((unsigned int *)__CSA(0), (unsigned int *)__CSA_END(0)); \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    84          /* Clears any instruction buffer */                                      \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    85          Ifx_Ssw_ISYNC();                                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    86      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    87  /*******************************************************************************
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    88  **                       Prototypes & Externals                               **
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    89  *******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    90  /** !IMPORTANT: The SSW Configuration shall be defined at Application SW Configuration
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    91   * Please refer to iLLD demos for startup sw configuration (Ifx_Cfg_Ssw.c and .h)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    92   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    93  static void __StartUpSoftware(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    94  static void __StartUpSoftware_Phase2(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    95  static void __StartUpSoftware_Phase3ApplicationResetPath(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    96  static void __StartUpSoftware_Phase3PowerOnResetPath(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    97  static void __StartUpSoftware_Phase4(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    98  static void __StartUpSoftware_Phase5(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	    99  static void __StartUpSoftware_Phase6(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   100  static void __Core0_start(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   101  IFX_SSW_COMMON_LINKER_SYMBOLS();
		 .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   102  IFX_SSW_CORE_LINKER_SYMBOLS(0);
		 .extern __USTACK0

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   103  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   104  /*******************************************************************************
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   105  **                       Defines                                              **
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   106  *******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   107  extern void core0_main(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   108  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   109  #if defined(__TASKING__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   110  __asm("\t .extern core0_main");
		 .extern core0_main
	.sdecl	'.text.Ifx_Ssw_Tc0.__StartUpSoftware',code,cluster('__StartUpSoftware')
	.sect	'.text.Ifx_Ssw_Tc0.__StartUpSoftware'
	.align	2
	

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   111  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   112  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   113  /*Add options to eliminate usage of stack pointers unnecessarily*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   114  #if defined(__HIGHTEC__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   115  #pragma GCC optimize "O2"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   116  #elif defined(__TASKING__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   117  #pragma optimize R
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   118  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   119  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   120  static void __StartUpSoftware(void)
; Function __StartUpSoftware
.L24:
__StartUpSoftware:	.type	func

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   121  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   122      /* Initialize A1 pointer to use the global constants with small data addressing */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   123      Ifx_Ssw_setAddressReg(a1, __SDATA2(0));
	 movh.a	 a1,#@his(_LITERAL_DATA_)
 lea	 a1,[a1]@los(_LITERAL_DATA_)
.L272:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   124  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   125      /* Set the PSW to its reset value in case of a warm start,clear PSW.IS */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   126      Ifx_Ssw_MTCR(CPU_PSW, IFX_CFG_SSW_PSW_DEFAULT);
	mov	d15,#2432
	mtcr	#65028,d15
	isync
.L92:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     8   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    11   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    14   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    15   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    16   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    22   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    23   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    24  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    25  #ifndef IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    26  #define IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    27  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    28  #include "Ifx_Ssw_Compilers.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    29  #include "Ifx_Cfg_Ssw.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    30  #include "IfxScu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    31  #include "IfxCpu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    32  #include "IfxScu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    33  #include "IfxCpu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    34  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    35  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    36  /*-----------------------------------Macros-----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    37  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    39  /** \brief PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    40   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    41  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    42      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    43       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    44       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    45       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    46       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    47       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    48       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    49  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    50  /** \brief Application Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    51   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    52  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    53      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    54       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    55       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    56       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    57       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    58       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    59       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    63  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    64  /** \brief Cold PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    65   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    66  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    67      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    68       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    69       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    70       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    71  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    72  /** \brief Application reset enabled
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    73   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    74   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    75  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    76  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    77  /** \brief Reload value mask */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    78  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    79  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    80  /** \brief Mask values is used to invert the password value bits */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    81  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    82  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    83  /** \brief CSA size */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    84  #define IFX_SSW_CSA_SIZE                          16U
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    86  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    87  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    88  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    89  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    90  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    91  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    92  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    94  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    95  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    96  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    97  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    98  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    99  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   100  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   102  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   103  /*-------------------------Infrastructure Functions---------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   104  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   105  /** \brief clear safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   106   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   107   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   109      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   110          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   111          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   112                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   113                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   114                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   115          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   116          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   117                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   118                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   119                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   120          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   121          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   122      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   123  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   124  /** \brief set safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   125   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   126   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   127  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   128      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   129          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   130          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   131                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   132                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   133                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   134          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   135          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   136                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   137                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   138                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   139          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   140          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   141      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   142  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   143  /** \brief Fetch current password of CPU Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   144   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   145   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   146   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   147   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   148   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   149   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   150  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   151  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   152  /** \brief Fetch current password of Safety Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   153   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   154   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   155   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   156   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   157   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   158  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   159  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   160  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   161   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   162   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   163   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   164   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   165   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   166   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   167   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   168   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   169   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   170  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   171  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   172  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   173   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   174   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   175   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   176   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   177   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   178   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   179   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   180  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   181  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   182  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   183   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   184   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   185   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   186   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   187   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   188   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   189   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   190   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   191  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   192  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   193  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   194   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   195   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   196   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   197   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   198   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   199   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   200  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   201  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   202  /** \brief Disable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   203   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   204   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   205   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   206   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   207   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   208   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   209   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   210  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   211  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   212  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   213   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   214   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   215   *   periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   216   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   217   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   218   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   219   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   220  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   221  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   222  /** \brief Disable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   223   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   224   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   225   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   226   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   227   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   228   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   229  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   230  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   231  /** \brief Enable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   232   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   233   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   234   * periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   235   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   236   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   237   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   238  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   239  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   240  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   241   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   242   * \param programCounter Program counter value to start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   243   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   244  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   245  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   246  /** \brief Set CPU0 to idle state */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   247  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   248  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   249  /** \brief Initialise the C runtime environment */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   250  extern void Ifx_Ssw_C_Init(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   251  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   252  /** \brief Returns the system timer frequency.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   253   * \return the system timer frequency in Hz.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   254   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   255  extern float Ifx_Ssw_getStmFrequency(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   256  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   257  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   258   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   259   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   260   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   261   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   262   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   263   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   264   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   265   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   266  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   267  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   268  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   269   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   270   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   271   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   272   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   273   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   274   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   275   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   276  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   277  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   278  /*Endinit Functions*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   279  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   280  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   281      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   282       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   283       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   284  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   285      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   286      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   287  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   288  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   289  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   290  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   291  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   292      /* Clear EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   293      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   294  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   295      /* Read back of the register is mandatory to ensure the register update */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   296      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   297  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   298  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   299  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   300  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   301  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   302      /* Set EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   303      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   304                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   305                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   306  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   307      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   308      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   309  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   310  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   311  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   312  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   313  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   314      unsigned short password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   315  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   316      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   317       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   318       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   319      password  = watchdog->CON0.B.PW;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   320      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   321  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   322      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   323  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   324  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   325  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   326  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   327  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   328      unsigned short password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   329      Ifx_SCU_WDTS  *watchdog;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   330      watchdog  = &MODULE_SCU.WDTS;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   331      /* Read Password from Safety WDT CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   332       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   333       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   334      password  = watchdog->CON0.B.PW;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   335      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   336  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   337      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   338  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   339  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   340  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   341  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   342  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   343      if (watchdog->CON0.B.LCK)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   344      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   345          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   346          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   347                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   348                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   349                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   350      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   351  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   352      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   353      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   354                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   355                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   356                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   357  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   358      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   359      watchdog->CON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   360  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   361  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   362  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   363  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   364  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   365      if (SCU_WDTS_CON0.B.LCK)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   366      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   367          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   368          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   369                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   370                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   371                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   372      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   373  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   374      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   375      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   376                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   377                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   378                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   379  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   380      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   381      SCU_WDTS_CON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   382  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   383  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   384  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   385  IFX_SSW_INLINE void Ifx_Ssw_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   386  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   387      if (watchdog->CON0.B.LCK)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   388      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   389          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   390          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   391                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   392                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   393                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   394      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   395  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   396      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   397      watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   398                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   399                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   400                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   401  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   402      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   403      watchdog->CON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   404  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   405  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   406  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   407  IFX_SSW_INLINE void Ifx_Ssw_setSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   408  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   409      if (SCU_WDTS_CON0.B.LCK)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   410      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   411          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   412          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   413                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   414                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   415                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   416      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   417  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   418      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   419      SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   420                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   421                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   422                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   423  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   424      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   425      SCU_WDTS_CON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   426  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   427  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   428  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   429  /* Check if Cold PowerOn Reset */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   430  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   431  IFX_SSW_INLINE char Ifx_Ssw_isColdPoweronReset(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   432  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   433      return (char)((SCU_RSTSTAT.U & IFX_SSW_COLD_POWERONRESET_MASK) > 0);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   434  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   435  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   436  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   437  /*Add options to eliminate usage of stack pointers unnecessarily*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   438  #if defined(__HIGHTEC__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   439  #pragma GCC optimize "O2"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   440  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   441  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   442  IFX_SSW_INLINE unsigned char Ifx_Ssw_isApplicationReset(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   443  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   444      unsigned char returnVal;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   445      unsigned int  tempValue = SCU_RSTSTAT.U;
	movh.a	a15,#61443
	ld.w	d0,[a15]@los(0xf0036050)
.L239:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   446  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   447      if ((tempValue & IFX_SSW_POWERONRESET_MASK) > 0U)
	movh	d15,#5005
.L273:
	and	d15,d0
.L274:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   447      if ((tempValue & IFX_SSW_POWERONRESET_MASK) > 0U)      (inlined)
	jne	d15,#0,.L2
.L275:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   448      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   449          returnVal = 0U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   450      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   451      else if ((tempValue & IFX_SSW_APPLICATIONRESET_MASK) > 0U)
	mov	d15,#2043
.L276:
	and	d15,d0
.L277:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   451      else if ((tempValue & IFX_SSW_APPLICATIONRESET_MASK) > 0U)      (inlined)
	jeq	d15,#0,.L3
.L278:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   452      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   453          /* get the bit which is set at RSTSTAT (assumption: RSTSTAT register was cleared before and only one bit can be set) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   454          tempValue = tempValue & IFX_SSW_APPLICATIONRESET_MASK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   455          tempValue = (SCU_RSTCON.U >> ((31U - Ifx_Ssw_CLZ(tempValue)) << 1U)) & 3U;
	ld.w	d0,[a15]@los(0xf0036058)
.L240:
	clz	d15,d15
.L279:
	rsub	d15,d15,#31
.L280:
	sh	d15,#1
.L281:
	extr.u	d15,d0,d15,#2
.L241:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   457          if (tempValue == IFX_SSW_APPLICATIONRESET)      (inlined)
	jne	d15,#2,.L4
.L282:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   459              returnVal = 1U;      (inlined)
	j	.L5

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   451      else if ((tempValue & IFX_SSW_APPLICATIONRESET_MASK) > 0U)      (inlined)
.L3:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   466      else if (((unsigned int)tempValue & ((unsigned int)IFX_SCU_RSTSTAT_CB3_MSK << IFX_SCU_RSTSTAT_CB3_OFF)))      (inlined)
	jnz.t	d0:20,.L6
.L283:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   456  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   457          if (tempValue == IFX_SSW_APPLICATIONRESET)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   458          {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   459              returnVal = 1U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   460          }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   461          else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   462          {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   463              returnVal = 0U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   464          }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   465      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   466      else if (((unsigned int)tempValue & ((unsigned int)IFX_SCU_RSTSTAT_CB3_MSK << IFX_SCU_RSTSTAT_CB3_OFF)))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   467      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   468          /* CB3 reset is not configurable and is always application reset */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   469          returnVal = 1U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   470      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   471      else if (CPU0_KRST0.B.RSTSTAT != 0)   /*CPU0 KRST status */
	movh.a	a15,#63617
	ld.w	d15,[a15]@los(0xf880d000)
	extr.u	d15,d15,#1,#2
.L284:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   471      else if (CPU0_KRST0.B.RSTSTAT != 0)   /*CPU0 KRST status */      (inlined)
	jeq	d15,#0,.L7
.L6:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   461          else      (inlined)
.L5:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   472      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   473          returnVal = 1U;
	mov	d15,#1
.L242:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   473          returnVal = 1U;      (inlined)
	j	.L8

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   471      else if (CPU0_KRST0.B.RSTSTAT != 0)   /*CPU0 KRST status */      (inlined)
.L7:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   457          if (tempValue == IFX_SSW_APPLICATIONRESET)      (inlined)
.L4:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   451      else if ((tempValue & IFX_SSW_APPLICATIONRESET_MASK) > 0U)      (inlined)
.L2:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   474      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   475      else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   476      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   477          returnVal = 0U;
	mov	d15,#0

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   475      else      (inlined)
.L8:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   127  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   128      /* This phase is executed only if last reset is not of type application reset */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   129      if (Ifx_Ssw_isApplicationReset() != 1)
	jne	d15,#0,.L9
.L93:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   130      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   131          Ifx_Ssw_jumpToFunction(__StartUpSoftware_Phase2);
	movh.a	a15,#@his(__StartUpSoftware_Phase2)
	lea	a15,[a15]@los(__StartUpSoftware_Phase2)
.L100:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   149      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L101:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   132      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   133      else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   134      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   135          Ifx_Ssw_jumpToFunction(__StartUpSoftware_Phase3ApplicationResetPath);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   136      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   137  }
	ret
.L9:
	movh.a	a15,#@his(__StartUpSoftware_Phase3ApplicationResetPath)
	lea	a15,[a15]@los(__StartUpSoftware_Phase3ApplicationResetPath)
.L105:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   149      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L106:
	ret
.L90:
	
____StartUpSoftware_function_end:
	.size	__StartUpSoftware,____StartUpSoftware_function_end-__StartUpSoftware
.L49:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase2',code,cluster('__StartUpSoftware_Phase2')
	.sect	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase2'
	.align	2
	

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   138  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   139  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   140  static void __StartUpSoftware_Phase2(void)
; Function __StartUpSoftware_Phase2
.L26:
__StartUpSoftware_Phase2:	.type	func

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   141  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   142      /* Power and EVRC configurations */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   143      IFX_CFG_SSW_CALLOUT_PMS_INIT();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   144  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   145      /* LBIST Tests and evaluation */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   146      IFX_CFG_SSW_CALLOUT_LBIST();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   147  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   148      /* MONBIST Tests and evaluation */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   149      IFX_CFG_SSW_CALLOUT_MONBIST();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   150  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   151      Ifx_Ssw_jumpToFunction(__StartUpSoftware_Phase3PowerOnResetPath);
	movh.a	a15,#@his(__StartUpSoftware_Phase3PowerOnResetPath)
	lea	a15,[a15]@los(__StartUpSoftware_Phase3PowerOnResetPath)
.L108:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   149      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L109:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   152  }
	ret
.L107:
	
____StartUpSoftware_Phase2_function_end:
	.size	__StartUpSoftware_Phase2,____StartUpSoftware_Phase2_function_end-__StartUpSoftware_Phase2
.L54:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase3PowerOnResetPath',code,cluster('__StartUpSoftware_Phase3PowerOnResetPath')
	.sect	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase3PowerOnResetPath'
	.align	2
	

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   153  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   154  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   155  static void __StartUpSoftware_Phase3PowerOnResetPath(void)
; Function __StartUpSoftware_Phase3PowerOnResetPath
.L28:
__StartUpSoftware_Phase3PowerOnResetPath:	.type	func

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   156  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   157      IFX_SSW_INIT_CONTEXT();
	 movh.a	 a10,#@his(__USTACK0)
 lea	 a10,[a10]@los(__USTACK0)
.L138:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     2   * \file Ifx_Ssw_CompilersTasking.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     3   * \brief Startup Software for Tasking compiler options
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     8   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     9   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    11   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    12   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    13   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    14   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    15   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    16   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    17   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    18   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    19   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    20   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    21   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    22   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    23  #ifndef IFX_SSW_COMPILERSTASKING_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    24  #define IFX_SSW_COMPILERSTASKING_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    25  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    26  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    27  /*----------------------------------Includes----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    28  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    29  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    30  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    31  /*-----------------------------------Macros-----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    32  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    33  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    34  /*Linker definitions which are specific to Tasking */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    35  /* IFX_CFG_USE_COMPILER_DEFAULT_LINKER shall be defined in Ifx_Cfg.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    36   * to use the default compiler linker varaibles and startup */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    37  #ifndef IFX_CFG_USE_COMPILER_DEFAULT_LINKER
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    39  /*Start: Common definitions ********************************************** */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    40  #define IFX_SSW_COMMON_LINKER_SYMBOLS()                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    41      __asm("\t .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_"); \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    42      extern unsigned int __START0[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    43      extern unsigned int __START1[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    44      extern unsigned int __START2[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    45      extern unsigned int __START3[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    46      extern unsigned int __START4[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    47      extern unsigned int __START5[];     /**< Pointer to the startup code */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    48  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    49  /*End: Common definitions ************************************************ */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    50  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    51  /*Start: Core 0 definitions ********************************************** */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    52  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    53  /*C extern defintions */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    54  #define IFX_SSW_CORE_LINKER_SYMBOLS(cpu)                                                                             \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    55      __asm("\t .extern __USTACK"#cpu);         /**< user stack end is required as asm to be used with setreg macro */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    56      extern unsigned int __ISTACK##cpu[];      /**< interrupt stack end */                                            \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    57      extern unsigned int __INTTAB_CPU##cpu[];  /**< interrupt vector table */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    58      extern unsigned int __TRAPTAB_CPU##cpu[]; /**< trap vector table */                                              \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    59      extern unsigned int __CSA##cpu[];         /**< context save area begin */                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    60      extern unsigned int __CSA##cpu##_END[];   /**< context save area end   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    61  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    62  #define __USTACK(cpu)      __USTACK##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    63  #define __ISTACK(cpu)      __ISTACK##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    64  #define __INTTAB_CPU(cpu)  __INTTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    65  #define __TRAPTAB_CPU(cpu) __TRAPTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    66  #define __CSA(cpu)         __CSA##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    67  #define __CSA_END(cpu)     __CSA##cpu##_END
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    68  #define __START(cpu)       __START##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    69  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    70  /*Wrapper macros for the tool specific definitions */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    71  #if defined(IFX_USE_SW_MANAGED_INT)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    72  #define __INTTAB(cpu)      ((unsigned int)__INTTAB_CPU##cpu | (unsigned int)0x1FE0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    73  #else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    74  #define __INTTAB(cpu)      __INTTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    75  #endif /*defined(IFX_USE_SW_MANAGED_INT) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    76  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    77  #define __TRAPTAB(cpu)     __TRAPTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    78  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    79  #define __SDATA1(cpu)      _SMALL_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    80  #define __SDATA2(cpu)      _LITERAL_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    81  #define __SDATA3(cpu)      _A8_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    82  #define __SDATA4(cpu)      _A9_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    83  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    84  #endif /*IFX_CFG_USE_COMPILER_DEFAULT_LINKER*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    86  #ifdef __cplusplus
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    87  #define IFX_SSW_INLINE   static inline
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    88  #else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    89  #define IFX_SSW_INLINE   inline
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    90  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    91  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    92  #define IFX_SSW_NULL_PTR ((void *)0x0U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    94  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    95  /*----------------------------   GNU Intrinsics  -----------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    96  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    97  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    98  #define Ifx_Ssw_MTCR(reg, val) __mtcr(reg, val);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    99  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   100  #define Ifx_Ssw_MFCR(reg)      __mfcr(reg);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   102  IFX_SSW_INLINE void Ifx_Ssw_NOP(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   103  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   104      __nop();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   105  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   106  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   107  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   108  IFX_SSW_INLINE void Ifx_Ssw_DSYNC(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   109  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   110      __dsync();
	dsync
.L139:
	movh.a	a15,#@his(__CSA0)
.L243:
	lea	a15,[a15]@los(__CSA0)
	movh.a	a2,#@his(__CSA0_END)
	lea	a2,[a2]@los(__CSA0_END)
.L140:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     8   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    11   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    14   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    15   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    16   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    22   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    23   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    24  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    25  #ifndef IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    26  #define IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    27  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    28  #include "Ifx_Ssw_Compilers.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    29  #include "Ifx_Cfg_Ssw.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    30  #include "IfxScu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    31  #include "IfxCpu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    32  #include "IfxScu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    33  #include "IfxCpu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    34  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    35  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    36  /*-----------------------------------Macros-----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    37  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    39  /** \brief PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    40   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    41  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    42      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    43       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    44       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    45       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    46       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    47       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    48       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    49  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    50  /** \brief Application Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    51   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    52  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    53      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    54       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    55       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    56       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    57       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    58       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    59       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    63  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    64  /** \brief Cold PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    65   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    66  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    67      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    68       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    69       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    70       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    71  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    72  /** \brief Application reset enabled
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    73   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    74   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    75  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    76  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    77  /** \brief Reload value mask */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    78  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    79  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    80  /** \brief Mask values is used to invert the password value bits */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    81  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    82  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    83  /** \brief CSA size */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    84  #define IFX_SSW_CSA_SIZE                          16U
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    86  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    87  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    88  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    89  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    90  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    91  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    92  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    94  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    95  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    96  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    97  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    98  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    99  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   100  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   102  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   103  /*-------------------------Infrastructure Functions---------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   104  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   105  /** \brief clear safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   106   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   107   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   109      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   110          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   111          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   112                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   113                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   114                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   115          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   116          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   117                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   118                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   119                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   120          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   121          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   122      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   123  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   124  /** \brief set safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   125   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   126   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   127  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   128      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   129          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   130          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   131                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   132                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   133                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   134          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   135          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   136                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   137                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   138                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   139          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   140          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   141      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   142  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   143  /** \brief Fetch current password of CPU Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   144   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   145   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   146   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   147   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   148   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   149   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   150  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   151  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   152  /** \brief Fetch current password of Safety Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   153   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   154   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   155   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   156   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   157   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   158  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   159  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   160  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   161   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   162   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   163   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   164   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   165   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   166   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   167   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   168   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   169   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   170  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   171  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   172  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   173   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   174   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   175   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   176   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   177   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   178   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   179   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   180  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   181  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   182  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   183   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   184   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   185   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   186   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   187   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   188   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   189   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   190   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   191  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   192  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   193  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   194   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   195   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   196   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   197   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   198   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   199   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   200  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   201  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   202  /** \brief Disable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   203   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   204   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   205   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   206   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   207   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   208   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   209   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   210  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   211  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   212  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   213   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   214   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   215   *   periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   216   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   217   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   218   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   219   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   220  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   221  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   222  /** \brief Disable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   223   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   224   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   225   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   226   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   227   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   228   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   229  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   230  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   231  /** \brief Enable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   232   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   233   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   234   * periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   235   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   236   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   237   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   238  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   239  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   240  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   241   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   242   * \param programCounter Program counter value to start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   243   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   244  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   245  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   246  /** \brief Set CPU0 to idle state */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   247  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   248  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   249  /** \brief Initialise the C runtime environment */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   250  extern void Ifx_Ssw_C_Init(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   251  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   252  /** \brief Returns the system timer frequency.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   253   * \return the system timer frequency in Hz.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   254   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   255  extern float Ifx_Ssw_getStmFrequency(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   256  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   257  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   258   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   259   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   260   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   261   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   262   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   263   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   264   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   265   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   266  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   267  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   268  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   269   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   270   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   271   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   272   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   273   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   274   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   275   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   276  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   277  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   278  /*Endinit Functions*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   279  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   280  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   281      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   282       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   283       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   284  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   285      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   286      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   287  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   288  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   289  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   290  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   291  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   292      /* Clear EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   293      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   294  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   295      /* Read back of the register is mandatory to ensure the register update */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   296      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   297  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   298  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   299  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   300  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   301  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   302      /* Set EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   303      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   304                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   305                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   306  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   307      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   308      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   309  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   310  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   311  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   312  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   313  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   314      unsigned short password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   315  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   316      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   317       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   318       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   319      password  = watchdog->CON0.B.PW;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   320      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   321  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   322      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   323  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   324  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   325  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   326  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   327  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   328      unsigned short password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   329      Ifx_SCU_WDTS  *watchdog;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   330      watchdog  = &MODULE_SCU.WDTS;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   331      /* Read Password from Safety WDT CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   332       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   333       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   334      password  = watchdog->CON0.B.PW;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   335      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   336  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   337      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   338  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   339  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   340  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   341  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   342  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   343      if (watchdog->CON0.B.LCK)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   344      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   345          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   346          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   347                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   348                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   349                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   350      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   351  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   352      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   353      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   354                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   355                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   356                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   357  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   358      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   359      watchdog->CON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   360  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   361  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   362  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   363  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   364  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   365      if (SCU_WDTS_CON0.B.LCK)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   366      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   367          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   368          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   369                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   370                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   371                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   372      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   373  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   374      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   375      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   376                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   377                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   378                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   379  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   380      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   381      SCU_WDTS_CON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   382  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   383  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   384  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   385  IFX_SSW_INLINE void Ifx_Ssw_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   386  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   387      if (watchdog->CON0.B.LCK)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   388      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   389          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   390          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   391                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   392                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   393                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   394      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   395  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   396      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   397      watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   398                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   399                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   400                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   401  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   402      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   403      watchdog->CON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   404  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   405  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   406  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   407  IFX_SSW_INLINE void Ifx_Ssw_setSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   408  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   409      if (SCU_WDTS_CON0.B.LCK)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   410      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   411          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   412          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   413                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   414                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   415                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   416      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   417  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   418      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   419      SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   420                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   421                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   422                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   423  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   424      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   425      SCU_WDTS_CON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   426  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   427  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   428  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   429  /* Check if Cold PowerOn Reset */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   430  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   431  IFX_SSW_INLINE char Ifx_Ssw_isColdPoweronReset(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   432  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   433      return (char)((SCU_RSTSTAT.U & IFX_SSW_COLD_POWERONRESET_MASK) > 0);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   434  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   435  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   436  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   437  /*Add options to eliminate usage of stack pointers unnecessarily*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   438  #if defined(__HIGHTEC__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   439  #pragma GCC optimize "O2"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   440  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   441  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   442  IFX_SSW_INLINE unsigned char Ifx_Ssw_isApplicationReset(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   443  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   444      unsigned char returnVal;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   445      unsigned int  tempValue = SCU_RSTSTAT.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   446  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   447      if ((tempValue & IFX_SSW_POWERONRESET_MASK) > 0U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   448      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   449          returnVal = 0U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   450      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   451      else if ((tempValue & IFX_SSW_APPLICATIONRESET_MASK) > 0U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   452      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   453          /* get the bit which is set at RSTSTAT (assumption: RSTSTAT register was cleared before and only one bit can be set) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   454          tempValue = tempValue & IFX_SSW_APPLICATIONRESET_MASK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   455          tempValue = (SCU_RSTCON.U >> ((31U - Ifx_Ssw_CLZ(tempValue)) << 1U)) & 3U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   456  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   457          if (tempValue == IFX_SSW_APPLICATIONRESET)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   458          {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   459              returnVal = 1U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   460          }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   461          else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   462          {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   463              returnVal = 0U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   464          }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   465      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   466      else if (((unsigned int)tempValue & ((unsigned int)IFX_SCU_RSTSTAT_CB3_MSK << IFX_SCU_RSTSTAT_CB3_OFF)))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   467      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   468          /* CB3 reset is not configurable and is always application reset */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   469          returnVal = 1U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   470      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   471      else if (CPU0_KRST0.B.RSTSTAT != 0)   /*CPU0 KRST status */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   472      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   473          returnVal = 1U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   474      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   475      else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   476      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   477          returnVal = 0U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   478      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   479  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   480      return returnVal;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   481  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   482  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   483  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   484  /*Restore the options to command line provided ones*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   485  #if defined(__HIGHTEC__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   486  #pragma GCC reset_options
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   487  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   488  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   489  IFX_SSW_INLINE void Ifx_Ssw_initCSA(unsigned int *csaBegin, unsigned int *csaEnd)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   490  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   491      unsigned int  k;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   492      unsigned int  nxt_cxi_val = 0U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   493      unsigned int *prvCsa      = 0U;
	mov.a	a4,#0
.L245:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   494      unsigned int *nxtCsa      = csaBegin;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   495      unsigned int  numOfCsa    = (((unsigned int)csaEnd - (unsigned int)csaBegin) / 64U);
	mov.d	d15,a2
.L311:
	mov.d	d0,a15
.L312:
	sub	d15,d0
	sh	d0,d15,#-6
.L246:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   496  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   497      for (k = 0U; k < numOfCsa; k++)
	mov	d1,#0
.L247:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   498      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   499          nxt_cxi_val = ((unsigned int)((unsigned int)nxtCsa & ((unsigned int)0XFU << 28U)) >> 12U) | \ 
	movh	d2,#15
.L313:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   497      for (k = 0U; k < numOfCsa; k++)      (inlined)
	j	.L11
.L12:
	mov.d	d3,a15
.L314:
	sh	d15,d3,#-12
.L315:
	and	d15,d2
.L316:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   500                        ((unsigned int)((unsigned int)nxtCsa & ((unsigned int)0XFFFFU << 6U)) >> 6U);
	extr.u	d3,d3,#6,#16
.L248:
	or	d3,d15
.L317:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   502          if (k == 0U)      (inlined)
	jne	d1,#0,.L13
.L318:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   501  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   502          if (k == 0U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   503          {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   504              Ifx_Ssw_MTCR(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */
	mtcr	#65080,d3
	isync

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   504              Ifx_Ssw_MTCR(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */      (inlined)
	j	.L14

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   502          if (k == 0U)      (inlined)
.L13:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   505          }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   506          else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   507          {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   508              *prvCsa = nxt_cxi_val;
	st.w	[a4],d3

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   506          else      (inlined)
.L14:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   509          }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   510  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   511          if (k == (numOfCsa - 3U))
	add	d15,d0,#-3
.L319:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   511          if (k == (numOfCsa - 3U))      (inlined)
	jne	d15,d1,.L15
.L320:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   512          {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   513              Ifx_Ssw_MTCR(CPU_LCX, nxt_cxi_val);   /* Last but 2 context save area is pointed in LCX to know if there is CSA depletion */
	mtcr	#65084,d3
	isync

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   511          if (k == (numOfCsa - 3U))      (inlined)
.L15:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   514          }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   515  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   516          prvCsa  = (unsigned int *)nxtCsa;
	mov.aa	a4,a15
.L321:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   517          nxtCsa += IFX_SSW_CSA_SIZE; /* next CSA */
	lea	a15,[a15]64
.L322:
	add	d1,#1

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   497      for (k = 0U; k < numOfCsa; k++)      (inlined)
.L11:
	jlt.u	d1,d0,.L12
.L323:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   518      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   519  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   520      *prvCsa = 0U;                   /* Store null pointer in last CSA (= very first time!) */
	mov	d15,#0
.L324:
	st.w	[a4],d15
.L149:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     2   * \file Ifx_Ssw_CompilersTasking.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     3   * \brief Startup Software for Tasking compiler options
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     8   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     9   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    11   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    12   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    13   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    14   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    15   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    16   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    17   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    18   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    19   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    20   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    21   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    22   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    23  #ifndef IFX_SSW_COMPILERSTASKING_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    24  #define IFX_SSW_COMPILERSTASKING_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    25  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    26  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    27  /*----------------------------------Includes----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    28  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    29  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    30  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    31  /*-----------------------------------Macros-----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    32  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    33  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    34  /*Linker definitions which are specific to Tasking */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    35  /* IFX_CFG_USE_COMPILER_DEFAULT_LINKER shall be defined in Ifx_Cfg.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    36   * to use the default compiler linker varaibles and startup */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    37  #ifndef IFX_CFG_USE_COMPILER_DEFAULT_LINKER
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    39  /*Start: Common definitions ********************************************** */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    40  #define IFX_SSW_COMMON_LINKER_SYMBOLS()                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    41      __asm("\t .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_"); \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    42      extern unsigned int __START0[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    43      extern unsigned int __START1[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    44      extern unsigned int __START2[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    45      extern unsigned int __START3[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    46      extern unsigned int __START4[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    47      extern unsigned int __START5[];     /**< Pointer to the startup code */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    48  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    49  /*End: Common definitions ************************************************ */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    50  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    51  /*Start: Core 0 definitions ********************************************** */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    52  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    53  /*C extern defintions */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    54  #define IFX_SSW_CORE_LINKER_SYMBOLS(cpu)                                                                             \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    55      __asm("\t .extern __USTACK"#cpu);         /**< user stack end is required as asm to be used with setreg macro */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    56      extern unsigned int __ISTACK##cpu[];      /**< interrupt stack end */                                            \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    57      extern unsigned int __INTTAB_CPU##cpu[];  /**< interrupt vector table */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    58      extern unsigned int __TRAPTAB_CPU##cpu[]; /**< trap vector table */                                              \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    59      extern unsigned int __CSA##cpu[];         /**< context save area begin */                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    60      extern unsigned int __CSA##cpu##_END[];   /**< context save area end   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    61  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    62  #define __USTACK(cpu)      __USTACK##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    63  #define __ISTACK(cpu)      __ISTACK##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    64  #define __INTTAB_CPU(cpu)  __INTTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    65  #define __TRAPTAB_CPU(cpu) __TRAPTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    66  #define __CSA(cpu)         __CSA##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    67  #define __CSA_END(cpu)     __CSA##cpu##_END
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    68  #define __START(cpu)       __START##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    69  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    70  /*Wrapper macros for the tool specific definitions */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    71  #if defined(IFX_USE_SW_MANAGED_INT)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    72  #define __INTTAB(cpu)      ((unsigned int)__INTTAB_CPU##cpu | (unsigned int)0x1FE0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    73  #else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    74  #define __INTTAB(cpu)      __INTTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    75  #endif /*defined(IFX_USE_SW_MANAGED_INT) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    76  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    77  #define __TRAPTAB(cpu)     __TRAPTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    78  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    79  #define __SDATA1(cpu)      _SMALL_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    80  #define __SDATA2(cpu)      _LITERAL_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    81  #define __SDATA3(cpu)      _A8_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    82  #define __SDATA4(cpu)      _A9_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    83  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    84  #endif /*IFX_CFG_USE_COMPILER_DEFAULT_LINKER*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    86  #ifdef __cplusplus
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    87  #define IFX_SSW_INLINE   static inline
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    88  #else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    89  #define IFX_SSW_INLINE   inline
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    90  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    91  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    92  #define IFX_SSW_NULL_PTR ((void *)0x0U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    94  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    95  /*----------------------------   GNU Intrinsics  -----------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    96  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    97  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    98  #define Ifx_Ssw_MTCR(reg, val) __mtcr(reg, val);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    99  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   100  #define Ifx_Ssw_MFCR(reg)      __mfcr(reg);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   102  IFX_SSW_INLINE void Ifx_Ssw_NOP(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   103  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   104      __nop();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   105  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   106  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   107  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   108  IFX_SSW_INLINE void Ifx_Ssw_DSYNC(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   109  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   110      __dsync();
	dsync
.L141:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   111  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   112  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   113  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   114  IFX_SSW_INLINE void Ifx_Ssw_ISYNC(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   115  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   116      __isync();
	isync
.L150:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   158  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   159      Ifx_Ssw_jumpToFunction(__StartUpSoftware_Phase4);
	movh.a	a15,#@his(__StartUpSoftware_Phase4)
.L244:
	lea	a15,[a15]@los(__StartUpSoftware_Phase4)
.L151:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   149      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L152:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   160  }
	ret
.L137:
	
____StartUpSoftware_Phase3PowerOnResetPath_function_end:
	.size	__StartUpSoftware_Phase3PowerOnResetPath,____StartUpSoftware_Phase3PowerOnResetPath_function_end-__StartUpSoftware_Phase3PowerOnResetPath
.L64:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase3ApplicationResetPath',code,cluster('__StartUpSoftware_Phase3ApplicationResetPath')
	.sect	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase3ApplicationResetPath'
	.align	2
	

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   161  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   162  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   163  static void __StartUpSoftware_Phase3ApplicationResetPath(void)
; Function __StartUpSoftware_Phase3ApplicationResetPath
.L30:
__StartUpSoftware_Phase3ApplicationResetPath:	.type	func

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   164  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   165      IFX_SSW_INIT_CONTEXT();
	 movh.a	 a10,#@his(__USTACK0)
 lea	 a10,[a10]@los(__USTACK0)
.L113:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     2   * \file Ifx_Ssw_CompilersTasking.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     3   * \brief Startup Software for Tasking compiler options
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     8   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     9   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    11   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    12   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    13   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    14   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    15   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    16   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    17   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    18   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    19   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    20   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    21   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    22   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    23  #ifndef IFX_SSW_COMPILERSTASKING_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    24  #define IFX_SSW_COMPILERSTASKING_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    25  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    26  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    27  /*----------------------------------Includes----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    28  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    29  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    30  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    31  /*-----------------------------------Macros-----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    32  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    33  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    34  /*Linker definitions which are specific to Tasking */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    35  /* IFX_CFG_USE_COMPILER_DEFAULT_LINKER shall be defined in Ifx_Cfg.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    36   * to use the default compiler linker varaibles and startup */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    37  #ifndef IFX_CFG_USE_COMPILER_DEFAULT_LINKER
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    39  /*Start: Common definitions ********************************************** */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    40  #define IFX_SSW_COMMON_LINKER_SYMBOLS()                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    41      __asm("\t .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_"); \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    42      extern unsigned int __START0[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    43      extern unsigned int __START1[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    44      extern unsigned int __START2[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    45      extern unsigned int __START3[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    46      extern unsigned int __START4[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    47      extern unsigned int __START5[];     /**< Pointer to the startup code */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    48  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    49  /*End: Common definitions ************************************************ */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    50  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    51  /*Start: Core 0 definitions ********************************************** */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    52  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    53  /*C extern defintions */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    54  #define IFX_SSW_CORE_LINKER_SYMBOLS(cpu)                                                                             \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    55      __asm("\t .extern __USTACK"#cpu);         /**< user stack end is required as asm to be used with setreg macro */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    56      extern unsigned int __ISTACK##cpu[];      /**< interrupt stack end */                                            \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    57      extern unsigned int __INTTAB_CPU##cpu[];  /**< interrupt vector table */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    58      extern unsigned int __TRAPTAB_CPU##cpu[]; /**< trap vector table */                                              \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    59      extern unsigned int __CSA##cpu[];         /**< context save area begin */                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    60      extern unsigned int __CSA##cpu##_END[];   /**< context save area end   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    61  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    62  #define __USTACK(cpu)      __USTACK##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    63  #define __ISTACK(cpu)      __ISTACK##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    64  #define __INTTAB_CPU(cpu)  __INTTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    65  #define __TRAPTAB_CPU(cpu) __TRAPTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    66  #define __CSA(cpu)         __CSA##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    67  #define __CSA_END(cpu)     __CSA##cpu##_END
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    68  #define __START(cpu)       __START##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    69  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    70  /*Wrapper macros for the tool specific definitions */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    71  #if defined(IFX_USE_SW_MANAGED_INT)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    72  #define __INTTAB(cpu)      ((unsigned int)__INTTAB_CPU##cpu | (unsigned int)0x1FE0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    73  #else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    74  #define __INTTAB(cpu)      __INTTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    75  #endif /*defined(IFX_USE_SW_MANAGED_INT) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    76  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    77  #define __TRAPTAB(cpu)     __TRAPTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    78  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    79  #define __SDATA1(cpu)      _SMALL_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    80  #define __SDATA2(cpu)      _LITERAL_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    81  #define __SDATA3(cpu)      _A8_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    82  #define __SDATA4(cpu)      _A9_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    83  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    84  #endif /*IFX_CFG_USE_COMPILER_DEFAULT_LINKER*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    86  #ifdef __cplusplus
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    87  #define IFX_SSW_INLINE   static inline
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    88  #else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    89  #define IFX_SSW_INLINE   inline
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    90  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    91  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    92  #define IFX_SSW_NULL_PTR ((void *)0x0U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    94  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    95  /*----------------------------   GNU Intrinsics  -----------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    96  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    97  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    98  #define Ifx_Ssw_MTCR(reg, val) __mtcr(reg, val);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    99  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   100  #define Ifx_Ssw_MFCR(reg)      __mfcr(reg);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   102  IFX_SSW_INLINE void Ifx_Ssw_NOP(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   103  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   104      __nop();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   105  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   106  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   107  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   108  IFX_SSW_INLINE void Ifx_Ssw_DSYNC(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   109  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   110      __dsync();
	dsync
.L114:
	movh.a	a15,#@his(__CSA0)
.L249:
	lea	a15,[a15]@los(__CSA0)
	movh.a	a2,#@his(__CSA0_END)
	lea	a2,[a2]@los(__CSA0_END)
.L117:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     8   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    11   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    14   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    15   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    16   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    22   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    23   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    24  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    25  #ifndef IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    26  #define IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    27  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    28  #include "Ifx_Ssw_Compilers.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    29  #include "Ifx_Cfg_Ssw.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    30  #include "IfxScu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    31  #include "IfxCpu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    32  #include "IfxScu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    33  #include "IfxCpu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    34  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    35  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    36  /*-----------------------------------Macros-----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    37  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    39  /** \brief PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    40   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    41  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    42      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    43       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    44       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    45       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    46       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    47       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    48       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    49  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    50  /** \brief Application Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    51   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    52  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    53      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    54       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    55       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    56       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    57       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    58       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    59       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    63  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    64  /** \brief Cold PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    65   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    66  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    67      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    68       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    69       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    70       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    71  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    72  /** \brief Application reset enabled
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    73   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    74   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    75  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    76  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    77  /** \brief Reload value mask */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    78  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    79  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    80  /** \brief Mask values is used to invert the password value bits */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    81  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    82  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    83  /** \brief CSA size */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    84  #define IFX_SSW_CSA_SIZE                          16U
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    86  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    87  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    88  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    89  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    90  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    91  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    92  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    94  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    95  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    96  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    97  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    98  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    99  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   100  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   102  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   103  /*-------------------------Infrastructure Functions---------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   104  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   105  /** \brief clear safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   106   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   107   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   109      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   110          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   111          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   112                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   113                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   114                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   115          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   116          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   117                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   118                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   119                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   120          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   121          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   122      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   123  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   124  /** \brief set safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   125   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   126   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   127  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   128      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   129          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   130          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   131                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   132                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   133                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   134          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   135          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   136                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   137                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   138                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   139          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   140          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   141      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   142  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   143  /** \brief Fetch current password of CPU Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   144   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   145   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   146   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   147   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   148   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   149   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   150  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   151  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   152  /** \brief Fetch current password of Safety Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   153   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   154   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   155   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   156   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   157   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   158  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   159  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   160  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   161   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   162   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   163   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   164   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   165   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   166   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   167   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   168   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   169   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   170  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   171  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   172  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   173   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   174   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   175   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   176   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   177   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   178   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   179   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   180  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   181  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   182  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   183   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   184   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   185   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   186   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   187   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   188   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   189   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   190   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   191  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   192  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   193  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   194   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   195   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   196   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   197   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   198   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   199   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   200  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   201  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   202  /** \brief Disable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   203   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   204   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   205   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   206   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   207   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   208   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   209   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   210  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   211  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   212  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   213   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   214   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   215   *   periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   216   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   217   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   218   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   219   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   220  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   221  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   222  /** \brief Disable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   223   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   224   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   225   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   226   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   227   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   228   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   229  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   230  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   231  /** \brief Enable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   232   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   233   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   234   * periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   235   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   236   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   237   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   238  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   239  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   240  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   241   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   242   * \param programCounter Program counter value to start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   243   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   244  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   245  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   246  /** \brief Set CPU0 to idle state */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   247  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   248  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   249  /** \brief Initialise the C runtime environment */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   250  extern void Ifx_Ssw_C_Init(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   251  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   252  /** \brief Returns the system timer frequency.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   253   * \return the system timer frequency in Hz.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   254   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   255  extern float Ifx_Ssw_getStmFrequency(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   256  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   257  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   258   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   259   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   260   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   261   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   262   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   263   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   264   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   265   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   266  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   267  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   268  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   269   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   270   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   271   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   272   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   273   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   274   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   275   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   276  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   277  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   278  /*Endinit Functions*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   279  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   280  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   281      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   282       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   283       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   284  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   285      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   286      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   287  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   288  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   289  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   290  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   291  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   292      /* Clear EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   293      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   294  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   295      /* Read back of the register is mandatory to ensure the register update */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   296      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   297  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   298  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   299  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   300  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   301  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   302      /* Set EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   303      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   304                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   305                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   306  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   307      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   308      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   309  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   310  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   311  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   312  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   313  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   314      unsigned short password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   315  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   316      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   317       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   318       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   319      password  = watchdog->CON0.B.PW;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   320      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   321  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   322      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   323  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   324  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   325  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   326  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   327  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   328      unsigned short password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   329      Ifx_SCU_WDTS  *watchdog;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   330      watchdog  = &MODULE_SCU.WDTS;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   331      /* Read Password from Safety WDT CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   332       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   333       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   334      password  = watchdog->CON0.B.PW;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   335      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   336  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   337      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   338  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   339  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   340  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   341  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   342  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   343      if (watchdog->CON0.B.LCK)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   344      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   345          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   346          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   347                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   348                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   349                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   350      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   351  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   352      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   353      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   354                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   355                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   356                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   357  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   358      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   359      watchdog->CON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   360  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   361  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   362  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   363  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   364  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   365      if (SCU_WDTS_CON0.B.LCK)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   366      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   367          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   368          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   369                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   370                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   371                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   372      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   373  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   374      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   375      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   376                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   377                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   378                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   379  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   380      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   381      SCU_WDTS_CON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   382  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   383  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   384  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   385  IFX_SSW_INLINE void Ifx_Ssw_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   386  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   387      if (watchdog->CON0.B.LCK)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   388      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   389          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   390          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   391                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   392                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   393                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   394      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   395  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   396      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   397      watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   398                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   399                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   400                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   401  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   402      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   403      watchdog->CON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   404  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   405  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   406  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   407  IFX_SSW_INLINE void Ifx_Ssw_setSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   408  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   409      if (SCU_WDTS_CON0.B.LCK)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   410      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   411          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   412          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   413                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   414                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   415                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   416      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   417  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   418      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   419      SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   420                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   421                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   422                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   423  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   424      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   425      SCU_WDTS_CON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   426  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   427  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   428  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   429  /* Check if Cold PowerOn Reset */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   430  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   431  IFX_SSW_INLINE char Ifx_Ssw_isColdPoweronReset(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   432  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   433      return (char)((SCU_RSTSTAT.U & IFX_SSW_COLD_POWERONRESET_MASK) > 0);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   434  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   435  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   436  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   437  /*Add options to eliminate usage of stack pointers unnecessarily*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   438  #if defined(__HIGHTEC__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   439  #pragma GCC optimize "O2"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   440  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   441  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   442  IFX_SSW_INLINE unsigned char Ifx_Ssw_isApplicationReset(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   443  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   444      unsigned char returnVal;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   445      unsigned int  tempValue = SCU_RSTSTAT.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   446  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   447      if ((tempValue & IFX_SSW_POWERONRESET_MASK) > 0U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   448      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   449          returnVal = 0U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   450      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   451      else if ((tempValue & IFX_SSW_APPLICATIONRESET_MASK) > 0U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   452      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   453          /* get the bit which is set at RSTSTAT (assumption: RSTSTAT register was cleared before and only one bit can be set) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   454          tempValue = tempValue & IFX_SSW_APPLICATIONRESET_MASK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   455          tempValue = (SCU_RSTCON.U >> ((31U - Ifx_Ssw_CLZ(tempValue)) << 1U)) & 3U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   456  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   457          if (tempValue == IFX_SSW_APPLICATIONRESET)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   458          {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   459              returnVal = 1U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   460          }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   461          else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   462          {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   463              returnVal = 0U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   464          }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   465      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   466      else if (((unsigned int)tempValue & ((unsigned int)IFX_SCU_RSTSTAT_CB3_MSK << IFX_SCU_RSTSTAT_CB3_OFF)))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   467      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   468          /* CB3 reset is not configurable and is always application reset */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   469          returnVal = 1U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   470      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   471      else if (CPU0_KRST0.B.RSTSTAT != 0)   /*CPU0 KRST status */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   472      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   473          returnVal = 1U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   474      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   475      else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   476      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   477          returnVal = 0U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   478      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   479  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   480      return returnVal;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   481  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   482  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   483  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   484  /*Restore the options to command line provided ones*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   485  #if defined(__HIGHTEC__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   486  #pragma GCC reset_options
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   487  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   488  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   489  IFX_SSW_INLINE void Ifx_Ssw_initCSA(unsigned int *csaBegin, unsigned int *csaEnd)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   490  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   491      unsigned int  k;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   492      unsigned int  nxt_cxi_val = 0U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   493      unsigned int *prvCsa      = 0U;
	mov.a	a4,#0
.L251:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   494      unsigned int *nxtCsa      = csaBegin;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   495      unsigned int  numOfCsa    = (((unsigned int)csaEnd - (unsigned int)csaBegin) / 64U);
	mov.d	d15,a2
.L293:
	mov.d	d0,a15
.L294:
	sub	d15,d0
	sh	d0,d15,#-6
.L252:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   496  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   497      for (k = 0U; k < numOfCsa; k++)
	mov	d1,#0
.L253:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   498      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   499          nxt_cxi_val = ((unsigned int)((unsigned int)nxtCsa & ((unsigned int)0XFU << 28U)) >> 12U) | \ 
	movh	d2,#15
.L295:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   497      for (k = 0U; k < numOfCsa; k++)      (inlined)
	j	.L16
.L17:
	mov.d	d3,a15
.L296:
	sh	d15,d3,#-12
.L297:
	and	d15,d2
.L298:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   500                        ((unsigned int)((unsigned int)nxtCsa & ((unsigned int)0XFFFFU << 6U)) >> 6U);
	extr.u	d3,d3,#6,#16
.L254:
	or	d3,d15
.L299:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   502          if (k == 0U)      (inlined)
	jne	d1,#0,.L18
.L300:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   501  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   502          if (k == 0U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   503          {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   504              Ifx_Ssw_MTCR(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */
	mtcr	#65080,d3
	isync

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   504              Ifx_Ssw_MTCR(CPU_FCX, nxt_cxi_val);   /* store the new pcxi value to LCX */      (inlined)
	j	.L19

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   502          if (k == 0U)      (inlined)
.L18:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   505          }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   506          else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   507          {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   508              *prvCsa = nxt_cxi_val;
	st.w	[a4],d3

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   506          else      (inlined)
.L19:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   509          }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   510  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   511          if (k == (numOfCsa - 3U))
	add	d15,d0,#-3
.L301:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   511          if (k == (numOfCsa - 3U))      (inlined)
	jne	d15,d1,.L20
.L302:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   512          {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   513              Ifx_Ssw_MTCR(CPU_LCX, nxt_cxi_val);   /* Last but 2 context save area is pointed in LCX to know if there is CSA depletion */
	mtcr	#65084,d3
	isync

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   511          if (k == (numOfCsa - 3U))      (inlined)
.L20:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   514          }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   515  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   516          prvCsa  = (unsigned int *)nxtCsa;
	mov.aa	a4,a15
.L303:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   517          nxtCsa += IFX_SSW_CSA_SIZE; /* next CSA */
	lea	a15,[a15]64
.L304:
	add	d1,#1

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   497      for (k = 0U; k < numOfCsa; k++)      (inlined)
.L16:
	jlt.u	d1,d0,.L17
.L305:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   518      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   519  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   520      *prvCsa = 0U;                   /* Store null pointer in last CSA (= very first time!) */
	mov	d15,#0
.L306:
	st.w	[a4],d15
.L130:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     2   * \file Ifx_Ssw_CompilersTasking.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     3   * \brief Startup Software for Tasking compiler options
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     8   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     9   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    11   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    12   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    13   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    14   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    15   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    16   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    17   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    18   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    19   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    20   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    21   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    22   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    23  #ifndef IFX_SSW_COMPILERSTASKING_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    24  #define IFX_SSW_COMPILERSTASKING_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    25  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    26  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    27  /*----------------------------------Includes----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    28  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    29  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    30  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    31  /*-----------------------------------Macros-----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    32  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    33  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    34  /*Linker definitions which are specific to Tasking */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    35  /* IFX_CFG_USE_COMPILER_DEFAULT_LINKER shall be defined in Ifx_Cfg.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    36   * to use the default compiler linker varaibles and startup */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    37  #ifndef IFX_CFG_USE_COMPILER_DEFAULT_LINKER
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    39  /*Start: Common definitions ********************************************** */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    40  #define IFX_SSW_COMMON_LINKER_SYMBOLS()                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    41      __asm("\t .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_"); \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    42      extern unsigned int __START0[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    43      extern unsigned int __START1[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    44      extern unsigned int __START2[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    45      extern unsigned int __START3[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    46      extern unsigned int __START4[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    47      extern unsigned int __START5[];     /**< Pointer to the startup code */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    48  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    49  /*End: Common definitions ************************************************ */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    50  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    51  /*Start: Core 0 definitions ********************************************** */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    52  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    53  /*C extern defintions */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    54  #define IFX_SSW_CORE_LINKER_SYMBOLS(cpu)                                                                             \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    55      __asm("\t .extern __USTACK"#cpu);         /**< user stack end is required as asm to be used with setreg macro */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    56      extern unsigned int __ISTACK##cpu[];      /**< interrupt stack end */                                            \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    57      extern unsigned int __INTTAB_CPU##cpu[];  /**< interrupt vector table */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    58      extern unsigned int __TRAPTAB_CPU##cpu[]; /**< trap vector table */                                              \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    59      extern unsigned int __CSA##cpu[];         /**< context save area begin */                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    60      extern unsigned int __CSA##cpu##_END[];   /**< context save area end   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    61  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    62  #define __USTACK(cpu)      __USTACK##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    63  #define __ISTACK(cpu)      __ISTACK##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    64  #define __INTTAB_CPU(cpu)  __INTTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    65  #define __TRAPTAB_CPU(cpu) __TRAPTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    66  #define __CSA(cpu)         __CSA##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    67  #define __CSA_END(cpu)     __CSA##cpu##_END
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    68  #define __START(cpu)       __START##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    69  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    70  /*Wrapper macros for the tool specific definitions */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    71  #if defined(IFX_USE_SW_MANAGED_INT)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    72  #define __INTTAB(cpu)      ((unsigned int)__INTTAB_CPU##cpu | (unsigned int)0x1FE0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    73  #else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    74  #define __INTTAB(cpu)      __INTTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    75  #endif /*defined(IFX_USE_SW_MANAGED_INT) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    76  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    77  #define __TRAPTAB(cpu)     __TRAPTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    78  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    79  #define __SDATA1(cpu)      _SMALL_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    80  #define __SDATA2(cpu)      _LITERAL_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    81  #define __SDATA3(cpu)      _A8_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    82  #define __SDATA4(cpu)      _A9_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    83  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    84  #endif /*IFX_CFG_USE_COMPILER_DEFAULT_LINKER*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    86  #ifdef __cplusplus
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    87  #define IFX_SSW_INLINE   static inline
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    88  #else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    89  #define IFX_SSW_INLINE   inline
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    90  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    91  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    92  #define IFX_SSW_NULL_PTR ((void *)0x0U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    94  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    95  /*----------------------------   GNU Intrinsics  -----------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    96  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    97  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    98  #define Ifx_Ssw_MTCR(reg, val) __mtcr(reg, val);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    99  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   100  #define Ifx_Ssw_MFCR(reg)      __mfcr(reg);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   102  IFX_SSW_INLINE void Ifx_Ssw_NOP(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   103  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   104      __nop();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   105  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   106  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   107  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   108  IFX_SSW_INLINE void Ifx_Ssw_DSYNC(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   109  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   110      __dsync();
	dsync
.L118:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   111  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   112  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   113  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   114  IFX_SSW_INLINE void Ifx_Ssw_ISYNC(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   115  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   116      __isync();
	isync
.L132:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   166  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   167      Ifx_Ssw_jumpToFunction(__StartUpSoftware_Phase5);
	movh.a	a15,#@his(__StartUpSoftware_Phase5)
.L250:
	lea	a15,[a15]@los(__StartUpSoftware_Phase5)
.L134:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   149      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L135:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   168  }
	ret
.L111:
	
____StartUpSoftware_Phase3ApplicationResetPath_function_end:
	.size	__StartUpSoftware_Phase3ApplicationResetPath,____StartUpSoftware_Phase3ApplicationResetPath_function_end-__StartUpSoftware_Phase3ApplicationResetPath
.L59:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase4',code,cluster('__StartUpSoftware_Phase4')
	.sect	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase4'
	.align	2
	

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   169  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   170  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   171  static void __StartUpSoftware_Phase4(void)
; Function __StartUpSoftware_Phase4
.L32:
__StartUpSoftware_Phase4:	.type	func

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   172  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   173      /* This is for ADAS chip, where clock is provided by MMIC chip. This has to be
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   174       * implemented according the board.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   175       */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   176      IFX_CFG_SSW_CALLOUT_MMIC_CHECK();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   177  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   178      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   179          /* Update safety and cpu watchdog reload value*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   180          unsigned short cpuWdtPassword    = Ifx_Ssw_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[0]);
	movh.a	a4,#61443
.L160:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     8   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    11   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    14   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    15   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    16   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    22   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    23   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    24  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    25  #ifndef IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    26  #define IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    27  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    28  #include "Ifx_Ssw_Compilers.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    29  #include "Ifx_Cfg_Ssw.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    30  #include "IfxScu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    31  #include "IfxCpu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    32  #include "IfxScu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    33  #include "IfxCpu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    34  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    35  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    36  /*-----------------------------------Macros-----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    37  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    39  /** \brief PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    40   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    41  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    42      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    43       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    44       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    45       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    46       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    47       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    48       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    49  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    50  /** \brief Application Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    51   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    52  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    53      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    54       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    55       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    56       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    57       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    58       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    59       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    63  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    64  /** \brief Cold PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    65   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    66  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    67      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    68       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    69       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    70       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    71  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    72  /** \brief Application reset enabled
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    73   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    74   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    75  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    76  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    77  /** \brief Reload value mask */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    78  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    79  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    80  /** \brief Mask values is used to invert the password value bits */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    81  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    82  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    83  /** \brief CSA size */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    84  #define IFX_SSW_CSA_SIZE                          16U
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    86  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    87  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    88  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    89  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    90  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    91  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    92  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    94  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    95  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    96  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    97  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    98  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    99  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   100  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   102  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   103  /*-------------------------Infrastructure Functions---------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   104  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   105  /** \brief clear safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   106   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   107   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   109      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   110          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   111          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   112                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   113                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   114                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   115          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   116          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   117                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   118                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   119                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   120          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   121          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   122      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   123  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   124  /** \brief set safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   125   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   126   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   127  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   128      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   129          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   130          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   131                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   132                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   133                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   134          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   135          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   136                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   137                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   138                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   139          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   140          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   141      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   142  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   143  /** \brief Fetch current password of CPU Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   144   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   145   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   146   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   147   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   148   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   149   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   150  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   151  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   152  /** \brief Fetch current password of Safety Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   153   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   154   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   155   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   156   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   157   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   158  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   159  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   160  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   161   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   162   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   163   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   164   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   165   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   166   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   167   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   168   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   169   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   170  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   171  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   172  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   173   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   174   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   175   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   176   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   177   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   178   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   179   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   180  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   181  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   182  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   183   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   184   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   185   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   186   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   187   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   188   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   189   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   190   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   191  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   192  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   193  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   194   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   195   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   196   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   197   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   198   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   199   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   200  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   201  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   202  /** \brief Disable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   203   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   204   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   205   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   206   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   207   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   208   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   209   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   210  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   211  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   212  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   213   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   214   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   215   *   periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   216   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   217   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   218   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   219   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   220  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   221  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   222  /** \brief Disable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   223   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   224   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   225   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   226   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   227   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   228   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   229  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   230  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   231  /** \brief Enable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   232   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   233   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   234   * periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   235   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   236   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   237   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   238  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   239  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   240  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   241   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   242   * \param programCounter Program counter value to start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   243   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   244  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   245  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   246  /** \brief Set CPU0 to idle state */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   247  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   248  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   249  /** \brief Initialise the C runtime environment */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   250  extern void Ifx_Ssw_C_Init(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   251  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   252  /** \brief Returns the system timer frequency.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   253   * \return the system timer frequency in Hz.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   254   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   255  extern float Ifx_Ssw_getStmFrequency(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   256  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   257  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   258   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   259   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   260   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   261   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   262   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   263   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   264   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   265   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   266  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   267  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   268  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   269   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   270   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   271   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   272   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   273   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   274   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   275   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   276  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   277  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   278  /*Endinit Functions*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   279  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   280  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   281      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   282       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   283       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   284  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   285      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   286      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   287  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   288  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   289  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   290  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   291  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   292      /* Clear EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   293      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   294  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   295      /* Read back of the register is mandatory to ensure the register update */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   296      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   297  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   298  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   299  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   300  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   301  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   302      /* Set EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   303      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   304                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   305                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   306  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   307      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   308      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   309  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   310  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   311  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   312  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   313  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   314      unsigned short password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   315  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   316      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   317       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   318       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   319      password  = watchdog->CON0.B.PW;
	ld.w	d15,[a4]@los(0xf003624c)
	extr.u	d15,d15,#2,#14
.L329:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   320      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
	xor	d4,d15,#63
.L161:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   321  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   322      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   323  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   324  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   325  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   326  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   327  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   328      unsigned short password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   329      Ifx_SCU_WDTS  *watchdog;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   330      watchdog  = &MODULE_SCU.WDTS;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   331      /* Read Password from Safety WDT CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   332       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   333       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   334      password  = watchdog->CON0.B.PW;
	ld.w	d15,[a4]@los(0xf00362a8)
	extr.u	d15,d15,#2,#14
.L330:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   335      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
	xor	d15,d15,#63
.L170:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   181          unsigned short safetyWdtPassword = Ifx_Ssw_getSafetyWatchdogPasswordInline();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   182  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   183          /* servicing watchdog timers */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   184          Ifx_Ssw_serviceCpuWatchdog(&MODULE_SCU.WDTCPU[0], cpuWdtPassword);
	lea	a4,[a4]@los(0xf003624c)
.L166:
	call	Ifx_Ssw_serviceCpuWatchdog
.L167:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   185          Ifx_Ssw_serviceSafetyWatchdog(safetyWdtPassword);
	mov	d4,d15
.L173:
	call	Ifx_Ssw_serviceSafetyWatchdog
.L155:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   186      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   187  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   188      /* Initialize the clock system */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   189      IFX_CFG_SSW_CALLOUT_PLL_INIT();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   190  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   191      /* MBIST Tests and evaluation */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   192      IFX_CFG_SSW_CALLOUT_MBIST();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   193  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   194      Ifx_Ssw_jumpToFunction(__StartUpSoftware_Phase5);
	movh.a	a15,#@his(__StartUpSoftware_Phase5)
	lea	a15,[a15]@los(__StartUpSoftware_Phase5)
.L177:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   149      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L178:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   195  }
	ret
.L154:
	
____StartUpSoftware_Phase4_function_end:
	.size	__StartUpSoftware_Phase4,____StartUpSoftware_Phase4_function_end-__StartUpSoftware_Phase4
.L69:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase5',code,cluster('__StartUpSoftware_Phase5')
	.sect	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase5'
	.align	2
	

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   196  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   197  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   198  static void __StartUpSoftware_Phase5(void)
; Function __StartUpSoftware_Phase5
.L34:
__StartUpSoftware_Phase5:	.type	func

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   199  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   200      /* SMU alarm handling */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   201      IFX_CFG_SSW_CALLOUT_SMU();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   202  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   203      Ifx_Ssw_jumpToFunction(__StartUpSoftware_Phase6);
	movh.a	a15,#@his(__StartUpSoftware_Phase6)
	lea	a15,[a15]@los(__StartUpSoftware_Phase6)
.L181:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   149      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L182:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   204  }
	ret
.L180:
	
____StartUpSoftware_Phase5_function_end:
	.size	__StartUpSoftware_Phase5,____StartUpSoftware_Phase5_function_end-__StartUpSoftware_Phase5
.L74:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase6',code,cluster('__StartUpSoftware_Phase6')
	.sect	'.text.Ifx_Ssw_Tc0.__StartUpSoftware_Phase6'
	.align	2
	

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   205  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   206  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   207  static void __StartUpSoftware_Phase6(void)
; Function __StartUpSoftware_Phase6
.L36:
__StartUpSoftware_Phase6:	.type	func

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   208  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   209      /* Start remaining cores as a daisy-chain */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   210  #if (IFX_CFG_SSW_ENABLE_TRICORE1 != 0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   211      Ifx_Ssw_startCore(&MODULE_CPU1, (unsigned int)__START(1));           /*The status returned by function call is ignored */
	movh.a	a4,#63618
.L339:
	movh.a	a15,#@his(__START1)
	lea	a15,[a15]@los(__START1)
	mov.d	d4,a15
.L340:
	call	Ifx_Ssw_startCore
.L341:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   212  #endif /* #if (IFX_CFG_CPU_CSTART_ENABLE_TRICORE1 != 0)*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   213  #if (IFX_CFG_SSW_ENABLE_TRICORE1 == 0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   214  #if (IFX_CFG_SSW_ENABLE_TRICORE2 != 0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   215      Ifx_Ssw_startCore(&MODULE_CPU2, (unsigned int)__START(2));           /*The status returned by function call is ignored */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   216  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   217  #if (IFX_CFG_SSW_ENABLE_TRICORE2 == 0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   218  #if (IFX_CFG_SSW_ENABLE_TRICORE3 != 0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   219      Ifx_Ssw_startCore(&MODULE_CPU3, (unsigned int)__START(3));           /*The status returned by function call is ignored */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   220  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   221  #if (IFX_CFG_SSW_ENABLE_TRICORE3 == 0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   222  #if (IFX_CFG_SSW_ENABLE_TRICORE4 != 0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   223      Ifx_Ssw_startCore(&MODULE_CPU4, (unsigned int)__START(4));           /*The status returned by function call is ignored */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   224  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   225  #if (IFX_CFG_SSW_ENABLE_TRICORE4 == 0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   226  #if (IFX_CFG_SSW_ENABLE_TRICORE5 != 0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   227      Ifx_Ssw_startCore(&MODULE_CPU5, (unsigned int)__START(5));           /*The status returned by function call is ignored */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   228  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   229  #endif /* #if (IFX_CFG_SSW_ENABLE_TRICORE4 == 0) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   230  #endif /* #if (IFX_CFG_SSW_ENABLE_TRICORE3 == 0) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   231  #endif /* #if (IFX_CFG_SSW_ENABLE_TRICORE2 == 0) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   232  #endif /* #if (IFX_CFG_SSW_ENABLE_TRICORE1 == 0) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   233  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   234      Ifx_Ssw_jumpToFunction(__Core0_start);
	movh.a	a15,#@his(__Core0_start)
	lea	a15,[a15]@los(__Core0_start)
.L185:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   149      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L186:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   235  }
	ret
.L184:
	
____StartUpSoftware_Phase6_function_end:
	.size	__StartUpSoftware_Phase6,____StartUpSoftware_Phase6_function_end-__StartUpSoftware_Phase6
.L79:
	; End of function
	
	.sdecl	'.text.Ifx_Ssw_Tc0.__Core0_start',code,cluster('__Core0_start')
	.sect	'.text.Ifx_Ssw_Tc0.__Core0_start'
	.align	2
	

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   236  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   237  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   238  static void __Core0_start(void)
; Function __Core0_start
.L38:
__Core0_start:	.type	func

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   239  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   240      /* Update safety and cpu/safety watchdog reload values */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   241      /* Password value is read again, because there is chance that local variables may be overridden. */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   242      unsigned short cpuWdtPassword    = Ifx_Ssw_getCpuWatchdogPasswordInline(&MODULE_SCU.WDTCPU[0]);
	movh.a	a15,#61443
.L191:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     8   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    11   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    14   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    15   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    16   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    22   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    23   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    24  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    25  #ifndef IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    26  #define IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    27  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    28  #include "Ifx_Ssw_Compilers.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    29  #include "Ifx_Cfg_Ssw.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    30  #include "IfxScu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    31  #include "IfxCpu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    32  #include "IfxScu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    33  #include "IfxCpu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    34  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    35  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    36  /*-----------------------------------Macros-----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    37  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    39  /** \brief PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    40   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    41  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    42      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    43       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    44       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    45       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    46       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    47       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    48       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    49  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    50  /** \brief Application Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    51   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    52  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    53      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    54       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    55       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    56       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    57       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    58       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    59       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    63  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    64  /** \brief Cold PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    65   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    66  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    67      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    68       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    69       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    70       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    71  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    72  /** \brief Application reset enabled
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    73   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    74   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    75  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    76  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    77  /** \brief Reload value mask */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    78  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    79  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    80  /** \brief Mask values is used to invert the password value bits */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    81  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    82  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    83  /** \brief CSA size */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    84  #define IFX_SSW_CSA_SIZE                          16U
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    86  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    87  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    88  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    89  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    90  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    91  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    92  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    94  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    95  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    96  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    97  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    98  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    99  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   100  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   102  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   103  /*-------------------------Infrastructure Functions---------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   104  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   105  /** \brief clear safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   106   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   107   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   109      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   110          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   111          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   112                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   113                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   114                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   115          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   116          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   117                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   118                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   119                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   120          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   121          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   122      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   123  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   124  /** \brief set safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   125   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   126   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   127  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   128      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   129          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   130          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   131                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   132                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   133                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   134          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   135          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   136                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   137                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   138                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   139          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   140          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   141      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   142  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   143  /** \brief Fetch current password of CPU Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   144   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   145   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   146   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   147   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   148   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   149   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   150  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   151  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   152  /** \brief Fetch current password of Safety Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   153   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   154   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   155   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   156   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   157   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   158  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   159  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   160  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   161   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   162   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   163   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   164   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   165   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   166   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   167   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   168   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   169   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   170  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   171  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   172  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   173   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   174   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   175   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   176   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   177   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   178   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   179   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   180  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   181  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   182  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   183   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   184   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   185   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   186   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   187   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   188   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   189   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   190   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   191  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   192  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   193  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   194   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   195   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   196   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   197   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   198   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   199   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   200  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   201  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   202  /** \brief Disable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   203   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   204   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   205   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   206   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   207   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   208   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   209   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   210  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   211  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   212  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   213   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   214   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   215   *   periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   216   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   217   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   218   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   219   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   220  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   221  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   222  /** \brief Disable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   223   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   224   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   225   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   226   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   227   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   228   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   229  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   230  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   231  /** \brief Enable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   232   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   233   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   234   * periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   235   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   236   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   237   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   238  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   239  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   240  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   241   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   242   * \param programCounter Program counter value to start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   243   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   244  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   245  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   246  /** \brief Set CPU0 to idle state */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   247  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   248  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   249  /** \brief Initialise the C runtime environment */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   250  extern void Ifx_Ssw_C_Init(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   251  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   252  /** \brief Returns the system timer frequency.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   253   * \return the system timer frequency in Hz.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   254   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   255  extern float Ifx_Ssw_getStmFrequency(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   256  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   257  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   258   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   259   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   260   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   261   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   262   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   263   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   264   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   265   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   266  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   267  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   268  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   269   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   270   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   271   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   272   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   273   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   274   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   275   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   276  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   277  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   278  /*Endinit Functions*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   279  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   280  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   281      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   282       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   283       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   284  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   285      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   286      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   287  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   288  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   289  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   290  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   291  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   292      /* Clear EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   293      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   294  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   295      /* Read back of the register is mandatory to ensure the register update */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   296      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   297  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   298  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   299  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   300  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   301  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   302      /* Set EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   303      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   304                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   305                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   306  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   307      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   308      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   309  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   310  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   311  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   312  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   313  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   314      unsigned short password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   315  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   316      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   317       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   318       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   319      password  = watchdog->CON0.B.PW;
	ld.w	d15,[a15]@los(0xf003624c)
	extr.u	d15,d15,#2,#14
.L346:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   320      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
	xor	d8,d15,#63
.L192:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   321  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   322      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   323  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   324  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   325  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   326  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   327  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   328      unsigned short password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   329      Ifx_SCU_WDTS  *watchdog;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   330      watchdog  = &MODULE_SCU.WDTS;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   331      /* Read Password from Safety WDT CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   332       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   333       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   334      password  = watchdog->CON0.B.PW;
	ld.w	d15,[a15]@los(0xf00362a8)
	extr.u	d15,d15,#2,#14
.L347:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   335      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
	xor	d9,d15,#63
.L200:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   243      unsigned short safetyWdtPassword = Ifx_Ssw_getSafetyWatchdogPasswordInline();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   244  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   245      Ifx_Ssw_clearCpuEndinitInline(&MODULE_SCU.WDTCPU[0], cpuWdtPassword);
	lea	a15,[a15]@los(0xf003624c)
.L209:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     8   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    11   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    14   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    15   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    16   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    22   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    23   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    24  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    25  #ifndef IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    26  #define IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    27  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    28  #include "Ifx_Ssw_Compilers.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    29  #include "Ifx_Cfg_Ssw.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    30  #include "IfxScu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    31  #include "IfxCpu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    32  #include "IfxScu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    33  #include "IfxCpu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    34  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    35  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    36  /*-----------------------------------Macros-----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    37  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    39  /** \brief PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    40   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    41  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    42      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    43       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    44       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    45       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    46       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    47       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    48       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    49  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    50  /** \brief Application Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    51   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    52  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    53      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    54       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    55       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    56       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    57       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    58       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    59       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    63  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    64  /** \brief Cold PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    65   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    66  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    67      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    68       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    69       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    70       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    71  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    72  /** \brief Application reset enabled
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    73   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    74   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    75  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    76  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    77  /** \brief Reload value mask */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    78  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    79  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    80  /** \brief Mask values is used to invert the password value bits */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    81  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    82  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    83  /** \brief CSA size */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    84  #define IFX_SSW_CSA_SIZE                          16U
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    86  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    87  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    88  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    89  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    90  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    91  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    92  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    94  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    95  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    96  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    97  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    98  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    99  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   100  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   102  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   103  /*-------------------------Infrastructure Functions---------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   104  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   105  /** \brief clear safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   106   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   107   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   109      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   110          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   111          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   112                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   113                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   114                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   115          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   116          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   117                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   118                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   119                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   120          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   121          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   122      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   123  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   124  /** \brief set safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   125   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   126   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   127  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   128      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   129          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   130          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   131                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   132                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   133                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   134          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   135          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   136                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   137                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   138                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   139          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   140          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   141      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   142  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   143  /** \brief Fetch current password of CPU Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   144   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   145   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   146   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   147   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   148   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   149   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   150  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   151  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   152  /** \brief Fetch current password of Safety Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   153   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   154   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   155   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   156   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   157   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   158  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   159  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   160  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   161   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   162   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   163   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   164   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   165   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   166   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   167   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   168   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   169   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   170  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   171  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   172  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   173   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   174   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   175   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   176   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   177   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   178   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   179   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   180  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   181  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   182  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   183   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   184   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   185   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   186   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   187   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   188   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   189   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   190   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   191  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   192  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   193  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   194   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   195   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   196   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   197   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   198   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   199   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   200  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   201  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   202  /** \brief Disable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   203   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   204   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   205   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   206   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   207   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   208   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   209   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   210  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   211  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   212  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   213   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   214   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   215   *   periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   216   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   217   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   218   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   219   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   220  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   221  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   222  /** \brief Disable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   223   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   224   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   225   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   226   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   227   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   228   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   229  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   230  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   231  /** \brief Enable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   232   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   233   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   234   * periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   235   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   236   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   237   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   238  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   239  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   240  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   241   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   242   * \param programCounter Program counter value to start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   243   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   244  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   245  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   246  /** \brief Set CPU0 to idle state */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   247  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   248  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   249  /** \brief Initialise the C runtime environment */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   250  extern void Ifx_Ssw_C_Init(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   251  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   252  /** \brief Returns the system timer frequency.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   253   * \return the system timer frequency in Hz.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   254   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   255  extern float Ifx_Ssw_getStmFrequency(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   256  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   257  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   258   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   259   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   260   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   261   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   262   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   263   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   264   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   265   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   266  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   267  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   268  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   269   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   270   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   271   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   272   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   273   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   274   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   275   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   276  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   277  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   278  /*Endinit Functions*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   279  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   280  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   281      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   282       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   283       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   284  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   285      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   286      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   287  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   288  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   289  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   290  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   291  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   292      /* Clear EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   293      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   294  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   295      /* Read back of the register is mandatory to ensure the register update */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   296      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   297  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   298  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   299  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   300  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   301  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   302      /* Set EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   303      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   304                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   305                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   306  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   307      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   308      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   309  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   310  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   311  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   312  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   313  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   314      unsigned short password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   315  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   316      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   317       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   318       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   319      password  = watchdog->CON0.B.PW;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   320      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   321  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   322      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   323  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   324  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   325  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   326  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   327  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   328      unsigned short password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   329      Ifx_SCU_WDTS  *watchdog;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   330      watchdog  = &MODULE_SCU.WDTS;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   331      /* Read Password from Safety WDT CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   332       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   333       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   334      password  = watchdog->CON0.B.PW;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   335      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   336  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   337      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   338  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   339  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   340  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   341  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   342  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   343      if (watchdog->CON0.B.LCK)
	ld.w	d15,[a15]
.L348:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   343      if (watchdog->CON0.B.LCK)      (inlined)
	jz.t	d15:1,.L21
.L349:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   344      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   345          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   346          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   347                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   348                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	sh	d15,d8,#2
	or	d15,#1
.L350:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   349                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	ld.w	d0,[a15]
	extr.u	d0,d0,#16,#16
.L351:
	sh	d0,d0,#16
.L352:
	or	d15,d0
.L353:
	st.w	[a15],d15

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   343      if (watchdog->CON0.B.LCK)      (inlined)
.L21:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   350      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   351  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   352      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   353      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   354                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   355                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	sh	d15,d8,#2
	or	d15,#2
.L354:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   356                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	ld.w	d0,[a15]
	extr.u	d0,d0,#16,#16
.L355:
	sh	d0,d0,#16
.L356:
	or	d15,d0
.L357:
	st.w	[a15],d15
.L358:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   357  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   358      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   359      watchdog->CON0.U;
	ld.w	d15,[a15]
.L210:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   246  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   247      /* Enable/ Disable the caches depending on the configuration. At this point cache are invalidated */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   248      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   249          Ifx_CPU_PCON0 pcon0;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   250          pcon0.U       = 0;
	mov	d15,#0
.L256:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   251          pcon0.B.PCBYP = IFX_CFG_SSW_ENABLE_TRICORE0_PCACHE ? 0 : 1; /* depending on the enable bypass bit is reset/set */
	insert	d0,d15,#0,#1,#1
.L257:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   252          Ifx_Ssw_MTCR(CPU_PCON0, pcon0.U);
	mtcr	#37388,d0
	isync
.L219:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     2   * \file Ifx_Ssw_CompilersTasking.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     3   * \brief Startup Software for Tasking compiler options
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     8   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     9   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    11   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    12   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    13   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    14   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    15   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    16   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    17   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    18   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    19   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    20   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    21   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    22   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    23  #ifndef IFX_SSW_COMPILERSTASKING_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    24  #define IFX_SSW_COMPILERSTASKING_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    25  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    26  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    27  /*----------------------------------Includes----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    28  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    29  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    30  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    31  /*-----------------------------------Macros-----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    32  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    33  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    34  /*Linker definitions which are specific to Tasking */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    35  /* IFX_CFG_USE_COMPILER_DEFAULT_LINKER shall be defined in Ifx_Cfg.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    36   * to use the default compiler linker varaibles and startup */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    37  #ifndef IFX_CFG_USE_COMPILER_DEFAULT_LINKER
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    39  /*Start: Common definitions ********************************************** */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    40  #define IFX_SSW_COMMON_LINKER_SYMBOLS()                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    41      __asm("\t .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_"); \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    42      extern unsigned int __START0[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    43      extern unsigned int __START1[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    44      extern unsigned int __START2[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    45      extern unsigned int __START3[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    46      extern unsigned int __START4[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    47      extern unsigned int __START5[];     /**< Pointer to the startup code */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    48  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    49  /*End: Common definitions ************************************************ */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    50  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    51  /*Start: Core 0 definitions ********************************************** */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    52  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    53  /*C extern defintions */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    54  #define IFX_SSW_CORE_LINKER_SYMBOLS(cpu)                                                                             \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    55      __asm("\t .extern __USTACK"#cpu);         /**< user stack end is required as asm to be used with setreg macro */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    56      extern unsigned int __ISTACK##cpu[];      /**< interrupt stack end */                                            \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    57      extern unsigned int __INTTAB_CPU##cpu[];  /**< interrupt vector table */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    58      extern unsigned int __TRAPTAB_CPU##cpu[]; /**< trap vector table */                                              \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    59      extern unsigned int __CSA##cpu[];         /**< context save area begin */                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    60      extern unsigned int __CSA##cpu##_END[];   /**< context save area end   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    61  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    62  #define __USTACK(cpu)      __USTACK##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    63  #define __ISTACK(cpu)      __ISTACK##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    64  #define __INTTAB_CPU(cpu)  __INTTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    65  #define __TRAPTAB_CPU(cpu) __TRAPTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    66  #define __CSA(cpu)         __CSA##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    67  #define __CSA_END(cpu)     __CSA##cpu##_END
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    68  #define __START(cpu)       __START##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    69  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    70  /*Wrapper macros for the tool specific definitions */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    71  #if defined(IFX_USE_SW_MANAGED_INT)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    72  #define __INTTAB(cpu)      ((unsigned int)__INTTAB_CPU##cpu | (unsigned int)0x1FE0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    73  #else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    74  #define __INTTAB(cpu)      __INTTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    75  #endif /*defined(IFX_USE_SW_MANAGED_INT) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    76  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    77  #define __TRAPTAB(cpu)     __TRAPTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    78  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    79  #define __SDATA1(cpu)      _SMALL_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    80  #define __SDATA2(cpu)      _LITERAL_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    81  #define __SDATA3(cpu)      _A8_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    82  #define __SDATA4(cpu)      _A9_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    83  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    84  #endif /*IFX_CFG_USE_COMPILER_DEFAULT_LINKER*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    86  #ifdef __cplusplus
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    87  #define IFX_SSW_INLINE   static inline
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    88  #else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    89  #define IFX_SSW_INLINE   inline
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    90  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    91  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    92  #define IFX_SSW_NULL_PTR ((void *)0x0U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    94  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    95  /*----------------------------   GNU Intrinsics  -----------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    96  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    97  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    98  #define Ifx_Ssw_MTCR(reg, val) __mtcr(reg, val);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    99  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   100  #define Ifx_Ssw_MFCR(reg)      __mfcr(reg);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   102  IFX_SSW_INLINE void Ifx_Ssw_NOP(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   103  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   104      __nop();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   105  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   106  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   107  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   108  IFX_SSW_INLINE void Ifx_Ssw_DSYNC(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   109  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   110      __dsync();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   111  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   112  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   113  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   114  IFX_SSW_INLINE void Ifx_Ssw_ISYNC(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   115  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   116      __isync();
	isync
.L216:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   253          Ifx_Ssw_ISYNC();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   254      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   255  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   256      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   257          Ifx_CPU_DCON0 dcon0;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   258          dcon0.U       = 0;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   259          dcon0.B.DCBYP = IFX_CFG_SSW_ENABLE_TRICORE0_DCACHE ? 0 : 1; /* depending on the enable bypass bit is reset/set */
	insert	d15,d15,#0,#1,#1
.L259:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   260          Ifx_Ssw_MTCR(CPU_DCON0, dcon0.U);
	mtcr	#36928,d15
	isync
.L223:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     2   * \file Ifx_Ssw_CompilersTasking.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     3   * \brief Startup Software for Tasking compiler options
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     8   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	     9   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    11   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    12   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    13   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    14   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    15   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    16   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    17   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    18   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    19   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    20   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    21   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    22   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    23  #ifndef IFX_SSW_COMPILERSTASKING_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    24  #define IFX_SSW_COMPILERSTASKING_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    25  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    26  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    27  /*----------------------------------Includes----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    28  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    29  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    30  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    31  /*-----------------------------------Macros-----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    32  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    33  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    34  /*Linker definitions which are specific to Tasking */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    35  /* IFX_CFG_USE_COMPILER_DEFAULT_LINKER shall be defined in Ifx_Cfg.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    36   * to use the default compiler linker varaibles and startup */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    37  #ifndef IFX_CFG_USE_COMPILER_DEFAULT_LINKER
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    39  /*Start: Common definitions ********************************************** */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    40  #define IFX_SSW_COMMON_LINKER_SYMBOLS()                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    41      __asm("\t .extern _SMALL_DATA_, _LITERAL_DATA_, _A8_DATA_, _A9_DATA_"); \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    42      extern unsigned int __START0[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    43      extern unsigned int __START1[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    44      extern unsigned int __START2[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    45      extern unsigned int __START3[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    46      extern unsigned int __START4[];     /**< Pointer to the startup code */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    47      extern unsigned int __START5[];     /**< Pointer to the startup code */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    48  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    49  /*End: Common definitions ************************************************ */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    50  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    51  /*Start: Core 0 definitions ********************************************** */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    52  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    53  /*C extern defintions */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    54  #define IFX_SSW_CORE_LINKER_SYMBOLS(cpu)                                                                             \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    55      __asm("\t .extern __USTACK"#cpu);         /**< user stack end is required as asm to be used with setreg macro */ \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    56      extern unsigned int __ISTACK##cpu[];      /**< interrupt stack end */                                            \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    57      extern unsigned int __INTTAB_CPU##cpu[];  /**< interrupt vector table */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    58      extern unsigned int __TRAPTAB_CPU##cpu[]; /**< trap vector table */                                              \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    59      extern unsigned int __CSA##cpu[];         /**< context save area begin */                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    60      extern unsigned int __CSA##cpu##_END[];   /**< context save area end   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    61  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    62  #define __USTACK(cpu)      __USTACK##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    63  #define __ISTACK(cpu)      __ISTACK##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    64  #define __INTTAB_CPU(cpu)  __INTTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    65  #define __TRAPTAB_CPU(cpu) __TRAPTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    66  #define __CSA(cpu)         __CSA##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    67  #define __CSA_END(cpu)     __CSA##cpu##_END
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    68  #define __START(cpu)       __START##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    69  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    70  /*Wrapper macros for the tool specific definitions */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    71  #if defined(IFX_USE_SW_MANAGED_INT)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    72  #define __INTTAB(cpu)      ((unsigned int)__INTTAB_CPU##cpu | (unsigned int)0x1FE0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    73  #else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    74  #define __INTTAB(cpu)      __INTTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    75  #endif /*defined(IFX_USE_SW_MANAGED_INT) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    76  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    77  #define __TRAPTAB(cpu)     __TRAPTAB_CPU##cpu
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    78  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    79  #define __SDATA1(cpu)      _SMALL_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    80  #define __SDATA2(cpu)      _LITERAL_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    81  #define __SDATA3(cpu)      _A8_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    82  #define __SDATA4(cpu)      _A9_DATA_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    83  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    84  #endif /*IFX_CFG_USE_COMPILER_DEFAULT_LINKER*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    86  #ifdef __cplusplus
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    87  #define IFX_SSW_INLINE   static inline
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    88  #else
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    89  #define IFX_SSW_INLINE   inline
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    90  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    91  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    92  #define IFX_SSW_NULL_PTR ((void *)0x0U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    94  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    95  /*----------------------------   GNU Intrinsics  -----------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    96  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    97  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    98  #define Ifx_Ssw_MTCR(reg, val) __mtcr(reg, val);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	    99  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   100  #define Ifx_Ssw_MFCR(reg)      __mfcr(reg);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   102  IFX_SSW_INLINE void Ifx_Ssw_NOP(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   103  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   104      __nop();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   105  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   106  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   107  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   108  IFX_SSW_INLINE void Ifx_Ssw_DSYNC(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   109  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   110      __dsync();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   111  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   112  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   113  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   114  IFX_SSW_INLINE void Ifx_Ssw_ISYNC(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   115  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   116      __isync();
	isync
.L220:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   261          Ifx_Ssw_ISYNC();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   262      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   263  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   264      /* Set A0 Pointer to access global variables with small data addressing */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   265      Ifx_Ssw_setAddressReg(a0, __SDATA1(0));
	 movh.a	 a0,#@his(_SMALL_DATA_)
 lea	 a0,[a0]@los(_SMALL_DATA_)
.L359:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   266  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   267      /* These to be un commented if A8 and A9 are required to be initialized */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   268      Ifx_Ssw_setAddressReg(a8, __SDATA3(0));
	 movh.a	 a8,#@his(_A8_DATA_)
 lea	 a8,[a8]@los(_A8_DATA_)
.L360:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   269      Ifx_Ssw_setAddressReg(a9, __SDATA4(0));
	 movh.a	 a9,#@his(_A9_DATA_)
 lea	 a9,[a9]@los(_A9_DATA_)
.L361:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   270  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   271      /* Trap vector table initialization is necessary if it is not same as default value */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   272      Ifx_Ssw_MTCR(CPU_BTV, (unsigned int)__TRAPTAB(0));
	movh.a	a15,#@his(__TRAPTAB_CPU0)
.L255:
	lea	a15,[a15]@los(__TRAPTAB_CPU0)
	mov.d	d15,a15
.L260:
	mtcr	#65060,d15
	isync
.L362:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   273      /* Base interrupt vector table initialized */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   274      Ifx_Ssw_MTCR(CPU_BIV, (unsigned int)__INTTAB(0));
	movh.a	a15,#@his(__INTTAB_CPU0)
	lea	a15,[a15]@los(__INTTAB_CPU0)
	mov.d	d15,a15
	mtcr	#65056,d15
	isync
.L363:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   275      /* Interrupt stack pointer is configured */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   276      Ifx_Ssw_MTCR(CPU_ISP, (unsigned int)__ISTACK(0));
	movh.a	a15,#@his(__ISTACK0)
	lea	a15,[a15]@los(__ISTACK0)
	mov.d	d15,a15
	mtcr	#65064,d15
	isync
.L364:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   277      /* EMEM Initialization */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   278      IFX_CFG_SSW_CALLOUT_EMEM_INIT();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   279  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   280      Ifx_Ssw_setCpuEndinitInline(&MODULE_SCU.WDTCPU[0], cpuWdtPassword);
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf003624c)
.L225:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     1  /**
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     2   * \file Ifx_Ssw_Infra.h
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     3   * \brief Startup Software support functions.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     4   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     5   * \version iLLD_1_0_1_11_0
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     6   * \copyright Copyright (c) 2018 Infineon Technologies AG. All rights reserved.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     7   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     8   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	     9   *                                 IMPORTANT NOTICE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    10   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    11   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    12   * Infineon Technologies AG (Infineon) is supplying this file for use
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    13   * exclusively with Infineon's microcontroller products. This file can be freely
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    14   * distributed within development tools that are supporting such microcontroller
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    15   * products.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    16   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    17   * THIS SOFTWARE IS PROVIDED "AS IS".  NO WARRANTIES, WHETHER EXPRESS, IMPLIED
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    18   * OR STATUTORY, INCLUDING, BUT NOT LIMITED TO, IMPLIED WARRANTIES OF
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    19   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE APPLY TO THIS SOFTWARE.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    20   * INFINEON SHALL NOT, IN ANY CIRCUMSTANCES, BE LIABLE FOR SPECIAL, INCIDENTAL,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    21   * OR CONSEQUENTIAL DAMAGES, FOR ANY REASON WHATSOEVER.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    22   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    23   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    24  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    25  #ifndef IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    26  #define IFX_SSW_INFRA_H_
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    27  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    28  #include "Ifx_Ssw_Compilers.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    29  #include "Ifx_Cfg_Ssw.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    30  #include "IfxScu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    31  #include "IfxCpu_reg.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    32  #include "IfxScu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    33  #include "IfxCpu_bf.h"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    34  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    35  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    36  /*-----------------------------------Macros-----------------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    37  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    38  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    39  /** \brief PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    40   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    41  #define IFX_SSW_POWERONRESET_MASK                                             \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    42      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    43       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    44       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    45       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    46       ((unsigned int)IFX_SCU_RSTSTAT_CB1_MSK << IFX_SCU_RSTSTAT_CB1_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    47       ((unsigned int)IFX_SCU_RSTSTAT_CB0_MSK << IFX_SCU_RSTSTAT_CB0_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    48       ((unsigned int)IFX_SCU_RSTSTAT_PORST_MSK << IFX_SCU_RSTSTAT_PORST_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    49  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    50  /** \brief Application Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    51   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    52  #define IFX_SSW_APPLICATIONRESET_MASK                                       \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    53      (((unsigned int)IFX_SCU_RSTSTAT_SW_MSK << IFX_SCU_RSTSTAT_SW_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    54       ((unsigned int)IFX_SCU_RSTSTAT_STM5_MSK << IFX_SCU_RSTSTAT_STM5_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    55       ((unsigned int)IFX_SCU_RSTSTAT_STM4_MSK << IFX_SCU_RSTSTAT_STM4_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    56       ((unsigned int)IFX_SCU_RSTSTAT_STM3_MSK << IFX_SCU_RSTSTAT_STM3_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    57       ((unsigned int)IFX_SCU_RSTSTAT_STM2_MSK << IFX_SCU_RSTSTAT_STM2_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    58       ((unsigned int)IFX_SCU_RSTSTAT_STM1_MSK << IFX_SCU_RSTSTAT_STM1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    59       ((unsigned int)IFX_SCU_RSTSTAT_STM0_MSK << IFX_SCU_RSTSTAT_STM0_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    60       ((unsigned int)IFX_SCU_RSTSTAT_SMU_MSK << IFX_SCU_RSTSTAT_SMU_OFF) |   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    61       ((unsigned int)IFX_SCU_RSTSTAT_ESR1_MSK << IFX_SCU_RSTSTAT_ESR1_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    62       ((unsigned int)IFX_SCU_RSTSTAT_ESR0_MSK << IFX_SCU_RSTSTAT_ESR0_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    63  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    64  /** \brief Cold PowerOn Reset Mask
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    65   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    66  #define IFX_SSW_COLD_POWERONRESET_MASK                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    67      (((unsigned int)IFX_SCU_RSTSTAT_STBYR_MSK << IFX_SCU_RSTSTAT_STBYR_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    68       ((unsigned int)IFX_SCU_RSTSTAT_SWD_MSK << IFX_SCU_RSTSTAT_SWD_OFF) |     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    69       ((unsigned int)IFX_SCU_RSTSTAT_EVR33_MSK << IFX_SCU_RSTSTAT_EVR33_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    70       ((unsigned int)IFX_SCU_RSTSTAT_EVRC_MSK << IFX_SCU_RSTSTAT_EVRC_OFF))
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    71  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    72  /** \brief Application reset enabled
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    73   * In SCU_RSTCON register, value 2 represents the Application reset
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    74   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    75  #define IFX_SSW_APPLICATIONRESET                  (2U)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    76  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    77  /** \brief Reload value mask */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    78  #define IFX_SSW_SEICON_REL_VAL_MSK                (unsigned short)(0xFFFCU << IFX_SCU_SEICON0_REL_OFF)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    79  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    80  /** \brief Mask values is used to invert the password value bits */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    81  #define IFX_SSW_WDT_PASSWORD_INVERT_MSK           (0x003FU)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    82  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    83  /** \brief CSA size */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    84  #define IFX_SSW_CSA_SIZE                          16U
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    85  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    86  #ifndef IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    87  #define IFX_CFG_SSW_STARTCPU_WAIT_TIME_IN_SECONDS (0.0001)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    88  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    89  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    90  #ifndef IFX_CFG_SSW_EVR_OSC_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    91  #define IFX_CFG_SSW_EVR_OSC_FREQUENCY             (100000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    92  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    93  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    94  #ifndef IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    95  #define IFX_CFG_SSW_SYSCLK_PIN_FREQUENCY          (20000000.0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    96  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    97  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    98  #ifndef IFX_CFG_SSW_XTAL_FREQUENCY
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	    99  #define IFX_CFG_SSW_XTAL_FREQUENCY                (IFX_CFG_SCU_XTAL_FREQUENCY)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   100  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   101  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   102  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   103  /*-------------------------Infrastructure Functions---------------------------*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   104  /******************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   105  /** \brief clear safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   106   * Note: IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   107   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   108  #define IFX_CFG_SSW_CLEAR_SAFETY_ENDINIT()                                                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   109      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   110          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   111          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   112                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   113                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   114                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   115          /* Clear ENDINT and set LCK bit in Config_0 register */                                              \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   116          SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   117                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   118                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   119                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   120          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   121          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   122      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   123  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   124  /** \brief set safety endinit.\n
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   125   * Note: IFX_CFG_SSW_SET_SAFETY_ENDINIT() function macro is added to avoid issues higher optimization is enabled.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   126   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   127  #define IFX_CFG_SSW_SET_SAFETY_ENDINIT()                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   128      {                                                                                                        \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   129          /* see Table 1 (Password Access Bit Pattern Requirements) */                                         \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   130          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   131                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   132                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   133                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   134          /* Set ENDINT and set LCK bit in Config_0 register */                                                \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   135          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |                               \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   136                            ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |                                   \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   137                            ((unsigned int)(MODULE_SCU.WDTS.CON0.B.PW ^ 0x003F) << IFX_SCU_WDTS_CON0_PW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   138                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);                  \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   139          /* Read back of the register is mandatory to ensure the register update  */                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   140          SCU_WDTS_CON0.U;                                                                                     \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   141      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   142  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   143  /** \brief Fetch current password of CPU Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   144   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   145   * This API will fetch current Watchdog password for CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   146   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   147   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   148   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   149   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   150  extern unsigned short Ifx_Ssw_getCpuWatchdogPassword(Ifx_SCU_WDTCPU *watchdog);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   151  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   152  /** \brief Fetch current password of Safety Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   153   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   154   * This API will fetch current Watchdog password for Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   155   * password is needed to be passed with most of the WDT APIs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   156   * \return password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   157   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   158  extern unsigned short Ifx_Ssw_getSafetyWatchdogPassword(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   159  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   160  /** \brief Clear ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   161   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   162   * This API will disable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   163   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   164   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   165   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   166   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   167   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   168   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   169   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   170  extern void Ifx_Ssw_clearCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   171  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   172  /** \brief Set ENDINIT bit provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   173   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   174   * This API will enable ENDINIT functionality provided by CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   175   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   176   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   177   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   178   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   179   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   180  extern void Ifx_Ssw_setCpuEndinit(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   181  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   182  /** \brief Clear ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   183   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   184   * This API will disable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   185   * User need to use this API call before modifying any ENDINIT protected register. User must
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   186   * always set the ENDINIT bit using other API Ifx_Ssw_setCpuEndinit. The sequence clear and set
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   187   * ENDINIT shall not be interrupted by another interrupt/call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   188   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   189   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   190   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   191  extern void Ifx_Ssw_clearSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   192  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   193  /** \brief Set ENDINIT bit provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   194   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   195   * This API will enable ENDINIT functionality provided by Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   196   * User need to use this API call after modifying any ENDINIT protected register.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   197   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   198   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   199   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   200  extern void Ifx_Ssw_setSafetyEndinit(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   201  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   202  /** \brief Disable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   203   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   204   * This API will disable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   205   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   206   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   207   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   208   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   209   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   210  extern void Ifx_Ssw_disableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   211  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   212  /** \brief SCUWDT API to enable CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   213   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   214   *   This API will enable Watchdog functionality of CPU WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   215   *   periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   216   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   217   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   218   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   219   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   220  extern void Ifx_Ssw_enableCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   221  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   222  /** \brief Disable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   223   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   224   * This API will disable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers will stop counting
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   225   * after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   226   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   227   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   228   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   229  extern void Ifx_Ssw_disableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   230  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   231  /** \brief Enable Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   232   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   233   * This API will enable Watchdog functionality of Safety WDT Hardware module. The Watchdog timers need to be serviced
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   234   * periodically after this API call.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   235   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   236   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   237   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   238  extern void Ifx_Ssw_enableSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   239  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   240  /** \brief Set the program counter for the CPU specified and start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   241   * \param cpu Pointer to the CPU HW module (register memory map)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   242   * \param programCounter Program counter value to start the CPU
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   243   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   244  extern void Ifx_Ssw_startCore(Ifx_CPU *cpu, unsigned int programCounter);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   245  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   246  /** \brief Set CPU0 to idle state */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   247  extern void Ifx_Ssw_setCpu0Idle(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   248  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   249  /** \brief Initialise the C runtime environment */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   250  extern void Ifx_Ssw_C_Init(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   251  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   252  /** \brief Returns the system timer frequency.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   253   * \return the system timer frequency in Hz.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   254   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   255  extern float Ifx_Ssw_getStmFrequency(void);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   256  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   257  /** \brief SCUWDT API to service CPU Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   258   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   259   *   This API will service Watchdog functionality corresponding to CPU WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   260   *   User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   261   *   User need to have the password stored locally in the caller function, (use Ifx_Ssw_getCpuWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   262   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   263   * \param watchdog pointer to the watchdog register map of CPU WDT hardware instance.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   264   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   265   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   266  extern void Ifx_Ssw_serviceCpuWatchdog(Ifx_SCU_WDTCPU *watchdog, unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   267  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   268  /** \brief SCUWDT API to service Safety Watchdog functionality.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   269   *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   270   * This API will service Watchdog functionality corresponding to Safety WDT Hardware module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   271   * User need to use this API call periodically. This API results in reloading of the Watchdog Timer.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   272   * User need to have the password stored locally in the caller function, (use Ifx_Ssw_getSafetyWatchdogPassword).
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   273   * \param password Existing (Application specific) password for the Watchdog module.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   274   * \return None
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   275   */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   276  extern void Ifx_Ssw_serviceSafetyWatchdog(unsigned short password);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   277  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   278  /*Endinit Functions*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   279  IFX_SSW_INLINE unsigned short Ifx_Ssw_getGlobalSafetyEndinitPasswordInline(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   280  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   281      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   282       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   283       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   284  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   285      unsigned short password = (unsigned short)MODULE_SCU.SEICON0.B.EPW ^ IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   286      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   287  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   288  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   289  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   290  IFX_SSW_INLINE void Ifx_Ssw_clearGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   291  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   292      /* Clear EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   293      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK | ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   294  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   295      /* Read back of the register is mandatory to ensure the register update */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   296      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   297  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   298  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   299  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   300  IFX_SSW_INLINE void Ifx_Ssw_setGlobalSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   301  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   302      /* Set EndInit Watch-dog*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   303      MODULE_SCU.SEICON0.U = IFX_SSW_SEICON_REL_VAL_MSK |                          \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   304                             ((unsigned int)password << IFX_SCU_SEICON0_EPW_OFF) | \ 
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   305                             ((unsigned int)1 << IFX_SCU_SEICON0_ENDINIT_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   306  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   307      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   308      MODULE_SCU.SEICON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   309  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   310  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   311  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   312  IFX_SSW_INLINE unsigned short Ifx_Ssw_getCpuWatchdogPasswordInline(Ifx_SCU_WDTCPU *watchdog)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   313  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   314      unsigned short password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   315  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   316      /* Read Password from CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   317       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   318       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   319      password  = watchdog->CON0.B.PW;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   320      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   321  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   322      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   323  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   324  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   325  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   326  IFX_SSW_INLINE unsigned short Ifx_Ssw_getSafetyWatchdogPasswordInline(void)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   327  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   328      unsigned short password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   329      Ifx_SCU_WDTS  *watchdog;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   330      watchdog  = &MODULE_SCU.WDTS;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   331      /* Read Password from Safety WDT CON0 register
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   332       * !!! NOTE: !!! when read bottom six bit of password are inverted so we have
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   333       * to toggle them before returning password */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   334      password  = watchdog->CON0.B.PW;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   335      password ^= IFX_SSW_WDT_PASSWORD_INVERT_MSK;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   336  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   337      return password;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   338  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   339  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   340  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   341  IFX_SSW_INLINE void Ifx_Ssw_clearCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   342  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   343      if (watchdog->CON0.B.LCK)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   344      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   345          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   346          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   347                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   348                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   349                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   350      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   351  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   352      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   353      watchdog->CON0.U = ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   354                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   355                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   356                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   357  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   358      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   359      watchdog->CON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   360  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   361  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   362  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   363  IFX_SSW_INLINE void Ifx_Ssw_clearSafetyEndinitInline(unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   364  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   365      if (SCU_WDTS_CON0.B.LCK)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   366      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   367          /* see Table 1 (Password Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   368          SCU_WDTS_CON0.U = ((unsigned int)1 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   369                            ((unsigned int)0 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   370                            ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   371                            ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   372      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   373  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   374      /* Clear ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   375      SCU_WDTS_CON0.U = ((unsigned int)0 << IFX_SCU_WDTS_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   376                        ((unsigned int)1 << IFX_SCU_WDTS_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   377                        ((unsigned int)password << IFX_SCU_WDTS_CON0_PW_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   378                        ((unsigned int)SCU_WDTS_CON0.B.REL << IFX_SCU_WDTS_CON0_REL_OFF);
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   379  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   380      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   381      SCU_WDTS_CON0.U;
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   382  }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   383  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   384  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   385  IFX_SSW_INLINE void Ifx_Ssw_setCpuEndinitInline(Ifx_SCU_WDTCPU *watchdog, unsigned short password)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   386  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   387      if (watchdog->CON0.B.LCK)
	ld.w	d15,[a15]
.L365:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   387      if (watchdog->CON0.B.LCK)      (inlined)
	jz.t	d15:1,.L22
.L366:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   388      {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   389          /* see Table 1 (Pass.word Access Bit Pattern Requirements) */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   390          watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   391                             ((unsigned int)0 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   392                             ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	sh	d15,d8,#2
	or	d15,#1
.L367:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   393                             ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	ld.w	d0,[a15]
.L258:
	extr.u	d0,d0,#16,#16
.L368:
	sh	d0,d0,#16
.L369:
	or	d15,d0
.L370:
	st.w	[a15],d15

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   387      if (watchdog->CON0.B.LCK)      (inlined)
.L22:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   394      }
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   395  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   396      /* Set ENDINT and set LCK bit in Config_0 register */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   397      watchdog->CON0.U = ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_ENDINIT_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   398                         ((unsigned int)1 << IFX_SCU_WDTCPU_CON0_LCK_OFF) |
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   399                         ((unsigned int)password << IFX_SCU_WDTCPU_CON0_PW_OFF) |
	sh	d15,d8,#2
	or	d15,#3
.L371:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   400                         ((unsigned int)watchdog->CON0.B.REL << IFX_SCU_WDTCPU_CON0_REL_OFF);
	ld.w	d0,[a15]
	extr.u	d0,d0,#16,#16
.L372:
	sh	d0,d0,#16
.L373:
	or	d15,d0
.L374:
	st.w	[a15],d15
.L375:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   401  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   402      /* Read back of the register is mandatory to ensure the register update  */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Infra.h	   403      watchdog->CON0.U;
	ld.w	d15,[a15]
.L226:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   281  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   282      /* CPU and safety watchdogs are enabled by default,
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   283       * C initialization functions are not servicing the watchdogs.
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   284       */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   285      Ifx_Ssw_disableCpuWatchdog(&MODULE_SCU.WDTCPU[0], cpuWdtPassword);
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf003624c)
.L195:
	mov	d4,d8
.L196:
	call	Ifx_Ssw_disableCpuWatchdog
.L202:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   286      Ifx_Ssw_disableSafetyWatchdog(safetyWdtPassword);
	mov	d4,d9
.L203:
	call	Ifx_Ssw_disableSafetyWatchdog
.L261:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   287  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   288      /* Initialization of C runtime variables */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   289      Ifx_Ssw_C_Init();
	call	Ifx_Ssw_C_Init
.L204:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   290  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   291      Ifx_Ssw_enableSafetyWatchdog(safetyWdtPassword);
	mov	d4,d9
.L205:
	call	Ifx_Ssw_enableSafetyWatchdog
.L262:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   292  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   293  #if (IFX_CFG_SSW_ENABLE_TRICORE0 == 0)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   294      /* Set the CPU 0 to Idle mode, if it is not needed to be enabled */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   295      Ifx_Ssw_setCpu0Idle();
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   296  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   297  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   298      Ifx_Ssw_enableCpuWatchdog(&MODULE_SCU.WDTCPU[0], cpuWdtPassword);
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf003624c)
.L197:
	mov	d4,d8
.L198:
	call	Ifx_Ssw_enableCpuWatchdog
.L263:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   299  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   300      /*Call main function of Cpu0 */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   301      Ifx_Ssw_jumpToFunction(core0_main);
	movh.a	a15,#@his(core0_main)
	lea	a15,[a15]@los(core0_main)
.L232:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   149      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L233:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   302  }
	ret
.L188:
	
____Core0_start_function_end:
	.size	__Core0_start,____Core0_start_function_end-__Core0_start
.L84:
	; End of function
	
	.sdecl	'.text.start',code,cluster('_START'),protect
	.sect	'.text.start'
	.align	2
	
	.global	_START

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   303  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   304  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   305  /******************************************************************************
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   306   *                        reset vector address                                *
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   307   *****************************************************************************/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   308  #if defined(__HIGHTEC__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   309  #pragma section
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   310  #pragma section ".start" x
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   311  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   312  #if defined(__TASKING__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   313  #pragma protect on
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   314  #pragma section code "start"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   315  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   316  #if defined(__DCC__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   317  #pragma section CODE ".start" X
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   318  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   319  #if defined(__ghs__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   320  #pragma ghs section text=".start"
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   321  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   322  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   323  void _START(void)
; Function _START
.L40:
_START:	.type	func

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   324  {
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   325      Ifx_Ssw_jumpToFunction(__StartUpSoftware);
	movh.a	a15,#@his(__StartUpSoftware)
	lea	a15,[a15]@los(__StartUpSoftware)
.L236:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_CompilersTasking.h	   149      __asm("ji %0" ::"a" (fun));      (inlined)
	ji a15
.L237:

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   326  }
	ret
.L235:
	
___START_function_end:
	.size	_START,___START_function_end-_START
.L89:
	; End of function
	
	.calls	'__INDIRECT__','__StartUpSoftware'
	.calls	'__INDIRECT__','__StartUpSoftware_Phase2'
	.calls	'__INDIRECT__','__StartUpSoftware_Phase3ApplicationResetPath'
	.calls	'__INDIRECT__','__StartUpSoftware_Phase3PowerOnResetPath'
	.calls	'__INDIRECT__','__StartUpSoftware_Phase4'
	.calls	'__INDIRECT__','__StartUpSoftware_Phase5'
	.calls	'__INDIRECT__','__StartUpSoftware_Phase6'
	.calls	'__INDIRECT__','__Core0_start'
	.calls	'__INDIRECT__','core0_main'
	.calls	'__StartUpSoftware_Phase4','Ifx_Ssw_serviceCpuWatchdog'
	.calls	'__StartUpSoftware_Phase4','Ifx_Ssw_serviceSafetyWatchdog'
	.calls	'__StartUpSoftware_Phase6','Ifx_Ssw_startCore'
	.calls	'__Core0_start','Ifx_Ssw_disableCpuWatchdog'
	.calls	'__Core0_start','Ifx_Ssw_disableSafetyWatchdog'
	.calls	'__Core0_start','Ifx_Ssw_C_Init'
	.calls	'__Core0_start','Ifx_Ssw_enableSafetyWatchdog'
	.calls	'__Core0_start','Ifx_Ssw_enableCpuWatchdog'
	.calls	'__StartUpSoftware','',0
	.calls	'__StartUpSoftware_Phase2','',0
	.calls	'__StartUpSoftware_Phase3PowerOnResetPath','',0
	.calls	'__StartUpSoftware_Phase3ApplicationResetPath','',0
	.calls	'__StartUpSoftware_Phase4','',0
	.calls	'__StartUpSoftware_Phase5','',0
	.calls	'__StartUpSoftware_Phase6','',0
	.calls	'__Core0_start','',0
	.extern	Ifx_Ssw_disableCpuWatchdog
	.extern	Ifx_Ssw_enableCpuWatchdog
	.extern	Ifx_Ssw_disableSafetyWatchdog
	.extern	Ifx_Ssw_enableSafetyWatchdog
	.extern	Ifx_Ssw_startCore
	.extern	Ifx_Ssw_C_Init
	.extern	Ifx_Ssw_serviceCpuWatchdog
	.extern	Ifx_Ssw_serviceSafetyWatchdog
	.extern	__START1
	.extern	__ISTACK0
	.extern	__INTTAB_CPU0
	.extern	__TRAPTAB_CPU0
	.extern	__CSA0
	.extern	__CSA0_END
	.extern	core0_main
	.extern	__INDIRECT__
	.calls	'_START','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L42:
	.word	60567
	.half	3
	.word	.L43
	.byte	4
.L41:
	.byte	1
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L44
.L112:
	.byte	2
	.byte	'Ifx_Ssw_DSYNC',0,3,1,108,21,1,1
.L115:
	.byte	3,0
.L131:
	.byte	2
	.byte	'Ifx_Ssw_ISYNC',0,3,1,114,21,1,1
.L133:
	.byte	3,0,4
	.byte	'void',0,5
	.word	220
.L99:
	.byte	2
	.byte	'Ifx_Ssw_jumpToFunction',0,3,1,147,1,21,1,1
.L102:
	.byte	6
	.byte	'fun',0,1,147,1,50
	.word	226
.L104:
	.byte	3,0
.L156:
	.byte	7
	.byte	'unsigned short int',0,2,7
.L97:
	.byte	7
	.byte	'unsigned int',0,4,7,7
	.byte	'int',0,4,5,7
	.byte	'unsigned int',0,4,7,8
	.byte	'_Ifx_SCU_WDTCPU_CON0_Bits',0,3,240,9,16,4,9
	.byte	'ENDINIT',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'LCK',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'PW',0,4
	.word	322
	.byte	14,16,2,35,0,9
	.byte	'REL',0,4
	.word	322
	.byte	16,0,2,35,0,0,10,3,191,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	338
	.byte	4,2,35,0,0
.L95:
	.byte	7
	.byte	'unsigned char',0,1,8,8
	.byte	'_Ifx_SCU_WDTCPU_CON1_Bits',0,3,249,9,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'reserved_1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'IR0',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'DR',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'IR1',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'UR',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'PAR',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'TCR',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'TCTR',0,1
	.word	474
	.byte	7,0,2,35,1,9
	.byte	'reserved_16',0,2
	.word	277
	.byte	16,0,2,35,2,0,10,3,199,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	491
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_SCU_WDTCPU_SR_Bits',0,3,137,10,16,4,9
	.byte	'AE',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'OE',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'IS0',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'DS',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'TO',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'IS1',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'US',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'PAS',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'TCS',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'TCT',0,1
	.word	474
	.byte	7,0,2,35,1,9
	.byte	'TIM',0,2
	.word	277
	.byte	16,0,2,35,2,0,10,3,207,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	757
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_SCU_WDTCPU',0,3,138,17,25,12,11
	.byte	'CON0',0
	.word	434
	.byte	4,2,35,0,11
	.byte	'CON1',0
	.word	717
	.byte	4,2,35,4,11
	.byte	'SR',0
	.word	948
	.byte	4,2,35,8,0,12
	.word	988
	.byte	5
	.word	1051
.L159:
	.byte	13
	.byte	'Ifx_Ssw_getCpuWatchdogPasswordInline',0,3,2,184,2,31
	.word	277
	.byte	1,1
.L162:
	.byte	6
	.byte	'watchdog',0,2,184,2,84
	.word	1056
.L164:
	.byte	3,0
.L169:
	.byte	13
	.byte	'Ifx_Ssw_getSafetyWatchdogPasswordInline',0,3,2,198,2,31
	.word	277
	.byte	1,1
.L171:
	.byte	3,0
.L208:
	.byte	2
	.byte	'Ifx_Ssw_clearCpuEndinitInline',0,3,2,213,2,21,1,1
.L211:
	.byte	6
	.byte	'watchdog',0,2,213,2,67
	.word	1056
.L213:
	.byte	6
	.byte	'password',0,2,213,2,92
	.word	277
.L215:
	.byte	3,0
.L224:
	.byte	2
	.byte	'Ifx_Ssw_setCpuEndinitInline',0,3,2,129,3,21,1,1
.L227:
	.byte	6
	.byte	'watchdog',0,2,129,3,65
	.word	1056
.L229:
	.byte	6
	.byte	'password',0,2,129,3,90
	.word	277
.L231:
	.byte	3,0
.L91:
	.byte	13
	.byte	'Ifx_Ssw_isApplicationReset',0,3,2,186,3,30
	.word	474
	.byte	1,1
.L94:
	.byte	3,0
.L126:
	.byte	5
	.word	299
.L116:
	.byte	2
	.byte	'Ifx_Ssw_initCSA',0,3,2,233,3,21,1,1
.L119:
	.byte	6
	.byte	'csaBegin',0,2,233,3,51
	.word	1375
.L121:
	.byte	6
	.byte	'csaEnd',0,2,233,3,75
	.word	1375
.L123:
	.byte	14,3,0,0,15
	.byte	'__clz',0
	.word	315
	.byte	1,1,1,1,16
	.word	315
	.byte	0,17
	.byte	'__mtcr',0,1,1,1,1,16
	.word	315
	.byte	16
	.word	315
	.byte	0,18
	.byte	'__isync',0,1,1,1,1,18
	.byte	'__dsync',0,1,1,1,1,19
	.word	174
	.byte	3,0,19
	.word	197
	.byte	3,0,19
	.word	231
	.byte	20
	.word	262
	.byte	3,0,21
	.byte	'Ifx_Ssw_disableCpuWatchdog',0,2,210,1,13,1,1,1,1,6
	.byte	'watchdog',0,2,210,1,56
	.word	1056
	.byte	6
	.byte	'password',0,2,210,1,81
	.word	277
	.byte	0,21
	.byte	'Ifx_Ssw_enableCpuWatchdog',0,2,220,1,13,1,1,1,1,6
	.byte	'watchdog',0,2,220,1,55
	.word	1056
	.byte	6
	.byte	'password',0,2,220,1,80
	.word	277
	.byte	0,21
	.byte	'Ifx_Ssw_disableSafetyWatchdog',0,2,229,1,13,1,1,1,1,6
	.byte	'password',0,2,229,1,58
	.word	277
	.byte	0,21
	.byte	'Ifx_Ssw_enableSafetyWatchdog',0,2,238,1,13,1,1,1,1,6
	.byte	'password',0,2,238,1,57
	.word	277
	.byte	0,22,128,34
	.word	474
	.byte	23,255,33,0,8
	.byte	'_Ifx_CPU_FLASHCON0_Bits',0,4,146,4,16,4,9
	.byte	'TAG1',0,4
	.word	322
	.byte	6,26,2,35,0,9
	.byte	'reserved_6',0,4
	.word	322
	.byte	2,24,2,35,0,9
	.byte	'TAG2',0,4
	.word	322
	.byte	6,18,2,35,0,9
	.byte	'reserved_14',0,4
	.word	322
	.byte	2,16,2,35,0,9
	.byte	'TAG3',0,4
	.word	322
	.byte	6,10,2,35,0,9
	.byte	'reserved_22',0,4
	.word	322
	.byte	2,8,2,35,0,9
	.byte	'TAG4',0,4
	.word	322
	.byte	6,2,2,35,0,9
	.byte	'reserved_30',0,4
	.word	322
	.byte	2,0,2,35,0,0,10,4,238,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	1809
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FLASHCON1_Bits',0,4,159,4,16,4,9
	.byte	'STALL',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'reserved_1',0,4
	.word	322
	.byte	15,16,2,35,0,9
	.byte	'MASKUECC',0,4
	.word	322
	.byte	2,14,2,35,0,9
	.byte	'reserved_18',0,4
	.word	322
	.byte	6,8,2,35,0,9
	.byte	'reserved_24',0,4
	.word	322
	.byte	2,6,2,35,0,9
	.byte	'reserved_26',0,4
	.word	322
	.byte	6,0,2,35,0,0,10,4,246,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	2035
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FLASHCON2_Bits',0,4,170,4,16,4,9
	.byte	'RECDIS',0,4
	.word	322
	.byte	2,30,2,35,0,9
	.byte	'ECCCORDIS',0,4
	.word	322
	.byte	2,28,2,35,0,9
	.byte	'reserved_4',0,4
	.word	322
	.byte	4,24,2,35,0,9
	.byte	'HMARGIN',0,4
	.word	322
	.byte	2,22,2,35,0,9
	.byte	'MSEL',0,4
	.word	322
	.byte	2,20,2,35,0,9
	.byte	'reserved_12',0,4
	.word	322
	.byte	4,16,2,35,0,9
	.byte	'ECCSCLR',0,4
	.word	322
	.byte	2,14,2,35,0,9
	.byte	'reserved_18',0,4
	.word	322
	.byte	6,8,2,35,0,9
	.byte	'SBABCLR',0,4
	.word	322
	.byte	2,6,2,35,0,9
	.byte	'DBABCLR',0,4
	.word	322
	.byte	2,4,2,35,0,9
	.byte	'MBABCLR',0,4
	.word	322
	.byte	2,2,2,35,0,9
	.byte	'ZBABCLR',0,4
	.word	322
	.byte	2,0,2,35,0,0,10,4,254,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	2234
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FLASHCON3_Bits',0,4,187,4,16,4,9
	.byte	'ECCERRINJ',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EDCERRINJ',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'SBABERRINJ',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'DBABERRINJ',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'MBABERRINJ',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'ZBABERRINJ',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'SBERERRINJ',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'DBERERRINJ',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'NVMCERRINJ',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'FLCONERRINJ',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'reserved_10',0,4
	.word	322
	.byte	22,0,2,35,0,0,10,4,134,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	2542
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FLASHCON4_Bits',0,4,203,4,16,4,9
	.byte	'DDIS',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'reserved_1',0,4
	.word	322
	.byte	31,0,2,35,0,0,10,4,142,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	2855
	.byte	4,2,35,0,0,22,236,253,2
	.word	474
	.byte	23,235,253,2,0,8
	.byte	'_Ifx_CPU_KRST0_Bits',0,4,161,5,16,4,9
	.byte	'RST',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'RSTSTAT',0,4
	.word	322
	.byte	2,29,2,35,0,9
	.byte	'reserved_3',0,4
	.word	322
	.byte	29,0,2,35,0,0,10,4,222,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	2977
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_KRST1_Bits',0,4,169,5,16,4,9
	.byte	'RST',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'reserved_1',0,4
	.word	322
	.byte	31,0,2,35,0,0,10,4,230,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	3100
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_KRSTCLR_Bits',0,4,176,5,16,4,9
	.byte	'CLR',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'reserved_1',0,4
	.word	322
	.byte	31,0,2,35,0,0,10,4,238,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	3204
	.byte	4,2,35,0,0,22,244,31
	.word	474
	.byte	23,243,31,0,8
	.byte	'_Ifx_CPU_RGN_LA_Bits',0,4,224,7,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	5,27,2,35,0,9
	.byte	'ADDR',0,4
	.word	322
	.byte	27,0,2,35,0,0,10,4,158,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	3321
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_RGN_UA_Bits',0,4,231,7,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	5,27,2,35,0,9
	.byte	'ADDR',0,4
	.word	322
	.byte	27,0,2,35,0,0,10,4,166,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	3427
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_RGN_ACCENA_Bits',0,4,150,7,16,4,9
	.byte	'EN0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN1',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN2',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN3',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN4',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN5',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN6',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN7',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN8',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN9',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN10',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN11',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN12',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN13',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN14',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN15',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN16',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN17',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN18',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN19',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN20',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN21',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN22',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN23',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN24',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN25',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN26',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN27',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN28',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN29',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN30',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN31',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,142,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	3533
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_RGN_ACCENB_Bits',0,4,187,7,16,4,9
	.byte	'EN32',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN33',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN34',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN35',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN36',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN37',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN38',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN39',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN40',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN41',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN42',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN43',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN44',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN45',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN46',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN47',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN48',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN49',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN50',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN51',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN52',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN53',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN54',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN55',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN56',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN57',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN58',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN59',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN60',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN61',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN62',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN63',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,150,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	4107
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_RGN',0,4,223,16,25,16,11
	.byte	'LA',0
	.word	3387
	.byte	4,2,35,0,11
	.byte	'UA',0
	.word	3493
	.byte	4,2,35,4,11
	.byte	'ACCENA',0
	.word	4067
	.byte	4,2,35,8,11
	.byte	'ACCENB',0
	.word	4651
	.byte	4,2,35,12,0,22,128,1
	.word	4691
	.byte	23,7,0,12
	.word	4767
	.byte	22,8
	.word	474
	.byte	23,7,0,8
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,4,201,8,16,4,9
	.byte	'EN0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN1',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN2',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN3',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN4',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN5',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN6',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN7',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN8',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN9',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN10',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN11',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN12',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN13',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN14',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN15',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN16',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN17',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN18',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN19',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN20',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN21',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN22',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN23',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN24',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN25',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN26',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN27',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN28',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN29',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN30',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN31',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,206,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	4791
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,4,238,8,16,4,9
	.byte	'EN32',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN33',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN34',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN35',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN36',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN37',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN38',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN39',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN40',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN41',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN42',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN43',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN44',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN45',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN46',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN47',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN48',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN49',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN50',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN51',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN52',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN53',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN54',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN55',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN56',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN57',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN58',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN59',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN60',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN61',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN62',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN63',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,214,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	5376
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,4,247,7,16,4,9
	.byte	'EN0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN1',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN2',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN3',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN4',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN5',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN6',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN7',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN8',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN9',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN10',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN11',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN12',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN13',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN14',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN15',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN16',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN17',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN18',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN19',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN20',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN21',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN22',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN23',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN24',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN25',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN26',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN27',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN28',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN29',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN30',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN31',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,182,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	5971
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,4,156,8,16,4,9
	.byte	'EN32',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN33',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN34',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN35',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN36',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN37',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN38',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN39',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN40',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN41',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN42',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN43',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN44',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN45',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN46',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN47',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN48',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN49',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN50',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN51',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN52',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN53',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN54',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN55',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN56',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN57',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN58',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN59',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN60',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN61',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN62',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN63',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,190,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	6553
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,4,191,5,16,4,9
	.byte	'EN0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN1',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN2',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN3',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN4',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN5',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN6',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN7',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN8',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN9',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN10',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN11',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN12',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN13',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN14',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN15',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN16',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN17',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN18',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN19',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN20',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN21',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN22',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN23',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN24',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN25',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN26',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN27',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN28',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN29',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN30',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN31',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,254,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	7145
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,4,228,5,16,4,9
	.byte	'EN32',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN33',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN34',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN35',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN36',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN37',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN38',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN39',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN40',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN41',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN42',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN43',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN44',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN45',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN46',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN47',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN48',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN49',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN50',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN51',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN52',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN53',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN54',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN55',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN56',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN57',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN58',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN59',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN60',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN61',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN62',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN63',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,134,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	7727
	.byte	4,2,35,0,0,22,232,1
	.word	474
	.byte	23,231,1,0,8
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,4,184,3,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	5,27,2,35,0,9
	.byte	'ADDR',0,4
	.word	322
	.byte	27,0,2,35,0,0,10,4,158,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	8330
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,4,191,3,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	5,27,2,35,0,9
	.byte	'ADDR',0,4
	.word	322
	.byte	27,0,2,35,0,0,10,4,166,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	8446
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,4,201,2,16,4,9
	.byte	'EN0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN1',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN2',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN3',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN4',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN5',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN6',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN7',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN8',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN9',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN10',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN11',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN12',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN13',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN14',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN15',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN16',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN17',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN18',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN19',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN20',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN21',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN22',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN23',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN24',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN25',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN26',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN27',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN28',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN29',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN30',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN31',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,134,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	8562
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,4,147,3,16,4,9
	.byte	'EN32',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN33',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN34',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN35',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN36',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN37',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN38',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN39',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN40',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN41',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN42',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN43',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN44',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN45',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN46',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN47',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN48',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN49',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN50',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN51',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN52',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN53',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN54',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN55',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN56',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN57',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN58',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN59',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN60',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN61',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN62',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN63',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,150,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	9148
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,4,164,2,16,4,9
	.byte	'EN0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN1',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN2',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN3',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN4',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN5',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN6',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN7',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN8',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN9',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN10',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN11',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN12',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN13',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN14',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN15',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN16',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN17',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN18',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN19',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN20',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN21',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN22',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN23',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN24',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN25',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN26',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN27',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN28',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN29',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN30',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN31',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,254,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	9744
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,4,238,2,16,4,9
	.byte	'EN32',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'EN33',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EN34',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'EN35',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'EN36',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'EN37',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'EN38',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'EN39',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EN40',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'EN41',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'EN42',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'EN43',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'EN44',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'EN45',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'EN46',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'EN47',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'EN48',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'EN49',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'EN50',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'EN51',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'EN52',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'EN53',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'EN54',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'EN55',0,4
	.word	322
	.byte	1,8,2,35,0,9
	.byte	'EN56',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'EN57',0,4
	.word	322
	.byte	1,6,2,35,0,9
	.byte	'EN58',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'EN59',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'EN60',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'EN61',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'EN62',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'EN63',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,142,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	10330
	.byte	4,2,35,0,0,22,128,48
	.word	474
	.byte	23,255,47,0,8
	.byte	'_Ifx_CPU_OSEL_Bits',0,4,158,6,16,4,9
	.byte	'SHOVEN_X',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,166,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	10937
	.byte	4,2,35,0,0,22,12
	.word	474
	.byte	23,11,0,8
	.byte	'_Ifx_CPU_BLK_RABR_Bits',0,4,100,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	5,27,2,35,0,9
	.byte	'OBASE',0,4
	.word	322
	.byte	17,10,2,35,0,9
	.byte	'reserved_22',0,4
	.word	322
	.byte	2,8,2,35,0,9
	.byte	'OMEM',0,4
	.word	322
	.byte	4,4,2,35,0,9
	.byte	'reserved_28',0,4
	.word	322
	.byte	3,1,2,35,0,9
	.byte	'OVEN',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,206,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	11032
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_BLK_OTAR_Bits',0,4,92,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	5,27,2,35,0,9
	.byte	'TBASE',0,4
	.word	322
	.byte	23,4,2,35,0,9
	.byte	'reserved_28',0,4
	.word	322
	.byte	4,0,2,35,0,0,10,4,198,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	11218
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_BLK_OMASK_Bits',0,4,83,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	5,27,2,35,0,9
	.byte	'OMASK',0,4
	.word	322
	.byte	12,15,2,35,0,9
	.byte	'ONE',0,4
	.word	322
	.byte	11,4,2,35,0,9
	.byte	'reserved_28',0,4
	.word	322
	.byte	4,0,2,35,0,0,10,4,190,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	11349
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_BLK',0,4,244,16,25,12,11
	.byte	'RABR',0
	.word	11178
	.byte	4,2,35,0,11
	.byte	'OTAR',0
	.word	11309
	.byte	4,2,35,4,11
	.byte	'OMASK',0
	.word	11456
	.byte	4,2,35,8,0,22,128,3
	.word	11496
	.byte	23,31,0,12
	.word	11559
	.byte	22,160,39
	.word	474
	.byte	23,159,39,0,8
	.byte	'_Ifx_CPU_SEGEN_Bits',0,4,238,7,16,4,9
	.byte	'ADFLIP',0,4
	.word	322
	.byte	8,24,2,35,0,9
	.byte	'ADTYPE',0,4
	.word	322
	.byte	2,22,2,35,0,9
	.byte	'reserved_10',0,4
	.word	322
	.byte	21,1,2,35,0,9
	.byte	'AE',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,174,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	11585
	.byte	4,2,35,0,0,22,208,223,1
	.word	474
	.byte	23,207,223,1,0,8
	.byte	'_Ifx_CPU_TASK_ASI_Bits',0,4,176,9,16,4,9
	.byte	'ASI',0,4
	.word	322
	.byte	5,27,2,35,0,9
	.byte	'reserved_5',0,4
	.word	322
	.byte	27,0,2,35,0,0,10,4,238,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	11738
	.byte	4,2,35,0,0,22,248,1
	.word	474
	.byte	23,247,1,0,8
	.byte	'_Ifx_CPU_PMA0_Bits',0,4,229,6,16,4,9
	.byte	'DAC',0,4
	.word	322
	.byte	16,16,2,35,0,9
	.byte	'reserved_16',0,4
	.word	322
	.byte	16,0,2,35,0,0,10,4,230,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	11856
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_PMA1_Bits',0,4,236,6,16,4,9
	.byte	'CAC',0,4
	.word	322
	.byte	16,16,2,35,0,9
	.byte	'reserved_16',0,4
	.word	322
	.byte	16,0,2,35,0,0,10,4,238,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	11960
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_PMA2_Bits',0,4,243,6,16,4,9
	.byte	'PSI',0,4
	.word	322
	.byte	16,16,2,35,0,9
	.byte	'reserved_16',0,4
	.word	322
	.byte	16,0,2,35,0,0,10,4,246,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	12064
	.byte	4,2,35,0,0,22,244,29
	.word	474
	.byte	23,243,29,0,8
	.byte	'_Ifx_CPU_DCON2_Bits',0,4,248,1,16,4,9
	.byte	'DCACHE_SZE',0,4
	.word	322
	.byte	16,16,2,35,0,9
	.byte	'DSCRATCH_SZE',0,4
	.word	322
	.byte	16,0,2,35,0,0,10,4,214,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	12179
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_SMACON_Bits',0,4,193,8,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	24,8,2,35,0,9
	.byte	'IODT',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'reserved_25',0,4
	.word	322
	.byte	7,0,2,35,0,0,10,4,198,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	12292
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DSTR_Bits',0,4,233,3,16,4,9
	.byte	'SRE',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'GAE',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'LBE',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'DRE',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'reserved_4',0,4
	.word	322
	.byte	2,26,2,35,0,9
	.byte	'CRE',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'reserved_7',0,4
	.word	322
	.byte	7,18,2,35,0,9
	.byte	'DTME',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'LOE',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'SDE',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'SCE',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'CAC',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'MPE',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'CLE',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'reserved_21',0,4
	.word	322
	.byte	3,8,2,35,0,9
	.byte	'ALN',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'reserved_25',0,4
	.word	322
	.byte	7,0,2,35,0,0,10,4,214,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	12421
	.byte	4,2,35,0,0,22,4
	.word	474
	.byte	23,3,0,8
	.byte	'_Ifx_CPU_DATR_Bits',0,4,205,1,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	3,29,2,35,0,9
	.byte	'SBE',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'reserved_4',0,4
	.word	322
	.byte	5,23,2,35,0,9
	.byte	'CWE',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'CFE',0,4
	.word	322
	.byte	1,21,2,35,0,9
	.byte	'reserved_11',0,4
	.word	322
	.byte	3,18,2,35,0,9
	.byte	'SOE',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'reserved_15',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'reserved_16',0,4
	.word	322
	.byte	16,0,2,35,0,0,10,4,182,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	12782
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DEADD_Bits',0,4,134,2,16,4,9
	.byte	'ERROR_ADDRESS',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,230,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	13021
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DIEAR_Bits',0,4,140,2,16,4,9
	.byte	'TA',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,238,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	13113
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DIETR_Bits',0,4,146,2,16,4,9
	.byte	'IED',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'IE_T',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'IE_C',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'IE_S',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'IE_BI',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'E_INFO',0,4
	.word	322
	.byte	6,21,2,35,0,9
	.byte	'IE_UNC',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'IE_SP',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'IE_BS',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'IE_DLMU',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'IE_LPB',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'IE_MTMV',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'reserved_17',0,4
	.word	322
	.byte	15,0,2,35,0,0,10,4,246,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	13194
	.byte	4,2,35,0,0,22,24
	.word	474
	.byte	23,23,0,8
	.byte	'_Ifx_CPU_DCON0_Bits',0,4,240,1,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'DCBYP',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'reserved_2',0,4
	.word	322
	.byte	30,0,2,35,0,0
.L221:
	.byte	10,4,206,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	13499
	.byte	4,2,35,0,0,22,188,3
	.word	474
	.byte	23,187,3,0,8
	.byte	'_Ifx_CPU_PSTR_Bits',0,4,250,6,16,4,9
	.byte	'FRE',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'reserved_1',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'FBE',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'reserved_3',0,4
	.word	322
	.byte	9,20,2,35,0,9
	.byte	'FPE',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'reserved_13',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'FME',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'reserved_15',0,4
	.word	322
	.byte	17,0,2,35,0,0,10,4,254,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	13638
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_PCON1_Bits',0,4,179,6,16,4,9
	.byte	'PCINV',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'PBINV',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'reserved_2',0,4
	.word	322
	.byte	30,0,2,35,0,0,10,4,190,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	13854
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_PCON2_Bits',0,4,187,6,16,4,9
	.byte	'PCACHE_SZE',0,4
	.word	322
	.byte	16,16,2,35,0,9
	.byte	'PSCRATCH_SZE',0,4
	.word	322
	.byte	16,0,2,35,0,0,10,4,198,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	13977
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_PCON0_Bits',0,4,171,6,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'PCBYP',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'reserved_2',0,4
	.word	322
	.byte	30,0,2,35,0,0
.L217:
	.byte	10,4,182,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	14090
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_PIEAR_Bits',0,4,205,6,16,4,9
	.byte	'TA',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,214,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	14218
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_PIETR_Bits',0,4,211,6,16,4,9
	.byte	'IED',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'IE_T',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'IE_C',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'IE_S',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'IE_BI',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'E_INFO',0,4
	.word	322
	.byte	6,21,2,35,0,9
	.byte	'IE_UNC',0,4
	.word	322
	.byte	1,20,2,35,0,9
	.byte	'IE_SP',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'IE_BS',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'IE_ADDR',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'IE_LPB',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'IE_MTMV',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'reserved_17',0,4
	.word	322
	.byte	15,0,2,35,0,0,10,4,222,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	14299
	.byte	4,2,35,0,0,22,232,3
	.word	474
	.byte	23,231,3,0,8
	.byte	'_Ifx_CPU_COMPAT_Bits',0,4,136,1,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	3,29,2,35,0,9
	.byte	'RM',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'SP',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'reserved_5',0,4
	.word	322
	.byte	27,0,2,35,0,0,10,4,238,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	14606
	.byte	4,2,35,0,0,22,252,23
	.word	474
	.byte	23,251,23,0,8
	.byte	'_Ifx_CPU_FPU_TRAP_CON_Bits',0,4,210,4,16,4,9
	.byte	'TST',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'TCL',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'reserved_2',0,4
	.word	322
	.byte	6,24,2,35,0,9
	.byte	'RM',0,4
	.word	322
	.byte	2,22,2,35,0,9
	.byte	'reserved_10',0,4
	.word	322
	.byte	8,14,2,35,0,9
	.byte	'FXE',0,4
	.word	322
	.byte	1,13,2,35,0,9
	.byte	'FUE',0,4
	.word	322
	.byte	1,12,2,35,0,9
	.byte	'FZE',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'FVE',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'FIE',0,4
	.word	322
	.byte	1,9,2,35,0,9
	.byte	'reserved_23',0,4
	.word	322
	.byte	3,6,2,35,0,9
	.byte	'FX',0,4
	.word	322
	.byte	1,5,2,35,0,9
	.byte	'FU',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'FZ',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'FV',0,4
	.word	322
	.byte	1,2,2,35,0,9
	.byte	'FI',0,4
	.word	322
	.byte	1,1,2,35,0,9
	.byte	'reserved_31',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,150,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	14757
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FPU_TRAP_PC_Bits',0,4,242,4,16,4,9
	.byte	'PC',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,166,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	15111
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FPU_TRAP_OPC_Bits',0,4,232,4,16,4,9
	.byte	'OPC',0,4
	.word	322
	.byte	8,24,2,35,0,9
	.byte	'FMT',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'reserved_9',0,4
	.word	322
	.byte	7,16,2,35,0,9
	.byte	'DREG',0,4
	.word	322
	.byte	4,12,2,35,0,9
	.byte	'reserved_20',0,4
	.word	322
	.byte	12,0,2,35,0,0,10,4,158,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	15198
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FPU_TRAP_SRC1_Bits',0,4,248,4,16,4,9
	.byte	'SRC1',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,174,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	15363
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FPU_TRAP_SRC2_Bits',0,4,254,4,16,4,9
	.byte	'SRC2',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,182,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	15454
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FPU_TRAP_SRC3_Bits',0,4,132,5,16,4,9
	.byte	'SRC3',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,190,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	15545
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FPU_TRAP',0,4,136,17,25,28,11
	.byte	'CON',0
	.word	15071
	.byte	4,2,35,0,11
	.byte	'PC',0
	.word	15158
	.byte	4,2,35,4,11
	.byte	'OPC',0
	.word	15323
	.byte	4,2,35,8,11
	.byte	'reserved_C',0
	.word	12773
	.byte	4,2,35,12,11
	.byte	'SRC1',0
	.word	15414
	.byte	4,2,35,16,11
	.byte	'SRC2',0
	.word	15505
	.byte	4,2,35,20,11
	.byte	'SRC3',0
	.word	15596
	.byte	4,2,35,24,0,12
	.word	15636
	.byte	22,228,63
	.word	474
	.byte	23,227,63,0,8
	.byte	'_Ifx_CPU_DPR_L_Bits',0,4,212,3,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	3,29,2,35,0,9
	.byte	'LOWBND',0,4
	.word	322
	.byte	29,0,2,35,0,0,10,4,190,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	15777
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DPR_U_Bits',0,4,219,3,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	3,29,2,35,0,9
	.byte	'UPPBND',0,4
	.word	322
	.byte	29,0,2,35,0,0,10,4,198,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	15884
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DPR',0,4,160,17,25,8,11
	.byte	'L',0
	.word	15844
	.byte	4,2,35,0,11
	.byte	'U',0
	.word	15951
	.byte	4,2,35,4,0,22,144,1
	.word	15991
	.byte	23,17,0,12
	.word	16033
	.byte	22,240,30
	.word	474
	.byte	23,239,30,0,8
	.byte	'_Ifx_CPU_CPR_L_Bits',0,4,152,1,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	5,27,2,35,0,9
	.byte	'LOWBND',0,4
	.word	322
	.byte	27,0,2,35,0,0,10,4,254,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	16059
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_CPR_U_Bits',0,4,159,1,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	5,27,2,35,0,9
	.byte	'UPPBND',0,4
	.word	322
	.byte	27,0,2,35,0,0,10,4,134,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	16166
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_CPR',0,4,179,17,25,8,11
	.byte	'L',0
	.word	16126
	.byte	4,2,35,0,11
	.byte	'U',0
	.word	16233
	.byte	4,2,35,4,0,22,80
	.word	16273
	.byte	23,9,0,12
	.word	16315
	.byte	22,176,31
	.word	474
	.byte	23,175,31,0,8
	.byte	'_Ifx_CPU_CPXE_Bits',0,4,174,1,16,4,9
	.byte	'XE_N',0,4
	.word	322
	.byte	10,22,2,35,0,9
	.byte	'reserved_10',0,4
	.word	322
	.byte	22,0,2,35,0,0,10,4,150,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	16340
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DPRE_Bits',0,4,205,3,16,4,9
	.byte	'RE_N',0,4
	.word	322
	.byte	18,14,2,35,0,9
	.byte	'reserved_18',0,4
	.word	322
	.byte	14,0,2,35,0,0,10,4,182,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	16445
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DPWE_Bits',0,4,226,3,16,4,9
	.byte	'WE_N',0,4
	.word	322
	.byte	18,14,2,35,0,9
	.byte	'reserved_18',0,4
	.word	322
	.byte	14,0,2,35,0,0,10,4,206,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	16550
	.byte	4,2,35,0,0,22,16
	.word	474
	.byte	23,15,0,22,152,7
	.word	474
	.byte	23,151,7,0,8
	.byte	'_Ifx_CPU_TPS_CON_Bits',0,4,183,9,16,4,9
	.byte	'TEXP0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'TEXP1',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'TEXP2',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'reserved_3',0,4
	.word	322
	.byte	13,16,2,35,0,9
	.byte	'TTRAP',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'reserved_17',0,4
	.word	322
	.byte	15,0,2,35,0,0,10,4,246,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	16675
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_TPS_TIMER_Bits',0,4,251,9,16,4,9
	.byte	'TIMER',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,182,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	16857
	.byte	4,2,35,0,0,22,12
	.word	16905
	.byte	23,2,0,8
	.byte	'_Ifx_CPU_TPS',0,4,198,17,25,16,11
	.byte	'CON',0
	.word	16817
	.byte	4,2,35,0,11
	.byte	'TIMER',0
	.word	16945
	.byte	12,2,35,4,0,12
	.word	16954
	.byte	22,48
	.word	474
	.byte	23,47,0,8
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,4,208,9,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	4,28,2,35,0,9
	.byte	'ENTRY_LVAL',0,4
	.word	322
	.byte	8,20,2,35,0,9
	.byte	'reserved_12',0,4
	.word	322
	.byte	20,0,2,35,0,0,10,4,142,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	17016
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,4,201,9,16,4,9
	.byte	'ENTRY_CVAL',0,4
	.word	322
	.byte	12,20,2,35,0,9
	.byte	'reserved_12',0,4
	.word	322
	.byte	20,0,2,35,0,0,10,4,134,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	17165
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,4,223,9,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	4,28,2,35,0,9
	.byte	'EXIT_LVAL',0,4
	.word	322
	.byte	20,8,2,35,0,9
	.byte	'reserved_24',0,4
	.word	322
	.byte	8,0,2,35,0,0,10,4,158,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	17292
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,4,216,9,16,4,9
	.byte	'EXIT_CVAL',0,4
	.word	322
	.byte	24,8,2,35,0,9
	.byte	'reserved_24',0,4
	.word	322
	.byte	8,0,2,35,0,0,10,4,150,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	17439
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,4,194,9,16,4,9
	.byte	'EXTIM_CLASS_EN',0,4
	.word	322
	.byte	8,24,2,35,0,9
	.byte	'reserved_8',0,4
	.word	322
	.byte	24,0,2,35,0,0,10,4,254,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	17564
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_TPS_EXTIM_STAT_Bits',0,4,238,9,16,4,9
	.byte	'EXIT_TIN',0,4
	.word	322
	.byte	8,24,2,35,0,9
	.byte	'EXIT_CLASS',0,4
	.word	322
	.byte	3,21,2,35,0,9
	.byte	'reserved_11',0,4
	.word	322
	.byte	4,17,2,35,0,9
	.byte	'EXIT_AT',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'ENTRY_TIN',0,4
	.word	322
	.byte	8,8,2,35,0,9
	.byte	'ENTRY_CLASS',0,4
	.word	322
	.byte	3,5,2,35,0,9
	.byte	'reserved_27',0,4
	.word	322
	.byte	4,1,2,35,0,9
	.byte	'ENTRY_AT',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,174,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	17692
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_TPS_EXTIM_FCX_Bits',0,4,231,9,16,4,9
	.byte	'EXIT_FCX',0,4
	.word	322
	.byte	20,12,2,35,0,9
	.byte	'reserved_20',0,4
	.word	322
	.byte	12,0,2,35,0,0,10,4,166,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	17939
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_TPS_EXTIM',0,4,217,17,25,28,11
	.byte	'ENTRY_LVAL',0
	.word	17125
	.byte	4,2,35,0,11
	.byte	'ENTRY_CVAL',0
	.word	17252
	.byte	4,2,35,4,11
	.byte	'EXIT_LVAL',0
	.word	17399
	.byte	4,2,35,8,11
	.byte	'EXIT_CVAL',0
	.word	17524
	.byte	4,2,35,12,11
	.byte	'CLASS_EN',0
	.word	17652
	.byte	4,2,35,16,11
	.byte	'STAT',0
	.word	17899
	.byte	4,2,35,20,11
	.byte	'FCX',0
	.word	18017
	.byte	4,2,35,24,0,12
	.word	18057
	.byte	22,164,23
	.word	474
	.byte	23,163,23,0,8
	.byte	'_Ifx_CPU_TR_EVT_Bits',0,4,149,10,16,4,9
	.byte	'EVTA',0,4
	.word	322
	.byte	3,29,2,35,0,9
	.byte	'BBM',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'BOD',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'SUSP',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'CNT',0,4
	.word	322
	.byte	2,24,2,35,0,9
	.byte	'reserved_8',0,4
	.word	322
	.byte	4,20,2,35,0,9
	.byte	'TYP',0,4
	.word	322
	.byte	1,19,2,35,0,9
	.byte	'RNG',0,4
	.word	322
	.byte	1,18,2,35,0,9
	.byte	'reserved_14',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'ASI_EN',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'ASI',0,4
	.word	322
	.byte	5,11,2,35,0,9
	.byte	'reserved_21',0,4
	.word	322
	.byte	6,5,2,35,0,9
	.byte	'AST',0,4
	.word	322
	.byte	1,4,2,35,0,9
	.byte	'ALD',0,4
	.word	322
	.byte	1,3,2,35,0,9
	.byte	'reserved_29',0,4
	.word	322
	.byte	3,0,2,35,0,0,10,4,206,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	18222
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_TR_ADR_Bits',0,4,143,10,16,4,9
	.byte	'ADDR',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,198,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	18551
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_TR',0,4,241,17,25,8,11
	.byte	'EVT',0
	.word	18511
	.byte	4,2,35,0,11
	.byte	'ADR',0
	.word	18595
	.byte	4,2,35,4,0,22,64
	.word	18635
	.byte	23,7,0,12
	.word	18680
	.byte	22,192,23
	.word	474
	.byte	23,191,23,0,8
	.byte	'_Ifx_CPU_CCTRL_Bits',0,4,125,16,4,9
	.byte	'CM',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'CE',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'M1',0,4
	.word	322
	.byte	3,27,2,35,0,9
	.byte	'M2',0,4
	.word	322
	.byte	3,24,2,35,0,9
	.byte	'M3',0,4
	.word	322
	.byte	3,21,2,35,0,9
	.byte	'reserved_11',0,4
	.word	322
	.byte	21,0,2,35,0,0,10,4,230,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	18705
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_CCNT_Bits',0,4,118,16,4,9
	.byte	'COUNTVALUE',0,4
	.word	322
	.byte	31,1,2,35,0,9
	.byte	'SOVF',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,222,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	18864
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_ICNT_Bits',0,4,138,5,16,4,9
	.byte	'COUNTVALUE',0,4
	.word	322
	.byte	31,1,2,35,0,9
	.byte	'SOVF',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,198,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	18967
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_M1CNT_Bits',0,4,137,6,16,4,9
	.byte	'COUNTVALUE',0,4
	.word	322
	.byte	31,1,2,35,0,9
	.byte	'SOVF',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,142,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	19071
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_M2CNT_Bits',0,4,144,6,16,4,9
	.byte	'COUNTVALUE',0,4
	.word	322
	.byte	31,1,2,35,0,9
	.byte	'SOVF',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,150,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	19176
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_M3CNT_Bits',0,4,151,6,16,4,9
	.byte	'COUNTVALUE',0,4
	.word	322
	.byte	31,1,2,35,0,9
	.byte	'SOVF',0,4
	.word	322
	.byte	1,0,2,35,0,0,10,4,158,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	19281
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DBGSR_Bits',0,4,219,1,16,4,9
	.byte	'DE',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'HALT',0,4
	.word	322
	.byte	2,29,2,35,0,9
	.byte	'SIH',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'SUSP',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'reserved_5',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'PREVSUSP',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'PEVT',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'EVTSRC',0,4
	.word	322
	.byte	5,19,2,35,0,9
	.byte	'reserved_13',0,4
	.word	322
	.byte	19,0,2,35,0,0,10,4,190,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	19386
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_EXEVT_Bits',0,4,255,3,16,4,9
	.byte	'EVTA',0,4
	.word	322
	.byte	3,29,2,35,0,9
	.byte	'BBM',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'BOD',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'SUSP',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'CNT',0,4
	.word	322
	.byte	2,24,2,35,0,9
	.byte	'reserved_8',0,4
	.word	322
	.byte	24,0,2,35,0,0,10,4,222,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	19613
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_CREVT_Bits',0,4,181,1,16,4,9
	.byte	'EVTA',0,4
	.word	322
	.byte	3,29,2,35,0,9
	.byte	'BBM',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'BOD',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'SUSP',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'CNT',0,4
	.word	322
	.byte	2,24,2,35,0,9
	.byte	'reserved_8',0,4
	.word	322
	.byte	24,0,2,35,0,0,10,4,158,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	19779
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_SWEVT_Bits',0,4,147,9,16,4,9
	.byte	'EVTA',0,4
	.word	322
	.byte	3,29,2,35,0,9
	.byte	'BBM',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'BOD',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'SUSP',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'CNT',0,4
	.word	322
	.byte	2,24,2,35,0,9
	.byte	'reserved_8',0,4
	.word	322
	.byte	24,0,2,35,0,0,10,4,222,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	19945
	.byte	4,2,35,0,0,22,28
	.word	474
	.byte	23,27,0,8
	.byte	'_Ifx_CPU_TRIG_ACC_Bits',0,4,129,10,16,4,9
	.byte	'T0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'T1',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'T2',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'T3',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'T4',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'T5',0,4
	.word	322
	.byte	1,26,2,35,0,9
	.byte	'T6',0,4
	.word	322
	.byte	1,25,2,35,0,9
	.byte	'T7',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'reserved_8',0,4
	.word	322
	.byte	24,0,2,35,0,0,10,4,190,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	20120
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DMS_Bits',0,4,198,3,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'DMSVALUE',0,4
	.word	322
	.byte	31,0,2,35,0,0,10,4,174,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	20324
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DCX_Bits',0,4,255,1,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	6,26,2,35,0,9
	.byte	'DCXVALUE',0,4
	.word	322
	.byte	26,0,2,35,0,0,10,4,222,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	20431
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_DBGTCR_Bits',0,4,233,1,16,4,9
	.byte	'DTA',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'reserved_1',0,4
	.word	322
	.byte	31,0,2,35,0,0,10,4,198,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	20538
	.byte	4,2,35,0,0,22,180,1
	.word	474
	.byte	23,179,1,0,8
	.byte	'_Ifx_CPU_PCXI_Bits',0,4,194,6,16,4,9
	.byte	'PCXO',0,4
	.word	322
	.byte	16,16,2,35,0,9
	.byte	'PCXS',0,4
	.word	322
	.byte	4,12,2,35,0,9
	.byte	'UL',0,4
	.word	322
	.byte	1,11,2,35,0,9
	.byte	'PIE',0,4
	.word	322
	.byte	1,10,2,35,0,9
	.byte	'PCPN',0,4
	.word	322
	.byte	8,2,2,35,0,9
	.byte	'reserved_30',0,4
	.word	322
	.byte	2,0,2,35,0,0,10,4,206,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	20654
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_PSW_Bits',0,4,135,7,16,4,9
	.byte	'CDC',0,4
	.word	322
	.byte	7,25,2,35,0,9
	.byte	'CDE',0,4
	.word	322
	.byte	1,24,2,35,0,9
	.byte	'GW',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'IS',0,4
	.word	322
	.byte	1,22,2,35,0,9
	.byte	'IO',0,4
	.word	322
	.byte	2,20,2,35,0,9
	.byte	'PRS',0,4
	.word	322
	.byte	2,18,2,35,0,9
	.byte	'S',0,4
	.word	322
	.byte	1,17,2,35,0,9
	.byte	'PRS2',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'reserved_16',0,4
	.word	322
	.byte	8,8,2,35,0,9
	.byte	'USB',0,4
	.word	322
	.byte	8,0,2,35,0,0,10,4,134,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	20820
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_PC_Bits',0,4,164,6,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'PC',0,4
	.word	322
	.byte	31,0,2,35,0,0,10,4,174,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	21039
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_SYSCON_Bits',0,4,158,9,16,4,9
	.byte	'FCDSF',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'PROTEN',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'TPROTEN',0,4
	.word	322
	.byte	1,29,2,35,0,9
	.byte	'IS',0,4
	.word	322
	.byte	1,28,2,35,0,9
	.byte	'TS',0,4
	.word	322
	.byte	1,27,2,35,0,9
	.byte	'reserved_5',0,4
	.word	322
	.byte	3,24,2,35,0,9
	.byte	'ESDIS',0,4
	.word	322
	.byte	1,23,2,35,0,9
	.byte	'reserved_9',0,4
	.word	322
	.byte	7,16,2,35,0,9
	.byte	'U1_IED',0,4
	.word	322
	.byte	1,15,2,35,0,9
	.byte	'U1_IOS',0,4
	.word	322
	.byte	1,14,2,35,0,9
	.byte	'reserved_18',0,4
	.word	322
	.byte	6,8,2,35,0,9
	.byte	'BHALT',0,4
	.word	322
	.byte	1,7,2,35,0,9
	.byte	'reserved_25',0,4
	.word	322
	.byte	7,0,2,35,0,0,10,4,230,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	21139
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_CPU_ID_Bits',0,4,166,1,16,4,9
	.byte	'MOD_REV',0,4
	.word	322
	.byte	8,24,2,35,0,9
	.byte	'MOD_32B',0,4
	.word	322
	.byte	8,16,2,35,0,9
	.byte	'MOD',0,4
	.word	322
	.byte	16,0,2,35,0,0,10,4,142,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	21449
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_CORE_ID_Bits',0,4,145,1,16,4,9
	.byte	'CORE_ID',0,4
	.word	322
	.byte	3,29,2,35,0,9
	.byte	'reserved_3',0,4
	.word	322
	.byte	29,0,2,35,0,0,10,4,246,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	21570
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_BIV_Bits',0,4,76,16,4,9
	.byte	'VSS',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'BIV',0,4
	.word	322
	.byte	31,0,2,35,0,0,10,4,182,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	21680
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_BTV_Bits',0,4,111,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'BTV',0,4
	.word	322
	.byte	31,0,2,35,0,0,10,4,214,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	21774
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_ISP_Bits',0,4,155,5,16,4,9
	.byte	'ISP',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,214,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	21875
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_ICR_Bits',0,4,145,5,16,4,9
	.byte	'CCPN',0,4
	.word	322
	.byte	8,24,2,35,0,9
	.byte	'reserved_8',0,4
	.word	322
	.byte	7,17,2,35,0,9
	.byte	'IE',0,4
	.word	322
	.byte	1,16,2,35,0,9
	.byte	'PIPN',0,4
	.word	322
	.byte	8,8,2,35,0,9
	.byte	'reserved_24',0,4
	.word	322
	.byte	8,0,2,35,0,0,10,4,206,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	21955
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_FCX_Bits',0,4,138,4,16,4,9
	.byte	'FCXO',0,4
	.word	322
	.byte	16,16,2,35,0,9
	.byte	'FCXS',0,4
	.word	322
	.byte	4,12,2,35,0,9
	.byte	'reserved_20',0,4
	.word	322
	.byte	12,0,2,35,0,0,10,4,230,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	22111
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_LCX_Bits',0,4,183,5,16,4,9
	.byte	'LCXO',0,4
	.word	322
	.byte	16,16,2,35,0,9
	.byte	'LCXS',0,4
	.word	322
	.byte	4,12,2,35,0,9
	.byte	'reserved_20',0,4
	.word	322
	.byte	12,0,2,35,0,0,10,4,246,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	22231
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_CPU_CUS_ID_Bits',0,4,192,1,16,4,9
	.byte	'CID',0,4
	.word	322
	.byte	3,29,2,35,0,9
	.byte	'reserved_3',0,4
	.word	322
	.byte	29,0,2,35,0,0,10,4,166,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	22351
	.byte	4,2,35,0,0,22,172,1
	.word	474
	.byte	23,171,1,0,8
	.byte	'_Ifx_CPU_D_Bits',0,4,199,1,16,4,9
	.byte	'DATA',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,174,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	22467
	.byte	4,2,35,0,0,22,64
	.word	22506
	.byte	23,15,0,22,64
	.word	474
	.byte	23,63,0,8
	.byte	'_Ifx_CPU_A_Bits',0,4,70,16,4,9
	.byte	'ADDR',0,4
	.word	322
	.byte	32,0,2,35,0,0,10,4,174,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	22564
	.byte	4,2,35,0,0,22,64
	.word	22602
	.byte	23,15,0,8
	.byte	'_Ifx_CPU',0,4,132,18,25,128,128,8,11
	.byte	'reserved_0',0
	.word	1798
	.byte	128,34,2,35,0,11
	.byte	'FLASHCON0',0
	.word	1995
	.byte	4,3,35,128,34,11
	.byte	'FLASHCON1',0
	.word	2194
	.byte	4,3,35,132,34,11
	.byte	'FLASHCON2',0
	.word	2502
	.byte	4,3,35,136,34,11
	.byte	'FLASHCON3',0
	.word	2815
	.byte	4,3,35,140,34,11
	.byte	'FLASHCON4',0
	.word	2924
	.byte	4,3,35,144,34,11
	.byte	'reserved_1114',0
	.word	2964
	.byte	236,253,2,3,35,148,34,11
	.byte	'KRST0',0
	.word	3060
	.byte	4,4,35,128,160,3,11
	.byte	'KRST1',0
	.word	3164
	.byte	4,4,35,132,160,3,11
	.byte	'KRSTCLR',0
	.word	3270
	.byte	4,4,35,136,160,3,11
	.byte	'reserved_D00C',0
	.word	3310
	.byte	244,31,4,35,140,160,3,11
	.byte	'RGN',0
	.word	4777
	.byte	128,1,4,35,128,192,3,11
	.byte	'reserved_E080',0
	.word	4782
	.byte	8,4,35,128,193,3,11
	.byte	'SPR_SPROT_RGNACCENA_R0',0
	.word	5336
	.byte	4,4,35,136,193,3,11
	.byte	'SPR_SPROT_RGNACCENB_R0',0
	.word	5931
	.byte	4,4,35,140,193,3,11
	.byte	'reserved_E090',0
	.word	4782
	.byte	8,4,35,144,193,3,11
	.byte	'SPR_SPROT_RGNACCENA_R1',0
	.word	5336
	.byte	4,4,35,152,193,3,11
	.byte	'SPR_SPROT_RGNACCENB_R1',0
	.word	5931
	.byte	4,4,35,156,193,3,11
	.byte	'reserved_E0A0',0
	.word	4782
	.byte	8,4,35,160,193,3,11
	.byte	'SPR_SPROT_RGNACCENA_R2',0
	.word	5336
	.byte	4,4,35,168,193,3,11
	.byte	'SPR_SPROT_RGNACCENB_R2',0
	.word	5931
	.byte	4,4,35,172,193,3,11
	.byte	'reserved_E0B0',0
	.word	4782
	.byte	8,4,35,176,193,3,11
	.byte	'SPR_SPROT_RGNACCENA_R3',0
	.word	5336
	.byte	4,4,35,184,193,3,11
	.byte	'SPR_SPROT_RGNACCENB_R3',0
	.word	5931
	.byte	4,4,35,188,193,3,11
	.byte	'reserved_E0C0',0
	.word	4782
	.byte	8,4,35,192,193,3,11
	.byte	'SPR_SPROT_RGNACCENA_R4',0
	.word	5336
	.byte	4,4,35,200,193,3,11
	.byte	'SPR_SPROT_RGNACCENB_R4',0
	.word	5931
	.byte	4,4,35,204,193,3,11
	.byte	'reserved_E0D0',0
	.word	4782
	.byte	8,4,35,208,193,3,11
	.byte	'SPR_SPROT_RGNACCENA_R5',0
	.word	5336
	.byte	4,4,35,216,193,3,11
	.byte	'SPR_SPROT_RGNACCENB_R5',0
	.word	5931
	.byte	4,4,35,220,193,3,11
	.byte	'reserved_E0E0',0
	.word	4782
	.byte	8,4,35,224,193,3,11
	.byte	'SPR_SPROT_RGNACCENA_R6',0
	.word	5336
	.byte	4,4,35,232,193,3,11
	.byte	'SPR_SPROT_RGNACCENB_R6',0
	.word	5931
	.byte	4,4,35,236,193,3,11
	.byte	'reserved_E0F0',0
	.word	4782
	.byte	8,4,35,240,193,3,11
	.byte	'SPR_SPROT_RGNACCENA_R7',0
	.word	5336
	.byte	4,4,35,248,193,3,11
	.byte	'SPR_SPROT_RGNACCENB_R7',0
	.word	5931
	.byte	4,4,35,252,193,3,11
	.byte	'SFR_SPROT_ACCENA_W',0
	.word	6513
	.byte	4,4,35,128,194,3,11
	.byte	'SFR_SPROT_ACCENB_W',0
	.word	7105
	.byte	4,4,35,132,194,3,11
	.byte	'reserved_E108',0
	.word	4782
	.byte	8,4,35,136,194,3,11
	.byte	'LPB_SPROT_ACCENA_R',0
	.word	7687
	.byte	4,4,35,144,194,3,11
	.byte	'LPB_SPROT_ACCENB_R',0
	.word	8279
	.byte	4,4,35,148,194,3,11
	.byte	'reserved_E118',0
	.word	8319
	.byte	232,1,4,35,152,194,3,11
	.byte	'DLMU_SPROT_RGNLA0',0
	.word	8406
	.byte	4,4,35,128,196,3,11
	.byte	'DLMU_SPROT_RGNUA0',0
	.word	8522
	.byte	4,4,35,132,196,3,11
	.byte	'DLMU_SPROT_RGNACCENA_W0',0
	.word	9108
	.byte	4,4,35,136,196,3,11
	.byte	'DLMU_SPROT_RGNACCENB_W0',0
	.word	9704
	.byte	4,4,35,140,196,3,11
	.byte	'DLMU_SPROT_RGNLA1',0
	.word	8406
	.byte	4,4,35,144,196,3,11
	.byte	'DLMU_SPROT_RGNUA1',0
	.word	8522
	.byte	4,4,35,148,196,3,11
	.byte	'DLMU_SPROT_RGNACCENA_W1',0
	.word	9108
	.byte	4,4,35,152,196,3,11
	.byte	'DLMU_SPROT_RGNACCENB_W1',0
	.word	9704
	.byte	4,4,35,156,196,3,11
	.byte	'DLMU_SPROT_RGNLA2',0
	.word	8406
	.byte	4,4,35,160,196,3,11
	.byte	'DLMU_SPROT_RGNUA2',0
	.word	8522
	.byte	4,4,35,164,196,3,11
	.byte	'DLMU_SPROT_RGNACCENA_W2',0
	.word	9108
	.byte	4,4,35,168,196,3,11
	.byte	'DLMU_SPROT_RGNACCENB_W2',0
	.word	9704
	.byte	4,4,35,172,196,3,11
	.byte	'DLMU_SPROT_RGNLA3',0
	.word	8406
	.byte	4,4,35,176,196,3,11
	.byte	'DLMU_SPROT_RGNUA3',0
	.word	8522
	.byte	4,4,35,180,196,3,11
	.byte	'DLMU_SPROT_RGNACCENA_W3',0
	.word	9108
	.byte	4,4,35,184,196,3,11
	.byte	'DLMU_SPROT_RGNACCENB_W3',0
	.word	9704
	.byte	4,4,35,188,196,3,11
	.byte	'DLMU_SPROT_RGNLA4',0
	.word	8406
	.byte	4,4,35,192,196,3,11
	.byte	'DLMU_SPROT_RGNUA4',0
	.word	8522
	.byte	4,4,35,196,196,3,11
	.byte	'DLMU_SPROT_RGNACCENA_W4',0
	.word	9108
	.byte	4,4,35,200,196,3,11
	.byte	'DLMU_SPROT_RGNACCENB_W4',0
	.word	9704
	.byte	4,4,35,204,196,3,11
	.byte	'DLMU_SPROT_RGNLA5',0
	.word	8406
	.byte	4,4,35,208,196,3,11
	.byte	'DLMU_SPROT_RGNUA5',0
	.word	8522
	.byte	4,4,35,212,196,3,11
	.byte	'DLMU_SPROT_RGNACCENA_W5',0
	.word	9108
	.byte	4,4,35,216,196,3,11
	.byte	'DLMU_SPROT_RGNACCENB_W5',0
	.word	9704
	.byte	4,4,35,220,196,3,11
	.byte	'DLMU_SPROT_RGNLA6',0
	.word	8406
	.byte	4,4,35,224,196,3,11
	.byte	'DLMU_SPROT_RGNUA6',0
	.word	8522
	.byte	4,4,35,228,196,3,11
	.byte	'DLMU_SPROT_RGNACCENA_W6',0
	.word	9108
	.byte	4,4,35,232,196,3,11
	.byte	'DLMU_SPROT_RGNACCENB_W6',0
	.word	9704
	.byte	4,4,35,236,196,3,11
	.byte	'DLMU_SPROT_RGNLA7',0
	.word	8406
	.byte	4,4,35,240,196,3,11
	.byte	'DLMU_SPROT_RGNUA7',0
	.word	8522
	.byte	4,4,35,244,196,3,11
	.byte	'DLMU_SPROT_RGNACCENA_W7',0
	.word	9108
	.byte	4,4,35,248,196,3,11
	.byte	'DLMU_SPROT_RGNACCENB_W7',0
	.word	9704
	.byte	4,4,35,252,196,3,11
	.byte	'reserved_E280',0
	.word	4782
	.byte	8,4,35,128,197,3,11
	.byte	'DLMU_SPROT_RGNACCENA_R0',0
	.word	10290
	.byte	4,4,35,136,197,3,11
	.byte	'DLMU_SPROT_RGNACCENB_R0',0
	.word	10886
	.byte	4,4,35,140,197,3,11
	.byte	'reserved_E290',0
	.word	4782
	.byte	8,4,35,144,197,3,11
	.byte	'DLMU_SPROT_RGNACCENA_R1',0
	.word	10290
	.byte	4,4,35,152,197,3,11
	.byte	'DLMU_SPROT_RGNACCENB_R1',0
	.word	10886
	.byte	4,4,35,156,197,3,11
	.byte	'reserved_E2A0',0
	.word	4782
	.byte	8,4,35,160,197,3,11
	.byte	'DLMU_SPROT_RGNACCENA_R2',0
	.word	10290
	.byte	4,4,35,168,197,3,11
	.byte	'DLMU_SPROT_RGNACCENB_R2',0
	.word	10886
	.byte	4,4,35,172,197,3,11
	.byte	'reserved_E2B0',0
	.word	4782
	.byte	8,4,35,176,197,3,11
	.byte	'DLMU_SPROT_RGNACCENA_R3',0
	.word	10290
	.byte	4,4,35,184,197,3,11
	.byte	'DLMU_SPROT_RGNACCENB_R3',0
	.word	10886
	.byte	4,4,35,188,197,3,11
	.byte	'reserved_E2C0',0
	.word	4782
	.byte	8,4,35,192,197,3,11
	.byte	'DLMU_SPROT_RGNACCENA_R4',0
	.word	10290
	.byte	4,4,35,200,197,3,11
	.byte	'DLMU_SPROT_RGNACCENB_R4',0
	.word	10886
	.byte	4,4,35,204,197,3,11
	.byte	'reserved_E2D0',0
	.word	4782
	.byte	8,4,35,208,197,3,11
	.byte	'DLMU_SPROT_RGNACCENA_R5',0
	.word	10290
	.byte	4,4,35,216,197,3,11
	.byte	'DLMU_SPROT_RGNACCENB_R5',0
	.word	10886
	.byte	4,4,35,220,197,3,11
	.byte	'reserved_E2E0',0
	.word	4782
	.byte	8,4,35,224,197,3,11
	.byte	'DLMU_SPROT_RGNACCENA_R6',0
	.word	10290
	.byte	4,4,35,232,197,3,11
	.byte	'DLMU_SPROT_RGNACCENB_R6',0
	.word	10886
	.byte	4,4,35,236,197,3,11
	.byte	'reserved_E2F0',0
	.word	4782
	.byte	8,4,35,240,197,3,11
	.byte	'DLMU_SPROT_RGNACCENA_R7',0
	.word	10290
	.byte	4,4,35,248,197,3,11
	.byte	'DLMU_SPROT_RGNACCENB_R7',0
	.word	10886
	.byte	4,4,35,252,197,3,11
	.byte	'reserved_E300',0
	.word	10926
	.byte	128,48,4,35,128,198,3,11
	.byte	'OSEL',0
	.word	10983
	.byte	4,4,35,128,246,3,11
	.byte	'reserved_FB04',0
	.word	11023
	.byte	12,4,35,132,246,3,11
	.byte	'BLK',0
	.word	11569
	.byte	128,3,4,35,144,246,3,11
	.byte	'reserved_FC90',0
	.word	11574
	.byte	160,39,4,35,144,249,3,11
	.byte	'SEGEN',0
	.word	11685
	.byte	4,4,35,176,160,4,11
	.byte	'reserved_11034',0
	.word	11725
	.byte	208,223,1,4,35,180,160,4,11
	.byte	'TASK_ASI',0
	.word	11805
	.byte	4,4,35,132,128,6,11
	.byte	'reserved_18008',0
	.word	11845
	.byte	248,1,4,35,136,128,6,11
	.byte	'PMA0',0
	.word	11920
	.byte	4,4,35,128,130,6,11
	.byte	'PMA1',0
	.word	12024
	.byte	4,4,35,132,130,6,11
	.byte	'PMA2',0
	.word	12128
	.byte	4,4,35,136,130,6,11
	.byte	'reserved_1810C',0
	.word	12168
	.byte	244,29,4,35,140,130,6,11
	.byte	'DCON2',0
	.word	12252
	.byte	4,4,35,128,160,6,11
	.byte	'reserved_19004',0
	.word	4782
	.byte	8,4,35,132,160,6,11
	.byte	'SMACON',0
	.word	12381
	.byte	4,4,35,140,160,6,11
	.byte	'DSTR',0
	.word	12733
	.byte	4,4,35,144,160,6,11
	.byte	'reserved_19014',0
	.word	12773
	.byte	4,4,35,148,160,6,11
	.byte	'DATR',0
	.word	12981
	.byte	4,4,35,152,160,6,11
	.byte	'DEADD',0
	.word	13073
	.byte	4,4,35,156,160,6,11
	.byte	'DIEAR',0
	.word	13154
	.byte	4,4,35,160,160,6,11
	.byte	'DIETR',0
	.word	13450
	.byte	4,4,35,164,160,6,11
	.byte	'reserved_19028',0
	.word	13490
	.byte	24,4,35,168,160,6,11
	.byte	'DCON0',0
	.word	13587
	.byte	4,4,35,192,160,6,11
	.byte	'reserved_19044',0
	.word	13627
	.byte	188,3,4,35,196,160,6,11
	.byte	'PSTR',0
	.word	13814
	.byte	4,4,35,128,164,6,11
	.byte	'PCON1',0
	.word	13937
	.byte	4,4,35,132,164,6,11
	.byte	'PCON2',0
	.word	14050
	.byte	4,4,35,136,164,6,11
	.byte	'PCON0',0
	.word	14178
	.byte	4,4,35,140,164,6,11
	.byte	'PIEAR',0
	.word	14259
	.byte	4,4,35,144,164,6,11
	.byte	'PIETR',0
	.word	14555
	.byte	4,4,35,148,164,6,11
	.byte	'reserved_19218',0
	.word	14595
	.byte	232,3,4,35,152,164,6,11
	.byte	'COMPAT',0
	.word	14706
	.byte	4,4,35,128,168,6,11
	.byte	'reserved_19404',0
	.word	14746
	.byte	252,23,4,35,132,168,6,11
	.byte	'FPU_TRAP',0
	.word	15761
	.byte	28,4,35,128,192,6,11
	.byte	'reserved_1A01C',0
	.word	15766
	.byte	228,63,4,35,156,192,6,11
	.byte	'DPR',0
	.word	16043
	.byte	144,1,4,35,128,128,7,11
	.byte	'reserved_1C090',0
	.word	16048
	.byte	240,30,4,35,144,129,7,11
	.byte	'CPR',0
	.word	16324
	.byte	80,4,35,128,160,7,11
	.byte	'reserved_1D050',0
	.word	16329
	.byte	176,31,4,35,208,160,7,11
	.byte	'CPXE_0',0
	.word	16405
	.byte	4,4,35,128,192,7,11
	.byte	'CPXE_1',0
	.word	16405
	.byte	4,4,35,132,192,7,11
	.byte	'CPXE_2',0
	.word	16405
	.byte	4,4,35,136,192,7,11
	.byte	'CPXE_3',0
	.word	16405
	.byte	4,4,35,140,192,7,11
	.byte	'DPRE_0',0
	.word	16510
	.byte	4,4,35,144,192,7,11
	.byte	'DPRE_1',0
	.word	16510
	.byte	4,4,35,148,192,7,11
	.byte	'DPRE_2',0
	.word	16510
	.byte	4,4,35,152,192,7,11
	.byte	'DPRE_3',0
	.word	16510
	.byte	4,4,35,156,192,7,11
	.byte	'DPWE_0',0
	.word	16615
	.byte	4,4,35,160,192,7,11
	.byte	'DPWE_1',0
	.word	16615
	.byte	4,4,35,164,192,7,11
	.byte	'DPWE_2',0
	.word	16615
	.byte	4,4,35,168,192,7,11
	.byte	'DPWE_3',0
	.word	16615
	.byte	4,4,35,172,192,7,11
	.byte	'reserved_1E030',0
	.word	16655
	.byte	16,4,35,176,192,7,11
	.byte	'CPXE_4',0
	.word	16405
	.byte	4,4,35,192,192,7,11
	.byte	'CPXE_5',0
	.word	16405
	.byte	4,4,35,196,192,7,11
	.byte	'reserved_1E048',0
	.word	4782
	.byte	8,4,35,200,192,7,11
	.byte	'DPRE_4',0
	.word	16510
	.byte	4,4,35,208,192,7,11
	.byte	'DPRE_5',0
	.word	16510
	.byte	4,4,35,212,192,7,11
	.byte	'reserved_1E058',0
	.word	4782
	.byte	8,4,35,216,192,7,11
	.byte	'DPWE_4',0
	.word	16615
	.byte	4,4,35,224,192,7,11
	.byte	'DPWE_5',0
	.word	16615
	.byte	4,4,35,228,192,7,11
	.byte	'reserved_1E068',0
	.word	16664
	.byte	152,7,4,35,232,192,7,11
	.byte	'TPS',0
	.word	17002
	.byte	16,4,35,128,200,7,11
	.byte	'reserved_1E410',0
	.word	17007
	.byte	48,4,35,144,200,7,11
	.byte	'TPS_EXTIM',0
	.word	18206
	.byte	28,4,35,192,200,7,11
	.byte	'reserved_1E45C',0
	.word	18211
	.byte	164,23,4,35,220,200,7,11
	.byte	'TR',0
	.word	18689
	.byte	64,4,35,128,224,7,11
	.byte	'reserved_1F040',0
	.word	18694
	.byte	192,23,4,35,192,224,7,11
	.byte	'CCTRL',0
	.word	18824
	.byte	4,4,35,128,248,7,11
	.byte	'CCNT',0
	.word	18927
	.byte	4,4,35,132,248,7,11
	.byte	'ICNT',0
	.word	19031
	.byte	4,4,35,136,248,7,11
	.byte	'M1CNT',0
	.word	19136
	.byte	4,4,35,140,248,7,11
	.byte	'M2CNT',0
	.word	19241
	.byte	4,4,35,144,248,7,11
	.byte	'M3CNT',0
	.word	19346
	.byte	4,4,35,148,248,7,11
	.byte	'reserved_1FC18',0
	.word	8319
	.byte	232,1,4,35,152,248,7,11
	.byte	'DBGSR',0
	.word	19573
	.byte	4,4,35,128,250,7,11
	.byte	'reserved_1FD04',0
	.word	12773
	.byte	4,4,35,132,250,7,11
	.byte	'EXEVT',0
	.word	19739
	.byte	4,4,35,136,250,7,11
	.byte	'CREVT',0
	.word	19905
	.byte	4,4,35,140,250,7,11
	.byte	'SWEVT',0
	.word	20071
	.byte	4,4,35,144,250,7,11
	.byte	'reserved_1FD14',0
	.word	20111
	.byte	28,4,35,148,250,7,11
	.byte	'TRIG_ACC',0
	.word	20284
	.byte	4,4,35,176,250,7,11
	.byte	'reserved_1FD34',0
	.word	11023
	.byte	12,4,35,180,250,7,11
	.byte	'DMS',0
	.word	20391
	.byte	4,4,35,192,250,7,11
	.byte	'DCX',0
	.word	20498
	.byte	4,4,35,196,250,7,11
	.byte	'DBGTCR',0
	.word	20603
	.byte	4,4,35,200,250,7,11
	.byte	'reserved_1FD4C',0
	.word	20643
	.byte	180,1,4,35,204,250,7,11
	.byte	'PCXI',0
	.word	20780
	.byte	4,4,35,128,252,7,11
	.byte	'PSW',0
	.word	20999
	.byte	4,4,35,132,252,7,11
	.byte	'PC',0
	.word	21099
	.byte	4,4,35,136,252,7,11
	.byte	'reserved_1FE0C',0
	.word	4782
	.byte	8,4,35,140,252,7,11
	.byte	'SYSCON',0
	.word	21409
	.byte	4,4,35,148,252,7,11
	.byte	'CPU_ID',0
	.word	21530
	.byte	4,4,35,152,252,7,11
	.byte	'CORE_ID',0
	.word	21640
	.byte	4,4,35,156,252,7,11
	.byte	'BIV',0
	.word	21734
	.byte	4,4,35,160,252,7,11
	.byte	'BTV',0
	.word	21835
	.byte	4,4,35,164,252,7,11
	.byte	'ISP',0
	.word	21915
	.byte	4,4,35,168,252,7,11
	.byte	'ICR',0
	.word	22071
	.byte	4,4,35,172,252,7,11
	.byte	'reserved_1FE30',0
	.word	4782
	.byte	8,4,35,176,252,7,11
	.byte	'FCX',0
	.word	22191
	.byte	4,4,35,184,252,7,11
	.byte	'LCX',0
	.word	22311
	.byte	4,4,35,188,252,7,11
	.byte	'reserved_1FE40',0
	.word	16655
	.byte	16,4,35,192,252,7,11
	.byte	'CUS_ID',0
	.word	22416
	.byte	4,4,35,208,252,7,11
	.byte	'reserved_1FE54',0
	.word	22456
	.byte	172,1,4,35,212,252,7,11
	.byte	'D',0
	.word	22546
	.byte	64,4,35,128,254,7,11
	.byte	'reserved_1FF40',0
	.word	22555
	.byte	64,4,35,192,254,7,11
	.byte	'A',0
	.word	22642
	.byte	64,4,35,128,255,7,11
	.byte	'reserved_1FFC0',0
	.word	22555
	.byte	64,4,35,192,255,7,0,12
	.word	22651
	.byte	5
	.word	27749
	.byte	21
	.byte	'Ifx_Ssw_startCore',0,2,244,1,13,1,1,1,1,6
	.byte	'cpu',0,2,244,1,40
	.word	27754
	.byte	6
	.byte	'programCounter',0,2,244,1,58
	.word	299
	.byte	0,24
	.byte	'Ifx_Ssw_C_Init',0,2,250,1,13,1,1,1,1,21
	.byte	'Ifx_Ssw_serviceCpuWatchdog',0,2,138,2,13,1,1,1,1,6
	.byte	'watchdog',0,2,138,2,56
	.word	1056
	.byte	6
	.byte	'password',0,2,138,2,81
	.word	277
	.byte	0,21
	.byte	'Ifx_Ssw_serviceSafetyWatchdog',0,2,148,2,13,1,1,1,1,6
	.byte	'password',0,2,148,2,58
	.word	277
	.byte	0,19
	.word	1061
	.byte	20
	.word	1110
	.byte	3,0,19
	.word	1130
	.byte	3,0,19
	.word	1184
	.byte	20
	.word	1222
	.byte	20
	.word	1240
	.byte	3,0,19
	.word	1260
	.byte	20
	.word	1296
	.byte	20
	.word	1314
	.byte	3,0,19
	.word	1334
	.byte	3,0,19
	.word	1380
	.byte	20
	.word	1404
	.byte	20
	.word	1422
	.byte	14,25
	.word	174
	.byte	26
	.word	195
	.byte	0,3,0,0,8
	.byte	'_Ifx_SCU_WDTS_CON0_Bits',0,3,153,10,16,4,9
	.byte	'ENDINIT',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'LCK',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'PW',0,4
	.word	322
	.byte	14,16,2,35,0,9
	.byte	'REL',0,4
	.word	322
	.byte	16,0,2,35,0,0,10,3,215,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	28069
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_SCU_WDTS_CON1_Bits',0,3,162,10,16,4,9
	.byte	'CLRIRF',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'reserved_1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'IR0',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'DR',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'IR1',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'UR',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'PAR',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'TCR',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'TCTR',0,1
	.word	474
	.byte	7,0,2,35,1,9
	.byte	'reserved_16',0,2
	.word	277
	.byte	16,0,2,35,2,0,10,3,223,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	28203
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_SCU_WDTS_SR_Bits',0,3,178,10,16,4,9
	.byte	'AE',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'OE',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'IS0',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'DS',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'TO',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'IS1',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'US',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'PAS',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'TCS',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'TCT',0,1
	.word	474
	.byte	7,0,2,35,1,9
	.byte	'TIM',0,2
	.word	277
	.byte	16,0,2,35,2,0,10,3,231,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	28463
	.byte	4,2,35,0,0,8
	.byte	'_Ifx_SCU_WDTS',0,3,158,17,25,12,11
	.byte	'CON0',0
	.word	28163
	.byte	4,2,35,0,11
	.byte	'CON1',0
	.word	28423
	.byte	4,2,35,4,11
	.byte	'SR',0
	.word	28652
	.byte	4,2,35,8,0,12
	.word	28692
.L175:
	.byte	5
	.word	28753
	.byte	24
	.byte	'core0_main',0,5,107,13,1,1,1,1,27
	.byte	'__INDIRECT__',0,5,1,1,1,1,1,28,1,5
	.word	28802
	.byte	29
	.byte	'__codeptr',0,5,1,1
	.word	28804
	.byte	29
	.byte	'Ifx_UReg_8Bit',0,6,79,24
	.word	474
	.byte	29
	.byte	'Ifx_UReg_32Bit',0,6,81,24
	.word	299
	.byte	29
	.byte	'Ifx_SReg_32Bit',0,6,84,24
	.word	315
	.byte	8
	.byte	'_Ifx_SCU_ACCEN00_Bits',0,3,70,16,4,9
	.byte	'EN0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'EN1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'EN2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'EN3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'EN4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'EN5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'EN6',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'EN7',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'EN8',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'EN9',0,1
	.word	474
	.byte	1,6,2,35,1,9
	.byte	'EN10',0,1
	.word	474
	.byte	1,5,2,35,1,9
	.byte	'EN11',0,1
	.word	474
	.byte	1,4,2,35,1,9
	.byte	'EN12',0,1
	.word	474
	.byte	1,3,2,35,1,9
	.byte	'EN13',0,1
	.word	474
	.byte	1,2,2,35,1,9
	.byte	'EN14',0,1
	.word	474
	.byte	1,1,2,35,1,9
	.byte	'EN15',0,1
	.word	474
	.byte	1,0,2,35,1,9
	.byte	'EN16',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'EN17',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'EN18',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'EN19',0,1
	.word	474
	.byte	1,4,2,35,2,9
	.byte	'EN20',0,1
	.word	474
	.byte	1,3,2,35,2,9
	.byte	'EN21',0,1
	.word	474
	.byte	1,2,2,35,2,9
	.byte	'EN22',0,1
	.word	474
	.byte	1,1,2,35,2,9
	.byte	'EN23',0,1
	.word	474
	.byte	1,0,2,35,2,9
	.byte	'EN24',0,1
	.word	474
	.byte	1,7,2,35,3,9
	.byte	'EN25',0,1
	.word	474
	.byte	1,6,2,35,3,9
	.byte	'EN26',0,1
	.word	474
	.byte	1,5,2,35,3,9
	.byte	'EN27',0,1
	.word	474
	.byte	1,4,2,35,3,9
	.byte	'EN28',0,1
	.word	474
	.byte	1,3,2,35,3,9
	.byte	'EN29',0,1
	.word	474
	.byte	1,2,2,35,3,9
	.byte	'EN30',0,1
	.word	474
	.byte	1,1,2,35,3,9
	.byte	'EN31',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_ACCEN00_Bits',0,3,104,3
	.word	28895
	.byte	8
	.byte	'_Ifx_SCU_ACCEN01_Bits',0,3,107,16,4,9
	.byte	'reserved_0',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN01_Bits',0,3,110,3
	.word	29454
	.byte	8
	.byte	'_Ifx_SCU_ACCEN10_Bits',0,3,113,16,4,9
	.byte	'EN0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'EN1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'EN2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'EN3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'EN4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'EN5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'EN6',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'EN7',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'EN8',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'EN9',0,1
	.word	474
	.byte	1,6,2,35,1,9
	.byte	'EN10',0,1
	.word	474
	.byte	1,5,2,35,1,9
	.byte	'EN11',0,1
	.word	474
	.byte	1,4,2,35,1,9
	.byte	'EN12',0,1
	.word	474
	.byte	1,3,2,35,1,9
	.byte	'EN13',0,1
	.word	474
	.byte	1,2,2,35,1,9
	.byte	'EN14',0,1
	.word	474
	.byte	1,1,2,35,1,9
	.byte	'EN15',0,1
	.word	474
	.byte	1,0,2,35,1,9
	.byte	'EN16',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'EN17',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'EN18',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'EN19',0,1
	.word	474
	.byte	1,4,2,35,2,9
	.byte	'EN20',0,1
	.word	474
	.byte	1,3,2,35,2,9
	.byte	'EN21',0,1
	.word	474
	.byte	1,2,2,35,2,9
	.byte	'EN22',0,1
	.word	474
	.byte	1,1,2,35,2,9
	.byte	'EN23',0,1
	.word	474
	.byte	1,0,2,35,2,9
	.byte	'EN24',0,1
	.word	474
	.byte	1,7,2,35,3,9
	.byte	'EN25',0,1
	.word	474
	.byte	1,6,2,35,3,9
	.byte	'EN26',0,1
	.word	474
	.byte	1,5,2,35,3,9
	.byte	'EN27',0,1
	.word	474
	.byte	1,4,2,35,3,9
	.byte	'EN28',0,1
	.word	474
	.byte	1,3,2,35,3,9
	.byte	'EN29',0,1
	.word	474
	.byte	1,2,2,35,3,9
	.byte	'EN30',0,1
	.word	474
	.byte	1,1,2,35,3,9
	.byte	'EN31',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_ACCEN10_Bits',0,3,147,1,3
	.word	29533
	.byte	8
	.byte	'_Ifx_SCU_ACCEN11_Bits',0,3,150,1,16,4,9
	.byte	'reserved_0',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN11_Bits',0,3,153,1,3
	.word	30093
	.byte	8
	.byte	'_Ifx_SCU_ARSTDIS_Bits',0,3,156,1,16,4,9
	.byte	'STM0DIS',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'STM1DIS',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'STM2DIS',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'STM3DIS',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'STM4DIS',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'STM5DIS',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,1
	.word	474
	.byte	2,0,2,35,0,9
	.byte	'reserved_8',0,4
	.word	299
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_ARSTDIS_Bits',0,3,166,1,3
	.word	30174
	.byte	8
	.byte	'_Ifx_SCU_CCUCON0_Bits',0,3,169,1,16,4,9
	.byte	'STMDIV',0,1
	.word	474
	.byte	4,4,2,35,0,9
	.byte	'GTMDIV',0,1
	.word	474
	.byte	4,0,2,35,0,9
	.byte	'SRIDIV',0,1
	.word	474
	.byte	4,4,2,35,1,9
	.byte	'LPDIV',0,1
	.word	474
	.byte	3,1,2,35,1,9
	.byte	'reserved_15',0,1
	.word	474
	.byte	1,0,2,35,1,9
	.byte	'SPBDIV',0,1
	.word	474
	.byte	4,4,2,35,2,9
	.byte	'BBBDIV',0,1
	.word	474
	.byte	4,0,2,35,2,9
	.byte	'FSIDIV',0,1
	.word	474
	.byte	2,6,2,35,3,9
	.byte	'FSI2DIV',0,1
	.word	474
	.byte	2,4,2,35,3,9
	.byte	'CLKSEL',0,1
	.word	474
	.byte	2,2,2,35,3,9
	.byte	'UP',0,1
	.word	474
	.byte	1,1,2,35,3,9
	.byte	'LCK',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON0_Bits',0,3,183,1,3
	.word	30391
	.byte	8
	.byte	'_Ifx_SCU_CCUCON1_Bits',0,3,186,1,16,4,9
	.byte	'MCANDIV',0,1
	.word	474
	.byte	4,4,2,35,0,9
	.byte	'CLKSELMCAN',0,1
	.word	474
	.byte	2,2,2,35,0,9
	.byte	'reserved_6',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'PLL1DIVDIS',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'I2CDIV',0,1
	.word	474
	.byte	4,4,2,35,1,9
	.byte	'reserved_12',0,1
	.word	474
	.byte	4,0,2,35,1,9
	.byte	'MSCDIV',0,1
	.word	474
	.byte	4,4,2,35,2,9
	.byte	'CLKSELMSC',0,1
	.word	474
	.byte	2,2,2,35,2,9
	.byte	'reserved_22',0,1
	.word	474
	.byte	2,0,2,35,2,9
	.byte	'QSPIDIV',0,1
	.word	474
	.byte	4,4,2,35,3,9
	.byte	'CLKSELQSPI',0,1
	.word	474
	.byte	2,2,2,35,3,9
	.byte	'reserved_30',0,1
	.word	474
	.byte	1,1,2,35,3,9
	.byte	'LCK',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON1_Bits',0,3,201,1,3
	.word	30664
	.byte	8
	.byte	'_Ifx_SCU_CCUCON10_Bits',0,3,204,1,16,4,9
	.byte	'CPU4DIV',0,1
	.word	474
	.byte	6,2,2,35,0,9
	.byte	'reserved_6',0,4
	.word	299
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON10_Bits',0,3,208,1,3
	.word	30990
	.byte	8
	.byte	'_Ifx_SCU_CCUCON11_Bits',0,3,211,1,16,4,9
	.byte	'CPU5DIV',0,1
	.word	474
	.byte	6,2,2,35,0,9
	.byte	'reserved_6',0,4
	.word	299
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON11_Bits',0,3,215,1,3
	.word	31092
	.byte	8
	.byte	'_Ifx_SCU_CCUCON2_Bits',0,3,218,1,16,4,9
	.byte	'ASCLINFDIV',0,1
	.word	474
	.byte	4,4,2,35,0,9
	.byte	'reserved_4',0,1
	.word	474
	.byte	4,0,2,35,0,9
	.byte	'ASCLINSDIV',0,1
	.word	474
	.byte	4,4,2,35,1,9
	.byte	'CLKSELASCLINS',0,1
	.word	474
	.byte	2,2,2,35,1,9
	.byte	'reserved_14',0,4
	.word	299
	.byte	10,8,2,35,0,9
	.byte	'EBUPERON',0,1
	.word	474
	.byte	1,7,2,35,3,9
	.byte	'ERAYPERON',0,1
	.word	474
	.byte	1,6,2,35,3,9
	.byte	'HSPDMPERON',0,1
	.word	474
	.byte	1,5,2,35,3,9
	.byte	'reserved_27',0,1
	.word	474
	.byte	4,1,2,35,3,9
	.byte	'LCK',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON2_Bits',0,3,230,1,3
	.word	31194
	.byte	8
	.byte	'_Ifx_SCU_CCUCON3_Bits',0,3,233,1,16,4,9
	.byte	'PLL0MONEN',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'PLL1MONEN',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'PLL2MONEN',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'SPBMONEN',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'BACKMONEN',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'reserved_5',0,1
	.word	474
	.byte	3,0,2,35,0,9
	.byte	'PLL0MONTST',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'PLL1MONTST',0,1
	.word	474
	.byte	1,6,2,35,1,9
	.byte	'PLL2MONTST',0,1
	.word	474
	.byte	1,5,2,35,1,9
	.byte	'SPBMONTST',0,1
	.word	474
	.byte	1,4,2,35,1,9
	.byte	'BACKMONTST',0,1
	.word	474
	.byte	1,3,2,35,1,9
	.byte	'reserved_13',0,4
	.word	299
	.byte	11,8,2,35,0,9
	.byte	'reserved_24',0,1
	.word	474
	.byte	6,2,2,35,3,9
	.byte	'UP',0,1
	.word	474
	.byte	1,1,2,35,3,9
	.byte	'LCK',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON3_Bits',0,3,250,1,3
	.word	31468
	.byte	8
	.byte	'_Ifx_SCU_CCUCON4_Bits',0,3,253,1,16,4,9
	.byte	'LOTHR',0,2
	.word	277
	.byte	12,4,2,35,0,9
	.byte	'UPTHR',0,4
	.word	299
	.byte	12,8,2,35,0,9
	.byte	'MONEN',0,1
	.word	474
	.byte	1,7,2,35,3,9
	.byte	'MONTST',0,1
	.word	474
	.byte	1,6,2,35,3,9
	.byte	'reserved_26',0,1
	.word	474
	.byte	4,2,2,35,3,9
	.byte	'UP',0,1
	.word	474
	.byte	1,1,2,35,3,9
	.byte	'LCK',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON4_Bits',0,3,134,2,3
	.word	31837
	.byte	8
	.byte	'_Ifx_SCU_CCUCON5_Bits',0,3,137,2,16,4,9
	.byte	'GETHDIV',0,1
	.word	474
	.byte	4,4,2,35,0,9
	.byte	'MCANHDIV',0,1
	.word	474
	.byte	4,0,2,35,0,9
	.byte	'ADASDIV',0,1
	.word	474
	.byte	4,4,2,35,1,9
	.byte	'reserved_12',0,4
	.word	299
	.byte	18,2,2,35,0,9
	.byte	'UP',0,1
	.word	474
	.byte	1,1,2,35,3,9
	.byte	'LCK',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CCUCON5_Bits',0,3,145,2,3
	.word	32017
	.byte	8
	.byte	'_Ifx_SCU_CCUCON6_Bits',0,3,148,2,16,4,9
	.byte	'CPU0DIV',0,1
	.word	474
	.byte	6,2,2,35,0,9
	.byte	'reserved_6',0,4
	.word	299
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON6_Bits',0,3,152,2,3
	.word	32186
	.byte	8
	.byte	'_Ifx_SCU_CCUCON7_Bits',0,3,155,2,16,4,9
	.byte	'CPU1DIV',0,1
	.word	474
	.byte	6,2,2,35,0,9
	.byte	'reserved_6',0,4
	.word	299
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON7_Bits',0,3,159,2,3
	.word	32286
	.byte	8
	.byte	'_Ifx_SCU_CCUCON8_Bits',0,3,162,2,16,4,9
	.byte	'CPU2DIV',0,1
	.word	474
	.byte	6,2,2,35,0,9
	.byte	'reserved_6',0,4
	.word	299
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON8_Bits',0,3,166,2,3
	.word	32386
	.byte	8
	.byte	'_Ifx_SCU_CCUCON9_Bits',0,3,169,2,16,4,9
	.byte	'CPU3DIV',0,1
	.word	474
	.byte	6,2,2,35,0,9
	.byte	'reserved_6',0,4
	.word	299
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON9_Bits',0,3,173,2,3
	.word	32486
	.byte	8
	.byte	'_Ifx_SCU_CHIPID_Bits',0,3,176,2,16,4,9
	.byte	'CHREV',0,1
	.word	474
	.byte	6,2,2,35,0,9
	.byte	'CHTEC',0,1
	.word	474
	.byte	2,0,2,35,0,9
	.byte	'CHPK',0,1
	.word	474
	.byte	4,4,2,35,1,9
	.byte	'CHID',0,1
	.word	474
	.byte	4,0,2,35,1,9
	.byte	'EEA',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'UCODE',0,1
	.word	474
	.byte	7,0,2,35,2,9
	.byte	'FSIZE',0,1
	.word	474
	.byte	4,4,2,35,3,9
	.byte	'VART',0,1
	.word	474
	.byte	3,1,2,35,3,9
	.byte	'SEC',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_CHIPID_Bits',0,3,187,2,3
	.word	32586
	.byte	8
	.byte	'_Ifx_SCU_DTSCLIM_Bits',0,3,190,2,16,4,9
	.byte	'LOWER',0,2
	.word	277
	.byte	12,4,2,35,0,9
	.byte	'reserved_12',0,1
	.word	474
	.byte	1,3,2,35,1,9
	.byte	'BGPOK',0,1
	.word	474
	.byte	1,2,2,35,1,9
	.byte	'EN',0,1
	.word	474
	.byte	1,1,2,35,1,9
	.byte	'LLU',0,1
	.word	474
	.byte	1,0,2,35,1,9
	.byte	'UPPER',0,2
	.word	277
	.byte	12,4,2,35,2,9
	.byte	'INTEN',0,1
	.word	474
	.byte	1,3,2,35,3,9
	.byte	'reserved_29',0,1
	.word	474
	.byte	1,2,2,35,3,9
	.byte	'INT',0,1
	.word	474
	.byte	1,1,2,35,3,9
	.byte	'UOF',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_DTSCLIM_Bits',0,3,202,2,3
	.word	32789
	.byte	8
	.byte	'_Ifx_SCU_DTSCSTAT_Bits',0,3,205,2,16,4,9
	.byte	'RESULT',0,2
	.word	277
	.byte	12,4,2,35,0,9
	.byte	'reserved_12',0,4
	.word	299
	.byte	20,0,2,35,0,0,29
	.byte	'Ifx_SCU_DTSCSTAT_Bits',0,3,209,2,3
	.word	33021
	.byte	8
	.byte	'_Ifx_SCU_EICON0_Bits',0,3,212,2,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'ENDINIT',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EPW',0,4
	.word	322
	.byte	14,16,2,35,0,9
	.byte	'REL',0,4
	.word	322
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_SCU_EICON0_Bits',0,3,218,2,3
	.word	33123
	.byte	8
	.byte	'_Ifx_SCU_EICON1_Bits',0,3,221,2,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'reserved_1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'IR0',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'DR',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'IR1',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,4
	.word	299
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_EICON1_Bits',0,3,230,2,3
	.word	33251
	.byte	8
	.byte	'_Ifx_SCU_EICR_Bits',0,3,233,2,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	4,4,2,35,0,9
	.byte	'EXIS0',0,1
	.word	474
	.byte	3,1,2,35,0,9
	.byte	'reserved_7',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'FEN0',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'REN0',0,1
	.word	474
	.byte	1,6,2,35,1,9
	.byte	'LDEN0',0,1
	.word	474
	.byte	1,5,2,35,1,9
	.byte	'EIEN0',0,1
	.word	474
	.byte	1,4,2,35,1,9
	.byte	'INP0',0,1
	.word	474
	.byte	3,1,2,35,1,9
	.byte	'reserved_15',0,4
	.word	299
	.byte	5,12,2,35,0,9
	.byte	'EXIS1',0,1
	.word	474
	.byte	3,1,2,35,2,9
	.byte	'reserved_23',0,1
	.word	474
	.byte	1,0,2,35,2,9
	.byte	'FEN1',0,1
	.word	474
	.byte	1,7,2,35,3,9
	.byte	'REN1',0,1
	.word	474
	.byte	1,6,2,35,3,9
	.byte	'LDEN1',0,1
	.word	474
	.byte	1,5,2,35,3,9
	.byte	'EIEN1',0,1
	.word	474
	.byte	1,4,2,35,3,9
	.byte	'INP1',0,1
	.word	474
	.byte	3,1,2,35,3,9
	.byte	'reserved_31',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_EICR_Bits',0,3,252,2,3
	.word	33440
	.byte	8
	.byte	'_Ifx_SCU_EIFILT_Bits',0,3,255,2,16,4,9
	.byte	'FILRQ0A',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'FILRQ5A',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'FILRQ2A',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'FILRQ3A',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'FILRQ0C',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'FILRQ1C',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'FILRQ3C',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'FILRQ2C',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'FILRQ4A',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'FILRQ6A',0,1
	.word	474
	.byte	1,6,2,35,1,9
	.byte	'FILRQ1A',0,1
	.word	474
	.byte	1,5,2,35,1,9
	.byte	'FILRQ7A',0,1
	.word	474
	.byte	1,4,2,35,1,9
	.byte	'FILRQ6D',0,1
	.word	474
	.byte	1,3,2,35,1,9
	.byte	'FILRQ4D',0,1
	.word	474
	.byte	1,2,2,35,1,9
	.byte	'FILRQ2B',0,1
	.word	474
	.byte	1,1,2,35,1,9
	.byte	'FILRQ3B',0,1
	.word	474
	.byte	1,0,2,35,1,9
	.byte	'FILRQ7C',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'reserved_17',0,1
	.word	474
	.byte	7,0,2,35,2,9
	.byte	'FILTDIV',0,1
	.word	474
	.byte	4,4,2,35,3,9
	.byte	'DEPTH',0,1
	.word	474
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_EIFILT_Bits',0,3,149,3,3
	.word	33804
	.byte	8
	.byte	'_Ifx_SCU_EIFR_Bits',0,3,152,3,16,4,9
	.byte	'INTF0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'INTF1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'INTF2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'INTF3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'INTF4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'INTF5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'INTF6',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'INTF7',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'reserved_8',0,4
	.word	299
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_EIFR_Bits',0,3,163,3,3
	.word	34243
	.byte	8
	.byte	'_Ifx_SCU_EISR_Bits',0,3,166,3,16,4,9
	.byte	'AE',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'OE',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'IS0',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'DS',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'TO',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'IS1',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,2
	.word	277
	.byte	10,0,2,35,0,9
	.byte	'TIM',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_EISR_Bits',0,3,176,3,3
	.word	34454
	.byte	8
	.byte	'_Ifx_SCU_EMSR_Bits',0,3,179,3,16,4,9
	.byte	'POL',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'MODE',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'ENON',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'PSEL',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,2
	.word	277
	.byte	12,0,2,35,0,9
	.byte	'EMSF',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'SEMSF',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'reserved_18',0,2
	.word	277
	.byte	14,0,2,35,2,0,29
	.byte	'Ifx_SCU_EMSR_Bits',0,3,189,3,3
	.word	34630
	.byte	8
	.byte	'_Ifx_SCU_EMSSW_Bits',0,3,192,3,16,4,9
	.byte	'reserved_0',0,4
	.word	299
	.byte	24,8,2,35,0,9
	.byte	'EMSFM',0,1
	.word	474
	.byte	2,6,2,35,3,9
	.byte	'SEMSFM',0,1
	.word	474
	.byte	2,4,2,35,3,9
	.byte	'reserved_28',0,1
	.word	474
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_EMSSW_Bits',0,3,198,3,3
	.word	34824
	.byte	8
	.byte	'_Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,3,201,3,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	7,1,2,35,0,9
	.byte	'EDCON',0,2
	.word	277
	.byte	2,7,2,35,0,9
	.byte	'reserved_9',0,4
	.word	299
	.byte	23,0,2,35,0,0,29
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX_Bits',0,3,206,3,3
	.word	34959
	.byte	8
	.byte	'_Ifx_SCU_ESROCFG_Bits',0,3,209,3,16,4,9
	.byte	'ARI',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'ARC',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'reserved_2',0,4
	.word	299
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_ESROCFG_Bits',0,3,214,3,3
	.word	35095
	.byte	8
	.byte	'_Ifx_SCU_EXTCON_Bits',0,3,217,3,16,4,9
	.byte	'EN0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'reserved_1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'SEL0',0,1
	.word	474
	.byte	4,2,2,35,0,9
	.byte	'reserved_6',0,2
	.word	277
	.byte	10,0,2,35,0,9
	.byte	'EN1',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'NSEL',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'SEL1',0,1
	.word	474
	.byte	4,2,2,35,2,9
	.byte	'reserved_22',0,1
	.word	474
	.byte	2,0,2,35,2,9
	.byte	'DIV1',0,1
	.word	474
	.byte	8,0,2,35,3,0,29
	.byte	'Ifx_SCU_EXTCON_Bits',0,3,228,3,3
	.word	35206
	.byte	8
	.byte	'_Ifx_SCU_FDR_Bits',0,3,231,3,16,4,9
	.byte	'STEP',0,2
	.word	277
	.byte	10,6,2,35,0,9
	.byte	'reserved_10',0,1
	.word	474
	.byte	4,2,2,35,1,9
	.byte	'DM',0,1
	.word	474
	.byte	2,0,2,35,1,9
	.byte	'RESULT',0,2
	.word	277
	.byte	10,6,2,35,2,9
	.byte	'reserved_26',0,1
	.word	474
	.byte	5,1,2,35,3,9
	.byte	'DISCLK',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_FDR_Bits',0,3,239,3,3
	.word	35424
	.byte	8
	.byte	'_Ifx_SCU_FMR_Bits',0,3,242,3,16,4,9
	.byte	'FS0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'FS1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'FS2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'FS3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'FS4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'FS5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'FS6',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'FS7',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'reserved_8',0,1
	.word	474
	.byte	8,0,2,35,1,9
	.byte	'FC0',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'FC1',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'FC2',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'FC3',0,1
	.word	474
	.byte	1,4,2,35,2,9
	.byte	'FC4',0,1
	.word	474
	.byte	1,3,2,35,2,9
	.byte	'FC5',0,1
	.word	474
	.byte	1,2,2,35,2,9
	.byte	'FC6',0,1
	.word	474
	.byte	1,1,2,35,2,9
	.byte	'FC7',0,1
	.word	474
	.byte	1,0,2,35,2,9
	.byte	'reserved_24',0,1
	.word	474
	.byte	8,0,2,35,3,0,29
	.byte	'Ifx_SCU_FMR_Bits',0,3,134,4,3
	.word	35587
	.byte	8
	.byte	'_Ifx_SCU_ID_Bits',0,3,137,4,16,4,9
	.byte	'MODREV',0,1
	.word	474
	.byte	8,0,2,35,0,9
	.byte	'MODTYPE',0,1
	.word	474
	.byte	8,0,2,35,1,9
	.byte	'MODNUMBER',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_ID_Bits',0,3,142,4,3
	.word	35923
	.byte	8
	.byte	'_Ifx_SCU_IGCR_Bits',0,3,145,4,16,4,9
	.byte	'IPEN00',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'IPEN01',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'IPEN02',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'IPEN03',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'IPEN04',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'IPEN05',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'IPEN06',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'IPEN07',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'reserved_8',0,1
	.word	474
	.byte	5,3,2,35,1,9
	.byte	'GEEN0',0,1
	.word	474
	.byte	1,2,2,35,1,9
	.byte	'IGP0',0,1
	.word	474
	.byte	2,0,2,35,1,9
	.byte	'IPEN10',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'IPEN11',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'IPEN12',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'IPEN13',0,1
	.word	474
	.byte	1,4,2,35,2,9
	.byte	'IPEN14',0,1
	.word	474
	.byte	1,3,2,35,2,9
	.byte	'IPEN15',0,1
	.word	474
	.byte	1,2,2,35,2,9
	.byte	'IPEN16',0,1
	.word	474
	.byte	1,1,2,35,2,9
	.byte	'IPEN17',0,1
	.word	474
	.byte	1,0,2,35,2,9
	.byte	'reserved_24',0,1
	.word	474
	.byte	5,3,2,35,3,9
	.byte	'GEEN1',0,1
	.word	474
	.byte	1,2,2,35,3,9
	.byte	'IGP1',0,1
	.word	474
	.byte	2,0,2,35,3,0,29
	.byte	'Ifx_SCU_IGCR_Bits',0,3,169,4,3
	.word	36030
	.byte	8
	.byte	'_Ifx_SCU_IN_Bits',0,3,172,4,16,4,9
	.byte	'P0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'P1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'reserved_2',0,4
	.word	299
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_IN_Bits',0,3,177,4,3
	.word	36482
	.byte	8
	.byte	'_Ifx_SCU_IOCR_Bits',0,3,180,4,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	4,4,2,35,0,9
	.byte	'PC0',0,1
	.word	474
	.byte	4,0,2,35,0,9
	.byte	'reserved_8',0,1
	.word	474
	.byte	4,4,2,35,1,9
	.byte	'PC1',0,1
	.word	474
	.byte	4,0,2,35,1,9
	.byte	'reserved_16',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_IOCR_Bits',0,3,187,4,3
	.word	36581
	.byte	8
	.byte	'_Ifx_SCU_LBISTCTRL0_Bits',0,3,190,4,16,4,9
	.byte	'LBISTREQ',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'LBISTRES',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'PATTERNS',0,4
	.word	299
	.byte	18,12,2,35,0,9
	.byte	'reserved_20',0,2
	.word	277
	.byte	8,4,2,35,2,9
	.byte	'LBISTDONE',0,1
	.word	474
	.byte	1,3,2,35,3,9
	.byte	'reserved_29',0,1
	.word	474
	.byte	1,2,2,35,3,9
	.byte	'LBISTERRINJ',0,1
	.word	474
	.byte	1,1,2,35,3,9
	.byte	'LBISTREQRED',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_LBISTCTRL0_Bits',0,3,200,4,3
	.word	36731
	.byte	8
	.byte	'_Ifx_SCU_LBISTCTRL1_Bits',0,3,203,4,16,4,9
	.byte	'SEED',0,4
	.word	299
	.byte	19,13,2,35,0,9
	.byte	'reserved_19',0,1
	.word	474
	.byte	5,0,2,35,2,9
	.byte	'SPLITSH',0,1
	.word	474
	.byte	3,5,2,35,3,9
	.byte	'BODY',0,1
	.word	474
	.byte	1,4,2,35,3,9
	.byte	'LBISTFREQU',0,1
	.word	474
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_LBISTCTRL1_Bits',0,3,210,4,3
	.word	36969
	.byte	8
	.byte	'_Ifx_SCU_LBISTCTRL2_Bits',0,3,213,4,16,4,9
	.byte	'LENGTH',0,2
	.word	277
	.byte	12,4,2,35,0,9
	.byte	'reserved_12',0,4
	.word	299
	.byte	20,0,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL2_Bits',0,3,217,4,3
	.word	37130
	.byte	8
	.byte	'_Ifx_SCU_LBISTCTRL3_Bits',0,3,220,4,16,4,9
	.byte	'SIGNATURE',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL3_Bits',0,3,223,4,3
	.word	37236
	.byte	8
	.byte	'_Ifx_SCU_LCLCON0_Bits',0,3,226,4,16,4,9
	.byte	'LS2',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'reserved_1',0,2
	.word	277
	.byte	14,1,2,35,0,9
	.byte	'LSEN2',0,1
	.word	474
	.byte	1,0,2,35,1,9
	.byte	'LS0',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'reserved_17',0,2
	.word	277
	.byte	14,1,2,35,2,9
	.byte	'LSEN0',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_LCLCON0_Bits',0,3,234,4,3
	.word	37322
	.byte	8
	.byte	'_Ifx_SCU_LCLCON1_Bits',0,3,237,4,16,4,9
	.byte	'LS3',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'reserved_1',0,2
	.word	277
	.byte	14,1,2,35,0,9
	.byte	'LSEN3',0,1
	.word	474
	.byte	1,0,2,35,1,9
	.byte	'LS1',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'reserved_17',0,2
	.word	277
	.byte	14,1,2,35,2,9
	.byte	'LSEN1',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_LCLCON1_Bits',0,3,245,4,3
	.word	37490
	.byte	8
	.byte	'_Ifx_SCU_LCLTEST_Bits',0,3,248,4,16,4,9
	.byte	'LCLT0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'LCLT1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'LCLT2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'LCLT3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'LCLT4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'LCLT5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,2
	.word	277
	.byte	10,0,2,35,0,9
	.byte	'PLCLT0',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'PLCLT1',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'PLCLT2',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'PLCLT3',0,1
	.word	474
	.byte	1,4,2,35,2,9
	.byte	'PLCLT4',0,1
	.word	474
	.byte	1,3,2,35,2,9
	.byte	'PLCLT5',0,1
	.word	474
	.byte	1,2,2,35,2,9
	.byte	'reserved_22',0,2
	.word	277
	.byte	10,0,2,35,2,0,29
	.byte	'Ifx_SCU_LCLTEST_Bits',0,3,136,5,3
	.word	37658
	.byte	8
	.byte	'_Ifx_SCU_MANID_Bits',0,3,139,5,16,4,9
	.byte	'DEPT',0,1
	.word	474
	.byte	5,3,2,35,0,9
	.byte	'MANUF',0,2
	.word	277
	.byte	11,0,2,35,0,9
	.byte	'reserved_16',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_MANID_Bits',0,3,144,5,3
	.word	37972
	.byte	8
	.byte	'_Ifx_SCU_OMR_Bits',0,3,147,5,16,4,9
	.byte	'PS0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'PS1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'reserved_2',0,2
	.word	277
	.byte	14,0,2,35,0,9
	.byte	'PCL0',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'PCL1',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'reserved_18',0,2
	.word	277
	.byte	14,0,2,35,2,0,29
	.byte	'Ifx_SCU_OMR_Bits',0,3,155,5,3
	.word	38083
	.byte	8
	.byte	'_Ifx_SCU_OSCCON_Bits',0,3,158,5,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'PLLLV',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'OSCRES',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'GAINSEL',0,1
	.word	474
	.byte	2,3,2,35,0,9
	.byte	'MODE',0,1
	.word	474
	.byte	2,1,2,35,0,9
	.byte	'SHBY',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'PLLHV',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'HYSEN',0,1
	.word	474
	.byte	1,6,2,35,1,9
	.byte	'HYSCTL',0,1
	.word	474
	.byte	2,4,2,35,1,9
	.byte	'AMPCTL',0,1
	.word	474
	.byte	2,2,2,35,1,9
	.byte	'reserved_14',0,1
	.word	474
	.byte	2,0,2,35,1,9
	.byte	'OSCVAL',0,1
	.word	474
	.byte	5,3,2,35,2,9
	.byte	'reserved_21',0,1
	.word	474
	.byte	2,1,2,35,2,9
	.byte	'APREN',0,1
	.word	474
	.byte	1,0,2,35,2,9
	.byte	'CAP0EN',0,1
	.word	474
	.byte	1,7,2,35,3,9
	.byte	'CAP1EN',0,1
	.word	474
	.byte	1,6,2,35,3,9
	.byte	'CAP2EN',0,1
	.word	474
	.byte	1,5,2,35,3,9
	.byte	'CAP3EN',0,1
	.word	474
	.byte	1,4,2,35,3,9
	.byte	'reserved_28',0,1
	.word	474
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_OSCCON_Bits',0,3,179,5,3
	.word	38241
	.byte	8
	.byte	'_Ifx_SCU_OUT_Bits',0,3,182,5,16,4,9
	.byte	'P0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'P1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'reserved_2',0,4
	.word	299
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_OUT_Bits',0,3,187,5,3
	.word	38652
	.byte	8
	.byte	'_Ifx_SCU_OVCCON_Bits',0,3,190,5,16,4,9
	.byte	'CSEL0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'CSEL1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'CSEL2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'CSEL3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'CSEL4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'CSEL5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,2
	.word	277
	.byte	10,0,2,35,0,9
	.byte	'OVSTRT',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'OVSTP',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'DCINVAL',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'reserved_19',0,1
	.word	474
	.byte	5,0,2,35,2,9
	.byte	'OVCONF',0,1
	.word	474
	.byte	1,7,2,35,3,9
	.byte	'POVCONF',0,1
	.word	474
	.byte	1,6,2,35,3,9
	.byte	'reserved_26',0,1
	.word	474
	.byte	6,0,2,35,3,0,29
	.byte	'Ifx_SCU_OVCCON_Bits',0,3,206,5,3
	.word	38753
	.byte	8
	.byte	'_Ifx_SCU_OVCENABLE_Bits',0,3,209,5,16,4,9
	.byte	'OVEN0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'OVEN1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'OVEN2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'OVEN3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'OVEN4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'OVEN5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,4
	.word	299
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_OVCENABLE_Bits',0,3,218,5,3
	.word	39071
	.byte	8
	.byte	'_Ifx_SCU_PDISC_Bits',0,3,221,5,16,4,9
	.byte	'PDIS0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'PDIS1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'reserved_2',0,4
	.word	299
	.byte	30,0,2,35,0,0,29
	.byte	'Ifx_SCU_PDISC_Bits',0,3,226,5,3
	.word	39258
	.byte	8
	.byte	'_Ifx_SCU_PDR_Bits',0,3,229,5,16,4,9
	.byte	'PD0',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'PL0',0,1
	.word	474
	.byte	2,4,2,35,0,9
	.byte	'PD1',0,1
	.word	474
	.byte	2,2,2,35,0,9
	.byte	'PL1',0,1
	.word	474
	.byte	2,0,2,35,0,9
	.byte	'reserved_8',0,4
	.word	299
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_PDR_Bits',0,3,236,5,3
	.word	39369
	.byte	8
	.byte	'_Ifx_SCU_PDRR_Bits',0,3,239,5,16,4,9
	.byte	'PDR0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'PDR1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'PDR2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'PDR3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'PDR4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'PDR5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'PDR6',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'PDR7',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'reserved_8',0,4
	.word	299
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_PDRR_Bits',0,3,250,5,3
	.word	39502
	.byte	8
	.byte	'_Ifx_SCU_PERPLLCON0_Bits',0,3,253,5,16,4,9
	.byte	'DIVBY',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'reserved_1',0,2
	.word	277
	.byte	8,7,2,35,0,9
	.byte	'NDIV',0,1
	.word	474
	.byte	7,0,2,35,1,9
	.byte	'PLLPWD',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'reserved_17',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'RESLD',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'reserved_19',0,1
	.word	474
	.byte	5,0,2,35,2,9
	.byte	'PDIV',0,1
	.word	474
	.byte	3,5,2,35,3,9
	.byte	'reserved_27',0,1
	.word	474
	.byte	5,0,2,35,3,0,29
	.byte	'Ifx_SCU_PERPLLCON0_Bits',0,3,136,6,3
	.word	39705
	.byte	8
	.byte	'_Ifx_SCU_PERPLLCON1_Bits',0,3,139,6,16,4,9
	.byte	'K2DIV',0,1
	.word	474
	.byte	3,5,2,35,0,9
	.byte	'reserved_3',0,1
	.word	474
	.byte	5,0,2,35,0,9
	.byte	'K3DIV',0,1
	.word	474
	.byte	3,5,2,35,1,9
	.byte	'reserved_11',0,4
	.word	299
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PERPLLCON1_Bits',0,3,145,6,3
	.word	39945
	.byte	8
	.byte	'_Ifx_SCU_PERPLLSTAT_Bits',0,3,148,6,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'PWDSTAT',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'LOCK',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'reserved_3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'K3RDY',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'K2RDY',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'reserved_7',0,4
	.word	299
	.byte	25,0,2,35,0,0,29
	.byte	'Ifx_SCU_PERPLLSTAT_Bits',0,3,158,6,3
	.word	40089
	.byte	8
	.byte	'_Ifx_SCU_PMCSR0_Bits',0,3,161,6,16,4,9
	.byte	'REQSLP',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	6,0,2,35,0,9
	.byte	'PMST',0,1
	.word	474
	.byte	3,5,2,35,1,9
	.byte	'reserved_11',0,4
	.word	299
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR0_Bits',0,3,167,6,3
	.word	40311
	.byte	8
	.byte	'_Ifx_SCU_PMCSR1_Bits',0,3,170,6,16,4,9
	.byte	'REQSLP',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	6,0,2,35,0,9
	.byte	'PMST',0,1
	.word	474
	.byte	3,5,2,35,1,9
	.byte	'reserved_11',0,4
	.word	299
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR1_Bits',0,3,176,6,3
	.word	40447
	.byte	8
	.byte	'_Ifx_SCU_PMCSR2_Bits',0,3,179,6,16,4,9
	.byte	'REQSLP',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	6,0,2,35,0,9
	.byte	'PMST',0,1
	.word	474
	.byte	3,5,2,35,1,9
	.byte	'reserved_11',0,4
	.word	299
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR2_Bits',0,3,185,6,3
	.word	40583
	.byte	8
	.byte	'_Ifx_SCU_PMCSR3_Bits',0,3,188,6,16,4,9
	.byte	'REQSLP',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	6,0,2,35,0,9
	.byte	'PMST',0,1
	.word	474
	.byte	3,5,2,35,1,9
	.byte	'reserved_11',0,4
	.word	299
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR3_Bits',0,3,194,6,3
	.word	40719
	.byte	8
	.byte	'_Ifx_SCU_PMCSR4_Bits',0,3,197,6,16,4,9
	.byte	'REQSLP',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	6,0,2,35,0,9
	.byte	'PMST',0,1
	.word	474
	.byte	3,5,2,35,1,9
	.byte	'reserved_11',0,4
	.word	299
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR4_Bits',0,3,203,6,3
	.word	40855
	.byte	8
	.byte	'_Ifx_SCU_PMCSR5_Bits',0,3,206,6,16,4,9
	.byte	'REQSLP',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	6,0,2,35,0,9
	.byte	'PMST',0,1
	.word	474
	.byte	3,5,2,35,1,9
	.byte	'reserved_11',0,4
	.word	299
	.byte	21,0,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR5_Bits',0,3,212,6,3
	.word	40991
	.byte	8
	.byte	'_Ifx_SCU_PMSTAT0_Bits',0,3,215,6,16,4,9
	.byte	'CPU0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'CPU1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'CPU2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'CPU3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'CPU4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'CPU5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,2
	.word	277
	.byte	10,0,2,35,0,9
	.byte	'CPU0LS',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'CPU1LS',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'CPU2LS',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'CPU3LS',0,1
	.word	474
	.byte	1,4,2,35,2,9
	.byte	'reserved_20',0,2
	.word	277
	.byte	12,0,2,35,2,0,29
	.byte	'Ifx_SCU_PMSTAT0_Bits',0,3,229,6,3
	.word	41127
	.byte	8
	.byte	'_Ifx_SCU_PMSWCR1_Bits',0,3,232,6,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	8,0,2,35,0,9
	.byte	'CPUIDLSEL',0,1
	.word	474
	.byte	3,5,2,35,1,9
	.byte	'reserved_11',0,1
	.word	474
	.byte	1,4,2,35,1,9
	.byte	'IRADIS',0,1
	.word	474
	.byte	1,3,2,35,1,9
	.byte	'reserved_13',0,4
	.word	299
	.byte	11,8,2,35,0,9
	.byte	'CPUSEL',0,1
	.word	474
	.byte	3,5,2,35,3,9
	.byte	'STBYEVEN',0,1
	.word	474
	.byte	1,4,2,35,3,9
	.byte	'STBYEV',0,1
	.word	474
	.byte	3,1,2,35,3,9
	.byte	'reserved_31',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMSWCR1_Bits',0,3,243,6,3
	.word	41399
	.byte	8
	.byte	'_Ifx_SCU_PMTRCSR0_Bits',0,3,246,6,16,4,9
	.byte	'LJTEN',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'LJTOVEN',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'LJTOVIEN',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'LJTSTRT',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'LJTSTP',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'LJTCLR',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,2
	.word	277
	.byte	6,4,2,35,0,9
	.byte	'SDSTEP',0,1
	.word	474
	.byte	4,0,2,35,1,9
	.byte	'VDTEN',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'VDTOVEN',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'VDTOVIEN',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'VDTSTRT',0,1
	.word	474
	.byte	1,4,2,35,2,9
	.byte	'VDTSTP',0,1
	.word	474
	.byte	1,3,2,35,2,9
	.byte	'VDTCLR',0,1
	.word	474
	.byte	1,2,2,35,2,9
	.byte	'reserved_22',0,2
	.word	277
	.byte	7,3,2,35,2,9
	.byte	'LPSLPEN',0,1
	.word	474
	.byte	1,2,2,35,3,9
	.byte	'reserved_30',0,1
	.word	474
	.byte	2,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMTRCSR0_Bits',0,3,137,7,3
	.word	41644
	.byte	8
	.byte	'_Ifx_SCU_PMTRCSR1_Bits',0,3,140,7,16,4,9
	.byte	'LJTCV',0,2
	.word	277
	.byte	16,0,2,35,0,9
	.byte	'VDTCV',0,2
	.word	277
	.byte	10,6,2,35,2,9
	.byte	'reserved_26',0,1
	.word	474
	.byte	6,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMTRCSR1_Bits',0,3,145,7,3
	.word	42032
	.byte	8
	.byte	'_Ifx_SCU_PMTRCSR2_Bits',0,3,148,7,16,4,9
	.byte	'LDJMPREQ',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	2,4,2,35,0,9
	.byte	'LJTRUN',0,1
	.word	474
	.byte	2,2,2,35,0,9
	.byte	'reserved_6',0,1
	.word	474
	.byte	2,0,2,35,0,9
	.byte	'LJTOV',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'reserved_9',0,1
	.word	474
	.byte	3,4,2,35,1,9
	.byte	'LJTOVCLR',0,1
	.word	474
	.byte	1,3,2,35,1,9
	.byte	'reserved_13',0,1
	.word	474
	.byte	3,0,2,35,1,9
	.byte	'LJTCNT',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_PMTRCSR2_Bits',0,3,159,7,3
	.word	42150
	.byte	8
	.byte	'_Ifx_SCU_PMTRCSR3_Bits',0,3,162,7,16,4,9
	.byte	'VDROOPREQ',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	2,4,2,35,0,9
	.byte	'VDTRUN',0,1
	.word	474
	.byte	2,2,2,35,0,9
	.byte	'reserved_6',0,1
	.word	474
	.byte	2,0,2,35,0,9
	.byte	'VDTOV',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'reserved_9',0,1
	.word	474
	.byte	3,4,2,35,1,9
	.byte	'VDTOVCLR',0,1
	.word	474
	.byte	1,3,2,35,1,9
	.byte	'reserved_13',0,1
	.word	474
	.byte	3,0,2,35,1,9
	.byte	'VDTCNT',0,2
	.word	277
	.byte	10,6,2,35,2,9
	.byte	'reserved_26',0,1
	.word	474
	.byte	6,0,2,35,3,0,29
	.byte	'Ifx_SCU_PMTRCSR3_Bits',0,3,174,7,3
	.word	42393
	.byte	8
	.byte	'_Ifx_SCU_RSTCON_Bits',0,3,177,7,16,4,9
	.byte	'ESR0',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'ESR1',0,1
	.word	474
	.byte	2,4,2,35,0,9
	.byte	'reserved_4',0,1
	.word	474
	.byte	2,2,2,35,0,9
	.byte	'SMU',0,1
	.word	474
	.byte	2,0,2,35,0,9
	.byte	'SW',0,1
	.word	474
	.byte	2,6,2,35,1,9
	.byte	'STM0',0,1
	.word	474
	.byte	2,4,2,35,1,9
	.byte	'STM1',0,1
	.word	474
	.byte	2,2,2,35,1,9
	.byte	'STM2',0,1
	.word	474
	.byte	2,0,2,35,1,9
	.byte	'STM3',0,1
	.word	474
	.byte	2,6,2,35,2,9
	.byte	'STM4',0,1
	.word	474
	.byte	2,4,2,35,2,9
	.byte	'STM5',0,1
	.word	474
	.byte	2,2,2,35,2,9
	.byte	'reserved_22',0,2
	.word	277
	.byte	10,0,2,35,2,0,29
	.byte	'Ifx_SCU_RSTCON_Bits',0,3,191,7,3
	.word	42660
	.byte	8
	.byte	'_Ifx_SCU_RSTCON2_Bits',0,3,194,7,16,4,9
	.byte	'FRTO',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'CLRC',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'reserved_3',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'reserved_5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'CSSX',0,2
	.word	277
	.byte	6,3,2,35,0,9
	.byte	'reserved_13',0,1
	.word	474
	.byte	1,2,2,35,1,9
	.byte	'reserved_14',0,1
	.word	474
	.byte	1,1,2,35,1,9
	.byte	'reserved_15',0,1
	.word	474
	.byte	1,0,2,35,1,9
	.byte	'USRINFO',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_RSTCON2_Bits',0,3,208,7,3
	.word	42919
	.byte	8
	.byte	'_Ifx_SCU_RSTCON3_Bits',0,3,211,7,16,4,9
	.byte	'reserved_0',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_RSTCON3_Bits',0,3,214,7,3
	.word	43224
	.byte	8
	.byte	'_Ifx_SCU_RSTSTAT_Bits',0,3,217,7,16,4,9
	.byte	'ESR0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'ESR1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'SMU',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'SW',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'STM0',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'STM1',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'STM2',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'STM3',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'STM4',0,1
	.word	474
	.byte	1,6,2,35,1,9
	.byte	'STM5',0,1
	.word	474
	.byte	1,5,2,35,1,9
	.byte	'reserved_11',0,1
	.word	474
	.byte	5,0,2,35,1,9
	.byte	'PORST',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'reserved_17',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'CB0',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'CB1',0,1
	.word	474
	.byte	1,4,2,35,2,9
	.byte	'CB3',0,1
	.word	474
	.byte	1,3,2,35,2,9
	.byte	'reserved_21',0,1
	.word	474
	.byte	1,2,2,35,2,9
	.byte	'reserved_22',0,1
	.word	474
	.byte	1,1,2,35,2,9
	.byte	'EVRC',0,1
	.word	474
	.byte	1,0,2,35,2,9
	.byte	'EVR33',0,1
	.word	474
	.byte	1,7,2,35,3,9
	.byte	'SWD',0,1
	.word	474
	.byte	1,6,2,35,3,9
	.byte	'HSMS',0,1
	.word	474
	.byte	1,5,2,35,3,9
	.byte	'HSMA',0,1
	.word	474
	.byte	1,4,2,35,3,9
	.byte	'STBYR',0,1
	.word	474
	.byte	1,3,2,35,3,9
	.byte	'LBPORST',0,1
	.word	474
	.byte	1,2,2,35,3,9
	.byte	'LBTERM',0,1
	.word	474
	.byte	1,1,2,35,3,9
	.byte	'reserved_31',0,1
	.word	474
	.byte	1,0,2,35,3,0,29
	.byte	'Ifx_SCU_RSTSTAT_Bits',0,3,247,7,3
	.word	43305
	.byte	8
	.byte	'_Ifx_SCU_SEICON0_Bits',0,3,250,7,16,4,9
	.byte	'reserved_0',0,4
	.word	322
	.byte	1,31,2,35,0,9
	.byte	'ENDINIT',0,4
	.word	322
	.byte	1,30,2,35,0,9
	.byte	'EPW',0,4
	.word	322
	.byte	14,16,2,35,0,9
	.byte	'REL',0,4
	.word	322
	.byte	16,0,2,35,0,0,29
	.byte	'Ifx_SCU_SEICON0_Bits',0,3,128,8,3
	.word	43854
	.byte	8
	.byte	'_Ifx_SCU_SEICON1_Bits',0,3,131,8,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'reserved_1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'IR0',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'DR',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'IR1',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,4
	.word	299
	.byte	26,0,2,35,0,0,29
	.byte	'Ifx_SCU_SEICON1_Bits',0,3,140,8,3
	.word	43984
	.byte	8
	.byte	'_Ifx_SCU_SEISR_Bits',0,3,143,8,16,4,9
	.byte	'AE',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'OE',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'IS0',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'DS',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'TO',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'IS1',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,2
	.word	277
	.byte	10,0,2,35,0,9
	.byte	'TIM',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_SEISR_Bits',0,3,153,8,3
	.word	44175
	.byte	8
	.byte	'_Ifx_SCU_STCON_Bits',0,3,156,8,16,4,9
	.byte	'reserved_0',0,2
	.word	277
	.byte	13,3,2,35,0,9
	.byte	'SFCBAE',0,1
	.word	474
	.byte	1,2,2,35,1,9
	.byte	'CFCBAE',0,1
	.word	474
	.byte	1,1,2,35,1,9
	.byte	'STP',0,1
	.word	474
	.byte	1,0,2,35,1,9
	.byte	'reserved_16',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_STCON_Bits',0,3,163,8,3
	.word	44353
	.byte	8
	.byte	'_Ifx_SCU_STMEM1_Bits',0,3,166,8,16,4,9
	.byte	'MEM',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM1_Bits',0,3,169,8,3
	.word	44504
	.byte	8
	.byte	'_Ifx_SCU_STMEM2_Bits',0,3,172,8,16,4,9
	.byte	'MEM',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM2_Bits',0,3,175,8,3
	.word	44576
	.byte	8
	.byte	'_Ifx_SCU_STMEM3_Bits',0,3,178,8,16,4,9
	.byte	'MEM',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM3_Bits',0,3,181,8,3
	.word	44648
	.byte	8
	.byte	'_Ifx_SCU_STMEM4_Bits',0,3,184,8,16,4,9
	.byte	'MEM',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM4_Bits',0,3,187,8,3
	.word	44720
	.byte	8
	.byte	'_Ifx_SCU_STMEM5_Bits',0,3,190,8,16,4,9
	.byte	'MEM',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM5_Bits',0,3,193,8,3
	.word	44792
	.byte	8
	.byte	'_Ifx_SCU_STMEM6_Bits',0,3,196,8,16,4,9
	.byte	'MEM',0,4
	.word	299
	.byte	32,0,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM6_Bits',0,3,199,8,3
	.word	44864
	.byte	8
	.byte	'_Ifx_SCU_STSTAT_Bits',0,3,202,8,16,4,9
	.byte	'HWCFG',0,1
	.word	474
	.byte	8,0,2,35,0,9
	.byte	'FTM',0,1
	.word	474
	.byte	7,1,2,35,1,9
	.byte	'MODE',0,1
	.word	474
	.byte	1,0,2,35,1,9
	.byte	'FCBAE',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'LUDIS',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'reserved_18',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'TRSTL',0,1
	.word	474
	.byte	1,4,2,35,2,9
	.byte	'SPDEN',0,1
	.word	474
	.byte	1,3,2,35,2,9
	.byte	'reserved_21',0,1
	.word	474
	.byte	1,2,2,35,2,9
	.byte	'reserved_22',0,1
	.word	474
	.byte	1,1,2,35,2,9
	.byte	'reserved_23',0,1
	.word	474
	.byte	1,0,2,35,2,9
	.byte	'RAMINT',0,1
	.word	474
	.byte	1,7,2,35,3,9
	.byte	'reserved_25',0,1
	.word	474
	.byte	3,4,2,35,3,9
	.byte	'reserved_28',0,1
	.word	474
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_STSTAT_Bits',0,3,218,8,3
	.word	44936
	.byte	8
	.byte	'_Ifx_SCU_SWAPCTRL_Bits',0,3,221,8,16,4,9
	.byte	'ADDRCFG',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'SPARE',0,2
	.word	277
	.byte	14,0,2,35,0,9
	.byte	'reserved_16',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_SWAPCTRL_Bits',0,3,226,8,3
	.word	45265
	.byte	8
	.byte	'_Ifx_SCU_SWRSTCON_Bits',0,3,229,8,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'SWRSTREQ',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'reserved_2',0,1
	.word	474
	.byte	6,0,2,35,0,9
	.byte	'reserved_8',0,1
	.word	474
	.byte	8,0,2,35,1,9
	.byte	'reserved_16',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_SWRSTCON_Bits',0,3,236,8,3
	.word	45385
	.byte	8
	.byte	'_Ifx_SCU_SYSCON_Bits',0,3,239,8,16,4,9
	.byte	'CCTRIG0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'reserved_1',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'RAMINTM',0,1
	.word	474
	.byte	2,4,2,35,0,9
	.byte	'SETLUDIS',0,1
	.word	474
	.byte	1,3,2,35,0,9
	.byte	'reserved_5',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'reserved_7',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'DDC',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'reserved_9',0,1
	.word	474
	.byte	7,0,2,35,1,9
	.byte	'reserved_16',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_SYSCON_Bits',0,3,251,8,3
	.word	45555
	.byte	8
	.byte	'_Ifx_SCU_SYSPLLCON0_Bits',0,3,254,8,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	2,6,2,35,0,9
	.byte	'MODEN',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'reserved_3',0,2
	.word	277
	.byte	6,7,2,35,0,9
	.byte	'NDIV',0,1
	.word	474
	.byte	7,0,2,35,1,9
	.byte	'PLLPWD',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'reserved_17',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'RESLD',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'reserved_19',0,1
	.word	474
	.byte	5,0,2,35,2,9
	.byte	'PDIV',0,1
	.word	474
	.byte	3,5,2,35,3,9
	.byte	'reserved_27',0,1
	.word	474
	.byte	3,2,2,35,3,9
	.byte	'INSEL',0,1
	.word	474
	.byte	2,0,2,35,3,0,29
	.byte	'Ifx_SCU_SYSPLLCON0_Bits',0,3,139,9,3
	.word	45818
	.byte	8
	.byte	'_Ifx_SCU_SYSPLLCON1_Bits',0,3,142,9,16,4,9
	.byte	'K2DIV',0,1
	.word	474
	.byte	3,5,2,35,0,9
	.byte	'reserved_3',0,4
	.word	299
	.byte	29,0,2,35,0,0,29
	.byte	'Ifx_SCU_SYSPLLCON1_Bits',0,3,146,9,3
	.word	46097
	.byte	8
	.byte	'_Ifx_SCU_SYSPLLCON2_Bits',0,3,149,9,16,4,9
	.byte	'MODCFG',0,2
	.word	277
	.byte	16,0,2,35,0,9
	.byte	'reserved_16',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_SYSPLLCON2_Bits',0,3,153,9,3
	.word	46201
	.byte	8
	.byte	'_Ifx_SCU_SYSPLLSTAT_Bits',0,3,156,9,16,4,9
	.byte	'reserved_0',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'PWDSTAT',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'LOCK',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'reserved_3',0,1
	.word	474
	.byte	2,3,2,35,0,9
	.byte	'K2RDY',0,1
	.word	474
	.byte	1,2,2,35,0,9
	.byte	'reserved_6',0,1
	.word	474
	.byte	1,1,2,35,0,9
	.byte	'MODRUN',0,1
	.word	474
	.byte	1,0,2,35,0,9
	.byte	'reserved_8',0,4
	.word	299
	.byte	24,0,2,35,0,0,29
	.byte	'Ifx_SCU_SYSPLLSTAT_Bits',0,3,166,9,3
	.word	46307
	.byte	8
	.byte	'_Ifx_SCU_TRAPCLR_Bits',0,3,169,9,16,4,9
	.byte	'ESR0T',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'ESR1T',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'TRAP2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'SMUT',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,4
	.word	299
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPCLR_Bits',0,3,176,9,3
	.word	46530
	.byte	8
	.byte	'_Ifx_SCU_TRAPDIS0_Bits',0,3,179,9,16,4,9
	.byte	'CPU0ESR0T',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'CPU0ESR1T',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'CPU0TRAP2T',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'CPU0SMUT',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,1
	.word	474
	.byte	4,0,2,35,0,9
	.byte	'CPU1ESR0T',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'CPU1ESR1T',0,1
	.word	474
	.byte	1,6,2,35,1,9
	.byte	'CPU1TRAP2T',0,1
	.word	474
	.byte	1,5,2,35,1,9
	.byte	'CPU1SMUT',0,1
	.word	474
	.byte	1,4,2,35,1,9
	.byte	'reserved_12',0,1
	.word	474
	.byte	4,0,2,35,1,9
	.byte	'CPU2ESR0T',0,1
	.word	474
	.byte	1,7,2,35,2,9
	.byte	'CPU2ESR1T',0,1
	.word	474
	.byte	1,6,2,35,2,9
	.byte	'CPU2TRAP2T',0,1
	.word	474
	.byte	1,5,2,35,2,9
	.byte	'CPU2SMUT',0,1
	.word	474
	.byte	1,4,2,35,2,9
	.byte	'reserved_20',0,1
	.word	474
	.byte	4,0,2,35,2,9
	.byte	'CPU3ESR0T',0,1
	.word	474
	.byte	1,7,2,35,3,9
	.byte	'CPU3ESR1T',0,1
	.word	474
	.byte	1,6,2,35,3,9
	.byte	'CPU3TRAP2T',0,1
	.word	474
	.byte	1,5,2,35,3,9
	.byte	'CPU3SMUT',0,1
	.word	474
	.byte	1,4,2,35,3,9
	.byte	'reserved_28',0,1
	.word	474
	.byte	4,0,2,35,3,0,29
	.byte	'Ifx_SCU_TRAPDIS0_Bits',0,3,201,9,3
	.word	46678
	.byte	8
	.byte	'_Ifx_SCU_TRAPDIS1_Bits',0,3,204,9,16,4,9
	.byte	'CPU4ESR0T',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'CPU4ESR1T',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'CPU4TRAP2T',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'CPU4SMUT',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,1
	.word	474
	.byte	4,0,2,35,0,9
	.byte	'CPU5ESR0T',0,1
	.word	474
	.byte	1,7,2,35,1,9
	.byte	'CPU5ESR1T',0,1
	.word	474
	.byte	1,6,2,35,1,9
	.byte	'CPU5TRAP2T',0,1
	.word	474
	.byte	1,5,2,35,1,9
	.byte	'CPU5SMUT',0,1
	.word	474
	.byte	1,4,2,35,1,9
	.byte	'reserved_12',0,1
	.word	474
	.byte	4,0,2,35,1,9
	.byte	'reserved_16',0,2
	.word	277
	.byte	16,0,2,35,2,0,29
	.byte	'Ifx_SCU_TRAPDIS1_Bits',0,3,217,9,3
	.word	47166
	.byte	8
	.byte	'_Ifx_SCU_TRAPSET_Bits',0,3,220,9,16,4,9
	.byte	'ESR0T',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'ESR1T',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'TRAP2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'SMUT',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,4
	.word	299
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSET_Bits',0,3,227,9,3
	.word	47463
	.byte	8
	.byte	'_Ifx_SCU_TRAPSTAT_Bits',0,3,230,9,16,4,9
	.byte	'ESR0T',0,1
	.word	474
	.byte	1,7,2,35,0,9
	.byte	'ESR1T',0,1
	.word	474
	.byte	1,6,2,35,0,9
	.byte	'TRAP2',0,1
	.word	474
	.byte	1,5,2,35,0,9
	.byte	'SMUT',0,1
	.word	474
	.byte	1,4,2,35,0,9
	.byte	'reserved_4',0,4
	.word	299
	.byte	28,0,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSTAT_Bits',0,3,237,9,3
	.word	47611
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_CON0_Bits',0,3,246,9,3
	.word	338
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_CON1_Bits',0,3,134,10,3
	.word	491
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_SR_Bits',0,3,150,10,3
	.word	757
	.byte	29
	.byte	'Ifx_SCU_WDTS_CON0_Bits',0,3,159,10,3
	.word	28069
	.byte	29
	.byte	'Ifx_SCU_WDTS_CON1_Bits',0,3,175,10,3
	.word	28203
	.byte	29
	.byte	'Ifx_SCU_WDTS_SR_Bits',0,3,191,10,3
	.word	28463
	.byte	10,3,199,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	28895
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN00',0,3,204,10,3
	.word	47955
	.byte	10,3,207,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	29454
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN01',0,3,212,10,3
	.word	48020
	.byte	10,3,215,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	29533
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN10',0,3,220,10,3
	.word	48085
	.byte	10,3,223,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	30093
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ACCEN11',0,3,228,10,3
	.word	48150
	.byte	10,3,231,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	30174
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ARSTDIS',0,3,236,10,3
	.word	48215
	.byte	10,3,239,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	30391
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON0',0,3,244,10,3
	.word	48280
	.byte	10,3,247,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	30664
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON1',0,3,252,10,3
	.word	48345
	.byte	10,3,255,10,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	30990
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON10',0,3,132,11,3
	.word	48410
	.byte	10,3,135,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	31092
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON11',0,3,140,11,3
	.word	48476
	.byte	10,3,143,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	31194
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON2',0,3,148,11,3
	.word	48542
	.byte	10,3,151,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	31468
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON3',0,3,156,11,3
	.word	48607
	.byte	10,3,159,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	31837
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON4',0,3,164,11,3
	.word	48672
	.byte	10,3,167,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	32017
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON5',0,3,172,11,3
	.word	48737
	.byte	10,3,175,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	32186
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON6',0,3,180,11,3
	.word	48802
	.byte	10,3,183,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	32286
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON7',0,3,188,11,3
	.word	48867
	.byte	10,3,191,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	32386
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON8',0,3,196,11,3
	.word	48932
	.byte	10,3,199,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	32486
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CCUCON9',0,3,204,11,3
	.word	48997
	.byte	10,3,207,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	32586
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_CHIPID',0,3,212,11,3
	.word	49062
	.byte	10,3,215,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	32789
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_DTSCLIM',0,3,220,11,3
	.word	49126
	.byte	10,3,223,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	33021
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_DTSCSTAT',0,3,228,11,3
	.word	49191
	.byte	10,3,231,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	33123
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EICON0',0,3,236,11,3
	.word	49257
	.byte	10,3,239,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	33251
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EICON1',0,3,244,11,3
	.word	49321
	.byte	10,3,247,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	33440
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EICR',0,3,252,11,3
	.word	49385
	.byte	10,3,255,11,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	33804
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EIFILT',0,3,132,12,3
	.word	49447
	.byte	10,3,135,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	34243
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EIFR',0,3,140,12,3
	.word	49511
	.byte	10,3,143,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	34454
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EISR',0,3,148,12,3
	.word	49573
	.byte	10,3,151,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	34630
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EMSR',0,3,156,12,3
	.word	49635
	.byte	10,3,159,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	34824
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EMSSW',0,3,164,12,3
	.word	49697
	.byte	10,3,167,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	34959
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ESRCFGX_ESRCFGX',0,3,172,12,3
	.word	49760
	.byte	10,3,175,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	35095
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ESROCFG',0,3,180,12,3
	.word	49833
	.byte	10,3,183,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	35206
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_EXTCON',0,3,188,12,3
	.word	49898
	.byte	10,3,191,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	35424
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_FDR',0,3,196,12,3
	.word	49962
	.byte	10,3,199,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	35587
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_FMR',0,3,204,12,3
	.word	50023
	.byte	10,3,207,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	35923
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_ID',0,3,212,12,3
	.word	50084
	.byte	10,3,215,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	36030
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_IGCR',0,3,220,12,3
	.word	50144
	.byte	10,3,223,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	36482
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_IN',0,3,228,12,3
	.word	50206
	.byte	10,3,231,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	36581
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_IOCR',0,3,236,12,3
	.word	50266
	.byte	10,3,239,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	36731
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL0',0,3,244,12,3
	.word	50328
	.byte	10,3,247,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	36969
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL1',0,3,252,12,3
	.word	50396
	.byte	10,3,255,12,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	37130
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL2',0,3,132,13,3
	.word	50464
	.byte	10,3,135,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	37236
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LBISTCTRL3',0,3,140,13,3
	.word	50532
	.byte	10,3,143,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	37322
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LCLCON0',0,3,148,13,3
	.word	50600
	.byte	10,3,151,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	37490
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LCLCON1',0,3,156,13,3
	.word	50665
	.byte	10,3,159,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	37658
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_LCLTEST',0,3,164,13,3
	.word	50730
	.byte	10,3,167,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	37972
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_MANID',0,3,172,13,3
	.word	50795
	.byte	10,3,175,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	38083
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OMR',0,3,180,13,3
	.word	50858
	.byte	10,3,183,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	38241
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OSCCON',0,3,188,13,3
	.word	50919
	.byte	10,3,191,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	38652
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OUT',0,3,196,13,3
	.word	50983
	.byte	10,3,199,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	38753
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OVCCON',0,3,204,13,3
	.word	51044
	.byte	10,3,207,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	39071
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_OVCENABLE',0,3,212,13,3
	.word	51108
	.byte	10,3,215,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	39258
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PDISC',0,3,220,13,3
	.word	51175
	.byte	10,3,223,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	39369
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PDR',0,3,228,13,3
	.word	51238
	.byte	10,3,231,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	39502
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PDRR',0,3,236,13,3
	.word	51299
	.byte	10,3,239,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	39705
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PERPLLCON0',0,3,244,13,3
	.word	51361
	.byte	10,3,247,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	39945
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PERPLLCON1',0,3,252,13,3
	.word	51429
	.byte	10,3,255,13,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	40089
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PERPLLSTAT',0,3,132,14,3
	.word	51497
	.byte	10,3,135,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	40311
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR0',0,3,140,14,3
	.word	51565
	.byte	10,3,143,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	40447
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR1',0,3,148,14,3
	.word	51629
	.byte	10,3,151,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	40583
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR2',0,3,156,14,3
	.word	51693
	.byte	10,3,159,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	40719
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR3',0,3,164,14,3
	.word	51757
	.byte	10,3,167,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	40855
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR4',0,3,172,14,3
	.word	51821
	.byte	10,3,175,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	40991
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMCSR5',0,3,180,14,3
	.word	51885
	.byte	10,3,183,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	41127
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSTAT0',0,3,188,14,3
	.word	51949
	.byte	10,3,191,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	41399
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMSWCR1',0,3,196,14,3
	.word	52014
	.byte	10,3,199,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	41644
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMTRCSR0',0,3,204,14,3
	.word	52079
	.byte	10,3,207,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	42032
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMTRCSR1',0,3,212,14,3
	.word	52145
	.byte	10,3,215,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	42150
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMTRCSR2',0,3,220,14,3
	.word	52211
	.byte	10,3,223,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	42393
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_PMTRCSR3',0,3,228,14,3
	.word	52277
	.byte	10,3,231,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	42660
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTCON',0,3,236,14,3
	.word	52343
	.byte	10,3,239,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	42919
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTCON2',0,3,244,14,3
	.word	52407
	.byte	10,3,247,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	43224
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTCON3',0,3,252,14,3
	.word	52472
	.byte	10,3,255,14,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	43305
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_RSTSTAT',0,3,132,15,3
	.word	52537
	.byte	10,3,135,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	43854
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SEICON0',0,3,140,15,3
	.word	52602
	.byte	10,3,143,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	43984
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SEICON1',0,3,148,15,3
	.word	52667
	.byte	10,3,151,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	44175
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SEISR',0,3,156,15,3
	.word	52732
	.byte	10,3,159,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	44353
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STCON',0,3,164,15,3
	.word	52795
	.byte	10,3,167,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	44504
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM1',0,3,172,15,3
	.word	52858
	.byte	10,3,175,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	44576
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM2',0,3,180,15,3
	.word	52922
	.byte	10,3,183,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	44648
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM3',0,3,188,15,3
	.word	52986
	.byte	10,3,191,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	44720
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM4',0,3,196,15,3
	.word	53050
	.byte	10,3,199,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	44792
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM5',0,3,204,15,3
	.word	53114
	.byte	10,3,207,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	44864
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STMEM6',0,3,212,15,3
	.word	53178
	.byte	10,3,215,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	44936
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_STSTAT',0,3,220,15,3
	.word	53242
	.byte	10,3,223,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	45265
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SWAPCTRL',0,3,228,15,3
	.word	53306
	.byte	10,3,231,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	45385
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SWRSTCON',0,3,236,15,3
	.word	53372
	.byte	10,3,239,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	45555
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SYSCON',0,3,244,15,3
	.word	53438
	.byte	10,3,247,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	45818
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SYSPLLCON0',0,3,252,15,3
	.word	53502
	.byte	10,3,255,15,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	46097
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SYSPLLCON1',0,3,132,16,3
	.word	53570
	.byte	10,3,135,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	46201
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SYSPLLCON2',0,3,140,16,3
	.word	53638
	.byte	10,3,143,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	46307
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_SYSPLLSTAT',0,3,148,16,3
	.word	53706
	.byte	10,3,151,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	46530
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPCLR',0,3,156,16,3
	.word	53774
	.byte	10,3,159,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	46678
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPDIS0',0,3,164,16,3
	.word	53839
	.byte	10,3,167,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	47166
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPDIS1',0,3,172,16,3
	.word	53905
	.byte	10,3,175,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	47463
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSET',0,3,180,16,3
	.word	53971
	.byte	10,3,183,16,9,4,11
	.byte	'U',0
	.word	299
	.byte	4,2,35,0,11
	.byte	'I',0
	.word	315
	.byte	4,2,35,0,11
	.byte	'B',0
	.word	47611
	.byte	4,2,35,0,0,29
	.byte	'Ifx_SCU_TRAPSTAT',0,3,188,16,3
	.word	54036
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_CON0',0,3,196,16,3
	.word	434
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_CON1',0,3,204,16,3
	.word	717
	.byte	29
	.byte	'Ifx_SCU_WDTCPU_SR',0,3,212,16,3
	.word	948
	.byte	29
	.byte	'Ifx_SCU_WDTS_CON0',0,3,220,16,3
	.word	28163
	.byte	29
	.byte	'Ifx_SCU_WDTS_CON1',0,3,228,16,3
	.word	28423
	.byte	29
	.byte	'Ifx_SCU_WDTS_SR',0,3,236,16,3
	.word	28652
	.byte	8
	.byte	'_Ifx_SCU_ESRCFGX',0,3,248,16,25,4,11
	.byte	'ESRCFGX',0
	.word	49760
	.byte	4,2,35,0,0,12
	.word	54266
	.byte	29
	.byte	'Ifx_SCU_ESRCFGX',0,3,251,16,3
	.word	54307
	.byte	12
	.word	988
	.byte	29
	.byte	'Ifx_SCU_WDTCPU',0,3,143,17,3
	.word	54337
	.byte	12
	.word	28692
	.byte	29
	.byte	'Ifx_SCU_WDTS',0,3,163,17,3
	.word	54366
	.byte	29
	.byte	'Ifx_CPU_A_Bits',0,4,73,3
	.word	22564
	.byte	29
	.byte	'Ifx_CPU_BIV_Bits',0,4,80,3
	.word	21680
	.byte	29
	.byte	'Ifx_CPU_BLK_OMASK_Bits',0,4,89,3
	.word	11349
	.byte	29
	.byte	'Ifx_CPU_BLK_OTAR_Bits',0,4,97,3
	.word	11218
	.byte	29
	.byte	'Ifx_CPU_BLK_RABR_Bits',0,4,108,3
	.word	11032
	.byte	29
	.byte	'Ifx_CPU_BTV_Bits',0,4,115,3
	.word	21774
	.byte	29
	.byte	'Ifx_CPU_CCNT_Bits',0,4,122,3
	.word	18864
	.byte	29
	.byte	'Ifx_CPU_CCTRL_Bits',0,4,133,1,3
	.word	18705
	.byte	29
	.byte	'Ifx_CPU_COMPAT_Bits',0,4,142,1,3
	.word	14606
	.byte	29
	.byte	'Ifx_CPU_CORE_ID_Bits',0,4,149,1,3
	.word	21570
	.byte	29
	.byte	'Ifx_CPU_CPR_L_Bits',0,4,156,1,3
	.word	16059
	.byte	29
	.byte	'Ifx_CPU_CPR_U_Bits',0,4,163,1,3
	.word	16166
	.byte	29
	.byte	'Ifx_CPU_CPU_ID_Bits',0,4,171,1,3
	.word	21449
	.byte	29
	.byte	'Ifx_CPU_CPXE_Bits',0,4,178,1,3
	.word	16340
	.byte	29
	.byte	'Ifx_CPU_CREVT_Bits',0,4,189,1,3
	.word	19779
	.byte	29
	.byte	'Ifx_CPU_CUS_ID_Bits',0,4,196,1,3
	.word	22351
	.byte	29
	.byte	'Ifx_CPU_D_Bits',0,4,202,1,3
	.word	22467
	.byte	29
	.byte	'Ifx_CPU_DATR_Bits',0,4,216,1,3
	.word	12782
	.byte	29
	.byte	'Ifx_CPU_DBGSR_Bits',0,4,230,1,3
	.word	19386
	.byte	29
	.byte	'Ifx_CPU_DBGTCR_Bits',0,4,237,1,3
	.word	20538
	.byte	29
	.byte	'Ifx_CPU_DCON0_Bits',0,4,245,1,3
	.word	13499
	.byte	29
	.byte	'Ifx_CPU_DCON2_Bits',0,4,252,1,3
	.word	12179
	.byte	29
	.byte	'Ifx_CPU_DCX_Bits',0,4,131,2,3
	.word	20431
	.byte	29
	.byte	'Ifx_CPU_DEADD_Bits',0,4,137,2,3
	.word	13021
	.byte	29
	.byte	'Ifx_CPU_DIEAR_Bits',0,4,143,2,3
	.word	13113
	.byte	29
	.byte	'Ifx_CPU_DIETR_Bits',0,4,161,2,3
	.word	13194
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R_Bits',0,4,198,2,3
	.word	9744
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W_Bits',0,4,235,2,3
	.word	8562
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R_Bits',0,4,144,3,3
	.word	10330
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W_Bits',0,4,181,3,3
	.word	9148
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA_Bits',0,4,188,3,3
	.word	8330
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA_Bits',0,4,195,3,3
	.word	8446
	.byte	29
	.byte	'Ifx_CPU_DMS_Bits',0,4,202,3,3
	.word	20324
	.byte	29
	.byte	'Ifx_CPU_DPRE_Bits',0,4,209,3,3
	.word	16445
	.byte	29
	.byte	'Ifx_CPU_DPR_L_Bits',0,4,216,3,3
	.word	15777
	.byte	29
	.byte	'Ifx_CPU_DPR_U_Bits',0,4,223,3,3
	.word	15884
	.byte	29
	.byte	'Ifx_CPU_DPWE_Bits',0,4,230,3,3
	.word	16550
	.byte	29
	.byte	'Ifx_CPU_DSTR_Bits',0,4,252,3,3
	.word	12421
	.byte	29
	.byte	'Ifx_CPU_EXEVT_Bits',0,4,135,4,3
	.word	19613
	.byte	29
	.byte	'Ifx_CPU_FCX_Bits',0,4,143,4,3
	.word	22111
	.byte	29
	.byte	'Ifx_CPU_FLASHCON0_Bits',0,4,156,4,3
	.word	1809
	.byte	29
	.byte	'Ifx_CPU_FLASHCON1_Bits',0,4,167,4,3
	.word	2035
	.byte	29
	.byte	'Ifx_CPU_FLASHCON2_Bits',0,4,184,4,3
	.word	2234
	.byte	29
	.byte	'Ifx_CPU_FLASHCON3_Bits',0,4,200,4,3
	.word	2542
	.byte	29
	.byte	'Ifx_CPU_FLASHCON4_Bits',0,4,207,4,3
	.word	2855
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_CON_Bits',0,4,229,4,3
	.word	14757
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_OPC_Bits',0,4,239,4,3
	.word	15198
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_PC_Bits',0,4,245,4,3
	.word	15111
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_SRC1_Bits',0,4,251,4,3
	.word	15363
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_SRC2_Bits',0,4,129,5,3
	.word	15454
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_SRC3_Bits',0,4,135,5,3
	.word	15545
	.byte	29
	.byte	'Ifx_CPU_ICNT_Bits',0,4,142,5,3
	.word	18967
	.byte	29
	.byte	'Ifx_CPU_ICR_Bits',0,4,152,5,3
	.word	21955
	.byte	29
	.byte	'Ifx_CPU_ISP_Bits',0,4,158,5,3
	.word	21875
	.byte	29
	.byte	'Ifx_CPU_KRST0_Bits',0,4,166,5,3
	.word	2977
	.byte	29
	.byte	'Ifx_CPU_KRST1_Bits',0,4,173,5,3
	.word	3100
	.byte	29
	.byte	'Ifx_CPU_KRSTCLR_Bits',0,4,180,5,3
	.word	3204
	.byte	29
	.byte	'Ifx_CPU_LCX_Bits',0,4,188,5,3
	.word	22231
	.byte	29
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R_Bits',0,4,225,5,3
	.word	7145
	.byte	29
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R_Bits',0,4,134,6,3
	.word	7727
	.byte	29
	.byte	'Ifx_CPU_M1CNT_Bits',0,4,141,6,3
	.word	19071
	.byte	29
	.byte	'Ifx_CPU_M2CNT_Bits',0,4,148,6,3
	.word	19176
	.byte	29
	.byte	'Ifx_CPU_M3CNT_Bits',0,4,155,6,3
	.word	19281
	.byte	29
	.byte	'Ifx_CPU_OSEL_Bits',0,4,161,6,3
	.word	10937
	.byte	29
	.byte	'Ifx_CPU_PC_Bits',0,4,168,6,3
	.word	21039
	.byte	29
	.byte	'Ifx_CPU_PCON0_Bits',0,4,176,6,3
	.word	14090
	.byte	29
	.byte	'Ifx_CPU_PCON1_Bits',0,4,184,6,3
	.word	13854
	.byte	29
	.byte	'Ifx_CPU_PCON2_Bits',0,4,191,6,3
	.word	13977
	.byte	29
	.byte	'Ifx_CPU_PCXI_Bits',0,4,202,6,3
	.word	20654
	.byte	29
	.byte	'Ifx_CPU_PIEAR_Bits',0,4,208,6,3
	.word	14218
	.byte	29
	.byte	'Ifx_CPU_PIETR_Bits',0,4,226,6,3
	.word	14299
	.byte	29
	.byte	'Ifx_CPU_PMA0_Bits',0,4,233,6,3
	.word	11856
	.byte	29
	.byte	'Ifx_CPU_PMA1_Bits',0,4,240,6,3
	.word	11960
	.byte	29
	.byte	'Ifx_CPU_PMA2_Bits',0,4,247,6,3
	.word	12064
	.byte	29
	.byte	'Ifx_CPU_PSTR_Bits',0,4,132,7,3
	.word	13638
	.byte	29
	.byte	'Ifx_CPU_PSW_Bits',0,4,147,7,3
	.word	20820
	.byte	29
	.byte	'Ifx_CPU_RGN_ACCENA_Bits',0,4,184,7,3
	.word	3533
	.byte	29
	.byte	'Ifx_CPU_RGN_ACCENB_Bits',0,4,221,7,3
	.word	4107
	.byte	29
	.byte	'Ifx_CPU_RGN_LA_Bits',0,4,228,7,3
	.word	3321
	.byte	29
	.byte	'Ifx_CPU_RGN_UA_Bits',0,4,235,7,3
	.word	3427
	.byte	29
	.byte	'Ifx_CPU_SEGEN_Bits',0,4,244,7,3
	.word	11585
	.byte	29
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W_Bits',0,4,153,8,3
	.word	5971
	.byte	29
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W_Bits',0,4,190,8,3
	.word	6553
	.byte	29
	.byte	'Ifx_CPU_SMACON_Bits',0,4,198,8,3
	.word	12292
	.byte	29
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R_Bits',0,4,235,8,3
	.word	4791
	.byte	29
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R_Bits',0,4,144,9,3
	.word	5376
	.byte	29
	.byte	'Ifx_CPU_SWEVT_Bits',0,4,155,9,3
	.word	19945
	.byte	29
	.byte	'Ifx_CPU_SYSCON_Bits',0,4,173,9,3
	.word	21139
	.byte	29
	.byte	'Ifx_CPU_TASK_ASI_Bits',0,4,180,9,3
	.word	11738
	.byte	29
	.byte	'Ifx_CPU_TPS_CON_Bits',0,4,191,9,3
	.word	16675
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN_Bits',0,4,198,9,3
	.word	17564
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL_Bits',0,4,205,9,3
	.word	17165
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL_Bits',0,4,213,9,3
	.word	17016
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL_Bits',0,4,220,9,3
	.word	17439
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL_Bits',0,4,228,9,3
	.word	17292
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_FCX_Bits',0,4,235,9,3
	.word	17939
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_STAT_Bits',0,4,248,9,3
	.word	17692
	.byte	29
	.byte	'Ifx_CPU_TPS_TIMER_Bits',0,4,254,9,3
	.word	16857
	.byte	29
	.byte	'Ifx_CPU_TRIG_ACC_Bits',0,4,140,10,3
	.word	20120
	.byte	29
	.byte	'Ifx_CPU_TR_ADR_Bits',0,4,146,10,3
	.word	18551
	.byte	29
	.byte	'Ifx_CPU_TR_EVT_Bits',0,4,166,10,3
	.word	18222
	.byte	29
	.byte	'Ifx_CPU_A',0,4,179,10,3
	.word	22602
	.byte	29
	.byte	'Ifx_CPU_BIV',0,4,187,10,3
	.word	21734
	.byte	29
	.byte	'Ifx_CPU_BLK_OMASK',0,4,195,10,3
	.word	11456
	.byte	29
	.byte	'Ifx_CPU_BLK_OTAR',0,4,203,10,3
	.word	11309
	.byte	29
	.byte	'Ifx_CPU_BLK_RABR',0,4,211,10,3
	.word	11178
	.byte	29
	.byte	'Ifx_CPU_BTV',0,4,219,10,3
	.word	21835
	.byte	29
	.byte	'Ifx_CPU_CCNT',0,4,227,10,3
	.word	18927
	.byte	29
	.byte	'Ifx_CPU_CCTRL',0,4,235,10,3
	.word	18824
	.byte	29
	.byte	'Ifx_CPU_COMPAT',0,4,243,10,3
	.word	14706
	.byte	29
	.byte	'Ifx_CPU_CORE_ID',0,4,251,10,3
	.word	21640
	.byte	29
	.byte	'Ifx_CPU_CPR_L',0,4,131,11,3
	.word	16126
	.byte	29
	.byte	'Ifx_CPU_CPR_U',0,4,139,11,3
	.word	16233
	.byte	29
	.byte	'Ifx_CPU_CPU_ID',0,4,147,11,3
	.word	21530
	.byte	29
	.byte	'Ifx_CPU_CPXE',0,4,155,11,3
	.word	16405
	.byte	29
	.byte	'Ifx_CPU_CREVT',0,4,163,11,3
	.word	19905
	.byte	29
	.byte	'Ifx_CPU_CUS_ID',0,4,171,11,3
	.word	22416
	.byte	29
	.byte	'Ifx_CPU_D',0,4,179,11,3
	.word	22506
	.byte	29
	.byte	'Ifx_CPU_DATR',0,4,187,11,3
	.word	12981
	.byte	29
	.byte	'Ifx_CPU_DBGSR',0,4,195,11,3
	.word	19573
	.byte	29
	.byte	'Ifx_CPU_DBGTCR',0,4,203,11,3
	.word	20603
	.byte	29
	.byte	'Ifx_CPU_DCON0',0,4,211,11,3
	.word	13587
	.byte	29
	.byte	'Ifx_CPU_DCON2',0,4,219,11,3
	.word	12252
	.byte	29
	.byte	'Ifx_CPU_DCX',0,4,227,11,3
	.word	20498
	.byte	29
	.byte	'Ifx_CPU_DEADD',0,4,235,11,3
	.word	13073
	.byte	29
	.byte	'Ifx_CPU_DIEAR',0,4,243,11,3
	.word	13154
	.byte	29
	.byte	'Ifx_CPU_DIETR',0,4,251,11,3
	.word	13450
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_R',0,4,131,12,3
	.word	10290
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENA_W',0,4,139,12,3
	.word	9108
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_R',0,4,147,12,3
	.word	10886
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNACCENB_W',0,4,155,12,3
	.word	9704
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNLA',0,4,163,12,3
	.word	8406
	.byte	29
	.byte	'Ifx_CPU_DLMU_SPROT_RGNUA',0,4,171,12,3
	.word	8522
	.byte	29
	.byte	'Ifx_CPU_DMS',0,4,179,12,3
	.word	20391
	.byte	29
	.byte	'Ifx_CPU_DPRE',0,4,187,12,3
	.word	16510
	.byte	29
	.byte	'Ifx_CPU_DPR_L',0,4,195,12,3
	.word	15844
	.byte	29
	.byte	'Ifx_CPU_DPR_U',0,4,203,12,3
	.word	15951
	.byte	29
	.byte	'Ifx_CPU_DPWE',0,4,211,12,3
	.word	16615
	.byte	29
	.byte	'Ifx_CPU_DSTR',0,4,219,12,3
	.word	12733
	.byte	29
	.byte	'Ifx_CPU_EXEVT',0,4,227,12,3
	.word	19739
	.byte	29
	.byte	'Ifx_CPU_FCX',0,4,235,12,3
	.word	22191
	.byte	29
	.byte	'Ifx_CPU_FLASHCON0',0,4,243,12,3
	.word	1995
	.byte	29
	.byte	'Ifx_CPU_FLASHCON1',0,4,251,12,3
	.word	2194
	.byte	29
	.byte	'Ifx_CPU_FLASHCON2',0,4,131,13,3
	.word	2502
	.byte	29
	.byte	'Ifx_CPU_FLASHCON3',0,4,139,13,3
	.word	2815
	.byte	29
	.byte	'Ifx_CPU_FLASHCON4',0,4,147,13,3
	.word	2924
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_CON',0,4,155,13,3
	.word	15071
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_OPC',0,4,163,13,3
	.word	15323
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_PC',0,4,171,13,3
	.word	15158
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_SRC1',0,4,179,13,3
	.word	15414
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_SRC2',0,4,187,13,3
	.word	15505
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP_SRC3',0,4,195,13,3
	.word	15596
	.byte	29
	.byte	'Ifx_CPU_ICNT',0,4,203,13,3
	.word	19031
	.byte	29
	.byte	'Ifx_CPU_ICR',0,4,211,13,3
	.word	22071
	.byte	29
	.byte	'Ifx_CPU_ISP',0,4,219,13,3
	.word	21915
	.byte	29
	.byte	'Ifx_CPU_KRST0',0,4,227,13,3
	.word	3060
	.byte	29
	.byte	'Ifx_CPU_KRST1',0,4,235,13,3
	.word	3164
	.byte	29
	.byte	'Ifx_CPU_KRSTCLR',0,4,243,13,3
	.word	3270
	.byte	29
	.byte	'Ifx_CPU_LCX',0,4,251,13,3
	.word	22311
	.byte	29
	.byte	'Ifx_CPU_LPB_SPROT_ACCENA_R',0,4,131,14,3
	.word	7687
	.byte	29
	.byte	'Ifx_CPU_LPB_SPROT_ACCENB_R',0,4,139,14,3
	.word	8279
	.byte	29
	.byte	'Ifx_CPU_M1CNT',0,4,147,14,3
	.word	19136
	.byte	29
	.byte	'Ifx_CPU_M2CNT',0,4,155,14,3
	.word	19241
	.byte	29
	.byte	'Ifx_CPU_M3CNT',0,4,163,14,3
	.word	19346
	.byte	29
	.byte	'Ifx_CPU_OSEL',0,4,171,14,3
	.word	10983
	.byte	29
	.byte	'Ifx_CPU_PC',0,4,179,14,3
	.word	21099
	.byte	29
	.byte	'Ifx_CPU_PCON0',0,4,187,14,3
	.word	14178
	.byte	29
	.byte	'Ifx_CPU_PCON1',0,4,195,14,3
	.word	13937
	.byte	29
	.byte	'Ifx_CPU_PCON2',0,4,203,14,3
	.word	14050
	.byte	29
	.byte	'Ifx_CPU_PCXI',0,4,211,14,3
	.word	20780
	.byte	29
	.byte	'Ifx_CPU_PIEAR',0,4,219,14,3
	.word	14259
	.byte	29
	.byte	'Ifx_CPU_PIETR',0,4,227,14,3
	.word	14555
	.byte	29
	.byte	'Ifx_CPU_PMA0',0,4,235,14,3
	.word	11920
	.byte	29
	.byte	'Ifx_CPU_PMA1',0,4,243,14,3
	.word	12024
	.byte	29
	.byte	'Ifx_CPU_PMA2',0,4,251,14,3
	.word	12128
	.byte	29
	.byte	'Ifx_CPU_PSTR',0,4,131,15,3
	.word	13814
	.byte	29
	.byte	'Ifx_CPU_PSW',0,4,139,15,3
	.word	20999
	.byte	29
	.byte	'Ifx_CPU_RGN_ACCENA',0,4,147,15,3
	.word	4067
	.byte	29
	.byte	'Ifx_CPU_RGN_ACCENB',0,4,155,15,3
	.word	4651
	.byte	29
	.byte	'Ifx_CPU_RGN_LA',0,4,163,15,3
	.word	3387
	.byte	29
	.byte	'Ifx_CPU_RGN_UA',0,4,171,15,3
	.word	3493
	.byte	29
	.byte	'Ifx_CPU_SEGEN',0,4,179,15,3
	.word	11685
	.byte	29
	.byte	'Ifx_CPU_SFR_SPROT_ACCENA_W',0,4,187,15,3
	.word	6513
	.byte	29
	.byte	'Ifx_CPU_SFR_SPROT_ACCENB_W',0,4,195,15,3
	.word	7105
	.byte	29
	.byte	'Ifx_CPU_SMACON',0,4,203,15,3
	.word	12381
	.byte	29
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENA_R',0,4,211,15,3
	.word	5336
	.byte	29
	.byte	'Ifx_CPU_SPR_SPROT_RGNACCENB_R',0,4,219,15,3
	.word	5931
	.byte	29
	.byte	'Ifx_CPU_SWEVT',0,4,227,15,3
	.word	20071
	.byte	29
	.byte	'Ifx_CPU_SYSCON',0,4,235,15,3
	.word	21409
	.byte	29
	.byte	'Ifx_CPU_TASK_ASI',0,4,243,15,3
	.word	11805
	.byte	29
	.byte	'Ifx_CPU_TPS_CON',0,4,251,15,3
	.word	16817
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_CLASS_EN',0,4,131,16,3
	.word	17652
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_CVAL',0,4,139,16,3
	.word	17252
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_ENTRY_LVAL',0,4,147,16,3
	.word	17125
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_CVAL',0,4,155,16,3
	.word	17524
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_EXIT_LVAL',0,4,163,16,3
	.word	17399
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_FCX',0,4,171,16,3
	.word	18017
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM_STAT',0,4,179,16,3
	.word	17899
	.byte	29
	.byte	'Ifx_CPU_TPS_TIMER',0,4,187,16,3
	.word	16905
	.byte	29
	.byte	'Ifx_CPU_TRIG_ACC',0,4,195,16,3
	.word	20284
	.byte	29
	.byte	'Ifx_CPU_TR_ADR',0,4,203,16,3
	.word	18595
	.byte	29
	.byte	'Ifx_CPU_TR_EVT',0,4,211,16,3
	.word	18511
	.byte	12
	.word	4691
	.byte	29
	.byte	'Ifx_CPU_RGN',0,4,229,16,3
	.word	60197
	.byte	12
	.word	11496
	.byte	29
	.byte	'Ifx_CPU_BLK',0,4,249,16,3
	.word	60223
	.byte	12
	.word	15636
	.byte	29
	.byte	'Ifx_CPU_FPU_TRAP',0,4,145,17,3
	.word	60249
	.byte	12
	.word	15991
	.byte	29
	.byte	'Ifx_CPU_DPR',0,4,164,17,3
	.word	60280
	.byte	12
	.word	16273
	.byte	29
	.byte	'Ifx_CPU_CPR',0,4,183,17,3
	.word	60306
	.byte	12
	.word	16954
	.byte	29
	.byte	'Ifx_CPU_TPS',0,4,202,17,3
	.word	60332
	.byte	12
	.word	18057
	.byte	29
	.byte	'Ifx_CPU_TPS_EXTIM',0,4,226,17,3
	.word	60358
	.byte	12
	.word	18635
	.byte	29
	.byte	'Ifx_CPU_TR',0,4,245,17,3
	.word	60390
	.byte	12
	.word	22651
	.byte	29
	.byte	'Ifx_CPU',0,4,212,19,3
	.word	60415
	.byte	30
	.word	299
	.byte	31,0,32
	.byte	'__START1',0,5,101,1
	.word	60437
	.byte	1,1,32
	.byte	'__ISTACK0',0,5,102,1
	.word	60437
	.byte	1,1,32
	.byte	'__INTTAB_CPU0',0,5,102,1
	.word	60437
	.byte	1,1,32
	.byte	'__TRAPTAB_CPU0',0,5,102,1
	.word	60437
	.byte	1,1,32
	.byte	'__CSA0',0,5,102,1
	.word	60437
	.byte	1,1,32
	.byte	'__CSA0_END',0,5,102,1
	.word	60437
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L43:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,46,1,3,8,32,13,58,15,59,15,57,15,54,15,39,12,0,0,3,11
	.byte	0,0,0,4,59,0,3,8,0,0,5,15,0,73,19,0,0,6,5,0,3,8,58,15,59,15,57,15,73,19,0,0,7,36,0,3,8,11,15,62,15,0,0
	.byte	8,19,1,3,8,58,15,59,15,57,15,11,15,0,0,9,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,10,23,1,58,15,59,15
	.byte	57,15,11,15,0,0,11,13,0,3,8,73,19,11,15,56,9,0,0,12,53,0,73,19,0,0,13,46,1,3,8,32,13,58,15,59,15,57,15
	.byte	73,19,54,15,39,12,0,0,14,11,1,0,0,15,46,1,3,8,73,19,54,15,39,12,63,12,60,12,0,0,16,5,0,73,19,0,0,17,46
	.byte	1,3,8,54,15,39,12,63,12,60,12,0,0,18,46,0,3,8,54,15,39,12,63,12,60,12,0,0,19,46,1,49,19,0,0,20,5,0,49
	.byte	19,0,0,21,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,22,1,1,11,15,73,19,0,0,23,33,0,47,15
	.byte	0,0,24,46,0,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,25,29,1,49,19,0,0,26,11,0,49,19,0,0,27,46
	.byte	0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,28,21,0,54,15,0,0,29,22,0,3,8,58,15,59,15,57,15,73,19,0
	.byte	0,30,1,1,73,19,0,0,31,33,0,0,0,32,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L44:
	.word	.L265-.L264
.L264:
	.half	3
	.word	.L267-.L266
.L266:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg',0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_CompilersTasking.h',0,0,0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Infra.h',0,0,0,0
	.byte	'IfxScu_regdef.h',0,1,0,0
	.byte	'IfxCpu_regdef.h',0,1,0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'Ifx_TypesReg.h',0,1,0,0,0
.L267:
.L265:
	.sdecl	'.debug_info',debug,cluster('__StartUpSoftware')
	.sect	'.debug_info'
.L45:
	.word	373
	.half	3
	.word	.L46
	.byte	4,1
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L48,.L47
	.byte	2
	.word	.L41
	.byte	3
	.byte	'__StartUpSoftware',0,1,120,13,1,1
	.word	.L24,.L90,.L23
	.byte	4
	.word	.L24,.L90
	.byte	5
	.word	.L91,.L92,.L93
	.byte	6
	.word	.L94,.L92,.L93
	.byte	7
	.byte	'returnVal',0,2,188,3,19
	.word	.L95,.L96
	.byte	7
	.byte	'tempValue',0,2,189,3,19
	.word	.L97,.L98
	.byte	0,0,5
	.word	.L99,.L100,.L101
	.byte	8
	.word	.L102,.L103
	.byte	9
	.word	.L104,.L100,.L101
	.byte	0,5
	.word	.L99,.L105,.L106
	.byte	8
	.word	.L102,.L103
	.byte	9
	.word	.L104,.L105,.L106
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('__StartUpSoftware')
	.sect	'.debug_abbrev'
.L46:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,11,1,49,16,17,1,18,1,0,0,7
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,8,5,0,49,16,2,6,0,0,9,11,0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('__StartUpSoftware')
	.sect	'.debug_line'
.L47:
	.word	.L269-.L268
.L268:
	.half	3
	.word	.L271-.L270
.L270:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Infra.h',0,0,0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L271:
	.byte	5,5,7,0,5,2
	.word	.L24
	.byte	3,250,0,1,9
	.half	.L272-.L24
	.byte	3,3,1,4,2,5,42,9
	.half	.L92-.L272
	.byte	3,191,2,1,5,22,9
	.half	.L239-.L92
	.byte	3,2,1,5,20,9
	.half	.L273-.L239
	.byte	1,5,5,9
	.half	.L274-.L273
	.byte	1,5,27,7,9
	.half	.L275-.L274
	.byte	3,4,1,5,25,9
	.half	.L276-.L275
	.byte	1,5,10,9
	.half	.L277-.L276
	.byte	1,5,32,7,9
	.half	.L278-.L277
	.byte	3,4,1,5,46,9
	.half	.L240-.L278
	.byte	1,5,44,9
	.half	.L279-.L240
	.byte	1,5,70,9
	.half	.L280-.L279
	.byte	1,5,78,9
	.half	.L281-.L280
	.byte	1,5,9,9
	.half	.L241-.L281
	.byte	3,2,1,5,27,7,9
	.half	.L282-.L241
	.byte	3,2,1,5,10,9
	.half	.L3-.L282
	.byte	3,7,1,5,26,7,9
	.half	.L283-.L3
	.byte	3,5,1,5,10,9
	.half	.L284-.L283
	.byte	1,5,19,7,9
	.half	.L5-.L284
	.byte	3,2,1,5,23,9
	.half	.L242-.L5
	.byte	1,5,19,9
	.half	.L2-.L242
	.byte	3,4,1,4,1,5,5,9
	.half	.L8-.L2
	.byte	3,164,125,1,5,32,7,9
	.half	.L93-.L8
	.byte	3,2,1,4,3,5,5,9
	.half	.L100-.L93
	.byte	3,18,1,4,1,5,1,9
	.half	.L101-.L100
	.byte	3,116,1,5,32,7,9
	.half	.L9-.L101
	.byte	3,126,1,4,3,5,5,9
	.half	.L105-.L9
	.byte	3,14,1,4,1,5,1,9
	.half	.L106-.L105
	.byte	3,116,1,7,9
	.half	.L49-.L106
	.byte	0,1,1
.L269:
	.sdecl	'.debug_ranges',debug,cluster('__StartUpSoftware')
	.sect	'.debug_ranges'
.L48:
	.word	-1,.L24,0,.L49-.L24,0,0
	.sdecl	'.debug_info',debug,cluster('__StartUpSoftware_Phase2')
	.sect	'.debug_info'
.L50:
	.word	271
	.half	3
	.word	.L51
	.byte	4,1
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L53,.L52
	.byte	2
	.word	.L41
	.byte	3
	.byte	'__StartUpSoftware_Phase2',0,1,140,1,13,1,1
	.word	.L26,.L107,.L25
	.byte	4
	.word	.L26,.L107
	.byte	5
	.word	.L99,.L108,.L109
	.byte	6
	.word	.L102,.L110
	.byte	7
	.word	.L104,.L108,.L109
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('__StartUpSoftware_Phase2')
	.sect	'.debug_abbrev'
.L51:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11,0,49
	.byte	16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('__StartUpSoftware_Phase2')
	.sect	'.debug_line'
.L52:
	.word	.L286-.L285
.L285:
	.half	3
	.word	.L288-.L287
.L287:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L288:
	.byte	5,28,7,0,5,2
	.word	.L26
	.byte	3,150,1,1,4,2,5,5,9
	.half	.L108-.L26
	.byte	3,126,1,4,1,5,1,9
	.half	.L109-.L108
	.byte	3,3,1,7,9
	.half	.L54-.L109
	.byte	0,1,1
.L286:
	.sdecl	'.debug_ranges',debug,cluster('__StartUpSoftware_Phase2')
	.sect	'.debug_ranges'
.L53:
	.word	-1,.L26,0,.L54-.L26,0,0
	.sdecl	'.debug_info',debug,cluster('__StartUpSoftware_Phase3ApplicationResetPath')
	.sect	'.debug_info'
.L55:
	.word	520
	.half	3
	.word	.L56
	.byte	4,1
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L58,.L57
	.byte	2
	.word	.L41
	.byte	3
	.byte	'__StartUpSoftware_Phase3ApplicationResetPath',0,1,163,1,13,1,1
	.word	.L30,.L111,.L29
	.byte	4
	.word	.L30,.L111
	.byte	5
	.word	.L112,.L113,.L114
	.byte	6
	.word	.L115,.L113,.L114
	.byte	0,5
	.word	.L116,.L117,.L118
	.byte	7
	.word	.L119,.L120
	.byte	7
	.word	.L121,.L122
	.byte	8
	.word	.L123,.L117,.L118
	.byte	9
	.byte	'k',0,2,235,3,19
	.word	.L97,.L124
	.byte	9
	.byte	'nxt_cxi_val',0,2,236,3,19
	.word	.L97,.L125
	.byte	9
	.byte	'prvCsa',0,2,237,3,19
	.word	.L126,.L127
	.byte	9
	.byte	'nxtCsa',0,2,238,3,19
	.word	.L126,.L128
	.byte	9
	.byte	'numOfCsa',0,2,239,3,19
	.word	.L97,.L129
	.byte	5
	.word	.L112,.L130,.L118
	.byte	6
	.word	.L115,.L130,.L118
	.byte	0,0,0,5
	.word	.L131,.L118,.L132
	.byte	6
	.word	.L133,.L118,.L132
	.byte	0,5
	.word	.L99,.L134,.L135
	.byte	7
	.word	.L102,.L136
	.byte	6
	.word	.L104,.L134,.L135
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('__StartUpSoftware_Phase3ApplicationResetPath')
	.sect	'.debug_abbrev'
.L56:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,11,0,49,16,17,1,18,1,0,0,7
	.byte	5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('__StartUpSoftware_Phase3ApplicationResetPath')
	.sect	'.debug_line'
.L57:
	.word	.L290-.L289
.L289:
	.half	3
	.word	.L292-.L291
.L291:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Infra.h',0,0,0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L292:
	.byte	5,5,7,0,5,2
	.word	.L30
	.byte	3,164,1,1,4,3,5,12,9
	.half	.L113-.L30
	.byte	3,73,1,4,1,5,5,9
	.half	.L114-.L113
	.byte	3,55,1,4,2,5,31,9
	.half	.L117-.L114
	.byte	3,200,2,1,5,49,9
	.half	.L251-.L117
	.byte	3,2,1,5,72,9
	.half	.L293-.L251
	.byte	1,5,56,9
	.half	.L294-.L293
	.byte	1,5,12,9
	.half	.L252-.L294
	.byte	3,2,1,5,91,9
	.half	.L253-.L252
	.byte	3,2,1,5,30,9
	.half	.L295-.L253
	.byte	3,126,1,5,53,9
	.half	.L17-.L295
	.byte	3,2,1,5,91,9
	.half	.L296-.L17
	.byte	1,5,60,9
	.half	.L297-.L296
	.byte	1,9
	.half	.L298-.L297
	.byte	3,1,1,5,99,9
	.half	.L254-.L298
	.byte	3,127,1,5,9,9
	.half	.L299-.L254
	.byte	3,3,1,5,13,7,9
	.half	.L300-.L299
	.byte	3,2,1,5,21,9
	.half	.L18-.L300
	.byte	3,4,1,5,28,9
	.half	.L19-.L18
	.byte	3,3,1,5,9,9
	.half	.L301-.L19
	.byte	1,5,13,7,9
	.half	.L302-.L301
	.byte	3,2,1,5,17,9
	.half	.L20-.L302
	.byte	3,3,1,5,16,9
	.half	.L303-.L20
	.byte	3,1,1,5,33,9
	.half	.L304-.L303
	.byte	3,108,1,5,30,9
	.half	.L16-.L304
	.byte	1,5,15,7,9
	.half	.L305-.L16
	.byte	3,23,1,5,13,9
	.half	.L306-.L305
	.byte	1,4,3,5,12,9
	.half	.L130-.L306
	.byte	3,230,124,1,9
	.half	.L118-.L130
	.byte	3,6,1,4,1,5,28,9
	.half	.L132-.L118
	.byte	3,51,1,4,3,5,5,9
	.half	.L134-.L132
	.byte	3,110,1,4,1,5,1,9
	.half	.L135-.L134
	.byte	3,19,1,7,9
	.half	.L59-.L135
	.byte	0,1,1
.L290:
	.sdecl	'.debug_ranges',debug,cluster('__StartUpSoftware_Phase3ApplicationResetPath')
	.sect	'.debug_ranges'
.L58:
	.word	-1,.L30,0,.L59-.L30,0,0
	.sdecl	'.debug_info',debug,cluster('__StartUpSoftware_Phase3PowerOnResetPath')
	.sect	'.debug_info'
.L60:
	.word	516
	.half	3
	.word	.L61
	.byte	4,1
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L63,.L62
	.byte	2
	.word	.L41
	.byte	3
	.byte	'__StartUpSoftware_Phase3PowerOnResetPath',0,1,155,1,13,1,1
	.word	.L28,.L137,.L27
	.byte	4
	.word	.L28,.L137
	.byte	5
	.word	.L112,.L138,.L139
	.byte	6
	.word	.L115,.L138,.L139
	.byte	0,5
	.word	.L116,.L140,.L141
	.byte	7
	.word	.L119,.L142
	.byte	7
	.word	.L121,.L143
	.byte	8
	.word	.L123,.L140,.L141
	.byte	9
	.byte	'k',0,2,235,3,19
	.word	.L97,.L144
	.byte	9
	.byte	'nxt_cxi_val',0,2,236,3,19
	.word	.L97,.L145
	.byte	9
	.byte	'prvCsa',0,2,237,3,19
	.word	.L126,.L146
	.byte	9
	.byte	'nxtCsa',0,2,238,3,19
	.word	.L126,.L147
	.byte	9
	.byte	'numOfCsa',0,2,239,3,19
	.word	.L97,.L148
	.byte	5
	.word	.L112,.L149,.L141
	.byte	6
	.word	.L115,.L149,.L141
	.byte	0,0,0,5
	.word	.L131,.L141,.L150
	.byte	6
	.word	.L133,.L141,.L150
	.byte	0,5
	.word	.L99,.L151,.L152
	.byte	7
	.word	.L102,.L153
	.byte	6
	.word	.L104,.L151,.L152
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('__StartUpSoftware_Phase3PowerOnResetPath')
	.sect	'.debug_abbrev'
.L61:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,11,0,49,16,17,1,18,1,0,0,7
	.byte	5,0,49,16,2,6,0,0,8,11,1,49,16,17,1,18,1,0,0,9,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('__StartUpSoftware_Phase3PowerOnResetPath')
	.sect	'.debug_line'
.L62:
	.word	.L308-.L307
.L307:
	.half	3
	.word	.L310-.L309
.L309:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Infra.h',0,0,0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L310:
	.byte	5,5,7,0,5,2
	.word	.L28
	.byte	3,156,1,1,4,3,5,12,9
	.half	.L138-.L28
	.byte	3,81,1,4,1,5,5,9
	.half	.L139-.L138
	.byte	3,47,1,4,2,5,31,9
	.half	.L140-.L139
	.byte	3,208,2,1,5,49,9
	.half	.L245-.L140
	.byte	3,2,1,5,72,9
	.half	.L311-.L245
	.byte	1,5,56,9
	.half	.L312-.L311
	.byte	1,5,12,9
	.half	.L246-.L312
	.byte	3,2,1,5,91,9
	.half	.L247-.L246
	.byte	3,2,1,5,30,9
	.half	.L313-.L247
	.byte	3,126,1,5,53,9
	.half	.L12-.L313
	.byte	3,2,1,5,91,9
	.half	.L314-.L12
	.byte	1,5,60,9
	.half	.L315-.L314
	.byte	1,9
	.half	.L316-.L315
	.byte	3,1,1,5,99,9
	.half	.L248-.L316
	.byte	3,127,1,5,9,9
	.half	.L317-.L248
	.byte	3,3,1,5,13,7,9
	.half	.L318-.L317
	.byte	3,2,1,5,21,9
	.half	.L13-.L318
	.byte	3,4,1,5,28,9
	.half	.L14-.L13
	.byte	3,3,1,5,9,9
	.half	.L319-.L14
	.byte	1,5,13,7,9
	.half	.L320-.L319
	.byte	3,2,1,5,17,9
	.half	.L15-.L320
	.byte	3,3,1,5,16,9
	.half	.L321-.L15
	.byte	3,1,1,5,33,9
	.half	.L322-.L321
	.byte	3,108,1,5,30,9
	.half	.L11-.L322
	.byte	1,5,15,7,9
	.half	.L323-.L11
	.byte	3,23,1,5,13,9
	.half	.L324-.L323
	.byte	1,4,3,5,12,9
	.half	.L149-.L324
	.byte	3,230,124,1,9
	.half	.L141-.L149
	.byte	3,6,1,4,1,5,28,9
	.half	.L150-.L141
	.byte	3,43,1,4,3,5,5,9
	.half	.L151-.L150
	.byte	3,118,1,4,1,5,1,9
	.half	.L152-.L151
	.byte	3,11,1,7,9
	.half	.L64-.L152
	.byte	0,1,1
.L308:
	.sdecl	'.debug_ranges',debug,cluster('__StartUpSoftware_Phase3PowerOnResetPath')
	.sect	'.debug_ranges'
.L63:
	.word	-1,.L28,0,.L64-.L28,0,0
	.sdecl	'.debug_info',debug,cluster('__StartUpSoftware_Phase4')
	.sect	'.debug_info'
.L65:
	.word	499
	.half	3
	.word	.L66
	.byte	4,1
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L68,.L67
	.byte	2
	.word	.L41
	.byte	3
	.byte	'__StartUpSoftware_Phase4',0,1,171,1,13,1,1
	.word	.L32,.L154,.L31
	.byte	4
	.word	.L32,.L154
	.byte	4
	.word	.L32,.L155
	.byte	5
	.byte	'cpuWdtPassword',0,1,180,1,24
	.word	.L156,.L157
	.byte	5
	.byte	'safetyWdtPassword',0,1,181,1,24
	.word	.L156,.L158
	.byte	6
	.word	.L159,.L160,.L161
	.byte	7
	.word	.L162,.L163
	.byte	8
	.word	.L164,.L165
	.byte	5
	.byte	'password',0,2,186,2,20
	.word	.L156,.L168
	.byte	0,0,6
	.word	.L169,.L161,.L170
	.byte	8
	.word	.L171,.L172
	.byte	5
	.byte	'password',0,2,200,2,20
	.word	.L156,.L174
	.byte	5
	.byte	'watchdog',0,2,201,2,20
	.word	.L175,.L176
	.byte	0,0,6
	.word	.L159,.L166,.L167
	.byte	7
	.word	.L162,.L163
	.byte	0,9
	.word	.L169,.L167,.L173
	.byte	0,6
	.word	.L99,.L177,.L178
	.byte	7
	.word	.L102,.L179
	.byte	10
	.word	.L104,.L177,.L178
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('__StartUpSoftware_Phase4')
	.sect	'.debug_abbrev'
.L66:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1,49,16
	.byte	17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,85,6,0,0,9,29,0,49,16,17,1,18,1,0,0,10,11,0,49,16,17,1
	.byte	18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('__StartUpSoftware_Phase4')
	.sect	'.debug_line'
.L67:
	.word	.L326-.L325
.L325:
	.half	3
	.word	.L328-.L327
.L327:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Infra.h',0,0,0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L328:
	.byte	5,99,7,0,5,2
	.word	.L32
	.byte	3,179,1,1,4,2,5,33,9
	.half	.L160-.L32
	.byte	3,139,1,1,5,14,9
	.half	.L329-.L160
	.byte	3,1,1,5,33,9
	.half	.L161-.L329
	.byte	3,14,1,5,14,9
	.half	.L330-.L161
	.byte	3,1,1,4,1,5,54,9
	.half	.L170-.L330
	.byte	3,233,126,1,5,59,9
	.half	.L166-.L170
	.byte	1,5,39,9
	.half	.L167-.L166
	.byte	3,1,1,5,28,9
	.half	.L155-.L167
	.byte	3,9,1,4,3,5,5,9
	.half	.L177-.L155
	.byte	3,83,1,4,1,5,1,9
	.half	.L178-.L177
	.byte	3,46,1,7,9
	.half	.L69-.L178
	.byte	0,1,1
.L326:
	.sdecl	'.debug_ranges',debug,cluster('__StartUpSoftware_Phase4')
	.sect	'.debug_ranges'
.L68:
	.word	-1,.L32,0,.L69-.L32,0,0
.L165:
	.word	-1,.L32,.L160-.L32,.L161-.L32,.L166-.L32,.L167-.L32,0,0
.L172:
	.word	-1,.L32,.L161-.L32,.L170-.L32,.L167-.L32,.L173-.L32,0,0
	.sdecl	'.debug_info',debug,cluster('__StartUpSoftware_Phase5')
	.sect	'.debug_info'
.L70:
	.word	271
	.half	3
	.word	.L71
	.byte	4,1
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L73,.L72
	.byte	2
	.word	.L41
	.byte	3
	.byte	'__StartUpSoftware_Phase5',0,1,198,1,13,1,1
	.word	.L34,.L180,.L33
	.byte	4
	.word	.L34,.L180
	.byte	5
	.word	.L99,.L181,.L182
	.byte	6
	.word	.L102,.L183
	.byte	7
	.word	.L104,.L181,.L182
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('__StartUpSoftware_Phase5')
	.sect	'.debug_abbrev'
.L71:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11,0,49
	.byte	16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('__StartUpSoftware_Phase5')
	.sect	'.debug_line'
.L72:
	.word	.L332-.L331
.L331:
	.half	3
	.word	.L334-.L333
.L333:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L334:
	.byte	5,28,7,0,5,2
	.word	.L34
	.byte	3,202,1,1,4,2,5,5,9
	.half	.L181-.L34
	.byte	3,74,1,4,1,5,1,9
	.half	.L182-.L181
	.byte	3,55,1,7,9
	.half	.L74-.L182
	.byte	0,1,1
.L332:
	.sdecl	'.debug_ranges',debug,cluster('__StartUpSoftware_Phase5')
	.sect	'.debug_ranges'
.L73:
	.word	-1,.L34,0,.L74-.L34,0,0
	.sdecl	'.debug_info',debug,cluster('__StartUpSoftware_Phase6')
	.sect	'.debug_info'
.L75:
	.word	271
	.half	3
	.word	.L76
	.byte	4,1
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L78,.L77
	.byte	2
	.word	.L41
	.byte	3
	.byte	'__StartUpSoftware_Phase6',0,1,207,1,13,1,1
	.word	.L36,.L184,.L35
	.byte	4
	.word	.L36,.L184
	.byte	5
	.word	.L99,.L185,.L186
	.byte	6
	.word	.L102,.L187
	.byte	7
	.word	.L104,.L185,.L186
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('__StartUpSoftware_Phase6')
	.sect	'.debug_abbrev'
.L76:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11,0,49
	.byte	16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('__StartUpSoftware_Phase6')
	.sect	'.debug_line'
.L77:
	.word	.L336-.L335
.L335:
	.half	3
	.word	.L338-.L337
.L337:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L338:
	.byte	5,24,7,0,5,2
	.word	.L36
	.byte	3,210,1,1,5,51,9
	.half	.L339-.L36
	.byte	1,5,37,9
	.half	.L340-.L339
	.byte	1,5,28,9
	.half	.L341-.L340
	.byte	3,23,1,4,2,5,5,9
	.half	.L185-.L341
	.byte	3,171,127,1,4,1,5,1,9
	.half	.L186-.L185
	.byte	3,214,0,1,7,9
	.half	.L79-.L186
	.byte	0,1,1
.L336:
	.sdecl	'.debug_ranges',debug,cluster('__StartUpSoftware_Phase6')
	.sect	'.debug_ranges'
.L78:
	.word	-1,.L36,0,.L79-.L36,0,0
	.sdecl	'.debug_info',debug,cluster('__Core0_start')
	.sect	'.debug_info'
.L80:
	.word	716
	.half	3
	.word	.L81
	.byte	4,1
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L83,.L82
	.byte	2
	.word	.L41
	.byte	3
	.byte	'__Core0_start',0,1,238,1,13,1,1
	.word	.L38,.L188,.L37
	.byte	4
	.word	.L38,.L188
	.byte	5
	.byte	'cpuWdtPassword',0,1,242,1,20
	.word	.L156,.L189
	.byte	5
	.byte	'safetyWdtPassword',0,1,243,1,20
	.word	.L156,.L190
	.byte	6
	.word	.L159,.L191,.L192
	.byte	7
	.word	.L162,.L193
	.byte	8
	.word	.L164,.L194
	.byte	5
	.byte	'password',0,2,186,2,20
	.word	.L156,.L199
	.byte	0,0,6
	.word	.L169,.L192,.L200
	.byte	8
	.word	.L171,.L201
	.byte	5
	.byte	'password',0,2,200,2,20
	.word	.L156,.L206
	.byte	5
	.byte	'watchdog',0,2,201,2,20
	.word	.L175,.L207
	.byte	0,0,6
	.word	.L208,.L209,.L210
	.byte	7
	.word	.L211,.L212
	.byte	7
	.word	.L213,.L214
	.byte	9
	.word	.L215,.L209,.L210
	.byte	0,4
	.word	.L210,.L216
	.byte	5
	.byte	'pcon0',0,1,249,1,23
	.word	.L217,.L218
	.byte	6
	.word	.L131,.L219,.L216
	.byte	9
	.word	.L133,.L219,.L216
	.byte	0,0,4
	.word	.L216,.L220
	.byte	5
	.byte	'dcon0',0,1,129,2,23
	.word	.L221,.L222
	.byte	6
	.word	.L131,.L223,.L220
	.byte	9
	.word	.L133,.L223,.L220
	.byte	0,0,6
	.word	.L224,.L225,.L226
	.byte	7
	.word	.L227,.L228
	.byte	7
	.word	.L229,.L230
	.byte	9
	.word	.L231,.L225,.L226
	.byte	0,6
	.word	.L159,.L195,.L196
	.byte	7
	.word	.L162,.L193
	.byte	0,10
	.word	.L169,.L202,.L203
	.byte	10
	.word	.L169,.L204,.L205
	.byte	6
	.word	.L159,.L197,.L198
	.byte	7
	.word	.L162,.L193
	.byte	0,6
	.word	.L99,.L232,.L233
	.byte	7
	.word	.L102,.L234
	.byte	9
	.word	.L104,.L232,.L233
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('__Core0_start')
	.sect	'.debug_abbrev'
.L81:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,29,1,49,16
	.byte	17,1,18,1,0,0,7,5,0,49,16,2,6,0,0,8,11,1,49,16,85,6,0,0,9,11,0,49,16,17,1,18,1,0,0,10,29,0,49,16,17,1
	.byte	18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('__Core0_start')
	.sect	'.debug_line'
.L82:
	.word	.L343-.L342
.L342:
	.half	3
	.word	.L345-.L344
.L344:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Infra.h',0,0,0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L345:
	.byte	5,95,7,0,5,2
	.word	.L38
	.byte	3,241,1,1,4,2,5,33,9
	.half	.L191-.L38
	.byte	3,205,0,1,5,14,9
	.half	.L346-.L191
	.byte	3,1,1,5,33,9
	.half	.L192-.L346
	.byte	3,14,1,5,14,9
	.half	.L347-.L192
	.byte	3,1,1,4,1,5,53,9
	.half	.L200-.L347
	.byte	3,166,127,1,4,2,5,25,9
	.half	.L209-.L200
	.byte	3,226,0,1,5,5,9
	.half	.L348-.L209
	.byte	1,5,52,7,9
	.half	.L349-.L348
	.byte	3,5,1,5,59,9
	.half	.L350-.L349
	.byte	3,1,1,5,64,9
	.half	.L351-.L350
	.byte	1,5,83,9
	.half	.L352-.L351
	.byte	3,127,1,5,26,9
	.half	.L353-.L352
	.byte	3,126,1,5,48,9
	.half	.L21-.L353
	.byte	3,9,1,5,55,9
	.half	.L354-.L21
	.byte	3,1,1,5,60,9
	.half	.L355-.L354
	.byte	1,5,79,9
	.half	.L356-.L355
	.byte	3,127,1,5,22,9
	.half	.L357-.L356
	.byte	3,126,1,5,19,9
	.half	.L358-.L357
	.byte	3,6,1,4,1,5,23,9
	.half	.L210-.L358
	.byte	3,147,127,1,9
	.half	.L256-.L210
	.byte	3,1,1,5,9,9
	.half	.L257-.L256
	.byte	3,1,1,4,3,5,12,9
	.half	.L219-.L257
	.byte	3,248,126,1,4,1,5,23,9
	.half	.L216-.L219
	.byte	3,143,1,1,5,9,9
	.half	.L259-.L216
	.byte	3,1,1,4,3,5,12,9
	.half	.L223-.L259
	.byte	3,240,126,1,4,1,5,5,9
	.half	.L220-.L223
	.byte	3,149,1,1,9
	.half	.L359-.L220
	.byte	3,3,1,9
	.half	.L360-.L359
	.byte	3,1,1,9
	.half	.L361-.L360
	.byte	3,3,1,9
	.half	.L362-.L361
	.byte	3,2,1,9
	.half	.L363-.L362
	.byte	3,2,1,5,51,9
	.half	.L364-.L363
	.byte	3,4,1,4,2,5,25,9
	.half	.L225-.L364
	.byte	3,235,0,1,5,5,9
	.half	.L365-.L225
	.byte	1,5,52,7,9
	.half	.L366-.L365
	.byte	3,5,1,5,59,9
	.half	.L367-.L366
	.byte	3,1,1,5,64,9
	.half	.L368-.L367
	.byte	1,5,83,9
	.half	.L369-.L368
	.byte	3,127,1,5,26,9
	.half	.L370-.L369
	.byte	3,126,1,5,48,9
	.half	.L22-.L370
	.byte	3,9,1,5,55,9
	.half	.L371-.L22
	.byte	3,1,1,5,60,9
	.half	.L372-.L371
	.byte	1,5,79,9
	.half	.L373-.L372
	.byte	3,127,1,5,22,9
	.half	.L374-.L373
	.byte	3,126,1,5,19,9
	.half	.L375-.L374
	.byte	3,6,1,4,1,5,50,9
	.half	.L226-.L375
	.byte	3,138,127,1,5,55,9
	.half	.L195-.L226
	.byte	1,5,35,9
	.half	.L202-.L195
	.byte	3,1,1,5,19,9
	.half	.L261-.L202
	.byte	3,3,1,5,34,9
	.half	.L204-.L261
	.byte	3,2,1,5,49,9
	.half	.L262-.L204
	.byte	3,7,1,5,54,9
	.half	.L197-.L262
	.byte	1,5,28,9
	.half	.L263-.L197
	.byte	3,3,1,4,3,5,5,9
	.half	.L232-.L263
	.byte	3,232,126,1,4,1,5,1,9
	.half	.L233-.L232
	.byte	3,153,1,1,7,9
	.half	.L84-.L233
	.byte	0,1,1
.L343:
	.sdecl	'.debug_ranges',debug,cluster('__Core0_start')
	.sect	'.debug_ranges'
.L83:
	.word	-1,.L38,0,.L84-.L38,0,0
.L194:
	.word	-1,.L38,.L191-.L38,.L192-.L38,.L195-.L38,.L196-.L38,.L197-.L38,.L198-.L38,0,0
.L201:
	.word	-1,.L38,.L192-.L38,.L200-.L38,.L202-.L38,.L203-.L38,.L204-.L38,.L205-.L38,0,0
	.sdecl	'.debug_info',debug,cluster('_START')
	.sect	'.debug_info'
.L85:
	.word	254
	.half	3
	.word	.L86
	.byte	4,1
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L88,.L87
	.byte	2
	.word	.L41
	.byte	3
	.byte	'_START',0,1,195,2,6,1,1,1
	.word	.L40,.L235,.L39
	.byte	4
	.word	.L40,.L235
	.byte	5
	.word	.L99,.L236,.L237
	.byte	6
	.word	.L102,.L238
	.byte	7
	.word	.L104,.L236,.L237
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('_START')
	.sect	'.debug_abbrev'
.L86:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,29,1,49,16,17,1,18,1,0,0,6,5,0,49,16,2,6,0,0,7,11
	.byte	0,49,16,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('_START')
	.sect	'.debug_line'
.L87:
	.word	.L377-.L376
.L376:
	.half	3
	.word	.L379-.L378
.L378:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_Tc0.c',0,0,0,0
	.byte	'..\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore\\Ifx_Ssw_CompilersTasking.h',0,0,0,0,0
.L379:
	.byte	5,28,7,0,5,2
	.word	.L40
	.byte	3,196,2,1,4,2,5,5,9
	.half	.L236-.L40
	.byte	3,208,126,1,4,1,5,1,9
	.half	.L237-.L236
	.byte	3,177,1,1,7,9
	.half	.L89-.L237
	.byte	0,1,1
.L377:
	.sdecl	'.debug_ranges',debug,cluster('_START')
	.sect	'.debug_ranges'
.L88:
	.word	-1,.L40,0,.L89-.L40,0,0
	.sdecl	'.debug_loc',debug,cluster('_START')
	.sect	'.debug_loc'
.L39:
	.word	-1,.L40,0,.L235-.L40
	.half	2
	.byte	138,0
	.word	0,0
.L238:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('__Core0_start')
	.sect	'.debug_loc'
.L37:
	.word	-1,.L38,0,.L188-.L38
	.half	2
	.byte	138,0
	.word	0,0
.L189:
	.word	0,0
.L222:
	.word	-1,.L38,.L259-.L38,.L260-.L38
	.half	1
	.byte	95
	.word	0,0
.L234:
	.word	0,0
.L199:
	.word	-1,.L38,.L192-.L38,.L188-.L38
	.half	1
	.byte	88
	.word	.L196-.L38,.L202-.L38
	.half	1
	.byte	84
	.word	.L198-.L38,.L263-.L38
	.half	1
	.byte	84
	.word	0,0
.L206:
	.word	-1,.L38,.L200-.L38,.L188-.L38
	.half	1
	.byte	89
	.word	.L203-.L38,.L261-.L38
	.half	1
	.byte	84
	.word	.L205-.L38,.L262-.L38
	.half	1
	.byte	84
	.word	0,0
.L214:
	.word	0,0
.L230:
	.word	0,0
.L218:
	.word	-1,.L38,.L256-.L38,.L257-.L38
	.half	1
	.byte	95
	.word	.L257-.L38,.L258-.L38
	.half	5
	.byte	144,32,157,32,0
	.word	.L216-.L38,.L259-.L38
	.half	1
	.byte	95
	.word	0,0
.L190:
	.word	0,0
.L193:
	.word	0,0
.L207:
	.word	-1,.L38,.L191-.L38,.L255-.L38
	.half	1
	.byte	111
	.word	0,0
.L212:
	.word	0,0
.L228:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('__StartUpSoftware')
	.sect	'.debug_loc'
.L23:
	.word	-1,.L24,0,.L90-.L24
	.half	2
	.byte	138,0
	.word	0,0
.L103:
	.word	0,0
.L96:
	.word	-1,.L24,.L242-.L24,.L2-.L24
	.half	1
	.byte	95
	.word	.L8-.L24,.L90-.L24
	.half	1
	.byte	95
	.word	0,0
.L98:
	.word	-1,.L24,.L239-.L24,.L240-.L24
	.half	5
	.byte	144,32,157,32,0
	.word	.L241-.L24,.L3-.L24
	.half	1
	.byte	95
	.word	.L3-.L24,.L5-.L24
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('__StartUpSoftware_Phase2')
	.sect	'.debug_loc'
.L25:
	.word	-1,.L26,0,.L107-.L26
	.half	2
	.byte	138,0
	.word	0,0
.L110:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('__StartUpSoftware_Phase3ApplicationResetPath')
	.sect	'.debug_loc'
.L29:
	.word	-1,.L30,0,.L111-.L30
	.half	2
	.byte	138,0
	.word	0,0
.L120:
	.word	0,0
.L122:
	.word	0,0
.L136:
	.word	0,0
.L124:
	.word	-1,.L30,.L253-.L30,.L111-.L30
	.half	1
	.byte	81
	.word	0,0
.L129:
	.word	-1,.L30,.L252-.L30,.L111-.L30
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L128:
	.word	-1,.L30,.L249-.L30,.L250-.L30
	.half	1
	.byte	111
	.word	0,0
.L125:
	.word	-1,.L30,.L254-.L30,.L16-.L30
	.half	1
	.byte	83
	.word	0,0
.L127:
	.word	-1,.L30,.L251-.L30,.L111-.L30
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('__StartUpSoftware_Phase3PowerOnResetPath')
	.sect	'.debug_loc'
.L27:
	.word	-1,.L28,0,.L137-.L28
	.half	2
	.byte	138,0
	.word	0,0
.L142:
	.word	0,0
.L143:
	.word	0,0
.L153:
	.word	0,0
.L144:
	.word	-1,.L28,.L247-.L28,.L137-.L28
	.half	1
	.byte	81
	.word	0,0
.L148:
	.word	-1,.L28,.L246-.L28,.L137-.L28
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L147:
	.word	-1,.L28,.L243-.L28,.L244-.L28
	.half	1
	.byte	111
	.word	0,0
.L145:
	.word	-1,.L28,.L248-.L28,.L11-.L28
	.half	1
	.byte	83
	.word	0,0
.L146:
	.word	-1,.L28,.L245-.L28,.L137-.L28
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('__StartUpSoftware_Phase4')
	.sect	'.debug_loc'
.L31:
	.word	-1,.L32,0,.L154-.L32
	.half	2
	.byte	138,0
	.word	0,0
.L157:
	.word	0,0
.L179:
	.word	0,0
.L168:
	.word	-1,.L32,.L161-.L32,.L167-.L32
	.half	1
	.byte	84
	.word	0,0
.L174:
	.word	-1,.L32,.L170-.L32,.L154-.L32
	.half	1
	.byte	95
	.word	.L173-.L32,.L155-.L32
	.half	1
	.byte	84
	.word	0,0
.L158:
	.word	0,0
.L163:
	.word	0,0
.L176:
	.word	-1,.L32,.L160-.L32,.L167-.L32
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('__StartUpSoftware_Phase5')
	.sect	'.debug_loc'
.L33:
	.word	-1,.L34,0,.L180-.L34
	.half	2
	.byte	138,0
	.word	0,0
.L183:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('__StartUpSoftware_Phase6')
	.sect	'.debug_loc'
.L35:
	.word	-1,.L36,0,.L184-.L36
	.half	2
	.byte	138,0
	.word	0,0
.L187:
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L380:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('__StartUpSoftware')
	.sect	'.debug_frame'
	.word	24
	.word	.L380,.L24,.L90-.L24
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('__StartUpSoftware_Phase2')
	.sect	'.debug_frame'
	.word	24
	.word	.L380,.L26,.L107-.L26
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('__StartUpSoftware_Phase3PowerOnResetPath')
	.sect	'.debug_frame'
	.word	20
	.word	.L380,.L28,.L137-.L28
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('__StartUpSoftware_Phase3ApplicationResetPath')
	.sect	'.debug_frame'
	.word	20
	.word	.L380,.L30,.L111-.L30
	.byte	8,19,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('__StartUpSoftware_Phase4')
	.sect	'.debug_frame'
	.word	12
	.word	.L380,.L32,.L154-.L32
	.sdecl	'.debug_frame',debug,cluster('__StartUpSoftware_Phase5')
	.sect	'.debug_frame'
	.word	24
	.word	.L380,.L34,.L180-.L34
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('__StartUpSoftware_Phase6')
	.sect	'.debug_frame'
	.word	12
	.word	.L380,.L36,.L184-.L36
	.sdecl	'.debug_frame',debug,cluster('__Core0_start')
	.sect	'.debug_frame'
	.word	12
	.word	.L380,.L38,.L188-.L38
	.sdecl	'.debug_frame',debug,cluster('_START')
	.sect	'.debug_frame'
	.word	24
	.word	.L380,.L40,.L235-.L40
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   327  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   328  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   329  /* reset the sections defined above, to normal region */
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   330  #if defined(__HIGHTEC__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   331  #pragma section
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   332  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   333  #if defined(__TASKING__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   334  #pragma protect restore
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   335  #pragma section code restore
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   336  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   337  #if defined(__DCC__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   338  #pragma section CODE
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   339  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   340  #if defined(__ghs__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   341  #pragma ghs section text=default
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   342  #endif
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   343  
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   344  /*Restore the options to command line provided ones*/
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   345  #if defined(__HIGHTEC__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   346  #pragma GCC reset_options
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   347  #elif defined(__TASKING__)
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   348  #pragma endoptimize
; ..\Mcal\Infra_Prod\Ssw\TC39B\Tricore\Ifx_Ssw_Tc0.c	   349  #endif

	; Module end
