	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 09003395"
	.compiler_invocation	"ctc -f cc27212a --dep-file=EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\.utils.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --fp-model=+float -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Lib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\App_Func -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\demo -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Adc_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Gtm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\AscLin_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Can_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\EthV2_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Stm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Main -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\APP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\BswM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanSm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Com -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\ComM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Common -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Crc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Det -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\DoIP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EcuM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Eth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthSM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTrcv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FiM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FlsTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Nm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\PduR -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\RamTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\StbM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\arpa -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\net -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\sys -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\stdc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\apps -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\priv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\UdpNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Cal -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Daq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pag -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pgm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Std -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\XcpOnEth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Library\\Vfx_ComE2E -g2 --make-target=EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\utils.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O1 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\utils.src ..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\utils.c"
	.compiler_name		"ctc"
	;source	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\utils.c'

	
$TC162
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	4548
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\utils.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L5
	.byte	2,1,3
	.word	169
	.byte	4
	.byte	'__codeptr',0,1,1,1
	.word	171
	.byte	5
	.byte	'unsigned char',0,1,8,4
	.byte	'boolean',0,2,102,29
	.word	194
	.byte	4
	.byte	'uint8',0,2,106,29
	.word	194
	.byte	5
	.byte	'unsigned short int',0,2,7,4
	.byte	'uint16',0,2,110,29
	.word	241
	.byte	5
	.byte	'unsigned long int',0,4,7,4
	.byte	'uint32',0,2,114,29
	.word	278
	.byte	4
	.byte	'Std_ReturnType',0,3,109,16
	.word	194
	.byte	4
	.byte	'PduIdType',0,4,37,21
	.word	194
	.byte	4
	.byte	'PduLengthType',0,4,41,22
	.word	241
	.byte	6,5,101,9,1,7
	.byte	'BUFREQ_OK',0,0,7
	.byte	'BUFREQ_E_NOT_OK',0,1,7
	.byte	'BUFREQ_E_BUSY',0,2,7
	.byte	'BUFREQ_E_OVFL',0,3,0,4
	.byte	'BufReq_ReturnType',0,5,107,3
	.word	377
	.byte	3
	.word	194
	.byte	4
	.byte	'SduDataPtrType',0,5,189,1,40
	.word	471
	.byte	6,5,204,1,9,1,7
	.byte	'TP_DATACONF',0,0,7
	.byte	'TP_DATARETRY',0,1,7
	.byte	'TP_CONFPENDING',0,2,0,4
	.byte	'TpDataStateType',0,5,216,1,3
	.word	500
	.byte	4
	.byte	'TcpIp_SocketIdType',0,6,50,16
	.word	194
	.byte	8,4
	.word	278
	.byte	9,0,0,10,6,52,9,4,11
	.byte	'Addr',0
	.word	605
	.byte	4,2,35,0,0,4
	.byte	'TcpIp_IpAddressType',0,6,55,3
	.word	614
	.byte	4
	.byte	'TcpIp_DomainType',0,6,61,16
	.word	241
	.byte	10,6,68,9,8,11
	.byte	'Domain',0
	.word	241
	.byte	2,2,35,0,11
	.byte	'Port',0
	.word	241
	.byte	2,2,35,2,11
	.byte	'Addr',0
	.word	605
	.byte	4,2,35,4,0,4
	.byte	'TcpIp_SockAddrInetType',0,6,73,3
	.word	687
	.byte	4
	.byte	'TcpIp_AddressType',0,7,128,1,15
	.word	194
	.byte	4
	.byte	'TcpIp_CtrlIdType',0,7,142,1,15
	.word	194
	.byte	4
	.byte	'TcpIp_IpAddrStateType',0,7,144,1,15
	.word	194
	.byte	4
	.byte	'TcpIp_LocalAddrAssignmentConfigType',0,7,149,1,15
	.word	194
	.byte	4
	.byte	'TcpIp_StaticAddrIdType',0,7,151,1,15
	.word	194
	.byte	10,7,152,1,9,12,11
	.byte	'State',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'Netmask',0
	.word	194
	.byte	1,2,35,1,11
	.byte	'Domain',0
	.word	241
	.byte	2,2,35,2,11
	.byte	'IpAddr',0
	.word	614
	.byte	4,2,35,4,11
	.byte	'DefaultRouter',0
	.word	614
	.byte	4,2,35,8,0,4
	.byte	'TcpIp_StaticIpAddrType',0,7,162,1,3
	.word	929
	.byte	4
	.byte	'TcpIp_LocalAddrIdType',0,7,173,1,15
	.word	194
	.byte	8,3
	.word	194
	.byte	9,2,0,10,7,231,1,9,8,11
	.byte	'CtrlId',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'Address',0
	.word	194
	.byte	1,2,35,1,11
	.byte	'Domain',0
	.word	241
	.byte	2,2,35,2,11
	.byte	'StaticAddrId',0
	.word	194
	.byte	1,2,35,4,11
	.byte	'Assignments',0
	.word	1086
	.byte	3,2,35,5,0,4
	.byte	'TcpIp_LocalAddrConfigType',0,7,243,1,3
	.word	1095
	.byte	10,7,245,1,9,4,11
	.byte	'ArpConfigId',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'DHCPConfigId',0
	.word	194
	.byte	1,2,35,1,11
	.byte	'AutoIpInitTimeout',0
	.word	241
	.byte	2,2,35,2,0,4
	.byte	'TcpIp_IpV4CtrlConfigType',0,7,130,2,3
	.word	1229
	.byte	10,7,133,2,9,8,11
	.byte	'CtrlIdx',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'FramePrio',0
	.word	194
	.byte	1,2,35,1,11
	.byte	'UnicastAddrId',0
	.word	194
	.byte	1,2,35,2,11
	.byte	'UnicastAddrLimit',0
	.word	194
	.byte	1,2,35,3,11
	.byte	'MulticastAddrId',0
	.word	194
	.byte	1,2,35,4,11
	.byte	'LocalAddrLimit',0
	.word	194
	.byte	1,2,35,5,11
	.byte	'IpV4CtrlId',0
	.word	194
	.byte	1,2,35,6,11
	.byte	'IpV6CtrlId',0
	.word	194
	.byte	1,2,35,7,0,4
	.byte	'TcpIp_NetIfCtrlConfigType',0,7,148,2,3
	.word	1340
	.byte	4
	.byte	'SoAd_RoutingGroupIdType',0,8,43,15
	.word	194
	.byte	4
	.byte	'SoAd_SoConIdType',0,8,44,15
	.word	194
	.byte	4
	.byte	'SoAd_SoConGroupIdType',0,8,45,15
	.word	194
	.byte	4
	.byte	'SoAd_PduRouteIdType',0,8,46,15
	.word	194
	.byte	4
	.byte	'SoAd_PduRouteDestIdType',0,8,47,15
	.word	194
	.byte	4
	.byte	'SoAd_SocketRouteIdType',0,8,48,15
	.word	194
	.byte	4
	.byte	'SoAd_IfTxUnconfirmedType',0,8,49,16
	.word	241
	.byte	4
	.byte	'SoAd_IfTxTimerType',0,8,51,16
	.word	241
	.byte	8,1
	.word	194
	.byte	9,0,0,10,8,53,9,2,11
	.byte	'Mask',0
	.word	1794
	.byte	1,2,35,0,11
	.byte	'RoutingState',0
	.word	1794
	.byte	1,2,35,1,0,4
	.byte	'SoAd_RoutingGroupCtrlType',0,8,57,3
	.word	1803
	.byte	6,8,63,9,1,7
	.byte	'SOAD_UL_DOIP',0,0,7
	.byte	'SOAD_UL_UDPNM',0,1,7
	.byte	'SOAD_UL_PDUR',0,2,7
	.byte	'SOAD_UL_XCP',0,3,7
	.byte	'SOAD_UL_MAX',0,4,0,4
	.byte	'SoAd_ULIndexType',0,8,71,3
	.word	1879
	.byte	4
	.byte	'SoAd_RemoteAddressType',0,9,113,32
	.word	687
	.byte	6,9,115,9,1,7
	.byte	'SOAD_SOCON_UNINIT',0,0,7
	.byte	'SOAD_SOCON_OFFLINE',0,1,7
	.byte	'SOAD_SOCON_RECONN',0,2,7
	.byte	'SOAD_SOCON_ONLINE',0,3,0,4
	.byte	'SoAd_SoConModeType',0,9,121,3
	.word	2015
	.byte	12
	.word	194
	.byte	3
	.word	2129
	.byte	12
	.word	194
	.byte	3
	.word	2139
	.byte	12
	.word	194
	.byte	3
	.word	2149
	.byte	12
	.word	1879
	.byte	3
	.word	2159
	.byte	10,9,129,1,9,36,11
	.byte	'IfBufferLength',0
	.word	241
	.byte	2,2,35,0,11
	.byte	'IfBufferOffset',0
	.word	241
	.byte	2,2,35,2,11
	.byte	'TpBufferLength',0
	.word	241
	.byte	2,2,35,4,11
	.byte	'TpBufferOffset',0
	.word	241
	.byte	2,2,35,6,11
	.byte	'PduRouteNum',0
	.word	194
	.byte	1,2,35,8,11
	.byte	'SocketRouteNum',0
	.word	194
	.byte	1,2,35,9,11
	.byte	'PduRouteDestNum',0
	.word	194
	.byte	1,2,35,10,11
	.byte	'RemoteAddrState',0
	.word	194
	.byte	1,2,35,11,11
	.byte	'RemoteAddr',0
	.word	687
	.byte	8,2,35,12,11
	.byte	'PduRouteDestList',0
	.word	2134
	.byte	4,2,35,20,11
	.byte	'PduRouteList',0
	.word	2144
	.byte	4,2,35,24,11
	.byte	'SocketRouteList',0
	.word	2154
	.byte	4,2,35,28,11
	.byte	'SoConModeChgList',0
	.word	2164
	.byte	4,2,35,32,0,4
	.byte	'SoAd_SocketConnectionType',0,9,146,1,3
	.word	2169
	.byte	10,9,148,1,9,16,11
	.byte	'CtrlFlag',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'KeepAliveProbesMax',0
	.word	241
	.byte	2,2,35,2,11
	.byte	'KeepAliveInterval',0
	.word	278
	.byte	4,2,35,4,11
	.byte	'KeepAliveTime',0
	.word	278
	.byte	4,2,35,8,11
	.byte	'TxQuota',0
	.word	278
	.byte	4,2,35,12,0,4
	.byte	'SoAd_TcpProtocolType',0,9,155,1,3
	.word	2521
	.byte	10,9,157,1,9,12,11
	.byte	'CtrlFlag',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'nPduTxBufferMin',0
	.word	241
	.byte	2,2,35,2,11
	.byte	'TriggerTimeout',0
	.word	241
	.byte	2,2,35,4,11
	.byte	'AliveSupervisionTimeout',0
	.word	278
	.byte	4,2,35,6,0,4
	.byte	'SoAd_UdpProtocolType',0,9,163,1,3
	.word	2671
	.byte	12
	.word	2521
	.byte	3
	.word	2808
	.byte	12
	.word	2671
	.byte	3
	.word	2818
	.byte	10,9,165,1,9,24,11
	.byte	'GroupId',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'CtrlFlag',0
	.word	194
	.byte	1,2,35,1,11
	.byte	'FramePriority',0
	.word	194
	.byte	1,2,35,2,11
	.byte	'SoConNum',0
	.word	194
	.byte	1,2,35,3,11
	.byte	'SoConId',0
	.word	194
	.byte	1,2,35,4,11
	.byte	'IpAddrAssignChgNum',0
	.word	194
	.byte	1,2,35,5,11
	.byte	'LocalAddrId',0
	.word	194
	.byte	1,2,35,6,11
	.byte	'LocalPort',0
	.word	241
	.byte	2,2,35,8,11
	.byte	'IpAddrAssignChgList',0
	.word	2164
	.byte	4,2,35,12,11
	.byte	'TcpProtocolPtr',0
	.word	2813
	.byte	4,2,35,16,11
	.byte	'UdpProtocolPtr',0
	.word	2823
	.byte	4,2,35,20,0,4
	.byte	'SoAd_SocketConnectionGroupType',0,9,178,1,3
	.word	2828
	.byte	12
	.word	194
	.byte	3
	.word	3113
	.byte	10,9,180,1,9,12,11
	.byte	'CtrlFlag',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'PduRouteDestNum',0
	.word	194
	.byte	1,2,35,1,11
	.byte	'SocketRouteDestNum',0
	.word	194
	.byte	1,2,35,2,11
	.byte	'PduRouteDestList',0
	.word	3118
	.byte	4,2,35,4,11
	.byte	'SocketRouteDestList',0
	.word	3118
	.byte	4,2,35,8,0,4
	.byte	'SoAd_RoutingGroupType',0,9,187,1,3
	.word	3123
	.byte	10,9,189,1,9,6,11
	.byte	'ULType',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'ULIndex',0
	.word	1879
	.byte	1,2,35,1,11
	.byte	'CtrlFlag',0
	.word	194
	.byte	1,2,35,2,11
	.byte	'RouteDestNum',0
	.word	194
	.byte	1,2,35,3,11
	.byte	'RouteDestId',0
	.word	194
	.byte	1,2,35,4,11
	.byte	'TxPduId',0
	.word	194
	.byte	1,2,35,5,0,4
	.byte	'SoAd_PduRouteType',0,9,204,1,3
	.word	3287
	.byte	3
	.word	1803
	.byte	10,9,206,1,9,20,11
	.byte	'TxPduHeaderId',0
	.word	278
	.byte	4,2,35,0,11
	.byte	'SoConNum',0
	.word	194
	.byte	1,2,35,4,11
	.byte	'SoConId',0
	.word	194
	.byte	1,2,35,5,11
	.byte	'PduRouteId',0
	.word	194
	.byte	1,2,35,6,11
	.byte	'UdpTriggerMode',0
	.word	194
	.byte	1,2,35,7,11
	.byte	'UdpTriggerTimeout',0
	.word	241
	.byte	2,2,35,8,11
	.byte	'RoutingCtrlList',0
	.word	3432
	.byte	4,2,35,12,11
	.byte	'IfTriggerList',0
	.word	471
	.byte	4,2,35,16,0,4
	.byte	'SoAd_PduRouteDestType',0,9,217,1,3
	.word	3437
	.byte	10,9,219,1,9,16,11
	.byte	'RxPduHeaderId',0
	.word	278
	.byte	4,2,35,0,11
	.byte	'ULType',0
	.word	194
	.byte	1,2,35,4,11
	.byte	'ULIndex',0
	.word	1879
	.byte	1,2,35,5,11
	.byte	'SoConNum',0
	.word	194
	.byte	1,2,35,6,11
	.byte	'SoConId',0
	.word	194
	.byte	1,2,35,7,11
	.byte	'RxPduId',0
	.word	194
	.byte	1,2,35,8,11
	.byte	'RoutingCtrlList',0
	.word	3432
	.byte	4,2,35,12,0,4
	.byte	'SoAd_SocketRouteType',0,9,236,1,3
	.word	3652
	.byte	12
	.word	3437
	.byte	3
	.word	3822
	.byte	10,9,155,2,9,24,11
	.byte	'State',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'Timer',0
	.word	241
	.byte	2,2,35,2,11
	.byte	'BufferLength',0
	.word	241
	.byte	2,2,35,4,11
	.byte	'BufferOffset',0
	.word	241
	.byte	2,2,35,6,11
	.byte	'UdpTxBuffer',0
	.word	471
	.byte	4,2,35,8,11
	.byte	'TotalTxLength',0
	.word	241
	.byte	2,2,35,12,11
	.byte	'UsedTxLength',0
	.word	241
	.byte	2,2,35,14,11
	.byte	'IfTxDataBuffer',0
	.word	3118
	.byte	4,2,35,16,11
	.byte	'PduRouteDestPtr',0
	.word	3827
	.byte	4,2,35,20,0,4
	.byte	'SoAd_TxSessionType',0,9,177,2,3
	.word	3832
	.byte	12
	.word	3652
	.byte	3
	.word	4056
	.byte	10,9,180,2,9,8,11
	.byte	'PduLength',0
	.word	241
	.byte	2,2,35,0,11
	.byte	'RemainLength',0
	.word	241
	.byte	2,2,35,2,11
	.byte	'SocketRoutePtr',0
	.word	4061
	.byte	4,2,35,4,0,4
	.byte	'SoAd_RxPduInfoType',0,9,185,2,3
	.word	4066
	.byte	10,9,187,2,9,12,11
	.byte	'TotalLength',0
	.word	241
	.byte	2,2,35,0,11
	.byte	'In',0
	.word	241
	.byte	2,2,35,2,11
	.byte	'Out',0
	.word	241
	.byte	2,2,35,4,11
	.byte	'BufferPtr',0
	.word	471
	.byte	4,2,35,8,0,4
	.byte	'SoAd_RxFifoType',0,9,193,2,3
	.word	4166
	.byte	10,9,195,2,9,8,11
	.byte	'TotalLength',0
	.word	241
	.byte	2,2,35,0,11
	.byte	'UsedLength',0
	.word	241
	.byte	2,2,35,2,11
	.byte	'BufferPtr',0
	.word	471
	.byte	4,2,35,4,0,4
	.byte	'SoAd_RxBufferType',0,9,200,2,3
	.word	4263
	.byte	8,8
	.word	194
	.byte	9,7,0,10,9,202,2,9,48,11
	.byte	'State',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'ValidHeaderLen',0
	.word	194
	.byte	1,2,35,1,11
	.byte	'PduHeader',0
	.word	4357
	.byte	8,2,35,2,11
	.byte	'RxPduInfo',0
	.word	4066
	.byte	8,2,35,12,11
	.byte	'ProcessPduInfo',0
	.word	4066
	.byte	8,2,35,20,11
	.byte	'IfBuffer',0
	.word	4263
	.byte	8,2,35,28,11
	.byte	'TpBuffer',0
	.word	4166
	.byte	12,2,35,36,0,4
	.byte	'SoAd_RxSessionType',0,9,216,2,3
	.word	4366
	.byte	4
	.byte	'u8_t',0,10,61,25
	.word	194
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,0,0,3,15,0,73,19,0,0,4,22,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,5,36,0,3,8,11,15,62,15,0,0,6,4,1,58,15,59,15,57,15,11,15,0,0,7,40,0,3,8,28,13,0,0,8,1
	.byte	1,11,15,73,19,0,0,9,33,0,47,15,0,0,10,19,1,58,15,59,15,57,15,11,15,0,0,11,13,0,3,8,73,19,11,15,56,9,0
	.byte	0,12,38,0,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L7-.L6
.L6:
	.half	3
	.word	.L9-.L8
.L8:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch',0,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\utils.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Std_Types.h',0,1,0,0
	.byte	'ComStack_Types_Cfg.h',0,2,0,0
	.byte	'ComStack_Types.h',0,3,0,0
	.byte	'TcpIp_GeneratedTypes.h',0,2,0,0
	.byte	'TcpIp_Types.h',0,4,0,0
	.byte	'SoAd_GeneratedTypes.h',0,2,0,0
	.byte	'SoAd_Types.h',0,5,0,0
	.byte	'cc.h',0,6,0,0,0
.L9:
.L7:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	     1  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	     2   * utils.c - various utility functions used in pppd.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	     3   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	     4   * Copyright (c) 1999-2002 Paul Mackerras. All rights reserved.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	     5   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	     6   * Redistribution and use in source and binary forms, with or without
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	     7   * modification, are permitted provided that the following conditions
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	     8   * are met:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	     9   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    10   * 1. Redistributions of source code must retain the above copyright
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    11   *    notice, this list of conditions and the following disclaimer.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    12   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    13   * 2. The name(s) of the authors of this software must not be used to
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    14   *    endorse or promote products derived from this software without
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    15   *    prior written permission.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    16   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    17   * 3. Redistributions of any form whatsoever must retain the following
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    18   *    acknowledgment:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    19   *    "This product includes software developed by Paul Mackerras
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    20   *     <paulus@samba.org>".
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    21   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    22   * THE AUTHORS OF THIS SOFTWARE DISCLAIM ALL WARRANTIES WITH REGARD TO
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    23   * THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    24   * AND FITNESS, IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    25   * SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    26   * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    27   * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    28   * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    29   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    30  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    31  #include "netif/ppp/ppp_opts.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    32  #if PPP_SUPPORT /* don't build if not configured for use in lwipopts.h */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    33  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    34  #if 0 /* UNUSED */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    35  #include <stdio.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    36  #include <ctype.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    37  #include <stdlib.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    38  #include <string.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    39  #include <unistd.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    40  #include <signal.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    41  #include <errno.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    42  #include <fcntl.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    43  #include <syslog.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    44  #include <netdb.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    45  #include <time.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    46  #include <utmp.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    47  #include <pwd.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    48  #include <sys/param.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    49  #include <sys/types.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    50  #include <sys/wait.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    51  #include <sys/time.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    52  #include <sys/resource.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    53  #include <sys/stat.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    54  #include <sys/socket.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    55  #include <netinet/in.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    56  #ifdef SVR4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    57  #include <sys/mkdev.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    58  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    59  #endif /* UNUSED */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    60  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    61  #include "netif/ppp/ppp_impl.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    62  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    63  #include "netif/ppp/fsm.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    64  #include "netif/ppp/lcp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    65  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    66  #if defined(SUNOS4)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    67  extern char *strerror();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    68  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    69  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    70  static void ppp_logit(int level, const char *fmt, va_list args);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    71  static void ppp_log_write(int level, char *buf);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    72  #if PRINTPKT_SUPPORT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    73  static void ppp_vslp_printer(void *arg, const char *fmt, ...);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    74  static void ppp_format_packet(const u_char *p, int len,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    75  		void (*printer) (void *, const char *, ...), void *arg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    76  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    77  struct buffer_info {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    78      char *ptr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    79      int len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    80  };
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    81  #endif /* PRINTPKT_SUPPORT */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    82  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    83  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    84   * ppp_strlcpy - like strcpy/strncpy, doesn't overflow destination buffer,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    85   * always leaves destination null-terminated (for len > 0).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    86   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    87  size_t ppp_strlcpy(char *dest, const char *src, size_t len) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    88      size_t ret = strlen(src);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    89  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    90      if (len != 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    91  	if (ret < len)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    92  	    strcpy(dest, src);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    93  	else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    94  	    strncpy(dest, src, len - 1);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    95  	    dest[len-1] = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    96  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    97      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    98      return ret;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	    99  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   100  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   101  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   102   * ppp_strlcat - like strcat/strncat, doesn't overflow destination buffer,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   103   * always leaves destination null-terminated (for len > 0).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   104   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   105  size_t ppp_strlcat(char *dest, const char *src, size_t len) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   106      size_t dlen = strlen(dest);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   107  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   108      return dlen + ppp_strlcpy(dest + dlen, src, (len > dlen? len - dlen: 0));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   109  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   110  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   111  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   112  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   113   * ppp_slprintf - format a message into a buffer.  Like sprintf except we
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   114   * also specify the length of the output buffer, and we handle
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   115   * %m (error message), %v (visible string),
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   116   * %q (quoted string), %t (current time) and %I (IP address) formats.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   117   * Doesn't do floating-point formats.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   118   * Returns the number of chars put into buf.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   119   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   120  int ppp_slprintf(char *buf, int buflen, const char *fmt, ...) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   121      va_list args;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   122      int n;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   123  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   124      va_start(args, fmt);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   125      n = ppp_vslprintf(buf, buflen, fmt, args);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   126      va_end(args);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   127      return n;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   128  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   129  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   130  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   131   * ppp_vslprintf - like ppp_slprintf, takes a va_list instead of a list of args.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   132   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   133  #define OUTCHAR(c)	(buflen > 0? (--buflen, *buf++ = (c)): 0)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   134  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   135  int ppp_vslprintf(char *buf, int buflen, const char *fmt, va_list args) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   136      int c, i, n;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   137      int width, prec, fillch;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   138      int base, len, neg, quoted;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   139      unsigned long val = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   140      const char *f;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   141      char *str, *buf0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   142      const unsigned char *p;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   143      char num[32];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   144  #if 0 /* need port */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   145      time_t t;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   146  #endif /* need port */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   147      u32_t ip;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   148      static char hexchars[] = "0123456789abcdef";
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   149  #if PRINTPKT_SUPPORT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   150      struct buffer_info bufinfo;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   151  #endif /* PRINTPKT_SUPPORT */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   152  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   153      buf0 = buf;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   154      --buflen;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   155      while (buflen > 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   156  	for (f = fmt; *f != '%' && *f != 0; ++f)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   157  	    ;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   158  	if (f > fmt) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   159  	    len = f - fmt;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   160  	    if (len > buflen)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   161  		len = buflen;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   162  	    memcpy(buf, fmt, len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   163  	    buf += len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   164  	    buflen -= len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   165  	    fmt = f;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   166  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   167  	if (*fmt == 0)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   168  	    break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   169  	c = *++fmt;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   170  	width = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   171  	prec = -1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   172  	fillch = ' ';
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   173  	if (c == '0') {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   174  	    fillch = '0';
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   175  	    c = *++fmt;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   176  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   177  	if (c == '*') {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   178  	    width = va_arg(args, int);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   179  	    c = *++fmt;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   180  	} else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   181  	    while (lwip_isdigit(c)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   182  		width = width * 10 + c - '0';
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   183  		c = *++fmt;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   184  	    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   185  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   186  	if (c == '.') {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   187  	    c = *++fmt;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   188  	    if (c == '*') {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   189  		prec = va_arg(args, int);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   190  		c = *++fmt;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   191  	    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   192  		prec = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   193  		while (lwip_isdigit(c)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   194  		    prec = prec * 10 + c - '0';
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   195  		    c = *++fmt;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   196  		}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   197  	    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   198  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   199  	str = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   200  	base = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   201  	neg = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   202  	++fmt;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   203  	switch (c) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   204  	case 'l':
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   205  	    c = *fmt++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   206  	    switch (c) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   207  	    case 'd':
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   208  		val = va_arg(args, long);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   209  		if ((long)val < 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   210  		    neg = 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   211  		    val = (unsigned long)-(long)val;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   212  		}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   213  		base = 10;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   214  		break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   215  	    case 'u':
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   216  		val = va_arg(args, unsigned long);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   217  		base = 10;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   218  		break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   219  	    default:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   220  		OUTCHAR('%');
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   221  		OUTCHAR('l');
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   222  		--fmt;		/* so %lz outputs %lz etc. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   223  		continue;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   224  	    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   225  	    break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   226  	case 'd':
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   227  	    i = va_arg(args, int);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   228  	    if (i < 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   229  		neg = 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   230  		val = -i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   231  	    } else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   232  		val = i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   233  	    base = 10;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   234  	    break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   235  	case 'u':
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   236  	    val = va_arg(args, unsigned int);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   237  	    base = 10;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   238  	    break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   239  	case 'o':
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   240  	    val = va_arg(args, unsigned int);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   241  	    base = 8;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   242  	    break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   243  	case 'x':
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   244  	case 'X':
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   245  	    val = va_arg(args, unsigned int);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   246  	    base = 16;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   247  	    break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   248  #if 0 /* unused (and wrong on LLP64 systems) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   249  	case 'p':
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   250  	    val = (unsigned long) va_arg(args, void *);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   251  	    base = 16;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   252  	    neg = 2;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   253  	    break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   254  #endif /* unused (and wrong on LLP64 systems) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   255  	case 's':
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   256  	    str = va_arg(args, char *);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   257  	    break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   258  	case 'c':
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   259  	    num[0] = va_arg(args, int);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   260  	    num[1] = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   261  	    str = num;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   262  	    break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   263  #if 0 /* do we always have strerror() in embedded ? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   264  	case 'm':
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   265  	    str = strerror(errno);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   266  	    break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   267  #endif /* do we always have strerror() in embedded ? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   268  	case 'I':
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   269  	    ip = va_arg(args, u32_t);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   270  	    ip = lwip_ntohl(ip);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   271  	    ppp_slprintf(num, sizeof(num), "%d.%d.%d.%d", (ip >> 24) & 0xff,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   272  		     (ip >> 16) & 0xff, (ip >> 8) & 0xff, ip & 0xff);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   273  	    str = num;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   274  	    break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   275  #if 0 /* need port */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   276  	case 't':
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   277  	    time(&t);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   278  	    str = ctime(&t);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   279  	    str += 4;		/* chop off the day name */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   280  	    str[15] = 0;	/* chop off year and newline */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   281  	    break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   282  #endif /* need port */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   283  	case 'v':		/* "visible" string */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   284  	case 'q':		/* quoted string */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   285  	    quoted = c == 'q';
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   286  	    p = va_arg(args, unsigned char *);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   287  	    if (p == NULL)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   288  		p = (const unsigned char *)"<NULL>";
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   289  	    if (fillch == '0' && prec >= 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   290  		n = prec;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   291  	    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   292  		n = strlen((const char *)p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   293  		if (prec >= 0 && n > prec)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   294  		    n = prec;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   295  	    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   296  	    while (n > 0 && buflen > 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   297  		c = *p++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   298  		--n;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   299  		if (!quoted && c >= 0x80) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   300  		    OUTCHAR('M');
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   301  		    OUTCHAR('-');
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   302  		    c -= 0x80;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   303  		}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   304  		if (quoted && (c == '"' || c == '\\'))
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   305  		    OUTCHAR('\\');
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   306  		if (c < 0x20 || (0x7f <= c && c < 0xa0)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   307  		    if (quoted) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   308  			OUTCHAR('\\');
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   309  			switch (c) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   310  			case '\t':	OUTCHAR('t');	break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   311  			case '\n':	OUTCHAR('n');	break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   312  			case '\b':	OUTCHAR('b');	break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   313  			case '\f':	OUTCHAR('f');	break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   314  			default:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   315  			    OUTCHAR('x');
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   316  			    OUTCHAR(hexchars[c >> 4]);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   317  			    OUTCHAR(hexchars[c & 0xf]);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   318  			}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   319  		    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   320  			if (c == '\t')
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   321  			    OUTCHAR(c);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   322  			else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   323  			    OUTCHAR('^');
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   324  			    OUTCHAR(c ^ 0x40);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   325  			}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   326  		    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   327  		} else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   328  		    OUTCHAR(c);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   329  	    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   330  	    continue;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   331  #if PRINTPKT_SUPPORT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   332  	case 'P':		/* print PPP packet */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   333  	    bufinfo.ptr = buf;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   334  	    bufinfo.len = buflen + 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   335  	    p = va_arg(args, unsigned char *);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   336  	    n = va_arg(args, int);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   337  	    ppp_format_packet(p, n, ppp_vslp_printer, &bufinfo);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   338  	    buf = bufinfo.ptr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   339  	    buflen = bufinfo.len - 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   340  	    continue;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   341  #endif /* PRINTPKT_SUPPORT */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   342  	case 'B':
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   343  	    p = va_arg(args, unsigned char *);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   344  	    for (n = prec; n > 0; --n) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   345  		c = *p++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   346  		if (fillch == ' ')
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   347  		    OUTCHAR(' ');
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   348  		OUTCHAR(hexchars[(c >> 4) & 0xf]);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   349  		OUTCHAR(hexchars[c & 0xf]);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   350  	    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   351  	    continue;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   352  	default:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   353  	    *buf++ = '%';
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   354  	    if (c != '%')
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   355  		--fmt;		/* so %z outputs %z etc. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   356  	    --buflen;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   357  	    continue;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   358  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   359  	if (base != 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   360  	    str = num + sizeof(num);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   361  	    *--str = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   362  	    while (str > num + neg) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   363  		*--str = hexchars[val % base];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   364  		val = val / base;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   365  		if (--prec <= 0 && val == 0)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   366  		    break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   367  	    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   368  	    switch (neg) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   369  	    case 1:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   370  		*--str = '-';
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   371  		break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   372  	    case 2:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   373  		*--str = 'x';
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   374  		*--str = '0';
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   375  		break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   376  	    default:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   377  		break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   378  	    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   379  	    len = num + sizeof(num) - 1 - str;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   380  	} else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   381  	    len = strlen(str);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   382  	    if (prec >= 0 && len > prec)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   383  		len = prec;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   384  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   385  	if (width > 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   386  	    if (width > buflen)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   387  		width = buflen;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   388  	    if ((n = width - len) > 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   389  		buflen -= n;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   390  		for (; n > 0; --n)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   391  		    *buf++ = fillch;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   392  	    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   393  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   394  	if (len > buflen)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   395  	    len = buflen;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   396  	memcpy(buf, str, len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   397  	buf += len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   398  	buflen -= len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   399      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   400      *buf = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   401      return buf - buf0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   402  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   403  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   404  #if PRINTPKT_SUPPORT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   405  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   406   * vslp_printer - used in processing a %P format
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   407   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   408  static void ppp_vslp_printer(void *arg, const char *fmt, ...) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   409      int n;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   410      va_list pvar;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   411      struct buffer_info *bi;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   412  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   413      va_start(pvar, fmt);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   414      bi = (struct buffer_info *) arg;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   415      n = ppp_vslprintf(bi->ptr, bi->len, fmt, pvar);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   416      va_end(pvar);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   417  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   418      bi->ptr += n;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   419      bi->len -= n;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   420  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   421  #endif /* PRINTPKT_SUPPORT */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   422  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   423  #if 0 /* UNUSED */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   424  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   425   * log_packet - format a packet and log it.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   426   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   427  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   428  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   429  log_packet(p, len, prefix, level)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   430      u_char *p;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   431      int len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   432      char *prefix;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   433      int level;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   434  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   435  	init_pr_log(prefix, level);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   436  	ppp_format_packet(p, len, pr_log, &level);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   437  	end_pr_log();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   438  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   439  #endif /* UNUSED */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   440  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   441  #if PRINTPKT_SUPPORT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   442  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   443   * ppp_format_packet - make a readable representation of a packet,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   444   * calling `printer(arg, format, ...)' to output it.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   445   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   446  static void ppp_format_packet(const u_char *p, int len,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   447  		void (*printer) (void *, const char *, ...), void *arg) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   448      int i, n;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   449      u_short proto;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   450      const struct protent *protp;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   451  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   452      if (len >= 2) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   453  	GETSHORT(proto, p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   454  	len -= 2;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   455  	for (i = 0; (protp = protocols[i]) != NULL; ++i)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   456  	    if (proto == protp->protocol)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   457  		break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   458  	if (protp != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   459  	    printer(arg, "[%s", protp->name);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   460  	    n = (*protp->printpkt)(p, len, printer, arg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   461  	    printer(arg, "]");
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   462  	    p += n;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   463  	    len -= n;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   464  	} else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   465  	    for (i = 0; (protp = protocols[i]) != NULL; ++i)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   466  		if (proto == (protp->protocol & ~0x8000))
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   467  		    break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   468  	    if (protp != 0 && protp->data_name != 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   469  		printer(arg, "[%s data]", protp->data_name);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   470  		if (len > 8)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   471  		    printer(arg, "%.8B ...", p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   472  		else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   473  		    printer(arg, "%.*B", len, p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   474  		len = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   475  	    } else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   476  		printer(arg, "[proto=0x%x]", proto);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   477  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   478      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   479  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   480      if (len > 32)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   481  	printer(arg, "%.32B ...", p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   482      else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   483  	printer(arg, "%.*B", len, p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   484  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   485  #endif /* PRINTPKT_SUPPORT */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   486  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   487  #if 0 /* UNUSED */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   488  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   489   * init_pr_log, end_pr_log - initialize and finish use of pr_log.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   490   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   491  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   492  static char line[256];		/* line to be logged accumulated here */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   493  static char *linep;		/* current pointer within line */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   494  static int llevel;		/* level for logging */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   495  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   496  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   497  init_pr_log(prefix, level)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   498       const char *prefix;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   499       int level;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   500  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   501  	linep = line;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   502  	if (prefix != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   503  		ppp_strlcpy(line, prefix, sizeof(line));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   504  		linep = line + strlen(line);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   505  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   506  	llevel = level;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   507  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   508  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   509  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   510  end_pr_log()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   511  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   512  	if (linep != line) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   513  		*linep = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   514  		ppp_log_write(llevel, line);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   515  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   516  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   517  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   518  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   519   * pr_log - printer routine for outputting to log
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   520   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   521  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   522  pr_log (void *arg, const char *fmt, ...)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   523  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   524  	int l, n;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   525  	va_list pvar;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   526  	char *p, *eol;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   527  	char buf[256];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   528  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   529  	va_start(pvar, fmt);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   530  	n = ppp_vslprintf(buf, sizeof(buf), fmt, pvar);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   531  	va_end(pvar);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   532  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   533  	p = buf;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   534  	eol = strchr(buf, '\n');
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   535  	if (linep != line) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   536  		l = (eol == NULL)? n: eol - buf;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   537  		if (linep + l < line + sizeof(line)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   538  			if (l > 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   539  				memcpy(linep, buf, l);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   540  				linep += l;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   541  			}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   542  			if (eol == NULL)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   543  				return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   544  			p = eol + 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   545  			eol = strchr(p, '\n');
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   546  		}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   547  		*linep = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   548  		ppp_log_write(llevel, line);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   549  		linep = line;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   550  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   551  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   552  	while (eol != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   553  		*eol = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   554  		ppp_log_write(llevel, p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   555  		p = eol + 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   556  		eol = strchr(p, '\n');
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   557  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   558  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   559  	/* assumes sizeof(buf) <= sizeof(line) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   560  	l = buf + n - p;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   561  	if (l > 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   562  		memcpy(line, p, n);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   563  		linep = line + l;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   564  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   565  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   566  #endif /* UNUSED */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   567  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   568  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   569   * ppp_print_string - print a readable representation of a string using
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   570   * printer.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   571   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   572  void ppp_print_string(const u_char *p, int len, void (*printer) (void *, const char *, ...), void *arg) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   573      int c;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   574  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   575      printer(arg, "\"");
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   576      for (; len > 0; --len) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   577  	c = *p++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   578  	if (' ' <= c && c <= '~') {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   579  	    if (c == '\\' || c == '"')
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   580  		printer(arg, "\\");
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   581  	    printer(arg, "%c", c);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   582  	} else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   583  	    switch (c) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   584  	    case '\n':
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   585  		printer(arg, "\\n");
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   586  		break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   587  	    case '\r':
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   588  		printer(arg, "\\r");
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   589  		break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   590  	    case '\t':
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   591  		printer(arg, "\\t");
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   592  		break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   593  	    default:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   594  		printer(arg, "\\%.3o", (u8_t)c);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   595  		/* no break */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   596  	    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   597  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   598      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   599      printer(arg, "\"");
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   600  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   601  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   602  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   603   * ppp_logit - does the hard work for fatal et al.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   604   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   605  static void ppp_logit(int level, const char *fmt, va_list args) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   606      char buf[1024];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   607  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   608      ppp_vslprintf(buf, sizeof(buf), fmt, args);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   609      ppp_log_write(level, buf);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   610  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   611  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   612  static void ppp_log_write(int level, char *buf) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   613      LWIP_UNUSED_ARG(level); /* necessary if PPPDEBUG is defined to an empty function */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   614      LWIP_UNUSED_ARG(buf);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   615      PPPDEBUG(level, ("%s\n", buf) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   616  #if 0
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   617      if (log_to_fd >= 0 && (level != LOG_DEBUG || debug)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   618  	int n = strlen(buf);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   619  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   620  	if (n > 0 && buf[n-1] == '\n')
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   621  	    --n;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   622  	if (write(log_to_fd, buf, n) != n
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   623  	    || write(log_to_fd, "\n", 1) != 1)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   624  	    log_to_fd = -1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   625      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   626  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   627  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   628  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   629  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   630   * ppp_fatal - log an error message and die horribly.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   631   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   632  void ppp_fatal(const char *fmt, ...) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   633      va_list pvar;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   634  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   635      va_start(pvar, fmt);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   636      ppp_logit(LOG_ERR, fmt, pvar);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   637      va_end(pvar);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   638  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   639      LWIP_ASSERT("ppp_fatal", 0);   /* as promised */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   640  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   641  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   642  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   643   * ppp_error - log an error message.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   644   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   645  void ppp_error(const char *fmt, ...) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   646      va_list pvar;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   647  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   648      va_start(pvar, fmt);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   649      ppp_logit(LOG_ERR, fmt, pvar);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   650      va_end(pvar);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   651  #if 0 /* UNUSED */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   652      ++error_count;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   653  #endif /* UNUSED */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   654  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   655  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   656  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   657   * ppp_warn - log a warning message.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   658   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   659  void ppp_warn(const char *fmt, ...) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   660      va_list pvar;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   661  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   662      va_start(pvar, fmt);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   663      ppp_logit(LOG_WARNING, fmt, pvar);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   664      va_end(pvar);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   665  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   666  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   667  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   668   * ppp_notice - log a notice-level message.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   669   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   670  void ppp_notice(const char *fmt, ...) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   671      va_list pvar;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   672  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   673      va_start(pvar, fmt);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   674      ppp_logit(LOG_NOTICE, fmt, pvar);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   675      va_end(pvar);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   676  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   677  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   678  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   679   * ppp_info - log an informational message.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   680   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   681  void ppp_info(const char *fmt, ...) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   682      va_list pvar;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   683  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   684      va_start(pvar, fmt);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   685      ppp_logit(LOG_INFO, fmt, pvar);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   686      va_end(pvar);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   687  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   688  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   689  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   690   * ppp_dbglog - log a debug message.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   691   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   692  void ppp_dbglog(const char *fmt, ...) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   693      va_list pvar;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   694  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   695      va_start(pvar, fmt);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   696      ppp_logit(LOG_DEBUG, fmt, pvar);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   697      va_end(pvar);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   698  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   699  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   700  #if PRINTPKT_SUPPORT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   701  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   702   * ppp_dump_packet - print out a packet in readable form if it is interesting.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   703   * Assumes len >= PPP_HDRLEN.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   704   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   705  void ppp_dump_packet(ppp_pcb *pcb, const char *tag, unsigned char *p, int len) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   706      int proto;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   707  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   708      /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   709       * don't print data packets, i.e. IPv4, IPv6, VJ, and compressed packets.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   710       */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   711      proto = (p[0] << 8) + p[1];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   712      if (proto < 0xC000 && (proto & ~0x8000) == proto)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   713  	return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   714  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   715      /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   716       * don't print valid LCP echo request/reply packets if the link is up.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   717       */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   718      if (proto == PPP_LCP && pcb->phase == PPP_PHASE_RUNNING && len >= 2 + HEADERLEN) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   719  	unsigned char *lcp = p + 2;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   720  	int l = (lcp[2] << 8) + lcp[3];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   721  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   722  	if ((lcp[0] == ECHOREQ || lcp[0] == ECHOREP)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   723  	    && l >= HEADERLEN && l <= len - 2)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   724  	    return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   725      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   726  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   727      ppp_dbglog("%s %P", tag, p, len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   728  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   729  #endif /* PRINTPKT_SUPPORT */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   730  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   731  #if 0 /* Unused */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   732  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   733  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   734   * complete_read - read a full `count' bytes from fd,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   735   * unless end-of-file or an error other than EINTR is encountered.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   736   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   737  ssize_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   738  complete_read(int fd, void *buf, size_t count)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   739  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   740  	size_t done;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   741  	ssize_t nb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   742  	char *ptr = buf;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   743  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   744  	for (done = 0; done < count; ) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   745  		nb = read(fd, ptr, count - done);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   746  		if (nb < 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   747  			if (errno == EINTR)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   748  				continue;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   749  			return -1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   750  		}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   751  		if (nb == 0)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   752  			break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   753  		done += nb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   754  		ptr += nb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   755  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   756  	return done;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   757  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   758  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   759  /* Procedures for locking the serial device using a lock file. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   760  #ifndef LOCK_DIR
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   761  #ifdef __linux__
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   762  #define LOCK_DIR	"/var/lock"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   763  #else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   764  #ifdef SVR4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   765  #define LOCK_DIR	"/var/spool/locks"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   766  #else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   767  #define LOCK_DIR	"/var/spool/lock"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   768  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   769  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   770  #endif /* LOCK_DIR */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   771  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   772  static char lock_file[MAXPATHLEN];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   773  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   774  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   775   * lock - create a lock file for the named device
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   776   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   777  int
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   778  lock(dev)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   779      char *dev;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   780  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   781  #ifdef LOCKLIB
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   782      int result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   783  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   784      result = mklock (dev, (void *) 0);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   785      if (result == 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   786  	ppp_strlcpy(lock_file, dev, sizeof(lock_file));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   787  	return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   788      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   789  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   790      if (result > 0)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   791          ppp_notice("Device %s is locked by pid %d", dev, result);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   792      else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   793  	ppp_error("Can't create lock file %s", lock_file);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   794      return -1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   795  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   796  #else /* LOCKLIB */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   797  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   798      char lock_buffer[12];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   799      int fd, pid, n;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   800  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   801  #ifdef SVR4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   802      struct stat sbuf;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   803  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   804      if (stat(dev, &sbuf) < 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   805  	ppp_error("Can't get device number for %s: %m", dev);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   806  	return -1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   807      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   808      if ((sbuf.st_mode & S_IFMT) != S_IFCHR) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   809  	ppp_error("Can't lock %s: not a character device", dev);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   810  	return -1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   811      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   812      ppp_slprintf(lock_file, sizeof(lock_file), "%s/LK.%03d.%03d.%03d",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   813  	     LOCK_DIR, major(sbuf.st_dev),
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   814  	     major(sbuf.st_rdev), minor(sbuf.st_rdev));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   815  #else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   816      char *p;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   817      char lockdev[MAXPATHLEN];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   818  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   819      if ((p = strstr(dev, "dev/")) != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   820  	dev = p + 4;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   821  	strncpy(lockdev, dev, MAXPATHLEN-1);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   822  	lockdev[MAXPATHLEN-1] = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   823  	while ((p = strrchr(lockdev, '/')) != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   824  	    *p = '_';
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   825  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   826  	dev = lockdev;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   827      } else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   828  	if ((p = strrchr(dev, '/')) != NULL)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   829  	    dev = p + 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   830  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   831      ppp_slprintf(lock_file, sizeof(lock_file), "%s/LCK..%s", LOCK_DIR, dev);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   832  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   833  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   834      while ((fd = open(lock_file, O_EXCL | O_CREAT | O_RDWR, 0644)) < 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   835  	if (errno != EEXIST) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   836  	    ppp_error("Can't create lock file %s: %m", lock_file);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   837  	    break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   838  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   839  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   840  	/* Read the lock file to find out who has the device locked. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   841  	fd = open(lock_file, O_RDONLY, 0);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   842  	if (fd < 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   843  	    if (errno == ENOENT) /* This is just a timing problem. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   844  		continue;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   845  	    ppp_error("Can't open existing lock file %s: %m", lock_file);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   846  	    break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   847  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   848  #ifndef LOCK_BINARY
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   849  	n = read(fd, lock_buffer, 11);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   850  #else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   851  	n = read(fd, &pid, sizeof(pid));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   852  #endif /* LOCK_BINARY */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   853  	close(fd);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   854  	fd = -1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   855  	if (n <= 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   856  	    ppp_error("Can't read pid from lock file %s", lock_file);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   857  	    break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   858  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   859  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   860  	/* See if the process still exists. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   861  #ifndef LOCK_BINARY
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   862  	lock_buffer[n] = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   863  	pid = atoi(lock_buffer);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   864  #endif /* LOCK_BINARY */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   865  	if (pid == getpid())
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   866  	    return 1;		/* somebody else locked it for us */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   867  	if (pid == 0
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   868  	    || (kill(pid, 0) == -1 && errno == ESRCH)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   869  	    if (unlink (lock_file) == 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   870  		ppp_notice("Removed stale lock on %s (pid %d)", dev, pid);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   871  		continue;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   872  	    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   873  	    ppp_warn("Couldn't remove stale lock on %s", dev);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   874  	} else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   875  	    ppp_notice("Device %s is locked by pid %d", dev, pid);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   876  	break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   877      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   878  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   879      if (fd < 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   880  	lock_file[0] = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   881  	return -1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   882      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   883  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   884      pid = getpid();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   885  #ifndef LOCK_BINARY
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   886      ppp_slprintf(lock_buffer, sizeof(lock_buffer), "%10d\n", pid);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   887      write (fd, lock_buffer, 11);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   888  #else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   889      write(fd, &pid, sizeof (pid));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   890  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   891      close(fd);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   892      return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   893  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   894  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   895  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   896  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   897  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   898   * relock - called to update our lockfile when we are about to detach,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   899   * thus changing our pid (we fork, the child carries on, and the parent dies).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   900   * Note that this is called by the parent, with pid equal to the pid
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   901   * of the child.  This avoids a potential race which would exist if
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   902   * we had the child rewrite the lockfile (the parent might die first,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   903   * and another process could think the lock was stale if it checked
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   904   * between when the parent died and the child rewrote the lockfile).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   905   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   906  int
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   907  relock(pid)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   908      int pid;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   909  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   910  #ifdef LOCKLIB
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   911      /* XXX is there a way to do this? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   912      return -1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   913  #else /* LOCKLIB */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   914  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   915      int fd;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   916      char lock_buffer[12];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   917  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   918      if (lock_file[0] == 0)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   919  	return -1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   920      fd = open(lock_file, O_WRONLY, 0);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   921      if (fd < 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   922  	ppp_error("Couldn't reopen lock file %s: %m", lock_file);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   923  	lock_file[0] = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   924  	return -1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   925      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   926  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   927  #ifndef LOCK_BINARY
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   928      ppp_slprintf(lock_buffer, sizeof(lock_buffer), "%10d\n", pid);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   929      write (fd, lock_buffer, 11);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   930  #else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   931      write(fd, &pid, sizeof(pid));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   932  #endif /* LOCK_BINARY */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   933      close(fd);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   934      return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   935  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   936  #endif /* LOCKLIB */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   937  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   938  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   939  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   940   * unlock - remove our lockfile
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   941   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   942  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   943  unlock()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   944  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   945      if (lock_file[0]) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   946  #ifdef LOCKLIB
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   947  	(void) rmlock(lock_file, (void *) 0);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   948  #else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   949  	unlink(lock_file);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   950  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   951  	lock_file[0] = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   952      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   953  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   954  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   955  #endif /* Unused */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   956  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\utils.c	   957  #endif /* PPP_SUPPORT */

	; Module end
