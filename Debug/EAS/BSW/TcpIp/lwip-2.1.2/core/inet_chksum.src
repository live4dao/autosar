	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 09003395"
	.compiler_invocation	"ctc -f cc32864a --dep-file=EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\.inet_chksum.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --fp-model=+float -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Lib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\App_Func -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\demo -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Adc_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Gtm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\AscLin_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Can_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\EthV2_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Stm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Main -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\APP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\BswM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanSm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Com -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\ComM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Common -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Crc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Det -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\DoIP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EcuM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Eth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthSM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTrcv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FiM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FlsTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Nm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\PduR -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\RamTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\StbM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\arpa -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\net -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\sys -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\stdc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\apps -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\priv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\UdpNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Cal -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Daq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pag -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pgm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Std -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\XcpOnEth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Library\\Vfx_ComE2E -g2 --make-target=EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O1 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.src ..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c"
	.compiler_name		"ctc"
	;source	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c'

	
$TC162
	
	.sdecl	'.text.inet_chksum.lwip_standard_chksum',code,cluster('lwip_standard_chksum')
	.sect	'.text.inet_chksum.lwip_standard_chksum'
	.align	2
	
	.global	lwip_standard_chksum

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	     1  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	     2   * @file
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	     3   * Internet checksum functions.\n
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	     4   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	     5   * These are some reference implementations of the checksum algorithm, with the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	     6   * aim of being simple, correct and fully portable. Checksumming is the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	     7   * first thing you would want to optimize for your platform. If you create
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	     8   * your own version, link it in and in your cc.h put:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	     9   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    10   * \#define LWIP_CHKSUM your_checksum_routine
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    11   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    12   * Or you can select from the implementations below by defining
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    13   * LWIP_CHKSUM_ALGORITHM to 1, 2 or 3.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    14   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    15  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    16  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    17   * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    18   * All rights reserved.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    19   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    20   * Redistribution and use in source and binary forms, with or without modification,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    21   * are permitted provided that the following conditions are met:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    22   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    23   * 1. Redistributions of source code must retain the above copyright notice,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    24   *    this list of conditions and the following disclaimer.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    25   * 2. Redistributions in binary form must reproduce the above copyright notice,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    26   *    this list of conditions and the following disclaimer in the documentation
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    27   *    and/or other materials provided with the distribution.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    28   * 3. The name of the author may not be used to endorse or promote products
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    29   *    derived from this software without specific prior written permission.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    30   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    31   * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    32   * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    33   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    34   * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    35   * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    36   * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    37   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    38   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    39   * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    40   * OF SUCH DAMAGE.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    41   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    42   * This file is part of the lwIP TCP/IP stack.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    43   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    44   * Author: Adam Dunkels <adam@sics.se>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    45   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    46   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    47  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    48  #include "lwip/opt.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    49  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    50  #include "lwip/inet_chksum.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    51  #include "lwip/def.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    52  #include "lwip/ip_addr.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    53  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    54  #include <string.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    55  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    56  #ifndef LWIP_CHKSUM
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    57  # define LWIP_CHKSUM lwip_standard_chksum
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    58  # ifndef LWIP_CHKSUM_ALGORITHM
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    59  #  define LWIP_CHKSUM_ALGORITHM 2
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    60  # endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    61  u16_t lwip_standard_chksum(const void *dataptr, int len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    62  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    63  /* If none set: */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    64  #ifndef LWIP_CHKSUM_ALGORITHM
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    65  # define LWIP_CHKSUM_ALGORITHM 0
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    66  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    67  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    68  #if (LWIP_CHKSUM_ALGORITHM == 1) /* Version #1 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    69  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    70   * lwip checksum
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    71   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    72   * @param dataptr points to start of data to be summed at any boundary
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    73   * @param len length of data to be summed
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    74   * @return host order (!) lwip checksum (non-inverted Internet sum)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    75   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    76   * @note accumulator size limits summable length to 64k
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    77   * @note host endianess is irrelevant (p3 RFC1071)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    78   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    79  u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    80  lwip_standard_chksum(const void *dataptr, int len)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    81  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    82    u32_t acc;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    83    u16_t src;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    84    const u8_t *octetptr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    85  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    86    acc = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    87    /* dataptr may be at odd or even addresses */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    88    octetptr = (const u8_t *)dataptr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    89    while (len > 1) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    90      /* declare first octet as most significant
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    91         thus assume network order, ignoring host order */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    92      src = (*octetptr) << 8;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    93      octetptr++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    94      /* declare second octet as least significant */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    95      src |= (*octetptr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    96      octetptr++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    97      acc += src;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    98      len -= 2;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	    99    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   100    if (len > 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   101      /* accumulate remaining octet */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   102      src = (*octetptr) << 8;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   103      acc += src;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   104    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   105    /* add deferred carry bits */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   106    acc = (acc >> 16) + (acc & 0x0000ffffUL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   107    if ((acc & 0xffff0000UL) != 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   108      acc = (acc >> 16) + (acc & 0x0000ffffUL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   109    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   110    /* This maybe a little confusing: reorder sum using lwip_htons()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   111       instead of lwip_ntohs() since it has a little less call overhead.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   112       The caller must invert bits for Internet sum ! */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   113    return lwip_htons((u16_t)acc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   114  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   115  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   116  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   117  #if (LWIP_CHKSUM_ALGORITHM == 2) /* Alternative version #2 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   118  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   119   * Curt McDowell
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   120   * Broadcom Corp.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   121   * csm@broadcom.com
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   122   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   123   * IP checksum two bytes at a time with support for
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   124   * unaligned buffer.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   125   * Works for len up to and including 0x20000.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   126   * by Curt McDowell, Broadcom Corp. 12/08/2005
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   127   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   128   * @param dataptr points to start of data to be summed at any boundary
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   129   * @param len length of data to be summed
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   130   * @return host order (!) lwip checksum (non-inverted Internet sum)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   131   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   132  u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   133  lwip_standard_chksum(const void *dataptr, int len)
; Function lwip_standard_chksum
.L31:
lwip_standard_chksum:	.type	func

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   134  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   135    const u8_t *pb = (const u8_t *)dataptr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   136    const u16_t *ps;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   137    u16_t t = 0;
	mov	d1,#0
.L169:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   138    u32_t sum = 0;
	mov	d0,d1
.L171:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   139    int odd = ((mem_ptr_t)pb & 1);
	mov.d	d15,a4
.L173:
	and	d15,#1
.L174:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   140  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   141    /* Get aligned to u16_t */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   142    if (odd && len > 0) {
	jeq	d15,#0,.L4
.L287:
	jlt	d4,#1,.L4
.L288:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   143      ((u8_t *)&t)[1] = *pb++;
	ld.bu	d2,[a4+]
.L289:
	insert	d1,d1,d2,#8,#8
	extr.u	d1,d1,#0,#16
.L290:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   144      len--;
	add	d4,#-1
.L291:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   145    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   146  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   147    /* Add the bulk of the data */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   148    ps = (const u16_t *)(const void *)pb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   149    while (len > 1) {
	j	.L4
.L5:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   150      sum += *ps++;
	ld.hu	d2,[a4+]2
.L292:
	add	d0,d2
.L293:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   151      len -= 2;
	add	d4,#-2
.L4:
	jge	d4,#2,.L5
.L294:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   152    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   153  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   154    /* Consume left-over byte, if any */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   155    if (len > 0) {
	jlt	d4,#1,.L6
.L295:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   156      ((u8_t *)&t)[0] = *(const u8_t *)ps;
	ld.bu	d2,[a4]
.L296:
	insert	d1,d1,d2,#0,#8
.L6:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   157    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   158  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   159    /* Add end bytes */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   160    sum += t;
	add	d0,d1
.L297:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   161  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   162    /* Fold 32-bit sum to 16 bits
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   163       calling this twice is probably faster than if statements... */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   164    sum = FOLD_U32T(sum);
	sh	d1,d0,#-16
.L170:
	insert	d0,d0,#0,#16,#16
.L172:
	add	d1,d0
.L298:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   165    sum = FOLD_U32T(sum);
	sh	d0,d1,#-16
	insert	d1,d1,#0,#16,#16
.L176:
	add	d0,d1
.L299:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   166  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   167    /* Swap if alignment was odd */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   168    if (odd) {
	jeq	d15,#0,.L7
.L300:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   169      sum = SWAP_BYTES_IN_WORD(sum);
	and	d15,d0,#255
.L175:
	sh	d15,d15,#8
	extr.u	d0,d0,#8,#8
	or	d0,d15
.L7:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   170    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   171  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   172    return (u16_t)sum;
	extr.u	d2,d0,#0,#16
.L301:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   173  }
	ret
.L143:
	
__lwip_standard_chksum_function_end:
	.size	lwip_standard_chksum,__lwip_standard_chksum_function_end-lwip_standard_chksum
.L86:
	; End of function
	
	.sdecl	'.text.inet_chksum.inet_cksum_pseudo_base',code,cluster('inet_cksum_pseudo_base')
	.sect	'.text.inet_chksum.inet_cksum_pseudo_base'
	.align	2
	

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   174  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   175  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   176  #if (LWIP_CHKSUM_ALGORITHM == 3) /* Alternative version #3 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   177  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   178   * An optimized checksum routine. Basically, it uses loop-unrolling on
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   179   * the checksum loop, treating the head and tail bytes specially, whereas
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   180   * the inner loop acts on 8 bytes at a time.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   181   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   182   * @arg start of buffer to be checksummed. May be an odd byte address.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   183   * @len number of bytes in the buffer to be checksummed.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   184   * @return host order (!) lwip checksum (non-inverted Internet sum)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   185   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   186   * by Curt McDowell, Broadcom Corp. December 8th, 2005
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   187   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   188  u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   189  lwip_standard_chksum(const void *dataptr, int len)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   190  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   191    const u8_t *pb = (const u8_t *)dataptr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   192    const u16_t *ps;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   193    u16_t t = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   194    const u32_t *pl;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   195    u32_t sum = 0, tmp;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   196    /* starts at odd byte address? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   197    int odd = ((mem_ptr_t)pb & 1);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   198  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   199    if (odd && len > 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   200      ((u8_t *)&t)[1] = *pb++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   201      len--;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   202    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   203  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   204    ps = (const u16_t *)(const void *)pb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   205  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   206    if (((mem_ptr_t)ps & 3) && len > 1) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   207      sum += *ps++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   208      len -= 2;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   209    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   210  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   211    pl = (const u32_t *)(const void *)ps;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   212  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   213    while (len > 7)  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   214      tmp = sum + *pl++;          /* ping */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   215      if (tmp < sum) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   216        tmp++;                    /* add back carry */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   217      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   218  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   219      sum = tmp + *pl++;          /* pong */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   220      if (sum < tmp) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   221        sum++;                    /* add back carry */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   222      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   223  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   224      len -= 8;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   225    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   226  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   227    /* make room in upper bits */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   228    sum = FOLD_U32T(sum);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   229  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   230    ps = (const u16_t *)pl;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   231  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   232    /* 16-bit aligned word remaining? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   233    while (len > 1) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   234      sum += *ps++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   235      len -= 2;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   236    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   237  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   238    /* dangling tail byte remaining? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   239    if (len > 0) {                /* include odd byte */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   240      ((u8_t *)&t)[0] = *(const u8_t *)ps;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   241    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   242  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   243    sum += t;                     /* add end bytes */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   244  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   245    /* Fold 32-bit sum to 16 bits
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   246       calling this twice is probably faster than if statements... */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   247    sum = FOLD_U32T(sum);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   248    sum = FOLD_U32T(sum);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   249  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   250    if (odd) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   251      sum = SWAP_BYTES_IN_WORD(sum);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   252    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   253  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   254    return (u16_t)sum;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   255  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   256  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   257  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   258  /** Parts of the pseudo checksum which are common to IPv4 and IPv6 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   259  static u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   260  inet_cksum_pseudo_base(struct pbuf *p, u8_t proto, u16_t proto_len, u32_t acc)
; Function inet_cksum_pseudo_base
.L33:
inet_cksum_pseudo_base:	.type	func
	mov	e8,d5,d4
	mov	d15,d6
.L177:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   261  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   262    struct pbuf *q;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   263    int swapped = 0;
	mov	d10,#0
.L179:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   264  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   265    /* iterate through all pbuf in chain */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   266    for (q = p; q != NULL; q = q->next) {
	mov.aa	a15,a4
.L180:
	j	.L9
.L10:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   267      LWIP_DEBUGF(INET_DEBUG, ("inet_chksum_pseudo(): checksumming pbuf %p (has next %p) \n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   268                               (void *)q, (void *)q->next));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   269      acc += LWIP_CHKSUM(q->payload, q->len);
	ld.a	a4,[a15]4
.L306:
	ld.hu	d4,[a15]10
	call	lwip_standard_chksum
.L181:
	add	d2,d15
.L178:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   270      /*LWIP_DEBUGF(INET_DEBUG, ("inet_chksum_pseudo(): unwrapped lwip_chksum()=%"X32_F" \n", acc));*/
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   271      /* just executing this next line is probably faster that the if statement needed
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   272         to check whether we really need to execute it, and does no harm */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   273      acc = FOLD_U32T(acc);
	sh	d0,d2,#-16
	insert	d1,d2,#0,#16,#16
	add	d15,d0,d1
.L182:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   274      if (q->len % 2 != 0) {
	ld.hu	d0,[a15]10
.L307:
	jz.t	d0:0,.L11
.L308:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   275        swapped = !swapped;
	eq	d10,d10,#0
.L309:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   276        acc = SWAP_BYTES_IN_WORD(acc);
	and	d0,d15,#255
	sh	d0,d0,#8
	extr.u	d15,d15,#8,#8
	or	d15,d0
.L11:
	ld.a	a15,[a15]
.L9:
	jnz.a	a15,.L10
.L310:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   277      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   278      /*LWIP_DEBUGF(INET_DEBUG, ("inet_chksum_pseudo(): wrapped lwip_chksum()=%"X32_F" \n", acc));*/
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   279    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   280  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   281    if (swapped) {
	jeq	d10,#0,.L12
.L311:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   282      acc = SWAP_BYTES_IN_WORD(acc);
	and	d0,d15,#255
	sh	d0,d0,#8
	extr.u	d15,d15,#8,#8
	or	d15,d0
.L12:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   283    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   284  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   285    acc += (u32_t)lwip_htons((u16_t)proto);
	mov	d4,d8
.L184:
	call	lwip_htons
.L185:
	add	d15,d2
.L186:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   286    acc += (u32_t)lwip_htons(proto_len);
	mov	d4,d9
.L187:
	call	lwip_htons
.L188:
	add	d15,d2
.L312:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   287  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   288    /* Fold 32-bit sum to 16 bits
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   289       calling this twice is probably faster than if statements... */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   290    acc = FOLD_U32T(acc);
	sh	d0,d15,#-16
	insert	d15,d15,#0,#16,#16
.L183:
	add	d0,d15
.L313:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   291    acc = FOLD_U32T(acc);
	sh	d15,d0,#-16
	insert	d0,d0,#0,#16,#16
.L189:
	add	d15,d0
.L314:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   292    LWIP_DEBUGF(INET_DEBUG, ("inet_chksum_pseudo(): pbuf chain lwip_chksum()=%"X32_F"\n", acc));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   293    return (u16_t)~(acc & 0xffffUL);
	extr.u	d2,d15,#0,#16
.L315:
	mov.u	d15,#65535
.L190:
	xor	d2,d15
.L316:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   294  }
	ret
.L153:
	
__inet_cksum_pseudo_base_function_end:
	.size	inet_cksum_pseudo_base,__inet_cksum_pseudo_base_function_end-inet_cksum_pseudo_base
.L91:
	; End of function
	
	.sdecl	'.text.inet_chksum.inet_chksum_pseudo',code,cluster('inet_chksum_pseudo')
	.sect	'.text.inet_chksum.inet_chksum_pseudo'
	.align	2
	
	.global	inet_chksum_pseudo

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   295  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   296  #if LWIP_IPV4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   297  /* inet_chksum_pseudo:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   298   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   299   * Calculates the IPv4 pseudo Internet checksum used by TCP and UDP for a pbuf chain.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   300   * IP addresses are expected to be in network byte order.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   301   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   302   * @param p chain of pbufs over that a checksum should be calculated (ip data part)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   303   * @param src source ip address (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   304   * @param dst destination ip address (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   305   * @param proto ip protocol (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   306   * @param proto_len length of the ip data part (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   307   * @return checksum (as u16_t) to be saved directly in the protocol header
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   308   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   309  u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   310  inet_chksum_pseudo(struct pbuf *p, u8_t proto, u16_t proto_len,
; Function inet_chksum_pseudo
.L35:
inet_chksum_pseudo:	.type	func

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   311                     const ip4_addr_t *src, const ip4_addr_t *dest)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   312  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   313    u32_t acc;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   314    u32_t addr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   315  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   316    addr = ip4_addr_get_u32(src);
	ld.w	d0,[a5]
.L191:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   317    acc = (addr & 0xffffUL);
	insert	d15,d0,#0,#16,#16
.L261:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   318    acc = (u32_t)(acc + ((addr >> 16) & 0xffffUL));
	sh	d0,d0,#-16
.L192:
	add	d15,d0
.L262:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   319    addr = ip4_addr_get_u32(dest);
	ld.w	d0,[a6]
.L194:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   320    acc = (u32_t)(acc + (addr & 0xffffUL));
	insert	d1,d0,#0,#16,#16
.L263:
	add	d15,d1
.L193:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   321    acc = (u32_t)(acc + ((addr >> 16) & 0xffffUL));
	sh	d0,d0,#-16
.L195:
	add	d15,d0
.L264:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   322    /* fold down to 16 bits */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   323    acc = FOLD_U32T(acc);
	sh	d0,d15,#-16
	insert	d15,d15,#0,#16,#16
.L196:
	add	d0,d15
.L265:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   324    acc = FOLD_U32T(acc);
	sh	d6,d0,#-16
	insert	d15,d0,#0,#16,#16
.L198:
	add	d6,d15
.L197:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   325  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   326    return inet_cksum_pseudo_base(p, proto, proto_len, acc);
	j	inet_cksum_pseudo_base
.L110:
	
__inet_chksum_pseudo_function_end:
	.size	inet_chksum_pseudo,__inet_chksum_pseudo_function_end-inet_chksum_pseudo
.L66:
	; End of function
	
	.sdecl	'.text.inet_chksum.ip_chksum_pseudo',code,cluster('ip_chksum_pseudo')
	.sect	'.text.inet_chksum.ip_chksum_pseudo'
	.align	2
	
	.global	ip_chksum_pseudo

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   327  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   328  #endif /* LWIP_IPV4 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   329  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   330  #if LWIP_IPV6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   331  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   332   * Calculates the checksum with IPv6 pseudo header used by TCP and UDP for a pbuf chain.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   333   * IPv6 addresses are expected to be in network byte order.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   334   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   335   * @param p chain of pbufs over that a checksum should be calculated (ip data part)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   336   * @param proto ipv6 protocol/next header (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   337   * @param proto_len length of the ipv6 payload (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   338   * @param src source ipv6 address (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   339   * @param dest destination ipv6 address (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   340   * @return checksum (as u16_t) to be saved directly in the protocol header
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   341   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   342  u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   343  ip6_chksum_pseudo(struct pbuf *p, u8_t proto, u16_t proto_len,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   344                    const ip6_addr_t *src, const ip6_addr_t *dest)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   345  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   346    u32_t acc = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   347    u32_t addr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   348    u8_t addr_part;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   349  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   350    for (addr_part = 0; addr_part < 4; addr_part++) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   351      addr = src->addr[addr_part];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   352      acc = (u32_t)(acc + (addr & 0xffffUL));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   353      acc = (u32_t)(acc + ((addr >> 16) & 0xffffUL));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   354      addr = dest->addr[addr_part];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   355      acc = (u32_t)(acc + (addr & 0xffffUL));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   356      acc = (u32_t)(acc + ((addr >> 16) & 0xffffUL));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   357    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   358    /* fold down to 16 bits */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   359    acc = FOLD_U32T(acc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   360    acc = FOLD_U32T(acc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   361  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   362    return inet_cksum_pseudo_base(p, proto, proto_len, acc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   363  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   364  #endif /* LWIP_IPV6 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   365  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   366  /* ip_chksum_pseudo:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   367   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   368   * Calculates the IPv4 or IPv6 pseudo Internet checksum used by TCP and UDP for a pbuf chain.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   369   * IP addresses are expected to be in network byte order.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   370   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   371   * @param p chain of pbufs over that a checksum should be calculated (ip data part)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   372   * @param src source ip address (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   373   * @param dst destination ip address (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   374   * @param proto ip protocol (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   375   * @param proto_len length of the ip data part (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   376   * @return checksum (as u16_t) to be saved directly in the protocol header
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   377   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   378  u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   379  ip_chksum_pseudo(struct pbuf *p, u8_t proto, u16_t proto_len,
; Function ip_chksum_pseudo
.L37:
ip_chksum_pseudo:	.type	func

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   380                   const ip_addr_t *src, const ip_addr_t *dest)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   381  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   382  #if LWIP_IPV6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   383    if (IP_IS_V6(dest)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   384      return ip6_chksum_pseudo(p, proto, proto_len, ip_2_ip6(src), ip_2_ip6(dest));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   385    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   386  #endif /* LWIP_IPV6 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   387  #if LWIP_IPV4 && LWIP_IPV6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   388    else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   389  #endif /* LWIP_IPV4 && LWIP_IPV6 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   390  #if LWIP_IPV4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   391    {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   392      return inet_chksum_pseudo(p, proto, proto_len, ip_2_ip4(src), ip_2_ip4(dest));
	j	inet_chksum_pseudo
.L129:
	
__ip_chksum_pseudo_function_end:
	.size	ip_chksum_pseudo,__ip_chksum_pseudo_function_end-ip_chksum_pseudo
.L76:
	; End of function
	
	.sdecl	'.text.inet_chksum.inet_cksum_pseudo_partial_base',code,cluster('inet_cksum_pseudo_partial_base')
	.sect	'.text.inet_chksum.inet_cksum_pseudo_partial_base'
	.align	2
	

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   393    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   394  #endif /* LWIP_IPV4 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   395  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   396  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   397  /** Parts of the pseudo checksum which are common to IPv4 and IPv6 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   398  static u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   399  inet_cksum_pseudo_partial_base(struct pbuf *p, u8_t proto, u16_t proto_len,
; Function inet_cksum_pseudo_partial_base
.L39:
inet_cksum_pseudo_partial_base:	.type	func
	mov	e10,d5,d4
	mov	e12,d7,d6
.L321:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   400                                 u16_t chksum_len, u32_t acc)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   401  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   402    struct pbuf *q;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   403    int swapped = 0;
	mov	d9,#0
.L199:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   404    u16_t chklen;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   405  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   406    /* iterate through all pbuf in chain */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   407    for (q = p; (q != NULL) && (chksum_len > 0); q = q->next) {
	mov.aa	a15,a4
.L200:
	j	.L16
.L17:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   408      LWIP_DEBUGF(INET_DEBUG, ("inet_chksum_pseudo(): checksumming pbuf %p (has next %p) \n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   409                               (void *)q, (void *)q->next));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   410      chklen = q->len;
	ld.hu	d0,[a15]10
.L201:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   411      if (chklen > chksum_len) {
	min.u	d8,d0,d12
.L202:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   412        chklen = chksum_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   413      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   414      acc += LWIP_CHKSUM(q->payload, chklen);
	ld.a	a4,[a15]4
.L322:
	mov	d4,d8
.L203:
	call	lwip_standard_chksum
.L204:
	add	d2,d13
.L205:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   415      chksum_len = (u16_t)(chksum_len - chklen);
	sub	d0,d12,d8
.L207:
	extr.u	d12,d0,#0,#16
.L208:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   416      LWIP_ASSERT("delete me", chksum_len < 0x7fff);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   417      /*LWIP_DEBUGF(INET_DEBUG, ("inet_chksum_pseudo(): unwrapped lwip_chksum()=%"X32_F" \n", acc));*/
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   418      /* fold the upper bit down */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   419      acc = FOLD_U32T(acc);
	sh	d0,d2,#-16
	insert	d15,d2,#0,#16,#16
	add	d13,d15,d0
.L206:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   420      if (q->len % 2 != 0) {
	ld.hu	d15,[a15]10
.L323:
	jz.t	d15:0,.L18
.L324:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   421        swapped = !swapped;
	eq	d9,d9,#0
.L325:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   422        acc = SWAP_BYTES_IN_WORD(acc);
	and	d15,d13,#255
	sh	d15,d15,#8
	extr.u	d13,d13,#8,#8
	or	d13,d15
.L18:
	ld.a	a15,[a15]
.L16:
	jz.a	a15,.L19
.L209:
	jne	d12,#0,.L17
.L19:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   423      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   424      /*LWIP_DEBUGF(INET_DEBUG, ("inet_chksum_pseudo(): wrapped lwip_chksum()=%"X32_F" \n", acc));*/
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   425    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   426  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   427    if (swapped) {
	jeq	d9,#0,.L20
.L210:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   428      acc = SWAP_BYTES_IN_WORD(acc);
	and	d15,d13,#255
.L211:
	sh	d15,d15,#8
.L212:
	extr.u	d13,d13,#8,#8
	or	d13,d15
.L20:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   429    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   430  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   431    acc += (u32_t)lwip_htons((u16_t)proto);
	mov	d4,d10
.L213:
	call	lwip_htons
.L214:
	add	d13,d2
.L216:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   432    acc += (u32_t)lwip_htons(proto_len);
	mov	d4,d11
.L217:
	call	lwip_htons
.L218:
	add	d13,d2
.L326:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   433  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   434    /* Fold 32-bit sum to 16 bits
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   435       calling this twice is probably faster than if statements... */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   436    acc = FOLD_U32T(acc);
	sh	d15,d13,#-16
	insert	d0,d13,#0,#16,#16
.L219:
	add	d15,d0
.L215:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   437    acc = FOLD_U32T(acc);
	sh	d0,d15,#-16
	insert	d15,d15,#0,#16,#16
.L220:
	add	d0,d15
.L327:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   438    LWIP_DEBUGF(INET_DEBUG, ("inet_chksum_pseudo(): pbuf chain lwip_chksum()=%"X32_F"\n", acc));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   439    return (u16_t)~(acc & 0xffffUL);
	extr.u	d2,d0,#0,#16
.L328:
	mov.u	d15,#65535
	xor	d2,d15
.L329:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   440  }
	ret
.L160:
	
__inet_cksum_pseudo_partial_base_function_end:
	.size	inet_cksum_pseudo_partial_base,__inet_cksum_pseudo_partial_base_function_end-inet_cksum_pseudo_partial_base
.L96:
	; End of function
	
	.sdecl	'.text.inet_chksum.inet_chksum_pseudo_partial',code,cluster('inet_chksum_pseudo_partial')
	.sect	'.text.inet_chksum.inet_chksum_pseudo_partial'
	.align	2
	
	.global	inet_chksum_pseudo_partial

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   441  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   442  #if LWIP_IPV4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   443  /* inet_chksum_pseudo_partial:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   444   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   445   * Calculates the IPv4 pseudo Internet checksum used by TCP and UDP for a pbuf chain.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   446   * IP addresses are expected to be in network byte order.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   447   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   448   * @param p chain of pbufs over that a checksum should be calculated (ip data part)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   449   * @param src source ip address (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   450   * @param dst destination ip address (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   451   * @param proto ip protocol (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   452   * @param proto_len length of the ip data part (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   453   * @return checksum (as u16_t) to be saved directly in the protocol header
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   454   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   455  u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   456  inet_chksum_pseudo_partial(struct pbuf *p, u8_t proto, u16_t proto_len,
; Function inet_chksum_pseudo_partial
.L41:
inet_chksum_pseudo_partial:	.type	func

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   457                             u16_t chksum_len, const ip4_addr_t *src, const ip4_addr_t *dest)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   458  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   459    u32_t acc;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   460    u32_t addr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   461  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   462    addr = ip4_addr_get_u32(src);
	ld.w	d0,[a5]
.L221:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   463    acc = (addr & 0xffffUL);
	insert	d15,d0,#0,#16,#16
.L270:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   464    acc = (u32_t)(acc + ((addr >> 16) & 0xffffUL));
	sh	d0,d0,#-16
.L222:
	add	d15,d0
.L271:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   465    addr = ip4_addr_get_u32(dest);
	ld.w	d0,[a6]
.L224:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   466    acc = (u32_t)(acc + (addr & 0xffffUL));
	insert	d1,d0,#0,#16,#16
.L272:
	add	d15,d1
.L223:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   467    acc = (u32_t)(acc + ((addr >> 16) & 0xffffUL));
	sh	d0,d0,#-16
.L225:
	add	d15,d0
.L273:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   468    /* fold down to 16 bits */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   469    acc = FOLD_U32T(acc);
	sh	d0,d15,#-16
	insert	d15,d15,#0,#16,#16
.L226:
	add	d0,d15
.L274:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   470    acc = FOLD_U32T(acc);
	sh	d7,d0,#-16
	insert	d15,d0,#0,#16,#16
.L228:
	add	d7,d15
.L227:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   471  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   472    return inet_cksum_pseudo_partial_base(p, proto, proto_len, chksum_len, acc);
	j	inet_cksum_pseudo_partial_base
.L120:
	
__inet_chksum_pseudo_partial_function_end:
	.size	inet_chksum_pseudo_partial,__inet_chksum_pseudo_partial_function_end-inet_chksum_pseudo_partial
.L71:
	; End of function
	
	.sdecl	'.text.inet_chksum.ip_chksum_pseudo_partial',code,cluster('ip_chksum_pseudo_partial')
	.sect	'.text.inet_chksum.ip_chksum_pseudo_partial'
	.align	2
	
	.global	ip_chksum_pseudo_partial

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   473  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   474  #endif /* LWIP_IPV4 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   475  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   476  #if LWIP_IPV6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   477  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   478   * Calculates the checksum with IPv6 pseudo header used by TCP and UDP for a pbuf chain.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   479   * IPv6 addresses are expected to be in network byte order. Will only compute for a
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   480   * portion of the payload.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   481   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   482   * @param p chain of pbufs over that a checksum should be calculated (ip data part)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   483   * @param proto ipv6 protocol/next header (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   484   * @param proto_len length of the ipv6 payload (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   485   * @param chksum_len number of payload bytes used to compute chksum
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   486   * @param src source ipv6 address (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   487   * @param dest destination ipv6 address (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   488   * @return checksum (as u16_t) to be saved directly in the protocol header
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   489   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   490  u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   491  ip6_chksum_pseudo_partial(struct pbuf *p, u8_t proto, u16_t proto_len,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   492                            u16_t chksum_len, const ip6_addr_t *src, const ip6_addr_t *dest)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   493  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   494    u32_t acc = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   495    u32_t addr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   496    u8_t addr_part;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   497  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   498    for (addr_part = 0; addr_part < 4; addr_part++) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   499      addr = src->addr[addr_part];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   500      acc = (u32_t)(acc + (addr & 0xffffUL));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   501      acc = (u32_t)(acc + ((addr >> 16) & 0xffffUL));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   502      addr = dest->addr[addr_part];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   503      acc = (u32_t)(acc + (addr & 0xffffUL));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   504      acc = (u32_t)(acc + ((addr >> 16) & 0xffffUL));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   505    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   506    /* fold down to 16 bits */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   507    acc = FOLD_U32T(acc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   508    acc = FOLD_U32T(acc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   509  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   510    return inet_cksum_pseudo_partial_base(p, proto, proto_len, chksum_len, acc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   511  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   512  #endif /* LWIP_IPV6 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   513  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   514  /* ip_chksum_pseudo_partial:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   515   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   516   * Calculates the IPv4 or IPv6 pseudo Internet checksum used by TCP and UDP for a pbuf chain.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   517   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   518   * @param p chain of pbufs over that a checksum should be calculated (ip data part)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   519   * @param src source ip address (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   520   * @param dst destination ip address (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   521   * @param proto ip protocol (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   522   * @param proto_len length of the ip data part (used for checksum of pseudo header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   523   * @return checksum (as u16_t) to be saved directly in the protocol header
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   524   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   525  u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   526  ip_chksum_pseudo_partial(struct pbuf *p, u8_t proto, u16_t proto_len,
; Function ip_chksum_pseudo_partial
.L43:
ip_chksum_pseudo_partial:	.type	func

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   527                           u16_t chksum_len, const ip_addr_t *src, const ip_addr_t *dest)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   528  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   529  #if LWIP_IPV6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   530    if (IP_IS_V6(dest)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   531      return ip6_chksum_pseudo_partial(p, proto, proto_len, chksum_len, ip_2_ip6(src), ip_2_ip6(dest));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   532    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   533  #endif /* LWIP_IPV6 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   534  #if LWIP_IPV4 && LWIP_IPV6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   535    else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   536  #endif /* LWIP_IPV4 && LWIP_IPV6 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   537  #if LWIP_IPV4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   538    {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   539      return inet_chksum_pseudo_partial(p, proto, proto_len, chksum_len, ip_2_ip4(src), ip_2_ip4(dest));
	j	inet_chksum_pseudo_partial
.L136:
	
__ip_chksum_pseudo_partial_function_end:
	.size	ip_chksum_pseudo_partial,__ip_chksum_pseudo_partial_function_end-ip_chksum_pseudo_partial
.L81:
	; End of function
	
	.sdecl	'.text.inet_chksum.inet_chksum',code,cluster('inet_chksum')
	.sect	'.text.inet_chksum.inet_chksum'
	.align	2
	
	.global	inet_chksum

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   540    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   541  #endif /* LWIP_IPV4 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   542  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   543  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   544  /* inet_chksum:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   545   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   546   * Calculates the Internet checksum over a portion of memory. Used primarily for IP
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   547   * and ICMP.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   548   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   549   * @param dataptr start of the buffer to calculate the checksum (no alignment needed)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   550   * @param len length of the buffer to calculate the checksum
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   551   * @return checksum (as u16_t) to be saved directly in the protocol header
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   552   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   553  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   554  u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   555  inet_chksum(const void *dataptr, u16_t len)
; Function inet_chksum
.L45:
inet_chksum:	.type	func

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   556  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   557    return (u16_t)~(unsigned int)LWIP_CHKSUM(dataptr, len);
	call	lwip_standard_chksum
.L229:
	mov.u	d15,#65535
	xor	d2,d15
.L241:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   558  }
	ret
.L98:
	
__inet_chksum_function_end:
	.size	inet_chksum,__inet_chksum_function_end-inet_chksum
.L56:
	; End of function
	
	.sdecl	'.text.inet_chksum.inet_chksum_pbuf',code,cluster('inet_chksum_pbuf')
	.sect	'.text.inet_chksum.inet_chksum_pbuf'
	.align	2
	
	.global	inet_chksum_pbuf

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   559  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   560  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   561   * Calculate a checksum over a chain of pbufs (without pseudo-header, much like
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   562   * inet_chksum only pbufs are used).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   563   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   564   * @param p pbuf chain over that the checksum should be calculated
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   565   * @return checksum (as u16_t) to be saved directly in the protocol header
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   566   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   567  u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   568  inet_chksum_pbuf(struct pbuf *p)
; Function inet_chksum_pbuf
.L47:
inet_chksum_pbuf:	.type	func

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   569  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   570    u32_t acc;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   571    struct pbuf *q;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   572    int swapped = 0;
	mov	d9,#0
.L230:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   573  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   574    acc = 0;
	mov	d8,d9
.L231:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   575    for (q = p; q != NULL; q = q->next) {
	mov.aa	a15,a4
.L232:
	j	.L25
.L26:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   576      acc += LWIP_CHKSUM(q->payload, q->len);
	ld.a	a4,[a15]4
.L246:
	ld.hu	d4,[a15]10
	call	lwip_standard_chksum
.L247:
	add	d8,d2
.L248:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   577      acc = FOLD_U32T(acc);
	sh	d0,d8,#-16
	insert	d8,d8,#0,#16,#16
	add	d8,d0
.L249:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   578      if (q->len % 2 != 0) {
	ld.hu	d15,[a15]10
.L250:
	jz.t	d15:0,.L27
.L251:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   579        swapped = !swapped;
	eq	d9,d9,#0
.L252:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   580        acc = SWAP_BYTES_IN_WORD(acc);
	and	d15,d8,#255
	sh	d0,d15,#8
	extr.u	d8,d8,#8,#8
	or	d8,d0
.L27:
	ld.a	a15,[a15]
.L25:
	jnz.a	a15,.L26
.L253:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   581      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   582    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   583  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   584    if (swapped) {
	jeq	d9,#0,.L28
.L254:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   585      acc = SWAP_BYTES_IN_WORD(acc);
	and	d15,d8,#255
	sh	d15,d15,#8
	extr.u	d8,d8,#8,#8
	or	d8,d15
.L28:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   586    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   587    return (u16_t)~(acc & 0xffffUL);
	extr.u	d2,d8,#0,#16
.L255:
	mov.u	d15,#65535
	xor	d2,d15
.L256:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   588  }
	ret
.L102:
	
__inet_chksum_pbuf_function_end:
	.size	inet_chksum_pbuf,__inet_chksum_pbuf_function_end-inet_chksum_pbuf
.L61:
	; End of function
	
	.calls	'inet_cksum_pseudo_base','lwip_standard_chksum'
	.calls	'inet_cksum_pseudo_base','lwip_htons'
	.calls	'inet_chksum_pseudo','inet_cksum_pseudo_base'
	.calls	'ip_chksum_pseudo','inet_chksum_pseudo'
	.calls	'inet_cksum_pseudo_partial_base','lwip_standard_chksum'
	.calls	'inet_cksum_pseudo_partial_base','lwip_htons'
	.calls	'inet_chksum_pseudo_partial','inet_cksum_pseudo_partial_base'
	.calls	'ip_chksum_pseudo_partial','inet_chksum_pseudo_partial'
	.calls	'inet_chksum','lwip_standard_chksum'
	.calls	'inet_chksum_pbuf','lwip_standard_chksum'
	.calls	'lwip_standard_chksum','',0
	.calls	'inet_cksum_pseudo_base','',0
	.calls	'inet_chksum_pseudo','',0
	.calls	'ip_chksum_pseudo','',0
	.calls	'inet_cksum_pseudo_partial_base','',0
	.calls	'inet_chksum_pseudo_partial','',0
	.calls	'ip_chksum_pseudo_partial','',0
	.calls	'inet_chksum','',0
	.extern	lwip_htons
	.calls	'inet_chksum_pbuf','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L49:
	.word	4912
	.half	3
	.word	.L50
	.byte	4
.L48:
	.byte	1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L51
.L97:
	.byte	2
	.byte	'unsigned short int',0,2,7,3
	.byte	'lwip_htons',0,1,97,7
	.word	170
	.byte	1,1,1,1,4
	.byte	'x',0,1,97,24
	.word	170
	.byte	0,5
	.byte	'void',0,6
	.word	226
.L99:
	.byte	7
	.word	232
	.byte	7
	.word	226
.L112:
	.byte	2
	.byte	'unsigned char',0,1,8,8
	.byte	'pbuf',0,2,186,1,8,16,9
	.byte	'next',0
	.word	.L103-.L49
	.byte	4,2,35,0,9
	.byte	'payload',0
	.word	242
	.byte	4,2,35,4,9
	.byte	'tot_len',0
	.word	170
	.byte	2,2,35,8,9
	.byte	'len',0
	.word	170
	.byte	2,2,35,10,9
	.byte	'type_internal',0
	.word	247
	.byte	1,2,35,12,9
	.byte	'flags',0
	.word	247
	.byte	1,2,35,13,9
	.byte	'ref',0
	.word	247
	.byte	1,2,35,14,9
	.byte	'if_idx',0
	.word	247
	.byte	1,2,35,15,0
.L103:
	.byte	7
	.word	264
.L105:
	.byte	2
	.byte	'unsigned long int',0,4,7
.L108:
	.byte	2
	.byte	'int',0,4,5,8
	.byte	'ip4_addr',0,3,51,8,4,9
	.byte	'addr',0
	.word	409
	.byte	4,2,35,0,0,6
	.word	437
.L115:
	.byte	7
	.word	466
	.byte	6
	.word	437
.L133:
	.byte	7
	.word	476
	.byte	6
	.word	247
.L146:
	.byte	7
	.word	486
	.byte	6
	.word	170
.L148:
	.byte	7
	.word	496
	.byte	10,1,7
	.word	506
	.byte	11
	.byte	'__codeptr',0,4,1,1
	.word	508
	.byte	11
	.byte	'boolean',0,5,102,29
	.word	247
	.byte	11
	.byte	'uint8',0,5,106,29
	.word	247
	.byte	11
	.byte	'uint16',0,5,110,29
	.word	170
	.byte	11
	.byte	'uint32',0,5,114,29
	.word	409
	.byte	11
	.byte	'Std_ReturnType',0,6,109,16
	.word	247
	.byte	11
	.byte	'PduIdType',0,7,37,21
	.word	247
	.byte	11
	.byte	'PduLengthType',0,7,41,22
	.word	170
	.byte	12,8,101,9,1,13
	.byte	'BUFREQ_OK',0,0,13
	.byte	'BUFREQ_E_NOT_OK',0,1,13
	.byte	'BUFREQ_E_BUSY',0,2,13
	.byte	'BUFREQ_E_OVFL',0,3,0,11
	.byte	'BufReq_ReturnType',0,8,107,3
	.word	654
	.byte	7
	.word	247
	.byte	11
	.byte	'SduDataPtrType',0,8,189,1,40
	.word	748
	.byte	12,8,204,1,9,1,13
	.byte	'TP_DATACONF',0,0,13
	.byte	'TP_DATARETRY',0,1,13
	.byte	'TP_CONFPENDING',0,2,0,11
	.byte	'TpDataStateType',0,8,216,1,3
	.word	777
	.byte	11
	.byte	'TcpIp_SocketIdType',0,9,50,16
	.word	247
	.byte	14,4
	.word	409
	.byte	15,0,0,16,9,52,9,4,9
	.byte	'Addr',0
	.word	882
	.byte	4,2,35,0,0,11
	.byte	'TcpIp_IpAddressType',0,9,55,3
	.word	891
	.byte	11
	.byte	'TcpIp_DomainType',0,9,61,16
	.word	170
	.byte	16,9,68,9,8,9
	.byte	'Domain',0
	.word	170
	.byte	2,2,35,0,9
	.byte	'Port',0
	.word	170
	.byte	2,2,35,2,9
	.byte	'Addr',0
	.word	882
	.byte	4,2,35,4,0,11
	.byte	'TcpIp_SockAddrInetType',0,9,73,3
	.word	964
	.byte	11
	.byte	'TcpIp_AddressType',0,10,128,1,15
	.word	247
	.byte	11
	.byte	'TcpIp_CtrlIdType',0,10,142,1,15
	.word	247
	.byte	11
	.byte	'TcpIp_IpAddrStateType',0,10,144,1,15
	.word	247
	.byte	11
	.byte	'TcpIp_LocalAddrAssignmentConfigType',0,10,149,1,15
	.word	247
	.byte	11
	.byte	'TcpIp_StaticAddrIdType',0,10,151,1,15
	.word	247
	.byte	16,10,152,1,9,12,9
	.byte	'State',0
	.word	247
	.byte	1,2,35,0,9
	.byte	'Netmask',0
	.word	247
	.byte	1,2,35,1,9
	.byte	'Domain',0
	.word	170
	.byte	2,2,35,2,9
	.byte	'IpAddr',0
	.word	891
	.byte	4,2,35,4,9
	.byte	'DefaultRouter',0
	.word	891
	.byte	4,2,35,8,0,11
	.byte	'TcpIp_StaticIpAddrType',0,10,162,1,3
	.word	1206
	.byte	11
	.byte	'TcpIp_LocalAddrIdType',0,10,173,1,15
	.word	247
	.byte	14,3
	.word	247
	.byte	15,2,0,16,10,231,1,9,8,9
	.byte	'CtrlId',0
	.word	247
	.byte	1,2,35,0,9
	.byte	'Address',0
	.word	247
	.byte	1,2,35,1,9
	.byte	'Domain',0
	.word	170
	.byte	2,2,35,2,9
	.byte	'StaticAddrId',0
	.word	247
	.byte	1,2,35,4,9
	.byte	'Assignments',0
	.word	1363
	.byte	3,2,35,5,0,11
	.byte	'TcpIp_LocalAddrConfigType',0,10,243,1,3
	.word	1372
	.byte	16,10,245,1,9,4,9
	.byte	'ArpConfigId',0
	.word	247
	.byte	1,2,35,0,9
	.byte	'DHCPConfigId',0
	.word	247
	.byte	1,2,35,1,9
	.byte	'AutoIpInitTimeout',0
	.word	170
	.byte	2,2,35,2,0,11
	.byte	'TcpIp_IpV4CtrlConfigType',0,10,130,2,3
	.word	1506
	.byte	16,10,133,2,9,8,9
	.byte	'CtrlIdx',0
	.word	247
	.byte	1,2,35,0,9
	.byte	'FramePrio',0
	.word	247
	.byte	1,2,35,1,9
	.byte	'UnicastAddrId',0
	.word	247
	.byte	1,2,35,2,9
	.byte	'UnicastAddrLimit',0
	.word	247
	.byte	1,2,35,3,9
	.byte	'MulticastAddrId',0
	.word	247
	.byte	1,2,35,4,9
	.byte	'LocalAddrLimit',0
	.word	247
	.byte	1,2,35,5,9
	.byte	'IpV4CtrlId',0
	.word	247
	.byte	1,2,35,6,9
	.byte	'IpV6CtrlId',0
	.word	247
	.byte	1,2,35,7,0,11
	.byte	'TcpIp_NetIfCtrlConfigType',0,10,148,2,3
	.word	1617
	.byte	11
	.byte	'SoAd_RoutingGroupIdType',0,11,43,15
	.word	247
	.byte	11
	.byte	'SoAd_SoConIdType',0,11,44,15
	.word	247
	.byte	11
	.byte	'SoAd_SoConGroupIdType',0,11,45,15
	.word	247
	.byte	11
	.byte	'SoAd_PduRouteIdType',0,11,46,15
	.word	247
	.byte	11
	.byte	'SoAd_PduRouteDestIdType',0,11,47,15
	.word	247
	.byte	11
	.byte	'SoAd_SocketRouteIdType',0,11,48,15
	.word	247
	.byte	11
	.byte	'SoAd_IfTxUnconfirmedType',0,11,49,16
	.word	170
	.byte	11
	.byte	'SoAd_IfTxTimerType',0,11,51,16
	.word	170
	.byte	14,1
	.word	247
	.byte	15,0,0,16,11,53,9,2,9
	.byte	'Mask',0
	.word	2071
	.byte	1,2,35,0,9
	.byte	'RoutingState',0
	.word	2071
	.byte	1,2,35,1,0,11
	.byte	'SoAd_RoutingGroupCtrlType',0,11,57,3
	.word	2080
	.byte	12,11,63,9,1,13
	.byte	'SOAD_UL_DOIP',0,0,13
	.byte	'SOAD_UL_UDPNM',0,1,13
	.byte	'SOAD_UL_PDUR',0,2,13
	.byte	'SOAD_UL_XCP',0,3,13
	.byte	'SOAD_UL_MAX',0,4,0,11
	.byte	'SoAd_ULIndexType',0,11,71,3
	.word	2156
	.byte	11
	.byte	'SoAd_RemoteAddressType',0,12,113,32
	.word	964
	.byte	12,12,115,9,1,13
	.byte	'SOAD_SOCON_UNINIT',0,0,13
	.byte	'SOAD_SOCON_OFFLINE',0,1,13
	.byte	'SOAD_SOCON_RECONN',0,2,13
	.byte	'SOAD_SOCON_ONLINE',0,3,0,11
	.byte	'SoAd_SoConModeType',0,12,121,3
	.word	2292
	.byte	6
	.word	247
	.byte	7
	.word	2406
	.byte	6
	.word	247
	.byte	7
	.word	2416
	.byte	6
	.word	247
	.byte	7
	.word	2426
	.byte	6
	.word	2156
	.byte	7
	.word	2436
	.byte	16,12,129,1,9,36,9
	.byte	'IfBufferLength',0
	.word	170
	.byte	2,2,35,0,9
	.byte	'IfBufferOffset',0
	.word	170
	.byte	2,2,35,2,9
	.byte	'TpBufferLength',0
	.word	170
	.byte	2,2,35,4,9
	.byte	'TpBufferOffset',0
	.word	170
	.byte	2,2,35,6,9
	.byte	'PduRouteNum',0
	.word	247
	.byte	1,2,35,8,9
	.byte	'SocketRouteNum',0
	.word	247
	.byte	1,2,35,9,9
	.byte	'PduRouteDestNum',0
	.word	247
	.byte	1,2,35,10,9
	.byte	'RemoteAddrState',0
	.word	247
	.byte	1,2,35,11,9
	.byte	'RemoteAddr',0
	.word	964
	.byte	8,2,35,12,9
	.byte	'PduRouteDestList',0
	.word	2411
	.byte	4,2,35,20,9
	.byte	'PduRouteList',0
	.word	2421
	.byte	4,2,35,24,9
	.byte	'SocketRouteList',0
	.word	2431
	.byte	4,2,35,28,9
	.byte	'SoConModeChgList',0
	.word	2441
	.byte	4,2,35,32,0,11
	.byte	'SoAd_SocketConnectionType',0,12,146,1,3
	.word	2446
	.byte	16,12,148,1,9,16,9
	.byte	'CtrlFlag',0
	.word	247
	.byte	1,2,35,0,9
	.byte	'KeepAliveProbesMax',0
	.word	170
	.byte	2,2,35,2,9
	.byte	'KeepAliveInterval',0
	.word	409
	.byte	4,2,35,4,9
	.byte	'KeepAliveTime',0
	.word	409
	.byte	4,2,35,8,9
	.byte	'TxQuota',0
	.word	409
	.byte	4,2,35,12,0,11
	.byte	'SoAd_TcpProtocolType',0,12,155,1,3
	.word	2798
	.byte	16,12,157,1,9,12,9
	.byte	'CtrlFlag',0
	.word	247
	.byte	1,2,35,0,9
	.byte	'nPduTxBufferMin',0
	.word	170
	.byte	2,2,35,2,9
	.byte	'TriggerTimeout',0
	.word	170
	.byte	2,2,35,4,9
	.byte	'AliveSupervisionTimeout',0
	.word	409
	.byte	4,2,35,6,0,11
	.byte	'SoAd_UdpProtocolType',0,12,163,1,3
	.word	2948
	.byte	6
	.word	2798
	.byte	7
	.word	3085
	.byte	6
	.word	2948
	.byte	7
	.word	3095
	.byte	16,12,165,1,9,24,9
	.byte	'GroupId',0
	.word	247
	.byte	1,2,35,0,9
	.byte	'CtrlFlag',0
	.word	247
	.byte	1,2,35,1,9
	.byte	'FramePriority',0
	.word	247
	.byte	1,2,35,2,9
	.byte	'SoConNum',0
	.word	247
	.byte	1,2,35,3,9
	.byte	'SoConId',0
	.word	247
	.byte	1,2,35,4,9
	.byte	'IpAddrAssignChgNum',0
	.word	247
	.byte	1,2,35,5,9
	.byte	'LocalAddrId',0
	.word	247
	.byte	1,2,35,6,9
	.byte	'LocalPort',0
	.word	170
	.byte	2,2,35,8,9
	.byte	'IpAddrAssignChgList',0
	.word	2441
	.byte	4,2,35,12,9
	.byte	'TcpProtocolPtr',0
	.word	3090
	.byte	4,2,35,16,9
	.byte	'UdpProtocolPtr',0
	.word	3100
	.byte	4,2,35,20,0,11
	.byte	'SoAd_SocketConnectionGroupType',0,12,178,1,3
	.word	3105
	.byte	6
	.word	247
	.byte	7
	.word	3390
	.byte	16,12,180,1,9,12,9
	.byte	'CtrlFlag',0
	.word	247
	.byte	1,2,35,0,9
	.byte	'PduRouteDestNum',0
	.word	247
	.byte	1,2,35,1,9
	.byte	'SocketRouteDestNum',0
	.word	247
	.byte	1,2,35,2,9
	.byte	'PduRouteDestList',0
	.word	3395
	.byte	4,2,35,4,9
	.byte	'SocketRouteDestList',0
	.word	3395
	.byte	4,2,35,8,0,11
	.byte	'SoAd_RoutingGroupType',0,12,187,1,3
	.word	3400
	.byte	16,12,189,1,9,6,9
	.byte	'ULType',0
	.word	247
	.byte	1,2,35,0,9
	.byte	'ULIndex',0
	.word	2156
	.byte	1,2,35,1,9
	.byte	'CtrlFlag',0
	.word	247
	.byte	1,2,35,2,9
	.byte	'RouteDestNum',0
	.word	247
	.byte	1,2,35,3,9
	.byte	'RouteDestId',0
	.word	247
	.byte	1,2,35,4,9
	.byte	'TxPduId',0
	.word	247
	.byte	1,2,35,5,0,11
	.byte	'SoAd_PduRouteType',0,12,204,1,3
	.word	3564
	.byte	7
	.word	2080
	.byte	16,12,206,1,9,20,9
	.byte	'TxPduHeaderId',0
	.word	409
	.byte	4,2,35,0,9
	.byte	'SoConNum',0
	.word	247
	.byte	1,2,35,4,9
	.byte	'SoConId',0
	.word	247
	.byte	1,2,35,5,9
	.byte	'PduRouteId',0
	.word	247
	.byte	1,2,35,6,9
	.byte	'UdpTriggerMode',0
	.word	247
	.byte	1,2,35,7,9
	.byte	'UdpTriggerTimeout',0
	.word	170
	.byte	2,2,35,8,9
	.byte	'RoutingCtrlList',0
	.word	3709
	.byte	4,2,35,12,9
	.byte	'IfTriggerList',0
	.word	748
	.byte	4,2,35,16,0,11
	.byte	'SoAd_PduRouteDestType',0,12,217,1,3
	.word	3714
	.byte	16,12,219,1,9,16,9
	.byte	'RxPduHeaderId',0
	.word	409
	.byte	4,2,35,0,9
	.byte	'ULType',0
	.word	247
	.byte	1,2,35,4,9
	.byte	'ULIndex',0
	.word	2156
	.byte	1,2,35,5,9
	.byte	'SoConNum',0
	.word	247
	.byte	1,2,35,6,9
	.byte	'SoConId',0
	.word	247
	.byte	1,2,35,7,9
	.byte	'RxPduId',0
	.word	247
	.byte	1,2,35,8,9
	.byte	'RoutingCtrlList',0
	.word	3709
	.byte	4,2,35,12,0,11
	.byte	'SoAd_SocketRouteType',0,12,236,1,3
	.word	3929
	.byte	6
	.word	3714
	.byte	7
	.word	4099
	.byte	16,12,155,2,9,24,9
	.byte	'State',0
	.word	247
	.byte	1,2,35,0,9
	.byte	'Timer',0
	.word	170
	.byte	2,2,35,2,9
	.byte	'BufferLength',0
	.word	170
	.byte	2,2,35,4,9
	.byte	'BufferOffset',0
	.word	170
	.byte	2,2,35,6,9
	.byte	'UdpTxBuffer',0
	.word	748
	.byte	4,2,35,8,9
	.byte	'TotalTxLength',0
	.word	170
	.byte	2,2,35,12,9
	.byte	'UsedTxLength',0
	.word	170
	.byte	2,2,35,14,9
	.byte	'IfTxDataBuffer',0
	.word	3395
	.byte	4,2,35,16,9
	.byte	'PduRouteDestPtr',0
	.word	4104
	.byte	4,2,35,20,0,11
	.byte	'SoAd_TxSessionType',0,12,177,2,3
	.word	4109
	.byte	6
	.word	3929
	.byte	7
	.word	4333
	.byte	16,12,180,2,9,8,9
	.byte	'PduLength',0
	.word	170
	.byte	2,2,35,0,9
	.byte	'RemainLength',0
	.word	170
	.byte	2,2,35,2,9
	.byte	'SocketRoutePtr',0
	.word	4338
	.byte	4,2,35,4,0,11
	.byte	'SoAd_RxPduInfoType',0,12,185,2,3
	.word	4343
	.byte	16,12,187,2,9,12,9
	.byte	'TotalLength',0
	.word	170
	.byte	2,2,35,0,9
	.byte	'In',0
	.word	170
	.byte	2,2,35,2,9
	.byte	'Out',0
	.word	170
	.byte	2,2,35,4,9
	.byte	'BufferPtr',0
	.word	748
	.byte	4,2,35,8,0,11
	.byte	'SoAd_RxFifoType',0,12,193,2,3
	.word	4443
	.byte	16,12,195,2,9,8,9
	.byte	'TotalLength',0
	.word	170
	.byte	2,2,35,0,9
	.byte	'UsedLength',0
	.word	170
	.byte	2,2,35,2,9
	.byte	'BufferPtr',0
	.word	748
	.byte	4,2,35,4,0,11
	.byte	'SoAd_RxBufferType',0,12,200,2,3
	.word	4540
	.byte	14,8
	.word	247
	.byte	15,7,0,16,12,202,2,9,48,9
	.byte	'State',0
	.word	247
	.byte	1,2,35,0,9
	.byte	'ValidHeaderLen',0
	.word	247
	.byte	1,2,35,1,9
	.byte	'PduHeader',0
	.word	4634
	.byte	8,2,35,2,9
	.byte	'RxPduInfo',0
	.word	4343
	.byte	8,2,35,12,9
	.byte	'ProcessPduInfo',0
	.word	4343
	.byte	8,2,35,20,9
	.byte	'IfBuffer',0
	.word	4540
	.byte	8,2,35,28,9
	.byte	'TpBuffer',0
	.word	4443
	.byte	12,2,35,36,0,11
	.byte	'SoAd_RxSessionType',0,12,216,2,3
	.word	4643
	.byte	11
	.byte	'u8_t',0,13,61,25
	.word	247
	.byte	2
	.byte	'char',0,1,6,11
	.byte	's8_t',0,13,62,25
	.word	4828
	.byte	11
	.byte	'u16_t',0,13,63,25
	.word	170
	.byte	11
	.byte	'u32_t',0,13,65,25
	.word	409
	.byte	11
	.byte	'ip4_addr_t',0,3,57,25
	.word	437
	.byte	11
	.byte	'ip_addr_t',0,14,142,2,20
	.word	437
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L50:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,58,15,59,15,57,15
	.byte	73,19,54,15,39,12,63,12,60,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,59,0,3,8,0,0,6,38,0,73,19,0
	.byte	0,7,15,0,73,19,0,0,8,19,1,3,8,58,15,59,15,57,15,11,15,0,0,9,13,0,3,8,73,19,11,15,56,9,0,0,10,21,0,54,15
	.byte	0,0,11,22,0,3,8,58,15,59,15,57,15,73,19,0,0,12,4,1,58,15,59,15,57,15,11,15,0,0,13,40,0,3,8,28,13,0,0,14
	.byte	1,1,11,15,73,19,0,0,15,33,0,47,15,0,0,16,19,1,58,15,59,15,57,15,11,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L51:
	.word	.L234-.L233
.L233:
	.half	3
	.word	.L236-.L235
.L235:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch',0,0
	.byte	'def.h',0,1,0,0
	.byte	'pbuf.h',0,1,0,0
	.byte	'ip4_addr.h',0,1,0,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c',0,0,0,0
	.byte	'Platform_Types.h',0,2,0,0
	.byte	'Std_Types.h',0,2,0,0
	.byte	'ComStack_Types_Cfg.h',0,3,0,0
	.byte	'ComStack_Types.h',0,4,0,0
	.byte	'TcpIp_GeneratedTypes.h',0,3,0,0
	.byte	'TcpIp_Types.h',0,5,0,0
	.byte	'SoAd_GeneratedTypes.h',0,3,0,0
	.byte	'SoAd_Types.h',0,6,0,0
	.byte	'cc.h',0,7,0,0
	.byte	'ip_addr.h',0,1,0,0,0
.L236:
.L234:
	.sdecl	'.debug_info',debug,cluster('inet_chksum')
	.sect	'.debug_info'
.L52:
	.word	260
	.half	3
	.word	.L53
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L55,.L54
	.byte	2
	.word	.L48
	.byte	3
	.byte	'inet_chksum',0,1,171,4,1
	.word	.L97
	.byte	1,1,1
	.word	.L45,.L98,.L44
	.byte	4
	.byte	'dataptr',0,1,171,4,25
	.word	.L99,.L100
	.byte	4
	.byte	'len',0,1,171,4,40
	.word	.L97,.L101
	.byte	5
	.word	.L45,.L98
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('inet_chksum')
	.sect	'.debug_abbrev'
.L53:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('inet_chksum')
	.sect	'.debug_line'
.L54:
	.word	.L238-.L237
.L237:
	.half	3
	.word	.L240-.L239
.L239:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c',0,0,0,0,0
.L240:
	.byte	5,53,7,0,5,2
	.word	.L45
	.byte	3,172,4,1,5,17,9
	.half	.L229-.L45
	.byte	1,5,1,9
	.half	.L241-.L229
	.byte	3,1,1,7,9
	.half	.L56-.L241
	.byte	0,1,1
.L238:
	.sdecl	'.debug_ranges',debug,cluster('inet_chksum')
	.sect	'.debug_ranges'
.L55:
	.word	-1,.L45,0,.L56-.L45,0,0
	.sdecl	'.debug_info',debug,cluster('inet_chksum_pbuf')
	.sect	'.debug_info'
.L57:
	.word	296
	.half	3
	.word	.L58
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L60,.L59
	.byte	2
	.word	.L48
	.byte	3
	.byte	'inet_chksum_pbuf',0,1,184,4,1
	.word	.L97
	.byte	1,1,1
	.word	.L47,.L102,.L46
	.byte	4
	.byte	'p',0,1,184,4,31
	.word	.L103,.L104
	.byte	5
	.word	.L47,.L102
	.byte	6
	.byte	'acc',0,1,186,4,9
	.word	.L105,.L106
	.byte	6
	.byte	'q',0,1,187,4,16
	.word	.L103,.L107
	.byte	6
	.byte	'swapped',0,1,188,4,7
	.word	.L108,.L109
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('inet_chksum_pbuf')
	.sect	'.debug_abbrev'
.L58:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('inet_chksum_pbuf')
	.sect	'.debug_line'
.L59:
	.word	.L243-.L242
.L242:
	.half	3
	.word	.L245-.L244
.L244:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c',0,0,0,0,0
.L245:
	.byte	5,15,7,0,5,2
	.word	.L47
	.byte	3,187,4,1,5,7,9
	.half	.L230-.L47
	.byte	3,2,1,5,10,9
	.half	.L231-.L230
	.byte	3,1,1,5,24,9
	.half	.L232-.L231
	.byte	1,5,25,9
	.half	.L26-.L232
	.byte	3,1,1,5,37,9
	.half	.L246-.L26
	.byte	1,5,9,9
	.half	.L247-.L246
	.byte	1,5,11,9
	.half	.L248-.L247
	.byte	3,1,1,5,10,9
	.half	.L249-.L248
	.byte	3,1,1,5,5,9
	.half	.L250-.L249
	.byte	1,5,17,7,9
	.half	.L251-.L250
	.byte	3,1,1,5,13,9
	.half	.L252-.L251
	.byte	3,1,1,5,31,9
	.half	.L27-.L252
	.byte	3,123,1,5,24,9
	.half	.L25-.L27
	.byte	1,5,3,7,9
	.half	.L253-.L25
	.byte	3,9,1,5,11,7,9
	.half	.L254-.L253
	.byte	3,1,1,5,23,9
	.half	.L28-.L254
	.byte	3,2,1,5,17,9
	.half	.L255-.L28
	.byte	1,5,1,9
	.half	.L256-.L255
	.byte	3,1,1,7,9
	.half	.L61-.L256
	.byte	0,1,1
.L243:
	.sdecl	'.debug_ranges',debug,cluster('inet_chksum_pbuf')
	.sect	'.debug_ranges'
.L60:
	.word	-1,.L47,0,.L61-.L47,0,0
	.sdecl	'.debug_info',debug,cluster('inet_chksum_pseudo')
	.sect	'.debug_info'
.L62:
	.word	357
	.half	3
	.word	.L63
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L65,.L64
	.byte	2
	.word	.L48
	.byte	3
	.byte	'inet_chksum_pseudo',0,1,182,2,1
	.word	.L97
	.byte	1,1,1
	.word	.L35,.L110,.L34
	.byte	4
	.byte	'p',0,1,182,2,33
	.word	.L103,.L111
	.byte	4
	.byte	'proto',0,1,182,2,41
	.word	.L112,.L113
	.byte	4
	.byte	'proto_len',0,1,182,2,54
	.word	.L97,.L114
	.byte	4
	.byte	'src',0,1,183,2,38
	.word	.L115,.L116
	.byte	4
	.byte	'dest',0,1,183,2,61
	.word	.L115,.L117
	.byte	5
	.word	.L35,.L110
	.byte	6
	.byte	'acc',0,1,185,2,9
	.word	.L105,.L118
	.byte	6
	.byte	'addr',0,1,186,2,9
	.word	.L105,.L119
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('inet_chksum_pseudo')
	.sect	'.debug_abbrev'
.L63:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('inet_chksum_pseudo')
	.sect	'.debug_line'
.L64:
	.word	.L258-.L257
.L257:
	.half	3
	.word	.L260-.L259
.L259:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c',0,0,0,0,0
.L260:
	.byte	5,10,7,0,5,2
	.word	.L35
	.byte	3,187,2,1,5,15,9
	.half	.L191-.L35
	.byte	3,1,1,5,30,9
	.half	.L261-.L191
	.byte	3,1,1,5,21,9
	.half	.L192-.L261
	.byte	1,5,10,9
	.half	.L262-.L192
	.byte	3,1,1,5,29,9
	.half	.L194-.L262
	.byte	3,1,1,5,21,9
	.half	.L263-.L194
	.byte	1,5,30,9
	.half	.L193-.L263
	.byte	3,1,1,5,21,9
	.half	.L195-.L193
	.byte	1,5,9,9
	.half	.L264-.L195
	.byte	3,2,1,9
	.half	.L265-.L264
	.byte	3,1,1,5,54,9
	.half	.L197-.L265
	.byte	3,2,1,5,1,7,9
	.half	.L66-.L197
	.byte	3,1,0,1,1
.L258:
	.sdecl	'.debug_ranges',debug,cluster('inet_chksum_pseudo')
	.sect	'.debug_ranges'
.L65:
	.word	-1,.L35,0,.L66-.L35,0,0
	.sdecl	'.debug_info',debug,cluster('inet_chksum_pseudo_partial')
	.sect	'.debug_info'
.L67:
	.word	389
	.half	3
	.word	.L68
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L70,.L69
	.byte	2
	.word	.L48
	.byte	3
	.byte	'inet_chksum_pseudo_partial',0,1,200,3,1
	.word	.L97
	.byte	1,1,1
	.word	.L41,.L120,.L40
	.byte	4
	.byte	'p',0,1,200,3,41
	.word	.L103,.L121
	.byte	4
	.byte	'proto',0,1,200,3,49
	.word	.L112,.L122
	.byte	4
	.byte	'proto_len',0,1,200,3,62
	.word	.L97,.L123
	.byte	4
	.byte	'chksum_len',0,1,201,3,34
	.word	.L97,.L124
	.byte	4
	.byte	'src',0,1,201,3,64
	.word	.L115,.L125
	.byte	4
	.byte	'dest',0,1,201,3,87
	.word	.L115,.L126
	.byte	5
	.word	.L41,.L120
	.byte	6
	.byte	'acc',0,1,203,3,9
	.word	.L105,.L127
	.byte	6
	.byte	'addr',0,1,204,3,9
	.word	.L105,.L128
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('inet_chksum_pseudo_partial')
	.sect	'.debug_abbrev'
.L68:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('inet_chksum_pseudo_partial')
	.sect	'.debug_line'
.L69:
	.word	.L267-.L266
.L266:
	.half	3
	.word	.L269-.L268
.L268:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c',0,0,0,0,0
.L269:
	.byte	5,10,7,0,5,2
	.word	.L41
	.byte	3,205,3,1,5,15,9
	.half	.L221-.L41
	.byte	3,1,1,5,30,9
	.half	.L270-.L221
	.byte	3,1,1,5,21,9
	.half	.L222-.L270
	.byte	1,5,10,9
	.half	.L271-.L222
	.byte	3,1,1,5,29,9
	.half	.L224-.L271
	.byte	3,1,1,5,21,9
	.half	.L272-.L224
	.byte	1,5,30,9
	.half	.L223-.L272
	.byte	3,1,1,5,21,9
	.half	.L225-.L223
	.byte	1,5,9,9
	.half	.L273-.L225
	.byte	3,2,1,9
	.half	.L274-.L273
	.byte	3,1,1,5,74,9
	.half	.L227-.L274
	.byte	3,2,1,5,1,7,9
	.half	.L71-.L227
	.byte	3,1,0,1,1
.L267:
	.sdecl	'.debug_ranges',debug,cluster('inet_chksum_pseudo_partial')
	.sect	'.debug_ranges'
.L70:
	.word	-1,.L41,0,.L71-.L41,0,0
	.sdecl	'.debug_info',debug,cluster('ip_chksum_pseudo')
	.sect	'.debug_info'
.L72:
	.word	319
	.half	3
	.word	.L73
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L75,.L74
	.byte	2
	.word	.L48
	.byte	3
	.byte	'ip_chksum_pseudo',0,1,251,2,1
	.word	.L97
	.byte	1,1,1
	.word	.L37,.L129,.L36
	.byte	4
	.byte	'p',0,1,251,2,31
	.word	.L103,.L130
	.byte	4
	.byte	'proto',0,1,251,2,39
	.word	.L112,.L131
	.byte	4
	.byte	'proto_len',0,1,251,2,52
	.word	.L97,.L132
	.byte	4
	.byte	'src',0,1,252,2,35
	.word	.L133,.L134
	.byte	4
	.byte	'dest',0,1,252,2,57
	.word	.L133,.L135
	.byte	5
	.word	.L37,.L129
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('ip_chksum_pseudo')
	.sect	'.debug_abbrev'
.L73:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('ip_chksum_pseudo')
	.sect	'.debug_line'
.L74:
	.word	.L276-.L275
.L275:
	.half	3
	.word	.L278-.L277
.L277:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c',0,0,0,0,0
.L278:
	.byte	5,67,7,0,5,2
	.word	.L37
	.byte	3,135,3,1,5,1,7,9
	.half	.L76-.L37
	.byte	3,3,0,1,1
.L276:
	.sdecl	'.debug_ranges',debug,cluster('ip_chksum_pseudo')
	.sect	'.debug_ranges'
.L75:
	.word	-1,.L37,0,.L76-.L37,0,0
	.sdecl	'.debug_info',debug,cluster('ip_chksum_pseudo_partial')
	.sect	'.debug_info'
.L77:
	.word	351
	.half	3
	.word	.L78
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L80,.L79
	.byte	2
	.word	.L48
	.byte	3
	.byte	'ip_chksum_pseudo_partial',0,1,142,4,1
	.word	.L97
	.byte	1,1,1
	.word	.L43,.L136,.L42
	.byte	4
	.byte	'p',0,1,142,4,39
	.word	.L103,.L137
	.byte	4
	.byte	'proto',0,1,142,4,47
	.word	.L112,.L138
	.byte	4
	.byte	'proto_len',0,1,142,4,60
	.word	.L97,.L139
	.byte	4
	.byte	'chksum_len',0,1,143,4,32
	.word	.L97,.L140
	.byte	4
	.byte	'src',0,1,143,4,61
	.word	.L133,.L141
	.byte	4
	.byte	'dest',0,1,143,4,83
	.word	.L133,.L142
	.byte	5
	.word	.L43,.L136
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('ip_chksum_pseudo_partial')
	.sect	'.debug_abbrev'
.L78:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('ip_chksum_pseudo_partial')
	.sect	'.debug_line'
.L79:
	.word	.L280-.L279
.L279:
	.half	3
	.word	.L282-.L281
.L281:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c',0,0,0,0,0
.L282:
	.byte	5,87,7,0,5,2
	.word	.L43
	.byte	3,154,4,1,5,1,7,9
	.half	.L81-.L43
	.byte	3,3,0,1,1
.L280:
	.sdecl	'.debug_ranges',debug,cluster('ip_chksum_pseudo_partial')
	.sect	'.debug_ranges'
.L80:
	.word	-1,.L43,0,.L81-.L43,0,0
	.sdecl	'.debug_info',debug,cluster('lwip_standard_chksum')
	.sect	'.debug_info'
.L82:
	.word	351
	.half	3
	.word	.L83
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L85,.L84
	.byte	2
	.word	.L48
	.byte	3
	.byte	'lwip_standard_chksum',0,1,133,1,1
	.word	.L97
	.byte	1,1,1
	.word	.L31,.L143,.L30
	.byte	4
	.byte	'dataptr',0,1,133,1,34
	.word	.L99,.L144
	.byte	4
	.byte	'len',0,1,133,1,47
	.word	.L108,.L145
	.byte	5
	.word	.L31,.L143
	.byte	6
	.byte	'pb',0,1,135,1,15
	.word	.L146,.L147
	.byte	6
	.byte	'ps',0,1,136,1,16
	.word	.L148,.L149
	.byte	6
	.byte	't',0,1,137,1,9
	.word	.L97,.L150
	.byte	6
	.byte	'sum',0,1,138,1,9
	.word	.L105,.L151
	.byte	6
	.byte	'odd',0,1,139,1,7
	.word	.L108,.L152
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('lwip_standard_chksum')
	.sect	'.debug_abbrev'
.L83:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('lwip_standard_chksum')
	.sect	'.debug_line'
.L84:
	.word	.L284-.L283
.L283:
	.half	3
	.word	.L286-.L285
.L285:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c',0,0,0,0,0
.L286:
	.byte	5,11,7,0,5,2
	.word	.L31
	.byte	3,136,1,1,5,13,9
	.half	.L169-.L31
	.byte	3,1,1,5,25,9
	.half	.L171-.L169
	.byte	3,1,1,5,28,9
	.half	.L173-.L171
	.byte	1,5,7,9
	.half	.L174-.L173
	.byte	3,3,1,5,18,7,9
	.half	.L287-.L174
	.byte	1,5,23,7,9
	.half	.L288-.L287
	.byte	3,1,1,5,21,9
	.half	.L289-.L288
	.byte	1,5,8,9
	.half	.L290-.L289
	.byte	3,1,1,5,17,9
	.half	.L291-.L290
	.byte	3,5,1,5,12,9
	.half	.L5-.L291
	.byte	3,1,1,5,9,9
	.half	.L292-.L5
	.byte	1,9
	.half	.L293-.L292
	.byte	3,1,1,5,17,9
	.half	.L4-.L293
	.byte	3,126,1,5,3,7,9
	.half	.L294-.L4
	.byte	3,6,1,5,23,7,9
	.half	.L295-.L294
	.byte	3,1,1,5,21,9
	.half	.L296-.L295
	.byte	1,5,7,9
	.half	.L6-.L296
	.byte	3,4,1,5,9,9
	.half	.L297-.L6
	.byte	3,4,1,9
	.half	.L298-.L297
	.byte	3,1,1,5,3,9
	.half	.L299-.L298
	.byte	3,3,1,5,11,7,9
	.half	.L300-.L299
	.byte	3,1,1,5,10,9
	.half	.L7-.L300
	.byte	3,3,1,5,1,9
	.half	.L301-.L7
	.byte	3,1,1,7,9
	.half	.L86-.L301
	.byte	0,1,1
.L284:
	.sdecl	'.debug_ranges',debug,cluster('lwip_standard_chksum')
	.sect	'.debug_ranges'
.L85:
	.word	-1,.L31,0,.L86-.L31,0,0
	.sdecl	'.debug_info',debug,cluster('inet_cksum_pseudo_base')
	.sect	'.debug_info'
.L87:
	.word	343
	.half	3
	.word	.L88
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L90,.L89
	.byte	2
	.word	.L48
	.byte	3
	.byte	'inet_cksum_pseudo_base',0,1,132,2,1
	.word	.L97
	.byte	1,1
	.word	.L33,.L153,.L32
	.byte	4
	.byte	'p',0,1,132,2,37
	.word	.L103,.L154
	.byte	4
	.byte	'proto',0,1,132,2,45
	.word	.L112,.L155
	.byte	4
	.byte	'proto_len',0,1,132,2,58
	.word	.L97,.L156
	.byte	4
	.byte	'acc',0,1,132,2,75
	.word	.L105,.L157
	.byte	5
	.word	.L33,.L153
	.byte	6
	.byte	'q',0,1,134,2,16
	.word	.L103,.L158
	.byte	6
	.byte	'swapped',0,1,135,2,7
	.word	.L108,.L159
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('inet_cksum_pseudo_base')
	.sect	'.debug_abbrev'
.L88:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('inet_cksum_pseudo_base')
	.sect	'.debug_line'
.L89:
	.word	.L303-.L302
.L302:
	.half	3
	.word	.L305-.L304
.L304:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c',0,0,0,0,0
.L305:
	.byte	5,1,7,0,5,2
	.word	.L33
	.byte	3,131,2,1,5,15,9
	.half	.L177-.L33
	.byte	3,3,1,5,10,9
	.half	.L179-.L177
	.byte	3,3,1,5,24,9
	.half	.L180-.L179
	.byte	1,5,25,9
	.half	.L10-.L180
	.byte	3,3,1,5,37,9
	.half	.L306-.L10
	.byte	1,5,9,9
	.half	.L181-.L306
	.byte	1,5,11,9
	.half	.L178-.L181
	.byte	3,4,1,5,10,9
	.half	.L182-.L178
	.byte	3,1,1,5,5,9
	.half	.L307-.L182
	.byte	1,5,17,7,9
	.half	.L308-.L307
	.byte	3,1,1,5,13,9
	.half	.L309-.L308
	.byte	3,1,1,5,31,9
	.half	.L11-.L309
	.byte	3,118,1,5,24,9
	.half	.L9-.L11
	.byte	1,5,3,7,9
	.half	.L310-.L9
	.byte	3,15,1,5,11,7,9
	.half	.L311-.L310
	.byte	3,1,1,5,28,9
	.half	.L12-.L311
	.byte	3,3,1,5,7,9
	.half	.L185-.L12
	.byte	1,5,28,9
	.half	.L186-.L185
	.byte	3,1,1,5,7,9
	.half	.L188-.L186
	.byte	1,5,9,9
	.half	.L312-.L188
	.byte	3,4,1,9
	.half	.L313-.L312
	.byte	3,1,1,5,23,9
	.half	.L314-.L313
	.byte	3,2,1,5,17,9
	.half	.L315-.L314
	.byte	1,5,1,9
	.half	.L316-.L315
	.byte	3,1,1,7,9
	.half	.L91-.L316
	.byte	0,1,1
.L303:
	.sdecl	'.debug_ranges',debug,cluster('inet_cksum_pseudo_base')
	.sect	'.debug_ranges'
.L90:
	.word	-1,.L33,0,.L91-.L33,0,0
	.sdecl	'.debug_info',debug,cluster('inet_cksum_pseudo_partial_base')
	.sect	'.debug_info'
.L92:
	.word	395
	.half	3
	.word	.L93
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L95,.L94
	.byte	2
	.word	.L48
	.byte	3
	.byte	'inet_cksum_pseudo_partial_base',0,1,143,3,1
	.word	.L97
	.byte	1,1
	.word	.L39,.L160,.L38
	.byte	4
	.byte	'p',0,1,143,3,45
	.word	.L103,.L161
	.byte	4
	.byte	'proto',0,1,143,3,53
	.word	.L112,.L162
	.byte	4
	.byte	'proto_len',0,1,143,3,66
	.word	.L97,.L163
	.byte	4
	.byte	'chksum_len',0,1,144,3,38
	.word	.L97,.L164
	.byte	4
	.byte	'acc',0,1,144,3,56
	.word	.L105,.L165
	.byte	5
	.word	.L39,.L160
	.byte	6
	.byte	'q',0,1,146,3,16
	.word	.L103,.L166
	.byte	6
	.byte	'swapped',0,1,147,3,7
	.word	.L108,.L167
	.byte	6
	.byte	'chklen',0,1,148,3,9
	.word	.L97,.L168
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('inet_cksum_pseudo_partial_base')
	.sect	'.debug_abbrev'
.L93:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('inet_cksum_pseudo_partial_base')
	.sect	'.debug_line'
.L94:
	.word	.L318-.L317
.L317:
	.half	3
	.word	.L320-.L319
.L319:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\inet_chksum.c',0,0,0,0,0
.L320:
	.byte	5,1,7,0,5,2
	.word	.L39
	.byte	3,142,3,1,5,15,9
	.half	.L321-.L39
	.byte	3,4,1,5,10,9
	.half	.L199-.L321
	.byte	3,4,1,5,46,9
	.half	.L200-.L199
	.byte	1,5,15,9
	.half	.L17-.L200
	.byte	3,3,1,5,16,9
	.half	.L201-.L17
	.byte	3,1,1,5,25,9
	.half	.L202-.L201
	.byte	3,3,1,5,36,9
	.half	.L322-.L202
	.byte	1,5,9,9
	.half	.L204-.L322
	.byte	1,5,37,9
	.half	.L205-.L204
	.byte	3,1,1,5,18,9
	.half	.L207-.L205
	.byte	1,5,11,9
	.half	.L208-.L207
	.byte	3,4,1,5,10,9
	.half	.L206-.L208
	.byte	3,1,1,5,5,9
	.half	.L323-.L206
	.byte	1,5,17,7,9
	.half	.L324-.L323
	.byte	3,1,1,5,13,9
	.half	.L325-.L324
	.byte	3,1,1,5,53,9
	.half	.L18-.L325
	.byte	3,113,1,5,15,9
	.half	.L16-.L18
	.byte	1,5,42,7,9
	.half	.L209-.L16
	.byte	1,5,3,7,9
	.half	.L19-.L209
	.byte	3,20,1,5,11,7,9
	.half	.L210-.L19
	.byte	3,1,1,5,28,9
	.half	.L20-.L210
	.byte	3,3,1,5,7,9
	.half	.L214-.L20
	.byte	1,5,28,9
	.half	.L216-.L214
	.byte	3,1,1,5,7,9
	.half	.L218-.L216
	.byte	1,5,9,9
	.half	.L326-.L218
	.byte	3,4,1,9
	.half	.L215-.L326
	.byte	3,1,1,5,23,9
	.half	.L327-.L215
	.byte	3,2,1,5,17,9
	.half	.L328-.L327
	.byte	1,5,1,9
	.half	.L329-.L328
	.byte	3,1,1,7,9
	.half	.L96-.L329
	.byte	0,1,1
.L318:
	.sdecl	'.debug_ranges',debug,cluster('inet_cksum_pseudo_partial_base')
	.sect	'.debug_ranges'
.L95:
	.word	-1,.L39,0,.L96-.L39,0,0
	.sdecl	'.debug_loc',debug,cluster('inet_chksum')
	.sect	'.debug_loc'
.L100:
	.word	-1,.L45,0,.L229-.L45
	.half	1
	.byte	100
	.word	0,0
.L44:
	.word	-1,.L45,0,.L98-.L45
	.half	2
	.byte	138,0
	.word	0,0
.L101:
	.word	-1,.L45,0,.L229-.L45
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('inet_chksum_pbuf')
	.sect	'.debug_loc'
.L106:
	.word	-1,.L47,.L231-.L47,.L102-.L47
	.half	1
	.byte	88
	.word	0,0
.L46:
	.word	-1,.L47,0,.L102-.L47
	.half	2
	.byte	138,0
	.word	0,0
.L104:
	.word	-1,.L47,0,.L26-.L47
	.half	1
	.byte	100
	.word	0,0
.L107:
	.word	-1,.L47,.L232-.L47,.L102-.L47
	.half	1
	.byte	111
	.word	0,0
.L109:
	.word	-1,.L47,.L230-.L47,.L102-.L47
	.half	1
	.byte	89
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('inet_chksum_pseudo')
	.sect	'.debug_loc'
.L118:
	.word	-1,.L35,.L192-.L35,.L193-.L35
	.half	1
	.byte	95
	.word	.L195-.L35,.L196-.L35
	.half	1
	.byte	95
	.word	.L196-.L35,.L197-.L35
	.half	5
	.byte	144,32,157,32,0
	.word	.L198-.L35,.L110-.L35
	.half	1
	.byte	86
	.word	0,0
.L119:
	.word	-1,.L35,.L191-.L35,.L192-.L35
	.half	5
	.byte	144,32,157,32,0
	.word	.L194-.L35,.L195-.L35
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L117:
	.word	-1,.L35,0,.L110-.L35
	.half	1
	.byte	102
	.word	0,0
.L34:
	.word	-1,.L35,0,.L110-.L35
	.half	2
	.byte	138,0
	.word	0,0
.L111:
	.word	-1,.L35,0,.L110-.L35
	.half	1
	.byte	100
	.word	0,0
.L113:
	.word	-1,.L35,0,.L110-.L35
	.half	1
	.byte	84
	.word	0,0
.L114:
	.word	-1,.L35,0,.L110-.L35
	.half	1
	.byte	85
	.word	0,0
.L116:
	.word	-1,.L35,0,.L110-.L35
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('inet_chksum_pseudo_partial')
	.sect	'.debug_loc'
.L127:
	.word	-1,.L41,.L222-.L41,.L223-.L41
	.half	1
	.byte	95
	.word	.L225-.L41,.L226-.L41
	.half	1
	.byte	95
	.word	.L226-.L41,.L227-.L41
	.half	5
	.byte	144,32,157,32,0
	.word	.L228-.L41,.L120-.L41
	.half	1
	.byte	87
	.word	0,0
.L128:
	.word	-1,.L41,.L221-.L41,.L222-.L41
	.half	5
	.byte	144,32,157,32,0
	.word	.L224-.L41,.L225-.L41
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L124:
	.word	-1,.L41,0,.L120-.L41
	.half	1
	.byte	86
	.word	0,0
.L126:
	.word	-1,.L41,0,.L120-.L41
	.half	1
	.byte	102
	.word	0,0
.L40:
	.word	-1,.L41,0,.L120-.L41
	.half	2
	.byte	138,0
	.word	0,0
.L121:
	.word	-1,.L41,0,.L120-.L41
	.half	1
	.byte	100
	.word	0,0
.L122:
	.word	-1,.L41,0,.L120-.L41
	.half	1
	.byte	84
	.word	0,0
.L123:
	.word	-1,.L41,0,.L120-.L41
	.half	1
	.byte	85
	.word	0,0
.L125:
	.word	-1,.L41,0,.L120-.L41
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('inet_cksum_pseudo_base')
	.sect	'.debug_loc'
.L157:
	.word	-1,.L33,0,.L10-.L33
	.half	1
	.byte	86
	.word	.L177-.L33,.L178-.L33
	.half	1
	.byte	95
	.word	.L181-.L33,.L182-.L33
	.half	1
	.byte	82
	.word	.L182-.L33,.L183-.L33
	.half	1
	.byte	95
	.word	.L183-.L33,.L189-.L33
	.half	5
	.byte	144,32,157,32,0
	.word	.L189-.L33,.L190-.L33
	.half	1
	.byte	95
	.word	0,0
.L32:
	.word	-1,.L33,0,.L153-.L33
	.half	2
	.byte	138,0
	.word	0,0
.L154:
	.word	-1,.L33,0,.L10-.L33
	.half	1
	.byte	100
	.word	0,0
.L155:
	.word	-1,.L33,0,.L10-.L33
	.half	1
	.byte	84
	.word	.L12-.L33,.L184-.L33
	.half	1
	.byte	88
	.word	.L184-.L33,.L185-.L33
	.half	1
	.byte	84
	.word	0,0
.L156:
	.word	-1,.L33,0,.L10-.L33
	.half	1
	.byte	85
	.word	.L186-.L33,.L187-.L33
	.half	1
	.byte	89
	.word	.L187-.L33,.L188-.L33
	.half	1
	.byte	84
	.word	0,0
.L158:
	.word	-1,.L33,.L180-.L33,.L153-.L33
	.half	1
	.byte	111
	.word	0,0
.L159:
	.word	-1,.L33,.L179-.L33,.L153-.L33
	.half	1
	.byte	90
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('inet_cksum_pseudo_partial_base')
	.sect	'.debug_loc'
.L165:
	.word	-1,.L39,0,.L17-.L39
	.half	1
	.byte	87
	.word	.L204-.L39,.L205-.L39
	.half	1
	.byte	93
	.word	.L204-.L39,.L206-.L39
	.half	1
	.byte	82
	.word	.L206-.L39,.L16-.L39
	.half	1
	.byte	93
	.word	.L210-.L39,.L211-.L39
	.half	1
	.byte	93
	.word	.L212-.L39,.L20-.L39
	.half	1
	.byte	93
	.word	.L214-.L39,.L215-.L39
	.half	1
	.byte	93
	.word	.L219-.L39,.L220-.L39
	.half	1
	.byte	95
	.word	.L220-.L39,.L160-.L39
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L168:
	.word	-1,.L39,.L202-.L39,.L16-.L39
	.half	1
	.byte	88
	.word	.L203-.L39,.L204-.L39
	.half	1
	.byte	84
	.word	0,0
.L164:
	.word	-1,.L39,0,.L17-.L39
	.half	1
	.byte	86
	.word	.L201-.L39,.L202-.L39
	.half	1
	.byte	92
	.word	.L205-.L39,.L207-.L39
	.half	1
	.byte	92
	.word	.L208-.L39,.L16-.L39
	.half	1
	.byte	92
	.word	.L209-.L39,.L19-.L39
	.half	1
	.byte	92
	.word	0,0
.L38:
	.word	-1,.L39,0,.L160-.L39
	.half	2
	.byte	138,0
	.word	0,0
.L161:
	.word	-1,.L39,0,.L17-.L39
	.half	1
	.byte	100
	.word	0,0
.L162:
	.word	-1,.L39,0,.L17-.L39
	.half	1
	.byte	84
	.word	.L20-.L39,.L213-.L39
	.half	1
	.byte	90
	.word	.L213-.L39,.L214-.L39
	.half	1
	.byte	84
	.word	0,0
.L163:
	.word	-1,.L39,0,.L17-.L39
	.half	1
	.byte	85
	.word	.L216-.L39,.L217-.L39
	.half	1
	.byte	91
	.word	.L217-.L39,.L218-.L39
	.half	1
	.byte	84
	.word	0,0
.L166:
	.word	-1,.L39,.L200-.L39,.L160-.L39
	.half	1
	.byte	111
	.word	0,0
.L167:
	.word	-1,.L39,.L199-.L39,.L160-.L39
	.half	1
	.byte	89
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('ip_chksum_pseudo')
	.sect	'.debug_loc'
.L135:
	.word	-1,.L37,0,.L129-.L37
	.half	1
	.byte	102
	.word	0,0
.L36:
	.word	-1,.L37,0,.L129-.L37
	.half	2
	.byte	138,0
	.word	0,0
.L130:
	.word	-1,.L37,0,.L129-.L37
	.half	1
	.byte	100
	.word	0,0
.L131:
	.word	-1,.L37,0,.L129-.L37
	.half	1
	.byte	84
	.word	0,0
.L132:
	.word	-1,.L37,0,.L129-.L37
	.half	1
	.byte	85
	.word	0,0
.L134:
	.word	-1,.L37,0,.L129-.L37
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('ip_chksum_pseudo_partial')
	.sect	'.debug_loc'
.L140:
	.word	-1,.L43,0,.L136-.L43
	.half	1
	.byte	86
	.word	0,0
.L142:
	.word	-1,.L43,0,.L136-.L43
	.half	1
	.byte	102
	.word	0,0
.L42:
	.word	-1,.L43,0,.L136-.L43
	.half	2
	.byte	138,0
	.word	0,0
.L137:
	.word	-1,.L43,0,.L136-.L43
	.half	1
	.byte	100
	.word	0,0
.L138:
	.word	-1,.L43,0,.L136-.L43
	.half	1
	.byte	84
	.word	0,0
.L139:
	.word	-1,.L43,0,.L136-.L43
	.half	1
	.byte	85
	.word	0,0
.L141:
	.word	-1,.L43,0,.L136-.L43
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('lwip_standard_chksum')
	.sect	'.debug_loc'
.L144:
	.word	-1,.L31,0,.L143-.L31
	.half	1
	.byte	100
	.word	.L173-.L31,.L174-.L31
	.half	1
	.byte	95
	.word	0,0
.L145:
	.word	-1,.L31,0,.L143-.L31
	.half	1
	.byte	84
	.word	0,0
.L30:
	.word	-1,.L31,0,.L143-.L31
	.half	2
	.byte	138,0
	.word	0,0
.L152:
	.word	-1,.L31,.L173-.L31,.L175-.L31
	.half	1
	.byte	95
	.word	0,0
.L147:
	.word	-1,.L31,0,.L143-.L31
	.half	1
	.byte	100
	.word	0,0
.L149:
	.word	-1,.L31,0,.L143-.L31
	.half	1
	.byte	100
	.word	0,0
.L151:
	.word	-1,.L31,.L171-.L31,.L172-.L31
	.half	5
	.byte	144,32,157,32,0
	.word	.L172-.L31,.L176-.L31
	.half	1
	.byte	81
	.word	.L176-.L31,.L143-.L31
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L150:
	.word	-1,.L31,.L169-.L31,.L170-.L31
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L330:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('lwip_standard_chksum')
	.sect	'.debug_frame'
	.word	24
	.word	.L330,.L31,.L143-.L31
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('inet_cksum_pseudo_base')
	.sect	'.debug_frame'
	.word	12
	.word	.L330,.L33,.L153-.L33
	.sdecl	'.debug_frame',debug,cluster('inet_chksum_pseudo')
	.sect	'.debug_frame'
	.word	12
	.word	.L330,.L35,.L110-.L35
	.sdecl	'.debug_frame',debug,cluster('ip_chksum_pseudo')
	.sect	'.debug_frame'
	.word	12
	.word	.L330,.L37,.L129-.L37
	.sdecl	'.debug_frame',debug,cluster('inet_cksum_pseudo_partial_base')
	.sect	'.debug_frame'
	.word	12
	.word	.L330,.L39,.L160-.L39
	.sdecl	'.debug_frame',debug,cluster('inet_chksum_pseudo_partial')
	.sect	'.debug_frame'
	.word	12
	.word	.L330,.L41,.L120-.L41
	.sdecl	'.debug_frame',debug,cluster('ip_chksum_pseudo_partial')
	.sect	'.debug_frame'
	.word	12
	.word	.L330,.L43,.L136-.L43
	.sdecl	'.debug_frame',debug,cluster('inet_chksum')
	.sect	'.debug_frame'
	.word	12
	.word	.L330,.L45,.L98-.L45
	.sdecl	'.debug_frame',debug,cluster('inet_chksum_pbuf')
	.sect	'.debug_frame'
	.word	12
	.word	.L330,.L47,.L102-.L47

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   589  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   590  /* These are some implementations for LWIP_CHKSUM_COPY, which copies data
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   591   * like MEMCPY but generates a checksum at the same time. Since this is a
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   592   * performance-sensitive function, you might want to create your own version
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   593   * in assembly targeted at your hardware by defining it in lwipopts.h:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   594   *   #define LWIP_CHKSUM_COPY(dst, src, len) your_chksum_copy(dst, src, len)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   595   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   596  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   597  #if (LWIP_CHKSUM_COPY_ALGORITHM == 1) /* Version #1 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   598  /** Safe but slow: first call MEMCPY, then call LWIP_CHKSUM.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   599   * For architectures with big caches, data might still be in cache when
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   600   * generating the checksum after copying.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   601   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   602  u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   603  lwip_chksum_copy(void *dst, const void *src, u16_t len)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   604  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   605    MEMCPY(dst, src, len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   606    return LWIP_CHKSUM(dst, len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   607  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\inet_chksum.c	   608  #endif /* (LWIP_CHKSUM_COPY_ALGORITHM == 1) */

	; Module end
