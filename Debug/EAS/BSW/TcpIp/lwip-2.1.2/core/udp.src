	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 09003395"
	.compiler_invocation	"ctc -f cc31152a --dep-file=EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\.udp.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --fp-model=+float -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Lib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\App_Func -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\demo -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Adc_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Gtm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\AscLin_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Can_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\EthV2_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Stm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Main -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\APP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\BswM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanSm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Com -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\ComM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Common -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Crc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Det -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\DoIP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EcuM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Eth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthSM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTrcv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FiM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FlsTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Nm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\PduR -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\RamTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\StbM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\arpa -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\net -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\sys -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\stdc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\apps -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\priv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\UdpNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Cal -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Daq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pag -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pgm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Std -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\XcpOnEth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Library\\Vfx_ComE2E -g2 --make-target=EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O1 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.src ..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c"
	.compiler_name		"ctc"
	;source	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c'

	
$TC162
	
	.sdecl	'.text.udp.udp_init',code,cluster('udp_init')
	.sect	'.text.udp.udp_init'
	.align	2
	
	.global	udp_init

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	     1  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	     2   * @file
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	     3   * User Datagram Protocol module\n
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	     4   * The code for the User Datagram Protocol UDP & UDPLite (RFC 3828).\n
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	     5   * See also @ref udp_raw
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	     6   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	     7   * @defgroup udp_raw UDP
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	     8   * @ingroup callbackstyle_api
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	     9   * User Datagram Protocol module\n
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    10   * @see @ref api
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    11   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    12  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    13  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    14   * Copyright (c) 2001-2004 Swedish Institute of Computer Science.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    15   * All rights reserved.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    16   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    17   * Redistribution and use in source and binary forms, with or without modification,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    18   * are permitted provided that the following conditions are met:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    19   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    20   * 1. Redistributions of source code must retain the above copyright notice,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    21   *    this list of conditions and the following disclaimer.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    22   * 2. Redistributions in binary form must reproduce the above copyright notice,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    23   *    this list of conditions and the following disclaimer in the documentation
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    24   *    and/or other materials provided with the distribution.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    25   * 3. The name of the author may not be used to endorse or promote products
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    26   *    derived from this software without specific prior written permission.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    27   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    28   * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    29   * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    30   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    31   * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    32   * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    33   * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    34   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    35   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    36   * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    37   * OF SUCH DAMAGE.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    38   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    39   * This file is part of the lwIP TCP/IP stack.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    40   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    41   * Author: Adam Dunkels <adam@sics.se>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    42   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    43   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    44  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    45  /* @todo Check the use of '(struct udp_pcb).chksum_len_rx'!
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    46   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    47  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    48  #include "lwip/opt.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    49  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    50  #if LWIP_UDP /* don't build if not configured for use in lwipopts.h */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    51  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    52  #include "lwip/udp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    53  #include "lwip/def.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    54  #include "lwip/memp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    55  #include "lwip/inet_chksum.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    56  #include "lwip/ip_addr.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    57  #include "lwip/ip6.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    58  #include "lwip/ip6_addr.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    59  #include "lwip/netif.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    60  #include "lwip/icmp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    61  #include "lwip/icmp6.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    62  #include "lwip/stats.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    63  #include "lwip/snmp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    64  #include "lwip/dhcp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    65  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    66  #include <string.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    67  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    68  #ifndef UDP_LOCAL_PORT_RANGE_START
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    69  /* From http://www.iana.org/assignments/port-numbers:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    70     "The Dynamic and/or Private Ports are those from 49152 through 65535" */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    71  #define UDP_LOCAL_PORT_RANGE_START  0xc000
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    72  #define UDP_LOCAL_PORT_RANGE_END    0xffff
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    73  #define UDP_ENSURE_LOCAL_PORT_RANGE(port) ((u16_t)(((port) & (u16_t)~UDP_LOCAL_PORT_RANGE_START) + UDP_LOCAL_PORT_RANGE_START))
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    74  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    75  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    76  /* last local UDP port */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    77  static u16_t udp_port = UDP_LOCAL_PORT_RANGE_START;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    78  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    79  /* The list of UDP PCBs */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    80  /* exported in udp.h (was static) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    81  struct udp_pcb *udp_pcbs;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    82  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    83  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    84   * Initialize this module.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    85   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    86  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    87  udp_init(void)
; Function udp_init
.L162:
udp_init:	.type	func

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    88  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    89  #ifdef LWIP_RAND
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    90    udp_port = UDP_ENSURE_LOCAL_PORT_RANGE(LWIP_RAND());
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    91  #endif /* LWIP_RAND */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    92  }
	ret
.L371:
	
__udp_init_function_end:
	.size	udp_init,__udp_init_function_end-udp_init
.L268:
	; End of function
	
	.sdecl	'.text.udp.udp_new_port',code,cluster('udp_new_port')
	.sect	'.text.udp.udp_new_port'
	.align	2
	

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    93  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    94  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    95   * Allocate a new local UDP port.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    96   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    97   * @return a new (free) local UDP port number
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    98   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	    99  static u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   100  udp_new_port(void)
; Function udp_new_port
.L164:
udp_new_port:	.type	func

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   101  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   102    u16_t n = 0;
	mov	d0,#0
.L383:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   103    struct udp_pcb *pcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   104  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   105  again:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   106    if (udp_port++ == UDP_LOCAL_PORT_RANGE_END) {
	movh.a	a2,#@his(udp_port)
.L741:
	mov.u	d1,#65535
.L742:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   107      udp_port = UDP_LOCAL_PORT_RANGE_START;
	mov.u	d2,#49152
.L743:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   108    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   109    /* Check all PCBs. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   110    for (pcb = udp_pcbs; pcb != NULL; pcb = pcb->next) {
	movh.a	a4,#@his(udp_pcbs)
.L744:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   111      if (pcb->local_port == udp_port) {
	movh.a	a5,#@his(udp_port)
.L745:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   112        if (++n > (UDP_LOCAL_PORT_RANGE_END - UDP_LOCAL_PORT_RANGE_START)) {
	mov	d3,#16383
.L2:
	ld.hu	d15,[a2]@los(udp_port)
.L746:
	add	d4,d15,#1
	st.h	[a2]@los(udp_port),d4
.L747:
	jne	d15,d1,.L3
.L748:
	st.h	[a2]@los(udp_port),d2
.L3:
	ld.a	a15,[a4]@los(udp_pcbs)
.L384:
	j	.L4
.L5:
	ld.hu	d4,[a15]18
.L749:
	ld.hu	d15,[a5]@los(udp_port)
.L750:
	jne	d15,d4,.L6
.L751:
	add	d0,#1
.L752:
	jge.u	d3,d0,.L2
.L753:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   113          return 0;
	mov	d2,#0
.L754:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   114        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   115        goto again;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   116      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   117    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   118    return udp_port;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   119  }
	ret
.L6:
	ld.a	a15,[a15]12
.L4:
	jnz.a	a15,.L5
.L755:
	mov.aa	a15,a2
.L385:
	ld.hu	d2,[a15]@los(udp_port)
.L756:
	ret
.L376:
	
__udp_new_port_function_end:
	.size	udp_new_port,__udp_new_port_function_end-udp_new_port
.L278:
	; End of function
	
	.sdecl	'.text.udp.udp_input_local_match',code,cluster('udp_input_local_match')
	.sect	'.text.udp.udp_input_local_match'
	.align	2
	

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   120  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   121  /** Common code to see if the current input packet matches the pcb
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   122   * (current input packet is accessed via ip(4/6)_current_* macros)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   123   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   124   * @param pcb pcb to check
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   125   * @param inp network interface on which the datagram was received (only used for IPv4)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   126   * @param broadcast 1 if his is an IPv4 broadcast (global or subnet-only), 0 otherwise (only used for IPv4)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   127   * @return 1 on match, 0 otherwise
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   128   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   129  static u8_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   130  udp_input_local_match(struct udp_pcb *pcb, struct netif *inp, u8_t broadcast)
; Function udp_input_local_match
.L166:
udp_input_local_match:	.type	func

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   131  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   132    LWIP_UNUSED_ARG(inp);       /* in IPv6 only case */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   133    LWIP_UNUSED_ARG(broadcast); /* in IPv6 only case */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   134  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   135    LWIP_ASSERT("udp_input_local_match: invalid pcb", pcb != NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   136    LWIP_ASSERT("udp_input_local_match: invalid netif", inp != NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   137  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   138    /* check if PCB is bound to specific netif */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   139    if ((pcb->netif_idx != NETIF_NO_INDEX) &&
	ld.bu	d15,[a4]8
.L761:
	jeq	d15,#0,.L9
.L762:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   140        (pcb->netif_idx != (ip_data.current_input_netif)->num/*netif_get_index(ip_data.current_input_netif)*/)) {/*yanhengChange*/
	movh.a	a15,#@his(ip_data+4)
.L763:
	ld.a	a15,[a15]@los(ip_data+4)
.L764:
	ld.bu	d0,[a15]48
.L765:
	jne	d15,d0,.L10
.L9:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   141      return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   142    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   143  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   144    /* Dual-stack: PCBs listening to any IP type also listen to any IP address */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   145    if (IP_IS_ANY_TYPE_VAL(pcb->local_ip)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   146  #if LWIP_IPV4 && IP_SOF_BROADCAST_RECV
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   147      if ((broadcast != 0) && !ip_get_option(pcb, SOF_BROADCAST)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   148        return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   149      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   150  #endif /* LWIP_IPV4 && IP_SOF_BROADCAST_RECV */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   151      return 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   152    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   153  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   154    /* Only need to check PCB if incoming IP version matches PCB IP version */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   155    if (IP_ADDR_PCB_VERSION_MATCH_EXACT(pcb, ip_current_dest_addr())) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   156  #if LWIP_IPV4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   157      /* Special case: IPv4 broadcast: all or broadcasts in my subnet
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   158       * Note: broadcast variable can only be 1 if it is an IPv4 broadcast */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   159      if (broadcast != 0) {
	jeq	d4,#0,.L11
.L766:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   160  #if IP_SOF_BROADCAST_RECV
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   161        if (ip_get_option(pcb, SOF_BROADCAST))
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   162  #endif /* IP_SOF_BROADCAST_RECV */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   163        {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   164          if (ip4_addr_isany(ip_2_ip4(&pcb->local_ip)) ||
	jz.a	a4,.L12
.L767:
	ld.w	d0,[a4]
	jeq	d0,#0,.L13
.L768:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   165              ((ip4_current_dest_addr()->addr == IPADDR_BROADCAST)) ||
	movh.a	a15,#@his(ip_data+18)
.L769:
	ld.w	d1,[a15]@los(ip_data+18)
.L770:
	jeq	d1,#-1,.L14
.L771:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   166              ip4_addr_netcmp(ip_2_ip4(&pcb->local_ip), ip4_current_dest_addr(), netif_ip4_netmask(inp))) {
	ld.w	d15,[a5]8
	and	d0,d15
	and	d1,d15
	jne	d0,d1,.L15
.L772:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   167            return 1;
	j	.L16
.L11:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   168          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   169        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   170      } else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   171  #endif /* LWIP_IPV4 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   172        /* Handle IPv4 and IPv6: all or exact match */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   173        if (ip_addr_isany(&pcb->local_ip) || ip_addr_cmp(&pcb->local_ip, ip_current_dest_addr())) {
	jz.a	a4,.L17
.L773:
	ld.w	d15,[a4]
	jeq	d15,#0,.L18
.L774:
	movh.a	a15,#@his(ip_data+18)
	ld.w	d0,[a15]@los(ip_data+18)
	jne	d15,d0,.L19
.L18:
.L17:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   174          return 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   175        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   176    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   177  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   178    return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   179  }
.L16:
.L14:
.L13:
.L12:
	mov	d2,#1
.L775:
	ret
.L19:
.L15:
.L10:
	mov	d2,#0
.L776:
	ret
.L379:
	
__udp_input_local_match_function_end:
	.size	udp_input_local_match,__udp_input_local_match_function_end-udp_input_local_match
.L283:
	; End of function
	
	.sdecl	'.text.udp.udp_input',code,cluster('udp_input')
	.sect	'.text.udp.udp_input'
	.align	2
	
	.global	udp_input

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   180  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   181  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   182   * Process an incoming UDP datagram.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   183   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   184   * Given an incoming UDP datagram (as a chain of pbufs) this function
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   185   * finds a corresponding UDP PCB and hands over the pbuf to the pcbs
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   186   * recv function. If no pcb is found or the datagram is incorrect, the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   187   * pbuf is freed.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   188   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   189   * @param p pbuf to be demultiplexed to a UDP PCB (p->payload pointing to the UDP header)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   190   * @param inp network interface on which the datagram was received.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   191   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   192   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   193  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   194  udp_input(struct pbuf *p, struct netif *inp)
; Function udp_input
.L168:
udp_input:	.type	func
	sub.a	a10,#16
.L386:
	st.a	[a10]4,a4
.L389:
	mov.aa	a12,a5
.L390:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   195  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   196    struct udp_hdr *udphdr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   197    struct udp_pcb *pcb, *prev;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   198    struct udp_pcb *uncon_pcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   199    u16_t src, dest;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   200    u8_t broadcast;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   201    u8_t for_us = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   202  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   203    LWIP_UNUSED_ARG(inp);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   204  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   205    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   206  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   207    LWIP_ASSERT("udp_input: invalid pbuf", p != NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   208    LWIP_ASSERT("udp_input: invalid netif", inp != NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   209  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   210    PERF_START;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   211  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   212    UDP_STATS_INC(udp.recv);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   213  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   214    /* Check minimum length (UDP header) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   215    if (p->len < UDP_HLEN) {
	mov.aa	a15,a4
.L391:
	ld.hu	d15,[a15]10
.L681:
	jlt.u	d15,#8,.L22
.L682:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   216      /* drop short packets */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   217      LWIP_DEBUGF(UDP_DEBUG,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   218                  ("udp_input: short UDP datagram (%"U16_F" bytes) discarded\n", p->tot_len));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   219      UDP_STATS_INC(udp.lenerr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   220      UDP_STATS_INC(udp.drop);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   221      MIB2_STATS_INC(mib2.udpinerrors);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   222      pbuf_free(p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   223      goto end;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   224    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   225  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   226    udphdr = (struct udp_hdr *)p->payload;
	ld.a	a15,[a15]4
.L392:
	st.a	[a10]8,a15
.L394:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   227  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   228    /* is broadcast packet ? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   229    broadcast = ip_addr_isbroadcast(ip_current_dest_addr(), ip_current_netif());
	movh.a	a15,#@his(ip_data+18)
.L393:
	ld.w	d4,[a15]@los(ip_data+18)
	movh.a	a15,#@his(ip_data)
	ld.a	a4,[a15]@los(ip_data)
.L388:
	call	ip4_addr_isbroadcast_u32
.L387:
	mov	d8,d2
.L396:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   230  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   231    LWIP_DEBUGF(UDP_DEBUG, ("udp_input: received datagram of length %"U16_F"\n", p->tot_len));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   232  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   233    /* convert src and dest ports to host byte order */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   234    src = lwip_ntohs(udphdr->src);
	ld.a	a15,[a10]8
.L397:
	ld.hu	d4,[a15]0
	call	lwip_htons
.L395:
	mov	d9,d2
.L400:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   235    dest = lwip_ntohs(udphdr->dest);
	ld.hu	d4,[a15]2
	call	lwip_htons
.L399:
	mov	d10,d2
.L401:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   236  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   237    udp_debug_print(udphdr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   238  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   239    /* print the UDP source and destination */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   240    LWIP_DEBUGF(UDP_DEBUG, ("udp ("));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   241    ip_addr_debug_print_val(UDP_DEBUG, *ip_current_dest_addr());
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   242    LWIP_DEBUGF(UDP_DEBUG, (", %"U16_F") <-- (", lwip_ntohs(udphdr->dest)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   243    ip_addr_debug_print_val(UDP_DEBUG, *ip_current_src_addr());
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   244    LWIP_DEBUGF(UDP_DEBUG, (", %"U16_F")\n", lwip_ntohs(udphdr->src)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   245  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   246    pcb = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   247    prev = NULL;
	mov.a	a13,#0
.L402:
	st.a	[a10],a13
.L403:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   248    uncon_pcb = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   249    /* Iterate through the UDP pcb list for a matching pcb.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   250     * 'Perfect match' pcbs (connected to the remote port & ip address) are
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   251     * preferred. If no perfect match is found, the first unconnected pcb that
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   252     * matches the local port and ip address gets the datagram. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   253    for (pcb = udp_pcbs; pcb != NULL; pcb = pcb->next) {
	movh.a	a15,#@his(udp_pcbs)
.L398:
	ld.a	a15,[a15]@los(udp_pcbs)
.L404:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   254      if(pcb->netif_idx == ip_data.current_netif->num)/*yanheng add*/
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   255      {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   256        /* print the PCB local and remote address */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   257        LWIP_DEBUGF(UDP_DEBUG, ("pcb ("));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   258        ip_addr_debug_print_val(UDP_DEBUG, pcb->local_ip);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   259        LWIP_DEBUGF(UDP_DEBUG, (", %"U16_F") <-- (", pcb->local_port));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   260        ip_addr_debug_print_val(UDP_DEBUG, pcb->remote_ip);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   261        LWIP_DEBUGF(UDP_DEBUG, (", %"U16_F")\n", pcb->remote_port));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   262  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   263        /* compare PCB local addr+port to UDP destination addr+port */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   264        if ((pcb->local_port == dest) &&
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   265            (udp_input_local_match(pcb, inp, broadcast) != 0)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   266          if ((pcb->flags & UDP_FLAGS_CONNECTED) == 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   267            if (uncon_pcb == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   268              /* the first unconnected matching PCB */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   269              uncon_pcb = pcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   270    #if LWIP_IPV4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   271            } else if (broadcast && ip4_current_dest_addr()->addr == IPADDR_BROADCAST) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   272              /* global broadcast address (only valid for IPv4; match was checked before) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   273              if (!IP_IS_V4_VAL(uncon_pcb->local_ip) || !ip4_addr_cmp(ip_2_ip4(&uncon_pcb->local_ip), netif_ip4_addr(inp))) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   274                /* uncon_pcb does not match the input netif, check this pcb */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   275                if (IP_IS_V4_VAL(pcb->local_ip) && ip4_addr_cmp(ip_2_ip4(&pcb->local_ip), netif_ip4_addr(inp))) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   276                  /* better match */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   277                  uncon_pcb = pcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   278                }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   279              }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   280    #endif /* LWIP_IPV4 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   281            }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   282    #if SO_REUSE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   283            else if (!ip_addr_isany(&pcb->local_ip)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   284              /* prefer specific IPs over catch-all */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   285              uncon_pcb = pcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   286            }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   287    #endif /* SO_REUSE */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   288          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   289  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   290          /* compare PCB remote addr+port to UDP source addr+port */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   291          if ((pcb->remote_port == src) &&
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   292              (ip_addr_isany_val(pcb->remote_ip) ||
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   293              ip_addr_cmp(&pcb->remote_ip, ip_current_src_addr()))) {
	movh.a	a14,#@his(ip_data+14)
.L683:
	j	.L23
.L24:
	ld.bu	d15,[a15]8
.L684:
	movh.a	a2,#@his(ip_data)
.L685:
	ld.a	a2,[a2]@los(ip_data)
.L686:
	ld.bu	d0,[a2]48
.L687:
	jne	d15,d0,.L25
.L688:
	ld.hu	d0,[a15]18
.L689:
	jne	d0,d10,.L26
.L690:
	mov.aa	a4,a15
.L406:
	mov.aa	a5,a12
.L408:
	mov	d4,d8
.L409:
	call	udp_input_local_match
.L407:
	jeq	d2,#0,.L27
.L691:
	ld.bu	d0,[a15]16
.L692:
	jnz.t	d0:2,.L28
.L410:
	jz.a	a13,.L29
.L411:
	jeq	d8,#0,.L30
.L693:
	movh.a	a2,#@his(ip_data+18)
.L694:
	ld.w	d15,[a2]@los(ip_data+18)
.L695:
	jne	d15,#-1,.L31
.L412:
	ld.w	d0,[a13]
.L413:
	ld.w	d15,[a12]4
	jeq	d15,d0,.L32
.L696:
	ld.w	d0,[a15]
	jne	d15,d0,.L33
.L697:
	j	.L34
.L31:
.L30:
	jz.a	a15,.L35
.L698:
	ld.w	d15,[a15]
	jeq	d15,#0,.L36
.L34:
.L29:
	mov.aa	a13,a15
.L36:
.L35:
.L33:
.L32:
.L28:
	ld.hu	d15,[a15]20
.L699:
	jne	d15,d9,.L37
.L700:
	ld.w	d15,[a15]4
	jeq	d15,#0,.L38
.L701:
	ld.w	d0,[a14]@los(ip_data+14)
	jne	d15,d0,.L39
.L38:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   294            /* the first fully matching PCB */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   295            if (prev != NULL) {
	ld.a	a2,[a10]
.L414:
	jz.a	a2,.L40
.L702:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   296              /* move the pcb to the front of udp_pcbs so that is
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   297                found faster next time */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   298              prev->next = pcb->next;
	ld.a	a2,[a15]12
.L415:
	ld.a	a4,[a10]
.L416:
	st.a	[a4]12,a2
.L703:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   299              pcb->next = udp_pcbs;
	movh.a	a2,#@his(udp_pcbs)
	ld.a	a4,[a2]@los(udp_pcbs)
.L417:
	st.a	[a15]12,a4
.L704:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   300              udp_pcbs = pcb;
	st.a	[a2]@los(udp_pcbs),a15
.L705:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   301            } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   302              UDP_STATS_INC(udp.cachehit);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   303            }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   304            break;
	j	.L41
.L39:
.L37:
.L27:
.L26:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   305          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   306        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   307  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   308        prev = pcb;
	st.a	[a10],a15
.L25:
	ld.a	a15,[a15]12
.L23:
	jnz.a	a15,.L24

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   309      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   310    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   311    /* no fully matching pcb found? then look for an unconnected pcb */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   312    if (pcb == NULL) {
.L41:
.L40:
	jnz.a	a15,.L42
.L418:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   313      pcb = uncon_pcb;
	mov.aa	a15,a13
.L42:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   314    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   315  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   316    /* Check checksum if this is a match or if it was directed at us. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   317    if (pcb != NULL) {
	jz.a	a15,.L43
.L706:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   318      for_us = 1;
	mov	d15,#1
.L419:
	j	.L44
.L43:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   319    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   320  #if LWIP_IPV6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   321      if (ip_current_is_v6()) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   322        for_us = netif_get_ip6_addr_match(inp, ip6_current_dest_addr()) >= 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   323      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   324  #endif /* LWIP_IPV6 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   325  #if LWIP_IPV4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   326      if (!ip_current_is_v6()) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   327        for_us = ip4_addr_cmp(netif_ip4_addr(inp), ip4_current_dest_addr());
	ld.w	d15,[a12]4
	movh.a	a2,#@his(ip_data+18)
	ld.w	d0,[a2]@los(ip_data+18)
	eq	d15,d15,d0
.L44:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   328      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   329  #endif /* LWIP_IPV4 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   330    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   331  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   332    if (for_us) {
	jeq	d15,#0,.L45
.L707:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   333      LWIP_DEBUGF(UDP_DEBUG | LWIP_DBG_TRACE, ("udp_input: calculating checksum\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   334  #if CHECKSUM_CHECK_UDP
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   335      IF__NETIF_CHECKSUM_ENABLED(inp, NETIF_CHECKSUM_CHECK_UDP) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   336  #if LWIP_UDPLITE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   337        if (ip_current_header_proto() == IP_PROTO_UDPLITE) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   338          /* Do the UDP Lite checksum */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   339          u16_t chklen = lwip_ntohs(udphdr->len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   340          if (chklen < sizeof(struct udp_hdr)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   341            if (chklen == 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   342              /* For UDP-Lite, checksum length of 0 means checksum
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   343                 over the complete packet (See RFC 3828 chap. 3.1) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   344              chklen = p->tot_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   345            } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   346              /* At least the UDP-Lite header must be covered by the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   347                 checksum! (Again, see RFC 3828 chap. 3.1) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   348              goto chkerr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   349            }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   350          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   351          if (ip_chksum_pseudo_partial(p, IP_PROTO_UDPLITE,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   352                                       p->tot_len, chklen,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   353                                       ip_current_src_addr(), ip_current_dest_addr()) != 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   354            goto chkerr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   355          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   356        } else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   357  #endif /* LWIP_UDPLITE */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   358        {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   359          if (udphdr->chksum != 0) {
	ld.a	a2,[a10]8
.L421:
	ld.hu	d15,[a2]6
.L420:
	jeq	d15,#0,.L46
.L708:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   360            if (ip_chksum_pseudo(p, IP_PROTO_UDP, p->tot_len,
	mov	d4,#17
.L709:
	ld.a	a4,[a10]4
.L423:
	ld.hu	d5,[a4]8
.L710:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   361                                 ip_current_src_addr(),
	movh.a	a2,#@his(ip_data+14)
.L422:
	lea	a5,[a2]@los(ip_data+14)
.L711:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   362                                 ip_current_dest_addr()) != 0) {
	movh.a	a2,#@his(ip_data+18)
	lea	a6,[a2]@los(ip_data+18)
	call	ip_chksum_pseudo
.L424:
	jne	d2,#0,.L47
.L46:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   363              goto chkerr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   364            }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   365          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   366        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   367      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   368  #endif /* CHECKSUM_CHECK_UDP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   369      if (pbuf_remove_header(p, UDP_HLEN)) {
	mov	d4,#8
	ld.a	a4,[a10]4
.L425:
	call	pbuf_remove_header
.L426:
	jne	d2,#0,.L48
.L712:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   370        /* Can we cope with this failing? Just assert for now */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   371        LWIP_ASSERT("pbuf_remove_header failed\n", 0);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   372        UDP_STATS_INC(udp.drop);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   373        MIB2_STATS_INC(mib2.udpinerrors);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   374        pbuf_free(p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   375        goto end;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   376      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   377  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   378      if (pcb != NULL) {
	jz.a	a15,.L49
.L713:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   379        MIB2_STATS_INC(mib2.udpindatagrams);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   380  #if SO_REUSE && SO_REUSE_RXTOALL
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   381        if (ip_get_option(pcb, SOF_REUSEADDR) &&
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   382            (broadcast || ip_addr_ismulticast(ip_current_dest_addr()))) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   383          /* pass broadcast- or multicast packets to all multicast pcbs
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   384             if SOF_REUSEADDR is set on the first match */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   385          struct udp_pcb *mpcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   386          for (mpcb = udp_pcbs; mpcb != NULL; mpcb = mpcb->next) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   387            if (mpcb != pcb) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   388              /* compare PCB local addr+port to UDP destination addr+port */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   389              if ((mpcb->local_port == dest) &&
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   390                  (udp_input_local_match(mpcb, inp, broadcast) != 0)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   391                /* pass a copy of the packet to all local matches */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   392                if (mpcb->recv != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   393                  struct pbuf *q;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   394                  q = pbuf_clone(PBUF_RAW, PBUF_POOL, p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   395                  if (q != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   396                    mpcb->recv(mpcb->recv_arg, mpcb, q, ip_current_src_addr(), src);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   397                  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   398                }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   399              }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   400            }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   401          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   402        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   403  #endif /* SO_REUSE && SO_REUSE_RXTOALL */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   404        /* callback */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   405        if (pcb->recv != NULL) {
	ld.w	d15,[a15]24
.L714:
	jeq	d15,#0,.L50
.L715:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   406          /* now the recv function is responsible for freeing p */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   407          pcb->recv(pcb->recv_arg, pcb, p, ip_current_src_addr(), src);
	ld.a	a2,[a15]24
.L716:
	ld.a	a4,[a15]28
.L717:
	movh.a	a5,#@his(ip_data+14)
	lea	a7,[a5]@los(ip_data+14)
.L718:
	mov.aa	a5,a15
.L427:
	ld.a	a6,[a10]4
.L428:
	mov	d4,d9
.L429:
	ji	a2
.L49:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   408        } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   409          /* no recv function registered? then we have to free the pbuf! */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   410          pbuf_free(p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   411          goto end;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   412        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   413      } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   414        LWIP_DEBUGF(UDP_DEBUG | LWIP_DBG_TRACE, ("udp_input: not for us.\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   415  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   416  #if LWIP_ICMP || LWIP_ICMP6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   417        /* No match was found, send ICMP destination port unreachable unless
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   418           destination address was broadcast/multicast. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   419        if (!broadcast && !ip_addr_ismulticast(ip_current_dest_addr())) {
	jne	d8,#0,.L52
.L719:
	movh.a	a15,#@his(ip_data+18)
.L405:
	ld.w	d15,[a15]@los(ip_data+18)
	and	d15,#240
	mov	d0,#224
	jeq	d15,d0,.L53
.L720:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   420          /* move payload pointer back to ip header */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   421          pbuf_header_force(p, (s16_t)(ip_current_header_tot_len() + UDP_HLEN));
	movh.a	a15,#@his(ip_data+12)
	ld.hu	d15,[a15]@los(ip_data+12)
.L721:
	add	d15,d15,#8
.L722:
	extr	d4,d15,#0,#16
	ld.a	a4,[a10]4
.L430:
	call	pbuf_header_force
.L431:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   422          icmp_port_unreach(ip_current_is_v6(), p);
	mov	d4,#3
	ld.a	a4,[a10]4
.L432:
	call	icmp_dest_unreach
.L53:
.L52:
.L50:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   423        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   424  #endif /* LWIP_ICMP || LWIP_ICMP6 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   425        UDP_STATS_INC(udp.proterr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   426        UDP_STATS_INC(udp.drop);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   427        MIB2_STATS_INC(mib2.udpnoports);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   428        pbuf_free(p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   429      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   430    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   431      pbuf_free(p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   432    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   433  end:
.L48:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   434    PERF_STOP("udp_input");
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   435    return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   436  #if CHECKSUM_CHECK_UDP
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   437  chkerr:
.L47:
.L45:
.L22:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   438    LWIP_DEBUGF(UDP_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   439                ("udp_input: UDP (or UDP Lite) datagram discarded due to failing checksum\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   440    UDP_STATS_INC(udp.chkerr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   441    UDP_STATS_INC(udp.drop);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   442    MIB2_STATS_INC(mib2.udpinerrors);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   443    pbuf_free(p);
	ld.a	a4,[a10]4
.L433:
	j	pbuf_free
.L360:
	
__udp_input_function_end:
	.size	udp_input,__udp_input_function_end-udp_input
.L263:
	; End of function
	
	.sdecl	'.text.udp.udp_send',code,cluster('udp_send')
	.sect	'.text.udp.udp_send'
	.align	2
	
	.global	udp_send

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   444    PERF_STOP("udp_input");
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   445  #endif /* CHECKSUM_CHECK_UDP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   446  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   447  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   448  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   449   * @ingroup udp_raw
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   450   * Sends the pbuf p using UDP. The pbuf is not deallocated.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   451   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   452   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   453   * @param pcb UDP PCB used to send the data.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   454   * @param p chain of pbuf's to be sent.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   455   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   456   * The datagram will be sent to the current remote_ip & remote_port
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   457   * stored in pcb. If the pcb is not bound to a port, it will
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   458   * automatically be bound to a random port.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   459   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   460   * @return lwIP error code.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   461   * - ERR_OK. Successful. No error occurred.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   462   * - ERR_MEM. Out of memory.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   463   * - ERR_RTE. Could not find route to destination address.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   464   * - ERR_VAL. No PCB or PCB is dual-stack
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   465   * - More errors could be returned by lower protocol layers.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   466   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   467   * @see udp_disconnect() udp_sendto()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   468   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   469  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   470  udp_send(struct udp_pcb *pcb, struct pbuf *p)
; Function udp_send
.L170:
udp_send:	.type	func

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   471  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   472    LWIP_ERROR("udp_send: invalid pcb", pcb != NULL, return ERR_ARG);
	jz.a	a4,.L54
.L674:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   473    LWIP_ERROR("udp_send: invalid pbuf", p != NULL, return ERR_ARG);
	jnz.a	a5,.L55

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   474  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   475    if (IP_IS_ANY_TYPE_VAL(pcb->remote_ip)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   476      return ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   477    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   478  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   479    /* send to the packet using remote ip and port stored in the pcb */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   480    return udp_sendto(pcb, p, &pcb->remote_ip, pcb->remote_port);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   481  }
.L54:
	mov	d2,#-16
.L675:
	ret
.L55:
	lea	a6,[a4]4
.L676:
	ld.hu	d4,[a4]20
	j	udp_sendto
.L357:
	
__udp_send_function_end:
	.size	udp_send,__udp_send_function_end-udp_send
.L258:
	; End of function
	
	.sdecl	'.text.udp.udp_sendto',code,cluster('udp_sendto')
	.sect	'.text.udp.udp_sendto'
	.align	2
	
	.global	udp_sendto

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   482  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   483  #if LWIP_CHECKSUM_ON_COPY && CHECKSUM_GEN_UDP
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   484  /** @ingroup udp_raw
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   485   * Same as udp_send() but with checksum
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   486   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   487  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   488  udp_send_chksum(struct udp_pcb *pcb, struct pbuf *p,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   489                  u8_t have_chksum, u16_t chksum)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   490  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   491    LWIP_ERROR("udp_send_chksum: invalid pcb", pcb != NULL, return ERR_ARG);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   492    LWIP_ERROR("udp_send_chksum: invalid pbuf", p != NULL, return ERR_ARG);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   493  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   494    if (IP_IS_ANY_TYPE_VAL(pcb->remote_ip)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   495      return ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   496    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   497  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   498    /* send to the packet using remote ip and port stored in the pcb */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   499    return udp_sendto_chksum(pcb, p, &pcb->remote_ip, pcb->remote_port,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   500                             have_chksum, chksum);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   501  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   502  #endif /* LWIP_CHECKSUM_ON_COPY && CHECKSUM_GEN_UDP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   503  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   504  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   505   * @ingroup udp_raw
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   506   * Send data to a specified address using UDP.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   507   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   508   * @param pcb UDP PCB used to send the data.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   509   * @param p chain of pbuf's to be sent.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   510   * @param dst_ip Destination IP address.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   511   * @param dst_port Destination UDP port.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   512   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   513   * dst_ip & dst_port are expected to be in the same byte order as in the pcb.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   514   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   515   * If the PCB already has a remote address association, it will
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   516   * be restored after the data is sent.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   517   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   518   * @return lwIP error code (@see udp_send for possible error codes)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   519   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   520   * @see udp_disconnect() udp_send()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   521   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   522  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   523  udp_sendto(struct udp_pcb *pcb, struct pbuf *p,
; Function udp_sendto
.L172:
udp_sendto:	.type	func
	mov.aa	a15,a4
.L435:
	mov.aa	a12,a5
.L436:
	mov.aa	a13,a6
.L437:
	mov	d8,d4
.L438:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   524             const ip_addr_t *dst_ip, u16_t dst_port)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   525  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   526  #if LWIP_CHECKSUM_ON_COPY && CHECKSUM_GEN_UDP
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   527    return udp_sendto_chksum(pcb, p, dst_ip, dst_port, 0, 0);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   528  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   529  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   530  /** @ingroup udp_raw
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   531   * Same as udp_sendto(), but with checksum */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   532  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   533  udp_sendto_chksum(struct udp_pcb *pcb, struct pbuf *p, const ip_addr_t *dst_ip,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   534                    u16_t dst_port, u8_t have_chksum, u16_t chksum)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   535  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   536  #endif /* LWIP_CHECKSUM_ON_COPY && CHECKSUM_GEN_UDP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   537    u8_t i ;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   538    struct netif *netif;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   539  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   540    LWIP_ERROR("udp_sendto: invalid pcb", pcb != NULL, return ERR_ARG);
	jz.a	a15,.L58
.L660:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   541    LWIP_ERROR("udp_sendto: invalid pbuf", p != NULL, return ERR_ARG);
	jz.a	a12,.L59
.L661:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   542    LWIP_ERROR("udp_sendto: invalid dst_ip", dst_ip != NULL, return ERR_ARG);
	jnz.a	a13,.L60

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   543  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   544    if (!IP_ADDR_PCB_VERSION_MATCH(pcb, dst_ip)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   545      return ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   546    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   547  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   548    LWIP_DEBUGF(UDP_DEBUG | LWIP_DBG_TRACE, ("udp_send\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   549  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   550    if (pcb->netif_idx != NETIF_NO_INDEX) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   551      // netif = netif_get_by_index(pcb->netif_idx);/*yanheng Modify*/
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   552      for(i = (TCPIP_NETIF_CTRL_MAX - 1 - pcb->netif_idx ), netif = netif_list; ((i != 0) || (netif == NULL_PTR)); i--, netif = netif->next)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   553      {;}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   554    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   555  #if LWIP_MULTICAST_TX_OPTIONS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   556      netif = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   557      if (ip_addr_ismulticast(dst_ip)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   558        /* For IPv6, the interface to use for packets with a multicast destination
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   559         * is specified using an interface index. The same approach may be used for
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   560         * IPv4 as well, in which case it overrides the IPv4 multicast override
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   561         * address below. Here we have to look up the netif by going through the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   562         * list, but by doing so we skip a route lookup. If the interface index has
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   563         * gone stale, we fall through and do the regular route lookup after all. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   564        if (pcb->mcast_ifindex != NETIF_NO_INDEX) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   565          netif = netif_get_by_index(pcb->mcast_ifindex);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   566        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   567  #if LWIP_IPV4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   568        else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   569  #if LWIP_IPV6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   570          if (IP_IS_V4(dst_ip))
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   571  #endif /* LWIP_IPV6 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   572          {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   573            /* IPv4 does not use source-based routing by default, so we use an
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   574               administratively selected interface for multicast by default.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   575               However, this can be overridden by setting an interface address
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   576               in pcb->mcast_ip4 that is used for routing. If this routing lookup
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   577               fails, we try regular routing as though no override was set. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   578            if (!ip4_addr_isany_val(pcb->mcast_ip4) &&
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   579                !ip4_addr_cmp(&pcb->mcast_ip4, IP4_ADDR_BROADCAST)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   580              netif = ip4_route_src(ip_2_ip4(&pcb->local_ip), &pcb->mcast_ip4);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   581            }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   582          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   583  #endif /* LWIP_IPV4 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   584      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   585  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   586      if (netif == NULL)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   587  #endif /* LWIP_MULTICAST_TX_OPTIONS */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   588      {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   589        /* find the outgoing network interface for this packet */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   590        netif = ip_route(&pcb->local_ip, dst_ip);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   591      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   592    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   593  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   594    /* no outgoing network interface could be found? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   595    if (netif == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   596      LWIP_DEBUGF(UDP_DEBUG | LWIP_DBG_LEVEL_SERIOUS, ("udp_send: No route to "));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   597      ip_addr_debug_print(UDP_DEBUG | LWIP_DBG_LEVEL_SERIOUS, dst_ip);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   598      LWIP_DEBUGF(UDP_DEBUG, ("\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   599      UDP_STATS_INC(udp.rterr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   600      return ERR_RTE;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   601    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   602  #if LWIP_CHECKSUM_ON_COPY && CHECKSUM_GEN_UDP
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   603    return udp_sendto_if_chksum(pcb, p, dst_ip, dst_port, netif, have_chksum, chksum);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   604  #else /* LWIP_CHECKSUM_ON_COPY && CHECKSUM_GEN_UDP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   605    return udp_sendto_if(pcb, p, dst_ip, dst_port, netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   606  #endif /* LWIP_CHECKSUM_ON_COPY && CHECKSUM_GEN_UDP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   607  }
.L59:
.L58:
	mov	d2,#-16
.L662:
	ret
.L60:
	ld.bu	d15,[a15]8
.L663:
	jeq	d15,#0,.L62
.L664:
	rsub	d15,#0
.L665:
	movh.a	a2,#@his(netif_list)
	ld.a	a2,[a2]@los(netif_list)
.L439:
	j	.L63
.L64:
.L65:
	add	d15,#-1
.L440:
	ld.a	a2,[a2]
.L63:
	extr.u	d15,d15,#0,#8
.L441:
	jne	d15,#0,.L65
.L666:
	jz.a	a2,.L64
.L667:
	j	.L66
.L62:
	mov.aa	a5,a13
.L434:
	call	ip4_route_src
.L66:
	jnz.a	a2,.L67
.L668:
	mov	d2,#-4
.L669:
	ret
.L67:
	mov.aa	a4,a15
.L442:
	mov.aa	a5,a12
.L443:
	mov.aa	a6,a13
.L444:
	mov	d4,d8
.L445:
	mov.aa	a7,a2
.L446:
	j	udp_sendto_if
.L350:
	
__udp_sendto_function_end:
	.size	udp_sendto,__udp_sendto_function_end-udp_sendto
.L253:
	; End of function
	
	.sdecl	'.text.udp.udp_sendto_if',code,cluster('udp_sendto_if')
	.sect	'.text.udp.udp_sendto_if'
	.align	2
	
	.global	udp_sendto_if

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   608  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   609  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   610   * @ingroup udp_raw
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   611   * Send data to a specified address using UDP.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   612   * The netif used for sending can be specified.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   613   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   614   * This function exists mainly for DHCP, to be able to send UDP packets
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   615   * on a netif that is still down.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   616   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   617   * @param pcb UDP PCB used to send the data.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   618   * @param p chain of pbuf's to be sent.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   619   * @param dst_ip Destination IP address.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   620   * @param dst_port Destination UDP port.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   621   * @param netif the netif used for sending.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   622   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   623   * dst_ip & dst_port are expected to be in the same byte order as in the pcb.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   624   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   625   * @return lwIP error code (@see udp_send for possible error codes)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   626   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   627   * @see udp_disconnect() udp_send()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   628   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   629  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   630  udp_sendto_if(struct udp_pcb *pcb, struct pbuf *p,
; Function udp_sendto_if
.L174:
udp_sendto_if:	.type	func
	sub.a	a10,#8
.L447:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   631                const ip_addr_t *dst_ip, u16_t dst_port, struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   632  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   633  #if LWIP_CHECKSUM_ON_COPY && CHECKSUM_GEN_UDP
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   634    return udp_sendto_if_chksum(pcb, p, dst_ip, dst_port, netif, 0, 0);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   635  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   636  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   637  /** Same as udp_sendto_if(), but with checksum */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   638  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   639  udp_sendto_if_chksum(struct udp_pcb *pcb, struct pbuf *p, const ip_addr_t *dst_ip,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   640                       u16_t dst_port, struct netif *netif, u8_t have_chksum,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   641                       u16_t chksum)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   642  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   643  #endif /* LWIP_CHECKSUM_ON_COPY && CHECKSUM_GEN_UDP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   644    const ip_addr_t *src_ip;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   645  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   646    LWIP_ERROR("udp_sendto_if: invalid pcb", pcb != NULL, return ERR_ARG);
	jz.a	a4,.L70
.L614:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   647    LWIP_ERROR("udp_sendto_if: invalid pbuf", p != NULL, return ERR_ARG);
	jz.a	a5,.L71
.L615:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   648    LWIP_ERROR("udp_sendto_if: invalid dst_ip", dst_ip != NULL, return ERR_ARG);
	jz.a	a6,.L72
.L616:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   649    LWIP_ERROR("udp_sendto_if: invalid netif", netif != NULL, return ERR_ARG);
	jnz.a	a7,.L73

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   650  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   651    if (!IP_ADDR_PCB_VERSION_MATCH(pcb, dst_ip)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   652      return ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   653    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   654  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   655    /* PCB local address is IP_ANY_ADDR or multicast? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   656  #if LWIP_IPV6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   657    if (IP_IS_V6(dst_ip)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   658      if (ip6_addr_isany(ip_2_ip6(&pcb->local_ip)) ||
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   659          ip6_addr_ismulticast(ip_2_ip6(&pcb->local_ip))) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   660        src_ip = ip6_select_source_address(netif, ip_2_ip6(dst_ip));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   661        if (src_ip == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   662          /* No suitable source address was found. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   663          return ERR_RTE;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   664        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   665      } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   666        /* use UDP PCB local IPv6 address as source address, if still valid. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   667        if (netif_get_ip6_addr_match(netif, ip_2_ip6(&pcb->local_ip)) < 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   668          /* Address isn't valid anymore. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   669          return ERR_RTE;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   670        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   671        src_ip = &pcb->local_ip;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   672      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   673    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   674  #endif /* LWIP_IPV6 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   675  #if LWIP_IPV4 && LWIP_IPV6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   676    else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   677  #endif /* LWIP_IPV4 && LWIP_IPV6 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   678  #if LWIP_IPV4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   679      if (ip4_addr_isany(ip_2_ip4(&pcb->local_ip)) ||
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   680          ip4_addr_ismulticast(ip_2_ip4(&pcb->local_ip))) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   681        /* if the local_ip is any or multicast
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   682         * use the outgoing network interface IP address as source address */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   683        src_ip = netif_ip_addr4(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   684      } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   685        /* check if UDP PCB local IP address is correct
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   686         * this could be an old address if netif->ip_addr has changed */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   687        if (!ip4_addr_cmp(ip_2_ip4(&(pcb->local_ip)), netif_ip4_addr(netif))) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   688          /* local_ip doesn't match, drop the packet */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   689          return ERR_RTE;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   690        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   691        /* use UDP PCB local IP address as source address */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   692        src_ip = &pcb->local_ip;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   693      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   694  #endif /* LWIP_IPV4 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   695  #if LWIP_CHECKSUM_ON_COPY && CHECKSUM_GEN_UDP
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   696    return udp_sendto_if_src_chksum(pcb, p, dst_ip, dst_port, netif, have_chksum, chksum, src_ip);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   697  #else /* LWIP_CHECKSUM_ON_COPY && CHECKSUM_GEN_UDP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   698    return udp_sendto_if_src(pcb, p, dst_ip, dst_port, netif, src_ip);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   699  #endif /* LWIP_CHECKSUM_ON_COPY && CHECKSUM_GEN_UDP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   700  }
.L72:
.L71:
.L70:
	mov	d2,#-16
.L617:
	ret
.L73:
	jz.a	a4,.L75
.L618:
	ld.w	d15,[a4]
	jeq	d15,#0,.L76
.L619:
	and	d15,#240
	mov	d0,#224
	jne	d15,d0,.L77
.L76:
.L75:
	lea	a15,[a7]4
.L448:
	j	.L78
.L77:
	ld.w	d0,[a4]
	ld.w	d15,[a7]4
	jeq	d15,d0,.L79
.L620:
	mov	d2,#-4
.L621:
	ret
.L79:
	mov.aa	a15,a4
.L78:
	st.a	[a10],a15
.L622:
	j	udp_sendto_if_src
.L326:
	
__udp_sendto_if_function_end:
	.size	udp_sendto_if,__udp_sendto_if_function_end-udp_sendto_if
.L243:
	; End of function
	
	.sdecl	'.text.udp.udp_sendto_if_src',code,cluster('udp_sendto_if_src')
	.sect	'.text.udp.udp_sendto_if_src'
	.align	2
	
	.global	udp_sendto_if_src

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   701  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   702  /** @ingroup udp_raw
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   703   * Same as @ref udp_sendto_if, but with source address */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   704  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   705  udp_sendto_if_src(struct udp_pcb *pcb, struct pbuf *p,
; Function udp_sendto_if_src
.L176:
udp_sendto_if_src:	.type	func
	sub.a	a10,#8
.L449:
	mov.aa	a12,a4
.L453:
	mov.aa	a13,a5
.L454:
	st.a	[a10],a6
.L455:
	mov	d8,d4
.L456:
	st.a	[a10]4,a7
.L457:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   706                    const ip_addr_t *dst_ip, u16_t dst_port, struct netif *netif, const ip_addr_t *src_ip)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   707  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   708  #if LWIP_CHECKSUM_ON_COPY && CHECKSUM_GEN_UDP
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   709    return udp_sendto_if_src_chksum(pcb, p, dst_ip, dst_port, netif, 0, 0, src_ip);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   710  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   711  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   712  /** Same as udp_sendto_if_src(), but with checksum */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   713  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   714  udp_sendto_if_src_chksum(struct udp_pcb *pcb, struct pbuf *p, const ip_addr_t *dst_ip,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   715                           u16_t dst_port, struct netif *netif, u8_t have_chksum,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   716                           u16_t chksum, const ip_addr_t *src_ip)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   717  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   718  #endif /* LWIP_CHECKSUM_ON_COPY && CHECKSUM_GEN_UDP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   719    struct udp_hdr *udphdr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   720    err_t err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   721    struct pbuf *q; /* q will be sent down the stack */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   722    u8_t ip_proto;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   723    u8_t ttl;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   724  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   725    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   726  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   727    LWIP_ERROR("udp_sendto_if_src: invalid pcb", pcb != NULL, return ERR_ARG);
	jz.a	a12,.L82
.L627:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   728    LWIP_ERROR("udp_sendto_if_src: invalid pbuf", p != NULL, return ERR_ARG);
	jz.a	a13,.L83
.L628:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   729    LWIP_ERROR("udp_sendto_if_src: invalid dst_ip", dst_ip != NULL, return ERR_ARG);
	jz.a	a6,.L84
.L629:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   730    LWIP_ERROR("udp_sendto_if_src: invalid src_ip", src_ip != NULL, return ERR_ARG);
	ld.a	a2,[a10]8
.L458:
	jz.a	a2,.L85
.L630:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   731    LWIP_ERROR("udp_sendto_if_src: invalid netif", netif != NULL, return ERR_ARG);
	mov.aa	a15,a7
.L459:
	jnz.a	a15,.L86

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   732  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   733    if (!IP_ADDR_PCB_VERSION_MATCH(pcb, src_ip) ||
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   734        !IP_ADDR_PCB_VERSION_MATCH(pcb, dst_ip)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   735      return ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   736    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   737  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   738  #if LWIP_IPV4 && IP_SOF_BROADCAST
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   739    /* broadcast filter? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   740    if (!ip_get_option(pcb, SOF_BROADCAST) &&
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   741  #if LWIP_IPV6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   742        IP_IS_V4(dst_ip) &&
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   743  #endif /* LWIP_IPV6 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   744        ip_addr_isbroadcast(dst_ip, netif)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   745      LWIP_DEBUGF(UDP_DEBUG | LWIP_DBG_LEVEL_SERIOUS,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   746                  ("udp_sendto_if: SOF_BROADCAST not enabled on pcb %p\n", (void *)pcb));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   747      return ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   748    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   749  #endif /* LWIP_IPV4 && IP_SOF_BROADCAST */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   750  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   751    /* if the PCB is not yet bound to a port, bind it here */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   752    if (pcb->local_port == 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   753      LWIP_DEBUGF(UDP_DEBUG | LWIP_DBG_TRACE, ("udp_send: not yet bound to a port, binding now\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   754      err = udp_bind(pcb, &pcb->local_ip, pcb->local_port);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   755      if (err != ERR_OK) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   756        LWIP_DEBUGF(UDP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_SERIOUS, ("udp_send: forced port bind failed\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   757        return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   758      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   759    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   760  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   761    /* packet too large to add a UDP header without causing an overflow? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   762    if ((u16_t)(p->tot_len + UDP_HLEN) < p->tot_len) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   763      return ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   764    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   765    /* not enough space to add an UDP header to first pbuf in given p chain? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   766    if (pbuf_add_header(p, UDP_HLEN)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   767      /* allocate header in a separate new pbuf */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   768      q = pbuf_alloc(PBUF_IP, UDP_HLEN, PBUF_RAM);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   769      /* new header pbuf could not be allocated? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   770      if (q == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   771        LWIP_DEBUGF(UDP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_SERIOUS, ("udp_send: could not allocate header\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   772        return ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   773      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   774      if (p->tot_len != 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   775        /* chain header q in front of given pbuf p (only if p contains data) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   776        pbuf_chain(q, p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   777      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   778      /* first pbuf q points to header pbuf */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   779      LWIP_DEBUGF(UDP_DEBUG,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   780                  ("udp_send: added header pbuf %p before given pbuf %p\n", (void *)q, (void *)p));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   781    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   782      /* adding space for header within p succeeded */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   783      /* first pbuf q equals given pbuf */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   784      q = p;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   785      LWIP_DEBUGF(UDP_DEBUG, ("udp_send: added header in given pbuf %p\n", (void *)p));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   786    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   787    LWIP_ASSERT("check that first pbuf can hold struct udp_hdr",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   788                (q->len >= sizeof(struct udp_hdr)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   789    /* q now represents the packet to be sent */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   790    udphdr = (struct udp_hdr *)q->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   791    udphdr->src = lwip_htons(pcb->local_port);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   792    udphdr->dest = lwip_htons(dst_port);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   793    /* in UDP, 0 checksum means 'no checksum' */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   794    udphdr->chksum = 0x0000;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   795  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   796    /* Multicast Loop? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   797  #if LWIP_MULTICAST_TX_OPTIONS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   798    if (((pcb->flags & UDP_FLAGS_MULTICAST_LOOP) != 0) && ip_addr_ismulticast(dst_ip)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   799      q->flags |= PBUF_FLAG_MCASTLOOP;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   800    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   801  #endif /* LWIP_MULTICAST_TX_OPTIONS */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   802  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   803    LWIP_DEBUGF(UDP_DEBUG, ("udp_send: sending datagram of length %"U16_F"\n", q->tot_len));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   804  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   805  #if LWIP_UDPLITE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   806    /* UDP Lite protocol? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   807    if (pcb->flags & UDP_FLAGS_UDPLITE) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   808      u16_t chklen, chklen_hdr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   809      LWIP_DEBUGF(UDP_DEBUG, ("udp_send: UDP LITE packet length %"U16_F"\n", q->tot_len));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   810      /* set UDP message length in UDP header */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   811      chklen_hdr = chklen = pcb->chksum_len_tx;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   812      if ((chklen < sizeof(struct udp_hdr)) || (chklen > q->tot_len)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   813        if (chklen != 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   814          LWIP_DEBUGF(UDP_DEBUG, ("udp_send: UDP LITE pcb->chksum_len is illegal: %"U16_F"\n", chklen));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   815        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   816        /* For UDP-Lite, checksum length of 0 means checksum
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   817           over the complete packet. (See RFC 3828 chap. 3.1)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   818           At least the UDP-Lite header must be covered by the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   819           checksum, therefore, if chksum_len has an illegal
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   820           value, we generate the checksum over the complete
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   821           packet to be safe. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   822        chklen_hdr = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   823        chklen = q->tot_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   824      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   825      udphdr->len = lwip_htons(chklen_hdr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   826      /* calculate checksum */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   827  #if CHECKSUM_GEN_UDP
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   828      IF__NETIF_CHECKSUM_ENABLED(netif, NETIF_CHECKSUM_GEN_UDP) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   829  #if LWIP_CHECKSUM_ON_COPY
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   830        if (have_chksum) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   831          chklen = UDP_HLEN;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   832        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   833  #endif /* LWIP_CHECKSUM_ON_COPY */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   834        udphdr->chksum = ip_chksum_pseudo_partial(q, IP_PROTO_UDPLITE,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   835                         q->tot_len, chklen, src_ip, dst_ip);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   836  #if LWIP_CHECKSUM_ON_COPY
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   837        if (have_chksum) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   838          u32_t acc;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   839          acc = udphdr->chksum + (u16_t)~(chksum);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   840          udphdr->chksum = FOLD_U32T(acc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   841        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   842  #endif /* LWIP_CHECKSUM_ON_COPY */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   843  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   844        /* chksum zero must become 0xffff, as zero means 'no checksum' */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   845        if (udphdr->chksum == 0x0000) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   846          udphdr->chksum = 0xffff;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   847        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   848      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   849  #endif /* CHECKSUM_GEN_UDP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   850  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   851      ip_proto = IP_PROTO_UDPLITE;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   852    } else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   853  #endif /* LWIP_UDPLITE */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   854    {      /* UDP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   855      LWIP_DEBUGF(UDP_DEBUG, ("udp_send: UDP packet length %"U16_F"\n", q->tot_len));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   856      udphdr->len = lwip_htons(q->tot_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   857      /* calculate checksum */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   858  #if CHECKSUM_GEN_UDP
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   859      IF__NETIF_CHECKSUM_ENABLED(netif, NETIF_CHECKSUM_GEN_UDP) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   860        /* Checksum is mandatory over IPv6. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   861        if (IP_IS_V6(dst_ip) || (pcb->flags & UDP_FLAGS_NOCHKSUM) == 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   862          u16_t udpchksum;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   863  #if LWIP_CHECKSUM_ON_COPY
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   864          if (have_chksum) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   865            u32_t acc;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   866            udpchksum = ip_chksum_pseudo_partial(q, IP_PROTO_UDP,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   867                                                 q->tot_len, UDP_HLEN, src_ip, dst_ip);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   868            acc = udpchksum + (u16_t)~(chksum);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   869            udpchksum = FOLD_U32T(acc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   870          } else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   871  #endif /* LWIP_CHECKSUM_ON_COPY */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   872          {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   873            udpchksum = ip_chksum_pseudo(q, IP_PROTO_UDP, q->tot_len,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   874                                         src_ip, dst_ip);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   875          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   876  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   877          /* chksum zero must become 0xffff, as zero means 'no checksum' */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   878          if (udpchksum == 0x0000) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   879            udpchksum = 0xffff;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   880          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   881          udphdr->chksum = udpchksum;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   882        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   883      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   884  #endif /* CHECKSUM_GEN_UDP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   885      ip_proto = IP_PROTO_UDP;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   886    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   887  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   888    /* Determine TTL to use */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   889  #if LWIP_MULTICAST_TX_OPTIONS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   890    ttl = (ip_addr_ismulticast(dst_ip) ? udp_get_multicast_ttl(pcb) : pcb->ttl);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   891  #else /* LWIP_MULTICAST_TX_OPTIONS */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   892    ttl = pcb->ttl;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   893  #endif /* LWIP_MULTICAST_TX_OPTIONS */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   894  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   895    LWIP_DEBUGF(UDP_DEBUG, ("udp_send: UDP checksum 0x%04"X16_F"\n", udphdr->chksum));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   896    LWIP_DEBUGF(UDP_DEBUG, ("udp_send: ip_output_if (,,,,0x%02"X16_F",)\n", (u16_t)ip_proto));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   897    /* output to IP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   898    NETIF_SET_HINTS(netif, &(pcb->netif_hints));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   899    err = ip_output_if_src(q, src_ip, dst_ip, ttl, pcb->tos, ip_proto, netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   900    NETIF_RESET_HINTS(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   901  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   902    /* @todo: must this be increased even if error occurred? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   903    MIB2_STATS_INC(mib2.udpoutdatagrams);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   904  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   905    /* did we chain a separate header pbuf earlier? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   906    if (q != p) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   907      /* free the header pbuf */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   908      pbuf_free(q);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   909      q = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   910      /* p is still referenced by the caller, and will live on */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   911    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   912  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   913    UDP_STATS_INC(udp.xmit);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   914    return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   915  }
.L85:
.L84:
.L83:
.L82:
	mov	d2,#-16
.L631:
	ret
.L86:
	ld.hu	d15,[a12]18
.L632:
	jne	d15,#0,.L88
.L633:
	mov	d4,#0
.L451:
	mov.aa	a5,a12
.L452:
	call	udp_bind
.L450:
	mov	d15,d2
.L461:
	jne	d15,#0,.L89
.L88:
	ld.hu	d15,[a13]8
.L634:
	add	d0,d15,#8
.L635:
	extr.u	d0,d0,#0,#16
.L636:
	jlt.u	d0,d15,.L90
.L637:
	mov	d4,#8
	mov.aa	a4,a13
.L462:
	call	pbuf_add_header
.L463:
	jeq	d2,#0,.L91
.L638:
	mov	d4,#36
.L639:
	mov	d5,#8
.L640:
	mov	d6,#640
	call	pbuf_alloc
.L464:
	mov.aa	a14,a2
.L465:
	jnz.a	a14,.L92
.L90:
	mov	d2,#-1
.L641:
	ret
.L92:
	ld.hu	d15,[a13]8
.L642:
	jeq	d15,#0,.L94
.L643:
	mov.aa	a4,a14
.L466:
	mov.aa	a5,a13
.L468:
	call	pbuf_chain
.L467:
	j	.L95
.L91:
	mov.aa	a14,a13
.L95:
.L94:
	ld.a	a15,[a14]4
.L460:
	ld.hu	d4,[a12]18
	call	lwip_htons
.L644:
	st.h	[a15],d2
.L645:
	mov	d4,d8
.L469:
	call	lwip_htons
.L470:
	st.h	[a15]2,d2
.L646:
	mov	d15,#0
.L647:
	st.h	[a15]6,d15
.L648:
	ld.hu	d4,[a14]8
	call	lwip_htons
.L649:
	st.h	[a15]4,d2
.L650:
	ld.bu	d15,[a12]16
.L651:
	jnz.t	d15:0,.L96
.L348:
	mov	d4,#17
.L652:
	ld.hu	d5,[a14]8
.L653:
	mov.aa	a4,a14
.L471:
	ld.a	a5,[a10]8
.L473:
	ld.a	a6,[a10]
.L474:
	call	ip_chksum_pseudo
.L472:
	jne	d2,#0,.L97
.L654:
	mov.u	d2,#65535
.L97:
	st.h	[a15]6,d2
.L96:
	mov	d6,#17
.L475:
	ld.bu	d4,[a12]11
.L477:
	ld.bu	d5,[a12]10
	mov.aa	a4,a14
.L478:
	ld.a	a5,[a10]8
.L479:
	ld.a	a6,[a10]
.L480:
	ld.a	a7,[a10]4
.L481:
	call	ip4_output_if_src
.L476:
	mov	d15,d2
.L482:
	jeq.a	a14,a13,.L98
.L655:
	mov.aa	a4,a14
.L483:
	call	pbuf_free
.L98:
.L89:
	mov	d2,d15
.L484:
	ret
.L335:
	
__udp_sendto_if_src_function_end:
	.size	udp_sendto_if_src,__udp_sendto_if_src_function_end-udp_sendto_if_src
.L248:
	; End of function
	
	.sdecl	'.text.udp.udp_bind',code,cluster('udp_bind')
	.sect	'.text.udp.udp_bind'
	.align	2
	
	.global	udp_bind

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   916  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   917  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   918   * @ingroup udp_raw
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   919   * Bind an UDP PCB.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   920   * 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   921   * @param pcb UDP PCB to be bound with a local address ipaddr and port.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   922   * @param ipaddr local IP address to bind with. Use IP_ANY_TYPE to
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   923   * bind to all local interfaces.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   924   * @param port local UDP port to bind with. Use 0 to automatically bind
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   925   * to a random port between UDP_LOCAL_PORT_RANGE_START and
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   926   * UDP_LOCAL_PORT_RANGE_END.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   927   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   928   * ipaddr & port are expected to be in the same byte order as in the pcb.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   929   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   930   * @return lwIP error code.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   931   * - ERR_OK. Successful. No error occurred.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   932   * - ERR_USE. The specified ipaddr and port are already bound to by
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   933   * another UDP PCB.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   934   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   935   * @see udp_disconnect()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   936   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   937  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   938  udp_bind(struct udp_pcb *pcb, const ip_addr_t *ipaddr, u16_t port)
; Function udp_bind
.L178:
udp_bind:	.type	func
	mov.aa	a12,a4
.L487:
	mov.aa	a13,a5
.L488:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   939  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   940    struct udp_pcb *ipcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   941    u8_t rebind;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   942  #if LWIP_IPV6 && LWIP_IPV6_SCOPES
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   943    ip_addr_t zoned_ipaddr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   944  #endif /* LWIP_IPV6 && LWIP_IPV6_SCOPES */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   945  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   946    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   947  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   948  #if LWIP_IPV4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   949    /* Don't propagate NULL pointer (IPv4 ANY) to subsequent functions */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   950    if (ipaddr == NULL) {
	jnz.a	a13,.L100
.L545:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   951      ipaddr = IP4_ADDR_ANY;
	movh.a	a13,#@his(ip_addr_any)
.L485:
	lea	a13,[a13]@los(ip_addr_any)
.L100:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   952    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   953  #else /* LWIP_IPV4 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   954    LWIP_ERROR("udp_bind: invalid ipaddr", ipaddr != NULL, return ERR_ARG);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   955  #endif /* LWIP_IPV4 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   956  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   957    LWIP_ERROR("udp_bind: invalid pcb", pcb != NULL, return ERR_ARG);
	jnz.a	a12,.L101
.L546:
	mov	d2,#-16
.L547:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   958  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   959    LWIP_DEBUGF(UDP_DEBUG | LWIP_DBG_TRACE, ("udp_bind(ipaddr = "));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   960    ip_addr_debug_print(UDP_DEBUG | LWIP_DBG_TRACE, ipaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   961    LWIP_DEBUGF(UDP_DEBUG | LWIP_DBG_TRACE, (", port = %"U16_F")\n", port));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   962  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   963    rebind = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   964    /* Check for double bind and rebind of the same pcb */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   965    for (ipcb = udp_pcbs; ipcb != NULL; ipcb = ipcb->next) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   966      /* is this UDP PCB already on active list? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   967      if (pcb == ipcb) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   968        rebind = 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   969        break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   970      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   971    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   972  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   973  #if LWIP_IPV6 && LWIP_IPV6_SCOPES
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   974    /* If the given IP address should have a zone but doesn't, assign one now.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   975     * This is legacy support: scope-aware callers should always provide properly
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   976     * zoned source addresses. Do the zone selection before the address-in-use
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   977     * check below; as such we have to make a temporary copy of the address. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   978    if (IP_IS_V6(ipaddr) && ip6_addr_lacks_zone(ip_2_ip6(ipaddr), IP6_UNKNOWN)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   979      ip_addr_copy(zoned_ipaddr, *ipaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   980      ip6_addr_select_zone(ip_2_ip6(&zoned_ipaddr), ip_2_ip6(&zoned_ipaddr));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   981      ipaddr = &zoned_ipaddr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   982    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   983  #endif /* LWIP_IPV6 && LWIP_IPV6_SCOPES */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   984  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   985    /* no port specified? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   986    if (port == 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   987      port = udp_new_port();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   988      if (port == 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   989        /* no more ports available in local range */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   990        LWIP_DEBUGF(UDP_DEBUG, ("udp_bind: out of free UDP ports\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   991        return ERR_USE;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   992      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   993    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   994      for (ipcb = udp_pcbs; ipcb != NULL; ipcb = ipcb->next) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   995        if (pcb != ipcb) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   996          /* By default, we don't allow to bind to a port that any other udp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   997             PCB is already bound to, unless *all* PCBs with that port have tha
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   998             REUSEADDR flag set. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	   999  #if SO_REUSE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1000          if (!ip_get_option(pcb, SOF_REUSEADDR) ||
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1001              !ip_get_option(ipcb, SOF_REUSEADDR))
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1002  #endif /* SO_REUSE */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1003          {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1004            /* port matches that of PCB in list and REUSEADDR not set -> reject */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1005            if ((ipcb->local_port == port) &&
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1006  			        (ipcb->netif_idx == pcb->netif_idx) && /*yanheng Add for duplicate Multiple addr*/
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1007                /* IP address matches or any IP used? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1008                (ip_addr_cmp(&ipcb->local_ip, ipaddr) || ip_addr_isany(ipaddr) ||
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1009                ip_addr_isany(&ipcb->local_ip))) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1010              /* other PCB already binds to this local IP and port */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1011              LWIP_DEBUGF(UDP_DEBUG,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1012                          ("udp_bind: local port %"U16_F" already bound by another pcb\n", port));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1013              return ERR_USE;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1014            }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1015          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1016        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1017      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1018    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1019  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1020    ip_addr_set_ipaddr(&pcb->local_ip, ipaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1021  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1022    pcb->local_port = port;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1023    mib2_udp_bind(pcb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1024    /* pcb not active yet? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1025    if (rebind == 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1026      /* place the PCB on the active list if not already there */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1027      pcb->next = udp_pcbs;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1028      udp_pcbs = pcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1029    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1030    LWIP_DEBUGF(UDP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("udp_bind: bound to "));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1031    ip_addr_debug_print_val(UDP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, pcb->local_ip);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1032    LWIP_DEBUGF(UDP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, (", port %"U16_F")\n", pcb->local_port));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1033    return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1034  }
	ret
.L101:
	mov	d8,#0
.L489:
	movh.a	a2,#@his(udp_pcbs)
	ld.a	a15,[a2]@los(udp_pcbs)
.L490:
	j	.L103
.L104:
	jne.a	a12,a15,.L105
.L548:
	mov	d8,#1
.L549:
	j	.L106
.L105:
	ld.a	a15,[a15]12
.L103:
	jnz.a	a15,.L104
.L106:
	jne	d4,#0,.L107
.L550:
	call	udp_new_port
.L486:
	mov	d4,d2
.L492:
	jne	d4,#0,.L108
.L551:
	j	.L109
.L107:
	movh.a	a15,#@his(udp_pcbs)
.L491:
	ld.a	a15,[a15]@los(udp_pcbs)
.L493:
	j	.L110
.L111:
	jeq.a	a12,a15,.L112
.L552:
	ld.bu	d15,[a12]9
	jz.t	d15:2,.L113
.L553:
	ld.bu	d15,[a15]9
	jnz.t	d15:2,.L114
.L113:
	ld.hu	d15,[a15]18
.L554:
	jne	d15,d4,.L115
.L555:
	ld.bu	d0,[a15]8
.L556:
	ld.bu	d15,[a12]8
.L557:
	jne	d15,d0,.L116
.L558:
	ld.w	d0,[a15]
	ld.w	d15,[a13]
	jeq	d15,d0,.L117
.L559:
	jz.a	a13,.L118
.L560:
	jeq	d15,#0,.L119
.L561:
	jz.a	a15,.L120
.L562:
	jne	d0,#0,.L121
.L120:
.L119:
.L118:
.L117:
.L109:
	mov	d2,#-8
.L563:
	ret
.L121:
.L116:
.L115:
.L114:
.L112:
	ld.a	a15,[a15]12
.L110:
	jnz.a	a15,.L111
.L108:
	jnz.a	a13,.L123
.L564:
	mov	d15,#0
	j	.L124
.L123:
	ld.w	d15,[a13]
.L124:
	st.w	[a12],d15
.L565:
	st.h	[a12]18,d4
.L566:
	jne	d8,#0,.L125
.L567:
	movh.a	a2,#@his(udp_pcbs)
	ld.a	a15,[a2]@los(udp_pcbs)
.L568:
	st.a	[a12]12,a15
.L569:
	st.a	[a2]@los(udp_pcbs),a12
.L125:
	mov	d2,#0
.L570:
	ret
.L299:
	
__udp_bind_function_end:
	.size	udp_bind,__udp_bind_function_end-udp_bind
.L218:
	; End of function
	
	.sdecl	'.text.udp.udp_bind_netif',code,cluster('udp_bind_netif')
	.sect	'.text.udp.udp_bind_netif'
	.align	2
	
	.global	udp_bind_netif

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1035  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1036  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1037   * @ingroup udp_raw
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1038   * Bind an UDP PCB to a specific netif.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1039   * After calling this function, all packets received via this PCB
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1040   * are guaranteed to have come in via the specified netif, and all
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1041   * outgoing packets will go out via the specified netif.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1042   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1043   * @param pcb UDP PCB to be bound.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1044   * @param netif netif to bind udp pcb to. Can be NULL.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1045   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1046   * @see udp_disconnect()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1047   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1048  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1049  udp_bind_netif(struct udp_pcb *pcb, const struct netif *netif)
; Function udp_bind_netif
.L180:
udp_bind_netif:	.type	func

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1050  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1051    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1052  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1053    if (netif != NULL) {
	jz.a	a5,.L127
.L575:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1054      pcb->netif_idx = netif_get_index(netif);
	ld.bu	d15,[a5]48
	add	d15,#1
.L576:
	st.b	[a4]8,d15
.L577:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1055    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1056      pcb->netif_idx = NETIF_NO_INDEX;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1057    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1058  }
	ret
.L127:
	mov	d15,#0
.L578:
	st.b	[a4]8,d15
.L579:
	ret
.L307:
	
__udp_bind_netif_function_end:
	.size	udp_bind_netif,__udp_bind_netif_function_end-udp_bind_netif
.L223:
	; End of function
	
	.sdecl	'.text.udp.udp_connect',code,cluster('udp_connect')
	.sect	'.text.udp.udp_connect'
	.align	2
	
	.global	udp_connect

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1059  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1060  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1061   * @ingroup udp_raw
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1062   * Sets the remote end of the pcb. This function does not generate any
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1063   * network traffic, but only sets the remote address of the pcb.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1064   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1065   * @param pcb UDP PCB to be connected with remote address ipaddr and port.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1066   * @param ipaddr remote IP address to connect with.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1067   * @param port remote UDP port to connect with.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1068   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1069   * @return lwIP error code
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1070   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1071   * ipaddr & port are expected to be in the same byte order as in the pcb.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1072   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1073   * The udp pcb is bound to a random local port if not already bound.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1074   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1075   * @see udp_disconnect()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1076   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1077  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1078  udp_connect(struct udp_pcb *pcb, const ip_addr_t *ipaddr, u16_t port)
; Function udp_connect
.L182:
udp_connect:	.type	func
	mov.aa	a15,a4
.L496:
	mov.aa	a12,a5
.L497:
	mov	d8,d4
.L498:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1079  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1080    struct udp_pcb *ipcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1081  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1082    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1083  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1084    LWIP_ERROR("udp_connect: invalid pcb", pcb != NULL, return ERR_ARG);
	jz.a	a15,.L129
.L584:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1085    LWIP_ERROR("udp_connect: invalid ipaddr", ipaddr != NULL, return ERR_ARG);
	jnz.a	a12,.L130

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1086  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1087    if (pcb->local_port == 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1088      err_t err = udp_bind(pcb, &pcb->local_ip, pcb->local_port);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1089      if (err != ERR_OK) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1090        return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1091      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1092    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1093  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1094    ip_addr_set_ipaddr(&pcb->remote_ip, ipaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1095  #if LWIP_IPV6 && LWIP_IPV6_SCOPES
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1096    /* If the given IP address should have a zone but doesn't, assign one now,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1097     * using the bound address to make a more informed decision when possible. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1098    if (IP_IS_V6(&pcb->remote_ip) &&
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1099        ip6_addr_lacks_zone(ip_2_ip6(&pcb->remote_ip), IP6_UNKNOWN)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1100      ip6_addr_select_zone(ip_2_ip6(&pcb->remote_ip), ip_2_ip6(&pcb->local_ip));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1101    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1102  #endif /* LWIP_IPV6 && LWIP_IPV6_SCOPES */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1103  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1104    pcb->remote_port = port;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1105    pcb->flags |= UDP_FLAGS_CONNECTED;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1106  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1107    LWIP_DEBUGF(UDP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("udp_connect: connected to "));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1108    ip_addr_debug_print_val(UDP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1109                            pcb->remote_ip);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1110    LWIP_DEBUGF(UDP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, (", port %"U16_F")\n", pcb->remote_port));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1111  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1112    /* Insert UDP PCB into the list of active UDP PCBs. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1113    for (ipcb = udp_pcbs; ipcb != NULL; ipcb = ipcb->next) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1114      if (pcb == ipcb) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1115        /* already on the list, just return */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1116        return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1117      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1118    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1119    /* PCB not yet on the list, add PCB now */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1120    pcb->next = udp_pcbs;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1121    udp_pcbs = pcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1122    return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1123  }
.L129:
	mov	d2,#-16
.L585:
	ret
.L130:
	ld.hu	d15,[a15]18
.L586:
	jne	d15,#0,.L132
.L316:
	mov	d4,#0
.L495:
	mov.aa	a5,a15
.L494:
	call	udp_bind
.L499:
	jne	d2,#0,.L134
.L132:
	jnz.a	a12,.L135
.L587:
	mov	d15,#0
	j	.L136
.L135:
	ld.w	d15,[a12]
.L136:
	st.w	[a15]4,d15
.L588:
	st.h	[a15]20,d8
.L589:
	ld.bu	d15,[a15]16
.L590:
	or	d15,#4
	st.b	[a15]16,d15
.L591:
	movh.a	a2,#@his(udp_pcbs)
	ld.a	a2,[a2]@los(udp_pcbs)
.L500:
	j	.L137
.L138:
	jeq.a	a15,a2,.L139
.L592:
	ld.a	a2,[a2]12
.L137:
	jnz.a	a2,.L138
.L593:
	movh.a	a2,#@his(udp_pcbs)
.L501:
	ld.a	a4,[a2]@los(udp_pcbs)
.L594:
	st.a	[a15]12,a4
.L595:
	st.a	[a2]@los(udp_pcbs),a15
.L139:
	mov	d2,#0
.L134:
	ret
.L311:
	
__udp_connect_function_end:
	.size	udp_connect,__udp_connect_function_end-udp_connect
.L228:
	; End of function
	
	.sdecl	'.text.udp.udp_disconnect',code,cluster('udp_disconnect')
	.sect	'.text.udp.udp_disconnect'
	.align	2
	
	.global	udp_disconnect

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1124  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1125  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1126   * @ingroup udp_raw
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1127   * Remove the remote end of the pcb. This function does not generate
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1128   * any network traffic, but only removes the remote address of the pcb.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1129   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1130   * @param pcb the udp pcb to disconnect.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1131   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1132  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1133  udp_disconnect(struct udp_pcb *pcb)
; Function udp_disconnect
.L184:
udp_disconnect:	.type	func

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1134  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1135    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1136  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1137    LWIP_ERROR("udp_disconnect: invalid pcb", pcb != NULL, return);
	jz.a	a4,.L141
.L600:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1138  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1139    /* reset remote address association */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1140  #if LWIP_IPV4 && LWIP_IPV6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1141    if (IP_IS_ANY_TYPE_VAL(pcb->local_ip)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1142      ip_addr_copy(pcb->remote_ip, *IP_ANY_TYPE);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1143    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1144  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1145      ip_addr_set_any(IP_IS_V6_VAL(pcb->remote_ip), &pcb->remote_ip);
	mov	d15,#0
	st.w	[a4]4,d15
.L601:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1146  #if LWIP_IPV4 && LWIP_IPV6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1147    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1148  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1149    pcb->remote_port = 0;
	st.h	[a4]20,d15
.L602:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1150    pcb->netif_idx = NETIF_NO_INDEX;
	st.b	[a4]8,d15
.L603:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1151    /* mark PCB as unconnected */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1152    udp_clear_flags(pcb, UDP_FLAGS_CONNECTED);
	ld.bu	d15,[a4]16
	and	d15,#251
	st.b	[a4]16,d15

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1153  }
.L141:
	ret
.L318:
	
__udp_disconnect_function_end:
	.size	udp_disconnect,__udp_disconnect_function_end-udp_disconnect
.L233:
	; End of function
	
	.sdecl	'.text.udp.udp_recv',code,cluster('udp_recv')
	.sect	'.text.udp.udp_recv'
	.align	2
	
	.global	udp_recv

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1154  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1155  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1156   * @ingroup udp_raw
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1157   * Set a receive callback for a UDP PCB.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1158   * This callback will be called when receiving a datagram for the pcb.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1159   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1160   * @param pcb the pcb for which to set the recv callback
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1161   * @param recv function pointer of the callback function
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1162   * @param recv_arg additional argument to pass to the callback function
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1163   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1164  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1165  udp_recv(struct udp_pcb *pcb, udp_recv_fn recv, void *recv_arg)
; Function udp_recv
.L186:
udp_recv:	.type	func

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1166  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1167    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1168  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1169    LWIP_ERROR("udp_recv: invalid pcb", pcb != NULL, return);
	jz.a	a4,.L142
.L608:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1170  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1171    /* remember recv() callback and user data */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1172    pcb->recv = recv;
	st.a	[a4]24,a5
.L609:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1173    pcb->recv_arg = recv_arg;
	st.a	[a4]28,a6

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1174  }
.L142:
	ret
.L320:
	
__udp_recv_function_end:
	.size	udp_recv,__udp_recv_function_end-udp_recv
.L238:
	; End of function
	
	.sdecl	'.text.udp.udp_remove',code,cluster('udp_remove')
	.sect	'.text.udp.udp_remove'
	.align	2
	
	.global	udp_remove

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1175  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1176  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1177   * @ingroup udp_raw
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1178   * Removes and deallocates the pcb.  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1179   * 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1180   * @param pcb UDP PCB to be removed. The PCB is removed from the list of
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1181   * UDP PCB's and the data structure is freed from memory.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1182   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1183   * @see udp_new()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1184   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1185  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1186  udp_remove(struct udp_pcb *pcb)
; Function udp_remove
.L188:
udp_remove:	.type	func

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1187  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1188    struct udp_pcb *pcb2;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1189  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1190    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1191  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1192    LWIP_ERROR("udp_remove: invalid pcb", pcb != NULL, return);
	jz.a	a4,.L143
.L529:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1193  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1194    mib2_udp_unbind(pcb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1195    /* pcb to be removed is first in list? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1196    if (udp_pcbs == pcb) {
	movh.a	a15,#@his(udp_pcbs)
	ld.a	a2,[a15]@los(udp_pcbs)
.L530:
	jne.a	a2,a4,.L144
.L531:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1197      /* make list start at 2nd pcb */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1198      udp_pcbs = udp_pcbs->next;
	ld.a	a2,[a4]12
.L532:
	st.a	[a15]@los(udp_pcbs),a2
.L533:
	j	.L145

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1199      /* pcb not 1st in list */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1200    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1201      for (pcb2 = udp_pcbs; pcb2 != NULL; pcb2 = pcb2->next) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1202        /* find pcb in udp_pcbs list */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1203        if (pcb2->next != NULL && pcb2->next == pcb) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1204          /* remove pcb from list */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1205          pcb2->next = pcb->next;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1206          break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1207        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1208      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1209    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1210    memp_free(MEMP_UDP_PCB, pcb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1211  }
.L143:
	ret
.L144:
	ld.a	a15,[a15]@los(udp_pcbs)
.L502:
	j	.L146
.L147:
	ld.w	d15,[a15]12
.L534:
	jeq	d15,#0,.L148
.L535:
	ld.a	a2,[a15]12
.L536:
	jne.a	a2,a4,.L149
.L537:
	ld.a	a2,[a4]12
.L538:
	st.a	[a15]12,a2
.L539:
	j	.L150
.L149:
.L148:
	ld.a	a15,[a15]12
.L146:
	jnz.a	a15,.L147
.L150:
.L145:
	mov	d4,#0
.L540:
	j	memp_free
.L295:
	
__udp_remove_function_end:
	.size	udp_remove,__udp_remove_function_end-udp_remove
.L213:
	; End of function
	
	.sdecl	'.text.udp.udp_new',code,cluster('udp_new')
	.sect	'.text.udp.udp_new'
	.align	2
	
	.global	udp_new

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1212  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1213  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1214   * @ingroup udp_raw
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1215   * Creates a new UDP pcb which can be used for UDP communication. The
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1216   * pcb is not active until it has either been bound to a local address
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1217   * or connected to a remote address.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1218   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1219   * @return The UDP PCB which was created. NULL if the PCB data structure
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1220   * could not be allocated.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1221   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1222   * @see udp_remove()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1223   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1224  struct udp_pcb *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1225  udp_new(void)
; Function udp_new
.L190:
udp_new:	.type	func

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1226  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1227    struct udp_pcb *pcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1228  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1229    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1230  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1231    pcb = (struct udp_pcb *)memp_malloc(MEMP_UDP_PCB);
	mov	d4,#0
	call	memp_malloc
.L503:
	mov.aa	a15,a2
.L505:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1232    /* could allocate UDP PCB? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1233    if (pcb != NULL) {
	jz.a	a15,.L151
.L518:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1234      /* UDP Lite: by initializing to all zeroes, chksum_len is set to 0
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1235       * which means checksum is generated over the whole datagram per default
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1236       * (recommended as default by RFC 3828). */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1237      /* initialize PCB to all zeroes */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1238      memset(pcb, 0, sizeof(struct udp_pcb));
	mov	d4,#0
.L519:
	mov	d5,#32
	mov.aa	a4,a15
.L504:
	call	memset
.L506:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1239      pcb->ttl = UDP_TTL;
	mov	d15,#255
.L520:
	st.b	[a15]11,d15
.L151:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1240  #if LWIP_MULTICAST_TX_OPTIONS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1241      udp_set_multicast_ttl(pcb, UDP_TTL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1242  #endif /* LWIP_MULTICAST_TX_OPTIONS */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1243    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1244    return pcb;
	mov.aa	a2,a15
.L507:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1245  }
	ret
.L289:
	
__udp_new_function_end:
	.size	udp_new,__udp_new_function_end-udp_new
.L203:
	; End of function
	
	.sdecl	'.text.udp.udp_new_ip_type',code,cluster('udp_new_ip_type')
	.sect	'.text.udp.udp_new_ip_type'
	.align	2
	
	.global	udp_new_ip_type

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1246  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1247  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1248   * @ingroup udp_raw
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1249   * Create a UDP PCB for specific IP type.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1250   * The pcb is not active until it has either been bound to a local address
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1251   * or connected to a remote address.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1252   * 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1253   * @param type IP address type, see @ref lwip_ip_addr_type definitions.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1254   * If you want to listen to IPv4 and IPv6 (dual-stack) packets,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1255   * supply @ref IPADDR_TYPE_ANY as argument and bind to @ref IP_ANY_TYPE.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1256   * @return The UDP PCB which was created. NULL if the PCB data structure
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1257   * could not be allocated.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1258   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1259   * @see udp_remove()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1260   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1261  struct udp_pcb *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1262  udp_new_ip_type(u8_t type)
; Function udp_new_ip_type
.L192:
udp_new_ip_type:	.type	func

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1263  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1264    struct udp_pcb *pcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1265  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1266    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1267  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1268    pcb = udp_new();
	j	udp_new
.L291:
	
__udp_new_ip_type_function_end:
	.size	udp_new_ip_type,__udp_new_ip_type_function_end-udp_new_ip_type
.L208:
	; End of function
	
	.sdecl	'.text.udp.udp_netif_ip_addr_changed',code,cluster('udp_netif_ip_addr_changed')
	.sect	'.text.udp.udp_netif_ip_addr_changed'
	.align	2
	
	.global	udp_netif_ip_addr_changed

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1269  #if LWIP_IPV4 && LWIP_IPV6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1270    if (pcb != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1271      IP_SET_TYPE_VAL(pcb->local_ip,  type);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1272      IP_SET_TYPE_VAL(pcb->remote_ip, type);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1273    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1274  #else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1275    LWIP_UNUSED_ARG(type);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1276  #endif /* LWIP_IPV4 && LWIP_IPV6 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1277    return pcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1278  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1279  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1280  /** This function is called from netif.c when address is changed
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1281   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1282   * @param old_addr IP address of the netif before change
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1283   * @param new_addr IP address of the netif after change
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1284   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1285  void udp_netif_ip_addr_changed(const ip_addr_t *old_addr, const ip_addr_t *new_addr)
; Function udp_netif_ip_addr_changed
.L194:
udp_netif_ip_addr_changed:	.type	func

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1286  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1287    struct udp_pcb *upcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1288  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1289    if (!ip_addr_isany(old_addr) && !ip_addr_isany(new_addr)) {
	jz.a	a4,.L154
.L731:
	ld.w	d15,[a4]
	jeq	d15,#0,.L155
.L732:
	jz.a	a5,.L156
.L733:
	ld.w	d15,[a5]
	jeq	d15,#0,.L157
.L734:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1290      for (upcb = udp_pcbs; upcb != NULL; upcb = upcb->next) {
	movh.a	a15,#@his(udp_pcbs)
	ld.a	a15,[a15]@los(udp_pcbs)
.L508:
	j	.L158
.L159:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1291        /* PCB bound to current local interface address? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1292        if (ip_addr_cmp(&upcb->local_ip, old_addr)) {
	ld.w	d15,[a15]
	ld.w	d0,[a4]
.L735:
	jne	d15,d0,.L160
.L736:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1293          /* The PCB is bound to the old ipaddr and
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1294           * is set to bound to the new one instead */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1295          ip_addr_copy(upcb->local_ip, *new_addr);
	ld.w	d15,[a5]
	st.w	[a15],d15
.L160:
	ld.a	a15,[a15]12
.L158:
	jnz.a	a15,.L159
.L157:
.L156:
.L155:
.L154:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1296        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1297      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1298    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1299  }
	ret
.L372:
	
__udp_netif_ip_addr_changed_function_end:
	.size	udp_netif_ip_addr_changed,__udp_netif_ip_addr_changed_function_end-udp_netif_ip_addr_changed
.L273:
	; End of function
	
	.sdecl	'.data.udp.udp_port',data,cluster('udp_port')
	.sect	'.data.udp.udp_port'
	.align	2
udp_port:	.type	object
	.size	udp_port,2
	.half	49152
	.sdecl	'.bss.udp.udp_pcbs',data,cluster('udp_pcbs')
	.sect	'.bss.udp.udp_pcbs'
	.global	udp_pcbs
	.align	4
udp_pcbs:	.type	object
	.size	udp_pcbs,4
	.space	4
	.calls	'udp_input','ip4_addr_isbroadcast_u32'
	.calls	'udp_input','lwip_htons'
	.calls	'udp_input','udp_input_local_match'
	.calls	'udp_input','ip_chksum_pseudo'
	.calls	'udp_input','pbuf_remove_header'
	.calls	'udp_input','__INDIRECT__'
	.calls	'udp_input','pbuf_header_force'
	.calls	'udp_input','icmp_dest_unreach'
	.calls	'udp_input','pbuf_free'
	.calls	'udp_send','udp_sendto'
	.calls	'udp_sendto','ip4_route_src'
	.calls	'udp_sendto','udp_sendto_if'
	.calls	'udp_sendto_if','udp_sendto_if_src'
	.calls	'udp_sendto_if_src','udp_bind'
	.calls	'udp_sendto_if_src','pbuf_add_header'
	.calls	'udp_sendto_if_src','pbuf_alloc'
	.calls	'udp_sendto_if_src','pbuf_chain'
	.calls	'udp_sendto_if_src','lwip_htons'
	.calls	'udp_sendto_if_src','ip_chksum_pseudo'
	.calls	'udp_sendto_if_src','ip4_output_if_src'
	.calls	'udp_sendto_if_src','pbuf_free'
	.calls	'udp_bind','udp_new_port'
	.calls	'udp_connect','udp_bind'
	.calls	'udp_remove','memp_free'
	.calls	'udp_new','memp_malloc'
	.calls	'udp_new','memset'
	.calls	'udp_new_ip_type','udp_new'
	.calls	'udp_init','',0
	.calls	'udp_new_port','',0
	.calls	'udp_input_local_match','',0
	.calls	'udp_input','',16
	.calls	'udp_send','',0
	.calls	'udp_sendto','',0
	.calls	'udp_sendto_if','',8
	.calls	'udp_sendto_if_src','',8
	.calls	'udp_bind','',0
	.calls	'udp_bind_netif','',0
	.calls	'udp_connect','',0
	.calls	'udp_disconnect','',0
	.calls	'udp_recv','',0
	.calls	'udp_remove','',0
	.calls	'udp_new','',0
	.calls	'udp_new_ip_type','',0
	.extern	pbuf_alloc
	.extern	pbuf_header_force
	.extern	pbuf_add_header
	.extern	pbuf_remove_header
	.extern	pbuf_free
	.extern	pbuf_chain
	.extern	memset
	.extern	lwip_htons
	.extern	ip4_addr_isbroadcast_u32
	.extern	ip_addr_any
	.extern	memp_malloc
	.extern	memp_free
	.extern	netif_list
	.extern	ip4_route_src
	.extern	ip4_output_if_src
	.extern	ip_data
	.extern	ip_chksum_pseudo
	.extern	icmp_dest_unreach
	.extern	__INDIRECT__
	.calls	'udp_netif_ip_addr_changed','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L196:
	.word	7639
	.half	3
	.word	.L197
	.byte	4
.L195:
	.byte	1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L198
	.byte	2
	.byte	'void',0
.L324:
	.byte	3
	.word	162
.L303:
	.byte	4
	.byte	'unsigned short int',0,2,7
.L292:
	.byte	4
	.byte	'unsigned char',0,1,8,5
	.byte	'pbuf',0,1,186,1,8,16,6
	.byte	'next',0
	.word	.L328-.L196
	.byte	4,2,35,0,6
	.byte	'payload',0
	.word	168
	.byte	4,2,35,4,6
	.byte	'tot_len',0
	.word	173
	.byte	2,2,35,8,6
	.byte	'len',0
	.word	173
	.byte	2,2,35,10,6
	.byte	'type_internal',0
	.word	195
	.byte	1,2,35,12,6
	.byte	'flags',0
	.word	195
	.byte	1,2,35,13,6
	.byte	'ref',0
	.word	195
	.byte	1,2,35,14,6
	.byte	'if_idx',0
	.word	195
	.byte	1,2,35,15,0
.L328:
	.byte	3
	.word	212
	.byte	7,1,89,9,1,8
	.byte	'PBUF_RAW',0,0,8
	.byte	'PBUF_RAW_TX',0,0,8
	.byte	'PBUF_LINK',0,16,8
	.byte	'PBUF_IP',0,36,8
	.byte	'PBUF_TRANSPORT',0,56,0,7,1,145,1,9,2,8
	.byte	'PBUF_ROM',0,1,8
	.byte	'PBUF_REF',0,193,0,8
	.byte	'PBUF_POOL',0,130,3,8
	.byte	'PBUF_RAM',0,128,5,0,9
	.byte	'pbuf_alloc',0,1,144,2,14
	.word	352
	.byte	1,1,1,1,10
	.byte	'l',0,1,144,2,36
	.word	357
	.byte	10
	.byte	'length',0,1,144,2,45
	.word	173
	.byte	10
	.byte	'type',0,1,144,2,63
	.word	427
	.byte	0,4
	.byte	'short int',0,2,5,9
	.byte	'pbuf_header_force',0,1,156,2,6
	.word	195
	.byte	1,1,1,1,10
	.byte	'p',0,1,156,2,37
	.word	352
	.byte	10
	.byte	'header_size',0,1,156,2,46
	.word	548
	.byte	0,4
	.byte	'unsigned long int',0,4,7,9
	.byte	'pbuf_add_header',0,1,157,2,6
	.word	195
	.byte	1,1,1,1,10
	.byte	'p',0,1,157,2,35
	.word	352
	.byte	10
	.byte	'header_size_increment',0,1,157,2,45
	.word	625
	.byte	0,9
	.byte	'pbuf_remove_header',0,1,159,2,6
	.word	195
	.byte	1,1,1,1,10
	.byte	'p',0,1,159,2,38
	.word	352
	.byte	10
	.byte	'header_size',0,1,159,2,48
	.word	625
	.byte	0,9
	.byte	'pbuf_free',0,1,162,2,6
	.word	195
	.byte	1,1,1,1,10
	.byte	'p',0,1,162,2,29
	.word	352
	.byte	0,11
	.byte	'pbuf_chain',0,1,165,2,6,1,1,1,1,10
	.byte	'head',0,1,165,2,30
	.word	352
	.byte	10
	.byte	'tail',0,1,165,2,49
	.word	352
	.byte	0,4
	.byte	'int',0,4,5,9
	.byte	'memset',0,2,56,17
	.word	168
	.byte	1,1,1,1,12,2,56,33
	.word	168
	.byte	12,2,56,36
	.word	867
	.byte	12,2,56,41
	.word	625
	.byte	0,9
	.byte	'lwip_htons',0,3,97,7
	.word	173
	.byte	1,1,1,1,10
	.byte	'x',0,3,97,24
	.word	173
	.byte	0
.L332:
	.byte	3
	.word	.L509-.L196
	.byte	5
	.byte	'ip4_addr',0,4,51,8,4,6
	.byte	'addr',0
	.word	625
	.byte	4,2,35,0,0
.L298:
	.byte	4
	.byte	'char',0,1,6,13
	.word	986
	.byte	1,1,14
	.word	352
	.byte	14
	.word	952
	.byte	0,3
	.word	994
	.byte	15
	.byte	'netif_input_fn',0,5,178,1,17
	.word	1012
	.byte	16
	.word	957
	.byte	3
	.word	1041
	.byte	13
	.word	986
	.byte	1,1,14
	.word	952
	.byte	14
	.word	352
	.byte	14
	.word	1046
	.byte	0,3
	.word	1051
	.byte	15
	.byte	'netif_output_fn',0,5,189,1,17
	.word	1074
	.byte	13
	.word	986
	.byte	1,1,14
	.word	952
	.byte	14
	.word	352
	.byte	0,3
	.word	1104
	.byte	15
	.byte	'netif_linkoutput_fn',0,5,212,1,17
	.word	1122
	.byte	17,1,1,14
	.word	952
	.byte	0,3
	.word	1156
	.byte	15
	.byte	'netif_status_callback_fn',0,5,214,1,16
	.word	1165
	.byte	18,6
	.word	195
	.byte	19,5,0,4
	.byte	'char',0,1,6,18,2
	.word	1213
	.byte	19,1,0
.L509:
	.byte	5
	.byte	'netif',0,5,132,2,8,52,6
	.byte	'next',0
	.word	952
	.byte	4,2,35,0,6
	.byte	'ip_addr',0
	.word	957
	.byte	4,2,35,4,6
	.byte	'netmask',0
	.word	957
	.byte	4,2,35,8,6
	.byte	'gw',0
	.word	957
	.byte	4,2,35,12,6
	.byte	'input',0
	.word	1017
	.byte	4,2,35,16,6
	.byte	'output',0
	.word	1079
	.byte	4,2,35,20,6
	.byte	'linkoutput',0
	.word	1127
	.byte	4,2,35,24,6
	.byte	'status_callback',0
	.word	1170
	.byte	4,2,35,28,6
	.byte	'state',0
	.word	168
	.byte	4,2,35,32,6
	.byte	'mtu',0
	.word	173
	.byte	2,2,35,36,6
	.byte	'hwaddr',0
	.word	1204
	.byte	6,2,35,38,6
	.byte	'hwaddr_len',0
	.word	195
	.byte	1,2,35,44,6
	.byte	'flags',0
	.word	195
	.byte	1,2,35,45,6
	.byte	'name',0
	.word	1221
	.byte	2,2,35,46,6
	.byte	'num',0
	.word	195
	.byte	1,2,35,48,6
	.byte	'rs_count',0
	.word	195
	.byte	1,2,35,49,0,16
	.word	1230
.L309:
	.byte	3
	.word	1503
	.byte	9
	.byte	'ip4_addr_isbroadcast_u32',0,4,151,1,6
	.word	195
	.byte	1,1,1,1,10
	.byte	'addr',0,4,151,1,37
	.word	625
	.byte	10
	.byte	'netif',0,4,151,1,63
	.word	1508
	.byte	0,3
	.word	994
	.byte	3
	.word	1051
	.byte	3
	.word	1104
	.byte	3
	.word	1156
	.byte	7,6,52,9,1,8
	.byte	'MEMP_UDP_PCB',0,0,8
	.byte	'MEMP_TCP_PCB',0,1,8
	.byte	'MEMP_TCP_PCB_LISTEN',0,2,8
	.byte	'MEMP_TCP_SEG',0,3,8
	.byte	'MEMP_ARP_QUEUE',0,4,8
	.byte	'MEMP_SYS_TIMEOUT',0,5,8
	.byte	'MEMP_PBUF',0,6,8
	.byte	'MEMP_PBUF_POOL',0,7,8
	.byte	'MEMP_MAX',0,8,0,9
	.byte	'memp_malloc',0,6,147,1,7
	.word	168
	.byte	1,1,1,1,10
	.byte	'type',0,6,147,1,26
	.word	1601
	.byte	0,11
	.byte	'memp_free',0,6,149,1,7,1,1,1,1,10
	.byte	'type',0,6,149,1,24
	.word	1601
	.byte	10
	.byte	'mem',0,6,149,1,36
	.word	168
	.byte	0,16
	.word	957
	.byte	3
	.word	1837
	.byte	9
	.byte	'ip4_route_src',0,7,67,15
	.word	952
	.byte	1,1,1,1,10
	.byte	'src',0,7,67,47
	.word	1842
	.byte	10
	.byte	'dest',0,7,67,70
	.word	1842
	.byte	0,9
	.byte	'ip4_output_if_src',0,7,76,7
	.word	986
	.byte	1,1,1,1,10
	.byte	'p',0,7,76,38
	.word	352
	.byte	10
	.byte	'src',0,7,76,59
	.word	1842
	.byte	10
	.byte	'dest',0,7,76,82
	.word	1842
	.byte	10
	.byte	'ttl',0,7,77,13
	.word	195
	.byte	10
	.byte	'tos',0,7,77,23
	.word	195
	.byte	10
	.byte	'proto',0,7,77,33
	.word	195
	.byte	10
	.byte	'netif',0,7,77,54
	.word	952
	.byte	0,17,1,1,14
	.word	168
	.byte	14
	.word	.L288-.L196
	.byte	14
	.word	352
	.byte	14
	.word	1046
	.byte	14
	.word	173
	.byte	0,3
	.word	2017
.L322:
	.byte	15
	.byte	'udp_recv_fn',0,8,77,16
	.word	2046
	.byte	5
	.byte	'udp_pcb',0,8,81,8,32,6
	.byte	'local_ip',0
	.word	957
	.byte	4,2,35,0,6
	.byte	'remote_ip',0
	.word	957
	.byte	4,2,35,4,6
	.byte	'netif_idx',0
	.word	195
	.byte	1,2,35,8,6
	.byte	'so_options',0
	.word	195
	.byte	1,2,35,9,6
	.byte	'tos',0
	.word	195
	.byte	1,2,35,10,6
	.byte	'ttl',0
	.word	195
	.byte	1,2,35,11,6
	.byte	'next',0
	.word	.L288-.L196
	.byte	4,2,35,12,6
	.byte	'flags',0
	.word	195
	.byte	1,2,35,16,6
	.byte	'local_port',0
	.word	173
	.byte	2,2,35,18,6
	.byte	'remote_port',0
	.word	173
	.byte	2,2,35,20,6
	.byte	'recv',0
	.word	2051
	.byte	4,2,35,24,6
	.byte	'recv_arg',0
	.word	168
	.byte	4,2,35,28,0
.L288:
	.byte	3
	.word	2071
	.byte	3
	.word	2017
	.byte	16
	.word	957
.L301:
	.byte	3
	.word	2299
	.byte	5
	.byte	'udp_hdr',0,9,53,8,8,6
	.byte	'src',0
	.word	173
	.byte	2,2,35,0,6
	.byte	'dest',0
	.word	173
	.byte	2,2,35,2,6
	.byte	'len',0
	.word	173
	.byte	2,2,35,4,6
	.byte	'chksum',0
	.word	173
	.byte	2,2,35,6,0
.L342:
	.byte	3
	.word	2309
	.byte	9
	.byte	'ip_chksum_pseudo',0,10,95,7
	.word	173
	.byte	1,1,1,1,10
	.byte	'p',0,10,95,37
	.word	352
	.byte	10
	.byte	'proto',0,10,95,45
	.word	195
	.byte	10
	.byte	'proto_len',0,10,95,58
	.word	173
	.byte	10
	.byte	'src',0,10,96,25
	.word	2304
	.byte	10
	.byte	'dest',0,10,96,47
	.word	2304
	.byte	0,20
	.byte	'icmp_dur_type',0,11,55,6,1,8
	.byte	'ICMP_DUR_NET',0,0,8
	.byte	'ICMP_DUR_HOST',0,1,8
	.byte	'ICMP_DUR_PROTO',0,2,8
	.byte	'ICMP_DUR_PORT',0,3,8
	.byte	'ICMP_DUR_FRAG',0,4,8
	.byte	'ICMP_DUR_SR',0,5,0,11
	.byte	'icmp_dest_unreach',0,11,81,6,1,1,1,1,10
	.byte	'p',0,11,81,37
	.word	352
	.byte	10
	.byte	't',0,11,81,59
	.word	2481
	.byte	0,21
	.byte	'__INDIRECT__',0,12,1,1,1,1,1,22,1,3
	.word	2662
	.byte	15
	.byte	'__codeptr',0,12,1,1
	.word	2664
	.byte	15
	.byte	'boolean',0,13,102,29
	.word	195
	.byte	15
	.byte	'uint8',0,13,106,29
	.word	195
	.byte	15
	.byte	'uint16',0,13,110,29
	.word	173
	.byte	15
	.byte	'uint32',0,13,114,29
	.word	625
	.byte	15
	.byte	'Std_ReturnType',0,14,109,16
	.word	195
	.byte	15
	.byte	'PduIdType',0,15,37,21
	.word	195
	.byte	15
	.byte	'PduLengthType',0,15,41,22
	.word	173
	.byte	7,16,101,9,1,8
	.byte	'BUFREQ_OK',0,0,8
	.byte	'BUFREQ_E_NOT_OK',0,1,8
	.byte	'BUFREQ_E_BUSY',0,2,8
	.byte	'BUFREQ_E_OVFL',0,3,0,15
	.byte	'BufReq_ReturnType',0,16,107,3
	.word	2810
	.byte	3
	.word	195
	.byte	15
	.byte	'SduDataPtrType',0,16,189,1,40
	.word	2904
	.byte	7,16,204,1,9,1,8
	.byte	'TP_DATACONF',0,0,8
	.byte	'TP_DATARETRY',0,1,8
	.byte	'TP_CONFPENDING',0,2,0,15
	.byte	'TpDataStateType',0,16,216,1,3
	.word	2933
	.byte	15
	.byte	'TcpIp_SocketIdType',0,17,50,16
	.word	195
	.byte	18,4
	.word	625
	.byte	19,0,0,23,17,52,9,4,6
	.byte	'Addr',0
	.word	3038
	.byte	4,2,35,0,0,15
	.byte	'TcpIp_IpAddressType',0,17,55,3
	.word	3047
	.byte	15
	.byte	'TcpIp_DomainType',0,17,61,16
	.word	173
	.byte	23,17,68,9,8,6
	.byte	'Domain',0
	.word	173
	.byte	2,2,35,0,6
	.byte	'Port',0
	.word	173
	.byte	2,2,35,2,6
	.byte	'Addr',0
	.word	3038
	.byte	4,2,35,4,0,15
	.byte	'TcpIp_SockAddrInetType',0,17,73,3
	.word	3120
	.byte	15
	.byte	'TcpIp_AddressType',0,18,128,1,15
	.word	195
	.byte	15
	.byte	'TcpIp_CtrlIdType',0,18,142,1,15
	.word	195
	.byte	15
	.byte	'TcpIp_IpAddrStateType',0,18,144,1,15
	.word	195
	.byte	15
	.byte	'TcpIp_LocalAddrAssignmentConfigType',0,18,149,1,15
	.word	195
	.byte	15
	.byte	'TcpIp_StaticAddrIdType',0,18,151,1,15
	.word	195
	.byte	23,18,152,1,9,12,6
	.byte	'State',0
	.word	195
	.byte	1,2,35,0,6
	.byte	'Netmask',0
	.word	195
	.byte	1,2,35,1,6
	.byte	'Domain',0
	.word	173
	.byte	2,2,35,2,6
	.byte	'IpAddr',0
	.word	3047
	.byte	4,2,35,4,6
	.byte	'DefaultRouter',0
	.word	3047
	.byte	4,2,35,8,0,15
	.byte	'TcpIp_StaticIpAddrType',0,18,162,1,3
	.word	3362
	.byte	15
	.byte	'TcpIp_LocalAddrIdType',0,18,173,1,15
	.word	195
	.byte	18,3
	.word	195
	.byte	19,2,0,23,18,231,1,9,8,6
	.byte	'CtrlId',0
	.word	195
	.byte	1,2,35,0,6
	.byte	'Address',0
	.word	195
	.byte	1,2,35,1,6
	.byte	'Domain',0
	.word	173
	.byte	2,2,35,2,6
	.byte	'StaticAddrId',0
	.word	195
	.byte	1,2,35,4,6
	.byte	'Assignments',0
	.word	3519
	.byte	3,2,35,5,0,15
	.byte	'TcpIp_LocalAddrConfigType',0,18,243,1,3
	.word	3528
	.byte	23,18,245,1,9,4,6
	.byte	'ArpConfigId',0
	.word	195
	.byte	1,2,35,0,6
	.byte	'DHCPConfigId',0
	.word	195
	.byte	1,2,35,1,6
	.byte	'AutoIpInitTimeout',0
	.word	173
	.byte	2,2,35,2,0,15
	.byte	'TcpIp_IpV4CtrlConfigType',0,18,130,2,3
	.word	3662
	.byte	23,18,133,2,9,8,6
	.byte	'CtrlIdx',0
	.word	195
	.byte	1,2,35,0,6
	.byte	'FramePrio',0
	.word	195
	.byte	1,2,35,1,6
	.byte	'UnicastAddrId',0
	.word	195
	.byte	1,2,35,2,6
	.byte	'UnicastAddrLimit',0
	.word	195
	.byte	1,2,35,3,6
	.byte	'MulticastAddrId',0
	.word	195
	.byte	1,2,35,4,6
	.byte	'LocalAddrLimit',0
	.word	195
	.byte	1,2,35,5,6
	.byte	'IpV4CtrlId',0
	.word	195
	.byte	1,2,35,6,6
	.byte	'IpV6CtrlId',0
	.word	195
	.byte	1,2,35,7,0,15
	.byte	'TcpIp_NetIfCtrlConfigType',0,18,148,2,3
	.word	3773
	.byte	15
	.byte	'SoAd_RoutingGroupIdType',0,19,43,15
	.word	195
	.byte	15
	.byte	'SoAd_SoConIdType',0,19,44,15
	.word	195
	.byte	15
	.byte	'SoAd_SoConGroupIdType',0,19,45,15
	.word	195
	.byte	15
	.byte	'SoAd_PduRouteIdType',0,19,46,15
	.word	195
	.byte	15
	.byte	'SoAd_PduRouteDestIdType',0,19,47,15
	.word	195
	.byte	15
	.byte	'SoAd_SocketRouteIdType',0,19,48,15
	.word	195
	.byte	15
	.byte	'SoAd_IfTxUnconfirmedType',0,19,49,16
	.word	173
	.byte	15
	.byte	'SoAd_IfTxTimerType',0,19,51,16
	.word	173
	.byte	18,1
	.word	195
	.byte	19,0,0,23,19,53,9,2,6
	.byte	'Mask',0
	.word	4227
	.byte	1,2,35,0,6
	.byte	'RoutingState',0
	.word	4227
	.byte	1,2,35,1,0,15
	.byte	'SoAd_RoutingGroupCtrlType',0,19,57,3
	.word	4236
	.byte	7,19,63,9,1,8
	.byte	'SOAD_UL_DOIP',0,0,8
	.byte	'SOAD_UL_UDPNM',0,1,8
	.byte	'SOAD_UL_PDUR',0,2,8
	.byte	'SOAD_UL_XCP',0,3,8
	.byte	'SOAD_UL_MAX',0,4,0,15
	.byte	'SoAd_ULIndexType',0,19,71,3
	.word	4312
	.byte	15
	.byte	'SoAd_RemoteAddressType',0,20,113,32
	.word	3120
	.byte	7,20,115,9,1,8
	.byte	'SOAD_SOCON_UNINIT',0,0,8
	.byte	'SOAD_SOCON_OFFLINE',0,1,8
	.byte	'SOAD_SOCON_RECONN',0,2,8
	.byte	'SOAD_SOCON_ONLINE',0,3,0,15
	.byte	'SoAd_SoConModeType',0,20,121,3
	.word	4448
	.byte	16
	.word	195
	.byte	3
	.word	4562
	.byte	16
	.word	195
	.byte	3
	.word	4572
	.byte	16
	.word	195
	.byte	3
	.word	4582
	.byte	16
	.word	4312
	.byte	3
	.word	4592
	.byte	23,20,129,1,9,36,6
	.byte	'IfBufferLength',0
	.word	173
	.byte	2,2,35,0,6
	.byte	'IfBufferOffset',0
	.word	173
	.byte	2,2,35,2,6
	.byte	'TpBufferLength',0
	.word	173
	.byte	2,2,35,4,6
	.byte	'TpBufferOffset',0
	.word	173
	.byte	2,2,35,6,6
	.byte	'PduRouteNum',0
	.word	195
	.byte	1,2,35,8,6
	.byte	'SocketRouteNum',0
	.word	195
	.byte	1,2,35,9,6
	.byte	'PduRouteDestNum',0
	.word	195
	.byte	1,2,35,10,6
	.byte	'RemoteAddrState',0
	.word	195
	.byte	1,2,35,11,6
	.byte	'RemoteAddr',0
	.word	3120
	.byte	8,2,35,12,6
	.byte	'PduRouteDestList',0
	.word	4567
	.byte	4,2,35,20,6
	.byte	'PduRouteList',0
	.word	4577
	.byte	4,2,35,24,6
	.byte	'SocketRouteList',0
	.word	4587
	.byte	4,2,35,28,6
	.byte	'SoConModeChgList',0
	.word	4597
	.byte	4,2,35,32,0,15
	.byte	'SoAd_SocketConnectionType',0,20,146,1,3
	.word	4602
	.byte	23,20,148,1,9,16,6
	.byte	'CtrlFlag',0
	.word	195
	.byte	1,2,35,0,6
	.byte	'KeepAliveProbesMax',0
	.word	173
	.byte	2,2,35,2,6
	.byte	'KeepAliveInterval',0
	.word	625
	.byte	4,2,35,4,6
	.byte	'KeepAliveTime',0
	.word	625
	.byte	4,2,35,8,6
	.byte	'TxQuota',0
	.word	625
	.byte	4,2,35,12,0,15
	.byte	'SoAd_TcpProtocolType',0,20,155,1,3
	.word	4954
	.byte	23,20,157,1,9,12,6
	.byte	'CtrlFlag',0
	.word	195
	.byte	1,2,35,0,6
	.byte	'nPduTxBufferMin',0
	.word	173
	.byte	2,2,35,2,6
	.byte	'TriggerTimeout',0
	.word	173
	.byte	2,2,35,4,6
	.byte	'AliveSupervisionTimeout',0
	.word	625
	.byte	4,2,35,6,0,15
	.byte	'SoAd_UdpProtocolType',0,20,163,1,3
	.word	5104
	.byte	16
	.word	4954
	.byte	3
	.word	5241
	.byte	16
	.word	5104
	.byte	3
	.word	5251
	.byte	23,20,165,1,9,24,6
	.byte	'GroupId',0
	.word	195
	.byte	1,2,35,0,6
	.byte	'CtrlFlag',0
	.word	195
	.byte	1,2,35,1,6
	.byte	'FramePriority',0
	.word	195
	.byte	1,2,35,2,6
	.byte	'SoConNum',0
	.word	195
	.byte	1,2,35,3,6
	.byte	'SoConId',0
	.word	195
	.byte	1,2,35,4,6
	.byte	'IpAddrAssignChgNum',0
	.word	195
	.byte	1,2,35,5,6
	.byte	'LocalAddrId',0
	.word	195
	.byte	1,2,35,6,6
	.byte	'LocalPort',0
	.word	173
	.byte	2,2,35,8,6
	.byte	'IpAddrAssignChgList',0
	.word	4597
	.byte	4,2,35,12,6
	.byte	'TcpProtocolPtr',0
	.word	5246
	.byte	4,2,35,16,6
	.byte	'UdpProtocolPtr',0
	.word	5256
	.byte	4,2,35,20,0,15
	.byte	'SoAd_SocketConnectionGroupType',0,20,178,1,3
	.word	5261
	.byte	16
	.word	195
	.byte	3
	.word	5546
	.byte	23,20,180,1,9,12,6
	.byte	'CtrlFlag',0
	.word	195
	.byte	1,2,35,0,6
	.byte	'PduRouteDestNum',0
	.word	195
	.byte	1,2,35,1,6
	.byte	'SocketRouteDestNum',0
	.word	195
	.byte	1,2,35,2,6
	.byte	'PduRouteDestList',0
	.word	5551
	.byte	4,2,35,4,6
	.byte	'SocketRouteDestList',0
	.word	5551
	.byte	4,2,35,8,0,15
	.byte	'SoAd_RoutingGroupType',0,20,187,1,3
	.word	5556
	.byte	23,20,189,1,9,6,6
	.byte	'ULType',0
	.word	195
	.byte	1,2,35,0,6
	.byte	'ULIndex',0
	.word	4312
	.byte	1,2,35,1,6
	.byte	'CtrlFlag',0
	.word	195
	.byte	1,2,35,2,6
	.byte	'RouteDestNum',0
	.word	195
	.byte	1,2,35,3,6
	.byte	'RouteDestId',0
	.word	195
	.byte	1,2,35,4,6
	.byte	'TxPduId',0
	.word	195
	.byte	1,2,35,5,0,15
	.byte	'SoAd_PduRouteType',0,20,204,1,3
	.word	5720
	.byte	3
	.word	4236
	.byte	23,20,206,1,9,20,6
	.byte	'TxPduHeaderId',0
	.word	625
	.byte	4,2,35,0,6
	.byte	'SoConNum',0
	.word	195
	.byte	1,2,35,4,6
	.byte	'SoConId',0
	.word	195
	.byte	1,2,35,5,6
	.byte	'PduRouteId',0
	.word	195
	.byte	1,2,35,6,6
	.byte	'UdpTriggerMode',0
	.word	195
	.byte	1,2,35,7,6
	.byte	'UdpTriggerTimeout',0
	.word	173
	.byte	2,2,35,8,6
	.byte	'RoutingCtrlList',0
	.word	5865
	.byte	4,2,35,12,6
	.byte	'IfTriggerList',0
	.word	2904
	.byte	4,2,35,16,0,15
	.byte	'SoAd_PduRouteDestType',0,20,217,1,3
	.word	5870
	.byte	23,20,219,1,9,16,6
	.byte	'RxPduHeaderId',0
	.word	625
	.byte	4,2,35,0,6
	.byte	'ULType',0
	.word	195
	.byte	1,2,35,4,6
	.byte	'ULIndex',0
	.word	4312
	.byte	1,2,35,5,6
	.byte	'SoConNum',0
	.word	195
	.byte	1,2,35,6,6
	.byte	'SoConId',0
	.word	195
	.byte	1,2,35,7,6
	.byte	'RxPduId',0
	.word	195
	.byte	1,2,35,8,6
	.byte	'RoutingCtrlList',0
	.word	5865
	.byte	4,2,35,12,0,15
	.byte	'SoAd_SocketRouteType',0,20,236,1,3
	.word	6085
	.byte	16
	.word	5870
	.byte	3
	.word	6255
	.byte	23,20,155,2,9,24,6
	.byte	'State',0
	.word	195
	.byte	1,2,35,0,6
	.byte	'Timer',0
	.word	173
	.byte	2,2,35,2,6
	.byte	'BufferLength',0
	.word	173
	.byte	2,2,35,4,6
	.byte	'BufferOffset',0
	.word	173
	.byte	2,2,35,6,6
	.byte	'UdpTxBuffer',0
	.word	2904
	.byte	4,2,35,8,6
	.byte	'TotalTxLength',0
	.word	173
	.byte	2,2,35,12,6
	.byte	'UsedTxLength',0
	.word	173
	.byte	2,2,35,14,6
	.byte	'IfTxDataBuffer',0
	.word	5551
	.byte	4,2,35,16,6
	.byte	'PduRouteDestPtr',0
	.word	6260
	.byte	4,2,35,20,0,15
	.byte	'SoAd_TxSessionType',0,20,177,2,3
	.word	6265
	.byte	16
	.word	6085
	.byte	3
	.word	6489
	.byte	23,20,180,2,9,8,6
	.byte	'PduLength',0
	.word	173
	.byte	2,2,35,0,6
	.byte	'RemainLength',0
	.word	173
	.byte	2,2,35,2,6
	.byte	'SocketRoutePtr',0
	.word	6494
	.byte	4,2,35,4,0,15
	.byte	'SoAd_RxPduInfoType',0,20,185,2,3
	.word	6499
	.byte	23,20,187,2,9,12,6
	.byte	'TotalLength',0
	.word	173
	.byte	2,2,35,0,6
	.byte	'In',0
	.word	173
	.byte	2,2,35,2,6
	.byte	'Out',0
	.word	173
	.byte	2,2,35,4,6
	.byte	'BufferPtr',0
	.word	2904
	.byte	4,2,35,8,0,15
	.byte	'SoAd_RxFifoType',0,20,193,2,3
	.word	6599
	.byte	23,20,195,2,9,8,6
	.byte	'TotalLength',0
	.word	173
	.byte	2,2,35,0,6
	.byte	'UsedLength',0
	.word	173
	.byte	2,2,35,2,6
	.byte	'BufferPtr',0
	.word	2904
	.byte	4,2,35,4,0,15
	.byte	'SoAd_RxBufferType',0,20,200,2,3
	.word	6696
	.byte	18,8
	.word	195
	.byte	19,7,0,23,20,202,2,9,48,6
	.byte	'State',0
	.word	195
	.byte	1,2,35,0,6
	.byte	'ValidHeaderLen',0
	.word	195
	.byte	1,2,35,1,6
	.byte	'PduHeader',0
	.word	6790
	.byte	8,2,35,2,6
	.byte	'RxPduInfo',0
	.word	6499
	.byte	8,2,35,12,6
	.byte	'ProcessPduInfo',0
	.word	6499
	.byte	8,2,35,20,6
	.byte	'IfBuffer',0
	.word	6696
	.byte	8,2,35,28,6
	.byte	'TpBuffer',0
	.word	6599
	.byte	12,2,35,36,0,15
	.byte	'SoAd_RxSessionType',0,20,216,2,3
	.word	6799
	.byte	15
	.byte	'size_t',0,21,57,25
	.word	625
	.byte	15
	.byte	'u8_t',0,21,61,25
	.word	195
	.byte	15
	.byte	's8_t',0,21,62,25
	.word	986
	.byte	15
	.byte	'u16_t',0,21,63,25
	.word	173
	.byte	15
	.byte	's16_t',0,21,64,25
	.word	548
	.byte	15
	.byte	'u32_t',0,21,65,25
	.word	625
	.byte	15
	.byte	'err_t',0,22,96,14
	.word	986
	.byte	15
	.byte	'pbuf_layer',0,1,112,3
	.word	357
	.byte	15
	.byte	'pbuf_type',0,1,168,1,3
	.word	427
	.byte	15
	.byte	'ip4_addr_t',0,4,57,25
	.word	957
	.byte	15
	.byte	'ip_addr_t',0,23,142,2,20
	.word	957
	.byte	16
	.word	957
	.byte	24
	.byte	'ip_addr_any',0,23,241,2,24
	.word	7144
	.byte	1,1,15
	.byte	'memp_t',0,6,56,3
	.word	1601
	.byte	24
	.byte	'netif_list',0,5,149,3,22
	.word	952
	.byte	1,1,5
	.byte	'ip4_addr_packed',0,24,53,8,4,6
	.byte	'addr',0
	.word	625
	.byte	4,2,35,0,0,15
	.byte	'ip4_addr_p_t',0,24,61,32
	.word	7209
	.byte	5
	.byte	'ip_hdr',0,24,73,8,20,6
	.byte	'_v_hl',0
	.word	195
	.byte	1,2,35,0,6
	.byte	'_tos',0
	.word	195
	.byte	1,2,35,1,6
	.byte	'_len',0
	.word	173
	.byte	2,2,35,2,6
	.byte	'_id',0
	.word	173
	.byte	2,2,35,4,6
	.byte	'_offset',0
	.word	173
	.byte	2,2,35,6,6
	.byte	'_ttl',0
	.word	195
	.byte	1,2,35,8,6
	.byte	'_proto',0
	.word	195
	.byte	1,2,35,9,6
	.byte	'_chksum',0
	.word	173
	.byte	2,2,35,10,6
	.byte	'src',0
	.word	7209
	.byte	4,2,35,12,6
	.byte	'dest',0
	.word	7209
	.byte	4,2,35,16,0,16
	.word	7266
	.byte	3
	.word	7426
	.byte	5
	.byte	'ip_globals',0,25,107,8,24,6
	.byte	'current_netif',0
	.word	952
	.byte	4,2,35,0,6
	.byte	'current_input_netif',0
	.word	952
	.byte	4,2,35,4,6
	.byte	'current_ip4_header',0
	.word	7431
	.byte	4,2,35,8,6
	.byte	'current_ip_header_tot_len',0
	.word	173
	.byte	2,2,35,12,6
	.byte	'current_iphdr_src',0
	.word	957
	.byte	4,2,35,14,6
	.byte	'current_iphdr_dest',0
	.word	957
	.byte	4,2,35,18,0,24
	.byte	'ip_data',0,25,128,1,26
	.word	7436
	.byte	1,1,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L197:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,59,0,3,8,0,0,3,15,0,73,19,0,0,4,36,0,3,8,11,15,62,15,0
	.byte	0,5,19,1,3,8,58,15,59,15,57,15,11,15,0,0,6,13,0,3,8,73,19,11,15,56,9,0,0,7,4,1,58,15,59,15,57,15,11,15
	.byte	0,0,8,40,0,3,8,28,13,0,0,9,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,10,5,0,3,8,58
	.byte	15,59,15,57,15,73,19,0,0,11,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,12,5,0,58,15,59,15
	.byte	57,15,73,19,0,0,13,21,1,73,19,54,15,39,12,0,0,14,5,0,73,19,0,0,15,22,0,3,8,58,15,59,15,57,15,73,19,0,0
	.byte	16,38,0,73,19,0,0,17,21,1,54,15,39,12,0,0,18,1,1,11,15,73,19,0,0,19,33,0,47,15,0,0,20,4,1,3,8,58,15,59
	.byte	15,57,15,11,15,0,0,21,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,22,21,0,54,15,0,0,23,19,1,58,15
	.byte	59,15,57,15,11,15,0,0,24,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L198:
	.word	.L511-.L510
.L510:
	.half	3
	.word	.L513-.L512
.L512:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip',0
	.byte	'C:\\tasking\\ctc\\include\\',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch',0,0
	.byte	'pbuf.h',0,1,0,0
	.byte	'string.h',0,2,0,0
	.byte	'def.h',0,1,0,0
	.byte	'ip4_addr.h',0,1,0,0
	.byte	'netif.h',0,1,0,0
	.byte	'memp.h',0,1,0,0
	.byte	'ip4.h',0,1,0,0
	.byte	'udp.h',0,1,0,0
	.byte	'udp.h',0,3,0,0
	.byte	'inet_chksum.h',0,1,0,0
	.byte	'icmp.h',0,1,0,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0,0,0,0
	.byte	'Platform_Types.h',0,4,0,0
	.byte	'Std_Types.h',0,4,0,0
	.byte	'ComStack_Types_Cfg.h',0,5,0,0
	.byte	'ComStack_Types.h',0,6,0,0
	.byte	'TcpIp_GeneratedTypes.h',0,5,0,0
	.byte	'TcpIp_Types.h',0,7,0,0
	.byte	'SoAd_GeneratedTypes.h',0,5,0,0
	.byte	'SoAd_Types.h',0,8,0,0
	.byte	'cc.h',0,9,0,0
	.byte	'err.h',0,1,0,0
	.byte	'ip_addr.h',0,1,0,0
	.byte	'ip4.h',0,3,0,0
	.byte	'ip.h',0,1,0,0,0
.L513:
.L511:
	.sdecl	'.debug_info',debug,cluster('udp_new')
	.sect	'.debug_info'
.L199:
	.word	228
	.half	3
	.word	.L200
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L202,.L201
	.byte	2
	.word	.L195
	.byte	3
	.byte	'udp_new',0,1,201,9,1
	.word	.L288
	.byte	1,1,1
	.word	.L190,.L289,.L189
	.byte	4
	.word	.L190,.L289
	.byte	5
	.byte	'pcb',0,1,203,9,19
	.word	.L288,.L290
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('udp_new')
	.sect	'.debug_abbrev'
.L200:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('udp_new')
	.sect	'.debug_line'
.L201:
	.word	.L515-.L514
.L514:
	.half	3
	.word	.L517-.L516
.L516:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0,0,0,0,0
.L517:
	.byte	5,39,7,0,5,2
	.word	.L190
	.byte	3,206,9,1,5,7,9
	.half	.L503-.L190
	.byte	1,5,3,9
	.half	.L505-.L503
	.byte	3,2,1,5,17,7,9
	.half	.L518-.L505
	.byte	3,5,1,5,20,9
	.half	.L519-.L518
	.byte	1,5,16,9
	.half	.L506-.L519
	.byte	3,1,1,5,14,9
	.half	.L520-.L506
	.byte	1,5,3,9
	.half	.L151-.L520
	.byte	3,5,1,5,1,9
	.half	.L507-.L151
	.byte	3,1,1,7,9
	.half	.L203-.L507
	.byte	0,1,1
.L515:
	.sdecl	'.debug_ranges',debug,cluster('udp_new')
	.sect	'.debug_ranges'
.L202:
	.word	-1,.L190,0,.L203-.L190,0,0
	.sdecl	'.debug_info',debug,cluster('udp_new_ip_type')
	.sect	'.debug_info'
.L204:
	.word	254
	.half	3
	.word	.L205
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L207,.L206
	.byte	2
	.word	.L195
	.byte	3
	.byte	'udp_new_ip_type',0,1,238,9,1
	.word	.L288
	.byte	1,1,1
	.word	.L192,.L291,.L191
	.byte	4
	.byte	'type',0,1,238,9,22
	.word	.L292,.L293
	.byte	5
	.word	.L192,.L291
	.byte	6
	.byte	'pcb',0,1,240,9,19
	.word	.L288,.L294
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('udp_new_ip_type')
	.sect	'.debug_abbrev'
.L205:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('udp_new_ip_type')
	.sect	'.debug_line'
.L206:
	.word	.L522-.L521
.L521:
	.half	3
	.word	.L524-.L523
.L523:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0,0,0,0,0
.L524:
	.byte	5,16,7,0,5,2
	.word	.L192
	.byte	3,243,9,1,5,1,7,9
	.half	.L208-.L192
	.byte	3,10,0,1,1
.L522:
	.sdecl	'.debug_ranges',debug,cluster('udp_new_ip_type')
	.sect	'.debug_ranges'
.L207:
	.word	-1,.L192,0,.L208-.L192,0,0
	.sdecl	'.debug_info',debug,cluster('udp_remove')
	.sect	'.debug_info'
.L209:
	.word	245
	.half	3
	.word	.L210
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L212,.L211
	.byte	2
	.word	.L195
	.byte	3
	.byte	'udp_remove',0,1,162,9,1,1,1,1
	.word	.L188,.L295,.L187
	.byte	4
	.byte	'pcb',0,1,162,9,28
	.word	.L288,.L296
	.byte	5
	.word	.L188,.L295
	.byte	6
	.byte	'pcb2',0,1,164,9,19
	.word	.L288,.L297
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('udp_remove')
	.sect	'.debug_abbrev'
.L210:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('udp_remove')
	.sect	'.debug_line'
.L211:
	.word	.L526-.L525
.L525:
	.half	3
	.word	.L528-.L527
.L527:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0,0,0,0,0
.L528:
	.byte	5,3,7,0,5,2
	.word	.L188
	.byte	3,167,9,1,5,7,7,9
	.half	.L529-.L188
	.byte	3,4,1,5,3,9
	.half	.L530-.L529
	.byte	1,5,24,7,9
	.half	.L531-.L530
	.byte	3,2,1,5,14,9
	.half	.L532-.L531
	.byte	1,5,30,9
	.half	.L533-.L532
	.byte	1,5,1,9
	.half	.L143-.L533
	.byte	3,13,1,5,17,7,9
	.half	.L144-.L143
	.byte	3,118,1,5,39,9
	.half	.L502-.L144
	.byte	1,5,15,9
	.half	.L147-.L502
	.byte	3,2,1,5,11,9
	.half	.L534-.L147
	.byte	1,5,37,7,9
	.half	.L535-.L534
	.byte	1,5,44,9
	.half	.L536-.L535
	.byte	1,5,25,7,9
	.half	.L537-.L536
	.byte	3,2,1,5,20,9
	.half	.L538-.L537
	.byte	1,5,9,9
	.half	.L539-.L538
	.byte	3,1,1,5,52,9
	.half	.L148-.L539
	.byte	3,123,1,5,39,9
	.half	.L146-.L148
	.byte	1,5,13,7,9
	.half	.L145-.L146
	.byte	3,9,1,5,27,9
	.half	.L540-.L145
	.byte	1,5,1,7,9
	.half	.L213-.L540
	.byte	3,1,0,1,1
.L526:
	.sdecl	'.debug_ranges',debug,cluster('udp_remove')
	.sect	'.debug_ranges'
.L212:
	.word	-1,.L188,0,.L213-.L188,0,0
	.sdecl	'.debug_info',debug,cluster('udp_bind')
	.sect	'.debug_info'
.L214:
	.word	305
	.half	3
	.word	.L215
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L217,.L216
	.byte	2
	.word	.L195
	.byte	3
	.byte	'udp_bind',0,1,170,7,1
	.word	.L298
	.byte	1,1,1
	.word	.L178,.L299,.L177
	.byte	4
	.byte	'pcb',0,1,170,7,26
	.word	.L288,.L300
	.byte	4
	.byte	'ipaddr',0,1,170,7,48
	.word	.L301,.L302
	.byte	4
	.byte	'port',0,1,170,7,62
	.word	.L303,.L304
	.byte	5
	.word	.L178,.L299
	.byte	6
	.byte	'ipcb',0,1,172,7,19
	.word	.L288,.L305
	.byte	6
	.byte	'rebind',0,1,173,7,8
	.word	.L292,.L306
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('udp_bind')
	.sect	'.debug_abbrev'
.L215:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('udp_bind')
	.sect	'.debug_line'
.L216:
	.word	.L542-.L541
.L541:
	.half	3
	.word	.L544-.L543
.L543:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0,0,0,0,0
.L544:
	.byte	5,1,7,0,5,2
	.word	.L178
	.byte	3,169,7,1,5,3,9
	.half	.L488-.L178
	.byte	3,12,1,5,14,7,9
	.half	.L545-.L488
	.byte	3,1,1,5,3,9
	.half	.L100-.L545
	.byte	3,6,1,7,9
	.half	.L546-.L100
	.byte	1,5,1,9
	.half	.L547-.L546
	.byte	3,205,0,1,5,10,7,9
	.half	.L101-.L547
	.byte	3,185,127,1,5,15,9
	.half	.L489-.L101
	.byte	3,2,1,5,37,9
	.half	.L490-.L489
	.byte	1,5,5,9
	.half	.L104-.L490
	.byte	3,2,1,5,14,7,9
	.half	.L548-.L104
	.byte	3,1,1,5,7,9
	.half	.L549-.L548
	.byte	3,1,1,5,50,9
	.half	.L105-.L549
	.byte	3,124,1,5,37,9
	.half	.L103-.L105
	.byte	1,5,3,7,9
	.half	.L106-.L103
	.byte	3,21,1,5,24,7,9
	.half	.L550-.L106
	.byte	3,1,1,5,10,9
	.half	.L486-.L550
	.byte	1,5,5,9
	.half	.L492-.L486
	.byte	3,1,1,5,7,7,9
	.half	.L551-.L492
	.byte	3,3,1,5,17,9
	.half	.L107-.L551
	.byte	3,3,1,5,39,9
	.half	.L493-.L107
	.byte	1,5,7,9
	.half	.L111-.L493
	.byte	3,1,1,5,14,7,9
	.half	.L552-.L111
	.byte	3,5,1,9
	.half	.L553-.L552
	.byte	3,1,1,5,20,9
	.half	.L113-.L553
	.byte	3,4,1,5,15,9
	.half	.L554-.L113
	.byte	1,5,17,7,9
	.half	.L555-.L554
	.byte	3,1,1,5,35,9
	.half	.L556-.L555
	.byte	1,5,29,9
	.half	.L557-.L556
	.byte	1,5,16,7,9
	.half	.L558-.L557
	.byte	3,2,1,5,56,9
	.half	.L559-.L558
	.byte	1,7,9
	.half	.L560-.L559
	.byte	1,5,15,7,9
	.half	.L561-.L560
	.byte	3,1,1,7,9
	.half	.L562-.L561
	.byte	1,5,20,7,9
	.half	.L109-.L562
	.byte	3,4,1,5,1,9
	.half	.L563-.L109
	.byte	3,21,1,5,52,7,9
	.half	.L112-.L563
	.byte	3,88,1,5,39,9
	.half	.L110-.L112
	.byte	1,5,3,7,9
	.half	.L108-.L110
	.byte	3,26,1,7,9
	.half	.L564-.L108
	.byte	1,5,19,9
	.half	.L565-.L564
	.byte	3,2,1,5,3,9
	.half	.L566-.L565
	.byte	3,3,1,5,17,7,9
	.half	.L567-.L566
	.byte	3,2,1,5,15,9
	.half	.L568-.L567
	.byte	1,5,14,9
	.half	.L569-.L568
	.byte	3,1,1,5,10,9
	.half	.L125-.L569
	.byte	3,5,1,5,1,9
	.half	.L570-.L125
	.byte	3,1,1,7,9
	.half	.L218-.L570
	.byte	0,1,1
.L542:
	.sdecl	'.debug_ranges',debug,cluster('udp_bind')
	.sect	'.debug_ranges'
.L217:
	.word	-1,.L178,0,.L218-.L178,0,0
	.sdecl	'.debug_info',debug,cluster('udp_bind_netif')
	.sect	'.debug_info'
.L219:
	.word	249
	.half	3
	.word	.L220
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L222,.L221
	.byte	2
	.word	.L195
	.byte	3
	.byte	'udp_bind_netif',0,1,153,8,1,1,1,1
	.word	.L180,.L307,.L179
	.byte	4
	.byte	'pcb',0,1,153,8,32
	.word	.L288,.L308
	.byte	4
	.byte	'netif',0,1,153,8,57
	.word	.L309,.L310
	.byte	5
	.word	.L180,.L307
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('udp_bind_netif')
	.sect	'.debug_abbrev'
.L220:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('udp_bind_netif')
	.sect	'.debug_line'
.L221:
	.word	.L572-.L571
.L571:
	.half	3
	.word	.L574-.L573
.L573:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0,0,0,0,0
.L574:
	.byte	5,3,7,0,5,2
	.word	.L180
	.byte	3,156,8,1,5,22,7,9
	.half	.L575-.L180
	.byte	3,1,1,5,20,9
	.half	.L576-.L575
	.byte	1,5,1,9
	.half	.L577-.L576
	.byte	3,4,1,5,22,7,9
	.half	.L127-.L577
	.byte	3,126,1,5,20,9
	.half	.L578-.L127
	.byte	1,5,1,9
	.half	.L579-.L578
	.byte	3,2,1,7,9
	.half	.L223-.L579
	.byte	0,1,1
.L572:
	.sdecl	'.debug_ranges',debug,cluster('udp_bind_netif')
	.sect	'.debug_ranges'
.L222:
	.word	-1,.L180,0,.L223-.L180,0,0
	.sdecl	'.debug_info',debug,cluster('udp_connect')
	.sect	'.debug_info'
.L224:
	.word	315
	.half	3
	.word	.L225
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L227,.L226
	.byte	2
	.word	.L195
	.byte	3
	.byte	'udp_connect',0,1,182,8,1
	.word	.L298
	.byte	1,1,1
	.word	.L182,.L311,.L181
	.byte	4
	.byte	'pcb',0,1,182,8,29
	.word	.L288,.L312
	.byte	4
	.byte	'ipaddr',0,1,182,8,51
	.word	.L301,.L313
	.byte	4
	.byte	'port',0,1,182,8,65
	.word	.L303,.L314
	.byte	5
	.word	.L182,.L311
	.byte	6
	.byte	'ipcb',0,1,184,8,19
	.word	.L288,.L315
	.byte	5
	.word	.L316,.L132
	.byte	6
	.byte	'err',0,1,192,8,11
	.word	.L298,.L317
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('udp_connect')
	.sect	'.debug_abbrev'
.L225:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('udp_connect')
	.sect	'.debug_line'
.L226:
	.word	.L581-.L580
.L580:
	.half	3
	.word	.L583-.L582
.L582:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0,0,0,0,0
.L583:
	.byte	5,1,7,0,5,2
	.word	.L182
	.byte	3,181,8,1,5,3,9
	.half	.L498-.L182
	.byte	3,6,1,7,9
	.half	.L584-.L498
	.byte	3,1,1,7,9
	.half	.L129-.L584
	.byte	1,5,1,9
	.half	.L585-.L129
	.byte	3,38,1,5,10,7,9
	.half	.L130-.L585
	.byte	3,92,1,5,3,9
	.half	.L586-.L130
	.byte	1,5,50,7,9
	.half	.L316-.L586
	.byte	3,1,1,5,5,9
	.half	.L499-.L316
	.byte	3,1,1,5,3,7,9
	.half	.L132-.L499
	.byte	3,5,1,7,9
	.half	.L587-.L132
	.byte	1,5,20,9
	.half	.L588-.L587
	.byte	3,10,1,5,6,9
	.half	.L589-.L588
	.byte	3,1,1,5,14,9
	.half	.L590-.L589
	.byte	1,5,15,9
	.half	.L591-.L590
	.byte	3,8,1,5,37,9
	.half	.L500-.L591
	.byte	1,5,5,9
	.half	.L138-.L500
	.byte	3,1,1,5,50,7,9
	.half	.L592-.L138
	.byte	3,127,1,5,37,9
	.half	.L137-.L592
	.byte	1,5,15,7,9
	.half	.L593-.L137
	.byte	3,7,1,5,13,9
	.half	.L594-.L593
	.byte	1,5,12,9
	.half	.L595-.L594
	.byte	3,1,1,5,10,9
	.half	.L139-.L595
	.byte	3,1,1,5,1,9
	.half	.L134-.L139
	.byte	3,1,1,7,9
	.half	.L228-.L134
	.byte	0,1,1
.L581:
	.sdecl	'.debug_ranges',debug,cluster('udp_connect')
	.sect	'.debug_ranges'
.L227:
	.word	-1,.L182,0,.L228-.L182,0,0
	.sdecl	'.debug_info',debug,cluster('udp_disconnect')
	.sect	'.debug_info'
.L229:
	.word	230
	.half	3
	.word	.L230
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L232,.L231
	.byte	2
	.word	.L195
	.byte	3
	.byte	'udp_disconnect',0,1,237,8,1,1,1,1
	.word	.L184,.L318,.L183
	.byte	4
	.byte	'pcb',0,1,237,8,32
	.word	.L288,.L319
	.byte	5
	.word	.L184,.L318
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('udp_disconnect')
	.sect	'.debug_abbrev'
.L230:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('udp_disconnect')
	.sect	'.debug_line'
.L231:
	.word	.L597-.L596
.L596:
	.half	3
	.word	.L599-.L598
.L598:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0,0,0,0,0
.L599:
	.byte	5,3,7,0,5,2
	.word	.L184
	.byte	3,240,8,1,5,5,7,9
	.half	.L600-.L184
	.byte	3,8,1,5,20,9
	.half	.L601-.L600
	.byte	3,4,1,5,18,9
	.half	.L602-.L601
	.byte	3,1,1,5,3,9
	.half	.L603-.L602
	.byte	3,2,1,5,1,9
	.half	.L141-.L603
	.byte	3,1,1,7,9
	.half	.L233-.L141
	.byte	0,1,1
.L597:
	.sdecl	'.debug_ranges',debug,cluster('udp_disconnect')
	.sect	'.debug_ranges'
.L232:
	.word	-1,.L184,0,.L233-.L184,0,0
	.sdecl	'.debug_info',debug,cluster('udp_recv')
	.sect	'.debug_info'
.L234:
	.word	264
	.half	3
	.word	.L235
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L237,.L236
	.byte	2
	.word	.L195
	.byte	3
	.byte	'udp_recv',0,1,141,9,1,1,1,1
	.word	.L186,.L320,.L185
	.byte	4
	.byte	'pcb',0,1,141,9,26
	.word	.L288,.L321
	.byte	4
	.byte	'recv',0,1,141,9,43
	.word	.L322,.L323
	.byte	4
	.byte	'recv_arg',0,1,141,9,55
	.word	.L324,.L325
	.byte	5
	.word	.L186,.L320
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('udp_recv')
	.sect	'.debug_abbrev'
.L235:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('udp_recv')
	.sect	'.debug_line'
.L236:
	.word	.L605-.L604
.L604:
	.half	3
	.word	.L607-.L606
.L606:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0,0,0,0,0
.L607:
	.byte	5,3,7,0,5,2
	.word	.L186
	.byte	3,144,9,1,5,13,7,9
	.half	.L608-.L186
	.byte	3,3,1,5,17,9
	.half	.L609-.L608
	.byte	3,1,1,5,1,9
	.half	.L142-.L609
	.byte	3,1,1,7,9
	.half	.L238-.L142
	.byte	0,1,1
.L605:
	.sdecl	'.debug_ranges',debug,cluster('udp_recv')
	.sect	'.debug_ranges'
.L237:
	.word	-1,.L186,0,.L238-.L186,0,0
	.sdecl	'.debug_info',debug,cluster('udp_sendto_if')
	.sect	'.debug_info'
.L239:
	.word	330
	.half	3
	.word	.L240
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L242,.L241
	.byte	2
	.word	.L195
	.byte	3
	.byte	'udp_sendto_if',0,1,246,4,1
	.word	.L298
	.byte	1,1,1
	.word	.L174,.L326,.L173
	.byte	4
	.byte	'pcb',0,1,246,4,31
	.word	.L288,.L327
	.byte	4
	.byte	'p',0,1,246,4,49
	.word	.L328,.L329
	.byte	4
	.byte	'dst_ip',0,1,247,4,32
	.word	.L301,.L330
	.byte	4
	.byte	'dst_port',0,1,247,4,46
	.word	.L303,.L331
	.byte	4
	.byte	'netif',0,1,247,4,70
	.word	.L332,.L333
	.byte	5
	.word	.L174,.L326
	.byte	6
	.byte	'src_ip',0,1,132,5,20
	.word	.L301,.L334
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('udp_sendto_if')
	.sect	'.debug_abbrev'
.L240:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('udp_sendto_if')
	.sect	'.debug_line'
.L241:
	.word	.L611-.L610
.L610:
	.half	3
	.word	.L613-.L612
.L612:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0,0,0,0,0
.L613:
	.byte	5,1,7,0,5,2
	.word	.L174
	.byte	3,245,4,1,5,3,9
	.half	.L447-.L174
	.byte	3,16,1,7,9
	.half	.L614-.L447
	.byte	3,1,1,7,9
	.half	.L615-.L614
	.byte	3,1,1,7,9
	.half	.L616-.L615
	.byte	3,1,1,7,9
	.half	.L70-.L616
	.byte	1,5,1,9
	.half	.L617-.L70
	.byte	3,51,1,5,9,7,9
	.half	.L73-.L617
	.byte	3,107,1,7,9
	.half	.L618-.L73
	.byte	1,9
	.half	.L619-.L618
	.byte	3,1,1,5,16,9
	.half	.L75-.L619
	.byte	3,3,1,5,37,9
	.half	.L448-.L75
	.byte	1,5,12,9
	.half	.L77-.L448
	.byte	3,4,1,5,16,9
	.half	.L620-.L77
	.byte	3,2,1,5,1,9
	.half	.L621-.L620
	.byte	3,11,1,5,14,7,9
	.half	.L79-.L621
	.byte	3,120,1,5,61,9
	.half	.L78-.L79
	.byte	3,6,1,5,54,9
	.half	.L622-.L78
	.byte	1,5,1,7,9
	.half	.L243-.L622
	.byte	3,2,0,1,1
.L611:
	.sdecl	'.debug_ranges',debug,cluster('udp_sendto_if')
	.sect	'.debug_ranges'
.L242:
	.word	-1,.L174,0,.L243-.L174,0,0
	.sdecl	'.debug_info',debug,cluster('udp_sendto_if_src')
	.sect	'.debug_info'
.L244:
	.word	458
	.half	3
	.word	.L245
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L247,.L246
	.byte	2
	.word	.L195
	.byte	3
	.byte	'udp_sendto_if_src',0,1,193,5,1
	.word	.L298
	.byte	1,1,1
	.word	.L176,.L335,.L175
	.byte	4
	.byte	'pcb',0,1,193,5,35
	.word	.L288,.L336
	.byte	4
	.byte	'p',0,1,193,5,53
	.word	.L328,.L337
	.byte	4
	.byte	'dst_ip',0,1,194,5,36
	.word	.L301,.L338
	.byte	4
	.byte	'dst_port',0,1,194,5,50
	.word	.L303,.L339
	.byte	4
	.byte	'netif',0,1,194,5,74
	.word	.L332,.L340
	.byte	4
	.byte	'src_ip',0,1,194,5,98
	.word	.L301,.L341
	.byte	5
	.word	.L176,.L335
	.byte	6
	.byte	'udphdr',0,1,207,5,19
	.word	.L342,.L343
	.byte	6
	.byte	'err',0,1,208,5,9
	.word	.L298,.L344
	.byte	6
	.byte	'q',0,1,209,5,16
	.word	.L328,.L345
	.byte	6
	.byte	'ip_proto',0,1,210,5,8
	.word	.L292,.L346
	.byte	6
	.byte	'ttl',0,1,211,5,8
	.word	.L292,.L347
	.byte	5
	.word	.L348,.L96
	.byte	6
	.byte	'udpchksum',0,1,222,6,15
	.word	.L303,.L349
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('udp_sendto_if_src')
	.sect	'.debug_abbrev'
.L245:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('udp_sendto_if_src')
	.sect	'.debug_line'
.L246:
	.word	.L624-.L623
.L623:
	.half	3
	.word	.L626-.L625
.L625:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0,0,0,0,0
.L626:
	.byte	5,1,7,0,5,2
	.word	.L176
	.byte	3,192,5,1,5,3,9
	.half	.L457-.L176
	.byte	3,22,1,7,9
	.half	.L627-.L457
	.byte	3,1,1,7,9
	.half	.L628-.L627
	.byte	3,1,1,7,9
	.half	.L629-.L628
	.byte	3,1,1,9
	.half	.L630-.L629
	.byte	3,1,1,5,1,9
	.half	.L631-.L630
	.byte	3,184,1,1,5,10,7,9
	.half	.L86-.L631
	.byte	3,221,126,1,5,3,9
	.half	.L632-.L86
	.byte	1,5,44,7,9
	.half	.L633-.L632
	.byte	3,2,1,5,9,9
	.half	.L450-.L633
	.byte	1,5,5,9
	.half	.L461-.L450
	.byte	3,1,1,5,16,7,9
	.half	.L88-.L461
	.byte	3,7,1,5,26,9
	.half	.L634-.L88
	.byte	1,5,7,9
	.half	.L635-.L634
	.byte	1,5,3,9
	.half	.L636-.L635
	.byte	1,5,26,7,9
	.half	.L637-.L636
	.byte	3,4,1,5,3,9
	.half	.L463-.L637
	.byte	1,5,20,7,9
	.half	.L638-.L463
	.byte	3,2,1,5,29,9
	.half	.L639-.L638
	.byte	1,5,39,9
	.half	.L640-.L639
	.byte	1,5,7,9
	.half	.L464-.L640
	.byte	1,5,5,9
	.half	.L465-.L464
	.byte	3,2,1,5,14,7,9
	.half	.L90-.L465
	.byte	3,2,1,5,1,9
	.half	.L641-.L90
	.byte	3,143,1,1,5,10,7,9
	.half	.L92-.L641
	.byte	3,243,126,1,5,5,9
	.half	.L642-.L92
	.byte	1,5,21,7,9
	.half	.L643-.L642
	.byte	3,2,1,5,5,9
	.half	.L467-.L643
	.byte	3,126,1,5,7,9
	.half	.L91-.L467
	.byte	3,10,1,5,31,9
	.half	.L94-.L91
	.byte	3,6,1,9
	.half	.L460-.L94
	.byte	3,1,1,5,15,9
	.half	.L644-.L460
	.byte	1,5,29,9
	.half	.L645-.L644
	.byte	3,1,1,5,16,9
	.half	.L470-.L645
	.byte	1,5,20,9
	.half	.L646-.L470
	.byte	3,2,1,5,18,9
	.half	.L647-.L646
	.byte	1,5,31,9
	.half	.L648-.L647
	.byte	3,62,1,5,17,9
	.half	.L649-.L648
	.byte	1,5,35,9
	.half	.L650-.L649
	.byte	3,5,1,5,65,9
	.half	.L651-.L650
	.byte	1,5,43,7,9
	.half	.L348-.L651
	.byte	3,12,1,5,58,9
	.half	.L652-.L348
	.byte	1,5,48,9
	.half	.L653-.L652
	.byte	3,1,1,5,9,9
	.half	.L472-.L653
	.byte	3,4,1,5,21,7,9
	.half	.L654-.L472
	.byte	3,1,1,5,24,9
	.half	.L97-.L654
	.byte	3,2,1,5,14,9
	.half	.L96-.L97
	.byte	3,4,1,5,12,9
	.half	.L475-.L96
	.byte	3,7,1,5,9,9
	.half	.L477-.L475
	.byte	3,7,1,5,7,9
	.half	.L476-.L477
	.byte	1,5,3,9
	.half	.L482-.L476
	.byte	3,7,1,5,15,7,9
	.half	.L655-.L482
	.byte	3,2,1,5,3,9
	.half	.L89-.L655
	.byte	3,6,1,5,1,9
	.half	.L484-.L89
	.byte	3,1,1,7,9
	.half	.L248-.L484
	.byte	0,1,1
.L624:
	.sdecl	'.debug_ranges',debug,cluster('udp_sendto_if_src')
	.sect	'.debug_ranges'
.L247:
	.word	-1,.L176,0,.L248-.L176,0,0
	.sdecl	'.debug_info',debug,cluster('udp_sendto')
	.sect	'.debug_info'
.L249:
	.word	322
	.half	3
	.word	.L250
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L252,.L251
	.byte	2
	.word	.L195
	.byte	3
	.byte	'udp_sendto',0,1,139,4,1
	.word	.L298
	.byte	1,1,1
	.word	.L172,.L350,.L171
	.byte	4
	.byte	'pcb',0,1,139,4,28
	.word	.L288,.L351
	.byte	4
	.byte	'p',0,1,139,4,46
	.word	.L328,.L352
	.byte	4
	.byte	'dst_ip',0,1,140,4,29
	.word	.L301,.L353
	.byte	4
	.byte	'dst_port',0,1,140,4,43
	.word	.L303,.L354
	.byte	5
	.word	.L172,.L350
	.byte	6
	.byte	'i',0,1,153,4,8
	.word	.L292,.L355
	.byte	6
	.byte	'netif',0,1,154,4,17
	.word	.L332,.L356
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('udp_sendto')
	.sect	'.debug_abbrev'
.L250:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('udp_sendto')
	.sect	'.debug_line'
.L251:
	.word	.L657-.L656
.L656:
	.half	3
	.word	.L659-.L658
.L658:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0,0,0,0,0
.L659:
	.byte	5,1,7,0,5,2
	.word	.L172
	.byte	3,138,4,1,5,3,9
	.half	.L438-.L172
	.byte	3,17,1,7,9
	.half	.L660-.L438
	.byte	3,1,1,7,9
	.half	.L661-.L660
	.byte	3,1,1,7,9
	.half	.L58-.L661
	.byte	1,5,1,9
	.half	.L662-.L58
	.byte	3,193,0,1,5,10,7,9
	.half	.L60-.L662
	.byte	3,71,1,5,3,9
	.half	.L663-.L60
	.byte	1,5,39,7,9
	.half	.L664-.L663
	.byte	3,2,1,5,67,9
	.half	.L665-.L664
	.byte	1,5,112,9
	.half	.L439-.L665
	.byte	1,5,115,9
	.half	.L65-.L439
	.byte	1,5,132,1,9
	.half	.L440-.L65
	.byte	1,5,115,9
	.half	.L63-.L440
	.byte	1,5,80,9
	.half	.L441-.L63
	.byte	1,5,99,7,9
	.half	.L666-.L441
	.byte	1,7,9
	.half	.L667-.L666
	.byte	1,5,15,9
	.half	.L62-.L667
	.byte	3,38,1,5,3,9
	.half	.L66-.L62
	.byte	3,5,1,5,12,7,9
	.half	.L668-.L66
	.byte	3,5,1,5,1,9
	.half	.L669-.L668
	.byte	3,7,1,5,50,7,9
	.half	.L67-.L669
	.byte	3,126,1,5,1,9
	.half	.L253-.L67
	.byte	3,2,0,1,1
.L657:
	.sdecl	'.debug_ranges',debug,cluster('udp_sendto')
	.sect	'.debug_ranges'
.L252:
	.word	-1,.L172,0,.L253-.L172,0,0
	.sdecl	'.debug_info',debug,cluster('udp_send')
	.sect	'.debug_info'
.L254:
	.word	243
	.half	3
	.word	.L255
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L257,.L256
	.byte	2
	.word	.L195
	.byte	3
	.byte	'udp_send',0,1,214,3,1
	.word	.L298
	.byte	1,1,1
	.word	.L170,.L357,.L169
	.byte	4
	.byte	'pcb',0,1,214,3,26
	.word	.L288,.L358
	.byte	4
	.byte	'p',0,1,214,3,44
	.word	.L328,.L359
	.byte	5
	.word	.L170,.L357
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('udp_send')
	.sect	'.debug_abbrev'
.L255:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('udp_send')
	.sect	'.debug_line'
.L256:
	.word	.L671-.L670
.L670:
	.half	3
	.word	.L673-.L672
.L672:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0,0,0,0,0
.L673:
	.byte	5,3,7,0,5,2
	.word	.L170
	.byte	3,215,3,1,7,9
	.half	.L674-.L170
	.byte	3,1,1,7,9
	.half	.L54-.L674
	.byte	1,5,1,9
	.half	.L675-.L54
	.byte	3,8,1,5,33,7,9
	.half	.L55-.L675
	.byte	3,127,1,5,49,9
	.half	.L676-.L55
	.byte	1,5,1,9
	.half	.L258-.L676
	.byte	3,1,0,1,1
.L671:
	.sdecl	'.debug_ranges',debug,cluster('udp_send')
	.sect	'.debug_ranges'
.L257:
	.word	-1,.L170,0,.L258-.L170,0,0
	.sdecl	'.debug_info',debug,cluster('udp_input')
	.sect	'.debug_info'
.L259:
	.word	397
	.half	3
	.word	.L260
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L262,.L261
	.byte	2
	.word	.L195
	.byte	3
	.byte	'udp_input',0,1,194,1,1,1,1,1
	.word	.L168,.L360,.L167
	.byte	4
	.byte	'p',0,1,194,1,24
	.word	.L328,.L361
	.byte	4
	.byte	'inp',0,1,194,1,41
	.word	.L332,.L362
	.byte	5
	.word	.L168,.L360
	.byte	6
	.byte	'udphdr',0,1,196,1,19
	.word	.L342,.L363
	.byte	6
	.byte	'pcb',0,1,197,1,19
	.word	.L288,.L364
	.byte	6
	.byte	'prev',0,1,197,1,25
	.word	.L288,.L365
	.byte	6
	.byte	'uncon_pcb',0,1,198,1,19
	.word	.L288,.L366
	.byte	6
	.byte	'src',0,1,199,1,9
	.word	.L303,.L367
	.byte	6
	.byte	'dest',0,1,199,1,14
	.word	.L303,.L368
	.byte	6
	.byte	'broadcast',0,1,200,1,8
	.word	.L292,.L369
	.byte	6
	.byte	'for_us',0,1,201,1,8
	.word	.L292,.L370
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('udp_input')
	.sect	'.debug_abbrev'
.L260:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('udp_input')
	.sect	'.debug_line'
.L261:
	.word	.L678-.L677
.L677:
	.half	3
	.word	.L680-.L679
.L679:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0,0,0,0,0
.L680:
	.byte	5,1,7,0,5,2
	.word	.L168
	.byte	3,193,1,1,5,8,9
	.half	.L390-.L168
	.byte	3,21,1,5,3,9
	.half	.L681-.L390
	.byte	1,5,31,7,9
	.half	.L682-.L681
	.byte	3,11,1,5,15,9
	.half	.L394-.L682
	.byte	3,3,1,5,13,9
	.half	.L387-.L394
	.byte	1,5,9,9
	.half	.L396-.L387
	.byte	3,5,1,5,7,9
	.half	.L395-.L396
	.byte	1,5,10,9
	.half	.L400-.L395
	.byte	3,1,1,5,8,9
	.half	.L399-.L400
	.byte	1,9
	.half	.L401-.L399
	.byte	3,12,1,5,14,9
	.half	.L403-.L401
	.byte	3,6,1,5,13,9
	.half	.L404-.L403
	.byte	3,40,1,5,35,9
	.half	.L683-.L404
	.byte	3,88,1,5,11,9
	.half	.L24-.L683
	.byte	3,1,1,5,26,9
	.half	.L684-.L24
	.byte	1,5,33,9
	.half	.L685-.L684
	.byte	1,5,47,9
	.half	.L686-.L685
	.byte	1,5,5,9
	.half	.L687-.L686
	.byte	1,5,15,7,9
	.half	.L688-.L687
	.byte	3,10,1,5,11,9
	.half	.L689-.L688
	.byte	1,5,44,7,9
	.half	.L690-.L689
	.byte	3,1,1,5,55,9
	.half	.L407-.L690
	.byte	1,5,17,7,9
	.half	.L691-.L407
	.byte	3,1,1,5,9,9
	.half	.L692-.L691
	.byte	1,5,11,7,9
	.half	.L410-.L692
	.byte	3,1,1,5,22,7,9
	.half	.L411-.L410
	.byte	3,4,1,5,35,7,9
	.half	.L693-.L411
	.byte	1,5,58,9
	.half	.L694-.L693
	.byte	1,5,65,9
	.half	.L695-.L694
	.byte	1,5,56,7,9
	.half	.L412-.L695
	.byte	3,2,1,5,50,9
	.half	.L696-.L412
	.byte	3,2,1,5,13,9
	.half	.L697-.L696
	.byte	3,126,1,5,21,9
	.half	.L30-.L697
	.byte	3,10,1,7,9
	.half	.L698-.L30
	.byte	1,5,23,9
	.half	.L29-.L698
	.byte	3,2,1,5,17,9
	.half	.L28-.L29
	.byte	3,6,1,5,13,9
	.half	.L699-.L28
	.byte	1,5,14,7,9
	.half	.L700-.L699
	.byte	3,1,1,5,13,9
	.half	.L701-.L700
	.byte	3,1,1,5,11,9
	.half	.L38-.L701
	.byte	3,2,1,5,29,9
	.half	.L702-.L38
	.byte	3,3,1,5,24,9
	.half	.L415-.L702
	.byte	1,5,25,9
	.half	.L703-.L415
	.byte	3,1,1,5,23,9
	.half	.L417-.L703
	.byte	1,5,22,9
	.half	.L704-.L417
	.byte	3,1,1,5,11,9
	.half	.L705-.L704
	.byte	3,4,1,5,12,9
	.half	.L26-.L705
	.byte	3,4,1,5,46,9
	.half	.L25-.L26
	.byte	3,73,1,5,35,9
	.half	.L23-.L25
	.byte	1,5,3,7,9
	.half	.L40-.L23
	.byte	3,59,1,5,9,7,9
	.half	.L418-.L40
	.byte	3,1,1,5,3,9
	.half	.L42-.L418
	.byte	3,4,1,5,12,7,9
	.half	.L706-.L42
	.byte	3,1,1,5,15,9
	.half	.L419-.L706
	.byte	1,5,16,9
	.half	.L43-.L419
	.byte	3,9,1,5,3,9
	.half	.L44-.L43
	.byte	3,5,1,5,19,7,9
	.half	.L707-.L44
	.byte	3,27,1,5,9,9
	.half	.L420-.L707
	.byte	1,5,35,7,9
	.half	.L708-.L420
	.byte	3,1,1,5,50,9
	.half	.L709-.L708
	.byte	1,5,32,9
	.half	.L710-.L709
	.byte	3,1,1,9
	.half	.L711-.L710
	.byte	3,1,1,5,11,9
	.half	.L424-.L711
	.byte	3,126,1,5,31,7,9
	.half	.L46-.L424
	.byte	3,9,1,5,5,9
	.half	.L426-.L46
	.byte	1,7,9
	.half	.L712-.L426
	.byte	3,9,1,5,14,7,9
	.half	.L713-.L712
	.byte	3,27,1,5,7,9
	.half	.L714-.L713
	.byte	1,5,12,7,9
	.half	.L715-.L714
	.byte	3,2,1,5,22,9
	.half	.L716-.L715
	.byte	1,5,42,9
	.half	.L717-.L716
	.byte	1,5,65,9
	.half	.L718-.L717
	.byte	1,5,12,9
	.half	.L49-.L718
	.byte	3,12,1,5,26,7,9
	.half	.L719-.L49
	.byte	1,5,38,9
	.half	.L720-.L719
	.byte	3,2,1,5,66,9
	.half	.L721-.L720
	.byte	1,5,30,9
	.half	.L722-.L721
	.byte	1,5,9,9
	.half	.L431-.L722
	.byte	3,1,1,5,13,9
	.half	.L22-.L431
	.byte	3,21,1,5,1,9
	.half	.L263-.L22
	.byte	3,3,0,1,1
.L678:
	.sdecl	'.debug_ranges',debug,cluster('udp_input')
	.sect	'.debug_ranges'
.L262:
	.word	-1,.L168,0,.L263-.L168,0,0
	.sdecl	'.debug_info',debug,cluster('udp_init')
	.sect	'.debug_info'
.L264:
	.word	206
	.half	3
	.word	.L265
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L267,.L266
	.byte	2
	.word	.L195
	.byte	3
	.byte	'udp_init',0,1,87,1,1,1,1
	.word	.L162,.L371,.L161
	.byte	4
	.word	.L162,.L371
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('udp_init')
	.sect	'.debug_abbrev'
.L265:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('udp_init')
	.sect	'.debug_line'
.L266:
	.word	.L724-.L723
.L723:
	.half	3
	.word	.L726-.L725
.L725:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0,0,0,0,0
.L726:
	.byte	5,1,7,0,5,2
	.word	.L162
	.byte	3,219,0,1,7,9
	.half	.L268-.L162
	.byte	0,1,1
.L724:
	.sdecl	'.debug_ranges',debug,cluster('udp_init')
	.sect	'.debug_ranges'
.L267:
	.word	-1,.L162,0,.L268-.L162,0,0
	.sdecl	'.debug_info',debug,cluster('udp_netif_ip_addr_changed')
	.sect	'.debug_info'
.L269:
	.word	287
	.half	3
	.word	.L270
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L272,.L271
	.byte	2
	.word	.L195
	.byte	3
	.byte	'udp_netif_ip_addr_changed',0,1,133,10,6,1,1,1
	.word	.L194,.L372,.L193
	.byte	4
	.byte	'old_addr',0,1,133,10,49
	.word	.L301,.L373
	.byte	4
	.byte	'new_addr',0,1,133,10,76
	.word	.L301,.L374
	.byte	5
	.word	.L194,.L372
	.byte	6
	.byte	'upcb',0,1,135,10,19
	.word	.L288,.L375
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('udp_netif_ip_addr_changed')
	.sect	'.debug_abbrev'
.L270:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('udp_netif_ip_addr_changed')
	.sect	'.debug_line'
.L271:
	.word	.L728-.L727
.L727:
	.half	3
	.word	.L730-.L729
.L729:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0,0,0,0,0
.L730:
	.byte	5,8,7,0,5,2
	.word	.L194
	.byte	3,136,10,1,7,9
	.half	.L731-.L194
	.byte	1,5,36,9
	.half	.L732-.L731
	.byte	1,7,9
	.half	.L733-.L732
	.byte	1,5,17,9
	.half	.L734-.L733
	.byte	3,1,1,5,39,9
	.half	.L508-.L734
	.byte	1,5,11,9
	.half	.L159-.L508
	.byte	3,2,1,5,7,9
	.half	.L735-.L159
	.byte	1,5,9,7,9
	.half	.L736-.L735
	.byte	3,3,1,5,52,9
	.half	.L160-.L736
	.byte	3,123,1,5,39,9
	.half	.L158-.L160
	.byte	1,5,1,7,9
	.half	.L154-.L158
	.byte	3,9,1,7,9
	.half	.L273-.L154
	.byte	0,1,1
.L728:
	.sdecl	'.debug_ranges',debug,cluster('udp_netif_ip_addr_changed')
	.sect	'.debug_ranges'
.L272:
	.word	-1,.L194,0,.L273-.L194,0,0
	.sdecl	'.debug_info',debug,cluster('udp_new_port')
	.sect	'.debug_info'
.L274:
	.word	244
	.half	3
	.word	.L275
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L277,.L276
	.byte	2
	.word	.L195
	.byte	3
	.byte	'udp_new_port',0,1,100,1
	.word	.L303
	.byte	1,1
	.word	.L164,.L376,.L163
	.byte	4
	.word	.L164,.L376
	.byte	5
	.byte	'n',0,1,102,9
	.word	.L303,.L377
	.byte	5
	.byte	'pcb',0,1,103,19
	.word	.L288,.L378
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('udp_new_port')
	.sect	'.debug_abbrev'
.L275:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('udp_new_port')
	.sect	'.debug_line'
.L276:
	.word	.L738-.L737
.L737:
	.half	3
	.word	.L740-.L739
.L739:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0,0,0,0,0
.L740:
	.byte	5,11,7,0,5,2
	.word	.L164
	.byte	3,229,0,1,5,7,9
	.half	.L383-.L164
	.byte	3,4,1,5,21,9
	.half	.L741-.L383
	.byte	1,5,16,9
	.half	.L742-.L741
	.byte	3,1,1,5,14,9
	.half	.L743-.L742
	.byte	3,3,1,5,28,9
	.half	.L744-.L743
	.byte	3,1,1,5,43,9
	.half	.L745-.L744
	.byte	3,1,1,5,7,9
	.half	.L2-.L745
	.byte	3,122,1,5,15,9
	.half	.L746-.L2
	.byte	1,5,3,9
	.half	.L747-.L746
	.byte	1,5,14,7,9
	.half	.L748-.L747
	.byte	3,1,1,9
	.half	.L3-.L748
	.byte	3,3,1,5,35,9
	.half	.L384-.L3
	.byte	1,5,12,9
	.half	.L5-.L384
	.byte	3,1,1,5,28,9
	.half	.L749-.L5
	.byte	1,5,5,9
	.half	.L750-.L749
	.byte	1,5,11,7,9
	.half	.L751-.L750
	.byte	3,1,1,5,7,9
	.half	.L752-.L751
	.byte	1,5,16,7,9
	.half	.L753-.L752
	.byte	3,1,1,5,1,9
	.half	.L754-.L753
	.byte	3,6,1,5,46,7,9
	.half	.L6-.L754
	.byte	3,119,1,5,35,9
	.half	.L4-.L6
	.byte	1,5,10,7,9
	.half	.L755-.L4
	.byte	3,8,1,5,1,9
	.half	.L756-.L755
	.byte	3,1,1,7,9
	.half	.L278-.L756
	.byte	0,1,1
.L738:
	.sdecl	'.debug_ranges',debug,cluster('udp_new_port')
	.sect	'.debug_ranges'
.L277:
	.word	-1,.L164,0,.L278-.L164,0,0
	.sdecl	'.debug_info',debug,cluster('udp_input_local_match')
	.sect	'.debug_info'
.L279:
	.word	280
	.half	3
	.word	.L280
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L282,.L281
	.byte	2
	.word	.L195
	.byte	3
	.byte	'udp_input_local_match',0,1,130,1,1
	.word	.L292
	.byte	1,1
	.word	.L166,.L379,.L165
	.byte	4
	.byte	'pcb',0,1,130,1,39
	.word	.L288,.L380
	.byte	4
	.byte	'inp',0,1,130,1,58
	.word	.L332,.L381
	.byte	4
	.byte	'broadcast',0,1,130,1,68
	.word	.L292,.L382
	.byte	5
	.word	.L166,.L379
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('udp_input_local_match')
	.sect	'.debug_abbrev'
.L280:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('udp_input_local_match')
	.sect	'.debug_line'
.L281:
	.word	.L758-.L757
.L757:
	.half	3
	.word	.L760-.L759
.L759:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0,0,0,0,0
.L760:
	.byte	5,11,7,0,5,2
	.word	.L166
	.byte	3,138,1,1,5,7,9
	.half	.L761-.L166
	.byte	1,5,27,7,9
	.half	.L762-.L761
	.byte	3,1,1,5,34,9
	.half	.L763-.L762
	.byte	1,5,55,9
	.half	.L764-.L763
	.byte	1,5,23,9
	.half	.L765-.L764
	.byte	1,5,5,7,9
	.half	.L9-.L765
	.byte	3,19,1,5,13,7,9
	.half	.L766-.L9
	.byte	3,5,1,7,9
	.half	.L767-.L766
	.byte	1,5,15,9
	.half	.L768-.L767
	.byte	3,1,1,5,38,9
	.half	.L769-.L768
	.byte	1,5,45,9
	.half	.L770-.L769
	.byte	1,5,13,7,9
	.half	.L771-.L770
	.byte	3,1,1,5,11,9
	.half	.L772-.L771
	.byte	3,1,1,9
	.half	.L11-.L772
	.byte	3,6,1,7,9
	.half	.L773-.L11
	.byte	1,5,44,9
	.half	.L774-.L773
	.byte	1,5,16,9
	.half	.L12-.L774
	.byte	3,1,1,5,1,9
	.half	.L775-.L12
	.byte	3,5,1,5,10,7,9
	.half	.L10-.L775
	.byte	3,127,1,5,1,9
	.half	.L776-.L10
	.byte	3,1,1,7,9
	.half	.L283-.L776
	.byte	0,1,1
.L758:
	.sdecl	'.debug_ranges',debug,cluster('udp_input_local_match')
	.sect	'.debug_ranges'
.L282:
	.word	-1,.L166,0,.L283-.L166,0,0
	.sdecl	'.debug_info',debug,cluster('udp_pcbs')
	.sect	'.debug_info'
.L284:
	.word	184
	.half	3
	.word	.L285
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L195
	.byte	3
	.byte	'udp_pcbs',0,12,81,17
	.word	.L288
	.byte	1,5,3
	.word	udp_pcbs
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('udp_pcbs')
	.sect	'.debug_abbrev'
.L285:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('udp_port')
	.sect	'.debug_info'
.L286:
	.word	183
	.half	3
	.word	.L287
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\udp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L195
	.byte	3
	.byte	'udp_port',0,12,77,14
	.word	.L303
	.byte	5,3
	.word	udp_port
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('udp_port')
	.sect	'.debug_abbrev'
.L287:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('udp_bind')
	.sect	'.debug_loc'
.L302:
	.word	-1,.L178,0,.L485-.L178
	.half	1
	.byte	101
	.word	.L488-.L178,.L299-.L178
	.half	1
	.byte	109
	.word	0,0
.L305:
	.word	-1,.L178,.L490-.L178,.L491-.L178
	.half	1
	.byte	111
	.word	.L493-.L178,.L109-.L178
	.half	1
	.byte	111
	.word	.L112-.L178,.L108-.L178
	.half	1
	.byte	111
	.word	0,0
.L300:
	.word	-1,.L178,0,.L486-.L178
	.half	1
	.byte	100
	.word	.L487-.L178,.L299-.L178
	.half	1
	.byte	108
	.word	.L107-.L178,.L109-.L178
	.half	1
	.byte	100
	.word	.L112-.L178,.L108-.L178
	.half	1
	.byte	100
	.word	0,0
.L304:
	.word	-1,.L178,0,.L486-.L178
	.half	1
	.byte	84
	.word	.L486-.L178,.L107-.L178
	.half	1
	.byte	82
	.word	.L492-.L178,.L299-.L178
	.half	1
	.byte	84
	.word	0,0
.L306:
	.word	-1,.L178,.L489-.L178,.L299-.L178
	.half	1
	.byte	88
	.word	0,0
.L177:
	.word	-1,.L178,0,.L299-.L178
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('udp_bind_netif')
	.sect	'.debug_loc'
.L310:
	.word	-1,.L180,0,.L307-.L180
	.half	1
	.byte	101
	.word	0,0
.L308:
	.word	-1,.L180,0,.L307-.L180
	.half	1
	.byte	100
	.word	0,0
.L179:
	.word	-1,.L180,0,.L307-.L180
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('udp_connect')
	.sect	'.debug_loc'
.L317:
	.word	-1,.L182,.L499-.L182,.L132-.L182
	.half	1
	.byte	82
	.word	0,0
.L313:
	.word	-1,.L182,0,.L494-.L182
	.half	1
	.byte	101
	.word	.L497-.L182,.L311-.L182
	.half	1
	.byte	108
	.word	0,0
.L315:
	.word	-1,.L182,.L500-.L182,.L501-.L182
	.half	1
	.byte	98
	.word	0,0
.L312:
	.word	-1,.L182,0,.L494-.L182
	.half	1
	.byte	100
	.word	.L496-.L182,.L311-.L182
	.half	1
	.byte	111
	.word	.L494-.L182,.L499-.L182
	.half	1
	.byte	101
	.word	0,0
.L314:
	.word	-1,.L182,0,.L495-.L182
	.half	1
	.byte	84
	.word	.L498-.L182,.L311-.L182
	.half	1
	.byte	88
	.word	0,0
.L181:
	.word	-1,.L182,0,.L311-.L182
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('udp_disconnect')
	.sect	'.debug_loc'
.L319:
	.word	-1,.L184,0,.L318-.L184
	.half	1
	.byte	100
	.word	0,0
.L183:
	.word	-1,.L184,0,.L318-.L184
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('udp_init')
	.sect	'.debug_loc'
.L161:
	.word	-1,.L162,0,.L371-.L162
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('udp_input')
	.sect	'.debug_loc'
.L369:
	.word	-1,.L168,.L387-.L168,.L395-.L168
	.half	1
	.byte	82
	.word	.L396-.L168,.L22-.L168
	.half	1
	.byte	88
	.word	.L409-.L168,.L407-.L168
	.half	1
	.byte	84
	.word	0,0
.L368:
	.word	-1,.L168,.L399-.L168,.L24-.L168
	.half	1
	.byte	82
	.word	.L401-.L168,.L22-.L168
	.half	1
	.byte	90
	.word	0,0
.L370:
	.word	-1,.L168,.L419-.L168,.L43-.L168
	.half	1
	.byte	95
	.word	.L44-.L168,.L420-.L168
	.half	1
	.byte	95
	.word	0,0
.L362:
	.word	-1,.L168,0,.L387-.L168
	.half	1
	.byte	101
	.word	.L390-.L168,.L360-.L168
	.half	1
	.byte	108
	.word	.L408-.L168,.L407-.L168
	.half	1
	.byte	101
	.word	0,0
.L361:
	.word	-1,.L168,0,.L388-.L168
	.half	1
	.byte	100
	.word	.L389-.L168,.L360-.L168
	.half	2
	.byte	145,116
	.word	.L391-.L168,.L392-.L168
	.half	1
	.byte	111
	.word	.L423-.L168,.L424-.L168
	.half	1
	.byte	100
	.word	.L425-.L168,.L426-.L168
	.half	1
	.byte	100
	.word	.L428-.L168,.L49-.L168
	.half	1
	.byte	102
	.word	.L430-.L168,.L431-.L168
	.half	1
	.byte	100
	.word	.L432-.L168,.L22-.L168
	.half	1
	.byte	100
	.word	.L433-.L168,.L360-.L168
	.half	1
	.byte	100
	.word	0,0
.L364:
	.word	-1,.L168,.L404-.L168,.L405-.L168
	.half	1
	.byte	111
	.word	.L406-.L168,.L407-.L168
	.half	1
	.byte	100
	.word	.L427-.L168,.L49-.L168
	.half	1
	.byte	101
	.word	0,0
.L365:
	.word	-1,.L168,.L402-.L168,.L24-.L168
	.half	1
	.byte	109
	.word	.L403-.L168,.L22-.L168
	.half	2
	.byte	145,112
	.word	.L410-.L168,.L411-.L168
	.half	1
	.byte	109
	.word	.L412-.L168,.L413-.L168
	.half	1
	.byte	109
	.word	.L414-.L168,.L415-.L168
	.half	1
	.byte	98
	.word	.L416-.L168,.L417-.L168
	.half	1
	.byte	100
	.word	.L418-.L168,.L42-.L168
	.half	1
	.byte	109
	.word	0,0
.L367:
	.word	-1,.L168,.L395-.L168,.L399-.L168
	.half	1
	.byte	82
	.word	.L400-.L168,.L22-.L168
	.half	1
	.byte	89
	.word	.L429-.L168,.L49-.L168
	.half	1
	.byte	84
	.word	0,0
.L167:
	.word	-1,.L168,0,.L386-.L168
	.half	2
	.byte	138,0
	.word	.L386-.L168,.L49-.L168
	.half	2
	.byte	138,16
	.word	.L49-.L168,.L49-.L168
	.half	2
	.byte	138,0
	.word	.L49-.L168,.L360-.L168
	.half	2
	.byte	138,16
	.word	.L360-.L168,.L360-.L168
	.half	2
	.byte	138,0
	.word	0,0
.L363:
	.word	-1,.L168,.L392-.L168,.L393-.L168
	.half	1
	.byte	111
	.word	.L394-.L168,.L22-.L168
	.half	2
	.byte	145,120
	.word	.L397-.L168,.L398-.L168
	.half	1
	.byte	111
	.word	.L421-.L168,.L422-.L168
	.half	1
	.byte	98
	.word	0,0
.L366:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('udp_input_local_match')
	.sect	'.debug_loc'
.L382:
	.word	-1,.L166,0,.L379-.L166
	.half	1
	.byte	84
	.word	0,0
.L381:
	.word	-1,.L166,0,.L379-.L166
	.half	1
	.byte	101
	.word	0,0
.L380:
	.word	-1,.L166,0,.L379-.L166
	.half	1
	.byte	100
	.word	0,0
.L165:
	.word	-1,.L166,0,.L379-.L166
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('udp_netif_ip_addr_changed')
	.sect	'.debug_loc'
.L374:
	.word	-1,.L194,0,.L372-.L194
	.half	1
	.byte	101
	.word	0,0
.L373:
	.word	-1,.L194,0,.L372-.L194
	.half	1
	.byte	100
	.word	0,0
.L193:
	.word	-1,.L194,0,.L372-.L194
	.half	2
	.byte	138,0
	.word	0,0
.L375:
	.word	-1,.L194,.L508-.L194,.L154-.L194
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('udp_new')
	.sect	'.debug_loc'
.L290:
	.word	-1,.L190,.L503-.L190,.L504-.L190
	.half	1
	.byte	98
	.word	.L505-.L190,.L289-.L190
	.half	1
	.byte	111
	.word	.L504-.L190,.L506-.L190
	.half	1
	.byte	100
	.word	.L507-.L190,.L289-.L190
	.half	1
	.byte	98
	.word	0,0
.L189:
	.word	-1,.L190,0,.L289-.L190
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('udp_new_ip_type')
	.sect	'.debug_loc'
.L294:
	.word	0,0
.L293:
	.word	-1,.L192,0,.L291-.L192
	.half	1
	.byte	84
	.word	0,0
.L191:
	.word	-1,.L192,0,.L291-.L192
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('udp_new_port')
	.sect	'.debug_loc'
.L377:
	.word	-1,.L164,.L383-.L164,.L376-.L164
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L378:
	.word	-1,.L164,.L384-.L164,.L385-.L164
	.half	1
	.byte	111
	.word	0,0
.L163:
	.word	-1,.L164,0,.L376-.L164
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('udp_recv')
	.sect	'.debug_loc'
.L321:
	.word	-1,.L186,0,.L320-.L186
	.half	1
	.byte	100
	.word	0,0
.L323:
	.word	-1,.L186,0,.L320-.L186
	.half	1
	.byte	101
	.word	0,0
.L325:
	.word	-1,.L186,0,.L320-.L186
	.half	1
	.byte	102
	.word	0,0
.L185:
	.word	-1,.L186,0,.L320-.L186
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('udp_remove')
	.sect	'.debug_loc'
.L296:
	.word	-1,.L188,0,.L295-.L188
	.half	1
	.byte	100
	.word	0,0
.L297:
	.word	-1,.L188,.L502-.L188,.L145-.L188
	.half	1
	.byte	111
	.word	0,0
.L187:
	.word	-1,.L188,0,.L295-.L188
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('udp_send')
	.sect	'.debug_loc'
.L359:
	.word	-1,.L170,0,.L357-.L170
	.half	1
	.byte	101
	.word	0,0
.L358:
	.word	-1,.L170,0,.L357-.L170
	.half	1
	.byte	100
	.word	0,0
.L169:
	.word	-1,.L170,0,.L357-.L170
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('udp_sendto')
	.sect	'.debug_loc'
.L353:
	.word	-1,.L172,0,.L434-.L172
	.half	1
	.byte	102
	.word	.L437-.L172,.L350-.L172
	.half	1
	.byte	109
	.word	.L434-.L172,.L66-.L172
	.half	1
	.byte	101
	.word	.L444-.L172,.L350-.L172
	.half	1
	.byte	102
	.word	0,0
.L354:
	.word	-1,.L172,0,.L66-.L172
	.half	1
	.byte	84
	.word	.L438-.L172,.L350-.L172
	.half	1
	.byte	88
	.word	.L445-.L172,.L350-.L172
	.half	1
	.byte	84
	.word	0,0
.L355:
	.word	-1,.L172,.L65-.L172,.L440-.L172
	.half	1
	.byte	95
	.word	.L441-.L172,.L62-.L172
	.half	1
	.byte	95
	.word	0,0
.L356:
	.word	-1,.L172,.L439-.L172,.L62-.L172
	.half	1
	.byte	98
	.word	.L66-.L172,.L350-.L172
	.half	1
	.byte	98
	.word	.L446-.L172,.L350-.L172
	.half	1
	.byte	103
	.word	0,0
.L352:
	.word	-1,.L172,0,.L434-.L172
	.half	1
	.byte	101
	.word	.L436-.L172,.L350-.L172
	.half	1
	.byte	108
	.word	.L443-.L172,.L350-.L172
	.half	1
	.byte	101
	.word	0,0
.L351:
	.word	-1,.L172,0,.L66-.L172
	.half	1
	.byte	100
	.word	.L435-.L172,.L350-.L172
	.half	1
	.byte	111
	.word	.L442-.L172,.L350-.L172
	.half	1
	.byte	100
	.word	0,0
.L171:
	.word	-1,.L172,0,.L350-.L172
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('udp_sendto_if')
	.sect	'.debug_loc'
.L330:
	.word	-1,.L174,0,.L326-.L174
	.half	1
	.byte	102
	.word	0,0
.L331:
	.word	-1,.L174,0,.L326-.L174
	.half	1
	.byte	84
	.word	0,0
.L333:
	.word	-1,.L174,0,.L326-.L174
	.half	1
	.byte	103
	.word	0,0
.L329:
	.word	-1,.L174,0,.L326-.L174
	.half	1
	.byte	101
	.word	0,0
.L327:
	.word	-1,.L174,0,.L326-.L174
	.half	1
	.byte	100
	.word	0,0
.L334:
	.word	-1,.L174,.L448-.L174,.L77-.L174
	.half	1
	.byte	111
	.word	.L78-.L174,.L326-.L174
	.half	1
	.byte	111
	.word	0,0
.L173:
	.word	-1,.L174,0,.L447-.L174
	.half	2
	.byte	138,0
	.word	.L447-.L174,.L73-.L174
	.half	2
	.byte	138,8
	.word	.L73-.L174,.L73-.L174
	.half	2
	.byte	138,0
	.word	.L73-.L174,.L79-.L174
	.half	2
	.byte	138,8
	.word	.L79-.L174,.L79-.L174
	.half	2
	.byte	138,0
	.word	.L79-.L174,.L326-.L174
	.half	2
	.byte	138,8
	.word	.L326-.L174,.L326-.L174
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('udp_sendto_if_src')
	.sect	'.debug_loc'
.L338:
	.word	-1,.L176,0,.L450-.L176
	.half	1
	.byte	102
	.word	.L455-.L176,.L335-.L176
	.half	2
	.byte	145,120
	.word	.L474-.L176,.L472-.L176
	.half	1
	.byte	102
	.word	.L480-.L176,.L476-.L176
	.half	1
	.byte	102
	.word	0,0
.L339:
	.word	-1,.L176,0,.L451-.L176
	.half	1
	.byte	84
	.word	.L456-.L176,.L335-.L176
	.half	1
	.byte	88
	.word	.L469-.L176,.L470-.L176
	.half	1
	.byte	84
	.word	0,0
.L344:
	.word	-1,.L176,.L450-.L176,.L88-.L176
	.half	1
	.byte	82
	.word	.L461-.L176,.L88-.L176
	.half	1
	.byte	95
	.word	.L476-.L176,.L89-.L176
	.half	1
	.byte	82
	.word	.L482-.L176,.L335-.L176
	.half	1
	.byte	95
	.word	.L484-.L176,.L335-.L176
	.half	1
	.byte	82
	.word	0,0
.L346:
	.word	-1,.L176,.L475-.L176,.L476-.L176
	.half	1
	.byte	86
	.word	0,0
.L340:
	.word	-1,.L176,0,.L450-.L176
	.half	1
	.byte	103
	.word	.L457-.L176,.L335-.L176
	.half	2
	.byte	145,124
	.word	.L459-.L176,.L82-.L176
	.half	1
	.byte	111
	.word	.L86-.L176,.L460-.L176
	.half	1
	.byte	111
	.word	.L481-.L176,.L476-.L176
	.half	1
	.byte	103
	.word	0,0
.L337:
	.word	-1,.L176,0,.L452-.L176
	.half	1
	.byte	101
	.word	.L454-.L176,.L335-.L176
	.half	1
	.byte	109
	.word	.L462-.L176,.L463-.L176
	.half	1
	.byte	100
	.word	.L468-.L176,.L467-.L176
	.half	1
	.byte	101
	.word	0,0
.L336:
	.word	-1,.L176,0,.L452-.L176
	.half	1
	.byte	100
	.word	.L453-.L176,.L335-.L176
	.half	1
	.byte	108
	.word	.L452-.L176,.L450-.L176
	.half	1
	.byte	101
	.word	0,0
.L345:
	.word	-1,.L176,.L464-.L176,.L90-.L176
	.half	1
	.byte	98
	.word	.L465-.L176,.L90-.L176
	.half	1
	.byte	110
	.word	.L92-.L176,.L91-.L176
	.half	1
	.byte	110
	.word	.L92-.L176,.L466-.L176
	.half	1
	.byte	98
	.word	.L466-.L176,.L467-.L176
	.half	1
	.byte	100
	.word	.L94-.L176,.L89-.L176
	.half	1
	.byte	110
	.word	.L471-.L176,.L472-.L176
	.half	1
	.byte	100
	.word	.L478-.L176,.L476-.L176
	.half	1
	.byte	100
	.word	.L483-.L176,.L89-.L176
	.half	1
	.byte	100
	.word	0,0
.L341:
	.word	-1,.L176,0,.L335-.L176
	.half	2
	.byte	145,0
	.word	.L458-.L176,.L82-.L176
	.half	1
	.byte	98
	.word	.L86-.L176,.L450-.L176
	.half	1
	.byte	98
	.word	.L473-.L176,.L472-.L176
	.half	1
	.byte	101
	.word	.L479-.L176,.L476-.L176
	.half	1
	.byte	101
	.word	0,0
.L347:
	.word	-1,.L176,.L477-.L176,.L476-.L176
	.half	1
	.byte	84
	.word	0,0
.L175:
	.word	-1,.L176,0,.L449-.L176
	.half	2
	.byte	138,0
	.word	.L449-.L176,.L86-.L176
	.half	2
	.byte	138,8
	.word	.L86-.L176,.L86-.L176
	.half	2
	.byte	138,0
	.word	.L86-.L176,.L92-.L176
	.half	2
	.byte	138,8
	.word	.L92-.L176,.L92-.L176
	.half	2
	.byte	138,0
	.word	.L92-.L176,.L335-.L176
	.half	2
	.byte	138,8
	.word	.L335-.L176,.L335-.L176
	.half	2
	.byte	138,0
	.word	0,0
.L349:
	.word	-1,.L176,.L472-.L176,.L96-.L176
	.half	1
	.byte	82
	.word	0,0
.L343:
	.word	-1,.L176,.L460-.L176,.L89-.L176
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L777:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('udp_init')
	.sect	'.debug_frame'
	.word	24
	.word	.L777,.L162,.L371-.L162
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('udp_new_port')
	.sect	'.debug_frame'
	.word	20
	.word	.L777,.L164,.L376-.L164
	.byte	8,19,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('udp_input_local_match')
	.sect	'.debug_frame'
	.word	20
	.word	.L777,.L166,.L379-.L166
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('udp_input')
	.sect	'.debug_frame'
	.word	52
	.word	.L777,.L168,.L360-.L168
	.byte	4
	.word	(.L386-.L168)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L49-.L386)/2
	.byte	19,0,8,26,19,16,22,26,3,19,138,16,4
	.word	(.L360-.L49)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('udp_send')
	.sect	'.debug_frame'
	.word	12
	.word	.L777,.L170,.L357-.L170
	.sdecl	'.debug_frame',debug,cluster('udp_sendto')
	.sect	'.debug_frame'
	.word	12
	.word	.L777,.L172,.L350-.L172
	.sdecl	'.debug_frame',debug,cluster('udp_sendto_if')
	.sect	'.debug_frame'
	.word	68
	.word	.L777,.L174,.L326-.L174
	.byte	4
	.word	(.L447-.L174)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L73-.L447)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L79-.L73)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L326-.L79)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('udp_sendto_if_src')
	.sect	'.debug_frame'
	.word	68
	.word	.L777,.L176,.L335-.L176
	.byte	4
	.word	(.L449-.L176)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L86-.L449)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L92-.L86)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L335-.L92)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('udp_bind')
	.sect	'.debug_frame'
	.word	12
	.word	.L777,.L178,.L299-.L178
	.sdecl	'.debug_frame',debug,cluster('udp_bind_netif')
	.sect	'.debug_frame'
	.word	20
	.word	.L777,.L180,.L307-.L180
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('udp_connect')
	.sect	'.debug_frame'
	.word	12
	.word	.L777,.L182,.L311-.L182
	.sdecl	'.debug_frame',debug,cluster('udp_disconnect')
	.sect	'.debug_frame'
	.word	24
	.word	.L777,.L184,.L318-.L184
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('udp_recv')
	.sect	'.debug_frame'
	.word	20
	.word	.L777,.L186,.L320-.L186
	.byte	8,18,8,19,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('udp_remove')
	.sect	'.debug_frame'
	.word	12
	.word	.L777,.L188,.L295-.L188
	.sdecl	'.debug_frame',debug,cluster('udp_new')
	.sect	'.debug_frame'
	.word	12
	.word	.L777,.L190,.L289-.L190
	.sdecl	'.debug_frame',debug,cluster('udp_new_ip_type')
	.sect	'.debug_frame'
	.word	12
	.word	.L777,.L192,.L291-.L192
	.sdecl	'.debug_frame',debug,cluster('udp_netif_ip_addr_changed')
	.sect	'.debug_frame'
	.word	20
	.word	.L777,.L194,.L372-.L194
	.byte	8,18,8,19,8,22,8,23

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1300  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1301  #if UDP_DEBUG
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1302  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1303   * Print UDP header information for debug purposes.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1304   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1305   * @param udphdr pointer to the udp header in memory.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1306   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1307  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1308  udp_debug_print(struct udp_hdr *udphdr)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1309  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1310    LWIP_DEBUGF(UDP_DEBUG, ("UDP header:\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1311    LWIP_DEBUGF(UDP_DEBUG, ("+-------------------------------+\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1312    LWIP_DEBUGF(UDP_DEBUG, ("|     %5"U16_F"     |     %5"U16_F"     | (src port, dest port)\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1313                            lwip_ntohs(udphdr->src), lwip_ntohs(udphdr->dest)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1314    LWIP_DEBUGF(UDP_DEBUG, ("+-------------------------------+\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1315    LWIP_DEBUGF(UDP_DEBUG, ("|     %5"U16_F"     |     0x%04"X16_F"    | (len, chksum)\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1316                            lwip_ntohs(udphdr->len), lwip_ntohs(udphdr->chksum)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1317    LWIP_DEBUGF(UDP_DEBUG, ("+-------------------------------+\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1318  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1319  #endif /* UDP_DEBUG */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1320  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\udp.c	  1321  #endif /* LWIP_UDP */

	; Module end
