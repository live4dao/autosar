	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 09003395"
	.compiler_invocation	"ctc -f cc32124a --dep-file=EAS\\BSW\\TcpIp\\lwip-2.1.2\\api\\.netifapi.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --fp-model=+float -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Lib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\App_Func -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\demo -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Adc_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Gtm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\AscLin_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Can_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\EthV2_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Stm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Main -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\APP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\BswM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanSm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Com -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\ComM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Common -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Crc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Det -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\DoIP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EcuM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Eth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthSM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTrcv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FiM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FlsTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Nm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\PduR -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\RamTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\StbM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\arpa -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\net -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\sys -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\stdc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\apps -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\priv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\UdpNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Cal -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Daq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pag -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pgm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Std -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\XcpOnEth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Library\\Vfx_ComE2E -g2 --make-target=EAS\\BSW\\TcpIp\\lwip-2.1.2\\api\\netifapi.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O1 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o EAS\\BSW\\TcpIp\\lwip-2.1.2\\api\\netifapi.src ..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api\\netifapi.c"
	.compiler_name		"ctc"
	;source	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api\\netifapi.c'

	
$TC162
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	4545
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api\\netifapi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L5
	.byte	2,1,3
	.word	166
	.byte	4
	.byte	'__codeptr',0,1,1,1
	.word	168
	.byte	5
	.byte	'unsigned char',0,1,8,4
	.byte	'boolean',0,2,102,29
	.word	191
	.byte	4
	.byte	'uint8',0,2,106,29
	.word	191
	.byte	5
	.byte	'unsigned short int',0,2,7,4
	.byte	'uint16',0,2,110,29
	.word	238
	.byte	5
	.byte	'unsigned long int',0,4,7,4
	.byte	'uint32',0,2,114,29
	.word	275
	.byte	4
	.byte	'Std_ReturnType',0,3,109,16
	.word	191
	.byte	4
	.byte	'PduIdType',0,4,37,21
	.word	191
	.byte	4
	.byte	'PduLengthType',0,4,41,22
	.word	238
	.byte	6,5,101,9,1,7
	.byte	'BUFREQ_OK',0,0,7
	.byte	'BUFREQ_E_NOT_OK',0,1,7
	.byte	'BUFREQ_E_BUSY',0,2,7
	.byte	'BUFREQ_E_OVFL',0,3,0,4
	.byte	'BufReq_ReturnType',0,5,107,3
	.word	374
	.byte	3
	.word	191
	.byte	4
	.byte	'SduDataPtrType',0,5,189,1,40
	.word	468
	.byte	6,5,204,1,9,1,7
	.byte	'TP_DATACONF',0,0,7
	.byte	'TP_DATARETRY',0,1,7
	.byte	'TP_CONFPENDING',0,2,0,4
	.byte	'TpDataStateType',0,5,216,1,3
	.word	497
	.byte	4
	.byte	'TcpIp_SocketIdType',0,6,50,16
	.word	191
	.byte	8,4
	.word	275
	.byte	9,0,0,10,6,52,9,4,11
	.byte	'Addr',0
	.word	602
	.byte	4,2,35,0,0,4
	.byte	'TcpIp_IpAddressType',0,6,55,3
	.word	611
	.byte	4
	.byte	'TcpIp_DomainType',0,6,61,16
	.word	238
	.byte	10,6,68,9,8,11
	.byte	'Domain',0
	.word	238
	.byte	2,2,35,0,11
	.byte	'Port',0
	.word	238
	.byte	2,2,35,2,11
	.byte	'Addr',0
	.word	602
	.byte	4,2,35,4,0,4
	.byte	'TcpIp_SockAddrInetType',0,6,73,3
	.word	684
	.byte	4
	.byte	'TcpIp_AddressType',0,7,128,1,15
	.word	191
	.byte	4
	.byte	'TcpIp_CtrlIdType',0,7,142,1,15
	.word	191
	.byte	4
	.byte	'TcpIp_IpAddrStateType',0,7,144,1,15
	.word	191
	.byte	4
	.byte	'TcpIp_LocalAddrAssignmentConfigType',0,7,149,1,15
	.word	191
	.byte	4
	.byte	'TcpIp_StaticAddrIdType',0,7,151,1,15
	.word	191
	.byte	10,7,152,1,9,12,11
	.byte	'State',0
	.word	191
	.byte	1,2,35,0,11
	.byte	'Netmask',0
	.word	191
	.byte	1,2,35,1,11
	.byte	'Domain',0
	.word	238
	.byte	2,2,35,2,11
	.byte	'IpAddr',0
	.word	611
	.byte	4,2,35,4,11
	.byte	'DefaultRouter',0
	.word	611
	.byte	4,2,35,8,0,4
	.byte	'TcpIp_StaticIpAddrType',0,7,162,1,3
	.word	926
	.byte	4
	.byte	'TcpIp_LocalAddrIdType',0,7,173,1,15
	.word	191
	.byte	8,3
	.word	191
	.byte	9,2,0,10,7,231,1,9,8,11
	.byte	'CtrlId',0
	.word	191
	.byte	1,2,35,0,11
	.byte	'Address',0
	.word	191
	.byte	1,2,35,1,11
	.byte	'Domain',0
	.word	238
	.byte	2,2,35,2,11
	.byte	'StaticAddrId',0
	.word	191
	.byte	1,2,35,4,11
	.byte	'Assignments',0
	.word	1083
	.byte	3,2,35,5,0,4
	.byte	'TcpIp_LocalAddrConfigType',0,7,243,1,3
	.word	1092
	.byte	10,7,245,1,9,4,11
	.byte	'ArpConfigId',0
	.word	191
	.byte	1,2,35,0,11
	.byte	'DHCPConfigId',0
	.word	191
	.byte	1,2,35,1,11
	.byte	'AutoIpInitTimeout',0
	.word	238
	.byte	2,2,35,2,0,4
	.byte	'TcpIp_IpV4CtrlConfigType',0,7,130,2,3
	.word	1226
	.byte	10,7,133,2,9,8,11
	.byte	'CtrlIdx',0
	.word	191
	.byte	1,2,35,0,11
	.byte	'FramePrio',0
	.word	191
	.byte	1,2,35,1,11
	.byte	'UnicastAddrId',0
	.word	191
	.byte	1,2,35,2,11
	.byte	'UnicastAddrLimit',0
	.word	191
	.byte	1,2,35,3,11
	.byte	'MulticastAddrId',0
	.word	191
	.byte	1,2,35,4,11
	.byte	'LocalAddrLimit',0
	.word	191
	.byte	1,2,35,5,11
	.byte	'IpV4CtrlId',0
	.word	191
	.byte	1,2,35,6,11
	.byte	'IpV6CtrlId',0
	.word	191
	.byte	1,2,35,7,0,4
	.byte	'TcpIp_NetIfCtrlConfigType',0,7,148,2,3
	.word	1337
	.byte	4
	.byte	'SoAd_RoutingGroupIdType',0,8,43,15
	.word	191
	.byte	4
	.byte	'SoAd_SoConIdType',0,8,44,15
	.word	191
	.byte	4
	.byte	'SoAd_SoConGroupIdType',0,8,45,15
	.word	191
	.byte	4
	.byte	'SoAd_PduRouteIdType',0,8,46,15
	.word	191
	.byte	4
	.byte	'SoAd_PduRouteDestIdType',0,8,47,15
	.word	191
	.byte	4
	.byte	'SoAd_SocketRouteIdType',0,8,48,15
	.word	191
	.byte	4
	.byte	'SoAd_IfTxUnconfirmedType',0,8,49,16
	.word	238
	.byte	4
	.byte	'SoAd_IfTxTimerType',0,8,51,16
	.word	238
	.byte	8,1
	.word	191
	.byte	9,0,0,10,8,53,9,2,11
	.byte	'Mask',0
	.word	1791
	.byte	1,2,35,0,11
	.byte	'RoutingState',0
	.word	1791
	.byte	1,2,35,1,0,4
	.byte	'SoAd_RoutingGroupCtrlType',0,8,57,3
	.word	1800
	.byte	6,8,63,9,1,7
	.byte	'SOAD_UL_DOIP',0,0,7
	.byte	'SOAD_UL_UDPNM',0,1,7
	.byte	'SOAD_UL_PDUR',0,2,7
	.byte	'SOAD_UL_XCP',0,3,7
	.byte	'SOAD_UL_MAX',0,4,0,4
	.byte	'SoAd_ULIndexType',0,8,71,3
	.word	1876
	.byte	4
	.byte	'SoAd_RemoteAddressType',0,9,113,32
	.word	684
	.byte	6,9,115,9,1,7
	.byte	'SOAD_SOCON_UNINIT',0,0,7
	.byte	'SOAD_SOCON_OFFLINE',0,1,7
	.byte	'SOAD_SOCON_RECONN',0,2,7
	.byte	'SOAD_SOCON_ONLINE',0,3,0,4
	.byte	'SoAd_SoConModeType',0,9,121,3
	.word	2012
	.byte	12
	.word	191
	.byte	3
	.word	2126
	.byte	12
	.word	191
	.byte	3
	.word	2136
	.byte	12
	.word	191
	.byte	3
	.word	2146
	.byte	12
	.word	1876
	.byte	3
	.word	2156
	.byte	10,9,129,1,9,36,11
	.byte	'IfBufferLength',0
	.word	238
	.byte	2,2,35,0,11
	.byte	'IfBufferOffset',0
	.word	238
	.byte	2,2,35,2,11
	.byte	'TpBufferLength',0
	.word	238
	.byte	2,2,35,4,11
	.byte	'TpBufferOffset',0
	.word	238
	.byte	2,2,35,6,11
	.byte	'PduRouteNum',0
	.word	191
	.byte	1,2,35,8,11
	.byte	'SocketRouteNum',0
	.word	191
	.byte	1,2,35,9,11
	.byte	'PduRouteDestNum',0
	.word	191
	.byte	1,2,35,10,11
	.byte	'RemoteAddrState',0
	.word	191
	.byte	1,2,35,11,11
	.byte	'RemoteAddr',0
	.word	684
	.byte	8,2,35,12,11
	.byte	'PduRouteDestList',0
	.word	2131
	.byte	4,2,35,20,11
	.byte	'PduRouteList',0
	.word	2141
	.byte	4,2,35,24,11
	.byte	'SocketRouteList',0
	.word	2151
	.byte	4,2,35,28,11
	.byte	'SoConModeChgList',0
	.word	2161
	.byte	4,2,35,32,0,4
	.byte	'SoAd_SocketConnectionType',0,9,146,1,3
	.word	2166
	.byte	10,9,148,1,9,16,11
	.byte	'CtrlFlag',0
	.word	191
	.byte	1,2,35,0,11
	.byte	'KeepAliveProbesMax',0
	.word	238
	.byte	2,2,35,2,11
	.byte	'KeepAliveInterval',0
	.word	275
	.byte	4,2,35,4,11
	.byte	'KeepAliveTime',0
	.word	275
	.byte	4,2,35,8,11
	.byte	'TxQuota',0
	.word	275
	.byte	4,2,35,12,0,4
	.byte	'SoAd_TcpProtocolType',0,9,155,1,3
	.word	2518
	.byte	10,9,157,1,9,12,11
	.byte	'CtrlFlag',0
	.word	191
	.byte	1,2,35,0,11
	.byte	'nPduTxBufferMin',0
	.word	238
	.byte	2,2,35,2,11
	.byte	'TriggerTimeout',0
	.word	238
	.byte	2,2,35,4,11
	.byte	'AliveSupervisionTimeout',0
	.word	275
	.byte	4,2,35,6,0,4
	.byte	'SoAd_UdpProtocolType',0,9,163,1,3
	.word	2668
	.byte	12
	.word	2518
	.byte	3
	.word	2805
	.byte	12
	.word	2668
	.byte	3
	.word	2815
	.byte	10,9,165,1,9,24,11
	.byte	'GroupId',0
	.word	191
	.byte	1,2,35,0,11
	.byte	'CtrlFlag',0
	.word	191
	.byte	1,2,35,1,11
	.byte	'FramePriority',0
	.word	191
	.byte	1,2,35,2,11
	.byte	'SoConNum',0
	.word	191
	.byte	1,2,35,3,11
	.byte	'SoConId',0
	.word	191
	.byte	1,2,35,4,11
	.byte	'IpAddrAssignChgNum',0
	.word	191
	.byte	1,2,35,5,11
	.byte	'LocalAddrId',0
	.word	191
	.byte	1,2,35,6,11
	.byte	'LocalPort',0
	.word	238
	.byte	2,2,35,8,11
	.byte	'IpAddrAssignChgList',0
	.word	2161
	.byte	4,2,35,12,11
	.byte	'TcpProtocolPtr',0
	.word	2810
	.byte	4,2,35,16,11
	.byte	'UdpProtocolPtr',0
	.word	2820
	.byte	4,2,35,20,0,4
	.byte	'SoAd_SocketConnectionGroupType',0,9,178,1,3
	.word	2825
	.byte	12
	.word	191
	.byte	3
	.word	3110
	.byte	10,9,180,1,9,12,11
	.byte	'CtrlFlag',0
	.word	191
	.byte	1,2,35,0,11
	.byte	'PduRouteDestNum',0
	.word	191
	.byte	1,2,35,1,11
	.byte	'SocketRouteDestNum',0
	.word	191
	.byte	1,2,35,2,11
	.byte	'PduRouteDestList',0
	.word	3115
	.byte	4,2,35,4,11
	.byte	'SocketRouteDestList',0
	.word	3115
	.byte	4,2,35,8,0,4
	.byte	'SoAd_RoutingGroupType',0,9,187,1,3
	.word	3120
	.byte	10,9,189,1,9,6,11
	.byte	'ULType',0
	.word	191
	.byte	1,2,35,0,11
	.byte	'ULIndex',0
	.word	1876
	.byte	1,2,35,1,11
	.byte	'CtrlFlag',0
	.word	191
	.byte	1,2,35,2,11
	.byte	'RouteDestNum',0
	.word	191
	.byte	1,2,35,3,11
	.byte	'RouteDestId',0
	.word	191
	.byte	1,2,35,4,11
	.byte	'TxPduId',0
	.word	191
	.byte	1,2,35,5,0,4
	.byte	'SoAd_PduRouteType',0,9,204,1,3
	.word	3284
	.byte	3
	.word	1800
	.byte	10,9,206,1,9,20,11
	.byte	'TxPduHeaderId',0
	.word	275
	.byte	4,2,35,0,11
	.byte	'SoConNum',0
	.word	191
	.byte	1,2,35,4,11
	.byte	'SoConId',0
	.word	191
	.byte	1,2,35,5,11
	.byte	'PduRouteId',0
	.word	191
	.byte	1,2,35,6,11
	.byte	'UdpTriggerMode',0
	.word	191
	.byte	1,2,35,7,11
	.byte	'UdpTriggerTimeout',0
	.word	238
	.byte	2,2,35,8,11
	.byte	'RoutingCtrlList',0
	.word	3429
	.byte	4,2,35,12,11
	.byte	'IfTriggerList',0
	.word	468
	.byte	4,2,35,16,0,4
	.byte	'SoAd_PduRouteDestType',0,9,217,1,3
	.word	3434
	.byte	10,9,219,1,9,16,11
	.byte	'RxPduHeaderId',0
	.word	275
	.byte	4,2,35,0,11
	.byte	'ULType',0
	.word	191
	.byte	1,2,35,4,11
	.byte	'ULIndex',0
	.word	1876
	.byte	1,2,35,5,11
	.byte	'SoConNum',0
	.word	191
	.byte	1,2,35,6,11
	.byte	'SoConId',0
	.word	191
	.byte	1,2,35,7,11
	.byte	'RxPduId',0
	.word	191
	.byte	1,2,35,8,11
	.byte	'RoutingCtrlList',0
	.word	3429
	.byte	4,2,35,12,0,4
	.byte	'SoAd_SocketRouteType',0,9,236,1,3
	.word	3649
	.byte	12
	.word	3434
	.byte	3
	.word	3819
	.byte	10,9,155,2,9,24,11
	.byte	'State',0
	.word	191
	.byte	1,2,35,0,11
	.byte	'Timer',0
	.word	238
	.byte	2,2,35,2,11
	.byte	'BufferLength',0
	.word	238
	.byte	2,2,35,4,11
	.byte	'BufferOffset',0
	.word	238
	.byte	2,2,35,6,11
	.byte	'UdpTxBuffer',0
	.word	468
	.byte	4,2,35,8,11
	.byte	'TotalTxLength',0
	.word	238
	.byte	2,2,35,12,11
	.byte	'UsedTxLength',0
	.word	238
	.byte	2,2,35,14,11
	.byte	'IfTxDataBuffer',0
	.word	3115
	.byte	4,2,35,16,11
	.byte	'PduRouteDestPtr',0
	.word	3824
	.byte	4,2,35,20,0,4
	.byte	'SoAd_TxSessionType',0,9,177,2,3
	.word	3829
	.byte	12
	.word	3649
	.byte	3
	.word	4053
	.byte	10,9,180,2,9,8,11
	.byte	'PduLength',0
	.word	238
	.byte	2,2,35,0,11
	.byte	'RemainLength',0
	.word	238
	.byte	2,2,35,2,11
	.byte	'SocketRoutePtr',0
	.word	4058
	.byte	4,2,35,4,0,4
	.byte	'SoAd_RxPduInfoType',0,9,185,2,3
	.word	4063
	.byte	10,9,187,2,9,12,11
	.byte	'TotalLength',0
	.word	238
	.byte	2,2,35,0,11
	.byte	'In',0
	.word	238
	.byte	2,2,35,2,11
	.byte	'Out',0
	.word	238
	.byte	2,2,35,4,11
	.byte	'BufferPtr',0
	.word	468
	.byte	4,2,35,8,0,4
	.byte	'SoAd_RxFifoType',0,9,193,2,3
	.word	4163
	.byte	10,9,195,2,9,8,11
	.byte	'TotalLength',0
	.word	238
	.byte	2,2,35,0,11
	.byte	'UsedLength',0
	.word	238
	.byte	2,2,35,2,11
	.byte	'BufferPtr',0
	.word	468
	.byte	4,2,35,4,0,4
	.byte	'SoAd_RxBufferType',0,9,200,2,3
	.word	4260
	.byte	8,8
	.word	191
	.byte	9,7,0,10,9,202,2,9,48,11
	.byte	'State',0
	.word	191
	.byte	1,2,35,0,11
	.byte	'ValidHeaderLen',0
	.word	191
	.byte	1,2,35,1,11
	.byte	'PduHeader',0
	.word	4354
	.byte	8,2,35,2,11
	.byte	'RxPduInfo',0
	.word	4063
	.byte	8,2,35,12,11
	.byte	'ProcessPduInfo',0
	.word	4063
	.byte	8,2,35,20,11
	.byte	'IfBuffer',0
	.word	4260
	.byte	8,2,35,28,11
	.byte	'TpBuffer',0
	.word	4163
	.byte	12,2,35,36,0,4
	.byte	'SoAd_RxSessionType',0,9,216,2,3
	.word	4363
	.byte	4
	.byte	'u8_t',0,10,61,25
	.word	191
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,0,0,3,15,0,73,19,0,0,4,22,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,5,36,0,3,8,11,15,62,15,0,0,6,4,1,58,15,59,15,57,15,11,15,0,0,7,40,0,3,8,28,13,0,0,8,1
	.byte	1,11,15,73,19,0,0,9,33,0,47,15,0,0,10,19,1,58,15,59,15,57,15,11,15,0,0,11,13,0,3,8,73,19,11,15,56,9,0
	.byte	0,12,38,0,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L7-.L6
.L6:
	.half	3
	.word	.L9-.L8
.L8:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch',0,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api\\netifapi.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Std_Types.h',0,1,0,0
	.byte	'ComStack_Types_Cfg.h',0,2,0,0
	.byte	'ComStack_Types.h',0,3,0,0
	.byte	'TcpIp_GeneratedTypes.h',0,2,0,0
	.byte	'TcpIp_Types.h',0,4,0,0
	.byte	'SoAd_GeneratedTypes.h',0,2,0,0
	.byte	'SoAd_Types.h',0,5,0,0
	.byte	'cc.h',0,6,0,0,0
.L9:
.L7:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	     1  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	     2   * @file
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	     3   * Network Interface Sequential API module
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	     4   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	     5   * @defgroup netifapi NETIF API
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	     6   * @ingroup sequential_api
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	     7   * Thread-safe functions to be called from non-TCPIP threads
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	     8   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	     9   * @defgroup netifapi_netif NETIF related
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    10   * @ingroup netifapi
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    11   * To be called from non-TCPIP threads
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    12   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    13  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    14  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    15   * Redistribution and use in source and binary forms, with or without modification,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    16   * are permitted provided that the following conditions are met:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    17   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    18   * 1. Redistributions of source code must retain the above copyright notice,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    19   *    this list of conditions and the following disclaimer.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    20   * 2. Redistributions in binary form must reproduce the above copyright notice,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    21   *    this list of conditions and the following disclaimer in the documentation
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    22   *    and/or other materials provided with the distribution.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    23   * 3. The name of the author may not be used to endorse or promote products
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    24   *    derived from this software without specific prior written permission.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    25   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    26   * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    27   * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    28   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    29   * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    30   * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    31   * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    32   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    33   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    34   * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    35   * OF SUCH DAMAGE.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    36   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    37   * This file is part of the lwIP TCP/IP stack.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    38   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    39   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    40  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    41  #include "lwip/opt.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    42  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    43  #if LWIP_NETIF_API /* don't build if not configured for use in lwipopts.h */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    44  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    45  #include "lwip/etharp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    46  #include "lwip/netifapi.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    47  #include "lwip/memp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    48  #include "lwip/priv/tcpip_priv.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    49  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    50  #include <string.h> /* strncpy */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    51  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    52  #define NETIFAPI_VAR_REF(name)      API_VAR_REF(name)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    53  #define NETIFAPI_VAR_DECLARE(name)  API_VAR_DECLARE(struct netifapi_msg, name)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    54  #define NETIFAPI_VAR_ALLOC(name)    API_VAR_ALLOC(struct netifapi_msg, MEMP_NETIFAPI_MSG, name, ERR_MEM)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    55  #define NETIFAPI_VAR_FREE(name)     API_VAR_FREE(MEMP_NETIFAPI_MSG, name)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    56  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    57  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    58   * Call netif_add() inside the tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    59   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    60  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    61  netifapi_do_netif_add(struct tcpip_api_call_data *m)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    62  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    63    /* cast through void* to silence alignment warnings.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    64     * We know it works because the structs have been instantiated as struct netifapi_msg */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    65    struct netifapi_msg *msg = (struct netifapi_msg *)(void *)m;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    66  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    67    if (!netif_add( msg->netif,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    68  #if LWIP_IPV4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    69                    API_EXPR_REF(msg->msg.add.ipaddr),
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    70                    API_EXPR_REF(msg->msg.add.netmask),
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    71                    API_EXPR_REF(msg->msg.add.gw),
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    72  #endif /* LWIP_IPV4 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    73                    msg->msg.add.state,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    74                    msg->msg.add.init,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    75                    msg->msg.add.input)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    76      return ERR_IF;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    77    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    78      return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    79    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    80  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    81  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    82  #if LWIP_IPV4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    83  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    84   * Call netif_set_addr() inside the tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    85   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    86  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    87  netifapi_do_netif_set_addr(struct tcpip_api_call_data *m)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    88  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    89    /* cast through void* to silence alignment warnings.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    90     * We know it works because the structs have been instantiated as struct netifapi_msg */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    91    struct netifapi_msg *msg = (struct netifapi_msg *)(void *)m;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    92  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    93    netif_set_addr( msg->netif,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    94                    API_EXPR_REF(msg->msg.add.ipaddr),
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    95                    API_EXPR_REF(msg->msg.add.netmask),
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    96                    API_EXPR_REF(msg->msg.add.gw));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    97    return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    98  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	    99  #endif /* LWIP_IPV4 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   100  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   101  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   102  * Call netif_name_to_index() inside the tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   103  */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   104  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   105  netifapi_do_name_to_index(struct tcpip_api_call_data *m)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   106  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   107    /* cast through void* to silence alignment warnings.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   108     * We know it works because the structs have been instantiated as struct netifapi_msg */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   109    struct netifapi_msg *msg = (struct netifapi_msg *)(void *)m;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   110  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   111    msg->msg.ifs.index = netif_name_to_index(msg->msg.ifs.name);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   112    return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   113  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   114  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   115  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   116  * Call netif_index_to_name() inside the tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   117  */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   118  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   119  netifapi_do_index_to_name(struct tcpip_api_call_data *m)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   120  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   121    /* cast through void* to silence alignment warnings.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   122     * We know it works because the structs have been instantiated as struct netifapi_msg */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   123    struct netifapi_msg *msg = (struct netifapi_msg *)(void *)m;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   124  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   125    if (!netif_index_to_name(msg->msg.ifs.index, msg->msg.ifs.name)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   126      /* return failure via empty name */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   127      msg->msg.ifs.name[0] = '\0';
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   128    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   129    return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   130  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   131  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   132  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   133   * Call the "errtfunc" (or the "voidfunc" if "errtfunc" is NULL) inside the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   134   * tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   135   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   136  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   137  netifapi_do_netif_common(struct tcpip_api_call_data *m)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   138  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   139    /* cast through void* to silence alignment warnings.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   140     * We know it works because the structs have been instantiated as struct netifapi_msg */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   141    struct netifapi_msg *msg = (struct netifapi_msg *)(void *)m;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   142  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   143    if (msg->msg.common.errtfunc != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   144      return msg->msg.common.errtfunc(msg->netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   145    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   146      msg->msg.common.voidfunc(msg->netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   147      return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   148    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   149  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   150  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   151  #if LWIP_ARP && LWIP_IPV4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   152  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   153   * @ingroup netifapi_arp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   154   * Add or update an entry in the ARP cache.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   155   * For an update, ipaddr is used to find the cache entry.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   156   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   157   * @param ipaddr IPv4 address of cache entry
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   158   * @param ethaddr hardware address mapped to ipaddr
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   159   * @param type type of ARP cache entry
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   160   * @return ERR_OK: entry added/updated, else error from err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   161   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   162  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   163  netifapi_arp_add(const ip4_addr_t *ipaddr, struct eth_addr *ethaddr, enum netifapi_arp_entry type)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   164  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   165    err_t err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   166  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   167    /* We only support permanent entries currently */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   168    LWIP_UNUSED_ARG(type);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   169  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   170  #if ETHARP_SUPPORT_STATIC_ENTRIES && LWIP_TCPIP_CORE_LOCKING
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   171    LOCK_TCPIP_CORE();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   172    err = etharp_add_static_entry(ipaddr, ethaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   173    UNLOCK_TCPIP_CORE();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   174  #else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   175    /* @todo add new vars to struct netifapi_msg and create a 'do' func */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   176    LWIP_UNUSED_ARG(ipaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   177    LWIP_UNUSED_ARG(ethaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   178    err = ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   179  #endif /* ETHARP_SUPPORT_STATIC_ENTRIES && LWIP_TCPIP_CORE_LOCKING */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   180  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   181    return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   182  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   183  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   184  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   185   * @ingroup netifapi_arp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   186   * Remove an entry in the ARP cache identified by ipaddr
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   187   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   188   * @param ipaddr IPv4 address of cache entry
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   189   * @param type type of ARP cache entry
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   190   * @return ERR_OK: entry removed, else error from err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   191   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   192  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   193  netifapi_arp_remove(const ip4_addr_t *ipaddr, enum netifapi_arp_entry type)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   194  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   195    err_t err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   196  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   197    /* We only support permanent entries currently */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   198    LWIP_UNUSED_ARG(type);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   199  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   200  #if ETHARP_SUPPORT_STATIC_ENTRIES && LWIP_TCPIP_CORE_LOCKING
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   201    LOCK_TCPIP_CORE();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   202    err = etharp_remove_static_entry(ipaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   203    UNLOCK_TCPIP_CORE();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   204  #else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   205    /* @todo add new vars to struct netifapi_msg and create a 'do' func */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   206    LWIP_UNUSED_ARG(ipaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   207    err = ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   208  #endif /* ETHARP_SUPPORT_STATIC_ENTRIES && LWIP_TCPIP_CORE_LOCKING */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   209  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   210    return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   211  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   212  #endif /* LWIP_ARP && LWIP_IPV4 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   213  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   214  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   215   * @ingroup netifapi_netif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   216   * Call netif_add() in a thread-safe way by running that function inside the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   217   * tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   218   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   219   * @note for params @see netif_add()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   220   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   221  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   222  netifapi_netif_add(struct netif *netif,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   223  #if LWIP_IPV4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   224                     const ip4_addr_t *ipaddr, const ip4_addr_t *netmask, const ip4_addr_t *gw,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   225  #endif /* LWIP_IPV4 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   226                     void *state, netif_init_fn init, netif_input_fn input)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   227  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   228    err_t err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   229    NETIFAPI_VAR_DECLARE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   230    NETIFAPI_VAR_ALLOC(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   231  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   232  #if LWIP_IPV4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   233    if (ipaddr == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   234      ipaddr = IP4_ADDR_ANY4;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   235    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   236    if (netmask == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   237      netmask = IP4_ADDR_ANY4;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   238    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   239    if (gw == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   240      gw = IP4_ADDR_ANY4;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   241    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   242  #endif /* LWIP_IPV4 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   243  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   244    NETIFAPI_VAR_REF(msg).netif = netif;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   245  #if LWIP_IPV4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   246    NETIFAPI_VAR_REF(msg).msg.add.ipaddr  = NETIFAPI_VAR_REF(ipaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   247    NETIFAPI_VAR_REF(msg).msg.add.netmask = NETIFAPI_VAR_REF(netmask);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   248    NETIFAPI_VAR_REF(msg).msg.add.gw      = NETIFAPI_VAR_REF(gw);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   249  #endif /* LWIP_IPV4 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   250    NETIFAPI_VAR_REF(msg).msg.add.state   = state;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   251    NETIFAPI_VAR_REF(msg).msg.add.init    = init;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   252    NETIFAPI_VAR_REF(msg).msg.add.input   = input;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   253    err = tcpip_api_call(netifapi_do_netif_add, &API_VAR_REF(msg).call);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   254    NETIFAPI_VAR_FREE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   255    return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   256  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   257  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   258  #if LWIP_IPV4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   259  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   260   * @ingroup netifapi_netif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   261   * Call netif_set_addr() in a thread-safe way by running that function inside the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   262   * tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   263   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   264   * @note for params @see netif_set_addr()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   265   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   266  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   267  netifapi_netif_set_addr(struct netif *netif,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   268                          const ip4_addr_t *ipaddr,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   269                          const ip4_addr_t *netmask,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   270                          const ip4_addr_t *gw)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   271  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   272    err_t err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   273    NETIFAPI_VAR_DECLARE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   274    NETIFAPI_VAR_ALLOC(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   275  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   276    if (ipaddr == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   277      ipaddr = IP4_ADDR_ANY4;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   278    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   279    if (netmask == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   280      netmask = IP4_ADDR_ANY4;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   281    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   282    if (gw == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   283      gw = IP4_ADDR_ANY4;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   284    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   285  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   286    NETIFAPI_VAR_REF(msg).netif = netif;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   287    NETIFAPI_VAR_REF(msg).msg.add.ipaddr  = NETIFAPI_VAR_REF(ipaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   288    NETIFAPI_VAR_REF(msg).msg.add.netmask = NETIFAPI_VAR_REF(netmask);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   289    NETIFAPI_VAR_REF(msg).msg.add.gw      = NETIFAPI_VAR_REF(gw);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   290    err = tcpip_api_call(netifapi_do_netif_set_addr, &API_VAR_REF(msg).call);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   291    NETIFAPI_VAR_FREE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   292    return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   293  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   294  #endif /* LWIP_IPV4 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   295  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   296  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   297   * call the "errtfunc" (or the "voidfunc" if "errtfunc" is NULL) in a thread-safe
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   298   * way by running that function inside the tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   299   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   300   * @note use only for functions where there is only "netif" parameter.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   301   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   302  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   303  netifapi_netif_common(struct netif *netif, netifapi_void_fn voidfunc,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   304                        netifapi_errt_fn errtfunc)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   305  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   306    err_t err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   307    NETIFAPI_VAR_DECLARE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   308    NETIFAPI_VAR_ALLOC(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   309  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   310    NETIFAPI_VAR_REF(msg).netif = netif;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   311    NETIFAPI_VAR_REF(msg).msg.common.voidfunc = voidfunc;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   312    NETIFAPI_VAR_REF(msg).msg.common.errtfunc = errtfunc;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   313    err = tcpip_api_call(netifapi_do_netif_common, &API_VAR_REF(msg).call);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   314    NETIFAPI_VAR_FREE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   315    return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   316  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   317  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   318  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   319  * @ingroup netifapi_netif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   320  * Call netif_name_to_index() in a thread-safe way by running that function inside the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   321  * tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   322  *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   323  * @param name the interface name of the netif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   324  * @param idx output index of the found netif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   325  */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   326  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   327  netifapi_netif_name_to_index(const char *name, u8_t *idx)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   328  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   329    err_t err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   330    NETIFAPI_VAR_DECLARE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   331    NETIFAPI_VAR_ALLOC(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   332  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   333    *idx = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   334  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   335  #if LWIP_MPU_COMPATIBLE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   336    strncpy(NETIFAPI_VAR_REF(msg).msg.ifs.name, name, NETIF_NAMESIZE - 1);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   337    NETIFAPI_VAR_REF(msg).msg.ifs.name[NETIF_NAMESIZE - 1] = '\0';
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   338  #else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   339    NETIFAPI_VAR_REF(msg).msg.ifs.name = LWIP_CONST_CAST(char *, name);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   340  #endif /* LWIP_MPU_COMPATIBLE */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   341    err = tcpip_api_call(netifapi_do_name_to_index, &API_VAR_REF(msg).call);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   342    if (!err) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   343      *idx = NETIFAPI_VAR_REF(msg).msg.ifs.index;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   344    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   345    NETIFAPI_VAR_FREE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   346    return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   347  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   348  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   349  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   350  * @ingroup netifapi_netif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   351  * Call netif_index_to_name() in a thread-safe way by running that function inside the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   352  * tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   353  *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   354  * @param idx the interface index of the netif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   355  * @param name output name of the found netif, empty '\0' string if netif not found.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   356  *             name should be of at least NETIF_NAMESIZE bytes
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   357  */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   358  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   359  netifapi_netif_index_to_name(u8_t idx, char *name)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   360  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   361    err_t err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   362    NETIFAPI_VAR_DECLARE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   363    NETIFAPI_VAR_ALLOC(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   364  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   365    NETIFAPI_VAR_REF(msg).msg.ifs.index = idx;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   366  #if !LWIP_MPU_COMPATIBLE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   367    NETIFAPI_VAR_REF(msg).msg.ifs.name = name;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   368  #endif /* LWIP_MPU_COMPATIBLE */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   369    err = tcpip_api_call(netifapi_do_index_to_name, &API_VAR_REF(msg).call);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   370  #if LWIP_MPU_COMPATIBLE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   371    if (!err) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   372      strncpy(name, NETIFAPI_VAR_REF(msg).msg.ifs.name, NETIF_NAMESIZE - 1);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   373      name[NETIF_NAMESIZE - 1] = '\0';
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   374    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   375  #endif /* LWIP_MPU_COMPATIBLE */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   376    NETIFAPI_VAR_FREE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   377    return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   378  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   379  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netifapi.c	   380  #endif /* LWIP_NETIF_API */

	; Module end
