	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 09003395"
	.compiler_invocation	"ctc -f cc35420a --dep-file=EAS\\BSW\\PduR\\.PduR.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --fp-model=+float -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Lib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\App_Func -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\demo -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Adc_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Gtm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\AscLin_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Can_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\EthV2_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Stm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Main -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\APP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\BswM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanSm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Com -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\ComM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Common -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Crc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Det -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\DoIP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EcuM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Eth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthSM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTrcv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FiM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FlsTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Nm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\PduR -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\RamTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\StbM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\arpa -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\net -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\sys -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\stdc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\apps -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\priv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\UdpNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Cal -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Daq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pag -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pgm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Std -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\XcpOnEth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Library\\Vfx_ComE2E -g2 --make-target=EAS\\BSW\\PduR\\PduR.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O1 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o EAS\\BSW\\PduR\\PduR.src ..\\EAS\\BSW\\PduR\\PduR.c"
	.compiler_name		"ctc"
	;source	'..\\EAS\\BSW\\PduR\\PduR.c'

	
$TC162
	
	.sdecl	'.text.PduR.PduR_LowerIfRxIndication',code,cluster('PduR_LowerIfRxIndication')
	.sect	'.text.PduR.PduR_LowerIfRxIndication'
	.align	2
	

; ..\EAS\BSW\PduR\PduR.c	     1  /*  BEGIN_FILE_HDR
; ..\EAS\BSW\PduR\PduR.c	     2  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	     3  *   NOTICE
; ..\EAS\BSW\PduR\PduR.c	     4  *   This software is the property of HiRain Technologies. Any information
; ..\EAS\BSW\PduR\PduR.c	     5  *   contained in this doc should not be reproduced, or used, or disclosed
; ..\EAS\BSW\PduR\PduR.c	     6  *   without the written authorization from HiRain Technologies.
; ..\EAS\BSW\PduR\PduR.c	     7  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	     8  *   File Name       : PduR.c
; ..\EAS\BSW\PduR\PduR.c	     9  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	    10  *   Project/Product : AUTOSAR 4.2
; ..\EAS\BSW\PduR\PduR.c	    11  *   Title           : PduR.c
; ..\EAS\BSW\PduR\PduR.c	    12  *   Author          : Hirain
; ..\EAS\BSW\PduR\PduR.c	    13  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	    14  *   Description     : Implementation of PDUR
; ..\EAS\BSW\PduR\PduR.c	    15  *
; ..\EAS\BSW\PduR\PduR.c	    16  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	    17  *   Limitations     : None
; ..\EAS\BSW\PduR\PduR.c	    18  *
; ..\EAS\BSW\PduR\PduR.c	    19  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	    20  *
; ..\EAS\BSW\PduR\PduR.c	    21  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	    22  *   Revision History:
; ..\EAS\BSW\PduR\PduR.c	    23  *
; ..\EAS\BSW\PduR\PduR.c	    24  *   Version     Date          Initials      CR#          Descriptions
; ..\EAS\BSW\PduR\PduR.c	    25  *   ---------   ----------    ------------  ----------   ---------------
; ..\EAS\BSW\PduR\PduR.c	    26  *   01.00.00    05/08/2016    Rui.Guo       N/A          Beta
; ..\EAS\BSW\PduR\PduR.c	    27  *   01.01.00    26/06/2018    Boxue.Li      N/A          Original
; ..\EAS\BSW\PduR\PduR.c	    28  *   01.01.01    29/08/2018    Boxue.Li      N/A          EAS422_PduR_20180829_01
; ..\EAS\BSW\PduR\PduR.c	    29  *   01.01.02    14/09/2018    Boxue.Li      N/A          EAS422_PduR_20180914_01
; ..\EAS\BSW\PduR\PduR.c	    30  *   01.01.03    09/11/2018    Boxue.Li      N/A          EAS422_PduR_20181109_01
; ..\EAS\BSW\PduR\PduR.c	    31  *   01.01.04    21/01/2019    Boxue.Li      N/A          EAS422_PduR_20190121_01
; ..\EAS\BSW\PduR\PduR.c	    32  *   01.01.05    12/06/2019    Boxue.Li      N/A          EAS422_PduR_20190612_01
; ..\EAS\BSW\PduR\PduR.c	    33  *   01.01.06    21/10/2019    Boxue.Li      N/A          EAS422_PduR_20191021_01
; ..\EAS\BSW\PduR\PduR.c	    34  *   01.01.07    22/10/2019    Boxue.Li      N/A          EAS422_PduR_20191022_01
; ..\EAS\BSW\PduR\PduR.c	    35  *   01.01.08    12/02/2020    Boxue.Li      N/A          EAS422_PduR_20200212_01
; ..\EAS\BSW\PduR\PduR.c	    36  *   01.01.09    26/05/2020    Boxue.Li      N/A          EAS422_PduR_20200526_01
; ..\EAS\BSW\PduR\PduR.c	    37  *   01.01.10    01/07/2020    Boxue.Li      N/A          EAS422_PduR_20200701_01
; ..\EAS\BSW\PduR\PduR.c	    38  *   01.01.11    04/08/2020    Boxue.Li      N/A          EAS422_PduR_20200804_01
; ..\EAS\BSW\PduR\PduR.c	    39  *   01.01.12    19/08/2020    Boxue.Li      N/A          EAS422_PduR_20200819_01
; ..\EAS\BSW\PduR\PduR.c	    40  *   01.01.13    24/09/2020    Feixiang.Dong N/A          EAS422_PduR_20200924_01
; ..\EAS\BSW\PduR\PduR.c	    41  *   01.01.14    24/12/2020    Xin.Yang1     N/A          EAS422_PduR_20201224_01
; ..\EAS\BSW\PduR\PduR.c	    42  *   01.01.15    11/06/2021    Boxue.Li      N/A          EAS422_PduR_20210611_01
; ..\EAS\BSW\PduR\PduR.c	    43  *   01.01.16    01/06/2022    Ziyi.Zhao     N/A          EAS422_PduR_20220601_01
; ..\EAS\BSW\PduR\PduR.c	    44  *   01.01.17    16/03/2023    Feixiang.Dong N/A          EAS422_PduR_20230316_01
; ..\EAS\BSW\PduR\PduR.c	    45  *   01.01.18    26/07/2023    Feixiang.Dong N/A          EAS422_PduR_20230726_01
; ..\EAS\BSW\PduR\PduR.c	    46  *   01.01.19    08/08/2023    Feixiang.Dong N/A          EAS422_PduR_20230808_01
; ..\EAS\BSW\PduR\PduR.c	    47  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	    48  * END_FILE_HDR*/
; ..\EAS\BSW\PduR\PduR.c	    49  
; ..\EAS\BSW\PduR\PduR.c	    50  /*******************************************************************************
; ..\EAS\BSW\PduR\PduR.c	    51  *   Includes
; ..\EAS\BSW\PduR\PduR.c	    52  *******************************************************************************/
; ..\EAS\BSW\PduR\PduR.c	    53  #include "PduR.h"
; ..\EAS\BSW\PduR\PduR.c	    54  #include "SchM_PduR.h"
; ..\EAS\BSW\PduR\PduR.c	    55  #include "Bsw_Common.h"
; ..\EAS\BSW\PduR\PduR.c	    56  
; ..\EAS\BSW\PduR\PduR.c	    57  #if(STD_OFF == PDUR_ZERO_COST_OPERATION)
; ..\EAS\BSW\PduR\PduR.c	    58  
; ..\EAS\BSW\PduR\PduR.c	    59  #if(STD_ON == PDUR_DEV_ERROR_DETECT)
; ..\EAS\BSW\PduR\PduR.c	    60  #include "Det.h"
; ..\EAS\BSW\PduR\PduR.c	    61  #endif
; ..\EAS\BSW\PduR\PduR.c	    62  #if(STD_ON == PDUR_COM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	    63  #include "PduR_Com.h"
; ..\EAS\BSW\PduR\PduR.c	    64  #include "Com_Cbk.h"
; ..\EAS\BSW\PduR\PduR.c	    65  #endif
; ..\EAS\BSW\PduR\PduR.c	    66  #if(STD_ON == PDUR_LDCOM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	    67  #include "PduR_LdCom.h"
; ..\EAS\BSW\PduR\PduR.c	    68  #include "LdCom_Cbk.h"
; ..\EAS\BSW\PduR\PduR.c	    69  #endif
; ..\EAS\BSW\PduR\PduR.c	    70  #if(STD_ON == PDUR_DCM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	    71  #include "PduR_Dcm.h"
; ..\EAS\BSW\PduR\PduR.c	    72  #include "Dcm_Cbk.h"
; ..\EAS\BSW\PduR\PduR.c	    73  #endif
; ..\EAS\BSW\PduR\PduR.c	    74  #if(STD_ON == PDUR_DOIPGW_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	    75  #include "DoIPGW_Cbk.h"
; ..\EAS\BSW\PduR\PduR.c	    76  #endif
; ..\EAS\BSW\PduR\PduR.c	    77  #if(STD_ON == PDUR_J1939DCM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	    78  #include "PduR_J1939Dcm.h"
; ..\EAS\BSW\PduR\PduR.c	    79  #include "J1939Dcm_Cbk.h"
; ..\EAS\BSW\PduR\PduR.c	    80  #endif
; ..\EAS\BSW\PduR\PduR.c	    81  #if(STD_ON == PDUR_J1939RM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	    82  #include "PduR_J1939Rm.h"
; ..\EAS\BSW\PduR\PduR.c	    83  #include "J1939Rm_Cbk.h"
; ..\EAS\BSW\PduR\PduR.c	    84  #endif
; ..\EAS\BSW\PduR\PduR.c	    85  #if(STD_ON == PDUR_CANIF_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	    86  #include "PduR_CanIf.h"
; ..\EAS\BSW\PduR\PduR.c	    87  #include "CanIf.h"
; ..\EAS\BSW\PduR\PduR.c	    88  #endif
; ..\EAS\BSW\PduR\PduR.c	    89  #if(STD_ON == PDUR_CANTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	    90  #include "PduR_CanTp.h"
; ..\EAS\BSW\PduR\PduR.c	    91  #include "CanTp.h"
; ..\EAS\BSW\PduR\PduR.c	    92  #endif
; ..\EAS\BSW\PduR\PduR.c	    93  #if(STD_ON == PDUR_CANNM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	    94  #include "PduR_CanNm.h"
; ..\EAS\BSW\PduR\PduR.c	    95  #include "CanNm.h"
; ..\EAS\BSW\PduR\PduR.c	    96  #endif
; ..\EAS\BSW\PduR\PduR.c	    97  #if(STD_ON == PDUR_UDPNM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	    98  #include "PduR_UdpNm.h"
; ..\EAS\BSW\PduR\PduR.c	    99  #include "UdpNm.h"
; ..\EAS\BSW\PduR\PduR.c	   100  #endif
; ..\EAS\BSW\PduR\PduR.c	   101  #if(STD_ON == PDUR_LINIF_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   102  #include "PduR_LinIf.h"
; ..\EAS\BSW\PduR\PduR.c	   103  #include "LinIf.h"
; ..\EAS\BSW\PduR\PduR.c	   104  #endif
; ..\EAS\BSW\PduR\PduR.c	   105  #if(STD_ON == PDUR_LINTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   106  #include "PduR_LinTp.h"
; ..\EAS\BSW\PduR\PduR.c	   107  #include "LinTp.h"
; ..\EAS\BSW\PduR\PduR.c	   108  #endif
; ..\EAS\BSW\PduR\PduR.c	   109  #if(STD_ON == PDUR_FRIF_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   110  #include "PduR_FrIf.h"
; ..\EAS\BSW\PduR\PduR.c	   111  #include "FrIf.h"
; ..\EAS\BSW\PduR\PduR.c	   112  #endif
; ..\EAS\BSW\PduR\PduR.c	   113  #if(STD_ON == PDUR_FRTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   114  #include "PduR_FrTp.h"
; ..\EAS\BSW\PduR\PduR.c	   115  #include "FrTp.h"
; ..\EAS\BSW\PduR\PduR.c	   116  #endif
; ..\EAS\BSW\PduR\PduR.c	   117  #if(STD_ON == PDUR_DOIPTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   118  #include "PduR_DoIP.h"
; ..\EAS\BSW\PduR\PduR.c	   119  #include "DoIP.h"
; ..\EAS\BSW\PduR\PduR.c	   120  #endif
; ..\EAS\BSW\PduR\PduR.c	   121  #if(STD_ON == PDUR_SOADIF_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   122  #include "PduR_SoAd.h"
; ..\EAS\BSW\PduR\PduR.c	   123  #include "SoAd.h"
; ..\EAS\BSW\PduR\PduR.c	   124  #endif
; ..\EAS\BSW\PduR\PduR.c	   125  #if(STD_ON == PDUR_J1939TP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   126  #include "PduR_J1939Tp.h"
; ..\EAS\BSW\PduR\PduR.c	   127  #include "J1939Tp.h"
; ..\EAS\BSW\PduR\PduR.c	   128  #endif
; ..\EAS\BSW\PduR\PduR.c	   129  
; ..\EAS\BSW\PduR\PduR.c	   130  #if(STD_ON == PDUR_CDD_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   131  #include "PduR_Cdd.h"
; ..\EAS\BSW\PduR\PduR.c	   132  #include "Cdd_Cbk.h"
; ..\EAS\BSW\PduR\PduR.c	   133  #endif
; ..\EAS\BSW\PduR\PduR.c	   134  
; ..\EAS\BSW\PduR\PduR.c	   135  #if(STD_ON == PDUR_CDDIF_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   136  #include "PduR_CddIf.h"
; ..\EAS\BSW\PduR\PduR.c	   137  #include "CddIf.h"
; ..\EAS\BSW\PduR\PduR.c	   138  #endif
; ..\EAS\BSW\PduR\PduR.c	   139  
; ..\EAS\BSW\PduR\PduR.c	   140  #if(STD_ON == PDUR_CDDTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   141  #include "PduR_CddTp.h"
; ..\EAS\BSW\PduR\PduR.c	   142  #include "CddTp.h"
; ..\EAS\BSW\PduR\PduR.c	   143  #endif
; ..\EAS\BSW\PduR\PduR.c	   144  
; ..\EAS\BSW\PduR\PduR.c	   145  #if(STD_ON == PDUR_IPDUM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   146  #include "PduR_IpduM.h"
; ..\EAS\BSW\PduR\PduR.c	   147  #include "IpduM.h"
; ..\EAS\BSW\PduR\PduR.c	   148  #endif
; ..\EAS\BSW\PduR\PduR.c	   149  
; ..\EAS\BSW\PduR\PduR.c	   150  #if(STD_ON == PDUR_SOMEIPTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   151  #include "PduR_SomeIpTp.h"
; ..\EAS\BSW\PduR\PduR.c	   152  #include "SomeIpTp.h"
; ..\EAS\BSW\PduR\PduR.c	   153  #endif
; ..\EAS\BSW\PduR\PduR.c	   154  
; ..\EAS\BSW\PduR\PduR.c	   155  #if(STD_ON == PDUR_SECOC_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   156  #include "PduR_SecOC.h"
; ..\EAS\BSW\PduR\PduR.c	   157  #include "SecOC.h"
; ..\EAS\BSW\PduR\PduR.c	   158  #endif
; ..\EAS\BSW\PduR\PduR.c	   159  /*******************************************************************************
; ..\EAS\BSW\PduR\PduR.c	   160  *   Version Check
; ..\EAS\BSW\PduR\PduR.c	   161  *******************************************************************************/
; ..\EAS\BSW\PduR\PduR.c	   162  /*ComM0136 */
; ..\EAS\BSW\PduR\PduR.c	   163  #if(STD_ON == PDUR_VERSION_CHECK)
; ..\EAS\BSW\PduR\PduR.c	   164  /* check Version with other import module */
; ..\EAS\BSW\PduR\PduR.c	   165  
; ..\EAS\BSW\PduR\PduR.c	   166  /* check Version with cfg file */
; ..\EAS\BSW\PduR\PduR.c	   167  #if ((PDUR_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_PRECOMPILE) && \ 
; ..\EAS\BSW\PduR\PduR.c	   168      (PDUR_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD))
; ..\EAS\BSW\PduR\PduR.c	   169  #error "The PduR module only supports Pre-Compile and Post-Build Configuration."
; ..\EAS\BSW\PduR\PduR.c	   170  #endif
; ..\EAS\BSW\PduR\PduR.c	   171  
; ..\EAS\BSW\PduR\PduR.c	   172  #if ((PDUR_AR_RELEASE_MAJOR_VERSION != PDUR_AR_RELEASE_MAJOR_VERSION_CFG) || \ 
; ..\EAS\BSW\PduR\PduR.c	   173     (PDUR_AR_RELEASE_MINOR_VERSION != PDUR_AR_RELEASE_MINOR_VERSION_CFG))
; ..\EAS\BSW\PduR\PduR.c	   174  #error "AutoSar Version Numbers of PduR and its cfg file are incompatible"
; ..\EAS\BSW\PduR\PduR.c	   175  #endif
; ..\EAS\BSW\PduR\PduR.c	   176  
; ..\EAS\BSW\PduR\PduR.c	   177  #if ((PDUR_SW_MAJOR_VERSION != PDUR_SW_MAJOR_VERSION_CFG) || \ 
; ..\EAS\BSW\PduR\PduR.c	   178     (PDUR_SW_MINOR_VERSION != PDUR_SW_MINOR_VERSION_CFG))
; ..\EAS\BSW\PduR\PduR.c	   179  #error "SW Version Numbers of PduR and its cfg file are incompatible"
; ..\EAS\BSW\PduR\PduR.c	   180  #endif
; ..\EAS\BSW\PduR\PduR.c	   181  
; ..\EAS\BSW\PduR\PduR.c	   182  
; ..\EAS\BSW\PduR\PduR.c	   183  #endif/*#if(STD_ON == PDUR_VERSION_CHECK)*/
; ..\EAS\BSW\PduR\PduR.c	   184  
; ..\EAS\BSW\PduR\PduR.c	   185  
; ..\EAS\BSW\PduR\PduR.c	   186  /*Cfg compatibility check*/
; ..\EAS\BSW\PduR\PduR.c	   187  
; ..\EAS\BSW\PduR\PduR.c	   188  
; ..\EAS\BSW\PduR\PduR.c	   189  /*******************************************************************************
; ..\EAS\BSW\PduR\PduR.c	   190  *   Macro
; ..\EAS\BSW\PduR\PduR.c	   191  *******************************************************************************/
; ..\EAS\BSW\PduR\PduR.c	   192  #if(STD_ON == PDUR_DEV_ERROR_DETECT)
; ..\EAS\BSW\PduR\PduR.c	   193  
; ..\EAS\BSW\PduR\PduR.c	   194  #define  PDUR_DET_REPORT_ERROR(ApiId, errcode)  \ 
; ..\EAS\BSW\PduR\PduR.c	   195      DET_REPORT_ERROR(PDUR_MODULE_ID, PDUR_INSTANCE_ID, ((uint8)ApiId), ((uint8)errcode))
; ..\EAS\BSW\PduR\PduR.c	   196  
; ..\EAS\BSW\PduR\PduR.c	   197  #else
; ..\EAS\BSW\PduR\PduR.c	   198  
; ..\EAS\BSW\PduR\PduR.c	   199  #define  PDUR_DET_REPORT_ERROR(ApiId, errcode)
; ..\EAS\BSW\PduR\PduR.c	   200  
; ..\EAS\BSW\PduR\PduR.c	   201  #endif
; ..\EAS\BSW\PduR\PduR.c	   202  
; ..\EAS\BSW\PduR\PduR.c	   203  #if(PDUR_MAX_NUMOFBUFFER > 0)
; ..\EAS\BSW\PduR\PduR.c	   204  /*PDUR Dest dedicated Buffer State */
; ..\EAS\BSW\PduR\PduR.c	   205  #define PDUR_BUFFER_IDLE                   ((uint8)0x00)
; ..\EAS\BSW\PduR\PduR.c	   206  #define PDUR_BUFFER_TRANSMITING            ((uint8)0x01)
; ..\EAS\BSW\PduR\PduR.c	   207  #define PDUR_BUFFER_RECEIVING              ((uint8)0x02)
; ..\EAS\BSW\PduR\PduR.c	   208  #define PDUR_BUFFER_GW_FLYING              ((uint8)0x04)
; ..\EAS\BSW\PduR\PduR.c	   209  #endif
; ..\EAS\BSW\PduR\PduR.c	   210  
; ..\EAS\BSW\PduR\PduR.c	   211  #if(PDUR_CONFIG_VARIANTS == STD_CONFIG_VARIANTS_PRECOMPILE)
; ..\EAS\BSW\PduR\PduR.c	   212  #define PDUR_GET_NUM_ROUTPATH()                     ((PduR_RoutingPathIdType)PDUR_NUMPDURROUTPATH)
; ..\EAS\BSW\PduR\PduR.c	   213  #define PDUR_GET_NUM_ROUTPATHGROUP()                ((PduR_RoutingPathGroupIdType)PDUR_NUMOFROUTINGPATHGROUP)
; ..\EAS\BSW\PduR\PduR.c	   214  #if(PDUR_MAX_NUMOFBUFFER > 0)
; ..\EAS\BSW\PduR\PduR.c	   215  #define PDUR_GET_NUM_BUFFER()                       ((uint16)PDUR_NUMOFBUFFER)
; ..\EAS\BSW\PduR\PduR.c	   216  #endif
; ..\EAS\BSW\PduR\PduR.c	   217  #define PDUR_GET_NUM_CANTPRXPDU()                   ((PduIdType)PDUR_NUMOFCANTPRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   218  #define PDUR_GET_NUM_LINTPRXPDU()                   ((PduIdType)PDUR_NUMOFLINTPRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   219  #define PDUR_GET_NUM_FRTPRXPDU()                    ((PduIdType)PDUR_NUMOFFRTPRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   220  #define PDUR_GET_NUM_CDDTPRXPDU()                   ((PduIdType)PDUR_NUMOFCDDTPRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   221  #define PDUR_GET_NUM_SOADTPRXPDU()                  ((PduIdType)PDUR_NUMOFSOADTPRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   222  #define PDUR_GET_NUM_DOIPTPRXPDU()                  ((PduIdType)PDUR_NUMOFDOIPTPRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   223  #define PDUR_GET_NUM_J1939TPRXPDU()                 ((PduIdType)PDUR_NUMOFJ1939TPRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   224  #define PDUR_GET_NUM_CANTPTXPDU()                   ((PduIdType)PDUR_NUMOFCANTPTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   225  #define PDUR_GET_NUM_LINTPTXPDU()                   ((PduIdType)PDUR_NUMOFLINTPTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   226  #define PDUR_GET_NUM_FRTPTXPDU()                    ((PduIdType)PDUR_NUMOFFRTPTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   227  #define PDUR_GET_NUM_SOADTPTXPDU()                  ((PduIdType)PDUR_NUMOFSOADTPTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   228  #define PDUR_GET_NUM_CDDTPTXPDU()                   ((PduIdType)PDUR_NUMOFCDDTPTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   229  #define PDUR_GET_NUM_DOIPTPTXPDU()                  ((PduIdType)PDUR_NUMOFDOIPTPTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   230  #define PDUR_GET_NUM_J1939TPTXPDU()                 ((PduIdType)PDUR_NUMOFJ1939TPTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   231  #define PDUR_GET_NUM_CANIFTXPDU()                   ((PduIdType)PDUR_NUMOFCANIFTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   232  #define PDUR_GET_NUM_CANIFRXPDU()                   ((PduIdType)PDUR_NUMOFCANIFRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   233  #define PDUR_GET_NUM_CANNMTXPDU()                   ((PduIdType)PDUR_NUMOFCANNMTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   234  #define PDUR_GET_NUM_CANNMRXPDU()                   ((PduIdType)PDUR_NUMOFCANNMRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   235  #define PDUR_GET_NUM_UDPNMTXPDU()                   ((PduIdType)PDUR_NUMOFUDPNMTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   236  #define PDUR_GET_NUM_UDPNMRXPDU()                   ((PduIdType)PDUR_NUMOFUDPNMRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   237  #define PDUR_GET_NUM_LINIFRXPDU()                   ((PduIdType)PDUR_NUMOFLINIFRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   238  #define PDUR_GET_NUM_LINIFTXPDU()                   ((PduIdType)PDUR_NUMOFLINIFTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   239  #define PDUR_GET_NUM_FRIFRXPDU()                    ((PduIdType)PDUR_NUMOFFRIFRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   240  #define PDUR_GET_NUM_FRIFTXPDU()                    ((PduIdType)PDUR_NUMOFFRIFTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   241  #define PDUR_GET_NUM_SOADIFRXPDU()                  ((PduIdType)PDUR_NUMOFSOADIFRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   242  #define PDUR_GET_NUM_SOADIFTXPDU()                  ((PduIdType)PDUR_NUMOFSOADIFTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   243  #define PDUR_GET_NUM_DOIPIFTXPDU()                  ((PduIdType)PDUR_NUMOFDOIPIFTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   244  #define PDUR_GET_NUM_CDDIFRXPDU()                   ((PduIdType)PDUR_NUMOFCDDIFRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   245  #define PDUR_GET_NUM_CDDIFTXPDU()                   ((PduIdType)PDUR_NUMOFCDDIFTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   246  #define PDUR_GET_NUM_DOIPIFRXPDU()                  ((PduIdType)PDUR_NUMOFDOIPIFRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   247  #define PDUR_GET_NUM_DCMRXPDU()                     ((PduIdType)PDUR_NUMOFDCMRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   248  #define PDUR_GET_NUM_DCMTXPDU()                     ((PduIdType)PDUR_NUMOFDCMTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   249  #define PDUR_GET_NUM_COMTXPDU()                     ((PduIdType)PDUR_NUMOFCOMTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   250  #define PDUR_GET_NUM_LDCOMTXPDU()                   ((PduIdType)PDUR_NUMOFLDCOMTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   251  #define PDUR_GET_NUM_J1939RMTXPDU()                 ((PduIdType)PDUR_NUMOFJ1939RMTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   252  #define PDUR_GET_NUM_J1939DCMRXPDU()                ((PduIdType)PDUR_NUMOFJ1939DCMRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   253  #define PDUR_GET_NUM_J1939DCMTXPDU()                ((PduIdType)PDUR_NUMOFJ1939DCMTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   254  #define PDUR_GET_NUM_CDDTXPDU()                     ((PduIdType)PDUR_NUMOFCDDTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   255  #define PDUR_GET_NUM_CDDRXPDU()                     ((PduIdType)PDUR_NUMOFCDDRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   256  #define PDUR_GET_NUM_IPDUMTXPDU()                   ((PduIdType)PDUR_NUMOFIPDUMTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   257  #define PDUR_GET_NUM_IPDUMIFRXPDU()                 ((PduIdType)PDUR_NUMOFIPDUMIFRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   258  #define PDUR_GET_NUM_IPDUMIFTXPDU()                 ((PduIdType)PDUR_NUMOFIPDUMIFTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   259  #define PDUR_GET_NUM_SOMEIPTXPDU()                  ((PduIdType)PDUR_NUMOFSOMEIPTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   260  #define PDUR_GET_NUM_SOMEIPTPRXPDU()                ((PduIdType)PDUR_NUMOFSOMEIPTPRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   261  #define PDUR_GET_NUM_SOMEIPTPTXPDU()                ((PduIdType)PDUR_NUMOFSOMEIPTPTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   262  #define PDUR_GET_NUM_SECOCTXPDU()                   ((PduIdType)PDUR_NUMOFSECOCTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   263  #define PDUR_GET_NUM_SECOCRXPDU()                   ((PduIdType)PDUR_NUMOFSECOCRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   264  #define PDUR_GET_NUM_SECOCIFTXPDU()                 ((PduIdType)PDUR_NUMOFSECOCIFTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   265  #define PDUR_GET_NUM_SECOCIFRXPDU()                 ((PduIdType)PDUR_NUMOFSECOCIFRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   266  #define PDUR_GET_NUM_SECOCTPTXPDU()                 ((PduIdType)PDUR_NUMOFSECOCTPTXPDU)
; ..\EAS\BSW\PduR\PduR.c	   267  #define PDUR_GET_NUM_SECOCTPRXPDU()                 ((PduIdType)PDUR_NUMOFSECOCTPRXPDU)
; ..\EAS\BSW\PduR\PduR.c	   268  #define PDUR_ROUTINGPATHINFO(PathId)                (PduRRoutingTable[PathId])
; ..\EAS\BSW\PduR\PduR.c	   269  #define PDUR_GET_RPGROUP_ENABLED_ATINIT(GroupId)    (PduR_RPGroupEnabledAtInit[GroupId])
; ..\EAS\BSW\PduR\PduR.c	   270  #define PDUR_COM_TXPDUINFO(PduId)                   (PduRComTxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   271  #define PDUR_LDCOM_TXPDUINFO(PduId)                 (PduRLdComTxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   272  #define PDUR_DCM_TXPDUINFO(PduId)                   (PduRDcmTxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   273  #define PDUR_J1939DCM_TXPDUINFO(PduId)              (PduRJ1939DcmTxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   274  #define PDUR_J1939RM_TXPDUINFO(PduId)               (PduRJ1939RmTxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   275  #define PDUR_CDD_TXPDUINFO(PduId)                   (PduRCddTxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   276  #define PDUR_CANTP_RXPDUINFO(PduId)                 (PduRCanTpRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   277  #define PDUR_LINTP_RXPDUINFO(PduId)                 (PduRLinTpRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   278  #define PDUR_FRTP_RXPDUINFO(PduId)                  (PduRFrTpRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   279  #define PDUR_SOADTP_RXPDUINFO(PduId)                (PduRSoAdTpRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   280  #define PDUR_DOIPTP_RXPDUINFO(PduId)                (PduRDoIPTpRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   281  #define PDUR_J1939TP_RXPDUINFO(PduId)               (PduRJ1939TpRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   282  #define PDUR_CDDTP_RXPDUINFO(PduId)                 (PduRCddTpRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   283  #define PDUR_DCM_CANCELRXPDUINFO(PduId)             (PduRDcmCancelRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   284  #define PDUR_J1939DCM_CANCELRXPDUINFO(PduId)        (PduRJ1939DcmCancelRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   285  #define PDUR_CDD_CANCELRXPDUINFO(PduId)             (PduRCddCancelRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   286  #define PDUR_CANIF_RXPDUINFO(PduId)                 (PduRCanIfRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   287  #define PDUR_CANIF_TXCONFPDUINFO(PduId)             (PduRCanIfTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   288  #define PDUR_IPDUMIF_RXPDUINFO(PduId)               (PduRIpduMIfRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   289  #define PDUR_IPDUM_TXPDUINFO(PduId)                 (PduRIpduMTxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   290  #define PDUR_IPDUMIF_TXCONFPDUINFO(PduId)           (PduRIpduMIfTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   291  #define PDUR_SOMEIP_TXPDUINFO(PduId)                (PduRSomeIpTxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   292  #define PDUR_SOMEIPTP_RXPDUINFO(PduId)              (PduRSomeIpTpRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   293  #define PDUR_SOMEIPTP_TXCONFPDUINFO(PduId)          (PduRSomeIpTpTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   294  #if(PDUR_MAX_NUMOFSECOCTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	   295  #define PDUR_SECOC_TXPDUINFO(PduId)                 (PduRSecOCTxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   296  #endif
; ..\EAS\BSW\PduR\PduR.c	   297  #define PDUR_SECOC_CANCELRXPDUINFO(PduId)           (PduRSecOCCancelRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   298  #define PDUR_SECOCIF_TXCONFPDUINFO(PduId)           (PduRSecOCIfTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   299  #define PDUR_SECOCIF_RXPDUINFO(PduId)               (PduRSecOCIfRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   300  #define PDUR_SECOCTP_TXCONFPDUINFO(PduId)           (PduRSecOCTpTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   301  #define PDUR_SECOCTP_RXPDUINFO(PduId)               (PduRSecOCTpRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   302  #define PDUR_CANNM_RXPDUINFO(PduId)                 (PduRCanNmRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   303  #define PDUR_CANNM_TXCONFPDUINFO(PduId)             (PduRCanNmTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   304  #define PDUR_UDPNM_RXPDUINFO(PduId)                 (PduRUdpNmRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   305  #define PDUR_UDPNM_TXCONFPDUINFO(PduId)             (PduRUdpNmTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   306  #define PDUR_LINIF_RXPDUINFO(PduId)                 (PduRLinIfRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   307  #define PDUR_LINIF_TXCONFPDUINFO(PduId)             (PduRLinIfTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   308  #define PDUR_FRIF_RXPDUINFO(PduId)                  (PduRFrIfRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   309  #define PDUR_FRIF_TXCONFPDUINFO(PduId)              (PduRFrIfTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   310  #define PDUR_SOADIF_RXPDUINFO(PduId)                (PduRSoAdIfRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   311  #define PDUR_SOADIF_TXCONFPDUINFO(PduId)            (PduRSoAdIfTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   312  #define PDUR_DOIPIF_TXCONFPDUINFO(PduId)            (PduRDoIPIfTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   313  #define PDUR_CDDIF_RXPDUINFO(PduId)                 (PduRCddIfRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   314  #define PDUR_CDDIF_TXCONFPDUINFO(PduId)             (PduRCddIfTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   315  #define PDUR_CANTP_TXCONFPDUINFO(PduId)             (PduRCanTpTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   316  #define PDUR_LINTP_TXCONFPDUINFO(PduId)             (PduRLinTpTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   317  #define PDUR_FRTP_TXCONFPDUINFO(PduId)              (PduRFrTpTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   318  #define PDUR_SOADTP_TXCONFPDUINFO(PduId)            (PduRSoAdTpTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   319  #define PDUR_CDDTP_TXCONFPDUINFO(PduId)             (PduRCddTpTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   320  #define PDUR_DOIPTP_TXCONFPDUINFO(PduId)            (PduRDoIPTpTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   321  #define PDUR_J1939TP_TXCONFPDUINFO(PduId)           (PduRJ1939TpTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   322  #else
; ..\EAS\BSW\PduR\PduR.c	   323  #define PDUR_GET_NUM_ROUTPATH()                     (PduR_ConfigSet->RoutingPathNum)
; ..\EAS\BSW\PduR\PduR.c	   324  #define PDUR_GET_NUM_ROUTPATHGROUP()                (PduR_ConfigSet->RoutingPathGroupNum)
; ..\EAS\BSW\PduR\PduR.c	   325  #if(PDUR_MAX_NUMOFBUFFER > 0)
; ..\EAS\BSW\PduR\PduR.c	   326  #define PDUR_GET_NUM_BUFFER()                       (PduR_ConfigSet->BufferNum)
; ..\EAS\BSW\PduR\PduR.c	   327  #endif
; ..\EAS\BSW\PduR\PduR.c	   328  #define PDUR_GET_NUM_CANTPRXPDU()                   (PduR_ConfigSet->CanTpRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   329  #define PDUR_GET_NUM_LINTPRXPDU()                   (PduR_ConfigSet->LinTpRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   330  #define PDUR_GET_NUM_FRTPRXPDU()                    (PduR_ConfigSet->FrTpRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   331  #define PDUR_GET_NUM_CDDTPRXPDU()                   (PduR_ConfigSet->CddTpRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   332  #define PDUR_GET_NUM_SOADTPRXPDU()                  (PduR_ConfigSet->SoAdTpRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   333  #define PDUR_GET_NUM_DOIPTPRXPDU()                  (PduR_ConfigSet->DoIPTpRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   334  #define PDUR_GET_NUM_J1939TPRXPDU()                 (PduR_ConfigSet->J1939TpRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   335  #define PDUR_GET_NUM_CANTPTXPDU()                   (PduR_ConfigSet->CanTpTxConfPathNum)
; ..\EAS\BSW\PduR\PduR.c	   336  #define PDUR_GET_NUM_LINTPTXPDU()                   (PduR_ConfigSet->LinTpTxConfPathNum)
; ..\EAS\BSW\PduR\PduR.c	   337  #define PDUR_GET_NUM_FRTPTXPDU()                    (PduR_ConfigSet->FrTpTxConfPathNum)
; ..\EAS\BSW\PduR\PduR.c	   338  #define PDUR_GET_NUM_SOADTPTXPDU()                  (PduR_ConfigSet->SoAdTpTxConfPathNum)
; ..\EAS\BSW\PduR\PduR.c	   339  #define PDUR_GET_NUM_CDDTPTXPDU()                   (PduR_ConfigSet->CddTpTxConfPathNum)
; ..\EAS\BSW\PduR\PduR.c	   340  #define PDUR_GET_NUM_DOIPTPTXPDU()                  (PduR_ConfigSet->DoIPTpTxConfPathNum)
; ..\EAS\BSW\PduR\PduR.c	   341  #define PDUR_GET_NUM_J1939TPTXPDU()                 (PduR_ConfigSet->J1939TpTxConfPathNum)
; ..\EAS\BSW\PduR\PduR.c	   342  #define PDUR_GET_NUM_CANIFTXPDU()                   (PduR_ConfigSet->CanIfTxConfPathNum)
; ..\EAS\BSW\PduR\PduR.c	   343  #define PDUR_GET_NUM_CANIFRXPDU()                   (PduR_ConfigSet->CanIfRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   344  #define PDUR_GET_NUM_CANNMTXPDU()                   (PduR_ConfigSet->CanNmTxConfPathNum)
; ..\EAS\BSW\PduR\PduR.c	   345  #define PDUR_GET_NUM_CANNMRXPDU()                   (PduR_ConfigSet->CanNmRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   346  #define PDUR_GET_NUM_UDPNMTXPDU()                   (PduR_ConfigSet->UdpNmTxConfPathNum)
; ..\EAS\BSW\PduR\PduR.c	   347  #define PDUR_GET_NUM_UDPNMRXPDU()                   (PduR_ConfigSet->UdpNmRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   348  #define PDUR_GET_NUM_LINIFRXPDU()                   (PduR_ConfigSet->LinIfRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   349  #define PDUR_GET_NUM_LINIFTXPDU()                   (PduR_ConfigSet->LinIfTxConfPathNum)
; ..\EAS\BSW\PduR\PduR.c	   350  #define PDUR_GET_NUM_FRIFRXPDU()                    (PduR_ConfigSet->FrIfRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   351  #define PDUR_GET_NUM_FRIFTXPDU()                    (PduR_ConfigSet->FrIfTxConfPathNum)
; ..\EAS\BSW\PduR\PduR.c	   352  #define PDUR_GET_NUM_SOADIFRXPDU()                  (PduR_ConfigSet->SoAdIfRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   353  #define PDUR_GET_NUM_SOADIFTXPDU()                  (PduR_ConfigSet->SoAdIfTxConfPathNum)
; ..\EAS\BSW\PduR\PduR.c	   354  #define PDUR_GET_NUM_DOIPIFTXPDU()                  (PduR_ConfigSet->DoIPIfTxConfPathNum)
; ..\EAS\BSW\PduR\PduR.c	   355  #define PDUR_GET_NUM_CDDIFRXPDU()                   (PduR_ConfigSet->CddIfRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   356  #define PDUR_GET_NUM_CDDIFTXPDU()                   (PduR_ConfigSet->CddIfTxConfPathNum)
; ..\EAS\BSW\PduR\PduR.c	   357  #define PDUR_GET_NUM_DOIPIFRXPDU()                  (PduR_ConfigSet->DoIPIfRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   358  #define PDUR_GET_NUM_DCMRXPDU()                     (PduR_ConfigSet->DcmRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   359  #define PDUR_GET_NUM_DCMTXPDU()                     (PduR_ConfigSet->DcmTxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   360  #define PDUR_GET_NUM_COMTXPDU()                     (PduR_ConfigSet->ComTxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   361  #define PDUR_GET_NUM_LDCOMTXPDU()                   (PduR_ConfigSet->LdComTxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   362  #define PDUR_GET_NUM_J1939RMTXPDU()                 (PduR_ConfigSet->J1939RmTxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   363  #define PDUR_GET_NUM_J1939DCMRXPDU()                (PduR_ConfigSet->J1939DcmRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   364  #define PDUR_GET_NUM_J1939DCMTXPDU()                (PduR_ConfigSet->J1939DcmTxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   365  #define PDUR_GET_NUM_CDDTXPDU()                     (PduR_ConfigSet->CddTxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   366  #define PDUR_GET_NUM_CDDRXPDU()                     (PduR_ConfigSet->CddRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   367  #define PDUR_GET_NUM_IPDUMTXPDU()                   (PduR_ConfigSet->IpduMTxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   368  #define PDUR_GET_NUM_IPDUMIFRXPDU()                 (PduR_ConfigSet->IpduMIfRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   369  #define PDUR_GET_NUM_IPDUMIFTXPDU()                 (PduR_ConfigSet->IpduMIfTxConfPathNum)
; ..\EAS\BSW\PduR\PduR.c	   370  #define PDUR_GET_NUM_SOMEIPTXPDU()                  (PduR_ConfigSet->SomeIpTxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   371  #define PDUR_GET_NUM_SOMEIPTPRXPDU()                (PduR_ConfigSet->SomeIpTpRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   372  #define PDUR_GET_NUM_SOMEIPTPTXPDU()                (PduR_ConfigSet->SomeIpTpTxConfPathNum)
; ..\EAS\BSW\PduR\PduR.c	   373  #define PDUR_GET_NUM_SECOCTXPDU()                   (PduR_ConfigSet->SecOCTxConfPathNum)
; ..\EAS\BSW\PduR\PduR.c	   374  #define PDUR_GET_NUM_SECOCRXPDU()                   (PduR_ConfigSet->SecOCRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   375  #define PDUR_GET_NUM_SECOCIFTXPDU()                 (PduR_ConfigSet->SecOCIfTxConfPathNum)
; ..\EAS\BSW\PduR\PduR.c	   376  #define PDUR_GET_NUM_SECOCIFRXPDU()                 (PduR_ConfigSet->SecOCIfRxPathNum)
; ..\EAS\BSW\PduR\PduR.c	   377  #define PDUR_GET_NUM_SECOCTPTXPDU()                 (PduR_ConfigSet->SecOCTpTxConfPathNum)
; ..\EAS\BSW\PduR\PduR.c	   378  #define PDUR_ROUTINGPATHINFO(PathId)                (PduR_ConfigSet->pRoutingTbl[PathId])
; ..\EAS\BSW\PduR\PduR.c	   379  #define PDUR_GET_RPGROUP_ENABLED_ATINIT(GroupId)    (PduR_ConfigSet->RPGroupEnabledAtInit[GroupId])
; ..\EAS\BSW\PduR\PduR.c	   380  #define PDUR_COM_TXPDUINFO(PduId)                   (PduR_ConfigSet->pComTxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   381  #define PDUR_LDCOM_TXPDUINFO(PduId)                 (PduR_ConfigSet->pLdComTxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   382  #define PDUR_DCM_TXPDUINFO(PduId)                   (PduR_ConfigSet->pDcmTxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   383  #define PDUR_J1939DCM_TXPDUINFO(PduId)              (PduR_ConfigSet->pJ1939DcmTxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   384  #define PDUR_J1939RM_TXPDUINFO(PduId)               (PduR_ConfigSet->pJ1939RmTxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   385  #define PDUR_CDD_TXPDUINFO(PduId)                   (PduR_ConfigSet->pCddTxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   386  #define PDUR_CANTP_RXPDUINFO(PduId)                 (PduR_ConfigSet->pCanTpRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   387  #define PDUR_LINTP_RXPDUINFO(PduId)                 (PduR_ConfigSet->pLinTpRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   388  #define PDUR_FRTP_RXPDUINFO(PduId)                  (PduR_ConfigSet->pFrTpRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   389  #define PDUR_SOADTP_RXPDUINFO(PduId)                (PduR_ConfigSet->pSoAdTpRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   390  #define PDUR_DOIPTP_RXPDUINFO(PduId)                (PduR_ConfigSet->pDoIPTpRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   391  #define PDUR_J1939TP_RXPDUINFO(PduId)               (PduR_ConfigSet->pJ1939TpRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   392  #define PDUR_CDDTP_RXPDUINFO(PduId)                 (PduR_ConfigSet->pCddTpRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   393  #define PDUR_DCM_CANCELRXPDUINFO(PduId)             (PduR_ConfigSet->pDcmCancelRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   394  #define PDUR_J1939DCM_CANCELRXPDUINFO(PduId)        (PduR_ConfigSet->pJ1939DcmCancelRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   395  #define PDUR_CDD_CANCELRXPDUINFO(PduId)             (PduR_ConfigSet->pCddCancelRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   396  #define PDUR_SECOC_CANCELRXPDUINFO(PduId)           (PduR_ConfigSet->pSecOCCancelRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   397  #define PDUR_CANIF_RXPDUINFO(PduId)                 (PduR_ConfigSet->pCanIfRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   398  #define PDUR_CANIF_TXCONFPDUINFO(PduId)             (PduR_ConfigSet->pCanIfTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   399  #define PDUR_IPDUMIF_RXPDUINFO(PduId)               (PduR_ConfigSet->pIpduMIfRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   400  #define PDUR_IPDUM_TXPDUINFO(PduId)                 (PduR_ConfigSet->pIpduMTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   401  #define PDUR_IPDUMIF_TXCONFPDUINFO(PduId)           (PduR_ConfigSet->pIpduMIfTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   402  #define PDUR_SOMEIP_TXPDUINFO(PduId)                (PduR_ConfigSet->pSomeIpTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   403  #define PDUR_SOMEIPTP_RXPDUINFO(PduId)              (PduR_ConfigSet->pSomeIpTpRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   404  #define PDUR_SOMEIPTP_TXCONFPDUINFO(PduId)          (PduR_ConfigSet->pSomeIpTpTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   405  #if(PDUR_MAX_NUMOFSECOCTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	   406  #define PDUR_SECOC_TXPDUINFO(PduId)                 (PduR_ConfigSet->pSecOCTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   407  #endif
; ..\EAS\BSW\PduR\PduR.c	   408  #define PDUR_SECOC_RXPDUINFO(PduId)                 (PduR_ConfigSet->pSecOCRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   409  #define PDUR_SECOCIF_TXCONFPDUINFO(PduId)           (PduR_ConfigSet->pSecOCIfTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   410  #define PDUR_SECOCIF_RXPDUINFO(PduId)               (PduR_ConfigSet->pSecOCIfRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   411  #define PDUR_SECOCTP_TXCONFPDUINFO(PduId)           (PduR_ConfigSet->pSecOCTpTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   412  #define PDUR_SECOCTP_RXPDUINFO(PduId)               (PduR_ConfigSet->pSecOCTpRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   413  #define PDUR_CANNM_RXPDUINFO(PduId)                 (PduR_ConfigSet->pCanNmRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   414  #define PDUR_CANNM_TXCONFPDUINFO(PduId)             (PduR_ConfigSet->pCanNmTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   415  #define PDUR_UDPNM_RXPDUINFO(PduId)                 (PduR_ConfigSet->pUdpNmRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   416  #define PDUR_UDPNM_TXCONFPDUINFO(PduId)             (PduR_ConfigSet->pUdpNmTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   417  #define PDUR_LINIF_RXPDUINFO(PduId)                 (PduR_ConfigSet->pLinIfRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   418  #define PDUR_LINIF_TXCONFPDUINFO(PduId)             (PduR_ConfigSet->pLinIfTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   419  #define PDUR_FRIF_RXPDUINFO(PduId)                  (PduR_ConfigSet->pFrIfRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   420  #define PDUR_FRIF_TXCONFPDUINFO(PduId)              (PduR_ConfigSet->pFrIfTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   421  #define PDUR_SOADIF_RXPDUINFO(PduId)                (PduR_ConfigSet->pSoAdIfRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   422  #define PDUR_SOADIF_TXCONFPDUINFO(PduId)            (PduR_ConfigSet->pSoAdIfTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   423  #define PDUR_DOIPIF_TXCONFPDUINFO(PduId)            (PduR_ConfigSet->pDoIPIfTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   424  #define PDUR_CDDIF_RXPDUINFO(PduId)                 (PduR_ConfigSet->pCddIfRxPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   425  #define PDUR_CDDIF_TXCONFPDUINFO(PduId)             (PduR_ConfigSet->pCddIfTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   426  #define PDUR_CANTP_TXCONFPDUINFO(PduId)             (PduR_ConfigSet->pCanTpTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   427  #define PDUR_LINTP_TXCONFPDUINFO(PduId)             (PduR_ConfigSet->pLinTpTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   428  #define PDUR_FRTP_TXCONFPDUINFO(PduId)              (PduR_ConfigSet->pFrTpTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   429  #define PDUR_SOADTP_TXCONFPDUINFO(PduId)            (PduR_ConfigSet->pSoAdTpTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   430  #define PDUR_CDDTP_TXCONFPDUINFO(PduId)             (PduR_ConfigSet->pCddTpTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   431  #define PDUR_DOIPTP_TXCONFPDUINFO(PduId)            (PduR_ConfigSet->pDoIPTpTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   432  #define PDUR_J1939TP_TXCONFPDUINFO(PduId)           (PduR_ConfigSet->pJ1939TpTxConfPduInfo[PduId])
; ..\EAS\BSW\PduR\PduR.c	   433  #endif
; ..\EAS\BSW\PduR\PduR.c	   434  
; ..\EAS\BSW\PduR\PduR.c	   435  /*Initialization status*/
; ..\EAS\BSW\PduR\PduR.c	   436  #define PDUR_IS_INITIALIZED()                       (PDUR_ONLINE == PduR_InitStatus)
; ..\EAS\BSW\PduR\PduR.c	   437  #define PDUR_SET_INITIALIZED()                      (PduR_InitStatus = PDUR_ONLINE)
; ..\EAS\BSW\PduR\PduR.c	   438  #define PDUR_SET_UNINITIALIZED()                    (PduR_InitStatus = PDUR_UNINIT)
; ..\EAS\BSW\PduR\PduR.c	   439  
; ..\EAS\BSW\PduR\PduR.c	   440  
; ..\EAS\BSW\PduR\PduR.c	   441  /*******************************************************************************
; ..\EAS\BSW\PduR\PduR.c	   442  *   Local Data Define
; ..\EAS\BSW\PduR\PduR.c	   443  *******************************************************************************/
; ..\EAS\BSW\PduR\PduR.c	   444  #define PDUR_START_SEC_VAR_INIT_8
; ..\EAS\BSW\PduR\PduR.c	   445  #include "MemMap.h"
; ..\EAS\BSW\PduR\PduR.c	   446  
; ..\EAS\BSW\PduR\PduR.c	   447  /*PDUR global state*/
; ..\EAS\BSW\PduR\PduR.c	   448  /*SWS_PduR_00325*/
; ..\EAS\BSW\PduR\PduR.c	   449  STATIC VAR(PduR_StateType, PDUR_VAR) PduR_InitStatus = PDUR_UNINIT;
; ..\EAS\BSW\PduR\PduR.c	   450  
; ..\EAS\BSW\PduR\PduR.c	   451  #define PDUR_STOP_SEC_VAR_INIT_8
; ..\EAS\BSW\PduR\PduR.c	   452  #include "MemMap.h"
; ..\EAS\BSW\PduR\PduR.c	   453  
; ..\EAS\BSW\PduR\PduR.c	   454  
; ..\EAS\BSW\PduR\PduR.c	   455  
; ..\EAS\BSW\PduR\PduR.c	   456  #define PDUR_START_SEC_CONST_32
; ..\EAS\BSW\PduR\PduR.c	   457  #include "MemMap.h"
; ..\EAS\BSW\PduR\PduR.c	   458  
; ..\EAS\BSW\PduR\PduR.c	   459  /*!!!IMPORTANT!!!
; ..\EAS\BSW\PduR\PduR.c	   460    The order of the members must be the same as in PduRModuleType*/
; ..\EAS\BSW\PduR\PduR.c	   461  STATIC CONST(PduR_ModuleFunc, PDUR_CONST) PduR_ModuleFunctions[MODULE_NUM] =
; ..\EAS\BSW\PduR\PduR.c	   462  {
; ..\EAS\BSW\PduR\PduR.c	   463  #if(STD_ON == PDUR_COM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   464      /*Com*/
; ..\EAS\BSW\PduR\PduR.c	   465      {
; ..\EAS\BSW\PduR\PduR.c	   466  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   467          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   468  #endif
; ..\EAS\BSW\PduR\PduR.c	   469          NULL_PTR,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   470  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   471          NULL_PTR,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   472  #endif
; ..\EAS\BSW\PduR\PduR.c	   473  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   474          NULL_PTR,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   475  #endif
; ..\EAS\BSW\PduR\PduR.c	   476          NULL_PTR,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   477  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   478          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   479  #endif
; ..\EAS\BSW\PduR\PduR.c	   480          Com_RxIndication,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   481          Com_TriggerTransmit,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   482          Com_TxConfirmation,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   483          Com_CopyRxData,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   484          Com_CopyTxData,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   485          Com_StartOfReception,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   486          Com_TpRxIndication,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   487          Com_TpTxConfirmation/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   488      },
; ..\EAS\BSW\PduR\PduR.c	   489  #endif
; ..\EAS\BSW\PduR\PduR.c	   490  #if(STD_ON == PDUR_LDCOM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   491      /*LdCom*/
; ..\EAS\BSW\PduR\PduR.c	   492      {
; ..\EAS\BSW\PduR\PduR.c	   493  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   494          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   495  #endif
; ..\EAS\BSW\PduR\PduR.c	   496          NULL_PTR,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   497  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   498          NULL_PTR,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   499  #endif
; ..\EAS\BSW\PduR\PduR.c	   500  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   501          NULL_PTR,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   502  #endif
; ..\EAS\BSW\PduR\PduR.c	   503          NULL_PTR,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   504  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   505          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   506  #endif
; ..\EAS\BSW\PduR\PduR.c	   507          LdCom_RxIndication,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   508          LdCom_TriggerTransmit,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   509          LdCom_TxConfirmation,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   510          LdCom_CopyRxData,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   511          LdCom_CopyTxData,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   512          LdCom_StartOfReception,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   513          LdCom_TpRxIndication,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   514          LdCom_TpTxConfirmation/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   515      },
; ..\EAS\BSW\PduR\PduR.c	   516  #endif
; ..\EAS\BSW\PduR\PduR.c	   517  #if(STD_ON == PDUR_DCM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   518      /*Dcm*/
; ..\EAS\BSW\PduR\PduR.c	   519      {
; ..\EAS\BSW\PduR\PduR.c	   520  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   521          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   522  #endif
; ..\EAS\BSW\PduR\PduR.c	   523          NULL_PTR,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   524  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   525          NULL_PTR,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   526  #endif
; ..\EAS\BSW\PduR\PduR.c	   527  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   528          NULL_PTR,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   529  #endif
; ..\EAS\BSW\PduR\PduR.c	   530          NULL_PTR,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   531  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   532          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   533  #endif
; ..\EAS\BSW\PduR\PduR.c	   534          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   535          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   536          Dcm_TxConfirmation,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   537          Dcm_CopyRxData,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   538          Dcm_CopyTxData,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   539          Dcm_StartOfReception,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   540          Dcm_TpRxIndication,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   541          Dcm_TpTxConfirmation/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   542      },
; ..\EAS\BSW\PduR\PduR.c	   543  #endif
; ..\EAS\BSW\PduR\PduR.c	   544  #if(STD_ON == PDUR_DOIPGW_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   545      /*DoIPGW*/
; ..\EAS\BSW\PduR\PduR.c	   546      {
; ..\EAS\BSW\PduR\PduR.c	   547  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   548          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   549  #endif
; ..\EAS\BSW\PduR\PduR.c	   550          NULL_PTR,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   551  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   552          NULL_PTR,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   553  #endif
; ..\EAS\BSW\PduR\PduR.c	   554  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   555          NULL_PTR,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   556  #endif
; ..\EAS\BSW\PduR\PduR.c	   557          NULL_PTR,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   558  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   559          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   560  #endif
; ..\EAS\BSW\PduR\PduR.c	   561          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   562          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   563          NULL_PTR,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   564          DoIPGW_CopyRxData,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   565          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   566          DoIPGW_StartOfReception,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   567          DoIPGW_TpRxIndication,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   568          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   569      },
; ..\EAS\BSW\PduR\PduR.c	   570  #endif
; ..\EAS\BSW\PduR\PduR.c	   571  #if(STD_ON == PDUR_J1939DCM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   572      /*J1939Dcm*/
; ..\EAS\BSW\PduR\PduR.c	   573      {
; ..\EAS\BSW\PduR\PduR.c	   574  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   575          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   576  #endif
; ..\EAS\BSW\PduR\PduR.c	   577          NULL_PTR,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   578  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   579          NULL_PTR,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   580  #endif
; ..\EAS\BSW\PduR\PduR.c	   581  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   582          NULL_PTR,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   583  #endif
; ..\EAS\BSW\PduR\PduR.c	   584          NULL_PTR,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   585  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   586          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   587  #endif
; ..\EAS\BSW\PduR\PduR.c	   588          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   589          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   590          J1939Dcm_TxConfirmation,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   591          J1939Dcm_CopyRxData,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   592          J1939Dcm_CopyTxData,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   593          J1939Dcm_StartOfReception,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   594          J1939Dcm_TpRxIndication,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   595          J1939Dcm_TpTxConfirmation/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   596      },
; ..\EAS\BSW\PduR\PduR.c	   597  #endif
; ..\EAS\BSW\PduR\PduR.c	   598  #if(STD_ON == PDUR_J1939RM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   599      /*J1939Rm*/
; ..\EAS\BSW\PduR\PduR.c	   600      {
; ..\EAS\BSW\PduR\PduR.c	   601  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   602          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   603  #endif
; ..\EAS\BSW\PduR\PduR.c	   604          NULL_PTR,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   605  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   606          NULL_PTR,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   607  #endif
; ..\EAS\BSW\PduR\PduR.c	   608  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   609          NULL_PTR,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   610  #endif
; ..\EAS\BSW\PduR\PduR.c	   611          NULL_PTR,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   612  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   613          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   614  #endif
; ..\EAS\BSW\PduR\PduR.c	   615          J1939Rm_RxIndication,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   616          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   617          J1939Rm_TxConfirmation,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   618          NULL_PTR,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   619          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   620          NULL_PTR,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   621          NULL_PTR,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   622          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   623      },
; ..\EAS\BSW\PduR\PduR.c	   624  #endif
; ..\EAS\BSW\PduR\PduR.c	   625  #if(STD_ON == PDUR_CDD_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   626      /*Cdd*/
; ..\EAS\BSW\PduR\PduR.c	   627      {
; ..\EAS\BSW\PduR\PduR.c	   628  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   629          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   630  #endif
; ..\EAS\BSW\PduR\PduR.c	   631          NULL_PTR,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   632  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   633          NULL_PTR,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   634  #endif
; ..\EAS\BSW\PduR\PduR.c	   635  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   636          NULL_PTR,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   637  #endif
; ..\EAS\BSW\PduR\PduR.c	   638          NULL_PTR,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   639  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   640          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   641  #endif
; ..\EAS\BSW\PduR\PduR.c	   642          Cdd_RxIndication,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   643          Cdd_TriggerTransmit,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   644          Cdd_TxConfirmation,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   645          Cdd_CopyRxData,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   646          Cdd_CopyTxData,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   647          Cdd_StartOfReception,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   648          Cdd_TpRxIndication,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   649          Cdd_TpTxConfirmation/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   650      },
; ..\EAS\BSW\PduR\PduR.c	   651  #endif
; ..\EAS\BSW\PduR\PduR.c	   652  #if(STD_ON == PDUR_IPDUM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   653      /*IpduM*/
; ..\EAS\BSW\PduR\PduR.c	   654      {
; ..\EAS\BSW\PduR\PduR.c	   655  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   656          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   657  #endif
; ..\EAS\BSW\PduR\PduR.c	   658          NULL_PTR,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   659  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   660          NULL_PTR,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   661  #endif
; ..\EAS\BSW\PduR\PduR.c	   662  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   663          NULL_PTR,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   664  #endif
; ..\EAS\BSW\PduR\PduR.c	   665          NULL_PTR,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   666  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   667          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   668  #endif
; ..\EAS\BSW\PduR\PduR.c	   669          IpduM_RxIndication,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   670          IpduM_TriggerTransmit,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   671          IpduM_TxConfirmation,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   672          NULL_PTR,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   673          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   674          NULL_PTR,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   675          NULL_PTR,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   676          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   677      },
; ..\EAS\BSW\PduR\PduR.c	   678  #endif
; ..\EAS\BSW\PduR\PduR.c	   679  #if(STD_ON == PDUR_IPDUMIF_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   680      /*IpduMIf*/
; ..\EAS\BSW\PduR\PduR.c	   681      {
; ..\EAS\BSW\PduR\PduR.c	   682  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   683          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   684  #endif
; ..\EAS\BSW\PduR\PduR.c	   685          IpduM_Transmit,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   686  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   687          NULL_PTR,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   688  #endif
; ..\EAS\BSW\PduR\PduR.c	   689  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   690          NULL_PTR,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   691  #endif
; ..\EAS\BSW\PduR\PduR.c	   692          NULL_PTR,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   693  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   694          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   695  #endif
; ..\EAS\BSW\PduR\PduR.c	   696          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   697          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   698          NULL_PTR,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   699          NULL_PTR,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   700          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   701          NULL_PTR,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   702          NULL_PTR,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   703          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   704      },
; ..\EAS\BSW\PduR\PduR.c	   705  #endif
; ..\EAS\BSW\PduR\PduR.c	   706  #if(STD_ON == PDUR_SOMEIP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   707      /*SomeIp*/
; ..\EAS\BSW\PduR\PduR.c	   708      {
; ..\EAS\BSW\PduR\PduR.c	   709  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   710          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   711  #endif
; ..\EAS\BSW\PduR\PduR.c	   712          NULL_PTR,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   713  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   714          NULL_PTR,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   715  #endif
; ..\EAS\BSW\PduR\PduR.c	   716  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   717          NULL_PTR,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   718  #endif
; ..\EAS\BSW\PduR\PduR.c	   719          NULL_PTR,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   720  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   721          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   722  #endif
; ..\EAS\BSW\PduR\PduR.c	   723          SomeIpTp_RxIndication,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   724          SomeIpTp_TriggerTransmit,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   725          SomeIpTp_TxConfirmation,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   726          NULL_PTR,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   727          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   728          NULL_PTR,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   729          NULL_PTR,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   730          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   731      },
; ..\EAS\BSW\PduR\PduR.c	   732  #endif
; ..\EAS\BSW\PduR\PduR.c	   733  #if(STD_ON == PDUR_SOMEIPTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   734      /*SomeIpTp*/
; ..\EAS\BSW\PduR\PduR.c	   735      {
; ..\EAS\BSW\PduR\PduR.c	   736  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   737          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   738  #endif
; ..\EAS\BSW\PduR\PduR.c	   739          NULL_PTR,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   740  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   741          NULL_PTR,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   742  #endif
; ..\EAS\BSW\PduR\PduR.c	   743  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   744          NULL_PTR,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   745  #endif
; ..\EAS\BSW\PduR\PduR.c	   746          SomeIpTp_Transmit,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   747  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   748          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   749  #endif
; ..\EAS\BSW\PduR\PduR.c	   750          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   751          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   752          NULL_PTR,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   753          NULL_PTR,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   754          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   755          NULL_PTR,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   756          NULL_PTR,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   757          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   758      },
; ..\EAS\BSW\PduR\PduR.c	   759  #endif
; ..\EAS\BSW\PduR\PduR.c	   760  #if(STD_ON == PDUR_CANIF_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   761      /*CanIf*/
; ..\EAS\BSW\PduR\PduR.c	   762      {
; ..\EAS\BSW\PduR\PduR.c	   763  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   764  #if(STD_ON == PDUR_CANIF_CANCELTRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   765          CanIf_CancelTransmit,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   766  #else
; ..\EAS\BSW\PduR\PduR.c	   767          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   768  #endif
; ..\EAS\BSW\PduR\PduR.c	   769  #endif
; ..\EAS\BSW\PduR\PduR.c	   770          CanIf_Transmit,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   771  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   772          NULL_PTR,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   773  #endif
; ..\EAS\BSW\PduR\PduR.c	   774  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   775          NULL_PTR,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   776  #endif
; ..\EAS\BSW\PduR\PduR.c	   777          NULL_PTR,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   778  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   779          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   780  #endif
; ..\EAS\BSW\PduR\PduR.c	   781          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   782          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   783          NULL_PTR,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   784          NULL_PTR,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   785          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   786          NULL_PTR,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   787          NULL_PTR,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   788          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   789      },
; ..\EAS\BSW\PduR\PduR.c	   790  #endif
; ..\EAS\BSW\PduR\PduR.c	   791  #if(STD_ON == PDUR_CANTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   792      /*CanTp*/
; ..\EAS\BSW\PduR\PduR.c	   793      {
; ..\EAS\BSW\PduR\PduR.c	   794  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   795          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   796  #endif
; ..\EAS\BSW\PduR\PduR.c	   797          NULL_PTR,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   798  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   799  #if(STD_ON == PDUR_CANTP_CANCELRECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   800          CanTp_CancelReceive,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   801  #else
; ..\EAS\BSW\PduR\PduR.c	   802          NULL_PTR,
; ..\EAS\BSW\PduR\PduR.c	   803  #endif
; ..\EAS\BSW\PduR\PduR.c	   804  #endif
; ..\EAS\BSW\PduR\PduR.c	   805  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   806  #if(STD_ON == PDUR_CANTP_CANCELTRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   807          CanTp_CancelTransmit,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   808  #else
; ..\EAS\BSW\PduR\PduR.c	   809          NULL_PTR,
; ..\EAS\BSW\PduR\PduR.c	   810  #endif
; ..\EAS\BSW\PduR\PduR.c	   811  #endif
; ..\EAS\BSW\PduR\PduR.c	   812          CanTp_Transmit,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   813  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   814  #if(STD_ON == PDUR_CANTP_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   815          CanTp_ChangeParameter,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   816  #else
; ..\EAS\BSW\PduR\PduR.c	   817          NULL_PTR,
; ..\EAS\BSW\PduR\PduR.c	   818  #endif
; ..\EAS\BSW\PduR\PduR.c	   819  #endif
; ..\EAS\BSW\PduR\PduR.c	   820          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   821          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   822          NULL_PTR,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   823          NULL_PTR,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   824          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   825          NULL_PTR,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   826          NULL_PTR,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   827          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   828      },
; ..\EAS\BSW\PduR\PduR.c	   829  #endif
; ..\EAS\BSW\PduR\PduR.c	   830  #if(STD_ON == PDUR_CANNM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   831      /*CanNm*/
; ..\EAS\BSW\PduR\PduR.c	   832      {
; ..\EAS\BSW\PduR\PduR.c	   833  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   834          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   835  #endif
; ..\EAS\BSW\PduR\PduR.c	   836          CanNm_Transmit,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   837  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   838          NULL_PTR,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   839  #endif
; ..\EAS\BSW\PduR\PduR.c	   840  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   841          NULL_PTR,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   842  #endif
; ..\EAS\BSW\PduR\PduR.c	   843          NULL_PTR,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   844  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   845          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   846  #endif
; ..\EAS\BSW\PduR\PduR.c	   847          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   848          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   849          NULL_PTR,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   850          NULL_PTR,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   851          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   852          NULL_PTR,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   853          NULL_PTR,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   854          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   855      },
; ..\EAS\BSW\PduR\PduR.c	   856  #endif
; ..\EAS\BSW\PduR\PduR.c	   857  #if(STD_ON == PDUR_UDPNM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   858      /*UdpNm*/
; ..\EAS\BSW\PduR\PduR.c	   859      {
; ..\EAS\BSW\PduR\PduR.c	   860  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   861          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   862  #endif
; ..\EAS\BSW\PduR\PduR.c	   863          UdpNm_Transmit,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   864  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   865          NULL_PTR,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   866  #endif
; ..\EAS\BSW\PduR\PduR.c	   867  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   868          NULL_PTR,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   869  #endif
; ..\EAS\BSW\PduR\PduR.c	   870          NULL_PTR,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   871  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   872          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   873  #endif
; ..\EAS\BSW\PduR\PduR.c	   874          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   875          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   876          NULL_PTR,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   877          NULL_PTR,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   878          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   879          NULL_PTR,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   880          NULL_PTR,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   881          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   882      },
; ..\EAS\BSW\PduR\PduR.c	   883  #endif
; ..\EAS\BSW\PduR\PduR.c	   884  #if(STD_ON == PDUR_LINIF_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   885      /*LinIf*/
; ..\EAS\BSW\PduR\PduR.c	   886      {
; ..\EAS\BSW\PduR\PduR.c	   887  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   888  #if(STD_ON == PDUR_LINIF_CANCELTRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   889          LinIf_CancelTransmit,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   890  #else
; ..\EAS\BSW\PduR\PduR.c	   891          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   892  #endif
; ..\EAS\BSW\PduR\PduR.c	   893  #endif
; ..\EAS\BSW\PduR\PduR.c	   894          LinIf_Transmit,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   895  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   896          NULL_PTR,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   897  #endif
; ..\EAS\BSW\PduR\PduR.c	   898  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   899          NULL_PTR,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   900  #endif
; ..\EAS\BSW\PduR\PduR.c	   901          NULL_PTR,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   902  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   903          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   904  #endif
; ..\EAS\BSW\PduR\PduR.c	   905          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   906          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   907          NULL_PTR,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   908          NULL_PTR,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   909          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   910          NULL_PTR,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   911          NULL_PTR,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   912          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   913      },
; ..\EAS\BSW\PduR\PduR.c	   914  #endif
; ..\EAS\BSW\PduR\PduR.c	   915  #if(STD_ON == PDUR_LINTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   916      /*LinTp*/
; ..\EAS\BSW\PduR\PduR.c	   917      {
; ..\EAS\BSW\PduR\PduR.c	   918  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   919          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   920  #endif
; ..\EAS\BSW\PduR\PduR.c	   921          NULL_PTR,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   922  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   923  #if(STD_ON == PDUR_LINTP_CANCELRECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   924          LinTp_CancelReceive,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   925  #else
; ..\EAS\BSW\PduR\PduR.c	   926          NULL_PTR,
; ..\EAS\BSW\PduR\PduR.c	   927  #endif
; ..\EAS\BSW\PduR\PduR.c	   928  #endif
; ..\EAS\BSW\PduR\PduR.c	   929  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   930  #if(STD_ON == PDUR_LINTP_CANCELTRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   931          LinTp_CancelTransmit,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   932  #else
; ..\EAS\BSW\PduR\PduR.c	   933          NULL_PTR,
; ..\EAS\BSW\PduR\PduR.c	   934  #endif
; ..\EAS\BSW\PduR\PduR.c	   935  #endif
; ..\EAS\BSW\PduR\PduR.c	   936          LinTp_Transmit,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   937  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   938  #if(STD_ON == PDUR_LINTP_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   939          LinTp_ChangeParameter,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   940  #else
; ..\EAS\BSW\PduR\PduR.c	   941          NULL_PTR,
; ..\EAS\BSW\PduR\PduR.c	   942  #endif
; ..\EAS\BSW\PduR\PduR.c	   943  #endif
; ..\EAS\BSW\PduR\PduR.c	   944          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   945          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   946          NULL_PTR,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   947          NULL_PTR,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   948          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   949          NULL_PTR,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   950          NULL_PTR,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   951          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   952      },
; ..\EAS\BSW\PduR\PduR.c	   953  #endif
; ..\EAS\BSW\PduR\PduR.c	   954  #if(STD_ON == PDUR_FRIF_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   955      /*FrIf*/
; ..\EAS\BSW\PduR\PduR.c	   956      {
; ..\EAS\BSW\PduR\PduR.c	   957  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   958  #if(STD_ON == PDUR_FRIF_CANCELTRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   959          FrIf_CancelTransmit,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   960  #else
; ..\EAS\BSW\PduR\PduR.c	   961          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   962  #endif
; ..\EAS\BSW\PduR\PduR.c	   963  #endif
; ..\EAS\BSW\PduR\PduR.c	   964          FrIf_Transmit,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   965  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   966          NULL_PTR,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   967  #endif
; ..\EAS\BSW\PduR\PduR.c	   968  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   969          NULL_PTR,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   970  #endif
; ..\EAS\BSW\PduR\PduR.c	   971          NULL_PTR,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   972  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   973          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   974  #endif
; ..\EAS\BSW\PduR\PduR.c	   975          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   976          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   977          NULL_PTR,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   978          NULL_PTR,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   979          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   980          NULL_PTR,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   981          NULL_PTR,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   982          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   983      },
; ..\EAS\BSW\PduR\PduR.c	   984  #endif
; ..\EAS\BSW\PduR\PduR.c	   985  #if(STD_ON == PDUR_FRTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	   986      /*FrTp*/
; ..\EAS\BSW\PduR\PduR.c	   987      {
; ..\EAS\BSW\PduR\PduR.c	   988  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   989          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   990  #endif
; ..\EAS\BSW\PduR\PduR.c	   991          NULL_PTR,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   992  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   993  #if(STD_ON == PDUR_FRTP_CANCELRECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	   994          FrTp_CancelReceive,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	   995  #else
; ..\EAS\BSW\PduR\PduR.c	   996          NULL_PTR,
; ..\EAS\BSW\PduR\PduR.c	   997  #endif
; ..\EAS\BSW\PduR\PduR.c	   998  #endif
; ..\EAS\BSW\PduR\PduR.c	   999  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1000  #if(STD_ON == PDUR_FRTP_CANCELTRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1001          FrTp_CancelTransmit,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1002  #else
; ..\EAS\BSW\PduR\PduR.c	  1003          NULL_PTR,
; ..\EAS\BSW\PduR\PduR.c	  1004  #endif
; ..\EAS\BSW\PduR\PduR.c	  1005  #endif
; ..\EAS\BSW\PduR\PduR.c	  1006          FrTp_Transmit,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1007  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1008  #if(STD_ON == PDUR_FRTP_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1009          FrTp_ChangeParameter,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1010  #else
; ..\EAS\BSW\PduR\PduR.c	  1011          NULL_PTR,
; ..\EAS\BSW\PduR\PduR.c	  1012  #endif
; ..\EAS\BSW\PduR\PduR.c	  1013  #endif
; ..\EAS\BSW\PduR\PduR.c	  1014          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1015          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1016          NULL_PTR,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1017          NULL_PTR,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1018          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1019          NULL_PTR,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1020          NULL_PTR,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1021          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1022      },
; ..\EAS\BSW\PduR\PduR.c	  1023  #endif
; ..\EAS\BSW\PduR\PduR.c	  1024  #if(STD_ON == PDUR_DOIPIF_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1025      /*DoIPIf*/
; ..\EAS\BSW\PduR\PduR.c	  1026      {
; ..\EAS\BSW\PduR\PduR.c	  1027  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1028  #if(STD_ON == PDUR_DOIPIF_CANCELTRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1029          DoIP_IfCancelTransmit,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1030  #else
; ..\EAS\BSW\PduR\PduR.c	  1031          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1032  #endif
; ..\EAS\BSW\PduR\PduR.c	  1033  #endif
; ..\EAS\BSW\PduR\PduR.c	  1034          DoIP_IfTransmit,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1035  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1036          NULL_PTR,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1037  #endif
; ..\EAS\BSW\PduR\PduR.c	  1038  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1039          NULL_PTR,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1040  #endif
; ..\EAS\BSW\PduR\PduR.c	  1041          NULL_PTR,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1042  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1043          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1044  #endif
; ..\EAS\BSW\PduR\PduR.c	  1045          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1046          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1047          NULL_PTR,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1048          NULL_PTR,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1049          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1050          NULL_PTR,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1051          NULL_PTR,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1052          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1053      },
; ..\EAS\BSW\PduR\PduR.c	  1054  #endif
; ..\EAS\BSW\PduR\PduR.c	  1055  #if(STD_ON == PDUR_DOIPTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1056      /*DoIPTp*/
; ..\EAS\BSW\PduR\PduR.c	  1057      {
; ..\EAS\BSW\PduR\PduR.c	  1058  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1059          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1060  #endif
; ..\EAS\BSW\PduR\PduR.c	  1061          NULL_PTR,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1062  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1063  #if(STD_ON == PDUR_DOIPTP_CANCELRECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1064          DoIP_TpCancelReceive,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1065  #else
; ..\EAS\BSW\PduR\PduR.c	  1066          NULL_PTR,
; ..\EAS\BSW\PduR\PduR.c	  1067  #endif
; ..\EAS\BSW\PduR\PduR.c	  1068  #endif
; ..\EAS\BSW\PduR\PduR.c	  1069  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1070  #if(STD_ON == PDUR_DOIPTP_CANCELTRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1071          DoIP_TpCancelTransmit,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1072  #else
; ..\EAS\BSW\PduR\PduR.c	  1073          NULL_PTR,
; ..\EAS\BSW\PduR\PduR.c	  1074  #endif
; ..\EAS\BSW\PduR\PduR.c	  1075  #endif
; ..\EAS\BSW\PduR\PduR.c	  1076          DoIP_TpTransmit,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1077  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1078          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1079  #endif
; ..\EAS\BSW\PduR\PduR.c	  1080          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1081          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1082          NULL_PTR,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1083          NULL_PTR,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1084          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1085          NULL_PTR,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1086          NULL_PTR,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1087          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1088      },
; ..\EAS\BSW\PduR\PduR.c	  1089  #endif
; ..\EAS\BSW\PduR\PduR.c	  1090  #if(STD_ON == PDUR_J1939TP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1091      /*J1939Tp*/
; ..\EAS\BSW\PduR\PduR.c	  1092      {
; ..\EAS\BSW\PduR\PduR.c	  1093  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1094          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1095  #endif
; ..\EAS\BSW\PduR\PduR.c	  1096          NULL_PTR,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1097  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1098  #if(STD_ON == PDUR_J1939TP_CANCELRECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1099          J1939Tp_CancelReceive,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1100  #else
; ..\EAS\BSW\PduR\PduR.c	  1101          NULL_PTR,
; ..\EAS\BSW\PduR\PduR.c	  1102  #endif
; ..\EAS\BSW\PduR\PduR.c	  1103  #endif
; ..\EAS\BSW\PduR\PduR.c	  1104  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1105  #if(STD_ON == PDUR_J1939TP_CANCELTRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1106          J1939Tp_CancelTransmit,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1107  #else
; ..\EAS\BSW\PduR\PduR.c	  1108          NULL_PTR,
; ..\EAS\BSW\PduR\PduR.c	  1109  #endif
; ..\EAS\BSW\PduR\PduR.c	  1110  #endif
; ..\EAS\BSW\PduR\PduR.c	  1111          J1939Tp_Transmit,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1112  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1113  #if(STD_ON == PDUR_J1939TP_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1114          J1939Tp_ChangeParameter,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1115  #else
; ..\EAS\BSW\PduR\PduR.c	  1116          NULL_PTR,
; ..\EAS\BSW\PduR\PduR.c	  1117  #endif
; ..\EAS\BSW\PduR\PduR.c	  1118  #endif
; ..\EAS\BSW\PduR\PduR.c	  1119          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1120          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1121          NULL_PTR,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1122          NULL_PTR,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1123          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1124          NULL_PTR,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1125          NULL_PTR,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1126          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1127      },
; ..\EAS\BSW\PduR\PduR.c	  1128  #endif
; ..\EAS\BSW\PduR\PduR.c	  1129  #if(STD_ON == PDUR_SOADIF_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1130      /*SoAdIf*/
; ..\EAS\BSW\PduR\PduR.c	  1131      {
; ..\EAS\BSW\PduR\PduR.c	  1132  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1133          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1134  #endif
; ..\EAS\BSW\PduR\PduR.c	  1135          SoAd_IfTransmit,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1136  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1137          NULL_PTR,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1138  #endif
; ..\EAS\BSW\PduR\PduR.c	  1139  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1140          NULL_PTR,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1141  #endif
; ..\EAS\BSW\PduR\PduR.c	  1142          NULL_PTR,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1143  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1144          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1145  #endif
; ..\EAS\BSW\PduR\PduR.c	  1146          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1147          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1148          NULL_PTR,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1149          NULL_PTR,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1150          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1151          NULL_PTR,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1152          NULL_PTR,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1153          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1154      },
; ..\EAS\BSW\PduR\PduR.c	  1155  #endif
; ..\EAS\BSW\PduR\PduR.c	  1156  #if(STD_ON == PDUR_SOADTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1157      /*SoAdTp*/
; ..\EAS\BSW\PduR\PduR.c	  1158      {
; ..\EAS\BSW\PduR\PduR.c	  1159  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1160          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1161  #endif
; ..\EAS\BSW\PduR\PduR.c	  1162          NULL_PTR,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1163  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1164  #if(STD_ON == PDUR_SOADTP_CANCELRECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1165          SoAd_TpCancelReceive,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1166  #else
; ..\EAS\BSW\PduR\PduR.c	  1167          NULL_PTR,
; ..\EAS\BSW\PduR\PduR.c	  1168  #endif
; ..\EAS\BSW\PduR\PduR.c	  1169  #endif
; ..\EAS\BSW\PduR\PduR.c	  1170  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1171  #if(STD_ON == PDUR_SOADTP_CANCELTRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1172          SoAd_TpCancelTransmit,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1173  #else
; ..\EAS\BSW\PduR\PduR.c	  1174          NULL_PTR,
; ..\EAS\BSW\PduR\PduR.c	  1175  #endif
; ..\EAS\BSW\PduR\PduR.c	  1176  #endif
; ..\EAS\BSW\PduR\PduR.c	  1177          SoAd_TpTransmit,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1178  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1179  #if(STD_ON == PDUR_SOADTP_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1180          SoAd_TpChangeParameter,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1181  #else
; ..\EAS\BSW\PduR\PduR.c	  1182          NULL_PTR,
; ..\EAS\BSW\PduR\PduR.c	  1183  #endif
; ..\EAS\BSW\PduR\PduR.c	  1184  #endif
; ..\EAS\BSW\PduR\PduR.c	  1185          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1186          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1187          NULL_PTR,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1188          NULL_PTR,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1189          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1190          NULL_PTR,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1191          NULL_PTR,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1192          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1193      },
; ..\EAS\BSW\PduR\PduR.c	  1194  #endif
; ..\EAS\BSW\PduR\PduR.c	  1195  #if(STD_ON == PDUR_CDDIF_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1196      /*CddIf*/
; ..\EAS\BSW\PduR\PduR.c	  1197      {
; ..\EAS\BSW\PduR\PduR.c	  1198  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1199  #if(STD_ON == PDUR_CDDIF_CANCELTRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1200          CddIf_CancelTransmit,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1201  #else
; ..\EAS\BSW\PduR\PduR.c	  1202          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1203  #endif
; ..\EAS\BSW\PduR\PduR.c	  1204  #endif
; ..\EAS\BSW\PduR\PduR.c	  1205          CddIf_Transmit,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1206  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1207          NULL_PTR,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1208  #endif
; ..\EAS\BSW\PduR\PduR.c	  1209  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1210          NULL_PTR,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1211  #endif
; ..\EAS\BSW\PduR\PduR.c	  1212          NULL_PTR,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1213  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1214          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1215  #endif
; ..\EAS\BSW\PduR\PduR.c	  1216          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1217          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1218          NULL_PTR,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1219          NULL_PTR,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1220          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1221          NULL_PTR,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1222          NULL_PTR,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1223          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1224      },
; ..\EAS\BSW\PduR\PduR.c	  1225  #endif
; ..\EAS\BSW\PduR\PduR.c	  1226  #if(STD_ON == PDUR_CDDTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1227      /*CddTp*/
; ..\EAS\BSW\PduR\PduR.c	  1228      {
; ..\EAS\BSW\PduR\PduR.c	  1229  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1230          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1231  #endif
; ..\EAS\BSW\PduR\PduR.c	  1232          NULL_PTR,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1233  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1234          Cdd_TpCancelReceive,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1235  #endif
; ..\EAS\BSW\PduR\PduR.c	  1236  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1237  #if(STD_ON == PDUR_CDDTP_CANCELTRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1238          Cdd_TpCancelTransmit,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1239  #else
; ..\EAS\BSW\PduR\PduR.c	  1240          NULL_PTR,
; ..\EAS\BSW\PduR\PduR.c	  1241  #endif
; ..\EAS\BSW\PduR\PduR.c	  1242  #endif
; ..\EAS\BSW\PduR\PduR.c	  1243          Cdd_TpTransmit,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1244  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1245          Cdd_TpChangeParameter,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1246  #endif
; ..\EAS\BSW\PduR\PduR.c	  1247          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1248          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1249          NULL_PTR,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1250          NULL_PTR,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1251          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1252          NULL_PTR,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1253          NULL_PTR,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1254          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1255      },
; ..\EAS\BSW\PduR\PduR.c	  1256  #endif
; ..\EAS\BSW\PduR\PduR.c	  1257  #if(STD_ON == PDUR_SECOC_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1258      {
; ..\EAS\BSW\PduR\PduR.c	  1259  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1260          SecOC_IfCancelTransmit,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1261  #endif
; ..\EAS\BSW\PduR\PduR.c	  1262          SecOC_IfTransmit,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1263  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1264  		SecOC_TpCancelReceive,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1265  #endif
; ..\EAS\BSW\PduR\PduR.c	  1266  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1267          NULL_PTR,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1268  #endif
; ..\EAS\BSW\PduR\PduR.c	  1269          NULL_PTR,/*TpTransmitFunc;*/ 
; ..\EAS\BSW\PduR\PduR.c	  1270  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1271          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1272  #endif
; ..\EAS\BSW\PduR\PduR.c	  1273          SecOC_RxIndication,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1274  #if(STD_ON == PDUR_SECOC_TRIGGER_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1275          SecOC_TriggerTransmit,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1276  #else
; ..\EAS\BSW\PduR\PduR.c	  1277  		NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1278  #endif
; ..\EAS\BSW\PduR\PduR.c	  1279          SecOC_TxConfirmation,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1280          SecOC_CopyRxData,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1281          SecOC_CopyTxData,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1282          SecOC_StartOfReception,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1283          SecOC_TpRxIndication,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1284          SecOC_TpTxConfirmation/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1285      },
; ..\EAS\BSW\PduR\PduR.c	  1286  #endif
; ..\EAS\BSW\PduR\PduR.c	  1287  #if(STD_ON == PDUR_SECOCIF_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1288      /*SecOCIf*/
; ..\EAS\BSW\PduR\PduR.c	  1289      {
; ..\EAS\BSW\PduR\PduR.c	  1290  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1291          SecOC_IfCancelTransmit,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1292  #endif
; ..\EAS\BSW\PduR\PduR.c	  1293          SecOC_IfTransmit,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1294  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1295          NULL_PTR,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1296  #endif
; ..\EAS\BSW\PduR\PduR.c	  1297  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1298          NULL_PTR,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1299  #endif
; ..\EAS\BSW\PduR\PduR.c	  1300          NULL_PTR,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1301  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1302          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1303  #endif
; ..\EAS\BSW\PduR\PduR.c	  1304          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1305          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1306          NULL_PTR,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1307          NULL_PTR,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1308          NULL_PTR,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1309          NULL_PTR,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1310          NULL_PTR,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1311          NULL_PTR/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1312      },
; ..\EAS\BSW\PduR\PduR.c	  1313  #endif
; ..\EAS\BSW\PduR\PduR.c	  1314  #if(STD_ON == PDUR_SECOCTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1315      /*SecOCTp*/
; ..\EAS\BSW\PduR\PduR.c	  1316      {
; ..\EAS\BSW\PduR\PduR.c	  1317  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1318          NULL_PTR,/*IfCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1319  #endif
; ..\EAS\BSW\PduR\PduR.c	  1320          NULL_PTR,/*IfTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1321  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1322          NULL_PTR,/*TpCancelReceiveFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1323  #endif
; ..\EAS\BSW\PduR\PduR.c	  1324  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1325          SecOC_TpCancelTransmit,/*TpCancelTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1326  #endif
; ..\EAS\BSW\PduR\PduR.c	  1327          SecOC_TpTransmit,/*TpTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1328  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  1329          NULL_PTR,/*TpChangeParameterFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1330  #endif
; ..\EAS\BSW\PduR\PduR.c	  1331          NULL_PTR,/*UpIfRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1332          NULL_PTR,/*UpIfTriggerTransmitFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1333          SecOC_TxConfirmation,/*UpIfTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1334          SecOC_CopyRxData,/*UpTpCopyRxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1335          SecOC_CopyTxData,/*UpTpCopyTxDataFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1336          SecOC_StartOfReception,/*UpTpStartOfReceptionFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1337          SecOC_TpRxIndication,/*UpTpRxIndicationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1338          SecOC_TpTxConfirmation/*UpTpTxConfirmationFunc;*/
; ..\EAS\BSW\PduR\PduR.c	  1339      },
; ..\EAS\BSW\PduR\PduR.c	  1340  #endif
; ..\EAS\BSW\PduR\PduR.c	  1341  
; ..\EAS\BSW\PduR\PduR.c	  1342  };
; ..\EAS\BSW\PduR\PduR.c	  1343  
; ..\EAS\BSW\PduR\PduR.c	  1344  #define PDUR_STOP_SEC_CONST_32
; ..\EAS\BSW\PduR\PduR.c	  1345  #include "MemMap.h"
; ..\EAS\BSW\PduR\PduR.c	  1346  
; ..\EAS\BSW\PduR\PduR.c	  1347  #define PDUR_START_SEC_NOINIT_UNSPECIFIED
; ..\EAS\BSW\PduR\PduR.c	  1348  #include "MemMap.h"
; ..\EAS\BSW\PduR\PduR.c	  1349  
; ..\EAS\BSW\PduR\PduR.c	  1350  #if(PDUR_CONFIG_VARIANTS == STD_CONFIG_VARIANTS_POSTBUILD)
; ..\EAS\BSW\PduR\PduR.c	  1351  STATIC P2CONST(PduR_PBConfigType, PDUR_VAR_NOINIT, PDUR_CONST) PduR_ConfigSet;
; ..\EAS\BSW\PduR\PduR.c	  1352  #endif
; ..\EAS\BSW\PduR\PduR.c	  1353  
; ..\EAS\BSW\PduR\PduR.c	  1354  #if(PDUR_MAX_NUMOFBUFFER > 0)
; ..\EAS\BSW\PduR\PduR.c	  1355  STATIC PduRBuffInfoType PduRBufferInfo[PDUR_MAX_NUMOFBUFFER];
; ..\EAS\BSW\PduR\PduR.c	  1356  #endif
; ..\EAS\BSW\PduR\PduR.c	  1357  
; ..\EAS\BSW\PduR\PduR.c	  1358  #define PDUR_STOP_SEC_NOINIT_UNSPECIFIED
; ..\EAS\BSW\PduR\PduR.c	  1359  #include "MemMap.h"
; ..\EAS\BSW\PduR\PduR.c	  1360  
; ..\EAS\BSW\PduR\PduR.c	  1361  #define PDUR_START_SEC_VAR_NOINIT_8
; ..\EAS\BSW\PduR\PduR.c	  1362  #include "MemMap.h"
; ..\EAS\BSW\PduR\PduR.c	  1363  
; ..\EAS\BSW\PduR\PduR.c	  1364  STATIC VAR(boolean, PDUR_VAR) PduR_RoutingPathGroupEnabled[PDUR_MAX_NUMOFROUTINGPATHGROUP];
; ..\EAS\BSW\PduR\PduR.c	  1365  
; ..\EAS\BSW\PduR\PduR.c	  1366  #define PDUR_STOP_SEC_VAR_NOINIT_8
; ..\EAS\BSW\PduR\PduR.c	  1367  #include "MemMap.h"
; ..\EAS\BSW\PduR\PduR.c	  1368  
; ..\EAS\BSW\PduR\PduR.c	  1369  #define PDUR_START_SEC_VAR_INIT_32
; ..\EAS\BSW\PduR\PduR.c	  1370  #include "MemMap.h"
; ..\EAS\BSW\PduR\PduR.c	  1371  
; ..\EAS\BSW\PduR\PduR.c	  1372  #if(PDUR_MAX_NUMOFCOMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1373  STATIC VAR(PduR_MulticastMaskType, PDUR_VAR) ComTxConfMask[PDUR_MAX_NUMOFCOMTXPDU] =
; ..\EAS\BSW\PduR\PduR.c	  1374  {
; ..\EAS\BSW\PduR\PduR.c	  1375      0
; ..\EAS\BSW\PduR\PduR.c	  1376  };
; ..\EAS\BSW\PduR\PduR.c	  1377  STATIC VAR(PduR_MulticastMaskType, PDUR_VAR) ComTxErrorMask[PDUR_MAX_NUMOFCOMTXPDU] =
; ..\EAS\BSW\PduR\PduR.c	  1378  {
; ..\EAS\BSW\PduR\PduR.c	  1379      0
; ..\EAS\BSW\PduR\PduR.c	  1380  };
; ..\EAS\BSW\PduR\PduR.c	  1381  #endif
; ..\EAS\BSW\PduR\PduR.c	  1382  #if(PDUR_MAX_NUMOFLDCOMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1383  STATIC VAR(PduR_MulticastMaskType, PDUR_VAR) LdComTxConfMask[PDUR_MAX_NUMOFLDCOMTXPDU] =
; ..\EAS\BSW\PduR\PduR.c	  1384  {
; ..\EAS\BSW\PduR\PduR.c	  1385      0
; ..\EAS\BSW\PduR\PduR.c	  1386  };
; ..\EAS\BSW\PduR\PduR.c	  1387  STATIC VAR(PduR_MulticastMaskType, PDUR_VAR) LdComTxErrorMask[PDUR_MAX_NUMOFLDCOMTXPDU] =
; ..\EAS\BSW\PduR\PduR.c	  1388  {
; ..\EAS\BSW\PduR\PduR.c	  1389      0
; ..\EAS\BSW\PduR\PduR.c	  1390  };
; ..\EAS\BSW\PduR\PduR.c	  1391  #endif
; ..\EAS\BSW\PduR\PduR.c	  1392  #if(PDUR_MAX_NUMOFDCMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1393  STATIC VAR(PduR_MulticastMaskType, PDUR_VAR) DcmTxConfMask[PDUR_MAX_NUMOFDCMTXPDU] =
; ..\EAS\BSW\PduR\PduR.c	  1394  {
; ..\EAS\BSW\PduR\PduR.c	  1395      0
; ..\EAS\BSW\PduR\PduR.c	  1396  };
; ..\EAS\BSW\PduR\PduR.c	  1397  STATIC VAR(PduR_MulticastMaskType, PDUR_VAR) DcmTxErrorMask[PDUR_MAX_NUMOFDCMTXPDU] =
; ..\EAS\BSW\PduR\PduR.c	  1398  {
; ..\EAS\BSW\PduR\PduR.c	  1399      0
; ..\EAS\BSW\PduR\PduR.c	  1400  };
; ..\EAS\BSW\PduR\PduR.c	  1401  #endif
; ..\EAS\BSW\PduR\PduR.c	  1402  #if(PDUR_MAX_NUMOFJ1939DCMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1403  STATIC VAR(PduR_MulticastMaskType, PDUR_VAR) J1939DcmTxConfMask[PDUR_MAX_NUMOFJ1939DCMTXPDU] =
; ..\EAS\BSW\PduR\PduR.c	  1404  {
; ..\EAS\BSW\PduR\PduR.c	  1405      0
; ..\EAS\BSW\PduR\PduR.c	  1406  };
; ..\EAS\BSW\PduR\PduR.c	  1407  STATIC VAR(PduR_MulticastMaskType, PDUR_VAR) J1939DcmTxErrorMask[PDUR_MAX_NUMOFJ1939DCMTXPDU] =
; ..\EAS\BSW\PduR\PduR.c	  1408  {
; ..\EAS\BSW\PduR\PduR.c	  1409      0
; ..\EAS\BSW\PduR\PduR.c	  1410  };
; ..\EAS\BSW\PduR\PduR.c	  1411  #endif
; ..\EAS\BSW\PduR\PduR.c	  1412  #if(PDUR_MAX_NUMOFJ1939RMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1413  STATIC VAR(PduR_MulticastMaskType, PDUR_VAR) J1939RmTxConfMask[PDUR_MAX_NUMOFJ1939RMTXPDU] =
; ..\EAS\BSW\PduR\PduR.c	  1414  {
; ..\EAS\BSW\PduR\PduR.c	  1415      0
; ..\EAS\BSW\PduR\PduR.c	  1416  };
; ..\EAS\BSW\PduR\PduR.c	  1417  STATIC VAR(PduR_MulticastMaskType, PDUR_VAR) J1939RmTxErrorMask[PDUR_MAX_NUMOFJ1939RMTXPDU] =
; ..\EAS\BSW\PduR\PduR.c	  1418  {
; ..\EAS\BSW\PduR\PduR.c	  1419      0
; ..\EAS\BSW\PduR\PduR.c	  1420  };
; ..\EAS\BSW\PduR\PduR.c	  1421  #endif
; ..\EAS\BSW\PduR\PduR.c	  1422  #if(PDUR_MAX_NUMOFCDDTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1423  STATIC VAR(PduR_MulticastMaskType, PDUR_VAR) CddTxConfMask[PDUR_MAX_NUMOFCDDTXPDU] =
; ..\EAS\BSW\PduR\PduR.c	  1424  {
; ..\EAS\BSW\PduR\PduR.c	  1425      0
; ..\EAS\BSW\PduR\PduR.c	  1426  };
; ..\EAS\BSW\PduR\PduR.c	  1427  STATIC VAR(PduR_MulticastMaskType, PDUR_VAR) CddTxErrorMask[PDUR_MAX_NUMOFCDDTXPDU] =
; ..\EAS\BSW\PduR\PduR.c	  1428  {
; ..\EAS\BSW\PduR\PduR.c	  1429      0
; ..\EAS\BSW\PduR\PduR.c	  1430  };
; ..\EAS\BSW\PduR\PduR.c	  1431  #endif
; ..\EAS\BSW\PduR\PduR.c	  1432  #if(PDUR_MAX_NUMOFIPDUMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1433  STATIC VAR(PduR_MulticastMaskType, PDUR_VAR) IpduMTxConfMask[PDUR_MAX_NUMOFIPDUMTXPDU] =
; ..\EAS\BSW\PduR\PduR.c	  1434  {
; ..\EAS\BSW\PduR\PduR.c	  1435      0
; ..\EAS\BSW\PduR\PduR.c	  1436  };
; ..\EAS\BSW\PduR\PduR.c	  1437  STATIC VAR(PduR_MulticastMaskType, PDUR_VAR) IpduMTxErrorMask[PDUR_MAX_NUMOFIPDUMTXPDU] =
; ..\EAS\BSW\PduR\PduR.c	  1438  {
; ..\EAS\BSW\PduR\PduR.c	  1439      0
; ..\EAS\BSW\PduR\PduR.c	  1440  };
; ..\EAS\BSW\PduR\PduR.c	  1441  #endif
; ..\EAS\BSW\PduR\PduR.c	  1442  #if(PDUR_MAX_NUMOFSOMEIPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1443  STATIC VAR(PduR_MulticastMaskType, PDUR_VAR) SomeIpTxConfMask[PDUR_MAX_NUMOFSOMEIPTXPDU] =
; ..\EAS\BSW\PduR\PduR.c	  1444  {
; ..\EAS\BSW\PduR\PduR.c	  1445      0
; ..\EAS\BSW\PduR\PduR.c	  1446  };
; ..\EAS\BSW\PduR\PduR.c	  1447  STATIC VAR(PduR_MulticastMaskType, PDUR_VAR) SomeIpTxErrorMask[PDUR_MAX_NUMOFSOMEIPTXPDU] =
; ..\EAS\BSW\PduR\PduR.c	  1448  {
; ..\EAS\BSW\PduR\PduR.c	  1449      0
; ..\EAS\BSW\PduR\PduR.c	  1450  };
; ..\EAS\BSW\PduR\PduR.c	  1451  #endif
; ..\EAS\BSW\PduR\PduR.c	  1452  #if(PDUR_MAX_NUMOFSECOCTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1453  STATIC VAR(PduR_MulticastMaskType, PDUR_VAR) SecOCTxConfMask[PDUR_MAX_NUMOFSECOCTXPDU] =
; ..\EAS\BSW\PduR\PduR.c	  1454  {
; ..\EAS\BSW\PduR\PduR.c	  1455      0
; ..\EAS\BSW\PduR\PduR.c	  1456  };
; ..\EAS\BSW\PduR\PduR.c	  1457  STATIC VAR(PduR_MulticastMaskType, PDUR_VAR) SecOCTxErrorMask[PDUR_MAX_NUMOFSECOCTXPDU] =
; ..\EAS\BSW\PduR\PduR.c	  1458  {
; ..\EAS\BSW\PduR\PduR.c	  1459      0
; ..\EAS\BSW\PduR\PduR.c	  1460  };
; ..\EAS\BSW\PduR\PduR.c	  1461  #endif
; ..\EAS\BSW\PduR\PduR.c	  1462  
; ..\EAS\BSW\PduR\PduR.c	  1463  
; ..\EAS\BSW\PduR\PduR.c	  1464  #define PDUR_STOP_SEC_VAR_INIT_32
; ..\EAS\BSW\PduR\PduR.c	  1465  #include "MemMap.h"
; ..\EAS\BSW\PduR\PduR.c	  1466  
; ..\EAS\BSW\PduR\PduR.c	  1467  
; ..\EAS\BSW\PduR\PduR.c	  1468  /*******************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  1469  *   Local Functions define
; ..\EAS\BSW\PduR\PduR.c	  1470  *******************************************************************************/
; ..\EAS\BSW\PduR\PduR.c	  1471  #define PDUR_START_SEC_CODE
; ..\EAS\BSW\PduR\PduR.c	  1472  #include "MemMap.h"
; ..\EAS\BSW\PduR\PduR.c	  1473  
; ..\EAS\BSW\PduR\PduR.c	  1474  #if(PDUR_MAX_NUMOFBUFFER > 0)
; ..\EAS\BSW\PduR\PduR.c	  1475  STATIC FUNC(void, PDUR_CODE) PduR_BufferInit
; ..\EAS\BSW\PduR\PduR.c	  1476  (
; ..\EAS\BSW\PduR\PduR.c	  1477      uint16 BufferId
; ..\EAS\BSW\PduR\PduR.c	  1478  );
; ..\EAS\BSW\PduR\PduR.c	  1479  
; ..\EAS\BSW\PduR\PduR.c	  1480  STATIC FUNC(Std_ReturnType, PDUR_CODE) PduR_BufferEnqueue
; ..\EAS\BSW\PduR\PduR.c	  1481  (
; ..\EAS\BSW\PduR\PduR.c	  1482      uint16 BufferId,
; ..\EAS\BSW\PduR\PduR.c	  1483      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info
; ..\EAS\BSW\PduR\PduR.c	  1484  );
; ..\EAS\BSW\PduR\PduR.c	  1485  
; ..\EAS\BSW\PduR\PduR.c	  1486  #if(STD_ON == PDUR_GW_TP_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1487  STATIC FUNC(Std_ReturnType, PDUR_CODE) PduR_BufferDequeue
; ..\EAS\BSW\PduR\PduR.c	  1488  (
; ..\EAS\BSW\PduR\PduR.c	  1489      uint16 BufferId,
; ..\EAS\BSW\PduR\PduR.c	  1490      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info
; ..\EAS\BSW\PduR\PduR.c	  1491  );
; ..\EAS\BSW\PduR\PduR.c	  1492  #endif
; ..\EAS\BSW\PduR\PduR.c	  1493  #endif
; ..\EAS\BSW\PduR\PduR.c	  1494  
; ..\EAS\BSW\PduR\PduR.c	  1495  #if(STD_ON == PDUR_IF_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1496  STATIC FUNC(void, PDUR_CODE) PduR_LowerIfRxIndication
; ..\EAS\BSW\PduR\PduR.c	  1497  (
; ..\EAS\BSW\PduR\PduR.c	  1498      CONST(PduR_RoutingPathIdType, PDUR_CONST) PathId,
; ..\EAS\BSW\PduR\PduR.c	  1499      P2CONST(PduInfoType, AUTOMATIC, PDUR_CONST) PduInfoPtr
; ..\EAS\BSW\PduR\PduR.c	  1500  );
; ..\EAS\BSW\PduR\PduR.c	  1501  
; ..\EAS\BSW\PduR\PduR.c	  1502  STATIC FUNC(void, PDUR_CODE) PduR_LowerIfTxConfirmation
; ..\EAS\BSW\PduR\PduR.c	  1503  (
; ..\EAS\BSW\PduR\PduR.c	  1504      PduR_RoutingPathIdType PathId,
; ..\EAS\BSW\PduR\PduR.c	  1505      PduIdType ConfId
; ..\EAS\BSW\PduR\PduR.c	  1506  );
; ..\EAS\BSW\PduR\PduR.c	  1507  
; ..\EAS\BSW\PduR\PduR.c	  1508  #if((PDUR_MAX_NUMOFIPDUMIFTXPDU > 0) || (PDUR_MAX_NUMOFLINIFTXPDU > 0) || (PDUR_MAX_NUMOFSOADIFTXPDU > 0) ||  (PDUR_MAX_NUMOFCANNMTXPDU > 0))
; ..\EAS\BSW\PduR\PduR.c	  1509  STATIC FUNC(Std_ReturnType, PDUR_CODE) PduR_LowerIfTriggerTransmit
; ..\EAS\BSW\PduR\PduR.c	  1510  (
; ..\EAS\BSW\PduR\PduR.c	  1511      PduR_RoutingPathIdType PathId,
; ..\EAS\BSW\PduR\PduR.c	  1512      PduIdType ConfId,
; ..\EAS\BSW\PduR\PduR.c	  1513      P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) PduInfoPtr
; ..\EAS\BSW\PduR\PduR.c	  1514  );
; ..\EAS\BSW\PduR\PduR.c	  1515  #endif
; ..\EAS\BSW\PduR\PduR.c	  1516  
; ..\EAS\BSW\PduR\PduR.c	  1517  STATIC FUNC(void, PDUR_CODE) PduR_LowerIfMultiRxIndication
; ..\EAS\BSW\PduR\PduR.c	  1518  (
; ..\EAS\BSW\PduR\PduR.c	  1519      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo,
; ..\EAS\BSW\PduR\PduR.c	  1520      P2CONST(PduInfoType, AUTOMATIC, PDUR_CONST) PduInfoPtr
; ..\EAS\BSW\PduR\PduR.c	  1521  );
; ..\EAS\BSW\PduR\PduR.c	  1522  #endif
; ..\EAS\BSW\PduR\PduR.c	  1523  
; ..\EAS\BSW\PduR\PduR.c	  1524  #if(PDUR_MAX_NUMOFBUFFER > 0)
; ..\EAS\BSW\PduR\PduR.c	  1525  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  1526  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  1527  * Function Name: PduR_BufferInit
; ..\EAS\BSW\PduR\PduR.c	  1528  *
; ..\EAS\BSW\PduR\PduR.c	  1529  * Description:     Init the dedicated buffer
; ..\EAS\BSW\PduR\PduR.c	  1530  *
; ..\EAS\BSW\PduR\PduR.c	  1531  * Inputs:         BufferId
; ..\EAS\BSW\PduR\PduR.c	  1532  *
; ..\EAS\BSW\PduR\PduR.c	  1533  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  1534  *
; ..\EAS\BSW\PduR\PduR.c	  1535  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  1536  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  1537  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  1538  STATIC FUNC(void, PDUR_CODE) PduR_BufferInit
; ..\EAS\BSW\PduR\PduR.c	  1539  (
; ..\EAS\BSW\PduR\PduR.c	  1540      uint16 BufferId
; ..\EAS\BSW\PduR\PduR.c	  1541  )
; ..\EAS\BSW\PduR\PduR.c	  1542  {
; ..\EAS\BSW\PduR\PduR.c	  1543      PduRBufferInfo[BufferId].BufState = PDUR_BUFFER_IDLE;
; ..\EAS\BSW\PduR\PduR.c	  1544      PduRBufferInfo[BufferId].TotalLen = 0;
; ..\EAS\BSW\PduR\PduR.c	  1545      PduRBufferInfo[BufferId].ValidLen = 0;
; ..\EAS\BSW\PduR\PduR.c	  1546      PduRBufferInfo[BufferId].ReceivedLen = 0;
; ..\EAS\BSW\PduR\PduR.c	  1547      PduRBufferInfo[BufferId].AvailableLen = PduR_BufferLen[BufferId];
; ..\EAS\BSW\PduR\PduR.c	  1548      PduRBufferInfo[BufferId].WritePos = 0;
; ..\EAS\BSW\PduR\PduR.c	  1549      PduRBufferInfo[BufferId].ReadPos = 0;
; ..\EAS\BSW\PduR\PduR.c	  1550  }
; ..\EAS\BSW\PduR\PduR.c	  1551  
; ..\EAS\BSW\PduR\PduR.c	  1552  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  1553  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  1554  * Function Name: PduR_BufferEnqueue
; ..\EAS\BSW\PduR\PduR.c	  1555  *
; ..\EAS\BSW\PduR\PduR.c	  1556  * Description:     Enqueue the data to the dedicated buffer
; ..\EAS\BSW\PduR\PduR.c	  1557  *
; ..\EAS\BSW\PduR\PduR.c	  1558  * Inputs:         BufferId
; ..\EAS\BSW\PduR\PduR.c	  1559  *                info contain the data and data length
; ..\EAS\BSW\PduR\PduR.c	  1560  *
; ..\EAS\BSW\PduR\PduR.c	  1561  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  1562  *
; ..\EAS\BSW\PduR\PduR.c	  1563  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  1564  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  1565  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  1566  STATIC FUNC(Std_ReturnType, PDUR_CODE) PduR_BufferEnqueue
; ..\EAS\BSW\PduR\PduR.c	  1567  (
; ..\EAS\BSW\PduR\PduR.c	  1568      uint16 BufferId,
; ..\EAS\BSW\PduR\PduR.c	  1569      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info
; ..\EAS\BSW\PduR\PduR.c	  1570  )
; ..\EAS\BSW\PduR\PduR.c	  1571  {
; ..\EAS\BSW\PduR\PduR.c	  1572      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  1573      PduLengthType TailDataLen = 0;
; ..\EAS\BSW\PduR\PduR.c	  1574  
; ..\EAS\BSW\PduR\PduR.c	  1575      if(PduRBufferInfo[BufferId].AvailableLen >= info->SduLength)
; ..\EAS\BSW\PduR\PduR.c	  1576      {
; ..\EAS\BSW\PduR\PduR.c	  1577          /*[- - - 0 1 - - -]*/
; ..\EAS\BSW\PduR\PduR.c	  1578          TailDataLen = PduR_BufferLen[BufferId] - PduRBufferInfo[BufferId].WritePos;
; ..\EAS\BSW\PduR\PduR.c	  1579          if(info->SduLength < TailDataLen)
; ..\EAS\BSW\PduR\PduR.c	  1580          {
; ..\EAS\BSW\PduR\PduR.c	  1581              /*[- - - 0 1 2 3 -]*/
; ..\EAS\BSW\PduR\PduR.c	  1582              Bsw_MemCpy(PduR_Buffer[BufferId] + PduRBufferInfo[BufferId].WritePos, info->SduDataPtr, info->SduLength);
; ..\EAS\BSW\PduR\PduR.c	  1583              PduRBufferInfo[BufferId].WritePos += info->SduLength;
; ..\EAS\BSW\PduR\PduR.c	  1584          }
; ..\EAS\BSW\PduR\PduR.c	  1585          else
; ..\EAS\BSW\PduR\PduR.c	  1586          {
; ..\EAS\BSW\PduR\PduR.c	  1587              /*[- - - 0 1 2 3 4]*/
; ..\EAS\BSW\PduR\PduR.c	  1588              Bsw_MemCpy(PduR_Buffer[BufferId] + PduRBufferInfo[BufferId].WritePos, info->SduDataPtr, TailDataLen);
; ..\EAS\BSW\PduR\PduR.c	  1589              /*[5 6 - 0 1 2 3 4]*/
; ..\EAS\BSW\PduR\PduR.c	  1590              Bsw_MemCpy(PduR_Buffer[BufferId], info->SduDataPtr + TailDataLen, info->SduLength - TailDataLen);
; ..\EAS\BSW\PduR\PduR.c	  1591              PduRBufferInfo[BufferId].WritePos = info->SduLength - TailDataLen;
; ..\EAS\BSW\PduR\PduR.c	  1592          }
; ..\EAS\BSW\PduR\PduR.c	  1593          PduRBufferInfo[BufferId].ValidLen += info->SduLength;
; ..\EAS\BSW\PduR\PduR.c	  1594          PduRBufferInfo[BufferId].AvailableLen -= (info->SduLength);
; ..\EAS\BSW\PduR\PduR.c	  1595          PduRBufferInfo[BufferId].ReceivedLen += info->SduLength;
; ..\EAS\BSW\PduR\PduR.c	  1596          ret = E_OK;
; ..\EAS\BSW\PduR\PduR.c	  1597      }
; ..\EAS\BSW\PduR\PduR.c	  1598  
; ..\EAS\BSW\PduR\PduR.c	  1599      return ret;
; ..\EAS\BSW\PduR\PduR.c	  1600  }
; ..\EAS\BSW\PduR\PduR.c	  1601  
; ..\EAS\BSW\PduR\PduR.c	  1602  #if(STD_ON == PDUR_GW_TP_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1603  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  1604  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  1605  * Function Name:   PduR_BufferDequeue
; ..\EAS\BSW\PduR\PduR.c	  1606  *
; ..\EAS\BSW\PduR\PduR.c	  1607  * Description:     Dequeue the data from the dedicated buffer
; ..\EAS\BSW\PduR\PduR.c	  1608  *
; ..\EAS\BSW\PduR\PduR.c	  1609  * Inputs:          BufferId
; ..\EAS\BSW\PduR\PduR.c	  1610  *
; ..\EAS\BSW\PduR\PduR.c	  1611  * Outputs:         info contain the data and data length
; ..\EAS\BSW\PduR\PduR.c	  1612  *
; ..\EAS\BSW\PduR\PduR.c	  1613  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  1614  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  1615  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  1616  STATIC FUNC(Std_ReturnType, PDUR_CODE) PduR_BufferDequeue
; ..\EAS\BSW\PduR\PduR.c	  1617  (
; ..\EAS\BSW\PduR\PduR.c	  1618      uint16 BufferId,
; ..\EAS\BSW\PduR\PduR.c	  1619      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info
; ..\EAS\BSW\PduR\PduR.c	  1620  )
; ..\EAS\BSW\PduR\PduR.c	  1621  {
; ..\EAS\BSW\PduR\PduR.c	  1622      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  1623      PduLengthType TailDataLen = 0;
; ..\EAS\BSW\PduR\PduR.c	  1624  
; ..\EAS\BSW\PduR\PduR.c	  1625      if(PduRBufferInfo[BufferId].ValidLen >= info->SduLength)
; ..\EAS\BSW\PduR\PduR.c	  1626      {
; ..\EAS\BSW\PduR\PduR.c	  1627          /*[3 4 5 - - 0 1 2]*/
; ..\EAS\BSW\PduR\PduR.c	  1628          TailDataLen = PduR_BufferLen[BufferId] - PduRBufferInfo[BufferId].ReadPos;
; ..\EAS\BSW\PduR\PduR.c	  1629          if(info->SduLength < TailDataLen)
; ..\EAS\BSW\PduR\PduR.c	  1630          {
; ..\EAS\BSW\PduR\PduR.c	  1631              /*[1 2 3 - - - - 0]*/
; ..\EAS\BSW\PduR\PduR.c	  1632              Bsw_MemCpy(info->SduDataPtr, PduR_Buffer[BufferId] + PduRBufferInfo[BufferId].ReadPos, info->SduLength);
; ..\EAS\BSW\PduR\PduR.c	  1633              PduRBufferInfo[BufferId].ReadPos += info->SduLength;
; ..\EAS\BSW\PduR\PduR.c	  1634          }
; ..\EAS\BSW\PduR\PduR.c	  1635          else
; ..\EAS\BSW\PduR\PduR.c	  1636          {
; ..\EAS\BSW\PduR\PduR.c	  1637              /*[0 1 2 - - - - -]*/
; ..\EAS\BSW\PduR\PduR.c	  1638              Bsw_MemCpy(info->SduDataPtr, PduR_Buffer[BufferId] + PduRBufferInfo[BufferId].ReadPos, TailDataLen);
; ..\EAS\BSW\PduR\PduR.c	  1639              /*[- - 0 - - - - -]*/
; ..\EAS\BSW\PduR\PduR.c	  1640              Bsw_MemCpy(info->SduDataPtr + TailDataLen, PduR_Buffer[BufferId], info->SduLength - TailDataLen);
; ..\EAS\BSW\PduR\PduR.c	  1641              PduRBufferInfo[BufferId].ReadPos = info->SduLength - TailDataLen;
; ..\EAS\BSW\PduR\PduR.c	  1642          }
; ..\EAS\BSW\PduR\PduR.c	  1643          /*SWS_PduR_00696*/
; ..\EAS\BSW\PduR\PduR.c	  1644          PduRBufferInfo[BufferId].ValidLen -= (info->SduLength);
; ..\EAS\BSW\PduR\PduR.c	  1645          PduRBufferInfo[BufferId].AvailableLen += (info->SduLength);
; ..\EAS\BSW\PduR\PduR.c	  1646          ret = E_OK;
; ..\EAS\BSW\PduR\PduR.c	  1647      }
; ..\EAS\BSW\PduR\PduR.c	  1648  
; ..\EAS\BSW\PduR\PduR.c	  1649      return ret;
; ..\EAS\BSW\PduR\PduR.c	  1650  }
; ..\EAS\BSW\PduR\PduR.c	  1651  #endif
; ..\EAS\BSW\PduR\PduR.c	  1652  #endif
; ..\EAS\BSW\PduR\PduR.c	  1653  
; ..\EAS\BSW\PduR\PduR.c	  1654  #if(STD_ON == PDUR_IF_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1655  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  1656  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  1657  * Function Name: PduR_LowerIfRxIndication
; ..\EAS\BSW\PduR\PduR.c	  1658  *
; ..\EAS\BSW\PduR\PduR.c	  1659  * Description:   RxIndication processing of lower interface module
; ..\EAS\BSW\PduR\PduR.c	  1660  *
; ..\EAS\BSW\PduR\PduR.c	  1661  * Inputs:        PathId id of the routing path
; ..\EAS\BSW\PduR\PduR.c	  1662  *                PduInfoPtr Data info of received data
; ..\EAS\BSW\PduR\PduR.c	  1663  *
; ..\EAS\BSW\PduR\PduR.c	  1664  * Outputs:       None
; ..\EAS\BSW\PduR\PduR.c	  1665  *
; ..\EAS\BSW\PduR\PduR.c	  1666  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  1667  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  1668  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  1669  STATIC FUNC(void, PDUR_CODE) PduR_LowerIfRxIndication
; Function PduR_LowerIfRxIndication
.L160:
PduR_LowerIfRxIndication:	.type	func

; ..\EAS\BSW\PduR\PduR.c	  1670  (
; ..\EAS\BSW\PduR\PduR.c	  1671      CONST(PduR_RoutingPathIdType, PDUR_CONST) PathId,
; ..\EAS\BSW\PduR\PduR.c	  1672      P2CONST(PduInfoType, AUTOMATIC, PDUR_CONST) PduInfoPtr
; ..\EAS\BSW\PduR\PduR.c	  1673  )
; ..\EAS\BSW\PduR\PduR.c	  1674  {
; ..\EAS\BSW\PduR\PduR.c	  1675      PduIdType DestPduId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRDestPduId;
	mul	d15,d4,#20
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1108:
	ld.bu	d4,[a15]4
.L649:

; ..\EAS\BSW\PduR\PduR.c	  1676      PduRModuleType DestModuleType = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRDestModuleType;
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1109:
	ld.bu	d15,[a15]5
.L650:

; ..\EAS\BSW\PduR\PduR.c	  1677  #if(STD_ON == PDUR_GW_IF_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1678      uint16 BufferId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRDestTxBufferId;
; ..\EAS\BSW\PduR\PduR.c	  1679  #endif
; ..\EAS\BSW\PduR\PduR.c	  1680  
; ..\EAS\BSW\PduR\PduR.c	  1681      if(NULL_PTR != PduR_ModuleFunctions[DestModuleType].UpIfRxIndicationFunc)
	mov.a	a2,#0
.L1110:
	mul	d15,d15,#52
.L651:
	movh.a	a15,#@his(PduR_ModuleFunctions)
	lea	a15,[a15]@los(PduR_ModuleFunctions)
.L1111:
	addsc.a	a15,a15,d15,#0
.L1112:
	ld.a	a15,[a15]20
.L1113:
	jeq.a	a2,a15,.L2
.L1114:

; ..\EAS\BSW\PduR\PduR.c	  1682      {
; ..\EAS\BSW\PduR\PduR.c	  1683          /*Up modules*/
; ..\EAS\BSW\PduR\PduR.c	  1684          /*SWS_PduR_00621 SWS_PduR_00744*/
; ..\EAS\BSW\PduR\PduR.c	  1685          PduR_ModuleFunctions[DestModuleType].UpIfRxIndicationFunc(DestPduId, PduInfoPtr);
	movh.a	a15,#@his(PduR_ModuleFunctions)
	lea	a15,[a15]@los(PduR_ModuleFunctions)
.L1115:
	addsc.a	a15,a15,d15,#0
.L1116:
	ld.a	a15,[a15]20
.L1117:
	ji	a15
.L2:

; ..\EAS\BSW\PduR\PduR.c	  1686      }
; ..\EAS\BSW\PduR\PduR.c	  1687  #if(STD_ON == PDUR_GW_IF_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1688      else if(NULL_PTR != PduR_ModuleFunctions[DestModuleType].IfTransmitFunc)
; ..\EAS\BSW\PduR\PduR.c	  1689      {
; ..\EAS\BSW\PduR\PduR.c	  1690  #if(PDUR_MAX_NUMOFBUFFER > 0)
; ..\EAS\BSW\PduR\PduR.c	  1691          /*Interface modules*/
; ..\EAS\BSW\PduR\PduR.c	  1692          if(PDUR_UNUSED != BufferId)
; ..\EAS\BSW\PduR\PduR.c	  1693          {
; ..\EAS\BSW\PduR\PduR.c	  1694              /*TRIGGERTRANSMIT such as LinIf*/
; ..\EAS\BSW\PduR\PduR.c	  1695              /*SWS_PduR_00306 SWS_PDUR_00809 SWS_PduR_00746 SWS_PduR_00786 SWS_PduR_00787 SWS_PduR_00255*/
; ..\EAS\BSW\PduR\PduR.c	  1696              /*always save fresh data*/
; ..\EAS\BSW\PduR\PduR.c	  1697              PduR_BufferInit(BufferId);
; ..\EAS\BSW\PduR\PduR.c	  1698              if(E_OK == PduR_BufferEnqueue(BufferId, PduInfoPtr))
; ..\EAS\BSW\PduR\PduR.c	  1699              {
; ..\EAS\BSW\PduR\PduR.c	  1700                  /*SWS_PduR_00256 SWS_PduR_00788 */
; ..\EAS\BSW\PduR\PduR.c	  1701                  (void)PduR_ModuleFunctions[DestModuleType].IfTransmitFunc(DestPduId, PduInfoPtr);
; ..\EAS\BSW\PduR\PduR.c	  1702              }
; ..\EAS\BSW\PduR\PduR.c	  1703          }
; ..\EAS\BSW\PduR\PduR.c	  1704          else
; ..\EAS\BSW\PduR\PduR.c	  1705  #endif
; ..\EAS\BSW\PduR\PduR.c	  1706          {
; ..\EAS\BSW\PduR\PduR.c	  1707              /*DIRECT*/
; ..\EAS\BSW\PduR\PduR.c	  1708              /*SWS_PduR_00303 SWS_PduR_00783 SWS_PduR_00665 SWS_PduR_00256 SWS_PduR_00788*/
; ..\EAS\BSW\PduR\PduR.c	  1709              (void)PduR_ModuleFunctions[DestModuleType].IfTransmitFunc(DestPduId, PduInfoPtr);
; ..\EAS\BSW\PduR\PduR.c	  1710          }
; ..\EAS\BSW\PduR\PduR.c	  1711      }
; ..\EAS\BSW\PduR\PduR.c	  1712  #endif
; ..\EAS\BSW\PduR\PduR.c	  1713      else
; ..\EAS\BSW\PduR\PduR.c	  1714      {
; ..\EAS\BSW\PduR\PduR.c	  1715      }
; ..\EAS\BSW\PduR\PduR.c	  1716  
; ..\EAS\BSW\PduR\PduR.c	  1717  }
	ret
.L532:
	
__PduR_LowerIfRxIndication_function_end:
	.size	PduR_LowerIfRxIndication,__PduR_LowerIfRxIndication_function_end-PduR_LowerIfRxIndication
.L340:
	; End of function
	
	.sdecl	'.text.PduR.PduR_LowerIfTxConfirmation',code,cluster('PduR_LowerIfTxConfirmation')
	.sect	'.text.PduR.PduR_LowerIfTxConfirmation'
	.align	2
	

; ..\EAS\BSW\PduR\PduR.c	  1718  
; ..\EAS\BSW\PduR\PduR.c	  1719  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  1720  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  1721  * Function Name: PduR_LowerIfTxConfirmation
; ..\EAS\BSW\PduR\PduR.c	  1722  *
; ..\EAS\BSW\PduR\PduR.c	  1723  * Description:     This function is called by the communication interface module to
; ..\EAS\BSW\PduR\PduR.c	  1724  *                 confirm the transmit data of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  1725  *
; ..\EAS\BSW\PduR\PduR.c	  1726  * Inputs:         PathId   Identification of the transmitted path.
; ..\EAS\BSW\PduR\PduR.c	  1727  *                 ConfId Identification passed to up layer.
; ..\EAS\BSW\PduR\PduR.c	  1728  *
; ..\EAS\BSW\PduR\PduR.c	  1729  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  1730  *
; ..\EAS\BSW\PduR\PduR.c	  1731  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  1732  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  1733  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  1734  STATIC FUNC(void, PDUR_CODE) PduR_LowerIfTxConfirmation
; Function PduR_LowerIfTxConfirmation
.L162:
PduR_LowerIfTxConfirmation:	.type	func

; ..\EAS\BSW\PduR\PduR.c	  1735  (
; ..\EAS\BSW\PduR\PduR.c	  1736      PduR_RoutingPathIdType PathId,
; ..\EAS\BSW\PduR\PduR.c	  1737      PduIdType ConfId
; ..\EAS\BSW\PduR\PduR.c	  1738  )
; ..\EAS\BSW\PduR\PduR.c	  1739  {
; ..\EAS\BSW\PduR\PduR.c	  1740      PduR_MulticastMaskType mask = PDUR_ROUTINGPATHINFO(PathId).ConfMask;
	mul	d15,d4,#20
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1122:
	ld.bu	d8,[a15]16
.L653:

; ..\EAS\BSW\PduR\PduR.c	  1741      PduRModuleType SrcModuleType = PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcModuleType;
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1123:
	ld.bu	d0,[a15]1
.L655:

; ..\EAS\BSW\PduR\PduR.c	  1742      PduIdType SrcPduId = PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcPduHandleId;
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1124:
	ld.bu	d9,[a15]
.L657:

; ..\EAS\BSW\PduR\PduR.c	  1743      P2VAR(PduR_MulticastMaskType, AUTOMATIC, PDUR_VAR) pTxConfMask = NULL_PTR;
	mov.a	a12,#0
.L658:

; ..\EAS\BSW\PduR\PduR.c	  1744      P2VAR(PduR_MulticastMaskType, AUTOMATIC, PDUR_VAR) pTxErrorMask = NULL_PTR;
	mov.aa	a2,a12
.L659:

; ..\EAS\BSW\PduR\PduR.c	  1745  
; ..\EAS\BSW\PduR\PduR.c	  1746  #if(STD_ON == PDUR_COM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1747  #if(PDUR_MAX_NUMOFCOMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1748      if(MODULE_COM == SrcModuleType)
	jne	d0,#0,.L3
.L1125:

; ..\EAS\BSW\PduR\PduR.c	  1749      {
; ..\EAS\BSW\PduR\PduR.c	  1750          pTxConfMask = ComTxConfMask;
	movh.a	a12,#@his(ComTxConfMask)
	lea	a12,[a12]@los(ComTxConfMask)
.L1126:

; ..\EAS\BSW\PduR\PduR.c	  1751          pTxErrorMask = ComTxErrorMask;
	movh.a	a2,#@his(ComTxErrorMask)
	lea	a2,[a2]@los(ComTxErrorMask)
.L3:

; ..\EAS\BSW\PduR\PduR.c	  1752      }
; ..\EAS\BSW\PduR\PduR.c	  1753  #endif
; ..\EAS\BSW\PduR\PduR.c	  1754  #endif
; ..\EAS\BSW\PduR\PduR.c	  1755  #if(STD_ON == PDUR_LDCOM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1756  #if(PDUR_MAX_NUMOFLDCOMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1757      if(MODULE_LDCOM == SrcModuleType)
; ..\EAS\BSW\PduR\PduR.c	  1758      {
; ..\EAS\BSW\PduR\PduR.c	  1759          pTxConfMask = LdComTxConfMask;
; ..\EAS\BSW\PduR\PduR.c	  1760          pTxErrorMask = LdComTxErrorMask;
; ..\EAS\BSW\PduR\PduR.c	  1761      }
; ..\EAS\BSW\PduR\PduR.c	  1762  #endif
; ..\EAS\BSW\PduR\PduR.c	  1763  #endif
; ..\EAS\BSW\PduR\PduR.c	  1764  #if(STD_ON == PDUR_DCM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1765  #if(PDUR_MAX_NUMOFDCMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1766      if(MODULE_DCM == SrcModuleType)
	jne	d0,#1,.L4
.L1127:

; ..\EAS\BSW\PduR\PduR.c	  1767      {
; ..\EAS\BSW\PduR\PduR.c	  1768          pTxConfMask = DcmTxConfMask;
	movh.a	a12,#@his(DcmTxConfMask)
	lea	a12,[a12]@los(DcmTxConfMask)
.L1128:

; ..\EAS\BSW\PduR\PduR.c	  1769          pTxErrorMask = DcmTxErrorMask;
	movh.a	a2,#@his(DcmTxErrorMask)
	lea	a2,[a2]@los(DcmTxErrorMask)
.L4:

; ..\EAS\BSW\PduR\PduR.c	  1770      }
; ..\EAS\BSW\PduR\PduR.c	  1771  #endif
; ..\EAS\BSW\PduR\PduR.c	  1772  #endif
; ..\EAS\BSW\PduR\PduR.c	  1773  #if(STD_ON == PDUR_J1939DCM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1774  #if(PDUR_MAX_NUMOFJ1939DCMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1775      if(MODULE_J1939DCM == SrcModuleType)
; ..\EAS\BSW\PduR\PduR.c	  1776      {
; ..\EAS\BSW\PduR\PduR.c	  1777          pTxConfMask = J1939DcmTxConfMask;
; ..\EAS\BSW\PduR\PduR.c	  1778          pTxErrorMask = J1939DcmTxErrorMask;
; ..\EAS\BSW\PduR\PduR.c	  1779      }
; ..\EAS\BSW\PduR\PduR.c	  1780  #endif
; ..\EAS\BSW\PduR\PduR.c	  1781  #endif
; ..\EAS\BSW\PduR\PduR.c	  1782  #if(STD_ON == PDUR_J1939RM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1783  #if(PDUR_MAX_NUMOFJ1939RMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1784      if(MODULE_J1939RM == SrcModuleType)
; ..\EAS\BSW\PduR\PduR.c	  1785      {
; ..\EAS\BSW\PduR\PduR.c	  1786          pTxConfMask = J1939RmTxConfMask;
; ..\EAS\BSW\PduR\PduR.c	  1787          pTxErrorMask = J1939RmTxErrorMask;
; ..\EAS\BSW\PduR\PduR.c	  1788      }
; ..\EAS\BSW\PduR\PduR.c	  1789  #endif
; ..\EAS\BSW\PduR\PduR.c	  1790  #endif
; ..\EAS\BSW\PduR\PduR.c	  1791  #if(STD_ON == PDUR_CDD_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1792  #if(PDUR_MAX_NUMOFCDDTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1793      if(MODULE_CDD == SrcModuleType)
; ..\EAS\BSW\PduR\PduR.c	  1794      {
; ..\EAS\BSW\PduR\PduR.c	  1795          pTxConfMask = CddTxConfMask;
; ..\EAS\BSW\PduR\PduR.c	  1796          pTxErrorMask = CddTxErrorMask;
; ..\EAS\BSW\PduR\PduR.c	  1797      }
; ..\EAS\BSW\PduR\PduR.c	  1798  #endif
; ..\EAS\BSW\PduR\PduR.c	  1799  #endif
; ..\EAS\BSW\PduR\PduR.c	  1800  #if(STD_ON == PDUR_IPDUM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1801  #if(PDUR_MAX_NUMOFIPDUMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1802      if(MODULE_IPDUM == SrcModuleType)
; ..\EAS\BSW\PduR\PduR.c	  1803      {
; ..\EAS\BSW\PduR\PduR.c	  1804          pTxConfMask = IpduMTxConfMask;
; ..\EAS\BSW\PduR\PduR.c	  1805          pTxErrorMask = IpduMTxErrorMask;
; ..\EAS\BSW\PduR\PduR.c	  1806      }
; ..\EAS\BSW\PduR\PduR.c	  1807  #endif
; ..\EAS\BSW\PduR\PduR.c	  1808  #endif
; ..\EAS\BSW\PduR\PduR.c	  1809  #if(STD_ON == PDUR_SOMEIP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1810  #if(PDUR_MAX_NUMOFSOMEIPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1811      if(MODULE_SOMEIP == SrcModuleType)
; ..\EAS\BSW\PduR\PduR.c	  1812      {
; ..\EAS\BSW\PduR\PduR.c	  1813          pTxConfMask = SomeIpTxConfMask;
; ..\EAS\BSW\PduR\PduR.c	  1814          pTxErrorMask = SomeIpTxErrorMask;
; ..\EAS\BSW\PduR\PduR.c	  1815      }
; ..\EAS\BSW\PduR\PduR.c	  1816  #endif
; ..\EAS\BSW\PduR\PduR.c	  1817  #endif
; ..\EAS\BSW\PduR\PduR.c	  1818  #if(STD_ON == PDUR_SECOC_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1819  #if(PDUR_MAX_NUMOFSECOCTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1820      if(MODULE_SECOC == SrcModuleType)
; ..\EAS\BSW\PduR\PduR.c	  1821      {
; ..\EAS\BSW\PduR\PduR.c	  1822          pTxConfMask = SecOCTxConfMask;
; ..\EAS\BSW\PduR\PduR.c	  1823          pTxErrorMask = SecOCTxErrorMask;
; ..\EAS\BSW\PduR\PduR.c	  1824      }
; ..\EAS\BSW\PduR\PduR.c	  1825  #endif
; ..\EAS\BSW\PduR\PduR.c	  1826  #endif
; ..\EAS\BSW\PduR\PduR.c	  1827  
; ..\EAS\BSW\PduR\PduR.c	  1828      if(NULL_PTR != PduR_ModuleFunctions[SrcModuleType].UpIfTxConfirmationFunc)
	mov.a	a4,#0
.L1129:
	mul	d15,d0,#52
.L1130:
	movh.a	a15,#@his(PduR_ModuleFunctions)
	lea	a15,[a15]@los(PduR_ModuleFunctions)
.L1131:
	addsc.a	a15,a15,d15,#0
.L1132:
	ld.a	a15,[a15]28
.L1133:
	jeq.a	a4,a15,.L5
.L1134:

; ..\EAS\BSW\PduR\PduR.c	  1829      {
; ..\EAS\BSW\PduR\PduR.c	  1830          /*Up module*/
; ..\EAS\BSW\PduR\PduR.c	  1831          if((NULL_PTR != pTxConfMask) && (NULL_PTR != pTxErrorMask))
	jeq.a	a4,a12,.L6
.L1135:
	jeq.a	a4,a2,.L7
.L1136:

; ..\EAS\BSW\PduR\PduR.c	  1832          {
; ..\EAS\BSW\PduR\PduR.c	  1833              if(pTxErrorMask[SrcPduId] == pTxConfMask[SrcPduId])
	addsc.a	a15,a2,d9,#0
	ld.bu	d0,[a15]
.L656:
	addsc.a	a15,a12,d9,#0
	ld.bu	d1,[a15]
.L1137:
	jne	d0,d1,.L8
.L1138:

; ..\EAS\BSW\PduR\PduR.c	  1834              {
; ..\EAS\BSW\PduR\PduR.c	  1835                  /*The first valid TxConfirmation*/
; ..\EAS\BSW\PduR\PduR.c	  1836                  /*SWS_PduR_00589 SWS_PduR_00627*/
; ..\EAS\BSW\PduR\PduR.c	  1837                  PduR_ModuleFunctions[SrcModuleType].UpIfTxConfirmationFunc(ConfId);
	movh.a	a15,#@his(PduR_ModuleFunctions)
	lea	a15,[a15]@los(PduR_ModuleFunctions)
.L1139:
	addsc.a	a15,a15,d15,#0
.L1140:
	ld.a	a15,[a15]28
.L1141:
	mov	d4,d5
.L652:
	calli	a15
.L8:

; ..\EAS\BSW\PduR\PduR.c	  1838              }
; ..\EAS\BSW\PduR\PduR.c	  1839              pTxConfMask[SrcPduId] |= mask;
	addsc.a	a15,a12,d9,#0
	ld.bu	d15,[a15]
.L1142:
	or	d8,d15
.L654:
	st.b	[a15],d8
.L7:
.L6:
.L5:

; ..\EAS\BSW\PduR\PduR.c	  1840              /*Ignore other TxConfirmations*/
; ..\EAS\BSW\PduR\PduR.c	  1841          }
; ..\EAS\BSW\PduR\PduR.c	  1842      }
; ..\EAS\BSW\PduR\PduR.c	  1843  #if(STD_ON == PDUR_GW_IF_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1844      else
; ..\EAS\BSW\PduR\PduR.c	  1845      {
; ..\EAS\BSW\PduR\PduR.c	  1846          /*ignore this TxConfirmations*/
; ..\EAS\BSW\PduR\PduR.c	  1847          /*SWS_PduR_00640*/
; ..\EAS\BSW\PduR\PduR.c	  1848      }
; ..\EAS\BSW\PduR\PduR.c	  1849  #endif
; ..\EAS\BSW\PduR\PduR.c	  1850  
; ..\EAS\BSW\PduR\PduR.c	  1851  }
	ret
.L539:
	
__PduR_LowerIfTxConfirmation_function_end:
	.size	PduR_LowerIfTxConfirmation,__PduR_LowerIfTxConfirmation_function_end-PduR_LowerIfTxConfirmation
.L345:
	; End of function
	
	.sdecl	'.text.PduR.PduR_LowerIfTriggerTransmit',code,cluster('PduR_LowerIfTriggerTransmit')
	.sect	'.text.PduR.PduR_LowerIfTriggerTransmit'
	.align	2
	

; ..\EAS\BSW\PduR\PduR.c	  1852  
; ..\EAS\BSW\PduR\PduR.c	  1853  #if((PDUR_MAX_NUMOFIPDUMIFTXPDU > 0) || (PDUR_MAX_NUMOFLINIFTXPDU > 0) || (PDUR_MAX_NUMOFSOADIFTXPDU > 0) ||  (PDUR_MAX_NUMOFCANNMTXPDU > 0))
; ..\EAS\BSW\PduR\PduR.c	  1854  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  1855  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  1856  * Function Name: PduR_LowerIfTriggerTransmit
; ..\EAS\BSW\PduR\PduR.c	  1857  *
; ..\EAS\BSW\PduR\PduR.c	  1858  * Description:     This function is called by the communication interface module to
; ..\EAS\BSW\PduR\PduR.c	  1859  *                 confirm the transmit data of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  1860  *
; ..\EAS\BSW\PduR\PduR.c	  1861  * Inputs:         PathId   Identification of the transmitted path.
; ..\EAS\BSW\PduR\PduR.c	  1862  *                 ConfId Identification passed to up layer.
; ..\EAS\BSW\PduR\PduR.c	  1863  *
; ..\EAS\BSW\PduR\PduR.c	  1864  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  1865  *
; ..\EAS\BSW\PduR\PduR.c	  1866  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  1867  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  1868  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  1869  STATIC FUNC(Std_ReturnType, PDUR_CODE) PduR_LowerIfTriggerTransmit
; Function PduR_LowerIfTriggerTransmit
.L164:
PduR_LowerIfTriggerTransmit:	.type	func

; ..\EAS\BSW\PduR\PduR.c	  1870  (
; ..\EAS\BSW\PduR\PduR.c	  1871      PduR_RoutingPathIdType PathId,
; ..\EAS\BSW\PduR\PduR.c	  1872      PduIdType ConfId,
; ..\EAS\BSW\PduR\PduR.c	  1873      P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) PduInfoPtr
; ..\EAS\BSW\PduR\PduR.c	  1874  )
; ..\EAS\BSW\PduR\PduR.c	  1875  {
; ..\EAS\BSW\PduR\PduR.c	  1876      Std_ReturnType ret = E_NOT_OK;
	mov	d2,#1
.L662:

; ..\EAS\BSW\PduR\PduR.c	  1877      PduR_MulticastMaskType mask = PDUR_ROUTINGPATHINFO(PathId).ConfMask;
	mul	d15,d4,#20
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1147:
	ld.bu	d8,[a15]16
.L664:

; ..\EAS\BSW\PduR\PduR.c	  1878      PduRModuleType SrcModuleType = PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcModuleType;
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1148:
	ld.bu	d0,[a15]1
.L666:

; ..\EAS\BSW\PduR\PduR.c	  1879      PduIdType SrcPduId = PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcPduHandleId;
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1149:
	ld.bu	d9,[a15]
.L667:

; ..\EAS\BSW\PduR\PduR.c	  1880  #if(STD_ON == PDUR_GW_IF_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1881      uint16 BufferId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRDestTxBufferId;
; ..\EAS\BSW\PduR\PduR.c	  1882  #endif
; ..\EAS\BSW\PduR\PduR.c	  1883      P2VAR(PduR_MulticastMaskType, AUTOMATIC, PDUR_VAR) pTxConfMask = NULL_PTR;
	mov.a	a12,#0
.L668:

; ..\EAS\BSW\PduR\PduR.c	  1884      P2VAR(PduR_MulticastMaskType, AUTOMATIC, PDUR_VAR) pTxErrorMask = NULL_PTR;
	mov.aa	a13,a12
.L669:

; ..\EAS\BSW\PduR\PduR.c	  1885  
; ..\EAS\BSW\PduR\PduR.c	  1886  #if(STD_ON == PDUR_COM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1887  #if(PDUR_MAX_NUMOFCOMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1888      if(MODULE_COM == SrcModuleType)
	jne	d0,#0,.L9
.L1150:

; ..\EAS\BSW\PduR\PduR.c	  1889      {
; ..\EAS\BSW\PduR\PduR.c	  1890          pTxConfMask = ComTxConfMask;
	movh.a	a12,#@his(ComTxConfMask)
	lea	a12,[a12]@los(ComTxConfMask)
.L1151:

; ..\EAS\BSW\PduR\PduR.c	  1891          pTxErrorMask = ComTxErrorMask;
	movh.a	a13,#@his(ComTxErrorMask)
	lea	a13,[a13]@los(ComTxErrorMask)
.L9:

; ..\EAS\BSW\PduR\PduR.c	  1892      }
; ..\EAS\BSW\PduR\PduR.c	  1893  #endif
; ..\EAS\BSW\PduR\PduR.c	  1894  #endif
; ..\EAS\BSW\PduR\PduR.c	  1895  #if(STD_ON == PDUR_LDCOM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1896  #if(PDUR_MAX_NUMOFLDCOMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1897      if(MODULE_LDCOM == SrcModuleType)
; ..\EAS\BSW\PduR\PduR.c	  1898      {
; ..\EAS\BSW\PduR\PduR.c	  1899          pTxConfMask = LdComTxConfMask;
; ..\EAS\BSW\PduR\PduR.c	  1900          pTxErrorMask = LdComTxErrorMask;
; ..\EAS\BSW\PduR\PduR.c	  1901      }
; ..\EAS\BSW\PduR\PduR.c	  1902  #endif
; ..\EAS\BSW\PduR\PduR.c	  1903  #endif
; ..\EAS\BSW\PduR\PduR.c	  1904  #if(STD_ON == PDUR_DCM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1905  #if(PDUR_MAX_NUMOFDCMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1906      if(MODULE_DCM == SrcModuleType)
	jne	d0,#1,.L10
.L1152:

; ..\EAS\BSW\PduR\PduR.c	  1907      {
; ..\EAS\BSW\PduR\PduR.c	  1908          pTxConfMask = DcmTxConfMask;
	movh.a	a12,#@his(DcmTxConfMask)
	lea	a12,[a12]@los(DcmTxConfMask)
.L1153:

; ..\EAS\BSW\PduR\PduR.c	  1909          pTxErrorMask = DcmTxErrorMask;
	movh.a	a13,#@his(DcmTxErrorMask)
	lea	a13,[a13]@los(DcmTxErrorMask)
.L10:

; ..\EAS\BSW\PduR\PduR.c	  1910      }
; ..\EAS\BSW\PduR\PduR.c	  1911  #endif
; ..\EAS\BSW\PduR\PduR.c	  1912  #endif
; ..\EAS\BSW\PduR\PduR.c	  1913  #if(STD_ON == PDUR_CDD_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1914  #if(PDUR_MAX_NUMOFCDDTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1915      if(MODULE_CDD == SrcModuleType)
; ..\EAS\BSW\PduR\PduR.c	  1916      {
; ..\EAS\BSW\PduR\PduR.c	  1917          pTxConfMask = CddTxConfMask;
; ..\EAS\BSW\PduR\PduR.c	  1918          pTxErrorMask = CddTxErrorMask;
; ..\EAS\BSW\PduR\PduR.c	  1919      }
; ..\EAS\BSW\PduR\PduR.c	  1920  #endif
; ..\EAS\BSW\PduR\PduR.c	  1921  #endif
; ..\EAS\BSW\PduR\PduR.c	  1922  #if(STD_ON == PDUR_IPDUM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1923  #if(PDUR_MAX_NUMOFIPDUMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1924      if(MODULE_IPDUM == SrcModuleType)
; ..\EAS\BSW\PduR\PduR.c	  1925      {
; ..\EAS\BSW\PduR\PduR.c	  1926          pTxConfMask = IpduMTxConfMask;
; ..\EAS\BSW\PduR\PduR.c	  1927          pTxErrorMask = IpduMTxErrorMask;
; ..\EAS\BSW\PduR\PduR.c	  1928      }
; ..\EAS\BSW\PduR\PduR.c	  1929  #endif
; ..\EAS\BSW\PduR\PduR.c	  1930  #endif
; ..\EAS\BSW\PduR\PduR.c	  1931  #if(STD_ON == PDUR_SOMEIP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1932  #if(PDUR_MAX_NUMOFSOMEIPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1933      if(MODULE_SOMEIP == SrcModuleType)
; ..\EAS\BSW\PduR\PduR.c	  1934      {
; ..\EAS\BSW\PduR\PduR.c	  1935          pTxConfMask = SomeIpTxConfMask;
; ..\EAS\BSW\PduR\PduR.c	  1936          pTxErrorMask = SomeIpTxErrorMask;
; ..\EAS\BSW\PduR\PduR.c	  1937      }
; ..\EAS\BSW\PduR\PduR.c	  1938  #endif
; ..\EAS\BSW\PduR\PduR.c	  1939  #endif
; ..\EAS\BSW\PduR\PduR.c	  1940  #if(STD_ON == PDUR_SECOC_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1941  #if(PDUR_MAX_NUMOFSECOCTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  1942      if(MODULE_SECOC == SrcModuleType)
; ..\EAS\BSW\PduR\PduR.c	  1943      {
; ..\EAS\BSW\PduR\PduR.c	  1944          pTxConfMask = SecOCTxConfMask;
; ..\EAS\BSW\PduR\PduR.c	  1945          pTxErrorMask = SecOCTxErrorMask;
; ..\EAS\BSW\PduR\PduR.c	  1946      }
; ..\EAS\BSW\PduR\PduR.c	  1947  #endif
; ..\EAS\BSW\PduR\PduR.c	  1948  #endif
; ..\EAS\BSW\PduR\PduR.c	  1949  
; ..\EAS\BSW\PduR\PduR.c	  1950      if(NULL_PTR != PduR_ModuleFunctions[SrcModuleType].UpIfTriggerTransmitFunc)
	mov.a	a2,#0
.L1154:
	mul	d15,d0,#52
.L1155:
	movh.a	a15,#@his(PduR_ModuleFunctions)
	lea	a15,[a15]@los(PduR_ModuleFunctions)
.L1156:
	addsc.a	a15,a15,d15,#0
.L1157:
	ld.a	a15,[a15]24
.L1158:
	jeq.a	a2,a15,.L11
.L1159:

; ..\EAS\BSW\PduR\PduR.c	  1951      {
; ..\EAS\BSW\PduR\PduR.c	  1952          if((NULL_PTR != pTxConfMask) && (NULL_PTR != pTxErrorMask))
	jeq.a	a2,a12,.L12
.L1160:
	jeq.a	a2,a13,.L13
.L1161:

; ..\EAS\BSW\PduR\PduR.c	  1953          {
; ..\EAS\BSW\PduR\PduR.c	  1954              pTxConfMask[SrcPduId] &= ~mask;
	addsc.a	a15,a12,d9,#0
	ld.bu	d1,[a15]
.L1162:
	xor	d2,d8,#255
.L663:
	and	d1,d2
	st.b	[a15],d1
.L1163:

; ..\EAS\BSW\PduR\PduR.c	  1955              pTxErrorMask[SrcPduId] &= ~mask;
	addsc.a	a15,a13,d9,#0
	ld.bu	d1,[a15]
.L1164:
	and	d1,d2
	st.b	[a15],d1
.L13:
.L12:

; ..\EAS\BSW\PduR\PduR.c	  1956          }
; ..\EAS\BSW\PduR\PduR.c	  1957          /*SWS_PduR_00430 SWS_PduR_00661*/
; ..\EAS\BSW\PduR\PduR.c	  1958          ret = PduR_ModuleFunctions[SrcModuleType].UpIfTriggerTransmitFunc(ConfId, PduInfoPtr);
	mul	d15,d0,#52
.L1165:
	movh.a	a15,#@his(PduR_ModuleFunctions)
	lea	a15,[a15]@los(PduR_ModuleFunctions)
.L1166:
	addsc.a	a15,a15,d15,#0
.L1167:
	ld.a	a15,[a15]24
.L1168:
	mov	d4,d5
.L661:
	calli	a15
.L660:

; ..\EAS\BSW\PduR\PduR.c	  1959          if(E_OK != ret)
	jeq	d2,#0,.L14
.L1169:

; ..\EAS\BSW\PduR\PduR.c	  1960          {
; ..\EAS\BSW\PduR\PduR.c	  1961              pTxConfMask[SrcPduId] |= mask;
	addsc.a	a15,a12,d9,#0
	ld.bu	d15,[a15]
.L1170:
	or	d15,d8
	st.b	[a15],d15
.L1171:

; ..\EAS\BSW\PduR\PduR.c	  1962              pTxErrorMask[SrcPduId] |= mask;
	addsc.a	a15,a13,d9,#0
	ld.bu	d15,[a15]
.L1172:
	or	d8,d15
.L665:
	st.b	[a15],d8
.L14:
.L11:

; ..\EAS\BSW\PduR\PduR.c	  1963          }
; ..\EAS\BSW\PduR\PduR.c	  1964      }
; ..\EAS\BSW\PduR\PduR.c	  1965  #if(STD_ON == PDUR_GW_IF_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  1966  #if(PDUR_MAX_NUMOFBUFFER > 0)
; ..\EAS\BSW\PduR\PduR.c	  1967      else if(PDUR_UNUSED != BufferId)
; ..\EAS\BSW\PduR\PduR.c	  1968      {
; ..\EAS\BSW\PduR\PduR.c	  1969          /*GW, Copy Txbuff to PduInfoPtr*/
; ..\EAS\BSW\PduR\PduR.c	  1970          /*SWS_PduR_00306 SWS_PDUR_00819*/
; ..\EAS\BSW\PduR\PduR.c	  1971          /*check whether the valid data fits into PduInfoPtr->SduLength*/
; ..\EAS\BSW\PduR\PduR.c	  1972          if(PduRBufferInfo[BufferId].ValidLen <= PduInfoPtr->SduLength)
; ..\EAS\BSW\PduR\PduR.c	  1973          {
; ..\EAS\BSW\PduR\PduR.c	  1974              /*Do not remove data after copy*/
; ..\EAS\BSW\PduR\PduR.c	  1975              /*SWS_PduR_00666 SWS_PduR_00667*/
; ..\EAS\BSW\PduR\PduR.c	  1976              Bsw_MemCpy(PduInfoPtr->SduDataPtr, PduR_Buffer[BufferId], PduRBufferInfo[BufferId].ValidLen);
; ..\EAS\BSW\PduR\PduR.c	  1977              PduInfoPtr->SduLength = PduRBufferInfo[BufferId].ValidLen;
; ..\EAS\BSW\PduR\PduR.c	  1978              ret = E_OK;
; ..\EAS\BSW\PduR\PduR.c	  1979          }
; ..\EAS\BSW\PduR\PduR.c	  1980          else
; ..\EAS\BSW\PduR\PduR.c	  1981          {
; ..\EAS\BSW\PduR\PduR.c	  1982              /*SWS_PduR_00662*/
; ..\EAS\BSW\PduR\PduR.c	  1983              ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  1984          }
; ..\EAS\BSW\PduR\PduR.c	  1985      }
; ..\EAS\BSW\PduR\PduR.c	  1986  #endif
; ..\EAS\BSW\PduR\PduR.c	  1987  #endif
; ..\EAS\BSW\PduR\PduR.c	  1988      else
; ..\EAS\BSW\PduR\PduR.c	  1989      {
; ..\EAS\BSW\PduR\PduR.c	  1990      }
; ..\EAS\BSW\PduR\PduR.c	  1991      return ret;
; ..\EAS\BSW\PduR\PduR.c	  1992  }
	ret
.L548:
	
__PduR_LowerIfTriggerTransmit_function_end:
	.size	PduR_LowerIfTriggerTransmit,__PduR_LowerIfTriggerTransmit_function_end-PduR_LowerIfTriggerTransmit
.L350:
	; End of function
	
	.sdecl	'.text.PduR.PduR_LowerIfMultiRxIndication',code,cluster('PduR_LowerIfMultiRxIndication')
	.sect	'.text.PduR.PduR_LowerIfMultiRxIndication'
	.align	2
	

; ..\EAS\BSW\PduR\PduR.c	  1993  #endif
; ..\EAS\BSW\PduR\PduR.c	  1994  
; ..\EAS\BSW\PduR\PduR.c	  1995  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  1996  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  1997  * Function Name: PduR_LowerIfMultiRxIndication
; ..\EAS\BSW\PduR\PduR.c	  1998  *
; ..\EAS\BSW\PduR\PduR.c	  1999  * Description:   RxIndication processing of lower interface module
; ..\EAS\BSW\PduR\PduR.c	  2000  *
; ..\EAS\BSW\PduR\PduR.c	  2001  * Inputs:        PathId id of the routing path
; ..\EAS\BSW\PduR\PduR.c	  2002  *                PduInfoPtr Data info of received data
; ..\EAS\BSW\PduR\PduR.c	  2003  *
; ..\EAS\BSW\PduR\PduR.c	  2004  * Outputs:       None
; ..\EAS\BSW\PduR\PduR.c	  2005  *
; ..\EAS\BSW\PduR\PduR.c	  2006  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  2007  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2008  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  2009  STATIC FUNC(void, PDUR_CODE) PduR_LowerIfMultiRxIndication
; Function PduR_LowerIfMultiRxIndication
.L166:
PduR_LowerIfMultiRxIndication:	.type	func
	mov.aa	a15,a4
.L670:
	mov.aa	a12,a5
.L671:

; ..\EAS\BSW\PduR\PduR.c	  2010  (
; ..\EAS\BSW\PduR\PduR.c	  2011      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo,
; ..\EAS\BSW\PduR\PduR.c	  2012      P2CONST(PduInfoType, AUTOMATIC, PDUR_CONST) PduInfoPtr
; ..\EAS\BSW\PduR\PduR.c	  2013  )
; ..\EAS\BSW\PduR\PduR.c	  2014  {
; ..\EAS\BSW\PduR\PduR.c	  2015      PduR_RoutingPathIdType i;
; ..\EAS\BSW\PduR\PduR.c	  2016      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  2017      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  2018  
; ..\EAS\BSW\PduR\PduR.c	  2019      /*SWS_PduR_00164*/
; ..\EAS\BSW\PduR\PduR.c	  2020      for(i = (PduR_RoutingPathIdType)0; i < pRxPduInfo->NumPaths; i++)
	mov	d8,#0
.L672:

; ..\EAS\BSW\PduR\PduR.c	  2021      {
; ..\EAS\BSW\PduR\PduR.c	  2022          PathId = pRxPduInfo->PathIdx[i];
; ..\EAS\BSW\PduR\PduR.c	  2023          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  2024  
; ..\EAS\BSW\PduR\PduR.c	  2025          /*SWS_PduR_00726*/
; ..\EAS\BSW\PduR\PduR.c	  2026          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
	mov.u	d9,#65535
.L1177:
	j	.L16
.L17:
	ld.a	a2,[a15]4
.L1178:
	addsc.a	a2,a2,d8,#0
	ld.bu	d4,[a2]
.L674:
	mul	d15,d4,#20
	movh.a	a2,#@his(PduRRoutingTable)
	lea	a2,[a2]@los(PduRRoutingTable)
	addsc.a	a2,a2,d15,#0
.L1179:
	ld.hu	d15,[a2]14
.L675:
	jeq	d15,d9,.L18
.L1180:
	movh.a	a2,#@his(PduR_RoutingPathGroupEnabled)
	lea	a2,[a2]@los(PduR_RoutingPathGroupEnabled)
.L1181:
	addsc.a	a2,a2,d15,#0
	ld.bu	d15,[a2]
.L676:
	jne	d15,#1,.L19
.L18:

; ..\EAS\BSW\PduR\PduR.c	  2027          {
; ..\EAS\BSW\PduR\PduR.c	  2028              PduR_LowerIfRxIndication(PathId, PduInfoPtr);
	mov.aa	a4,a12
.L677:
	call	PduR_LowerIfRxIndication
.L19:
	add	d8,#1
.L673:
	extr.u	d8,d8,#0,#8
.L16:
	ld.bu	d15,[a15]
.L1182:
	jlt.u	d8,d15,.L17
.L1183:

; ..\EAS\BSW\PduR\PduR.c	  2029          }
; ..\EAS\BSW\PduR\PduR.c	  2030      }
; ..\EAS\BSW\PduR\PduR.c	  2031  }
	ret
.L558:
	
__PduR_LowerIfMultiRxIndication_function_end:
	.size	PduR_LowerIfMultiRxIndication,__PduR_LowerIfMultiRxIndication_function_end-PduR_LowerIfMultiRxIndication
.L355:
	; End of function
	
	.sdecl	'.text.PduR.PduR_UpTransmit',code,cluster('PduR_UpTransmit')
	.sect	'.text.PduR.PduR_UpTransmit'
	.align	2
	
	.global	PduR_UpTransmit

; ..\EAS\BSW\PduR\PduR.c	  2032  #endif
; ..\EAS\BSW\PduR\PduR.c	  2033  #define PDUR_STOP_SEC_CODE
; ..\EAS\BSW\PduR\PduR.c	  2034  #include "MemMap.h"
; ..\EAS\BSW\PduR\PduR.c	  2035  
; ..\EAS\BSW\PduR\PduR.c	  2036  /*******************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2037  *  PUBLIC Functions define
; ..\EAS\BSW\PduR\PduR.c	  2038  *******************************************************************************/
; ..\EAS\BSW\PduR\PduR.c	  2039  #define PDUR_START_SEC_CODE
; ..\EAS\BSW\PduR\PduR.c	  2040  #include "MemMap.h"
; ..\EAS\BSW\PduR\PduR.c	  2041  
; ..\EAS\BSW\PduR\PduR.c	  2042  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  2043  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2044  * Function Name: PduR_UpTransmit
; ..\EAS\BSW\PduR\PduR.c	  2045  *
; ..\EAS\BSW\PduR\PduR.c	  2046  * Description:   Transmit of up module
; ..\EAS\BSW\PduR\PduR.c	  2047  *
; ..\EAS\BSW\PduR\PduR.c	  2048  * Inputs:        idx id of the routing path
; ..\EAS\BSW\PduR\PduR.c	  2049  *
; ..\EAS\BSW\PduR\PduR.c	  2050  * Outputs:       None
; ..\EAS\BSW\PduR\PduR.c	  2051  *
; ..\EAS\BSW\PduR\PduR.c	  2052  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  2053  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2054  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  2055  FUNC(Std_ReturnType, PDUR_CODE) PduR_UpTransmit
; Function PduR_UpTransmit
.L168:
PduR_UpTransmit:	.type	func

; ..\EAS\BSW\PduR\PduR.c	  2056  (
; ..\EAS\BSW\PduR\PduR.c	  2057      CONST(PduR_RoutingPathIdType, PDUR_CONST) PathId,
; ..\EAS\BSW\PduR\PduR.c	  2058      P2CONST(PduInfoType, AUTOMATIC, PDUR_CONST) info
; ..\EAS\BSW\PduR\PduR.c	  2059  )
; ..\EAS\BSW\PduR\PduR.c	  2060  {
; ..\EAS\BSW\PduR\PduR.c	  2061      Std_ReturnType ret = E_NOT_OK;
	mov	d2,#1
.L679:

; ..\EAS\BSW\PduR\PduR.c	  2062      PduIdType DestPduId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRDestPduId;
	mul	d15,d4,#20
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1188:
	ld.bu	d4,[a15]4
.L678:

; ..\EAS\BSW\PduR\PduR.c	  2063      PduR_RoutingPathGroupIdType GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1189:
	ld.hu	d0,[a15]14
.L680:

; ..\EAS\BSW\PduR\PduR.c	  2064      PduRModuleType DestModuleType = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRDestModuleType;
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1190:
	ld.bu	d1,[a15]5
.L681:

; ..\EAS\BSW\PduR\PduR.c	  2065  
; ..\EAS\BSW\PduR\PduR.c	  2066      /*SWS_PduR_00629 SWS_PduR_00745 SWS_PduR_00717*/
; ..\EAS\BSW\PduR\PduR.c	  2067      if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
	mov.u	d15,#65535
.L1191:
	jeq	d15,d0,.L20
.L1192:
	movh.a	a15,#@his(PduR_RoutingPathGroupEnabled)
	lea	a15,[a15]@los(PduR_RoutingPathGroupEnabled)
.L1193:
	addsc.a	a15,a15,d0,#0
	ld.bu	d15,[a15]
.L1194:
	jne	d15,#1,.L21
.L20:

; ..\EAS\BSW\PduR\PduR.c	  2068      {
; ..\EAS\BSW\PduR\PduR.c	  2069          if(NULL_PTR != PduR_ModuleFunctions[DestModuleType].IfTransmitFunc)
	mov.a	a2,#0
.L1195:
	mul	d15,d1,#52
.L1196:
	movh.a	a15,#@his(PduR_ModuleFunctions)
	lea	a15,[a15]@los(PduR_ModuleFunctions)
.L1197:
	addsc.a	a15,a15,d15,#0
.L1198:
	ld.a	a15,[a15]4
.L1199:
	jeq.a	a2,a15,.L22
.L1200:

; ..\EAS\BSW\PduR\PduR.c	  2070          {
; ..\EAS\BSW\PduR\PduR.c	  2071              /*Interface module*/
; ..\EAS\BSW\PduR\PduR.c	  2072              /*SWS_PduR_00625 SWS_PduR_00626 SWS_PduR_00432*/
; ..\EAS\BSW\PduR\PduR.c	  2073              ret = PduR_ModuleFunctions[DestModuleType].IfTransmitFunc(DestPduId, info);
	movh.a	a15,#@his(PduR_ModuleFunctions)
	lea	a15,[a15]@los(PduR_ModuleFunctions)
.L1201:
	addsc.a	a15,a15,d15,#0
.L1202:
	ld.a	a15,[a15]4
.L1203:
	j	.L23
.L22:

; ..\EAS\BSW\PduR\PduR.c	  2074          }
; ..\EAS\BSW\PduR\PduR.c	  2075          else if(NULL_PTR != PduR_ModuleFunctions[DestModuleType].TpTransmitFunc)
	mul	d15,d1,#52
.L1204:
	movh.a	a15,#@his(PduR_ModuleFunctions)
	lea	a15,[a15]@los(PduR_ModuleFunctions)
.L1205:
	addsc.a	a15,a15,d15,#0
.L1206:
	ld.a	a15,[a15]16
.L1207:
	jeq.a	a2,a15,.L24
.L1208:

; ..\EAS\BSW\PduR\PduR.c	  2076          {
; ..\EAS\BSW\PduR\PduR.c	  2077              /*Tp module*/
; ..\EAS\BSW\PduR\PduR.c	  2078              /*SWS_PduR_00634*/
; ..\EAS\BSW\PduR\PduR.c	  2079              ret = PduR_ModuleFunctions[DestModuleType].TpTransmitFunc(DestPduId, info);
	movh.a	a15,#@his(PduR_ModuleFunctions)
	lea	a15,[a15]@los(PduR_ModuleFunctions)
.L1209:
	addsc.a	a15,a15,d15,#0
.L1210:
	ld.a	a15,[a15]16
.L23:
	ji	a15
.L24:
.L21:

; ..\EAS\BSW\PduR\PduR.c	  2080          }
; ..\EAS\BSW\PduR\PduR.c	  2081          else
; ..\EAS\BSW\PduR\PduR.c	  2082          {
; ..\EAS\BSW\PduR\PduR.c	  2083              /* Intentionally Empty */
; ..\EAS\BSW\PduR\PduR.c	  2084          }
; ..\EAS\BSW\PduR\PduR.c	  2085      }
; ..\EAS\BSW\PduR\PduR.c	  2086  
; ..\EAS\BSW\PduR\PduR.c	  2087      return ret;
; ..\EAS\BSW\PduR\PduR.c	  2088  }
	ret
.L564:
	
__PduR_UpTransmit_function_end:
	.size	PduR_UpTransmit,__PduR_UpTransmit_function_end-PduR_UpTransmit
.L360:
	; End of function
	
	.sdecl	'.text.PduR.PduR_LowerTpStartOfReception',code,cluster('PduR_LowerTpStartOfReception')
	.sect	'.text.PduR.PduR_LowerTpStartOfReception'
	.align	2
	
	.global	PduR_LowerTpStartOfReception

; ..\EAS\BSW\PduR\PduR.c	  2089  
; ..\EAS\BSW\PduR\PduR.c	  2090  #if(STD_ON == PDUR_CANCEL_TRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  2091  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  2092  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2093  * Function Name: PduR_UpCancelTransmit
; ..\EAS\BSW\PduR\PduR.c	  2094  *
; ..\EAS\BSW\PduR\PduR.c	  2095  * Description:   CancelTransmit of up module
; ..\EAS\BSW\PduR\PduR.c	  2096  *
; ..\EAS\BSW\PduR\PduR.c	  2097  * Inputs:        idx id of the routing path
; ..\EAS\BSW\PduR\PduR.c	  2098  *
; ..\EAS\BSW\PduR\PduR.c	  2099  * Outputs:       None
; ..\EAS\BSW\PduR\PduR.c	  2100  *
; ..\EAS\BSW\PduR\PduR.c	  2101  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  2102  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2103  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  2104  STATIC FUNC(Std_ReturnType, PDUR_CODE) PduR_UpCancelTransmit
; ..\EAS\BSW\PduR\PduR.c	  2105  (
; ..\EAS\BSW\PduR\PduR.c	  2106      CONST(PduR_RoutingPathIdType, PDUR_CONST) PathId
; ..\EAS\BSW\PduR\PduR.c	  2107  )
; ..\EAS\BSW\PduR\PduR.c	  2108  {
; ..\EAS\BSW\PduR\PduR.c	  2109      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  2110      PduIdType DstPduId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRDestPduId;
; ..\EAS\BSW\PduR\PduR.c	  2111      PduR_RoutingPathGroupIdType GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  2112      PduRModuleType DestModuleType = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRDestModuleType;
; ..\EAS\BSW\PduR\PduR.c	  2113  
; ..\EAS\BSW\PduR\PduR.c	  2114      /*SWS_PduR_00710 SWS_PduR_00717*/
; ..\EAS\BSW\PduR\PduR.c	  2115      if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  2116      {
; ..\EAS\BSW\PduR\PduR.c	  2117          if(NULL_PTR != PduR_ModuleFunctions[DestModuleType].IfCancelTransmitFunc)
; ..\EAS\BSW\PduR\PduR.c	  2118          {
; ..\EAS\BSW\PduR\PduR.c	  2119              /*Interface module*/
; ..\EAS\BSW\PduR\PduR.c	  2120              /*SWS_PduR_00721 SWS_PduR_00723 SWS_PduR_00700*/
; ..\EAS\BSW\PduR\PduR.c	  2121              ret = PduR_ModuleFunctions[DestModuleType].IfCancelTransmitFunc(DstPduId);
; ..\EAS\BSW\PduR\PduR.c	  2122          }
; ..\EAS\BSW\PduR\PduR.c	  2123          else if(NULL_PTR != PduR_ModuleFunctions[DestModuleType].TpCancelTransmitFunc)
; ..\EAS\BSW\PduR\PduR.c	  2124          {
; ..\EAS\BSW\PduR\PduR.c	  2125              /*Tp module*/
; ..\EAS\BSW\PduR\PduR.c	  2126              /*SWS_PduR_00722 SWS_PduR_00724*/
; ..\EAS\BSW\PduR\PduR.c	  2127              ret = PduR_ModuleFunctions[DestModuleType].TpCancelTransmitFunc(DstPduId);
; ..\EAS\BSW\PduR\PduR.c	  2128          }
; ..\EAS\BSW\PduR\PduR.c	  2129          else
; ..\EAS\BSW\PduR\PduR.c	  2130          {
; ..\EAS\BSW\PduR\PduR.c	  2131              /* Intentionally Empty */
; ..\EAS\BSW\PduR\PduR.c	  2132          }
; ..\EAS\BSW\PduR\PduR.c	  2133      }
; ..\EAS\BSW\PduR\PduR.c	  2134  
; ..\EAS\BSW\PduR\PduR.c	  2135      return ret;
; ..\EAS\BSW\PduR\PduR.c	  2136  }
; ..\EAS\BSW\PduR\PduR.c	  2137  #endif
; ..\EAS\BSW\PduR\PduR.c	  2138  
; ..\EAS\BSW\PduR\PduR.c	  2139  #if(STD_ON == PDUR_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  2140  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  2141  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2142  * Function Name: PduR_UpChangeParameter
; ..\EAS\BSW\PduR\PduR.c	  2143  *
; ..\EAS\BSW\PduR\PduR.c	  2144  * Description:   ChangeParameter of up module
; ..\EAS\BSW\PduR\PduR.c	  2145  *
; ..\EAS\BSW\PduR\PduR.c	  2146  * Inputs:        idx id of the routing path
; ..\EAS\BSW\PduR\PduR.c	  2147  *                parameter which parameter is to be changed
; ..\EAS\BSW\PduR\PduR.c	  2148  *                value what value changed to
; ..\EAS\BSW\PduR\PduR.c	  2149  *
; ..\EAS\BSW\PduR\PduR.c	  2150  * Outputs:       None
; ..\EAS\BSW\PduR\PduR.c	  2151  *
; ..\EAS\BSW\PduR\PduR.c	  2152  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  2153  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2154  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  2155  STATIC FUNC(Std_ReturnType, PDUR_CODE) PduR_UpChangeParameter
; ..\EAS\BSW\PduR\PduR.c	  2156  (
; ..\EAS\BSW\PduR\PduR.c	  2157      CONST(PduR_RoutingPathIdType, PDUR_CONST) PathId,
; ..\EAS\BSW\PduR\PduR.c	  2158      TPParameterType parameter,
; ..\EAS\BSW\PduR\PduR.c	  2159      uint16 value
; ..\EAS\BSW\PduR\PduR.c	  2160  )
; ..\EAS\BSW\PduR\PduR.c	  2161  {
; ..\EAS\BSW\PduR\PduR.c	  2162      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  2163  
; ..\EAS\BSW\PduR\PduR.c	  2164      /*Tp ChangeParameter id same as rx id*/
; ..\EAS\BSW\PduR\PduR.c	  2165      PduIdType SrcPduId = PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcPduHandleId;
; ..\EAS\BSW\PduR\PduR.c	  2166      PduR_RoutingPathGroupIdType GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  2167      PduRModuleType SrcModuleType = PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcModuleType;
; ..\EAS\BSW\PduR\PduR.c	  2168  
; ..\EAS\BSW\PduR\PduR.c	  2169      /*SWS_PduR_00717*/
; ..\EAS\BSW\PduR\PduR.c	  2170      if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  2171      {
; ..\EAS\BSW\PduR\PduR.c	  2172          if(NULL_PTR != PduR_ModuleFunctions[SrcModuleType].TpChangeParameterFunc)
; ..\EAS\BSW\PduR\PduR.c	  2173          {
; ..\EAS\BSW\PduR\PduR.c	  2174              /*SWS_PduR_00733 SWS_PduR_00734*/
; ..\EAS\BSW\PduR\PduR.c	  2175              ret = PduR_ModuleFunctions[SrcModuleType].TpChangeParameterFunc(SrcPduId, parameter, value);
; ..\EAS\BSW\PduR\PduR.c	  2176          }
; ..\EAS\BSW\PduR\PduR.c	  2177      }
; ..\EAS\BSW\PduR\PduR.c	  2178      return ret;
; ..\EAS\BSW\PduR\PduR.c	  2179  }
; ..\EAS\BSW\PduR\PduR.c	  2180  #endif
; ..\EAS\BSW\PduR\PduR.c	  2181  
; ..\EAS\BSW\PduR\PduR.c	  2182  #if(STD_ON == PDUR_CANCEL_RECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  2183  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  2184  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2185  * Function Name: PduR_UpCancelReceive
; ..\EAS\BSW\PduR\PduR.c	  2186  *
; ..\EAS\BSW\PduR\PduR.c	  2187  * Description:   CancelReceive of up module
; ..\EAS\BSW\PduR\PduR.c	  2188  *
; ..\EAS\BSW\PduR\PduR.c	  2189  * Inputs:        idx id of the routing path
; ..\EAS\BSW\PduR\PduR.c	  2190  *
; ..\EAS\BSW\PduR\PduR.c	  2191  * Outputs:       None
; ..\EAS\BSW\PduR\PduR.c	  2192  *
; ..\EAS\BSW\PduR\PduR.c	  2193  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  2194  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2195  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  2196  STATIC FUNC(Std_ReturnType, PDUR_CODE) PduR_UpCancelReceive
; ..\EAS\BSW\PduR\PduR.c	  2197  (
; ..\EAS\BSW\PduR\PduR.c	  2198      CONST(PduR_RoutingPathIdType, PDUR_CONST) PathId
; ..\EAS\BSW\PduR\PduR.c	  2199  )
; ..\EAS\BSW\PduR\PduR.c	  2200  {
; ..\EAS\BSW\PduR\PduR.c	  2201      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  2202  
; ..\EAS\BSW\PduR\PduR.c	  2203      /*Tp CancelReceive id same as rx id*/
; ..\EAS\BSW\PduR\PduR.c	  2204      PduIdType SrcPduId = PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcPduHandleId;
; ..\EAS\BSW\PduR\PduR.c	  2205      PduR_RoutingPathGroupIdType GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  2206      PduRModuleType SrcModuleType = PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcModuleType;
; ..\EAS\BSW\PduR\PduR.c	  2207  
; ..\EAS\BSW\PduR\PduR.c	  2208      /*SWS_PduR_00726 SWS_PduR_00717*/
; ..\EAS\BSW\PduR\PduR.c	  2209      if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  2210      {
; ..\EAS\BSW\PduR\PduR.c	  2211          if(NULL_PTR != PduR_ModuleFunctions[SrcModuleType].TpCancelReceiveFunc)
; ..\EAS\BSW\PduR\PduR.c	  2212          {
; ..\EAS\BSW\PduR\PduR.c	  2213              /*SWS_PduR_00727 SWS_PduR_00732*/
; ..\EAS\BSW\PduR\PduR.c	  2214              ret = PduR_ModuleFunctions[SrcModuleType].TpCancelReceiveFunc(SrcPduId);
; ..\EAS\BSW\PduR\PduR.c	  2215          }
; ..\EAS\BSW\PduR\PduR.c	  2216      }
; ..\EAS\BSW\PduR\PduR.c	  2217  
; ..\EAS\BSW\PduR\PduR.c	  2218      return ret;
; ..\EAS\BSW\PduR\PduR.c	  2219  }
; ..\EAS\BSW\PduR\PduR.c	  2220  #endif
; ..\EAS\BSW\PduR\PduR.c	  2221  
; ..\EAS\BSW\PduR\PduR.c	  2222  
; ..\EAS\BSW\PduR\PduR.c	  2223  #if(STD_ON == PDUR_TP_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2224  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  2225  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2226  * Function Name: PduR_LowerTpStartOfReception
; ..\EAS\BSW\PduR\PduR.c	  2227  *
; ..\EAS\BSW\PduR\PduR.c	  2228  * Description:   StartOfReception processing of lower Tp module
; ..\EAS\BSW\PduR\PduR.c	  2229  *
; ..\EAS\BSW\PduR\PduR.c	  2230  * Inputs:        PathId id of the routing path
; ..\EAS\BSW\PduR\PduR.c	  2231  *
; ..\EAS\BSW\PduR\PduR.c	  2232  * Outputs:       None
; ..\EAS\BSW\PduR\PduR.c	  2233  *
; ..\EAS\BSW\PduR\PduR.c	  2234  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  2235  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2236  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  2237  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_LowerTpStartOfReception
; Function PduR_LowerTpStartOfReception
.L170:
PduR_LowerTpStartOfReception:	.type	func

; ..\EAS\BSW\PduR\PduR.c	  2238  (
; ..\EAS\BSW\PduR\PduR.c	  2239      PduR_RoutingPathIdType PathId,
; ..\EAS\BSW\PduR\PduR.c	  2240      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  2241      PduLengthType TpSduLength,
; ..\EAS\BSW\PduR\PduR.c	  2242      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  2243  )
; ..\EAS\BSW\PduR\PduR.c	  2244  {
; ..\EAS\BSW\PduR\PduR.c	  2245      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
	mov	d2,#1
.L683:

; ..\EAS\BSW\PduR\PduR.c	  2246      PduRModuleType DestModuleType = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRDestModuleType;
	mul	d15,d4,#20
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1215:
	ld.bu	d0,[a15]5
.L684:

; ..\EAS\BSW\PduR\PduR.c	  2247      PduIdType DestPduId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRDestPduId;
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1216:
	ld.bu	d4,[a15]4
.L682:

; ..\EAS\BSW\PduR\PduR.c	  2248  #if(STD_ON == PDUR_GW_TP_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2249      uint16 BufferId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRDestTxBufferId;
; ..\EAS\BSW\PduR\PduR.c	  2250      uint16 PduRTpThreshold = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRTpThreshold;
; ..\EAS\BSW\PduR\PduR.c	  2251      PduInfoType TxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  2252  #endif
; ..\EAS\BSW\PduR\PduR.c	  2253  
; ..\EAS\BSW\PduR\PduR.c	  2254      if(NULL_PTR != PduR_ModuleFunctions[DestModuleType].UpTpStartOfReceptionFunc)
	mov.a	a2,#0
.L1217:
	mul	d15,d0,#52
.L1218:
	movh.a	a15,#@his(PduR_ModuleFunctions)
	lea	a15,[a15]@los(PduR_ModuleFunctions)
.L1219:
	addsc.a	a15,a15,d15,#0
.L1220:
	ld.a	a15,[a15]40
.L1221:
	jeq.a	a2,a15,.L26
.L1222:

; ..\EAS\BSW\PduR\PduR.c	  2255      {
; ..\EAS\BSW\PduR\PduR.c	  2256          /*Up modules*/
; ..\EAS\BSW\PduR\PduR.c	  2257          /*SWS_PduR_00549 SWS_PduR_00623*/
; ..\EAS\BSW\PduR\PduR.c	  2258          result = PduR_ModuleFunctions[DestModuleType].UpTpStartOfReceptionFunc(DestPduId, info, TpSduLength, bufferSizePtr);
	movh.a	a15,#@his(PduR_ModuleFunctions)
	lea	a15,[a15]@los(PduR_ModuleFunctions)
.L1223:
	addsc.a	a15,a15,d15,#0
.L1224:
	ld.a	a15,[a15]40
.L1225:
	ji	a15
.L26:

; ..\EAS\BSW\PduR\PduR.c	  2259      }
; ..\EAS\BSW\PduR\PduR.c	  2260  #if(STD_ON == PDUR_GW_TP_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2261  #if(PDUR_MAX_NUMOFBUFFER > 0)
; ..\EAS\BSW\PduR\PduR.c	  2262      else if(PDUR_UNUSED != BufferId)
; ..\EAS\BSW\PduR\PduR.c	  2263      {
; ..\EAS\BSW\PduR\PduR.c	  2264          /*Tp modules*/
; ..\EAS\BSW\PduR\PduR.c	  2265          if(PDUR_BUFFER_IDLE == PduRBufferInfo[BufferId].BufState)
; ..\EAS\BSW\PduR\PduR.c	  2266          {
; ..\EAS\BSW\PduR\PduR.c	  2267              if(PduRBufferInfo[BufferId].AvailableLen < info->SduLength)
; ..\EAS\BSW\PduR\PduR.c	  2268              {
; ..\EAS\BSW\PduR\PduR.c	  2269                  /*SWS_PduR_00799*/
; ..\EAS\BSW\PduR\PduR.c	  2270                  result = BUFREQ_E_OVFL;
; ..\EAS\BSW\PduR\PduR.c	  2271              }
; ..\EAS\BSW\PduR\PduR.c	  2272              else
; ..\EAS\BSW\PduR\PduR.c	  2273              {
; ..\EAS\BSW\PduR\PduR.c	  2274                  if(0 == PduRTpThreshold)
; ..\EAS\BSW\PduR\PduR.c	  2275                  {
; ..\EAS\BSW\PduR\PduR.c	  2276                      /*SWS_PDUR_00811*/
; ..\EAS\BSW\PduR\PduR.c	  2277                      PduRBufferInfo[BufferId].TotalLen = TpSduLength;
; ..\EAS\BSW\PduR\PduR.c	  2278                      TxPduInfo.SduLength = PduRBufferInfo[BufferId].TotalLen;
; ..\EAS\BSW\PduR\PduR.c	  2279                      /*!!!CAUTION!!! TpTransmitFunc must not read data for now*/
; ..\EAS\BSW\PduR\PduR.c	  2280                      TxPduInfo.SduDataPtr = PduR_Buffer[BufferId] + PduRBufferInfo[BufferId].ReadPos;
; ..\EAS\BSW\PduR\PduR.c	  2281                      if(E_OK == PduR_ModuleFunctions[DestModuleType].TpTransmitFunc(DestPduId, &TxPduInfo))
; ..\EAS\BSW\PduR\PduR.c	  2282                      {
; ..\EAS\BSW\PduR\PduR.c	  2283                          *bufferSizePtr = PduRBufferInfo[BufferId].AvailableLen;
; ..\EAS\BSW\PduR\PduR.c	  2284                          PduRBufferInfo[BufferId].BufState = PDUR_BUFFER_RECEIVING | PDUR_BUFFER_TRANSMITING;
; ..\EAS\BSW\PduR\PduR.c	  2285                          result = BUFREQ_OK;
; ..\EAS\BSW\PduR\PduR.c	  2286                      }
; ..\EAS\BSW\PduR\PduR.c	  2287                      else
; ..\EAS\BSW\PduR\PduR.c	  2288                      {
; ..\EAS\BSW\PduR\PduR.c	  2289                          PduR_BufferInit(BufferId);
; ..\EAS\BSW\PduR\PduR.c	  2290                      }
; ..\EAS\BSW\PduR\PduR.c	  2291                  }
; ..\EAS\BSW\PduR\PduR.c	  2292                  else
; ..\EAS\BSW\PduR\PduR.c	  2293                  {
; ..\EAS\BSW\PduR\PduR.c	  2294                      /*SWS_PDUR_00818*/
; ..\EAS\BSW\PduR\PduR.c	  2295                      PduRBufferInfo[BufferId].TotalLen = TpSduLength;
; ..\EAS\BSW\PduR\PduR.c	  2296                      *bufferSizePtr = PduRBufferInfo[BufferId].AvailableLen;
; ..\EAS\BSW\PduR\PduR.c	  2297                      PduRBufferInfo[BufferId].BufState = PDUR_BUFFER_RECEIVING;
; ..\EAS\BSW\PduR\PduR.c	  2298                      result = BUFREQ_OK;
; ..\EAS\BSW\PduR\PduR.c	  2299                  }
; ..\EAS\BSW\PduR\PduR.c	  2300              }
; ..\EAS\BSW\PduR\PduR.c	  2301          }
; ..\EAS\BSW\PduR\PduR.c	  2302      }
; ..\EAS\BSW\PduR\PduR.c	  2303  #endif
; ..\EAS\BSW\PduR\PduR.c	  2304  #endif
; ..\EAS\BSW\PduR\PduR.c	  2305      else
; ..\EAS\BSW\PduR\PduR.c	  2306      {
; ..\EAS\BSW\PduR\PduR.c	  2307          /* Intentionally Empty */
; ..\EAS\BSW\PduR\PduR.c	  2308      }
; ..\EAS\BSW\PduR\PduR.c	  2309  
; ..\EAS\BSW\PduR\PduR.c	  2310      return result;
; ..\EAS\BSW\PduR\PduR.c	  2311  }
	ret
.L572:
	
__PduR_LowerTpStartOfReception_function_end:
	.size	PduR_LowerTpStartOfReception,__PduR_LowerTpStartOfReception_function_end-PduR_LowerTpStartOfReception
.L365:
	; End of function
	
	.sdecl	'.text.PduR.PduR_LowerTpCopyRxData',code,cluster('PduR_LowerTpCopyRxData')
	.sect	'.text.PduR.PduR_LowerTpCopyRxData'
	.align	2
	
	.global	PduR_LowerTpCopyRxData

; ..\EAS\BSW\PduR\PduR.c	  2312  
; ..\EAS\BSW\PduR\PduR.c	  2313  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  2314  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2315  * Function Name: PduR_LowerTpCopyRxData
; ..\EAS\BSW\PduR\PduR.c	  2316  *
; ..\EAS\BSW\PduR\PduR.c	  2317  * Description:   CopyRxData processing of lower Tp module
; ..\EAS\BSW\PduR\PduR.c	  2318  *
; ..\EAS\BSW\PduR\PduR.c	  2319  * Inputs:        PathId id of the routing path
; ..\EAS\BSW\PduR\PduR.c	  2320  *
; ..\EAS\BSW\PduR\PduR.c	  2321  * Outputs:       None
; ..\EAS\BSW\PduR\PduR.c	  2322  *
; ..\EAS\BSW\PduR\PduR.c	  2323  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  2324  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2325  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  2326  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_LowerTpCopyRxData
; Function PduR_LowerTpCopyRxData
.L172:
PduR_LowerTpCopyRxData:	.type	func

; ..\EAS\BSW\PduR\PduR.c	  2327  (
; ..\EAS\BSW\PduR\PduR.c	  2328      PduR_RoutingPathIdType PathId,
; ..\EAS\BSW\PduR\PduR.c	  2329      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  2330      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  2331  )
; ..\EAS\BSW\PduR\PduR.c	  2332  {
; ..\EAS\BSW\PduR\PduR.c	  2333      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
	mov	d2,#1
.L686:

; ..\EAS\BSW\PduR\PduR.c	  2334      PduRModuleType DestModuleType = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRDestModuleType;
	mul	d15,d4,#20
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1230:
	ld.bu	d0,[a15]5
.L687:

; ..\EAS\BSW\PduR\PduR.c	  2335      PduIdType DestPduId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRDestPduId;
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1231:
	ld.bu	d4,[a15]4
.L685:

; ..\EAS\BSW\PduR\PduR.c	  2336  #if(STD_ON == PDUR_GW_TP_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2337      uint16 BufferId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRDestTxBufferId;
; ..\EAS\BSW\PduR\PduR.c	  2338      uint16 PduRTpThreshold = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRTpThreshold;
; ..\EAS\BSW\PduR\PduR.c	  2339      PduInfoType TxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  2340  #endif
; ..\EAS\BSW\PduR\PduR.c	  2341  
; ..\EAS\BSW\PduR\PduR.c	  2342      if(NULL_PTR != PduR_ModuleFunctions[DestModuleType].UpTpCopyRxDataFunc)
	mov.a	a2,#0
.L1232:
	mul	d15,d0,#52
.L1233:
	movh.a	a15,#@his(PduR_ModuleFunctions)
	lea	a15,[a15]@los(PduR_ModuleFunctions)
.L1234:
	addsc.a	a15,a15,d15,#0
.L1235:
	ld.a	a15,[a15]32
.L1236:
	jeq.a	a2,a15,.L28
.L1237:

; ..\EAS\BSW\PduR\PduR.c	  2343      {
; ..\EAS\BSW\PduR\PduR.c	  2344          /*Up modules*/
; ..\EAS\BSW\PduR\PduR.c	  2345          /*SWS_PduR_00428*/
; ..\EAS\BSW\PduR\PduR.c	  2346          result = PduR_ModuleFunctions[DestModuleType].UpTpCopyRxDataFunc(DestPduId, info, bufferSizePtr);
	movh.a	a15,#@his(PduR_ModuleFunctions)
	lea	a15,[a15]@los(PduR_ModuleFunctions)
.L1238:
	addsc.a	a15,a15,d15,#0
.L1239:
	ld.a	a15,[a15]32
.L1240:
	ji	a15
.L28:

; ..\EAS\BSW\PduR\PduR.c	  2347      }
; ..\EAS\BSW\PduR\PduR.c	  2348  #if(STD_ON == PDUR_GW_TP_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2349  #if(PDUR_MAX_NUMOFBUFFER > 0)
; ..\EAS\BSW\PduR\PduR.c	  2350      else if(PDUR_UNUSED != BufferId)
; ..\EAS\BSW\PduR\PduR.c	  2351      {
; ..\EAS\BSW\PduR\PduR.c	  2352          /*GW*/
; ..\EAS\BSW\PduR\PduR.c	  2353          if(0 != (PduRBufferInfo[BufferId].BufState & PDUR_BUFFER_RECEIVING))
; ..\EAS\BSW\PduR\PduR.c	  2354          {
; ..\EAS\BSW\PduR\PduR.c	  2355              if(0 == info->SduLength)
; ..\EAS\BSW\PduR\PduR.c	  2356              {
; ..\EAS\BSW\PduR\PduR.c	  2357                  /*SWS_PduR_00740*/
; ..\EAS\BSW\PduR\PduR.c	  2358                  *bufferSizePtr = PduRBufferInfo[BufferId].AvailableLen;
; ..\EAS\BSW\PduR\PduR.c	  2359                  result = BUFREQ_OK;
; ..\EAS\BSW\PduR\PduR.c	  2360              }
; ..\EAS\BSW\PduR\PduR.c	  2361              else
; ..\EAS\BSW\PduR\PduR.c	  2362              {
; ..\EAS\BSW\PduR\PduR.c	  2363                  /*SWS_PduR_00793*/
; ..\EAS\BSW\PduR\PduR.c	  2364                  if(E_OK != PduR_BufferEnqueue(BufferId, info))
; ..\EAS\BSW\PduR\PduR.c	  2365                  {
; ..\EAS\BSW\PduR\PduR.c	  2366                      /*Cancel transport*/
; ..\EAS\BSW\PduR\PduR.c	  2367                      /*SWS_PduR_00687*/
; ..\EAS\BSW\PduR\PduR.c	  2368                      PduR_BufferInit(BufferId);
; ..\EAS\BSW\PduR\PduR.c	  2369                  }
; ..\EAS\BSW\PduR\PduR.c	  2370                  else
; ..\EAS\BSW\PduR\PduR.c	  2371                  {
; ..\EAS\BSW\PduR\PduR.c	  2372                      *bufferSizePtr = PduRBufferInfo[BufferId].AvailableLen;
; ..\EAS\BSW\PduR\PduR.c	  2373  
; ..\EAS\BSW\PduR\PduR.c	  2374                      if((PduRBufferInfo[BufferId].ReceivedLen >= PduRTpThreshold)
; ..\EAS\BSW\PduR\PduR.c	  2375                              && ((PduRBufferInfo[BufferId].ReceivedLen - info->SduLength) < PduRTpThreshold))
; ..\EAS\BSW\PduR\PduR.c	  2376                      {
; ..\EAS\BSW\PduR\PduR.c	  2377                          /*First time getting above the threshold*/
; ..\EAS\BSW\PduR\PduR.c	  2378                          /*SWS_PduR_00317*/
; ..\EAS\BSW\PduR\PduR.c	  2379                          TxPduInfo.SduLength = PduRBufferInfo[BufferId].TotalLen;
; ..\EAS\BSW\PduR\PduR.c	  2380                          /*!!!CAUTION!!! TpTransmitFunc must not read data for now*/
; ..\EAS\BSW\PduR\PduR.c	  2381                          TxPduInfo.SduDataPtr = PduR_Buffer[BufferId] + PduRBufferInfo[BufferId].ReadPos;
; ..\EAS\BSW\PduR\PduR.c	  2382                          if(E_OK == PduR_ModuleFunctions[DestModuleType].TpTransmitFunc(DestPduId, &TxPduInfo))
; ..\EAS\BSW\PduR\PduR.c	  2383                          {
; ..\EAS\BSW\PduR\PduR.c	  2384                              PduRBufferInfo[BufferId].BufState |= PDUR_BUFFER_TRANSMITING;
; ..\EAS\BSW\PduR\PduR.c	  2385                              result = BUFREQ_OK;
; ..\EAS\BSW\PduR\PduR.c	  2386                          }
; ..\EAS\BSW\PduR\PduR.c	  2387                          else
; ..\EAS\BSW\PduR\PduR.c	  2388                          {
; ..\EAS\BSW\PduR\PduR.c	  2389                              PduR_BufferInit(BufferId);
; ..\EAS\BSW\PduR\PduR.c	  2390                          }
; ..\EAS\BSW\PduR\PduR.c	  2391                      }
; ..\EAS\BSW\PduR\PduR.c	  2392                      else
; ..\EAS\BSW\PduR\PduR.c	  2393                      {
; ..\EAS\BSW\PduR\PduR.c	  2394                          result = BUFREQ_OK;
; ..\EAS\BSW\PduR\PduR.c	  2395                      }
; ..\EAS\BSW\PduR\PduR.c	  2396                  }
; ..\EAS\BSW\PduR\PduR.c	  2397              }
; ..\EAS\BSW\PduR\PduR.c	  2398  
; ..\EAS\BSW\PduR\PduR.c	  2399          }
; ..\EAS\BSW\PduR\PduR.c	  2400      }
; ..\EAS\BSW\PduR\PduR.c	  2401  #endif
; ..\EAS\BSW\PduR\PduR.c	  2402  #endif
; ..\EAS\BSW\PduR\PduR.c	  2403      else
; ..\EAS\BSW\PduR\PduR.c	  2404      {
; ..\EAS\BSW\PduR\PduR.c	  2405          /* Intentionally Empty */
; ..\EAS\BSW\PduR\PduR.c	  2406      }
; ..\EAS\BSW\PduR\PduR.c	  2407  
; ..\EAS\BSW\PduR\PduR.c	  2408      return result;
; ..\EAS\BSW\PduR\PduR.c	  2409  }
	ret
.L580:
	
__PduR_LowerTpCopyRxData_function_end:
	.size	PduR_LowerTpCopyRxData,__PduR_LowerTpCopyRxData_function_end-PduR_LowerTpCopyRxData
.L370:
	; End of function
	
	.sdecl	'.text.PduR.PduR_LowerTpRxIndication',code,cluster('PduR_LowerTpRxIndication')
	.sect	'.text.PduR.PduR_LowerTpRxIndication'
	.align	2
	
	.global	PduR_LowerTpRxIndication

; ..\EAS\BSW\PduR\PduR.c	  2410  
; ..\EAS\BSW\PduR\PduR.c	  2411  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  2412  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2413  * Function Name: PduR_LowerTpRxIndication
; ..\EAS\BSW\PduR\PduR.c	  2414  *
; ..\EAS\BSW\PduR\PduR.c	  2415  * Description:   RxIndication processing of lower Tp module
; ..\EAS\BSW\PduR\PduR.c	  2416  *
; ..\EAS\BSW\PduR\PduR.c	  2417  * Inputs:        PathId id of the routing path
; ..\EAS\BSW\PduR\PduR.c	  2418  *
; ..\EAS\BSW\PduR\PduR.c	  2419  * Outputs:       None
; ..\EAS\BSW\PduR\PduR.c	  2420  *
; ..\EAS\BSW\PduR\PduR.c	  2421  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  2422  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2423  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  2424  FUNC(void, PDUR_CODE) PduR_LowerTpRxIndication
; Function PduR_LowerTpRxIndication
.L174:
PduR_LowerTpRxIndication:	.type	func

; ..\EAS\BSW\PduR\PduR.c	  2425  (
; ..\EAS\BSW\PduR\PduR.c	  2426      PduR_RoutingPathIdType PathId,
; ..\EAS\BSW\PduR\PduR.c	  2427      Std_ReturnType result
; ..\EAS\BSW\PduR\PduR.c	  2428  )
; ..\EAS\BSW\PduR\PduR.c	  2429  {
; ..\EAS\BSW\PduR\PduR.c	  2430      PduRModuleType DestModuleType = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRDestModuleType;
	mul	d15,d4,#20
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1245:
	ld.bu	d0,[a15]5
.L689:

; ..\EAS\BSW\PduR\PduR.c	  2431      PduIdType DestPduId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRDestPduId;
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1246:
	ld.bu	d4,[a15]4
.L688:

; ..\EAS\BSW\PduR\PduR.c	  2432  #if(STD_ON == PDUR_GW_TP_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2433      uint16 BufferId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRDestTxBufferId;
; ..\EAS\BSW\PduR\PduR.c	  2434      uint16 PduRTpThreshold = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRTpThreshold;
; ..\EAS\BSW\PduR\PduR.c	  2435      PduInfoType TxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  2436  #endif
; ..\EAS\BSW\PduR\PduR.c	  2437  
; ..\EAS\BSW\PduR\PduR.c	  2438      if(NULL_PTR != PduR_ModuleFunctions[DestModuleType].UpTpRxIndicationFunc)
	mov.a	a2,#0
.L1247:
	mul	d15,d0,#52
.L1248:
	movh.a	a15,#@his(PduR_ModuleFunctions)
	lea	a15,[a15]@los(PduR_ModuleFunctions)
.L1249:
	addsc.a	a15,a15,d15,#0
.L1250:
	ld.a	a15,[a15]44
.L1251:
	jeq.a	a2,a15,.L30
.L1252:

; ..\EAS\BSW\PduR\PduR.c	  2439      {
; ..\EAS\BSW\PduR\PduR.c	  2440          /*Up modules*/
; ..\EAS\BSW\PduR\PduR.c	  2441          /*SWS_PduR_00429 SWS_PduR_00207*/
; ..\EAS\BSW\PduR\PduR.c	  2442          PduR_ModuleFunctions[DestModuleType].UpTpRxIndicationFunc(DestPduId, result);
	movh.a	a15,#@his(PduR_ModuleFunctions)
	lea	a15,[a15]@los(PduR_ModuleFunctions)
.L1253:
	addsc.a	a15,a15,d15,#0
.L1254:
	ld.a	a15,[a15]44
.L1255:
	ji	a15
.L30:

; ..\EAS\BSW\PduR\PduR.c	  2443      }
; ..\EAS\BSW\PduR\PduR.c	  2444  #if(STD_ON == PDUR_GW_TP_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2445  #if(PDUR_MAX_NUMOFBUFFER > 0)
; ..\EAS\BSW\PduR\PduR.c	  2446      else if(PDUR_UNUSED != BufferId)
; ..\EAS\BSW\PduR\PduR.c	  2447      {
; ..\EAS\BSW\PduR\PduR.c	  2448          /*GW*/
; ..\EAS\BSW\PduR\PduR.c	  2449          if(result == E_OK)
; ..\EAS\BSW\PduR\PduR.c	  2450          {
; ..\EAS\BSW\PduR\PduR.c	  2451              if(0 != (PduRBufferInfo[BufferId].BufState & PDUR_BUFFER_RECEIVING))
; ..\EAS\BSW\PduR\PduR.c	  2452              {
; ..\EAS\BSW\PduR\PduR.c	  2453                  /*Clear receiving flag*/
; ..\EAS\BSW\PduR\PduR.c	  2454                  PduRBufferInfo[BufferId].BufState &= ~PDUR_BUFFER_RECEIVING;
; ..\EAS\BSW\PduR\PduR.c	  2455  
; ..\EAS\BSW\PduR\PduR.c	  2456                  if(PduRBufferInfo[BufferId].ReceivedLen < PduRTpThreshold)
; ..\EAS\BSW\PduR\PduR.c	  2457                  {
; ..\EAS\BSW\PduR\PduR.c	  2458                      /*Never getting above the threshold before, start now*/
; ..\EAS\BSW\PduR\PduR.c	  2459                      /*SWS_PDUR_00808*/
; ..\EAS\BSW\PduR\PduR.c	  2460                      TxPduInfo.SduLength = PduRBufferInfo[BufferId].ValidLen;
; ..\EAS\BSW\PduR\PduR.c	  2461                      /*!!!CAUTION!!! TpTransmitFunc must not read data for now*/
; ..\EAS\BSW\PduR\PduR.c	  2462                      TxPduInfo.SduDataPtr = PduR_Buffer[BufferId] + PduRBufferInfo[BufferId].ReadPos;
; ..\EAS\BSW\PduR\PduR.c	  2463                      if(E_OK == PduR_ModuleFunctions[DestModuleType].TpTransmitFunc(DestPduId, &TxPduInfo))
; ..\EAS\BSW\PduR\PduR.c	  2464                      {
; ..\EAS\BSW\PduR\PduR.c	  2465                          PduRBufferInfo[BufferId].BufState |= PDUR_BUFFER_TRANSMITING;
; ..\EAS\BSW\PduR\PduR.c	  2466                      }
; ..\EAS\BSW\PduR\PduR.c	  2467                      else
; ..\EAS\BSW\PduR\PduR.c	  2468                      {
; ..\EAS\BSW\PduR\PduR.c	  2469                          PduR_BufferInit(BufferId);
; ..\EAS\BSW\PduR\PduR.c	  2470                      }
; ..\EAS\BSW\PduR\PduR.c	  2471                  }
; ..\EAS\BSW\PduR\PduR.c	  2472              }
; ..\EAS\BSW\PduR\PduR.c	  2473  
; ..\EAS\BSW\PduR\PduR.c	  2474          }
; ..\EAS\BSW\PduR\PduR.c	  2475          else/* Rx not OK*/
; ..\EAS\BSW\PduR\PduR.c	  2476          {
; ..\EAS\BSW\PduR\PduR.c	  2477              /*SWS_PduR_00689*/
; ..\EAS\BSW\PduR\PduR.c	  2478              PduR_BufferInit(BufferId);
; ..\EAS\BSW\PduR\PduR.c	  2479          }
; ..\EAS\BSW\PduR\PduR.c	  2480      }
; ..\EAS\BSW\PduR\PduR.c	  2481  #endif
; ..\EAS\BSW\PduR\PduR.c	  2482  #endif
; ..\EAS\BSW\PduR\PduR.c	  2483      else
; ..\EAS\BSW\PduR\PduR.c	  2484      {
; ..\EAS\BSW\PduR\PduR.c	  2485          /* Intentionally Empty */
; ..\EAS\BSW\PduR\PduR.c	  2486      }
; ..\EAS\BSW\PduR\PduR.c	  2487  
; ..\EAS\BSW\PduR\PduR.c	  2488  }
	ret
.L587:
	
__PduR_LowerTpRxIndication_function_end:
	.size	PduR_LowerTpRxIndication,__PduR_LowerTpRxIndication_function_end-PduR_LowerTpRxIndication
.L375:
	; End of function
	
	.sdecl	'.text.PduR.PduR_LowerTpCopyTxData',code,cluster('PduR_LowerTpCopyTxData')
	.sect	'.text.PduR.PduR_LowerTpCopyTxData'
	.align	2
	

; ..\EAS\BSW\PduR\PduR.c	  2489  
; ..\EAS\BSW\PduR\PduR.c	  2490  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  2491  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2492  * Function Name: PduR_LowerTpCopyTxData
; ..\EAS\BSW\PduR\PduR.c	  2493  *
; ..\EAS\BSW\PduR\PduR.c	  2494  * Description:   CopyTxData of lower tp module
; ..\EAS\BSW\PduR\PduR.c	  2495  *
; ..\EAS\BSW\PduR\PduR.c	  2496  * Inputs:        pRoutPath pointer to the routing path
; ..\EAS\BSW\PduR\PduR.c	  2497  *                info infomation of rx pdu
; ..\EAS\BSW\PduR\PduR.c	  2498  *
; ..\EAS\BSW\PduR\PduR.c	  2499  * Outputs:       availableDataPtr pointer to buffersize
; ..\EAS\BSW\PduR\PduR.c	  2500  *
; ..\EAS\BSW\PduR\PduR.c	  2501  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  2502  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2503  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  2504  STATIC FUNC(BufReq_ReturnType, PDUR_CODE) PduR_LowerTpCopyTxData
; Function PduR_LowerTpCopyTxData
.L176:
PduR_LowerTpCopyTxData:	.type	func
	sub.a	a10,#8
.L690:

; ..\EAS\BSW\PduR\PduR.c	  2505  (
; ..\EAS\BSW\PduR\PduR.c	  2506      PduR_RoutingPathIdType PathId,
; ..\EAS\BSW\PduR\PduR.c	  2507      PduIdType ConfId,
; ..\EAS\BSW\PduR\PduR.c	  2508      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  2509      P2VAR(RetryInfoType, AUTOMATIC, PDUR_APPL_DATA) retry,
; ..\EAS\BSW\PduR\PduR.c	  2510      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) availableDataPtr
; ..\EAS\BSW\PduR\PduR.c	  2511  )
; ..\EAS\BSW\PduR\PduR.c	  2512  {
; ..\EAS\BSW\PduR\PduR.c	  2513      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
	mov	d2,#1
.L694:

; ..\EAS\BSW\PduR\PduR.c	  2514      PduR_MulticastMaskType mask = PDUR_ROUTINGPATHINFO(PathId).ConfMask;
	mul	d15,d4,#20
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1260:
	ld.bu	d8,[a15]16
.L695:

; ..\EAS\BSW\PduR\PduR.c	  2515      RetryInfoType PduRRetry;
; ..\EAS\BSW\PduR\PduR.c	  2516      PduRModuleType SrcModuleType = PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcModuleType;
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1261:
	ld.bu	d1,[a15]1
.L697:

; ..\EAS\BSW\PduR\PduR.c	  2517      PduIdType TxPduId = PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcPduHandleId;
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1262:
	ld.bu	d9,[a15]
.L698:

; ..\EAS\BSW\PduR\PduR.c	  2518      P2VAR(PduR_MulticastMaskType, AUTOMATIC, PDUR_VAR) pTxConfMask = NULL_PTR;
	mov.a	a12,#0
.L699:

; ..\EAS\BSW\PduR\PduR.c	  2519      P2VAR(PduR_MulticastMaskType, AUTOMATIC, PDUR_VAR) pTxErrorMask = NULL_PTR;
	mov.aa	a13,a12
.L700:

; ..\EAS\BSW\PduR\PduR.c	  2520      PduR_MulticastMaskType CopyFinishMask;
; ..\EAS\BSW\PduR\PduR.c	  2521  #if(STD_ON == PDUR_GW_TP_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2522      uint16 BufferId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRDestTxBufferId;
; ..\EAS\BSW\PduR\PduR.c	  2523  #endif
; ..\EAS\BSW\PduR\PduR.c	  2524      (void)retry;
; ..\EAS\BSW\PduR\PduR.c	  2525  
; ..\EAS\BSW\PduR\PduR.c	  2526  #if(STD_ON == PDUR_COM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2527  #if(PDUR_MAX_NUMOFCOMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  2528      if(MODULE_COM == SrcModuleType)
	jne	d1,#0,.L31
.L1263:

; ..\EAS\BSW\PduR\PduR.c	  2529      {
; ..\EAS\BSW\PduR\PduR.c	  2530          pTxConfMask = ComTxConfMask;
	movh.a	a12,#@his(ComTxConfMask)
	lea	a12,[a12]@los(ComTxConfMask)
.L1264:

; ..\EAS\BSW\PduR\PduR.c	  2531          pTxErrorMask = ComTxErrorMask;
	movh.a	a13,#@his(ComTxErrorMask)
	lea	a13,[a13]@los(ComTxErrorMask)
.L1265:

; ..\EAS\BSW\PduR\PduR.c	  2532          CopyFinishMask = PDUR_COM_TXPDUINFO(TxPduId).ConfMask;
	mul	d15,d9,#12
	movh.a	a15,#@his(PduRComTxPduInfo)
	lea	a15,[a15]@los(PduRComTxPduInfo)
	addsc.a	a15,a15,d15,#0
.L1266:
	ld.bu	d10,[a15]8
.L31:

; ..\EAS\BSW\PduR\PduR.c	  2533      }
; ..\EAS\BSW\PduR\PduR.c	  2534  #endif
; ..\EAS\BSW\PduR\PduR.c	  2535  #endif
; ..\EAS\BSW\PduR\PduR.c	  2536  #if(STD_ON == PDUR_LDCOM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2537  #if(PDUR_MAX_NUMOFLDCOMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  2538      if(MODULE_LDCOM == SrcModuleType)
; ..\EAS\BSW\PduR\PduR.c	  2539      {
; ..\EAS\BSW\PduR\PduR.c	  2540          pTxConfMask = LdComTxConfMask;
; ..\EAS\BSW\PduR\PduR.c	  2541          pTxErrorMask = LdComTxErrorMask;
; ..\EAS\BSW\PduR\PduR.c	  2542          CopyFinishMask = PDUR_LDCOM_TXPDUINFO(TxPduId).ConfMask;
; ..\EAS\BSW\PduR\PduR.c	  2543      }
; ..\EAS\BSW\PduR\PduR.c	  2544  #endif
; ..\EAS\BSW\PduR\PduR.c	  2545  #endif
; ..\EAS\BSW\PduR\PduR.c	  2546  #if(STD_ON == PDUR_DCM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2547  #if(PDUR_MAX_NUMOFDCMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  2548      if(MODULE_DCM == SrcModuleType)
	jne	d1,#1,.L32
.L1267:

; ..\EAS\BSW\PduR\PduR.c	  2549      {
; ..\EAS\BSW\PduR\PduR.c	  2550          pTxConfMask = DcmTxConfMask;
	movh.a	a12,#@his(DcmTxConfMask)
	lea	a12,[a12]@los(DcmTxConfMask)
.L1268:

; ..\EAS\BSW\PduR\PduR.c	  2551          pTxErrorMask = DcmTxErrorMask;
	movh.a	a13,#@his(DcmTxErrorMask)
	lea	a13,[a13]@los(DcmTxErrorMask)
.L1269:

; ..\EAS\BSW\PduR\PduR.c	  2552          CopyFinishMask = PDUR_DCM_TXPDUINFO(TxPduId).ConfMask;
	mul	d15,d9,#12
	movh.a	a15,#@his(PduRDcmTxPduInfo)
	lea	a15,[a15]@los(PduRDcmTxPduInfo)
	addsc.a	a15,a15,d15,#0
.L1270:
	ld.bu	d10,[a15]8
.L32:

; ..\EAS\BSW\PduR\PduR.c	  2553      }
; ..\EAS\BSW\PduR\PduR.c	  2554  #endif
; ..\EAS\BSW\PduR\PduR.c	  2555  #endif
; ..\EAS\BSW\PduR\PduR.c	  2556  #if(STD_ON == PDUR_J1939DCM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2557  #if(PDUR_MAX_NUMOFJ1939DCMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  2558      if(MODULE_J1939DCM == SrcModuleType)
; ..\EAS\BSW\PduR\PduR.c	  2559      {
; ..\EAS\BSW\PduR\PduR.c	  2560          pTxConfMask = J1939DcmTxConfMask;
; ..\EAS\BSW\PduR\PduR.c	  2561          pTxErrorMask = J1939DcmTxErrorMask;
; ..\EAS\BSW\PduR\PduR.c	  2562          CopyFinishMask = PDUR_J1939DCM_TXPDUINFO(TxPduId).ConfMask;
; ..\EAS\BSW\PduR\PduR.c	  2563      }
; ..\EAS\BSW\PduR\PduR.c	  2564  #endif
; ..\EAS\BSW\PduR\PduR.c	  2565  #endif
; ..\EAS\BSW\PduR\PduR.c	  2566  #if(STD_ON == PDUR_CDD_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2567  #if(PDUR_MAX_NUMOFCDDTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  2568      if(MODULE_CDD == SrcModuleType)
; ..\EAS\BSW\PduR\PduR.c	  2569      {
; ..\EAS\BSW\PduR\PduR.c	  2570          pTxConfMask = CddTxConfMask;
; ..\EAS\BSW\PduR\PduR.c	  2571          pTxErrorMask = CddTxErrorMask;
; ..\EAS\BSW\PduR\PduR.c	  2572          CopyFinishMask = PDUR_CDD_TXPDUINFO(TxPduId).ConfMask;
; ..\EAS\BSW\PduR\PduR.c	  2573      }
; ..\EAS\BSW\PduR\PduR.c	  2574  #endif
; ..\EAS\BSW\PduR\PduR.c	  2575  #endif
; ..\EAS\BSW\PduR\PduR.c	  2576  #if(STD_ON == PDUR_SECOC_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2577  #if(PDUR_MAX_NUMOFSECOCTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  2578      if(MODULE_SECOC == SrcModuleType)
; ..\EAS\BSW\PduR\PduR.c	  2579      {
; ..\EAS\BSW\PduR\PduR.c	  2580          pTxConfMask = SecOCTxConfMask;
; ..\EAS\BSW\PduR\PduR.c	  2581          pTxErrorMask = SecOCTxErrorMask;
; ..\EAS\BSW\PduR\PduR.c	  2582          CopyFinishMask = PDUR_SECOC_TXPDUINFO(TxPduId).ConfMask;
; ..\EAS\BSW\PduR\PduR.c	  2583      }
; ..\EAS\BSW\PduR\PduR.c	  2584  #endif
; ..\EAS\BSW\PduR\PduR.c	  2585  #endif
; ..\EAS\BSW\PduR\PduR.c	  2586  
; ..\EAS\BSW\PduR\PduR.c	  2587      if(NULL_PTR != PduR_ModuleFunctions[SrcModuleType].UpTpCopyTxDataFunc)
	mov.a	a2,#0
.L1271:
	mul	d15,d1,#52
.L1272:
	movh.a	a15,#@his(PduR_ModuleFunctions)
	lea	a15,[a15]@los(PduR_ModuleFunctions)
.L1273:
	addsc.a	a15,a15,d15,#0
.L1274:
	ld.a	a15,[a15]36
.L1275:
	jeq.a	a2,a15,.L33
.L1276:

; ..\EAS\BSW\PduR\PduR.c	  2588      {
; ..\EAS\BSW\PduR\PduR.c	  2589          /*Up module*/
; ..\EAS\BSW\PduR\PduR.c	  2590          if((NULL_PTR != pTxConfMask) && (NULL_PTR != pTxErrorMask))
	jeq.a	a2,a12,.L34
.L1277:
	jeq.a	a2,a13,.L35
.L1278:

; ..\EAS\BSW\PduR\PduR.c	  2591          {
; ..\EAS\BSW\PduR\PduR.c	  2592              if(0 != (pTxConfMask[TxPduId] & mask))
	addsc.a	a15,a12,d9,#0
	ld.bu	d0,[a15]
.L1279:
	and	d0,d8
.L1280:
	jeq	d0,#0,.L36
.L35:
.L34:
.L33:

; ..\EAS\BSW\PduR\PduR.c	  2593              {
; ..\EAS\BSW\PduR\PduR.c	  2594                  /*already copied or error occurred*/
; ..\EAS\BSW\PduR\PduR.c	  2595                  result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  2596              }
; ..\EAS\BSW\PduR\PduR.c	  2597              else
; ..\EAS\BSW\PduR\PduR.c	  2598              {
; ..\EAS\BSW\PduR\PduR.c	  2599                  if(pTxErrorMask[TxPduId] == pTxConfMask[TxPduId])
; ..\EAS\BSW\PduR\PduR.c	  2600                  {
; ..\EAS\BSW\PduR\PduR.c	  2601                      /*First copy*/
; ..\EAS\BSW\PduR\PduR.c	  2602                      /*SWS_PduR_00631*/
; ..\EAS\BSW\PduR\PduR.c	  2603                      PduRRetry.TpDataState = TP_CONFPENDING;
; ..\EAS\BSW\PduR\PduR.c	  2604                  }
; ..\EAS\BSW\PduR\PduR.c	  2605                  else
; ..\EAS\BSW\PduR\PduR.c	  2606                  {
; ..\EAS\BSW\PduR\PduR.c	  2607                      /*Assume that every copy use the same SduLength*/
; ..\EAS\BSW\PduR\PduR.c	  2608                      /*SWS_PduR_00632*/
; ..\EAS\BSW\PduR\PduR.c	  2609                      PduRRetry.TpDataState = TP_DATARETRY;
; ..\EAS\BSW\PduR\PduR.c	  2610                      PduRRetry.TxTpDataCnt = info->SduLength;
; ..\EAS\BSW\PduR\PduR.c	  2611                  }
; ..\EAS\BSW\PduR\PduR.c	  2612  
; ..\EAS\BSW\PduR\PduR.c	  2613                  pTxConfMask[TxPduId] |= mask;
; ..\EAS\BSW\PduR\PduR.c	  2614                  if(pTxConfMask[TxPduId] == CopyFinishMask)
; ..\EAS\BSW\PduR\PduR.c	  2615                  {
; ..\EAS\BSW\PduR\PduR.c	  2616                      /*The last copy*/
; ..\EAS\BSW\PduR\PduR.c	  2617                      PduRRetry.TpDataState = TP_DATACONF;
; ..\EAS\BSW\PduR\PduR.c	  2618                  }
; ..\EAS\BSW\PduR\PduR.c	  2619                  /*SWS_PduR_00299 SWS_PduR_00676*/
; ..\EAS\BSW\PduR\PduR.c	  2620                  result = PduR_ModuleFunctions[SrcModuleType].UpTpCopyTxDataFunc(ConfId, info, &PduRRetry, availableDataPtr);
; ..\EAS\BSW\PduR\PduR.c	  2621                  if(BUFREQ_OK != result)
; ..\EAS\BSW\PduR\PduR.c	  2622                  {
; ..\EAS\BSW\PduR\PduR.c	  2623                      /*Record this error, and not processing this path any more*/
; ..\EAS\BSW\PduR\PduR.c	  2624                      pTxErrorMask[TxPduId] |= mask;
; ..\EAS\BSW\PduR\PduR.c	  2625                  }
; ..\EAS\BSW\PduR\PduR.c	  2626  
; ..\EAS\BSW\PduR\PduR.c	  2627                  /*The last copy of this piece of data, clear successed paths*/
; ..\EAS\BSW\PduR\PduR.c	  2628                  if(pTxConfMask[TxPduId] == CopyFinishMask)
; ..\EAS\BSW\PduR\PduR.c	  2629                  {
; ..\EAS\BSW\PduR\PduR.c	  2630                      pTxConfMask[TxPduId] = pTxErrorMask[TxPduId];
; ..\EAS\BSW\PduR\PduR.c	  2631                  }
; ..\EAS\BSW\PduR\PduR.c	  2632              }
; ..\EAS\BSW\PduR\PduR.c	  2633          }
; ..\EAS\BSW\PduR\PduR.c	  2634      }
; ..\EAS\BSW\PduR\PduR.c	  2635  #if(STD_ON == PDUR_GW_TP_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2636  #if(PDUR_MAX_NUMOFBUFFER > 0)
; ..\EAS\BSW\PduR\PduR.c	  2637      else if(PDUR_UNUSED != BufferId)
; ..\EAS\BSW\PduR\PduR.c	  2638      {
; ..\EAS\BSW\PduR\PduR.c	  2639          /*SWS_PduR_00707 SWS_PduR_00696*/
; ..\EAS\BSW\PduR\PduR.c	  2640          if(0 != (PduRBufferInfo[BufferId].BufState & PDUR_BUFFER_TRANSMITING))
; ..\EAS\BSW\PduR\PduR.c	  2641          {
; ..\EAS\BSW\PduR\PduR.c	  2642              if(E_OK == PduR_BufferDequeue(BufferId, info))
; ..\EAS\BSW\PduR\PduR.c	  2643              {
; ..\EAS\BSW\PduR\PduR.c	  2644                  result = BUFREQ_OK;
; ..\EAS\BSW\PduR\PduR.c	  2645              }
; ..\EAS\BSW\PduR\PduR.c	  2646              else
; ..\EAS\BSW\PduR\PduR.c	  2647              {
; ..\EAS\BSW\PduR\PduR.c	  2648                  /*SWS_PduR_00697*//*SWS_PDUR_00814*/
; ..\EAS\BSW\PduR\PduR.c	  2649                  result = BUFREQ_E_BUSY;
; ..\EAS\BSW\PduR\PduR.c	  2650              }
; ..\EAS\BSW\PduR\PduR.c	  2651              *availableDataPtr = PduRBufferInfo[BufferId].ValidLen;
; ..\EAS\BSW\PduR\PduR.c	  2652          }
; ..\EAS\BSW\PduR\PduR.c	  2653          else
; ..\EAS\BSW\PduR\PduR.c	  2654          {
; ..\EAS\BSW\PduR\PduR.c	  2655              PduR_BufferInit(BufferId);
; ..\EAS\BSW\PduR\PduR.c	  2656              result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  2657          }
; ..\EAS\BSW\PduR\PduR.c	  2658      }
; ..\EAS\BSW\PduR\PduR.c	  2659  #endif
; ..\EAS\BSW\PduR\PduR.c	  2660  #endif
; ..\EAS\BSW\PduR\PduR.c	  2661      else
; ..\EAS\BSW\PduR\PduR.c	  2662      {
; ..\EAS\BSW\PduR\PduR.c	  2663          /* Intentionally Empty */
; ..\EAS\BSW\PduR\PduR.c	  2664      }
; ..\EAS\BSW\PduR\PduR.c	  2665  
; ..\EAS\BSW\PduR\PduR.c	  2666      return result;
; ..\EAS\BSW\PduR\PduR.c	  2667  }
	ret
.L36:
	addsc.a	a15,a13,d9,#0
	ld.bu	d0,[a15]
.L1281:
	addsc.a	a15,a12,d9,#0
	ld.bu	d15,[a15]
.L1282:
	jne	d15,d0,.L38
.L1283:
	mov	d0,#2
.L1284:
	st.b	[a10],d0
.L1285:
	j	.L39
.L38:
	mov	d0,d2
.L701:
	st.b	[a10],d0
.L1286:
	ld.hu	d15,[a4]4
.L1287:
	st.h	[a10]2,d15
.L39:
	addsc.a	a15,a12,d9,#0
	ld.bu	d15,[a15]
.L1288:
	or	d15,d8
	st.b	[a15],d15
.L702:
	jne	d15,d10,.L40
.L703:
	mov	d15,#0
.L1289:
	st.b	[a10],d15
.L40:
	mul	d15,d1,#52
.L1290:
	movh.a	a15,#@his(PduR_ModuleFunctions)
	lea	a15,[a15]@los(PduR_ModuleFunctions)
.L1291:
	addsc.a	a15,a15,d15,#0
.L1292:
	ld.a	a15,[a15]36
.L1293:
	mov.aa	a5,a10
.L693:
	mov	d4,d5
.L692:
	calli	a15
.L691:
	jeq	d2,#0,.L41
.L1294:
	addsc.a	a15,a13,d9,#0
	ld.bu	d15,[a15]
.L1295:
	or	d8,d15
.L696:
	st.b	[a15],d8
.L41:
	addsc.a	a15,a12,d9,#0
	ld.bu	d15,[a15]
.L704:
	jne	d15,d10,.L42
.L705:
	addsc.a	a2,a13,d9,#0
	ld.bu	d15,[a2]
.L1296:
	st.b	[a15],d15
.L42:
	ret
.L592:
	
__PduR_LowerTpCopyTxData_function_end:
	.size	PduR_LowerTpCopyTxData,__PduR_LowerTpCopyTxData_function_end-PduR_LowerTpCopyTxData
.L380:
	; End of function
	
	.sdecl	'.text.PduR.PduR_LowerTpTxConfirmation',code,cluster('PduR_LowerTpTxConfirmation')
	.sect	'.text.PduR.PduR_LowerTpTxConfirmation'
	.align	2
	

; ..\EAS\BSW\PduR\PduR.c	  2668  
; ..\EAS\BSW\PduR\PduR.c	  2669  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  2670  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2671  * Function Name: PduR_LowerTpTxConfirmation
; ..\EAS\BSW\PduR\PduR.c	  2672  *
; ..\EAS\BSW\PduR\PduR.c	  2673  * Description:   TxConfirmation of lower tp module
; ..\EAS\BSW\PduR\PduR.c	  2674  *
; ..\EAS\BSW\PduR\PduR.c	  2675  * Inputs:        pRoutPath pointer to the routing path
; ..\EAS\BSW\PduR\PduR.c	  2676  *                info infomation of rx pdu
; ..\EAS\BSW\PduR\PduR.c	  2677  *
; ..\EAS\BSW\PduR\PduR.c	  2678  * Outputs:       availableDataPtr pointer to buffersize
; ..\EAS\BSW\PduR\PduR.c	  2679  *
; ..\EAS\BSW\PduR\PduR.c	  2680  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  2681  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2682  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  2683  STATIC FUNC(void, PDUR_CODE) PduR_LowerTpTxConfirmation
; Function PduR_LowerTpTxConfirmation
.L178:
PduR_LowerTpTxConfirmation:	.type	func

; ..\EAS\BSW\PduR\PduR.c	  2684  (
; ..\EAS\BSW\PduR\PduR.c	  2685      PduR_RoutingPathIdType PathId,
; ..\EAS\BSW\PduR\PduR.c	  2686      PduIdType ConfId,
; ..\EAS\BSW\PduR\PduR.c	  2687      Std_ReturnType Result
; ..\EAS\BSW\PduR\PduR.c	  2688  )
; ..\EAS\BSW\PduR\PduR.c	  2689  {
; ..\EAS\BSW\PduR\PduR.c	  2690      PduR_MulticastMaskType mask = PDUR_ROUTINGPATHINFO(PathId).ConfMask;
	mul	d15,d4,#20
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1301:
	ld.bu	d8,[a15]16
.L708:

; ..\EAS\BSW\PduR\PduR.c	  2691      PduRModuleType SrcModuleType = PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcModuleType;
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1302:
	ld.bu	d0,[a15]1
.L710:

; ..\EAS\BSW\PduR\PduR.c	  2692      PduIdType TxPduId = PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcPduHandleId;
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1303:
	ld.bu	d9,[a15]
.L711:

; ..\EAS\BSW\PduR\PduR.c	  2693      P2VAR(PduR_MulticastMaskType, AUTOMATIC, PDUR_VAR) pTxConfMask = NULL_PTR;
	mov.a	a12,#0
.L712:

; ..\EAS\BSW\PduR\PduR.c	  2694      P2VAR(PduR_MulticastMaskType, AUTOMATIC, PDUR_VAR) pTxErrorMask = NULL_PTR;
	mov.aa	a13,a12
.L713:

; ..\EAS\BSW\PduR\PduR.c	  2695      PduR_MulticastMaskType ConfirmFinishMask;
; ..\EAS\BSW\PduR\PduR.c	  2696  #if(STD_ON == PDUR_GW_TP_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2697      uint16 BufferId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRDestTxBufferId;
; ..\EAS\BSW\PduR\PduR.c	  2698  #endif
; ..\EAS\BSW\PduR\PduR.c	  2699  
; ..\EAS\BSW\PduR\PduR.c	  2700  #if(STD_ON == PDUR_COM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2701  #if(PDUR_MAX_NUMOFCOMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  2702      if(MODULE_COM == SrcModuleType)
	jne	d0,#0,.L44
.L1304:

; ..\EAS\BSW\PduR\PduR.c	  2703      {
; ..\EAS\BSW\PduR\PduR.c	  2704          pTxConfMask = ComTxConfMask;
	movh.a	a12,#@his(ComTxConfMask)
	lea	a12,[a12]@los(ComTxConfMask)
.L1305:

; ..\EAS\BSW\PduR\PduR.c	  2705          pTxErrorMask = ComTxErrorMask;
	movh.a	a13,#@his(ComTxErrorMask)
	lea	a13,[a13]@los(ComTxErrorMask)
.L1306:

; ..\EAS\BSW\PduR\PduR.c	  2706          ConfirmFinishMask = PDUR_COM_TXPDUINFO(TxPduId).ConfMask;
	mul	d15,d9,#12
	movh.a	a15,#@his(PduRComTxPduInfo)
	lea	a15,[a15]@los(PduRComTxPduInfo)
	addsc.a	a15,a15,d15,#0
.L1307:
	ld.bu	d10,[a15]8
.L44:

; ..\EAS\BSW\PduR\PduR.c	  2707      }
; ..\EAS\BSW\PduR\PduR.c	  2708  #endif
; ..\EAS\BSW\PduR\PduR.c	  2709  #endif
; ..\EAS\BSW\PduR\PduR.c	  2710  #if(STD_ON == PDUR_LDCOM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2711  #if(PDUR_MAX_NUMOFLDCOMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  2712      if(MODULE_LDCOM == SrcModuleType)
; ..\EAS\BSW\PduR\PduR.c	  2713      {
; ..\EAS\BSW\PduR\PduR.c	  2714          pTxConfMask = LdComTxConfMask;
; ..\EAS\BSW\PduR\PduR.c	  2715          pTxErrorMask = LdComTxErrorMask;
; ..\EAS\BSW\PduR\PduR.c	  2716          ConfirmFinishMask = PDUR_LDCOM_TXPDUINFO(TxPduId).ConfMask;
; ..\EAS\BSW\PduR\PduR.c	  2717      }
; ..\EAS\BSW\PduR\PduR.c	  2718  #endif
; ..\EAS\BSW\PduR\PduR.c	  2719  #endif
; ..\EAS\BSW\PduR\PduR.c	  2720  #if(STD_ON == PDUR_DCM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2721  #if(PDUR_MAX_NUMOFDCMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  2722      if(MODULE_DCM == SrcModuleType)
	jne	d0,#1,.L45
.L1308:

; ..\EAS\BSW\PduR\PduR.c	  2723      {
; ..\EAS\BSW\PduR\PduR.c	  2724          pTxConfMask = DcmTxConfMask;
	movh.a	a12,#@his(DcmTxConfMask)
	lea	a12,[a12]@los(DcmTxConfMask)
.L1309:

; ..\EAS\BSW\PduR\PduR.c	  2725          pTxErrorMask = DcmTxErrorMask;
	movh.a	a13,#@his(DcmTxErrorMask)
	lea	a13,[a13]@los(DcmTxErrorMask)
.L1310:

; ..\EAS\BSW\PduR\PduR.c	  2726          ConfirmFinishMask = PDUR_DCM_TXPDUINFO(TxPduId).ConfMask;
	mul	d15,d9,#12
	movh.a	a15,#@his(PduRDcmTxPduInfo)
	lea	a15,[a15]@los(PduRDcmTxPduInfo)
	addsc.a	a15,a15,d15,#0
.L1311:
	ld.bu	d10,[a15]8
.L45:

; ..\EAS\BSW\PduR\PduR.c	  2727      }
; ..\EAS\BSW\PduR\PduR.c	  2728  #endif
; ..\EAS\BSW\PduR\PduR.c	  2729  #endif
; ..\EAS\BSW\PduR\PduR.c	  2730  #if(STD_ON == PDUR_J1939DCM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2731  #if(PDUR_MAX_NUMOFJ1939DCMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  2732      if(MODULE_J1939DCM == SrcModuleType)
; ..\EAS\BSW\PduR\PduR.c	  2733      {
; ..\EAS\BSW\PduR\PduR.c	  2734          pTxConfMask = J1939DcmTxConfMask;
; ..\EAS\BSW\PduR\PduR.c	  2735          pTxErrorMask = J1939DcmTxErrorMask;
; ..\EAS\BSW\PduR\PduR.c	  2736          ConfirmFinishMask = PDUR_J1939DCM_TXPDUINFO(TxPduId).ConfMask;
; ..\EAS\BSW\PduR\PduR.c	  2737      }
; ..\EAS\BSW\PduR\PduR.c	  2738  #endif
; ..\EAS\BSW\PduR\PduR.c	  2739  #endif
; ..\EAS\BSW\PduR\PduR.c	  2740  
; ..\EAS\BSW\PduR\PduR.c	  2741  #if(STD_ON == PDUR_CDD_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2742  #if(PDUR_MAX_NUMOFCDDTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  2743      if(MODULE_CDD == SrcModuleType)
; ..\EAS\BSW\PduR\PduR.c	  2744      {
; ..\EAS\BSW\PduR\PduR.c	  2745          pTxConfMask = CddTxConfMask;
; ..\EAS\BSW\PduR\PduR.c	  2746          pTxErrorMask = CddTxErrorMask;
; ..\EAS\BSW\PduR\PduR.c	  2747          ConfirmFinishMask = PDUR_CDD_TXPDUINFO(TxPduId).ConfMask;
; ..\EAS\BSW\PduR\PduR.c	  2748      }
; ..\EAS\BSW\PduR\PduR.c	  2749  #endif
; ..\EAS\BSW\PduR\PduR.c	  2750  #endif
; ..\EAS\BSW\PduR\PduR.c	  2751  
; ..\EAS\BSW\PduR\PduR.c	  2752  #if(STD_ON == PDUR_SECOC_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2753  #if(PDUR_MAX_NUMOFSECOCTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  2754      if(MODULE_SECOC == SrcModuleType)
; ..\EAS\BSW\PduR\PduR.c	  2755      {
; ..\EAS\BSW\PduR\PduR.c	  2756          pTxConfMask = SecOCTxConfMask;
; ..\EAS\BSW\PduR\PduR.c	  2757          pTxErrorMask = SecOCTxErrorMask;
; ..\EAS\BSW\PduR\PduR.c	  2758          ConfirmFinishMask = PDUR_SECOC_TXPDUINFO(TxPduId).ConfMask;
; ..\EAS\BSW\PduR\PduR.c	  2759      }
; ..\EAS\BSW\PduR\PduR.c	  2760  #endif
; ..\EAS\BSW\PduR\PduR.c	  2761  #endif
; ..\EAS\BSW\PduR\PduR.c	  2762  
; ..\EAS\BSW\PduR\PduR.c	  2763      if(NULL_PTR != PduR_ModuleFunctions[SrcModuleType].UpTpTxConfirmationFunc)
	mov.a	a2,#0
.L1312:
	mul	d15,d0,#52
.L1313:
	movh.a	a15,#@his(PduR_ModuleFunctions)
	lea	a15,[a15]@los(PduR_ModuleFunctions)
.L1314:
	addsc.a	a15,a15,d15,#0
.L1315:
	ld.a	a15,[a15]48
.L1316:
	jeq.a	a2,a15,.L46
.L1317:

; ..\EAS\BSW\PduR\PduR.c	  2764      {
; ..\EAS\BSW\PduR\PduR.c	  2765          if((NULL_PTR != pTxConfMask) && (NULL_PTR != pTxErrorMask))
	jeq.a	a2,a12,.L47
.L1318:
	jeq.a	a2,a13,.L48
.L1319:

; ..\EAS\BSW\PduR\PduR.c	  2766          {
; ..\EAS\BSW\PduR\PduR.c	  2767              if(E_OK == Result)
	jne	d6,#0,.L49
.L1320:

; ..\EAS\BSW\PduR\PduR.c	  2768              {
; ..\EAS\BSW\PduR\PduR.c	  2769                  if(pTxErrorMask[TxPduId] == pTxConfMask[TxPduId])
	addsc.a	a15,a13,d9,#0
	ld.bu	d1,[a15]
.L1321:
	addsc.a	a15,a12,d9,#0
	ld.bu	d15,[a15]
.L1322:
	jne	d15,d1,.L50
.L1323:
	j	.L51
.L49:

; ..\EAS\BSW\PduR\PduR.c	  2770                  {
; ..\EAS\BSW\PduR\PduR.c	  2771                      /*The first valid TxConfirmation*/
; ..\EAS\BSW\PduR\PduR.c	  2772                      /*SWS_PduR_00301 SWS_PduR_00765*/
; ..\EAS\BSW\PduR\PduR.c	  2773                      PduR_ModuleFunctions[SrcModuleType].UpTpTxConfirmationFunc(ConfId, Result);
; ..\EAS\BSW\PduR\PduR.c	  2774                  }
; ..\EAS\BSW\PduR\PduR.c	  2775              }            
; ..\EAS\BSW\PduR\PduR.c	  2776              else
; ..\EAS\BSW\PduR\PduR.c	  2777              {
; ..\EAS\BSW\PduR\PduR.c	  2778                  pTxErrorMask[TxPduId] |= mask;
	addsc.a	a15,a13,d9,#0
	ld.bu	d1,[a15]
.L1324:
	or	d1,d8
	st.b	[a15],d1
.L714:

; ..\EAS\BSW\PduR\PduR.c	  2779                  if(pTxErrorMask[TxPduId] == ConfirmFinishMask)
	jne	d1,d10,.L52
.L51:

; ..\EAS\BSW\PduR\PduR.c	  2780                  {
; ..\EAS\BSW\PduR\PduR.c	  2781                      /*All paths failed, call TxConfirmation with E_NOT_OK*/
; ..\EAS\BSW\PduR\PduR.c	  2782                      PduR_ModuleFunctions[SrcModuleType].UpTpTxConfirmationFunc(ConfId, Result);
	mul	d15,d0,#52
.L1325:
	movh.a	a15,#@his(PduR_ModuleFunctions)
	lea	a15,[a15]@los(PduR_ModuleFunctions)
.L1326:
	addsc.a	a15,a15,d15,#0
.L1327:
	ld.a	a15,[a15]48
.L1328:
	mov	d4,d5
.L707:
	mov	d5,d6
.L706:
	calli	a15
.L52:
.L50:

; ..\EAS\BSW\PduR\PduR.c	  2783                  }
; ..\EAS\BSW\PduR\PduR.c	  2784              }
; ..\EAS\BSW\PduR\PduR.c	  2785              pTxConfMask[TxPduId] |= mask;
	addsc.a	a15,a12,d9,#0
	ld.bu	d15,[a15]
.L1329:
	or	d8,d15
.L709:
	st.b	[a15],d8
.L715:

; ..\EAS\BSW\PduR\PduR.c	  2786              if(pTxConfMask[TxPduId] == ConfirmFinishMask)
	jne	d8,d10,.L53
.L716:

; ..\EAS\BSW\PduR\PduR.c	  2787              {
; ..\EAS\BSW\PduR\PduR.c	  2788                  /*The last TxConfirmation*/
; ..\EAS\BSW\PduR\PduR.c	  2789                  pTxConfMask[TxPduId] = 0;
	mov	d15,#0
.L1330:
	st.b	[a15],d15
.L1331:

; ..\EAS\BSW\PduR\PduR.c	  2790                  pTxErrorMask[TxPduId] = 0;
	addsc.a	a15,a13,d9,#0
.L1332:
	st.b	[a15],d15
.L53:
.L48:
.L47:
.L46:

; ..\EAS\BSW\PduR\PduR.c	  2791              }
; ..\EAS\BSW\PduR\PduR.c	  2792          }
; ..\EAS\BSW\PduR\PduR.c	  2793      }
; ..\EAS\BSW\PduR\PduR.c	  2794  #if(STD_ON == PDUR_GW_TP_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  2795  #if(PDUR_MAX_NUMOFBUFFER > 0)
; ..\EAS\BSW\PduR\PduR.c	  2796      else if(PDUR_UNUSED != BufferId)
; ..\EAS\BSW\PduR\PduR.c	  2797      {
; ..\EAS\BSW\PduR\PduR.c	  2798          /*SWS_PduR_00637*/
; ..\EAS\BSW\PduR\PduR.c	  2799          if(PduRBufferInfo[BufferId].BufState & PDUR_BUFFER_TRANSMITING)
; ..\EAS\BSW\PduR\PduR.c	  2800          {
; ..\EAS\BSW\PduR\PduR.c	  2801              PduR_BufferInit(BufferId);
; ..\EAS\BSW\PduR\PduR.c	  2802          }
; ..\EAS\BSW\PduR\PduR.c	  2803      }
; ..\EAS\BSW\PduR\PduR.c	  2804  #endif
; ..\EAS\BSW\PduR\PduR.c	  2805  #endif
; ..\EAS\BSW\PduR\PduR.c	  2806      else
; ..\EAS\BSW\PduR\PduR.c	  2807      {
; ..\EAS\BSW\PduR\PduR.c	  2808          /* Intentionally Empty */
; ..\EAS\BSW\PduR\PduR.c	  2809      }
; ..\EAS\BSW\PduR\PduR.c	  2810  }
	ret
.L607:
	
__PduR_LowerTpTxConfirmation_function_end:
	.size	PduR_LowerTpTxConfirmation,__PduR_LowerTpTxConfirmation_function_end-PduR_LowerTpTxConfirmation
.L385:
	; End of function
	
	.sdecl	'.text.PduR.PduR_LowerTpMultiStartOfReception',code,cluster('PduR_LowerTpMultiStartOfReception')
	.sect	'.text.PduR.PduR_LowerTpMultiStartOfReception'
	.align	2
	
	.global	PduR_LowerTpMultiStartOfReception

; ..\EAS\BSW\PduR\PduR.c	  2811  
; ..\EAS\BSW\PduR\PduR.c	  2812  
; ..\EAS\BSW\PduR\PduR.c	  2813  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  2814  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2815  * Function Name: PduR_LowerTpMultiStartOfReception
; ..\EAS\BSW\PduR\PduR.c	  2816  *
; ..\EAS\BSW\PduR\PduR.c	  2817  * Description:   StartOfReception processing of lower Tp module
; ..\EAS\BSW\PduR\PduR.c	  2818  *
; ..\EAS\BSW\PduR\PduR.c	  2819  * Inputs:        PathId id of the routing path
; ..\EAS\BSW\PduR\PduR.c	  2820  *
; ..\EAS\BSW\PduR\PduR.c	  2821  * Outputs:       None
; ..\EAS\BSW\PduR\PduR.c	  2822  *
; ..\EAS\BSW\PduR\PduR.c	  2823  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  2824  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2825  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  2826  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_LowerTpMultiStartOfReception
; Function PduR_LowerTpMultiStartOfReception
.L180:
PduR_LowerTpMultiStartOfReception:	.type	func
	mov.aa	a15,a4
.L717:
	mov.aa	a12,a5
.L718:
	mov	d8,d4
.L719:
	mov.aa	a13,a6
.L720:

; ..\EAS\BSW\PduR\PduR.c	  2827  (
; ..\EAS\BSW\PduR\PduR.c	  2828      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo,
; ..\EAS\BSW\PduR\PduR.c	  2829      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  2830      PduLengthType TpSduLength,
; ..\EAS\BSW\PduR\PduR.c	  2831      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  2832  )
; ..\EAS\BSW\PduR\PduR.c	  2833  {
; ..\EAS\BSW\PduR\PduR.c	  2834      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
	mov	d2,#1
.L721:

; ..\EAS\BSW\PduR\PduR.c	  2835      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  2836      PduR_RoutingPathIdType i;
; ..\EAS\BSW\PduR\PduR.c	  2837      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  2838      boolean Flag = FALSE;
	mov	d9,#0
.L722:

; ..\EAS\BSW\PduR\PduR.c	  2839      PduLengthType LargestBuffSize = 0;
	mov	e10,d9,d9
.L1337:

; ..\EAS\BSW\PduR\PduR.c	  2840  
; ..\EAS\BSW\PduR\PduR.c	  2841      /*SWS_PduR_00803*/
; ..\EAS\BSW\PduR\PduR.c	  2842      for(i = 0; i < pRxPduInfo->NumPaths; i++)
; ..\EAS\BSW\PduR\PduR.c	  2843      {
; ..\EAS\BSW\PduR\PduR.c	  2844          PathId = pRxPduInfo->PathIdx[i];
; ..\EAS\BSW\PduR\PduR.c	  2845          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  2846  
; ..\EAS\BSW\PduR\PduR.c	  2847          /*SWS_PduR_00717*/
; ..\EAS\BSW\PduR\PduR.c	  2848          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
	mov.u	d12,#65535
.L1338:
	j	.L54
.L55:
	ld.a	a2,[a15]4
.L723:
	addsc.a	a2,a2,d11,#0
.L724:
	ld.bu	d4,[a2]
.L725:
	mul	d15,d4,#20
	movh.a	a2,#@his(PduRRoutingTable)
	lea	a2,[a2]@los(PduRRoutingTable)
	addsc.a	a2,a2,d15,#0
.L1339:
	ld.hu	d15,[a2]14
.L727:
	jeq	d15,d12,.L56
.L1340:
	movh.a	a2,#@his(PduR_RoutingPathGroupEnabled)
	lea	a2,[a2]@los(PduR_RoutingPathGroupEnabled)
.L1341:
	addsc.a	a2,a2,d15,#0
	ld.bu	d15,[a2]
.L728:
	jne	d15,#1,.L57
.L56:

; ..\EAS\BSW\PduR\PduR.c	  2849          {
; ..\EAS\BSW\PduR\PduR.c	  2850              result = PduR_LowerTpStartOfReception(PathId, info, TpSduLength, bufferSizePtr);
	mov.aa	a4,a12
.L729:
	mov	d5,d8
.L730:
	mov.aa	a5,a13
.L731:
	call	PduR_LowerTpStartOfReception
.L726:

; ..\EAS\BSW\PduR\PduR.c	  2851              if(BUFREQ_OK == result)
	jne	d2,#0,.L58
.L1342:

; ..\EAS\BSW\PduR\PduR.c	  2852              {
; ..\EAS\BSW\PduR\PduR.c	  2853                  Flag = TRUE;
	mov	d9,#1
.L1343:

; ..\EAS\BSW\PduR\PduR.c	  2854                  /*return the largest*/
; ..\EAS\BSW\PduR\PduR.c	  2855                  if(*bufferSizePtr > LargestBuffSize)
	ld.hu	d15,[a13]0
.L732:
	max.u	d10,d15,d10
.L58:
.L57:
	add	d11,#1
	extr.u	d11,d11,#0,#8
.L54:
	ld.bu	d15,[a15]
.L733:
	jlt.u	d11,d15,.L55
.L734:

; ..\EAS\BSW\PduR\PduR.c	  2856                  {
; ..\EAS\BSW\PduR\PduR.c	  2857                      LargestBuffSize = *bufferSizePtr;
; ..\EAS\BSW\PduR\PduR.c	  2858                  }
; ..\EAS\BSW\PduR\PduR.c	  2859              }
; ..\EAS\BSW\PduR\PduR.c	  2860          }
; ..\EAS\BSW\PduR\PduR.c	  2861      }
; ..\EAS\BSW\PduR\PduR.c	  2862  
; ..\EAS\BSW\PduR\PduR.c	  2863      /*SWS_PduR_00804*/
; ..\EAS\BSW\PduR\PduR.c	  2864      if(TRUE == Flag)
	jeq	d9,#0,.L59
.L1344:

; ..\EAS\BSW\PduR\PduR.c	  2865      {
; ..\EAS\BSW\PduR\PduR.c	  2866          result = BUFREQ_OK;
	mov	d2,#0
.L735:

; ..\EAS\BSW\PduR\PduR.c	  2867          *bufferSizePtr = LargestBuffSize;
	st.h	[a13],d10
.L59:

; ..\EAS\BSW\PduR\PduR.c	  2868      }
; ..\EAS\BSW\PduR\PduR.c	  2869  
; ..\EAS\BSW\PduR\PduR.c	  2870      return result;
; ..\EAS\BSW\PduR\PduR.c	  2871  }
	ret
.L617:
	
__PduR_LowerTpMultiStartOfReception_function_end:
	.size	PduR_LowerTpMultiStartOfReception,__PduR_LowerTpMultiStartOfReception_function_end-PduR_LowerTpMultiStartOfReception
.L390:
	; End of function
	
	.sdecl	'.text.PduR.PduR_LowerTpMultiCopyRxData',code,cluster('PduR_LowerTpMultiCopyRxData')
	.sect	'.text.PduR.PduR_LowerTpMultiCopyRxData'
	.align	2
	
	.global	PduR_LowerTpMultiCopyRxData

; ..\EAS\BSW\PduR\PduR.c	  2872  
; ..\EAS\BSW\PduR\PduR.c	  2873  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  2874  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2875  * Function Name: PduR_LowerTpMultiCopyRxData
; ..\EAS\BSW\PduR\PduR.c	  2876  *
; ..\EAS\BSW\PduR\PduR.c	  2877  * Description:   CopyRxData processing of lower Tp module
; ..\EAS\BSW\PduR\PduR.c	  2878  *
; ..\EAS\BSW\PduR\PduR.c	  2879  * Inputs:        PathId id of the routing path
; ..\EAS\BSW\PduR\PduR.c	  2880  *
; ..\EAS\BSW\PduR\PduR.c	  2881  * Outputs:       None
; ..\EAS\BSW\PduR\PduR.c	  2882  *
; ..\EAS\BSW\PduR\PduR.c	  2883  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  2884  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2885  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  2886  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_LowerTpMultiCopyRxData
; Function PduR_LowerTpMultiCopyRxData
.L182:
PduR_LowerTpMultiCopyRxData:	.type	func
	mov.aa	a15,a4
.L736:
	mov.aa	a12,a5
.L737:
	mov.aa	a13,a6
.L738:

; ..\EAS\BSW\PduR\PduR.c	  2887  (
; ..\EAS\BSW\PduR\PduR.c	  2888      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo,
; ..\EAS\BSW\PduR\PduR.c	  2889      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  2890      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  2891  )
; ..\EAS\BSW\PduR\PduR.c	  2892  {
; ..\EAS\BSW\PduR\PduR.c	  2893      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  2894      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  2895      PduR_RoutingPathIdType  i;
; ..\EAS\BSW\PduR\PduR.c	  2896      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  2897      boolean Flag = FALSE;
	mov	d10,#0
.L739:

; ..\EAS\BSW\PduR\PduR.c	  2898      PduLengthType LargestBuffSize = 0;
	mov	d9,d10
.L740:

; ..\EAS\BSW\PduR\PduR.c	  2899  
; ..\EAS\BSW\PduR\PduR.c	  2900      /*SWS_PduR_00803*/
; ..\EAS\BSW\PduR\PduR.c	  2901      for(i = 0; i < pRxPduInfo->NumPaths; i++)
	mov	d11,d10
.L741:

; ..\EAS\BSW\PduR\PduR.c	  2902      {
; ..\EAS\BSW\PduR\PduR.c	  2903          PathId = pRxPduInfo->PathIdx[i];
; ..\EAS\BSW\PduR\PduR.c	  2904          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  2905  
; ..\EAS\BSW\PduR\PduR.c	  2906          /*SWS_PduR_00717*/
; ..\EAS\BSW\PduR\PduR.c	  2907          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
	mov.u	d8,#65535
.L1349:
	j	.L61
.L62:
	ld.a	a2,[a15]4
.L1350:
	addsc.a	a2,a2,d11,#0
	ld.bu	d4,[a2]
.L742:
	mul	d15,d4,#20
	movh.a	a2,#@his(PduRRoutingTable)
	lea	a2,[a2]@los(PduRRoutingTable)
	addsc.a	a2,a2,d15,#0
.L1351:
	ld.hu	d15,[a2]14
.L744:
	jeq	d15,d8,.L63
.L1352:
	movh.a	a2,#@his(PduR_RoutingPathGroupEnabled)
	lea	a2,[a2]@los(PduR_RoutingPathGroupEnabled)
.L1353:
	addsc.a	a2,a2,d15,#0
	ld.bu	d15,[a2]
.L745:
	jne	d15,#1,.L64
.L63:

; ..\EAS\BSW\PduR\PduR.c	  2908          {
; ..\EAS\BSW\PduR\PduR.c	  2909              result = PduR_LowerTpCopyRxData(PathId, info, bufferSizePtr);
	mov.aa	a4,a12
.L746:
	mov.aa	a5,a13
.L747:
	call	PduR_LowerTpCopyRxData
.L743:

; ..\EAS\BSW\PduR\PduR.c	  2910              if(BUFREQ_OK == result)
	jne	d2,#0,.L65
.L1354:

; ..\EAS\BSW\PduR\PduR.c	  2911              {
; ..\EAS\BSW\PduR\PduR.c	  2912                  Flag = TRUE;
	mov	d10,#1
.L1355:

; ..\EAS\BSW\PduR\PduR.c	  2913                  /*return the largest*/
; ..\EAS\BSW\PduR\PduR.c	  2914                  if(*bufferSizePtr > LargestBuffSize)
	ld.hu	d0,[a13]0
.L1356:
	max.u	d9,d0,d9
.L65:
.L64:
	add	d0,d11,#1
	extr.u	d11,d0,#0,#8
.L61:
	ld.bu	d15,[a15]
.L1357:
	jlt.u	d11,d15,.L62
.L1358:

; ..\EAS\BSW\PduR\PduR.c	  2915                  {
; ..\EAS\BSW\PduR\PduR.c	  2916                      LargestBuffSize = *bufferSizePtr;
; ..\EAS\BSW\PduR\PduR.c	  2917                  }
; ..\EAS\BSW\PduR\PduR.c	  2918              }
; ..\EAS\BSW\PduR\PduR.c	  2919          }
; ..\EAS\BSW\PduR\PduR.c	  2920      }
; ..\EAS\BSW\PduR\PduR.c	  2921  
; ..\EAS\BSW\PduR\PduR.c	  2922      /*SWS_PduR_00804*/
; ..\EAS\BSW\PduR\PduR.c	  2923      if(TRUE == Flag)
	jeq	d10,#0,.L66
.L1359:

; ..\EAS\BSW\PduR\PduR.c	  2924      {
; ..\EAS\BSW\PduR\PduR.c	  2925          result = BUFREQ_OK;
	mov	d2,#0
.L748:

; ..\EAS\BSW\PduR\PduR.c	  2926          *bufferSizePtr = LargestBuffSize;
	st.h	[a13],d9
.L1360:

; ..\EAS\BSW\PduR\PduR.c	  2927      }
; ..\EAS\BSW\PduR\PduR.c	  2928      else
; ..\EAS\BSW\PduR\PduR.c	  2929      {
; ..\EAS\BSW\PduR\PduR.c	  2930          result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  2931      }
; ..\EAS\BSW\PduR\PduR.c	  2932      return result;
; ..\EAS\BSW\PduR\PduR.c	  2933  }
	ret
.L66:
	mov	d2,#1
.L749:
	ret
.L628:
	
__PduR_LowerTpMultiCopyRxData_function_end:
	.size	PduR_LowerTpMultiCopyRxData,__PduR_LowerTpMultiCopyRxData_function_end-PduR_LowerTpMultiCopyRxData
.L395:
	; End of function
	
	.sdecl	'.text.PduR.PduR_LowerTpMultiRxIndication',code,cluster('PduR_LowerTpMultiRxIndication')
	.sect	'.text.PduR.PduR_LowerTpMultiRxIndication'
	.align	2
	
	.global	PduR_LowerTpMultiRxIndication

; ..\EAS\BSW\PduR\PduR.c	  2934  
; ..\EAS\BSW\PduR\PduR.c	  2935  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  2936  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2937  * Function Name: PduR_LowerTpMultiRxIndication
; ..\EAS\BSW\PduR\PduR.c	  2938  *
; ..\EAS\BSW\PduR\PduR.c	  2939  * Description:   RxIndication processing of lower Tp module
; ..\EAS\BSW\PduR\PduR.c	  2940  *
; ..\EAS\BSW\PduR\PduR.c	  2941  * Inputs:        PathId id of the routing path
; ..\EAS\BSW\PduR\PduR.c	  2942  *
; ..\EAS\BSW\PduR\PduR.c	  2943  * Outputs:       None
; ..\EAS\BSW\PduR\PduR.c	  2944  *
; ..\EAS\BSW\PduR\PduR.c	  2945  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  2946  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2947  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  2948  FUNC(void, PDUR_CODE) PduR_LowerTpMultiRxIndication
; Function PduR_LowerTpMultiRxIndication
.L184:
PduR_LowerTpMultiRxIndication:	.type	func
	mov.aa	a15,a4
.L750:
	mov	d8,d4
.L751:

; ..\EAS\BSW\PduR\PduR.c	  2949  (
; ..\EAS\BSW\PduR\PduR.c	  2950      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo,
; ..\EAS\BSW\PduR\PduR.c	  2951      Std_ReturnType result
; ..\EAS\BSW\PduR\PduR.c	  2952  )
; ..\EAS\BSW\PduR\PduR.c	  2953  {
; ..\EAS\BSW\PduR\PduR.c	  2954      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  2955      PduR_RoutingPathIdType i;
; ..\EAS\BSW\PduR\PduR.c	  2956      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  2957  
; ..\EAS\BSW\PduR\PduR.c	  2958      for(i = 0; i < pRxPduInfo->NumPaths; i++)
	mov	d9,#0
.L752:

; ..\EAS\BSW\PduR\PduR.c	  2959      {
; ..\EAS\BSW\PduR\PduR.c	  2960          PathId = pRxPduInfo->PathIdx[i];
; ..\EAS\BSW\PduR\PduR.c	  2961          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  2962  
; ..\EAS\BSW\PduR\PduR.c	  2963          /*SWS_PduR_00717*/
; ..\EAS\BSW\PduR\PduR.c	  2964          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
	mov.u	d10,#65535
.L1365:
	j	.L69
.L70:
	ld.a	a2,[a15]4
.L1366:
	addsc.a	a2,a2,d9,#0
	ld.bu	d4,[a2]
.L754:
	mul	d15,d4,#20
	movh.a	a2,#@his(PduRRoutingTable)
	lea	a2,[a2]@los(PduRRoutingTable)
	addsc.a	a2,a2,d15,#0
.L1367:
	ld.hu	d15,[a2]14
.L755:
	jeq	d15,d10,.L71
.L1368:
	movh.a	a2,#@his(PduR_RoutingPathGroupEnabled)
	lea	a2,[a2]@los(PduR_RoutingPathGroupEnabled)
.L1369:
	addsc.a	a2,a2,d15,#0
	ld.bu	d15,[a2]
.L756:
	jne	d15,#1,.L72
.L71:

; ..\EAS\BSW\PduR\PduR.c	  2965          {
; ..\EAS\BSW\PduR\PduR.c	  2966              PduR_LowerTpRxIndication(PathId, result);
	mov	d5,d8
.L757:
	call	PduR_LowerTpRxIndication
.L72:
	add	d9,#1
.L753:
	extr.u	d9,d9,#0,#8
.L69:
	ld.bu	d15,[a15]
.L1370:
	jlt.u	d9,d15,.L70
.L1371:

; ..\EAS\BSW\PduR\PduR.c	  2967          }
; ..\EAS\BSW\PduR\PduR.c	  2968      }
; ..\EAS\BSW\PduR\PduR.c	  2969  }
	ret
.L638:
	
__PduR_LowerTpMultiRxIndication_function_end:
	.size	PduR_LowerTpMultiRxIndication,__PduR_LowerTpMultiRxIndication_function_end-PduR_LowerTpMultiRxIndication
.L400:
	; End of function
	
	.sdecl	'.text.PduR.PduR_Init',code,cluster('PduR_Init')
	.sect	'.text.PduR.PduR_Init'
	.align	2
	
	.global	PduR_Init

; ..\EAS\BSW\PduR\PduR.c	  2970  
; ..\EAS\BSW\PduR\PduR.c	  2971  #endif
; ..\EAS\BSW\PduR\PduR.c	  2972  
; ..\EAS\BSW\PduR\PduR.c	  2973  /*******************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2974  *  PUBLIC Functions define
; ..\EAS\BSW\PduR\PduR.c	  2975  *******************************************************************************/
; ..\EAS\BSW\PduR\PduR.c	  2976  
; ..\EAS\BSW\PduR\PduR.c	  2977  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  2978  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2979  * Function Name: PduR_Init    SWS_PduR_00334
; ..\EAS\BSW\PduR\PduR.c	  2980  *
; ..\EAS\BSW\PduR\PduR.c	  2981  * Description:     Initializes the PDU Router.
; ..\EAS\BSW\PduR\PduR.c	  2982  *
; ..\EAS\BSW\PduR\PduR.c	  2983  * Inputs:         ConfigPtr Pointer to post build configuration
; ..\EAS\BSW\PduR\PduR.c	  2984  *
; ..\EAS\BSW\PduR\PduR.c	  2985  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  2986  *
; ..\EAS\BSW\PduR\PduR.c	  2987  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  2988  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  2989  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  2990  FUNC(void, PDUR_CODE) PduR_Init
; Function PduR_Init
.L186:
PduR_Init:	.type	func

; ..\EAS\BSW\PduR\PduR.c	  2991  (
; ..\EAS\BSW\PduR\PduR.c	  2992      P2CONST(PduR_PBConfigType, AUTOMATIC, PDUR_CONST) ConfigPtr
; ..\EAS\BSW\PduR\PduR.c	  2993  )
; ..\EAS\BSW\PduR\PduR.c	  2994  {
; ..\EAS\BSW\PduR\PduR.c	  2995  #if(STD_ON == PDUR_DEV_ERROR_DETECT)
; ..\EAS\BSW\PduR\PduR.c	  2996      PduR_RoutingPathIdType PathId = (PduR_RoutingPathIdType)0;
; ..\EAS\BSW\PduR\PduR.c	  2997      PduIdType PduId = (PduIdType)0;
; ..\EAS\BSW\PduR\PduR.c	  2998  #endif
; ..\EAS\BSW\PduR\PduR.c	  2999  #if(PDUR_MAX_NUMOFROUTINGPATHGROUP > 0)
; ..\EAS\BSW\PduR\PduR.c	  3000      PduR_RoutingPathGroupIdType GroupId = (PduR_RoutingPathGroupIdType)0;
; ..\EAS\BSW\PduR\PduR.c	  3001  #endif
; ..\EAS\BSW\PduR\PduR.c	  3002  #if(PDUR_MAX_NUMOFBUFFER > 0)
; ..\EAS\BSW\PduR\PduR.c	  3003      uint8 BufferId;
; ..\EAS\BSW\PduR\PduR.c	  3004  #endif
; ..\EAS\BSW\PduR\PduR.c	  3005  
; ..\EAS\BSW\PduR\PduR.c	  3006      if(PDUR_IS_INITIALIZED())
	movh.a	a15,#@his(PduR_InitStatus)
	ld.bu	d15,[a15]@los(PduR_InitStatus)
.L860:
	jeq	d15,#1,.L73
.L861:

; ..\EAS\BSW\PduR\PduR.c	  3007      {
; ..\EAS\BSW\PduR\PduR.c	  3008          /*delete it, since PduR has no deinit*/
; ..\EAS\BSW\PduR\PduR.c	  3009          PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  3010      }
; ..\EAS\BSW\PduR\PduR.c	  3011      else
; ..\EAS\BSW\PduR\PduR.c	  3012      {
; ..\EAS\BSW\PduR\PduR.c	  3013  #if(PDUR_CONFIG_VARIANTS == STD_CONFIG_VARIANTS_POSTBUILD)
; ..\EAS\BSW\PduR\PduR.c	  3014          if(NULL_PTR == ConfigPtr)
; ..\EAS\BSW\PduR\PduR.c	  3015          {
; ..\EAS\BSW\PduR\PduR.c	  3016              PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  3017          }
; ..\EAS\BSW\PduR\PduR.c	  3018          else
; ..\EAS\BSW\PduR\PduR.c	  3019  #else
; ..\EAS\BSW\PduR\PduR.c	  3020          (void)ConfigPtr;
; ..\EAS\BSW\PduR\PduR.c	  3021  #endif
; ..\EAS\BSW\PduR\PduR.c	  3022          {
; ..\EAS\BSW\PduR\PduR.c	  3023  #if(PDUR_CONFIG_VARIANTS == STD_CONFIG_VARIANTS_POSTBUILD)
; ..\EAS\BSW\PduR\PduR.c	  3024              PduR_ConfigSet = ConfigPtr;
; ..\EAS\BSW\PduR\PduR.c	  3025  #endif
; ..\EAS\BSW\PduR\PduR.c	  3026              /*Cfg compatibility check*/
; ..\EAS\BSW\PduR\PduR.c	  3027  #if(STD_ON == PDUR_DEV_ERROR_DETECT)
; ..\EAS\BSW\PduR\PduR.c	  3028  
; ..\EAS\BSW\PduR\PduR.c	  3029  #if(PDUR_MAX_NUMOFCOMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3030              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_COMTXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3031              {
; ..\EAS\BSW\PduR\PduR.c	  3032                  for(PathId = (PduR_RoutingPathIdType)0; PathId < PDUR_COM_TXPDUINFO(PduId).NumPaths; PathId++)
; ..\EAS\BSW\PduR\PduR.c	  3033                  {
; ..\EAS\BSW\PduR\PduR.c	  3034                      if(PDUR_COM_TXPDUINFO(PduId).PathIdx[PathId] >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3035                      {
; ..\EAS\BSW\PduR\PduR.c	  3036                          PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3037                      }
; ..\EAS\BSW\PduR\PduR.c	  3038                  }
; ..\EAS\BSW\PduR\PduR.c	  3039              }
; ..\EAS\BSW\PduR\PduR.c	  3040  #endif
; ..\EAS\BSW\PduR\PduR.c	  3041  #if(PDUR_MAX_NUMOFDCMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3042              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_DCMTXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3043              {
; ..\EAS\BSW\PduR\PduR.c	  3044                  for(PathId = (PduR_RoutingPathIdType)0; PathId < PDUR_DCM_TXPDUINFO(PduId).NumPaths; PathId++)
; ..\EAS\BSW\PduR\PduR.c	  3045                  {
; ..\EAS\BSW\PduR\PduR.c	  3046                      if(PDUR_DCM_TXPDUINFO(PduId).PathIdx[PathId] >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3047                      {
; ..\EAS\BSW\PduR\PduR.c	  3048                          PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3049                      }
; ..\EAS\BSW\PduR\PduR.c	  3050                  }
; ..\EAS\BSW\PduR\PduR.c	  3051              }
; ..\EAS\BSW\PduR\PduR.c	  3052  #endif
; ..\EAS\BSW\PduR\PduR.c	  3053  #if(PDUR_MAX_NUMOFCDDTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3054              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_CDDTXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3055              {
; ..\EAS\BSW\PduR\PduR.c	  3056                  for(PathId = (PduR_RoutingPathIdType)0; PathId < PDUR_CDD_TXPDUINFO(PduId).NumPaths; PathId++)
; ..\EAS\BSW\PduR\PduR.c	  3057                  {
; ..\EAS\BSW\PduR\PduR.c	  3058                      if(PDUR_CDD_TXPDUINFO(PduId).PathIdx[PathId] >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3059                      {
; ..\EAS\BSW\PduR\PduR.c	  3060                          PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3061                      }
; ..\EAS\BSW\PduR\PduR.c	  3062                  }
; ..\EAS\BSW\PduR\PduR.c	  3063              }
; ..\EAS\BSW\PduR\PduR.c	  3064  #endif
; ..\EAS\BSW\PduR\PduR.c	  3065  #if(PDUR_MAX_NUMOFCANIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3066              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_CANIFTXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3067              {
; ..\EAS\BSW\PduR\PduR.c	  3068                  if(PDUR_CANIF_TXCONFPDUINFO(PduId).PathId >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3069                  {
; ..\EAS\BSW\PduR\PduR.c	  3070                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3071                  }
; ..\EAS\BSW\PduR\PduR.c	  3072              }
; ..\EAS\BSW\PduR\PduR.c	  3073  #endif
; ..\EAS\BSW\PduR\PduR.c	  3074  #if(PDUR_MAX_NUMOFCANIFRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3075              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_CANIFRXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3076              {
; ..\EAS\BSW\PduR\PduR.c	  3077                  for(PathId = (PduR_RoutingPathIdType)0; PathId < PDUR_CANIF_RXPDUINFO(PduId).NumPaths; PathId++)
; ..\EAS\BSW\PduR\PduR.c	  3078                  {
; ..\EAS\BSW\PduR\PduR.c	  3079                      if(PDUR_CANIF_RXPDUINFO(PduId).PathIdx[PathId] >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3080                      {
; ..\EAS\BSW\PduR\PduR.c	  3081                          PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3082                      }
; ..\EAS\BSW\PduR\PduR.c	  3083                  }
; ..\EAS\BSW\PduR\PduR.c	  3084              }
; ..\EAS\BSW\PduR\PduR.c	  3085  #endif
; ..\EAS\BSW\PduR\PduR.c	  3086  #if(PDUR_MAX_NUMOFCANTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3087              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_CANTPTXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3088              {
; ..\EAS\BSW\PduR\PduR.c	  3089                  if(PDUR_CANTP_TXCONFPDUINFO(PduId).PathId >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3090                  {
; ..\EAS\BSW\PduR\PduR.c	  3091                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3092                  }
; ..\EAS\BSW\PduR\PduR.c	  3093              }
; ..\EAS\BSW\PduR\PduR.c	  3094  #endif
; ..\EAS\BSW\PduR\PduR.c	  3095  #if(PDUR_MAX_NUMOFCANTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3096              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_CANTPRXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3097              {
; ..\EAS\BSW\PduR\PduR.c	  3098                  for(PathId = (PduR_RoutingPathIdType)0; PathId < PDUR_CANTP_RXPDUINFO(PduId).NumPaths; PathId++)
; ..\EAS\BSW\PduR\PduR.c	  3099                  {
; ..\EAS\BSW\PduR\PduR.c	  3100                      if(PDUR_CANTP_RXPDUINFO(PduId).PathIdx[PathId] >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3101                      {
; ..\EAS\BSW\PduR\PduR.c	  3102                          PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3103                      }
; ..\EAS\BSW\PduR\PduR.c	  3104                  }
; ..\EAS\BSW\PduR\PduR.c	  3105              }
; ..\EAS\BSW\PduR\PduR.c	  3106  #endif
; ..\EAS\BSW\PduR\PduR.c	  3107  #if(PDUR_MAX_NUMOFLINIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3108              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_LINIFTXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3109              {
; ..\EAS\BSW\PduR\PduR.c	  3110                  if(PDUR_LINIF_TXCONFPDUINFO(PduId).PathId >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3111                  {
; ..\EAS\BSW\PduR\PduR.c	  3112                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3113                  }
; ..\EAS\BSW\PduR\PduR.c	  3114              }
; ..\EAS\BSW\PduR\PduR.c	  3115  #endif
; ..\EAS\BSW\PduR\PduR.c	  3116  #if(PDUR_MAX_NUMOFLINIFRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3117              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_LINIFRXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3118              {
; ..\EAS\BSW\PduR\PduR.c	  3119                  for(PathId = (PduR_RoutingPathIdType)0; PathId < PDUR_LINIF_RXPDUINFO(PduId).NumPaths; PathId++)
; ..\EAS\BSW\PduR\PduR.c	  3120                  {
; ..\EAS\BSW\PduR\PduR.c	  3121                      if(PDUR_LINIF_RXPDUINFO(PduId).PathIdx[PathId] >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3122                      {
; ..\EAS\BSW\PduR\PduR.c	  3123                          PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3124                      }
; ..\EAS\BSW\PduR\PduR.c	  3125                  }
; ..\EAS\BSW\PduR\PduR.c	  3126              }
; ..\EAS\BSW\PduR\PduR.c	  3127  #endif
; ..\EAS\BSW\PduR\PduR.c	  3128  #if(PDUR_MAX_NUMOFLINTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3129              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_LINTPTXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3130              {
; ..\EAS\BSW\PduR\PduR.c	  3131                  if(PDUR_LINTP_TXCONFPDUINFO(PduId).PathId >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3132                  {
; ..\EAS\BSW\PduR\PduR.c	  3133                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3134                  }
; ..\EAS\BSW\PduR\PduR.c	  3135              }
; ..\EAS\BSW\PduR\PduR.c	  3136  #endif
; ..\EAS\BSW\PduR\PduR.c	  3137  #if(PDUR_MAX_NUMOFLINTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3138              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_LINTPRXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3139              {
; ..\EAS\BSW\PduR\PduR.c	  3140                  for(PathId = (PduR_RoutingPathIdType)0; PathId < PDUR_LINTP_RXPDUINFO(PduId).NumPaths; PathId++)
; ..\EAS\BSW\PduR\PduR.c	  3141                  {
; ..\EAS\BSW\PduR\PduR.c	  3142                      if(PDUR_LINTP_RXPDUINFO(PduId).PathIdx[PathId] >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3143                      {
; ..\EAS\BSW\PduR\PduR.c	  3144                          PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3145                      }
; ..\EAS\BSW\PduR\PduR.c	  3146                  }
; ..\EAS\BSW\PduR\PduR.c	  3147              }
; ..\EAS\BSW\PduR\PduR.c	  3148  #endif
; ..\EAS\BSW\PduR\PduR.c	  3149  #if(PDUR_MAX_NUMOFFRIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3150              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_FRIFTXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3151              {
; ..\EAS\BSW\PduR\PduR.c	  3152                  if(PDUR_FRIF_TXCONFPDUINFO(PduId).PathId >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3153                  {
; ..\EAS\BSW\PduR\PduR.c	  3154                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3155                  }
; ..\EAS\BSW\PduR\PduR.c	  3156              }
; ..\EAS\BSW\PduR\PduR.c	  3157  #endif
; ..\EAS\BSW\PduR\PduR.c	  3158  #if(PDUR_MAX_NUMOFFRIFRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3159              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_FRIFRXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3160              {
; ..\EAS\BSW\PduR\PduR.c	  3161                  for(PathId = (PduR_RoutingPathIdType)0; PathId < PDUR_FRIF_RXPDUINFO(PduId).NumPaths; PathId++)
; ..\EAS\BSW\PduR\PduR.c	  3162                  {
; ..\EAS\BSW\PduR\PduR.c	  3163                      if(PDUR_FRIF_RXPDUINFO(PduId).PathIdx[PathId] >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3164                      {
; ..\EAS\BSW\PduR\PduR.c	  3165                          PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3166                      }
; ..\EAS\BSW\PduR\PduR.c	  3167                  }
; ..\EAS\BSW\PduR\PduR.c	  3168              }
; ..\EAS\BSW\PduR\PduR.c	  3169  #endif
; ..\EAS\BSW\PduR\PduR.c	  3170  #if(PDUR_MAX_NUMOFFRTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3171              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_FRTPTXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3172              {
; ..\EAS\BSW\PduR\PduR.c	  3173                  if(PDUR_FRTP_TXCONFPDUINFO(PduId).PathId >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3174                  {
; ..\EAS\BSW\PduR\PduR.c	  3175                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3176                  }
; ..\EAS\BSW\PduR\PduR.c	  3177              }
; ..\EAS\BSW\PduR\PduR.c	  3178  #endif
; ..\EAS\BSW\PduR\PduR.c	  3179  #if(PDUR_MAX_NUMOFFRTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3180              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_FRTPRXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3181              {
; ..\EAS\BSW\PduR\PduR.c	  3182                  for(PathId = (PduR_RoutingPathIdType)0; PathId < PDUR_FRTP_RXPDUINFO(PduId).NumPaths; PathId++)
; ..\EAS\BSW\PduR\PduR.c	  3183                  {
; ..\EAS\BSW\PduR\PduR.c	  3184                      if(PDUR_FRTP_RXPDUINFO(PduId).PathIdx[PathId] >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3185                      {
; ..\EAS\BSW\PduR\PduR.c	  3186                          PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3187                      }
; ..\EAS\BSW\PduR\PduR.c	  3188                  }
; ..\EAS\BSW\PduR\PduR.c	  3189              }
; ..\EAS\BSW\PduR\PduR.c	  3190  #endif
; ..\EAS\BSW\PduR\PduR.c	  3191  #if(PDUR_MAX_NUMOFDOIPTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3192              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_DOIPTPTXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3193              {
; ..\EAS\BSW\PduR\PduR.c	  3194                  if(PDUR_DOIPTP_TXCONFPDUINFO(PduId).PathId >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3195                  {
; ..\EAS\BSW\PduR\PduR.c	  3196                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3197                  }
; ..\EAS\BSW\PduR\PduR.c	  3198              }
; ..\EAS\BSW\PduR\PduR.c	  3199  #endif
; ..\EAS\BSW\PduR\PduR.c	  3200  #if(PDUR_MAX_NUMOFDOIPTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3201              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_DOIPTPRXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3202              {
; ..\EAS\BSW\PduR\PduR.c	  3203                  for(PathId = (PduR_RoutingPathIdType)0; PathId < PDUR_DOIPTP_RXPDUINFO(PduId).NumPaths; PathId++)
; ..\EAS\BSW\PduR\PduR.c	  3204                  {
; ..\EAS\BSW\PduR\PduR.c	  3205                      if(PDUR_DOIPTP_RXPDUINFO(PduId).PathIdx[PathId] >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3206                      {
; ..\EAS\BSW\PduR\PduR.c	  3207                          PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3208                      }
; ..\EAS\BSW\PduR\PduR.c	  3209                  }
; ..\EAS\BSW\PduR\PduR.c	  3210              }
; ..\EAS\BSW\PduR\PduR.c	  3211  #endif
; ..\EAS\BSW\PduR\PduR.c	  3212  #if(PDUR_MAX_NUMOFSOADIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3213              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_SOADIFTXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3214              {
; ..\EAS\BSW\PduR\PduR.c	  3215                  if(PDUR_SOADIF_TXCONFPDUINFO(PduId).PathId >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3216                  {
; ..\EAS\BSW\PduR\PduR.c	  3217                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3218                  }
; ..\EAS\BSW\PduR\PduR.c	  3219              }
; ..\EAS\BSW\PduR\PduR.c	  3220  #endif
; ..\EAS\BSW\PduR\PduR.c	  3221  #if(PDUR_MAX_NUMOFSOADIFRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3222              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_SOADIFRXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3223              {
; ..\EAS\BSW\PduR\PduR.c	  3224                  for(PathId = (PduR_RoutingPathIdType)0; PathId < PDUR_SOADIF_RXPDUINFO(PduId).NumPaths; PathId++)
; ..\EAS\BSW\PduR\PduR.c	  3225                  {
; ..\EAS\BSW\PduR\PduR.c	  3226                      if(PDUR_SOADIF_RXPDUINFO(PduId).PathIdx[PathId] >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3227                      {
; ..\EAS\BSW\PduR\PduR.c	  3228                          PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3229                      }
; ..\EAS\BSW\PduR\PduR.c	  3230                  }
; ..\EAS\BSW\PduR\PduR.c	  3231              }
; ..\EAS\BSW\PduR\PduR.c	  3232  #endif
; ..\EAS\BSW\PduR\PduR.c	  3233  #if(PDUR_MAX_NUMOFSOADTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3234              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_SOADTPRXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3235              {
; ..\EAS\BSW\PduR\PduR.c	  3236                  for(PathId = (PduR_RoutingPathIdType)0; PathId < PDUR_SOADTP_RXPDUINFO(PduId).NumPaths; PathId++)
; ..\EAS\BSW\PduR\PduR.c	  3237                  {
; ..\EAS\BSW\PduR\PduR.c	  3238                      if(PDUR_SOADTP_RXPDUINFO(PduId).PathIdx[PathId] >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3239                      {
; ..\EAS\BSW\PduR\PduR.c	  3240                          PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3241                      }
; ..\EAS\BSW\PduR\PduR.c	  3242                  }
; ..\EAS\BSW\PduR\PduR.c	  3243              }
; ..\EAS\BSW\PduR\PduR.c	  3244  #endif
; ..\EAS\BSW\PduR\PduR.c	  3245  #if(PDUR_MAX_NUMOFCDDIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3246              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_CDDIFTXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3247              {
; ..\EAS\BSW\PduR\PduR.c	  3248                  if(PDUR_CDDIF_TXCONFPDUINFO(PduId).PathId >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3249                  {
; ..\EAS\BSW\PduR\PduR.c	  3250                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3251                  }
; ..\EAS\BSW\PduR\PduR.c	  3252              }
; ..\EAS\BSW\PduR\PduR.c	  3253  #endif
; ..\EAS\BSW\PduR\PduR.c	  3254  #if(PDUR_MAX_NUMOFCDDIFRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3255              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_CDDIFRXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3256              {
; ..\EAS\BSW\PduR\PduR.c	  3257                  for(PathId = (PduR_RoutingPathIdType)0; PathId < PDUR_CDDIF_RXPDUINFO(PduId).NumPaths; PathId++)
; ..\EAS\BSW\PduR\PduR.c	  3258                  {
; ..\EAS\BSW\PduR\PduR.c	  3259                      if(PDUR_CDDIF_RXPDUINFO(PduId).PathIdx[PathId] >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3260                      {
; ..\EAS\BSW\PduR\PduR.c	  3261                          PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3262                      }
; ..\EAS\BSW\PduR\PduR.c	  3263                  }
; ..\EAS\BSW\PduR\PduR.c	  3264              }
; ..\EAS\BSW\PduR\PduR.c	  3265  #endif
; ..\EAS\BSW\PduR\PduR.c	  3266  #if(PDUR_MAX_NUMOFCDDTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3267              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_CDDTPTXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3268              {
; ..\EAS\BSW\PduR\PduR.c	  3269                  if(PDUR_CDDTP_TXCONFPDUINFO(PduId).PathId >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3270                  {
; ..\EAS\BSW\PduR\PduR.c	  3271                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3272                  }
; ..\EAS\BSW\PduR\PduR.c	  3273              }
; ..\EAS\BSW\PduR\PduR.c	  3274  #endif
; ..\EAS\BSW\PduR\PduR.c	  3275  #if(PDUR_MAX_NUMOFCDDTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3276              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_CDDTPRXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3277              {
; ..\EAS\BSW\PduR\PduR.c	  3278                  for(PathId = (PduR_RoutingPathIdType)0; PathId < PDUR_CDDTP_RXPDUINFO(PduId).NumPaths; PathId++)
; ..\EAS\BSW\PduR\PduR.c	  3279                  {
; ..\EAS\BSW\PduR\PduR.c	  3280                      if(PDUR_CDDTP_RXPDUINFO(PduId).PathIdx[PathId] >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3281                      {
; ..\EAS\BSW\PduR\PduR.c	  3282                          PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3283                      }
; ..\EAS\BSW\PduR\PduR.c	  3284                  }
; ..\EAS\BSW\PduR\PduR.c	  3285              }
; ..\EAS\BSW\PduR\PduR.c	  3286  #endif
; ..\EAS\BSW\PduR\PduR.c	  3287  #if(PDUR_MAX_NUMOFIPDUMIFRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3288              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_IPDUMIFRXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3289              {
; ..\EAS\BSW\PduR\PduR.c	  3290                  for(PathId = (PduR_RoutingPathIdType)0; PathId < PDUR_IPDUMIF_RXPDUINFO(PduId).NumPaths; PathId++)
; ..\EAS\BSW\PduR\PduR.c	  3291                  {
; ..\EAS\BSW\PduR\PduR.c	  3292                      if(PDUR_IPDUMIF_RXPDUINFO(PduId).PathIdx[PathId] >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3293                      {
; ..\EAS\BSW\PduR\PduR.c	  3294                          PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3295                      }
; ..\EAS\BSW\PduR\PduR.c	  3296                  }
; ..\EAS\BSW\PduR\PduR.c	  3297              }
; ..\EAS\BSW\PduR\PduR.c	  3298  #endif
; ..\EAS\BSW\PduR\PduR.c	  3299  #if(PDUR_MAX_NUMOFSECOCRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3300              for(PduId = (PduIdType)0; PduId < PDUR_GET_NUM_SECOCRXPDU(); PduId++)
; ..\EAS\BSW\PduR\PduR.c	  3301              {
; ..\EAS\BSW\PduR\PduR.c	  3302                  for(PathId = (PduR_RoutingPathIdType)0; PathId < PDUR_SECOC_RXPDUINFO(PduId).NumPaths; PathId++)
; ..\EAS\BSW\PduR\PduR.c	  3303                  {
; ..\EAS\BSW\PduR\PduR.c	  3304                      if(PDUR_SECOC_RXPDUINFO(PduId).PathIdx[PathId] >= PDUR_GET_NUM_ROUTPATH())
; ..\EAS\BSW\PduR\PduR.c	  3305                      {
; ..\EAS\BSW\PduR\PduR.c	  3306                          PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3307                      }
; ..\EAS\BSW\PduR\PduR.c	  3308                  }
; ..\EAS\BSW\PduR\PduR.c	  3309              }
; ..\EAS\BSW\PduR\PduR.c	  3310  #endif
; ..\EAS\BSW\PduR\PduR.c	  3311  
; ..\EAS\BSW\PduR\PduR.c	  3312              for(PathId = (PduR_RoutingPathIdType)0; PathId < PDUR_GET_NUM_ROUTPATH(); PathId++)
; ..\EAS\BSW\PduR\PduR.c	  3313              {
; ..\EAS\BSW\PduR\PduR.c	  3314  #if(PDUR_MAX_NUMOFCOMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3315                  if((PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcModuleType == MODULE_COM)
; ..\EAS\BSW\PduR\PduR.c	  3316                          && (PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcPduHandleId >= PDUR_GET_NUM_COMTXPDU()))
; ..\EAS\BSW\PduR\PduR.c	  3317                  {
; ..\EAS\BSW\PduR\PduR.c	  3318                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3319                  }
; ..\EAS\BSW\PduR\PduR.c	  3320  #endif
; ..\EAS\BSW\PduR\PduR.c	  3321  #if(PDUR_MAX_NUMOFDCMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3322                  if((PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcModuleType == MODULE_DCM)
; ..\EAS\BSW\PduR\PduR.c	  3323                          && (PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcPduHandleId >= PDUR_GET_NUM_DCMTXPDU()))
; ..\EAS\BSW\PduR\PduR.c	  3324                  {
; ..\EAS\BSW\PduR\PduR.c	  3325                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3326                  }
; ..\EAS\BSW\PduR\PduR.c	  3327  #endif
; ..\EAS\BSW\PduR\PduR.c	  3328  #if(PDUR_MAX_NUMOFCDDTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3329                  if((PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcModuleType == MODULE_CDD)
; ..\EAS\BSW\PduR\PduR.c	  3330                          && (PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcPduHandleId >= PDUR_GET_NUM_CDDTXPDU()))
; ..\EAS\BSW\PduR\PduR.c	  3331                  {
; ..\EAS\BSW\PduR\PduR.c	  3332                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3333                  }
; ..\EAS\BSW\PduR\PduR.c	  3334  #endif
; ..\EAS\BSW\PduR\PduR.c	  3335  #if(PDUR_MAX_NUMOFCANIFRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3336                  if((PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcModuleType == MODULE_CANIF)
; ..\EAS\BSW\PduR\PduR.c	  3337                          && (PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcPduHandleId >= PDUR_GET_NUM_CANIFRXPDU()))
; ..\EAS\BSW\PduR\PduR.c	  3338                  {
; ..\EAS\BSW\PduR\PduR.c	  3339                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3340                  }
; ..\EAS\BSW\PduR\PduR.c	  3341  #endif
; ..\EAS\BSW\PduR\PduR.c	  3342  #if(PDUR_MAX_NUMOFIPDUMIFRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3343                  if((PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcModuleType == MODULE_IPDUMIF)
; ..\EAS\BSW\PduR\PduR.c	  3344                          && (PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcPduHandleId >= PDUR_GET_NUM_IPDUMIFRXPDU()))
; ..\EAS\BSW\PduR\PduR.c	  3345                  {
; ..\EAS\BSW\PduR\PduR.c	  3346                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3347                  }
; ..\EAS\BSW\PduR\PduR.c	  3348  #endif
; ..\EAS\BSW\PduR\PduR.c	  3349  #if(PDUR_MAX_NUMOFSECOCRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3350                  if((PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcModuleType == MODULE_SECOC)
; ..\EAS\BSW\PduR\PduR.c	  3351                          && (PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcPduHandleId >= PDUR_GET_NUM_SECOCRXPDU()))
; ..\EAS\BSW\PduR\PduR.c	  3352                  {
; ..\EAS\BSW\PduR\PduR.c	  3353                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3354                  }
; ..\EAS\BSW\PduR\PduR.c	  3355  #endif
; ..\EAS\BSW\PduR\PduR.c	  3356  #if(PDUR_MAX_NUMOFLINIFRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3357                  if((PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcModuleType == MODULE_LINIF)
; ..\EAS\BSW\PduR\PduR.c	  3358                          && (PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcPduHandleId >= PDUR_GET_NUM_LINIFRXPDU()))
; ..\EAS\BSW\PduR\PduR.c	  3359                  {
; ..\EAS\BSW\PduR\PduR.c	  3360                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3361                  }
; ..\EAS\BSW\PduR\PduR.c	  3362  #endif
; ..\EAS\BSW\PduR\PduR.c	  3363  #if(PDUR_MAX_NUMOFFRIFRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3364                  if((PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcModuleType == MODULE_FRIF)
; ..\EAS\BSW\PduR\PduR.c	  3365                          && (PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcPduHandleId >= PDUR_GET_NUM_FRIFRXPDU()))
; ..\EAS\BSW\PduR\PduR.c	  3366                  {
; ..\EAS\BSW\PduR\PduR.c	  3367                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3368                  }
; ..\EAS\BSW\PduR\PduR.c	  3369  #endif
; ..\EAS\BSW\PduR\PduR.c	  3370  #if(PDUR_MAX_NUMOFDOIPIFRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3371                  if((PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcModuleType == MODULE_DOIPIF)
; ..\EAS\BSW\PduR\PduR.c	  3372                          && (PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcPduHandleId >= PDUR_GET_NUM_DOIPIFRXPDU()))
; ..\EAS\BSW\PduR\PduR.c	  3373                  {
; ..\EAS\BSW\PduR\PduR.c	  3374                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3375                  }
; ..\EAS\BSW\PduR\PduR.c	  3376  #endif
; ..\EAS\BSW\PduR\PduR.c	  3377  #if(PDUR_MAX_NUMOFCANTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3378                  if((PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcModuleType == MODULE_CANTP)
; ..\EAS\BSW\PduR\PduR.c	  3379                          && (PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcPduHandleId >= PDUR_GET_NUM_CANTPRXPDU()))
; ..\EAS\BSW\PduR\PduR.c	  3380                  {
; ..\EAS\BSW\PduR\PduR.c	  3381                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3382                  }
; ..\EAS\BSW\PduR\PduR.c	  3383  #endif
; ..\EAS\BSW\PduR\PduR.c	  3384  #if(PDUR_MAX_NUMOFLINTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3385                  if((PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcModuleType == MODULE_LINTP)
; ..\EAS\BSW\PduR\PduR.c	  3386                          && (PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcPduHandleId >= PDUR_GET_NUM_LINTPRXPDU()))
; ..\EAS\BSW\PduR\PduR.c	  3387                  {
; ..\EAS\BSW\PduR\PduR.c	  3388                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3389                  }
; ..\EAS\BSW\PduR\PduR.c	  3390  #endif
; ..\EAS\BSW\PduR\PduR.c	  3391  #if(PDUR_MAX_NUMOFFRTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3392                  if((PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcModuleType == MODULE_FRTP)
; ..\EAS\BSW\PduR\PduR.c	  3393                          && (PDUR_ROUTINGPATHINFO(PathId).PduRSrcPdu.PduRSrcPduHandleId >= PDUR_GET_NUM_FRTPRXPDU()))
; ..\EAS\BSW\PduR\PduR.c	  3394                  {
; ..\EAS\BSW\PduR\PduR.c	  3395                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3396                  }
; ..\EAS\BSW\PduR\PduR.c	  3397  #endif
; ..\EAS\BSW\PduR\PduR.c	  3398  #if(PDUR_MAX_NUMOFBUFFER > 0)
; ..\EAS\BSW\PduR\PduR.c	  3399                  if((PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRDestTxBufferId != PDUR_UNUSED)
; ..\EAS\BSW\PduR\PduR.c	  3400                          && (PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRDestTxBufferId >= PDUR_GET_NUM_BUFFER()))
; ..\EAS\BSW\PduR\PduR.c	  3401                  {
; ..\EAS\BSW\PduR\PduR.c	  3402                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_DEST_TXBUF_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3403                  }
; ..\EAS\BSW\PduR\PduR.c	  3404  #endif
; ..\EAS\BSW\PduR\PduR.c	  3405  #if(PDUR_MAX_NUMOFROUTINGPATHGROUP> 0)
; ..\EAS\BSW\PduR\PduR.c	  3406                  if((PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup != PDUR_RPGROUP_NONE)
; ..\EAS\BSW\PduR\PduR.c	  3407                          && (PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup >= PDUR_GET_NUM_ROUTPATHGROUP()))
; ..\EAS\BSW\PduR\PduR.c	  3408                  {
; ..\EAS\BSW\PduR\PduR.c	  3409                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_ROUTING_PATH_GROUP_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3410                  }
; ..\EAS\BSW\PduR\PduR.c	  3411  #endif
; ..\EAS\BSW\PduR\PduR.c	  3412                  if((PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRTpGWTrigger != PDUR_TPGW_TRIGGER_FLY)
; ..\EAS\BSW\PduR\PduR.c	  3413                          && (PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRTpGWTrigger != PDUR_TPGW_TRIGGER_IND))
; ..\EAS\BSW\PduR\PduR.c	  3414                  {
; ..\EAS\BSW\PduR\PduR.c	  3415                      PDUR_DET_REPORT_ERROR(PDUR_INIT_APIID, PDUR_E_DEST_TRIGGER_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3416                  }
; ..\EAS\BSW\PduR\PduR.c	  3417              }
; ..\EAS\BSW\PduR\PduR.c	  3418  
; ..\EAS\BSW\PduR\PduR.c	  3419  #endif
; ..\EAS\BSW\PduR\PduR.c	  3420  #if(PDUR_MAX_NUMOFBUFFER > 0)
; ..\EAS\BSW\PduR\PduR.c	  3421              for(BufferId = (uint8)0; BufferId < PDUR_GET_NUM_BUFFER(); BufferId++)
; ..\EAS\BSW\PduR\PduR.c	  3422              {
; ..\EAS\BSW\PduR\PduR.c	  3423                  /*SWS_PduR_00645 SWS_PduR_00308*/
; ..\EAS\BSW\PduR\PduR.c	  3424                  PduR_BufferInit(BufferId);
; ..\EAS\BSW\PduR\PduR.c	  3425              }
; ..\EAS\BSW\PduR\PduR.c	  3426  #endif
; ..\EAS\BSW\PduR\PduR.c	  3427  #if(PDUR_MAX_NUMOFROUTINGPATHGROUP > 0)
; ..\EAS\BSW\PduR\PduR.c	  3428              /*SWS_PduR_00709*/
; ..\EAS\BSW\PduR\PduR.c	  3429              for(GroupId = (PduR_RoutingPathGroupIdType)0; GroupId < PDUR_GET_NUM_ROUTPATHGROUP(); GroupId++)
	mov	d15,#0
.L758:
	j	.L74
.L75:

; ..\EAS\BSW\PduR\PduR.c	  3430              {
; ..\EAS\BSW\PduR\PduR.c	  3431                  PduR_RoutingPathGroupEnabled[GroupId] = PDUR_GET_RPGROUP_ENABLED_ATINIT(GroupId);
	movh.a	a15,#@his(PduR_RoutingPathGroupEnabled)
	lea	a15,[a15]@los(PduR_RoutingPathGroupEnabled)
.L862:
	movh.a	a2,#@his(PduR_RPGroupEnabledAtInit)
	lea	a2,[a2]@los(PduR_RPGroupEnabledAtInit)
	ld.bu	d0,[+a2]0
.L863:
	st.b	[+a15]0,d0
.L864:
	add	d15,#1
.L74:
	jeq	d15,#0,.L75
.L865:

; ..\EAS\BSW\PduR\PduR.c	  3432              }
; ..\EAS\BSW\PduR\PduR.c	  3433  #endif
; ..\EAS\BSW\PduR\PduR.c	  3434              /*SWS_PduR_00326*/
; ..\EAS\BSW\PduR\PduR.c	  3435              PDUR_SET_INITIALIZED();
	movh.a	a15,#@his(PduR_InitStatus)
	mov	d15,#1
.L759:
	st.b	[a15]@los(PduR_InitStatus),d15
.L73:

; ..\EAS\BSW\PduR\PduR.c	  3436          }
; ..\EAS\BSW\PduR\PduR.c	  3437      }
; ..\EAS\BSW\PduR\PduR.c	  3438  }
	ret
.L415:
	
__PduR_Init_function_end:
	.size	PduR_Init,__PduR_Init_function_end-PduR_Init
.L235:
	; End of function
	
	.sdecl	'.text.PduR.PduR_GetConfigurationId',code,cluster('PduR_GetConfigurationId')
	.sect	'.text.PduR.PduR_GetConfigurationId'
	.align	2
	
	.global	PduR_GetConfigurationId

; ..\EAS\BSW\PduR\PduR.c	  3439  
; ..\EAS\BSW\PduR\PduR.c	  3440  
; ..\EAS\BSW\PduR\PduR.c	  3441  #if(STD_ON == PDUR_VERSION_INFO_API)
; ..\EAS\BSW\PduR\PduR.c	  3442  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  3443  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  3444  * Function Name: PduR_GetVersionInfo  SWS_PduR_00338
; ..\EAS\BSW\PduR\PduR.c	  3445  *
; ..\EAS\BSW\PduR\PduR.c	  3446  * Description:   Returns the version information of this module
; ..\EAS\BSW\PduR\PduR.c	  3447  *
; ..\EAS\BSW\PduR\PduR.c	  3448  * Inputs:        None
; ..\EAS\BSW\PduR\PduR.c	  3449  *
; ..\EAS\BSW\PduR\PduR.c	  3450  * Outputs:       VersionInfo  Pointer to where to store the version information
; ..\EAS\BSW\PduR\PduR.c	  3451  *
; ..\EAS\BSW\PduR\PduR.c	  3452  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  3453  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  3454  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  3455  FUNC(void, PDUR_CODE) PduR_GetVersionInfo
; ..\EAS\BSW\PduR\PduR.c	  3456  (
; ..\EAS\BSW\PduR\PduR.c	  3457      P2VAR(Std_VersionInfoType, AUTOMATIC, PDUR_APPL_DATA) versionInfo
; ..\EAS\BSW\PduR\PduR.c	  3458  )
; ..\EAS\BSW\PduR\PduR.c	  3459  {
; ..\EAS\BSW\PduR\PduR.c	  3460      if(NULL_PTR == versionInfo)
; ..\EAS\BSW\PduR\PduR.c	  3461      {
; ..\EAS\BSW\PduR\PduR.c	  3462          PDUR_DET_REPORT_ERROR(PDUR_GETVERSIONINFO_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  3463      }
; ..\EAS\BSW\PduR\PduR.c	  3464      else
; ..\EAS\BSW\PduR\PduR.c	  3465      {
; ..\EAS\BSW\PduR\PduR.c	  3466          versionInfo->vendorID = PDUR_VENDOR_ID;
; ..\EAS\BSW\PduR\PduR.c	  3467          versionInfo->moduleID = PDUR_MODULE_ID;
; ..\EAS\BSW\PduR\PduR.c	  3468  
; ..\EAS\BSW\PduR\PduR.c	  3469          versionInfo->sw_major_version = (uint8)PDUR_SW_MAJOR_VERSION;
; ..\EAS\BSW\PduR\PduR.c	  3470          versionInfo->sw_minor_version = (uint8)PDUR_SW_MINOR_VERSION;
; ..\EAS\BSW\PduR\PduR.c	  3471          versionInfo->sw_patch_version = (uint8)PDUR_SW_PATCH_VERSION;
; ..\EAS\BSW\PduR\PduR.c	  3472      }
; ..\EAS\BSW\PduR\PduR.c	  3473  }
; ..\EAS\BSW\PduR\PduR.c	  3474  #endif
; ..\EAS\BSW\PduR\PduR.c	  3475  
; ..\EAS\BSW\PduR\PduR.c	  3476  
; ..\EAS\BSW\PduR\PduR.c	  3477  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  3478  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  3479  * Function Name: PduR_GetConfigurationId  SWS_PduR_00341
; ..\EAS\BSW\PduR\PduR.c	  3480  *
; ..\EAS\BSW\PduR\PduR.c	  3481  * Description:   Returns the unique identifier of the post-build time configuration
; ..\EAS\BSW\PduR\PduR.c	  3482  *
; ..\EAS\BSW\PduR\PduR.c	  3483  * Inputs:        None
; ..\EAS\BSW\PduR\PduR.c	  3484  *
; ..\EAS\BSW\PduR\PduR.c	  3485  * Outputs:       None
; ..\EAS\BSW\PduR\PduR.c	  3486  *
; ..\EAS\BSW\PduR\PduR.c	  3487  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  3488  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  3489  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  3490  FUNC(PduR_PBConfigIdType, PDUR_CODE) PduR_GetConfigurationId
; Function PduR_GetConfigurationId
.L188:
PduR_GetConfigurationId:	.type	func

; ..\EAS\BSW\PduR\PduR.c	  3491  (
; ..\EAS\BSW\PduR\PduR.c	  3492      void
; ..\EAS\BSW\PduR\PduR.c	  3493  )
; ..\EAS\BSW\PduR\PduR.c	  3494  {
; ..\EAS\BSW\PduR\PduR.c	  3495      PduR_PBConfigIdType retId = (PduR_PBConfigIdType)PDUR_INVALID_CONFIG_ID;
	mov	d2,#255
.L760:

; ..\EAS\BSW\PduR\PduR.c	  3496  
; ..\EAS\BSW\PduR\PduR.c	  3497      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  3498      {
; ..\EAS\BSW\PduR\PduR.c	  3499          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  3500          PDUR_DET_REPORT_ERROR(PDUR_GETCONFIGURATIONID_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  3501      }
; ..\EAS\BSW\PduR\PduR.c	  3502      else
; ..\EAS\BSW\PduR\PduR.c	  3503      {
; ..\EAS\BSW\PduR\PduR.c	  3504          /*SWS_PduR_00280*/
; ..\EAS\BSW\PduR\PduR.c	  3505  #if(PDUR_CONFIG_VARIANTS == STD_CONFIG_VARIANTS_POSTBUILD)
; ..\EAS\BSW\PduR\PduR.c	  3506          retId = PduR_ConfigSet->PBConfigId;
; ..\EAS\BSW\PduR\PduR.c	  3507  #endif
; ..\EAS\BSW\PduR\PduR.c	  3508      }
; ..\EAS\BSW\PduR\PduR.c	  3509      return retId;
; ..\EAS\BSW\PduR\PduR.c	  3510  }
	ret
.L421:
	
__PduR_GetConfigurationId_function_end:
	.size	PduR_GetConfigurationId,__PduR_GetConfigurationId_function_end-PduR_GetConfigurationId
.L240:
	; End of function
	
	.sdecl	'.text.PduR.PduR_EnableRouting',code,cluster('PduR_EnableRouting')
	.sect	'.text.PduR.PduR_EnableRouting'
	.align	2
	
	.global	PduR_EnableRouting

; ..\EAS\BSW\PduR\PduR.c	  3511  
; ..\EAS\BSW\PduR\PduR.c	  3512  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  3513  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  3514  * Function Name: PduR_EnableRouting  SWS_PduR_00615
; ..\EAS\BSW\PduR\PduR.c	  3515  *
; ..\EAS\BSW\PduR\PduR.c	  3516  * Description:   Enables a routing path table.
; ..\EAS\BSW\PduR\PduR.c	  3517  *
; ..\EAS\BSW\PduR\PduR.c	  3518  * Inputs:        id Identification of the routing path group.
; ..\EAS\BSW\PduR\PduR.c	  3519  *
; ..\EAS\BSW\PduR\PduR.c	  3520  * Outputs:       None
; ..\EAS\BSW\PduR\PduR.c	  3521  *
; ..\EAS\BSW\PduR\PduR.c	  3522  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  3523  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  3524  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  3525  FUNC(void, PDUR_CODE) PduR_EnableRouting
; Function PduR_EnableRouting
.L190:
PduR_EnableRouting:	.type	func

; ..\EAS\BSW\PduR\PduR.c	  3526  (
; ..\EAS\BSW\PduR\PduR.c	  3527      PduR_RoutingPathGroupIdType id
; ..\EAS\BSW\PduR\PduR.c	  3528  )
; ..\EAS\BSW\PduR\PduR.c	  3529  {
; ..\EAS\BSW\PduR\PduR.c	  3530      if(!PDUR_IS_INITIALIZED())
	movh.a	a15,#@his(PduR_InitStatus)
	ld.bu	d15,[a15]@los(PduR_InitStatus)
	jne	d15,#1,.L77
.L874:

; ..\EAS\BSW\PduR\PduR.c	  3531      {
; ..\EAS\BSW\PduR\PduR.c	  3532          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  3533          PDUR_DET_REPORT_ERROR(PDUR_ENABLE_ROUTING_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  3534      }
; ..\EAS\BSW\PduR\PduR.c	  3535      else if(id >= PDUR_GET_NUM_ROUTPATHGROUP())
	jne	d4,#0,.L78
.L875:

; ..\EAS\BSW\PduR\PduR.c	  3536      {
; ..\EAS\BSW\PduR\PduR.c	  3537          /*SWS_PduR_00647 SWS_PduR_00648*/
; ..\EAS\BSW\PduR\PduR.c	  3538          PDUR_DET_REPORT_ERROR(PDUR_ENABLE_ROUTING_APIID, PDUR_E_ROUTING_PATH_GROUP_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3539      }
; ..\EAS\BSW\PduR\PduR.c	  3540      else
; ..\EAS\BSW\PduR\PduR.c	  3541      {
; ..\EAS\BSW\PduR\PduR.c	  3542          /*SWS_PduR_00715*/
; ..\EAS\BSW\PduR\PduR.c	  3543          PduR_RoutingPathGroupEnabled[id] = TRUE;
	movh.a	a15,#@his(PduR_RoutingPathGroupEnabled)
	lea	a15,[a15]@los(PduR_RoutingPathGroupEnabled)
.L876:
	st.b	[+a15]0,d15
.L78:
.L77:

; ..\EAS\BSW\PduR\PduR.c	  3544      }
; ..\EAS\BSW\PduR\PduR.c	  3545  
; ..\EAS\BSW\PduR\PduR.c	  3546  }
	ret
.L423:
	
__PduR_EnableRouting_function_end:
	.size	PduR_EnableRouting,__PduR_EnableRouting_function_end-PduR_EnableRouting
.L245:
	; End of function
	
	.sdecl	'.text.PduR.PduR_DisableRouting',code,cluster('PduR_DisableRouting')
	.sect	'.text.PduR.PduR_DisableRouting'
	.align	2
	
	.global	PduR_DisableRouting

; ..\EAS\BSW\PduR\PduR.c	  3547  
; ..\EAS\BSW\PduR\PduR.c	  3548  
; ..\EAS\BSW\PduR\PduR.c	  3549  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  3550  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  3551  * Function Name: PduR_DisableRouting  SWS_PduR_00617
; ..\EAS\BSW\PduR\PduR.c	  3552  *
; ..\EAS\BSW\PduR\PduR.c	  3553  * Description:   Disables a routing path table.
; ..\EAS\BSW\PduR\PduR.c	  3554  *
; ..\EAS\BSW\PduR\PduR.c	  3555  * Inputs:        id Identification of the routing path group.
; ..\EAS\BSW\PduR\PduR.c	  3556  *                initialize - true: initialize single buffers to the default value
; ..\EAS\BSW\PduR\PduR.c	  3557  *                             false: retain current value of single buffers
; ..\EAS\BSW\PduR\PduR.c	  3558  *
; ..\EAS\BSW\PduR\PduR.c	  3559  * Outputs:       None
; ..\EAS\BSW\PduR\PduR.c	  3560  *
; ..\EAS\BSW\PduR\PduR.c	  3561  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  3562  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  3563  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  3564  FUNC(void, PDUR_CODE) PduR_DisableRouting
; Function PduR_DisableRouting
.L192:
PduR_DisableRouting:	.type	func

; ..\EAS\BSW\PduR\PduR.c	  3565  (
; ..\EAS\BSW\PduR\PduR.c	  3566      PduR_RoutingPathGroupIdType id,
; ..\EAS\BSW\PduR\PduR.c	  3567      boolean initialize
; ..\EAS\BSW\PduR\PduR.c	  3568  )
; ..\EAS\BSW\PduR\PduR.c	  3569  {
; ..\EAS\BSW\PduR\PduR.c	  3570      (void) initialize;
; ..\EAS\BSW\PduR\PduR.c	  3571  
; ..\EAS\BSW\PduR\PduR.c	  3572      if(!PDUR_IS_INITIALIZED())
	movh.a	a15,#@his(PduR_InitStatus)
	ld.bu	d15,[a15]@los(PduR_InitStatus)
	jne	d15,#1,.L79
.L881:

; ..\EAS\BSW\PduR\PduR.c	  3573      {
; ..\EAS\BSW\PduR\PduR.c	  3574          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  3575          PDUR_DET_REPORT_ERROR(PDUR_DISABLE_ROUTING_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  3576      }
; ..\EAS\BSW\PduR\PduR.c	  3577      else if(id >= PDUR_GET_NUM_ROUTPATHGROUP())
	jne	d4,#0,.L80
.L882:

; ..\EAS\BSW\PduR\PduR.c	  3578      {
; ..\EAS\BSW\PduR\PduR.c	  3579          /*SWS_PduR_00716 SWS_PduR_00649*/
; ..\EAS\BSW\PduR\PduR.c	  3580          PDUR_DET_REPORT_ERROR(PDUR_DISABLE_ROUTING_APIID, PDUR_E_ROUTING_PATH_GROUP_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3581      }
; ..\EAS\BSW\PduR\PduR.c	  3582      else
; ..\EAS\BSW\PduR\PduR.c	  3583      {
; ..\EAS\BSW\PduR\PduR.c	  3584          /*SWS_PduR_00646 SWS_PDUR_00805 SWS_PDUR_00810*/
; ..\EAS\BSW\PduR\PduR.c	  3585          PduR_RoutingPathGroupEnabled[id] = FALSE;
	movh.a	a15,#@his(PduR_RoutingPathGroupEnabled)
	lea	a15,[a15]@los(PduR_RoutingPathGroupEnabled)
.L883:
	mov	d15,#0
.L884:
	st.b	[+a15]0,d15
.L80:
.L79:

; ..\EAS\BSW\PduR\PduR.c	  3586      }
; ..\EAS\BSW\PduR\PduR.c	  3587  
; ..\EAS\BSW\PduR\PduR.c	  3588  }
	ret
.L425:
	
__PduR_DisableRouting_function_end:
	.size	PduR_DisableRouting,__PduR_DisableRouting_function_end-PduR_DisableRouting
.L250:
	; End of function
	
	.sdecl	'.text.PduR.PduR_ComTransmit',code,cluster('PduR_ComTransmit')
	.sect	'.text.PduR.PduR_ComTransmit'
	.align	2
	
	.global	PduR_ComTransmit

; ..\EAS\BSW\PduR\PduR.c	  3589  
; ..\EAS\BSW\PduR\PduR.c	  3590  
; ..\EAS\BSW\PduR\PduR.c	  3591  #if(STD_ON == PDUR_COM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  3592  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  3593  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  3594  * Function Name: PduR_ComTransmit    SWS_PduR_00406
; ..\EAS\BSW\PduR\PduR.c	  3595  *
; ..\EAS\BSW\PduR\PduR.c	  3596  * Description:     Requests transmission of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  3597  *
; ..\EAS\BSW\PduR\PduR.c	  3598  * Inputs:         id   Identification of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  3599  *                info Length and pointer to the buffer of the I-PDU
; ..\EAS\BSW\PduR\PduR.c	  3600  *
; ..\EAS\BSW\PduR\PduR.c	  3601  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  3602  *
; ..\EAS\BSW\PduR\PduR.c	  3603  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  3604  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  3605  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  3606  FUNC(Std_ReturnType, PDUR_CODE) PduR_ComTransmit
; Function PduR_ComTransmit
.L194:
PduR_ComTransmit:	.type	func
	mov	d9,d4
.L761:
	mov.aa	a12,a4
.L762:

; ..\EAS\BSW\PduR\PduR.c	  3607  (
; ..\EAS\BSW\PduR\PduR.c	  3608      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  3609      P2CONST(PduInfoType, AUTOMATIC, PDUR_CONST) info
; ..\EAS\BSW\PduR\PduR.c	  3610  )
; ..\EAS\BSW\PduR\PduR.c	  3611  {
; ..\EAS\BSW\PduR\PduR.c	  3612      PduR_RoutingPathIdType i;
; ..\EAS\BSW\PduR\PduR.c	  3613      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  3614      boolean Flag = FALSE;
	mov	d10,#0
.L763:

; ..\EAS\BSW\PduR\PduR.c	  3615      PduR_MulticastMaskType mask;
; ..\EAS\BSW\PduR\PduR.c	  3616      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  3617  
; ..\EAS\BSW\PduR\PduR.c	  3618      if(!PDUR_IS_INITIALIZED())
	movh.a	a15,#@his(PduR_InitStatus)
	ld.bu	d0,[a15]@los(PduR_InitStatus)
	jne	d0,#1,.L81
.L889:

; ..\EAS\BSW\PduR\PduR.c	  3619      {
; ..\EAS\BSW\PduR\PduR.c	  3620          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  3621          PDUR_DET_REPORT_ERROR(PDUR_COM_TRANSMIT_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  3622      }
; ..\EAS\BSW\PduR\PduR.c	  3623      else if(id >= PDUR_GET_NUM_COMTXPDU())
	mov	d15,#46
.L890:
	jge.u	d9,d15,.L82
.L891:

; ..\EAS\BSW\PduR\PduR.c	  3624      {
; ..\EAS\BSW\PduR\PduR.c	  3625          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  3626          PDUR_DET_REPORT_ERROR(PDUR_COM_TRANSMIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3627      }
; ..\EAS\BSW\PduR\PduR.c	  3628      else if(NULL_PTR == info)
	mov.a	a15,#0
.L892:
	jeq.a	a15,a12,.L83
.L893:

; ..\EAS\BSW\PduR\PduR.c	  3629      {
; ..\EAS\BSW\PduR\PduR.c	  3630          PDUR_DET_REPORT_ERROR(PDUR_COM_TRANSMIT_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  3631      }
; ..\EAS\BSW\PduR\PduR.c	  3632      else
; ..\EAS\BSW\PduR\PduR.c	  3633      {
; ..\EAS\BSW\PduR\PduR.c	  3634  #if(PDUR_MAX_NUMOFCOMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3635          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  3636  
; ..\EAS\BSW\PduR\PduR.c	  3637          ComTxErrorMask[id] = (PduR_MulticastMaskType)0;
	movh.a	a15,#@his(ComTxErrorMask)
	lea	a15,[a15]@los(ComTxErrorMask)
.L894:
	addsc.a	a15,a15,d9,#0
.L895:
	mov	d0,d10
.L764:
	st.b	[a15],d0
.L896:

; ..\EAS\BSW\PduR\PduR.c	  3638          ComTxConfMask[id] = (PduR_MulticastMaskType)0;
	movh.a	a15,#@his(ComTxConfMask)
	lea	a15,[a15]@los(ComTxConfMask)
.L897:
	addsc.a	a15,a15,d9,#0
.L898:
	st.b	[a15],d0
.L899:

; ..\EAS\BSW\PduR\PduR.c	  3639          for(i = (PduR_RoutingPathIdType)0; i < PDUR_COM_TXPDUINFO(id).NumPaths; i++)
	mov	d11,d10
.L765:
	j	.L84
.L85:

; ..\EAS\BSW\PduR\PduR.c	  3640          {
; ..\EAS\BSW\PduR\PduR.c	  3641              PathId = PDUR_COM_TXPDUINFO(id).PathIdx[i];
	mul	d15,d9,#12
	movh.a	a15,#@his(PduRComTxPduInfo)
	lea	a15,[a15]@los(PduRComTxPduInfo)
	addsc.a	a15,a15,d15,#0
.L900:
	ld.a	a15,[a15]4
.L901:
	addsc.a	a15,a15,d11,#0
	ld.bu	d8,[a15]
.L767:

; ..\EAS\BSW\PduR\PduR.c	  3642              ret = PduR_UpTransmit(PathId, info);
	mov	d4,d8
.L768:
	mov.aa	a4,a12
.L770:
	call	PduR_UpTransmit
.L769:

; ..\EAS\BSW\PduR\PduR.c	  3643              if(ret == E_OK)
	jne	d2,#0,.L86
.L902:

; ..\EAS\BSW\PduR\PduR.c	  3644              {
; ..\EAS\BSW\PduR\PduR.c	  3645                  Flag = TRUE;
	mov	d10,#1
.L903:
	j	.L87
.L86:

; ..\EAS\BSW\PduR\PduR.c	  3646              }
; ..\EAS\BSW\PduR\PduR.c	  3647              else
; ..\EAS\BSW\PduR\PduR.c	  3648              {
; ..\EAS\BSW\PduR\PduR.c	  3649                  /*Set mask as if the wrong path has finished*/
; ..\EAS\BSW\PduR\PduR.c	  3650                  mask = PDUR_ROUTINGPATHINFO(PathId).ConfMask;
	mul	d15,d8,#20
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L904:
	ld.bu	d0,[a15]16
.L771:

; ..\EAS\BSW\PduR\PduR.c	  3651                  ComTxErrorMask[id] |= mask;
	movh.a	a15,#@his(ComTxErrorMask)
	lea	a15,[a15]@los(ComTxErrorMask)
.L905:
	addsc.a	a15,a15,d9,#0
.L906:
	movh.a	a2,#@his(ComTxErrorMask)
	lea	a2,[a2]@los(ComTxErrorMask)
.L907:
	addsc.a	a2,a2,d9,#0
	ld.bu	d1,[a2]
.L908:
	or	d1,d0
	st.b	[a15],d1
.L909:

; ..\EAS\BSW\PduR\PduR.c	  3652                  ComTxConfMask[id] |= mask;
	movh.a	a15,#@his(ComTxConfMask)
	lea	a15,[a15]@los(ComTxConfMask)
.L910:
	addsc.a	a15,a15,d9,#0
.L911:
	movh.a	a2,#@his(ComTxConfMask)
	lea	a2,[a2]@los(ComTxConfMask)
.L912:
	addsc.a	a2,a2,d9,#0
	ld.bu	d15,[a2]
.L913:
	or	d15,d0
	st.b	[a15],d15
.L87:
	add	d11,#1
.L766:
	extr.u	d11,d11,#0,#8
.L84:
	mul	d15,d9,#12
	movh.a	a15,#@his(PduRComTxPduInfo)
	lea	a15,[a15]@los(PduRComTxPduInfo)
	addsc.a	a15,a15,d15,#0
.L914:
	ld.bu	d15,[a15]
.L915:
	jlt.u	d11,d15,.L85
.L83:
.L82:
.L81:

; ..\EAS\BSW\PduR\PduR.c	  3653              }
; ..\EAS\BSW\PduR\PduR.c	  3654          }
; ..\EAS\BSW\PduR\PduR.c	  3655  
; ..\EAS\BSW\PduR\PduR.c	  3656          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  3657  #endif
; ..\EAS\BSW\PduR\PduR.c	  3658      }
; ..\EAS\BSW\PduR\PduR.c	  3659  
; ..\EAS\BSW\PduR\PduR.c	  3660      /*SWS_PduR_00218*/
; ..\EAS\BSW\PduR\PduR.c	  3661      if(TRUE == Flag)
	eq	d2,d10,#0
.L772:

; ..\EAS\BSW\PduR\PduR.c	  3662      {
; ..\EAS\BSW\PduR\PduR.c	  3663          ret = E_OK;
; ..\EAS\BSW\PduR\PduR.c	  3664      }
; ..\EAS\BSW\PduR\PduR.c	  3665      else
; ..\EAS\BSW\PduR\PduR.c	  3666      {
; ..\EAS\BSW\PduR\PduR.c	  3667          ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  3668      }
; ..\EAS\BSW\PduR\PduR.c	  3669      return ret;
; ..\EAS\BSW\PduR\PduR.c	  3670  }
	ret
.L428:
	
__PduR_ComTransmit_function_end:
	.size	PduR_ComTransmit,__PduR_ComTransmit_function_end-PduR_ComTransmit
.L255:
	; End of function
	
	.sdecl	'.text.PduR.PduR_DcmTransmit',code,cluster('PduR_DcmTransmit')
	.sect	'.text.PduR.PduR_DcmTransmit'
	.align	2
	
	.global	PduR_DcmTransmit

; ..\EAS\BSW\PduR\PduR.c	  3671  
; ..\EAS\BSW\PduR\PduR.c	  3672  
; ..\EAS\BSW\PduR\PduR.c	  3673  #if(STD_ON == PDUR_COM_CANCELTRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  3674  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  3675  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  3676  * Function Name: PduR_ComCancelTransmit     SWS_PduR_00769
; ..\EAS\BSW\PduR\PduR.c	  3677  *
; ..\EAS\BSW\PduR\PduR.c	  3678  * Description:     Request for cancellation of an ongoing transmission of an I-Pdu
; ..\EAS\BSW\PduR\PduR.c	  3679  *                in transport protocol or communication interface.
; ..\EAS\BSW\PduR\PduR.c	  3680  *
; ..\EAS\BSW\PduR\PduR.c	  3681  * Inputs:         id   Identification of the I-PDU to be cancelled.
; ..\EAS\BSW\PduR\PduR.c	  3682  *
; ..\EAS\BSW\PduR\PduR.c	  3683  *
; ..\EAS\BSW\PduR\PduR.c	  3684  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  3685  *
; ..\EAS\BSW\PduR\PduR.c	  3686  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  3687  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  3688  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  3689  FUNC(Std_ReturnType, PDUR_CODE) PduR_ComCancelTransmit
; ..\EAS\BSW\PduR\PduR.c	  3690  (
; ..\EAS\BSW\PduR\PduR.c	  3691      PduIdType id
; ..\EAS\BSW\PduR\PduR.c	  3692  )
; ..\EAS\BSW\PduR\PduR.c	  3693  {
; ..\EAS\BSW\PduR\PduR.c	  3694      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  3695      PduR_RoutingPathIdType i;
; ..\EAS\BSW\PduR\PduR.c	  3696      boolean ErrorFlag = FALSE;
; ..\EAS\BSW\PduR\PduR.c	  3697  
; ..\EAS\BSW\PduR\PduR.c	  3698      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  3699      {
; ..\EAS\BSW\PduR\PduR.c	  3700          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  3701          PDUR_DET_REPORT_ERROR(PDUR_COM_CANCEL_TRANSMIT_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  3702      }
; ..\EAS\BSW\PduR\PduR.c	  3703      else if(id >= PDUR_GET_NUM_COMTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  3704      {
; ..\EAS\BSW\PduR\PduR.c	  3705          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  3706          PDUR_DET_REPORT_ERROR(PDUR_COM_CANCEL_TRANSMIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3707      }
; ..\EAS\BSW\PduR\PduR.c	  3708      else
; ..\EAS\BSW\PduR\PduR.c	  3709      {
; ..\EAS\BSW\PduR\PduR.c	  3710          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  3711          for(i = 0; i < PDUR_COM_TXPDUINFO(id).NumPaths; i++)
; ..\EAS\BSW\PduR\PduR.c	  3712          {
; ..\EAS\BSW\PduR\PduR.c	  3713              ret = PduR_UpCancelTransmit(PDUR_COM_TXPDUINFO(id).PathIdx[i]);
; ..\EAS\BSW\PduR\PduR.c	  3714              if(ret != E_OK)
; ..\EAS\BSW\PduR\PduR.c	  3715              {
; ..\EAS\BSW\PduR\PduR.c	  3716                  ErrorFlag = TRUE;
; ..\EAS\BSW\PduR\PduR.c	  3717              }
; ..\EAS\BSW\PduR\PduR.c	  3718  
; ..\EAS\BSW\PduR\PduR.c	  3719          }
; ..\EAS\BSW\PduR\PduR.c	  3720          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  3721      }
; ..\EAS\BSW\PduR\PduR.c	  3722  
; ..\EAS\BSW\PduR\PduR.c	  3723      /*SWS_PduR_00701*/
; ..\EAS\BSW\PduR\PduR.c	  3724      if(ErrorFlag)
; ..\EAS\BSW\PduR\PduR.c	  3725      {
; ..\EAS\BSW\PduR\PduR.c	  3726          ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  3727      }
; ..\EAS\BSW\PduR\PduR.c	  3728      else
; ..\EAS\BSW\PduR\PduR.c	  3729      {
; ..\EAS\BSW\PduR\PduR.c	  3730          ret = E_OK;
; ..\EAS\BSW\PduR\PduR.c	  3731      }
; ..\EAS\BSW\PduR\PduR.c	  3732      return ret;
; ..\EAS\BSW\PduR\PduR.c	  3733  }
; ..\EAS\BSW\PduR\PduR.c	  3734  #endif
; ..\EAS\BSW\PduR\PduR.c	  3735  #endif/*#if(STD_ON == PDUR_COM_MODULE_SUPPORT)*/
; ..\EAS\BSW\PduR\PduR.c	  3736  
; ..\EAS\BSW\PduR\PduR.c	  3737  #if(STD_ON == PDUR_LDCOM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  3738  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  3739  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  3740  * Function Name: PduR_LdComTransmit
; ..\EAS\BSW\PduR\PduR.c	  3741  *
; ..\EAS\BSW\PduR\PduR.c	  3742  * Description:   Requests transmission of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  3743  *
; ..\EAS\BSW\PduR\PduR.c	  3744  * Inputs:        id   Identification of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  3745  *                info Length and pointer to the buffer of the I-PDU
; ..\EAS\BSW\PduR\PduR.c	  3746  *
; ..\EAS\BSW\PduR\PduR.c	  3747  * Outputs:       None
; ..\EAS\BSW\PduR\PduR.c	  3748  *
; ..\EAS\BSW\PduR\PduR.c	  3749  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  3750  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  3751  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  3752  FUNC(Std_ReturnType, PDUR_CODE) PduR_LdComTransmit
; ..\EAS\BSW\PduR\PduR.c	  3753  (
; ..\EAS\BSW\PduR\PduR.c	  3754      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  3755      P2CONST(PduInfoType, AUTOMATIC, PDUR_CONST) info
; ..\EAS\BSW\PduR\PduR.c	  3756  )
; ..\EAS\BSW\PduR\PduR.c	  3757  {
; ..\EAS\BSW\PduR\PduR.c	  3758      PduR_RoutingPathIdType i;
; ..\EAS\BSW\PduR\PduR.c	  3759      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  3760      boolean Flag = FALSE;
; ..\EAS\BSW\PduR\PduR.c	  3761      PduR_MulticastMaskType mask;
; ..\EAS\BSW\PduR\PduR.c	  3762      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  3763  
; ..\EAS\BSW\PduR\PduR.c	  3764      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  3765      {
; ..\EAS\BSW\PduR\PduR.c	  3766          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  3767          PDUR_DET_REPORT_ERROR(PDUR_LDCOM_TRANSMIT_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  3768      }
; ..\EAS\BSW\PduR\PduR.c	  3769      else if(id >= PDUR_GET_NUM_LDCOMTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  3770      {
; ..\EAS\BSW\PduR\PduR.c	  3771          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  3772          PDUR_DET_REPORT_ERROR(PDUR_LDCOM_TRANSMIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3773      }
; ..\EAS\BSW\PduR\PduR.c	  3774      else if(NULL_PTR == info)
; ..\EAS\BSW\PduR\PduR.c	  3775      {
; ..\EAS\BSW\PduR\PduR.c	  3776          PDUR_DET_REPORT_ERROR(PDUR_LDCOM_TRANSMIT_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  3777      }
; ..\EAS\BSW\PduR\PduR.c	  3778      else
; ..\EAS\BSW\PduR\PduR.c	  3779      {
; ..\EAS\BSW\PduR\PduR.c	  3780  #if(PDUR_MAX_NUMOFLDCOMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3781          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  3782  
; ..\EAS\BSW\PduR\PduR.c	  3783          LdComTxErrorMask[id] = (PduR_MulticastMaskType)0;
; ..\EAS\BSW\PduR\PduR.c	  3784          LdComTxConfMask[id] = (PduR_MulticastMaskType)0;
; ..\EAS\BSW\PduR\PduR.c	  3785          for(i = (PduR_RoutingPathIdType)0; i < PDUR_LDCOM_TXPDUINFO(id).NumPaths; i++)
; ..\EAS\BSW\PduR\PduR.c	  3786          {
; ..\EAS\BSW\PduR\PduR.c	  3787              PathId = PDUR_LDCOM_TXPDUINFO(id).PathIdx[i];
; ..\EAS\BSW\PduR\PduR.c	  3788              ret = PduR_UpTransmit(PathId, info);
; ..\EAS\BSW\PduR\PduR.c	  3789              if(ret == E_OK)
; ..\EAS\BSW\PduR\PduR.c	  3790              {
; ..\EAS\BSW\PduR\PduR.c	  3791                  Flag = TRUE;
; ..\EAS\BSW\PduR\PduR.c	  3792              }
; ..\EAS\BSW\PduR\PduR.c	  3793              else
; ..\EAS\BSW\PduR\PduR.c	  3794              {
; ..\EAS\BSW\PduR\PduR.c	  3795                  /*Set mask as if the wrong path has finished*/
; ..\EAS\BSW\PduR\PduR.c	  3796                  mask = PDUR_ROUTINGPATHINFO(PathId).ConfMask;
; ..\EAS\BSW\PduR\PduR.c	  3797                  LdComTxErrorMask[id] |= mask;
; ..\EAS\BSW\PduR\PduR.c	  3798                  LdComTxConfMask[id] |= mask;
; ..\EAS\BSW\PduR\PduR.c	  3799              }
; ..\EAS\BSW\PduR\PduR.c	  3800          }
; ..\EAS\BSW\PduR\PduR.c	  3801  
; ..\EAS\BSW\PduR\PduR.c	  3802          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  3803  #endif
; ..\EAS\BSW\PduR\PduR.c	  3804      }
; ..\EAS\BSW\PduR\PduR.c	  3805  
; ..\EAS\BSW\PduR\PduR.c	  3806      /*SWS_PduR_00218*/
; ..\EAS\BSW\PduR\PduR.c	  3807      if(TRUE == Flag)
; ..\EAS\BSW\PduR\PduR.c	  3808      {
; ..\EAS\BSW\PduR\PduR.c	  3809          ret = E_OK;
; ..\EAS\BSW\PduR\PduR.c	  3810      }
; ..\EAS\BSW\PduR\PduR.c	  3811      else
; ..\EAS\BSW\PduR\PduR.c	  3812      {
; ..\EAS\BSW\PduR\PduR.c	  3813          ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  3814      }
; ..\EAS\BSW\PduR\PduR.c	  3815      return ret;
; ..\EAS\BSW\PduR\PduR.c	  3816  }
; ..\EAS\BSW\PduR\PduR.c	  3817  #endif
; ..\EAS\BSW\PduR\PduR.c	  3818  
; ..\EAS\BSW\PduR\PduR.c	  3819  #if(STD_ON == PDUR_IPDUM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  3820  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  3821  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  3822  * Function Name: PduR_IpduMTransmit
; ..\EAS\BSW\PduR\PduR.c	  3823  *
; ..\EAS\BSW\PduR\PduR.c	  3824  * Description:     Requests transmission of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  3825  *
; ..\EAS\BSW\PduR\PduR.c	  3826  * Inputs:         id   Identification of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  3827  *                info Length and pointer to the buffer of the I-PDU
; ..\EAS\BSW\PduR\PduR.c	  3828  *
; ..\EAS\BSW\PduR\PduR.c	  3829  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  3830  *
; ..\EAS\BSW\PduR\PduR.c	  3831  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  3832  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  3833  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  3834  FUNC(Std_ReturnType, PDUR_CODE) PduR_IpduMTransmit
; ..\EAS\BSW\PduR\PduR.c	  3835  (
; ..\EAS\BSW\PduR\PduR.c	  3836      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  3837      P2CONST(PduInfoType, AUTOMATIC, PDUR_CONST) info
; ..\EAS\BSW\PduR\PduR.c	  3838  )
; ..\EAS\BSW\PduR\PduR.c	  3839  {
; ..\EAS\BSW\PduR\PduR.c	  3840      PduR_RoutingPathIdType i;
; ..\EAS\BSW\PduR\PduR.c	  3841      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  3842      boolean Flag = FALSE;
; ..\EAS\BSW\PduR\PduR.c	  3843      PduR_MulticastMaskType mask;
; ..\EAS\BSW\PduR\PduR.c	  3844      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  3845  
; ..\EAS\BSW\PduR\PduR.c	  3846      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  3847      {
; ..\EAS\BSW\PduR\PduR.c	  3848          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  3849          PDUR_DET_REPORT_ERROR(PDUR_IPDUM_TRANSMIT_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  3850      }
; ..\EAS\BSW\PduR\PduR.c	  3851      else if(id >= PDUR_GET_NUM_IPDUMTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  3852      {
; ..\EAS\BSW\PduR\PduR.c	  3853          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  3854          PDUR_DET_REPORT_ERROR(PDUR_IPDUM_TRANSMIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3855      }
; ..\EAS\BSW\PduR\PduR.c	  3856      else if(NULL_PTR == info)
; ..\EAS\BSW\PduR\PduR.c	  3857      {
; ..\EAS\BSW\PduR\PduR.c	  3858          PDUR_DET_REPORT_ERROR(PDUR_IPDUM_TRANSMIT_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  3859      }
; ..\EAS\BSW\PduR\PduR.c	  3860      else
; ..\EAS\BSW\PduR\PduR.c	  3861      {
; ..\EAS\BSW\PduR\PduR.c	  3862  #if(PDUR_MAX_NUMOFIPDUMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3863          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  3864  
; ..\EAS\BSW\PduR\PduR.c	  3865          IpduMTxErrorMask[id] = (PduR_MulticastMaskType)0;
; ..\EAS\BSW\PduR\PduR.c	  3866          IpduMTxConfMask[id] = (PduR_MulticastMaskType)0;
; ..\EAS\BSW\PduR\PduR.c	  3867          for(i = (PduR_RoutingPathIdType)0; i < PDUR_IPDUM_TXPDUINFO(id).NumPaths; i++)
; ..\EAS\BSW\PduR\PduR.c	  3868          {
; ..\EAS\BSW\PduR\PduR.c	  3869              PathId = PDUR_IPDUM_TXPDUINFO(id).PathIdx[i];
; ..\EAS\BSW\PduR\PduR.c	  3870              ret = PduR_UpTransmit(PathId, info);
; ..\EAS\BSW\PduR\PduR.c	  3871              if(ret == E_OK)
; ..\EAS\BSW\PduR\PduR.c	  3872              {
; ..\EAS\BSW\PduR\PduR.c	  3873                  Flag = TRUE;
; ..\EAS\BSW\PduR\PduR.c	  3874              }
; ..\EAS\BSW\PduR\PduR.c	  3875              else
; ..\EAS\BSW\PduR\PduR.c	  3876              {
; ..\EAS\BSW\PduR\PduR.c	  3877                  /*Set mask as if the wrong path has finished*/
; ..\EAS\BSW\PduR\PduR.c	  3878                  mask = PDUR_ROUTINGPATHINFO(PathId).ConfMask;
; ..\EAS\BSW\PduR\PduR.c	  3879                  IpduMTxErrorMask[id] |= mask;
; ..\EAS\BSW\PduR\PduR.c	  3880                  IpduMTxConfMask[id] |= mask;
; ..\EAS\BSW\PduR\PduR.c	  3881              }
; ..\EAS\BSW\PduR\PduR.c	  3882          }
; ..\EAS\BSW\PduR\PduR.c	  3883  
; ..\EAS\BSW\PduR\PduR.c	  3884          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  3885  #endif
; ..\EAS\BSW\PduR\PduR.c	  3886      }
; ..\EAS\BSW\PduR\PduR.c	  3887  
; ..\EAS\BSW\PduR\PduR.c	  3888      /*SWS_PduR_00218*/
; ..\EAS\BSW\PduR\PduR.c	  3889      if(TRUE == Flag)
; ..\EAS\BSW\PduR\PduR.c	  3890      {
; ..\EAS\BSW\PduR\PduR.c	  3891          ret = E_OK;
; ..\EAS\BSW\PduR\PduR.c	  3892      }
; ..\EAS\BSW\PduR\PduR.c	  3893      else
; ..\EAS\BSW\PduR\PduR.c	  3894      {
; ..\EAS\BSW\PduR\PduR.c	  3895          ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  3896      }
; ..\EAS\BSW\PduR\PduR.c	  3897      return ret;
; ..\EAS\BSW\PduR\PduR.c	  3898  }
; ..\EAS\BSW\PduR\PduR.c	  3899  #endif
; ..\EAS\BSW\PduR\PduR.c	  3900  
; ..\EAS\BSW\PduR\PduR.c	  3901  #if(STD_ON == PDUR_SOMEIP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  3902  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  3903  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  3904  * Function Name: PduR_SomeIpTpTransmit
; ..\EAS\BSW\PduR\PduR.c	  3905  *
; ..\EAS\BSW\PduR\PduR.c	  3906  * Description:   Requests transmission of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  3907  *
; ..\EAS\BSW\PduR\PduR.c	  3908  * Inputs:        id   Identification of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  3909  *                info Length and pointer to the buffer of the I-PDU
; ..\EAS\BSW\PduR\PduR.c	  3910  *
; ..\EAS\BSW\PduR\PduR.c	  3911  * Outputs:       None
; ..\EAS\BSW\PduR\PduR.c	  3912  *
; ..\EAS\BSW\PduR\PduR.c	  3913  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  3914  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  3915  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  3916  FUNC(Std_ReturnType, PDUR_CODE) PduR_SomeIpTpTransmit
; ..\EAS\BSW\PduR\PduR.c	  3917  (
; ..\EAS\BSW\PduR\PduR.c	  3918      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  3919      P2CONST(PduInfoType, AUTOMATIC, PDUR_CONST) info
; ..\EAS\BSW\PduR\PduR.c	  3920  )
; ..\EAS\BSW\PduR\PduR.c	  3921  {
; ..\EAS\BSW\PduR\PduR.c	  3922      PduR_RoutingPathIdType i;
; ..\EAS\BSW\PduR\PduR.c	  3923      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  3924      boolean Flag = FALSE;
; ..\EAS\BSW\PduR\PduR.c	  3925      PduR_MulticastMaskType mask;
; ..\EAS\BSW\PduR\PduR.c	  3926      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  3927  
; ..\EAS\BSW\PduR\PduR.c	  3928      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  3929      {
; ..\EAS\BSW\PduR\PduR.c	  3930          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  3931          PDUR_DET_REPORT_ERROR(PDUR_SOMEIPTP_TRANSMIT_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  3932      }
; ..\EAS\BSW\PduR\PduR.c	  3933      else if(id >= PDUR_GET_NUM_SOMEIPTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  3934      {
; ..\EAS\BSW\PduR\PduR.c	  3935          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  3936          PDUR_DET_REPORT_ERROR(PDUR_SOMEIPTP_TRANSMIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  3937      }
; ..\EAS\BSW\PduR\PduR.c	  3938      else if(NULL_PTR == info)
; ..\EAS\BSW\PduR\PduR.c	  3939      {
; ..\EAS\BSW\PduR\PduR.c	  3940          PDUR_DET_REPORT_ERROR(PDUR_SOMEIPTP_TRANSMIT_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  3941      }
; ..\EAS\BSW\PduR\PduR.c	  3942      else
; ..\EAS\BSW\PduR\PduR.c	  3943      {
; ..\EAS\BSW\PduR\PduR.c	  3944  #if(PDUR_MAX_NUMOFSOMEIPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  3945          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  3946  
; ..\EAS\BSW\PduR\PduR.c	  3947          SomeIpTxErrorMask[id] = (PduR_MulticastMaskType)0;
; ..\EAS\BSW\PduR\PduR.c	  3948          SomeIpTxConfMask[id] = (PduR_MulticastMaskType)0;
; ..\EAS\BSW\PduR\PduR.c	  3949          for(i = (PduR_RoutingPathIdType)0; i < PDUR_SOMEIP_TXPDUINFO(id).NumPaths; i++)
; ..\EAS\BSW\PduR\PduR.c	  3950          {
; ..\EAS\BSW\PduR\PduR.c	  3951              PathId = PDUR_SOMEIP_TXPDUINFO(id).PathIdx[i];
; ..\EAS\BSW\PduR\PduR.c	  3952              ret = PduR_UpTransmit(PathId, info);
; ..\EAS\BSW\PduR\PduR.c	  3953              if(ret == E_OK)
; ..\EAS\BSW\PduR\PduR.c	  3954              {
; ..\EAS\BSW\PduR\PduR.c	  3955                  Flag = TRUE;
; ..\EAS\BSW\PduR\PduR.c	  3956              }
; ..\EAS\BSW\PduR\PduR.c	  3957              else
; ..\EAS\BSW\PduR\PduR.c	  3958              {
; ..\EAS\BSW\PduR\PduR.c	  3959                  /*Set mask as if the wrong path has finished*/
; ..\EAS\BSW\PduR\PduR.c	  3960                  mask = PDUR_ROUTINGPATHINFO(PathId).ConfMask;
; ..\EAS\BSW\PduR\PduR.c	  3961                  SomeIpTxErrorMask[id] |= mask;
; ..\EAS\BSW\PduR\PduR.c	  3962                  SomeIpTxConfMask[id] |= mask;
; ..\EAS\BSW\PduR\PduR.c	  3963              }
; ..\EAS\BSW\PduR\PduR.c	  3964          }
; ..\EAS\BSW\PduR\PduR.c	  3965  
; ..\EAS\BSW\PduR\PduR.c	  3966          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  3967  #endif
; ..\EAS\BSW\PduR\PduR.c	  3968      }
; ..\EAS\BSW\PduR\PduR.c	  3969  
; ..\EAS\BSW\PduR\PduR.c	  3970      /*SWS_PduR_00218*/
; ..\EAS\BSW\PduR\PduR.c	  3971      if(TRUE == Flag)
; ..\EAS\BSW\PduR\PduR.c	  3972      {
; ..\EAS\BSW\PduR\PduR.c	  3973          ret = E_OK;
; ..\EAS\BSW\PduR\PduR.c	  3974      }
; ..\EAS\BSW\PduR\PduR.c	  3975      else
; ..\EAS\BSW\PduR\PduR.c	  3976      {
; ..\EAS\BSW\PduR\PduR.c	  3977          ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  3978      }
; ..\EAS\BSW\PduR\PduR.c	  3979      return ret;
; ..\EAS\BSW\PduR\PduR.c	  3980  }
; ..\EAS\BSW\PduR\PduR.c	  3981  #endif
; ..\EAS\BSW\PduR\PduR.c	  3982  
; ..\EAS\BSW\PduR\PduR.c	  3983  #if(STD_ON == PDUR_DCM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  3984  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  3985  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  3986  * Function Name: PduR_DcmTransmit    SWS_PduR_00406
; ..\EAS\BSW\PduR\PduR.c	  3987  *
; ..\EAS\BSW\PduR\PduR.c	  3988  * Description:     Requests transmission of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  3989  *
; ..\EAS\BSW\PduR\PduR.c	  3990  * Inputs:         id   Identification of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  3991  *                info Length and pointer to the buffer of the I-PDU
; ..\EAS\BSW\PduR\PduR.c	  3992  *
; ..\EAS\BSW\PduR\PduR.c	  3993  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  3994  *
; ..\EAS\BSW\PduR\PduR.c	  3995  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  3996  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  3997  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  3998  FUNC(Std_ReturnType, PDUR_CODE) PduR_DcmTransmit
; Function PduR_DcmTransmit
.L196:
PduR_DcmTransmit:	.type	func
	mov	d15,d4
.L773:
	mov.aa	a12,a4
.L774:

; ..\EAS\BSW\PduR\PduR.c	  3999  (
; ..\EAS\BSW\PduR\PduR.c	  4000      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  4001      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info
; ..\EAS\BSW\PduR\PduR.c	  4002  )
; ..\EAS\BSW\PduR\PduR.c	  4003  {
; ..\EAS\BSW\PduR\PduR.c	  4004      PduR_RoutingPathIdType i;
; ..\EAS\BSW\PduR\PduR.c	  4005      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  4006      boolean Flag = FALSE;
	mov	d9,#0
.L775:

; ..\EAS\BSW\PduR\PduR.c	  4007      PduR_MulticastMaskType mask;
; ..\EAS\BSW\PduR\PduR.c	  4008      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  4009  
; ..\EAS\BSW\PduR\PduR.c	  4010      if(!PDUR_IS_INITIALIZED())
	movh.a	a15,#@his(PduR_InitStatus)
	ld.bu	d0,[a15]@los(PduR_InitStatus)
	jne	d0,#1,.L89
.L920:

; ..\EAS\BSW\PduR\PduR.c	  4011      {
; ..\EAS\BSW\PduR\PduR.c	  4012          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  4013          PDUR_DET_REPORT_ERROR(PDUR_DCM_TRANSMIT_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  4014      }
; ..\EAS\BSW\PduR\PduR.c	  4015      else if(id >= PDUR_GET_NUM_DCMTXPDU())
	jge.u	d15,#2,.L90
.L921:

; ..\EAS\BSW\PduR\PduR.c	  4016      {
; ..\EAS\BSW\PduR\PduR.c	  4017          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  4018          PDUR_DET_REPORT_ERROR(PDUR_DCM_TRANSMIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  4019      }
; ..\EAS\BSW\PduR\PduR.c	  4020      else if(NULL_PTR == info)
	mov.a	a15,#0
.L922:
	jeq.a	a15,a12,.L91
.L923:

; ..\EAS\BSW\PduR\PduR.c	  4021      {
; ..\EAS\BSW\PduR\PduR.c	  4022          PDUR_DET_REPORT_ERROR(PDUR_DCM_TRANSMIT_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  4023      }
; ..\EAS\BSW\PduR\PduR.c	  4024      else
; ..\EAS\BSW\PduR\PduR.c	  4025      {
; ..\EAS\BSW\PduR\PduR.c	  4026  #if(PDUR_MAX_NUMOFDCMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  4027          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4028  
; ..\EAS\BSW\PduR\PduR.c	  4029          DcmTxErrorMask[id] = 0;
	movh.a	a15,#@his(DcmTxErrorMask)
	lea	a15,[a15]@los(DcmTxErrorMask)
.L924:
	addsc.a	a15,a15,d15,#0
.L925:
	mov	d0,d9
.L776:
	st.b	[a15],d0
.L926:

; ..\EAS\BSW\PduR\PduR.c	  4030          DcmTxConfMask[id] = 0;
	movh.a	a15,#@his(DcmTxConfMask)
	lea	a15,[a15]@los(DcmTxConfMask)
.L927:
	addsc.a	a15,a15,d15,#0
.L928:
	st.b	[a15],d0
.L929:

; ..\EAS\BSW\PduR\PduR.c	  4031          for(i = 0; i < PDUR_DCM_TXPDUINFO(id).NumPaths; i++)
	mov	d10,d9
.L777:
	j	.L92
.L93:

; ..\EAS\BSW\PduR\PduR.c	  4032          {
; ..\EAS\BSW\PduR\PduR.c	  4033              PathId = PDUR_DCM_TXPDUINFO(id).PathIdx[i];
	mul	d0,d15,#12
	movh.a	a15,#@his(PduRDcmTxPduInfo)
	lea	a15,[a15]@los(PduRDcmTxPduInfo)
	addsc.a	a15,a15,d0,#0
.L930:
	ld.a	a15,[a15]4
.L931:
	addsc.a	a15,a15,d10,#0
	ld.bu	d8,[a15]
.L779:

; ..\EAS\BSW\PduR\PduR.c	  4034              ret = PduR_UpTransmit(PathId, info);
	mov	d4,d8
.L780:
	mov.aa	a4,a12
.L782:
	call	PduR_UpTransmit
.L781:

; ..\EAS\BSW\PduR\PduR.c	  4035              if(ret == E_OK)
	jne	d2,#0,.L94
.L932:

; ..\EAS\BSW\PduR\PduR.c	  4036              {
; ..\EAS\BSW\PduR\PduR.c	  4037                  Flag = TRUE;
	mov	d9,#1
.L933:
	j	.L95
.L94:

; ..\EAS\BSW\PduR\PduR.c	  4038              }
; ..\EAS\BSW\PduR\PduR.c	  4039              else
; ..\EAS\BSW\PduR\PduR.c	  4040              {
; ..\EAS\BSW\PduR\PduR.c	  4041                  /*Set mask as if the wrong path has finished*/
; ..\EAS\BSW\PduR\PduR.c	  4042                  mask = PDUR_ROUTINGPATHINFO(PathId).ConfMask;
	mul	d0,d8,#20
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d0,#0
.L934:
	ld.bu	d0,[a15]16
.L783:

; ..\EAS\BSW\PduR\PduR.c	  4043                  DcmTxErrorMask[id] |= mask;
	movh.a	a15,#@his(DcmTxErrorMask)
	lea	a15,[a15]@los(DcmTxErrorMask)
.L935:
	addsc.a	a15,a15,d15,#0
.L936:
	movh.a	a2,#@his(DcmTxErrorMask)
	lea	a2,[a2]@los(DcmTxErrorMask)
.L937:
	addsc.a	a2,a2,d15,#0
	ld.bu	d1,[a2]
.L938:
	or	d1,d0
	st.b	[a15],d1
.L939:

; ..\EAS\BSW\PduR\PduR.c	  4044                  DcmTxConfMask[id] |= mask;
	movh.a	a15,#@his(DcmTxConfMask)
	lea	a15,[a15]@los(DcmTxConfMask)
.L940:
	addsc.a	a15,a15,d15,#0
.L941:
	movh.a	a2,#@his(DcmTxConfMask)
	lea	a2,[a2]@los(DcmTxConfMask)
.L942:
	addsc.a	a2,a2,d15,#0
	ld.bu	d1,[a2]
.L943:
	or	d0,d1
.L784:
	st.b	[a15],d0
.L95:
	add	d10,#1
.L778:
	extr.u	d10,d10,#0,#8
.L92:
	mul	d0,d15,#12
	movh.a	a15,#@his(PduRDcmTxPduInfo)
	lea	a15,[a15]@los(PduRDcmTxPduInfo)
	addsc.a	a15,a15,d0,#0
.L944:
	ld.bu	d0,[a15]
.L945:
	jlt.u	d10,d0,.L93
.L91:
.L90:
.L89:

; ..\EAS\BSW\PduR\PduR.c	  4045              }
; ..\EAS\BSW\PduR\PduR.c	  4046          }
; ..\EAS\BSW\PduR\PduR.c	  4047  
; ..\EAS\BSW\PduR\PduR.c	  4048          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4049  #endif
; ..\EAS\BSW\PduR\PduR.c	  4050      }
; ..\EAS\BSW\PduR\PduR.c	  4051  
; ..\EAS\BSW\PduR\PduR.c	  4052      /*SWS_PduR_00218*/
; ..\EAS\BSW\PduR\PduR.c	  4053      if(TRUE == Flag)
	eq	d2,d9,#0
.L785:

; ..\EAS\BSW\PduR\PduR.c	  4054      {
; ..\EAS\BSW\PduR\PduR.c	  4055          ret = E_OK;
; ..\EAS\BSW\PduR\PduR.c	  4056      }
; ..\EAS\BSW\PduR\PduR.c	  4057      else
; ..\EAS\BSW\PduR\PduR.c	  4058      {
; ..\EAS\BSW\PduR\PduR.c	  4059          ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  4060      }
; ..\EAS\BSW\PduR\PduR.c	  4061      return ret;
; ..\EAS\BSW\PduR\PduR.c	  4062  }
	ret
.L437:
	
__PduR_DcmTransmit_function_end:
	.size	PduR_DcmTransmit,__PduR_DcmTransmit_function_end-PduR_DcmTransmit
.L260:
	; End of function
	
	.sdecl	'.text.PduR.PduR_CanIfRxIndication',code,cluster('PduR_CanIfRxIndication')
	.sect	'.text.PduR.PduR_CanIfRxIndication'
	.align	2
	
	.global	PduR_CanIfRxIndication

; ..\EAS\BSW\PduR\PduR.c	  4063  
; ..\EAS\BSW\PduR\PduR.c	  4064  #if(STD_ON == PDUR_DCM_CANCELTRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  4065  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  4066  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4067  * Function Name: PduR_DcmCancelTransmit     SWS_PduR_00769
; ..\EAS\BSW\PduR\PduR.c	  4068  *
; ..\EAS\BSW\PduR\PduR.c	  4069  * Description:     Request for cancellation of an ongoing transmission of an I-Pdu
; ..\EAS\BSW\PduR\PduR.c	  4070  *                in transport protocol or communication interface.
; ..\EAS\BSW\PduR\PduR.c	  4071  *
; ..\EAS\BSW\PduR\PduR.c	  4072  * Inputs:         id   Identification of the I-PDU to be cancelled.
; ..\EAS\BSW\PduR\PduR.c	  4073  *
; ..\EAS\BSW\PduR\PduR.c	  4074  *
; ..\EAS\BSW\PduR\PduR.c	  4075  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  4076  *
; ..\EAS\BSW\PduR\PduR.c	  4077  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  4078  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4079  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  4080  FUNC(Std_ReturnType, PDUR_CODE) PduR_DcmCancelTransmit
; ..\EAS\BSW\PduR\PduR.c	  4081  (
; ..\EAS\BSW\PduR\PduR.c	  4082      PduIdType id
; ..\EAS\BSW\PduR\PduR.c	  4083  )
; ..\EAS\BSW\PduR\PduR.c	  4084  {
; ..\EAS\BSW\PduR\PduR.c	  4085      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  4086      PduR_RoutingPathIdType i;
; ..\EAS\BSW\PduR\PduR.c	  4087      boolean ErrorFlag = FALSE;
; ..\EAS\BSW\PduR\PduR.c	  4088  
; ..\EAS\BSW\PduR\PduR.c	  4089      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  4090      {
; ..\EAS\BSW\PduR\PduR.c	  4091          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  4092          PDUR_DET_REPORT_ERROR(PDUR_DCM_CANCEL_TRANSMIT_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  4093      }
; ..\EAS\BSW\PduR\PduR.c	  4094      else if(id >= PDUR_GET_NUM_DCMTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  4095      {
; ..\EAS\BSW\PduR\PduR.c	  4096          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  4097          PDUR_DET_REPORT_ERROR(PDUR_DCM_CANCEL_TRANSMIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  4098      }
; ..\EAS\BSW\PduR\PduR.c	  4099      else
; ..\EAS\BSW\PduR\PduR.c	  4100      {
; ..\EAS\BSW\PduR\PduR.c	  4101          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4102          for(i = 0; i < PDUR_DCM_TXPDUINFO(id).NumPaths; i++)
; ..\EAS\BSW\PduR\PduR.c	  4103          {
; ..\EAS\BSW\PduR\PduR.c	  4104              ret = PduR_UpCancelTransmit(PDUR_DCM_TXPDUINFO(id).PathIdx[i]);
; ..\EAS\BSW\PduR\PduR.c	  4105  
; ..\EAS\BSW\PduR\PduR.c	  4106              if(ret != E_OK)
; ..\EAS\BSW\PduR\PduR.c	  4107              {
; ..\EAS\BSW\PduR\PduR.c	  4108                  ErrorFlag = TRUE;
; ..\EAS\BSW\PduR\PduR.c	  4109              }
; ..\EAS\BSW\PduR\PduR.c	  4110          }
; ..\EAS\BSW\PduR\PduR.c	  4111          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4112      }
; ..\EAS\BSW\PduR\PduR.c	  4113  
; ..\EAS\BSW\PduR\PduR.c	  4114      /*SWS_PduR_00701*/
; ..\EAS\BSW\PduR\PduR.c	  4115      if(ErrorFlag)
; ..\EAS\BSW\PduR\PduR.c	  4116      {
; ..\EAS\BSW\PduR\PduR.c	  4117          ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  4118      }
; ..\EAS\BSW\PduR\PduR.c	  4119      else
; ..\EAS\BSW\PduR\PduR.c	  4120      {
; ..\EAS\BSW\PduR\PduR.c	  4121          ret = E_OK;
; ..\EAS\BSW\PduR\PduR.c	  4122      }
; ..\EAS\BSW\PduR\PduR.c	  4123      return ret;
; ..\EAS\BSW\PduR\PduR.c	  4124  }
; ..\EAS\BSW\PduR\PduR.c	  4125  #endif
; ..\EAS\BSW\PduR\PduR.c	  4126  
; ..\EAS\BSW\PduR\PduR.c	  4127  #if(STD_ON == PDUR_DCM_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  4128  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  4129  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4130  * Function Name: PduR_DcmChangeParameter     SWS_PduR_00482
; ..\EAS\BSW\PduR\PduR.c	  4131  *
; ..\EAS\BSW\PduR\PduR.c	  4132  * Description:     Request to change a specific transport protocol parameter
; ..\EAS\BSW\PduR\PduR.c	  4133  *                (e.g. block-size). The affected transport protocol module is
; ..\EAS\BSW\PduR\PduR.c	  4134  *                selected using the I-PDU ID.
; ..\EAS\BSW\PduR\PduR.c	  4135  *
; ..\EAS\BSW\PduR\PduR.c	  4136  * Inputs:         id   Identification of the I-PDU to which the parameter the request shall affect.
; ..\EAS\BSW\PduR\PduR.c	  4137  *                parameter  The selected parameter that the request shall changed.
; ..\EAS\BSW\PduR\PduR.c	  4138  *                value   The value that the request shall change to.
; ..\EAS\BSW\PduR\PduR.c	  4139  *
; ..\EAS\BSW\PduR\PduR.c	  4140  *
; ..\EAS\BSW\PduR\PduR.c	  4141  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  4142  *
; ..\EAS\BSW\PduR\PduR.c	  4143  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  4144  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4145  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  4146  FUNC(Std_ReturnType, PDUR_CODE) PduR_DcmChangeParameter
; ..\EAS\BSW\PduR\PduR.c	  4147  (
; ..\EAS\BSW\PduR\PduR.c	  4148      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  4149      TPParameterType parameter,
; ..\EAS\BSW\PduR\PduR.c	  4150      uint16 value
; ..\EAS\BSW\PduR\PduR.c	  4151  )
; ..\EAS\BSW\PduR\PduR.c	  4152  {
; ..\EAS\BSW\PduR\PduR.c	  4153      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  4154  
; ..\EAS\BSW\PduR\PduR.c	  4155      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  4156      {
; ..\EAS\BSW\PduR\PduR.c	  4157          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  4158          PDUR_DET_REPORT_ERROR(PDUR_DCM_CHANGEPARAMETER_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  4159      }
; ..\EAS\BSW\PduR\PduR.c	  4160      else if(id >= PDUR_GET_NUM_DCMRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  4161      {
; ..\EAS\BSW\PduR\PduR.c	  4162          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  4163          PDUR_DET_REPORT_ERROR(PDUR_DCM_CHANGEPARAMETER_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  4164      }
; ..\EAS\BSW\PduR\PduR.c	  4165      else
; ..\EAS\BSW\PduR\PduR.c	  4166      {
; ..\EAS\BSW\PduR\PduR.c	  4167          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4168          /*SWS_PduR_00747*/
; ..\EAS\BSW\PduR\PduR.c	  4169          ret = PduR_UpChangeParameter(PDUR_DCM_CANCELRXPDUINFO(id).PathId, parameter, value);
; ..\EAS\BSW\PduR\PduR.c	  4170          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4171      }
; ..\EAS\BSW\PduR\PduR.c	  4172  
; ..\EAS\BSW\PduR\PduR.c	  4173      return ret;
; ..\EAS\BSW\PduR\PduR.c	  4174  }
; ..\EAS\BSW\PduR\PduR.c	  4175  #endif
; ..\EAS\BSW\PduR\PduR.c	  4176  
; ..\EAS\BSW\PduR\PduR.c	  4177  #if(STD_ON == PDUR_DCM_CANCELRECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  4178  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  4179  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4180  * Function Name: PduR_DcmCancelReceive   SWS_PduR_00767
; ..\EAS\BSW\PduR\PduR.c	  4181  *
; ..\EAS\BSW\PduR\PduR.c	  4182  * Description:     Requests for cancellation of an ongoing reception of an I-Pdu
; ..\EAS\BSW\PduR\PduR.c	  4183  *                in transport protocol
; ..\EAS\BSW\PduR\PduR.c	  4184  *
; ..\EAS\BSW\PduR\PduR.c	  4185  * Inputs:         id   Identification of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  4186  *
; ..\EAS\BSW\PduR\PduR.c	  4187  *
; ..\EAS\BSW\PduR\PduR.c	  4188  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  4189  *
; ..\EAS\BSW\PduR\PduR.c	  4190  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  4191  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4192  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  4193  FUNC(Std_ReturnType, PDUR_CODE) PduR_DcmCancelReceive
; ..\EAS\BSW\PduR\PduR.c	  4194  (
; ..\EAS\BSW\PduR\PduR.c	  4195      PduIdType id
; ..\EAS\BSW\PduR\PduR.c	  4196  )
; ..\EAS\BSW\PduR\PduR.c	  4197  {
; ..\EAS\BSW\PduR\PduR.c	  4198      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  4199  
; ..\EAS\BSW\PduR\PduR.c	  4200      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  4201      {
; ..\EAS\BSW\PduR\PduR.c	  4202          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  4203          PDUR_DET_REPORT_ERROR(PDUR_DCM_CANCEL_RECEIVE_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  4204      }
; ..\EAS\BSW\PduR\PduR.c	  4205      else if(id >= PDUR_GET_NUM_DCMRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  4206      {
; ..\EAS\BSW\PduR\PduR.c	  4207          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  4208          PDUR_DET_REPORT_ERROR(PDUR_DCM_CANCEL_RECEIVE_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  4209      }
; ..\EAS\BSW\PduR\PduR.c	  4210      else
; ..\EAS\BSW\PduR\PduR.c	  4211      {
; ..\EAS\BSW\PduR\PduR.c	  4212          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4213          /*SWS_PduR_00736*/
; ..\EAS\BSW\PduR\PduR.c	  4214          ret = PduR_UpCancelReceive(PDUR_DCM_CANCELRXPDUINFO(id).PathId);
; ..\EAS\BSW\PduR\PduR.c	  4215          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4216      }
; ..\EAS\BSW\PduR\PduR.c	  4217      return ret;
; ..\EAS\BSW\PduR\PduR.c	  4218  }
; ..\EAS\BSW\PduR\PduR.c	  4219  #endif
; ..\EAS\BSW\PduR\PduR.c	  4220  #endif
; ..\EAS\BSW\PduR\PduR.c	  4221  
; ..\EAS\BSW\PduR\PduR.c	  4222  #if(STD_ON == PDUR_J1939DCM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  4223  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  4224  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4225  * Function Name: PduR_J1939DcmTransmit    SWS_PduR_00406
; ..\EAS\BSW\PduR\PduR.c	  4226  *
; ..\EAS\BSW\PduR\PduR.c	  4227  * Description:     Requests transmission of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  4228  *
; ..\EAS\BSW\PduR\PduR.c	  4229  * Inputs:         id   Identification of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  4230  *                info Length and pointer to the buffer of the I-PDU
; ..\EAS\BSW\PduR\PduR.c	  4231  *
; ..\EAS\BSW\PduR\PduR.c	  4232  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  4233  *
; ..\EAS\BSW\PduR\PduR.c	  4234  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  4235  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4236  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  4237  FUNC(Std_ReturnType, PDUR_CODE) PduR_J1939DcmTransmit
; ..\EAS\BSW\PduR\PduR.c	  4238  (
; ..\EAS\BSW\PduR\PduR.c	  4239      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  4240      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info
; ..\EAS\BSW\PduR\PduR.c	  4241  )
; ..\EAS\BSW\PduR\PduR.c	  4242  {
; ..\EAS\BSW\PduR\PduR.c	  4243      PduR_RoutingPathIdType i;
; ..\EAS\BSW\PduR\PduR.c	  4244      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  4245      boolean Flag = FALSE;
; ..\EAS\BSW\PduR\PduR.c	  4246      PduR_MulticastMaskType mask;
; ..\EAS\BSW\PduR\PduR.c	  4247      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  4248  
; ..\EAS\BSW\PduR\PduR.c	  4249      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  4250      {
; ..\EAS\BSW\PduR\PduR.c	  4251          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  4252          PDUR_DET_REPORT_ERROR(PDUR_J1939DCM_TRANSMIT_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  4253      }
; ..\EAS\BSW\PduR\PduR.c	  4254      else if(id >= PDUR_GET_NUM_J1939DCMTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  4255      {
; ..\EAS\BSW\PduR\PduR.c	  4256          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  4257          PDUR_DET_REPORT_ERROR(PDUR_J1939DCM_TRANSMIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  4258      }
; ..\EAS\BSW\PduR\PduR.c	  4259      else if(NULL_PTR == info)
; ..\EAS\BSW\PduR\PduR.c	  4260      {
; ..\EAS\BSW\PduR\PduR.c	  4261          PDUR_DET_REPORT_ERROR(PDUR_J1939DCM_TRANSMIT_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  4262      }
; ..\EAS\BSW\PduR\PduR.c	  4263      else
; ..\EAS\BSW\PduR\PduR.c	  4264      {
; ..\EAS\BSW\PduR\PduR.c	  4265  #if(PDUR_MAX_NUMOFJ1939DCMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  4266          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4267  
; ..\EAS\BSW\PduR\PduR.c	  4268          J1939DcmTxErrorMask[id] = 0;
; ..\EAS\BSW\PduR\PduR.c	  4269          J1939DcmTxConfMask[id] = 0;
; ..\EAS\BSW\PduR\PduR.c	  4270          for(i = 0; i < PDUR_J1939DCM_TXPDUINFO(id).NumPaths; i++)
; ..\EAS\BSW\PduR\PduR.c	  4271          {
; ..\EAS\BSW\PduR\PduR.c	  4272              PathId = PDUR_J1939DCM_TXPDUINFO(id).PathIdx[i];
; ..\EAS\BSW\PduR\PduR.c	  4273              ret = PduR_UpTransmit(PathId, info);
; ..\EAS\BSW\PduR\PduR.c	  4274              if(ret == E_OK)
; ..\EAS\BSW\PduR\PduR.c	  4275              {
; ..\EAS\BSW\PduR\PduR.c	  4276                  Flag = TRUE;
; ..\EAS\BSW\PduR\PduR.c	  4277              }
; ..\EAS\BSW\PduR\PduR.c	  4278              else
; ..\EAS\BSW\PduR\PduR.c	  4279              {
; ..\EAS\BSW\PduR\PduR.c	  4280                  /*Set mask as if the wrong path has finished*/
; ..\EAS\BSW\PduR\PduR.c	  4281                  mask = PDUR_ROUTINGPATHINFO(PathId).ConfMask;
; ..\EAS\BSW\PduR\PduR.c	  4282                  J1939DcmTxErrorMask[id] |= mask;
; ..\EAS\BSW\PduR\PduR.c	  4283                  J1939DcmTxConfMask[id] |= mask;
; ..\EAS\BSW\PduR\PduR.c	  4284              }
; ..\EAS\BSW\PduR\PduR.c	  4285          }
; ..\EAS\BSW\PduR\PduR.c	  4286  
; ..\EAS\BSW\PduR\PduR.c	  4287          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4288  #endif
; ..\EAS\BSW\PduR\PduR.c	  4289      }
; ..\EAS\BSW\PduR\PduR.c	  4290  
; ..\EAS\BSW\PduR\PduR.c	  4291      /*SWS_PduR_00218*/
; ..\EAS\BSW\PduR\PduR.c	  4292      if(TRUE == Flag)
; ..\EAS\BSW\PduR\PduR.c	  4293      {
; ..\EAS\BSW\PduR\PduR.c	  4294          ret = E_OK;
; ..\EAS\BSW\PduR\PduR.c	  4295      }
; ..\EAS\BSW\PduR\PduR.c	  4296      else
; ..\EAS\BSW\PduR\PduR.c	  4297      {
; ..\EAS\BSW\PduR\PduR.c	  4298          ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  4299      }
; ..\EAS\BSW\PduR\PduR.c	  4300      return ret;
; ..\EAS\BSW\PduR\PduR.c	  4301  }
; ..\EAS\BSW\PduR\PduR.c	  4302  
; ..\EAS\BSW\PduR\PduR.c	  4303  #if(STD_ON == PDUR_J1939DCM_CANCELTRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  4304  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  4305  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4306  * Function Name: PduR_J1939DcmCancelTransmit     SWS_PduR_00769
; ..\EAS\BSW\PduR\PduR.c	  4307  *
; ..\EAS\BSW\PduR\PduR.c	  4308  * Description:     Request for cancellation of an ongoing transmission of an I-Pdu
; ..\EAS\BSW\PduR\PduR.c	  4309  *                in transport protocol or communication interface.
; ..\EAS\BSW\PduR\PduR.c	  4310  *
; ..\EAS\BSW\PduR\PduR.c	  4311  * Inputs:         id   Identification of the I-PDU to be cancelled.
; ..\EAS\BSW\PduR\PduR.c	  4312  *
; ..\EAS\BSW\PduR\PduR.c	  4313  *
; ..\EAS\BSW\PduR\PduR.c	  4314  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  4315  *
; ..\EAS\BSW\PduR\PduR.c	  4316  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  4317  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4318  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  4319  FUNC(Std_ReturnType, PDUR_CODE) PduR_J1939DcmCancelTransmit
; ..\EAS\BSW\PduR\PduR.c	  4320  (
; ..\EAS\BSW\PduR\PduR.c	  4321      PduIdType id
; ..\EAS\BSW\PduR\PduR.c	  4322  )
; ..\EAS\BSW\PduR\PduR.c	  4323  {
; ..\EAS\BSW\PduR\PduR.c	  4324      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  4325      PduR_RoutingPathIdType i;
; ..\EAS\BSW\PduR\PduR.c	  4326      boolean ErrorFlag = FALSE;
; ..\EAS\BSW\PduR\PduR.c	  4327  
; ..\EAS\BSW\PduR\PduR.c	  4328      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  4329      {
; ..\EAS\BSW\PduR\PduR.c	  4330          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  4331          PDUR_DET_REPORT_ERROR(PDUR_J1939DCM_CANCEL_TRANSMIT_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  4332      }
; ..\EAS\BSW\PduR\PduR.c	  4333      else if(id >= PDUR_GET_NUM_J1939DCMTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  4334      {
; ..\EAS\BSW\PduR\PduR.c	  4335          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  4336          PDUR_DET_REPORT_ERROR(PDUR_J1939DCM_CANCEL_TRANSMIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  4337      }
; ..\EAS\BSW\PduR\PduR.c	  4338      else
; ..\EAS\BSW\PduR\PduR.c	  4339      {
; ..\EAS\BSW\PduR\PduR.c	  4340          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4341          for(i = 0; i < PDUR_J1939DCM_TXPDUINFO(id).NumPaths; i++)
; ..\EAS\BSW\PduR\PduR.c	  4342          {
; ..\EAS\BSW\PduR\PduR.c	  4343              ret = PduR_UpCancelTransmit(PDUR_J1939DCM_TXPDUINFO(id).PathIdx[i]);
; ..\EAS\BSW\PduR\PduR.c	  4344  
; ..\EAS\BSW\PduR\PduR.c	  4345              if(ret != E_OK)
; ..\EAS\BSW\PduR\PduR.c	  4346              {
; ..\EAS\BSW\PduR\PduR.c	  4347                  ErrorFlag = TRUE;
; ..\EAS\BSW\PduR\PduR.c	  4348              }
; ..\EAS\BSW\PduR\PduR.c	  4349          }
; ..\EAS\BSW\PduR\PduR.c	  4350          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4351      }
; ..\EAS\BSW\PduR\PduR.c	  4352  
; ..\EAS\BSW\PduR\PduR.c	  4353      /*SWS_PduR_00701*/
; ..\EAS\BSW\PduR\PduR.c	  4354      if(ErrorFlag)
; ..\EAS\BSW\PduR\PduR.c	  4355      {
; ..\EAS\BSW\PduR\PduR.c	  4356          ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  4357      }
; ..\EAS\BSW\PduR\PduR.c	  4358      else
; ..\EAS\BSW\PduR\PduR.c	  4359      {
; ..\EAS\BSW\PduR\PduR.c	  4360          ret = E_OK;
; ..\EAS\BSW\PduR\PduR.c	  4361      }
; ..\EAS\BSW\PduR\PduR.c	  4362      return ret;
; ..\EAS\BSW\PduR\PduR.c	  4363  }
; ..\EAS\BSW\PduR\PduR.c	  4364  #endif
; ..\EAS\BSW\PduR\PduR.c	  4365  
; ..\EAS\BSW\PduR\PduR.c	  4366  #if(STD_ON == PDUR_J1939DCM_CANCELRECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  4367  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  4368  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4369  * Function Name: PduR_J1939DcmCancelReceive   SWS_PduR_00767
; ..\EAS\BSW\PduR\PduR.c	  4370  *
; ..\EAS\BSW\PduR\PduR.c	  4371  * Description:     Requests for cancellation of an ongoing reception of an I-Pdu
; ..\EAS\BSW\PduR\PduR.c	  4372  *                in transport protocol
; ..\EAS\BSW\PduR\PduR.c	  4373  *
; ..\EAS\BSW\PduR\PduR.c	  4374  * Inputs:         id   Identification of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  4375  *
; ..\EAS\BSW\PduR\PduR.c	  4376  *
; ..\EAS\BSW\PduR\PduR.c	  4377  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  4378  *
; ..\EAS\BSW\PduR\PduR.c	  4379  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  4380  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4381  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  4382  FUNC(Std_ReturnType, PDUR_CODE) PduR_J1939DcmCancelReceive
; ..\EAS\BSW\PduR\PduR.c	  4383  (
; ..\EAS\BSW\PduR\PduR.c	  4384      PduIdType id
; ..\EAS\BSW\PduR\PduR.c	  4385  )
; ..\EAS\BSW\PduR\PduR.c	  4386  {
; ..\EAS\BSW\PduR\PduR.c	  4387      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  4388  
; ..\EAS\BSW\PduR\PduR.c	  4389      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  4390      {
; ..\EAS\BSW\PduR\PduR.c	  4391          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  4392          PDUR_DET_REPORT_ERROR(PDUR_J1939DCM_CANCEL_RECEIVE_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  4393      }
; ..\EAS\BSW\PduR\PduR.c	  4394      else if(id >= PDUR_GET_NUM_J1939DCMRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  4395      {
; ..\EAS\BSW\PduR\PduR.c	  4396          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  4397          PDUR_DET_REPORT_ERROR(PDUR_J1939DCM_CANCEL_RECEIVE_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  4398      }
; ..\EAS\BSW\PduR\PduR.c	  4399      else
; ..\EAS\BSW\PduR\PduR.c	  4400      {
; ..\EAS\BSW\PduR\PduR.c	  4401          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4402          /*SWS_PduR_00736*/
; ..\EAS\BSW\PduR\PduR.c	  4403          ret = PduR_UpCancelReceive(PDUR_J1939DCM_CANCELRXPDUINFO(id).PathId);
; ..\EAS\BSW\PduR\PduR.c	  4404          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4405      }
; ..\EAS\BSW\PduR\PduR.c	  4406      return ret;
; ..\EAS\BSW\PduR\PduR.c	  4407  }
; ..\EAS\BSW\PduR\PduR.c	  4408  #endif
; ..\EAS\BSW\PduR\PduR.c	  4409  #endif
; ..\EAS\BSW\PduR\PduR.c	  4410  
; ..\EAS\BSW\PduR\PduR.c	  4411  #if(STD_ON == PDUR_J1939RM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  4412  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  4413  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4414  * Function Name: PduR_J1939RmTransmit    SWS_PduR_00406
; ..\EAS\BSW\PduR\PduR.c	  4415  *
; ..\EAS\BSW\PduR\PduR.c	  4416  * Description:     Requests transmission of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  4417  *
; ..\EAS\BSW\PduR\PduR.c	  4418  * Inputs:         id   Identification of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  4419  *                info Length and pointer to the buffer of the I-PDU
; ..\EAS\BSW\PduR\PduR.c	  4420  *
; ..\EAS\BSW\PduR\PduR.c	  4421  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  4422  *
; ..\EAS\BSW\PduR\PduR.c	  4423  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  4424  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4425  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  4426  FUNC(Std_ReturnType, PDUR_CODE) PduR_J1939RmTransmit
; ..\EAS\BSW\PduR\PduR.c	  4427  (
; ..\EAS\BSW\PduR\PduR.c	  4428      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  4429      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info
; ..\EAS\BSW\PduR\PduR.c	  4430  )
; ..\EAS\BSW\PduR\PduR.c	  4431  {
; ..\EAS\BSW\PduR\PduR.c	  4432      PduR_RoutingPathIdType i;
; ..\EAS\BSW\PduR\PduR.c	  4433      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  4434      boolean Flag = FALSE;
; ..\EAS\BSW\PduR\PduR.c	  4435      PduR_MulticastMaskType mask;
; ..\EAS\BSW\PduR\PduR.c	  4436      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  4437  
; ..\EAS\BSW\PduR\PduR.c	  4438      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  4439      {
; ..\EAS\BSW\PduR\PduR.c	  4440          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  4441          PDUR_DET_REPORT_ERROR(PDUR_J1939RM_TRANSMIT_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  4442      }
; ..\EAS\BSW\PduR\PduR.c	  4443      else if(id >= PDUR_GET_NUM_J1939RMTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  4444      {
; ..\EAS\BSW\PduR\PduR.c	  4445          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  4446          PDUR_DET_REPORT_ERROR(PDUR_J1939RM_TRANSMIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  4447      }
; ..\EAS\BSW\PduR\PduR.c	  4448      else if(NULL_PTR == info)
; ..\EAS\BSW\PduR\PduR.c	  4449      {
; ..\EAS\BSW\PduR\PduR.c	  4450          PDUR_DET_REPORT_ERROR(PDUR_J1939RM_TRANSMIT_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  4451      }
; ..\EAS\BSW\PduR\PduR.c	  4452      else
; ..\EAS\BSW\PduR\PduR.c	  4453      {
; ..\EAS\BSW\PduR\PduR.c	  4454  #if(PDUR_MAX_NUMOFJ1939RMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  4455          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4456  
; ..\EAS\BSW\PduR\PduR.c	  4457          J1939RmTxErrorMask[id] = 0;
; ..\EAS\BSW\PduR\PduR.c	  4458          J1939RmTxConfMask[id] = 0;
; ..\EAS\BSW\PduR\PduR.c	  4459          for(i = 0; i < PDUR_J1939RM_TXPDUINFO(id).NumPaths; i++)
; ..\EAS\BSW\PduR\PduR.c	  4460          {
; ..\EAS\BSW\PduR\PduR.c	  4461              PathId = PDUR_J1939RM_TXPDUINFO(id).PathIdx[i];
; ..\EAS\BSW\PduR\PduR.c	  4462              ret = PduR_UpTransmit(PathId, info);
; ..\EAS\BSW\PduR\PduR.c	  4463              if(ret == E_OK)
; ..\EAS\BSW\PduR\PduR.c	  4464              {
; ..\EAS\BSW\PduR\PduR.c	  4465                  Flag = TRUE;
; ..\EAS\BSW\PduR\PduR.c	  4466              }
; ..\EAS\BSW\PduR\PduR.c	  4467              else
; ..\EAS\BSW\PduR\PduR.c	  4468              {
; ..\EAS\BSW\PduR\PduR.c	  4469                  /*Set mask as if the wrong path has finished*/
; ..\EAS\BSW\PduR\PduR.c	  4470                  mask = PDUR_ROUTINGPATHINFO(PathId).ConfMask;
; ..\EAS\BSW\PduR\PduR.c	  4471                  J1939RmTxErrorMask[id] |= mask;
; ..\EAS\BSW\PduR\PduR.c	  4472                  J1939RmTxConfMask[id] |= mask;
; ..\EAS\BSW\PduR\PduR.c	  4473              }
; ..\EAS\BSW\PduR\PduR.c	  4474          }
; ..\EAS\BSW\PduR\PduR.c	  4475  
; ..\EAS\BSW\PduR\PduR.c	  4476          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4477  #endif
; ..\EAS\BSW\PduR\PduR.c	  4478      }
; ..\EAS\BSW\PduR\PduR.c	  4479  
; ..\EAS\BSW\PduR\PduR.c	  4480      /*SWS_PduR_00218*/
; ..\EAS\BSW\PduR\PduR.c	  4481      if(TRUE == Flag)
; ..\EAS\BSW\PduR\PduR.c	  4482      {
; ..\EAS\BSW\PduR\PduR.c	  4483          ret = E_OK;
; ..\EAS\BSW\PduR\PduR.c	  4484      }
; ..\EAS\BSW\PduR\PduR.c	  4485      else
; ..\EAS\BSW\PduR\PduR.c	  4486      {
; ..\EAS\BSW\PduR\PduR.c	  4487          ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  4488      }
; ..\EAS\BSW\PduR\PduR.c	  4489      return ret;
; ..\EAS\BSW\PduR\PduR.c	  4490  }
; ..\EAS\BSW\PduR\PduR.c	  4491  #endif
; ..\EAS\BSW\PduR\PduR.c	  4492  
; ..\EAS\BSW\PduR\PduR.c	  4493  #if(STD_ON == PDUR_CDD_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  4494  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  4495  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4496  * Function Name: PduR_CddTransmit    SWS_PduR_00406
; ..\EAS\BSW\PduR\PduR.c	  4497  *
; ..\EAS\BSW\PduR\PduR.c	  4498  * Description:     Requests transmission of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  4499  *
; ..\EAS\BSW\PduR\PduR.c	  4500  * Inputs:         id   Identification of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  4501  *                info Length and pointer to the buffer of the I-PDU
; ..\EAS\BSW\PduR\PduR.c	  4502  *
; ..\EAS\BSW\PduR\PduR.c	  4503  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  4504  *
; ..\EAS\BSW\PduR\PduR.c	  4505  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  4506  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4507  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  4508  FUNC(Std_ReturnType, PDUR_CODE) PduR_CddTransmit
; ..\EAS\BSW\PduR\PduR.c	  4509  (
; ..\EAS\BSW\PduR\PduR.c	  4510      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  4511      P2CONST(PduInfoType, AUTOMATIC, PDUR_CONST) info
; ..\EAS\BSW\PduR\PduR.c	  4512  )
; ..\EAS\BSW\PduR\PduR.c	  4513  {
; ..\EAS\BSW\PduR\PduR.c	  4514      PduR_RoutingPathIdType i;
; ..\EAS\BSW\PduR\PduR.c	  4515      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  4516      boolean Flag = FALSE;
; ..\EAS\BSW\PduR\PduR.c	  4517      PduR_MulticastMaskType mask;
; ..\EAS\BSW\PduR\PduR.c	  4518      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  4519  
; ..\EAS\BSW\PduR\PduR.c	  4520      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  4521      {
; ..\EAS\BSW\PduR\PduR.c	  4522          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  4523          PDUR_DET_REPORT_ERROR(PDUR_CDD_TRANSMIT_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  4524      }
; ..\EAS\BSW\PduR\PduR.c	  4525      else if(id >= PDUR_GET_NUM_CDDTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  4526      {
; ..\EAS\BSW\PduR\PduR.c	  4527          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  4528          PDUR_DET_REPORT_ERROR(PDUR_CDD_TRANSMIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  4529      }
; ..\EAS\BSW\PduR\PduR.c	  4530      else if(NULL_PTR == info)
; ..\EAS\BSW\PduR\PduR.c	  4531      {
; ..\EAS\BSW\PduR\PduR.c	  4532          PDUR_DET_REPORT_ERROR(PDUR_CDD_TRANSMIT_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  4533      }
; ..\EAS\BSW\PduR\PduR.c	  4534      else
; ..\EAS\BSW\PduR\PduR.c	  4535      {
; ..\EAS\BSW\PduR\PduR.c	  4536  #if(PDUR_MAX_NUMOFCDDTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  4537          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4538  
; ..\EAS\BSW\PduR\PduR.c	  4539          CddTxErrorMask[id] = 0;
; ..\EAS\BSW\PduR\PduR.c	  4540          CddTxConfMask[id] = 0;
; ..\EAS\BSW\PduR\PduR.c	  4541          for(i = 0; i < PDUR_CDD_TXPDUINFO(id).NumPaths; i++)
; ..\EAS\BSW\PduR\PduR.c	  4542          {
; ..\EAS\BSW\PduR\PduR.c	  4543              PathId = PDUR_CDD_TXPDUINFO(id).PathIdx[i];
; ..\EAS\BSW\PduR\PduR.c	  4544              ret = PduR_UpTransmit(PathId, info);
; ..\EAS\BSW\PduR\PduR.c	  4545              if(ret == E_OK)
; ..\EAS\BSW\PduR\PduR.c	  4546              {
; ..\EAS\BSW\PduR\PduR.c	  4547                  Flag = TRUE;
; ..\EAS\BSW\PduR\PduR.c	  4548              }
; ..\EAS\BSW\PduR\PduR.c	  4549              else
; ..\EAS\BSW\PduR\PduR.c	  4550              {
; ..\EAS\BSW\PduR\PduR.c	  4551                  /*Set mask as if the wrong path has finished*/
; ..\EAS\BSW\PduR\PduR.c	  4552                  mask = PDUR_ROUTINGPATHINFO(PathId).ConfMask;
; ..\EAS\BSW\PduR\PduR.c	  4553                  CddTxErrorMask[id] |= mask;
; ..\EAS\BSW\PduR\PduR.c	  4554                  CddTxConfMask[id] |= mask;
; ..\EAS\BSW\PduR\PduR.c	  4555              }
; ..\EAS\BSW\PduR\PduR.c	  4556          }
; ..\EAS\BSW\PduR\PduR.c	  4557  
; ..\EAS\BSW\PduR\PduR.c	  4558          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4559  #endif
; ..\EAS\BSW\PduR\PduR.c	  4560      }
; ..\EAS\BSW\PduR\PduR.c	  4561  
; ..\EAS\BSW\PduR\PduR.c	  4562      if(TRUE == Flag)
; ..\EAS\BSW\PduR\PduR.c	  4563      {
; ..\EAS\BSW\PduR\PduR.c	  4564          ret = E_OK;
; ..\EAS\BSW\PduR\PduR.c	  4565      }
; ..\EAS\BSW\PduR\PduR.c	  4566      else
; ..\EAS\BSW\PduR\PduR.c	  4567      {
; ..\EAS\BSW\PduR\PduR.c	  4568          ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  4569      }
; ..\EAS\BSW\PduR\PduR.c	  4570  
; ..\EAS\BSW\PduR\PduR.c	  4571      return ret;
; ..\EAS\BSW\PduR\PduR.c	  4572  }
; ..\EAS\BSW\PduR\PduR.c	  4573  
; ..\EAS\BSW\PduR\PduR.c	  4574  #if(STD_ON == PDUR_CDD_CANCELTRANSMIT_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  4575  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  4576  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4577  * Function Name: PduR_CddCancelTransmit     SWS_PduR_00769
; ..\EAS\BSW\PduR\PduR.c	  4578  *
; ..\EAS\BSW\PduR\PduR.c	  4579  * Description:     Request for cancellation of an ongoing transmission of an I-Pdu
; ..\EAS\BSW\PduR\PduR.c	  4580  *                in transport protocol or communication interface.
; ..\EAS\BSW\PduR\PduR.c	  4581  *
; ..\EAS\BSW\PduR\PduR.c	  4582  * Inputs:         id   Identification of the I-PDU to be cancelled.
; ..\EAS\BSW\PduR\PduR.c	  4583  *
; ..\EAS\BSW\PduR\PduR.c	  4584  *
; ..\EAS\BSW\PduR\PduR.c	  4585  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  4586  *
; ..\EAS\BSW\PduR\PduR.c	  4587  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  4588  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4589  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  4590  FUNC(Std_ReturnType, PDUR_CODE) PduR_CddCancelTransmit
; ..\EAS\BSW\PduR\PduR.c	  4591  (
; ..\EAS\BSW\PduR\PduR.c	  4592      PduIdType id
; ..\EAS\BSW\PduR\PduR.c	  4593  )
; ..\EAS\BSW\PduR\PduR.c	  4594  {
; ..\EAS\BSW\PduR\PduR.c	  4595      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  4596      PduR_RoutingPathIdType idx;
; ..\EAS\BSW\PduR\PduR.c	  4597      PduR_RoutingPathIdType i;
; ..\EAS\BSW\PduR\PduR.c	  4598      PduIdType dstid;
; ..\EAS\BSW\PduR\PduR.c	  4599      boolean ErrorFlag = FALSE;
; ..\EAS\BSW\PduR\PduR.c	  4600  
; ..\EAS\BSW\PduR\PduR.c	  4601      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  4602      {
; ..\EAS\BSW\PduR\PduR.c	  4603          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  4604          PDUR_DET_REPORT_ERROR(PDUR_CDD_CANCEL_TRANSMIT_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  4605      }
; ..\EAS\BSW\PduR\PduR.c	  4606      else if(id >= PDUR_GET_NUM_CDDTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  4607      {
; ..\EAS\BSW\PduR\PduR.c	  4608          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  4609          PDUR_DET_REPORT_ERROR(PDUR_CDD_CANCEL_TRANSMIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  4610      }
; ..\EAS\BSW\PduR\PduR.c	  4611      else
; ..\EAS\BSW\PduR\PduR.c	  4612      {
; ..\EAS\BSW\PduR\PduR.c	  4613          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4614          for(i = 0; i < PDUR_CDD_TXPDUINFO(id).NumPaths; i++)
; ..\EAS\BSW\PduR\PduR.c	  4615          {
; ..\EAS\BSW\PduR\PduR.c	  4616              ret = PduR_UpCancelTransmit(PDUR_CDD_TXPDUINFO(id).PathIdx[i]);
; ..\EAS\BSW\PduR\PduR.c	  4617  
; ..\EAS\BSW\PduR\PduR.c	  4618              if(ret != E_OK)
; ..\EAS\BSW\PduR\PduR.c	  4619              {
; ..\EAS\BSW\PduR\PduR.c	  4620                  ErrorFlag = TRUE;
; ..\EAS\BSW\PduR\PduR.c	  4621              }
; ..\EAS\BSW\PduR\PduR.c	  4622          }
; ..\EAS\BSW\PduR\PduR.c	  4623          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4624      }
; ..\EAS\BSW\PduR\PduR.c	  4625  
; ..\EAS\BSW\PduR\PduR.c	  4626      /*SWS_PduR_00701*/
; ..\EAS\BSW\PduR\PduR.c	  4627      if(ErrorFlag)
; ..\EAS\BSW\PduR\PduR.c	  4628      {
; ..\EAS\BSW\PduR\PduR.c	  4629          ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  4630      }
; ..\EAS\BSW\PduR\PduR.c	  4631      else
; ..\EAS\BSW\PduR\PduR.c	  4632      {
; ..\EAS\BSW\PduR\PduR.c	  4633          ret = E_OK;
; ..\EAS\BSW\PduR\PduR.c	  4634      }
; ..\EAS\BSW\PduR\PduR.c	  4635      return ret;
; ..\EAS\BSW\PduR\PduR.c	  4636  }
; ..\EAS\BSW\PduR\PduR.c	  4637  #endif
; ..\EAS\BSW\PduR\PduR.c	  4638  
; ..\EAS\BSW\PduR\PduR.c	  4639  #if(STD_ON == PDUR_CDD_CHANGEPARAMETER_API_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  4640  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  4641  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4642  * Function Name: PduR_CddChangeParameter     SWS_PduR_00482
; ..\EAS\BSW\PduR\PduR.c	  4643  *
; ..\EAS\BSW\PduR\PduR.c	  4644  * Description:     Request to change a specific transport protocol parameter
; ..\EAS\BSW\PduR\PduR.c	  4645  *                (e.g. block-size). The affected transport protocol module is
; ..\EAS\BSW\PduR\PduR.c	  4646  *                selected using the I-PDU ID.
; ..\EAS\BSW\PduR\PduR.c	  4647  *
; ..\EAS\BSW\PduR\PduR.c	  4648  * Inputs:         id   Identification of the I-PDU to which the parameter the request shall affect.
; ..\EAS\BSW\PduR\PduR.c	  4649  *                parameter  The selected parameter that the request shall changed.
; ..\EAS\BSW\PduR\PduR.c	  4650  *                value   The value that the request shall change to.
; ..\EAS\BSW\PduR\PduR.c	  4651  *
; ..\EAS\BSW\PduR\PduR.c	  4652  *
; ..\EAS\BSW\PduR\PduR.c	  4653  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  4654  *
; ..\EAS\BSW\PduR\PduR.c	  4655  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  4656  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4657  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  4658  FUNC(Std_ReturnType, PDUR_CODE) PduR_CddChangeParameter
; ..\EAS\BSW\PduR\PduR.c	  4659  (
; ..\EAS\BSW\PduR\PduR.c	  4660      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  4661      TPParameterType parameter,
; ..\EAS\BSW\PduR\PduR.c	  4662      uint16 value
; ..\EAS\BSW\PduR\PduR.c	  4663  )
; ..\EAS\BSW\PduR\PduR.c	  4664  {
; ..\EAS\BSW\PduR\PduR.c	  4665      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  4666  
; ..\EAS\BSW\PduR\PduR.c	  4667      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  4668      {
; ..\EAS\BSW\PduR\PduR.c	  4669          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  4670          PDUR_DET_REPORT_ERROR(PDUR_CDD_CHANGEPARAMETER_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  4671      }
; ..\EAS\BSW\PduR\PduR.c	  4672      else if(id >= PDUR_GET_NUM_CDDRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  4673      {
; ..\EAS\BSW\PduR\PduR.c	  4674          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  4675          PDUR_DET_REPORT_ERROR(PDUR_CDD_CHANGEPARAMETER_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  4676      }
; ..\EAS\BSW\PduR\PduR.c	  4677      else
; ..\EAS\BSW\PduR\PduR.c	  4678      {
; ..\EAS\BSW\PduR\PduR.c	  4679  #if(PDUR_MAX_NUMOFCDDTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  4680          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4681          /*SWS_PduR_00747*/
; ..\EAS\BSW\PduR\PduR.c	  4682          ret = PduR_UpChangeParameter(PDUR_CDD_CANCELRXPDUINFO(id).PathId, parameter, value);
; ..\EAS\BSW\PduR\PduR.c	  4683          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4684  #endif
; ..\EAS\BSW\PduR\PduR.c	  4685      }
; ..\EAS\BSW\PduR\PduR.c	  4686  
; ..\EAS\BSW\PduR\PduR.c	  4687      return ret;
; ..\EAS\BSW\PduR\PduR.c	  4688  }
; ..\EAS\BSW\PduR\PduR.c	  4689  #endif
; ..\EAS\BSW\PduR\PduR.c	  4690  
; ..\EAS\BSW\PduR\PduR.c	  4691  #if(STD_ON == PDUR_CDD_CANCELRECEIVE_ENABLED)
; ..\EAS\BSW\PduR\PduR.c	  4692  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  4693  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4694  * Function Name: PduR_CddCancelReceive   SWS_PduR_00767
; ..\EAS\BSW\PduR\PduR.c	  4695  *
; ..\EAS\BSW\PduR\PduR.c	  4696  * Description:     Requests for cancellation of an ongoing reception of an I-Pdu
; ..\EAS\BSW\PduR\PduR.c	  4697  *                in transport protocol
; ..\EAS\BSW\PduR\PduR.c	  4698  *
; ..\EAS\BSW\PduR\PduR.c	  4699  * Inputs:         id   Identification of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  4700  *
; ..\EAS\BSW\PduR\PduR.c	  4701  *
; ..\EAS\BSW\PduR\PduR.c	  4702  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  4703  *
; ..\EAS\BSW\PduR\PduR.c	  4704  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  4705  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4706  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  4707  FUNC(Std_ReturnType, PDUR_CODE) PduR_CddCancelReceive
; ..\EAS\BSW\PduR\PduR.c	  4708  (
; ..\EAS\BSW\PduR\PduR.c	  4709      PduIdType id
; ..\EAS\BSW\PduR\PduR.c	  4710  )
; ..\EAS\BSW\PduR\PduR.c	  4711  {
; ..\EAS\BSW\PduR\PduR.c	  4712      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  4713      PduIdType srcId;
; ..\EAS\BSW\PduR\PduR.c	  4714      PduR_RoutingPathIdType idx;
; ..\EAS\BSW\PduR\PduR.c	  4715  
; ..\EAS\BSW\PduR\PduR.c	  4716      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  4717      {
; ..\EAS\BSW\PduR\PduR.c	  4718          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  4719          PDUR_DET_REPORT_ERROR(PDUR_CDD_CANCEL_RECEIVE_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  4720      }
; ..\EAS\BSW\PduR\PduR.c	  4721      else if(id >= PDUR_GET_NUM_CDDRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  4722      {
; ..\EAS\BSW\PduR\PduR.c	  4723          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  4724          PDUR_DET_REPORT_ERROR(PDUR_CDD_CANCEL_RECEIVE_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  4725      }
; ..\EAS\BSW\PduR\PduR.c	  4726      else
; ..\EAS\BSW\PduR\PduR.c	  4727      {
; ..\EAS\BSW\PduR\PduR.c	  4728  #if(PDUR_MAX_NUMOFCDDIFRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  4729          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4730          /*SWS_PduR_00736*/
; ..\EAS\BSW\PduR\PduR.c	  4731          ret = PduR_UpCancelReceive(PDUR_CDD_CANCELRXPDUINFO(id).PathId);
; ..\EAS\BSW\PduR\PduR.c	  4732          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4733  #endif
; ..\EAS\BSW\PduR\PduR.c	  4734      }
; ..\EAS\BSW\PduR\PduR.c	  4735      return ret;
; ..\EAS\BSW\PduR\PduR.c	  4736  }
; ..\EAS\BSW\PduR\PduR.c	  4737  #endif
; ..\EAS\BSW\PduR\PduR.c	  4738  #endif
; ..\EAS\BSW\PduR\PduR.c	  4739  
; ..\EAS\BSW\PduR\PduR.c	  4740  #if(STD_ON == PDUR_IPDUM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  4741  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  4742  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4743  * Function Name: PduR_IpduMRxIndication SWS_PduR_00362
; ..\EAS\BSW\PduR\PduR.c	  4744  *
; ..\EAS\BSW\PduR\PduR.c	  4745  * Description:     Indication of a received I-PDU from a lower layer communication module.
; ..\EAS\BSW\PduR\PduR.c	  4746  *
; ..\EAS\BSW\PduR\PduR.c	  4747  * Inputs:         RxPduId   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  4748  *                 PduInfoPtr Contains the length (SduLength) of the received I-PDU
; ..\EAS\BSW\PduR\PduR.c	  4749  *                           and a pointer to a buffer (SduDataPtr) containing the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  4750  *
; ..\EAS\BSW\PduR\PduR.c	  4751  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  4752  *
; ..\EAS\BSW\PduR\PduR.c	  4753  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  4754  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4755  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  4756  FUNC(void, PDUR_CODE) PduR_IpduMRxIndication
; ..\EAS\BSW\PduR\PduR.c	  4757  (
; ..\EAS\BSW\PduR\PduR.c	  4758      PduIdType RxPduId,
; ..\EAS\BSW\PduR\PduR.c	  4759      P2CONST(PduInfoType, AUTOMATIC, PDUR_CONST) PduInfoPtr
; ..\EAS\BSW\PduR\PduR.c	  4760  )
; ..\EAS\BSW\PduR\PduR.c	  4761  {
; ..\EAS\BSW\PduR\PduR.c	  4762      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  4763  
; ..\EAS\BSW\PduR\PduR.c	  4764      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  4765      {
; ..\EAS\BSW\PduR\PduR.c	  4766          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  4767          PDUR_DET_REPORT_ERROR(PDUR_IPDUM_RXINDICATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  4768      }
; ..\EAS\BSW\PduR\PduR.c	  4769      else if(RxPduId >= PDUR_GET_NUM_IPDUMIFRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  4770      {
; ..\EAS\BSW\PduR\PduR.c	  4771          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  4772          PDUR_DET_REPORT_ERROR(PDUR_IPDUM_RXINDICATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  4773      }
; ..\EAS\BSW\PduR\PduR.c	  4774      else if(NULL_PTR == PduInfoPtr)
; ..\EAS\BSW\PduR\PduR.c	  4775      {
; ..\EAS\BSW\PduR\PduR.c	  4776          PDUR_DET_REPORT_ERROR(PDUR_IPDUM_RXINDICATION_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  4777      }
; ..\EAS\BSW\PduR\PduR.c	  4778      else
; ..\EAS\BSW\PduR\PduR.c	  4779      {
; ..\EAS\BSW\PduR\PduR.c	  4780  #if(PDUR_MAX_NUMOFIPDUMIFRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  4781          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4782          pRxPduInfo = &(PDUR_IPDUMIF_RXPDUINFO(RxPduId));
; ..\EAS\BSW\PduR\PduR.c	  4783          PduR_LowerIfMultiRxIndication(pRxPduInfo, PduInfoPtr);
; ..\EAS\BSW\PduR\PduR.c	  4784          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4785  #endif
; ..\EAS\BSW\PduR\PduR.c	  4786      }
; ..\EAS\BSW\PduR\PduR.c	  4787  
; ..\EAS\BSW\PduR\PduR.c	  4788  }
; ..\EAS\BSW\PduR\PduR.c	  4789  
; ..\EAS\BSW\PduR\PduR.c	  4790  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  4791  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4792  * Function Name: PduR_IpduMTxConfirmation    SWS_PduR_00365
; ..\EAS\BSW\PduR\PduR.c	  4793  *
; ..\EAS\BSW\PduR\PduR.c	  4794  * Description:     The lower layer communication module confirms the transmission
; ..\EAS\BSW\PduR\PduR.c	  4795  *                of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  4796  *
; ..\EAS\BSW\PduR\PduR.c	  4797  * Inputs:         TxPduId   ID of the I-PDU that has been transmitted.
; ..\EAS\BSW\PduR\PduR.c	  4798  *
; ..\EAS\BSW\PduR\PduR.c	  4799  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  4800  *
; ..\EAS\BSW\PduR\PduR.c	  4801  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  4802  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4803  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  4804  FUNC(void, PDUR_CODE) PduR_IpduMTxConfirmation
; ..\EAS\BSW\PduR\PduR.c	  4805  (
; ..\EAS\BSW\PduR\PduR.c	  4806      PduIdType TxPduId
; ..\EAS\BSW\PduR\PduR.c	  4807  )
; ..\EAS\BSW\PduR\PduR.c	  4808  {
; ..\EAS\BSW\PduR\PduR.c	  4809      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  4810      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  4811  
; ..\EAS\BSW\PduR\PduR.c	  4812      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  4813      {
; ..\EAS\BSW\PduR\PduR.c	  4814          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  4815          PDUR_DET_REPORT_ERROR(PDUR_IPDUM_TXCONFIRMATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  4816      }
; ..\EAS\BSW\PduR\PduR.c	  4817      else if(TxPduId >= PDUR_GET_NUM_IPDUMIFTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  4818      {
; ..\EAS\BSW\PduR\PduR.c	  4819          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  4820          PDUR_DET_REPORT_ERROR(PDUR_IPDUM_TXCONFIRMATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  4821      }
; ..\EAS\BSW\PduR\PduR.c	  4822      else
; ..\EAS\BSW\PduR\PduR.c	  4823      {
; ..\EAS\BSW\PduR\PduR.c	  4824  #if(PDUR_MAX_NUMOFIPDUMIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  4825          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4826          PathId = PDUR_IPDUMIF_TXCONFPDUINFO(TxPduId).PathId;
; ..\EAS\BSW\PduR\PduR.c	  4827          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  4828          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  4829          {
; ..\EAS\BSW\PduR\PduR.c	  4830              PduR_LowerIfTxConfirmation(PathId, PDUR_IPDUMIF_TXCONFPDUINFO(TxPduId).UpperPduId);
; ..\EAS\BSW\PduR\PduR.c	  4831          }
; ..\EAS\BSW\PduR\PduR.c	  4832          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4833  #endif
; ..\EAS\BSW\PduR\PduR.c	  4834      }
; ..\EAS\BSW\PduR\PduR.c	  4835  }
; ..\EAS\BSW\PduR\PduR.c	  4836  
; ..\EAS\BSW\PduR\PduR.c	  4837  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  4838  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4839  * Function Name: PduR_IpduMTriggerTransmit    SWS_PduR_00369
; ..\EAS\BSW\PduR\PduR.c	  4840  *
; ..\EAS\BSW\PduR\PduR.c	  4841  * Description:     The lower layer communication module requests the buffer of the
; ..\EAS\BSW\PduR\PduR.c	  4842  *                SDU for transmission from the upper layer module.
; ..\EAS\BSW\PduR\PduR.c	  4843  *
; ..\EAS\BSW\PduR\PduR.c	  4844  * Inputs:         TxPduId   ID of the SDU that is requested to be transmitted.
; ..\EAS\BSW\PduR\PduR.c	  4845  *                PduInfoPtr Contains a pointer to a buffer (SduDataPtr) to where
; ..\EAS\BSW\PduR\PduR.c	  4846  *                           the SDU shall be copied to. On return, the service will
; ..\EAS\BSW\PduR\PduR.c	  4847  *                           indicate the length of the copied SDU data in SduLength
; ..\EAS\BSW\PduR\PduR.c	  4848  *
; ..\EAS\BSW\PduR\PduR.c	  4849  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  4850  *
; ..\EAS\BSW\PduR\PduR.c	  4851  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  4852  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4853  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  4854  FUNC(Std_ReturnType, PDUR_CODE) PduR_IpduMTriggerTransmit
; ..\EAS\BSW\PduR\PduR.c	  4855  (
; ..\EAS\BSW\PduR\PduR.c	  4856      PduIdType TxPduId,
; ..\EAS\BSW\PduR\PduR.c	  4857      P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) PduInfoPtr
; ..\EAS\BSW\PduR\PduR.c	  4858  )
; ..\EAS\BSW\PduR\PduR.c	  4859  {
; ..\EAS\BSW\PduR\PduR.c	  4860      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  4861  #if(PDUR_MAX_NUMOFIPDUMIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  4862      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  4863      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  4864  #endif
; ..\EAS\BSW\PduR\PduR.c	  4865  
; ..\EAS\BSW\PduR\PduR.c	  4866      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  4867      {
; ..\EAS\BSW\PduR\PduR.c	  4868          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  4869          PDUR_DET_REPORT_ERROR(PDUR_IPDUM_TRIGGERTRANSMIT_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  4870      }
; ..\EAS\BSW\PduR\PduR.c	  4871      else if(TxPduId >= PDUR_GET_NUM_IPDUMIFTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  4872      {
; ..\EAS\BSW\PduR\PduR.c	  4873          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  4874          PDUR_DET_REPORT_ERROR(PDUR_IPDUM_TRIGGERTRANSMIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  4875      }
; ..\EAS\BSW\PduR\PduR.c	  4876      else if(NULL_PTR == PduInfoPtr)
; ..\EAS\BSW\PduR\PduR.c	  4877      {
; ..\EAS\BSW\PduR\PduR.c	  4878          PDUR_DET_REPORT_ERROR(PDUR_IPDUM_TRIGGERTRANSMIT_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  4879      }
; ..\EAS\BSW\PduR\PduR.c	  4880      else
; ..\EAS\BSW\PduR\PduR.c	  4881      {
; ..\EAS\BSW\PduR\PduR.c	  4882  #if(PDUR_MAX_NUMOFIPDUMIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  4883          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4884          PathId = PDUR_IPDUMIF_TXCONFPDUINFO(TxPduId).PathId;
; ..\EAS\BSW\PduR\PduR.c	  4885          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  4886          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  4887          {
; ..\EAS\BSW\PduR\PduR.c	  4888              ret = PduR_LowerIfTriggerTransmit(PathId, PDUR_IPDUMIF_TXCONFPDUINFO(TxPduId).UpperPduId, PduInfoPtr);
; ..\EAS\BSW\PduR\PduR.c	  4889          }
; ..\EAS\BSW\PduR\PduR.c	  4890          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4891  #endif
; ..\EAS\BSW\PduR\PduR.c	  4892      }
; ..\EAS\BSW\PduR\PduR.c	  4893  
; ..\EAS\BSW\PduR\PduR.c	  4894      return ret;
; ..\EAS\BSW\PduR\PduR.c	  4895  }
; ..\EAS\BSW\PduR\PduR.c	  4896  #endif
; ..\EAS\BSW\PduR\PduR.c	  4897  
; ..\EAS\BSW\PduR\PduR.c	  4898  #if(STD_ON == PDUR_CANIF_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  4899  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  4900  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4901  * Function Name: PduR_CanIfRxIndication SWS_PduR_00362
; ..\EAS\BSW\PduR\PduR.c	  4902  *
; ..\EAS\BSW\PduR\PduR.c	  4903  * Description:     Indication of a received I-PDU from a lower layer communication module.
; ..\EAS\BSW\PduR\PduR.c	  4904  *
; ..\EAS\BSW\PduR\PduR.c	  4905  * Inputs:         RxPduId   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  4906  *                 PduInfoPtr Contains the length (SduLength) of the received I-PDU
; ..\EAS\BSW\PduR\PduR.c	  4907  *                           and a pointer to a buffer (SduDataPtr) containing the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  4908  *
; ..\EAS\BSW\PduR\PduR.c	  4909  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  4910  *
; ..\EAS\BSW\PduR\PduR.c	  4911  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  4912  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4913  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  4914  FUNC(void, PDUR_CODE) PduR_CanIfRxIndication
; Function PduR_CanIfRxIndication
.L198:
PduR_CanIfRxIndication:	.type	func
	mov.aa	a5,a4
.L787:

; ..\EAS\BSW\PduR\PduR.c	  4915  (
; ..\EAS\BSW\PduR\PduR.c	  4916      PduIdType RxPduId,
; ..\EAS\BSW\PduR\PduR.c	  4917      P2CONST(PduInfoType, AUTOMATIC, PDUR_CONST) PduInfoPtr
; ..\EAS\BSW\PduR\PduR.c	  4918  )
; ..\EAS\BSW\PduR\PduR.c	  4919  {
; ..\EAS\BSW\PduR\PduR.c	  4920      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  4921  
; ..\EAS\BSW\PduR\PduR.c	  4922      if(!PDUR_IS_INITIALIZED())
	movh.a	a15,#@his(PduR_InitStatus)
	ld.bu	d15,[a15]@los(PduR_InitStatus)
	jne	d15,#1,.L97
.L950:

; ..\EAS\BSW\PduR\PduR.c	  4923      {
; ..\EAS\BSW\PduR\PduR.c	  4924          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  4925          PDUR_DET_REPORT_ERROR(PDUR_CANIF_RXINDICATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  4926      }
; ..\EAS\BSW\PduR\PduR.c	  4927      else if(RxPduId >= PDUR_GET_NUM_CANIFRXPDU())
	mov	d15,#48
.L951:
	jge.u	d4,d15,.L98
.L952:

; ..\EAS\BSW\PduR\PduR.c	  4928      {
; ..\EAS\BSW\PduR\PduR.c	  4929          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  4930          PDUR_DET_REPORT_ERROR(PDUR_CANIF_RXINDICATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  4931      }
; ..\EAS\BSW\PduR\PduR.c	  4932      else if(NULL_PTR == PduInfoPtr)
	mov.a	a15,#0
.L953:
	jeq.a	a15,a5,.L99
.L954:

; ..\EAS\BSW\PduR\PduR.c	  4933      {
; ..\EAS\BSW\PduR\PduR.c	  4934          PDUR_DET_REPORT_ERROR(PDUR_CANIF_RXINDICATION_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  4935      }
; ..\EAS\BSW\PduR\PduR.c	  4936      else
; ..\EAS\BSW\PduR\PduR.c	  4937      {
; ..\EAS\BSW\PduR\PduR.c	  4938  #if(PDUR_MAX_NUMOFCANIFRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  4939          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4940          pRxPduInfo = &(PDUR_CANIF_RXPDUINFO(RxPduId));
	mul	d15,d4,#12
	movh.a	a15,#@his(PduRCanIfRxPduInfo)
	lea	a15,[a15]@los(PduRCanIfRxPduInfo)
	addsc.a	a4,a15,d15,#0
.L786:

; ..\EAS\BSW\PduR\PduR.c	  4941          PduR_LowerIfMultiRxIndication(pRxPduInfo, PduInfoPtr);
	j	PduR_LowerIfMultiRxIndication
.L99:
.L98:
.L97:

; ..\EAS\BSW\PduR\PduR.c	  4942          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4943  #endif
; ..\EAS\BSW\PduR\PduR.c	  4944      }
; ..\EAS\BSW\PduR\PduR.c	  4945  
; ..\EAS\BSW\PduR\PduR.c	  4946  }
	ret
.L445:
	
__PduR_CanIfRxIndication_function_end:
	.size	PduR_CanIfRxIndication,__PduR_CanIfRxIndication_function_end-PduR_CanIfRxIndication
.L265:
	; End of function
	
	.sdecl	'.text.PduR.PduR_CanIfTxConfirmation',code,cluster('PduR_CanIfTxConfirmation')
	.sect	'.text.PduR.PduR_CanIfTxConfirmation'
	.align	2
	
	.global	PduR_CanIfTxConfirmation

; ..\EAS\BSW\PduR\PduR.c	  4947  
; ..\EAS\BSW\PduR\PduR.c	  4948  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  4949  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4950  * Function Name: PduR_CanIfTxConfirmation    SWS_PduR_00365
; ..\EAS\BSW\PduR\PduR.c	  4951  *
; ..\EAS\BSW\PduR\PduR.c	  4952  * Description:     The lower layer communication module confirms the transmission
; ..\EAS\BSW\PduR\PduR.c	  4953  *                of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  4954  *
; ..\EAS\BSW\PduR\PduR.c	  4955  * Inputs:         TxPduId   ID of the I-PDU that has been transmitted.
; ..\EAS\BSW\PduR\PduR.c	  4956  *
; ..\EAS\BSW\PduR\PduR.c	  4957  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  4958  *
; ..\EAS\BSW\PduR\PduR.c	  4959  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  4960  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4961  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  4962  FUNC(void, PDUR_CODE) PduR_CanIfTxConfirmation
; Function PduR_CanIfTxConfirmation
.L200:
PduR_CanIfTxConfirmation:	.type	func

; ..\EAS\BSW\PduR\PduR.c	  4963  (
; ..\EAS\BSW\PduR\PduR.c	  4964      PduIdType TxPduId
; ..\EAS\BSW\PduR\PduR.c	  4965  )
; ..\EAS\BSW\PduR\PduR.c	  4966  {
; ..\EAS\BSW\PduR\PduR.c	  4967      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  4968      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  4969  
; ..\EAS\BSW\PduR\PduR.c	  4970      if(!PDUR_IS_INITIALIZED())
	movh.a	a15,#@his(PduR_InitStatus)
	ld.bu	d15,[a15]@los(PduR_InitStatus)
	jne	d15,#1,.L100
.L959:

; ..\EAS\BSW\PduR\PduR.c	  4971      {
; ..\EAS\BSW\PduR\PduR.c	  4972          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  4973          PDUR_DET_REPORT_ERROR(PDUR_CANIF_TXCONFIRMATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  4974      }
; ..\EAS\BSW\PduR\PduR.c	  4975      else if(TxPduId >= PDUR_GET_NUM_CANIFTXPDU())
	mov	d15,#37
.L960:
	jge.u	d4,d15,.L101
.L961:

; ..\EAS\BSW\PduR\PduR.c	  4976      {
; ..\EAS\BSW\PduR\PduR.c	  4977          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  4978          PDUR_DET_REPORT_ERROR(PDUR_CANIF_TXCONFIRMATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  4979      }
; ..\EAS\BSW\PduR\PduR.c	  4980      else
; ..\EAS\BSW\PduR\PduR.c	  4981      {
; ..\EAS\BSW\PduR\PduR.c	  4982  #if(PDUR_MAX_NUMOFCANIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  4983          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4984          PathId = PDUR_CANIF_TXCONFPDUINFO(TxPduId).PathId;
	movh.a	a15,#@his(PduRCanIfTxConfPduInfo)
	lea	a15,[a15]@los(PduRCanIfTxConfPduInfo)
	addsc.a	a15,a15,d4,#1
.L962:
	ld.bu	d0,[a15]
.L789:

; ..\EAS\BSW\PduR\PduR.c	  4985          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
	mul	d15,d0,#20
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L963:
	ld.hu	d15,[a15]14
.L790:

; ..\EAS\BSW\PduR\PduR.c	  4986          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
	mov.u	d1,#65535
.L964:
	jeq	d15,d1,.L102
.L965:
	movh.a	a15,#@his(PduR_RoutingPathGroupEnabled)
	lea	a15,[a15]@los(PduR_RoutingPathGroupEnabled)
.L966:
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L791:
	jne	d15,#1,.L103
.L102:

; ..\EAS\BSW\PduR\PduR.c	  4987          {
; ..\EAS\BSW\PduR\PduR.c	  4988              PduR_LowerIfTxConfirmation(PathId, PDUR_CANIF_TXCONFPDUINFO(TxPduId).UpperPduId);
	movh.a	a15,#@his(PduRCanIfTxConfPduInfo)
	lea	a15,[a15]@los(PduRCanIfTxConfPduInfo)
	addsc.a	a15,a15,d4,#1
.L967:
	ld.bu	d5,[a15]1
	mov	d4,d0
.L788:
	j	PduR_LowerIfTxConfirmation
.L103:
.L101:
.L100:

; ..\EAS\BSW\PduR\PduR.c	  4989          }
; ..\EAS\BSW\PduR\PduR.c	  4990          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  4991  #endif
; ..\EAS\BSW\PduR\PduR.c	  4992      }
; ..\EAS\BSW\PduR\PduR.c	  4993  }
	ret
.L450:
	
__PduR_CanIfTxConfirmation_function_end:
	.size	PduR_CanIfTxConfirmation,__PduR_CanIfTxConfirmation_function_end-PduR_CanIfTxConfirmation
.L270:
	; End of function
	
	.sdecl	'.text.PduR.PduR_SoAdIfRxIndication',code,cluster('PduR_SoAdIfRxIndication')
	.sect	'.text.PduR.PduR_SoAdIfRxIndication'
	.align	2
	
	.global	PduR_SoAdIfRxIndication

; ..\EAS\BSW\PduR\PduR.c	  4994  #endif
; ..\EAS\BSW\PduR\PduR.c	  4995  
; ..\EAS\BSW\PduR\PduR.c	  4996  #if(STD_ON == PDUR_LINIF_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  4997  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  4998  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  4999  * Function Name: PduR_LinIfRxIndication SWS_PduR_00362
; ..\EAS\BSW\PduR\PduR.c	  5000  *
; ..\EAS\BSW\PduR\PduR.c	  5001  * Description:     Indication of a received I-PDU from a lower layer communication module.
; ..\EAS\BSW\PduR\PduR.c	  5002  *
; ..\EAS\BSW\PduR\PduR.c	  5003  * Inputs:         RxPduId   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5004  *                 PduInfoPtr Contains the length (SduLength) of the received I-PDU
; ..\EAS\BSW\PduR\PduR.c	  5005  *                            and a pointer to a buffer (SduDataPtr) containing the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5006  *
; ..\EAS\BSW\PduR\PduR.c	  5007  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  5008  *
; ..\EAS\BSW\PduR\PduR.c	  5009  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  5010  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5011  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  5012  FUNC(void, PDUR_CODE) PduR_LinIfRxIndication
; ..\EAS\BSW\PduR\PduR.c	  5013  (
; ..\EAS\BSW\PduR\PduR.c	  5014      PduIdType RxPduId,
; ..\EAS\BSW\PduR\PduR.c	  5015      P2CONST(PduInfoType, AUTOMATIC, PDUR_CONST) PduInfoPtr
; ..\EAS\BSW\PduR\PduR.c	  5016  )
; ..\EAS\BSW\PduR\PduR.c	  5017  {
; ..\EAS\BSW\PduR\PduR.c	  5018  #if(PDUR_MAX_NUMOFLINIFRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5019      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  5020  #endif
; ..\EAS\BSW\PduR\PduR.c	  5021  
; ..\EAS\BSW\PduR\PduR.c	  5022      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  5023      {
; ..\EAS\BSW\PduR\PduR.c	  5024          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  5025          PDUR_DET_REPORT_ERROR(PDUR_LINIF_RXINDICATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  5026      }
; ..\EAS\BSW\PduR\PduR.c	  5027      else if(RxPduId >= PDUR_GET_NUM_LINIFRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  5028      {
; ..\EAS\BSW\PduR\PduR.c	  5029          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  5030          PDUR_DET_REPORT_ERROR(PDUR_LINIF_RXINDICATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  5031      }
; ..\EAS\BSW\PduR\PduR.c	  5032      else if(NULL_PTR == PduInfoPtr)
; ..\EAS\BSW\PduR\PduR.c	  5033      {
; ..\EAS\BSW\PduR\PduR.c	  5034          PDUR_DET_REPORT_ERROR(PDUR_LINIF_RXINDICATION_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  5035      }
; ..\EAS\BSW\PduR\PduR.c	  5036      else
; ..\EAS\BSW\PduR\PduR.c	  5037      {
; ..\EAS\BSW\PduR\PduR.c	  5038  #if(PDUR_MAX_NUMOFLINIFRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5039          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5040          pRxPduInfo = &(PDUR_LINIF_RXPDUINFO(RxPduId));
; ..\EAS\BSW\PduR\PduR.c	  5041          PduR_LowerIfMultiRxIndication(pRxPduInfo, PduInfoPtr);
; ..\EAS\BSW\PduR\PduR.c	  5042          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5043  #endif
; ..\EAS\BSW\PduR\PduR.c	  5044      }
; ..\EAS\BSW\PduR\PduR.c	  5045  }
; ..\EAS\BSW\PduR\PduR.c	  5046  
; ..\EAS\BSW\PduR\PduR.c	  5047  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  5048  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5049  * Function Name: PduR_LinIfTxConfirmation    SWS_PduR_00365
; ..\EAS\BSW\PduR\PduR.c	  5050  *
; ..\EAS\BSW\PduR\PduR.c	  5051  * Description:     The lower layer communication module confirms the transmission
; ..\EAS\BSW\PduR\PduR.c	  5052  *                of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5053  *
; ..\EAS\BSW\PduR\PduR.c	  5054  * Inputs:         TxPduId   ID of the I-PDU that has been transmitted.
; ..\EAS\BSW\PduR\PduR.c	  5055  *
; ..\EAS\BSW\PduR\PduR.c	  5056  * Outputs:         bufferSizePtr    Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  5057  *
; ..\EAS\BSW\PduR\PduR.c	  5058  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  5059  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5060  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  5061  FUNC(void, PDUR_CODE) PduR_LinIfTxConfirmation
; ..\EAS\BSW\PduR\PduR.c	  5062  (
; ..\EAS\BSW\PduR\PduR.c	  5063      PduIdType TxPduId
; ..\EAS\BSW\PduR\PduR.c	  5064  )
; ..\EAS\BSW\PduR\PduR.c	  5065  {
; ..\EAS\BSW\PduR\PduR.c	  5066  #if(PDUR_MAX_NUMOFLINIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5067      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  5068      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  5069  #endif
; ..\EAS\BSW\PduR\PduR.c	  5070  
; ..\EAS\BSW\PduR\PduR.c	  5071      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  5072      {
; ..\EAS\BSW\PduR\PduR.c	  5073          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  5074          PDUR_DET_REPORT_ERROR(PDUR_LINIF_TXCONFIRMATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  5075      }
; ..\EAS\BSW\PduR\PduR.c	  5076      else if(TxPduId >= PDUR_GET_NUM_LINIFTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  5077      {
; ..\EAS\BSW\PduR\PduR.c	  5078          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  5079          PDUR_DET_REPORT_ERROR(PDUR_LINIF_TXCONFIRMATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  5080      }
; ..\EAS\BSW\PduR\PduR.c	  5081      else
; ..\EAS\BSW\PduR\PduR.c	  5082      {
; ..\EAS\BSW\PduR\PduR.c	  5083  #if(PDUR_MAX_NUMOFLINIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5084          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5085          PathId = PDUR_LINIF_TXCONFPDUINFO(TxPduId).PathId;
; ..\EAS\BSW\PduR\PduR.c	  5086          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  5087          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  5088          {
; ..\EAS\BSW\PduR\PduR.c	  5089              PduR_LowerIfTxConfirmation(PathId, PDUR_LINIF_TXCONFPDUINFO(TxPduId).UpperPduId);
; ..\EAS\BSW\PduR\PduR.c	  5090          }
; ..\EAS\BSW\PduR\PduR.c	  5091          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5092  #endif
; ..\EAS\BSW\PduR\PduR.c	  5093      }
; ..\EAS\BSW\PduR\PduR.c	  5094  }
; ..\EAS\BSW\PduR\PduR.c	  5095  
; ..\EAS\BSW\PduR\PduR.c	  5096  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  5097  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5098  * Function Name: PduR_LinIfTriggerTransmit    SWS_PduR_00369
; ..\EAS\BSW\PduR\PduR.c	  5099  *
; ..\EAS\BSW\PduR\PduR.c	  5100  * Description:     The lower layer communication module requests the buffer of the
; ..\EAS\BSW\PduR\PduR.c	  5101  *                SDU for transmission from the upper layer module.
; ..\EAS\BSW\PduR\PduR.c	  5102  *
; ..\EAS\BSW\PduR\PduR.c	  5103  * Inputs:         TxPduId   ID of the SDU that is requested to be transmitted.
; ..\EAS\BSW\PduR\PduR.c	  5104  *                PduInfoPtr Contains a pointer to a buffer (SduDataPtr) to where
; ..\EAS\BSW\PduR\PduR.c	  5105  *                           the SDU shall be copied to. On return, the service will
; ..\EAS\BSW\PduR\PduR.c	  5106  *                           indicate the length of the copied SDU data in SduLength
; ..\EAS\BSW\PduR\PduR.c	  5107  *
; ..\EAS\BSW\PduR\PduR.c	  5108  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  5109  *
; ..\EAS\BSW\PduR\PduR.c	  5110  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  5111  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5112  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  5113  FUNC(Std_ReturnType, PDUR_CODE) PduR_LinIfTriggerTransmit
; ..\EAS\BSW\PduR\PduR.c	  5114  (
; ..\EAS\BSW\PduR\PduR.c	  5115      PduIdType TxPduId,
; ..\EAS\BSW\PduR\PduR.c	  5116      P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) PduInfoPtr
; ..\EAS\BSW\PduR\PduR.c	  5117  )
; ..\EAS\BSW\PduR\PduR.c	  5118  {
; ..\EAS\BSW\PduR\PduR.c	  5119      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  5120  #if(PDUR_MAX_NUMOFLINIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5121      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  5122      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  5123  #endif
; ..\EAS\BSW\PduR\PduR.c	  5124  
; ..\EAS\BSW\PduR\PduR.c	  5125      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  5126      {
; ..\EAS\BSW\PduR\PduR.c	  5127          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  5128          PDUR_DET_REPORT_ERROR(PDUR_LINIF_TRIGGERTRANSMIT_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  5129      }
; ..\EAS\BSW\PduR\PduR.c	  5130      else if(TxPduId >= PDUR_GET_NUM_LINIFTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  5131      {
; ..\EAS\BSW\PduR\PduR.c	  5132          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  5133          PDUR_DET_REPORT_ERROR(PDUR_LINIF_TRIGGERTRANSMIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  5134      }
; ..\EAS\BSW\PduR\PduR.c	  5135      else if(NULL_PTR == PduInfoPtr)
; ..\EAS\BSW\PduR\PduR.c	  5136      {
; ..\EAS\BSW\PduR\PduR.c	  5137          PDUR_DET_REPORT_ERROR(PDUR_LINIF_TRIGGERTRANSMIT_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  5138      }
; ..\EAS\BSW\PduR\PduR.c	  5139      else
; ..\EAS\BSW\PduR\PduR.c	  5140      {
; ..\EAS\BSW\PduR\PduR.c	  5141  #if(PDUR_MAX_NUMOFLINIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5142          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5143          PathId = PDUR_LINIF_TXCONFPDUINFO(TxPduId).PathId;
; ..\EAS\BSW\PduR\PduR.c	  5144          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  5145          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  5146          {
; ..\EAS\BSW\PduR\PduR.c	  5147              ret = PduR_LowerIfTriggerTransmit(PathId, PDUR_LINIF_TXCONFPDUINFO(TxPduId).UpperPduId, PduInfoPtr);
; ..\EAS\BSW\PduR\PduR.c	  5148          }
; ..\EAS\BSW\PduR\PduR.c	  5149          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5150  #endif
; ..\EAS\BSW\PduR\PduR.c	  5151      }
; ..\EAS\BSW\PduR\PduR.c	  5152  
; ..\EAS\BSW\PduR\PduR.c	  5153      return ret;
; ..\EAS\BSW\PduR\PduR.c	  5154  }
; ..\EAS\BSW\PduR\PduR.c	  5155  #endif
; ..\EAS\BSW\PduR\PduR.c	  5156  
; ..\EAS\BSW\PduR\PduR.c	  5157  #if(STD_ON == PDUR_FRIF_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  5158  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  5159  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5160  * Function Name: PduR_FrIfRxIndication SWS_PduR_00362
; ..\EAS\BSW\PduR\PduR.c	  5161  *
; ..\EAS\BSW\PduR\PduR.c	  5162  * Description:     Indication of a received I-PDU from a lower layer communication module.
; ..\EAS\BSW\PduR\PduR.c	  5163  *
; ..\EAS\BSW\PduR\PduR.c	  5164  * Inputs:         RxPduId   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5165  *                 PduInfoPtr Contains the length (SduLength) of the received I-PDU
; ..\EAS\BSW\PduR\PduR.c	  5166  *                            and a pointer to a buffer (SduDataPtr) containing the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5167  *
; ..\EAS\BSW\PduR\PduR.c	  5168  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  5169  *
; ..\EAS\BSW\PduR\PduR.c	  5170  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  5171  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5172  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  5173  FUNC(void, PDUR_CODE) PduR_FrIfRxIndication
; ..\EAS\BSW\PduR\PduR.c	  5174  (
; ..\EAS\BSW\PduR\PduR.c	  5175      PduIdType RxPduId,
; ..\EAS\BSW\PduR\PduR.c	  5176      P2CONST(PduInfoType, AUTOMATIC, PDUR_CONST) PduInfoPtr
; ..\EAS\BSW\PduR\PduR.c	  5177  )
; ..\EAS\BSW\PduR\PduR.c	  5178  {
; ..\EAS\BSW\PduR\PduR.c	  5179  #if(PDUR_MAX_NUMOFFRIFRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5180      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  5181  #endif
; ..\EAS\BSW\PduR\PduR.c	  5182  
; ..\EAS\BSW\PduR\PduR.c	  5183      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  5184      {
; ..\EAS\BSW\PduR\PduR.c	  5185          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  5186          PDUR_DET_REPORT_ERROR(PDUR_FRIF_RXINDICATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  5187      }
; ..\EAS\BSW\PduR\PduR.c	  5188      else if(RxPduId >= PDUR_GET_NUM_FRIFRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  5189      {
; ..\EAS\BSW\PduR\PduR.c	  5190          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  5191          PDUR_DET_REPORT_ERROR(PDUR_FRIF_RXINDICATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  5192      }
; ..\EAS\BSW\PduR\PduR.c	  5193      else if(NULL_PTR == PduInfoPtr)
; ..\EAS\BSW\PduR\PduR.c	  5194      {
; ..\EAS\BSW\PduR\PduR.c	  5195          PDUR_DET_REPORT_ERROR(PDUR_FRIF_RXINDICATION_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  5196      }
; ..\EAS\BSW\PduR\PduR.c	  5197      else
; ..\EAS\BSW\PduR\PduR.c	  5198      {
; ..\EAS\BSW\PduR\PduR.c	  5199  #if(PDUR_MAX_NUMOFFRIFRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5200          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5201          pRxPduInfo = &(PDUR_FRIF_RXPDUINFO(RxPduId));
; ..\EAS\BSW\PduR\PduR.c	  5202          PduR_LowerIfMultiRxIndication(pRxPduInfo, PduInfoPtr);
; ..\EAS\BSW\PduR\PduR.c	  5203          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5204  #endif
; ..\EAS\BSW\PduR\PduR.c	  5205      }
; ..\EAS\BSW\PduR\PduR.c	  5206  }
; ..\EAS\BSW\PduR\PduR.c	  5207  
; ..\EAS\BSW\PduR\PduR.c	  5208  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  5209  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5210  * Function Name: PduR_FrIfTxConfirmation    SWS_PduR_00365
; ..\EAS\BSW\PduR\PduR.c	  5211  *
; ..\EAS\BSW\PduR\PduR.c	  5212  * Description:     The lower layer communication module confirms the transmission
; ..\EAS\BSW\PduR\PduR.c	  5213  *                of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5214  *
; ..\EAS\BSW\PduR\PduR.c	  5215  * Inputs:         TxPduId   ID of the I-PDU that has been transmitted.
; ..\EAS\BSW\PduR\PduR.c	  5216  *
; ..\EAS\BSW\PduR\PduR.c	  5217  * Outputs:         bufferSizePtr    Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  5218  *
; ..\EAS\BSW\PduR\PduR.c	  5219  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  5220  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5221  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  5222  FUNC(void, PDUR_CODE) PduR_FrIfTxConfirmation
; ..\EAS\BSW\PduR\PduR.c	  5223  (
; ..\EAS\BSW\PduR\PduR.c	  5224      PduIdType TxPduId
; ..\EAS\BSW\PduR\PduR.c	  5225  )
; ..\EAS\BSW\PduR\PduR.c	  5226  {
; ..\EAS\BSW\PduR\PduR.c	  5227  #if(PDUR_MAX_NUMOFFRIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5228      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  5229      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  5230  #endif
; ..\EAS\BSW\PduR\PduR.c	  5231  
; ..\EAS\BSW\PduR\PduR.c	  5232      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  5233      {
; ..\EAS\BSW\PduR\PduR.c	  5234          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  5235          PDUR_DET_REPORT_ERROR(PDUR_FRIF_TXCONFIRMATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  5236      }
; ..\EAS\BSW\PduR\PduR.c	  5237      else if(TxPduId >= PDUR_GET_NUM_FRIFTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  5238      {
; ..\EAS\BSW\PduR\PduR.c	  5239          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  5240          PDUR_DET_REPORT_ERROR(PDUR_FRIF_TXCONFIRMATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  5241      }
; ..\EAS\BSW\PduR\PduR.c	  5242      else
; ..\EAS\BSW\PduR\PduR.c	  5243      {
; ..\EAS\BSW\PduR\PduR.c	  5244  #if(PDUR_MAX_NUMOFFRIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5245          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5246          PathId = PDUR_FRIF_TXCONFPDUINFO(TxPduId).PathId;
; ..\EAS\BSW\PduR\PduR.c	  5247          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  5248          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  5249          {
; ..\EAS\BSW\PduR\PduR.c	  5250              PduR_LowerIfTxConfirmation(PathId, PDUR_FRIF_TXCONFPDUINFO(TxPduId).UpperPduId);
; ..\EAS\BSW\PduR\PduR.c	  5251          }
; ..\EAS\BSW\PduR\PduR.c	  5252          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5253  #endif
; ..\EAS\BSW\PduR\PduR.c	  5254      }
; ..\EAS\BSW\PduR\PduR.c	  5255  }
; ..\EAS\BSW\PduR\PduR.c	  5256  
; ..\EAS\BSW\PduR\PduR.c	  5257  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  5258  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5259  * Function Name: PduR_FrIfTriggerTransmit    SWS_PduR_00369
; ..\EAS\BSW\PduR\PduR.c	  5260  *
; ..\EAS\BSW\PduR\PduR.c	  5261  * Description:     The lower layer communication module requests the buffer of the
; ..\EAS\BSW\PduR\PduR.c	  5262  *                SDU for transmission from the upper layer module.
; ..\EAS\BSW\PduR\PduR.c	  5263  *
; ..\EAS\BSW\PduR\PduR.c	  5264  * Inputs:         TxPduId   ID of the SDU that is requested to be transmitted.
; ..\EAS\BSW\PduR\PduR.c	  5265  *                PduInfoPtr Contains a pointer to a buffer (SduDataPtr) to where
; ..\EAS\BSW\PduR\PduR.c	  5266  *                           the SDU shall be copied to. On return, the service will
; ..\EAS\BSW\PduR\PduR.c	  5267  *                           indicate the length of the copied SDU data in SduLength
; ..\EAS\BSW\PduR\PduR.c	  5268  *
; ..\EAS\BSW\PduR\PduR.c	  5269  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  5270  *
; ..\EAS\BSW\PduR\PduR.c	  5271  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  5272  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5273  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  5274  FUNC(Std_ReturnType, PDUR_CODE) PduR_FrIfTriggerTransmit
; ..\EAS\BSW\PduR\PduR.c	  5275  (
; ..\EAS\BSW\PduR\PduR.c	  5276      PduIdType TxPduId,
; ..\EAS\BSW\PduR\PduR.c	  5277      P2VAR(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) PduInfoPtr
; ..\EAS\BSW\PduR\PduR.c	  5278  )
; ..\EAS\BSW\PduR\PduR.c	  5279  {
; ..\EAS\BSW\PduR\PduR.c	  5280      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  5281  #if(PDUR_MAX_NUMOFFRIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5282      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  5283      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  5284  #endif
; ..\EAS\BSW\PduR\PduR.c	  5285  
; ..\EAS\BSW\PduR\PduR.c	  5286      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  5287      {
; ..\EAS\BSW\PduR\PduR.c	  5288          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  5289          PDUR_DET_REPORT_ERROR(PDUR_FRIF_TRIGGERTRANSMIT_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  5290      }
; ..\EAS\BSW\PduR\PduR.c	  5291      else if(TxPduId >= PDUR_GET_NUM_FRIFTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  5292      {
; ..\EAS\BSW\PduR\PduR.c	  5293          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  5294          PDUR_DET_REPORT_ERROR(PDUR_FRIF_TRIGGERTRANSMIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  5295      }
; ..\EAS\BSW\PduR\PduR.c	  5296      else if(NULL_PTR == PduInfoPtr)
; ..\EAS\BSW\PduR\PduR.c	  5297      {
; ..\EAS\BSW\PduR\PduR.c	  5298          PDUR_DET_REPORT_ERROR(PDUR_FRIF_TRIGGERTRANSMIT_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  5299      }
; ..\EAS\BSW\PduR\PduR.c	  5300      else
; ..\EAS\BSW\PduR\PduR.c	  5301      {
; ..\EAS\BSW\PduR\PduR.c	  5302  #if(PDUR_MAX_NUMOFFRIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5303          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5304          PathId = PDUR_FRIF_TXCONFPDUINFO(TxPduId).PathId;
; ..\EAS\BSW\PduR\PduR.c	  5305          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  5306          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  5307          {
; ..\EAS\BSW\PduR\PduR.c	  5308              ret = PduR_LowerIfTriggerTransmit(PathId, PDUR_FRIF_TXCONFPDUINFO(TxPduId).UpperPduId, PduInfoPtr);
; ..\EAS\BSW\PduR\PduR.c	  5309          }
; ..\EAS\BSW\PduR\PduR.c	  5310          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5311  #endif
; ..\EAS\BSW\PduR\PduR.c	  5312      }
; ..\EAS\BSW\PduR\PduR.c	  5313  
; ..\EAS\BSW\PduR\PduR.c	  5314      return ret;
; ..\EAS\BSW\PduR\PduR.c	  5315  }
; ..\EAS\BSW\PduR\PduR.c	  5316  #endif
; ..\EAS\BSW\PduR\PduR.c	  5317  
; ..\EAS\BSW\PduR\PduR.c	  5318  #if(STD_ON == PDUR_SOADIF_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  5319  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  5320  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5321  * Function Name: PduR_SoAdIfRxIndication SWS_PduR_00362
; ..\EAS\BSW\PduR\PduR.c	  5322  *
; ..\EAS\BSW\PduR\PduR.c	  5323  * Description:     Indication of a received I-PDU from a lower layer communication module.
; ..\EAS\BSW\PduR\PduR.c	  5324  *
; ..\EAS\BSW\PduR\PduR.c	  5325  * Inputs:         RxPduId   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5326  *                 PduInfoPtr Contains the length (SduLength) of the received I-PDU
; ..\EAS\BSW\PduR\PduR.c	  5327  *                           and a pointer to a buffer (SduDataPtr) containing the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5328  *
; ..\EAS\BSW\PduR\PduR.c	  5329  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  5330  *
; ..\EAS\BSW\PduR\PduR.c	  5331  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  5332  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5333  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  5334  FUNC(void, PDUR_CODE) PduR_SoAdIfRxIndication
; Function PduR_SoAdIfRxIndication
.L202:
PduR_SoAdIfRxIndication:	.type	func
	mov.aa	a5,a4
.L793:

; ..\EAS\BSW\PduR\PduR.c	  5335  (
; ..\EAS\BSW\PduR\PduR.c	  5336      PduIdType RxPduId,
; ..\EAS\BSW\PduR\PduR.c	  5337      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) PduInfoPtr
; ..\EAS\BSW\PduR\PduR.c	  5338  )
; ..\EAS\BSW\PduR\PduR.c	  5339  {
; ..\EAS\BSW\PduR\PduR.c	  5340      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  5341  
; ..\EAS\BSW\PduR\PduR.c	  5342      if(!PDUR_IS_INITIALIZED())
	movh.a	a15,#@his(PduR_InitStatus)
	ld.bu	d15,[a15]@los(PduR_InitStatus)
	jne	d15,#1,.L104
.L1072:

; ..\EAS\BSW\PduR\PduR.c	  5343      {
; ..\EAS\BSW\PduR\PduR.c	  5344          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  5345          PDUR_DET_REPORT_ERROR(PDUR_SOADIF_RXINDICATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  5346      }
; ..\EAS\BSW\PduR\PduR.c	  5347      else if(RxPduId >= PDUR_GET_NUM_SOADIFRXPDU())
	mov	d15,#17
.L1073:
	jge.u	d4,d15,.L105
.L1074:

; ..\EAS\BSW\PduR\PduR.c	  5348      {
; ..\EAS\BSW\PduR\PduR.c	  5349          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  5350          PDUR_DET_REPORT_ERROR(PDUR_SOADIF_RXINDICATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  5351      }
; ..\EAS\BSW\PduR\PduR.c	  5352      else if(NULL_PTR == PduInfoPtr)
	mov.a	a15,#0
.L1075:
	jeq.a	a15,a5,.L106
.L1076:

; ..\EAS\BSW\PduR\PduR.c	  5353      {
; ..\EAS\BSW\PduR\PduR.c	  5354          PDUR_DET_REPORT_ERROR(PDUR_SOADIF_RXINDICATION_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  5355      }
; ..\EAS\BSW\PduR\PduR.c	  5356      else
; ..\EAS\BSW\PduR\PduR.c	  5357      {
; ..\EAS\BSW\PduR\PduR.c	  5358  #if(PDUR_MAX_NUMOFSOADIFRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5359          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5360          pRxPduInfo = &(PDUR_SOADIF_RXPDUINFO(RxPduId));
	mul	d15,d4,#12
	movh.a	a15,#@his(PduRSoAdIfRxPduInfo)
	lea	a15,[a15]@los(PduRSoAdIfRxPduInfo)
	addsc.a	a4,a15,d15,#0
.L792:

; ..\EAS\BSW\PduR\PduR.c	  5361          PduR_LowerIfMultiRxIndication(pRxPduInfo, PduInfoPtr);
	j	PduR_LowerIfMultiRxIndication
.L106:
.L105:
.L104:

; ..\EAS\BSW\PduR\PduR.c	  5362          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5363  #endif
; ..\EAS\BSW\PduR\PduR.c	  5364      }
; ..\EAS\BSW\PduR\PduR.c	  5365  }
	ret
.L517:
	
__PduR_SoAdIfRxIndication_function_end:
	.size	PduR_SoAdIfRxIndication,__PduR_SoAdIfRxIndication_function_end-PduR_SoAdIfRxIndication
.L325:
	; End of function
	
	.sdecl	'.text.PduR.PduR_SoAdIfTxConfirmation',code,cluster('PduR_SoAdIfTxConfirmation')
	.sect	'.text.PduR.PduR_SoAdIfTxConfirmation'
	.align	2
	
	.global	PduR_SoAdIfTxConfirmation

; ..\EAS\BSW\PduR\PduR.c	  5366  #endif
; ..\EAS\BSW\PduR\PduR.c	  5367  
; ..\EAS\BSW\PduR\PduR.c	  5368  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  5369  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5370  * Function Name: PduR_SoAdIfTxConfirmation    SWS_PduR_00365
; ..\EAS\BSW\PduR\PduR.c	  5371  *
; ..\EAS\BSW\PduR\PduR.c	  5372  * Description:     The lower layer communication module confirms the transmission
; ..\EAS\BSW\PduR\PduR.c	  5373  *                of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5374  *
; ..\EAS\BSW\PduR\PduR.c	  5375  * Inputs:         TxPduId   ID of the I-PDU that has been transmitted.
; ..\EAS\BSW\PduR\PduR.c	  5376  *
; ..\EAS\BSW\PduR\PduR.c	  5377  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  5378  *
; ..\EAS\BSW\PduR\PduR.c	  5379  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  5380  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5381  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  5382  FUNC(void, PDUR_CODE) PduR_SoAdIfTxConfirmation
; Function PduR_SoAdIfTxConfirmation
.L204:
PduR_SoAdIfTxConfirmation:	.type	func

; ..\EAS\BSW\PduR\PduR.c	  5383  (
; ..\EAS\BSW\PduR\PduR.c	  5384      PduIdType TxPduId
; ..\EAS\BSW\PduR\PduR.c	  5385  )
; ..\EAS\BSW\PduR\PduR.c	  5386  {
; ..\EAS\BSW\PduR\PduR.c	  5387  #if(PDUR_MAX_NUMOFSOADIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5388      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  5389      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  5390  #endif
; ..\EAS\BSW\PduR\PduR.c	  5391  
; ..\EAS\BSW\PduR\PduR.c	  5392      if(!PDUR_IS_INITIALIZED())
	movh.a	a15,#@his(PduR_InitStatus)
	ld.bu	d15,[a15]@los(PduR_InitStatus)
	jne	d15,#1,.L107
.L1081:

; ..\EAS\BSW\PduR\PduR.c	  5393      {
; ..\EAS\BSW\PduR\PduR.c	  5394          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  5395          PDUR_DET_REPORT_ERROR(PDUR_SOADIF_TXCONFIRMATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  5396      }
; ..\EAS\BSW\PduR\PduR.c	  5397  #if(PDUR_MAX_NUMOFSOADIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5398      else if(TxPduId >= PDUR_GET_NUM_SOADIFTXPDU())
	jge.u	d4,#11,.L108
.L1082:

; ..\EAS\BSW\PduR\PduR.c	  5399      {
; ..\EAS\BSW\PduR\PduR.c	  5400          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  5401          PDUR_DET_REPORT_ERROR(PDUR_SOADIF_TXCONFIRMATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  5402      }
; ..\EAS\BSW\PduR\PduR.c	  5403  #endif
; ..\EAS\BSW\PduR\PduR.c	  5404      else
; ..\EAS\BSW\PduR\PduR.c	  5405      {
; ..\EAS\BSW\PduR\PduR.c	  5406  #if(PDUR_MAX_NUMOFSOADIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5407          PathId = PDUR_SOADIF_TXCONFPDUINFO(TxPduId).PathId;
	movh.a	a15,#@his(PduRSoAdIfTxConfPduInfo)
	lea	a15,[a15]@los(PduRSoAdIfTxConfPduInfo)
	addsc.a	a15,a15,d4,#1
.L1083:
	ld.bu	d0,[a15]
.L795:

; ..\EAS\BSW\PduR\PduR.c	  5408          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
	mul	d15,d0,#20
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1084:
	ld.hu	d15,[a15]14
.L796:

; ..\EAS\BSW\PduR\PduR.c	  5409          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
	mov.u	d1,#65535
.L1085:
	jeq	d15,d1,.L109
.L1086:
	movh.a	a15,#@his(PduR_RoutingPathGroupEnabled)
	lea	a15,[a15]@los(PduR_RoutingPathGroupEnabled)
.L1087:
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L797:
	jne	d15,#1,.L110
.L109:

; ..\EAS\BSW\PduR\PduR.c	  5410          {
; ..\EAS\BSW\PduR\PduR.c	  5411              PduR_LowerIfTxConfirmation(PathId, PDUR_SOADIF_TXCONFPDUINFO(TxPduId).UpperPduId);
	movh.a	a15,#@his(PduRSoAdIfTxConfPduInfo)
	lea	a15,[a15]@los(PduRSoAdIfTxConfPduInfo)
	addsc.a	a15,a15,d4,#1
.L1088:
	ld.bu	d5,[a15]1
	mov	d4,d0
.L794:
	j	PduR_LowerIfTxConfirmation
.L110:
.L108:
.L107:

; ..\EAS\BSW\PduR\PduR.c	  5412          }
; ..\EAS\BSW\PduR\PduR.c	  5413  #endif
; ..\EAS\BSW\PduR\PduR.c	  5414      }
; ..\EAS\BSW\PduR\PduR.c	  5415  }
	ret
.L521:
	
__PduR_SoAdIfTxConfirmation_function_end:
	.size	PduR_SoAdIfTxConfirmation,__PduR_SoAdIfTxConfirmation_function_end-PduR_SoAdIfTxConfirmation
.L330:
	; End of function
	
	.sdecl	'.text.PduR.PduR_SoAdIfTriggerTransmit',code,cluster('PduR_SoAdIfTriggerTransmit')
	.sect	'.text.PduR.PduR_SoAdIfTriggerTransmit'
	.align	2
	
	.global	PduR_SoAdIfTriggerTransmit

; ..\EAS\BSW\PduR\PduR.c	  5416  
; ..\EAS\BSW\PduR\PduR.c	  5417  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  5418  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5419  * Function Name: PduR_SoAdIfTriggerTransmit    SWS_PduR_00369
; ..\EAS\BSW\PduR\PduR.c	  5420  *
; ..\EAS\BSW\PduR\PduR.c	  5421  * Description:     The lower layer communication module requests the buffer of the
; ..\EAS\BSW\PduR\PduR.c	  5422  *                SDU for transmission from the upper layer module.
; ..\EAS\BSW\PduR\PduR.c	  5423  *
; ..\EAS\BSW\PduR\PduR.c	  5424  * Inputs:         TxPduId   ID of the SDU that is requested to be transmitted.
; ..\EAS\BSW\PduR\PduR.c	  5425  *                PduInfoPtr Contains a pointer to a buffer (SduDataPtr) to where
; ..\EAS\BSW\PduR\PduR.c	  5426  *                           the SDU shall be copied to. On return, the service will
; ..\EAS\BSW\PduR\PduR.c	  5427  *                           indicate the length of the copied SDU data in SduLength
; ..\EAS\BSW\PduR\PduR.c	  5428  *
; ..\EAS\BSW\PduR\PduR.c	  5429  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  5430  *
; ..\EAS\BSW\PduR\PduR.c	  5431  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  5432  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5433  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  5434  FUNC(Std_ReturnType, PDUR_CODE) PduR_SoAdIfTriggerTransmit
; Function PduR_SoAdIfTriggerTransmit
.L206:
PduR_SoAdIfTriggerTransmit:	.type	func

; ..\EAS\BSW\PduR\PduR.c	  5435  (
; ..\EAS\BSW\PduR\PduR.c	  5436      PduIdType TxPduId,
; ..\EAS\BSW\PduR\PduR.c	  5437      P2VAR(PduInfoType, AUTOMATIC, PDUR_CONST) PduInfoPtr
; ..\EAS\BSW\PduR\PduR.c	  5438  )
; ..\EAS\BSW\PduR\PduR.c	  5439  {
; ..\EAS\BSW\PduR\PduR.c	  5440      Std_ReturnType ret = E_NOT_OK;
	mov	d2,#1
.L799:

; ..\EAS\BSW\PduR\PduR.c	  5441  #if(PDUR_MAX_NUMOFSOADIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5442      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  5443      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  5444  #endif
; ..\EAS\BSW\PduR\PduR.c	  5445  
; ..\EAS\BSW\PduR\PduR.c	  5446      if(!PDUR_IS_INITIALIZED())
	movh.a	a15,#@his(PduR_InitStatus)
	ld.bu	d15,[a15]@los(PduR_InitStatus)
	jne	d15,#1,.L111
.L1093:

; ..\EAS\BSW\PduR\PduR.c	  5447      {
; ..\EAS\BSW\PduR\PduR.c	  5448          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  5449          PDUR_DET_REPORT_ERROR(PDUR_SOADIF_TRIGGERTRANSMIT_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  5450      }
; ..\EAS\BSW\PduR\PduR.c	  5451  #if(PDUR_MAX_NUMOFSOADIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5452      else if(TxPduId >= PDUR_GET_NUM_SOADIFTXPDU())
	jge.u	d4,#11,.L112
.L1094:

; ..\EAS\BSW\PduR\PduR.c	  5453      {
; ..\EAS\BSW\PduR\PduR.c	  5454          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  5455          PDUR_DET_REPORT_ERROR(PDUR_SOADIF_TRIGGERTRANSMIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  5456      }
; ..\EAS\BSW\PduR\PduR.c	  5457  #endif
; ..\EAS\BSW\PduR\PduR.c	  5458      else if(NULL_PTR == PduInfoPtr)
	mov.a	a15,#0
.L1095:
	jeq.a	a15,a4,.L113
.L1096:

; ..\EAS\BSW\PduR\PduR.c	  5459      {
; ..\EAS\BSW\PduR\PduR.c	  5460          PDUR_DET_REPORT_ERROR(PDUR_SOADIF_TRIGGERTRANSMIT_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  5461      }
; ..\EAS\BSW\PduR\PduR.c	  5462      else
; ..\EAS\BSW\PduR\PduR.c	  5463      {
; ..\EAS\BSW\PduR\PduR.c	  5464  #if(PDUR_MAX_NUMOFSOADIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5465          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5466          PathId = PDUR_SOADIF_TXCONFPDUINFO(TxPduId).PathId;
	movh.a	a15,#@his(PduRSoAdIfTxConfPduInfo)
	lea	a15,[a15]@los(PduRSoAdIfTxConfPduInfo)
	addsc.a	a15,a15,d4,#1
.L1097:
	ld.bu	d0,[a15]
.L800:

; ..\EAS\BSW\PduR\PduR.c	  5467          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
	mul	d15,d0,#20
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1098:
	ld.hu	d15,[a15]14
.L801:

; ..\EAS\BSW\PduR\PduR.c	  5468          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
	mov.u	d1,#65535
.L1099:
	jeq	d15,d1,.L114
.L1100:
	movh.a	a15,#@his(PduR_RoutingPathGroupEnabled)
	lea	a15,[a15]@los(PduR_RoutingPathGroupEnabled)
.L1101:
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L802:
	jne	d15,#1,.L115
.L114:

; ..\EAS\BSW\PduR\PduR.c	  5469          {
; ..\EAS\BSW\PduR\PduR.c	  5470              ret = PduR_LowerIfTriggerTransmit(PathId, PDUR_SOADIF_TXCONFPDUINFO(TxPduId).UpperPduId, PduInfoPtr);
	movh.a	a15,#@his(PduRSoAdIfTxConfPduInfo)
	lea	a15,[a15]@los(PduRSoAdIfTxConfPduInfo)
	addsc.a	a15,a15,d4,#1
.L1102:
	ld.bu	d5,[a15]1
.L1103:
	mov	d4,d0
.L798:
	j	PduR_LowerIfTriggerTransmit
.L115:
.L113:
.L112:
.L111:

; ..\EAS\BSW\PduR\PduR.c	  5471          }
; ..\EAS\BSW\PduR\PduR.c	  5472          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5473  #endif
; ..\EAS\BSW\PduR\PduR.c	  5474      }
; ..\EAS\BSW\PduR\PduR.c	  5475  
; ..\EAS\BSW\PduR\PduR.c	  5476      return ret;
; ..\EAS\BSW\PduR\PduR.c	  5477  }
	ret
.L525:
	
__PduR_SoAdIfTriggerTransmit_function_end:
	.size	PduR_SoAdIfTriggerTransmit,__PduR_SoAdIfTriggerTransmit_function_end-PduR_SoAdIfTriggerTransmit
.L335:
	; End of function
	
	.sdecl	'.text.PduR.PduR_CanTpStartOfReception',code,cluster('PduR_CanTpStartOfReception')
	.sect	'.text.PduR.PduR_CanTpStartOfReception'
	.align	2
	
	.global	PduR_CanTpStartOfReception

; ..\EAS\BSW\PduR\PduR.c	  5478  
; ..\EAS\BSW\PduR\PduR.c	  5479  #if(STD_ON == PDUR_DOIPIF_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  5480  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  5481  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5482  * Function Name: PduR_DoIPIfTxConfirmation    SWS_PduR_00365
; ..\EAS\BSW\PduR\PduR.c	  5483  *
; ..\EAS\BSW\PduR\PduR.c	  5484  * Description:     The lower layer communication module confirms the transmission
; ..\EAS\BSW\PduR\PduR.c	  5485  *                of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5486  *
; ..\EAS\BSW\PduR\PduR.c	  5487  * Inputs:         TxPduId   ID of the I-PDU that has been transmitted.
; ..\EAS\BSW\PduR\PduR.c	  5488  *
; ..\EAS\BSW\PduR\PduR.c	  5489  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  5490  *
; ..\EAS\BSW\PduR\PduR.c	  5491  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  5492  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5493  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  5494  FUNC(void, PDUR_CODE) PduR_DoIPIfTxConfirmation
; ..\EAS\BSW\PduR\PduR.c	  5495  (
; ..\EAS\BSW\PduR\PduR.c	  5496      PduIdType TxPduId
; ..\EAS\BSW\PduR\PduR.c	  5497  )
; ..\EAS\BSW\PduR\PduR.c	  5498  {
; ..\EAS\BSW\PduR\PduR.c	  5499      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  5500      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  5501  
; ..\EAS\BSW\PduR\PduR.c	  5502      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  5503      {
; ..\EAS\BSW\PduR\PduR.c	  5504          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  5505          PDUR_DET_REPORT_ERROR(PDUR_DOIPIF_TXCONFIRMATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  5506      }
; ..\EAS\BSW\PduR\PduR.c	  5507      else if(TxPduId >= PDUR_GET_NUM_DOIPIFTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  5508      {
; ..\EAS\BSW\PduR\PduR.c	  5509          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  5510          PDUR_DET_REPORT_ERROR(PDUR_DOIPIF_TXCONFIRMATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  5511      }
; ..\EAS\BSW\PduR\PduR.c	  5512      else
; ..\EAS\BSW\PduR\PduR.c	  5513      {
; ..\EAS\BSW\PduR\PduR.c	  5514  #if(PDUR_MAX_NUMOFDOIPIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5515          PathId = PDUR_DOIPIF_TXCONFPDUINFO(TxPduId).PathId;
; ..\EAS\BSW\PduR\PduR.c	  5516          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  5517          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  5518          {
; ..\EAS\BSW\PduR\PduR.c	  5519              PduR_LowerIfTxConfirmation(PathId, PDUR_DOIPIF_TXCONFPDUINFO(TxPduId).UpperPduId);
; ..\EAS\BSW\PduR\PduR.c	  5520          }
; ..\EAS\BSW\PduR\PduR.c	  5521  #endif
; ..\EAS\BSW\PduR\PduR.c	  5522      }
; ..\EAS\BSW\PduR\PduR.c	  5523  }
; ..\EAS\BSW\PduR\PduR.c	  5524  
; ..\EAS\BSW\PduR\PduR.c	  5525  #endif
; ..\EAS\BSW\PduR\PduR.c	  5526  
; ..\EAS\BSW\PduR\PduR.c	  5527  
; ..\EAS\BSW\PduR\PduR.c	  5528  #if(STD_ON == PDUR_CDDIF_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  5529  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  5530  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5531  * Function Name: PduR_CddIfRxIndication SWS_PduR_00362
; ..\EAS\BSW\PduR\PduR.c	  5532  *
; ..\EAS\BSW\PduR\PduR.c	  5533  * Description:     Indication of a received I-PDU from a lower layer communication module.
; ..\EAS\BSW\PduR\PduR.c	  5534  *
; ..\EAS\BSW\PduR\PduR.c	  5535  * Inputs:         RxPduId   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5536  *                 PduInfoPtr Contains the length (SduLength) of the received I-PDU
; ..\EAS\BSW\PduR\PduR.c	  5537  *                           and a pointer to a buffer (SduDataPtr) containing the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5538  *
; ..\EAS\BSW\PduR\PduR.c	  5539  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  5540  *
; ..\EAS\BSW\PduR\PduR.c	  5541  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  5542  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5543  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  5544  FUNC(void, PDUR_CODE) PduR_CddIfRxIndication
; ..\EAS\BSW\PduR\PduR.c	  5545  (
; ..\EAS\BSW\PduR\PduR.c	  5546      PduIdType RxPduId,
; ..\EAS\BSW\PduR\PduR.c	  5547      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) PduInfoPtr
; ..\EAS\BSW\PduR\PduR.c	  5548  )
; ..\EAS\BSW\PduR\PduR.c	  5549  {
; ..\EAS\BSW\PduR\PduR.c	  5550      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  5551  
; ..\EAS\BSW\PduR\PduR.c	  5552      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  5553      {
; ..\EAS\BSW\PduR\PduR.c	  5554          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  5555          PDUR_DET_REPORT_ERROR(PDUR_CDDIF_RXINDICATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  5556      }
; ..\EAS\BSW\PduR\PduR.c	  5557      else if(RxPduId >= PDUR_GET_NUM_CDDIFRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  5558      {
; ..\EAS\BSW\PduR\PduR.c	  5559          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  5560          PDUR_DET_REPORT_ERROR(PDUR_CDDIF_RXINDICATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  5561      }
; ..\EAS\BSW\PduR\PduR.c	  5562      else if(NULL_PTR == PduInfoPtr)
; ..\EAS\BSW\PduR\PduR.c	  5563      {
; ..\EAS\BSW\PduR\PduR.c	  5564          PDUR_DET_REPORT_ERROR(PDUR_CDDIF_RXINDICATION_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  5565      }
; ..\EAS\BSW\PduR\PduR.c	  5566      else
; ..\EAS\BSW\PduR\PduR.c	  5567      {
; ..\EAS\BSW\PduR\PduR.c	  5568  #if(PDUR_MAX_NUMOFCDDIFRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5569          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5570          pRxPduInfo = &(PDUR_CDDIF_RXPDUINFO(RxPduId));
; ..\EAS\BSW\PduR\PduR.c	  5571          PduR_LowerIfMultiRxIndication(pRxPduInfo, PduInfoPtr);
; ..\EAS\BSW\PduR\PduR.c	  5572          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5573  #endif
; ..\EAS\BSW\PduR\PduR.c	  5574      }
; ..\EAS\BSW\PduR\PduR.c	  5575  
; ..\EAS\BSW\PduR\PduR.c	  5576  }
; ..\EAS\BSW\PduR\PduR.c	  5577  
; ..\EAS\BSW\PduR\PduR.c	  5578  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  5579  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5580  * Function Name: PduR_CddIfTxConfirmation    SWS_PduR_00365
; ..\EAS\BSW\PduR\PduR.c	  5581  *
; ..\EAS\BSW\PduR\PduR.c	  5582  * Description:     The lower layer communication module confirms the transmission
; ..\EAS\BSW\PduR\PduR.c	  5583  *                of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5584  *
; ..\EAS\BSW\PduR\PduR.c	  5585  * Inputs:         TxPduId   ID of the I-PDU that has been transmitted.
; ..\EAS\BSW\PduR\PduR.c	  5586  *
; ..\EAS\BSW\PduR\PduR.c	  5587  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  5588  *
; ..\EAS\BSW\PduR\PduR.c	  5589  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  5590  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5591  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  5592  FUNC(void, PDUR_CODE) PduR_CddIfTxConfirmation
; ..\EAS\BSW\PduR\PduR.c	  5593  (
; ..\EAS\BSW\PduR\PduR.c	  5594      PduIdType TxPduId
; ..\EAS\BSW\PduR\PduR.c	  5595  )
; ..\EAS\BSW\PduR\PduR.c	  5596  {
; ..\EAS\BSW\PduR\PduR.c	  5597      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  5598      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  5599  
; ..\EAS\BSW\PduR\PduR.c	  5600      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  5601      {
; ..\EAS\BSW\PduR\PduR.c	  5602          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  5603          PDUR_DET_REPORT_ERROR(PDUR_CDDIF_TXCONFIRMATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  5604      }
; ..\EAS\BSW\PduR\PduR.c	  5605      else if(TxPduId >= PDUR_GET_NUM_CDDIFTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  5606      {
; ..\EAS\BSW\PduR\PduR.c	  5607          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  5608          PDUR_DET_REPORT_ERROR(PDUR_CDDIF_TXCONFIRMATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  5609      }
; ..\EAS\BSW\PduR\PduR.c	  5610      else
; ..\EAS\BSW\PduR\PduR.c	  5611      {
; ..\EAS\BSW\PduR\PduR.c	  5612  #if(PDUR_MAX_NUMOFCDDIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5613          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5614          PathId = PDUR_CDDIF_TXCONFPDUINFO(TxPduId).PathId;
; ..\EAS\BSW\PduR\PduR.c	  5615          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  5616          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  5617          {
; ..\EAS\BSW\PduR\PduR.c	  5618              PduR_LowerIfTxConfirmation(PathId, PDUR_CDDIF_TXCONFPDUINFO(TxPduId).UpperPduId);
; ..\EAS\BSW\PduR\PduR.c	  5619          }
; ..\EAS\BSW\PduR\PduR.c	  5620          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5621  #endif
; ..\EAS\BSW\PduR\PduR.c	  5622      }
; ..\EAS\BSW\PduR\PduR.c	  5623  }
; ..\EAS\BSW\PduR\PduR.c	  5624  #endif
; ..\EAS\BSW\PduR\PduR.c	  5625  
; ..\EAS\BSW\PduR\PduR.c	  5626  #if(STD_ON == PDUR_CANTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  5627  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  5628  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5629  * Function Name: PduR_CanTpStartOfReception    SWS_PduR_00507
; ..\EAS\BSW\PduR\PduR.c	  5630  *
; ..\EAS\BSW\PduR\PduR.c	  5631  * Description:     This function is called at the start of receiving an N-SDU.
; ..\EAS\BSW\PduR\PduR.c	  5632  *                The N-SDU might be fragmented into multiple N-PDUs (FF with one
; ..\EAS\BSW\PduR\PduR.c	  5633  *                or more following CFs) or might consist of a single N-PDU (SF).
; ..\EAS\BSW\PduR\PduR.c	  5634  *
; ..\EAS\BSW\PduR\PduR.c	  5635  * Inputs:         id   Identification of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5636  *                 TpSduLength  Total length of the PDU to be received.
; ..\EAS\BSW\PduR\PduR.c	  5637  *
; ..\EAS\BSW\PduR\PduR.c	  5638  * Outputs:         bufferSizePtr  Available receive buffer in the receiving module.
; ..\EAS\BSW\PduR\PduR.c	  5639  *                               This parameter will be used to compute the Block
; ..\EAS\BSW\PduR\PduR.c	  5640  *                               Size (BS) in the transport protocol module
; ..\EAS\BSW\PduR\PduR.c	  5641  *
; ..\EAS\BSW\PduR\PduR.c	  5642  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  5643  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5644  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  5645  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_CanTpStartOfReception
; Function PduR_CanTpStartOfReception
.L208:
PduR_CanTpStartOfReception:	.type	func
	mov.aa	a15,a4
.L806:
	mov.aa	a6,a5
.L807:

; ..\EAS\BSW\PduR\PduR.c	  5646  (
; ..\EAS\BSW\PduR\PduR.c	  5647      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  5648      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  5649      PduLengthType TpSduLength,
; ..\EAS\BSW\PduR\PduR.c	  5650      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  5651  )
; ..\EAS\BSW\PduR\PduR.c	  5652  {
; ..\EAS\BSW\PduR\PduR.c	  5653      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
	mov	d2,#1
.L808:

; ..\EAS\BSW\PduR\PduR.c	  5654  #if(PDUR_MAX_NUMOFCANTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5655      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  5656  #endif
; ..\EAS\BSW\PduR\PduR.c	  5657  
; ..\EAS\BSW\PduR\PduR.c	  5658      if(!PDUR_IS_INITIALIZED())
	movh.a	a2,#@his(PduR_InitStatus)
	ld.bu	d15,[a2]@los(PduR_InitStatus)
	jne	d15,#1,.L117
.L972:

; ..\EAS\BSW\PduR\PduR.c	  5659      {
; ..\EAS\BSW\PduR\PduR.c	  5660          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  5661          PDUR_DET_REPORT_ERROR(PDUR_CANTP_STARTOFRECEPTION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  5662      }
; ..\EAS\BSW\PduR\PduR.c	  5663      else if(id >= PDUR_GET_NUM_CANTPRXPDU())
	jge.u	d4,#2,.L118
.L973:

; ..\EAS\BSW\PduR\PduR.c	  5664      {
; ..\EAS\BSW\PduR\PduR.c	  5665          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  5666          PDUR_DET_REPORT_ERROR(PDUR_CANTP_STARTOFRECEPTION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  5667      }
; ..\EAS\BSW\PduR\PduR.c	  5668      else if(NULL_PTR == bufferSizePtr)
	mov.a	a2,#0
.L974:
	jeq.a	a2,a6,.L119
.L975:

; ..\EAS\BSW\PduR\PduR.c	  5669      {
; ..\EAS\BSW\PduR\PduR.c	  5670          PDUR_DET_REPORT_ERROR(PDUR_CANTP_STARTOFRECEPTION_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  5671      }
; ..\EAS\BSW\PduR\PduR.c	  5672      else
; ..\EAS\BSW\PduR\PduR.c	  5673      {
; ..\EAS\BSW\PduR\PduR.c	  5674  #if(PDUR_MAX_NUMOFCANTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5675          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5676          pRxPduInfo = &(PDUR_CANTP_RXPDUINFO(id));
	mul	d15,d4,#12
	movh.a	a2,#@his(PduRCanTpRxPduInfo)
	lea	a2,[a2]@los(PduRCanTpRxPduInfo)
	addsc.a	a4,a2,d15,#0
.L805:

; ..\EAS\BSW\PduR\PduR.c	  5677          result = PduR_LowerTpMultiStartOfReception(pRxPduInfo, info, TpSduLength, bufferSizePtr);
	mov.aa	a5,a15
.L803:
	mov	d4,d5
.L804:
	j	PduR_LowerTpMultiStartOfReception
.L119:
.L118:
.L117:

; ..\EAS\BSW\PduR\PduR.c	  5678          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5679  #endif
; ..\EAS\BSW\PduR\PduR.c	  5680      }
; ..\EAS\BSW\PduR\PduR.c	  5681  
; ..\EAS\BSW\PduR\PduR.c	  5682      return result;
; ..\EAS\BSW\PduR\PduR.c	  5683  }
	ret
.L455:
	
__PduR_CanTpStartOfReception_function_end:
	.size	PduR_CanTpStartOfReception,__PduR_CanTpStartOfReception_function_end-PduR_CanTpStartOfReception
.L275:
	; End of function
	
	.sdecl	'.text.PduR.PduR_CanTpCopyRxData',code,cluster('PduR_CanTpCopyRxData')
	.sect	'.text.PduR.PduR_CanTpCopyRxData'
	.align	2
	
	.global	PduR_CanTpCopyRxData

; ..\EAS\BSW\PduR\PduR.c	  5684  
; ..\EAS\BSW\PduR\PduR.c	  5685  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  5686  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5687  * Function Name: PduR_CanTpCopyRxData    SWS_PduR_00512
; ..\EAS\BSW\PduR\PduR.c	  5688  *
; ..\EAS\BSW\PduR\PduR.c	  5689  * Description:     This function is called when a transport protocol module has data
; ..\EAS\BSW\PduR\PduR.c	  5690  *                to copy for the receiving module. Several calls may be made during
; ..\EAS\BSW\PduR\PduR.c	  5691  *                one transportation of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5692  *
; ..\EAS\BSW\PduR\PduR.c	  5693  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5694  *                 info Pointer to the buffer (SduDataPtr) and its length (SduLength)
; ..\EAS\BSW\PduR\PduR.c	  5695  *                      containing the data to be copied by PDU Router module in case
; ..\EAS\BSW\PduR\PduR.c	  5696  *                      of gateway or upper layer module in case of reception
; ..\EAS\BSW\PduR\PduR.c	  5697  *
; ..\EAS\BSW\PduR\PduR.c	  5698  * Outputs:         bufferSizePtr    Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  5699  *
; ..\EAS\BSW\PduR\PduR.c	  5700  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  5701  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5702  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  5703  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_CanTpCopyRxData
; Function PduR_CanTpCopyRxData
.L210:
PduR_CanTpCopyRxData:	.type	func
	mov.aa	a15,a4
.L811:
	mov.aa	a6,a5
.L812:

; ..\EAS\BSW\PduR\PduR.c	  5704  (
; ..\EAS\BSW\PduR\PduR.c	  5705      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  5706      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  5707      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  5708  )
; ..\EAS\BSW\PduR\PduR.c	  5709  {
; ..\EAS\BSW\PduR\PduR.c	  5710      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
	mov	d2,#1
.L813:

; ..\EAS\BSW\PduR\PduR.c	  5711  #if(PDUR_MAX_NUMOFCANTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5712      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  5713  #endif
; ..\EAS\BSW\PduR\PduR.c	  5714  
; ..\EAS\BSW\PduR\PduR.c	  5715      if(!PDUR_IS_INITIALIZED())
	movh.a	a2,#@his(PduR_InitStatus)
	ld.bu	d15,[a2]@los(PduR_InitStatus)
	jne	d15,#1,.L121
.L980:

; ..\EAS\BSW\PduR\PduR.c	  5716      {
; ..\EAS\BSW\PduR\PduR.c	  5717          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  5718          PDUR_DET_REPORT_ERROR(PDUR_CANTP_COPYRXDATA_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  5719      }
; ..\EAS\BSW\PduR\PduR.c	  5720      else if(id >= PDUR_GET_NUM_CANTPRXPDU())
	jge.u	d4,#2,.L122
.L981:

; ..\EAS\BSW\PduR\PduR.c	  5721      {
; ..\EAS\BSW\PduR\PduR.c	  5722          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  5723          PDUR_DET_REPORT_ERROR(PDUR_CANTP_COPYRXDATA_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  5724      }
; ..\EAS\BSW\PduR\PduR.c	  5725      else if(NULL_PTR == info)
	mov.a	a2,#0
.L982:
	jeq.a	a2,a15,.L123
.L983:

; ..\EAS\BSW\PduR\PduR.c	  5726      {
; ..\EAS\BSW\PduR\PduR.c	  5727          PDUR_DET_REPORT_ERROR(PDUR_CANTP_COPYRXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  5728      }
; ..\EAS\BSW\PduR\PduR.c	  5729      else
; ..\EAS\BSW\PduR\PduR.c	  5730      {
; ..\EAS\BSW\PduR\PduR.c	  5731  #if(PDUR_MAX_NUMOFCANTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5732          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5733          pRxPduInfo = &(PDUR_CANTP_RXPDUINFO(id));
	mul	d15,d4,#12
	movh.a	a2,#@his(PduRCanTpRxPduInfo)
	lea	a2,[a2]@los(PduRCanTpRxPduInfo)
	addsc.a	a4,a2,d15,#0
.L810:

; ..\EAS\BSW\PduR\PduR.c	  5734          result = PduR_LowerTpMultiCopyRxData(pRxPduInfo, info, bufferSizePtr);
	mov.aa	a5,a15
.L809:
	j	PduR_LowerTpMultiCopyRxData
.L123:
.L122:
.L121:

; ..\EAS\BSW\PduR\PduR.c	  5735          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5736  #endif
; ..\EAS\BSW\PduR\PduR.c	  5737      }
; ..\EAS\BSW\PduR\PduR.c	  5738  
; ..\EAS\BSW\PduR\PduR.c	  5739      return result;
; ..\EAS\BSW\PduR\PduR.c	  5740  }
	ret
.L463:
	
__PduR_CanTpCopyRxData_function_end:
	.size	PduR_CanTpCopyRxData,__PduR_CanTpCopyRxData_function_end-PduR_CanTpCopyRxData
.L280:
	; End of function
	
	.sdecl	'.text.PduR.PduR_CanTpRxIndication',code,cluster('PduR_CanTpRxIndication')
	.sect	'.text.PduR.PduR_CanTpRxIndication'
	.align	2
	
	.global	PduR_CanTpRxIndication

; ..\EAS\BSW\PduR\PduR.c	  5741  
; ..\EAS\BSW\PduR\PduR.c	  5742  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  5743  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5744  * Function Name: PduR_CanTpRxIndication    SWS_PduR_00375
; ..\EAS\BSW\PduR\PduR.c	  5745  *
; ..\EAS\BSW\PduR\PduR.c	  5746  * Description:     Called by the transport protocol module after an I-PDU has been
; ..\EAS\BSW\PduR\PduR.c	  5747  *                received successfully or when an error occurred. It is also used
; ..\EAS\BSW\PduR\PduR.c	  5748  *                to confirm cancellation of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5749  *
; ..\EAS\BSW\PduR\PduR.c	  5750  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5751  *                 result Result of the reception.
; ..\EAS\BSW\PduR\PduR.c	  5752  *
; ..\EAS\BSW\PduR\PduR.c	  5753  * Outputs:         bufferSizePtr  Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  5754  *
; ..\EAS\BSW\PduR\PduR.c	  5755  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  5756  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5757  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  5758  FUNC(void, PDUR_CODE) PduR_CanTpRxIndication
; Function PduR_CanTpRxIndication
.L212:
PduR_CanTpRxIndication:	.type	func

; ..\EAS\BSW\PduR\PduR.c	  5759  (
; ..\EAS\BSW\PduR\PduR.c	  5760      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  5761      Std_ReturnType result
; ..\EAS\BSW\PduR\PduR.c	  5762  )
; ..\EAS\BSW\PduR\PduR.c	  5763  {
; ..\EAS\BSW\PduR\PduR.c	  5764  #if(PDUR_MAX_NUMOFCANTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5765      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  5766  #endif
; ..\EAS\BSW\PduR\PduR.c	  5767  
; ..\EAS\BSW\PduR\PduR.c	  5768      if(!PDUR_IS_INITIALIZED())
	movh.a	a15,#@his(PduR_InitStatus)
	ld.bu	d15,[a15]@los(PduR_InitStatus)
	jne	d15,#1,.L125
.L988:

; ..\EAS\BSW\PduR\PduR.c	  5769      {
; ..\EAS\BSW\PduR\PduR.c	  5770          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  5771          PDUR_DET_REPORT_ERROR(PDUR_CANTP_RXINDICATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  5772      }
; ..\EAS\BSW\PduR\PduR.c	  5773      else if(id >= PDUR_GET_NUM_CANTPRXPDU())
	jge.u	d4,#2,.L126
.L989:

; ..\EAS\BSW\PduR\PduR.c	  5774      {
; ..\EAS\BSW\PduR\PduR.c	  5775          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  5776          PDUR_DET_REPORT_ERROR(PDUR_CANTP_RXINDICATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  5777      }
; ..\EAS\BSW\PduR\PduR.c	  5778      else
; ..\EAS\BSW\PduR\PduR.c	  5779      {
; ..\EAS\BSW\PduR\PduR.c	  5780  #if(PDUR_MAX_NUMOFCANTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5781          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5782          pRxPduInfo = &(PDUR_CANTP_RXPDUINFO(id));
	mul	d15,d4,#12
	movh.a	a15,#@his(PduRCanTpRxPduInfo)
	lea	a15,[a15]@los(PduRCanTpRxPduInfo)
	addsc.a	a4,a15,d15,#0
.L815:

; ..\EAS\BSW\PduR\PduR.c	  5783          PduR_LowerTpMultiRxIndication(pRxPduInfo, result);
	mov	d4,d5
.L814:
	j	PduR_LowerTpMultiRxIndication
.L126:
.L125:

; ..\EAS\BSW\PduR\PduR.c	  5784          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5785  #endif
; ..\EAS\BSW\PduR\PduR.c	  5786      }
; ..\EAS\BSW\PduR\PduR.c	  5787  }
	ret
.L469:
	
__PduR_CanTpRxIndication_function_end:
	.size	PduR_CanTpRxIndication,__PduR_CanTpRxIndication_function_end-PduR_CanTpRxIndication
.L285:
	; End of function
	
	.sdecl	'.text.PduR.PduR_CanTpCopyTxData',code,cluster('PduR_CanTpCopyTxData')
	.sect	'.text.PduR.PduR_CanTpCopyTxData'
	.align	2
	
	.global	PduR_CanTpCopyTxData

; ..\EAS\BSW\PduR\PduR.c	  5788  
; ..\EAS\BSW\PduR\PduR.c	  5789  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  5790  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5791  * Function Name: PduR_CanTpCopyTxData    SWS_PduR_00518
; ..\EAS\BSW\PduR\PduR.c	  5792  *
; ..\EAS\BSW\PduR\PduR.c	  5793  * Description:     This function is called by the transport protocol module to query
; ..\EAS\BSW\PduR\PduR.c	  5794  *                the transmit data of an I-PDU segment.
; ..\EAS\BSW\PduR\PduR.c	  5795  *
; ..\EAS\BSW\PduR\PduR.c	  5796  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5797  *                 info Provides destination buffer and the number of bytes to copy.
; ..\EAS\BSW\PduR\PduR.c	  5798  *                     In case of gateway the PDU Router module will copy, otherwise
; ..\EAS\BSW\PduR\PduR.c	  5799  *                     the source upper layer module will copy the data. If not enough
; ..\EAS\BSW\PduR\PduR.c	  5800  *                     transmit data is available, no data is copied. The transport
; ..\EAS\BSW\PduR\PduR.c	  5801  *                     protocol module will retry. A copy size of 0 can be used to
; ..\EAS\BSW\PduR\PduR.c	  5802  *                     indicate state changes in the retry parameter.
; ..\EAS\BSW\PduR\PduR.c	  5803  *                retry This parameter is used to retransmit data because problems
; ..\EAS\BSW\PduR\PduR.c	  5804  *                      during the last service call.
; ..\EAS\BSW\PduR\PduR.c	  5805  *
; ..\EAS\BSW\PduR\PduR.c	  5806  *
; ..\EAS\BSW\PduR\PduR.c	  5807  * Outputs:         availableDataPtr  Indicates the remaining number of bytes that are
; ..\EAS\BSW\PduR\PduR.c	  5808  *                                  available in the PduR Tx buffer. AvailableTxDataCntPtr
; ..\EAS\BSW\PduR\PduR.c	  5809  *                                  can be used by TP modules that support dynamic payload
; ..\EAS\BSW\PduR\PduR.c	  5810  *                                  lengths (e.g. Iso FrTp) to determine the size of the
; ..\EAS\BSW\PduR\PduR.c	  5811  *                                  following CFs.
; ..\EAS\BSW\PduR\PduR.c	  5812  *
; ..\EAS\BSW\PduR\PduR.c	  5813  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  5814  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5815  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  5816  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_CanTpCopyTxData
; Function PduR_CanTpCopyTxData
.L214:
PduR_CanTpCopyTxData:	.type	func

; ..\EAS\BSW\PduR\PduR.c	  5817  (
; ..\EAS\BSW\PduR\PduR.c	  5818      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  5819      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  5820      P2VAR(RetryInfoType, AUTOMATIC, PDUR_APPL_DATA) retry,
; ..\EAS\BSW\PduR\PduR.c	  5821      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) availableDataPtr
; ..\EAS\BSW\PduR\PduR.c	  5822  )
; ..\EAS\BSW\PduR\PduR.c	  5823  {
; ..\EAS\BSW\PduR\PduR.c	  5824      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
	mov	d2,#1
.L817:

; ..\EAS\BSW\PduR\PduR.c	  5825  #if(PDUR_MAX_NUMOFCANTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5826      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  5827      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  5828  #endif
; ..\EAS\BSW\PduR\PduR.c	  5829  
; ..\EAS\BSW\PduR\PduR.c	  5830      if(!PDUR_IS_INITIALIZED())
	movh.a	a15,#@his(PduR_InitStatus)
	ld.bu	d15,[a15]@los(PduR_InitStatus)
	jne	d15,#1,.L127
.L994:

; ..\EAS\BSW\PduR\PduR.c	  5831      {
; ..\EAS\BSW\PduR\PduR.c	  5832          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  5833          PDUR_DET_REPORT_ERROR(PDUR_CANTP_COPYTXDATA_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  5834      }
; ..\EAS\BSW\PduR\PduR.c	  5835      else if(id >= PDUR_GET_NUM_CANTPTXPDU())
	jne	d4,#0,.L128
.L995:

; ..\EAS\BSW\PduR\PduR.c	  5836      {
; ..\EAS\BSW\PduR\PduR.c	  5837          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  5838          PDUR_DET_REPORT_ERROR(PDUR_CANTP_COPYTXDATA_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  5839      }
; ..\EAS\BSW\PduR\PduR.c	  5840      else if(NULL_PTR == info)
	mov.a	a15,#0
.L996:
	jeq.a	a15,a4,.L129
.L997:

; ..\EAS\BSW\PduR\PduR.c	  5841      {
; ..\EAS\BSW\PduR\PduR.c	  5842          PDUR_DET_REPORT_ERROR(PDUR_CANTP_COPYTXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  5843      }
; ..\EAS\BSW\PduR\PduR.c	  5844      else if(NULL_PTR == availableDataPtr)
	jeq.a	a15,a6,.L130
.L998:

; ..\EAS\BSW\PduR\PduR.c	  5845      {
; ..\EAS\BSW\PduR\PduR.c	  5846          PDUR_DET_REPORT_ERROR(PDUR_CANTP_COPYTXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  5847      }
; ..\EAS\BSW\PduR\PduR.c	  5848      else
; ..\EAS\BSW\PduR\PduR.c	  5849      {
; ..\EAS\BSW\PduR\PduR.c	  5850  #if(PDUR_MAX_NUMOFCANTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5851          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5852          PathId = PDUR_CANTP_TXCONFPDUINFO(id).PathId;
	movh.a	a15,#@his(PduRCanTpTxConfPduInfo)
	lea	a15,[a15]@los(PduRCanTpTxConfPduInfo)
	addsc.a	a15,a15,d4,#1
.L999:
	ld.bu	d0,[a15]
.L818:

; ..\EAS\BSW\PduR\PduR.c	  5853          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
	mul	d15,d0,#20
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1000:
	ld.hu	d15,[a15]14
.L819:

; ..\EAS\BSW\PduR\PduR.c	  5854          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
	mov.u	d1,#65535
.L1001:
	jeq	d15,d1,.L131
.L1002:
	movh.a	a15,#@his(PduR_RoutingPathGroupEnabled)
	lea	a15,[a15]@los(PduR_RoutingPathGroupEnabled)
.L1003:
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L820:
	jne	d15,#1,.L132
.L131:

; ..\EAS\BSW\PduR\PduR.c	  5855          {
; ..\EAS\BSW\PduR\PduR.c	  5856              result = PduR_LowerTpCopyTxData(PathId, PDUR_CANTP_TXCONFPDUINFO(id).UpperPduId, info, retry, availableDataPtr);
	movh.a	a15,#@his(PduRCanTpTxConfPduInfo)
	lea	a15,[a15]@los(PduRCanTpTxConfPduInfo)
	addsc.a	a15,a15,d4,#1
.L1004:
	ld.bu	d5,[a15]1
.L1005:
	mov	d4,d0
.L816:
	j	PduR_LowerTpCopyTxData
.L132:
.L130:
.L129:
.L128:
.L127:

; ..\EAS\BSW\PduR\PduR.c	  5857          }
; ..\EAS\BSW\PduR\PduR.c	  5858          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5859  #endif
; ..\EAS\BSW\PduR\PduR.c	  5860      }
; ..\EAS\BSW\PduR\PduR.c	  5861      return result;
; ..\EAS\BSW\PduR\PduR.c	  5862  }
	ret
.L473:
	
__PduR_CanTpCopyTxData_function_end:
	.size	PduR_CanTpCopyTxData,__PduR_CanTpCopyTxData_function_end-PduR_CanTpCopyTxData
.L290:
	; End of function
	
	.sdecl	'.text.PduR.PduR_CanTpTxConfirmation',code,cluster('PduR_CanTpTxConfirmation')
	.sect	'.text.PduR.PduR_CanTpTxConfirmation'
	.align	2
	
	.global	PduR_CanTpTxConfirmation

; ..\EAS\BSW\PduR\PduR.c	  5863  
; ..\EAS\BSW\PduR\PduR.c	  5864  
; ..\EAS\BSW\PduR\PduR.c	  5865  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  5866  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5867  * Function Name: PduR_CanTpTxConfirmation    SWS_PduR_00381
; ..\EAS\BSW\PduR\PduR.c	  5868  *
; ..\EAS\BSW\PduR\PduR.c	  5869  * Description:     This function is called after the I-PDU has been transmitted on
; ..\EAS\BSW\PduR\PduR.c	  5870  *                its network, the result indicates whether the transmission was
; ..\EAS\BSW\PduR\PduR.c	  5871  *                successful or not
; ..\EAS\BSW\PduR\PduR.c	  5872  *
; ..\EAS\BSW\PduR\PduR.c	  5873  * Inputs:         id - Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5874  *                result - Result of the transmission of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5875  *
; ..\EAS\BSW\PduR\PduR.c	  5876  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  5877  *
; ..\EAS\BSW\PduR\PduR.c	  5878  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  5879  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5880  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  5881  FUNC(void, PDUR_CODE) PduR_CanTpTxConfirmation
; Function PduR_CanTpTxConfirmation
.L216:
PduR_CanTpTxConfirmation:	.type	func
	mov	d6,d5
.L823:

; ..\EAS\BSW\PduR\PduR.c	  5882  (
; ..\EAS\BSW\PduR\PduR.c	  5883      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  5884      Std_ReturnType result
; ..\EAS\BSW\PduR\PduR.c	  5885  )
; ..\EAS\BSW\PduR\PduR.c	  5886  {
; ..\EAS\BSW\PduR\PduR.c	  5887  #if(PDUR_MAX_NUMOFCANTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5888      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  5889      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  5890  #endif
; ..\EAS\BSW\PduR\PduR.c	  5891  
; ..\EAS\BSW\PduR\PduR.c	  5892      if(!PDUR_IS_INITIALIZED())
	movh.a	a15,#@his(PduR_InitStatus)
	ld.bu	d15,[a15]@los(PduR_InitStatus)
	jne	d15,#1,.L134
.L1010:

; ..\EAS\BSW\PduR\PduR.c	  5893      {
; ..\EAS\BSW\PduR\PduR.c	  5894          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  5895          PDUR_DET_REPORT_ERROR(PDUR_CANTP_TXCONFIRMATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  5896      }
; ..\EAS\BSW\PduR\PduR.c	  5897      else if(id >= PDUR_GET_NUM_CANTPTXPDU())
	jne	d4,#0,.L135
.L1011:

; ..\EAS\BSW\PduR\PduR.c	  5898      {
; ..\EAS\BSW\PduR\PduR.c	  5899          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  5900          PDUR_DET_REPORT_ERROR(PDUR_CANTP_TXCONFIRMATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  5901      }
; ..\EAS\BSW\PduR\PduR.c	  5902      else
; ..\EAS\BSW\PduR\PduR.c	  5903      {
; ..\EAS\BSW\PduR\PduR.c	  5904  #if(PDUR_MAX_NUMOFCANTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5905          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5906          PathId = PDUR_CANTP_TXCONFPDUINFO(id).PathId;
	movh.a	a15,#@his(PduRCanTpTxConfPduInfo)
	lea	a15,[a15]@los(PduRCanTpTxConfPduInfo)
	addsc.a	a15,a15,d4,#1
.L1012:
	ld.bu	d0,[a15]
.L824:

; ..\EAS\BSW\PduR\PduR.c	  5907          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
	mul	d15,d0,#20
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1013:
	ld.hu	d15,[a15]14
.L825:

; ..\EAS\BSW\PduR\PduR.c	  5908          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
	mov.u	d1,#65535
.L1014:
	jeq	d15,d1,.L136
.L1015:
	movh.a	a15,#@his(PduR_RoutingPathGroupEnabled)
	lea	a15,[a15]@los(PduR_RoutingPathGroupEnabled)
.L1016:
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L826:
	jne	d15,#1,.L137
.L136:

; ..\EAS\BSW\PduR\PduR.c	  5909          {
; ..\EAS\BSW\PduR\PduR.c	  5910              PduR_LowerTpTxConfirmation(PathId, PDUR_CANTP_TXCONFPDUINFO(id).UpperPduId, result);
	movh.a	a15,#@his(PduRCanTpTxConfPduInfo)
	lea	a15,[a15]@los(PduRCanTpTxConfPduInfo)
	addsc.a	a15,a15,d4,#1
.L1017:
	ld.bu	d5,[a15]1
.L822:
	mov	d4,d0
.L821:
	j	PduR_LowerTpTxConfirmation
.L137:
.L135:
.L134:

; ..\EAS\BSW\PduR\PduR.c	  5911          }
; ..\EAS\BSW\PduR\PduR.c	  5912          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5913  #endif
; ..\EAS\BSW\PduR\PduR.c	  5914      }
; ..\EAS\BSW\PduR\PduR.c	  5915  }
	ret
.L482:
	
__PduR_CanTpTxConfirmation_function_end:
	.size	PduR_CanTpTxConfirmation,__PduR_CanTpTxConfirmation_function_end-PduR_CanTpTxConfirmation
.L295:
	; End of function
	
	.sdecl	'.text.PduR.PduR_DoIPTpStartOfReception',code,cluster('PduR_DoIPTpStartOfReception')
	.sect	'.text.PduR.PduR_DoIPTpStartOfReception'
	.align	2
	
	.global	PduR_DoIPTpStartOfReception

; ..\EAS\BSW\PduR\PduR.c	  5916  #endif
; ..\EAS\BSW\PduR\PduR.c	  5917  
; ..\EAS\BSW\PduR\PduR.c	  5918  #if(STD_ON == PDUR_SOMEIPTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  5919  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  5920  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5921  * Function Name: PduR_SomeIpTpStartOfReception
; ..\EAS\BSW\PduR\PduR.c	  5922  *
; ..\EAS\BSW\PduR\PduR.c	  5923  * Description:   This function is called at the start of receiving an N-SDU.
; ..\EAS\BSW\PduR\PduR.c	  5924  *                The N-SDU might be fragmented into multiple N-PDUs (FF with one
; ..\EAS\BSW\PduR\PduR.c	  5925  *                or more following CFs) or might consist of a single N-PDU (SF).
; ..\EAS\BSW\PduR\PduR.c	  5926  *
; ..\EAS\BSW\PduR\PduR.c	  5927  * Inputs:        id   Identification of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5928  *                TpSduLength  Total length of the PDU to be received.
; ..\EAS\BSW\PduR\PduR.c	  5929  *
; ..\EAS\BSW\PduR\PduR.c	  5930  * Outputs:       bufferSizePtr  Available receive buffer in the receiving module.
; ..\EAS\BSW\PduR\PduR.c	  5931  *                               This parameter will be used to compute the Block
; ..\EAS\BSW\PduR\PduR.c	  5932  *                               Size (BS) in the transport protocol module
; ..\EAS\BSW\PduR\PduR.c	  5933  *
; ..\EAS\BSW\PduR\PduR.c	  5934  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  5935  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5936  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  5937  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_SomeIpTpStartOfReception
; ..\EAS\BSW\PduR\PduR.c	  5938  (
; ..\EAS\BSW\PduR\PduR.c	  5939      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  5940      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  5941      PduLengthType TpSduLength,
; ..\EAS\BSW\PduR\PduR.c	  5942      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  5943  )
; ..\EAS\BSW\PduR\PduR.c	  5944  {
; ..\EAS\BSW\PduR\PduR.c	  5945      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  5946  #if(PDUR_MAX_NUMOFSOMEIPTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5947      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  5948  #endif
; ..\EAS\BSW\PduR\PduR.c	  5949  
; ..\EAS\BSW\PduR\PduR.c	  5950      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  5951      {
; ..\EAS\BSW\PduR\PduR.c	  5952          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  5953          PDUR_DET_REPORT_ERROR(PDUR_SOMEIPTP_STARTOFRECEPTION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  5954      }
; ..\EAS\BSW\PduR\PduR.c	  5955      else if(id >= PDUR_GET_NUM_SOMEIPTPRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  5956      {
; ..\EAS\BSW\PduR\PduR.c	  5957          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  5958          PDUR_DET_REPORT_ERROR(PDUR_SOMEIPTP_STARTOFRECEPTION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  5959      }
; ..\EAS\BSW\PduR\PduR.c	  5960      else if(NULL_PTR == bufferSizePtr)
; ..\EAS\BSW\PduR\PduR.c	  5961      {
; ..\EAS\BSW\PduR\PduR.c	  5962          PDUR_DET_REPORT_ERROR(PDUR_SOMEIPTP_STARTOFRECEPTION_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  5963      }
; ..\EAS\BSW\PduR\PduR.c	  5964      else
; ..\EAS\BSW\PduR\PduR.c	  5965      {
; ..\EAS\BSW\PduR\PduR.c	  5966  #if(PDUR_MAX_NUMOFSOMEIPTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  5967          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5968          pRxPduInfo = &(PDUR_SOMEIPTP_RXPDUINFO(id));
; ..\EAS\BSW\PduR\PduR.c	  5969          result = PduR_LowerTpMultiStartOfReception(pRxPduInfo, info, TpSduLength, bufferSizePtr);
; ..\EAS\BSW\PduR\PduR.c	  5970          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  5971  #endif
; ..\EAS\BSW\PduR\PduR.c	  5972      }
; ..\EAS\BSW\PduR\PduR.c	  5973  
; ..\EAS\BSW\PduR\PduR.c	  5974      return result;
; ..\EAS\BSW\PduR\PduR.c	  5975  }
; ..\EAS\BSW\PduR\PduR.c	  5976  
; ..\EAS\BSW\PduR\PduR.c	  5977  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  5978  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5979  * Function Name: PduR_SomeIpTpCopyRxData
; ..\EAS\BSW\PduR\PduR.c	  5980  *
; ..\EAS\BSW\PduR\PduR.c	  5981  * Description:   This function is called when a transport protocol module has data
; ..\EAS\BSW\PduR\PduR.c	  5982  *                to copy for the receiving module. Several calls may be made during
; ..\EAS\BSW\PduR\PduR.c	  5983  *                one transportation of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5984  *
; ..\EAS\BSW\PduR\PduR.c	  5985  * Inputs:        id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  5986  *                info Pointer to the buffer (SduDataPtr) and its length (SduLength)
; ..\EAS\BSW\PduR\PduR.c	  5987  *                      containing the data to be copied by PDU Router module in case
; ..\EAS\BSW\PduR\PduR.c	  5988  *                      of gateway or upper layer module in case of reception
; ..\EAS\BSW\PduR\PduR.c	  5989  *
; ..\EAS\BSW\PduR\PduR.c	  5990  * Outputs:       bufferSizePtr    Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  5991  *
; ..\EAS\BSW\PduR\PduR.c	  5992  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  5993  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  5994  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  5995  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_SomeIpTpCopyRxData
; ..\EAS\BSW\PduR\PduR.c	  5996  (
; ..\EAS\BSW\PduR\PduR.c	  5997      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  5998      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  5999      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  6000  )
; ..\EAS\BSW\PduR\PduR.c	  6001  {
; ..\EAS\BSW\PduR\PduR.c	  6002      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  6003  #if(PDUR_MAX_NUMOFSOMEIPTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6004      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  6005  #endif
; ..\EAS\BSW\PduR\PduR.c	  6006  
; ..\EAS\BSW\PduR\PduR.c	  6007      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  6008      {
; ..\EAS\BSW\PduR\PduR.c	  6009          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  6010          PDUR_DET_REPORT_ERROR(PDUR_SOMEIPTP_COPYRXDATA_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  6011      }
; ..\EAS\BSW\PduR\PduR.c	  6012      else if(id >= PDUR_GET_NUM_SOMEIPTPRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  6013      {
; ..\EAS\BSW\PduR\PduR.c	  6014          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  6015          PDUR_DET_REPORT_ERROR(PDUR_SOMEIPTP_COPYRXDATA_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  6016      }
; ..\EAS\BSW\PduR\PduR.c	  6017      else if(NULL_PTR == info)
; ..\EAS\BSW\PduR\PduR.c	  6018      {
; ..\EAS\BSW\PduR\PduR.c	  6019          PDUR_DET_REPORT_ERROR(PDUR_SOMEIPTP_COPYRXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  6020      }
; ..\EAS\BSW\PduR\PduR.c	  6021      else
; ..\EAS\BSW\PduR\PduR.c	  6022      {
; ..\EAS\BSW\PduR\PduR.c	  6023  #if(PDUR_MAX_NUMOFSOMEIPTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6024          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6025          pRxPduInfo = &(PDUR_SOMEIPTP_RXPDUINFO(id));
; ..\EAS\BSW\PduR\PduR.c	  6026          result = PduR_LowerTpMultiCopyRxData(pRxPduInfo, info, bufferSizePtr);
; ..\EAS\BSW\PduR\PduR.c	  6027          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6028  #endif
; ..\EAS\BSW\PduR\PduR.c	  6029      }
; ..\EAS\BSW\PduR\PduR.c	  6030  
; ..\EAS\BSW\PduR\PduR.c	  6031      return result;
; ..\EAS\BSW\PduR\PduR.c	  6032  }
; ..\EAS\BSW\PduR\PduR.c	  6033  
; ..\EAS\BSW\PduR\PduR.c	  6034  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  6035  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6036  * Function Name: PduR_SomeIpTpRxIndication
; ..\EAS\BSW\PduR\PduR.c	  6037  *
; ..\EAS\BSW\PduR\PduR.c	  6038  * Description:   Called by the transport protocol module after an I-PDU has been
; ..\EAS\BSW\PduR\PduR.c	  6039  *                received successfully or when an error occurred. It is also used
; ..\EAS\BSW\PduR\PduR.c	  6040  *                to confirm cancellation of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6041  *
; ..\EAS\BSW\PduR\PduR.c	  6042  * Inputs:        id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6043  *                result Result of the reception.
; ..\EAS\BSW\PduR\PduR.c	  6044  *
; ..\EAS\BSW\PduR\PduR.c	  6045  * Outputs:       bufferSizePtr  Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  6046  *
; ..\EAS\BSW\PduR\PduR.c	  6047  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  6048  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6049  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  6050  FUNC(void, PDUR_CODE) PduR_SomeIpTpRxIndication
; ..\EAS\BSW\PduR\PduR.c	  6051  (
; ..\EAS\BSW\PduR\PduR.c	  6052      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  6053      Std_ReturnType result
; ..\EAS\BSW\PduR\PduR.c	  6054  )
; ..\EAS\BSW\PduR\PduR.c	  6055  {
; ..\EAS\BSW\PduR\PduR.c	  6056  #if(PDUR_MAX_NUMOFSOMEIPTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6057      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  6058  #endif
; ..\EAS\BSW\PduR\PduR.c	  6059  
; ..\EAS\BSW\PduR\PduR.c	  6060      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  6061      {
; ..\EAS\BSW\PduR\PduR.c	  6062          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  6063          PDUR_DET_REPORT_ERROR(PDUR_SOMEIPTP_RXINDICATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  6064      }
; ..\EAS\BSW\PduR\PduR.c	  6065      else if(id >= PDUR_GET_NUM_SOMEIPTPRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  6066      {
; ..\EAS\BSW\PduR\PduR.c	  6067          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  6068          PDUR_DET_REPORT_ERROR(PDUR_SOMEIPTP_RXINDICATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  6069      }
; ..\EAS\BSW\PduR\PduR.c	  6070      else
; ..\EAS\BSW\PduR\PduR.c	  6071      {
; ..\EAS\BSW\PduR\PduR.c	  6072  #if(PDUR_MAX_NUMOFSOMEIPTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6073          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6074          pRxPduInfo = &(PDUR_SOMEIPTP_RXPDUINFO(id));
; ..\EAS\BSW\PduR\PduR.c	  6075          PduR_LowerTpMultiRxIndication(pRxPduInfo, result);
; ..\EAS\BSW\PduR\PduR.c	  6076          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6077  #endif
; ..\EAS\BSW\PduR\PduR.c	  6078      }
; ..\EAS\BSW\PduR\PduR.c	  6079  }
; ..\EAS\BSW\PduR\PduR.c	  6080  
; ..\EAS\BSW\PduR\PduR.c	  6081  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  6082  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6083  * Function Name: PduR_SomeIpTpCopyTxData
; ..\EAS\BSW\PduR\PduR.c	  6084  *
; ..\EAS\BSW\PduR\PduR.c	  6085  * Description:   This function is called by the transport protocol module to query
; ..\EAS\BSW\PduR\PduR.c	  6086  *                the transmit data of an I-PDU segment.
; ..\EAS\BSW\PduR\PduR.c	  6087  *
; ..\EAS\BSW\PduR\PduR.c	  6088  * Inputs:        id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6089  *                info Provides destination buffer and the number of bytes to copy.
; ..\EAS\BSW\PduR\PduR.c	  6090  *                     In case of gateway the PDU Router module will copy, otherwise
; ..\EAS\BSW\PduR\PduR.c	  6091  *                     the source upper layer module will copy the data. If not enough
; ..\EAS\BSW\PduR\PduR.c	  6092  *                     transmit data is available, no data is copied. The transport
; ..\EAS\BSW\PduR\PduR.c	  6093  *                     protocol module will retry. A copy size of 0 can be used to
; ..\EAS\BSW\PduR\PduR.c	  6094  *                     indicate state changes in the retry parameter.
; ..\EAS\BSW\PduR\PduR.c	  6095  *                retry This parameter is used to retransmit data because problems
; ..\EAS\BSW\PduR\PduR.c	  6096  *                      during the last service call.
; ..\EAS\BSW\PduR\PduR.c	  6097  *
; ..\EAS\BSW\PduR\PduR.c	  6098  *
; ..\EAS\BSW\PduR\PduR.c	  6099  * Outputs:       availableDataPtr  Indicates the remaining number of bytes that are
; ..\EAS\BSW\PduR\PduR.c	  6100  *                                  available in the PduR Tx buffer. AvailableTxDataCntPtr
; ..\EAS\BSW\PduR\PduR.c	  6101  *                                  can be used by TP modules that support dynamic payload
; ..\EAS\BSW\PduR\PduR.c	  6102  *                                  lengths (e.g. Iso FrTp) to determine the size of the
; ..\EAS\BSW\PduR\PduR.c	  6103  *                                  following CFs.
; ..\EAS\BSW\PduR\PduR.c	  6104  *
; ..\EAS\BSW\PduR\PduR.c	  6105  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  6106  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6107  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  6108  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_SomeIpTpCopyTxData
; ..\EAS\BSW\PduR\PduR.c	  6109  (
; ..\EAS\BSW\PduR\PduR.c	  6110      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  6111      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  6112      P2VAR(RetryInfoType, AUTOMATIC, PDUR_APPL_DATA) retry,
; ..\EAS\BSW\PduR\PduR.c	  6113      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) availableDataPtr
; ..\EAS\BSW\PduR\PduR.c	  6114  )
; ..\EAS\BSW\PduR\PduR.c	  6115  {
; ..\EAS\BSW\PduR\PduR.c	  6116      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  6117  #if(PDUR_MAX_NUMOFSOMEIPTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6118      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  6119      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  6120  #endif
; ..\EAS\BSW\PduR\PduR.c	  6121  
; ..\EAS\BSW\PduR\PduR.c	  6122      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  6123      {
; ..\EAS\BSW\PduR\PduR.c	  6124          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  6125          PDUR_DET_REPORT_ERROR(PDUR_SOMEIPTP_COPYTXDATA_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  6126      }
; ..\EAS\BSW\PduR\PduR.c	  6127      else if(id >= PDUR_GET_NUM_SOMEIPTPTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  6128      {
; ..\EAS\BSW\PduR\PduR.c	  6129          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  6130          PDUR_DET_REPORT_ERROR(PDUR_SOMEIPTP_COPYTXDATA_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  6131      }
; ..\EAS\BSW\PduR\PduR.c	  6132      else if(NULL_PTR == info)
; ..\EAS\BSW\PduR\PduR.c	  6133      {
; ..\EAS\BSW\PduR\PduR.c	  6134          PDUR_DET_REPORT_ERROR(PDUR_SOMEIPTP_COPYTXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  6135      }
; ..\EAS\BSW\PduR\PduR.c	  6136      else if(NULL_PTR == availableDataPtr)
; ..\EAS\BSW\PduR\PduR.c	  6137      {
; ..\EAS\BSW\PduR\PduR.c	  6138          PDUR_DET_REPORT_ERROR(PDUR_SOMEIPTP_COPYTXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  6139      }
; ..\EAS\BSW\PduR\PduR.c	  6140      else
; ..\EAS\BSW\PduR\PduR.c	  6141      {
; ..\EAS\BSW\PduR\PduR.c	  6142  #if(PDUR_MAX_NUMOFSOMEIPTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6143          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6144          PathId = PDUR_SOMEIPTP_TXCONFPDUINFO(id).PathId;
; ..\EAS\BSW\PduR\PduR.c	  6145          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  6146          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  6147          {
; ..\EAS\BSW\PduR\PduR.c	  6148              result = PduR_LowerTpCopyTxData(PathId, PDUR_SOMEIPTP_TXCONFPDUINFO(id).UpperPduId, info, retry, availableDataPtr);
; ..\EAS\BSW\PduR\PduR.c	  6149          }
; ..\EAS\BSW\PduR\PduR.c	  6150          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6151  #endif
; ..\EAS\BSW\PduR\PduR.c	  6152      }
; ..\EAS\BSW\PduR\PduR.c	  6153      return result;
; ..\EAS\BSW\PduR\PduR.c	  6154  }
; ..\EAS\BSW\PduR\PduR.c	  6155  
; ..\EAS\BSW\PduR\PduR.c	  6156  
; ..\EAS\BSW\PduR\PduR.c	  6157  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  6158  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6159  * Function Name: PduR_SomeIpTpTxConfirmation
; ..\EAS\BSW\PduR\PduR.c	  6160  *
; ..\EAS\BSW\PduR\PduR.c	  6161  * Description:   This function is called after the I-PDU has been transmitted on
; ..\EAS\BSW\PduR\PduR.c	  6162  *                its network, the result indicates whether the transmission was
; ..\EAS\BSW\PduR\PduR.c	  6163  *                successful or not
; ..\EAS\BSW\PduR\PduR.c	  6164  *
; ..\EAS\BSW\PduR\PduR.c	  6165  * Inputs:        id - Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6166  *                result - Result of the transmission of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6167  *
; ..\EAS\BSW\PduR\PduR.c	  6168  * Outputs:       None
; ..\EAS\BSW\PduR\PduR.c	  6169  *
; ..\EAS\BSW\PduR\PduR.c	  6170  * Limitations:   None
; ..\EAS\BSW\PduR\PduR.c	  6171  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6172  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  6173  FUNC(void, PDUR_CODE) PduR_SomeIpTpTxConfirmation
; ..\EAS\BSW\PduR\PduR.c	  6174  (
; ..\EAS\BSW\PduR\PduR.c	  6175      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  6176      Std_ReturnType result
; ..\EAS\BSW\PduR\PduR.c	  6177  )
; ..\EAS\BSW\PduR\PduR.c	  6178  {
; ..\EAS\BSW\PduR\PduR.c	  6179  #if(PDUR_MAX_NUMOFSOMEIPTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6180      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  6181      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  6182  #endif
; ..\EAS\BSW\PduR\PduR.c	  6183  
; ..\EAS\BSW\PduR\PduR.c	  6184      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  6185      {
; ..\EAS\BSW\PduR\PduR.c	  6186          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  6187          PDUR_DET_REPORT_ERROR(PDUR_SOMEIPTP_TXCONFIRMATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  6188      }
; ..\EAS\BSW\PduR\PduR.c	  6189      else if(id >= PDUR_GET_NUM_SOMEIPTPTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  6190      {
; ..\EAS\BSW\PduR\PduR.c	  6191          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  6192          PDUR_DET_REPORT_ERROR(PDUR_SOMEIPTP_TXCONFIRMATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  6193      }
; ..\EAS\BSW\PduR\PduR.c	  6194      else
; ..\EAS\BSW\PduR\PduR.c	  6195      {
; ..\EAS\BSW\PduR\PduR.c	  6196  #if(PDUR_MAX_NUMOFSOMEIPTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6197          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6198          PathId = PDUR_SOMEIPTP_TXCONFPDUINFO(id).PathId;
; ..\EAS\BSW\PduR\PduR.c	  6199          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  6200          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  6201          {
; ..\EAS\BSW\PduR\PduR.c	  6202              PduR_LowerTpTxConfirmation(PathId, PDUR_SOMEIPTP_TXCONFPDUINFO(id).UpperPduId, result);
; ..\EAS\BSW\PduR\PduR.c	  6203          }
; ..\EAS\BSW\PduR\PduR.c	  6204          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6205  #endif
; ..\EAS\BSW\PduR\PduR.c	  6206      }
; ..\EAS\BSW\PduR\PduR.c	  6207  }
; ..\EAS\BSW\PduR\PduR.c	  6208  #endif/*#if(STD_ON == PDUR_SOMEIPTP_MODULE_SUPPORT)*/
; ..\EAS\BSW\PduR\PduR.c	  6209  
; ..\EAS\BSW\PduR\PduR.c	  6210  #if(STD_ON == PDUR_LINTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  6211  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  6212  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6213  * Function Name: PduR_LinTpStartOfReception    SWS_PduR_00507
; ..\EAS\BSW\PduR\PduR.c	  6214  *
; ..\EAS\BSW\PduR\PduR.c	  6215  * Description:     This function will be called by the transport protocol module at
; ..\EAS\BSW\PduR\PduR.c	  6216  *                the start of receiving an I-PDU. The I-PDU might be fragmented into
; ..\EAS\BSW\PduR\PduR.c	  6217  *                multiple N-PDUs (FF with one or more following CFs) or might consist
; ..\EAS\BSW\PduR\PduR.c	  6218  *                of a single N-PDU (SF). The service shall provide the currently
; ..\EAS\BSW\PduR\PduR.c	  6219  *                available maximum buffer size when invoked with TpSduLength equal to 0.
; ..\EAS\BSW\PduR\PduR.c	  6220  *
; ..\EAS\BSW\PduR\PduR.c	  6221  * Inputs:         id   Identification of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6222  *                 TpSduLength  Total length of the PDU to be received.
; ..\EAS\BSW\PduR\PduR.c	  6223  *
; ..\EAS\BSW\PduR\PduR.c	  6224  * Outputs:         bufferSizePtr  Available receive buffer in the receiving module.
; ..\EAS\BSW\PduR\PduR.c	  6225  *                               This parameter will be used to compute the Block
; ..\EAS\BSW\PduR\PduR.c	  6226  *                               Size (BS) in the transport protocol module
; ..\EAS\BSW\PduR\PduR.c	  6227  *
; ..\EAS\BSW\PduR\PduR.c	  6228  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  6229  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6230  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  6231  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_LinTpStartOfReception
; ..\EAS\BSW\PduR\PduR.c	  6232  (
; ..\EAS\BSW\PduR\PduR.c	  6233      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  6234      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  6235      PduLengthType TpSduLength,
; ..\EAS\BSW\PduR\PduR.c	  6236      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  6237  )
; ..\EAS\BSW\PduR\PduR.c	  6238  {
; ..\EAS\BSW\PduR\PduR.c	  6239      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  6240  #if(PDUR_MAX_NUMOFLINTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6241      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  6242  #endif
; ..\EAS\BSW\PduR\PduR.c	  6243  
; ..\EAS\BSW\PduR\PduR.c	  6244      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  6245      {
; ..\EAS\BSW\PduR\PduR.c	  6246          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  6247          PDUR_DET_REPORT_ERROR(PDUR_LINTP_STARTOFRECEPTION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  6248      }
; ..\EAS\BSW\PduR\PduR.c	  6249      else if(id >= PDUR_GET_NUM_LINTPRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  6250      {
; ..\EAS\BSW\PduR\PduR.c	  6251          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  6252          PDUR_DET_REPORT_ERROR(PDUR_LINTP_STARTOFRECEPTION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  6253      }
; ..\EAS\BSW\PduR\PduR.c	  6254      else if(NULL_PTR == bufferSizePtr)
; ..\EAS\BSW\PduR\PduR.c	  6255      {
; ..\EAS\BSW\PduR\PduR.c	  6256          PDUR_DET_REPORT_ERROR(PDUR_LINTP_STARTOFRECEPTION_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  6257      }
; ..\EAS\BSW\PduR\PduR.c	  6258      else
; ..\EAS\BSW\PduR\PduR.c	  6259      {
; ..\EAS\BSW\PduR\PduR.c	  6260  #if(PDUR_MAX_NUMOFLINTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6261          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6262          pRxPduInfo = &(PDUR_LINTP_RXPDUINFO(id));
; ..\EAS\BSW\PduR\PduR.c	  6263          result = PduR_LowerTpMultiStartOfReception(pRxPduInfo, info, TpSduLength, bufferSizePtr);
; ..\EAS\BSW\PduR\PduR.c	  6264          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6265  #endif
; ..\EAS\BSW\PduR\PduR.c	  6266      }
; ..\EAS\BSW\PduR\PduR.c	  6267  
; ..\EAS\BSW\PduR\PduR.c	  6268      return result;
; ..\EAS\BSW\PduR\PduR.c	  6269  }
; ..\EAS\BSW\PduR\PduR.c	  6270  
; ..\EAS\BSW\PduR\PduR.c	  6271  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  6272  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6273  * Function Name: PduR_LinTpCopyRxData    SWS_PduR_00512
; ..\EAS\BSW\PduR\PduR.c	  6274  *
; ..\EAS\BSW\PduR\PduR.c	  6275  * Description:     This function is called when a transport protocol module has data
; ..\EAS\BSW\PduR\PduR.c	  6276  *                to copy for the receiving module. Several calls may be made during
; ..\EAS\BSW\PduR\PduR.c	  6277  *                one transportation of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6278  *
; ..\EAS\BSW\PduR\PduR.c	  6279  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6280  *                 info Pointer to the buffer (SduDataPtr) and its length (SduLength)
; ..\EAS\BSW\PduR\PduR.c	  6281  *                      containing the data to be copied by PDU Router module in case
; ..\EAS\BSW\PduR\PduR.c	  6282  *                      of gateway or upper layer module in case of reception
; ..\EAS\BSW\PduR\PduR.c	  6283  *
; ..\EAS\BSW\PduR\PduR.c	  6284  * Outputs:         bufferSizePtr    Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  6285  *
; ..\EAS\BSW\PduR\PduR.c	  6286  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  6287  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6288  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  6289  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_LinTpCopyRxData
; ..\EAS\BSW\PduR\PduR.c	  6290  (
; ..\EAS\BSW\PduR\PduR.c	  6291      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  6292      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  6293      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  6294  )
; ..\EAS\BSW\PduR\PduR.c	  6295  {
; ..\EAS\BSW\PduR\PduR.c	  6296      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  6297  #if(PDUR_MAX_NUMOFLINTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6298      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  6299  #endif
; ..\EAS\BSW\PduR\PduR.c	  6300  
; ..\EAS\BSW\PduR\PduR.c	  6301      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  6302      {
; ..\EAS\BSW\PduR\PduR.c	  6303          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  6304          PDUR_DET_REPORT_ERROR(PDUR_LINTP_COPYRXDATA_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  6305      }
; ..\EAS\BSW\PduR\PduR.c	  6306      else if(id >= PDUR_GET_NUM_LINTPRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  6307      {
; ..\EAS\BSW\PduR\PduR.c	  6308          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  6309          PDUR_DET_REPORT_ERROR(PDUR_LINTP_COPYRXDATA_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  6310      }
; ..\EAS\BSW\PduR\PduR.c	  6311      else if(NULL_PTR == info)
; ..\EAS\BSW\PduR\PduR.c	  6312      {
; ..\EAS\BSW\PduR\PduR.c	  6313          PDUR_DET_REPORT_ERROR(PDUR_LINTP_COPYRXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  6314      }
; ..\EAS\BSW\PduR\PduR.c	  6315      else if(NULL_PTR == bufferSizePtr)
; ..\EAS\BSW\PduR\PduR.c	  6316      {
; ..\EAS\BSW\PduR\PduR.c	  6317          PDUR_DET_REPORT_ERROR(PDUR_LINTP_COPYRXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  6318      }
; ..\EAS\BSW\PduR\PduR.c	  6319      else
; ..\EAS\BSW\PduR\PduR.c	  6320      {
; ..\EAS\BSW\PduR\PduR.c	  6321  #if(PDUR_MAX_NUMOFLINTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6322          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6323          pRxPduInfo = &(PDUR_LINTP_RXPDUINFO(id));
; ..\EAS\BSW\PduR\PduR.c	  6324          result = PduR_LowerTpMultiCopyRxData(pRxPduInfo, info, bufferSizePtr);
; ..\EAS\BSW\PduR\PduR.c	  6325          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6326  #endif
; ..\EAS\BSW\PduR\PduR.c	  6327      }
; ..\EAS\BSW\PduR\PduR.c	  6328  
; ..\EAS\BSW\PduR\PduR.c	  6329      return result;
; ..\EAS\BSW\PduR\PduR.c	  6330  }
; ..\EAS\BSW\PduR\PduR.c	  6331  
; ..\EAS\BSW\PduR\PduR.c	  6332  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  6333  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6334  * Function Name: PduR_LinTpRxIndication    SWS_PduR_00375
; ..\EAS\BSW\PduR\PduR.c	  6335  *
; ..\EAS\BSW\PduR\PduR.c	  6336  * Description:     Called by the transport protocol module after an I-PDU has been
; ..\EAS\BSW\PduR\PduR.c	  6337  *                received successfully or when an error occurred. It is also used
; ..\EAS\BSW\PduR\PduR.c	  6338  *                to confirm cancellation of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6339  *
; ..\EAS\BSW\PduR\PduR.c	  6340  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6341  *                 result Result of the reception.
; ..\EAS\BSW\PduR\PduR.c	  6342  *
; ..\EAS\BSW\PduR\PduR.c	  6343  * Outputs:         bufferSizePtr  Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  6344  *
; ..\EAS\BSW\PduR\PduR.c	  6345  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  6346  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6347  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  6348  FUNC(void, PDUR_CODE) PduR_LinTpRxIndication
; ..\EAS\BSW\PduR\PduR.c	  6349  (
; ..\EAS\BSW\PduR\PduR.c	  6350      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  6351      Std_ReturnType result
; ..\EAS\BSW\PduR\PduR.c	  6352  )
; ..\EAS\BSW\PduR\PduR.c	  6353  {
; ..\EAS\BSW\PduR\PduR.c	  6354  #if(PDUR_MAX_NUMOFLINTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6355      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  6356  #endif
; ..\EAS\BSW\PduR\PduR.c	  6357  
; ..\EAS\BSW\PduR\PduR.c	  6358      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  6359      {
; ..\EAS\BSW\PduR\PduR.c	  6360          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  6361          PDUR_DET_REPORT_ERROR(PDUR_LINTP_RXINDICATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  6362      }
; ..\EAS\BSW\PduR\PduR.c	  6363      else if(id >= PDUR_GET_NUM_LINTPRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  6364      {
; ..\EAS\BSW\PduR\PduR.c	  6365          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  6366          PDUR_DET_REPORT_ERROR(PDUR_LINTP_RXINDICATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  6367      }
; ..\EAS\BSW\PduR\PduR.c	  6368      else
; ..\EAS\BSW\PduR\PduR.c	  6369      {
; ..\EAS\BSW\PduR\PduR.c	  6370  #if(PDUR_MAX_NUMOFLINTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6371          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6372          pRxPduInfo = &(PDUR_LINTP_RXPDUINFO(id));
; ..\EAS\BSW\PduR\PduR.c	  6373          PduR_LowerTpMultiRxIndication(pRxPduInfo, result);
; ..\EAS\BSW\PduR\PduR.c	  6374          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6375  #endif
; ..\EAS\BSW\PduR\PduR.c	  6376      }
; ..\EAS\BSW\PduR\PduR.c	  6377  }
; ..\EAS\BSW\PduR\PduR.c	  6378  
; ..\EAS\BSW\PduR\PduR.c	  6379  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  6380  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6381  * Function Name: PduR_LinTpCopyTxData    SWS_PduR_00518
; ..\EAS\BSW\PduR\PduR.c	  6382  *
; ..\EAS\BSW\PduR\PduR.c	  6383  * Description:     This function is called by the transport protocol module to query
; ..\EAS\BSW\PduR\PduR.c	  6384  *                the transmit data of an I-PDU segment.
; ..\EAS\BSW\PduR\PduR.c	  6385  *
; ..\EAS\BSW\PduR\PduR.c	  6386  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6387  *                 info Provides destination buffer and the number of bytes to copy.
; ..\EAS\BSW\PduR\PduR.c	  6388  *                     In case of gateway the PDU Router module will copy, otherwise
; ..\EAS\BSW\PduR\PduR.c	  6389  *                     the source upper layer module will copy the data. If not enough
; ..\EAS\BSW\PduR\PduR.c	  6390  *                     transmit data is available, no data is copied. The transport
; ..\EAS\BSW\PduR\PduR.c	  6391  *                     protocol module will retry. A copy size of 0 can be used to
; ..\EAS\BSW\PduR\PduR.c	  6392  *                     indicate state changes in the retry parameter.
; ..\EAS\BSW\PduR\PduR.c	  6393  *                retry This parameter is used to retransmit data because problems
; ..\EAS\BSW\PduR\PduR.c	  6394  *                      during the last service call.
; ..\EAS\BSW\PduR\PduR.c	  6395  *
; ..\EAS\BSW\PduR\PduR.c	  6396  *
; ..\EAS\BSW\PduR\PduR.c	  6397  * Outputs:         availableDataPtr  Indicates the remaining number of bytes that are
; ..\EAS\BSW\PduR\PduR.c	  6398  *                                  available in the PduR Tx buffer. AvailableTxDataCntPtr
; ..\EAS\BSW\PduR\PduR.c	  6399  *                                  can be used by TP modules that support dynamic payload
; ..\EAS\BSW\PduR\PduR.c	  6400  *                                  lengths (e.g. Iso FrTp) to determine the size of the
; ..\EAS\BSW\PduR\PduR.c	  6401  *                                  following CFs.
; ..\EAS\BSW\PduR\PduR.c	  6402  *
; ..\EAS\BSW\PduR\PduR.c	  6403  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  6404  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6405  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  6406  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_LinTpCopyTxData
; ..\EAS\BSW\PduR\PduR.c	  6407  (
; ..\EAS\BSW\PduR\PduR.c	  6408      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  6409      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  6410      P2VAR(RetryInfoType, AUTOMATIC, PDUR_APPL_DATA) retry,
; ..\EAS\BSW\PduR\PduR.c	  6411      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) availableDataPtr
; ..\EAS\BSW\PduR\PduR.c	  6412  )
; ..\EAS\BSW\PduR\PduR.c	  6413  {
; ..\EAS\BSW\PduR\PduR.c	  6414      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  6415  #if(PDUR_MAX_NUMOFLINTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6416      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  6417      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  6418  #endif
; ..\EAS\BSW\PduR\PduR.c	  6419  
; ..\EAS\BSW\PduR\PduR.c	  6420      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  6421      {
; ..\EAS\BSW\PduR\PduR.c	  6422          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  6423          PDUR_DET_REPORT_ERROR(PDUR_LINTP_COPYTXDATA_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  6424      }
; ..\EAS\BSW\PduR\PduR.c	  6425      else if(id >= PDUR_GET_NUM_LINTPTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  6426      {
; ..\EAS\BSW\PduR\PduR.c	  6427          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  6428          PDUR_DET_REPORT_ERROR(PDUR_LINTP_COPYTXDATA_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  6429      }
; ..\EAS\BSW\PduR\PduR.c	  6430      else if(NULL_PTR == info)
; ..\EAS\BSW\PduR\PduR.c	  6431      {
; ..\EAS\BSW\PduR\PduR.c	  6432          PDUR_DET_REPORT_ERROR(PDUR_LINTP_COPYTXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  6433      }
; ..\EAS\BSW\PduR\PduR.c	  6434      else if(NULL_PTR == availableDataPtr)
; ..\EAS\BSW\PduR\PduR.c	  6435      {
; ..\EAS\BSW\PduR\PduR.c	  6436          PDUR_DET_REPORT_ERROR(PDUR_LINTP_COPYTXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  6437      }
; ..\EAS\BSW\PduR\PduR.c	  6438      else
; ..\EAS\BSW\PduR\PduR.c	  6439      {
; ..\EAS\BSW\PduR\PduR.c	  6440  #if(PDUR_MAX_NUMOFLINTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6441          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6442          PathId = PDUR_LINTP_TXCONFPDUINFO(id).PathId;
; ..\EAS\BSW\PduR\PduR.c	  6443          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  6444          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  6445          {
; ..\EAS\BSW\PduR\PduR.c	  6446              result = PduR_LowerTpCopyTxData(PathId, PDUR_LINTP_TXCONFPDUINFO(id).UpperPduId, info, retry, availableDataPtr);
; ..\EAS\BSW\PduR\PduR.c	  6447          }
; ..\EAS\BSW\PduR\PduR.c	  6448          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6449  #endif
; ..\EAS\BSW\PduR\PduR.c	  6450      }
; ..\EAS\BSW\PduR\PduR.c	  6451      return result;
; ..\EAS\BSW\PduR\PduR.c	  6452  }
; ..\EAS\BSW\PduR\PduR.c	  6453  
; ..\EAS\BSW\PduR\PduR.c	  6454  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  6455  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6456  * Function Name: PduR_LinTpTxConfirmation    SWS_PduR_00381
; ..\EAS\BSW\PduR\PduR.c	  6457  *
; ..\EAS\BSW\PduR\PduR.c	  6458  * Description:     This function is called after the I-PDU has been transmitted on
; ..\EAS\BSW\PduR\PduR.c	  6459  *                 its network, the result indicates whether the transmission was
; ..\EAS\BSW\PduR\PduR.c	  6460  *                 successful or not
; ..\EAS\BSW\PduR\PduR.c	  6461  *
; ..\EAS\BSW\PduR\PduR.c	  6462  * Inputs:         id - Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6463  *                 result - Result of the transmission of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6464  *
; ..\EAS\BSW\PduR\PduR.c	  6465  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  6466  *
; ..\EAS\BSW\PduR\PduR.c	  6467  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  6468  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6469  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  6470  FUNC(void, PDUR_CODE) PduR_LinTpTxConfirmation
; ..\EAS\BSW\PduR\PduR.c	  6471  (
; ..\EAS\BSW\PduR\PduR.c	  6472      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  6473      Std_ReturnType result
; ..\EAS\BSW\PduR\PduR.c	  6474  )
; ..\EAS\BSW\PduR\PduR.c	  6475  {
; ..\EAS\BSW\PduR\PduR.c	  6476  #if(PDUR_MAX_NUMOFLINTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6477      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  6478      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  6479  #endif
; ..\EAS\BSW\PduR\PduR.c	  6480  
; ..\EAS\BSW\PduR\PduR.c	  6481      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  6482      {
; ..\EAS\BSW\PduR\PduR.c	  6483          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  6484          PDUR_DET_REPORT_ERROR(PDUR_LINTP_TXCONFIRMATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  6485      }
; ..\EAS\BSW\PduR\PduR.c	  6486      else if(id >= PDUR_GET_NUM_LINTPTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  6487      {
; ..\EAS\BSW\PduR\PduR.c	  6488          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  6489          PDUR_DET_REPORT_ERROR(PDUR_LINTP_TXCONFIRMATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  6490      }
; ..\EAS\BSW\PduR\PduR.c	  6491      else
; ..\EAS\BSW\PduR\PduR.c	  6492      {
; ..\EAS\BSW\PduR\PduR.c	  6493  #if(PDUR_MAX_NUMOFLINTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6494          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6495          PathId = PDUR_LINTP_TXCONFPDUINFO(id).PathId;
; ..\EAS\BSW\PduR\PduR.c	  6496          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  6497          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  6498          {
; ..\EAS\BSW\PduR\PduR.c	  6499              PduR_LowerTpTxConfirmation(PathId, PDUR_LINTP_TXCONFPDUINFO(id).UpperPduId, result);
; ..\EAS\BSW\PduR\PduR.c	  6500          }
; ..\EAS\BSW\PduR\PduR.c	  6501          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6502  #endif
; ..\EAS\BSW\PduR\PduR.c	  6503      }
; ..\EAS\BSW\PduR\PduR.c	  6504  }
; ..\EAS\BSW\PduR\PduR.c	  6505  
; ..\EAS\BSW\PduR\PduR.c	  6506  #endif
; ..\EAS\BSW\PduR\PduR.c	  6507  
; ..\EAS\BSW\PduR\PduR.c	  6508  #if(STD_ON == PDUR_FRTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  6509  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  6510  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6511  * Function Name: PduR_FrTpStartOfReception    SWS_PduR_00507
; ..\EAS\BSW\PduR\PduR.c	  6512  *
; ..\EAS\BSW\PduR\PduR.c	  6513  * Description:     This function will be called by the transport protocol module at
; ..\EAS\BSW\PduR\PduR.c	  6514  *                the start of receiving an I-PDU. The I-PDU might be fragmented into
; ..\EAS\BSW\PduR\PduR.c	  6515  *                multiple N-PDUs (FF with one or more following CFs) or might consist
; ..\EAS\BSW\PduR\PduR.c	  6516  *                of a single N-PDU (SF). The service shall provide the currently
; ..\EAS\BSW\PduR\PduR.c	  6517  *                available maximum buffer size when invoked with TpSduLength equal to 0.
; ..\EAS\BSW\PduR\PduR.c	  6518  *
; ..\EAS\BSW\PduR\PduR.c	  6519  * Inputs:         id   Identification of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6520  *                 TpSduLength  Total length of the PDU to be received.
; ..\EAS\BSW\PduR\PduR.c	  6521  *
; ..\EAS\BSW\PduR\PduR.c	  6522  * Outputs:         bufferSizePtr  Available receive buffer in the receiving module.
; ..\EAS\BSW\PduR\PduR.c	  6523  *                               This parameter will be used to compute the Block
; ..\EAS\BSW\PduR\PduR.c	  6524  *                               Size (BS) in the transport protocol module
; ..\EAS\BSW\PduR\PduR.c	  6525  *
; ..\EAS\BSW\PduR\PduR.c	  6526  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  6527  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6528  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  6529  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_FrTpStartOfReception
; ..\EAS\BSW\PduR\PduR.c	  6530  (
; ..\EAS\BSW\PduR\PduR.c	  6531      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  6532      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  6533      PduLengthType TpSduLength,
; ..\EAS\BSW\PduR\PduR.c	  6534      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  6535  )
; ..\EAS\BSW\PduR\PduR.c	  6536  {
; ..\EAS\BSW\PduR\PduR.c	  6537      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  6538  #if(PDUR_MAX_NUMOFFRTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6539      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  6540  #endif
; ..\EAS\BSW\PduR\PduR.c	  6541  
; ..\EAS\BSW\PduR\PduR.c	  6542      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  6543      {
; ..\EAS\BSW\PduR\PduR.c	  6544          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  6545          PDUR_DET_REPORT_ERROR(PDUR_FRTP_STARTOFRECEPTION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  6546      }
; ..\EAS\BSW\PduR\PduR.c	  6547      else if(id >= PDUR_GET_NUM_FRTPRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  6548      {
; ..\EAS\BSW\PduR\PduR.c	  6549          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  6550          PDUR_DET_REPORT_ERROR(PDUR_FRTP_STARTOFRECEPTION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  6551      }
; ..\EAS\BSW\PduR\PduR.c	  6552      else if(NULL_PTR == bufferSizePtr)
; ..\EAS\BSW\PduR\PduR.c	  6553      {
; ..\EAS\BSW\PduR\PduR.c	  6554          PDUR_DET_REPORT_ERROR(PDUR_FRTP_STARTOFRECEPTION_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  6555      }
; ..\EAS\BSW\PduR\PduR.c	  6556      else
; ..\EAS\BSW\PduR\PduR.c	  6557      {
; ..\EAS\BSW\PduR\PduR.c	  6558  #if(PDUR_MAX_NUMOFFRTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6559          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6560          pRxPduInfo = &(PDUR_FRTP_RXPDUINFO(id));
; ..\EAS\BSW\PduR\PduR.c	  6561          result = PduR_LowerTpMultiStartOfReception(pRxPduInfo, info, TpSduLength, bufferSizePtr);
; ..\EAS\BSW\PduR\PduR.c	  6562          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6563  #endif
; ..\EAS\BSW\PduR\PduR.c	  6564      }
; ..\EAS\BSW\PduR\PduR.c	  6565  
; ..\EAS\BSW\PduR\PduR.c	  6566      return result;
; ..\EAS\BSW\PduR\PduR.c	  6567  }
; ..\EAS\BSW\PduR\PduR.c	  6568  
; ..\EAS\BSW\PduR\PduR.c	  6569  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  6570  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6571  * Function Name: PduR_FrTpCopyRxData    SWS_PduR_00512
; ..\EAS\BSW\PduR\PduR.c	  6572  *
; ..\EAS\BSW\PduR\PduR.c	  6573  * Description:     This function is called when a transport protocol module has data
; ..\EAS\BSW\PduR\PduR.c	  6574  *                to copy for the receiving module. Several calls may be made during
; ..\EAS\BSW\PduR\PduR.c	  6575  *                one transportation of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6576  *
; ..\EAS\BSW\PduR\PduR.c	  6577  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6578  *                 info Pointer to the buffer (SduDataPtr) and its length (SduLength)
; ..\EAS\BSW\PduR\PduR.c	  6579  *                      containing the data to be copied by PDU Router module in case
; ..\EAS\BSW\PduR\PduR.c	  6580  *                      of gateway or upper layer module in case of reception
; ..\EAS\BSW\PduR\PduR.c	  6581  *
; ..\EAS\BSW\PduR\PduR.c	  6582  * Outputs:         bufferSizePtr    Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  6583  *
; ..\EAS\BSW\PduR\PduR.c	  6584  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  6585  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6586  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  6587  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_FrTpCopyRxData
; ..\EAS\BSW\PduR\PduR.c	  6588  (
; ..\EAS\BSW\PduR\PduR.c	  6589      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  6590      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  6591      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  6592  )
; ..\EAS\BSW\PduR\PduR.c	  6593  {
; ..\EAS\BSW\PduR\PduR.c	  6594      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  6595  #if(PDUR_MAX_NUMOFFRTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6596      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  6597  #endif
; ..\EAS\BSW\PduR\PduR.c	  6598  
; ..\EAS\BSW\PduR\PduR.c	  6599      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  6600      {
; ..\EAS\BSW\PduR\PduR.c	  6601          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  6602          PDUR_DET_REPORT_ERROR(PDUR_FRTP_COPYRXDATA_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  6603      }
; ..\EAS\BSW\PduR\PduR.c	  6604      else if(id >= PDUR_GET_NUM_FRTPRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  6605      {
; ..\EAS\BSW\PduR\PduR.c	  6606          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  6607          PDUR_DET_REPORT_ERROR(PDUR_FRTP_COPYRXDATA_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  6608      }
; ..\EAS\BSW\PduR\PduR.c	  6609      else if(NULL_PTR == info)
; ..\EAS\BSW\PduR\PduR.c	  6610      {
; ..\EAS\BSW\PduR\PduR.c	  6611          PDUR_DET_REPORT_ERROR(PDUR_FRTP_COPYRXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  6612      }
; ..\EAS\BSW\PduR\PduR.c	  6613      else if(NULL_PTR == bufferSizePtr)
; ..\EAS\BSW\PduR\PduR.c	  6614      {
; ..\EAS\BSW\PduR\PduR.c	  6615          PDUR_DET_REPORT_ERROR(PDUR_FRTP_COPYRXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  6616      }
; ..\EAS\BSW\PduR\PduR.c	  6617      else
; ..\EAS\BSW\PduR\PduR.c	  6618      {
; ..\EAS\BSW\PduR\PduR.c	  6619  #if(PDUR_MAX_NUMOFFRTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6620          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6621          pRxPduInfo = &(PDUR_FRTP_RXPDUINFO(id));
; ..\EAS\BSW\PduR\PduR.c	  6622          result = PduR_LowerTpMultiCopyRxData(pRxPduInfo, info, bufferSizePtr);
; ..\EAS\BSW\PduR\PduR.c	  6623          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6624  #endif
; ..\EAS\BSW\PduR\PduR.c	  6625      }
; ..\EAS\BSW\PduR\PduR.c	  6626  
; ..\EAS\BSW\PduR\PduR.c	  6627      return result;
; ..\EAS\BSW\PduR\PduR.c	  6628  }
; ..\EAS\BSW\PduR\PduR.c	  6629  
; ..\EAS\BSW\PduR\PduR.c	  6630  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  6631  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6632  * Function Name: PduR_FrTpRxIndication    SWS_PduR_00375
; ..\EAS\BSW\PduR\PduR.c	  6633  *
; ..\EAS\BSW\PduR\PduR.c	  6634  * Description:     Called by the transport protocol module after an I-PDU has been
; ..\EAS\BSW\PduR\PduR.c	  6635  *                received successfully or when an error occurred. It is also used
; ..\EAS\BSW\PduR\PduR.c	  6636  *                to confirm cancellation of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6637  *
; ..\EAS\BSW\PduR\PduR.c	  6638  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6639  *                 result Result of the reception.
; ..\EAS\BSW\PduR\PduR.c	  6640  *
; ..\EAS\BSW\PduR\PduR.c	  6641  * Outputs:         bufferSizePtr  Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  6642  *
; ..\EAS\BSW\PduR\PduR.c	  6643  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  6644  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6645  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  6646  FUNC(void, PDUR_CODE) PduR_FrTpRxIndication
; ..\EAS\BSW\PduR\PduR.c	  6647  (
; ..\EAS\BSW\PduR\PduR.c	  6648      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  6649      Std_ReturnType result
; ..\EAS\BSW\PduR\PduR.c	  6650  )
; ..\EAS\BSW\PduR\PduR.c	  6651  {
; ..\EAS\BSW\PduR\PduR.c	  6652  #if(PDUR_MAX_NUMOFFRTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6653      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  6654  #endif
; ..\EAS\BSW\PduR\PduR.c	  6655  
; ..\EAS\BSW\PduR\PduR.c	  6656      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  6657      {
; ..\EAS\BSW\PduR\PduR.c	  6658          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  6659          PDUR_DET_REPORT_ERROR(PDUR_FRTP_RXINDICATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  6660      }
; ..\EAS\BSW\PduR\PduR.c	  6661      else if(id >= PDUR_GET_NUM_FRTPRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  6662      {
; ..\EAS\BSW\PduR\PduR.c	  6663          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  6664          PDUR_DET_REPORT_ERROR(PDUR_FRTP_RXINDICATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  6665      }
; ..\EAS\BSW\PduR\PduR.c	  6666      else
; ..\EAS\BSW\PduR\PduR.c	  6667      {
; ..\EAS\BSW\PduR\PduR.c	  6668  #if(PDUR_MAX_NUMOFFRTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6669          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6670          pRxPduInfo = &(PDUR_FRTP_RXPDUINFO(id));
; ..\EAS\BSW\PduR\PduR.c	  6671          PduR_LowerTpMultiRxIndication(pRxPduInfo, result);
; ..\EAS\BSW\PduR\PduR.c	  6672          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6673  #endif
; ..\EAS\BSW\PduR\PduR.c	  6674      }
; ..\EAS\BSW\PduR\PduR.c	  6675  }
; ..\EAS\BSW\PduR\PduR.c	  6676  
; ..\EAS\BSW\PduR\PduR.c	  6677  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  6678  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6679  * Function Name: PduR_FrTpCopyTxData    SWS_PduR_00518
; ..\EAS\BSW\PduR\PduR.c	  6680  *
; ..\EAS\BSW\PduR\PduR.c	  6681  * Description:     This function is called by the transport protocol module to query
; ..\EAS\BSW\PduR\PduR.c	  6682  *                the transmit data of an I-PDU segment.
; ..\EAS\BSW\PduR\PduR.c	  6683  *
; ..\EAS\BSW\PduR\PduR.c	  6684  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6685  *                 info Provides destination buffer and the number of bytes to copy.
; ..\EAS\BSW\PduR\PduR.c	  6686  *                     In case of gateway the PDU Router module will copy, otherwise
; ..\EAS\BSW\PduR\PduR.c	  6687  *                     the source upper layer module will copy the data. If not enough
; ..\EAS\BSW\PduR\PduR.c	  6688  *                     transmit data is available, no data is copied. The transport
; ..\EAS\BSW\PduR\PduR.c	  6689  *                     protocol module will retry. A copy size of 0 can be used to
; ..\EAS\BSW\PduR\PduR.c	  6690  *                     indicate state changes in the retry parameter.
; ..\EAS\BSW\PduR\PduR.c	  6691  *                retry This parameter is used to retransmit data because problems
; ..\EAS\BSW\PduR\PduR.c	  6692  *                      during the last service call.
; ..\EAS\BSW\PduR\PduR.c	  6693  *
; ..\EAS\BSW\PduR\PduR.c	  6694  *
; ..\EAS\BSW\PduR\PduR.c	  6695  * Outputs:         availableDataPtr  Indicates the remaining number of bytes that are
; ..\EAS\BSW\PduR\PduR.c	  6696  *                                  available in the PduR Tx buffer. AvailableTxDataCntPtr
; ..\EAS\BSW\PduR\PduR.c	  6697  *                                  can be used by TP modules that support dynamic payload
; ..\EAS\BSW\PduR\PduR.c	  6698  *                                  lengths (e.g. Iso FrTp) to determine the size of the
; ..\EAS\BSW\PduR\PduR.c	  6699  *                                  following CFs.
; ..\EAS\BSW\PduR\PduR.c	  6700  *
; ..\EAS\BSW\PduR\PduR.c	  6701  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  6702  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6703  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  6704  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_FrTpCopyTxData
; ..\EAS\BSW\PduR\PduR.c	  6705  (
; ..\EAS\BSW\PduR\PduR.c	  6706      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  6707      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  6708      P2VAR(RetryInfoType, AUTOMATIC, PDUR_APPL_DATA) retry,
; ..\EAS\BSW\PduR\PduR.c	  6709      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) availableDataPtr
; ..\EAS\BSW\PduR\PduR.c	  6710  )
; ..\EAS\BSW\PduR\PduR.c	  6711  {
; ..\EAS\BSW\PduR\PduR.c	  6712      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  6713  #if(PDUR_MAX_NUMOFFRTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6714      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  6715      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  6716  #endif
; ..\EAS\BSW\PduR\PduR.c	  6717  
; ..\EAS\BSW\PduR\PduR.c	  6718      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  6719      {
; ..\EAS\BSW\PduR\PduR.c	  6720          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  6721          PDUR_DET_REPORT_ERROR(PDUR_FRTP_COPYTXDATA_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  6722      }
; ..\EAS\BSW\PduR\PduR.c	  6723      else if(id >= PDUR_GET_NUM_FRTPTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  6724      {
; ..\EAS\BSW\PduR\PduR.c	  6725          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  6726          PDUR_DET_REPORT_ERROR(PDUR_FRTP_COPYTXDATA_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  6727      }
; ..\EAS\BSW\PduR\PduR.c	  6728      else if(NULL_PTR == info)
; ..\EAS\BSW\PduR\PduR.c	  6729      {
; ..\EAS\BSW\PduR\PduR.c	  6730          PDUR_DET_REPORT_ERROR(PDUR_FRTP_COPYTXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  6731      }
; ..\EAS\BSW\PduR\PduR.c	  6732      else if(NULL_PTR == availableDataPtr)
; ..\EAS\BSW\PduR\PduR.c	  6733      {
; ..\EAS\BSW\PduR\PduR.c	  6734          PDUR_DET_REPORT_ERROR(PDUR_FRTP_COPYTXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  6735      }
; ..\EAS\BSW\PduR\PduR.c	  6736      else
; ..\EAS\BSW\PduR\PduR.c	  6737      {
; ..\EAS\BSW\PduR\PduR.c	  6738  #if(PDUR_MAX_NUMOFFRTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6739          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6740          PathId = PDUR_FRTP_TXCONFPDUINFO(id).PathId;
; ..\EAS\BSW\PduR\PduR.c	  6741          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  6742          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  6743          {
; ..\EAS\BSW\PduR\PduR.c	  6744              result = PduR_LowerTpCopyTxData(PathId, PDUR_FRTP_TXCONFPDUINFO(id).UpperPduId, info, retry, availableDataPtr);
; ..\EAS\BSW\PduR\PduR.c	  6745          }
; ..\EAS\BSW\PduR\PduR.c	  6746          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6747  #endif
; ..\EAS\BSW\PduR\PduR.c	  6748      }
; ..\EAS\BSW\PduR\PduR.c	  6749      return result;
; ..\EAS\BSW\PduR\PduR.c	  6750  }
; ..\EAS\BSW\PduR\PduR.c	  6751  
; ..\EAS\BSW\PduR\PduR.c	  6752  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  6753  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6754  * Function Name: PduR_FrTpTxConfirmation    SWS_PduR_00381
; ..\EAS\BSW\PduR\PduR.c	  6755  *
; ..\EAS\BSW\PduR\PduR.c	  6756  * Description:     This function is called after the I-PDU has been transmitted on
; ..\EAS\BSW\PduR\PduR.c	  6757  *                 its network, the result indicates whether the transmission was
; ..\EAS\BSW\PduR\PduR.c	  6758  *                 successful or not
; ..\EAS\BSW\PduR\PduR.c	  6759  *
; ..\EAS\BSW\PduR\PduR.c	  6760  * Inputs:         id - Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6761  *                 result - Result of the transmission of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6762  *
; ..\EAS\BSW\PduR\PduR.c	  6763  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  6764  *
; ..\EAS\BSW\PduR\PduR.c	  6765  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  6766  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6767  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  6768  FUNC(void, PDUR_CODE) PduR_FrTpTxConfirmation
; ..\EAS\BSW\PduR\PduR.c	  6769  (
; ..\EAS\BSW\PduR\PduR.c	  6770      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  6771      Std_ReturnType result
; ..\EAS\BSW\PduR\PduR.c	  6772  )
; ..\EAS\BSW\PduR\PduR.c	  6773  {
; ..\EAS\BSW\PduR\PduR.c	  6774  #if(PDUR_MAX_NUMOFFRTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6775      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  6776      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  6777  #endif
; ..\EAS\BSW\PduR\PduR.c	  6778  
; ..\EAS\BSW\PduR\PduR.c	  6779      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  6780      {
; ..\EAS\BSW\PduR\PduR.c	  6781          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  6782          PDUR_DET_REPORT_ERROR(PDUR_FRTP_TXCONFIRMATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  6783      }
; ..\EAS\BSW\PduR\PduR.c	  6784      else if(id >= PDUR_GET_NUM_FRTPTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  6785      {
; ..\EAS\BSW\PduR\PduR.c	  6786          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  6787          PDUR_DET_REPORT_ERROR(PDUR_FRTP_TXCONFIRMATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  6788      }
; ..\EAS\BSW\PduR\PduR.c	  6789      else
; ..\EAS\BSW\PduR\PduR.c	  6790      {
; ..\EAS\BSW\PduR\PduR.c	  6791  #if(PDUR_MAX_NUMOFFRTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6792          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6793          PathId = PDUR_FRTP_TXCONFPDUINFO(id).PathId;
; ..\EAS\BSW\PduR\PduR.c	  6794          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  6795          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  6796          {
; ..\EAS\BSW\PduR\PduR.c	  6797              PduR_LowerTpTxConfirmation(PathId, PDUR_FRTP_TXCONFPDUINFO(id).UpperPduId, result);
; ..\EAS\BSW\PduR\PduR.c	  6798          }
; ..\EAS\BSW\PduR\PduR.c	  6799          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6800  #endif
; ..\EAS\BSW\PduR\PduR.c	  6801      }
; ..\EAS\BSW\PduR\PduR.c	  6802  }
; ..\EAS\BSW\PduR\PduR.c	  6803  
; ..\EAS\BSW\PduR\PduR.c	  6804  #endif
; ..\EAS\BSW\PduR\PduR.c	  6805  
; ..\EAS\BSW\PduR\PduR.c	  6806  #if(STD_ON == PDUR_SOADTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  6807  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  6808  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6809  * Function Name: PduR_SoAdTpStartOfReception    SWS_PduR_00507
; ..\EAS\BSW\PduR\PduR.c	  6810  *
; ..\EAS\BSW\PduR\PduR.c	  6811  * Description:     This function will be called by the transport protocol module at
; ..\EAS\BSW\PduR\PduR.c	  6812  *                the start of receiving an I-PDU. The I-PDU might be fragmented into
; ..\EAS\BSW\PduR\PduR.c	  6813  *                multiple N-PDUs (FF with one or more following CFs) or might consist
; ..\EAS\BSW\PduR\PduR.c	  6814  *                of a single N-PDU (SF). The service shall provide the currently
; ..\EAS\BSW\PduR\PduR.c	  6815  *                available maximum buffer size when invoked with TpSduLength equal to 0.
; ..\EAS\BSW\PduR\PduR.c	  6816  *
; ..\EAS\BSW\PduR\PduR.c	  6817  * Inputs:         id   Identification of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6818  *                 TpSduLength  Total length of the PDU to be received.
; ..\EAS\BSW\PduR\PduR.c	  6819  *
; ..\EAS\BSW\PduR\PduR.c	  6820  * Outputs:         bufferSizePtr  Available receive buffer in the receiving module.
; ..\EAS\BSW\PduR\PduR.c	  6821  *                               This parameter will be used to compute the Block
; ..\EAS\BSW\PduR\PduR.c	  6822  *                               Size (BS) in the transport protocol module
; ..\EAS\BSW\PduR\PduR.c	  6823  *
; ..\EAS\BSW\PduR\PduR.c	  6824  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  6825  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6826  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  6827  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_SoAdTpStartOfReception
; ..\EAS\BSW\PduR\PduR.c	  6828  (
; ..\EAS\BSW\PduR\PduR.c	  6829      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  6830      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  6831      PduLengthType TpSduLength,
; ..\EAS\BSW\PduR\PduR.c	  6832      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  6833  )
; ..\EAS\BSW\PduR\PduR.c	  6834  {
; ..\EAS\BSW\PduR\PduR.c	  6835      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  6836      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  6837  
; ..\EAS\BSW\PduR\PduR.c	  6838      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  6839      {
; ..\EAS\BSW\PduR\PduR.c	  6840          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  6841          PDUR_DET_REPORT_ERROR(PDUR_SOADTP_STARTOFRECEPTION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  6842      }
; ..\EAS\BSW\PduR\PduR.c	  6843      else if(id >= PDUR_GET_NUM_SOADTPRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  6844      {
; ..\EAS\BSW\PduR\PduR.c	  6845          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  6846          PDUR_DET_REPORT_ERROR(PDUR_SOADTP_STARTOFRECEPTION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  6847      }
; ..\EAS\BSW\PduR\PduR.c	  6848      else if(NULL_PTR == bufferSizePtr)
; ..\EAS\BSW\PduR\PduR.c	  6849      {
; ..\EAS\BSW\PduR\PduR.c	  6850          PDUR_DET_REPORT_ERROR(PDUR_SOADTP_STARTOFRECEPTION_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  6851      }
; ..\EAS\BSW\PduR\PduR.c	  6852      else
; ..\EAS\BSW\PduR\PduR.c	  6853      {
; ..\EAS\BSW\PduR\PduR.c	  6854  #if(PDUR_MAX_NUMOFSOADTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6855          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6856          pRxPduInfo = &(PDUR_SOADTP_RXPDUINFO(id));
; ..\EAS\BSW\PduR\PduR.c	  6857          result = PduR_LowerTpMultiStartOfReception(pRxPduInfo, info, TpSduLength, bufferSizePtr);
; ..\EAS\BSW\PduR\PduR.c	  6858          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6859  #endif
; ..\EAS\BSW\PduR\PduR.c	  6860      }
; ..\EAS\BSW\PduR\PduR.c	  6861  
; ..\EAS\BSW\PduR\PduR.c	  6862      return result;
; ..\EAS\BSW\PduR\PduR.c	  6863  }
; ..\EAS\BSW\PduR\PduR.c	  6864  
; ..\EAS\BSW\PduR\PduR.c	  6865  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  6866  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6867  * Function Name: PduR_SoAdTpCopyRxData    SWS_PduR_00512
; ..\EAS\BSW\PduR\PduR.c	  6868  *
; ..\EAS\BSW\PduR\PduR.c	  6869  * Description:     This function is called when a transport protocol module has data
; ..\EAS\BSW\PduR\PduR.c	  6870  *                to copy for the receiving module. Several calls may be made during
; ..\EAS\BSW\PduR\PduR.c	  6871  *                one transportation of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6872  *
; ..\EAS\BSW\PduR\PduR.c	  6873  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6874  *                 info Pointer to the buffer (SduDataPtr) and its length (SduLength)
; ..\EAS\BSW\PduR\PduR.c	  6875  *                      containing the data to be copied by PDU Router module in case
; ..\EAS\BSW\PduR\PduR.c	  6876  *                      of gateway or upper layer module in case of reception
; ..\EAS\BSW\PduR\PduR.c	  6877  *
; ..\EAS\BSW\PduR\PduR.c	  6878  * Outputs:         bufferSizePtr    Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  6879  *
; ..\EAS\BSW\PduR\PduR.c	  6880  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  6881  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6882  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  6883  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_SoAdTpCopyRxData
; ..\EAS\BSW\PduR\PduR.c	  6884  (
; ..\EAS\BSW\PduR\PduR.c	  6885      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  6886      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  6887      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  6888  )
; ..\EAS\BSW\PduR\PduR.c	  6889  {
; ..\EAS\BSW\PduR\PduR.c	  6890      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  6891      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  6892  
; ..\EAS\BSW\PduR\PduR.c	  6893      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  6894      {
; ..\EAS\BSW\PduR\PduR.c	  6895          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  6896          PDUR_DET_REPORT_ERROR(PDUR_SOADTP_COPYRXDATA_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  6897      }
; ..\EAS\BSW\PduR\PduR.c	  6898      else if(id >= PDUR_GET_NUM_SOADTPRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  6899      {
; ..\EAS\BSW\PduR\PduR.c	  6900          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  6901          PDUR_DET_REPORT_ERROR(PDUR_SOADTP_COPYRXDATA_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  6902      }
; ..\EAS\BSW\PduR\PduR.c	  6903      else if(NULL_PTR == info)
; ..\EAS\BSW\PduR\PduR.c	  6904      {
; ..\EAS\BSW\PduR\PduR.c	  6905          PDUR_DET_REPORT_ERROR(PDUR_SOADTP_COPYRXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  6906      }
; ..\EAS\BSW\PduR\PduR.c	  6907      else if(NULL_PTR == bufferSizePtr)
; ..\EAS\BSW\PduR\PduR.c	  6908      {
; ..\EAS\BSW\PduR\PduR.c	  6909          PDUR_DET_REPORT_ERROR(PDUR_SOADTP_COPYRXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  6910      }
; ..\EAS\BSW\PduR\PduR.c	  6911      else
; ..\EAS\BSW\PduR\PduR.c	  6912      {
; ..\EAS\BSW\PduR\PduR.c	  6913  #if(PDUR_MAX_NUMOFSOADTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6914          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6915          pRxPduInfo = &(PDUR_SOADTP_RXPDUINFO(id));
; ..\EAS\BSW\PduR\PduR.c	  6916          result = PduR_LowerTpMultiCopyRxData(pRxPduInfo, info, bufferSizePtr);
; ..\EAS\BSW\PduR\PduR.c	  6917          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6918  #endif
; ..\EAS\BSW\PduR\PduR.c	  6919      }
; ..\EAS\BSW\PduR\PduR.c	  6920  
; ..\EAS\BSW\PduR\PduR.c	  6921      return result;
; ..\EAS\BSW\PduR\PduR.c	  6922  }
; ..\EAS\BSW\PduR\PduR.c	  6923  
; ..\EAS\BSW\PduR\PduR.c	  6924  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  6925  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6926  * Function Name: PduR_SoAdTpRxIndication    SWS_PduR_00375
; ..\EAS\BSW\PduR\PduR.c	  6927  *
; ..\EAS\BSW\PduR\PduR.c	  6928  * Description:     Called by the transport protocol module after an I-PDU has been
; ..\EAS\BSW\PduR\PduR.c	  6929  *                received successfully or when an error occurred. It is also used
; ..\EAS\BSW\PduR\PduR.c	  6930  *                to confirm cancellation of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6931  *
; ..\EAS\BSW\PduR\PduR.c	  6932  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6933  *                 result Result of the reception.
; ..\EAS\BSW\PduR\PduR.c	  6934  *
; ..\EAS\BSW\PduR\PduR.c	  6935  * Outputs:         bufferSizePtr  Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  6936  *
; ..\EAS\BSW\PduR\PduR.c	  6937  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  6938  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6939  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  6940  FUNC(void, PDUR_CODE) PduR_SoAdTpRxIndication
; ..\EAS\BSW\PduR\PduR.c	  6941  (
; ..\EAS\BSW\PduR\PduR.c	  6942      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  6943      Std_ReturnType result
; ..\EAS\BSW\PduR\PduR.c	  6944  )
; ..\EAS\BSW\PduR\PduR.c	  6945  {
; ..\EAS\BSW\PduR\PduR.c	  6946      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  6947  
; ..\EAS\BSW\PduR\PduR.c	  6948      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  6949      {
; ..\EAS\BSW\PduR\PduR.c	  6950          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  6951          PDUR_DET_REPORT_ERROR(PDUR_SOADTP_RXINDICATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  6952      }
; ..\EAS\BSW\PduR\PduR.c	  6953      else if(id >= PDUR_GET_NUM_SOADTPRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  6954      {
; ..\EAS\BSW\PduR\PduR.c	  6955          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  6956          PDUR_DET_REPORT_ERROR(PDUR_SOADTP_RXINDICATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  6957      }
; ..\EAS\BSW\PduR\PduR.c	  6958      else
; ..\EAS\BSW\PduR\PduR.c	  6959      {
; ..\EAS\BSW\PduR\PduR.c	  6960  #if(PDUR_MAX_NUMOFSOADTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  6961          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6962          pRxPduInfo = &(PDUR_SOADTP_RXPDUINFO(id));
; ..\EAS\BSW\PduR\PduR.c	  6963          PduR_LowerTpMultiRxIndication(pRxPduInfo, result);
; ..\EAS\BSW\PduR\PduR.c	  6964          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  6965  #endif
; ..\EAS\BSW\PduR\PduR.c	  6966      }
; ..\EAS\BSW\PduR\PduR.c	  6967  }
; ..\EAS\BSW\PduR\PduR.c	  6968  
; ..\EAS\BSW\PduR\PduR.c	  6969  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  6970  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6971  * Function Name: PduR_SoAdTpCopyTxData    SWS_PduR_00518
; ..\EAS\BSW\PduR\PduR.c	  6972  *
; ..\EAS\BSW\PduR\PduR.c	  6973  * Description:     This function is called by the transport protocol module to query
; ..\EAS\BSW\PduR\PduR.c	  6974  *                the transmit data of an I-PDU segment.
; ..\EAS\BSW\PduR\PduR.c	  6975  *
; ..\EAS\BSW\PduR\PduR.c	  6976  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  6977  *                 info Provides destination buffer and the number of bytes to copy.
; ..\EAS\BSW\PduR\PduR.c	  6978  *                     In case of gateway the PDU Router module will copy, otherwise
; ..\EAS\BSW\PduR\PduR.c	  6979  *                     the source upper layer module will copy the data. If not enough
; ..\EAS\BSW\PduR\PduR.c	  6980  *                     transmit data is available, no data is copied. The transport
; ..\EAS\BSW\PduR\PduR.c	  6981  *                     protocol module will retry. A copy size of 0 can be used to
; ..\EAS\BSW\PduR\PduR.c	  6982  *                     indicate state changes in the retry parameter.
; ..\EAS\BSW\PduR\PduR.c	  6983  *                retry This parameter is used to retransmit data because problems
; ..\EAS\BSW\PduR\PduR.c	  6984  *                      during the last service call.
; ..\EAS\BSW\PduR\PduR.c	  6985  *
; ..\EAS\BSW\PduR\PduR.c	  6986  *
; ..\EAS\BSW\PduR\PduR.c	  6987  * Outputs:         availableDataPtr  Indicates the remaining number of bytes that are
; ..\EAS\BSW\PduR\PduR.c	  6988  *                                  available in the PduR Tx buffer. AvailableTxDataCntPtr
; ..\EAS\BSW\PduR\PduR.c	  6989  *                                  can be used by TP modules that support dynamic payload
; ..\EAS\BSW\PduR\PduR.c	  6990  *                                  lengths (e.g. Iso FrTp) to determine the size of the
; ..\EAS\BSW\PduR\PduR.c	  6991  *                                  following CFs.
; ..\EAS\BSW\PduR\PduR.c	  6992  *
; ..\EAS\BSW\PduR\PduR.c	  6993  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  6994  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  6995  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  6996  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_SoAdTpCopyTxData
; ..\EAS\BSW\PduR\PduR.c	  6997  (
; ..\EAS\BSW\PduR\PduR.c	  6998      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  6999      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  7000      P2VAR(RetryInfoType, AUTOMATIC, PDUR_APPL_DATA) retry,
; ..\EAS\BSW\PduR\PduR.c	  7001      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) availableDataPtr
; ..\EAS\BSW\PduR\PduR.c	  7002  )
; ..\EAS\BSW\PduR\PduR.c	  7003  {
; ..\EAS\BSW\PduR\PduR.c	  7004      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  7005      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  7006      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  7007  
; ..\EAS\BSW\PduR\PduR.c	  7008      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  7009      {
; ..\EAS\BSW\PduR\PduR.c	  7010          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  7011          PDUR_DET_REPORT_ERROR(PDUR_SOADTP_COPYTXDATA_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  7012      }
; ..\EAS\BSW\PduR\PduR.c	  7013      else if(id >= PDUR_GET_NUM_SOADTPTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  7014      {
; ..\EAS\BSW\PduR\PduR.c	  7015          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  7016          PDUR_DET_REPORT_ERROR(PDUR_SOADTP_COPYTXDATA_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  7017      }
; ..\EAS\BSW\PduR\PduR.c	  7018      else if(NULL_PTR == info)
; ..\EAS\BSW\PduR\PduR.c	  7019      {
; ..\EAS\BSW\PduR\PduR.c	  7020          PDUR_DET_REPORT_ERROR(PDUR_SOADTP_COPYTXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  7021      }
; ..\EAS\BSW\PduR\PduR.c	  7022      else if(NULL_PTR == availableDataPtr)
; ..\EAS\BSW\PduR\PduR.c	  7023      {
; ..\EAS\BSW\PduR\PduR.c	  7024          PDUR_DET_REPORT_ERROR(PDUR_SOADTP_COPYTXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  7025      }
; ..\EAS\BSW\PduR\PduR.c	  7026      else
; ..\EAS\BSW\PduR\PduR.c	  7027      {
; ..\EAS\BSW\PduR\PduR.c	  7028  #if(PDUR_MAX_NUMOFSOADTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  7029          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7030          PathId = PDUR_SOADTP_TXCONFPDUINFO(id).PathId;
; ..\EAS\BSW\PduR\PduR.c	  7031          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  7032          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  7033          {
; ..\EAS\BSW\PduR\PduR.c	  7034              result = PduR_LowerTpCopyTxData(PathId, PDUR_SOADTP_TXCONFPDUINFO(id).UpperPduId, info, retry, availableDataPtr);
; ..\EAS\BSW\PduR\PduR.c	  7035          }
; ..\EAS\BSW\PduR\PduR.c	  7036          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7037  #endif
; ..\EAS\BSW\PduR\PduR.c	  7038      }
; ..\EAS\BSW\PduR\PduR.c	  7039      return result;
; ..\EAS\BSW\PduR\PduR.c	  7040  }
; ..\EAS\BSW\PduR\PduR.c	  7041  
; ..\EAS\BSW\PduR\PduR.c	  7042  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  7043  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7044  * Function Name: PduR_SoAdTpTxConfirmation    SWS_PduR_00381
; ..\EAS\BSW\PduR\PduR.c	  7045  *
; ..\EAS\BSW\PduR\PduR.c	  7046  * Description:     This function is called after the I-PDU has been transmitted on
; ..\EAS\BSW\PduR\PduR.c	  7047  *                 its network, the result indicates whether the transmission was
; ..\EAS\BSW\PduR\PduR.c	  7048  *                 successful or not
; ..\EAS\BSW\PduR\PduR.c	  7049  *
; ..\EAS\BSW\PduR\PduR.c	  7050  * Inputs:         id - Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7051  *                 result - Result of the transmission of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7052  *
; ..\EAS\BSW\PduR\PduR.c	  7053  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  7054  *
; ..\EAS\BSW\PduR\PduR.c	  7055  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  7056  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7057  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  7058  FUNC(void, PDUR_CODE) PduR_SoAdTpTxConfirmation
; ..\EAS\BSW\PduR\PduR.c	  7059  (
; ..\EAS\BSW\PduR\PduR.c	  7060      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  7061      Std_ReturnType result
; ..\EAS\BSW\PduR\PduR.c	  7062  )
; ..\EAS\BSW\PduR\PduR.c	  7063  {
; ..\EAS\BSW\PduR\PduR.c	  7064      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  7065      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  7066  
; ..\EAS\BSW\PduR\PduR.c	  7067      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  7068      {
; ..\EAS\BSW\PduR\PduR.c	  7069          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  7070          PDUR_DET_REPORT_ERROR(PDUR_SOADTP_TXCONFIRMATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  7071      }
; ..\EAS\BSW\PduR\PduR.c	  7072      else if(id >= PDUR_GET_NUM_SOADTPTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  7073      {
; ..\EAS\BSW\PduR\PduR.c	  7074          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  7075          PDUR_DET_REPORT_ERROR(PDUR_SOADTP_TXCONFIRMATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  7076      }
; ..\EAS\BSW\PduR\PduR.c	  7077      else
; ..\EAS\BSW\PduR\PduR.c	  7078      {
; ..\EAS\BSW\PduR\PduR.c	  7079  #if(PDUR_MAX_NUMOFSOADTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  7080          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7081          PathId = PDUR_SOADTP_TXCONFPDUINFO(id).PathId;
; ..\EAS\BSW\PduR\PduR.c	  7082          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  7083          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  7084          {
; ..\EAS\BSW\PduR\PduR.c	  7085              PduR_LowerTpTxConfirmation(PathId, PDUR_SOADTP_TXCONFPDUINFO(id).UpperPduId, result);
; ..\EAS\BSW\PduR\PduR.c	  7086          }
; ..\EAS\BSW\PduR\PduR.c	  7087          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7088  #endif
; ..\EAS\BSW\PduR\PduR.c	  7089      }
; ..\EAS\BSW\PduR\PduR.c	  7090  }
; ..\EAS\BSW\PduR\PduR.c	  7091  
; ..\EAS\BSW\PduR\PduR.c	  7092  #endif
; ..\EAS\BSW\PduR\PduR.c	  7093  
; ..\EAS\BSW\PduR\PduR.c	  7094  #if(STD_ON == PDUR_CDDTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  7095  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  7096  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7097  * Function Name: PduR_CddTpStartOfReception    SWS_PduR_00507
; ..\EAS\BSW\PduR\PduR.c	  7098  *
; ..\EAS\BSW\PduR\PduR.c	  7099  * Description:     This function will be called by the transport protocol module at
; ..\EAS\BSW\PduR\PduR.c	  7100  *                the start of receiving an I-PDU. The I-PDU might be fragmented into
; ..\EAS\BSW\PduR\PduR.c	  7101  *                multiple N-PDUs (FF with one or more following CFs) or might consist
; ..\EAS\BSW\PduR\PduR.c	  7102  *                of a single N-PDU (SF). The service shall provide the currently
; ..\EAS\BSW\PduR\PduR.c	  7103  *                available maximum buffer size when invoked with TpSduLength equal to 0.
; ..\EAS\BSW\PduR\PduR.c	  7104  *
; ..\EAS\BSW\PduR\PduR.c	  7105  * Inputs:         id   Identification of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7106  *                 TpSduLength  Total length of the PDU to be received.
; ..\EAS\BSW\PduR\PduR.c	  7107  *
; ..\EAS\BSW\PduR\PduR.c	  7108  * Outputs:         bufferSizePtr  Available receive buffer in the receiving module.
; ..\EAS\BSW\PduR\PduR.c	  7109  *                               This parameter will be used to compute the Block
; ..\EAS\BSW\PduR\PduR.c	  7110  *                               Size (BS) in the transport protocol module
; ..\EAS\BSW\PduR\PduR.c	  7111  *
; ..\EAS\BSW\PduR\PduR.c	  7112  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  7113  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7114  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  7115  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_CddTpStartOfReception
; ..\EAS\BSW\PduR\PduR.c	  7116  (
; ..\EAS\BSW\PduR\PduR.c	  7117      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  7118      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  7119      PduLengthType TpSduLength,
; ..\EAS\BSW\PduR\PduR.c	  7120      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  7121  )
; ..\EAS\BSW\PduR\PduR.c	  7122  {
; ..\EAS\BSW\PduR\PduR.c	  7123      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  7124      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  7125  
; ..\EAS\BSW\PduR\PduR.c	  7126      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  7127      {
; ..\EAS\BSW\PduR\PduR.c	  7128          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  7129          PDUR_DET_REPORT_ERROR(PDUR_CDDTP_STARTOFRECEPTION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  7130      }
; ..\EAS\BSW\PduR\PduR.c	  7131      else if(id >= PDUR_GET_NUM_CDDTPRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  7132      {
; ..\EAS\BSW\PduR\PduR.c	  7133          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  7134          PDUR_DET_REPORT_ERROR(PDUR_CDDTP_STARTOFRECEPTION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  7135      }
; ..\EAS\BSW\PduR\PduR.c	  7136      else if(NULL_PTR == bufferSizePtr)
; ..\EAS\BSW\PduR\PduR.c	  7137      {
; ..\EAS\BSW\PduR\PduR.c	  7138          PDUR_DET_REPORT_ERROR(PDUR_CDDTP_STARTOFRECEPTION_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  7139      }
; ..\EAS\BSW\PduR\PduR.c	  7140      else
; ..\EAS\BSW\PduR\PduR.c	  7141      {
; ..\EAS\BSW\PduR\PduR.c	  7142  #if(PDUR_MAX_NUMOFCDDTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  7143          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7144          pRxPduInfo = &(PDUR_CDDTP_RXPDUINFO(id));
; ..\EAS\BSW\PduR\PduR.c	  7145          result = PduR_LowerTpMultiStartOfReception(pRxPduInfo, info, TpSduLength, bufferSizePtr);
; ..\EAS\BSW\PduR\PduR.c	  7146          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7147  #endif
; ..\EAS\BSW\PduR\PduR.c	  7148      }
; ..\EAS\BSW\PduR\PduR.c	  7149  
; ..\EAS\BSW\PduR\PduR.c	  7150      return result;
; ..\EAS\BSW\PduR\PduR.c	  7151  }
; ..\EAS\BSW\PduR\PduR.c	  7152  
; ..\EAS\BSW\PduR\PduR.c	  7153  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  7154  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7155  * Function Name: PduR_CddTpCopyRxData    SWS_PduR_00512
; ..\EAS\BSW\PduR\PduR.c	  7156  *
; ..\EAS\BSW\PduR\PduR.c	  7157  * Description:     This function is called when a transport protocol module has data
; ..\EAS\BSW\PduR\PduR.c	  7158  *                to copy for the receiving module. Several calls may be made during
; ..\EAS\BSW\PduR\PduR.c	  7159  *                one transportation of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7160  *
; ..\EAS\BSW\PduR\PduR.c	  7161  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7162  *                 info Pointer to the buffer (SduDataPtr) and its length (SduLength)
; ..\EAS\BSW\PduR\PduR.c	  7163  *                      containing the data to be copied by PDU Router module in case
; ..\EAS\BSW\PduR\PduR.c	  7164  *                      of gateway or upper layer module in case of reception
; ..\EAS\BSW\PduR\PduR.c	  7165  *
; ..\EAS\BSW\PduR\PduR.c	  7166  * Outputs:         bufferSizePtr    Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  7167  *
; ..\EAS\BSW\PduR\PduR.c	  7168  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  7169  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7170  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  7171  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_CddTpCopyRxData
; ..\EAS\BSW\PduR\PduR.c	  7172  (
; ..\EAS\BSW\PduR\PduR.c	  7173      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  7174      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  7175      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  7176  )
; ..\EAS\BSW\PduR\PduR.c	  7177  {
; ..\EAS\BSW\PduR\PduR.c	  7178      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  7179      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  7180  
; ..\EAS\BSW\PduR\PduR.c	  7181      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  7182      {
; ..\EAS\BSW\PduR\PduR.c	  7183          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  7184          PDUR_DET_REPORT_ERROR(PDUR_CDDTP_COPYRXDATA_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  7185      }
; ..\EAS\BSW\PduR\PduR.c	  7186      else if(id >= PDUR_GET_NUM_CDDTPRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  7187      {
; ..\EAS\BSW\PduR\PduR.c	  7188          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  7189          PDUR_DET_REPORT_ERROR(PDUR_CDDTP_COPYRXDATA_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  7190      }
; ..\EAS\BSW\PduR\PduR.c	  7191      else if(NULL_PTR == info)
; ..\EAS\BSW\PduR\PduR.c	  7192      {
; ..\EAS\BSW\PduR\PduR.c	  7193          PDUR_DET_REPORT_ERROR(PDUR_CDDTP_COPYRXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  7194      }
; ..\EAS\BSW\PduR\PduR.c	  7195      else if(NULL_PTR == bufferSizePtr)
; ..\EAS\BSW\PduR\PduR.c	  7196      {
; ..\EAS\BSW\PduR\PduR.c	  7197          PDUR_DET_REPORT_ERROR(PDUR_CDDTP_COPYRXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  7198      }
; ..\EAS\BSW\PduR\PduR.c	  7199      else
; ..\EAS\BSW\PduR\PduR.c	  7200      {
; ..\EAS\BSW\PduR\PduR.c	  7201  #if(PDUR_MAX_NUMOFCDDTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  7202          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7203          pRxPduInfo = &(PDUR_CDDTP_RXPDUINFO(id));
; ..\EAS\BSW\PduR\PduR.c	  7204          result = PduR_LowerTpMultiCopyRxData(pRxPduInfo, info, bufferSizePtr);
; ..\EAS\BSW\PduR\PduR.c	  7205          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7206  #endif
; ..\EAS\BSW\PduR\PduR.c	  7207      }
; ..\EAS\BSW\PduR\PduR.c	  7208  
; ..\EAS\BSW\PduR\PduR.c	  7209      return result;
; ..\EAS\BSW\PduR\PduR.c	  7210  }
; ..\EAS\BSW\PduR\PduR.c	  7211  
; ..\EAS\BSW\PduR\PduR.c	  7212  
; ..\EAS\BSW\PduR\PduR.c	  7213  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  7214  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7215  * Function Name: PduR_CddTpRxIndication    SWS_PduR_00375
; ..\EAS\BSW\PduR\PduR.c	  7216  *
; ..\EAS\BSW\PduR\PduR.c	  7217  * Description:     Called by the transport protocol module after an I-PDU has been
; ..\EAS\BSW\PduR\PduR.c	  7218  *                received successfully or when an error occurred. It is also used
; ..\EAS\BSW\PduR\PduR.c	  7219  *                to confirm cancellation of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7220  *
; ..\EAS\BSW\PduR\PduR.c	  7221  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7222  *                 result Result of the reception.
; ..\EAS\BSW\PduR\PduR.c	  7223  *
; ..\EAS\BSW\PduR\PduR.c	  7224  * Outputs:         bufferSizePtr  Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  7225  *
; ..\EAS\BSW\PduR\PduR.c	  7226  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  7227  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7228  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  7229  FUNC(void, PDUR_CODE) PduR_CddTpRxIndication
; ..\EAS\BSW\PduR\PduR.c	  7230  (
; ..\EAS\BSW\PduR\PduR.c	  7231      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  7232      NotifResultType result
; ..\EAS\BSW\PduR\PduR.c	  7233  )
; ..\EAS\BSW\PduR\PduR.c	  7234  {
; ..\EAS\BSW\PduR\PduR.c	  7235      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  7236  
; ..\EAS\BSW\PduR\PduR.c	  7237      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  7238      {
; ..\EAS\BSW\PduR\PduR.c	  7239          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  7240          PDUR_DET_REPORT_ERROR(PDUR_CDDTP_RXINDICATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  7241      }
; ..\EAS\BSW\PduR\PduR.c	  7242      else if(id >= PDUR_GET_NUM_CDDTPRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  7243      {
; ..\EAS\BSW\PduR\PduR.c	  7244          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  7245          PDUR_DET_REPORT_ERROR(PDUR_CDDTP_RXINDICATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  7246      }
; ..\EAS\BSW\PduR\PduR.c	  7247      else
; ..\EAS\BSW\PduR\PduR.c	  7248      {
; ..\EAS\BSW\PduR\PduR.c	  7249  #if(PDUR_MAX_NUMOFCDDTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  7250          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7251          pRxPduInfo = &(PDUR_CDDTP_RXPDUINFO(id));
; ..\EAS\BSW\PduR\PduR.c	  7252          PduR_LowerTpMultiRxIndication(pRxPduInfo, result);
; ..\EAS\BSW\PduR\PduR.c	  7253          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7254  #endif
; ..\EAS\BSW\PduR\PduR.c	  7255      }
; ..\EAS\BSW\PduR\PduR.c	  7256  }
; ..\EAS\BSW\PduR\PduR.c	  7257  
; ..\EAS\BSW\PduR\PduR.c	  7258  
; ..\EAS\BSW\PduR\PduR.c	  7259  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  7260  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7261  * Function Name: PduR_CddTpCopyTxData    SWS_PduR_00518
; ..\EAS\BSW\PduR\PduR.c	  7262  *
; ..\EAS\BSW\PduR\PduR.c	  7263  * Description:     This function is called by the transport protocol module to query
; ..\EAS\BSW\PduR\PduR.c	  7264  *                the transmit data of an I-PDU segment.
; ..\EAS\BSW\PduR\PduR.c	  7265  *
; ..\EAS\BSW\PduR\PduR.c	  7266  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7267  *                 info Provides destination buffer and the number of bytes to copy.
; ..\EAS\BSW\PduR\PduR.c	  7268  *                     In case of gateway the PDU Router module will copy, otherwise
; ..\EAS\BSW\PduR\PduR.c	  7269  *                     the source upper layer module will copy the data. If not enough
; ..\EAS\BSW\PduR\PduR.c	  7270  *                     transmit data is available, no data is copied. The transport
; ..\EAS\BSW\PduR\PduR.c	  7271  *                     protocol module will retry. A copy size of 0 can be used to
; ..\EAS\BSW\PduR\PduR.c	  7272  *                     indicate state changes in the retry parameter.
; ..\EAS\BSW\PduR\PduR.c	  7273  *                retry This parameter is used to retransmit data because problems
; ..\EAS\BSW\PduR\PduR.c	  7274  *                      during the last service call.
; ..\EAS\BSW\PduR\PduR.c	  7275  *
; ..\EAS\BSW\PduR\PduR.c	  7276  *
; ..\EAS\BSW\PduR\PduR.c	  7277  * Outputs:         availableDataPtr  Indicates the remaining number of bytes that are
; ..\EAS\BSW\PduR\PduR.c	  7278  *                                  available in the PduR Tx buffer. AvailableTxDataCntPtr
; ..\EAS\BSW\PduR\PduR.c	  7279  *                                  can be used by TP modules that support dynamic payload
; ..\EAS\BSW\PduR\PduR.c	  7280  *                                  lengths (e.g. Iso FrTp) to determine the size of the
; ..\EAS\BSW\PduR\PduR.c	  7281  *                                  following CFs.
; ..\EAS\BSW\PduR\PduR.c	  7282  *
; ..\EAS\BSW\PduR\PduR.c	  7283  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  7284  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7285  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  7286  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_CddTpCopyTxData
; ..\EAS\BSW\PduR\PduR.c	  7287  (
; ..\EAS\BSW\PduR\PduR.c	  7288      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  7289      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  7290      P2VAR(RetryInfoType, AUTOMATIC, PDUR_APPL_DATA) retry,
; ..\EAS\BSW\PduR\PduR.c	  7291      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) availableDataPtr
; ..\EAS\BSW\PduR\PduR.c	  7292  )
; ..\EAS\BSW\PduR\PduR.c	  7293  {
; ..\EAS\BSW\PduR\PduR.c	  7294      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  7295      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  7296      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  7297  
; ..\EAS\BSW\PduR\PduR.c	  7298      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  7299      {
; ..\EAS\BSW\PduR\PduR.c	  7300          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  7301          PDUR_DET_REPORT_ERROR(PDUR_CDDTP_COPYTXDATA_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  7302      }
; ..\EAS\BSW\PduR\PduR.c	  7303      else if(id >= PDUR_GET_NUM_CDDTPTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  7304      {
; ..\EAS\BSW\PduR\PduR.c	  7305          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  7306          PDUR_DET_REPORT_ERROR(PDUR_CDDTP_COPYTXDATA_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  7307      }
; ..\EAS\BSW\PduR\PduR.c	  7308      else if(NULL_PTR == info)
; ..\EAS\BSW\PduR\PduR.c	  7309      {
; ..\EAS\BSW\PduR\PduR.c	  7310          PDUR_DET_REPORT_ERROR(PDUR_CDDTP_COPYTXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  7311      }
; ..\EAS\BSW\PduR\PduR.c	  7312      else if(NULL_PTR == availableDataPtr)
; ..\EAS\BSW\PduR\PduR.c	  7313      {
; ..\EAS\BSW\PduR\PduR.c	  7314          PDUR_DET_REPORT_ERROR(PDUR_CDDTP_COPYTXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  7315      }
; ..\EAS\BSW\PduR\PduR.c	  7316      else
; ..\EAS\BSW\PduR\PduR.c	  7317      {
; ..\EAS\BSW\PduR\PduR.c	  7318  #if(PDUR_MAX_NUMOFCDDTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  7319          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7320          PathId = PDUR_CDDTP_TXCONFPDUINFO(id).PathId;
; ..\EAS\BSW\PduR\PduR.c	  7321          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  7322          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  7323          {
; ..\EAS\BSW\PduR\PduR.c	  7324              result = PduR_LowerTpCopyTxData(PathId, PDUR_CDDTP_TXCONFPDUINFO(id).UpperPduId, info, retry, availableDataPtr);
; ..\EAS\BSW\PduR\PduR.c	  7325          }
; ..\EAS\BSW\PduR\PduR.c	  7326          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7327  #endif
; ..\EAS\BSW\PduR\PduR.c	  7328      }
; ..\EAS\BSW\PduR\PduR.c	  7329      return result;
; ..\EAS\BSW\PduR\PduR.c	  7330  }
; ..\EAS\BSW\PduR\PduR.c	  7331  
; ..\EAS\BSW\PduR\PduR.c	  7332  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  7333  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7334  * Function Name: PduR_CddTpTxConfirmation    SWS_PduR_00381
; ..\EAS\BSW\PduR\PduR.c	  7335  *
; ..\EAS\BSW\PduR\PduR.c	  7336  * Description:     This function is called after the I-PDU has been transmitted on
; ..\EAS\BSW\PduR\PduR.c	  7337  *                 its network, the result indicates whether the transmission was
; ..\EAS\BSW\PduR\PduR.c	  7338  *                 successful or not
; ..\EAS\BSW\PduR\PduR.c	  7339  *
; ..\EAS\BSW\PduR\PduR.c	  7340  * Inputs:         id - Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7341  *                 result - Result of the transmission of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7342  *
; ..\EAS\BSW\PduR\PduR.c	  7343  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  7344  *
; ..\EAS\BSW\PduR\PduR.c	  7345  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  7346  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7347  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  7348  FUNC(void, PDUR_CODE) PduR_CddTpTxConfirmation
; ..\EAS\BSW\PduR\PduR.c	  7349  (
; ..\EAS\BSW\PduR\PduR.c	  7350      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  7351      Std_ReturnType result
; ..\EAS\BSW\PduR\PduR.c	  7352  )
; ..\EAS\BSW\PduR\PduR.c	  7353  {
; ..\EAS\BSW\PduR\PduR.c	  7354      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  7355      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  7356  
; ..\EAS\BSW\PduR\PduR.c	  7357      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  7358      {
; ..\EAS\BSW\PduR\PduR.c	  7359          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  7360          PDUR_DET_REPORT_ERROR(PDUR_CDDTP_TXCONFIRMATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  7361      }
; ..\EAS\BSW\PduR\PduR.c	  7362      else if(id >= PDUR_GET_NUM_CDDTPTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  7363      {
; ..\EAS\BSW\PduR\PduR.c	  7364          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  7365          PDUR_DET_REPORT_ERROR(PDUR_CDDTP_TXCONFIRMATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  7366      }
; ..\EAS\BSW\PduR\PduR.c	  7367      else
; ..\EAS\BSW\PduR\PduR.c	  7368      {
; ..\EAS\BSW\PduR\PduR.c	  7369  #if(PDUR_MAX_NUMOFCDDTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  7370          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7371          PathId = PDUR_CDDTP_TXCONFPDUINFO(id).PathId;
; ..\EAS\BSW\PduR\PduR.c	  7372          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  7373          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  7374          {
; ..\EAS\BSW\PduR\PduR.c	  7375              PduR_LowerTpTxConfirmation(PathId, PDUR_CDDTP_TXCONFPDUINFO(id).UpperPduId, result);
; ..\EAS\BSW\PduR\PduR.c	  7376          }
; ..\EAS\BSW\PduR\PduR.c	  7377          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7378  #endif
; ..\EAS\BSW\PduR\PduR.c	  7379      }
; ..\EAS\BSW\PduR\PduR.c	  7380  }
; ..\EAS\BSW\PduR\PduR.c	  7381  #endif/*#if(STD_ON == PDUR_CDDTP_MODULE_SUPPORT)*/
; ..\EAS\BSW\PduR\PduR.c	  7382  
; ..\EAS\BSW\PduR\PduR.c	  7383  #if(STD_ON == PDUR_DOIPTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  7384  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  7385  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7386  * Function Name: PduR_DoIPTpStartOfReception    SWS_PduR_00507
; ..\EAS\BSW\PduR\PduR.c	  7387  *
; ..\EAS\BSW\PduR\PduR.c	  7388  * Description:     This function is called at the start of receiving an N-SDU.
; ..\EAS\BSW\PduR\PduR.c	  7389  *                The N-SDU might be fragmented into multiple N-PDUs (FF with one
; ..\EAS\BSW\PduR\PduR.c	  7390  *                or more following CFs) or might consist of a single N-PDU (SF).
; ..\EAS\BSW\PduR\PduR.c	  7391  *
; ..\EAS\BSW\PduR\PduR.c	  7392  * Inputs:         id   Identification of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7393  *                 TpSduLength  Total length of the PDU to be received.
; ..\EAS\BSW\PduR\PduR.c	  7394  *
; ..\EAS\BSW\PduR\PduR.c	  7395  * Outputs:         bufferSizePtr  Available receive buffer in the receiving module.
; ..\EAS\BSW\PduR\PduR.c	  7396  *                               This parameter will be used to compute the Block
; ..\EAS\BSW\PduR\PduR.c	  7397  *                               Size (BS) in the transport protocol module
; ..\EAS\BSW\PduR\PduR.c	  7398  *
; ..\EAS\BSW\PduR\PduR.c	  7399  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  7400  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7401  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  7402  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_DoIPTpStartOfReception
; Function PduR_DoIPTpStartOfReception
.L218:
PduR_DoIPTpStartOfReception:	.type	func
	mov.aa	a15,a4
.L830:
	mov.aa	a6,a5
.L831:

; ..\EAS\BSW\PduR\PduR.c	  7403  (
; ..\EAS\BSW\PduR\PduR.c	  7404      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  7405      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  7406      PduLengthType TpSduLength,
; ..\EAS\BSW\PduR\PduR.c	  7407      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  7408  )
; ..\EAS\BSW\PduR\PduR.c	  7409  {
; ..\EAS\BSW\PduR\PduR.c	  7410      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
	mov	d2,#1
.L832:

; ..\EAS\BSW\PduR\PduR.c	  7411      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  7412  
; ..\EAS\BSW\PduR\PduR.c	  7413      if(!PDUR_IS_INITIALIZED())
	movh.a	a2,#@his(PduR_InitStatus)
	ld.bu	d15,[a2]@los(PduR_InitStatus)
	jne	d15,#1,.L138
.L1022:

; ..\EAS\BSW\PduR\PduR.c	  7414      {
; ..\EAS\BSW\PduR\PduR.c	  7415          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  7416          PDUR_DET_REPORT_ERROR(PDUR_DOIPTP_STARTOFRECEPTION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  7417      }
; ..\EAS\BSW\PduR\PduR.c	  7418      else if(id >= PDUR_GET_NUM_DOIPTPRXPDU())
	jge.u	d4,#2,.L139
.L1023:

; ..\EAS\BSW\PduR\PduR.c	  7419      {
; ..\EAS\BSW\PduR\PduR.c	  7420          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  7421          PDUR_DET_REPORT_ERROR(PDUR_DOIPTP_STARTOFRECEPTION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  7422      }
; ..\EAS\BSW\PduR\PduR.c	  7423      else if(NULL_PTR == bufferSizePtr)
	mov.a	a2,#0
.L1024:
	jeq.a	a2,a6,.L140
.L1025:

; ..\EAS\BSW\PduR\PduR.c	  7424      {
; ..\EAS\BSW\PduR\PduR.c	  7425          PDUR_DET_REPORT_ERROR(PDUR_DOIPTP_STARTOFRECEPTION_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  7426      }
; ..\EAS\BSW\PduR\PduR.c	  7427      else
; ..\EAS\BSW\PduR\PduR.c	  7428      {
; ..\EAS\BSW\PduR\PduR.c	  7429  #if(PDUR_MAX_NUMOFDOIPTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  7430          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7431          pRxPduInfo = &(PDUR_DOIPTP_RXPDUINFO(id));
	mul	d15,d4,#12
	movh.a	a2,#@his(PduRDoIPTpRxPduInfo)
	lea	a2,[a2]@los(PduRDoIPTpRxPduInfo)
	addsc.a	a4,a2,d15,#0
.L829:

; ..\EAS\BSW\PduR\PduR.c	  7432          result = PduR_LowerTpMultiStartOfReception(pRxPduInfo, info, TpSduLength, bufferSizePtr);
	mov.aa	a5,a15
.L827:
	mov	d4,d5
.L828:
	j	PduR_LowerTpMultiStartOfReception
.L140:
.L139:
.L138:

; ..\EAS\BSW\PduR\PduR.c	  7433          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7434  #endif
; ..\EAS\BSW\PduR\PduR.c	  7435      }
; ..\EAS\BSW\PduR\PduR.c	  7436  
; ..\EAS\BSW\PduR\PduR.c	  7437      return result;
; ..\EAS\BSW\PduR\PduR.c	  7438  }
	ret
.L487:
	
__PduR_DoIPTpStartOfReception_function_end:
	.size	PduR_DoIPTpStartOfReception,__PduR_DoIPTpStartOfReception_function_end-PduR_DoIPTpStartOfReception
.L300:
	; End of function
	
	.sdecl	'.text.PduR.PduR_DoIPTpCopyRxData',code,cluster('PduR_DoIPTpCopyRxData')
	.sect	'.text.PduR.PduR_DoIPTpCopyRxData'
	.align	2
	
	.global	PduR_DoIPTpCopyRxData

; ..\EAS\BSW\PduR\PduR.c	  7439  
; ..\EAS\BSW\PduR\PduR.c	  7440  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  7441  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7442  * Function Name: PduR_DoIPTpCopyRxData    SWS_PduR_00512
; ..\EAS\BSW\PduR\PduR.c	  7443  *
; ..\EAS\BSW\PduR\PduR.c	  7444  * Description:     This function is called when a transport protocol module has data
; ..\EAS\BSW\PduR\PduR.c	  7445  *                to copy for the receiving module. Several calls may be made during
; ..\EAS\BSW\PduR\PduR.c	  7446  *                one transportation of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7447  *
; ..\EAS\BSW\PduR\PduR.c	  7448  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7449  *                 info Pointer to the buffer (SduDataPtr) and its length (SduLength)
; ..\EAS\BSW\PduR\PduR.c	  7450  *                      containing the data to be copied by PDU Router module in case
; ..\EAS\BSW\PduR\PduR.c	  7451  *                      of gateway or upper layer module in case of reception
; ..\EAS\BSW\PduR\PduR.c	  7452  *
; ..\EAS\BSW\PduR\PduR.c	  7453  * Outputs:         bufferSizePtr    Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  7454  *
; ..\EAS\BSW\PduR\PduR.c	  7455  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  7456  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7457  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  7458  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_DoIPTpCopyRxData
; Function PduR_DoIPTpCopyRxData
.L220:
PduR_DoIPTpCopyRxData:	.type	func
	mov.aa	a15,a4
.L835:
	mov.aa	a6,a5
.L836:

; ..\EAS\BSW\PduR\PduR.c	  7459  (
; ..\EAS\BSW\PduR\PduR.c	  7460      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  7461      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  7462      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  7463  )
; ..\EAS\BSW\PduR\PduR.c	  7464  {
; ..\EAS\BSW\PduR\PduR.c	  7465      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
	mov	d2,#1
.L837:

; ..\EAS\BSW\PduR\PduR.c	  7466      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  7467  
; ..\EAS\BSW\PduR\PduR.c	  7468      if(!PDUR_IS_INITIALIZED())
	movh.a	a2,#@his(PduR_InitStatus)
	ld.bu	d15,[a2]@los(PduR_InitStatus)
	jne	d15,#1,.L142
.L1030:

; ..\EAS\BSW\PduR\PduR.c	  7469      {
; ..\EAS\BSW\PduR\PduR.c	  7470          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  7471          PDUR_DET_REPORT_ERROR(PDUR_DOIPTP_COPYRXDATA_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  7472      }
; ..\EAS\BSW\PduR\PduR.c	  7473      else if(id >= PDUR_GET_NUM_DOIPTPRXPDU())
	jge.u	d4,#2,.L143
.L1031:

; ..\EAS\BSW\PduR\PduR.c	  7474      {
; ..\EAS\BSW\PduR\PduR.c	  7475          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  7476          PDUR_DET_REPORT_ERROR(PDUR_DOIPTP_COPYRXDATA_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  7477      }
; ..\EAS\BSW\PduR\PduR.c	  7478      else if(NULL_PTR == info)
	mov.a	a2,#0
.L1032:
	jeq.a	a2,a15,.L144
.L1033:

; ..\EAS\BSW\PduR\PduR.c	  7479      {
; ..\EAS\BSW\PduR\PduR.c	  7480          PDUR_DET_REPORT_ERROR(PDUR_DOIPTP_COPYRXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  7481      }
; ..\EAS\BSW\PduR\PduR.c	  7482      else
; ..\EAS\BSW\PduR\PduR.c	  7483      {
; ..\EAS\BSW\PduR\PduR.c	  7484  #if(PDUR_MAX_NUMOFDOIPTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  7485          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7486          pRxPduInfo = &(PDUR_DOIPTP_RXPDUINFO(id));
	mul	d15,d4,#12
	movh.a	a2,#@his(PduRDoIPTpRxPduInfo)
	lea	a2,[a2]@los(PduRDoIPTpRxPduInfo)
	addsc.a	a4,a2,d15,#0
.L834:

; ..\EAS\BSW\PduR\PduR.c	  7487          result = PduR_LowerTpMultiCopyRxData(pRxPduInfo, info, bufferSizePtr);
	mov.aa	a5,a15
.L833:
	j	PduR_LowerTpMultiCopyRxData
.L144:
.L143:
.L142:

; ..\EAS\BSW\PduR\PduR.c	  7488          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7489  #endif
; ..\EAS\BSW\PduR\PduR.c	  7490      }
; ..\EAS\BSW\PduR\PduR.c	  7491  
; ..\EAS\BSW\PduR\PduR.c	  7492      return result;
; ..\EAS\BSW\PduR\PduR.c	  7493  }
	ret
.L494:
	
__PduR_DoIPTpCopyRxData_function_end:
	.size	PduR_DoIPTpCopyRxData,__PduR_DoIPTpCopyRxData_function_end-PduR_DoIPTpCopyRxData
.L305:
	; End of function
	
	.sdecl	'.text.PduR.PduR_DoIPTpRxIndication',code,cluster('PduR_DoIPTpRxIndication')
	.sect	'.text.PduR.PduR_DoIPTpRxIndication'
	.align	2
	
	.global	PduR_DoIPTpRxIndication

; ..\EAS\BSW\PduR\PduR.c	  7494  
; ..\EAS\BSW\PduR\PduR.c	  7495  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  7496  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7497  * Function Name: PduR_DoIPRxIndication    SWS_PduR_00375
; ..\EAS\BSW\PduR\PduR.c	  7498  *
; ..\EAS\BSW\PduR\PduR.c	  7499  * Description:     Called by the transport protocol module after an I-PDU has been
; ..\EAS\BSW\PduR\PduR.c	  7500  *                received successfully or when an error occurred. It is also used
; ..\EAS\BSW\PduR\PduR.c	  7501  *                to confirm cancellation of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7502  *
; ..\EAS\BSW\PduR\PduR.c	  7503  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7504  *                 result Result of the reception.
; ..\EAS\BSW\PduR\PduR.c	  7505  *
; ..\EAS\BSW\PduR\PduR.c	  7506  * Outputs:         bufferSizePtr  Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  7507  *
; ..\EAS\BSW\PduR\PduR.c	  7508  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  7509  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7510  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  7511  FUNC(void, PDUR_CODE) PduR_DoIPTpRxIndication
; Function PduR_DoIPTpRxIndication
.L222:
PduR_DoIPTpRxIndication:	.type	func

; ..\EAS\BSW\PduR\PduR.c	  7512  (
; ..\EAS\BSW\PduR\PduR.c	  7513      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  7514      Std_ReturnType result
; ..\EAS\BSW\PduR\PduR.c	  7515  )
; ..\EAS\BSW\PduR\PduR.c	  7516  {
; ..\EAS\BSW\PduR\PduR.c	  7517      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  7518  
; ..\EAS\BSW\PduR\PduR.c	  7519      if(!PDUR_IS_INITIALIZED())
	movh.a	a15,#@his(PduR_InitStatus)
	ld.bu	d15,[a15]@los(PduR_InitStatus)
	jne	d15,#1,.L146
.L1038:

; ..\EAS\BSW\PduR\PduR.c	  7520      {
; ..\EAS\BSW\PduR\PduR.c	  7521          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  7522          PDUR_DET_REPORT_ERROR(PDUR_DOIPTP_RXINDICATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  7523      }
; ..\EAS\BSW\PduR\PduR.c	  7524      else if(id >= PDUR_GET_NUM_DOIPTPRXPDU())
	jge.u	d4,#2,.L147
.L1039:

; ..\EAS\BSW\PduR\PduR.c	  7525      {
; ..\EAS\BSW\PduR\PduR.c	  7526          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  7527          PDUR_DET_REPORT_ERROR(PDUR_DOIPTP_RXINDICATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  7528      }
; ..\EAS\BSW\PduR\PduR.c	  7529      else
; ..\EAS\BSW\PduR\PduR.c	  7530      {
; ..\EAS\BSW\PduR\PduR.c	  7531  #if(PDUR_MAX_NUMOFDOIPTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  7532          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7533          pRxPduInfo = &(PDUR_DOIPTP_RXPDUINFO(id));
	mul	d15,d4,#12
	movh.a	a15,#@his(PduRDoIPTpRxPduInfo)
	lea	a15,[a15]@los(PduRDoIPTpRxPduInfo)
	addsc.a	a4,a15,d15,#0
.L839:

; ..\EAS\BSW\PduR\PduR.c	  7534          PduR_LowerTpMultiRxIndication(pRxPduInfo, result);
	mov	d4,d5
.L838:
	j	PduR_LowerTpMultiRxIndication
.L147:
.L146:

; ..\EAS\BSW\PduR\PduR.c	  7535          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7536  #endif
; ..\EAS\BSW\PduR\PduR.c	  7537      }
; ..\EAS\BSW\PduR\PduR.c	  7538  }
	ret
.L500:
	
__PduR_DoIPTpRxIndication_function_end:
	.size	PduR_DoIPTpRxIndication,__PduR_DoIPTpRxIndication_function_end-PduR_DoIPTpRxIndication
.L310:
	; End of function
	
	.sdecl	'.text.PduR.PduR_DoIPTpCopyTxData',code,cluster('PduR_DoIPTpCopyTxData')
	.sect	'.text.PduR.PduR_DoIPTpCopyTxData'
	.align	2
	
	.global	PduR_DoIPTpCopyTxData

; ..\EAS\BSW\PduR\PduR.c	  7539  
; ..\EAS\BSW\PduR\PduR.c	  7540  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  7541  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7542  * Function Name: PduR_DoIPTpCopyTxData    SWS_PduR_00518
; ..\EAS\BSW\PduR\PduR.c	  7543  *
; ..\EAS\BSW\PduR\PduR.c	  7544  * Description:     This function is called by the transport protocol module to query
; ..\EAS\BSW\PduR\PduR.c	  7545  *                the transmit data of an I-PDU segment.
; ..\EAS\BSW\PduR\PduR.c	  7546  *
; ..\EAS\BSW\PduR\PduR.c	  7547  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7548  *                 info Provides destination buffer and the number of bytes to copy.
; ..\EAS\BSW\PduR\PduR.c	  7549  *                     In case of gateway the PDU Router module will copy, otherwise
; ..\EAS\BSW\PduR\PduR.c	  7550  *                     the source upper layer module will copy the data. If not enough
; ..\EAS\BSW\PduR\PduR.c	  7551  *                     transmit data is available, no data is copied. The transport
; ..\EAS\BSW\PduR\PduR.c	  7552  *                     protocol module will retry. A copy size of 0 can be used to
; ..\EAS\BSW\PduR\PduR.c	  7553  *                     indicate state changes in the retry parameter.
; ..\EAS\BSW\PduR\PduR.c	  7554  *                retry This parameter is used to retransmit data because problems
; ..\EAS\BSW\PduR\PduR.c	  7555  *                      during the last service call.
; ..\EAS\BSW\PduR\PduR.c	  7556  *
; ..\EAS\BSW\PduR\PduR.c	  7557  *
; ..\EAS\BSW\PduR\PduR.c	  7558  * Outputs:         availableDataPtr  Indicates the remaining number of bytes that are
; ..\EAS\BSW\PduR\PduR.c	  7559  *                                  available in the PduR Tx buffer. AvailableTxDataCntPtr
; ..\EAS\BSW\PduR\PduR.c	  7560  *                                  can be used by TP modules that support dynamic payload
; ..\EAS\BSW\PduR\PduR.c	  7561  *                                  lengths (e.g. Iso FrTp) to determine the size of the
; ..\EAS\BSW\PduR\PduR.c	  7562  *                                  following CFs.
; ..\EAS\BSW\PduR\PduR.c	  7563  *
; ..\EAS\BSW\PduR\PduR.c	  7564  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  7565  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7566  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  7567  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_DoIPTpCopyTxData
; Function PduR_DoIPTpCopyTxData
.L224:
PduR_DoIPTpCopyTxData:	.type	func

; ..\EAS\BSW\PduR\PduR.c	  7568  (
; ..\EAS\BSW\PduR\PduR.c	  7569      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  7570      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  7571      P2VAR(RetryInfoType, AUTOMATIC, PDUR_APPL_DATA) retry,
; ..\EAS\BSW\PduR\PduR.c	  7572      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) availableDataPtr
; ..\EAS\BSW\PduR\PduR.c	  7573  )
; ..\EAS\BSW\PduR\PduR.c	  7574  {
; ..\EAS\BSW\PduR\PduR.c	  7575      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
	mov	d2,#1
.L841:

; ..\EAS\BSW\PduR\PduR.c	  7576      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  7577      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  7578  
; ..\EAS\BSW\PduR\PduR.c	  7579      if(!PDUR_IS_INITIALIZED())
	movh.a	a15,#@his(PduR_InitStatus)
	ld.bu	d15,[a15]@los(PduR_InitStatus)
	jne	d15,#1,.L148
.L1044:

; ..\EAS\BSW\PduR\PduR.c	  7580      {
; ..\EAS\BSW\PduR\PduR.c	  7581          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  7582          PDUR_DET_REPORT_ERROR(PDUR_DOIPTP_COPYTXDATA_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  7583      }
; ..\EAS\BSW\PduR\PduR.c	  7584      else if(id >= PDUR_GET_NUM_DOIPTPTXPDU())
	jne	d4,#0,.L149
.L1045:

; ..\EAS\BSW\PduR\PduR.c	  7585      {
; ..\EAS\BSW\PduR\PduR.c	  7586          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  7587          PDUR_DET_REPORT_ERROR(PDUR_DOIPTP_COPYTXDATA_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  7588      }
; ..\EAS\BSW\PduR\PduR.c	  7589      else if(NULL_PTR == info)
	mov.a	a15,#0
.L1046:
	jeq.a	a15,a4,.L150
.L1047:

; ..\EAS\BSW\PduR\PduR.c	  7590      {
; ..\EAS\BSW\PduR\PduR.c	  7591          PDUR_DET_REPORT_ERROR(PDUR_DOIPTP_COPYTXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  7592      }
; ..\EAS\BSW\PduR\PduR.c	  7593      else if(NULL_PTR == availableDataPtr)
	jeq.a	a15,a6,.L151
.L1048:

; ..\EAS\BSW\PduR\PduR.c	  7594      {
; ..\EAS\BSW\PduR\PduR.c	  7595          PDUR_DET_REPORT_ERROR(PDUR_DOIPTP_COPYTXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  7596      }
; ..\EAS\BSW\PduR\PduR.c	  7597      else
; ..\EAS\BSW\PduR\PduR.c	  7598      {
; ..\EAS\BSW\PduR\PduR.c	  7599  #if(PDUR_MAX_NUMOFDOIPTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  7600          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7601          PathId = PDUR_DOIPTP_TXCONFPDUINFO(id).PathId;
	movh.a	a15,#@his(PduRDoIPTpTxConfPduInfo)
	lea	a15,[a15]@los(PduRDoIPTpTxConfPduInfo)
	addsc.a	a15,a15,d4,#1
.L1049:
	ld.bu	d0,[a15]
.L842:

; ..\EAS\BSW\PduR\PduR.c	  7602          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
	mul	d15,d0,#20
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1050:
	ld.hu	d15,[a15]14
.L843:

; ..\EAS\BSW\PduR\PduR.c	  7603          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
	mov.u	d1,#65535
.L1051:
	jeq	d15,d1,.L152
.L1052:
	movh.a	a15,#@his(PduR_RoutingPathGroupEnabled)
	lea	a15,[a15]@los(PduR_RoutingPathGroupEnabled)
.L1053:
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L844:
	jne	d15,#1,.L153
.L152:

; ..\EAS\BSW\PduR\PduR.c	  7604          {
; ..\EAS\BSW\PduR\PduR.c	  7605              result = PduR_LowerTpCopyTxData(PathId, PDUR_DOIPTP_TXCONFPDUINFO(id).UpperPduId, info, retry, availableDataPtr);
	movh.a	a15,#@his(PduRDoIPTpTxConfPduInfo)
	lea	a15,[a15]@los(PduRDoIPTpTxConfPduInfo)
	addsc.a	a15,a15,d4,#1
.L1054:
	ld.bu	d5,[a15]1
.L1055:
	mov	d4,d0
.L840:
	j	PduR_LowerTpCopyTxData
.L153:
.L151:
.L150:
.L149:
.L148:

; ..\EAS\BSW\PduR\PduR.c	  7606          }
; ..\EAS\BSW\PduR\PduR.c	  7607          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7608  #endif
; ..\EAS\BSW\PduR\PduR.c	  7609      }
; ..\EAS\BSW\PduR\PduR.c	  7610      return result;
; ..\EAS\BSW\PduR\PduR.c	  7611  }
	ret
.L504:
	
__PduR_DoIPTpCopyTxData_function_end:
	.size	PduR_DoIPTpCopyTxData,__PduR_DoIPTpCopyTxData_function_end-PduR_DoIPTpCopyTxData
.L315:
	; End of function
	
	.sdecl	'.text.PduR.PduR_DoIPTpTxConfirmation',code,cluster('PduR_DoIPTpTxConfirmation')
	.sect	'.text.PduR.PduR_DoIPTpTxConfirmation'
	.align	2
	
	.global	PduR_DoIPTpTxConfirmation

; ..\EAS\BSW\PduR\PduR.c	  7612  
; ..\EAS\BSW\PduR\PduR.c	  7613  
; ..\EAS\BSW\PduR\PduR.c	  7614  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  7615  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7616  * Function Name: PduR_DoIPTpTxConfirmation    SWS_PduR_00381
; ..\EAS\BSW\PduR\PduR.c	  7617  *
; ..\EAS\BSW\PduR\PduR.c	  7618  * Description:     This function is called after the I-PDU has been transmitted on
; ..\EAS\BSW\PduR\PduR.c	  7619  *                its network, the result indicates whether the transmission was
; ..\EAS\BSW\PduR\PduR.c	  7620  *                successful or not
; ..\EAS\BSW\PduR\PduR.c	  7621  *
; ..\EAS\BSW\PduR\PduR.c	  7622  * Inputs:         id - Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7623  *                result - Result of the transmission of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7624  *
; ..\EAS\BSW\PduR\PduR.c	  7625  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  7626  *
; ..\EAS\BSW\PduR\PduR.c	  7627  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  7628  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7629  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  7630  FUNC(void, PDUR_CODE) PduR_DoIPTpTxConfirmation
; Function PduR_DoIPTpTxConfirmation
.L226:
PduR_DoIPTpTxConfirmation:	.type	func
	mov	d6,d5
.L847:

; ..\EAS\BSW\PduR\PduR.c	  7631  (
; ..\EAS\BSW\PduR\PduR.c	  7632      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  7633      Std_ReturnType result
; ..\EAS\BSW\PduR\PduR.c	  7634  )
; ..\EAS\BSW\PduR\PduR.c	  7635  {
; ..\EAS\BSW\PduR\PduR.c	  7636      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  7637      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  7638  
; ..\EAS\BSW\PduR\PduR.c	  7639      if(!PDUR_IS_INITIALIZED())
	movh.a	a15,#@his(PduR_InitStatus)
	ld.bu	d15,[a15]@los(PduR_InitStatus)
	jne	d15,#1,.L155
.L1060:

; ..\EAS\BSW\PduR\PduR.c	  7640      {
; ..\EAS\BSW\PduR\PduR.c	  7641          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  7642          PDUR_DET_REPORT_ERROR(PDUR_DOIPTP_TXCONFIRMATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  7643      }
; ..\EAS\BSW\PduR\PduR.c	  7644      else if(id >= PDUR_GET_NUM_DOIPTPTXPDU())
	jne	d4,#0,.L156
.L1061:

; ..\EAS\BSW\PduR\PduR.c	  7645      {
; ..\EAS\BSW\PduR\PduR.c	  7646          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  7647          PDUR_DET_REPORT_ERROR(PDUR_DOIPTP_TXCONFIRMATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  7648      }
; ..\EAS\BSW\PduR\PduR.c	  7649      else
; ..\EAS\BSW\PduR\PduR.c	  7650      {
; ..\EAS\BSW\PduR\PduR.c	  7651  #if(PDUR_MAX_NUMOFDOIPTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  7652          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7653          PathId = PDUR_DOIPTP_TXCONFPDUINFO(id).PathId;
	movh.a	a15,#@his(PduRDoIPTpTxConfPduInfo)
	lea	a15,[a15]@los(PduRDoIPTpTxConfPduInfo)
	addsc.a	a15,a15,d4,#1
.L1062:
	ld.bu	d0,[a15]
.L848:

; ..\EAS\BSW\PduR\PduR.c	  7654          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
	mul	d15,d0,#20
	movh.a	a15,#@his(PduRRoutingTable)
	lea	a15,[a15]@los(PduRRoutingTable)
	addsc.a	a15,a15,d15,#0
.L1063:
	ld.hu	d15,[a15]14
.L849:

; ..\EAS\BSW\PduR\PduR.c	  7655          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
	mov.u	d1,#65535
.L1064:
	jeq	d15,d1,.L157
.L1065:
	movh.a	a15,#@his(PduR_RoutingPathGroupEnabled)
	lea	a15,[a15]@los(PduR_RoutingPathGroupEnabled)
.L1066:
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L850:
	jne	d15,#1,.L158
.L157:

; ..\EAS\BSW\PduR\PduR.c	  7656          {
; ..\EAS\BSW\PduR\PduR.c	  7657              PduR_LowerTpTxConfirmation(PathId, PDUR_DOIPTP_TXCONFPDUINFO(id).UpperPduId, result);
	movh.a	a15,#@his(PduRDoIPTpTxConfPduInfo)
	lea	a15,[a15]@los(PduRDoIPTpTxConfPduInfo)
	addsc.a	a15,a15,d4,#1
.L1067:
	ld.bu	d5,[a15]1
.L846:
	mov	d4,d0
.L845:
	j	PduR_LowerTpTxConfirmation
.L158:
.L156:
.L155:

; ..\EAS\BSW\PduR\PduR.c	  7658          }
; ..\EAS\BSW\PduR\PduR.c	  7659          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7660  #endif
; ..\EAS\BSW\PduR\PduR.c	  7661      }
; ..\EAS\BSW\PduR\PduR.c	  7662  }
	ret
.L512:
	
__PduR_DoIPTpTxConfirmation_function_end:
	.size	PduR_DoIPTpTxConfirmation,__PduR_DoIPTpTxConfirmation_function_end-PduR_DoIPTpTxConfirmation
.L320:
	; End of function
	
	.sdecl	'.data.PduR.PduR_InitStatus',data,cluster('PduR_InitStatus')
	.sect	'.data.PduR.PduR_InitStatus'
PduR_InitStatus:	.type	object
	.size	PduR_InitStatus,1
	.space	1
	.sdecl	'.rodata.PduR.PduR_ModuleFunctions',data,rom,cluster('PduR_ModuleFunctions')
	.sect	'.rodata.PduR.PduR_ModuleFunctions'
	.align	4
PduR_ModuleFunctions:	.type	object
	.size	PduR_ModuleFunctions,312
	.space	20
	.word	Com_RxIndication,Com_TriggerTransmit,Com_TxConfirmation,Com_CopyRxData
	.word	Com_CopyTxData,Com_StartOfReception,Com_TpRxIndication,Com_TpTxConfirmation
	.space	28
	.word	Dcm_TxConfirmation,Dcm_CopyRxData,Dcm_CopyTxData,Dcm_StartOfReception
	.word	Dcm_TpRxIndication,Dcm_TpTxConfirmation
	.space	4
	.word	CanIf_Transmit
	.space	60
	.word	CanTp_Transmit
	.space	40
	.word	DoIP_TpCancelReceive,DoIP_TpCancelTransmit,DoIP_TpTransmit
	.space	36
	.word	SoAd_IfTransmit
	.space	44
	.sdecl	'.bss.PduR.PduR_RoutingPathGroupEnabled',data,cluster('PduR_RoutingPathGroupEnabled')
	.sect	'.bss.PduR.PduR_RoutingPathGroupEnabled'
PduR_RoutingPathGroupEnabled:	.type	object
	.size	PduR_RoutingPathGroupEnabled,1
	.space	1
	.sdecl	'.data.PduR.ComTxConfMask',data,cluster('ComTxConfMask')
	.sect	'.data.PduR.ComTxConfMask'
ComTxConfMask:	.type	object
	.size	ComTxConfMask,46
	.space	46
	.sdecl	'.data.PduR.ComTxErrorMask',data,cluster('ComTxErrorMask')
	.sect	'.data.PduR.ComTxErrorMask'
ComTxErrorMask:	.type	object
	.size	ComTxErrorMask,46
	.space	46
	.sdecl	'.data.PduR.DcmTxConfMask',data,cluster('DcmTxConfMask')
	.sect	'.data.PduR.DcmTxConfMask'
DcmTxConfMask:	.type	object
	.size	DcmTxConfMask,2
	.space	2
	.sdecl	'.data.PduR.DcmTxErrorMask',data,cluster('DcmTxErrorMask')
	.sect	'.data.PduR.DcmTxErrorMask'
DcmTxErrorMask:	.type	object
	.size	DcmTxErrorMask,2
	.space	2
	.calls	'__INDIRECT__','Com_TriggerTransmit'
	.calls	'__INDIRECT__','Com_RxIndication'
	.calls	'__INDIRECT__','Com_TxConfirmation'
	.calls	'__INDIRECT__','Com_TpTxConfirmation'
	.calls	'__INDIRECT__','Com_CopyTxData'
	.calls	'__INDIRECT__','Com_TpRxIndication'
	.calls	'__INDIRECT__','Com_StartOfReception'
	.calls	'__INDIRECT__','Com_CopyRxData'
	.calls	'__INDIRECT__','Dcm_StartOfReception'
	.calls	'__INDIRECT__','Dcm_CopyRxData'
	.calls	'__INDIRECT__','Dcm_TpRxIndication'
	.calls	'__INDIRECT__','Dcm_CopyTxData'
	.calls	'__INDIRECT__','Dcm_TpTxConfirmation'
	.calls	'__INDIRECT__','Dcm_TxConfirmation'
	.calls	'__INDIRECT__','CanIf_Transmit'
	.calls	'__INDIRECT__','CanTp_Transmit'
	.calls	'__INDIRECT__','SoAd_IfTransmit'
	.calls	'__INDIRECT__','DoIP_TpTransmit'
	.calls	'__INDIRECT__','DoIP_TpCancelTransmit'
	.calls	'__INDIRECT__','DoIP_TpCancelReceive'
	.calls	'PduR_LowerIfRxIndication','__INDIRECT__'
	.calls	'PduR_LowerIfTxConfirmation','__INDIRECT__'
	.calls	'PduR_LowerIfTriggerTransmit','__INDIRECT__'
	.calls	'PduR_LowerIfMultiRxIndication','PduR_LowerIfRxIndication'
	.calls	'PduR_UpTransmit','__INDIRECT__'
	.calls	'PduR_LowerTpStartOfReception','__INDIRECT__'
	.calls	'PduR_LowerTpCopyRxData','__INDIRECT__'
	.calls	'PduR_LowerTpRxIndication','__INDIRECT__'
	.calls	'PduR_LowerTpCopyTxData','__INDIRECT__'
	.calls	'PduR_LowerTpTxConfirmation','__INDIRECT__'
	.calls	'PduR_LowerTpMultiStartOfReception','PduR_LowerTpStartOfReception'
	.calls	'PduR_LowerTpMultiCopyRxData','PduR_LowerTpCopyRxData'
	.calls	'PduR_LowerTpMultiRxIndication','PduR_LowerTpRxIndication'
	.calls	'PduR_ComTransmit','PduR_UpTransmit'
	.calls	'PduR_DcmTransmit','PduR_UpTransmit'
	.calls	'PduR_CanIfRxIndication','PduR_LowerIfMultiRxIndication'
	.calls	'PduR_CanIfTxConfirmation','PduR_LowerIfTxConfirmation'
	.calls	'PduR_SoAdIfRxIndication','PduR_LowerIfMultiRxIndication'
	.calls	'PduR_SoAdIfTxConfirmation','PduR_LowerIfTxConfirmation'
	.calls	'PduR_SoAdIfTriggerTransmit','PduR_LowerIfTriggerTransmit'
	.calls	'PduR_CanTpStartOfReception','PduR_LowerTpMultiStartOfReception'
	.calls	'PduR_CanTpCopyRxData','PduR_LowerTpMultiCopyRxData'
	.calls	'PduR_CanTpRxIndication','PduR_LowerTpMultiRxIndication'
	.calls	'PduR_CanTpCopyTxData','PduR_LowerTpCopyTxData'
	.calls	'PduR_CanTpTxConfirmation','PduR_LowerTpTxConfirmation'
	.calls	'PduR_DoIPTpStartOfReception','PduR_LowerTpMultiStartOfReception'
	.calls	'PduR_DoIPTpCopyRxData','PduR_LowerTpMultiCopyRxData'
	.calls	'PduR_DoIPTpRxIndication','PduR_LowerTpMultiRxIndication'
	.calls	'PduR_DoIPTpCopyTxData','PduR_LowerTpCopyTxData'
	.calls	'PduR_DoIPTpTxConfirmation','PduR_LowerTpTxConfirmation'
	.calls	'PduR_LowerIfRxIndication','',0
	.calls	'PduR_LowerIfTxConfirmation','',0
	.calls	'PduR_LowerIfTriggerTransmit','',0
	.calls	'PduR_LowerIfMultiRxIndication','',0
	.calls	'PduR_UpTransmit','',0
	.calls	'PduR_LowerTpStartOfReception','',0
	.calls	'PduR_LowerTpCopyRxData','',0
	.calls	'PduR_LowerTpRxIndication','',0
	.calls	'PduR_LowerTpCopyTxData','',8
	.calls	'PduR_LowerTpTxConfirmation','',0
	.calls	'PduR_LowerTpMultiStartOfReception','',0
	.calls	'PduR_LowerTpMultiCopyRxData','',0
	.calls	'PduR_LowerTpMultiRxIndication','',0
	.calls	'PduR_Init','',0
	.calls	'PduR_GetConfigurationId','',0
	.calls	'PduR_EnableRouting','',0
	.calls	'PduR_DisableRouting','',0
	.calls	'PduR_ComTransmit','',0
	.calls	'PduR_DcmTransmit','',0
	.calls	'PduR_CanIfRxIndication','',0
	.calls	'PduR_CanIfTxConfirmation','',0
	.calls	'PduR_SoAdIfRxIndication','',0
	.calls	'PduR_SoAdIfTxConfirmation','',0
	.calls	'PduR_SoAdIfTriggerTransmit','',0
	.calls	'PduR_CanTpStartOfReception','',0
	.calls	'PduR_CanTpCopyRxData','',0
	.calls	'PduR_CanTpRxIndication','',0
	.calls	'PduR_CanTpCopyTxData','',0
	.calls	'PduR_CanTpTxConfirmation','',0
	.calls	'PduR_DoIPTpStartOfReception','',0
	.calls	'PduR_DoIPTpCopyRxData','',0
	.calls	'PduR_DoIPTpRxIndication','',0
	.calls	'PduR_DoIPTpCopyTxData','',0
	.extern	PduR_RPGroupEnabledAtInit
	.extern	PduRRoutingTable
	.extern	PduRComTxPduInfo
	.extern	PduRDcmTxPduInfo
	.extern	PduRCanIfRxPduInfo
	.extern	PduRCanTpRxPduInfo
	.extern	PduRSoAdIfRxPduInfo
	.extern	PduRDoIPTpRxPduInfo
	.extern	PduRCanIfTxConfPduInfo
	.extern	PduRCanTpTxConfPduInfo
	.extern	PduRSoAdIfTxConfPduInfo
	.extern	PduRDoIPTpTxConfPduInfo
	.extern	Com_TriggerTransmit
	.extern	Com_RxIndication
	.extern	Com_TxConfirmation
	.extern	Com_TpTxConfirmation
	.extern	Com_CopyTxData
	.extern	Com_TpRxIndication
	.extern	Com_StartOfReception
	.extern	Com_CopyRxData
	.extern	Dcm_StartOfReception
	.extern	Dcm_CopyRxData
	.extern	Dcm_TpRxIndication
	.extern	Dcm_CopyTxData
	.extern	Dcm_TpTxConfirmation
	.extern	Dcm_TxConfirmation
	.extern	CanIf_Transmit
	.extern	CanTp_Transmit
	.extern	SoAd_IfTransmit
	.extern	DoIP_TpTransmit
	.extern	DoIP_TpCancelTransmit
	.extern	DoIP_TpCancelReceive
	.extern	__INDIRECT__
	.calls	'PduR_DoIPTpTxConfirmation','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L228:
	.word	133273
	.half	3
	.word	.L229
	.byte	4
.L227:
	.byte	1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L230
.L420:
	.byte	2
	.byte	'unsigned char',0,1,8,2
	.byte	'unsigned int',0,4,7,3
	.byte	'OsIntc_InISR2',0,3,1,227,1,31,1,1,4
	.byte	'CoreID',0,1,229,1,16
	.word	146
	.byte	4
	.byte	'ISRID',0,1,230,1,13
	.word	146
	.byte	4
	.byte	'val',0,1,231,1,15
	.word	163
	.byte	4
	.byte	'fcx',0,1,232,1,15
	.word	163
	.byte	5,0,6
	.word	146
	.byte	6
	.word	146
.L418:
	.byte	2
	.byte	'unsigned short int',0,2,7,6
	.word	270
.L537:
	.byte	7,2,69,9,1,8
	.byte	'MODULE_COM',0,0,8
	.byte	'MODULE_DCM',0,1,8
	.byte	'MODULE_CANIF',0,2,8
	.byte	'MODULE_CANTP',0,3,8
	.byte	'MODULE_DOIPTP',0,4,8
	.byte	'MODULE_SOADIF',0,5,8
	.byte	'MODULE_NUM',0,6,0,9,2,169,1,9,2,10
	.byte	'PduRSrcPduHandleId',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'PduRSrcModuleType',0
	.word	297
	.byte	1,2,35,1,0,6
	.word	404
	.byte	7,2,56,9,1,8
	.byte	'PDUR_DIRECT',0,0,8
	.byte	'PDUR_TRIGGERTRANSMIT',0,1,0,9,2,175,1,9,12,10
	.byte	'PduRDestPduId',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'PduRDestModuleType',0
	.word	297
	.byte	1,2,35,1,10
	.byte	'PduRDestPduDataProvision',0
	.word	471
	.byte	1,2,35,2,10
	.byte	'PduRTpThreshold',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'PduRTpGWTrigger',0
	.word	270
	.byte	2,2,35,6,10
	.byte	'PduRDestTxBufferId',0
	.word	270
	.byte	2,2,35,8,10
	.byte	'PduRRoutingGroup',0
	.word	270
	.byte	2,2,35,10,0,6
	.word	514
	.byte	6
	.word	146
	.byte	9,2,203,1,9,20,10
	.byte	'PduRSrcPdu',0
	.word	466
	.byte	2,2,35,0,10
	.byte	'PduRDestPdu',0
	.word	710
	.byte	12,2,35,4,10
	.byte	'ConfMask',0
	.word	715
	.byte	1,2,35,16,0,6
	.word	720
	.byte	11
	.word	786
	.byte	6
	.word	791
	.byte	6
	.word	270
	.byte	6
	.word	146
	.byte	11
	.word	806
	.byte	6
	.word	146
	.byte	6
	.word	146
	.byte	6
	.word	146
	.byte	11
	.word	826
	.byte	6
	.word	146
	.byte	9,2,214,1,9,12,10
	.byte	'NumPaths',0
	.word	821
	.byte	1,2,35,0,10
	.byte	'PathIdx',0
	.word	831
	.byte	4,2,35,4,10
	.byte	'ConfMask',0
	.word	836
	.byte	1,2,35,8,0,6
	.word	841
.L448:
	.byte	11
	.word	901
	.byte	6
	.word	906
	.byte	6
	.word	146
	.byte	6
	.word	906
	.byte	6
	.word	146
	.byte	9,2,228,1,9,1,10
	.byte	'PathId',0
	.word	146
	.byte	1,2,35,0,0,6
	.word	931
	.byte	11
	.word	954
	.byte	6
	.word	959
	.byte	6
	.word	146
	.byte	6
	.word	906
	.byte	6
	.word	146
	.byte	9,2,222,1,9,2,10
	.byte	'PathId',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'UpperPduId',0
	.word	146
	.byte	1,2,35,1,0,6
	.word	984
	.byte	11
	.word	1027
	.byte	6
	.word	1032
	.byte	6
	.word	146
	.byte	6
	.word	906
	.byte	6
	.word	146
	.byte	6
	.word	1032
	.byte	6
	.word	146
	.byte	6
	.word	906
	.byte	6
	.word	146
	.byte	6
	.word	1032
	.byte	6
	.word	146
	.byte	6
	.word	906
	.byte	6
	.word	146
	.byte	6
	.word	1032
	.byte	9,2,235,1,9,104,10
	.byte	'PBConfigId',0
	.word	260
	.byte	1,2,35,0,10
	.byte	'RoutingPathNum',0
	.word	265
	.byte	1,2,35,1,10
	.byte	'BufferNum',0
	.word	292
	.byte	2,2,35,2,10
	.byte	'pRoutingTbl',0
	.word	796
	.byte	4,2,35,4,10
	.byte	'RoutingPathGroupNum',0
	.word	801
	.byte	2,2,35,8,10
	.byte	'RPGroupEnabledAtInit',0
	.word	811
	.byte	4,2,35,12,10
	.byte	'ComTxPathNum',0
	.word	816
	.byte	1,2,35,16,10
	.byte	'pComTxPduInfo',0
	.word	911
	.byte	4,2,35,20,10
	.byte	'DcmTxPathNum',0
	.word	916
	.byte	1,2,35,24,10
	.byte	'pDcmTxPduInfo',0
	.word	921
	.byte	4,2,35,28,10
	.byte	'DcmRxPathNum',0
	.word	926
	.byte	1,2,35,32,10
	.byte	'pDcmCancelRxPduInfo',0
	.word	964
	.byte	4,2,35,36,10
	.byte	'CanIfRxPathNum',0
	.word	969
	.byte	1,2,35,40,10
	.byte	'pCanIfRxPduInfo',0
	.word	974
	.byte	4,2,35,44,10
	.byte	'CanIfTxConfPathNum',0
	.word	979
	.byte	1,2,35,48,10
	.byte	'pCanIfTxConfPduInfo',0
	.word	1037
	.byte	4,2,35,52,10
	.byte	'CanTpRxPathNum',0
	.word	1042
	.byte	1,2,35,56,10
	.byte	'pCanTpRxPduInfo',0
	.word	1047
	.byte	4,2,35,60,10
	.byte	'CanTpTxConfPathNum',0
	.word	1052
	.byte	1,2,35,64,10
	.byte	'pCanTpTxConfPduInfo',0
	.word	1057
	.byte	4,2,35,68,10
	.byte	'SoAdIfRxPathNum',0
	.word	1062
	.byte	1,2,35,72,10
	.byte	'pSoAdIfRxPduInfo',0
	.word	1067
	.byte	4,2,35,76,10
	.byte	'SoAdIfTxConfPathNum',0
	.word	1072
	.byte	1,2,35,80,10
	.byte	'pSoAdIfTxConfPduInfo',0
	.word	1077
	.byte	4,2,35,84,10
	.byte	'DoIPTpRxPathNum',0
	.word	1082
	.byte	1,2,35,88,10
	.byte	'pDoIPTpRxPduInfo',0
	.word	1087
	.byte	4,2,35,92,10
	.byte	'DoIPTpTxConfPathNum',0
	.word	1092
	.byte	1,2,35,96,10
	.byte	'pDoIPTpTxConfPduInfo',0
	.word	1097
	.byte	4,2,35,100,0,6
	.word	1102
.L416:
	.byte	11
	.word	1825
	.byte	12
	.word	179
	.byte	13
	.word	201
	.byte	13
	.word	217
	.byte	13
	.word	232
	.byte	13
	.word	245
	.byte	5,0,11
	.word	146
	.byte	14
	.byte	'SduDataPtrType',0,3,189,1,40
	.word	1862
	.byte	9,3,190,1,9,8,10
	.byte	'SduDataPtr',0
	.word	1867
	.byte	4,2,35,0,10
	.byte	'SduLength',0
	.word	270
	.byte	2,2,35,4,0,6
	.word	1891
.L430:
	.byte	11
	.word	1937
	.byte	11
	.word	146
.L527:
	.byte	11
	.word	1891
	.byte	15
	.byte	'Com_TriggerTransmit',0,4,38,38
	.word	146
	.byte	1,1,1,1,4
	.byte	'TxPduId',0,4,40,15
	.word	146
	.byte	4
	.byte	'PduInfoPtr',0,4,41,50
	.word	1952
	.byte	0,16
	.byte	'Com_RxIndication',0,4,43,29,1,1,1,1,4
	.byte	'RxPduId',0,4,45,15
	.word	146
	.byte	4
	.byte	'PduInfoPtr',0,4,46,52
	.word	1942
	.byte	0,16
	.byte	'Com_TxConfirmation',0,4,49,29,1,1,1,1,4
	.byte	'TxPduId',0,4,51,15
	.word	146
	.byte	0,16
	.byte	'Com_TpTxConfirmation',0,4,54,29,1,1,1,1,4
	.byte	'TxPduId',0,4,56,15
	.word	146
	.byte	4
	.byte	'Result',0,4,57,20
	.word	146
	.byte	0
.L454:
	.byte	7,3,101,9,1,8
	.byte	'BUFREQ_OK',0,0,8
	.byte	'BUFREQ_E_NOT_OK',0,1,8
	.byte	'BUFREQ_E_BUSY',0,2,8
	.byte	'BUFREQ_E_OVFL',0,3,0,7,3,204,1,9,1,8
	.byte	'TP_DATACONF',0,0,8
	.byte	'TP_DATARETRY',0,1,8
	.byte	'TP_CONFPENDING',0,2,0
.L600:
	.byte	9,3,218,1,9,4,10
	.byte	'TpDataState',0
	.word	2259
	.byte	1,2,35,0,10
	.byte	'TxTpDataCnt',0
	.word	270
	.byte	2,2,35,2,0
.L476:
	.byte	11
	.word	2312
.L459:
	.byte	11
	.word	270
	.byte	15
	.byte	'Com_CopyTxData',0,4,60,42
	.word	2191
	.byte	1,1,1,1,4
	.byte	'PduId',0,4,62,15
	.word	146
	.byte	4
	.byte	'PduInfoPtr',0,4,63,52
	.word	1942
	.byte	4
	.byte	'RetryInfoPtr',0,4,64,52
	.word	2361
	.byte	4
	.byte	'TxDataCntPtr',0,4,65,52
	.word	2366
	.byte	0,16
	.byte	'Com_TpRxIndication',0,4,68,29,1,1,1,1,4
	.byte	'PduId',0,4,70,15
	.word	146
	.byte	4
	.byte	'Result',0,4,71,20
	.word	146
	.byte	0,15
	.byte	'Com_StartOfReception',0,4,74,42
	.word	2191
	.byte	1,1,1,1,4
	.byte	'ComRxPduId',0,4,76,15
	.word	146
	.byte	4
	.byte	'PduInfoPointer',0,4,77,52
	.word	1942
	.byte	4
	.byte	'TpSduLength',0,4,78,19
	.word	270
	.byte	4
	.byte	'RxBufferSizePtr',0,4,79,52
	.word	2366
	.byte	0,15
	.byte	'Com_CopyRxData',0,4,83,42
	.word	2191
	.byte	1,1,1,1,4
	.byte	'PduId',0,4,85,15
	.word	146
	.byte	4
	.byte	'PduInfoPointer',0,4,86,52
	.word	1942
	.byte	4
	.byte	'RxBufferSizePtr',0,4,87,52
	.word	2366
	.byte	0,15
	.byte	'Dcm_StartOfReception',0,5,43,42
	.word	2191
	.byte	1,1,1,1,4
	.byte	'id',0,5,45,15
	.word	146
	.byte	4
	.byte	'info',0,5,46,52
	.word	1942
	.byte	4
	.byte	'TpSduLength',0,5,47,19
	.word	270
	.byte	4
	.byte	'bufferSizePtr',0,5,48,52
	.word	2366
	.byte	0,15
	.byte	'Dcm_CopyRxData',0,5,52,42
	.word	2191
	.byte	1,1,1,1,4
	.byte	'id',0,5,54,15
	.word	146
	.byte	4
	.byte	'info',0,5,55,52
	.word	1942
	.byte	4
	.byte	'bufferSizePtr',0,5,56,52
	.word	2366
	.byte	0,16
	.byte	'Dcm_TpRxIndication',0,5,60,29,1,1,1,1,4
	.byte	'id',0,5,62,15
	.word	146
	.byte	4
	.byte	'result',0,5,63,20
	.word	146
	.byte	0,15
	.byte	'Dcm_CopyTxData',0,5,67,42
	.word	2191
	.byte	1,1,1,1,4
	.byte	'id',0,5,69,15
	.word	146
	.byte	4
	.byte	'info',0,5,70,52
	.word	1942
	.byte	4
	.byte	'retry',0,5,71,52
	.word	2361
	.byte	4
	.byte	'availableDataPtr',0,5,72,52
	.word	2366
	.byte	0,16
	.byte	'Dcm_TpTxConfirmation',0,5,76,29,1,1,1,1,4
	.byte	'id',0,5,78,15
	.word	146
	.byte	4
	.byte	'result',0,5,79,20
	.word	146
	.byte	0,16
	.byte	'Dcm_TxConfirmation',0,5,83,29,1,1,1,1,4
	.byte	'TxPduId',0,5,85,15
	.word	146
	.byte	0,15
	.byte	'CanIf_Transmit',0,6,135,1,41
	.word	146
	.byte	1,1,1,1,4
	.byte	'CanTxPduId',0,6,137,1,15
	.word	146
	.byte	4
	.byte	'PduInfoPtr',0,6,138,1,54
	.word	1942
	.byte	0,15
	.byte	'CanTp_Transmit',0,7,115,41
	.word	146
	.byte	1,1,1,1,4
	.byte	'CanTpTxSduId',0,7,117,15
	.word	146
	.byte	4
	.byte	'CanTpTxInfoPtr',0,7,118,55
	.word	1942
	.byte	0,15
	.byte	'SoAd_IfTransmit',0,8,107,33
	.word	146
	.byte	1,1,1,1,4
	.byte	'TxPduId',0,8,109,15
	.word	146
	.byte	4
	.byte	'PduInfoPtr',0,8,110,53
	.word	1942
	.byte	0,15
	.byte	'DoIP_TpTransmit',0,9,84,41
	.word	146
	.byte	1,1,1,1,4
	.byte	'DoIPPduRTxId',0,9,86,15
	.word	146
	.byte	4
	.byte	'DoIPPduRTxInfoPtr',0,9,87,24
	.word	1942
	.byte	0,15
	.byte	'DoIP_TpCancelTransmit',0,9,90,41
	.word	146
	.byte	1,1,1,1,4
	.byte	'DoIPPduRTxId',0,9,92,15
	.word	146
	.byte	0,15
	.byte	'DoIP_TpCancelReceive',0,9,95,41
	.word	146
	.byte	1,1,1,1,4
	.byte	'PduRRxPduId',0,9,97,15
	.word	146
	.byte	0
.L533:
	.byte	6
	.word	146
.L545:
	.byte	11
	.word	146
.L565:
	.byte	6
	.word	146
	.byte	17
	.byte	'__INDIRECT__',0,10,1,1,1,1,1,18,1,11
	.word	3585
	.byte	14
	.byte	'__codeptr',0,10,1,1
	.word	3587
	.byte	14
	.byte	'boolean',0,11,102,29
	.word	146
	.byte	14
	.byte	'uint8',0,11,106,29
	.word	146
	.byte	14
	.byte	'uint16',0,11,110,29
	.word	270
	.byte	2
	.byte	'unsigned long int',0,4,7,14
	.byte	'uint32',0,11,114,29
	.word	3655
	.byte	2
	.byte	'unsigned long long int',0,8,7,14
	.byte	'uint64',0,11,119,29
	.word	3691
	.byte	2
	.byte	'char',0,1,6,14
	.byte	'sint8',0,11,123,29
	.word	3732
	.byte	2
	.byte	'short int',0,2,5,14
	.byte	'sint16',0,11,127,29
	.word	3754
	.byte	2
	.byte	'long int',0,4,5,14
	.byte	'sint32',0,11,132,1,29
	.word	3782
	.byte	2
	.byte	'long long int',0,8,5,14
	.byte	'sint64',0,11,139,1,29
	.word	3810
	.byte	2
	.byte	'float',0,4,4,14
	.byte	'float32',0,11,168,1,29
	.word	3843
	.byte	14
	.byte	'StatusType',0,12,70,25
	.word	146
	.byte	14
	.byte	'Std_ReturnType',0,12,109,16
	.word	146
	.byte	14
	.byte	'PduIdType',0,13,37,21
	.word	146
	.byte	14
	.byte	'PduLengthType',0,13,41,22
	.word	270
	.byte	14
	.byte	'NetworkHandleType',0,13,43,18
	.word	146
	.byte	14
	.byte	'unsigned_int',0,14,75,22
	.word	163
	.byte	14
	.byte	'BufReq_ReturnType',0,3,107,3
	.word	2191
	.byte	14
	.byte	'PduInfoType',0,3,194,1,3
	.word	1891
	.byte	14
	.byte	'TpDataStateType',0,3,216,1,3
	.word	2259
	.byte	14
	.byte	'RetryInfoType',0,3,222,1,3
	.word	2312
	.byte	14
	.byte	'PduR_MulticastMaskType',0,15,217,4,15
	.word	146
	.byte	14
	.byte	'PduR_RoutingPathIdType',0,15,218,4,15
	.word	146
.L646:
	.byte	19,1
	.word	146
	.byte	20,0,0,6
	.word	4157
	.byte	21
	.byte	'PduR_RPGroupEnabledAtInit',0,15,225,4,35
	.word	4166
	.byte	1,1,14
	.byte	'PduR_PBConfigIdType',0,2,38,15
	.word	146
	.byte	14
	.byte	'PduR_RoutingPathGroupIdType',0,2,43,16
	.word	270
	.byte	14
	.byte	'PduR_DestProvisionType',0,2,61,3
	.word	471
	.byte	14
	.byte	'PduRModuleType',0,2,159,1,3
	.word	297
.L644:
	.byte	7,2,162,1,9,1,8
	.byte	'PDUR_UNINIT',0,0,8
	.byte	'PDUR_ONLINE',0,1,0,14
	.byte	'PduR_StateType',0,2,166,1,3
	.word	4327
	.byte	14
	.byte	'PduRSrcPdu_Type',0,2,173,1,3
	.word	404
	.byte	14
	.byte	'PduRDestPdu_Type',0,2,184,1,3
	.word	514
	.byte	14
	.byte	'PduRRoutingPathInfoType',0,2,211,1,3
	.word	720
	.byte	14
	.byte	'PduRRoutingPduInfoType',0,2,219,1,3
	.word	841
	.byte	14
	.byte	'PduRTxConfMapping_Type',0,2,226,1,3
	.word	984
	.byte	14
	.byte	'PduRRxCancelMapping_Type',0,2,231,1,3
	.word	931
	.byte	14
	.byte	'PduR_PBConfigType',0,2,148,3,3
	.word	1102
	.byte	6
	.word	1891
	.byte	11
	.word	4595
	.byte	22
	.word	146
	.byte	1,1,23
	.word	146
	.byte	23
	.word	4600
	.byte	0,11
	.word	4605
	.byte	14
	.byte	'PduR_TransmitFctPtrType',0,2,152,3,9
	.word	4623
	.byte	11
	.word	1891
	.byte	22
	.word	146
	.byte	1,1,23
	.word	146
	.byte	23
	.word	4661
	.byte	0,11
	.word	4666
	.byte	14
	.byte	'PduR_TriggerTransmitFctPtrType',0,2,153,3,9
	.word	4684
	.byte	24,1,1,23
	.word	146
	.byte	23
	.word	4600
	.byte	0,11
	.word	4729
	.byte	14
	.byte	'PduR_IfRxIndicationType',0,2,154,3,9
	.word	4743
	.byte	24,1,1,23
	.word	146
	.byte	0,11
	.word	4781
	.byte	14
	.byte	'PduR_IfTxConfirmationFctPtrType',0,2,155,3,9
	.word	4790
	.byte	11
	.word	270
	.byte	22
	.word	2191
	.byte	1,1,23
	.word	146
	.byte	23
	.word	4600
	.byte	23
	.word	270
	.byte	23
	.word	4836
	.byte	0,11
	.word	4841
	.byte	14
	.byte	'PduR_StartOfReceptionFctPtrType',0,2,157,3,9
	.word	4869
	.byte	22
	.word	2191
	.byte	1,1,23
	.word	146
	.byte	23
	.word	4600
	.byte	23
	.word	4836
	.byte	0,11
	.word	4915
	.byte	14
	.byte	'PduR_CopyRxDataFctPtrType',0,2,158,3,9
	.word	4938
	.byte	11
	.word	2312
	.byte	22
	.word	2191
	.byte	1,1,23
	.word	146
	.byte	23
	.word	4600
	.byte	23
	.word	4978
	.byte	23
	.word	4836
	.byte	0,11
	.word	4983
	.byte	14
	.byte	'PduR_CopyTxDataFctPtrType',0,2,159,3,9
	.word	5011
	.byte	24,1,1,23
	.word	146
	.byte	23
	.word	146
	.byte	0,11
	.word	5051
	.byte	14
	.byte	'PduR_TpRxIndicationFctPtrType',0,2,160,3,9
	.word	5065
	.byte	14
	.byte	'PduR_TpTxConfirmationFctPtrType',0,2,161,3,9
	.word	5065
	.byte	22
	.word	146
	.byte	1,1,23
	.word	146
	.byte	0,11
	.word	5150
	.byte	14
	.byte	'PduR_CancelTransmitFctPtrType',0,2,164,3,9
	.word	5163
	.byte	14
	.byte	'PduR_TpCancelReceiveFctPtrType',0,2,168,3,9
	.word	5163
	.byte	9,2,170,3,9,52,10
	.byte	'IfCancelTransmitFunc',0
	.word	5168
	.byte	4,2,35,0,10
	.byte	'IfTransmitFunc',0
	.word	4628
	.byte	4,2,35,4,10
	.byte	'TpCancelReceiveFunc',0
	.word	5207
	.byte	4,2,35,8,10
	.byte	'TpCancelTransmitFunc',0
	.word	5168
	.byte	4,2,35,12,10
	.byte	'TpTransmitFunc',0
	.word	4628
	.byte	4,2,35,16,10
	.byte	'UpIfRxIndicationFunc',0
	.word	4748
	.byte	4,2,35,20,10
	.byte	'UpIfTriggerTransmitFunc',0
	.word	4689
	.byte	4,2,35,24,10
	.byte	'UpIfTxConfirmationFunc',0
	.word	4795
	.byte	4,2,35,28,10
	.byte	'UpTpCopyRxDataFunc',0
	.word	4943
	.byte	4,2,35,32,10
	.byte	'UpTpCopyTxDataFunc',0
	.word	5016
	.byte	4,2,35,36,10
	.byte	'UpTpStartOfReceptionFunc',0
	.word	4874
	.byte	4,2,35,40,10
	.byte	'UpTpRxIndicationFunc',0
	.word	5070
	.byte	4,2,35,44,10
	.byte	'UpTpTxConfirmationFunc',0
	.word	5109
	.byte	4,2,35,48,0,14
	.byte	'PduR_ModuleFunc',0,2,194,3,3
	.word	5247
	.byte	11
	.word	5150
	.byte	11
	.word	4605
	.byte	11
	.word	5150
	.byte	11
	.word	4729
	.byte	11
	.word	4666
	.byte	11
	.word	4781
	.byte	11
	.word	4915
	.byte	11
	.word	4983
	.byte	11
	.word	4841
	.byte	11
	.word	5051
	.byte	11
	.word	5051
	.byte	19,148,20
	.word	720
	.byte	20,128,1,0,6
	.word	5718
	.byte	21
	.byte	'PduRRoutingTable',0,16,35,51
	.word	5729
	.byte	1,1,19,168,4
	.word	841
	.byte	20,45,0,6
	.word	5761
	.byte	21
	.byte	'PduRComTxPduInfo',0,16,38,50
	.word	5771
	.byte	1,1,19,24
	.word	841
	.byte	20,1,0,6
	.word	5803
	.byte	21
	.byte	'PduRDcmTxPduInfo',0,16,41,50
	.word	5812
	.byte	1,1,19,192,4
	.word	841
	.byte	20,47,0,6
	.word	5844
	.byte	21
	.byte	'PduRCanIfRxPduInfo',0,16,51,50
	.word	5854
	.byte	1,1,6
	.word	5803
	.byte	21
	.byte	'PduRCanTpRxPduInfo',0,16,56,50
	.word	5888
	.byte	1,1,19,204,1
	.word	841
	.byte	20,16,0,6
	.word	5922
	.byte	21
	.byte	'PduRSoAdIfRxPduInfo',0,16,64,50
	.word	5932
	.byte	1,1,6
	.word	5803
	.byte	21
	.byte	'PduRDoIPTpRxPduInfo',0,16,68,50
	.word	5967
	.byte	1,1,19,74
	.word	984
	.byte	20,36,0,6
	.word	6002
	.byte	21
	.byte	'PduRCanIfTxConfPduInfo',0,16,77,51
	.word	6011
	.byte	1,1,19,2
	.word	984
	.byte	20,0,0,6
	.word	6049
	.byte	21
	.byte	'PduRCanTpTxConfPduInfo',0,16,82,51
	.word	6058
	.byte	1,1,19,22
	.word	984
	.byte	20,10,0,6
	.word	6096
	.byte	21
	.byte	'PduRSoAdIfTxConfPduInfo',0,16,92,51
	.word	6105
	.byte	1,1,6
	.word	6049
	.byte	21
	.byte	'PduRDoIPTpTxConfPduInfo',0,16,97,51
	.word	6144
	.byte	1,1,14
	.byte	'Os_uint8',0,17,45,29
	.word	146
	.byte	14
	.byte	'Os_uint16',0,17,46,29
	.word	270
	.byte	14
	.byte	'Os_uint32',0,17,47,29
	.word	163
	.byte	14
	.byte	'Os_boolean',0,17,55,29
	.word	146
	.byte	14
	.byte	'Os_AddrType',0,17,60,20
	.word	163
	.byte	7,18,169,2,9,1,8
	.byte	'OS_SYSTEM_APPMODE',0,0,8
	.byte	'OS_INVALID_APPMODE',0,255,1,0,14
	.byte	'AppModeType',0,18,173,2,3
	.word	6275
	.byte	14
	.byte	'Os_TpTickType',0,19,40,19
	.word	163
	.byte	14
	.byte	'Os_SysTickType',0,19,41,19
	.word	163
	.byte	14
	.byte	'Os_Pl_SpinlockType',0,19,44,19
	.word	163
	.byte	7,19,47,9,1,8
	.byte	'ACCESSMODE_USER_0',0,0,8
	.byte	'ACCESSMODE_USER_1',0,1,8
	.byte	'ACCESSMODE_PRIVILEGED',0,2,0,14
	.byte	'Os_Pl_AccessModeType',0,19,52,3
	.word	6417
	.byte	14
	.byte	'ApplicationType',0,20,49,18
	.word	146
	.byte	7,20,53,9,1,8
	.byte	'APPLICATION_ACCESSIBLE',0,0,8
	.byte	'APPLICATION_RESTARTING',0,1,8
	.byte	'APPLICATION_TERMINATED',0,2,0,14
	.byte	'ApplicationStateType',0,20,58,3
	.word	6540
	.byte	14
	.byte	'ISRType',0,20,108,18
	.word	146
	.byte	7,20,136,1,9,1,8
	.byte	'SCHEDULETABLE_STOPPED',0,0,8
	.byte	'SCHEDULETABLE_NEXT',0,1,8
	.byte	'SCHEDULETABLE_WAITING',0,2,8
	.byte	'SCHEDULETABLE_RUNNING',0,3,8
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,14
	.byte	'ScheduleTableStatusType',0,20,143,1,3
	.word	6666
	.byte	14
	.byte	'CounterType',0,20,152,1,19
	.word	146
	.byte	14
	.byte	'CoreIdType',0,20,179,1,18
	.word	146
	.byte	14
	.byte	'TaskType',0,21,55,18
	.word	146
	.byte	7,21,72,9,1,8
	.byte	'OS_TASK_SUSPENDED',0,0,8
	.byte	'OS_TASK_NEW',0,1,8
	.byte	'OS_TASK_READY',0,2,8
	.byte	'OS_TASK_RUNNING',0,3,8
	.byte	'OS_TASK_WAITING',0,4,8
	.byte	'OS_TASK_WAITING_TO_READY',0,5,0,14
	.byte	'TaskStateType',0,21,80,3
	.word	6897
	.byte	14
	.byte	'TickType',0,21,87,19
	.word	163
	.byte	9,21,89,9,12,10
	.byte	'maxallowedvalue',0
	.word	163
	.byte	4,2,35,0,10
	.byte	'ticksperbase',0
	.word	163
	.byte	4,2,35,4,10
	.byte	'mincycle',0
	.word	163
	.byte	4,2,35,8,0,14
	.byte	'AlarmBaseType',0,21,94,3
	.word	7055
	.byte	14
	.byte	'AlarmType',0,21,97,18
	.word	146
	.byte	14
	.byte	'EventMaskType',0,21,112,19
	.word	163
	.byte	14
	.byte	'OSServiceIdType',0,21,120,19
	.word	270
	.byte	14
	.byte	'ResourceType',0,21,126,18
	.word	146
	.byte	25
	.byte	'_Os_SRC_SRCR_Bits',0,22,151,1,16,4,26
	.byte	'SRPN',0,1
	.word	146
	.byte	8,0,2,35,0,26
	.byte	'reserved_8',0,1
	.word	146
	.byte	2,6,2,35,1,26
	.byte	'SRE',0,1
	.word	146
	.byte	1,5,2,35,1,26
	.byte	'TOS',0,1
	.word	146
	.byte	3,2,2,35,1,26
	.byte	'reserved_14',0,1
	.word	146
	.byte	2,0,2,35,1,26
	.byte	'ECC',0,1
	.word	146
	.byte	5,3,2,35,2,26
	.byte	'reserved_21',0,1
	.word	146
	.byte	3,0,2,35,2,26
	.byte	'SRR',0,1
	.word	146
	.byte	1,7,2,35,3,26
	.byte	'CLRR',0,1
	.word	146
	.byte	1,6,2,35,3,26
	.byte	'SETR',0,1
	.word	146
	.byte	1,5,2,35,3,26
	.byte	'IOV',0,1
	.word	146
	.byte	1,4,2,35,3,26
	.byte	'IOVCLR',0,1
	.word	146
	.byte	1,3,2,35,3,26
	.byte	'SWS',0,1
	.word	146
	.byte	1,2,2,35,3,26
	.byte	'SWSCLR',0,1
	.word	146
	.byte	1,1,2,35,3,26
	.byte	'reserved_31',0,1
	.word	146
	.byte	1,0,2,35,3,0,14
	.byte	'Os_SRC_SRCR_Bits',0,22,172,1,3
	.word	7233
	.byte	14
	.byte	'Os_PrioType',0,23,178,1,19
	.word	270
	.byte	7,23,241,1,9,1,8
	.byte	'OS_ISR_SUSPENDED',0,0,8
	.byte	'OS_ISR_READY',0,1,8
	.byte	'OS_ISR_RUNNING',0,2,0,14
	.byte	'ISRStateType',0,23,246,1,3
	.word	7570
	.byte	9,23,166,2,9,4,10
	.byte	'Os_Q_front',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'Os_Q_rear',0
	.word	270
	.byte	2,2,35,2,0,14
	.byte	'Os_TaskQueueCtlType',0,23,170,2,3
	.word	7650
	.byte	14
	.byte	'Os_ApplicationMaskType',0,23,208,2,19
	.word	163
	.byte	7,23,245,2,9,1,8
	.byte	'OS_TP_NONE',0,0,8
	.byte	'OS_TP_EXECBUDGET',0,1,8
	.byte	'OS_TP_RESOURCELOCK',0,2,8
	.byte	'OS_TP_ISRLOCK',0,3,8
	.byte	'OS_TP_FRAMECHECK',0,4,0,14
	.byte	'Os_TpMonitorType',0,23,252,2,3
	.word	7757
	.byte	27,1,1,11
	.word	7878
	.byte	14
	.byte	'Os_TaskFuncType',0,23,136,3,16
	.word	7881
	.byte	11
	.word	7650
	.byte	6
	.word	7911
	.byte	11
	.word	146
	.byte	6
	.word	7921
	.byte	9,23,200,3,9,12,10
	.byte	'Q_Ctl_Ptr',0
	.word	7916
	.byte	4,2,35,0,10
	.byte	'Q_Size',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'Q_Buf',0
	.word	7926
	.byte	4,2,35,8,0,14
	.byte	'Os_TaskQueCfgType',0,23,210,3,3
	.word	7931
	.byte	11
	.word	163
	.byte	6
	.word	8015
	.byte	6
	.word	8015
	.byte	9,23,216,3,9,12,10
	.byte	'p_table_line',0
	.word	8020
	.byte	4,2,35,0,10
	.byte	'p_table',0
	.word	8025
	.byte	4,2,35,4,10
	.byte	'p_table_size',0
	.word	146
	.byte	1,2,35,8,0,14
	.byte	'Os_TaskPriReadyTblCfgType',0,23,221,3,3
	.word	8030
	.byte	28
	.byte	'void',0,11
	.word	8133
	.byte	24,1,1,23
	.word	8139
	.byte	0,11
	.word	8144
	.byte	14
	.byte	'Os_TrustedFunctionPtrType',0,23,210,4,16
	.word	8153
	.byte	9,23,221,4,9,4,10
	.byte	'ObjId',0
	.word	163
	.byte	4,2,35,0,0,14
	.byte	'Os_CounterTreeQueEleType',0,23,228,4,3
	.word	8193
	.byte	7,23,252,4,9,1,8
	.byte	'OS_ALARM_TASK',0,0,8
	.byte	'OS_ALARM_EVENT',0,1,8
	.byte	'OS_ALARM_CALLBACK',0,2,8
	.byte	'OS_ALARM_INCREMENTCOUNTER',0,3,0,14
	.byte	'Os_AlarmActionType',0,23,130,5,3
	.word	8249
	.byte	7,23,239,5,9,1,8
	.byte	'OS_RES_TASK_ONLY',0,0,8
	.byte	'OS_RES_ISR_ONLY',0,1,8
	.byte	'OS_RES_SHARE',0,2,0,14
	.byte	'Os_ResAccessype',0,23,244,5,3
	.word	8365
	.byte	7,23,139,6,9,1,8
	.byte	'OS_LOCK_NOTHING',0,0,8
	.byte	'OS_LOCK_ALL_INTERRUPTS',0,1,8
	.byte	'OS_LOCK_CAT2_INTERRUPTS',0,2,8
	.byte	'OS_LOCK_WITH_RES_SCHEDULER',0,3,0,14
	.byte	'Os_SpinlockMethodType',0,23,145,6,3
	.word	8449
	.byte	14
	.byte	'Dcm_SecLevelType',0,24,45,15
	.word	146
	.byte	14
	.byte	'Dcm_SesCtrlType',0,24,50,15
	.word	146
	.byte	14
	.byte	'Dcm_ProtocolType',0,24,54,15
	.word	146
	.byte	14
	.byte	'Dem_EventIdType',0,24,175,1,16
	.word	270
	.byte	14
	.byte	'Dem_EventStatusType',0,24,178,1,15
	.word	146
	.byte	14
	.byte	'Dem_UdsStatusByteType',0,24,202,1,15
	.word	146
	.byte	14
	.byte	'Dem_IndicatorStatusType',0,24,216,1,15
	.word	146
	.byte	14
	.byte	'ABSActive_IDT',0,24,151,3,15
	.word	146
	.byte	14
	.byte	'ABSFailed_IDT',0,24,152,3,15
	.word	146
	.byte	14
	.byte	'ABS_EBDFailed_IDT',0,24,153,3,15
	.word	146
	.byte	14
	.byte	'ABS_FLWheelDirection_IDT',0,24,154,3,15
	.word	146
	.byte	14
	.byte	'ABS_FLWheelSpeedInvalid_IDT',0,24,155,3,15
	.word	146
	.byte	14
	.byte	'ABS_FLWheelSpeedKPH_IDT',0,24,156,3,16
	.word	270
	.byte	14
	.byte	'ABS_FLWheelSpeedRCSts_IDT',0,24,157,3,15
	.word	146
	.byte	14
	.byte	'ABS_FLWheelSpeedRC_IDT',0,24,158,3,16
	.word	270
	.byte	14
	.byte	'ABS_FRWheelDirection_IDT',0,24,159,3,15
	.word	146
	.byte	14
	.byte	'ABS_FRWheelSpeedInvalid_IDT',0,24,160,3,15
	.word	146
	.byte	14
	.byte	'ABS_FRWheelSpeedKPH_IDT',0,24,161,3,16
	.word	270
	.byte	14
	.byte	'ABS_FRWheelSpeedRCSts_IDT',0,24,162,3,15
	.word	146
	.byte	14
	.byte	'ABS_FRWheelSpeedRC_IDT',0,24,163,3,16
	.word	270
	.byte	14
	.byte	'ABS_FWSpeMCUKPH_AliveCounter_IDT',0,24,164,3,15
	.word	146
	.byte	14
	.byte	'ABS_FWSpeMCUKPH_CheckSum_IDT',0,24,165,3,15
	.word	146
	.byte	14
	.byte	'ABS_HAZActive_IDT',0,24,166,3,15
	.word	146
	.byte	14
	.byte	'ABS_LowBrakeFluid_IDT',0,24,167,3,15
	.word	146
	.byte	14
	.byte	'ABS_RLWheelDirection_IDT',0,24,168,3,15
	.word	146
	.byte	14
	.byte	'ABS_RLWheelSpeedInvalid_IDT',0,24,169,3,15
	.word	146
	.byte	14
	.byte	'ABS_RLWheelSpeedKPH_IDT',0,24,170,3,16
	.word	270
	.byte	14
	.byte	'ABS_RLWheelSpeedRCSts_IDT',0,24,171,3,15
	.word	146
	.byte	14
	.byte	'ABS_RLWheelSpeedRC_IDT',0,24,172,3,16
	.word	270
	.byte	14
	.byte	'ABS_RRWheelDirection_IDT',0,24,173,3,15
	.word	146
	.byte	14
	.byte	'ABS_RRWheelSpeedInvalid_IDT',0,24,174,3,15
	.word	146
	.byte	14
	.byte	'ABS_RRWheelSpeedKPH_IDT',0,24,175,3,16
	.word	270
	.byte	14
	.byte	'ABS_RRWheelSpeedRCSts_IDT',0,24,176,3,15
	.word	146
	.byte	14
	.byte	'ABS_RRWheelSpeedRC_IDT',0,24,177,3,16
	.word	270
	.byte	14
	.byte	'ABS_RWSpeMCUKPH_AliveCounter_IDT',0,24,178,3,15
	.word	146
	.byte	14
	.byte	'ABS_RWSpeMCUKPH_CheckSum_IDT',0,24,179,3,15
	.word	146
	.byte	14
	.byte	'ABS_Status_AliveCounter_IDT',0,24,180,3,15
	.word	146
	.byte	14
	.byte	'ABS_Status_CheckSum_IDT',0,24,181,3,15
	.word	146
	.byte	14
	.byte	'ABS_VehicleSpeedInvalid_IDT',0,24,182,3,15
	.word	146
	.byte	14
	.byte	'ABS_VehicleSpeed_IDT',0,24,183,3,16
	.word	270
	.byte	14
	.byte	'ABS_WheelSpeMCURC_AliveCounter_IDT',0,24,184,3,15
	.word	146
	.byte	14
	.byte	'ABS_WheelSpeMCURC_CheckSum_IDT',0,24,185,3,15
	.word	146
	.byte	14
	.byte	'ACC_ObjDispSts_IDT',0,24,197,3,15
	.word	146
	.byte	9,24,198,3,9,36,10
	.byte	'ADAS_ACC_SpdUnit',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'ADAS_ACC_TargetSpeed',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'ADAS_ACC_OperatingSts',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'ADAS_ACC_TimeGapLevel',0
	.word	146
	.byte	1,2,35,3,10
	.byte	'ADAS_ACC_DistanceLevel',0
	.word	146
	.byte	1,2,35,4,10
	.byte	'ADAS_ACC_ObjDispSts',0
	.word	146
	.byte	1,2,35,5,10
	.byte	'ADAS_ACC_TakeOverReq',0
	.word	146
	.byte	1,2,35,6,10
	.byte	'ADAS_AccelerationReq',0
	.word	3843
	.byte	4,2,35,8,10
	.byte	'ADAS_MaxSoftAcceleration',0
	.word	3843
	.byte	4,2,35,12,10
	.byte	'ADAS_MinSoftAcceleration',0
	.word	3843
	.byte	4,2,35,16,10
	.byte	'ADAS_IBS_StopReq',0
	.word	146
	.byte	1,2,35,20,10
	.byte	'ADAS_IBS_CarStarting',0
	.word	146
	.byte	1,2,35,21,10
	.byte	'ADAS_ACC_BrakePreferred',0
	.word	146
	.byte	1,2,35,22,10
	.byte	'ADAS_IBS_MinBreakReq',0
	.word	146
	.byte	1,2,35,23,10
	.byte	'ADAS_VLCShutDownReq',0
	.word	146
	.byte	1,2,35,24,10
	.byte	'ADAS_VLCModeReq',0
	.word	146
	.byte	1,2,35,25,10
	.byte	'ACC_AdtUpperJerkLimit',0
	.word	3843
	.byte	4,2,35,26,10
	.byte	'ACC_AdtLowerJerkLimit',0
	.word	3843
	.byte	4,2,35,30,10
	.byte	'ACC_TxtInfoForDriver',0
	.word	146
	.byte	1,2,35,34,10
	.byte	'ACC_DriveoffReq',0
	.word	146
	.byte	1,2,35,35,0,14
	.byte	'ACC_Output',0,24,220,3,3
	.word	10001
	.byte	14
	.byte	'ACC_TakeOverReq_IDT',0,24,222,3,15
	.word	146
	.byte	14
	.byte	'ACU_AirbagWarningStatus_IDT',0,24,224,3,15
	.word	146
	.byte	14
	.byte	'ACU_AliveCounter_IDT',0,24,225,3,15
	.word	146
	.byte	14
	.byte	'ACU_CheckSum_IDT',0,24,226,3,15
	.word	146
	.byte	14
	.byte	'ACU_CoDAirbagStatus_IDT',0,24,227,3,15
	.word	146
	.byte	14
	.byte	'ACU_CoDSeatOccupSensorStat_IDT',0,24,228,3,15
	.word	146
	.byte	14
	.byte	'ACU_CoDSeatbeltBucklestatus_IDT',0,24,229,3,15
	.word	146
	.byte	14
	.byte	'ACU_CoDSeatbletPTighten_IDT',0,24,230,3,15
	.word	146
	.byte	14
	.byte	'ACU_CrashFrontOutputSts_IDT',0,24,231,3,15
	.word	146
	.byte	14
	.byte	'ACU_CrashLeftOutputSts_IDT',0,24,232,3,15
	.word	146
	.byte	14
	.byte	'ACU_CrashRearOutputSts_IDT',0,24,233,3,15
	.word	146
	.byte	14
	.byte	'ACU_CrashRightOutputSts_IDT',0,24,234,3,15
	.word	146
	.byte	14
	.byte	'ACU_CrashSts_IDT',0,24,235,3,15
	.word	146
	.byte	14
	.byte	'ACU_DAirbagStatus_IDT',0,24,236,3,15
	.word	146
	.byte	14
	.byte	'ACU_DSeatOccupSensorStat_IDT',0,24,237,3,15
	.word	146
	.byte	14
	.byte	'ACU_DSeatbeltBucklestatus_IDT',0,24,238,3,15
	.word	146
	.byte	14
	.byte	'ACU_DSeatbletPTighten_IDT',0,24,239,3,15
	.word	146
	.byte	14
	.byte	'ACU_LCABsts_IDT',0,24,240,3,15
	.word	146
	.byte	14
	.byte	'ACU_LPSeatOccupSensorStat_IDT',0,24,241,3,15
	.word	146
	.byte	14
	.byte	'ACU_LPSeatbeltBucklestatus_IDT',0,24,242,3,15
	.word	146
	.byte	14
	.byte	'ACU_LSABsts_IDT',0,24,243,3,15
	.word	146
	.byte	14
	.byte	'ACU_MPSeatOccupSensorStat_IDT',0,24,244,3,15
	.word	146
	.byte	14
	.byte	'ACU_MPSeatbeltBucklestatus_IDT',0,24,245,3,15
	.word	146
	.byte	14
	.byte	'ACU_RCABsts_IDT',0,24,246,3,15
	.word	146
	.byte	14
	.byte	'ACU_RPSeatOccupSensorStat_IDT',0,24,247,3,15
	.word	146
	.byte	14
	.byte	'ACU_RPSeatbeltBucklestatus_IDT',0,24,248,3,15
	.word	146
	.byte	14
	.byte	'ACU_RSABsts_IDT',0,24,249,3,15
	.word	146
	.byte	14
	.byte	'ADAS_01_Checksum_IDT',0,24,250,3,15
	.word	146
	.byte	14
	.byte	'ADAS_01_RollingCounter_IDT',0,24,251,3,15
	.word	146
	.byte	14
	.byte	'ADAS_02_Checksum_IDT',0,24,252,3,15
	.word	146
	.byte	14
	.byte	'ADAS_02_RollingCounter_IDT',0,24,253,3,15
	.word	146
	.byte	14
	.byte	'ADAS_03_Checksum_IDT',0,24,254,3,15
	.word	146
	.byte	14
	.byte	'ADAS_03_RollingCounter_IDT',0,24,255,3,15
	.word	146
	.byte	14
	.byte	'ADAS_ACC_DistanceLevel_IDT',0,24,129,4,15
	.word	146
	.byte	14
	.byte	'ADAS_ACC_OperatingSts_IDT',0,24,131,4,15
	.word	146
	.byte	14
	.byte	'ADAS_ACC_SpdUnit_IDT',0,24,132,4,15
	.word	146
	.byte	14
	.byte	'ADAS_ACC_TargetSpeed_IDT',0,24,134,4,15
	.word	146
	.byte	14
	.byte	'ADAS_ACC_TimeGapLevel_IDT',0,24,135,4,15
	.word	146
	.byte	14
	.byte	'ADAS_AEB_TgtDecel_ReqValue_IDT',0,24,139,4,16
	.word	270
	.byte	14
	.byte	'ADAS_AccelerationReq_IDT',0,24,159,4,16
	.word	270
	.byte	9,24,160,4,9,20,10
	.byte	'ADAS_AEB_TgtDecel_ReqValue',0
	.word	3843
	.byte	4,2,35,0,10
	.byte	'ADAS_AEB_AbpReq',0
	.word	146
	.byte	1,2,35,4,10
	.byte	'ADAS_IBS_EBAReq',0
	.word	146
	.byte	1,2,35,5,10
	.byte	'AEB_AWB_Level',0
	.word	146
	.byte	1,2,35,6,10
	.byte	'AEB_ABA_Req',0
	.word	146
	.byte	1,2,35,7,10
	.byte	'AEB_VehHldReq',0
	.word	146
	.byte	1,2,35,8,10
	.byte	'AEB_TgtDecel_Req',0
	.word	146
	.byte	1,2,35,9,10
	.byte	'AEB_AWB_Req',0
	.word	146
	.byte	1,2,35,10,10
	.byte	'ADAS_AEB_AbaLevel',0
	.word	146
	.byte	1,2,35,11,10
	.byte	'ADAS_AEB_FuncSWResp',0
	.word	146
	.byte	1,2,35,12,10
	.byte	'AEB_FuncSts',0
	.word	146
	.byte	1,2,35,13,10
	.byte	'AEB_VehActive',0
	.word	146
	.byte	1,2,35,14,10
	.byte	'AEB_VRUActive',0
	.word	146
	.byte	1,2,35,15,10
	.byte	'AEB_ErrorSts',0
	.word	146
	.byte	1,2,35,16,10
	.byte	'AEB_FCW_SnvtyResp',0
	.word	146
	.byte	1,2,35,17,10
	.byte	'AEB_FCW_Warning',0
	.word	146
	.byte	1,2,35,18,0,14
	.byte	'AEB_OutPut',0,24,178,4,3
	.word	11992
	.byte	9,24,180,4,9,24,10
	.byte	'ADAS_LSS_AssidFormResp',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'ADAS_LSS_AngCmdReqPortnValue',0
	.word	3843
	.byte	4,2,35,2,10
	.byte	'ADAS_EPS_TargetSteeringAngle',0
	.word	3843
	.byte	4,2,35,6,10
	.byte	'ADAS_EPS_Vibration_Req',0
	.word	146
	.byte	1,2,35,10,10
	.byte	'ADAS_LSS_VoiceWarn',0
	.word	146
	.byte	1,2,35,11,10
	.byte	'ADAS_LSS_HandsoffWarn',0
	.word	146
	.byte	1,2,35,12,10
	.byte	'ADAS_LSS_FuncResp',0
	.word	146
	.byte	1,2,35,13,10
	.byte	'ADAS_EPS_AngReqSts',0
	.word	146
	.byte	1,2,35,14,10
	.byte	'ADAS_LSS_LeLineTrackingSts',0
	.word	146
	.byte	1,2,35,15,10
	.byte	'ADAS_LSS_RiLineTrackingSts',0
	.word	146
	.byte	1,2,35,16,10
	.byte	'ADAS_LSS_Available',0
	.word	146
	.byte	1,2,35,17,10
	.byte	'ADAS_LSS_FunSts',0
	.word	146
	.byte	1,2,35,18,10
	.byte	'ADAS_LSS_ErrSts',0
	.word	146
	.byte	1,2,35,19,10
	.byte	'ADAS_LSS_WarnFromResp',0
	.word	146
	.byte	1,2,35,20,10
	.byte	'FC_CalibrationSts',0
	.word	146
	.byte	1,2,35,21,10
	.byte	'FC_BlockageSts',0
	.word	146
	.byte	1,2,35,22,0,14
	.byte	'LSS_Output',0,24,198,4,3
	.word	12416
	.byte	9,24,200,4,9,12,10
	.byte	'ADAS_TSR_SWSts',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'TSR_SLWSwtResp',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'ADAS_TSR_OperationSts',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'ADAS_TSR_SpeedLimit',0
	.word	146
	.byte	1,2,35,3,10
	.byte	'TSR_TrafSign',0
	.word	146
	.byte	1,2,35,4,10
	.byte	'TSR_SpdAssistInfoDisp',0
	.word	146
	.byte	1,2,35,5,10
	.byte	'TSR_Warning_offset',0
	.word	146
	.byte	1,2,35,6,10
	.byte	'TSR_SLWVisualWarn',0
	.word	146
	.byte	1,2,35,7,10
	.byte	'TSR_SLWVoiceWarn',0
	.word	146
	.byte	1,2,35,8,0,14
	.byte	'TSR_Output',0,24,211,4,3
	.word	12929
	.byte	14
	.byte	'ADAS_EPS_AngReqSts_IDT',0,24,223,4,15
	.word	146
	.byte	14
	.byte	'ADAS_EPS_TargetSteeringAngle_IDT',0,24,224,4,16
	.word	270
	.byte	14
	.byte	'ADAS_EPS_Vibration_Req_IDT',0,24,225,4,15
	.word	146
	.byte	14
	.byte	'ADAS_LSS_AngCmdReqPortnValue_IDT',0,24,235,4,16
	.word	270
	.byte	14
	.byte	'ADAS_LSS_AssidFormResp_IDT',0,24,236,4,15
	.word	146
	.byte	14
	.byte	'ADAS_LSS_FuncResp_IDT',0,24,240,4,15
	.word	146
	.byte	14
	.byte	'ADAS_LSS_HandsoffWarn_IDT',0,24,241,4,15
	.word	146
	.byte	14
	.byte	'ADAS_LSS_LeLineTrackingSts_IDT',0,24,242,4,15
	.word	146
	.byte	14
	.byte	'ADAS_LSS_RiLineTrackingSts_IDT',0,24,243,4,15
	.word	146
	.byte	14
	.byte	'ADAS_LSS_VoiceWarn_IDT',0,24,244,4,15
	.word	146
	.byte	14
	.byte	'ADAS_MaxSoftAcceleration_IDT',0,24,247,4,16
	.word	270
	.byte	14
	.byte	'ADAS_MinSoftAcceleration_IDT',0,24,248,4,16
	.word	270
	.byte	19,16
	.word	146
	.byte	20,15,0,14
	.byte	'serial_number_16',0,24,170,5,15
	.word	13640
	.byte	9,24,171,5,9,84,10
	.byte	'time_stamp',0
	.word	3691
	.byte	8,2,35,0,10
	.byte	'frame_index',0
	.word	3655
	.byte	4,2,35,8,10
	.byte	'p0_x',0
	.word	3843
	.byte	4,2,35,12,10
	.byte	'p0_y',0
	.word	3843
	.byte	4,2,35,16,10
	.byte	'p1_x',0
	.word	3843
	.byte	4,2,35,20,10
	.byte	'p1_y',0
	.word	3843
	.byte	4,2,35,24,10
	.byte	'p2_x',0
	.word	3843
	.byte	4,2,35,28,10
	.byte	'p2_y',0
	.word	3843
	.byte	4,2,35,32,10
	.byte	'p3_x',0
	.word	3843
	.byte	4,2,35,36,10
	.byte	'p3_y',0
	.word	3843
	.byte	4,2,35,40,10
	.byte	'width',0
	.word	3843
	.byte	4,2,35,44,10
	.byte	'depth',0
	.word	3843
	.byte	4,2,35,48,10
	.byte	'direction',0
	.word	146
	.byte	1,2,35,52,10
	.byte	'slot_type',0
	.word	146
	.byte	1,2,35,53,10
	.byte	'slot_status',0
	.word	146
	.byte	1,2,35,54,10
	.byte	'slot_detection_type',0
	.word	146
	.byte	1,2,35,55,10
	.byte	'slot_occupied',0
	.word	146
	.byte	1,2,35,56,10
	.byte	'quality',0
	.word	146
	.byte	1,2,35,57,10
	.byte	'angle',0
	.word	3843
	.byte	4,2,35,58,10
	.byte	'lane_width',0
	.word	3843
	.byte	4,2,35,62,10
	.byte	'tracking_id',0
	.word	146
	.byte	1,2,35,66,10
	.byte	'serial_number',0
	.word	13649
	.byte	16,2,35,67,0,14
	.byte	'ParkingSlot',0,24,195,5,3
	.word	13675
	.byte	19,16
	.word	146
	.byte	20,15,0,9,24,197,5,9,88,10
	.byte	'replan_counter',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'planning_slot',0
	.word	13675
	.byte	84,2,35,4,0,14
	.byte	'PlanningSlotLocked',0,24,201,5,3
	.word	14102
	.byte	9,24,203,5,9,40,10
	.byte	'x',0
	.word	3843
	.byte	4,2,35,0,10
	.byte	'y',0
	.word	3843
	.byte	4,2,35,4,10
	.byte	'heading',0
	.word	3843
	.byte	4,2,35,8,10
	.byte	'arc_length_to_end',0
	.word	3843
	.byte	4,2,35,12,10
	.byte	'curve',0
	.word	3843
	.byte	4,2,35,16,10
	.byte	'steering_angle',0
	.word	3843
	.byte	4,2,35,20,10
	.byte	'maxvel',0
	.word	3843
	.byte	4,2,35,24,10
	.byte	'acc',0
	.word	3843
	.byte	4,2,35,28,10
	.byte	'speed',0
	.word	3843
	.byte	4,2,35,32,10
	.byte	'time_to_end',0
	.word	3843
	.byte	4,2,35,36,0,14
	.byte	'TrajectoryPoint',0,24,215,5,3
	.word	14184
	.byte	9,24,217,5,9,112,10
	.byte	'replan_counter',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'trajectory_id',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'trajectory_point_id',0
	.word	3655
	.byte	4,2,35,2,10
	.byte	'cur_vehicle_brake',0
	.word	3843
	.byte	4,2,35,6,10
	.byte	'exp_vehicle_brake',0
	.word	3843
	.byte	4,2,35,10,10
	.byte	'cur_vehicle_throttle',0
	.word	3843
	.byte	4,2,35,14,10
	.byte	'exp_vehicle_throttle',0
	.word	3843
	.byte	4,2,35,18,10
	.byte	'cur_vehicle_lon_acc',0
	.word	3843
	.byte	4,2,35,22,10
	.byte	'exp_vehicle_lon_acc',0
	.word	3843
	.byte	4,2,35,26,10
	.byte	'cur_vehicle_gear',0
	.word	146
	.byte	1,2,35,30,10
	.byte	'exp_vehicle_gear',0
	.word	146
	.byte	1,2,35,31,10
	.byte	'exp_point',0
	.word	14184
	.byte	40,2,35,32,10
	.byte	'cur_point',0
	.word	14184
	.byte	40,2,35,72,0,14
	.byte	'TrackingPointsDebug',0,24,232,5,3
	.word	14386
	.byte	9,24,234,5,9,4,10
	.byte	'tracking_error_status',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'cur_trajectory_finish',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'points_to_end',0
	.word	146
	.byte	1,2,35,2,0,14
	.byte	'TrackingState',0,24,239,5,3
	.word	14760
	.byte	19,240,7
	.word	13675
	.byte	20,11,0,14
	.byte	'slot_set_12',0,24,241,5,21
	.word	14875
	.byte	9,24,242,5,9,136,8,10
	.byte	'time_stamp',0
	.word	3691
	.byte	8,2,35,0,10
	.byte	'time_stamp_slot',0
	.word	3691
	.byte	8,2,35,8,10
	.byte	'frame_index',0
	.word	3655
	.byte	4,2,35,16,10
	.byte	'slot_cnt',0
	.word	146
	.byte	1,2,35,20,10
	.byte	'slot_set',0
	.word	14885
	.byte	240,7,2,35,24,0,14
	.byte	'ParkingSlotSet',0,24,249,5,3
	.word	14906
	.byte	19,240,7
	.word	13675
	.byte	20,11,0,14
	.byte	'APA_EPS_TargetSteeringAngle_IDT',0,24,136,6,16
	.word	270
	.byte	14
	.byte	'APA_WCB_BrakeControlReq_IDT',0,24,154,6,15
	.word	146
	.byte	14
	.byte	'ARS_CFGSTATE_CRC16_Checksum_IDT',0,24,147,7,16
	.word	270
	.byte	14
	.byte	'ARS_CFGSTATE_Mode_IDT',0,24,148,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFGSTATE_MsgCounter_IDT',0,24,149,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFGSTATE_SensorID_CFGflag_IDT',0,24,150,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFGSTATE_SensorID_IDT',0,24,151,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFGSTATE_VehParCoverDamping_IDT',0,24,152,7,16
	.word	270
	.byte	14
	.byte	'ARS_CFGSTATE_VehParLatPos_IDT',0,24,153,7,16
	.word	270
	.byte	14
	.byte	'ARS_CFGSTATE_VehParLongPos_IDT',0,24,154,7,16
	.word	270
	.byte	14
	.byte	'ARS_CFGSTATE_VehParSteeringRatio_IDT',0,24,155,7,16
	.word	270
	.byte	14
	.byte	'ARS_CFGSTATE_VehParVertPos_IDT',0,24,156,7,16
	.word	270
	.byte	14
	.byte	'ARS_CFGSTATE_VehParWheelBase_IDT',0,24,157,7,16
	.word	270
	.byte	14
	.byte	'ARS_CFGSTATE_VehParYawAngle_IDT',0,24,158,7,16
	.word	270
	.byte	14
	.byte	'ARS_CFGST_TmeSynEnFl_IDT',0,24,159,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFGST_VehParStrRatio_CFGfl_IDT',0,24,160,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFGST_VehPrAxLdDistr0_IDT',0,24,161,7,16
	.word	270
	.byte	14
	.byte	'ARS_CFGST_VehPrAxLdDstr_CFGfl_IDT',0,24,162,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFGST_VehPrCntrGrvHght_CFGfl_IDT',0,24,163,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFGST_VehPrCntrOfGrvHght_IDT',0,24,164,7,16
	.word	270
	.byte	14
	.byte	'ARS_CFGST_VehPrCvrDmp_CFGfl_IDT',0,24,165,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFGST_VehPrLatPos_CFGfl_IDT',0,24,166,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFGST_VehPrLngPosCoG_CFGfl_IDT',0,24,167,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFGST_VehPrLngPosCoG_IDT',0,24,168,7,16
	.word	270
	.byte	14
	.byte	'ARS_CFGST_VehPrLngPos_CFGfl_IDT',0,24,169,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFGST_VehPrSnsrOri_CFGfl_IDT',0,24,170,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFGST_VehPrSnsrOri_IDT',0,24,171,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFGST_VehPrTrWdFrnt_CFGfl_IDT',0,24,172,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFGST_VehPrTrWdRear_CFGfl_IDT',0,24,173,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFGST_VehPrTrkWdthFrnt_IDT',0,24,174,7,16
	.word	270
	.byte	14
	.byte	'ARS_CFGST_VehPrTrkWdthRear_IDT',0,24,175,7,16
	.word	270
	.byte	14
	.byte	'ARS_CFGST_VehPrVehWght_CFGfl_IDT',0,24,176,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFGST_VehPrVehWght_IDT',0,24,177,7,16
	.word	270
	.byte	14
	.byte	'ARS_CFGST_VehPrVrtPos_CFGfl_IDT',0,24,178,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFGST_VehPrWhlBs_CFGfl_IDT',0,24,179,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFGST_VehPrYwAng_CFGfl_IDT',0,24,180,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFG_ProtoclFlag_P_IDT',0,24,181,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFG_VParPitchAngle_CFGflag_IDT',0,24,182,7,15
	.word	146
	.byte	14
	.byte	'ARS_CFG_VParPitchAngle_IDT',0,24,183,7,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_00_IDT',0,24,184,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_01_IDT',0,24,185,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_02_IDT',0,24,186,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_03_IDT',0,24,187,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_04_IDT',0,24,188,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_05_IDT',0,24,189,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_06_IDT',0,24,190,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_07_IDT',0,24,191,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_08_IDT',0,24,192,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_09_IDT',0,24,193,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_10_IDT',0,24,194,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_11_IDT',0,24,195,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_12_IDT',0,24,196,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_13_IDT',0,24,197,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_14_IDT',0,24,198,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_15_IDT',0,24,199,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_16_IDT',0,24,200,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_17_IDT',0,24,201,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_18_IDT',0,24,202,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_19_IDT',0,24,203,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_20_IDT',0,24,204,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_21_IDT',0,24,205,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_22_IDT',0,24,206,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_23_IDT',0,24,207,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_24_IDT',0,24,208,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_25_IDT',0,24,209,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_26_IDT',0,24,210,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_27_IDT',0,24,211,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_28_IDT',0,24,212,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_29_IDT',0,24,213,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_30_IDT',0,24,214,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_31_IDT',0,24,215,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_32_IDT',0,24,216,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_33_IDT',0,24,217,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_34_IDT',0,24,218,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_35_IDT',0,24,219,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_36_IDT',0,24,220,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_37_IDT',0,24,221,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_38_IDT',0,24,222,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_39_IDT',0,24,223,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_40_IDT',0,24,224,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_41_IDT',0,24,225,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_42_IDT',0,24,226,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_43_IDT',0,24,227,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_44_IDT',0,24,228,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_45_IDT',0,24,229,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_46_IDT',0,24,230,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_47_IDT',0,24,231,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_48_IDT',0,24,232,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_49_IDT',0,24,233,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_50_IDT',0,24,234,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_51_IDT',0,24,235,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_52_IDT',0,24,236,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_53_IDT',0,24,237,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_54_IDT',0,24,238,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_55_IDT',0,24,239,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_56_IDT',0,24,240,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_57_IDT',0,24,241,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_58_IDT',0,24,242,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsXStd_Obj_59_IDT',0,24,243,7,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_00_IDT',0,24,244,7,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_01_IDT',0,24,245,7,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_02_IDT',0,24,246,7,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_03_IDT',0,24,247,7,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_04_IDT',0,24,248,7,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_05_IDT',0,24,249,7,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_06_IDT',0,24,250,7,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_07_IDT',0,24,251,7,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_08_IDT',0,24,252,7,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_09_IDT',0,24,253,7,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_10_IDT',0,24,254,7,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_11_IDT',0,24,255,7,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_12_IDT',0,24,128,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_13_IDT',0,24,129,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_14_IDT',0,24,130,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_15_IDT',0,24,131,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_16_IDT',0,24,132,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_17_IDT',0,24,133,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_18_IDT',0,24,134,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_19_IDT',0,24,135,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_20_IDT',0,24,136,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_21_IDT',0,24,137,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_22_IDT',0,24,138,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_23_IDT',0,24,139,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_24_IDT',0,24,140,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_25_IDT',0,24,141,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_26_IDT',0,24,142,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_27_IDT',0,24,143,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_28_IDT',0,24,144,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_29_IDT',0,24,145,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_30_IDT',0,24,146,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_31_IDT',0,24,147,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_32_IDT',0,24,148,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_33_IDT',0,24,149,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_34_IDT',0,24,150,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_35_IDT',0,24,151,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_36_IDT',0,24,152,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_37_IDT',0,24,153,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_38_IDT',0,24,154,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_39_IDT',0,24,155,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_40_IDT',0,24,156,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_41_IDT',0,24,157,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_42_IDT',0,24,158,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_43_IDT',0,24,159,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_44_IDT',0,24,160,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_45_IDT',0,24,161,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_46_IDT',0,24,162,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_47_IDT',0,24,163,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_48_IDT',0,24,164,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_49_IDT',0,24,165,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_50_IDT',0,24,166,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_51_IDT',0,24,167,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_52_IDT',0,24,168,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_53_IDT',0,24,169,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_54_IDT',0,24,170,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_55_IDT',0,24,171,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_56_IDT',0,24,172,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_57_IDT',0,24,173,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_58_IDT',0,24,174,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsX_Obj_59_IDT',0,24,175,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_00_IDT',0,24,176,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_01_IDT',0,24,177,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_02_IDT',0,24,178,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_03_IDT',0,24,179,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_04_IDT',0,24,180,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_05_IDT',0,24,181,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_06_IDT',0,24,182,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_07_IDT',0,24,183,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_08_IDT',0,24,184,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_09_IDT',0,24,185,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_10_IDT',0,24,186,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_11_IDT',0,24,187,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_12_IDT',0,24,188,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_13_IDT',0,24,189,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_14_IDT',0,24,190,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_15_IDT',0,24,191,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_16_IDT',0,24,192,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_17_IDT',0,24,193,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_18_IDT',0,24,194,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_19_IDT',0,24,195,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_20_IDT',0,24,196,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_21_IDT',0,24,197,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_22_IDT',0,24,198,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_23_IDT',0,24,199,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_24_IDT',0,24,200,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_25_IDT',0,24,201,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_26_IDT',0,24,202,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_27_IDT',0,24,203,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_28_IDT',0,24,204,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_29_IDT',0,24,205,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_30_IDT',0,24,206,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_31_IDT',0,24,207,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_32_IDT',0,24,208,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_33_IDT',0,24,209,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_34_IDT',0,24,210,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_35_IDT',0,24,211,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_36_IDT',0,24,212,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_37_IDT',0,24,213,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_38_IDT',0,24,214,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_39_IDT',0,24,215,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_40_IDT',0,24,216,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_41_IDT',0,24,217,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_42_IDT',0,24,218,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_43_IDT',0,24,219,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_44_IDT',0,24,220,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_45_IDT',0,24,221,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_46_IDT',0,24,222,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_47_IDT',0,24,223,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_48_IDT',0,24,224,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_49_IDT',0,24,225,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_50_IDT',0,24,226,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_51_IDT',0,24,227,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_52_IDT',0,24,228,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_53_IDT',0,24,229,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_54_IDT',0,24,230,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_55_IDT',0,24,231,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_56_IDT',0,24,232,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_57_IDT',0,24,233,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_58_IDT',0,24,234,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsYStd_Obj_59_IDT',0,24,235,8,15
	.word	146
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_00_IDT',0,24,236,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_01_IDT',0,24,237,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_02_IDT',0,24,238,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_03_IDT',0,24,239,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_04_IDT',0,24,240,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_05_IDT',0,24,241,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_06_IDT',0,24,242,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_07_IDT',0,24,243,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_08_IDT',0,24,244,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_09_IDT',0,24,245,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_10_IDT',0,24,246,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_11_IDT',0,24,247,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_12_IDT',0,24,248,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_13_IDT',0,24,249,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_14_IDT',0,24,250,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_15_IDT',0,24,251,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_16_IDT',0,24,252,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_17_IDT',0,24,253,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_18_IDT',0,24,254,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_19_IDT',0,24,255,8,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_20_IDT',0,24,128,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_21_IDT',0,24,129,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_22_IDT',0,24,130,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_23_IDT',0,24,131,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_24_IDT',0,24,132,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_25_IDT',0,24,133,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_26_IDT',0,24,134,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_27_IDT',0,24,135,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_28_IDT',0,24,136,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_29_IDT',0,24,137,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_30_IDT',0,24,138,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_31_IDT',0,24,139,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_32_IDT',0,24,140,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_33_IDT',0,24,141,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_34_IDT',0,24,142,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_35_IDT',0,24,143,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_36_IDT',0,24,144,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_37_IDT',0,24,145,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_38_IDT',0,24,146,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_39_IDT',0,24,147,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_40_IDT',0,24,148,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_41_IDT',0,24,149,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_42_IDT',0,24,150,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_43_IDT',0,24,151,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_44_IDT',0,24,152,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_45_IDT',0,24,153,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_46_IDT',0,24,154,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_47_IDT',0,24,155,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_48_IDT',0,24,156,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_49_IDT',0,24,157,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_50_IDT',0,24,158,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_51_IDT',0,24,159,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_52_IDT',0,24,160,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_53_IDT',0,24,161,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_54_IDT',0,24,162,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_55_IDT',0,24,163,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_56_IDT',0,24,164,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_57_IDT',0,24,165,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_58_IDT',0,24,166,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_AabsY_Obj_59_IDT',0,24,167,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Header_IDT',0,24,168,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_00_01_IDT',0,24,169,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_02_03_IDT',0,24,170,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_04_05_IDT',0,24,171,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_06_07_IDT',0,24,172,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_08_09_IDT',0,24,173,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_10_11_IDT',0,24,174,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_12_13_IDT',0,24,175,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_14_15_IDT',0,24,176,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_16_17_IDT',0,24,177,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_18_19_IDT',0,24,178,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_20_21_IDT',0,24,179,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_22_23_IDT',0,24,180,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_24_25_IDT',0,24,181,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_26_27_IDT',0,24,182,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_28_29_IDT',0,24,183,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_30_31_IDT',0,24,184,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_32_33_IDT',0,24,185,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_34_35_IDT',0,24,186,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_36_37_IDT',0,24,187,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_38_39_IDT',0,24,188,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_40_41_IDT',0,24,189,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_42_43_IDT',0,24,190,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_44_45_IDT',0,24,191,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_46_47_IDT',0,24,192,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_48_49_IDT',0,24,193,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_50_51_IDT',0,24,194,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_52_53_IDT',0,24,195,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_54_55_IDT',0,24,196,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_56_57_IDT',0,24,197,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_CRC16_Checksum_Obj_58_59_IDT',0,24,198,9,16
	.word	270
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_00_IDT',0,24,199,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_01_IDT',0,24,200,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_02_IDT',0,24,201,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_03_IDT',0,24,202,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_04_IDT',0,24,203,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_05_IDT',0,24,204,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_06_IDT',0,24,205,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_07_IDT',0,24,206,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_08_IDT',0,24,207,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_09_IDT',0,24,208,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_10_IDT',0,24,209,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_11_IDT',0,24,210,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_12_IDT',0,24,211,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_13_IDT',0,24,212,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_14_IDT',0,24,213,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_15_IDT',0,24,214,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_16_IDT',0,24,215,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_17_IDT',0,24,216,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_18_IDT',0,24,217,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_19_IDT',0,24,218,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_20_IDT',0,24,219,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_21_IDT',0,24,220,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_22_IDT',0,24,221,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_23_IDT',0,24,222,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_24_IDT',0,24,223,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_25_IDT',0,24,224,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_26_IDT',0,24,225,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_27_IDT',0,24,226,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_28_IDT',0,24,227,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_29_IDT',0,24,228,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_30_IDT',0,24,229,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_31_IDT',0,24,230,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_32_IDT',0,24,231,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_33_IDT',0,24,232,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_34_IDT',0,24,233,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_35_IDT',0,24,234,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_36_IDT',0,24,235,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_37_IDT',0,24,236,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_38_IDT',0,24,237,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_39_IDT',0,24,238,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_40_IDT',0,24,239,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_41_IDT',0,24,240,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_42_IDT',0,24,241,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_43_IDT',0,24,242,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_44_IDT',0,24,243,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_45_IDT',0,24,244,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_46_IDT',0,24,245,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_47_IDT',0,24,246,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_48_IDT',0,24,247,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_49_IDT',0,24,248,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_50_IDT',0,24,249,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_51_IDT',0,24,250,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_52_IDT',0,24,251,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_53_IDT',0,24,252,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_54_IDT',0,24,253,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_55_IDT',0,24,254,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_56_IDT',0,24,255,9,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_57_IDT',0,24,128,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_58_IDT',0,24,129,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ClassConf_Obj_59_IDT',0,24,130,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_00_IDT',0,24,131,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_01_IDT',0,24,132,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_02_IDT',0,24,133,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_03_IDT',0,24,134,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_04_IDT',0,24,135,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_05_IDT',0,24,136,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_06_IDT',0,24,137,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_07_IDT',0,24,138,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_08_IDT',0,24,139,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_09_IDT',0,24,140,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_10_IDT',0,24,141,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_11_IDT',0,24,142,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_12_IDT',0,24,143,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_13_IDT',0,24,144,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_14_IDT',0,24,145,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_15_IDT',0,24,146,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_16_IDT',0,24,147,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_17_IDT',0,24,148,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_18_IDT',0,24,149,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_19_IDT',0,24,150,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_20_IDT',0,24,151,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_21_IDT',0,24,152,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_22_IDT',0,24,153,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_23_IDT',0,24,154,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_24_IDT',0,24,155,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_25_IDT',0,24,156,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_26_IDT',0,24,157,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_27_IDT',0,24,158,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_28_IDT',0,24,159,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_29_IDT',0,24,160,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_30_IDT',0,24,161,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_31_IDT',0,24,162,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_32_IDT',0,24,163,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_33_IDT',0,24,164,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_34_IDT',0,24,165,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_35_IDT',0,24,166,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_36_IDT',0,24,167,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_37_IDT',0,24,168,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_38_IDT',0,24,169,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_39_IDT',0,24,170,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_40_IDT',0,24,171,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_41_IDT',0,24,172,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_42_IDT',0,24,173,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_43_IDT',0,24,174,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_44_IDT',0,24,175,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_45_IDT',0,24,176,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_46_IDT',0,24,177,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_47_IDT',0,24,178,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_48_IDT',0,24,179,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_49_IDT',0,24,180,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_50_IDT',0,24,181,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_51_IDT',0,24,182,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_52_IDT',0,24,183,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_53_IDT',0,24,184,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_54_IDT',0,24,185,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_55_IDT',0,24,186,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_56_IDT',0,24,187,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_57_IDT',0,24,188,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_58_IDT',0,24,189,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Classification_Obj_59_IDT',0,24,190,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_CycleCounter_IDT',0,24,191,10,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_00_IDT',0,24,192,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_01_IDT',0,24,193,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_02_IDT',0,24,194,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_03_IDT',0,24,195,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_04_IDT',0,24,196,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_05_IDT',0,24,197,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_06_IDT',0,24,198,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_07_IDT',0,24,199,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_08_IDT',0,24,200,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_09_IDT',0,24,201,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_10_IDT',0,24,202,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_11_IDT',0,24,203,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_12_IDT',0,24,204,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_13_IDT',0,24,205,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_14_IDT',0,24,206,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_15_IDT',0,24,207,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_16_IDT',0,24,208,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_17_IDT',0,24,209,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_18_IDT',0,24,210,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_19_IDT',0,24,211,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_20_IDT',0,24,212,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_21_IDT',0,24,213,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_22_IDT',0,24,214,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_23_IDT',0,24,215,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_24_IDT',0,24,216,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_25_IDT',0,24,217,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_26_IDT',0,24,218,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_27_IDT',0,24,219,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_28_IDT',0,24,220,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_29_IDT',0,24,221,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_30_IDT',0,24,222,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_31_IDT',0,24,223,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_32_IDT',0,24,224,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_33_IDT',0,24,225,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_34_IDT',0,24,226,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_35_IDT',0,24,227,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_36_IDT',0,24,228,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_37_IDT',0,24,229,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_38_IDT',0,24,230,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_39_IDT',0,24,231,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_40_IDT',0,24,232,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_41_IDT',0,24,233,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_42_IDT',0,24,234,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_43_IDT',0,24,235,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_44_IDT',0,24,236,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_45_IDT',0,24,237,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_46_IDT',0,24,238,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_47_IDT',0,24,239,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_48_IDT',0,24,240,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_49_IDT',0,24,241,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_50_IDT',0,24,242,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_51_IDT',0,24,243,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_52_IDT',0,24,244,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_53_IDT',0,24,245,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_54_IDT',0,24,246,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_55_IDT',0,24,247,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_56_IDT',0,24,248,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_57_IDT',0,24,249,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_58_IDT',0,24,250,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistXStd_Obj_59_IDT',0,24,251,10,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistX_Obj_00_IDT',0,24,252,10,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_01_IDT',0,24,253,10,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_02_IDT',0,24,254,10,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_03_IDT',0,24,255,10,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_04_IDT',0,24,128,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_05_IDT',0,24,129,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_06_IDT',0,24,130,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_07_IDT',0,24,131,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_08_IDT',0,24,132,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_09_IDT',0,24,133,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_10_IDT',0,24,134,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_11_IDT',0,24,135,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_12_IDT',0,24,136,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_13_IDT',0,24,137,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_14_IDT',0,24,138,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_15_IDT',0,24,139,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_16_IDT',0,24,140,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_17_IDT',0,24,141,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_18_IDT',0,24,142,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_19_IDT',0,24,143,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_20_IDT',0,24,144,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_21_IDT',0,24,145,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_22_IDT',0,24,146,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_23_IDT',0,24,147,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_24_IDT',0,24,148,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_25_IDT',0,24,149,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_26_IDT',0,24,150,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_27_IDT',0,24,151,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_28_IDT',0,24,152,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_29_IDT',0,24,153,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_30_IDT',0,24,154,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_31_IDT',0,24,155,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_32_IDT',0,24,156,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_33_IDT',0,24,157,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_34_IDT',0,24,158,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_35_IDT',0,24,159,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_36_IDT',0,24,160,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_37_IDT',0,24,161,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_38_IDT',0,24,162,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_39_IDT',0,24,163,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_40_IDT',0,24,164,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_41_IDT',0,24,165,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_42_IDT',0,24,166,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_43_IDT',0,24,167,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_44_IDT',0,24,168,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_45_IDT',0,24,169,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_46_IDT',0,24,170,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_47_IDT',0,24,171,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_48_IDT',0,24,172,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_49_IDT',0,24,173,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_50_IDT',0,24,174,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_51_IDT',0,24,175,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_52_IDT',0,24,176,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_53_IDT',0,24,177,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_54_IDT',0,24,178,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_55_IDT',0,24,179,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_56_IDT',0,24,180,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_57_IDT',0,24,181,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_58_IDT',0,24,182,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistX_Obj_59_IDT',0,24,183,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_00_IDT',0,24,184,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_01_IDT',0,24,185,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_02_IDT',0,24,186,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_03_IDT',0,24,187,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_04_IDT',0,24,188,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_05_IDT',0,24,189,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_06_IDT',0,24,190,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_07_IDT',0,24,191,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_08_IDT',0,24,192,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_09_IDT',0,24,193,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_10_IDT',0,24,194,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_11_IDT',0,24,195,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_12_IDT',0,24,196,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_13_IDT',0,24,197,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_14_IDT',0,24,198,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_15_IDT',0,24,199,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_16_IDT',0,24,200,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_17_IDT',0,24,201,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_18_IDT',0,24,202,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_19_IDT',0,24,203,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_20_IDT',0,24,204,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_21_IDT',0,24,205,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_22_IDT',0,24,206,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_23_IDT',0,24,207,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_24_IDT',0,24,208,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_25_IDT',0,24,209,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_26_IDT',0,24,210,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_27_IDT',0,24,211,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_28_IDT',0,24,212,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_29_IDT',0,24,213,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_30_IDT',0,24,214,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_31_IDT',0,24,215,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_32_IDT',0,24,216,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_33_IDT',0,24,217,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_34_IDT',0,24,218,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_35_IDT',0,24,219,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_36_IDT',0,24,220,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_37_IDT',0,24,221,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_38_IDT',0,24,222,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_39_IDT',0,24,223,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_40_IDT',0,24,224,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_41_IDT',0,24,225,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_42_IDT',0,24,226,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_43_IDT',0,24,227,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_44_IDT',0,24,228,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_45_IDT',0,24,229,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_46_IDT',0,24,230,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_47_IDT',0,24,231,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_48_IDT',0,24,232,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_49_IDT',0,24,233,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_50_IDT',0,24,234,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_51_IDT',0,24,235,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_52_IDT',0,24,236,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_53_IDT',0,24,237,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_54_IDT',0,24,238,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_55_IDT',0,24,239,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_56_IDT',0,24,240,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_57_IDT',0,24,241,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_58_IDT',0,24,242,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistYStd_Obj_59_IDT',0,24,243,11,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DistY_Obj_00_IDT',0,24,244,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_01_IDT',0,24,245,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_02_IDT',0,24,246,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_03_IDT',0,24,247,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_04_IDT',0,24,248,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_05_IDT',0,24,249,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_06_IDT',0,24,250,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_07_IDT',0,24,251,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_08_IDT',0,24,252,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_09_IDT',0,24,253,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_10_IDT',0,24,254,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_11_IDT',0,24,255,11,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_12_IDT',0,24,128,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_13_IDT',0,24,129,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_14_IDT',0,24,130,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_15_IDT',0,24,131,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_16_IDT',0,24,132,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_17_IDT',0,24,133,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_18_IDT',0,24,134,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_19_IDT',0,24,135,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_20_IDT',0,24,136,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_21_IDT',0,24,137,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_22_IDT',0,24,138,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_23_IDT',0,24,139,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_24_IDT',0,24,140,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_25_IDT',0,24,141,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_26_IDT',0,24,142,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_27_IDT',0,24,143,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_28_IDT',0,24,144,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_29_IDT',0,24,145,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_30_IDT',0,24,146,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_31_IDT',0,24,147,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_32_IDT',0,24,148,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_33_IDT',0,24,149,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_34_IDT',0,24,150,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_35_IDT',0,24,151,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_36_IDT',0,24,152,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_37_IDT',0,24,153,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_38_IDT',0,24,154,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_39_IDT',0,24,155,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_40_IDT',0,24,156,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_41_IDT',0,24,157,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_42_IDT',0,24,158,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_43_IDT',0,24,159,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_44_IDT',0,24,160,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_45_IDT',0,24,161,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_46_IDT',0,24,162,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_47_IDT',0,24,163,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_48_IDT',0,24,164,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_49_IDT',0,24,165,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_50_IDT',0,24,166,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_51_IDT',0,24,167,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_52_IDT',0,24,168,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_53_IDT',0,24,169,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_54_IDT',0,24,170,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_55_IDT',0,24,171,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_56_IDT',0,24,172,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_57_IDT',0,24,173,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_58_IDT',0,24,174,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DistY_Obj_59_IDT',0,24,175,12,16
	.word	270
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_00_IDT',0,24,176,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_01_IDT',0,24,177,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_02_IDT',0,24,178,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_03_IDT',0,24,179,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_04_IDT',0,24,180,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_05_IDT',0,24,181,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_06_IDT',0,24,182,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_07_IDT',0,24,183,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_08_IDT',0,24,184,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_09_IDT',0,24,185,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_10_IDT',0,24,186,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_11_IDT',0,24,187,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_12_IDT',0,24,188,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_13_IDT',0,24,189,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_14_IDT',0,24,190,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_15_IDT',0,24,191,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_16_IDT',0,24,192,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_17_IDT',0,24,193,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_18_IDT',0,24,194,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_19_IDT',0,24,195,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_20_IDT',0,24,196,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_21_IDT',0,24,197,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_22_IDT',0,24,198,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_23_IDT',0,24,199,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_24_IDT',0,24,200,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_25_IDT',0,24,201,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_26_IDT',0,24,202,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_27_IDT',0,24,203,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_28_IDT',0,24,204,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_29_IDT',0,24,205,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_30_IDT',0,24,206,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_31_IDT',0,24,207,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_32_IDT',0,24,208,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_33_IDT',0,24,209,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_34_IDT',0,24,210,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_35_IDT',0,24,211,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_36_IDT',0,24,212,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_37_IDT',0,24,213,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_38_IDT',0,24,214,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_39_IDT',0,24,215,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_40_IDT',0,24,216,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_41_IDT',0,24,217,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_42_IDT',0,24,218,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_43_IDT',0,24,219,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_44_IDT',0,24,220,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_45_IDT',0,24,221,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_46_IDT',0,24,222,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_47_IDT',0,24,223,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_48_IDT',0,24,224,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_49_IDT',0,24,225,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_50_IDT',0,24,226,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_51_IDT',0,24,227,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_52_IDT',0,24,228,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_53_IDT',0,24,229,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_54_IDT',0,24,230,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_55_IDT',0,24,231,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_56_IDT',0,24,232,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_57_IDT',0,24,233,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_58_IDT',0,24,234,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynConf_Obj_59_IDT',0,24,235,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_00_IDT',0,24,236,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_01_IDT',0,24,237,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_02_IDT',0,24,238,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_03_IDT',0,24,239,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_04_IDT',0,24,240,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_05_IDT',0,24,241,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_06_IDT',0,24,242,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_07_IDT',0,24,243,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_08_IDT',0,24,244,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_09_IDT',0,24,245,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_10_IDT',0,24,246,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_11_IDT',0,24,247,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_12_IDT',0,24,248,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_13_IDT',0,24,249,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_14_IDT',0,24,250,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_15_IDT',0,24,251,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_16_IDT',0,24,252,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_17_IDT',0,24,253,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_18_IDT',0,24,254,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_19_IDT',0,24,255,12,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_20_IDT',0,24,128,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_21_IDT',0,24,129,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_22_IDT',0,24,130,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_23_IDT',0,24,131,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_24_IDT',0,24,132,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_25_IDT',0,24,133,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_26_IDT',0,24,134,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_27_IDT',0,24,135,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_28_IDT',0,24,136,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_29_IDT',0,24,137,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_30_IDT',0,24,138,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_31_IDT',0,24,139,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_32_IDT',0,24,140,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_33_IDT',0,24,141,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_34_IDT',0,24,142,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_35_IDT',0,24,143,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_36_IDT',0,24,144,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_37_IDT',0,24,145,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_38_IDT',0,24,146,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_39_IDT',0,24,147,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_40_IDT',0,24,148,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_41_IDT',0,24,149,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_42_IDT',0,24,150,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_43_IDT',0,24,151,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_44_IDT',0,24,152,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_45_IDT',0,24,153,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_46_IDT',0,24,154,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_47_IDT',0,24,155,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_48_IDT',0,24,156,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_49_IDT',0,24,157,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_50_IDT',0,24,158,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_51_IDT',0,24,159,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_52_IDT',0,24,160,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_53_IDT',0,24,161,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_54_IDT',0,24,162,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_55_IDT',0,24,163,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_56_IDT',0,24,164,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_57_IDT',0,24,165,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_58_IDT',0,24,166,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_DynProp_Obj_59_IDT',0,24,167,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_EgoAcceleration_IDT',0,24,168,13,16
	.word	270
	.byte	14
	.byte	'ARS_OD_EgoCurvature_IDT',0,24,169,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_EgoVelocityStd_IDT',0,24,170,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_EgoVelocity_IDT',0,24,171,13,16
	.word	270
	.byte	14
	.byte	'ARS_OD_EgoYawRate_IDT',0,24,172,13,16
	.word	270
	.byte	14
	.byte	'ARS_OD_ExtendedCycleFlag_IDT',0,24,173,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_00_IDT',0,24,174,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_01_IDT',0,24,175,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_02_IDT',0,24,176,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_03_IDT',0,24,177,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_04_IDT',0,24,178,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_05_IDT',0,24,179,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_06_IDT',0,24,180,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_07_IDT',0,24,181,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_08_IDT',0,24,182,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_09_IDT',0,24,183,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_10_IDT',0,24,184,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_11_IDT',0,24,185,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_12_IDT',0,24,186,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_13_IDT',0,24,187,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_14_IDT',0,24,188,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_15_IDT',0,24,189,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_16_IDT',0,24,190,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_17_IDT',0,24,191,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_18_IDT',0,24,192,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_19_IDT',0,24,193,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_20_IDT',0,24,194,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_21_IDT',0,24,195,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_22_IDT',0,24,196,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_23_IDT',0,24,197,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_24_IDT',0,24,198,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_25_IDT',0,24,199,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_26_IDT',0,24,200,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_27_IDT',0,24,201,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_28_IDT',0,24,202,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_29_IDT',0,24,203,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_30_IDT',0,24,204,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_31_IDT',0,24,205,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_32_IDT',0,24,206,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_33_IDT',0,24,207,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_34_IDT',0,24,208,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_35_IDT',0,24,209,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_36_IDT',0,24,210,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_37_IDT',0,24,211,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_38_IDT',0,24,212,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_39_IDT',0,24,213,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_40_IDT',0,24,214,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_41_IDT',0,24,215,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_42_IDT',0,24,216,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_43_IDT',0,24,217,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_44_IDT',0,24,218,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_45_IDT',0,24,219,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_46_IDT',0,24,220,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_47_IDT',0,24,221,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_48_IDT',0,24,222,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_49_IDT',0,24,223,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_50_IDT',0,24,224,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_51_IDT',0,24,225,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_52_IDT',0,24,226,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_53_IDT',0,24,227,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_54_IDT',0,24,228,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_55_IDT',0,24,229,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_56_IDT',0,24,230,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_57_IDT',0,24,231,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_58_IDT',0,24,232,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ID_59_IDT',0,24,233,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Latency_IDT',0,24,234,13,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Length_Obj_00_IDT',0,24,235,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_01_IDT',0,24,236,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_02_IDT',0,24,237,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_03_IDT',0,24,238,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_04_IDT',0,24,239,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_05_IDT',0,24,240,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_06_IDT',0,24,241,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_07_IDT',0,24,242,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_08_IDT',0,24,243,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_09_IDT',0,24,244,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_10_IDT',0,24,245,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_11_IDT',0,24,246,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_12_IDT',0,24,247,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_13_IDT',0,24,248,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_14_IDT',0,24,249,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_15_IDT',0,24,250,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_16_IDT',0,24,251,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_17_IDT',0,24,252,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_18_IDT',0,24,253,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_19_IDT',0,24,254,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_20_IDT',0,24,255,13,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_21_IDT',0,24,128,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_22_IDT',0,24,129,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_23_IDT',0,24,130,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_24_IDT',0,24,131,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_25_IDT',0,24,132,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_26_IDT',0,24,133,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_27_IDT',0,24,134,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_28_IDT',0,24,135,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_29_IDT',0,24,136,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_30_IDT',0,24,137,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_31_IDT',0,24,138,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_32_IDT',0,24,139,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_33_IDT',0,24,140,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_34_IDT',0,24,141,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_35_IDT',0,24,142,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_36_IDT',0,24,143,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_37_IDT',0,24,144,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_38_IDT',0,24,145,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_39_IDT',0,24,146,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_40_IDT',0,24,147,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_41_IDT',0,24,148,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_42_IDT',0,24,149,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_43_IDT',0,24,150,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_44_IDT',0,24,151,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_45_IDT',0,24,152,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_46_IDT',0,24,153,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_47_IDT',0,24,154,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_48_IDT',0,24,155,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_49_IDT',0,24,156,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_50_IDT',0,24,157,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_51_IDT',0,24,158,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_52_IDT',0,24,159,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_53_IDT',0,24,160,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_54_IDT',0,24,161,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_55_IDT',0,24,162,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_56_IDT',0,24,163,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_57_IDT',0,24,164,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_58_IDT',0,24,165,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Length_Obj_59_IDT',0,24,166,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_00_IDT',0,24,167,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_01_IDT',0,24,168,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_02_IDT',0,24,169,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_03_IDT',0,24,170,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_04_IDT',0,24,171,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_05_IDT',0,24,172,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_06_IDT',0,24,173,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_07_IDT',0,24,174,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_08_IDT',0,24,175,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_09_IDT',0,24,176,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_10_IDT',0,24,177,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_11_IDT',0,24,178,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_12_IDT',0,24,179,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_13_IDT',0,24,180,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_14_IDT',0,24,181,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_15_IDT',0,24,182,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_16_IDT',0,24,183,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_17_IDT',0,24,184,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_18_IDT',0,24,185,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_19_IDT',0,24,186,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_20_IDT',0,24,187,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_21_IDT',0,24,188,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_22_IDT',0,24,189,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_23_IDT',0,24,190,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_24_IDT',0,24,191,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_25_IDT',0,24,192,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_26_IDT',0,24,193,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_27_IDT',0,24,194,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_28_IDT',0,24,195,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_29_IDT',0,24,196,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_30_IDT',0,24,197,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_31_IDT',0,24,198,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_32_IDT',0,24,199,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_33_IDT',0,24,200,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_34_IDT',0,24,201,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_35_IDT',0,24,202,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_36_IDT',0,24,203,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_37_IDT',0,24,204,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_38_IDT',0,24,205,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_39_IDT',0,24,206,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_40_IDT',0,24,207,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_41_IDT',0,24,208,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_42_IDT',0,24,209,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_43_IDT',0,24,210,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_44_IDT',0,24,211,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_45_IDT',0,24,212,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_46_IDT',0,24,213,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_47_IDT',0,24,214,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_48_IDT',0,24,215,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_49_IDT',0,24,216,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_50_IDT',0,24,217,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_51_IDT',0,24,218,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_52_IDT',0,24,219,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_53_IDT',0,24,220,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_54_IDT',0,24,221,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_55_IDT',0,24,222,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_56_IDT',0,24,223,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_57_IDT',0,24,224,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_58_IDT',0,24,225,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_LifeCycle_Obj_59_IDT',0,24,226,14,16
	.word	270
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_00_IDT',0,24,227,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_01_IDT',0,24,228,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_02_IDT',0,24,229,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_03_IDT',0,24,230,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_04_IDT',0,24,231,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_05_IDT',0,24,232,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_06_IDT',0,24,233,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_07_IDT',0,24,234,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_08_IDT',0,24,235,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_09_IDT',0,24,236,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_10_IDT',0,24,237,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_11_IDT',0,24,238,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_12_IDT',0,24,239,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_13_IDT',0,24,240,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_14_IDT',0,24,241,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_15_IDT',0,24,242,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_16_IDT',0,24,243,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_17_IDT',0,24,244,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_18_IDT',0,24,245,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_19_IDT',0,24,246,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_20_IDT',0,24,247,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_21_IDT',0,24,248,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_22_IDT',0,24,249,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_23_IDT',0,24,250,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_24_IDT',0,24,251,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_25_IDT',0,24,252,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_26_IDT',0,24,253,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_27_IDT',0,24,254,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_28_IDT',0,24,255,14,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_29_IDT',0,24,128,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_30_IDT',0,24,129,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_31_IDT',0,24,130,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_32_IDT',0,24,131,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_33_IDT',0,24,132,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_34_IDT',0,24,133,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_35_IDT',0,24,134,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_36_IDT',0,24,135,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_37_IDT',0,24,136,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_38_IDT',0,24,137,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_39_IDT',0,24,138,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_40_IDT',0,24,139,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_41_IDT',0,24,140,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_42_IDT',0,24,141,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_43_IDT',0,24,142,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_44_IDT',0,24,143,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_45_IDT',0,24,144,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_46_IDT',0,24,145,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_47_IDT',0,24,146,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_48_IDT',0,24,147,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_49_IDT',0,24,148,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_50_IDT',0,24,149,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_51_IDT',0,24,150,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_52_IDT',0,24,151,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_53_IDT',0,24,152,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_54_IDT',0,24,153,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_55_IDT',0,24,154,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_56_IDT',0,24,155,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_57_IDT',0,24,156,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_58_IDT',0,24,157,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MaintenanceState_Obj_59_IDT',0,24,158,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MeasCounter_IDT',0,24,159,15,16
	.word	270
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_00_IDT',0,24,160,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_01_IDT',0,24,161,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_02_IDT',0,24,162,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_03_IDT',0,24,163,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_04_IDT',0,24,164,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_05_IDT',0,24,165,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_06_IDT',0,24,166,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_07_IDT',0,24,167,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_08_IDT',0,24,168,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_09_IDT',0,24,169,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_10_IDT',0,24,170,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_11_IDT',0,24,171,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_12_IDT',0,24,172,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_13_IDT',0,24,173,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_14_IDT',0,24,174,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_15_IDT',0,24,175,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_16_IDT',0,24,176,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_17_IDT',0,24,177,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_18_IDT',0,24,178,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_19_IDT',0,24,179,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_20_IDT',0,24,180,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_21_IDT',0,24,181,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_22_IDT',0,24,182,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_23_IDT',0,24,183,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_24_IDT',0,24,184,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_25_IDT',0,24,185,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_26_IDT',0,24,186,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_27_IDT',0,24,187,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_28_IDT',0,24,188,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_29_IDT',0,24,189,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_30_IDT',0,24,190,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_31_IDT',0,24,191,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_32_IDT',0,24,192,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_33_IDT',0,24,193,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_34_IDT',0,24,194,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_35_IDT',0,24,195,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_36_IDT',0,24,196,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_37_IDT',0,24,197,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_38_IDT',0,24,198,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_39_IDT',0,24,199,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_40_IDT',0,24,200,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_41_IDT',0,24,201,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_42_IDT',0,24,202,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_43_IDT',0,24,203,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_44_IDT',0,24,204,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_45_IDT',0,24,205,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_46_IDT',0,24,206,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_47_IDT',0,24,207,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_48_IDT',0,24,208,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_49_IDT',0,24,209,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_50_IDT',0,24,210,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_51_IDT',0,24,211,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_52_IDT',0,24,212,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_53_IDT',0,24,213,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_54_IDT',0,24,214,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_55_IDT',0,24,215,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_56_IDT',0,24,216,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_57_IDT',0,24,217,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_58_IDT',0,24,218,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MicroDopplerFlag_59_IDT',0,24,219,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_00_IDT',0,24,220,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_01_IDT',0,24,221,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_02_IDT',0,24,222,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_03_IDT',0,24,223,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_04_IDT',0,24,224,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_05_IDT',0,24,225,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_06_IDT',0,24,226,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_07_IDT',0,24,227,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_08_IDT',0,24,228,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_09_IDT',0,24,229,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_10_IDT',0,24,230,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_11_IDT',0,24,231,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_12_IDT',0,24,232,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_13_IDT',0,24,233,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_14_IDT',0,24,234,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_15_IDT',0,24,235,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_16_IDT',0,24,236,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_17_IDT',0,24,237,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_18_IDT',0,24,238,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_19_IDT',0,24,239,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_20_IDT',0,24,240,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_21_IDT',0,24,241,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_22_IDT',0,24,242,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_23_IDT',0,24,243,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_24_IDT',0,24,244,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_25_IDT',0,24,245,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_26_IDT',0,24,246,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_27_IDT',0,24,247,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_28_IDT',0,24,248,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_29_IDT',0,24,249,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_30_IDT',0,24,250,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_31_IDT',0,24,251,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_32_IDT',0,24,252,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_33_IDT',0,24,253,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_34_IDT',0,24,254,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_35_IDT',0,24,255,15,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_36_IDT',0,24,128,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_37_IDT',0,24,129,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_38_IDT',0,24,130,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_39_IDT',0,24,131,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_40_IDT',0,24,132,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_41_IDT',0,24,133,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_42_IDT',0,24,134,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_43_IDT',0,24,135,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_44_IDT',0,24,136,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_45_IDT',0,24,137,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_46_IDT',0,24,138,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_47_IDT',0,24,139,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_48_IDT',0,24,140,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_49_IDT',0,24,141,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_50_IDT',0,24,142,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_51_IDT',0,24,143,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_52_IDT',0,24,144,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_53_IDT',0,24,145,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_54_IDT',0,24,146,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_55_IDT',0,24,147,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_56_IDT',0,24,148,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_57_IDT',0,24,149,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_58_IDT',0,24,150,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MirrorProb_Obj_59_IDT',0,24,151,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Header_IDT',0,24,152,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_00_01_IDT',0,24,153,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_02_03_IDT',0,24,154,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_04_05_IDT',0,24,155,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_06_07_IDT',0,24,156,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_08_09_IDT',0,24,157,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_10_11_IDT',0,24,158,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_12_13_IDT',0,24,159,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_14_15_IDT',0,24,160,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_16_17_IDT',0,24,161,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_18_19_IDT',0,24,162,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_20_21_IDT',0,24,163,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_22_23_IDT',0,24,164,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_24_25_IDT',0,24,165,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_26_27_IDT',0,24,166,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_28_29_IDT',0,24,167,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_30_31_IDT',0,24,168,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_32_33_IDT',0,24,169,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_34_35_IDT',0,24,170,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_36_37_IDT',0,24,171,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_38_39_IDT',0,24,172,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_40_41_IDT',0,24,173,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_42_43_IDT',0,24,174,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_44_45_IDT',0,24,175,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_46_47_IDT',0,24,176,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_48_49_IDT',0,24,177,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_50_51_IDT',0,24,178,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_52_53_IDT',0,24,179,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_54_55_IDT',0,24,180,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_56_57_IDT',0,24,181,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_MsgCounter_Obj_58_59_IDT',0,24,182,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_NumOfObjects_IDT',0,24,183,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_00_IDT',0,24,184,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_01_IDT',0,24,185,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_02_IDT',0,24,186,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_03_IDT',0,24,187,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_04_IDT',0,24,188,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_05_IDT',0,24,189,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_06_IDT',0,24,190,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_07_IDT',0,24,191,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_08_IDT',0,24,192,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_09_IDT',0,24,193,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_10_IDT',0,24,194,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_11_IDT',0,24,195,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_12_IDT',0,24,196,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_13_IDT',0,24,197,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_14_IDT',0,24,198,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_15_IDT',0,24,199,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_16_IDT',0,24,200,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_17_IDT',0,24,201,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_18_IDT',0,24,202,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_19_IDT',0,24,203,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_20_IDT',0,24,204,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_21_IDT',0,24,205,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_22_IDT',0,24,206,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_23_IDT',0,24,207,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_24_IDT',0,24,208,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_25_IDT',0,24,209,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_26_IDT',0,24,210,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_27_IDT',0,24,211,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_28_IDT',0,24,212,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_29_IDT',0,24,213,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_30_IDT',0,24,214,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_31_IDT',0,24,215,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_32_IDT',0,24,216,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_33_IDT',0,24,217,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_34_IDT',0,24,218,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_35_IDT',0,24,219,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_36_IDT',0,24,220,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_37_IDT',0,24,221,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_38_IDT',0,24,222,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_39_IDT',0,24,223,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_40_IDT',0,24,224,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_41_IDT',0,24,225,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_42_IDT',0,24,226,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_43_IDT',0,24,227,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_44_IDT',0,24,228,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_45_IDT',0,24,229,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_46_IDT',0,24,230,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_47_IDT',0,24,231,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_48_IDT',0,24,232,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_49_IDT',0,24,233,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_50_IDT',0,24,234,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_51_IDT',0,24,235,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_52_IDT',0,24,236,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_53_IDT',0,24,237,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_54_IDT',0,24,238,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_55_IDT',0,24,239,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_56_IDT',0,24,240,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_57_IDT',0,24,241,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_58_IDT',0,24,242,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ObstacleProb_Obj_59_IDT',0,24,243,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_00_IDT',0,24,244,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_01_IDT',0,24,245,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_02_IDT',0,24,246,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_03_IDT',0,24,247,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_04_IDT',0,24,248,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_05_IDT',0,24,249,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_06_IDT',0,24,250,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_07_IDT',0,24,251,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_08_IDT',0,24,252,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_09_IDT',0,24,253,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_10_IDT',0,24,254,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_11_IDT',0,24,255,16,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_12_IDT',0,24,128,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_13_IDT',0,24,129,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_14_IDT',0,24,130,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_15_IDT',0,24,131,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_16_IDT',0,24,132,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_17_IDT',0,24,133,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_18_IDT',0,24,134,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_19_IDT',0,24,135,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_20_IDT',0,24,136,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_21_IDT',0,24,137,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_22_IDT',0,24,138,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_23_IDT',0,24,139,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_24_IDT',0,24,140,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_25_IDT',0,24,141,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_26_IDT',0,24,142,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_27_IDT',0,24,143,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_28_IDT',0,24,144,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_29_IDT',0,24,145,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_30_IDT',0,24,146,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_31_IDT',0,24,147,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_32_IDT',0,24,148,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_33_IDT',0,24,149,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_34_IDT',0,24,150,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_35_IDT',0,24,151,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_36_IDT',0,24,152,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_37_IDT',0,24,153,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_38_IDT',0,24,154,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_39_IDT',0,24,155,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_40_IDT',0,24,156,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_41_IDT',0,24,157,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_42_IDT',0,24,158,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_43_IDT',0,24,159,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_44_IDT',0,24,160,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_45_IDT',0,24,161,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_46_IDT',0,24,162,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_47_IDT',0,24,163,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_48_IDT',0,24,164,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_49_IDT',0,24,165,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_50_IDT',0,24,166,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_51_IDT',0,24,167,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_52_IDT',0,24,168,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_53_IDT',0,24,169,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_54_IDT',0,24,170,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_55_IDT',0,24,171,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_56_IDT',0,24,172,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_57_IDT',0,24,173,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_58_IDT',0,24,174,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_OrientationStd_Obj_59_IDT',0,24,175,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_00_IDT',0,24,176,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_01_IDT',0,24,177,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_02_IDT',0,24,178,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_03_IDT',0,24,179,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_04_IDT',0,24,180,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_05_IDT',0,24,181,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_06_IDT',0,24,182,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_07_IDT',0,24,183,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_08_IDT',0,24,184,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_09_IDT',0,24,185,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_10_IDT',0,24,186,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_11_IDT',0,24,187,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_12_IDT',0,24,188,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_13_IDT',0,24,189,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_14_IDT',0,24,190,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_15_IDT',0,24,191,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_16_IDT',0,24,192,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_17_IDT',0,24,193,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_18_IDT',0,24,194,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_19_IDT',0,24,195,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_20_IDT',0,24,196,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_21_IDT',0,24,197,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_22_IDT',0,24,198,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_23_IDT',0,24,199,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_24_IDT',0,24,200,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_25_IDT',0,24,201,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_26_IDT',0,24,202,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_27_IDT',0,24,203,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_28_IDT',0,24,204,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_29_IDT',0,24,205,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_30_IDT',0,24,206,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_31_IDT',0,24,207,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_32_IDT',0,24,208,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_33_IDT',0,24,209,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_34_IDT',0,24,210,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_35_IDT',0,24,211,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_36_IDT',0,24,212,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_37_IDT',0,24,213,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_38_IDT',0,24,214,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_39_IDT',0,24,215,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_40_IDT',0,24,216,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_41_IDT',0,24,217,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_42_IDT',0,24,218,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_43_IDT',0,24,219,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_44_IDT',0,24,220,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_45_IDT',0,24,221,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_46_IDT',0,24,222,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_47_IDT',0,24,223,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_48_IDT',0,24,224,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_49_IDT',0,24,225,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_50_IDT',0,24,226,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_51_IDT',0,24,227,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_52_IDT',0,24,228,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_53_IDT',0,24,229,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_54_IDT',0,24,230,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_55_IDT',0,24,231,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_56_IDT',0,24,232,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_57_IDT',0,24,233,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_58_IDT',0,24,234,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Orientation_Obj_59_IDT',0,24,235,17,16
	.word	270
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_00_IDT',0,24,236,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_01_IDT',0,24,237,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_02_IDT',0,24,238,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_03_IDT',0,24,239,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_04_IDT',0,24,240,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_05_IDT',0,24,241,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_06_IDT',0,24,242,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_07_IDT',0,24,243,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_08_IDT',0,24,244,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_09_IDT',0,24,245,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_10_IDT',0,24,246,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_11_IDT',0,24,247,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_12_IDT',0,24,248,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_13_IDT',0,24,249,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_14_IDT',0,24,250,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_15_IDT',0,24,251,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_16_IDT',0,24,252,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_17_IDT',0,24,253,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_18_IDT',0,24,254,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_19_IDT',0,24,255,17,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_20_IDT',0,24,128,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_21_IDT',0,24,129,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_22_IDT',0,24,130,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_23_IDT',0,24,131,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_24_IDT',0,24,132,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_25_IDT',0,24,133,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_26_IDT',0,24,134,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_27_IDT',0,24,135,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_28_IDT',0,24,136,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_29_IDT',0,24,137,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_30_IDT',0,24,138,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_31_IDT',0,24,139,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_32_IDT',0,24,140,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_33_IDT',0,24,141,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_34_IDT',0,24,142,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_35_IDT',0,24,143,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_36_IDT',0,24,144,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_37_IDT',0,24,145,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_38_IDT',0,24,146,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_39_IDT',0,24,147,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_40_IDT',0,24,148,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_41_IDT',0,24,149,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_42_IDT',0,24,150,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_43_IDT',0,24,151,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_44_IDT',0,24,152,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_45_IDT',0,24,153,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_46_IDT',0,24,154,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_47_IDT',0,24,155,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_48_IDT',0,24,156,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_49_IDT',0,24,157,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_50_IDT',0,24,158,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_51_IDT',0,24,159,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_52_IDT',0,24,160,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_53_IDT',0,24,161,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_54_IDT',0,24,162,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_55_IDT',0,24,163,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_56_IDT',0,24,164,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_57_IDT',0,24,165,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_58_IDT',0,24,166,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_ProbOfExist_Obj_59_IDT',0,24,167,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RCS_Obj_00_IDT',0,24,168,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_01_IDT',0,24,169,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_02_IDT',0,24,170,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_03_IDT',0,24,171,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_04_IDT',0,24,172,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_05_IDT',0,24,173,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_06_IDT',0,24,174,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_07_IDT',0,24,175,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_08_IDT',0,24,176,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_09_IDT',0,24,177,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_10_IDT',0,24,178,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_11_IDT',0,24,179,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_12_IDT',0,24,180,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_13_IDT',0,24,181,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_14_IDT',0,24,182,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_15_IDT',0,24,183,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_16_IDT',0,24,184,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_17_IDT',0,24,185,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_18_IDT',0,24,186,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_19_IDT',0,24,187,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_20_IDT',0,24,188,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_21_IDT',0,24,189,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_22_IDT',0,24,190,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_23_IDT',0,24,191,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_24_IDT',0,24,192,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_25_IDT',0,24,193,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_26_IDT',0,24,194,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_27_IDT',0,24,195,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_28_IDT',0,24,196,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_29_IDT',0,24,197,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_30_IDT',0,24,198,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_31_IDT',0,24,199,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_32_IDT',0,24,200,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_33_IDT',0,24,201,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_34_IDT',0,24,202,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_35_IDT',0,24,203,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_36_IDT',0,24,204,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_37_IDT',0,24,205,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_38_IDT',0,24,206,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_39_IDT',0,24,207,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_40_IDT',0,24,208,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_41_IDT',0,24,209,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_42_IDT',0,24,210,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_43_IDT',0,24,211,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_44_IDT',0,24,212,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_45_IDT',0,24,213,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_46_IDT',0,24,214,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_47_IDT',0,24,215,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_48_IDT',0,24,216,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_49_IDT',0,24,217,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_50_IDT',0,24,218,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_51_IDT',0,24,219,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_52_IDT',0,24,220,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_53_IDT',0,24,221,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_54_IDT',0,24,222,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_55_IDT',0,24,223,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_56_IDT',0,24,224,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_57_IDT',0,24,225,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_58_IDT',0,24,226,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RCS_Obj_59_IDT',0,24,227,18,16
	.word	270
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_00_IDT',0,24,228,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_01_IDT',0,24,229,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_02_IDT',0,24,230,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_03_IDT',0,24,231,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_04_IDT',0,24,232,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_05_IDT',0,24,233,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_06_IDT',0,24,234,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_07_IDT',0,24,235,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_08_IDT',0,24,236,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_09_IDT',0,24,237,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_10_IDT',0,24,238,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_11_IDT',0,24,239,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_12_IDT',0,24,240,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_13_IDT',0,24,241,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_14_IDT',0,24,242,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_15_IDT',0,24,243,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_16_IDT',0,24,244,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_17_IDT',0,24,245,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_18_IDT',0,24,246,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_19_IDT',0,24,247,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_20_IDT',0,24,248,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_21_IDT',0,24,249,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_22_IDT',0,24,250,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_23_IDT',0,24,251,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_24_IDT',0,24,252,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_25_IDT',0,24,253,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_26_IDT',0,24,254,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_27_IDT',0,24,255,18,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_28_IDT',0,24,128,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_29_IDT',0,24,129,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_30_IDT',0,24,130,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_31_IDT',0,24,131,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_32_IDT',0,24,132,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_33_IDT',0,24,133,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_34_IDT',0,24,134,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_35_IDT',0,24,135,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_36_IDT',0,24,136,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_37_IDT',0,24,137,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_38_IDT',0,24,138,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_39_IDT',0,24,139,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_40_IDT',0,24,140,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_41_IDT',0,24,141,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_42_IDT',0,24,142,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_43_IDT',0,24,143,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_44_IDT',0,24,144,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_45_IDT',0,24,145,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_46_IDT',0,24,146,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_47_IDT',0,24,147,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_48_IDT',0,24,148,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_49_IDT',0,24,149,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_50_IDT',0,24,150,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_51_IDT',0,24,151,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_52_IDT',0,24,152,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_53_IDT',0,24,153,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_54_IDT',0,24,154,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_55_IDT',0,24,155,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_56_IDT',0,24,156,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_57_IDT',0,24,157,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_58_IDT',0,24,158,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_RefPoint_Obj_59_IDT',0,24,159,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_TaskValidFlag_IDT',0,24,160,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_TimeStampGlobNanoSec_IDT',0,24,161,19,16
	.word	3655
	.byte	14
	.byte	'ARS_OD_TimeStampGlobSec_IDT',0,24,162,19,16
	.word	3655
	.byte	14
	.byte	'ARS_OD_TimeStampLocal_IDT',0,24,163,19,16
	.word	3655
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_00_IDT',0,24,164,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_01_IDT',0,24,165,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_02_IDT',0,24,166,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_03_IDT',0,24,167,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_04_IDT',0,24,168,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_05_IDT',0,24,169,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_06_IDT',0,24,170,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_07_IDT',0,24,171,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_08_IDT',0,24,172,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_09_IDT',0,24,173,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_10_IDT',0,24,174,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_11_IDT',0,24,175,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_12_IDT',0,24,176,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_13_IDT',0,24,177,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_14_IDT',0,24,178,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_15_IDT',0,24,179,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_16_IDT',0,24,180,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_17_IDT',0,24,181,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_18_IDT',0,24,182,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_19_IDT',0,24,183,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_20_IDT',0,24,184,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_21_IDT',0,24,185,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_22_IDT',0,24,186,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_23_IDT',0,24,187,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_24_IDT',0,24,188,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_25_IDT',0,24,189,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_26_IDT',0,24,190,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_27_IDT',0,24,191,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_28_IDT',0,24,192,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_29_IDT',0,24,193,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_30_IDT',0,24,194,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_31_IDT',0,24,195,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_32_IDT',0,24,196,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_33_IDT',0,24,197,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_34_IDT',0,24,198,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_35_IDT',0,24,199,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_36_IDT',0,24,200,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_37_IDT',0,24,201,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_38_IDT',0,24,202,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_39_IDT',0,24,203,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_40_IDT',0,24,204,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_41_IDT',0,24,205,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_42_IDT',0,24,206,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_43_IDT',0,24,207,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_44_IDT',0,24,208,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_45_IDT',0,24,209,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_46_IDT',0,24,210,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_47_IDT',0,24,211,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_48_IDT',0,24,212,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_49_IDT',0,24,213,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_50_IDT',0,24,214,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_51_IDT',0,24,215,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_52_IDT',0,24,216,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_53_IDT',0,24,217,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_54_IDT',0,24,218,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_55_IDT',0,24,219,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_56_IDT',0,24,220,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_57_IDT',0,24,221,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_58_IDT',0,24,222,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsXStd_Obj_59_IDT',0,24,223,19,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_00_IDT',0,24,224,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_01_IDT',0,24,225,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_02_IDT',0,24,226,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_03_IDT',0,24,227,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_04_IDT',0,24,228,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_05_IDT',0,24,229,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_06_IDT',0,24,230,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_07_IDT',0,24,231,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_08_IDT',0,24,232,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_09_IDT',0,24,233,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_10_IDT',0,24,234,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_11_IDT',0,24,235,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_12_IDT',0,24,236,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_13_IDT',0,24,237,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_14_IDT',0,24,238,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_15_IDT',0,24,239,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_16_IDT',0,24,240,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_17_IDT',0,24,241,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_18_IDT',0,24,242,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_19_IDT',0,24,243,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_20_IDT',0,24,244,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_21_IDT',0,24,245,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_22_IDT',0,24,246,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_23_IDT',0,24,247,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_24_IDT',0,24,248,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_25_IDT',0,24,249,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_26_IDT',0,24,250,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_27_IDT',0,24,251,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_28_IDT',0,24,252,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_29_IDT',0,24,253,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_30_IDT',0,24,254,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_31_IDT',0,24,255,19,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_32_IDT',0,24,128,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_33_IDT',0,24,129,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_34_IDT',0,24,130,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_35_IDT',0,24,131,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_36_IDT',0,24,132,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_37_IDT',0,24,133,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_38_IDT',0,24,134,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_39_IDT',0,24,135,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_40_IDT',0,24,136,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_41_IDT',0,24,137,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_42_IDT',0,24,138,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_43_IDT',0,24,139,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_44_IDT',0,24,140,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_45_IDT',0,24,141,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_46_IDT',0,24,142,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_47_IDT',0,24,143,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_48_IDT',0,24,144,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_49_IDT',0,24,145,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_50_IDT',0,24,146,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_51_IDT',0,24,147,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_52_IDT',0,24,148,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_53_IDT',0,24,149,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_54_IDT',0,24,150,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_55_IDT',0,24,151,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_56_IDT',0,24,152,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_57_IDT',0,24,153,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_58_IDT',0,24,154,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsX_Obj_59_IDT',0,24,155,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_00_IDT',0,24,156,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_01_IDT',0,24,157,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_02_IDT',0,24,158,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_03_IDT',0,24,159,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_04_IDT',0,24,160,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_05_IDT',0,24,161,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_06_IDT',0,24,162,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_07_IDT',0,24,163,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_08_IDT',0,24,164,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_09_IDT',0,24,165,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_10_IDT',0,24,166,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_11_IDT',0,24,167,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_12_IDT',0,24,168,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_13_IDT',0,24,169,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_14_IDT',0,24,170,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_15_IDT',0,24,171,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_16_IDT',0,24,172,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_17_IDT',0,24,173,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_18_IDT',0,24,174,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_19_IDT',0,24,175,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_20_IDT',0,24,176,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_21_IDT',0,24,177,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_22_IDT',0,24,178,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_23_IDT',0,24,179,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_24_IDT',0,24,180,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_25_IDT',0,24,181,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_26_IDT',0,24,182,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_27_IDT',0,24,183,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_28_IDT',0,24,184,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_29_IDT',0,24,185,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_30_IDT',0,24,186,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_31_IDT',0,24,187,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_32_IDT',0,24,188,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_33_IDT',0,24,189,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_34_IDT',0,24,190,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_35_IDT',0,24,191,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_36_IDT',0,24,192,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_37_IDT',0,24,193,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_38_IDT',0,24,194,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_39_IDT',0,24,195,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_40_IDT',0,24,196,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_41_IDT',0,24,197,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_42_IDT',0,24,198,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_43_IDT',0,24,199,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_44_IDT',0,24,200,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_45_IDT',0,24,201,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_46_IDT',0,24,202,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_47_IDT',0,24,203,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_48_IDT',0,24,204,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_49_IDT',0,24,205,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_50_IDT',0,24,206,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_51_IDT',0,24,207,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_52_IDT',0,24,208,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_53_IDT',0,24,209,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_54_IDT',0,24,210,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_55_IDT',0,24,211,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_56_IDT',0,24,212,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_57_IDT',0,24,213,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_58_IDT',0,24,214,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsYStd_Obj_59_IDT',0,24,215,20,15
	.word	146
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_00_IDT',0,24,216,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_01_IDT',0,24,217,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_02_IDT',0,24,218,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_03_IDT',0,24,219,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_04_IDT',0,24,220,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_05_IDT',0,24,221,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_06_IDT',0,24,222,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_07_IDT',0,24,223,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_08_IDT',0,24,224,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_09_IDT',0,24,225,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_10_IDT',0,24,226,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_11_IDT',0,24,227,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_12_IDT',0,24,228,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_13_IDT',0,24,229,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_14_IDT',0,24,230,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_15_IDT',0,24,231,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_16_IDT',0,24,232,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_17_IDT',0,24,233,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_18_IDT',0,24,234,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_19_IDT',0,24,235,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_20_IDT',0,24,236,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_21_IDT',0,24,237,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_22_IDT',0,24,238,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_23_IDT',0,24,239,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_24_IDT',0,24,240,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_25_IDT',0,24,241,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_26_IDT',0,24,242,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_27_IDT',0,24,243,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_28_IDT',0,24,244,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_29_IDT',0,24,245,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_30_IDT',0,24,246,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_31_IDT',0,24,247,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_32_IDT',0,24,248,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_33_IDT',0,24,249,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_34_IDT',0,24,250,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_35_IDT',0,24,251,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_36_IDT',0,24,252,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_37_IDT',0,24,253,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_38_IDT',0,24,254,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_39_IDT',0,24,255,20,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_40_IDT',0,24,128,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_41_IDT',0,24,129,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_42_IDT',0,24,130,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_43_IDT',0,24,131,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_44_IDT',0,24,132,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_45_IDT',0,24,133,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_46_IDT',0,24,134,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_47_IDT',0,24,135,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_48_IDT',0,24,136,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_49_IDT',0,24,137,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_50_IDT',0,24,138,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_51_IDT',0,24,139,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_52_IDT',0,24,140,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_53_IDT',0,24,141,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_54_IDT',0,24,142,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_55_IDT',0,24,143,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_56_IDT',0,24,144,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_57_IDT',0,24,145,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_58_IDT',0,24,146,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_VabsY_Obj_59_IDT',0,24,147,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_Width_Obj_00_IDT',0,24,148,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_01_IDT',0,24,149,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_02_IDT',0,24,150,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_03_IDT',0,24,151,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_04_IDT',0,24,152,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_05_IDT',0,24,153,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_06_IDT',0,24,154,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_07_IDT',0,24,155,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_08_IDT',0,24,156,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_09_IDT',0,24,157,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_10_IDT',0,24,158,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_11_IDT',0,24,159,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_12_IDT',0,24,160,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_13_IDT',0,24,161,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_14_IDT',0,24,162,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_15_IDT',0,24,163,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_16_IDT',0,24,164,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_17_IDT',0,24,165,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_18_IDT',0,24,166,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_19_IDT',0,24,167,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_20_IDT',0,24,168,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_21_IDT',0,24,169,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_22_IDT',0,24,170,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_23_IDT',0,24,171,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_24_IDT',0,24,172,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_25_IDT',0,24,173,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_26_IDT',0,24,174,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_27_IDT',0,24,175,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_28_IDT',0,24,176,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_29_IDT',0,24,177,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_30_IDT',0,24,178,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_31_IDT',0,24,179,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_32_IDT',0,24,180,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_33_IDT',0,24,181,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_34_IDT',0,24,182,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_35_IDT',0,24,183,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_36_IDT',0,24,184,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_37_IDT',0,24,185,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_38_IDT',0,24,186,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_39_IDT',0,24,187,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_40_IDT',0,24,188,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_41_IDT',0,24,189,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_42_IDT',0,24,190,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_43_IDT',0,24,191,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_44_IDT',0,24,192,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_45_IDT',0,24,193,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_46_IDT',0,24,194,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_47_IDT',0,24,195,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_48_IDT',0,24,196,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_49_IDT',0,24,197,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_50_IDT',0,24,198,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_51_IDT',0,24,199,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_52_IDT',0,24,200,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_53_IDT',0,24,201,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_54_IDT',0,24,202,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_55_IDT',0,24,203,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_56_IDT',0,24,204,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_57_IDT',0,24,205,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_58_IDT',0,24,206,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_Width_Obj_59_IDT',0,24,207,21,15
	.word	146
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_00_IDT',0,24,208,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_01_IDT',0,24,209,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_02_IDT',0,24,210,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_03_IDT',0,24,211,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_04_IDT',0,24,212,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_05_IDT',0,24,213,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_06_IDT',0,24,214,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_07_IDT',0,24,215,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_08_IDT',0,24,216,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_09_IDT',0,24,217,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_10_IDT',0,24,218,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_11_IDT',0,24,219,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_12_IDT',0,24,220,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_13_IDT',0,24,221,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_14_IDT',0,24,222,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_15_IDT',0,24,223,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_16_IDT',0,24,224,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_17_IDT',0,24,225,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_18_IDT',0,24,226,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_19_IDT',0,24,227,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_20_IDT',0,24,228,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_21_IDT',0,24,229,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_22_IDT',0,24,230,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_23_IDT',0,24,231,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_24_IDT',0,24,232,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_25_IDT',0,24,233,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_26_IDT',0,24,234,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_27_IDT',0,24,235,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_28_IDT',0,24,236,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_29_IDT',0,24,237,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_30_IDT',0,24,238,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_31_IDT',0,24,239,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_32_IDT',0,24,240,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_33_IDT',0,24,241,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_34_IDT',0,24,242,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_35_IDT',0,24,243,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_36_IDT',0,24,244,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_37_IDT',0,24,245,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_38_IDT',0,24,246,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_39_IDT',0,24,247,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_40_IDT',0,24,248,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_41_IDT',0,24,249,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_42_IDT',0,24,250,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_43_IDT',0,24,251,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_44_IDT',0,24,252,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_45_IDT',0,24,253,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_46_IDT',0,24,254,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_47_IDT',0,24,255,21,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_48_IDT',0,24,128,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_49_IDT',0,24,129,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_50_IDT',0,24,130,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_51_IDT',0,24,131,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_52_IDT',0,24,132,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_53_IDT',0,24,133,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_54_IDT',0,24,134,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_55_IDT',0,24,135,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_56_IDT',0,24,136,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_57_IDT',0,24,137,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_58_IDT',0,24,138,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbsStd_Obj_59_IDT',0,24,139,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_00_IDT',0,24,140,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_01_IDT',0,24,141,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_02_IDT',0,24,142,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_03_IDT',0,24,143,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_04_IDT',0,24,144,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_05_IDT',0,24,145,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_06_IDT',0,24,146,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_07_IDT',0,24,147,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_08_IDT',0,24,148,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_09_IDT',0,24,149,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_10_IDT',0,24,150,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_11_IDT',0,24,151,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_12_IDT',0,24,152,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_13_IDT',0,24,153,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_14_IDT',0,24,154,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_15_IDT',0,24,155,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_16_IDT',0,24,156,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_17_IDT',0,24,157,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_18_IDT',0,24,158,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_19_IDT',0,24,159,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_20_IDT',0,24,160,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_21_IDT',0,24,161,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_22_IDT',0,24,162,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_23_IDT',0,24,163,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_24_IDT',0,24,164,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_25_IDT',0,24,165,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_26_IDT',0,24,166,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_27_IDT',0,24,167,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_28_IDT',0,24,168,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_29_IDT',0,24,169,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_30_IDT',0,24,170,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_31_IDT',0,24,171,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_32_IDT',0,24,172,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_33_IDT',0,24,173,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_34_IDT',0,24,174,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_35_IDT',0,24,175,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_36_IDT',0,24,176,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_37_IDT',0,24,177,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_38_IDT',0,24,178,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_39_IDT',0,24,179,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_40_IDT',0,24,180,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_41_IDT',0,24,181,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_42_IDT',0,24,182,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_43_IDT',0,24,183,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_44_IDT',0,24,184,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_45_IDT',0,24,185,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_46_IDT',0,24,186,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_47_IDT',0,24,187,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_48_IDT',0,24,188,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_49_IDT',0,24,189,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_50_IDT',0,24,190,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_51_IDT',0,24,191,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_52_IDT',0,24,192,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_53_IDT',0,24,193,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_54_IDT',0,24,194,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_55_IDT',0,24,195,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_56_IDT',0,24,196,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_57_IDT',0,24,197,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_58_IDT',0,24,198,22,16
	.word	270
	.byte	14
	.byte	'ARS_OD_YawRateAbs_Obj_59_IDT',0,24,199,22,16
	.word	270
	.byte	14
	.byte	'ARS_SP_CRC16_Checksum_IDT',0,24,201,22,16
	.word	270
	.byte	14
	.byte	'ARS_SP_ErrStateGroup_1_IDT',0,24,204,22,15
	.word	146
	.byte	14
	.byte	'ARS_SP_ErrStateGroup_2_IDT',0,24,205,22,15
	.word	146
	.byte	14
	.byte	'ARS_SP_ErrStateGroup_3_IDT',0,24,206,22,15
	.word	146
	.byte	14
	.byte	'ARS_SP_MsgCounter_IDT',0,24,208,22,15
	.word	146
	.byte	14
	.byte	'ARS_TSYNC_CRC16_Checksum_IDT',0,24,213,22,16
	.word	270
	.byte	14
	.byte	'ARS_TSYNC_LastTimeLeap_IDT',0,24,214,22,16
	.word	270
	.byte	14
	.byte	'ARS_TSYNC_MaxTimeLeap_IDT',0,24,215,22,16
	.word	270
	.byte	14
	.byte	'ARS_TSYNC_MsgCounter_IDT',0,24,216,22,15
	.word	146
	.byte	14
	.byte	'ARS_TSYNC_TimeStampGlobNSec_IDT',0,24,217,22,16
	.word	3655
	.byte	14
	.byte	'ARS_TSYNC_TimeStampGlobSec_IDT',0,24,218,22,16
	.word	3655
	.byte	9,24,219,22,9,20,10
	.byte	'distance',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'type',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'width',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'peak',0
	.word	146
	.byte	1,2,35,6,10
	.byte	'counter',0
	.word	146
	.byte	1,2,35,7,10
	.byte	'time_stamp',0
	.word	3691
	.byte	8,2,35,8,10
	.byte	'reserve',0
	.word	146
	.byte	1,2,35,16,0,14
	.byte	'ApaDistT',0,24,228,22,3
	.word	87416
	.byte	9,24,230,22,9,80,10
	.byte	'ARS_OD_ID',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'ARS_OD_DistX_Obj',0
	.word	3843
	.byte	4,2,35,2,10
	.byte	'ARS_OD_DistY_Obj',0
	.word	3843
	.byte	4,2,35,6,10
	.byte	'ARS_OD_VabsX_Obj',0
	.word	3843
	.byte	4,2,35,10,10
	.byte	'ARS_OD_VabsY_Obj',0
	.word	3843
	.byte	4,2,35,14,10
	.byte	'ARS_OD_AabsX_Obj',0
	.word	3843
	.byte	4,2,35,18,10
	.byte	'ARS_OD_AabsY_Obj',0
	.word	3843
	.byte	4,2,35,22,10
	.byte	'ARS_OD_DistXStd_Obj',0
	.word	146
	.byte	1,2,35,26,10
	.byte	'ARS_OD_DistYStd_Obj',0
	.word	146
	.byte	1,2,35,27,10
	.byte	'ARS_OD_VabsXStd_Obj',0
	.word	146
	.byte	1,2,35,28,10
	.byte	'ARS_OD_VabsYStd_Obj',0
	.word	146
	.byte	1,2,35,29,10
	.byte	'ARS_OD_AabsXStd_Obj',0
	.word	146
	.byte	1,2,35,30,10
	.byte	'ARS_OD_AabsYStd_Obj',0
	.word	146
	.byte	1,2,35,31,10
	.byte	'ARS_OD_RCS_Obj',0
	.word	3843
	.byte	4,2,35,32,10
	.byte	'ARS_OD_Length_Obj',0
	.word	3843
	.byte	4,2,35,36,10
	.byte	'ARS_OD_Width_Obj',0
	.word	3843
	.byte	4,2,35,40,10
	.byte	'ARS_OD_Orientation_Obj',0
	.word	3843
	.byte	4,2,35,44,10
	.byte	'ARS_OD_OrientationStd_Obj',0
	.word	3843
	.byte	4,2,35,48,10
	.byte	'ARS_OD_YawRateAbs_Obj',0
	.word	3843
	.byte	4,2,35,52,10
	.byte	'ARS_OD_YawRateAbsStd_Obj',0
	.word	3843
	.byte	4,2,35,56,10
	.byte	'ARS_OD_RefPoint',0
	.word	146
	.byte	1,2,35,60,10
	.byte	'ARS_OD_Classification_Obj',0
	.word	146
	.byte	1,2,35,61,10
	.byte	'ARS_OD_ClassConf_Obj',0
	.word	146
	.byte	1,2,35,62,10
	.byte	'ARS_OD_DynProp_Obj',0
	.word	146
	.byte	1,2,35,63,10
	.byte	'ARS_OD_DynConf_Obj',0
	.word	146
	.byte	1,2,35,64,10
	.byte	'ARS_OD_ProbOfExist_Obj',0
	.word	146
	.byte	1,2,35,65,10
	.byte	'ARS_OD_MirrorProb_Obj',0
	.word	146
	.byte	1,2,35,66,10
	.byte	'ARS_OD_ObstacleProb_Obj',0
	.word	146
	.byte	1,2,35,67,10
	.byte	'ARS_OD_MaintenanceState_Obj',0
	.word	146
	.byte	1,2,35,68,10
	.byte	'ARS_OD_LifeCycle_Obj',0
	.word	270
	.byte	2,2,35,70,10
	.byte	'ARS_OD_MicroDopplerFlag',0
	.word	146
	.byte	1,2,35,72,10
	.byte	'DistHeight_Obj',0
	.word	3843
	.byte	4,2,35,74,0,14
	.byte	'ArsObjectInfo',0,24,136,23,3
	.word	87556
	.byte	19,192,37
	.word	87556
	.byte	20,59,0,14
	.byte	'ArsObjectInfo_60',0,24,138,23,23
	.word	88510
	.byte	9,24,139,23,9,20,10
	.byte	'gear_status',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'gear_enable',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'driver_override',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'can_time',0
	.word	3691
	.byte	8,2,35,4,10
	.byte	'system_time',0
	.word	3691
	.byte	8,2,35,12,0,14
	.byte	'AutoGearInfo',0,24,146,23,3
	.word	88546
	.byte	14
	.byte	'BAS_CtrlActv_IDT',0,24,148,23,15
	.word	146
	.byte	14
	.byte	'BAS_FlgFlt_IDT',0,24,149,23,15
	.word	146
	.byte	14
	.byte	'BCM_AmbeLightZone1Sts_IDT',0,24,151,23,15
	.word	146
	.byte	14
	.byte	'BCM_AmbeLightZone2Sts_IDT',0,24,152,23,15
	.word	146
	.byte	14
	.byte	'BCM_BrakeLightSts_IDT',0,24,154,23,15
	.word	146
	.byte	14
	.byte	'BCM_DayRunningLampSts_IDT',0,24,157,23,15
	.word	146
	.byte	14
	.byte	'BCM_FFogLampSWSts_IDT',0,24,163,23,15
	.word	146
	.byte	14
	.byte	'BCM_Fr_domelampSts_IDT',0,24,168,23,15
	.word	146
	.byte	14
	.byte	'BCM_FrontFogLampLightSts_IDT',0,24,169,23,15
	.word	146
	.byte	14
	.byte	'BCM_HeadLight_adjustSts_IDT',0,24,174,23,15
	.word	146
	.byte	14
	.byte	'BCM_HighBeamSWSts_IDT',0,24,175,23,15
	.word	146
	.byte	14
	.byte	'BCM_HighBeamSts_IDT',0,24,176,23,15
	.word	146
	.byte	14
	.byte	'BCM_LicensePlateLightSts_IDT',0,24,177,23,15
	.word	146
	.byte	14
	.byte	'BCM_LowBeamSWSts_IDT',0,24,178,23,15
	.word	146
	.byte	14
	.byte	'BCM_LowBeamSts_IDT',0,24,179,23,15
	.word	146
	.byte	14
	.byte	'BCM_PosLmpSts_IDT',0,24,180,23,15
	.word	146
	.byte	14
	.byte	'BCM_RFogLampSWSts_IDT',0,24,181,23,15
	.word	146
	.byte	14
	.byte	'BCM_RMarkerLightSts_IDT',0,24,184,23,15
	.word	146
	.byte	14
	.byte	'BCM_RearFogLampLightSts_IDT',0,24,187,23,15
	.word	146
	.byte	14
	.byte	'BCM_ReverseLightSts_IDT',0,24,194,23,15
	.word	146
	.byte	14
	.byte	'BCM_Rr_domelampSts_IDT',0,24,195,23,15
	.word	146
	.byte	14
	.byte	'BCM_STAT_HazardWarn_IDT',0,24,196,23,15
	.word	146
	.byte	14
	.byte	'BCM_STAT_Horn_IDT',0,24,197,23,15
	.word	146
	.byte	14
	.byte	'BCM_STAT_InteriorLight_IDT',0,24,198,23,15
	.word	146
	.byte	14
	.byte	'BCM_STAT_SwLightBrightness_IDT',0,24,199,23,15
	.word	146
	.byte	14
	.byte	'BCM_Tail_MicroSW_IDT',0,24,201,23,15
	.word	146
	.byte	14
	.byte	'BCM_TurnIndicatorSts_IDT',0,24,203,23,15
	.word	146
	.byte	14
	.byte	'BCM_TurnLightSWSts_IDT',0,24,204,23,15
	.word	146
	.byte	14
	.byte	'BCM_TurnLight_FaultSts_IDT',0,24,205,23,15
	.word	146
	.byte	14
	.byte	'BCM_WPC_Off_Req_IDT',0,24,206,23,15
	.word	146
	.byte	9,24,213,23,9,36,10
	.byte	'turn_light_status',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'brake_light_status',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'high_beam',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'low_beam',0
	.word	146
	.byte	1,2,35,3,10
	.byte	'wiper',0
	.word	146
	.byte	1,2,35,4,10
	.byte	'door_driver',0
	.word	146
	.byte	1,2,35,5,10
	.byte	'door_passenger',0
	.word	146
	.byte	1,2,35,6,10
	.byte	'door_left_rear',0
	.word	146
	.byte	1,2,35,7,10
	.byte	'door_right_rear',0
	.word	146
	.byte	1,2,35,8,10
	.byte	'hood',0
	.word	146
	.byte	1,2,35,9,10
	.byte	'trunk',0
	.word	146
	.byte	1,2,35,10,10
	.byte	'passenger_detect',0
	.word	146
	.byte	1,2,35,11,10
	.byte	'driver_seat_belt',0
	.word	146
	.byte	1,2,35,12,10
	.byte	'passenger_seat_belt',0
	.word	146
	.byte	1,2,35,13,10
	.byte	'temperature',0
	.word	3843
	.byte	4,2,35,14,10
	.byte	'can_time',0
	.word	3691
	.byte	8,2,35,20,10
	.byte	'system_time',0
	.word	3691
	.byte	8,2,35,28,0,14
	.byte	'BodyInfo',0,24,232,23,3
	.word	89651
	.byte	9,24,234,23,9,16,10
	.byte	'x',0
	.word	3843
	.byte	4,2,35,0,10
	.byte	'y',0
	.word	3843
	.byte	4,2,35,4,10
	.byte	'width',0
	.word	3843
	.byte	4,2,35,8,10
	.byte	'height',0
	.word	3843
	.byte	4,2,35,12,0,14
	.byte	'BoxRect',0,24,240,23,3
	.word	90047
	.byte	9,24,242,23,9,12,10
	.byte	'brake_enable',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'brake_prefill',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'brake_system_mode',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'brake_command',0
	.word	3843
	.byte	4,2,35,4,10
	.byte	'dec_to_stop_flag',0
	.word	146
	.byte	1,2,35,8,10
	.byte	'brake_control_mode',0
	.word	146
	.byte	1,2,35,9,0,14
	.byte	'BrakeCommand',0,24,250,23,3
	.word	90124
	.byte	9,24,252,23,9,32,10
	.byte	'braking_status',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'brake_pedal_output',0
	.word	3843
	.byte	4,2,35,2,10
	.byte	'master_cylinder_pressure',0
	.word	3843
	.byte	4,2,35,6,10
	.byte	'brake_control_available',0
	.word	146
	.byte	1,2,35,10,10
	.byte	'brake_error',0
	.word	146
	.byte	1,2,35,11,10
	.byte	'brake_enable',0
	.word	146
	.byte	1,2,35,12,10
	.byte	'driver_override',0
	.word	146
	.byte	1,2,35,13,10
	.byte	'abs_enable',0
	.word	146
	.byte	1,2,35,14,10
	.byte	'abs_active',0
	.word	146
	.byte	1,2,35,15,10
	.byte	'can_time',0
	.word	3691
	.byte	8,2,35,16,10
	.byte	'system_time',0
	.word	3691
	.byte	8,2,35,24,0,14
	.byte	'BrakeInfo',0,24,137,24,3
	.word	90302
	.byte	9,24,155,24,9,28,10
	.byte	'calib_status',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'yaw',0
	.word	3843
	.byte	4,2,35,2,10
	.byte	'pitch',0
	.word	3843
	.byte	4,2,35,6,10
	.byte	'roll',0
	.word	3843
	.byte	4,2,35,10,10
	.byte	'camera_x',0
	.word	3843
	.byte	4,2,35,14,10
	.byte	'camera_y',0
	.word	3843
	.byte	4,2,35,18,10
	.byte	'camera_z',0
	.word	3843
	.byte	4,2,35,22,0,14
	.byte	'Camera_Calib_Results',0,24,164,24,3
	.word	90594
	.byte	9,24,166,24,9,4,10
	.byte	'sensor_ID',0
	.word	3655
	.byte	4,2,35,0,0,14
	.byte	'Camera_Intrinsic_Params',0,24,169,24,3
	.word	90749
	.byte	9,24,171,24,9,12,10
	.byte	'steer_enable',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'steer_system_mode',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'steer_clear',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'steering_command',0
	.word	3843
	.byte	4,2,35,4,10
	.byte	'steering_speed_command',0
	.word	3843
	.byte	4,2,35,8,0,14
	.byte	'SteerCommand',0,24,178,24,3
	.word	90808
	.byte	9,24,180,24,9,12,10
	.byte	'throttle_enable',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'throttle_ignore',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'throttle_system_mode',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'throttle_command',0
	.word	3843
	.byte	4,2,35,4,10
	.byte	'target_acce',0
	.word	3843
	.byte	4,2,35,8,0,14
	.byte	'ThrottleCommand',0,24,187,24,3
	.word	90965
	.byte	9,24,189,24,9,4,10
	.byte	'gear_enable',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'gear_ignore',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'gear_clear',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'gear_command',0
	.word	146
	.byte	1,2,35,3,0,14
	.byte	'GearCommand',0,24,195,24,3
	.word	91124
	.byte	9,24,197,24,9,2,10
	.byte	'epb_enable',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'epb_command',0
	.word	146
	.byte	1,2,35,1,0,14
	.byte	'EPBCommand',0,24,201,24,3
	.word	91236
	.byte	9,24,231,24,9,32,10
	.byte	'steering_angle',0
	.word	3843
	.byte	4,2,35,0,10
	.byte	'steering_enable',0
	.word	146
	.byte	1,2,35,4,10
	.byte	'steering_column_torque',0
	.word	3843
	.byte	4,2,35,6,10
	.byte	'driver_override',0
	.word	146
	.byte	1,2,35,10,10
	.byte	'steering_control_available',0
	.word	146
	.byte	1,2,35,11,10
	.byte	'steering_angle_speed',0
	.word	3843
	.byte	4,2,35,12,10
	.byte	'can_time',0
	.word	3691
	.byte	8,2,35,16,10
	.byte	'system_time',0
	.word	3691
	.byte	8,2,35,24,0,14
	.byte	'SteeringInfo',0,24,241,24,3
	.word	91304
	.byte	9,24,243,24,9,72,10
	.byte	'wheel_speed_rear_right',0
	.word	3843
	.byte	4,2,35,0,10
	.byte	'wheel_speed_rear_left',0
	.word	3843
	.byte	4,2,35,4,10
	.byte	'wheel_speed_front_right',0
	.word	3843
	.byte	4,2,35,8,10
	.byte	'wheel_speed_front_left',0
	.word	3843
	.byte	4,2,35,12,10
	.byte	'wheel_speed_rear_right_dir',0
	.word	146
	.byte	1,2,35,16,10
	.byte	'wheel_speed_rear_left_dir',0
	.word	146
	.byte	1,2,35,17,10
	.byte	'wheel_speed_front_right_dir',0
	.word	146
	.byte	1,2,35,18,10
	.byte	'wheel_speed_front_left_dir',0
	.word	146
	.byte	1,2,35,19,10
	.byte	'wheel_position_rear_right',0
	.word	3754
	.byte	2,2,35,20,10
	.byte	'wheel_position_rear_left',0
	.word	3754
	.byte	2,2,35,22,10
	.byte	'wheel_position_front_right',0
	.word	3754
	.byte	2,2,35,24,10
	.byte	'wheel_position_front_left',0
	.word	3754
	.byte	2,2,35,26,10
	.byte	'vehicle_speed',0
	.word	3843
	.byte	4,2,35,28,10
	.byte	'vehicle_stand_still',0
	.word	146
	.byte	1,2,35,32,10
	.byte	'longitude_acce',0
	.word	3843
	.byte	4,2,35,34,10
	.byte	'longitude_acce_valid',0
	.word	146
	.byte	1,2,35,38,10
	.byte	'lateral_acce',0
	.word	3843
	.byte	4,2,35,40,10
	.byte	'lateral_acce_valid',0
	.word	146
	.byte	1,2,35,44,10
	.byte	'roll_rate',0
	.word	3843
	.byte	4,2,35,46,10
	.byte	'yaw_rate',0
	.word	3843
	.byte	4,2,35,50,10
	.byte	'can_time',0
	.word	3691
	.byte	8,2,35,56,10
	.byte	'system_time',0
	.word	3691
	.byte	8,2,35,64,0,14
	.byte	'VehicleSpeedInfo',0,24,139,25,3
	.word	91544
	.byte	9,24,141,25,9,32,10
	.byte	'throttle_pedal_output',0
	.word	3843
	.byte	4,2,35,0,10
	.byte	'torque_output_fr',0
	.word	3843
	.byte	4,2,35,4,10
	.byte	'torque_output_rr',0
	.word	3843
	.byte	4,2,35,8,10
	.byte	'throttle_enable',0
	.word	146
	.byte	1,2,35,12,10
	.byte	'driver_override',0
	.word	146
	.byte	1,2,35,13,10
	.byte	'throttle_error',0
	.word	146
	.byte	1,2,35,14,10
	.byte	'throttle_control_available',0
	.word	146
	.byte	1,2,35,15,10
	.byte	'can_time',0
	.word	3691
	.byte	8,2,35,16,10
	.byte	'system_time',0
	.word	3691
	.byte	8,2,35,24,0,14
	.byte	'ThrottleInfo',0,24,152,25,3
	.word	92221
	.byte	9,24,154,25,9,20,10
	.byte	'epb_status',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'driver_override',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'epb_enable',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'can_time',0
	.word	3691
	.byte	8,2,35,4,10
	.byte	'system_time',0
	.word	3691
	.byte	8,2,35,12,0,14
	.byte	'EPBInfo',0,24,161,25,3
	.word	92482
	.byte	9,24,175,25,9,12,10
	.byte	'front_left_pressure',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'front_right_pressure',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'rear_left_pressure',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'rear_right_pressure',0
	.word	270
	.byte	2,2,35,6,10
	.byte	'front_left_pressure_alarm',0
	.word	146
	.byte	1,2,35,8,10
	.byte	'front_right_pressure_alarm',0
	.word	146
	.byte	1,2,35,9,10
	.byte	'rear_left_pressure_alarm',0
	.word	146
	.byte	1,2,35,10,10
	.byte	'rear_right_pressure_alarm',0
	.word	146
	.byte	1,2,35,11,0,14
	.byte	'TirePressureInfo',0,24,185,25,3
	.word	92610
	.byte	9,24,195,25,9,24,10
	.byte	'x',0
	.word	3843
	.byte	4,2,35,0,10
	.byte	'y',0
	.word	3843
	.byte	4,2,35,4,10
	.byte	'class_type',0
	.word	146
	.byte	1,2,35,8,10
	.byte	'edge',0
	.word	146
	.byte	1,2,35,9,10
	.byte	'id',0
	.word	270
	.byte	2,2,35,10,10
	.byte	'vehicle_x',0
	.word	3843
	.byte	4,2,35,12,10
	.byte	'vehicle_y',0
	.word	3843
	.byte	4,2,35,16,10
	.byte	'vehicle_heading',0
	.word	3843
	.byte	4,2,35,20,0,14
	.byte	'Cc_Point2f',0,24,205,25,3
	.word	92899
	.byte	14
	.byte	'CheckSum_0x106_IDT',0,24,207,25,15
	.word	146
	.byte	14
	.byte	'CheckSum_0x109_IDT',0,24,208,25,15
	.word	146
	.byte	14
	.byte	'CheckSum_0x17F_IDT',0,24,209,25,15
	.word	146
	.byte	14
	.byte	'CheckSum_0x3F1_IDT',0,24,210,25,15
	.word	146
	.byte	14
	.byte	'CheckSum_0x3F5_IDT',0,24,211,25,15
	.word	146
	.byte	14
	.byte	'CheckSum_0x3F7_IDT',0,24,212,25,15
	.word	146
	.byte	14
	.byte	'CheckSum_1F8_IDT',0,24,213,25,15
	.word	146
	.byte	14
	.byte	'Checksum_0x132_IDT',0,24,214,25,15
	.word	146
	.byte	14
	.byte	'Checksum_0x17E_IDT',0,24,215,25,15
	.word	146
	.byte	14
	.byte	'Checksum_230_IDT',0,24,217,25,15
	.word	146
	.byte	9,24,237,25,9,20,10
	.byte	'time_stamp',0
	.word	3691
	.byte	8,2,35,0,10
	.byte	'x',0
	.word	3843
	.byte	4,2,35,8,10
	.byte	'y',0
	.word	3843
	.byte	4,2,35,12,10
	.byte	'heading',0
	.word	3843
	.byte	4,2,35,16,0,14
	.byte	'LocationPoint',0,24,243,25,3
	.word	93333
	.byte	19,160,6
	.word	3843
	.byte	20,199,1,0,14
	.byte	'rt_Array_float32_200',0,24,245,25,17
	.word	93422
	.byte	9,24,246,25,9,196,37,10
	.byte	'x',0
	.word	93433
	.byte	160,6,2,35,0,10
	.byte	'y',0
	.word	93433
	.byte	160,6,3,35,160,6,10
	.byte	'heading',0
	.word	93433
	.byte	160,6,3,35,192,12,10
	.byte	'curve',0
	.word	93433
	.byte	160,6,3,35,224,18,10
	.byte	'acc',0
	.word	93433
	.byte	160,6,3,35,128,25,10
	.byte	'speed',0
	.word	93433
	.byte	160,6,3,35,160,31,10
	.byte	'gear',0
	.word	146
	.byte	1,3,35,192,37,10
	.byte	'points_cnt',0
	.word	146
	.byte	1,3,35,193,37,0,14
	.byte	'Trajectory',0,24,128,26,3
	.word	93463
	.byte	19,160,6
	.word	3843
	.byte	20,199,1,0,14
	.byte	'DistHeight_Obj_00_IDT',0,24,142,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_01_IDT',0,24,143,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_02_IDT',0,24,144,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_03_IDT',0,24,145,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_04_IDT',0,24,146,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_05_IDT',0,24,147,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_06_IDT',0,24,148,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_07_IDT',0,24,149,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_08_IDT',0,24,150,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_09_IDT',0,24,151,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_10_IDT',0,24,152,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_11_IDT',0,24,153,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_12_IDT',0,24,154,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_13_IDT',0,24,155,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_14_IDT',0,24,156,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_15_IDT',0,24,157,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_16_IDT',0,24,158,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_17_IDT',0,24,159,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_18_IDT',0,24,160,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_19_IDT',0,24,161,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_20_IDT',0,24,162,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_21_IDT',0,24,163,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_22_IDT',0,24,164,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_23_IDT',0,24,165,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_24_IDT',0,24,166,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_25_IDT',0,24,167,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_26_IDT',0,24,168,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_27_IDT',0,24,169,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_28_IDT',0,24,170,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_29_IDT',0,24,171,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_30_IDT',0,24,172,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_31_IDT',0,24,173,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_32_IDT',0,24,174,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_33_IDT',0,24,175,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_34_IDT',0,24,176,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_35_IDT',0,24,177,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_36_IDT',0,24,178,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_37_IDT',0,24,179,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_38_IDT',0,24,180,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_39_IDT',0,24,181,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_40_IDT',0,24,182,26,15
	.word	146
	.byte	14
	.byte	'DistHeight_Obj_41_IDT',0,24,183,26,15
	.word	146
	.byte	14
	.byte	'EPB_AVHFeedbackSts_IDT',0,24,188,26,15
	.word	146
	.byte	14
	.byte	'EPB_AVHStatIndReqV_IDT',0,24,189,26,15
	.word	146
	.byte	14
	.byte	'EPB_AVHStatIndReq_IDT',0,24,190,26,15
	.word	146
	.byte	14
	.byte	'EPB_AVHWrnIndReqV_IDT',0,24,191,26,15
	.word	146
	.byte	14
	.byte	'EPB_AVHWrnIndReq_IDT',0,24,192,26,15
	.word	146
	.byte	14
	.byte	'EPB_Sts_IDT',0,24,193,26,15
	.word	146
	.byte	14
	.byte	'EPB_SysBrkLtsReq_IDT',0,24,194,26,15
	.word	146
	.byte	14
	.byte	'EPB_SysDspMsgReqV_IDT',0,24,195,26,15
	.word	146
	.byte	14
	.byte	'EPB_SysDspMsgReq_IDT',0,24,196,26,15
	.word	146
	.byte	14
	.byte	'EPB_SysStatIndReqV_IDT',0,24,197,26,15
	.word	146
	.byte	14
	.byte	'EPB_SysStatIndReq_IDT',0,24,198,26,15
	.word	146
	.byte	14
	.byte	'EPB_SysWrnIndReqV_IDT',0,24,199,26,15
	.word	146
	.byte	14
	.byte	'EPB_SysWrnIndReq_IDT',0,24,200,26,15
	.word	146
	.byte	14
	.byte	'EPS_ADAS_CtrlAbortFeedback_IDT',0,24,201,26,15
	.word	146
	.byte	14
	.byte	'EPS_ADAS_ModActv_IDT',0,24,202,26,15
	.word	146
	.byte	14
	.byte	'EPS_ADAS_ModAvail_IDT',0,24,203,26,15
	.word	146
	.byte	14
	.byte	'EPS_DrStrTorqV_IDT',0,24,207,26,15
	.word	146
	.byte	14
	.byte	'EPS_DrStrTorqVal_IDT',0,24,208,26,15
	.word	146
	.byte	14
	.byte	'EPS_LKARespTorq_IDT',0,24,209,26,16
	.word	270
	.byte	14
	.byte	'EPS_SterFltMod_IDT',0,24,212,26,15
	.word	146
	.byte	14
	.byte	'EPS_SterModV_IDT',0,24,213,26,15
	.word	146
	.byte	14
	.byte	'EPS_SterMod_IDT',0,24,214,26,15
	.word	146
	.byte	14
	.byte	'ESC_EscCtrlActv_IDT',0,24,215,26,15
	.word	146
	.byte	14
	.byte	'ESC_EscDisableSts_IDT',0,24,216,26,15
	.word	146
	.byte	14
	.byte	'ESC_EscFlgFlt_IDT',0,24,217,26,15
	.word	146
	.byte	14
	.byte	'ESC_HBAFlgFlt_IDT',0,24,218,26,15
	.word	146
	.byte	14
	.byte	'ESC_HSA_Control_Status_IDT',0,24,219,26,15
	.word	146
	.byte	14
	.byte	'ESC_HSA_Status_Fault_IDT',0,24,220,26,15
	.word	146
	.byte	14
	.byte	'ESC_HbaCtrlActv_IDT',0,24,221,26,15
	.word	146
	.byte	14
	.byte	'ESC_MasterCylinderPressureV_IDT',0,24,226,26,15
	.word	146
	.byte	14
	.byte	'ESC_MasterCylinderPressure_IDT',0,24,227,26,16
	.word	270
	.byte	14
	.byte	'ESC_SlopeGradeAngle_IDT',0,24,228,26,15
	.word	146
	.byte	14
	.byte	'ESC_TcsCtrlActv_IDT',0,24,229,26,15
	.word	146
	.byte	14
	.byte	'ESC_TcsDisableSts_IDT',0,24,230,26,15
	.word	146
	.byte	14
	.byte	'ESC_TcsFlgFlt_IDT',0,24,231,26,15
	.word	146
	.byte	14
	.byte	'Float',0,24,242,26,17
	.word	3843
	.byte	19,128,75
	.word	92899
	.byte	20,143,3,0,14
	.byte	'vehicle_points_400',0,24,243,26,20
	.word	96021
	.byte	9,24,244,26,9,136,75,10
	.byte	'point_num',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'closed_contour',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'vehicle_points',0
	.word	96032
	.byte	128,75,2,35,4,10
	.byte	'color_type',0
	.word	146
	.byte	1,3,35,132,75,10
	.byte	'class_type',0
	.word	146
	.byte	1,3,35,133,75,0,14
	.byte	'FreespaceInfo',0,24,251,26,3
	.word	96060
	.byte	19,128,75
	.word	92899
	.byte	20,143,3,0,9,24,134,27,9,36,10
	.byte	'ARS_OD_TimeStampGlobSec',0
	.word	3691
	.byte	8,2,35,0,10
	.byte	'ARS_OD_TimeStampGlobNanoSec',0
	.word	3691
	.byte	8,2,35,8,10
	.byte	'ARS_OD_TimeStampLocal',0
	.word	3691
	.byte	8,2,35,16,10
	.byte	'ARS_OD_Latency',0
	.word	270
	.byte	2,2,35,24,10
	.byte	'ARS_OD_MeasCounter',0
	.word	270
	.byte	2,2,35,26,10
	.byte	'ARS_OD_CycleCounter',0
	.word	146
	.byte	1,2,35,28,10
	.byte	'ARS_OD_NumOfObjects',0
	.word	146
	.byte	1,2,35,29,10
	.byte	'ARS_OD_TaskValidFlag',0
	.word	146
	.byte	1,2,35,30,10
	.byte	'ARS_OD_ExtendedCycleFlag',0
	.word	146
	.byte	1,2,35,31,10
	.byte	'ARS_OD_MsgCounter_Header',0
	.word	146
	.byte	1,2,35,32,10
	.byte	'ARS_OD_CRC16_Checksum_Header',0
	.word	270
	.byte	2,2,35,34,0,14
	.byte	'RadarHeader',0,24,147,27,3
	.word	96212
	.byte	9,24,142,28,9,40,10
	.byte	'time_stamp',0
	.word	3691
	.byte	8,2,35,0,10
	.byte	'time_stamp_can',0
	.word	3691
	.byte	8,2,35,8,10
	.byte	'x',0
	.word	3843
	.byte	4,2,35,16,10
	.byte	'y',0
	.word	3843
	.byte	4,2,35,20,10
	.byte	'z',0
	.word	3843
	.byte	4,2,35,24,10
	.byte	'heading',0
	.word	3843
	.byte	4,2,35,28,10
	.byte	'pitch',0
	.word	3843
	.byte	4,2,35,32,10
	.byte	'roll',0
	.word	3843
	.byte	4,2,35,36,0,14
	.byte	'GlobalPoseEstimation',0,24,152,28,3
	.word	96587
	.byte	19,224,3
	.word	96587
	.byte	20,11,0,14
	.byte	'global_pose_10',0,24,154,28,30
	.word	96747
	.byte	14
	.byte	'IBS_ESCOFF_StsFB_IDT',0,24,174,28,15
	.word	146
	.byte	14
	.byte	'IPC_IPCTotalOdometerV_IDT',0,24,192,28,15
	.word	146
	.byte	14
	.byte	'IPC_IPCTotalOdometer_IDT',0,24,193,28,16
	.word	3655
	.byte	14
	.byte	'IPC_Remain_Maintenance_IDT',0,24,194,28,16
	.word	270
	.byte	14
	.byte	'MFS_ACC_CruiseCancel_IDT',0,24,196,28,15
	.word	146
	.byte	14
	.byte	'MFS_ACC_CruiseGapSet_IDT',0,24,197,28,15
	.word	146
	.byte	14
	.byte	'MFS_ACC_CruiseOn_Off_IDT',0,24,198,28,15
	.word	146
	.byte	14
	.byte	'MFS_ACC_CruiseSpdDecrease_IDT',0,24,199,28,15
	.word	146
	.byte	14
	.byte	'MFS_ACC_CruiseSpdIncrease_IDT',0,24,200,28,15
	.word	146
	.byte	14
	.byte	'MFS_L1_Central_Control_IDT',0,24,201,28,15
	.word	146
	.byte	14
	.byte	'MFS_L1_DownControl_IDT',0,24,202,28,15
	.word	146
	.byte	14
	.byte	'MFS_L1_Failure_IDT',0,24,203,28,15
	.word	146
	.byte	14
	.byte	'MFS_L1_LeftControl_IDT',0,24,204,28,15
	.word	146
	.byte	14
	.byte	'MFS_L1_RightControl_IDT',0,24,205,28,15
	.word	146
	.byte	14
	.byte	'MFS_L1_UpControl_IDT',0,24,206,28,15
	.word	146
	.byte	14
	.byte	'MFS_L2_Failure_IDT',0,24,207,28,15
	.word	146
	.byte	9,24,239,28,9,52,10
	.byte	'distance_x',0
	.word	3843
	.byte	4,2,35,0,10
	.byte	'distance_y',0
	.word	3843
	.byte	4,2,35,4,10
	.byte	'tracking_id',0
	.word	270
	.byte	2,2,35,8,10
	.byte	'class_id',0
	.word	146
	.byte	1,2,35,10,10
	.byte	'angle_view',0
	.word	146
	.byte	1,2,35,11,10
	.byte	'confidence',0
	.word	146
	.byte	1,2,35,12,10
	.byte	'width',0
	.word	3843
	.byte	4,2,35,14,10
	.byte	'height',0
	.word	3843
	.byte	4,2,35,18,10
	.byte	'length',0
	.word	3843
	.byte	4,2,35,22,10
	.byte	'yaw',0
	.word	3843
	.byte	4,2,35,26,10
	.byte	'relative_velocity_x',0
	.word	3843
	.byte	4,2,35,30,10
	.byte	'relative_velocity_y',0
	.word	3843
	.byte	4,2,35,34,10
	.byte	'relative_acceleration_x',0
	.word	3843
	.byte	4,2,35,38,10
	.byte	'relative_acceleration_y',0
	.word	3843
	.byte	4,2,35,42,10
	.byte	'motion_status',0
	.word	146
	.byte	1,2,35,46,10
	.byte	'valid_status',0
	.word	270
	.byte	2,2,35,48,10
	.byte	'target_source',0
	.word	146
	.byte	1,2,35,50,0,14
	.byte	'ObjectInfo',0,24,130,29,3
	.word	97315
	.byte	19,128,26
	.word	97315
	.byte	20,63,0,14
	.byte	'object_set_64',0,24,132,29,20
	.word	97713
	.byte	14
	.byte	'PEPS_IGN1RelaySts_IDT',0,24,142,29,15
	.word	146
	.byte	14
	.byte	'PEPS_IGN1RelayValidity_IDT',0,24,143,29,15
	.word	146
	.byte	14
	.byte	'PEPS_Learning_Status_IDT',0,24,144,29,15
	.word	146
	.byte	14
	.byte	'PEPS_Message_Sts_AliveCounter_IDT',0,24,145,29,15
	.word	146
	.byte	14
	.byte	'PEPS_Message_Sts_CheckSum_IDT',0,24,146,29,15
	.word	146
	.byte	14
	.byte	'PEPS_PowerModeValidity_IDT',0,24,147,29,15
	.word	146
	.byte	14
	.byte	'PEPS_PowerMode_IDT',0,24,148,29,15
	.word	146
	.byte	14
	.byte	'PEPS_RemoteControlSt_IDT',0,24,149,29,15
	.word	146
	.byte	9,24,157,29,9,12,10
	.byte	'flc_info',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'flm_info',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'frm_info',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'frc_info',0
	.word	146
	.byte	1,2,35,3,10
	.byte	'rlc_info',0
	.word	146
	.byte	1,2,35,4,10
	.byte	'rlm_info',0
	.word	146
	.byte	1,2,35,5,10
	.byte	'rrm_info',0
	.word	146
	.byte	1,2,35,6,10
	.byte	'rrc_info',0
	.word	146
	.byte	1,2,35,7,10
	.byte	'fls_info',0
	.word	146
	.byte	1,2,35,8,10
	.byte	'frs_info',0
	.word	146
	.byte	1,2,35,9,10
	.byte	'rls_info',0
	.word	146
	.byte	1,2,35,10,10
	.byte	'rrs_info',0
	.word	146
	.byte	1,2,35,11,0,14
	.byte	'PdcAlertInfo',0,24,171,29,3
	.word	98027
	.byte	9,24,173,29,9,24,10
	.byte	'flc_distance',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'flm_distance',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'frm_distance',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'frc_distance',0
	.word	270
	.byte	2,2,35,6,10
	.byte	'rlc_distance',0
	.word	270
	.byte	2,2,35,8,10
	.byte	'rlm_distance',0
	.word	270
	.byte	2,2,35,10,10
	.byte	'rrm_distance',0
	.word	270
	.byte	2,2,35,12,10
	.byte	'rrc_distance',0
	.word	270
	.byte	2,2,35,14,10
	.byte	'fls_distance',0
	.word	270
	.byte	2,2,35,16,10
	.byte	'frs_distance',0
	.word	270
	.byte	2,2,35,18,10
	.byte	'rls_distance',0
	.word	270
	.byte	2,2,35,20,10
	.byte	'rrs_distance',0
	.word	270
	.byte	2,2,35,22,0,14
	.byte	'PdcDistInfo',0,24,187,29,3
	.word	98272
	.byte	9,24,189,29,9,40,10
	.byte	'flc_distance_left',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'flc_distance_right',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'flm_distance_left',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'flm_distance_right',0
	.word	270
	.byte	2,2,35,6,10
	.byte	'frm_distance_left',0
	.word	270
	.byte	2,2,35,8,10
	.byte	'frm_distance_right',0
	.word	270
	.byte	2,2,35,10,10
	.byte	'frc_distance_left',0
	.word	270
	.byte	2,2,35,12,10
	.byte	'frc_distance_right',0
	.word	270
	.byte	2,2,35,14,10
	.byte	'rlc_distance_left',0
	.word	270
	.byte	2,2,35,16,10
	.byte	'rlc_distance_right',0
	.word	270
	.byte	2,2,35,18,10
	.byte	'rlm_distance_left',0
	.word	270
	.byte	2,2,35,20,10
	.byte	'rlm_distance_right',0
	.word	270
	.byte	2,2,35,22,10
	.byte	'rrm_distance_left',0
	.word	270
	.byte	2,2,35,24,10
	.byte	'rrm_distance_right',0
	.word	270
	.byte	2,2,35,26,10
	.byte	'rrc_distance_left',0
	.word	270
	.byte	2,2,35,28,10
	.byte	'rrc_distance_right',0
	.word	270
	.byte	2,2,35,30,10
	.byte	'fls_distance',0
	.word	270
	.byte	2,2,35,32,10
	.byte	'frs_distance',0
	.word	270
	.byte	2,2,35,34,10
	.byte	'rls_distance',0
	.word	270
	.byte	2,2,35,36,10
	.byte	'rrs_distance',0
	.word	270
	.byte	2,2,35,38,0,14
	.byte	'PdcDistInfoAvm',0,24,211,29,3
	.word	98564
	.byte	9,24,213,29,9,4,10
	.byte	'ls_info',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'rs_info',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'ls_distance',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'rs_distance',0
	.word	146
	.byte	1,2,35,3,0,14
	.byte	'PdcSideInfo',0,24,219,29,3
	.word	99123
	.byte	19,12
	.word	99123
	.byte	20,2,0,14
	.byte	'PdcSideInfo_3',0,24,221,29,21
	.word	99227
	.byte	9,24,235,29,9,24,10
	.byte	'camera_position',0
	.word	3782
	.byte	4,2,35,0,10
	.byte	'timestamp',0
	.word	3810
	.byte	8,2,35,4,10
	.byte	'blockage_status',0
	.word	3732
	.byte	1,2,35,12,10
	.byte	'weather_status',0
	.word	3732
	.byte	1,2,35,13,10
	.byte	'illumination_status',0
	.word	3732
	.byte	1,2,35,14,10
	.byte	'image_limited_status',0
	.word	3732
	.byte	1,2,35,15,10
	.byte	'out_of_focus',0
	.word	146
	.byte	1,2,35,16,10
	.byte	'impacted_technologies',0
	.word	3782
	.byte	4,2,35,18,0,14
	.byte	'PerceptionFailsafe',0,24,245,29,3
	.word	99259
	.byte	19,160,2
	.word	99259
	.byte	20,11,0,14
	.byte	'PerceptionFailsafe_12',0,24,247,29,28
	.word	99499
	.byte	9,24,248,29,9,84,10
	.byte	'track_id',0
	.word	3782
	.byte	4,2,35,0,10
	.byte	'age',0
	.word	3782
	.byte	4,2,35,4,10
	.byte	'exist_probability',0
	.word	3843
	.byte	4,2,35,8,10
	.byte	'quality',0
	.word	146
	.byte	1,2,35,12,10
	.byte	'prediction_type',0
	.word	3810
	.byte	8,2,35,16,10
	.byte	'prediction_source',0
	.word	3810
	.byte	8,2,35,24,10
	.byte	'color',0
	.word	146
	.byte	1,2,35,32,10
	.byte	'color_confidence',0
	.word	3843
	.byte	4,2,35,34,10
	.byte	'lanemark_type',0
	.word	146
	.byte	1,2,35,38,10
	.byte	'lanemark_type_confidence',0
	.word	3843
	.byte	4,2,35,40,10
	.byte	'dlm_type',0
	.word	146
	.byte	1,2,35,44,10
	.byte	'role',0
	.word	146
	.byte	1,2,35,45,10
	.byte	'marker_width',0
	.word	3843
	.byte	4,2,35,46,10
	.byte	'marker_width_std',0
	.word	3843
	.byte	4,2,35,50,10
	.byte	'line_c3',0
	.word	3843
	.byte	4,2,35,54,10
	.byte	'line_c2',0
	.word	3843
	.byte	4,2,35,58,10
	.byte	'line_c1',0
	.word	3843
	.byte	4,2,35,62,10
	.byte	'line_c0',0
	.word	3843
	.byte	4,2,35,66,10
	.byte	'view_range_start',0
	.word	3843
	.byte	4,2,35,70,10
	.byte	'view_range_end',0
	.word	3843
	.byte	4,2,35,74,10
	.byte	'measured_view_range_end',0
	.word	3843
	.byte	4,2,35,78,10
	.byte	'camera_position',0
	.word	146
	.byte	1,2,35,82,10
	.byte	'is_valid',0
	.word	146
	.byte	1,2,35,83,0,14
	.byte	'PerceptionLaneAdjacent',0,24,145,30,3
	.word	99540
	.byte	19,208,2
	.word	99540
	.byte	20,3,0,14
	.byte	'PerceptionLaneAdjacent_4',0,24,147,30,32
	.word	100078
	.byte	9,24,148,30,9,132,1,10
	.byte	'timestamp',0
	.word	3810
	.byte	8,2,35,0,10
	.byte	'track_id',0
	.word	3782
	.byte	4,2,35,8,10
	.byte	'age',0
	.word	3782
	.byte	4,2,35,12,10
	.byte	'exist_probability',0
	.word	3843
	.byte	4,2,35,16,10
	.byte	'quality',0
	.word	146
	.byte	1,2,35,20,10
	.byte	'prediction_source',0
	.word	3810
	.byte	8,2,35,24,10
	.byte	'prediction_type',0
	.word	3810
	.byte	8,2,35,32,10
	.byte	'color',0
	.word	146
	.byte	1,2,35,40,10
	.byte	'color_confidence',0
	.word	3843
	.byte	4,2,35,42,10
	.byte	'lanemark_type',0
	.word	146
	.byte	1,2,35,46,10
	.byte	'lanemark_type_confidence',0
	.word	3843
	.byte	4,2,35,48,10
	.byte	'dlm_type',0
	.word	146
	.byte	1,2,35,52,10
	.byte	'decel_type',0
	.word	146
	.byte	1,2,35,53,10
	.byte	'side',0
	.word	146
	.byte	1,2,35,54,10
	.byte	'crossing',0
	.word	146
	.byte	1,2,35,55,10
	.byte	'marker_width',0
	.word	3843
	.byte	4,2,35,56,10
	.byte	'marker_width_std',0
	.word	3843
	.byte	4,2,35,60,10
	.byte	'dash_average_length',0
	.word	3843
	.byte	4,2,35,64,10
	.byte	'dash_average_gap',0
	.word	3843
	.byte	4,2,35,68,10
	.byte	'is_multi_clothoid',0
	.word	146
	.byte	1,2,35,72,10
	.byte	'first_line_c0',0
	.word	3843
	.byte	4,2,35,74,10
	.byte	'first_line_c1',0
	.word	3843
	.byte	4,2,35,78,10
	.byte	'first_line_c2',0
	.word	3843
	.byte	4,2,35,82,10
	.byte	'first_line_c3',0
	.word	3843
	.byte	4,2,35,86,10
	.byte	'first_view_range_start',0
	.word	3843
	.byte	4,2,35,90,10
	.byte	'first_view_range_end',0
	.word	3843
	.byte	4,2,35,94,10
	.byte	'first_measured_view_range_end',0
	.word	3843
	.byte	4,2,35,98,10
	.byte	'second_line_c0',0
	.word	3843
	.byte	4,2,35,102,10
	.byte	'second_line_c1',0
	.word	3843
	.byte	4,2,35,106,10
	.byte	'second_line_c2',0
	.word	3843
	.byte	4,2,35,110,10
	.byte	'second_line_c3',0
	.word	3843
	.byte	4,2,35,114,10
	.byte	'second_view_range_start',0
	.word	3843
	.byte	4,2,35,118,10
	.byte	'second_view_range_end',0
	.word	3843
	.byte	4,2,35,122,10
	.byte	'second_measured_view_range_end',0
	.word	3843
	.byte	4,2,35,126,10
	.byte	'camera_position',0
	.word	146
	.byte	1,3,35,130,1,10
	.byte	'is_valid',0
	.word	146
	.byte	1,3,35,131,1,0,14
	.byte	'PerceptionLaneHost',0,24,186,30,3
	.word	100122
	.byte	19,136,2
	.word	100122
	.byte	20,1,0,14
	.byte	'PerceptionLaneHost_2',0,24,188,30,28
	.word	101040
	.byte	9,24,189,30,9,216,1,10
	.byte	'timestamp',0
	.word	3691
	.byte	8,2,35,0,10
	.byte	'frame_index',0
	.word	3691
	.byte	8,2,35,8,10
	.byte	'camera_position',0
	.word	3732
	.byte	1,2,35,16,10
	.byte	'id',0
	.word	146
	.byte	1,2,35,17,10
	.byte	'class',0
	.word	3732
	.byte	1,2,35,18,10
	.byte	'subclass',0
	.word	3732
	.byte	1,2,35,19,10
	.byte	'confidence',0
	.word	3843
	.byte	4,2,35,20,10
	.byte	'bbox',0
	.word	90047
	.byte	16,2,35,24,10
	.byte	'length',0
	.word	3843
	.byte	4,2,35,40,10
	.byte	'length_std',0
	.word	3843
	.byte	4,2,35,44,10
	.byte	'width',0
	.word	3843
	.byte	4,2,35,48,10
	.byte	'width_std',0
	.word	3843
	.byte	4,2,35,52,10
	.byte	'height',0
	.word	3843
	.byte	4,2,35,56,10
	.byte	'height_std',0
	.word	3843
	.byte	4,2,35,60,10
	.byte	'age_count',0
	.word	3732
	.byte	1,2,35,64,10
	.byte	'age_seconds',0
	.word	3843
	.byte	4,2,35,66,10
	.byte	'visibility_side',0
	.word	3732
	.byte	1,2,35,70,10
	.byte	'heading',0
	.word	3843
	.byte	4,2,35,72,10
	.byte	'heading_std',0
	.word	3843
	.byte	4,2,35,76,10
	.byte	'inverse_ttc',0
	.word	3843
	.byte	4,2,35,80,10
	.byte	'inverse_ttc_std',0
	.word	3843
	.byte	4,2,35,84,10
	.byte	'angle_left',0
	.word	3843
	.byte	4,2,35,88,10
	.byte	'angle_right',0
	.word	3843
	.byte	4,2,35,92,10
	.byte	'angle_side',0
	.word	3843
	.byte	4,2,35,96,10
	.byte	'angle_rate',0
	.word	3843
	.byte	4,2,35,100,10
	.byte	'top_out_of_image',0
	.word	3732
	.byte	1,2,35,104,10
	.byte	'bottom_out_of_image',0
	.word	3732
	.byte	1,2,35,105,10
	.byte	'left_out_of_image',0
	.word	3732
	.byte	1,2,35,106,10
	.byte	'right_out_of_image',0
	.word	3732
	.byte	1,2,35,107,10
	.byte	'brake_light',0
	.word	3732
	.byte	1,2,35,108,10
	.byte	'turn_indicator_left',0
	.word	3732
	.byte	1,2,35,109,10
	.byte	'turn_indicator_right',0
	.word	3732
	.byte	1,2,35,110,10
	.byte	'measuring_status_0',0
	.word	3732
	.byte	1,2,35,111,10
	.byte	'measuring_status_1',0
	.word	3732
	.byte	1,2,35,112,10
	.byte	'measuring_status_2',0
	.word	3732
	.byte	1,2,35,113,10
	.byte	'motion_orientation',0
	.word	3732
	.byte	1,2,35,114,10
	.byte	'motion_category',0
	.word	3732
	.byte	1,2,35,115,10
	.byte	'motion_status',0
	.word	3732
	.byte	1,2,35,116,10
	.byte	'cutin_cutout',0
	.word	3732
	.byte	1,2,35,117,10
	.byte	'lat_distance',0
	.word	3843
	.byte	4,2,35,118,10
	.byte	'lat_distance_std',0
	.word	3843
	.byte	4,2,35,122,10
	.byte	'long_distance',0
	.word	3843
	.byte	4,2,35,126,10
	.byte	'long_distance_std',0
	.word	3843
	.byte	4,3,35,130,1,10
	.byte	'relative_lat_velocity',0
	.word	3843
	.byte	4,3,35,134,1,10
	.byte	'relative_lat_velocity_std',0
	.word	3843
	.byte	4,3,35,138,1,10
	.byte	'relative_long_velocity',0
	.word	3843
	.byte	4,3,35,142,1,10
	.byte	'relative_long_velocity_std',0
	.word	3843
	.byte	4,3,35,146,1,10
	.byte	'abs_lat_velocity',0
	.word	3843
	.byte	4,3,35,150,1,10
	.byte	'abs_lat_velocity_std',0
	.word	3843
	.byte	4,3,35,154,1,10
	.byte	'abs_long_velocity',0
	.word	3843
	.byte	4,3,35,158,1,10
	.byte	'abs_long_velocity_std',0
	.word	3843
	.byte	4,3,35,162,1,10
	.byte	'relative_lat_acc',0
	.word	3843
	.byte	4,3,35,166,1,10
	.byte	'relative_lat_acc_std',0
	.word	3843
	.byte	4,3,35,170,1,10
	.byte	'relative_long_acc',0
	.word	3843
	.byte	4,3,35,174,1,10
	.byte	'relative_long_acc_std',0
	.word	3843
	.byte	4,3,35,178,1,10
	.byte	'abs_lat_acc',0
	.word	3843
	.byte	4,3,35,182,1,10
	.byte	'abs_lat_acc_std',0
	.word	3843
	.byte	4,3,35,186,1,10
	.byte	'abs_long_acc',0
	.word	3843
	.byte	4,3,35,190,1,10
	.byte	'abs_long_acc_std',0
	.word	3843
	.byte	4,3,35,194,1,10
	.byte	'abs_speed',0
	.word	3843
	.byte	4,3,35,198,1,10
	.byte	'abs_speed_std',0
	.word	3843
	.byte	4,3,35,202,1,10
	.byte	'abs_acceleration',0
	.word	3843
	.byte	4,3,35,206,1,10
	.byte	'abs_acceleration_std',0
	.word	3843
	.byte	4,3,35,210,1,0,14
	.byte	'PerceptionOutObject',0,24,254,30,3
	.word	101080
	.byte	19,128,54
	.word	101080
	.byte	20,31,0,14
	.byte	'PerceptionOutObject_32',0,24,128,31,29
	.word	102642
	.byte	9,24,129,31,9,44,10
	.byte	'exist_probability',0
	.word	3843
	.byte	4,2,35,0,10
	.byte	'height',0
	.word	3843
	.byte	4,2,35,4,10
	.byte	'height_std',0
	.word	3843
	.byte	4,2,35,8,10
	.byte	'line_c3',0
	.word	3843
	.byte	4,2,35,12,10
	.byte	'line_c2',0
	.word	3843
	.byte	4,2,35,16,10
	.byte	'line_c1',0
	.word	3843
	.byte	4,2,35,20,10
	.byte	'line_c0',0
	.word	3843
	.byte	4,2,35,24,10
	.byte	'view_range_start',0
	.word	3843
	.byte	4,2,35,28,10
	.byte	'view_range_end',0
	.word	3843
	.byte	4,2,35,32,10
	.byte	'measured_view_range_end',0
	.word	3843
	.byte	4,2,35,36,10
	.byte	'camera_position',0
	.word	146
	.byte	1,2,35,40,0,14
	.byte	'PerceptionRoadEdge',0,24,142,31,3
	.word	102684
	.byte	19,88
	.word	102684
	.byte	20,1,0,14
	.byte	'PerceptionRoadEdge_2',0,24,144,31,28
	.word	102958
	.byte	9,24,145,31,9,44,10
	.byte	'bbox',0
	.word	90047
	.byte	16,2,35,0,10
	.byte	'height',0
	.word	3843
	.byte	4,2,35,16,10
	.byte	'width',0
	.word	3843
	.byte	4,2,35,20,10
	.byte	'lat_distance',0
	.word	3843
	.byte	4,2,35,24,10
	.byte	'lat_distance_std',0
	.word	3843
	.byte	4,2,35,28,10
	.byte	'long_distance',0
	.word	3843
	.byte	4,2,35,32,10
	.byte	'long_distance_std',0
	.word	3843
	.byte	4,2,35,36,10
	.byte	'relevance',0
	.word	146
	.byte	1,2,35,40,0,14
	.byte	'PerceptionTrafficSign',0,24,155,31,3
	.word	102997
	.byte	9,24,157,31,9,6,10
	.byte	'sign',0
	.word	3782
	.byte	4,2,35,0,10
	.byte	'type',0
	.word	146
	.byte	1,2,35,4,0,14
	.byte	'TrafficSignType',0,24,161,31,3
	.word	103197
	.byte	19,144,1
	.word	103197
	.byte	20,23,0,14
	.byte	'TrafficSignType_24',0,24,163,31,25
	.word	103257
	.byte	9,24,164,31,9,200,1,10
	.byte	'sign',0
	.word	103197
	.byte	6,2,35,0,10
	.byte	'derived_signs',0
	.word	103267
	.byte	144,1,2,35,6,10
	.byte	'bbox',0
	.word	90047
	.byte	16,3,35,152,1,10
	.byte	'lat_distance',0
	.word	3843
	.byte	4,3,35,168,1,10
	.byte	'long_distance',0
	.word	3843
	.byte	4,3,35,172,1,10
	.byte	'panel_width',0
	.word	3843
	.byte	4,3,35,176,1,10
	.byte	'panel_height',0
	.word	3843
	.byte	4,3,35,180,1,10
	.byte	'height',0
	.word	3843
	.byte	4,3,35,184,1,10
	.byte	'speed_limit',0
	.word	3843
	.byte	4,3,35,188,1,10
	.byte	'height_limit',0
	.word	3843
	.byte	4,3,35,192,1,10
	.byte	'weight_limit',0
	.word	3843
	.byte	4,3,35,196,1,0,14
	.byte	'PerceptionTrafficSignStatus',0,24,177,31,3
	.word	103295
	.byte	19,144,1
	.word	103197
	.byte	20,23,0,19,128,25
	.word	103295
	.byte	20,15,0,14
	.byte	'PerceptionTrafficSignStatus_16',0,24,179,31,37
	.word	103580
	.byte	19,192,5
	.word	102997
	.byte	20,15,0,14
	.byte	'PerceptionTrafficSign_16',0,24,180,31,31
	.word	103630
	.byte	14
	.byte	'RollingCounter_0x106_IDT',0,24,206,31,15
	.word	146
	.byte	14
	.byte	'RollingCounter_0x109_IDT',0,24,207,31,15
	.word	146
	.byte	14
	.byte	'RollingCounter_0x132_IDT',0,24,208,31,15
	.word	146
	.byte	14
	.byte	'RollingCounter_0x17F_IDT',0,24,209,31,15
	.word	146
	.byte	14
	.byte	'RollingCounter_0x3F1_IDT',0,24,211,31,15
	.word	146
	.byte	14
	.byte	'RollingCounter_0x3F5_IDT',0,24,212,31,15
	.word	146
	.byte	14
	.byte	'RollingCounter_0x3F7_IDT',0,24,213,31,15
	.word	146
	.byte	14
	.byte	'RollingCounter_1F8_IDT',0,24,214,31,15
	.word	146
	.byte	14
	.byte	'RollingCounter_230_IDT',0,24,215,31,15
	.word	146
	.byte	14
	.byte	'Rolling_counter_0x17E_IDT',0,24,216,31,15
	.word	146
	.byte	14
	.byte	'SAS_Calibrated_IDT',0,24,217,31,15
	.word	146
	.byte	14
	.byte	'SAS_SASFailure_IDT',0,24,218,31,15
	.word	146
	.byte	14
	.byte	'SAS_SASStsSnsr_IDT',0,24,219,31,15
	.word	146
	.byte	14
	.byte	'SAS_SteerWheelAngle_IDT',0,24,221,31,16
	.word	270
	.byte	14
	.byte	'SAS_SteerWhlRotSpdStatus_IDT',0,24,223,31,15
	.word	146
	.byte	14
	.byte	'SAS_SteerWhlRotSpd_IDT',0,24,224,31,16
	.word	270
	.byte	14
	.byte	'SAS_SteeringAngleValid_IDT',0,24,225,31,15
	.word	146
	.byte	14
	.byte	'STAT_Central_LockSts_IDT',0,24,226,31,15
	.word	146
	.byte	14
	.byte	'WCBS_Trailermode_Feedback_IDT',0,24,167,33,15
	.word	146
	.byte	14
	.byte	'VCU_ModeGearSts_IDT',0,24,128,34,15
	.word	146
	.byte	14
	.byte	'VCU_Warning_IMMO_Fail_IDT',0,24,129,34,15
	.word	146
	.byte	14
	.byte	'VCU_Ready_IDT',0,24,130,34,15
	.word	146
	.byte	14
	.byte	'VCU_RegencyLevInd_IDT',0,24,131,34,15
	.word	146
	.byte	14
	.byte	'VCU_Ctrl_AliveCounter_IDT',0,24,132,34,15
	.word	146
	.byte	14
	.byte	'VCU_LimpHomeSts_IDT',0,24,133,34,15
	.word	146
	.byte	14
	.byte	'VCU_Ctrl_CheckSum_IDT',0,24,134,34,15
	.word	146
	.byte	14
	.byte	'VCU_StsAccPedalFault_IDT',0,24,146,34,15
	.word	146
	.byte	14
	.byte	'VCU_StsSysFault_IDT',0,24,147,34,15
	.word	146
	.byte	14
	.byte	'VCU_AccPedalPosition_IDT',0,24,148,34,15
	.word	146
	.byte	14
	.byte	'VCU_AccPedal_Active_IDT',0,24,149,34,15
	.word	146
	.byte	14
	.byte	'VCU_StsEpt_AliveCounter_IDT',0,24,150,34,15
	.word	146
	.byte	14
	.byte	'VCU_StsEpt_CheckSum_IDT',0,24,151,34,15
	.word	146
	.byte	19,24
	.word	270
	.byte	20,11,0,14
	.byte	'distance_12',0,24,221,51,16
	.word	104720
	.byte	9,24,222,51,9,32,10
	.byte	'distance',0
	.word	104729
	.byte	24,2,35,0,10
	.byte	'time_stamp',0
	.word	3691
	.byte	8,2,35,24,0,14
	.byte	'UpaDistT',0,24,226,51,3
	.word	104750
	.byte	19,24
	.word	270
	.byte	20,11,0,19,24
	.word	3782
	.byte	20,5,0,14
	.byte	'x_6',0,24,228,51,16
	.word	104822
	.byte	14
	.byte	'y_6',0,24,229,51,16
	.word	104822
	.byte	19,6
	.word	146
	.byte	20,5,0,14
	.byte	'type_6',0,24,230,51,15
	.word	104857
	.byte	9,24,231,51,9,64,10
	.byte	'x',0
	.word	104831
	.byte	24,2,35,0,10
	.byte	'y',0
	.word	104844
	.byte	24,2,35,24,10
	.byte	'type',0
	.word	104866
	.byte	6,2,35,48,10
	.byte	'time_stamp',0
	.word	3691
	.byte	8,2,35,56,0,14
	.byte	'UpaObjectInfo',0,24,237,51,3
	.word	104882
	.byte	19,24
	.word	3782
	.byte	20,5,0,19,24
	.word	3782
	.byte	20,5,0,19,6
	.word	146
	.byte	20,5,0,19,192,1
	.word	104882
	.byte	20,2,0,14
	.byte	'upa_object_3',0,24,239,51,23
	.word	104995
	.byte	9,24,240,51,9,192,1,10
	.byte	'upa_object',0
	.word	105005
	.byte	192,1,2,35,0,0,14
	.byte	'UpaObjsT',0,24,243,51,3
	.word	105027
	.byte	19,192,1
	.word	104882
	.byte	20,2,0,19,80
	.word	87416
	.byte	20,3,0,14
	.byte	'apa_dist_info_4',0,24,251,51,18
	.word	105084
	.byte	19,128,3
	.word	105027
	.byte	20,1,0,14
	.byte	'upa_objs_2',0,24,252,51,18
	.word	105118
	.byte	19,64
	.word	104750
	.byte	20,1,0,14
	.byte	'upa_dist_2',0,24,253,51,18
	.word	105148
	.byte	14
	.byte	'min_distance_12',0,24,254,51,16
	.word	104720
	.byte	14
	.byte	'ring_time_uint16_array_12',0,24,136,52,16
	.word	104720
	.byte	19,56
	.word	146
	.byte	20,55,0,14
	.byte	'reserved_data_uint8_array_56',0,24,137,52,15
	.word	105237
	.byte	19,20
	.word	270
	.byte	20,9,0,14
	.byte	'distance_10',0,24,164,52,16
	.word	105284
	.byte	14
	.byte	'width_10',0,24,165,52,16
	.word	105284
	.byte	19,10
	.word	146
	.byte	20,9,0,14
	.byte	'peak_10',0,24,166,52,15
	.word	105332
	.byte	9,24,167,52,9,68,10
	.byte	'echo_num',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'distance',0
	.word	105293
	.byte	20,2,35,2,10
	.byte	'width',0
	.word	105314
	.byte	20,2,35,22,10
	.byte	'peak',0
	.word	105341
	.byte	10,2,35,42,10
	.byte	'ring_time',0
	.word	270
	.byte	2,2,35,52,10
	.byte	'valid_fram',0
	.word	146
	.byte	1,2,35,54,10
	.byte	'confidence',0
	.word	146
	.byte	1,2,35,55,10
	.byte	'status_work',0
	.word	146
	.byte	1,2,35,56,10
	.byte	'counter',0
	.word	146
	.byte	1,2,35,57,10
	.byte	'system_time',0
	.word	3691
	.byte	8,2,35,60,0,14
	.byte	'UssRawData',0,24,179,52,3
	.word	105358
	.byte	19,20
	.word	270
	.byte	20,9,0,19,20
	.word	270
	.byte	20,9,0,19,10
	.word	146
	.byte	20,9,0,19,176,6
	.word	105358
	.byte	20,11,0,14
	.byte	'sensor_info_12',0,24,181,52,20
	.word	105595
	.byte	9,24,189,52,9,12,10
	.byte	'diagnosis_info',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'remind_info',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'counter',0
	.word	146
	.byte	1,2,35,3,10
	.byte	'system_time',0
	.word	3691
	.byte	8,2,35,4,0,14
	.byte	'UssStatus',0,24,195,52,3
	.word	105629
	.byte	19,144,1
	.word	105629
	.byte	20,11,0,14
	.byte	'sensor_status_12',0,24,197,52,19
	.word	105738
	.byte	14
	.byte	'Com_IpduGroupIdType',0,25,64,16
	.word	270
	.byte	14
	.byte	'Com_SignalIdType',0,25,65,16
	.word	270
	.byte	14
	.byte	'Com_SignalGroupIdType',0,25,66,16
	.word	270
	.byte	7,25,77,9,1,8
	.byte	'COM_PENDING',0,0,8
	.byte	'COM_TRIGGERED',0,1,8
	.byte	'COM_TRIGGERED_WITHOUT_REPETITION',0,2,8
	.byte	'COM_TRIGGERED_ON_CHANGE',0,3,8
	.byte	'COM_TRIGGERED_ON_CHANGE_WITHOUT_REPETITION',0,4,8
	.byte	'COM_IFACTIVE_SIG',0,5,0,14
	.byte	'Com_SignalTxPropertyType',0,25,85,3
	.word	105857
	.byte	7,25,87,9,1,8
	.byte	'COM_ALWAYS',0,0,8
	.byte	'COM_MASKED_NEW_DIFFERS_MASKED_OLD',0,1,8
	.byte	'COM_MASKED_NEW_DIFFERS_X',0,2,8
	.byte	'COM_MASKED_NEW_EQUALS_X',0,3,8
	.byte	'COM_NEVER',0,4,8
	.byte	'COM_NEW_IS_OUTSIDE',0,5,8
	.byte	'COM_NEW_IS_WITHIN',0,6,8
	.byte	'COM_ONE_EVERY_N',0,7,0,14
	.byte	'Com_FilterAlgorithmType',0,25,97,3
	.word	106051
	.byte	7,25,99,9,1,8
	.byte	'COM_DIRECT',0,0,8
	.byte	'COM_MIXED',0,1,8
	.byte	'COM_PDU_NONE',0,2,8
	.byte	'COM_PERIODIC',0,3,8
	.byte	'COM_IFACTIVE_PDU',0,4,0,14
	.byte	'Com_IpduTxPropertyType',0,25,106,3
	.word	106262
	.byte	7,25,118,9,1,8
	.byte	'COM_SIG_U8',0,0,8
	.byte	'COM_SIG_U16',0,1,8
	.byte	'COM_SIG_U32',0,2,8
	.byte	'COM_SIG_BOOLEAN',0,3,8
	.byte	'COM_SIG_S8',0,4,8
	.byte	'COM_SIG_S16',0,5,8
	.byte	'COM_SIG_S32',0,6,8
	.byte	'COM_SIG_F32',0,7,8
	.byte	'COM_SIG_DYN',0,8,8
	.byte	'COM_SIG_U8N',0,9,8
	.byte	'COM_SIG_U64',0,10,8
	.byte	'COM_SIG_S64',0,11,8
	.byte	'COM_SIG_F64',0,12,0,14
	.byte	'Com_SigType',0,25,133,1,3
	.word	106373
	.byte	14
	.byte	'Com_RxSigCbkRxAckType',0,25,175,1,9
	.word	7881
	.byte	14
	.byte	'Com_RxSigCbkInvType',0,25,176,1,9
	.word	7881
	.byte	14
	.byte	'Com_RxSigCbkRxTOutType',0,25,177,1,9
	.word	7881
	.byte	14
	.byte	'Com_TxSigTxErrType',0,25,178,1,9
	.word	7881
	.byte	14
	.byte	'Com_TOIndicationType',0,25,179,1,9
	.word	7881
	.byte	14
	.byte	'Com_TxSigCbkTxAckType',0,25,180,1,9
	.word	7881
	.byte	11
	.word	4666
	.byte	14
	.byte	'Com_TxIpduCalloutType',0,25,186,1,9
	.word	106765
	.byte	14
	.byte	'Com_RxIpduCalloutType',0,25,194,1,9
	.word	106765
	.byte	6
	.word	8133
	.byte	11
	.word	106832
	.byte	24,1,1,23
	.word	106837
	.byte	23
	.word	8139
	.byte	23
	.word	270
	.byte	0,11
	.word	106842
	.byte	14
	.byte	'Com_WriteSignalType',0,25,202,1,9
	.word	106861
	.byte	24,1,1,23
	.word	8139
	.byte	23
	.word	8139
	.byte	23
	.word	270
	.byte	0,11
	.word	106895
	.byte	14
	.byte	'Com_ReadSignalType',0,25,210,1,9
	.word	106914
	.byte	14
	.byte	'Com_CopySignalType',0,25,218,1,9
	.word	106861
	.byte	14
	.byte	'Com_MoveSignalType',0,25,226,1,9
	.word	7881
	.byte	14
	.byte	'Com_Gw_CopySigType',0,25,228,1,9
	.word	7881
	.byte	22
	.word	146
	.byte	1,1,23
	.word	146
	.byte	23
	.word	270
	.byte	23
	.word	106837
	.byte	23
	.word	270
	.byte	0,11
	.word	107031
	.byte	14
	.byte	'Com_CheckTxChangeFunPtrType',0,25,232,1,9
	.word	107059
	.byte	9,25,136,2,9,8,10
	.byte	'TxModeMode',0
	.word	106262
	.byte	1,2,35,0,10
	.byte	'TxModeNumberOfRepetitions',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'TxModeRepetitionPeriod',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'TxModeTimeOffset',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'TxModeTimePeriod',0
	.word	270
	.byte	2,2,35,6,0,14
	.byte	'Com_CfgTxModeTableType',0,25,143,2,3
	.word	107101
	.byte	6
	.word	146
	.byte	11
	.word	107279
	.byte	6
	.word	107101
	.byte	11
	.word	107289
	.byte	9,25,198,2,9,44,10
	.byte	'isImmProcess',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'MinimumDelayTime',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'SignalStartNum',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'SignalStopNum',0
	.word	270
	.byte	2,2,35,6,10
	.byte	'TxIPDUGroupFlag',0
	.word	146
	.byte	1,2,35,8,10
	.byte	'numOfPduGrp',0
	.word	146
	.byte	1,2,35,9,10
	.byte	'PduGrpPtr',0
	.word	107284
	.byte	4,2,35,12,10
	.byte	'IpduMapPdur',0
	.word	146
	.byte	1,2,35,16,10
	.byte	'SduDataPtr',0
	.word	8139
	.byte	4,2,35,20,10
	.byte	'SduLength',0
	.word	270
	.byte	2,2,35,24,10
	.byte	'TxModeTrueCfgTablePtr',0
	.word	107294
	.byte	4,2,35,28,10
	.byte	'TxModeFalseCfgTablePtr',0
	.word	107294
	.byte	4,2,35,32,10
	.byte	'Callout',0
	.word	106770
	.byte	4,2,35,36,10
	.byte	'TxCancelTransmitSupportFlag',0
	.word	146
	.byte	1,2,35,40,10
	.byte	'isTpPdu',0
	.word	146
	.byte	1,2,35,41,10
	.byte	'unusedAreaByte',0
	.word	146
	.byte	1,2,35,42,0,14
	.byte	'Com_CfgTxPduTableType',0,25,249,2,3
	.word	107299
	.byte	11
	.word	4666
	.byte	6
	.word	106734
	.byte	6
	.word	106704
	.byte	6
	.word	106676
	.byte	6
	.word	106947
	.byte	6
	.word	106919
	.byte	6
	.word	106866
	.byte	6
	.word	107064
	.byte	9,25,252,2,9,40,10
	.byte	'TxPduId',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'SigTransferProperty',0
	.word	105857
	.byte	1,2,35,1,10
	.byte	'SigType',0
	.word	106373
	.byte	1,2,35,2,10
	.byte	'InitValPtr',0
	.word	106837
	.byte	4,2,35,4,10
	.byte	'SigStartByteIndex',0
	.word	270
	.byte	2,2,35,8,10
	.byte	'SigLen',0
	.word	270
	.byte	2,2,35,10,10
	.byte	'SigCbkTxAckFun',0
	.word	107720
	.byte	4,2,35,12,10
	.byte	'SigTxTOIndicationFun',0
	.word	107725
	.byte	4,2,35,16,10
	.byte	'CbkTxErrFun',0
	.word	107730
	.byte	4,2,35,20,10
	.byte	'CopySignalFun',0
	.word	107735
	.byte	4,2,35,24,10
	.byte	'ReadSignalFun',0
	.word	107740
	.byte	4,2,35,28,10
	.byte	'WriteSignalFun',0
	.word	107745
	.byte	4,2,35,32,10
	.byte	'CheckChangeSignalFun',0
	.word	107750
	.byte	4,2,35,36,0,14
	.byte	'Com_CfgTxSigTableType',0,25,178,3,3
	.word	107755
	.byte	11
	.word	7878
	.byte	11
	.word	7878
	.byte	11
	.word	7878
	.byte	11
	.word	106842
	.byte	11
	.word	106895
	.byte	11
	.word	106842
	.byte	11
	.word	107031
	.byte	9,25,204,3,9,32,10
	.byte	'isImmProcess',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'SignalStartNum',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'SignalStopNum',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'RxIPDUGroupFlag',0
	.word	146
	.byte	1,2,35,6,10
	.byte	'numOfPduGrp',0
	.word	146
	.byte	1,2,35,7,10
	.byte	'PduGrpPtr',0
	.word	107284
	.byte	4,2,35,8,10
	.byte	'RxIpduTimeoutMonitorFlag',0
	.word	146
	.byte	1,2,35,12,10
	.byte	'RxFirstTimeOut',0
	.word	270
	.byte	2,2,35,14,10
	.byte	'RxPeriodTimeOut',0
	.word	270
	.byte	2,2,35,16,10
	.byte	'Callout',0
	.word	106801
	.byte	4,2,35,20,10
	.byte	'SduDataPtr',0
	.word	8139
	.byte	4,2,35,24,10
	.byte	'SduLength',0
	.word	270
	.byte	2,2,35,28,10
	.byte	'isTpPdu',0
	.word	146
	.byte	1,2,35,30,0,14
	.byte	'Com_CfgRxPduTableType',0,25,244,3,3
	.word	108129
	.byte	11
	.word	4666
	.byte	6
	.word	106584
	.byte	6
	.word	106615
	.byte	6
	.word	106644
	.byte	6
	.word	106919
	.byte	6
	.word	106866
	.byte	6
	.word	106975
	.byte	6
	.word	106947
	.byte	9,25,247,3,9,48,10
	.byte	'RxPduId',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'SigType',0
	.word	106373
	.byte	1,2,35,1,10
	.byte	'InitValPtr',0
	.word	106837
	.byte	4,2,35,4,10
	.byte	'SigStartByteIndex',0
	.word	270
	.byte	2,2,35,8,10
	.byte	'SigLen',0
	.word	270
	.byte	2,2,35,10,10
	.byte	'isTimeoutReplace',0
	.word	146
	.byte	1,2,35,12,10
	.byte	'isGroupSignal',0
	.word	146
	.byte	1,2,35,13,10
	.byte	'groupId',0
	.word	270
	.byte	2,2,35,14,10
	.byte	'GroupSigTempBuf',0
	.word	8139
	.byte	4,2,35,16,10
	.byte	'RxSigCbkRxAckFun',0
	.word	108462
	.byte	4,2,35,20,10
	.byte	'RxSigCbkInvFun',0
	.word	108467
	.byte	4,2,35,24,10
	.byte	'RxSigCbkRxTOutFun',0
	.word	108472
	.byte	4,2,35,28,10
	.byte	'ReadSignalFun',0
	.word	108477
	.byte	4,2,35,32,10
	.byte	'WriteSignalFun',0
	.word	108482
	.byte	4,2,35,36,10
	.byte	'MoveSignalFun',0
	.word	108487
	.byte	4,2,35,40,10
	.byte	'CopySignalFun',0
	.word	108492
	.byte	4,2,35,44,0,14
	.byte	'Com_CfgRxSigTableType',0,25,189,4,3
	.word	108497
	.byte	11
	.word	7878
	.byte	11
	.word	7878
	.byte	11
	.word	7878
	.byte	11
	.word	7878
	.byte	9,25,192,4,9,16,10
	.byte	'TxIpduGroupPtr',0
	.word	107284
	.byte	4,2,35,0,10
	.byte	'TxIpduGroupNum',0
	.word	146
	.byte	1,2,35,4,10
	.byte	'RxIpduGroupPtr',0
	.word	107284
	.byte	4,2,35,8,10
	.byte	'RxIpduGroupNum',0
	.word	146
	.byte	1,2,35,12,0,14
	.byte	'Com_CfgPduGroupTableType',0,25,198,4,3
	.word	108913
	.byte	9,25,205,4,9,12,10
	.byte	'PduId',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'SigGrpTransferProperty',0
	.word	105857
	.byte	1,2,35,1,10
	.byte	'isArrayAccessSupport',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'SignalStartNum',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'SignalStopNum',0
	.word	270
	.byte	2,2,35,6,10
	.byte	'updateBitIndex',0
	.word	270
	.byte	2,2,35,8,10
	.byte	'hasInValidVal',0
	.word	146
	.byte	1,2,35,10,10
	.byte	'hasFilter',0
	.word	146
	.byte	1,2,35,11,0,14
	.byte	'Com_CfgSigGroupType',0,25,220,4,3
	.word	109050
	.byte	14
	.byte	'ComM_ModeType',0,26,63,15
	.word	146
	.byte	14
	.byte	'Dcm_SecRefType',0,27,67,16
	.word	270
	.byte	14
	.byte	'Dcm_SesRefType',0,27,68,16
	.word	270
	.byte	7,27,142,1,9,1,8
	.byte	'DCM_USE_BLOCK_ID',0,0,8
	.byte	'DCM_USE_DATA_ASYNCH_CLIENT_SERVER',0,1,8
	.byte	'DCM_USE_DATA_ASYNCH_CLIENT_SERVER_ERROR',0,2,8
	.byte	'DCM_USE_DATA_ASYNCH_FNC',0,3,8
	.byte	'DCM_USE_DATA_ASYNCH_FNC_ERROR',0,4,8
	.byte	'DCM_USE_DATA_SENDER_RECEIVER',0,5,8
	.byte	'DCM_USE_DATA_SENDER_RECEIVER_AS_SERVICE',0,6,8
	.byte	'DCM_USE_DATA_SYNCH_CLIENT_SERVER',0,7,8
	.byte	'DCM_USE_DATA_SYNCH_FNC',0,8,8
	.byte	'DCM_USE_ECU_SIGNAL',0,9,0,14
	.byte	'Dcm_DspDataUsePortType',0,27,154,1,3
	.word	109344
	.byte	14
	.byte	'Dcm_MsgItemType',0,27,192,1,15
	.word	146
	.byte	11
	.word	146
	.byte	14
	.byte	'Dcm_MsgType',0,27,194,1,57
	.word	109717
	.byte	14
	.byte	'Dcm_MsgLenType',0,27,196,1,16
	.word	3655
	.byte	14
	.byte	'Dcm_BitType',0,27,200,1,15
	.word	146
	.byte	9,27,201,1,9,1,26
	.byte	'reqType',0,1
	.word	146
	.byte	1,7,2,35,0,26
	.byte	'suppressPosResponse',0,1
	.word	146
	.byte	1,6,2,35,0,0,14
	.byte	'Dcm_MsgAddInfoType',0,27,209,1,3
	.word	109788
	.byte	7,27,212,1,9,1,8
	.byte	'DCM_PHYSICAL_TYPE',0,0,8
	.byte	'DCM_FUNCTIONAL_TYPE',0,1,0,14
	.byte	'Dcm_RequestAddrseeType',0,27,216,1,3
	.word	109873
	.byte	14
	.byte	'Dcm_IdContextType',0,27,224,1,15
	.word	146
	.byte	9,27,226,1,9,28,10
	.byte	'reqData',0
	.word	109722
	.byte	4,2,35,0,10
	.byte	'reqDataLen',0
	.word	3655
	.byte	4,2,35,4,10
	.byte	'resData',0
	.word	109722
	.byte	4,2,35,8,10
	.byte	'resDataLen',0
	.word	3655
	.byte	4,2,35,12,10
	.byte	'CopyDataIndex',0
	.word	3655
	.byte	4,2,35,16,10
	.byte	'msgAddInfo',0
	.word	109788
	.byte	1,2,35,20,10
	.byte	'resMaxDataLen',0
	.word	3655
	.byte	4,2,35,22,10
	.byte	'idContext',0
	.word	146
	.byte	1,2,35,26,10
	.byte	'RxPduId',0
	.word	146
	.byte	1,2,35,27,0,11
	.word	109981
	.byte	11
	.word	146
	.byte	22
	.word	146
	.byte	1,1,23
	.word	146
	.byte	23
	.word	110164
	.byte	23
	.word	110169
	.byte	0,11
	.word	110174
	.byte	14
	.byte	'EcucFunctionServiceFncDef',0,27,248,1,9
	.word	110197
	.byte	11
	.word	146
	.byte	9,27,128,2,9,12,10
	.byte	'DcmDsdSubServiceId',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'DcmDsdSubServiceUsed',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'DcmDsdSubServiceSupportAddress',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'DcmDsdSubServiceSecurityLevelRef',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'DcmDsdSubServiceSessionLevelRef',0
	.word	270
	.byte	2,2,35,6,10
	.byte	'DcmDsdSubServiceFnc',0
	.word	110202
	.byte	4,2,35,8,0,14
	.byte	'Dcm_DsdSubServiceType',0,27,145,2,3
	.word	110242
	.byte	11
	.word	110174
	.byte	6
	.word	110242
	.byte	11
	.word	110495
	.byte	9,27,148,2,9,24,10
	.byte	'DcmDsdSidTabServiceId',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'DcmDsdServiceUsed',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'DcmDsdServiceSupportAddress',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'DcmDsdServiceMinLength',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'DcmDsdSidTabFnc',0
	.word	110202
	.byte	4,2,35,8,10
	.byte	'DcmDsdSidTabSubfuncAvail',0
	.word	146
	.byte	1,2,35,12,10
	.byte	'DcmDsdSidTabSecurityLevelRef',0
	.word	270
	.byte	2,2,35,14,10
	.byte	'DcmDsdSidTabSessionLevelRef',0
	.word	270
	.byte	2,2,35,16,10
	.byte	'NumOfSubService',0
	.word	146
	.byte	1,2,35,18,10
	.byte	'DcmDsdSubService',0
	.word	110500
	.byte	4,2,35,20,0,14
	.byte	'Dcm_DsdServiceType',0,27,173,2,3
	.word	110505
	.byte	6
	.word	110505
	.byte	11
	.word	110852
	.byte	9,27,176,2,9,8,10
	.byte	'DcmDsdSidTabId',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'NumOfService',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'DcmDsdService',0
	.word	110857
	.byte	4,2,35,4,0,14
	.byte	'Dcm_DsdServiceTableType',0,27,183,2,3
	.word	110862
	.byte	9,27,192,2,9,8,10
	.byte	'DcmDslBufferSize',0
	.word	3655
	.byte	4,2,35,0,10
	.byte	'DataPtr',0
	.word	1862
	.byte	4,2,35,4,0,14
	.byte	'Dcm_DslBufferType',0,27,197,2,3
	.word	110971
	.byte	7,27,209,2,9,1,8
	.byte	'DCM_TYPE1',0,0,8
	.byte	'DCM_TYPE2',0,1,0,14
	.byte	'Dcm_DslProtocolTransType',0,27,213,2,3
	.word	111048
	.byte	9,27,217,2,9,6,10
	.byte	'DcmDslProtocolRxAddrType',0
	.word	109873
	.byte	1,2,35,0,10
	.byte	'DcmDslProtocolRxPduId',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'DcmDslProtocolRxPduRef',0
	.word	146
	.byte	1,2,35,4,0,14
	.byte	'Dcm_DslProtocolRxType',0,27,225,2,3
	.word	111113
	.byte	9,27,228,2,9,4,10
	.byte	'DcmDslTxConfirmationPduId',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'DcmDslProtocolTxPduRef',0
	.word	146
	.byte	1,2,35,2,0,14
	.byte	'Dcm_DslProtocolTxType',0,27,234,2,3
	.word	111248
	.byte	9,27,238,2,9,4,10
	.byte	'DcmDslPeriodicTxConfirmationPduId',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'DcmDslPeriodicTxPduRef',0
	.word	146
	.byte	1,2,35,2,0,14
	.byte	'Dcm_DslPeriodicConnectionType',0,27,244,2,3
	.word	111353
	.byte	6
	.word	111353
	.byte	11
	.word	111474
	.byte	9,27,248,2,9,8,10
	.byte	'NumOfPeriodicConnection',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'DcmDslPeriodicConnection',0
	.word	111479
	.byte	4,2,35,4,0,14
	.byte	'Dcm_DslPeriodicTransmissionType',0,27,252,2,3
	.word	111484
	.byte	6
	.word	111113
	.byte	11
	.word	111599
	.byte	6
	.word	111248
	.byte	11
	.word	111609
	.byte	9,27,255,2,9,16,10
	.byte	'DcmDslProtocolRxTesterSourceAddr',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'DcmDslProtocolComMChannelRef',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'NumOfRxPdu',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'DcmDslProtocolRx',0
	.word	111604
	.byte	4,2,35,8,10
	.byte	'DcmDslProtocolTx',0
	.word	111614
	.byte	4,2,35,12,0,14
	.byte	'Dcm_DslMainConnectionType',0,27,140,3,3
	.word	111619
	.byte	6
	.word	111619
	.byte	11
	.word	111813
	.byte	6
	.word	111484
	.byte	11
	.word	111823
	.byte	9,27,143,3,9,8,10
	.byte	'DcmDslMainConnection',0
	.word	111818
	.byte	4,2,35,0,10
	.byte	'DcmDslPeriodicTransmission',0
	.word	111828
	.byte	4,2,35,4,0,14
	.byte	'Dcm_DslConnectionType',0,27,148,3,3
	.word	111833
	.byte	7,27,187,3,9,1,8
	.byte	'DCM_OPAQUE',0,0,8
	.byte	'DCM_BIG_ENDIAN',0,1,8
	.byte	'DCM_LITTLE_ENDIAN',0,2,0,14
	.byte	'Dcm_DataEndiannessType',0,27,192,3,3
	.word	111937
	.byte	7,27,194,3,9,1,8
	.byte	'DCM_BOOLEAN',0,0,8
	.byte	'DCM_SINT16',0,1,8
	.byte	'DCM_SINT16_N',0,2,8
	.byte	'DCM_SINT32',0,3,8
	.byte	'DCM_SINT32_N',0,4,8
	.byte	'DCM_SINT8',0,5,8
	.byte	'DCM_SINT8_N',0,6,8
	.byte	'DCM_UINT16',0,7,8
	.byte	'DCM_UINT16_N',0,8,8
	.byte	'DCM_UINT32',0,9,8
	.byte	'DCM_UINT32_N',0,10,8
	.byte	'DCM_UINT8',0,11,8
	.byte	'DCM_UINT8_DYN',0,12,8
	.byte	'DCM_UINT8_N',0,13,8
	.byte	'DCM_VARIABLE_LENGTH',0,14,0,14
	.byte	'Dcm_DataType',0,27,211,3,3
	.word	112026
	.byte	7,27,251,3,9,1,8
	.byte	'DCM_NO_BOOT',0,0,8
	.byte	'DCM_OEM_BOOT',0,1,8
	.byte	'DCM_OEM_BOOT_RESPAPP',0,2,8
	.byte	'DCM_SYS_BOOT',0,3,8
	.byte	'DCM_SYS_BOOT_RESPAPP',0,4,0,14
	.byte	'Dcm_DspSessionForBootType',0,27,130,4,3
	.word	112271
	.byte	9,27,133,4,9,8,10
	.byte	'DcmDspSessionBoot',0
	.word	112271
	.byte	1,2,35,0,10
	.byte	'DcmDspSessionLevel',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'DcmDspSessionMask',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'DcmDspSessionP2ServerMax',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'DcmDspSessionP2StarServerMax',0
	.word	270
	.byte	2,2,35,6,0,14
	.byte	'Dcm_DspSessionRowType',0,27,144,4,3
	.word	112403
	.byte	7,27,165,5,9,1,8
	.byte	'DCM_USE_ASYNCH_CLIENT_SERVER',0,0,8
	.byte	'DCM_USE_ASYNCH_FNC',0,1,0,14
	.byte	'Dcm_DspSecurityUsePortType',0,27,169,5,3
	.word	112595
	.byte	6
	.word	146
	.byte	11
	.word	112690
	.byte	22
	.word	146
	.byte	1,1,23
	.word	112695
	.byte	23
	.word	146
	.byte	23
	.word	110169
	.byte	23
	.word	110169
	.byte	0,11
	.word	112700
	.byte	14
	.byte	'EcucFncGetSeedDefA',0,27,174,5,9
	.word	112728
	.byte	22
	.word	146
	.byte	1,1,23
	.word	146
	.byte	23
	.word	110169
	.byte	23
	.word	110169
	.byte	0,11
	.word	112761
	.byte	14
	.byte	'EcucFncGetSeedDefB',0,27,182,5,9
	.word	112784
	.byte	22
	.word	146
	.byte	1,1,23
	.word	110169
	.byte	23
	.word	146
	.byte	23
	.word	110169
	.byte	0,11
	.word	112817
	.byte	14
	.byte	'EcucFncCompareKeyDef',0,27,189,5,9
	.word	112840
	.byte	22
	.word	146
	.byte	1,1,23
	.word	146
	.byte	23
	.word	110169
	.byte	0,11
	.word	112875
	.byte	14
	.byte	'EcucFncGetAttemptCounterDef',0,27,197,5,9
	.word	112893
	.byte	22
	.word	146
	.byte	1,1,23
	.word	146
	.byte	23
	.word	146
	.byte	0,11
	.word	112935
	.byte	14
	.byte	'EcucFncSetAttemptCounterDef',0,27,203,5,9
	.word	112953
	.byte	9,27,209,5,9,44,10
	.byte	'DcmDspSecurityADRSize',0
	.word	3655
	.byte	4,2,35,0,10
	.byte	'DcmDspSecurityAttemptCounterEnabled',0
	.word	146
	.byte	1,2,35,4,10
	.byte	'DcmDspSecurityCompareKeyFnc',0
	.word	112845
	.byte	4,2,35,8,10
	.byte	'DcmDspSecurityDelayTime',0
	.word	3655
	.byte	4,2,35,12,10
	.byte	'DcmDspSecurityDelayTimeOnBoot',0
	.word	3655
	.byte	4,2,35,16,10
	.byte	'DcmDspSecurityGetAttemptCounterFnc',0
	.word	112898
	.byte	4,2,35,20,10
	.byte	'DcmDspSecurityGetSeedFncIndex',0
	.word	146
	.byte	1,2,35,24,10
	.byte	'DcmDspSecurityKeySize',0
	.word	3655
	.byte	4,2,35,26,10
	.byte	'DcmDspSecurityLevel',0
	.word	146
	.byte	1,2,35,30,10
	.byte	'DcmDspSecurityNumAttDelay',0
	.word	146
	.byte	1,2,35,31,10
	.byte	'DcmDspSecuritySeedSize',0
	.word	3655
	.byte	4,2,35,32,10
	.byte	'DcmDspSecuritySetAttemptCounterFnc',0
	.word	112958
	.byte	4,2,35,36,10
	.byte	'DcmDspSecurityUsePort',0
	.word	112595
	.byte	1,2,35,40,10
	.byte	'DcmDspSecurityMask',0
	.word	270
	.byte	2,2,35,42,0,14
	.byte	'Dcm_DspSecurityRowType',0,27,239,5,3
	.word	112995
	.byte	11
	.word	112817
	.byte	11
	.word	112875
	.byte	11
	.word	112935
	.byte	14
	.byte	'EcucSwitchFncCommunicationControl',0,27,152,6,9
	.word	5163
	.byte	9,27,157,6,9,8,10
	.byte	'DcmDspComControlAllChannelUsed',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'DcmDspAllComMChannelRef',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'SwitchCommunicationControlAllChannelFnc',0
	.word	113547
	.byte	4,2,35,4,0,14
	.byte	'Dcm_DspComControlAllChannelType',0,27,164,6,3
	.word	113590
	.byte	11
	.word	5150
	.byte	9,27,174,6,9,8,10
	.byte	'DcmDspComControlSpecificChannelUsed',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'DcmDspSubnetNumber',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'DcmDspComMChannelRef',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'SwitchCommunicationControlSpecificChannelFnc',0
	.word	113547
	.byte	4,2,35,4,0,14
	.byte	'Dcm_DspComControlSpecificChannelType',0,27,183,6,3
	.word	113765
	.byte	9,27,186,6,9,8,10
	.byte	'DcmDspComControlSubNodeId',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'DcmDspComControlSubNodeUsed',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'DcmDspComControlSubNodeComMChannelRef',0
	.word	146
	.byte	1,2,35,3,10
	.byte	'SwitchCommunicationControlSubNodeFnc',0
	.word	113547
	.byte	4,2,35,4,0,14
	.byte	'Dcm_DspComControlSubNodeType',0,27,195,6,3
	.word	113975
	.byte	14
	.byte	'EcucFncRoutineRequestResultDefA',0,27,167,7,9
	.word	112784
	.byte	22
	.word	146
	.byte	1,1,23
	.word	146
	.byte	23
	.word	110169
	.byte	23
	.word	4836
	.byte	23
	.word	110169
	.byte	0,11
	.word	114226
	.byte	14
	.byte	'EcucFncRoutineRequestResultDefB',0,27,174,7,9
	.word	114254
	.byte	22
	.word	146
	.byte	1,1,23
	.word	110169
	.byte	23
	.word	146
	.byte	23
	.word	110169
	.byte	23
	.word	110169
	.byte	0,11
	.word	114300
	.byte	14
	.byte	'EcucFncRoutineStartStopDefA',0,27,184,7,9
	.word	114328
	.byte	22
	.word	146
	.byte	1,1,23
	.word	110169
	.byte	23
	.word	146
	.byte	23
	.word	110169
	.byte	23
	.word	4836
	.byte	23
	.word	110169
	.byte	0,11
	.word	114370
	.byte	14
	.byte	'EcucFncRoutineStartStopDefB',0,27,193,7,9
	.word	114403
	.byte	22
	.word	146
	.byte	1,1,23
	.word	110169
	.byte	23
	.word	146
	.byte	23
	.word	110169
	.byte	23
	.word	270
	.byte	23
	.word	110169
	.byte	0,11
	.word	114445
	.byte	14
	.byte	'EcucFncRoutineStartStopDefC',0,27,203,7,9
	.word	114478
	.byte	14
	.byte	'EcucFncRoutineStartStopDefD',0,27,213,7,9
	.word	114403
	.byte	9,27,222,7,9,12,10
	.byte	'DcmDspRoutineSignalEndianness',0
	.word	111937
	.byte	1,2,35,0,10
	.byte	'DcmDspRoutineSignalLength',0
	.word	3655
	.byte	4,2,35,2,10
	.byte	'DcmDspRoutineSignalPos',0
	.word	3655
	.byte	4,2,35,6,10
	.byte	'DcmDspRoutineSignalType',0
	.word	112026
	.byte	1,2,35,10,0,14
	.byte	'Dcm_DspRoutineSignalType',0,27,240,7,3
	.word	114557
	.byte	9,27,243,7,9,6,10
	.byte	'DcmDspCommonAuthorizationSupportAddress',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'DcmDspCommonAuthorizationSecurityLevelRef',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'DcmDspCommonAuthorizationSessionRef',0
	.word	270
	.byte	2,2,35,4,0,14
	.byte	'Dcm_DspCommonAuthorizationType',0,27,254,7,3
	.word	114737
	.byte	6
	.word	114737
	.byte	11
	.word	114929
	.byte	9,27,129,8,9,20,10
	.byte	'DcmDspRequestRoutineResultsFncIndex',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'DcmDspRequestRoutineResultsCommonAuthorizationRef',0
	.word	114934
	.byte	4,2,35,4,10
	.byte	'DcmDspRequestRoutineResultsOut',0
	.word	114557
	.byte	12,2,35,8,0,14
	.byte	'Dcm_DspRequestRoutineResultsType',0,27,141,8,3
	.word	114939
	.byte	9,27,144,8,9,32,10
	.byte	'DcmDspStopRoutineFncIndex',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'DcmDspStopRoutineCommonAuthorizationRef',0
	.word	114934
	.byte	4,2,35,4,10
	.byte	'DcmDspStopRoutineIn',0
	.word	114557
	.byte	12,2,35,8,10
	.byte	'DcmDspStopRoutineOut',0
	.word	114557
	.byte	12,2,35,20,0,14
	.byte	'Dcm_DspStopRoutineType',0,27,157,8,3
	.word	115132
	.byte	9,27,160,8,9,32,10
	.byte	'DcmDspStartRoutineFncIndex',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'DcmDspStartRoutineCommonAuthorizationRef',0
	.word	114934
	.byte	4,2,35,4,10
	.byte	'DcmDspStartRoutineIn',0
	.word	114557
	.byte	12,2,35,8,10
	.byte	'DcmDspStartRoutineOut',0
	.word	114557
	.byte	12,2,35,20,0,14
	.byte	'Dcm_DspStartRoutineType',0,27,173,8,3
	.word	115314
	.byte	6
	.word	115314
	.byte	11
	.word	115501
	.byte	6
	.word	115132
	.byte	11
	.word	115511
	.byte	6
	.word	114939
	.byte	11
	.word	115521
	.byte	9,27,175,8,9,16,10
	.byte	'DcmDspRoutineIdentifier',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'DcmDspRoutineUsePort',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'DcmDspRoutineUsed',0
	.word	146
	.byte	1,2,35,3,10
	.byte	'DcmDspStartRoutine',0
	.word	115506
	.byte	4,2,35,4,10
	.byte	'DcmDspStopRoutine',0
	.word	115516
	.byte	4,2,35,8,10
	.byte	'DcmDspRequestRoutineResults',0
	.word	115526
	.byte	4,2,35,12,0,14
	.byte	'Dcm_DspRoutineIdInfoType',0,27,188,8,3
	.word	115531
	.byte	7,27,238,8,9,1,8
	.byte	'DCM_CONTROLMASK_EXTERNAL',0,0,8
	.byte	'DCM_CONTROLMASK_INTERNAL',0,1,8
	.byte	'DCM_CONTROLMASK_NO',0,2,0,14
	.byte	'Dcm_DspDidControlMaskType',0,27,243,8,3
	.word	115754
	.byte	9,27,246,8,9,1,10
	.byte	'DcmDspDidControlMaskBitPosition',0
	.word	146
	.byte	1,2,35,0,0,14
	.byte	'Dcm_DspDidControlEnableMaskType',0,27,250,8,3
	.word	115871
	.byte	9,27,153,9,9,6,10
	.byte	'DcmDspDidReadSupportAddress',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'DcmDspDidReadSecurityLevelRef',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'DcmDspDidReadSessionRef',0
	.word	270
	.byte	2,2,35,4,0,14
	.byte	'Dcm_DspDidReadType',0,27,164,9,3
	.word	115960
	.byte	9,27,167,9,9,6,10
	.byte	'DcmDspDidWriteSupportAddress',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'DcmDspDidWriteSecurityLevelRef',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'DcmDspDidWriteSessionRef',0
	.word	270
	.byte	2,2,35,4,0,14
	.byte	'Dcm_DspDidWriteType',0,27,178,9,3
	.word	116104
	.byte	6
	.word	115960
	.byte	11
	.word	116252
	.byte	6
	.word	116104
	.byte	11
	.word	116262
	.byte	9,27,184,9,9,8,10
	.byte	'DcmDspDidRead',0
	.word	116257
	.byte	4,2,35,0,10
	.byte	'DcmDspDidWrite',0
	.word	116267
	.byte	4,2,35,4,0,14
	.byte	'Dcm_DspDidInfoType',0,27,203,9,3
	.word	116272
	.byte	14
	.byte	'EcucFncDataServicesConditionCheckReadDefA',0,27,216,9,9
	.word	112893
	.byte	22
	.word	146
	.byte	1,1,23
	.word	110169
	.byte	0,11
	.word	116405
	.byte	14
	.byte	'EcucFncDataServicesConditionCheckReadDefB',0,27,222,9,9
	.word	116418
	.byte	14
	.byte	'EcucFncDataServicesReadDataDefA',0,27,240,9,9
	.word	112893
	.byte	14
	.byte	'EcucFncDataServicesReadDataDefB',0,27,246,9,9
	.word	112784
	.byte	14
	.byte	'EcucFncDataServicesReadDataDefC',0,27,253,9,9
	.word	116418
	.byte	22
	.word	146
	.byte	1,1,23
	.word	146
	.byte	23
	.word	4836
	.byte	0,11
	.word	116597
	.byte	14
	.byte	'EcucFncDataServicesReadDataLengthDefA',0,27,133,10,9
	.word	116615
	.byte	22
	.word	146
	.byte	1,1,23
	.word	4836
	.byte	0,11
	.word	116667
	.byte	14
	.byte	'EcucFncDataServicesReadDataLengthDefB',0,27,140,10,9
	.word	116680
	.byte	14
	.byte	'EcucFncDataServicesWriteDataDefA',0,27,148,10,9
	.word	112840
	.byte	22
	.word	146
	.byte	1,1,23
	.word	110169
	.byte	23
	.word	270
	.byte	23
	.word	146
	.byte	23
	.word	110169
	.byte	0,11
	.word	116774
	.byte	14
	.byte	'EcucFncDataServicesWriteDataDefB',0,27,157,10,9
	.word	116802
	.byte	22
	.word	146
	.byte	1,1,23
	.word	110169
	.byte	23
	.word	110169
	.byte	0,11
	.word	116849
	.byte	14
	.byte	'EcucFncDataServicesWriteDataDefC',0,27,166,10,9
	.word	116867
	.byte	22
	.word	146
	.byte	1,1,23
	.word	110169
	.byte	23
	.word	270
	.byte	23
	.word	110169
	.byte	0,11
	.word	116914
	.byte	14
	.byte	'EcucFncDataServicesWriteDataDefD',0,27,173,10,9
	.word	116937
	.byte	9,27,165,11,9,20,10
	.byte	'DcmDspDataEndianness',0
	.word	111937
	.byte	1,2,35,0,10
	.byte	'DcmDspDataConditionCheckReadFncIndex',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'DcmDspDataConditionCheckReadFncUsed',0
	.word	146
	.byte	1,2,35,4,10
	.byte	'DcmDspDataReadDataLengthFncIndex',0
	.word	270
	.byte	2,2,35,6,10
	.byte	'DcmDspDataReadFncIndex',0
	.word	270
	.byte	2,2,35,8,10
	.byte	'DcmDspDataSize',0
	.word	270
	.byte	2,2,35,10,10
	.byte	'DcmDspDataType',0
	.word	112026
	.byte	1,2,35,12,10
	.byte	'DcmDspDataUsePort',0
	.word	109344
	.byte	1,2,35,13,10
	.byte	'DcmDspDataWriteFncIndex',0
	.word	270
	.byte	2,2,35,14,10
	.byte	'DcmDspDataBlockIdRef',0
	.word	270
	.byte	2,2,35,16,0,14
	.byte	'Dcm_DspDataTableType',0,27,220,11,3
	.word	116984
	.byte	9,27,139,12,9,4,10
	.byte	'DcmDspDidDataPos',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'DcmDspDidDataRef',0
	.word	270
	.byte	2,2,35,2,0,14
	.byte	'Dcm_DspDidSignalType',0,27,145,12,3
	.word	117354
	.byte	6
	.word	117354
	.byte	11
	.word	117443
	.byte	9,27,149,12,9,20,10
	.byte	'DcmDspDidIdentifier',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'DcmDspDidUsed',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'DcmDspDidInfoRef',0
	.word	116272
	.byte	8,2,35,4,10
	.byte	'NumOfDidSignal',0
	.word	270
	.byte	2,2,35,12,10
	.byte	'DcmDspDidSignal',0
	.word	117448
	.byte	4,2,35,16,0,14
	.byte	'Dcm_DspDidTableType',0,27,168,12,3
	.word	117453
	.byte	14
	.byte	'Can_IdType',0,28,53,16
	.word	3655
	.byte	14
	.byte	'Can_HwHandleType',0,28,58,16
	.word	270
	.byte	14
	.byte	'Mcu_ExternalClockConfigType',0,29,212,1,18
	.word	3655
	.byte	14
	.byte	'Mcu_ClockType',0,29,217,1,18
	.word	3655
	.byte	14
	.byte	'Mcu_RamSectionType',0,29,222,1,18
	.word	3655
	.byte	14
	.byte	'Mcu_RamBaseAdrType',0,29,233,1,18
	.word	8139
	.byte	14
	.byte	'Mcu_RamSizeType',0,29,237,1,18
	.word	3655
	.byte	14
	.byte	'Mcu_RamWriteSizeType',0,29,241,1,18
	.word	3655
	.byte	14
	.byte	'Mcu_RamPrstDatType',0,29,245,1,19
	.word	3691
	.byte	14
	.byte	'Mcu_ModeType',0,29,250,1,17
	.word	146
	.byte	9,29,226,2,9,4,26
	.byte	'Insel',0,1
	.word	146
	.byte	2,6,2,35,0,26
	.byte	'SysPllPDiv',0,1
	.word	146
	.byte	3,3,2,35,0,26
	.byte	'SysPllNDiv',0,2
	.word	270
	.byte	7,4,2,35,0,26
	.byte	'SysPllK2Div',0,1
	.word	146
	.byte	3,1,2,35,1,26
	.byte	'FmPllEn',0,1
	.word	146
	.byte	1,0,2,35,1,26
	.byte	'ModulationAmplitude',0,2
	.word	270
	.byte	16,0,2,35,2,0,14
	.byte	'Mcu_SystemPllConfigType',0,29,235,2,3
	.word	117881
	.byte	9,29,243,2,9,4,26
	.byte	'PerPllNDiv',0,1
	.word	146
	.byte	7,1,2,35,0,26
	.byte	'PerPllPDiv',0,2
	.word	270
	.byte	3,6,2,35,0,26
	.byte	'PerPllK2Div',0,1
	.word	146
	.byte	3,3,2,35,1,26
	.byte	'PerPllK3Div',0,1
	.word	146
	.byte	3,0,2,35,1,26
	.byte	'K3DivByPass',0,1
	.word	146
	.byte	1,7,2,35,2,26
	.byte	'Reserved',0,2
	.word	270
	.byte	15,0,2,35,2,0,14
	.byte	'Mcu_PeripheralPllConfigType',0,29,251,2,3
	.word	118055
	.byte	19,24
	.word	3655
	.byte	20,5,0,9,29,131,3,9,40,10
	.byte	'Ccucon0',0
	.word	3655
	.byte	4,2,35,0,10
	.byte	'Ccucon1',0
	.word	3655
	.byte	4,2,35,4,10
	.byte	'Ccucon2',0
	.word	3655
	.byte	4,2,35,8,10
	.byte	'Ccucon5',0
	.word	3655
	.byte	4,2,35,12,10
	.byte	'CcuconCpu',0
	.word	118232
	.byte	24,2,35,16,0,14
	.byte	'Mcu_PllDistributionConfigType',0,29,143,3,3
	.word	118241
	.byte	6
	.word	118241
	.byte	11
	.word	118374
	.byte	9,29,151,3,9,44,10
	.byte	'SystemPllCfg',0
	.word	117881
	.byte	4,2,35,0,10
	.byte	'PeripheralPllCfg',0
	.word	118055
	.byte	4,2,35,4,10
	.byte	'SysPllK2DivStepUpChangeDelay',0
	.word	3655
	.byte	4,2,35,8,10
	.byte	'SysPllK2DivStepDownChangeDelay',0
	.word	3655
	.byte	4,2,35,12,10
	.byte	'PeripheralPllK2StepUpChangeDelay',0
	.word	3655
	.byte	4,2,35,16,10
	.byte	'PeripheralPllK2StepDownChangeDelay',0
	.word	3655
	.byte	4,2,35,20,10
	.byte	'PeripheralPllK3StepUpChangeDelay',0
	.word	3655
	.byte	4,2,35,24,10
	.byte	'PeripheralPllK3StepDownChangeDelay',0
	.word	3655
	.byte	4,2,35,28,10
	.byte	'PllDistributionCfgPtr',0
	.word	118379
	.byte	4,2,35,32,10
	.byte	'ExternalClockCfg',0
	.word	3655
	.byte	4,2,35,36,10
	.byte	'BackupFreqKDiv',0
	.word	270
	.byte	2,2,35,40,10
	.byte	'ConvCtrlBlockConf',0
	.word	146
	.byte	1,2,35,42,0,14
	.byte	'Mcu_ClockConfigType',0,29,177,3,3
	.word	118384
	.byte	9,29,184,3,9,28,10
	.byte	'RamBaseAdrPtr',0
	.word	117748
	.byte	4,2,35,0,10
	.byte	'RamSize',0
	.word	3655
	.byte	4,2,35,4,10
	.byte	'RamPrstData',0
	.word	3691
	.byte	8,2,35,8,10
	.byte	'RamData',0
	.word	3691
	.byte	8,2,35,16,10
	.byte	'RamWriteSize',0
	.word	3655
	.byte	4,2,35,24,0,14
	.byte	'Mcu_RamConfigType',0,29,193,3,3
	.word	118826
	.byte	11
	.word	8133
	.byte	9,29,201,3,9,4,26
	.byte	'McuMode',0,1
	.word	146
	.byte	3,5,2,35,0,26
	.byte	'EvrcLowPowerMode',0,1
	.word	146
	.byte	1,4,2,35,0,26
	.byte	'Reserved',0,4
	.word	163
	.byte	28,0,2,35,0,0,14
	.byte	'Mcu_ModeEvrcCtrlType',0,29,206,3,3
	.word	118965
	.byte	9,29,223,3,9,28,10
	.byte	'MaxModeEvrcCtrl',0
	.word	118965
	.byte	4,2,35,0,10
	.byte	'Pmswcr0',0
	.word	3655
	.byte	4,2,35,4,10
	.byte	'Pmswcr3',0
	.word	3655
	.byte	4,2,35,8,10
	.byte	'Pmswcr4',0
	.word	3655
	.byte	4,2,35,12,10
	.byte	'Pmswcr5',0
	.word	3655
	.byte	4,2,35,16,10
	.byte	'Evruvmon',0
	.word	3655
	.byte	4,2,35,20,10
	.byte	'EvrmonCtrl',0
	.word	3655
	.byte	4,2,35,24,0,14
	.byte	'Mcu_LowPowerModeType',0,29,242,3,3
	.word	119069
	.byte	9,29,250,3,9,8,10
	.byte	'GtmCmuExtClockNum',0
	.word	3655
	.byte	4,2,35,0,10
	.byte	'GtmCmuExtClockDen',0
	.word	3655
	.byte	4,2,35,4,0,14
	.byte	'Mcu_GtmExtClkType',0,29,128,4,3
	.word	119237
	.byte	19,32
	.word	3655
	.byte	20,7,0,19,24
	.word	119237
	.byte	20,2,0,9,29,135,4,9,76,10
	.byte	'GtmCmuClockEnable',0
	.word	3655
	.byte	4,2,35,0,10
	.byte	'GtmCmuGlobalNumerator',0
	.word	3655
	.byte	4,2,35,4,10
	.byte	'GtmCmuGlobalDenominator',0
	.word	3655
	.byte	4,2,35,8,10
	.byte	'GtmCmuConfClkCtrl',0
	.word	119325
	.byte	32,2,35,12,10
	.byte	'GtmCmuFixedClkCtrl',0
	.word	3655
	.byte	4,2,35,44,10
	.byte	'GtmCmuClsInDiv',0
	.word	3655
	.byte	4,2,35,48,10
	.byte	'GtmEclkCtrl',0
	.word	119334
	.byte	24,2,35,52,0,14
	.byte	'Mcu_GtmClockSettingType',0,29,151,4,3
	.word	119343
	.byte	9,29,158,4,9,12,10
	.byte	'GtmCcmCfg',0
	.word	3655
	.byte	4,2,35,0,10
	.byte	'GtmCcmConfClockCfg',0
	.word	3655
	.byte	4,2,35,4,10
	.byte	'GtmCcmFixedClockCfg',0
	.word	3655
	.byte	4,2,35,8,0,14
	.byte	'Mcu_GtmClusterConfigType',0,29,166,4,3
	.word	119574
	.byte	9,29,173,4,9,8,10
	.byte	'TomTgcIntTrigRstCn0',0
	.word	3655
	.byte	4,2,35,0,10
	.byte	'TomTgcActTb',0
	.word	3655
	.byte	4,2,35,4,0,14
	.byte	'Mcu_GtmTomConfigType',0,29,188,4,3
	.word	119691
	.byte	9,29,195,4,9,8,10
	.byte	'AtomAgcIntTrigRstCn0',0
	.word	3655
	.byte	4,2,35,0,10
	.byte	'AtomAgcActTb',0
	.word	3655
	.byte	4,2,35,4,0,14
	.byte	'Mcu_GtmAtomConfigType',0,29,210,4,3
	.word	119778
	.byte	9,29,217,4,9,8,10
	.byte	'GtmAdcTrigOut0',0
	.word	3655
	.byte	4,2,35,0,10
	.byte	'GtmAdcTrigOut1',0
	.word	3655
	.byte	4,2,35,4,0,14
	.byte	'Mcu_GtmAdcTrigType',0,29,221,4,3
	.word	119868
	.byte	9,29,225,4,9,8,10
	.byte	'GtmDsadcTrigOut0',0
	.word	3655
	.byte	4,2,35,0,10
	.byte	'GtmDsadcTrigOut1',0
	.word	3655
	.byte	4,2,35,4,0,14
	.byte	'Mcu_GtmDsadcTrigType',0,29,229,4,3
	.word	119951
	.byte	6
	.word	119343
	.byte	11
	.word	120040
	.byte	6
	.word	119574
	.byte	11
	.word	120050
	.byte	19,96
	.word	119691
	.byte	20,11,0,19,96
	.word	119778
	.byte	20,11,0,19,40
	.word	119868
	.byte	20,4,0,19,32
	.word	119951
	.byte	20,3,0,19,136,1
	.word	3655
	.byte	20,33,0,9,29,237,4,9,204,4,10
	.byte	'GtmClockCfgPtr',0
	.word	120045
	.byte	4,2,35,0,10
	.byte	'GtmClusterCfgPtr',0
	.word	120055
	.byte	4,2,35,4,10
	.byte	'GtmTomCfg',0
	.word	120060
	.byte	96,2,35,8,10
	.byte	'GtmAtomCfg',0
	.word	120069
	.byte	96,2,35,104,10
	.byte	'GtmAdcTrigCfg',0
	.word	120078
	.byte	40,3,35,200,1,10
	.byte	'GtmDsadcTrigCfg',0
	.word	120087
	.byte	32,3,35,240,1,10
	.byte	'GtmToutSelCfg',0
	.word	120096
	.byte	136,1,3,35,144,2,10
	.byte	'GtmToutSelCfgMsk',0
	.word	120096
	.byte	136,1,3,35,152,3,10
	.byte	'GtmTimInSelCfg',0
	.word	119325
	.byte	32,3,35,160,4,10
	.byte	'GtmTbuCfg',0
	.word	3655
	.byte	4,3,35,192,4,10
	.byte	'GtmTomModuleUsage',0
	.word	270
	.byte	2,3,35,196,4,10
	.byte	'GtmAtomModuleUsage',0
	.word	270
	.byte	2,3,35,198,4,10
	.byte	'IsGtmSleepModeEnabled',0
	.word	146
	.byte	1,3,35,200,4,0,14
	.byte	'Mcu_GtmConfigType',0,29,137,5,3
	.word	120106
	.byte	14
	.byte	'BswMRuleType',0,30,43,15
	.word	146
	.byte	14
	.byte	'BswMActionListIdType',0,30,45,15
	.word	146
	.byte	29
	.word	146
	.byte	1,1,11
	.word	120517
	.byte	14
	.byte	'BswM_ActionFuncType',0,30,46,9
	.word	120524
	.byte	7,30,56,9,1,8
	.byte	'BSWM_FALSE',0,0,8
	.byte	'BSWM_TRUE',0,1,8
	.byte	'BSWM_UNDEFINED',0,255,1,0,14
	.byte	'BswMRuleStateType',0,30,61,3
	.word	120557
	.byte	29
	.word	120557
	.byte	1,1,11
	.word	120632
	.byte	14
	.byte	'BswMRuleFuncType',0,30,64,9
	.word	120639
	.byte	7,30,78,9,1,8
	.byte	'BSWM_DEFERRED',0,0,8
	.byte	'BSWM_IMMEDIATE',0,1,0,14
	.byte	'BswMRequestProcessingType',0,30,82,3
	.word	120669
	.byte	7,30,84,9,1,8
	.byte	'BSWM_CONDITION',0,0,8
	.byte	'BSWM_TRIGGER',0,1,0,14
	.byte	'BswMActionListExecutionType',0,30,88,3
	.word	120742
	.byte	7,30,90,9,1,8
	.byte	'BSWM_ACTION',0,0,8
	.byte	'BSWM_ACTIONLIST',0,1,8
	.byte	'BSWM_RULE',0,2,0,14
	.byte	'BswMActionType',0,30,95,3
	.word	120816
	.byte	6
	.word	.L851-.L228
	.byte	11
	.word	120889
.L851:
	.byte	25
	.byte	'_sBswMActionListItem',0,30,97,16,16,10
	.byte	'ActionType',0
	.word	120816
	.byte	1,2,35,0,10
	.byte	'ActionFunc',0
	.word	120529
	.byte	4,2,35,4,10
	.byte	'ActionListId',0
	.word	146
	.byte	1,2,35,8,10
	.byte	'RuleId',0
	.word	146
	.byte	1,2,35,9,10
	.byte	'next',0
	.word	120894
	.byte	4,2,35,12,0,14
	.byte	'BswM_ActionListItemType',0,30,111,3
	.word	120899
	.byte	11
	.word	120517
	.byte	9,30,133,1,9,1,10
	.byte	'unused',0
	.word	146
	.byte	1,2,35,0,0,14
	.byte	'BswM_ConfigType',0,30,136,1,3
	.word	121055
	.byte	14
	.byte	'EcuM_WakeupSourceType',0,31,62,16
	.word	3655
	.byte	14
	.byte	'EcuM_ShutdownTargetType',0,31,78,15
	.word	146
	.byte	14
	.byte	'EcuM_ShutdownModeType',0,31,84,16
	.word	270
	.byte	6
	.word	121055
	.byte	11
	.word	121195
	.byte	9,31,91,9,4,10
	.byte	'BswMConfigPtr',0
	.word	121200
	.byte	4,2,35,0,0,14
	.byte	'EcuM_FlexModuleConfigType',0,31,96,3
	.word	121205
	.byte	7,32,98,9,1,8
	.byte	'EXTENDED_CAN',0,0,8
	.byte	'EXTENDED_FD_CAN',0,1,8
	.byte	'EXTENDED_NO_FD_CAN',0,2,8
	.byte	'STANDARD_CAN',0,3,8
	.byte	'STANDARD_FD_CAN',0,4,8
	.byte	'STANDARD_NO_FD_CAN',0,5,0,14
	.byte	'CanIf_PduCanIdType',0,32,107,3
	.word	121268
	.byte	9,32,199,1,9,6,10
	.byte	'CanIfCtrlIdRef',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'isFullCanType',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'HthIdSymRef',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'FirstBufIndexHth',0
	.word	146
	.byte	1,2,35,4,10
	.byte	'TxBufSize',0
	.word	146
	.byte	1,2,35,5,0,14
	.byte	'CanIf_HthCfgType',0,32,217,1,3
	.word	121409
	.byte	9,32,221,1,9,16,10
	.byte	'CanId',0
	.word	3655
	.byte	4,2,35,0,10
	.byte	'CanIdType',0
	.word	121268
	.byte	1,2,35,4,10
	.byte	'Length',0
	.word	146
	.byte	1,2,35,5,10
	.byte	'TxBufIndex',0
	.word	146
	.byte	1,2,35,6,10
	.byte	'dataBuf',0
	.word	1862
	.byte	4,2,35,8,10
	.byte	'HthRef',0
	.word	270
	.byte	2,2,35,12,10
	.byte	'TxConfirmation',0
	.word	146
	.byte	1,2,35,14,10
	.byte	'PduRef',0
	.word	146
	.byte	1,2,35,15,0,14
	.byte	'CanIf_TxPduCfgType',0,32,252,1,3
	.word	121555
	.byte	9,32,128,2,9,8,10
	.byte	'LowerCanId',0
	.word	3655
	.byte	4,2,35,0,10
	.byte	'UpperCanId',0
	.word	3655
	.byte	4,2,35,4,0,14
	.byte	'CanIf_RxPduCanIdRangeCfgType',0,32,134,2,3
	.word	121733
	.byte	9,32,138,2,9,6,10
	.byte	'CanIfCtrlIdRef',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'isFullCanType',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'HrhIdSymRef',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'FirstRxPduIdInHrh',0
	.word	146
	.byte	1,2,35,4,0,14
	.byte	'CanIf_HrhCfgType',0,32,146,2,3
	.word	121818
	.byte	6
	.word	121733
	.byte	11
	.word	121946
	.byte	6
	.word	121951
	.byte	9,32,149,2,9,20,10
	.byte	'CanId',0
	.word	3655
	.byte	4,2,35,0,10
	.byte	'CanIdMask',0
	.word	3655
	.byte	4,2,35,4,10
	.byte	'CanIdType',0
	.word	121268
	.byte	1,2,35,8,10
	.byte	'Length',0
	.word	146
	.byte	1,2,35,9,10
	.byte	'NextPduId',0
	.word	146
	.byte	1,2,35,10,10
	.byte	'IdRange',0
	.word	121956
	.byte	4,2,35,12,10
	.byte	'RxIndication',0
	.word	146
	.byte	1,2,35,16,10
	.byte	'PduRef',0
	.word	146
	.byte	1,2,35,17,10
	.byte	'HrhRef',0
	.word	270
	.byte	2,2,35,18,0,14
	.byte	'CanIf_RxPduCfgType',0,32,177,2,3
	.word	121961
	.byte	14
	.byte	'CanTp_ChannelIdType',0,33,142,1,15
	.word	146
	.byte	7,34,63,9,1,8
	.byte	'CANTP_PHYSICAL',0,0,8
	.byte	'CANTP_FUNCTIONAL',0,1,8
	.byte	'CANTP_CANFD_PHYSICAL',0,2,8
	.byte	'CANTP_CANFD_FUNCTIONAL',0,3,0,14
	.byte	'CanTp_TaType',0,34,69,3
	.word	122184
	.byte	9,34,79,9,20,10
	.byte	'CanTpChannelId',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'CanTpRxNPduId',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'CanTpTxFcNPduId',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'UpperLayerPduId',0
	.word	146
	.byte	1,2,35,3,10
	.byte	'CanTpNar',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'CanTpNbr',0
	.word	270
	.byte	2,2,35,6,10
	.byte	'CanTpNcr',0
	.word	270
	.byte	2,2,35,8,10
	.byte	'CanTpBs',0
	.word	146
	.byte	1,2,35,10,10
	.byte	'CanTpSTmin',0
	.word	146
	.byte	1,2,35,11,10
	.byte	'CanTpRxWftMax',0
	.word	146
	.byte	1,2,35,12,10
	.byte	'MaxCanLen',0
	.word	270
	.byte	2,2,35,14,10
	.byte	'CanTpRxTaType',0
	.word	122184
	.byte	1,2,35,16,0,14
	.byte	'CanTp_RxNsduCfgType',0,34,103,3
	.word	122295
	.byte	9,34,107,9,16,10
	.byte	'CanTpChannelId',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'CanTpTxNPduId',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'CanTpRxFcNPduId',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'UpperLayerPduId',0
	.word	146
	.byte	1,2,35,3,10
	.byte	'CanTpNas',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'CanTpNbs',0
	.word	270
	.byte	2,2,35,6,10
	.byte	'CanTpNcs',0
	.word	270
	.byte	2,2,35,8,10
	.byte	'MaxCanLen',0
	.word	270
	.byte	2,2,35,10,10
	.byte	'CanTpTxTaType',0
	.word	122184
	.byte	1,2,35,12,0,14
	.byte	'CanTp_TxNsduCfgType',0,34,128,1,3
	.word	122582
	.byte	7,35,82,9,1,8
	.byte	'NM_BUSNM_CANNM',0,0,8
	.byte	'NM_BUSNM_FRNM',0,1,8
	.byte	'NM_BUSNM_LINNM',0,2,8
	.byte	'NM_BUSNM_UDPNM',0,3,8
	.byte	'NM_BUSNM_GENERICNM',0,4,8
	.byte	'NM_BUSNM_J1939NM',0,5,8
	.byte	'NM_BUSNM_OSEKNM',0,6,8
	.byte	'NM_BUSNM_UNDEF',0,255,1,0,14
	.byte	'Nm_BusNmType',0,35,92,3
	.word	122810
	.byte	7,36,39,9,1,8
	.byte	'CANNM_PDU_BYTE_0',0,0,8
	.byte	'CANNM_PDU_BYTE_1',0,1,8
	.byte	'CANNM_PDU_OFF',0,2,0,14
	.byte	'CanNm_PduBytePosType',0,36,44,3
	.word	122980
	.byte	11
	.word	270
	.byte	9,36,194,1,9,4,10
	.byte	'TimerCnt',0
	.word	123069
	.byte	4,2,35,0,0,14
	.byte	'CanNm_CommTimerType',0,36,197,1,3
	.word	123074
	.byte	14
	.byte	'NvM_RequestResultType',0,37,153,1,16
	.word	146
	.byte	14
	.byte	'NvM_BlockIdType',0,37,155,1,16
	.word	270
	.byte	7,37,158,1,9,1,8
	.byte	'NVM_BLOCK_NATIVE',0,0,8
	.byte	'NVM_BLOCK_REDUNDANT',0,1,8
	.byte	'NVM_BLOCK_DATASET',0,2,0,14
	.byte	'NvM_BlockManagementType',0,37,163,1,3
	.word	123184
	.byte	9,37,204,2,9,1,26
	.byte	'NvValid',0,1
	.word	146
	.byte	1,7,2,35,0,26
	.byte	'NvChanged',0,1
	.word	146
	.byte	1,6,2,35,0,26
	.byte	'res1',0,1
	.word	146
	.byte	1,5,2,35,0,26
	.byte	'res2',0,1
	.word	146
	.byte	1,4,2,35,0,26
	.byte	'lossRedundant',0,1
	.word	146
	.byte	1,3,2,35,0,26
	.byte	'unused',0,1
	.word	146
	.byte	3,0,2,35,0,0,14
	.byte	'NvM_AttriStruct_Type',0,37,226,2,3
	.word	123285
	.byte	30,37,229,2,9,1,10
	.byte	'AttriByte',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'A',0
	.word	123285
	.byte	1,2,35,0,0,14
	.byte	'NvM_Attri_Type',0,37,233,2,3
	.word	123437
	.byte	14
	.byte	'Dem_DTCSeverityType',0,38,80,15
	.word	146
	.byte	14
	.byte	'Dem_EventMemoryEntryStorageTriggerType',0,38,158,3,15
	.word	146
	.byte	14
	.byte	'Dem_OperationCycleType',0,38,207,3,15
	.word	146
	.byte	6
	.word	146
	.byte	11
	.word	123606
	.byte	9,38,246,3,9,8,10
	.byte	'Number',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'DemEnableConditionRef',0
	.word	123611
	.byte	4,2,35,4,0,14
	.byte	'Dem_EnableConditionGroupType',0,38,251,3,3
	.word	123616
	.byte	14
	.byte	'Dem_UdsDTCType',0,38,200,4,16
	.word	3655
	.byte	7,38,160,6,9,1,8
	.byte	'DEM_EVENT_SIGNIFICANCE_OCCURRENCE',0,0,8
	.byte	'DEM_EVENT_SIGNIFICANCE_FAULT',0,1,0,14
	.byte	'Dem_DTCSignificanceType',0,38,164,6,3
	.word	123732
	.byte	7,38,167,6,9,1,8
	.byte	'DEM_AGINGCTR_DOWNCNT',0,0,8
	.byte	'DEM_AGINGCTR_UPCNT',0,1,8
	.byte	'DEM_CURRENT_FDC',0,2,8
	.byte	'DEM_CYCLES_SINCE_FIRST_FAILED',0,3,8
	.byte	'DEM_CYCLES_SINCE_LAST_FAILED',0,4,8
	.byte	'DEM_FAILED_CYCLES',0,5,8
	.byte	'DEM_MAX_FDC_DURING_CURRENT_CYCLE',0,6,8
	.byte	'DEM_MAX_FDC_SINCE_LAST_CLEAR',0,7,8
	.byte	'DEM_OCCCTR',0,8,8
	.byte	'DEM_OVFLIND',0,9,8
	.byte	'DEM_SIGNIFICANCE',0,10,8
	.byte	'DEM_OBD_PASSED_CYCLES_SINCE_LAST_FAILED',0,14,8
	.byte	'DEM_AGED_COUNTER',0,15,0,14
	.byte	'Dem_InternalDataElementType',0,38,187,6,3
	.word	123839
	.byte	14
	.byte	'Dem_DataElementReadFncType',0,38,190,6,9
	.word	116418
	.byte	9,38,196,6,9,2,10
	.byte	'DemDataElementDataSize',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'DemInternalDataElement',0
	.word	123839
	.byte	1,2,35,1,0,14
	.byte	'Dem_InternalDataElementClassType',0,38,202,6,3
	.word	124237
	.byte	9,38,205,6,9,12,10
	.byte	'DemDataElementDataSize',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'DemDataElementReadFnc',0
	.word	124201
	.byte	4,2,35,4,10
	.byte	'DemDataElementUsePort',0
	.word	146
	.byte	1,2,35,8,0,14
	.byte	'Dem_ExternalCSDataElementClassType',0,38,213,6,3
	.word	124350
	.byte	11
	.word	116405
	.byte	6
	.word	124237
	.byte	11
	.word	124500
	.byte	6
	.word	124350
	.byte	11
	.word	124510
	.byte	9,38,217,6,9,8,10
	.byte	'DemInternalDataElementClass',0
	.word	124505
	.byte	4,2,35,0,10
	.byte	'DemExternalCSDataElementClass',0
	.word	124515
	.byte	4,2,35,4,0,14
	.byte	'Dem_DataElementClassType',0,38,223,6,3
	.word	124520
	.byte	9,38,250,6,9,8,10
	.byte	'Number',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'DemJ1939NmNodeRef',0
	.word	123611
	.byte	4,2,35,4,0,14
	.byte	'Dem_J1939NodeType',0,38,255,6,3
	.word	124637
	.byte	14
	.byte	'Dem_PriorityType',0,38,130,7,16
	.word	270
	.byte	7,38,183,7,9,1,8
	.byte	'DEM_EVENT_KIND_BSW',0,0,8
	.byte	'DEM_EVENT_KIND_SWC',0,1,0,14
	.byte	'Dem_EventKindType',0,38,187,7,3
	.word	124740
	.byte	7,38,189,7,9,1,8
	.byte	'DEM_REPORT_AFTER_INIT',0,1,8
	.byte	'DEM_REPORT_BEFORE_INIT',0,2,0,14
	.byte	'Dem_ReportBehaviorType',0,38,193,7,3
	.word	124816
	.byte	7,38,195,7,9,1,8
	.byte	'DEM_DEBOUNCE_FREEZE',0,0,8
	.byte	'DEM_DEBOUNCE_RESET',0,1,0,14
	.byte	'Dem_DebounceBehaviorType',0,38,199,7,3
	.word	124904
	.byte	9,38,204,7,9,20,10
	.byte	'DemDebounceBehavior',0
	.word	124904
	.byte	1,2,35,0,10
	.byte	'DemDebounceCounterDecrementStepSize',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'DemDebounceCounterIncrementStepSize',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'DemDebounceCounterPassedThreshold',0
	.word	3754
	.byte	2,2,35,6,10
	.byte	'DemDebounceCounterFailedThreshold',0
	.word	3754
	.byte	2,2,35,8,10
	.byte	'DemDebounceCounterJumpDown',0
	.word	146
	.byte	1,2,35,10,10
	.byte	'DemDebounceCounterJumpUp',0
	.word	146
	.byte	1,2,35,11,10
	.byte	'DemDebounceCounterJumpDownValue',0
	.word	3754
	.byte	2,2,35,12,10
	.byte	'DemDebounceCounterJumpUpValue',0
	.word	3754
	.byte	2,2,35,14,10
	.byte	'DemDebounceCounterStorage',0
	.word	146
	.byte	1,2,35,16,0,14
	.byte	'Dem_DebounceCounterBasedClassType',0,38,226,7,3
	.word	124988
	.byte	9,38,232,7,9,12,10
	.byte	'DemDebounceBehavior',0
	.word	124904
	.byte	1,2,35,0,10
	.byte	'DemDebounceTimePassedThreshold',0
	.word	3655
	.byte	4,2,35,2,10
	.byte	'DemDebounceTimeFailedThreshold',0
	.word	3655
	.byte	4,2,35,6,0,14
	.byte	'Dem_DebounceTimeBaseClassType',0,38,240,7,3
	.word	125428
	.byte	11
	.word	3732
	.byte	22
	.word	146
	.byte	1,1,23
	.word	125583
	.byte	0,11
	.word	125588
	.byte	14
	.byte	'Dem_CallbackGetFDCFncType',0,38,243,7,9
	.word	125601
	.byte	6
	.word	124988
	.byte	11
	.word	125641
	.byte	6
	.word	125428
	.byte	11
	.word	125651
	.byte	6
	.word	125606
	.byte	9,38,250,7,9,12,10
	.byte	'DemDebounceCounterBasedClassRef',0
	.word	125646
	.byte	4,2,35,0,10
	.byte	'DemDebounceTimeBaseRef',0
	.word	125656
	.byte	4,2,35,4,10
	.byte	'DemCallbackGetFDCFnc',0
	.word	125661
	.byte	4,2,35,8,0,14
	.byte	'Dem_DebounceAlgorithmClassType',0,38,135,8,3
	.word	125666
	.byte	11
	.word	125588
	.byte	14
	.byte	'Dem_CallbackClearEventAllowedFncType',0,38,138,8,9
	.word	116418
	.byte	7,38,143,8,9,1,8
	.byte	'DEM_NO_STATUS_BYTE_CHANGE',0,0,8
	.byte	'DEM_ONLY_THIS_CYCLE_AND_READINESS',0,1,0,14
	.byte	'Dem_ClearEventAllowedBehaviorType',0,38,147,8,3
	.word	125867
	.byte	9,38,149,8,9,8,10
	.byte	'DemCallbackClearEventAllowedFnc',0
	.word	125821
	.byte	4,2,35,0,10
	.byte	'DemClearEventAllowedBehavior',0
	.word	125867
	.byte	1,2,35,4,0,14
	.byte	'Dem_CallbackClearEventAllowedType',0,38,155,8,3
	.word	125981
	.byte	11
	.word	116405
	.byte	14
	.byte	'Dem_CallbackEventDataChangedFncType',0,38,158,8,9
	.word	120524
	.byte	14
	.byte	'Dem_CallbackEventStatusChangedFncType',0,38,164,8,9
	.word	112953
	.byte	14
	.byte	'Dem_DemCallbackInitMForEFncType',0,38,171,8,9
	.word	5163
	.byte	7,38,154,9,9,1,8
	.byte	'DEM_UPDATE_RECORD_NO',0,0,8
	.byte	'DEM_UPDATE_RECORD_YES',0,1,0,14
	.byte	'Dem_RecordUpdateType',0,38,158,9,3
	.word	126248
	.byte	9,38,216,9,9,8,10
	.byte	'FirstFailedEvent',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'FirstConfirmedEvent',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'MostRecentFailedEvent',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'MostRecentConfirmedEvent',0
	.word	270
	.byte	2,2,35,6,0,14
	.byte	'Dem_EventHeadType',0,38,226,9,3
	.word	126332
	.byte	9,38,228,9,9,16,10
	.byte	'EventFaultConfCnt',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'EventOccurrence',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'EventDebounceCnt',0
	.word	3754
	.byte	2,2,35,2,10
	.byte	'EventDebounceTimer',0
	.word	3655
	.byte	4,2,35,4,10
	.byte	'TimerDirection',0
	.word	146
	.byte	1,2,35,8,10
	.byte	'EventMaxFdcDuringCurrentCycle',0
	.word	3732
	.byte	1,2,35,9,10
	.byte	'EventMaxFdcSinceLastClear',0
	.word	3732
	.byte	1,2,35,10,10
	.byte	'EventCyclesSinceLastFailed',0
	.word	146
	.byte	1,2,35,11,10
	.byte	'EventCyclesSinceFirstFailed',0
	.word	146
	.byte	1,2,35,12,10
	.byte	'EventFailedCyclesSinceLastCleared',0
	.word	146
	.byte	1,2,35,13,0,14
	.byte	'Dem_EventEntryType',0,38,148,10,3
	.word	126486
	.byte	9,38,150,10,9,6,10
	.byte	'DtcStatus',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'DtcLastStatus',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'DtcAgingCounter',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'DtcAgedCounter',0
	.word	146
	.byte	1,2,35,3,10
	.byte	'DataEntryRef',0
	.word	270
	.byte	2,2,35,4,0,14
	.byte	'Dem_DTCEntryType',0,38,164,10,3
	.word	126841
	.byte	19,46
	.word	146
	.byte	20,45,0,19,8
	.word	146
	.byte	20,7,0,9,38,166,10,9,56,10
	.byte	'Used',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'FreezeFrameData',0
	.word	126987
	.byte	46,2,35,1,10
	.byte	'ExtendedData',0
	.word	126996
	.byte	8,2,35,47,0,14
	.byte	'Dem_DTCDataEntryType',0,38,182,10,3
	.word	127005
	.byte	7,39,54,9,1,8
	.byte	'CANSM_BSM_S_NOT_INITALIZED',0,0,8
	.byte	'CANSM_BSM_S_NOCOM',0,1,8
	.byte	'CANSM_BSM_S_SILENTCOM',0,2,8
	.byte	'CANSM_BSM_S_FULLCOM',0,3,8
	.byte	'CANSM_BSM_S_CHANGE_BAUDRATE',0,4,8
	.byte	'CANSM_BSM_S_PRE_FULLCOM',0,5,8
	.byte	'CANSM_BSM_S_PRE_NOCOM',0,6,8
	.byte	'CANSM_BSM_S_WUVALIDATION',0,7,8
	.byte	'CANSM_BSM_S_SILENTCOM_BOR',0,8,0,14
	.byte	'CanSM_MainStateType',0,39,66,3
	.word	127103
	.byte	7,39,69,9,1,8
	.byte	'CANSM_NO_SUBSTATE',0,0,8
	.byte	'CANSM_S_NO_BUS_OFF',0,1,8
	.byte	'CANSM_S_CHANGE_BR_SYNC',0,2,8
	.byte	'CANSM_S_TX_TIMEOUT_EXCEPTION',0,3,8
	.byte	'CANSM_S_BUS_OFF_CHECK',0,4,8
	.byte	'CANSM_S_TX_OFF',0,5,8
	.byte	'CANSM_S_CC_STOPPED',0,6,8
	.byte	'CANSM_S_CC_STOPPED_IND',0,7,8
	.byte	'CANSM_S_CC_SLEEP',0,8,8
	.byte	'CANSM_S_CC_SLEEP_IND',0,9,8
	.byte	'CANSM_S_CC_STARTED',0,10,8
	.byte	'CANSM_S_CC_START_IND',0,11,8
	.byte	'CANSM_S_TRCV_NORMAL',0,12,8
	.byte	'CANSM_S_TRCV_NORMAL_IND',0,13,8
	.byte	'CANSM_S_TRCV_STANDBY',0,14,8
	.byte	'CANSM_S_TRCV_STANDBY_IND',0,15,8
	.byte	'CANSM_S_RESTART_CC',0,16,8
	.byte	'CANSM_S_RESTART_CC_IND',0,17,8
	.byte	'CANSM_S_CC_STOPPED_WAIT',0,18,8
	.byte	'CANSM_S_CC_SLEEP_WAIT',0,19,8
	.byte	'CANSM_S_CC_STARTED_WAIT',0,20,8
	.byte	'CANSM_S_RESTART_CC_WAIT',0,21,8
	.byte	'CANSM_S_TRCV_NORMAL_WAIT',0,22,8
	.byte	'CANSM_S_TRCV_STANDBY_WAIT',0,23,8
	.byte	'CANSM_S_PN_CLEAR_WUF',0,24,8
	.byte	'CANSM_S_PN_CLEAR_WUF_WAIT',0,25,8
	.byte	'CANSM_S_PN_CLEAR_WUF_IND',0,26,8
	.byte	'CANSM_S_PN_CC_STOPPED',0,27,8
	.byte	'CANSM_S_CHECK_WFLAG_IN_NOT_CC_SLEEP',0,28,8
	.byte	'CANSM_S_CHECK_WFLAG_IN_CC_SLEEP',0,29,8
	.byte	'CANSM_S_CHECK_WFLAG_IN_CC_SLEEP_WAIT',0,30,8
	.byte	'CANSM_S_CHECK_WFLAG_IN_CC_SLEEP_IND',0,31,8
	.byte	'CANSM_S_CHECK_WUF_IN_NOT_CC_SLEEP_WAIT',0,32,8
	.byte	'CANSM_S_CHECK_WUF_IN_NOT_CC_SLEEP_IND',0,33,8
	.byte	'CANSM_S_CHECK_WUF_IN_CC_SLEEP_WAIT',0,34,0,14
	.byte	'CanSM_subStateType',0,39,107,3
	.word	127367
	.byte	9,39,126,9,12,10
	.byte	'ComMNetworfRef',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'cntL1toL2',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'BorTimeL1',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'BorTimeL2',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'BorTimeEnsure',0
	.word	270
	.byte	2,2,35,6,10
	.byte	'BusOffEventId',0
	.word	270
	.byte	2,2,35,8,0,14
	.byte	'CanSM_NetworkCfgType',0,39,152,1,3
	.word	128340
	.byte	14
	.byte	'SoAd_RoutingGroupIdType',0,40,43,15
	.word	146
	.byte	14
	.byte	'SoAd_SoConIdType',0,40,44,15
	.word	146
	.byte	14
	.byte	'SoAd_SoConGroupIdType',0,40,45,15
	.word	146
	.byte	14
	.byte	'SoAd_PduRouteIdType',0,40,46,15
	.word	146
	.byte	14
	.byte	'SoAd_PduRouteDestIdType',0,40,47,15
	.word	146
	.byte	14
	.byte	'SoAd_SocketRouteIdType',0,40,48,15
	.word	146
	.byte	14
	.byte	'SoAd_IfTxUnconfirmedType',0,40,49,16
	.word	270
	.byte	14
	.byte	'SoAd_IfTxTimerType',0,40,51,16
	.word	270
	.byte	19,1
	.word	146
	.byte	20,0,0,9,40,53,9,2,10
	.byte	'Mask',0
	.word	128741
	.byte	1,2,35,0,10
	.byte	'RoutingState',0
	.word	128741
	.byte	1,2,35,1,0,14
	.byte	'SoAd_RoutingGroupCtrlType',0,40,57,3
	.word	128750
	.byte	7,40,63,9,1,8
	.byte	'SOAD_UL_DOIP',0,0,8
	.byte	'SOAD_UL_UDPNM',0,1,8
	.byte	'SOAD_UL_PDUR',0,2,8
	.byte	'SOAD_UL_XCP',0,3,8
	.byte	'SOAD_UL_MAX',0,4,0,14
	.byte	'SoAd_ULIndexType',0,40,71,3
	.word	128826
	.byte	7,41,80,9,1,8
	.byte	'DOIP_IFPDU',0,0,8
	.byte	'DOIP_TPPDU',0,1,8
	.byte	'DOIP_INVALID_PDU_TYPE',0,255,1,0,14
	.byte	'DoIP_PduType',0,41,85,3
	.word	128931
	.byte	14
	.byte	'DoIP_GetGidCallbackType',0,41,168,1,9
	.word	116418
	.byte	14
	.byte	'DoIP_TriggerGidSyncCbkType',0,41,173,1,9
	.word	120524
	.byte	14
	.byte	'DoIP_PowerModeCallbackType',0,41,178,1,9
	.word	116418
	.byte	14
	.byte	'DoIP_LogicAddrType',0,41,183,1,16
	.word	270
	.byte	9,41,185,1,9,4,10
	.byte	'SoConId',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'SoAdTxPduId',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'SoAdRxPduId',0
	.word	146
	.byte	1,2,35,2,0,14
	.byte	'DoIP_ConType',0,41,216,1,3
	.word	129142
	.byte	9,41,218,1,9,8,10
	.byte	'SA',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'TA',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'PduRRxPduId',0
	.word	146
	.byte	1,2,35,4,10
	.byte	'PduRTxPduId',0
	.word	146
	.byte	1,2,35,5,10
	.byte	'PduType',0
	.word	128931
	.byte	1,2,35,6,10
	.byte	'IfPduBufId',0
	.word	146
	.byte	1,2,35,7,0,14
	.byte	'DoIP_ChannelType',0,41,252,1,3
	.word	129230
	.byte	9,41,254,1,9,24,10
	.byte	'ActionType',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'NumTargetAddr',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'TargetAddrIdList',0
	.word	123611
	.byte	4,2,35,4,10
	.byte	'AuthReqLen',0
	.word	146
	.byte	1,2,35,8,10
	.byte	'AuthResLen',0
	.word	146
	.byte	1,2,35,9,10
	.byte	'AuthCallback',0
	.word	8139
	.byte	4,2,35,12,10
	.byte	'ConfirmReqLen',0
	.word	146
	.byte	1,2,35,16,10
	.byte	'ConfirmResLen',0
	.word	146
	.byte	1,2,35,17,10
	.byte	'ConfirmCallback',0
	.word	8139
	.byte	4,2,35,20,0,14
	.byte	'DoIP_RoutingActivationType',0,41,148,2,3
	.word	129366
	.byte	9,41,150,2,9,12,10
	.byte	'NumByteDiagAckNack',0
	.word	3655
	.byte	4,2,35,0,10
	.byte	'SA',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'NumRoutActiv',0
	.word	146
	.byte	1,2,35,6,10
	.byte	'RoutActivIdList',0
	.word	123611
	.byte	4,2,35,8,0,14
	.byte	'DoIP_TesterType',0,41,162,2,3
	.word	129611
	.byte	14
	.byte	'TcpIp_SocketIdType',0,42,50,16
	.word	146
	.byte	19,4
	.word	3655
	.byte	20,0,0,9,42,52,9,4,10
	.byte	'Addr',0
	.word	129757
	.byte	4,2,35,0,0,14
	.byte	'TcpIp_IpAddressType',0,42,55,3
	.word	129766
	.byte	14
	.byte	'TcpIp_DomainType',0,42,61,16
	.word	270
	.byte	9,42,68,9,8,10
	.byte	'Domain',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'Port',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'Addr',0
	.word	129757
	.byte	4,2,35,4,0,14
	.byte	'TcpIp_SockAddrInetType',0,42,73,3
	.word	129839
	.byte	14
	.byte	'TcpIp_AddressType',0,43,128,1,15
	.word	146
	.byte	14
	.byte	'TcpIp_CtrlIdType',0,43,142,1,15
	.word	146
	.byte	14
	.byte	'TcpIp_IpAddrStateType',0,43,144,1,15
	.word	146
	.byte	14
	.byte	'TcpIp_LocalAddrAssignmentConfigType',0,43,149,1,15
	.word	146
	.byte	14
	.byte	'TcpIp_StaticAddrIdType',0,43,151,1,15
	.word	146
	.byte	9,43,152,1,9,12,10
	.byte	'State',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'Netmask',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'Domain',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'IpAddr',0
	.word	129766
	.byte	4,2,35,4,10
	.byte	'DefaultRouter',0
	.word	129766
	.byte	4,2,35,8,0,14
	.byte	'TcpIp_StaticIpAddrType',0,43,162,1,3
	.word	130081
	.byte	14
	.byte	'TcpIp_LocalAddrIdType',0,43,173,1,15
	.word	146
	.byte	19,3
	.word	146
	.byte	20,2,0,9,43,231,1,9,8,10
	.byte	'CtrlId',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'Address',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'Domain',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'StaticAddrId',0
	.word	146
	.byte	1,2,35,4,10
	.byte	'Assignments',0
	.word	130238
	.byte	3,2,35,5,0,14
	.byte	'TcpIp_LocalAddrConfigType',0,43,243,1,3
	.word	130247
	.byte	9,43,245,1,9,4,10
	.byte	'ArpConfigId',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'DHCPConfigId',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'AutoIpInitTimeout',0
	.word	270
	.byte	2,2,35,2,0,14
	.byte	'TcpIp_IpV4CtrlConfigType',0,43,130,2,3
	.word	130381
	.byte	9,43,133,2,9,8,10
	.byte	'CtrlIdx',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'FramePrio',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'UnicastAddrId',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'UnicastAddrLimit',0
	.word	146
	.byte	1,2,35,3,10
	.byte	'MulticastAddrId',0
	.word	146
	.byte	1,2,35,4,10
	.byte	'LocalAddrLimit',0
	.word	146
	.byte	1,2,35,5,10
	.byte	'IpV4CtrlId',0
	.word	146
	.byte	1,2,35,6,10
	.byte	'IpV6CtrlId',0
	.word	146
	.byte	1,2,35,7,0,14
	.byte	'TcpIp_NetIfCtrlConfigType',0,43,148,2,3
	.word	130492
	.byte	14
	.byte	'SoAd_RemoteAddressType',0,44,113,32
	.word	129839
	.byte	7,44,115,9,1,8
	.byte	'SOAD_SOCON_UNINIT',0,0,8
	.byte	'SOAD_SOCON_OFFLINE',0,1,8
	.byte	'SOAD_SOCON_RECONN',0,2,8
	.byte	'SOAD_SOCON_ONLINE',0,3,0,14
	.byte	'SoAd_SoConModeType',0,44,121,3
	.word	130739
	.byte	6
	.word	146
	.byte	11
	.word	130853
	.byte	6
	.word	146
	.byte	11
	.word	130863
	.byte	6
	.word	146
	.byte	11
	.word	130873
	.byte	6
	.word	128826
	.byte	11
	.word	130883
	.byte	9,44,129,1,9,36,10
	.byte	'IfBufferLength',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'IfBufferOffset',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'TpBufferLength',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'TpBufferOffset',0
	.word	270
	.byte	2,2,35,6,10
	.byte	'PduRouteNum',0
	.word	146
	.byte	1,2,35,8,10
	.byte	'SocketRouteNum',0
	.word	146
	.byte	1,2,35,9,10
	.byte	'PduRouteDestNum',0
	.word	146
	.byte	1,2,35,10,10
	.byte	'RemoteAddrState',0
	.word	146
	.byte	1,2,35,11,10
	.byte	'RemoteAddr',0
	.word	129839
	.byte	8,2,35,12,10
	.byte	'PduRouteDestList',0
	.word	130858
	.byte	4,2,35,20,10
	.byte	'PduRouteList',0
	.word	130868
	.byte	4,2,35,24,10
	.byte	'SocketRouteList',0
	.word	130878
	.byte	4,2,35,28,10
	.byte	'SoConModeChgList',0
	.word	130888
	.byte	4,2,35,32,0,14
	.byte	'SoAd_SocketConnectionType',0,44,146,1,3
	.word	130893
	.byte	9,44,148,1,9,16,10
	.byte	'CtrlFlag',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'KeepAliveProbesMax',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'KeepAliveInterval',0
	.word	3655
	.byte	4,2,35,4,10
	.byte	'KeepAliveTime',0
	.word	3655
	.byte	4,2,35,8,10
	.byte	'TxQuota',0
	.word	3655
	.byte	4,2,35,12,0,14
	.byte	'SoAd_TcpProtocolType',0,44,155,1,3
	.word	131245
	.byte	9,44,157,1,9,12,10
	.byte	'CtrlFlag',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'nPduTxBufferMin',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'TriggerTimeout',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'AliveSupervisionTimeout',0
	.word	3655
	.byte	4,2,35,6,0,14
	.byte	'SoAd_UdpProtocolType',0,44,163,1,3
	.word	131395
	.byte	6
	.word	131245
	.byte	11
	.word	131532
	.byte	6
	.word	131395
	.byte	11
	.word	131542
	.byte	9,44,165,1,9,24,10
	.byte	'GroupId',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'CtrlFlag',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'FramePriority',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'SoConNum',0
	.word	146
	.byte	1,2,35,3,10
	.byte	'SoConId',0
	.word	146
	.byte	1,2,35,4,10
	.byte	'IpAddrAssignChgNum',0
	.word	146
	.byte	1,2,35,5,10
	.byte	'LocalAddrId',0
	.word	146
	.byte	1,2,35,6,10
	.byte	'LocalPort',0
	.word	270
	.byte	2,2,35,8,10
	.byte	'IpAddrAssignChgList',0
	.word	130888
	.byte	4,2,35,12,10
	.byte	'TcpProtocolPtr',0
	.word	131537
	.byte	4,2,35,16,10
	.byte	'UdpProtocolPtr',0
	.word	131547
	.byte	4,2,35,20,0,14
	.byte	'SoAd_SocketConnectionGroupType',0,44,178,1,3
	.word	131552
	.byte	9,44,180,1,9,12,10
	.byte	'CtrlFlag',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'PduRouteDestNum',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'SocketRouteDestNum',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'PduRouteDestList',0
	.word	123611
	.byte	4,2,35,4,10
	.byte	'SocketRouteDestList',0
	.word	123611
	.byte	4,2,35,8,0,14
	.byte	'SoAd_RoutingGroupType',0,44,187,1,3
	.word	131837
	.byte	9,44,189,1,9,6,10
	.byte	'ULType',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'ULIndex',0
	.word	128826
	.byte	1,2,35,1,10
	.byte	'CtrlFlag',0
	.word	146
	.byte	1,2,35,2,10
	.byte	'RouteDestNum',0
	.word	146
	.byte	1,2,35,3,10
	.byte	'RouteDestId',0
	.word	146
	.byte	1,2,35,4,10
	.byte	'TxPduId',0
	.word	146
	.byte	1,2,35,5,0,14
	.byte	'SoAd_PduRouteType',0,44,204,1,3
	.word	132001
	.byte	11
	.word	128750
	.byte	9,44,206,1,9,20,10
	.byte	'TxPduHeaderId',0
	.word	3655
	.byte	4,2,35,0,10
	.byte	'SoConNum',0
	.word	146
	.byte	1,2,35,4,10
	.byte	'SoConId',0
	.word	146
	.byte	1,2,35,5,10
	.byte	'PduRouteId',0
	.word	146
	.byte	1,2,35,6,10
	.byte	'UdpTriggerMode',0
	.word	146
	.byte	1,2,35,7,10
	.byte	'UdpTriggerTimeout',0
	.word	270
	.byte	2,2,35,8,10
	.byte	'RoutingCtrlList',0
	.word	132146
	.byte	4,2,35,12,10
	.byte	'IfTriggerList',0
	.word	1862
	.byte	4,2,35,16,0,14
	.byte	'SoAd_PduRouteDestType',0,44,217,1,3
	.word	132151
	.byte	9,44,219,1,9,16,10
	.byte	'RxPduHeaderId',0
	.word	3655
	.byte	4,2,35,0,10
	.byte	'ULType',0
	.word	146
	.byte	1,2,35,4,10
	.byte	'ULIndex',0
	.word	128826
	.byte	1,2,35,5,10
	.byte	'SoConNum',0
	.word	146
	.byte	1,2,35,6,10
	.byte	'SoConId',0
	.word	146
	.byte	1,2,35,7,10
	.byte	'RxPduId',0
	.word	146
	.byte	1,2,35,8,10
	.byte	'RoutingCtrlList',0
	.word	132146
	.byte	4,2,35,12,0,14
	.byte	'SoAd_SocketRouteType',0,44,236,1,3
	.word	132366
	.byte	6
	.word	132151
	.byte	11
	.word	132536
	.byte	9,44,155,2,9,24,10
	.byte	'State',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'Timer',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'BufferLength',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'BufferOffset',0
	.word	270
	.byte	2,2,35,6,10
	.byte	'UdpTxBuffer',0
	.word	1862
	.byte	4,2,35,8,10
	.byte	'TotalTxLength',0
	.word	270
	.byte	2,2,35,12,10
	.byte	'UsedTxLength',0
	.word	270
	.byte	2,2,35,14,10
	.byte	'IfTxDataBuffer',0
	.word	123611
	.byte	4,2,35,16,10
	.byte	'PduRouteDestPtr',0
	.word	132541
	.byte	4,2,35,20,0,14
	.byte	'SoAd_TxSessionType',0,44,177,2,3
	.word	132546
	.byte	6
	.word	132366
	.byte	11
	.word	132770
	.byte	9,44,180,2,9,8,10
	.byte	'PduLength',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'RemainLength',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'SocketRoutePtr',0
	.word	132775
	.byte	4,2,35,4,0,14
	.byte	'SoAd_RxPduInfoType',0,44,185,2,3
	.word	132780
	.byte	9,44,187,2,9,12,10
	.byte	'TotalLength',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'In',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'Out',0
	.word	270
	.byte	2,2,35,4,10
	.byte	'BufferPtr',0
	.word	1862
	.byte	4,2,35,8,0,14
	.byte	'SoAd_RxFifoType',0,44,193,2,3
	.word	132880
	.byte	9,44,195,2,9,8,10
	.byte	'TotalLength',0
	.word	270
	.byte	2,2,35,0,10
	.byte	'UsedLength',0
	.word	270
	.byte	2,2,35,2,10
	.byte	'BufferPtr',0
	.word	1862
	.byte	4,2,35,4,0,14
	.byte	'SoAd_RxBufferType',0,44,200,2,3
	.word	132977
	.byte	9,44,202,2,9,48,10
	.byte	'State',0
	.word	146
	.byte	1,2,35,0,10
	.byte	'ValidHeaderLen',0
	.word	146
	.byte	1,2,35,1,10
	.byte	'PduHeader',0
	.word	126996
	.byte	8,2,35,2,10
	.byte	'RxPduInfo',0
	.word	132780
	.byte	8,2,35,12,10
	.byte	'ProcessPduInfo',0
	.word	132780
	.byte	8,2,35,20,10
	.byte	'IfBuffer',0
	.word	132977
	.byte	8,2,35,28,10
	.byte	'TpBuffer',0
	.word	132880
	.byte	12,2,35,36,0,14
	.byte	'SoAd_RxSessionType',0,44,216,2,3
	.word	133071
	.byte	19,184,2
	.word	5247
	.byte	20,5,0
.L645:
	.byte	6
	.word	133243
.L647:
	.byte	19,46
	.word	146
	.byte	20,45,0
.L648:
	.byte	19,2
	.word	146
	.byte	20,1,0,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L229:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,54,15,39,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,11,0,0,0,6,38,0,73,19,0,0,7,4,1,58,15,59
	.byte	15,57,15,11,15,0,0,8,40,0,3,8,28,13,0,0,9,19,1,58,15,59,15,57,15,11,15,0,0,10,13,0,3,8,73,19,11,15,56
	.byte	9,0,0,11,15,0,73,19,0,0,12,46,1,49,19,0,0,13,5,0,49,19,0,0,14,22,0,3,8,58,15,59,15,57,15,73,19,0,0,15
	.byte	46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,16,46,1,3,8,58,15,59,15,57,15,54,15,39,12
	.byte	63,12,60,12,0,0,17,46,0,3,8,58,15,59,15,57,15,54,15,63,12,60,12,0,0,18,21,0,54,15,0,0,19,1,1,11,15,73
	.byte	19,0,0,20,33,0,47,15,0,0,21,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0,22,21,1,73,19,54,15,39,12
	.byte	0,0,23,5,0,73,19,0,0,24,21,1,54,15,39,12,0,0,25,19,1,3,8,58,15,59,15,57,15,11,15,0,0,26,13,0,3,8,11,15
	.byte	73,19,13,15,12,15,56,9,0,0,27,21,0,54,15,39,12,0,0,28,59,0,3,8,0,0,29,21,0,73,19,54,15,39,12,0,0,30,23
	.byte	1,58,15,59,15,57,15,11,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L230:
	.word	.L853-.L852
.L852:
	.half	3
	.word	.L855-.L854
.L854:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\PduR',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Com',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanIf',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTp',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\DoIP',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\ComM',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\inc',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\BswM',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Nm',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanNm',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanSm',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp',0,0
	.byte	'Os_Pl_Inl.h',0,1,0,0
	.byte	'PduR_Types.h',0,2,0,0
	.byte	'ComStack_Types.h',0,3,0,0
	.byte	'Com_Cbk.h',0,4,0,0
	.byte	'Dcm_Cbk.h',0,5,0,0
	.byte	'CanIf.h',0,6,0,0
	.byte	'CanTp.h',0,7,0,0
	.byte	'SoAd.h',0,8,0,0
	.byte	'DoIP.h',0,9,0,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0
	.byte	'Platform_Types.h',0,10,0,0
	.byte	'Std_Types.h',0,10,0,0
	.byte	'ComStack_Types_Cfg.h',0,11,0,0
	.byte	'Mcal_Compiler.h',0,12,0,0
	.byte	'PduR_Cfg.h',0,11,0,0
	.byte	'PduR_PBcfg.h',0,11,0,0
	.byte	'Os_BasicTypes.h',0,1,0,0
	.byte	'Os_Cfg.h',0,11,0,0
	.byte	'Os_Pl_Types.h',0,1,0,0
	.byte	'Os_AsrTypes.h',0,13,0,0
	.byte	'Os_OsekTypes.h',0,13,0,0
	.byte	'Os_Pl_HwDef.h',0,1,0,0
	.byte	'Os_Types.h',0,13,0,0
	.byte	'Rte_Type.h',0,14,0,0
	.byte	'Com_Types.h',0,4,0,0
	.byte	'ComM_Types.h',0,15,0,0
	.byte	'Dcm_Types.h',0,5,0,0
	.byte	'Can_GeneralTypes.h',0,10,0,0
	.byte	'Mcu.h',0,16,0,0
	.byte	'BswM_Types.h',0,17,0,0
	.byte	'EcuM_Generated_Types.h',0,11,0,0
	.byte	'CanIf_Types.h',0,6,0,0
	.byte	'CanTp_Cfg.h',0,11,0,0
	.byte	'CanTp_Types.h',0,7,0,0
	.byte	'NmStack_Types.h',0,18,0,0
	.byte	'CanNm_Types.h',0,19,0,0
	.byte	'NvM_Types.h',0,20,0,0
	.byte	'Dem_Types.h',0,21,0,0
	.byte	'CanSM_Types.h',0,22,0,0
	.byte	'SoAd_GeneratedTypes.h',0,11,0,0
	.byte	'DoIP_Types.h',0,9,0,0
	.byte	'TcpIp_GeneratedTypes.h',0,11,0,0
	.byte	'TcpIp_Types.h',0,23,0,0
	.byte	'SoAd_Types.h',0,8,0,0,0
.L855:
.L853:
	.sdecl	'.debug_info',debug,cluster('PduR_Init')
	.sect	'.debug_info'
.L231:
	.word	237
	.half	3
	.word	.L232
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L234,.L233
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_Init',0,1,174,23,23,1,1,1
	.word	.L186,.L415,.L185
	.byte	4
	.byte	'ConfigPtr',0,1,176,23,55
	.word	.L416,.L417
	.byte	5
	.word	.L186,.L415
	.byte	6
	.byte	'GroupId',0,1,184,23,33
	.word	.L418,.L419
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_Init')
	.sect	'.debug_abbrev'
.L232:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_Init')
	.sect	'.debug_line'
.L233:
	.word	.L857-.L856
.L856:
	.half	3
	.word	.L859-.L858
.L858:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L859:
	.byte	5,8,7,0,5,2
	.word	.L186
	.byte	3,189,23,1,5,5,9
	.half	.L860-.L186
	.byte	1,5,25,7,9
	.half	.L861-.L860
	.byte	3,167,3,1,5,97,9
	.half	.L758-.L861
	.byte	1,5,17,9
	.half	.L75-.L758
	.byte	3,2,1,5,57,9
	.half	.L862-.L75
	.byte	1,5,55,9
	.half	.L863-.L862
	.byte	1,5,106,9
	.half	.L864-.L863
	.byte	3,126,1,5,97,9
	.half	.L74-.L864
	.byte	1,5,13,7,9
	.half	.L865-.L74
	.byte	3,6,1,5,1,9
	.half	.L73-.L865
	.byte	3,3,1,7,9
	.half	.L235-.L73
	.byte	0,1,1
.L857:
	.sdecl	'.debug_ranges',debug,cluster('PduR_Init')
	.sect	'.debug_ranges'
.L234:
	.word	-1,.L186,0,.L235-.L186,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_GetConfigurationId')
	.sect	'.debug_info'
.L236:
	.word	230
	.half	3
	.word	.L237
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L239,.L238
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_GetConfigurationId',0,1,162,27,38
	.word	.L420
	.byte	1,1,1
	.word	.L188,.L421,.L187
	.byte	4
	.word	.L188,.L421
	.byte	5
	.byte	'retId',0,1,167,27,25
	.word	.L420,.L422
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_GetConfigurationId')
	.sect	'.debug_abbrev'
.L237:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_GetConfigurationId')
	.sect	'.debug_line'
.L238:
	.word	.L867-.L866
.L866:
	.half	3
	.word	.L869-.L868
.L868:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L869:
	.byte	5,31,7,0,5,2
	.word	.L188
	.byte	3,166,27,1,5,1,9
	.half	.L760-.L188
	.byte	3,15,1,7,9
	.half	.L240-.L760
	.byte	0,1,1
.L867:
	.sdecl	'.debug_ranges',debug,cluster('PduR_GetConfigurationId')
	.sect	'.debug_ranges'
.L239:
	.word	-1,.L188,0,.L240-.L188,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_EnableRouting')
	.sect	'.debug_info'
.L241:
	.word	217
	.half	3
	.word	.L242
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L244,.L243
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_EnableRouting',0,1,197,27,23,1,1,1
	.word	.L190,.L423,.L189
	.byte	4
	.byte	'id',0,1,199,27,33
	.word	.L418,.L424
	.byte	5
	.word	.L190,.L423
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_EnableRouting')
	.sect	'.debug_abbrev'
.L242:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_EnableRouting')
	.sect	'.debug_line'
.L243:
	.word	.L871-.L870
.L870:
	.half	3
	.word	.L873-.L872
.L872:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L873:
	.byte	5,9,7,0,5,2
	.word	.L190
	.byte	3,201,27,1,5,10,9
	.half	.L874-.L190
	.byte	3,5,1,5,9,7,9
	.half	.L875-.L874
	.byte	3,8,1,5,42,9
	.half	.L876-.L875
	.byte	1,5,1,9
	.half	.L77-.L876
	.byte	3,3,1,7,9
	.half	.L245-.L77
	.byte	0,1,1
.L871:
	.sdecl	'.debug_ranges',debug,cluster('PduR_EnableRouting')
	.sect	'.debug_ranges'
.L244:
	.word	-1,.L190,0,.L245-.L190,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_DisableRouting')
	.sect	'.debug_info'
.L246:
	.word	242
	.half	3
	.word	.L247
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L249,.L248
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_DisableRouting',0,1,236,27,23,1,1,1
	.word	.L192,.L425,.L191
	.byte	4
	.byte	'id',0,1,238,27,33
	.word	.L418,.L426
	.byte	4
	.byte	'initialize',0,1,239,27,13
	.word	.L420,.L427
	.byte	5
	.word	.L192,.L425
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_DisableRouting')
	.sect	'.debug_abbrev'
.L247:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_DisableRouting')
	.sect	'.debug_line'
.L248:
	.word	.L878-.L877
.L877:
	.half	3
	.word	.L880-.L879
.L879:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L880:
	.byte	5,9,7,0,5,2
	.word	.L192
	.byte	3,243,27,1,5,10,9
	.half	.L881-.L192
	.byte	3,5,1,5,9,7,9
	.half	.L882-.L881
	.byte	3,8,1,5,44,9
	.half	.L883-.L882
	.byte	1,5,42,9
	.half	.L884-.L883
	.byte	1,5,1,9
	.half	.L79-.L884
	.byte	3,3,1,7,9
	.half	.L250-.L79
	.byte	0,1,1
.L878:
	.sdecl	'.debug_ranges',debug,cluster('PduR_DisableRouting')
	.sect	'.debug_ranges'
.L249:
	.word	-1,.L192,0,.L250-.L192,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_ComTransmit')
	.sect	'.debug_info'
.L251:
	.word	326
	.half	3
	.word	.L252
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L254,.L253
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_ComTransmit',0,1,150,28,33
	.word	.L420
	.byte	1,1,1
	.word	.L194,.L428,.L193
	.byte	4
	.byte	'id',0,1,152,28,15
	.word	.L420,.L429
	.byte	4
	.byte	'info',0,1,153,28,49
	.word	.L430,.L431
	.byte	5
	.word	.L194,.L428
	.byte	6
	.byte	'i',0,1,156,28,28
	.word	.L420,.L432
	.byte	6
	.byte	'ret',0,1,157,28,20
	.word	.L420,.L433
	.byte	6
	.byte	'Flag',0,1,158,28,13
	.word	.L420,.L434
	.byte	6
	.byte	'mask',0,1,159,28,28
	.word	.L420,.L435
	.byte	6
	.byte	'PathId',0,1,160,28,28
	.word	.L420,.L436
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_ComTransmit')
	.sect	'.debug_abbrev'
.L252:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_ComTransmit')
	.sect	'.debug_line'
.L253:
	.word	.L886-.L885
.L885:
	.half	3
	.word	.L888-.L887
.L887:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L888:
	.byte	5,33,7,0,5,2
	.word	.L194
	.byte	3,149,28,1,5,18,9
	.half	.L762-.L194
	.byte	3,8,1,5,9,9
	.half	.L763-.L762
	.byte	3,4,1,5,19,9
	.half	.L889-.L763
	.byte	3,5,1,5,10,9
	.half	.L890-.L889
	.byte	1,5,13,7,9
	.half	.L891-.L890
	.byte	3,5,1,5,10,9
	.half	.L892-.L891
	.byte	1,5,9,7,9
	.half	.L893-.L892
	.byte	3,9,1,5,23,9
	.half	.L894-.L893
	.byte	1,5,30,9
	.half	.L895-.L894
	.byte	1,5,28,9
	.half	.L764-.L895
	.byte	1,5,9,9
	.half	.L896-.L764
	.byte	3,1,1,5,22,9
	.half	.L897-.L896
	.byte	1,5,27,9
	.half	.L898-.L897
	.byte	1,5,15,9
	.half	.L899-.L898
	.byte	3,1,1,5,79,9
	.half	.L765-.L899
	.byte	1,5,22,9
	.half	.L85-.L765
	.byte	3,2,1,5,44,9
	.half	.L900-.L85
	.byte	1,5,52,9
	.half	.L901-.L900
	.byte	1,5,43,9
	.half	.L767-.L901
	.byte	3,1,1,5,13,9
	.half	.L769-.L767
	.byte	3,1,1,5,22,7,9
	.half	.L902-.L769
	.byte	3,2,1,5,28,9
	.half	.L903-.L902
	.byte	1,5,24,9
	.half	.L86-.L903
	.byte	3,5,1,5,52,9
	.half	.L904-.L86
	.byte	1,5,17,9
	.half	.L771-.L904
	.byte	3,1,1,5,31,9
	.half	.L905-.L771
	.byte	1,5,17,9
	.half	.L906-.L905
	.byte	1,5,31,9
	.half	.L907-.L906
	.byte	1,5,36,9
	.half	.L908-.L907
	.byte	1,5,17,9
	.half	.L909-.L908
	.byte	3,1,1,5,30,9
	.half	.L910-.L909
	.byte	1,5,17,9
	.half	.L911-.L910
	.byte	1,5,30,9
	.half	.L912-.L911
	.byte	1,5,35,9
	.half	.L913-.L912
	.byte	1,5,82,9
	.half	.L87-.L913
	.byte	3,115,1,5,48,9
	.half	.L84-.L87
	.byte	1,5,70,9
	.half	.L914-.L84
	.byte	1,5,79,9
	.half	.L915-.L914
	.byte	1,5,16,7,9
	.half	.L81-.L915
	.byte	3,22,1,5,1,9
	.half	.L772-.L81
	.byte	3,9,1,7,9
	.half	.L255-.L772
	.byte	0,1,1
.L886:
	.sdecl	'.debug_ranges',debug,cluster('PduR_ComTransmit')
	.sect	'.debug_ranges'
.L254:
	.word	-1,.L194,0,.L255-.L194,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_DcmTransmit')
	.sect	'.debug_info'
.L256:
	.word	326
	.half	3
	.word	.L257
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L259,.L258
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_DcmTransmit',0,1,158,31,33
	.word	.L420
	.byte	1,1,1
	.word	.L196,.L437,.L195
	.byte	4
	.byte	'id',0,1,160,31,15
	.word	.L420,.L438
	.byte	4
	.byte	'info',0,1,161,31,53
	.word	.L430,.L439
	.byte	5
	.word	.L196,.L437
	.byte	6
	.byte	'i',0,1,164,31,28
	.word	.L420,.L440
	.byte	6
	.byte	'ret',0,1,165,31,20
	.word	.L420,.L441
	.byte	6
	.byte	'Flag',0,1,166,31,13
	.word	.L420,.L442
	.byte	6
	.byte	'mask',0,1,167,31,28
	.word	.L420,.L443
	.byte	6
	.byte	'PathId',0,1,168,31,28
	.word	.L420,.L444
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_DcmTransmit')
	.sect	'.debug_abbrev'
.L257:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_DcmTransmit')
	.sect	'.debug_line'
.L258:
	.word	.L917-.L916
.L916:
	.half	3
	.word	.L919-.L918
.L918:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L919:
	.byte	5,33,7,0,5,2
	.word	.L196
	.byte	3,157,31,1,5,18,9
	.half	.L774-.L196
	.byte	3,8,1,5,9,9
	.half	.L775-.L774
	.byte	3,4,1,5,10,9
	.half	.L920-.L775
	.byte	3,5,1,5,13,7,9
	.half	.L921-.L920
	.byte	3,5,1,5,10,9
	.half	.L922-.L921
	.byte	1,5,9,7,9
	.half	.L923-.L922
	.byte	3,9,1,5,23,9
	.half	.L924-.L923
	.byte	1,5,30,9
	.half	.L925-.L924
	.byte	1,5,28,9
	.half	.L776-.L925
	.byte	1,5,9,9
	.half	.L926-.L776
	.byte	3,1,1,5,22,9
	.half	.L927-.L926
	.byte	1,5,27,9
	.half	.L928-.L927
	.byte	1,5,15,9
	.half	.L929-.L928
	.byte	3,1,1,5,55,9
	.half	.L777-.L929
	.byte	1,5,22,9
	.half	.L93-.L777
	.byte	3,2,1,5,44,9
	.half	.L930-.L93
	.byte	1,5,52,9
	.half	.L931-.L930
	.byte	1,5,43,9
	.half	.L779-.L931
	.byte	3,1,1,5,13,9
	.half	.L781-.L779
	.byte	3,1,1,5,22,7,9
	.half	.L932-.L781
	.byte	3,2,1,5,28,9
	.half	.L933-.L932
	.byte	1,5,24,9
	.half	.L94-.L933
	.byte	3,5,1,5,52,9
	.half	.L934-.L94
	.byte	1,5,17,9
	.half	.L783-.L934
	.byte	3,1,1,5,31,9
	.half	.L935-.L783
	.byte	1,5,17,9
	.half	.L936-.L935
	.byte	1,5,31,9
	.half	.L937-.L936
	.byte	1,5,36,9
	.half	.L938-.L937
	.byte	1,5,17,9
	.half	.L939-.L938
	.byte	3,1,1,5,30,9
	.half	.L940-.L939
	.byte	1,5,17,9
	.half	.L941-.L940
	.byte	1,5,30,9
	.half	.L942-.L941
	.byte	1,5,35,9
	.half	.L943-.L942
	.byte	1,5,58,9
	.half	.L95-.L943
	.byte	3,115,1,5,24,9
	.half	.L92-.L95
	.byte	1,5,46,9
	.half	.L944-.L92
	.byte	1,5,55,9
	.half	.L945-.L944
	.byte	1,5,16,7,9
	.half	.L89-.L945
	.byte	3,22,1,5,1,9
	.half	.L785-.L89
	.byte	3,9,1,7,9
	.half	.L260-.L785
	.byte	0,1,1
.L917:
	.sdecl	'.debug_ranges',debug,cluster('PduR_DcmTransmit')
	.sect	'.debug_ranges'
.L259:
	.word	-1,.L196,0,.L260-.L196,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_CanIfRxIndication')
	.sect	'.debug_info'
.L261:
	.word	275
	.half	3
	.word	.L262
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L264,.L263
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_CanIfRxIndication',0,1,178,38,23,1,1,1
	.word	.L198,.L445,.L197
	.byte	4
	.byte	'RxPduId',0,1,180,38,15
	.word	.L420,.L446
	.byte	4
	.byte	'PduInfoPtr',0,1,181,38,49
	.word	.L430,.L447
	.byte	5
	.word	.L198,.L445
	.byte	6
	.byte	'pRxPduInfo',0,1,184,38,60
	.word	.L448,.L449
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_CanIfRxIndication')
	.sect	'.debug_abbrev'
.L262:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_CanIfRxIndication')
	.sect	'.debug_line'
.L263:
	.word	.L947-.L946
.L946:
	.half	3
	.word	.L949-.L948
.L948:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L949:
	.byte	5,23,7,0,5,2
	.word	.L198
	.byte	3,177,38,1,5,9,9
	.half	.L787-.L198
	.byte	3,8,1,5,24,9
	.half	.L950-.L787
	.byte	3,5,1,5,10,9
	.half	.L951-.L950
	.byte	1,5,13,7,9
	.half	.L952-.L951
	.byte	3,5,1,5,10,9
	.half	.L953-.L952
	.byte	1,5,24,7,9
	.half	.L954-.L953
	.byte	3,8,1,5,51,9
	.half	.L786-.L954
	.byte	3,1,1,5,1,7,9
	.half	.L97-.L786
	.byte	3,5,1,7,9
	.half	.L265-.L97
	.byte	0,1,1
.L947:
	.sdecl	'.debug_ranges',debug,cluster('PduR_CanIfRxIndication')
	.sect	'.debug_ranges'
.L264:
	.word	-1,.L198,0,.L265-.L198,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_CanIfTxConfirmation')
	.sect	'.debug_info'
.L266:
	.word	270
	.half	3
	.word	.L267
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L269,.L268
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_CanIfTxConfirmation',0,1,226,38,23,1,1,1
	.word	.L200,.L450,.L199
	.byte	4
	.byte	'TxPduId',0,1,228,38,15
	.word	.L420,.L451
	.byte	5
	.word	.L200,.L450
	.byte	6
	.byte	'PathId',0,1,231,38,28
	.word	.L420,.L452
	.byte	6
	.byte	'GroupId',0,1,232,38,33
	.word	.L418,.L453
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_CanIfTxConfirmation')
	.sect	'.debug_abbrev'
.L267:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_CanIfTxConfirmation')
	.sect	'.debug_line'
.L268:
	.word	.L956-.L955
.L955:
	.half	3
	.word	.L958-.L957
.L957:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L958:
	.byte	5,9,7,0,5,2
	.word	.L200
	.byte	3,233,38,1,5,24,9
	.half	.L959-.L200
	.byte	3,5,1,5,10,9
	.half	.L960-.L959
	.byte	1,5,18,7,9
	.half	.L961-.L960
	.byte	3,9,1,5,51,9
	.half	.L962-.L961
	.byte	1,5,19,9
	.half	.L789-.L962
	.byte	3,1,1,5,59,9
	.half	.L963-.L789
	.byte	1,5,13,9
	.half	.L790-.L963
	.byte	3,1,1,5,12,9
	.half	.L964-.L790
	.byte	1,5,55,7,9
	.half	.L965-.L964
	.byte	1,5,83,9
	.half	.L966-.L965
	.byte	1,5,52,9
	.half	.L791-.L966
	.byte	1,5,48,7,9
	.half	.L102-.L791
	.byte	3,2,1,5,81,9
	.half	.L967-.L102
	.byte	1,5,1,9
	.half	.L100-.L967
	.byte	3,5,1,7,9
	.half	.L270-.L100
	.byte	0,1,1
.L956:
	.sdecl	'.debug_ranges',debug,cluster('PduR_CanIfTxConfirmation')
	.sect	'.debug_ranges'
.L269:
	.word	-1,.L200,0,.L270-.L200,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_CanTpStartOfReception')
	.sect	'.debug_info'
.L271:
	.word	344
	.half	3
	.word	.L272
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L274,.L273
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_CanTpStartOfReception',0,1,141,44,36
	.word	.L454
	.byte	1,1,1
	.word	.L208,.L455,.L207
	.byte	4
	.byte	'id',0,1,143,44,15
	.word	.L420,.L456
	.byte	4
	.byte	'info',0,1,144,44,53
	.word	.L430,.L457
	.byte	4
	.byte	'TpSduLength',0,1,145,44,19
	.word	.L418,.L458
	.byte	4
	.byte	'bufferSizePtr',0,1,146,44,53
	.word	.L459,.L460
	.byte	5
	.word	.L208,.L455
	.byte	6
	.byte	'result',0,1,149,44,23
	.word	.L454,.L461
	.byte	6
	.byte	'pRxPduInfo',0,1,151,44,60
	.word	.L448,.L462
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_CanTpStartOfReception')
	.sect	'.debug_abbrev'
.L272:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_CanTpStartOfReception')
	.sect	'.debug_line'
.L273:
	.word	.L969-.L968
.L968:
	.half	3
	.word	.L971-.L970
.L970:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L971:
	.byte	5,36,7,0,5,2
	.word	.L208
	.byte	3,140,44,1,5,30,9
	.half	.L807-.L208
	.byte	3,8,1,5,9,9
	.half	.L808-.L807
	.byte	3,5,1,5,10,9
	.half	.L972-.L808
	.byte	3,5,1,5,13,7,9
	.half	.L973-.L972
	.byte	3,5,1,5,10,9
	.half	.L974-.L973
	.byte	1,5,24,7,9
	.half	.L975-.L974
	.byte	3,8,1,5,83,9
	.half	.L805-.L975
	.byte	3,1,1,5,1,9
	.half	.L117-.L805
	.byte	3,6,1,7,9
	.half	.L275-.L117
	.byte	0,1,1
.L969:
	.sdecl	'.debug_ranges',debug,cluster('PduR_CanTpStartOfReception')
	.sect	'.debug_ranges'
.L274:
	.word	-1,.L208,0,.L275-.L208,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_CanTpCopyRxData')
	.sect	'.debug_info'
.L276:
	.word	313
	.half	3
	.word	.L277
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L279,.L278
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_CanTpCopyRxData',0,1,199,44,36
	.word	.L454
	.byte	1,1,1
	.word	.L210,.L463,.L209
	.byte	4
	.byte	'id',0,1,201,44,15
	.word	.L420,.L464
	.byte	4
	.byte	'info',0,1,202,44,53
	.word	.L430,.L465
	.byte	4
	.byte	'bufferSizePtr',0,1,203,44,53
	.word	.L459,.L466
	.byte	5
	.word	.L210,.L463
	.byte	6
	.byte	'result',0,1,206,44,23
	.word	.L454,.L467
	.byte	6
	.byte	'pRxPduInfo',0,1,208,44,60
	.word	.L448,.L468
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_CanTpCopyRxData')
	.sect	'.debug_abbrev'
.L277:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_CanTpCopyRxData')
	.sect	'.debug_line'
.L278:
	.word	.L977-.L976
.L976:
	.half	3
	.word	.L979-.L978
.L978:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L979:
	.byte	5,36,7,0,5,2
	.word	.L210
	.byte	3,198,44,1,5,30,9
	.half	.L812-.L210
	.byte	3,7,1,5,9,9
	.half	.L813-.L812
	.byte	3,5,1,5,10,9
	.half	.L980-.L813
	.byte	3,5,1,5,13,7,9
	.half	.L981-.L980
	.byte	3,5,1,5,10,9
	.half	.L982-.L981
	.byte	1,5,24,7,9
	.half	.L983-.L982
	.byte	3,8,1,5,64,9
	.half	.L810-.L983
	.byte	3,1,1,5,1,9
	.half	.L121-.L810
	.byte	3,6,1,7,9
	.half	.L280-.L121
	.byte	0,1,1
.L977:
	.sdecl	'.debug_ranges',debug,cluster('PduR_CanTpCopyRxData')
	.sect	'.debug_ranges'
.L279:
	.word	-1,.L210,0,.L280-.L210,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_CanTpRxIndication')
	.sect	'.debug_info'
.L281:
	.word	266
	.half	3
	.word	.L282
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L284,.L283
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_CanTpRxIndication',0,1,254,44,23,1,1,1
	.word	.L212,.L469,.L211
	.byte	4
	.byte	'id',0,1,128,45,15
	.word	.L420,.L470
	.byte	4
	.byte	'result',0,1,129,45,20
	.word	.L420,.L471
	.byte	5
	.word	.L212,.L469
	.byte	6
	.byte	'pRxPduInfo',0,1,133,45,60
	.word	.L448,.L472
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_CanTpRxIndication')
	.sect	'.debug_abbrev'
.L282:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_CanTpRxIndication')
	.sect	'.debug_line'
.L283:
	.word	.L985-.L984
.L984:
	.half	3
	.word	.L987-.L986
.L986:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L987:
	.byte	5,9,7,0,5,2
	.word	.L212
	.byte	3,135,45,1,5,10,9
	.half	.L988-.L212
	.byte	3,5,1,5,24,7,9
	.half	.L989-.L988
	.byte	3,9,1,5,51,9
	.half	.L815-.L989
	.byte	3,1,1,5,1,9
	.half	.L125-.L815
	.byte	3,4,1,7,9
	.half	.L285-.L125
	.byte	0,1,1
.L985:
	.sdecl	'.debug_ranges',debug,cluster('PduR_CanTpRxIndication')
	.sect	'.debug_ranges'
.L284:
	.word	-1,.L212,0,.L285-.L212,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_CanTpCopyTxData')
	.sect	'.debug_info'
.L286:
	.word	352
	.half	3
	.word	.L287
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L289,.L288
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_CanTpCopyTxData',0,1,184,45,36
	.word	.L454
	.byte	1,1,1
	.word	.L214,.L473,.L213
	.byte	4
	.byte	'id',0,1,186,45,15
	.word	.L420,.L474
	.byte	4
	.byte	'info',0,1,187,45,53
	.word	.L430,.L475
	.byte	4
	.byte	'retry',0,1,188,45,53
	.word	.L476,.L477
	.byte	4
	.byte	'availableDataPtr',0,1,189,45,53
	.word	.L459,.L478
	.byte	5
	.word	.L214,.L473
	.byte	6
	.byte	'result',0,1,192,45,23
	.word	.L454,.L479
	.byte	6
	.byte	'PathId',0,1,194,45,28
	.word	.L420,.L480
	.byte	6
	.byte	'GroupId',0,1,195,45,33
	.word	.L418,.L481
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_CanTpCopyTxData')
	.sect	'.debug_abbrev'
.L287:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_CanTpCopyTxData')
	.sect	'.debug_line'
.L288:
	.word	.L991-.L990
.L990:
	.half	3
	.word	.L993-.L992
.L992:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L993:
	.byte	5,30,7,0,5,2
	.word	.L214
	.byte	3,191,45,1,5,9,9
	.half	.L817-.L214
	.byte	3,6,1,5,10,9
	.half	.L994-.L817
	.byte	3,5,1,5,13,7,9
	.half	.L995-.L994
	.byte	3,5,1,5,10,9
	.half	.L996-.L995
	.byte	1,7,9
	.half	.L997-.L996
	.byte	3,4,1,5,18,7,9
	.half	.L998-.L997
	.byte	3,8,1,5,46,9
	.half	.L999-.L998
	.byte	1,5,19,9
	.half	.L818-.L999
	.byte	3,1,1,5,59,9
	.half	.L1000-.L818
	.byte	1,5,13,9
	.half	.L819-.L1000
	.byte	3,1,1,5,12,9
	.half	.L1001-.L819
	.byte	1,5,55,7,9
	.half	.L1002-.L1001
	.byte	1,5,83,9
	.half	.L1003-.L1002
	.byte	1,5,52,9
	.half	.L820-.L1003
	.byte	1,5,53,7,9
	.half	.L131-.L820
	.byte	3,2,1,5,81,9
	.half	.L1004-.L131
	.byte	1,5,107,9
	.half	.L1005-.L1004
	.byte	1,5,1,9
	.half	.L127-.L1005
	.byte	3,6,1,7,9
	.half	.L290-.L127
	.byte	0,1,1
.L991:
	.sdecl	'.debug_ranges',debug,cluster('PduR_CanTpCopyTxData')
	.sect	'.debug_ranges'
.L289:
	.word	-1,.L214,0,.L290-.L214,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_CanTpTxConfirmation')
	.sect	'.debug_info'
.L291:
	.word	285
	.half	3
	.word	.L292
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L294,.L293
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_CanTpTxConfirmation',0,1,249,45,23,1,1,1
	.word	.L216,.L482,.L215
	.byte	4
	.byte	'id',0,1,251,45,15
	.word	.L420,.L483
	.byte	4
	.byte	'result',0,1,252,45,20
	.word	.L420,.L484
	.byte	5
	.word	.L216,.L482
	.byte	6
	.byte	'PathId',0,1,128,46,28
	.word	.L420,.L485
	.byte	6
	.byte	'GroupId',0,1,129,46,33
	.word	.L418,.L486
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_CanTpTxConfirmation')
	.sect	'.debug_abbrev'
.L292:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_CanTpTxConfirmation')
	.sect	'.debug_line'
.L293:
	.word	.L1007-.L1006
.L1006:
	.half	3
	.word	.L1009-.L1008
.L1008:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1009:
	.byte	5,23,7,0,5,2
	.word	.L216
	.byte	3,248,45,1,5,9,9
	.half	.L823-.L216
	.byte	3,11,1,5,10,9
	.half	.L1010-.L823
	.byte	3,5,1,5,18,7,9
	.half	.L1011-.L1010
	.byte	3,9,1,5,46,9
	.half	.L1012-.L1011
	.byte	1,5,19,9
	.half	.L824-.L1012
	.byte	3,1,1,5,59,9
	.half	.L1013-.L824
	.byte	1,5,13,9
	.half	.L825-.L1013
	.byte	3,1,1,5,12,9
	.half	.L1014-.L825
	.byte	1,5,55,7,9
	.half	.L1015-.L1014
	.byte	1,5,83,9
	.half	.L1016-.L1015
	.byte	1,5,52,9
	.half	.L826-.L1016
	.byte	1,5,48,7,9
	.half	.L136-.L826
	.byte	3,2,1,5,76,9
	.half	.L1017-.L136
	.byte	1,5,89,9
	.half	.L822-.L1017
	.byte	1,5,1,9
	.half	.L134-.L822
	.byte	3,5,1,7,9
	.half	.L295-.L134
	.byte	0,1,1
.L1007:
	.sdecl	'.debug_ranges',debug,cluster('PduR_CanTpTxConfirmation')
	.sect	'.debug_ranges'
.L294:
	.word	-1,.L216,0,.L295-.L216,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_DoIPTpStartOfReception')
	.sect	'.debug_info'
.L296:
	.word	345
	.half	3
	.word	.L297
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L299,.L298
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_DoIPTpStartOfReception',0,1,234,57,36
	.word	.L454
	.byte	1,1,1
	.word	.L218,.L487,.L217
	.byte	4
	.byte	'id',0,1,236,57,15
	.word	.L420,.L488
	.byte	4
	.byte	'info',0,1,237,57,53
	.word	.L430,.L489
	.byte	4
	.byte	'TpSduLength',0,1,238,57,19
	.word	.L418,.L490
	.byte	4
	.byte	'bufferSizePtr',0,1,239,57,53
	.word	.L459,.L491
	.byte	5
	.word	.L218,.L487
	.byte	6
	.byte	'result',0,1,242,57,23
	.word	.L454,.L492
	.byte	6
	.byte	'pRxPduInfo',0,1,243,57,60
	.word	.L448,.L493
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_DoIPTpStartOfReception')
	.sect	'.debug_abbrev'
.L297:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_DoIPTpStartOfReception')
	.sect	'.debug_line'
.L298:
	.word	.L1019-.L1018
.L1018:
	.half	3
	.word	.L1021-.L1020
.L1020:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1021:
	.byte	5,36,7,0,5,2
	.word	.L218
	.byte	3,233,57,1,5,30,9
	.half	.L831-.L218
	.byte	3,8,1,5,9,9
	.half	.L832-.L831
	.byte	3,3,1,5,10,9
	.half	.L1022-.L832
	.byte	3,5,1,5,13,7,9
	.half	.L1023-.L1022
	.byte	3,5,1,5,10,9
	.half	.L1024-.L1023
	.byte	1,5,24,7,9
	.half	.L1025-.L1024
	.byte	3,8,1,5,83,9
	.half	.L829-.L1025
	.byte	3,1,1,5,1,9
	.half	.L138-.L829
	.byte	3,6,1,7,9
	.half	.L300-.L138
	.byte	0,1,1
.L1019:
	.sdecl	'.debug_ranges',debug,cluster('PduR_DoIPTpStartOfReception')
	.sect	'.debug_ranges'
.L299:
	.word	-1,.L218,0,.L300-.L218,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_DoIPTpCopyRxData')
	.sect	'.debug_info'
.L301:
	.word	314
	.half	3
	.word	.L302
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L304,.L303
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_DoIPTpCopyRxData',0,1,162,58,36
	.word	.L454
	.byte	1,1,1
	.word	.L220,.L494,.L219
	.byte	4
	.byte	'id',0,1,164,58,15
	.word	.L420,.L495
	.byte	4
	.byte	'info',0,1,165,58,53
	.word	.L430,.L496
	.byte	4
	.byte	'bufferSizePtr',0,1,166,58,53
	.word	.L459,.L497
	.byte	5
	.word	.L220,.L494
	.byte	6
	.byte	'result',0,1,169,58,23
	.word	.L454,.L498
	.byte	6
	.byte	'pRxPduInfo',0,1,170,58,60
	.word	.L448,.L499
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_DoIPTpCopyRxData')
	.sect	'.debug_abbrev'
.L302:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_DoIPTpCopyRxData')
	.sect	'.debug_line'
.L303:
	.word	.L1027-.L1026
.L1026:
	.half	3
	.word	.L1029-.L1028
.L1028:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1029:
	.byte	5,36,7,0,5,2
	.word	.L220
	.byte	3,161,58,1,5,30,9
	.half	.L836-.L220
	.byte	3,7,1,5,9,9
	.half	.L837-.L836
	.byte	3,3,1,5,10,9
	.half	.L1030-.L837
	.byte	3,5,1,5,13,7,9
	.half	.L1031-.L1030
	.byte	3,5,1,5,10,9
	.half	.L1032-.L1031
	.byte	1,5,24,7,9
	.half	.L1033-.L1032
	.byte	3,8,1,5,64,9
	.half	.L834-.L1033
	.byte	3,1,1,5,1,9
	.half	.L142-.L834
	.byte	3,6,1,7,9
	.half	.L305-.L142
	.byte	0,1,1
.L1027:
	.sdecl	'.debug_ranges',debug,cluster('PduR_DoIPTpCopyRxData')
	.sect	'.debug_ranges'
.L304:
	.word	-1,.L220,0,.L305-.L220,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_DoIPTpRxIndication')
	.sect	'.debug_info'
.L306:
	.word	267
	.half	3
	.word	.L307
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L309,.L308
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_DoIPTpRxIndication',0,1,215,58,23,1,1,1
	.word	.L222,.L500,.L221
	.byte	4
	.byte	'id',0,1,217,58,15
	.word	.L420,.L501
	.byte	4
	.byte	'result',0,1,218,58,20
	.word	.L420,.L502
	.byte	5
	.word	.L222,.L500
	.byte	6
	.byte	'pRxPduInfo',0,1,221,58,60
	.word	.L448,.L503
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_DoIPTpRxIndication')
	.sect	'.debug_abbrev'
.L307:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_DoIPTpRxIndication')
	.sect	'.debug_line'
.L308:
	.word	.L1035-.L1034
.L1034:
	.half	3
	.word	.L1037-.L1036
.L1036:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1037:
	.byte	5,9,7,0,5,2
	.word	.L222
	.byte	3,222,58,1,5,10,9
	.half	.L1038-.L222
	.byte	3,5,1,5,24,7,9
	.half	.L1039-.L1038
	.byte	3,9,1,5,51,9
	.half	.L839-.L1039
	.byte	3,1,1,5,1,9
	.half	.L146-.L839
	.byte	3,4,1,7,9
	.half	.L310-.L146
	.byte	0,1,1
.L1035:
	.sdecl	'.debug_ranges',debug,cluster('PduR_DoIPTpRxIndication')
	.sect	'.debug_ranges'
.L309:
	.word	-1,.L222,0,.L310-.L222,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_DoIPTpCopyTxData')
	.sect	'.debug_info'
.L311:
	.word	353
	.half	3
	.word	.L312
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L314,.L313
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_DoIPTpCopyTxData',0,1,143,59,36
	.word	.L454
	.byte	1,1,1
	.word	.L224,.L504,.L223
	.byte	4
	.byte	'id',0,1,145,59,15
	.word	.L420,.L505
	.byte	4
	.byte	'info',0,1,146,59,53
	.word	.L430,.L506
	.byte	4
	.byte	'retry',0,1,147,59,53
	.word	.L476,.L507
	.byte	4
	.byte	'availableDataPtr',0,1,148,59,53
	.word	.L459,.L508
	.byte	5
	.word	.L224,.L504
	.byte	6
	.byte	'result',0,1,151,59,23
	.word	.L454,.L509
	.byte	6
	.byte	'PathId',0,1,152,59,28
	.word	.L420,.L510
	.byte	6
	.byte	'GroupId',0,1,153,59,33
	.word	.L418,.L511
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_DoIPTpCopyTxData')
	.sect	'.debug_abbrev'
.L312:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_DoIPTpCopyTxData')
	.sect	'.debug_line'
.L313:
	.word	.L1041-.L1040
.L1040:
	.half	3
	.word	.L1043-.L1042
.L1042:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1043:
	.byte	5,30,7,0,5,2
	.word	.L224
	.byte	3,150,59,1,5,9,9
	.half	.L841-.L224
	.byte	3,4,1,5,10,9
	.half	.L1044-.L841
	.byte	3,5,1,5,13,7,9
	.half	.L1045-.L1044
	.byte	3,5,1,5,10,9
	.half	.L1046-.L1045
	.byte	1,7,9
	.half	.L1047-.L1046
	.byte	3,4,1,5,18,7,9
	.half	.L1048-.L1047
	.byte	3,8,1,5,47,9
	.half	.L1049-.L1048
	.byte	1,5,19,9
	.half	.L842-.L1049
	.byte	3,1,1,5,59,9
	.half	.L1050-.L842
	.byte	1,5,13,9
	.half	.L843-.L1050
	.byte	3,1,1,5,12,9
	.half	.L1051-.L843
	.byte	1,5,55,7,9
	.half	.L1052-.L1051
	.byte	1,5,83,9
	.half	.L1053-.L1052
	.byte	1,5,52,9
	.half	.L844-.L1053
	.byte	1,5,53,7,9
	.half	.L152-.L844
	.byte	3,2,1,5,82,9
	.half	.L1054-.L152
	.byte	1,5,108,9
	.half	.L1055-.L1054
	.byte	1,5,1,9
	.half	.L148-.L1055
	.byte	3,6,1,7,9
	.half	.L315-.L148
	.byte	0,1,1
.L1041:
	.sdecl	'.debug_ranges',debug,cluster('PduR_DoIPTpCopyTxData')
	.sect	'.debug_ranges'
.L314:
	.word	-1,.L224,0,.L315-.L224,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_DoIPTpTxConfirmation')
	.sect	'.debug_info'
.L316:
	.word	286
	.half	3
	.word	.L317
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L319,.L318
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_DoIPTpTxConfirmation',0,1,206,59,23,1,1,1
	.word	.L226,.L512,.L225
	.byte	4
	.byte	'id',0,1,208,59,15
	.word	.L420,.L513
	.byte	4
	.byte	'result',0,1,209,59,20
	.word	.L420,.L514
	.byte	5
	.word	.L226,.L512
	.byte	6
	.byte	'PathId',0,1,212,59,28
	.word	.L420,.L515
	.byte	6
	.byte	'GroupId',0,1,213,59,33
	.word	.L418,.L516
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_DoIPTpTxConfirmation')
	.sect	'.debug_abbrev'
.L317:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_DoIPTpTxConfirmation')
	.sect	'.debug_line'
.L318:
	.word	.L1057-.L1056
.L1056:
	.half	3
	.word	.L1059-.L1058
.L1058:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1059:
	.byte	5,23,7,0,5,2
	.word	.L226
	.byte	3,205,59,1,5,9,9
	.half	.L847-.L226
	.byte	3,9,1,5,10,9
	.half	.L1060-.L847
	.byte	3,5,1,5,18,7,9
	.half	.L1061-.L1060
	.byte	3,9,1,5,47,9
	.half	.L1062-.L1061
	.byte	1,5,19,9
	.half	.L848-.L1062
	.byte	3,1,1,5,59,9
	.half	.L1063-.L848
	.byte	1,5,13,9
	.half	.L849-.L1063
	.byte	3,1,1,5,12,9
	.half	.L1064-.L849
	.byte	1,5,55,7,9
	.half	.L1065-.L1064
	.byte	1,5,83,9
	.half	.L1066-.L1065
	.byte	1,5,52,9
	.half	.L850-.L1066
	.byte	1,5,48,7,9
	.half	.L157-.L850
	.byte	3,2,1,5,77,9
	.half	.L1067-.L157
	.byte	1,5,90,9
	.half	.L846-.L1067
	.byte	1,5,1,9
	.half	.L155-.L846
	.byte	3,5,1,7,9
	.half	.L320-.L155
	.byte	0,1,1
.L1057:
	.sdecl	'.debug_ranges',debug,cluster('PduR_DoIPTpTxConfirmation')
	.sect	'.debug_ranges'
.L319:
	.word	-1,.L226,0,.L320-.L226,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_SoAdIfRxIndication')
	.sect	'.debug_info'
.L321:
	.word	276
	.half	3
	.word	.L322
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L324,.L323
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_SoAdIfRxIndication',0,1,214,41,23,1,1,1
	.word	.L202,.L517,.L201
	.byte	4
	.byte	'RxPduId',0,1,216,41,15
	.word	.L420,.L518
	.byte	4
	.byte	'PduInfoPtr',0,1,217,41,53
	.word	.L430,.L519
	.byte	5
	.word	.L202,.L517
	.byte	6
	.byte	'pRxPduInfo',0,1,220,41,60
	.word	.L448,.L520
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_SoAdIfRxIndication')
	.sect	'.debug_abbrev'
.L322:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_SoAdIfRxIndication')
	.sect	'.debug_line'
.L323:
	.word	.L1069-.L1068
.L1068:
	.half	3
	.word	.L1071-.L1070
.L1070:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1071:
	.byte	5,23,7,0,5,2
	.word	.L202
	.byte	3,213,41,1,5,9,9
	.half	.L793-.L202
	.byte	3,8,1,5,24,9
	.half	.L1072-.L793
	.byte	3,5,1,5,10,9
	.half	.L1073-.L1072
	.byte	1,5,13,7,9
	.half	.L1074-.L1073
	.byte	3,5,1,5,10,9
	.half	.L1075-.L1074
	.byte	1,5,24,7,9
	.half	.L1076-.L1075
	.byte	3,8,1,5,51,9
	.half	.L792-.L1076
	.byte	3,1,1,5,1,7,9
	.half	.L104-.L792
	.byte	3,4,1,7,9
	.half	.L325-.L104
	.byte	0,1,1
.L1069:
	.sdecl	'.debug_ranges',debug,cluster('PduR_SoAdIfRxIndication')
	.sect	'.debug_ranges'
.L324:
	.word	-1,.L202,0,.L325-.L202,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_SoAdIfTxConfirmation')
	.sect	'.debug_info'
.L326:
	.word	271
	.half	3
	.word	.L327
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L329,.L328
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_SoAdIfTxConfirmation',0,1,134,42,23,1,1,1
	.word	.L204,.L521,.L203
	.byte	4
	.byte	'TxPduId',0,1,136,42,15
	.word	.L420,.L522
	.byte	5
	.word	.L204,.L521
	.byte	6
	.byte	'PathId',0,1,140,42,28
	.word	.L420,.L523
	.byte	6
	.byte	'GroupId',0,1,141,42,33
	.word	.L418,.L524
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_SoAdIfTxConfirmation')
	.sect	'.debug_abbrev'
.L327:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_SoAdIfTxConfirmation')
	.sect	'.debug_line'
.L328:
	.word	.L1078-.L1077
.L1077:
	.half	3
	.word	.L1080-.L1079
.L1079:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1080:
	.byte	5,9,7,0,5,2
	.word	.L204
	.byte	3,143,42,1,5,10,9
	.half	.L1081-.L204
	.byte	3,6,1,5,18,7,9
	.half	.L1082-.L1081
	.byte	3,9,1,5,52,9
	.half	.L1083-.L1082
	.byte	1,5,19,9
	.half	.L795-.L1083
	.byte	3,1,1,5,59,9
	.half	.L1084-.L795
	.byte	1,5,13,9
	.half	.L796-.L1084
	.byte	3,1,1,5,12,9
	.half	.L1085-.L796
	.byte	1,5,55,7,9
	.half	.L1086-.L1085
	.byte	1,5,83,9
	.half	.L1087-.L1086
	.byte	1,5,52,9
	.half	.L797-.L1087
	.byte	1,5,48,7,9
	.half	.L109-.L797
	.byte	3,2,1,5,82,9
	.half	.L1088-.L109
	.byte	1,5,1,9
	.half	.L107-.L1088
	.byte	3,4,1,7,9
	.half	.L330-.L107
	.byte	0,1,1
.L1078:
	.sdecl	'.debug_ranges',debug,cluster('PduR_SoAdIfTxConfirmation')
	.sect	'.debug_ranges'
.L329:
	.word	-1,.L204,0,.L330-.L204,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_SoAdIfTriggerTransmit')
	.sect	'.debug_info'
.L331:
	.word	317
	.half	3
	.word	.L332
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L334,.L333
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_SoAdIfTriggerTransmit',0,1,186,42,33
	.word	.L420
	.byte	1,1,1
	.word	.L206,.L525,.L205
	.byte	4
	.byte	'TxPduId',0,1,188,42,15
	.word	.L420,.L526
	.byte	4
	.byte	'PduInfoPtr',0,1,189,42,47
	.word	.L527,.L528
	.byte	5
	.word	.L206,.L525
	.byte	6
	.byte	'ret',0,1,192,42,20
	.word	.L420,.L529
	.byte	6
	.byte	'PathId',0,1,194,42,28
	.word	.L420,.L530
	.byte	6
	.byte	'GroupId',0,1,195,42,33
	.word	.L418,.L531
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_SoAdIfTriggerTransmit')
	.sect	'.debug_abbrev'
.L332:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_SoAdIfTriggerTransmit')
	.sect	'.debug_line'
.L333:
	.word	.L1090-.L1089
.L1089:
	.half	3
	.word	.L1092-.L1091
.L1091:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1092:
	.byte	5,24,7,0,5,2
	.word	.L206
	.byte	3,191,42,1,5,9,9
	.half	.L799-.L206
	.byte	3,6,1,5,10,9
	.half	.L1093-.L799
	.byte	3,6,1,5,13,7,9
	.half	.L1094-.L1093
	.byte	3,6,1,5,10,9
	.half	.L1095-.L1094
	.byte	1,5,18,7,9
	.half	.L1096-.L1095
	.byte	3,8,1,5,52,9
	.half	.L1097-.L1096
	.byte	1,5,19,9
	.half	.L800-.L1097
	.byte	3,1,1,5,59,9
	.half	.L1098-.L800
	.byte	1,5,13,9
	.half	.L801-.L1098
	.byte	3,1,1,5,12,9
	.half	.L1099-.L801
	.byte	1,5,55,7,9
	.half	.L1100-.L1099
	.byte	1,5,83,9
	.half	.L1101-.L1100
	.byte	1,5,52,9
	.half	.L802-.L1101
	.byte	1,5,55,7,9
	.half	.L114-.L802
	.byte	3,2,1,5,89,9
	.half	.L1102-.L114
	.byte	1,5,102,9
	.half	.L1103-.L1102
	.byte	1,5,1,9
	.half	.L111-.L1103
	.byte	3,7,1,7,9
	.half	.L335-.L111
	.byte	0,1,1
.L1090:
	.sdecl	'.debug_ranges',debug,cluster('PduR_SoAdIfTriggerTransmit')
	.sect	'.debug_ranges'
.L334:
	.word	-1,.L206,0,.L335-.L206,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_LowerIfRxIndication')
	.sect	'.debug_info'
.L336:
	.word	302
	.half	3
	.word	.L337
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L339,.L338
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_LowerIfRxIndication',0,1,133,13,30,1,1
	.word	.L160,.L532,.L159
	.byte	4
	.byte	'PathId',0,1,135,13,47
	.word	.L533,.L534
	.byte	4
	.byte	'PduInfoPtr',0,1,136,13,49
	.word	.L430,.L535
	.byte	5
	.word	.L160,.L532
	.byte	6
	.byte	'DestPduId',0,1,139,13,15
	.word	.L420,.L536
	.byte	6
	.byte	'DestModuleType',0,1,140,13,20
	.word	.L537,.L538
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_LowerIfRxIndication')
	.sect	'.debug_abbrev'
.L337:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_LowerIfRxIndication')
	.sect	'.debug_line'
.L338:
	.word	.L1105-.L1104
.L1104:
	.half	3
	.word	.L1107-.L1106
.L1106:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1107:
	.byte	5,27,7,0,5,2
	.word	.L160
	.byte	3,138,13,1,5,67,9
	.half	.L1108-.L160
	.byte	1,5,37,9
	.half	.L649-.L1108
	.byte	3,1,1,5,77,9
	.half	.L1109-.L649
	.byte	1,5,8,9
	.half	.L650-.L1109
	.byte	3,5,1,5,40,9
	.half	.L1110-.L650
	.byte	1,5,20,9
	.half	.L651-.L1110
	.byte	1,5,40,9
	.half	.L1111-.L651
	.byte	1,5,56,9
	.half	.L1112-.L1111
	.byte	1,5,5,9
	.half	.L1113-.L1112
	.byte	1,5,9,7,9
	.half	.L1114-.L1113
	.byte	3,4,1,5,29,9
	.half	.L1115-.L1114
	.byte	1,5,45,9
	.half	.L1116-.L1115
	.byte	1,5,78,9
	.half	.L1117-.L1116
	.byte	1,5,1,7,9
	.half	.L2-.L1117
	.byte	3,32,1,7,9
	.half	.L340-.L2
	.byte	0,1,1
.L1105:
	.sdecl	'.debug_ranges',debug,cluster('PduR_LowerIfRxIndication')
	.sect	'.debug_ranges'
.L339:
	.word	-1,.L160,0,.L340-.L160,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_LowerIfTxConfirmation')
	.sect	'.debug_info'
.L341:
	.word	367
	.half	3
	.word	.L342
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L344,.L343
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_LowerIfTxConfirmation',0,1,198,13,30,1,1
	.word	.L162,.L539,.L161
	.byte	4
	.byte	'PathId',0,1,200,13,28
	.word	.L420,.L540
	.byte	4
	.byte	'ConfId',0,1,201,13,15
	.word	.L420,.L541
	.byte	5
	.word	.L162,.L539
	.byte	6
	.byte	'mask',0,1,204,13,28
	.word	.L420,.L542
	.byte	6
	.byte	'SrcModuleType',0,1,205,13,20
	.word	.L537,.L543
	.byte	6
	.byte	'SrcPduId',0,1,206,13,15
	.word	.L420,.L544
	.byte	6
	.byte	'pTxConfMask',0,1,207,13,56
	.word	.L545,.L546
	.byte	6
	.byte	'pTxErrorMask',0,1,208,13,56
	.word	.L545,.L547
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_LowerIfTxConfirmation')
	.sect	'.debug_abbrev'
.L342:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_LowerIfTxConfirmation')
	.sect	'.debug_line'
.L343:
	.word	.L1119-.L1118
.L1118:
	.half	3
	.word	.L1121-.L1120
.L1120:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1121:
	.byte	5,35,7,0,5,2
	.word	.L162
	.byte	3,203,13,1,5,63,9
	.half	.L1122-.L162
	.byte	1,5,36,9
	.half	.L653-.L1122
	.byte	3,1,1,5,75,9
	.half	.L1123-.L653
	.byte	1,5,26,9
	.half	.L655-.L1123
	.byte	3,1,1,5,65,9
	.half	.L1124-.L655
	.byte	1,5,68,9
	.half	.L657-.L1124
	.byte	3,1,1,5,69,9
	.half	.L658-.L657
	.byte	3,1,1,5,5,9
	.half	.L659-.L658
	.byte	3,4,1,5,23,7,9
	.half	.L1125-.L659
	.byte	3,2,1,5,24,9
	.half	.L1126-.L1125
	.byte	3,1,1,5,5,9
	.half	.L3-.L1126
	.byte	3,15,1,5,23,7,9
	.half	.L1127-.L3
	.byte	3,2,1,5,24,9
	.half	.L1128-.L1127
	.byte	3,1,1,5,8,9
	.half	.L4-.L1128
	.byte	3,59,1,5,40,9
	.half	.L1129-.L4
	.byte	1,5,20,9
	.half	.L1130-.L1129
	.byte	1,5,40,9
	.half	.L1131-.L1130
	.byte	1,5,55,9
	.half	.L1132-.L1131
	.byte	1,5,5,9
	.half	.L1133-.L1132
	.byte	1,5,12,7,9
	.half	.L1134-.L1133
	.byte	3,3,1,5,51,7,9
	.half	.L1135-.L1134
	.byte	1,5,28,7,9
	.half	.L1136-.L1135
	.byte	3,2,1,5,53,9
	.half	.L656-.L1136
	.byte	1,5,13,9
	.half	.L1137-.L656
	.byte	1,5,17,7,9
	.half	.L1138-.L1137
	.byte	3,4,1,5,37,9
	.half	.L1139-.L1138
	.byte	1,5,52,9
	.half	.L1140-.L1139
	.byte	1,5,76,9
	.half	.L1141-.L1140
	.byte	1,5,24,9
	.half	.L8-.L1141
	.byte	3,2,1,5,35,9
	.half	.L1142-.L8
	.byte	1,5,1,9
	.half	.L5-.L1142
	.byte	3,12,1,7,9
	.half	.L345-.L5
	.byte	0,1,1
.L1119:
	.sdecl	'.debug_ranges',debug,cluster('PduR_LowerIfTxConfirmation')
	.sect	'.debug_ranges'
.L344:
	.word	-1,.L162,0,.L345-.L162,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_LowerIfTriggerTransmit')
	.sect	'.debug_info'
.L346:
	.word	413
	.half	3
	.word	.L347
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L349,.L348
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_LowerIfTriggerTransmit',0,1,205,14,40
	.word	.L420
	.byte	1,1
	.word	.L164,.L548,.L163
	.byte	4
	.byte	'PathId',0,1,207,14,28
	.word	.L420,.L549
	.byte	4
	.byte	'ConfId',0,1,208,14,15
	.word	.L420,.L550
	.byte	4
	.byte	'PduInfoPtr',0,1,209,14,51
	.word	.L527,.L551
	.byte	5
	.word	.L164,.L548
	.byte	6
	.byte	'ret',0,1,212,14,20
	.word	.L420,.L552
	.byte	6
	.byte	'mask',0,1,213,14,28
	.word	.L420,.L553
	.byte	6
	.byte	'SrcModuleType',0,1,214,14,20
	.word	.L537,.L554
	.byte	6
	.byte	'SrcPduId',0,1,215,14,15
	.word	.L420,.L555
	.byte	6
	.byte	'pTxConfMask',0,1,219,14,56
	.word	.L545,.L556
	.byte	6
	.byte	'pTxErrorMask',0,1,220,14,56
	.word	.L545,.L557
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_LowerIfTriggerTransmit')
	.sect	'.debug_abbrev'
.L347:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_LowerIfTriggerTransmit')
	.sect	'.debug_line'
.L348:
	.word	.L1144-.L1143
.L1143:
	.half	3
	.word	.L1146-.L1145
.L1145:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1146:
	.byte	5,24,7,0,5,2
	.word	.L164
	.byte	3,211,14,1,5,35,9
	.half	.L662-.L164
	.byte	3,1,1,5,63,9
	.half	.L1147-.L662
	.byte	1,5,36,9
	.half	.L664-.L1147
	.byte	3,1,1,5,75,9
	.half	.L1148-.L664
	.byte	1,5,26,9
	.half	.L666-.L1148
	.byte	3,1,1,5,65,9
	.half	.L1149-.L666
	.byte	1,5,68,9
	.half	.L667-.L1149
	.byte	3,4,1,5,69,9
	.half	.L668-.L667
	.byte	3,1,1,5,5,9
	.half	.L669-.L668
	.byte	3,4,1,5,23,7,9
	.half	.L1150-.L669
	.byte	3,2,1,5,24,9
	.half	.L1151-.L1150
	.byte	3,1,1,5,5,9
	.half	.L9-.L1151
	.byte	3,15,1,5,23,7,9
	.half	.L1152-.L9
	.byte	3,2,1,5,24,9
	.half	.L1153-.L1152
	.byte	3,1,1,5,8,9
	.half	.L10-.L1153
	.byte	3,41,1,5,40,9
	.half	.L1154-.L10
	.byte	1,5,20,9
	.half	.L1155-.L1154
	.byte	1,5,40,9
	.half	.L1156-.L1155
	.byte	1,5,55,9
	.half	.L1157-.L1156
	.byte	1,5,5,9
	.half	.L1158-.L1157
	.byte	1,5,12,7,9
	.half	.L1159-.L1158
	.byte	3,2,1,5,51,7,9
	.half	.L1160-.L1159
	.byte	1,5,24,7,9
	.half	.L1161-.L1160
	.byte	3,2,1,5,38,9
	.half	.L1162-.L1161
	.byte	1,5,35,9
	.half	.L663-.L1162
	.byte	1,5,25,9
	.half	.L1163-.L663
	.byte	3,1,1,5,36,9
	.half	.L1164-.L1163
	.byte	1,5,35,9
	.half	.L12-.L1164
	.byte	3,3,1,5,15,9
	.half	.L1165-.L12
	.byte	1,5,35,9
	.half	.L1166-.L1165
	.byte	1,5,50,9
	.half	.L1167-.L1166
	.byte	1,5,83,9
	.half	.L1168-.L1167
	.byte	1,5,9,9
	.half	.L660-.L1168
	.byte	3,1,1,5,24,7,9
	.half	.L1169-.L660
	.byte	3,2,1,5,35,9
	.half	.L1170-.L1169
	.byte	1,5,25,9
	.half	.L1171-.L1170
	.byte	3,1,1,5,36,9
	.half	.L1172-.L1171
	.byte	1,5,1,9
	.half	.L11-.L1172
	.byte	3,30,1,7,9
	.half	.L350-.L11
	.byte	0,1,1
.L1144:
	.sdecl	'.debug_ranges',debug,cluster('PduR_LowerIfTriggerTransmit')
	.sect	'.debug_ranges'
.L349:
	.word	-1,.L164,0,.L350-.L164,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_LowerIfMultiRxIndication')
	.sect	'.debug_info'
.L351:
	.word	316
	.half	3
	.word	.L352
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L354,.L353
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_LowerIfMultiRxIndication',0,1,217,15,30,1,1
	.word	.L166,.L558,.L165
	.byte	4
	.byte	'pRxPduInfo',0,1,219,15,60
	.word	.L448,.L559
	.byte	4
	.byte	'PduInfoPtr',0,1,220,15,49
	.word	.L430,.L560
	.byte	5
	.word	.L166,.L558
	.byte	6
	.byte	'i',0,1,223,15,28
	.word	.L420,.L561
	.byte	6
	.byte	'PathId',0,1,224,15,28
	.word	.L420,.L562
	.byte	6
	.byte	'GroupId',0,1,225,15,33
	.word	.L418,.L563
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_LowerIfMultiRxIndication')
	.sect	'.debug_abbrev'
.L352:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_LowerIfMultiRxIndication')
	.sect	'.debug_line'
.L353:
	.word	.L1174-.L1173
.L1173:
	.half	3
	.word	.L1176-.L1175
.L1175:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1176:
	.byte	5,30,7,0,5,2
	.word	.L166
	.byte	3,216,15,1,5,11,9
	.half	.L671-.L166
	.byte	3,11,1,5,13,9
	.half	.L672-.L671
	.byte	3,6,1,5,64,9
	.half	.L1177-.L672
	.byte	3,122,1,5,28,9
	.half	.L17-.L1177
	.byte	3,2,1,5,37,9
	.half	.L1178-.L17
	.byte	1,5,19,9
	.half	.L674-.L1178
	.byte	3,1,1,5,59,9
	.half	.L1179-.L674
	.byte	1,5,12,9
	.half	.L675-.L1179
	.byte	3,3,1,5,55,7,9
	.half	.L1180-.L675
	.byte	1,5,83,9
	.half	.L1181-.L1180
	.byte	1,5,52,9
	.half	.L676-.L1181
	.byte	1,5,46,7,9
	.half	.L18-.L676
	.byte	3,2,1,5,67,9
	.half	.L19-.L18
	.byte	3,120,1,5,54,9
	.half	.L16-.L19
	.byte	1,5,64,9
	.half	.L1182-.L16
	.byte	1,5,1,7,9
	.half	.L1183-.L1182
	.byte	3,11,1,7,9
	.half	.L355-.L1183
	.byte	0,1,1
.L1174:
	.sdecl	'.debug_ranges',debug,cluster('PduR_LowerIfMultiRxIndication')
	.sect	'.debug_ranges'
.L354:
	.word	-1,.L166,0,.L355-.L166,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_UpTransmit')
	.sect	'.debug_info'
.L356:
	.word	330
	.half	3
	.word	.L357
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L359,.L358
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_UpTransmit',0,1,135,16,33
	.word	.L420
	.byte	1,1,1
	.word	.L168,.L564,.L167
	.byte	4
	.byte	'PathId',0,1,137,16,47
	.word	.L565,.L566
	.byte	4
	.byte	'info',0,1,138,16,49
	.word	.L430,.L567
	.byte	5
	.word	.L168,.L564
	.byte	6
	.byte	'ret',0,1,141,16,20
	.word	.L420,.L568
	.byte	6
	.byte	'DestPduId',0,1,142,16,15
	.word	.L420,.L569
	.byte	6
	.byte	'GroupId',0,1,143,16,33
	.word	.L418,.L570
	.byte	6
	.byte	'DestModuleType',0,1,144,16,20
	.word	.L537,.L571
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_UpTransmit')
	.sect	'.debug_abbrev'
.L357:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_UpTransmit')
	.sect	'.debug_line'
.L358:
	.word	.L1185-.L1184
.L1184:
	.half	3
	.word	.L1187-.L1186
.L1186:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1187:
	.byte	5,24,7,0,5,2
	.word	.L168
	.byte	3,140,16,1,5,27,9
	.half	.L679-.L168
	.byte	3,1,1,5,67,9
	.half	.L1188-.L679
	.byte	1,5,43,9
	.half	.L678-.L1188
	.byte	3,1,1,5,83,9
	.half	.L1189-.L678
	.byte	1,5,37,9
	.half	.L680-.L1189
	.byte	3,1,1,5,77,9
	.half	.L1190-.L680
	.byte	1,5,9,9
	.half	.L681-.L1190
	.byte	3,3,1,5,8,9
	.half	.L1191-.L681
	.byte	1,5,51,7,9
	.half	.L1192-.L1191
	.byte	1,5,79,9
	.half	.L1193-.L1192
	.byte	1,5,48,9
	.half	.L1194-.L1193
	.byte	1,5,12,7,9
	.half	.L20-.L1194
	.byte	3,2,1,5,44,9
	.half	.L1195-.L20
	.byte	1,5,24,9
	.half	.L1196-.L1195
	.byte	1,5,44,9
	.half	.L1197-.L1196
	.byte	1,5,60,9
	.half	.L1198-.L1197
	.byte	1,5,9,9
	.half	.L1199-.L1198
	.byte	1,5,19,7,9
	.half	.L1200-.L1199
	.byte	3,4,1,5,39,9
	.half	.L1201-.L1200
	.byte	1,5,55,9
	.half	.L1202-.L1201
	.byte	1,5,87,9
	.half	.L1203-.L1202
	.byte	1,5,49,9
	.half	.L22-.L1203
	.byte	3,2,1,5,29,9
	.half	.L1204-.L22
	.byte	1,5,49,9
	.half	.L1205-.L1204
	.byte	1,5,65,9
	.half	.L1206-.L1205
	.byte	1,5,14,9
	.half	.L1207-.L1206
	.byte	1,5,19,7,9
	.half	.L1208-.L1207
	.byte	3,4,1,5,39,9
	.half	.L1209-.L1208
	.byte	1,5,55,9
	.half	.L1210-.L1209
	.byte	1,5,82,9
	.half	.L23-.L1210
	.byte	1,5,1,7,9
	.half	.L21-.L23
	.byte	3,9,1,7,9
	.half	.L360-.L21
	.byte	0,1,1
.L1185:
	.sdecl	'.debug_ranges',debug,cluster('PduR_UpTransmit')
	.sect	'.debug_ranges'
.L359:
	.word	-1,.L168,0,.L360-.L168,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_LowerTpStartOfReception')
	.sect	'.debug_info'
.L361:
	.word	377
	.half	3
	.word	.L362
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L364,.L363
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_LowerTpStartOfReception',0,1,189,17,36
	.word	.L454
	.byte	1,1,1
	.word	.L170,.L572,.L169
	.byte	4
	.byte	'PathId',0,1,191,17,28
	.word	.L420,.L573
	.byte	4
	.byte	'info',0,1,192,17,53
	.word	.L430,.L574
	.byte	4
	.byte	'TpSduLength',0,1,193,17,19
	.word	.L418,.L575
	.byte	4
	.byte	'bufferSizePtr',0,1,194,17,53
	.word	.L459,.L576
	.byte	5
	.word	.L170,.L572
	.byte	6
	.byte	'result',0,1,197,17,23
	.word	.L454,.L577
	.byte	6
	.byte	'DestModuleType',0,1,198,17,20
	.word	.L537,.L578
	.byte	6
	.byte	'DestPduId',0,1,199,17,15
	.word	.L420,.L579
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_LowerTpStartOfReception')
	.sect	'.debug_abbrev'
.L362:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_LowerTpStartOfReception')
	.sect	'.debug_line'
.L363:
	.word	.L1212-.L1211
.L1211:
	.half	3
	.word	.L1214-.L1213
.L1213:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1214:
	.byte	5,30,7,0,5,2
	.word	.L170
	.byte	3,196,17,1,5,37,9
	.half	.L683-.L170
	.byte	3,1,1,5,77,9
	.half	.L1215-.L683
	.byte	1,5,27,9
	.half	.L684-.L1215
	.byte	3,1,1,5,67,9
	.half	.L1216-.L684
	.byte	1,5,8,9
	.half	.L682-.L1216
	.byte	3,7,1,5,40,9
	.half	.L1217-.L682
	.byte	1,5,20,9
	.half	.L1218-.L1217
	.byte	1,5,40,9
	.half	.L1219-.L1218
	.byte	1,5,56,9
	.half	.L1220-.L1219
	.byte	1,5,5,9
	.half	.L1221-.L1220
	.byte	1,5,18,7,9
	.half	.L1222-.L1221
	.byte	3,4,1,5,38,9
	.half	.L1223-.L1222
	.byte	1,5,54,9
	.half	.L1224-.L1223
	.byte	1,5,110,9
	.half	.L1225-.L1224
	.byte	1,5,1,7,9
	.half	.L26-.L1225
	.byte	3,53,1,7,9
	.half	.L365-.L26
	.byte	0,1,1
.L1212:
	.sdecl	'.debug_ranges',debug,cluster('PduR_LowerTpStartOfReception')
	.sect	'.debug_ranges'
.L364:
	.word	-1,.L170,0,.L365-.L170,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_LowerTpCopyRxData')
	.sect	'.debug_info'
.L366:
	.word	346
	.half	3
	.word	.L367
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L369,.L368
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_LowerTpCopyRxData',0,1,150,18,36
	.word	.L454
	.byte	1,1,1
	.word	.L172,.L580,.L171
	.byte	4
	.byte	'PathId',0,1,152,18,28
	.word	.L420,.L581
	.byte	4
	.byte	'info',0,1,153,18,53
	.word	.L430,.L582
	.byte	4
	.byte	'bufferSizePtr',0,1,154,18,53
	.word	.L459,.L583
	.byte	5
	.word	.L172,.L580
	.byte	6
	.byte	'result',0,1,157,18,23
	.word	.L454,.L584
	.byte	6
	.byte	'DestModuleType',0,1,158,18,20
	.word	.L537,.L585
	.byte	6
	.byte	'DestPduId',0,1,159,18,15
	.word	.L420,.L586
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_LowerTpCopyRxData')
	.sect	'.debug_abbrev'
.L367:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_LowerTpCopyRxData')
	.sect	'.debug_line'
.L368:
	.word	.L1227-.L1226
.L1226:
	.half	3
	.word	.L1229-.L1228
.L1228:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1229:
	.byte	5,30,7,0,5,2
	.word	.L172
	.byte	3,156,18,1,5,37,9
	.half	.L686-.L172
	.byte	3,1,1,5,77,9
	.half	.L1230-.L686
	.byte	1,5,27,9
	.half	.L687-.L1230
	.byte	3,1,1,5,67,9
	.half	.L1231-.L687
	.byte	1,5,8,9
	.half	.L685-.L1231
	.byte	3,7,1,5,40,9
	.half	.L1232-.L685
	.byte	1,5,20,9
	.half	.L1233-.L1232
	.byte	1,5,40,9
	.half	.L1234-.L1233
	.byte	1,5,56,9
	.half	.L1235-.L1234
	.byte	1,5,5,9
	.half	.L1236-.L1235
	.byte	1,5,18,7,9
	.half	.L1237-.L1236
	.byte	3,4,1,5,38,9
	.half	.L1238-.L1237
	.byte	1,5,54,9
	.half	.L1239-.L1238
	.byte	1,5,91,9
	.half	.L1240-.L1239
	.byte	1,5,1,7,9
	.half	.L28-.L1240
	.byte	3,63,1,7,9
	.half	.L370-.L28
	.byte	0,1,1
.L1227:
	.sdecl	'.debug_ranges',debug,cluster('PduR_LowerTpCopyRxData')
	.sect	'.debug_ranges'
.L369:
	.word	-1,.L172,0,.L370-.L172,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_LowerTpRxIndication')
	.sect	'.debug_info'
.L371:
	.word	299
	.half	3
	.word	.L372
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L374,.L373
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_LowerTpRxIndication',0,1,248,18,23,1,1,1
	.word	.L174,.L587,.L173
	.byte	4
	.byte	'PathId',0,1,250,18,28
	.word	.L420,.L588
	.byte	4
	.byte	'result',0,1,251,18,20
	.word	.L420,.L589
	.byte	5
	.word	.L174,.L587
	.byte	6
	.byte	'DestModuleType',0,1,254,18,20
	.word	.L537,.L590
	.byte	6
	.byte	'DestPduId',0,1,255,18,15
	.word	.L420,.L591
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_LowerTpRxIndication')
	.sect	'.debug_abbrev'
.L372:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_LowerTpRxIndication')
	.sect	'.debug_line'
.L373:
	.word	.L1242-.L1241
.L1241:
	.half	3
	.word	.L1244-.L1243
.L1243:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1244:
	.byte	5,37,7,0,5,2
	.word	.L174
	.byte	3,253,18,1,5,77,9
	.half	.L1245-.L174
	.byte	1,5,27,9
	.half	.L689-.L1245
	.byte	3,1,1,5,67,9
	.half	.L1246-.L689
	.byte	1,5,8,9
	.half	.L688-.L1246
	.byte	3,7,1,5,40,9
	.half	.L1247-.L688
	.byte	1,5,20,9
	.half	.L1248-.L1247
	.byte	1,5,40,9
	.half	.L1249-.L1248
	.byte	1,5,56,9
	.half	.L1250-.L1249
	.byte	1,5,5,9
	.half	.L1251-.L1250
	.byte	1,5,9,7,9
	.half	.L1252-.L1251
	.byte	3,4,1,5,29,9
	.half	.L1253-.L1252
	.byte	1,5,45,9
	.half	.L1254-.L1253
	.byte	1,5,78,9
	.half	.L1255-.L1254
	.byte	1,5,1,7,9
	.half	.L30-.L1255
	.byte	3,46,1,7,9
	.half	.L375-.L30
	.byte	0,1,1
.L1242:
	.sdecl	'.debug_ranges',debug,cluster('PduR_LowerTpRxIndication')
	.sect	'.debug_ranges'
.L374:
	.word	-1,.L174,0,.L375-.L174,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_LowerTpCopyTxData')
	.sect	'.debug_info'
.L376:
	.word	504
	.half	3
	.word	.L377
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L379,.L378
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_LowerTpCopyTxData',0,1,200,19,43
	.word	.L454
	.byte	1,1
	.word	.L176,.L592,.L175
	.byte	4
	.byte	'PathId',0,1,202,19,28
	.word	.L420,.L593
	.byte	4
	.byte	'ConfId',0,1,203,19,15
	.word	.L420,.L594
	.byte	4
	.byte	'info',0,1,204,19,53
	.word	.L430,.L595
	.byte	4
	.byte	'retry',0,1,205,19,53
	.word	.L476,.L596
	.byte	4
	.byte	'availableDataPtr',0,1,206,19,53
	.word	.L459,.L597
	.byte	5
	.word	.L176,.L592
	.byte	6
	.byte	'result',0,1,209,19,23
	.word	.L454,.L598
	.byte	6
	.byte	'mask',0,1,210,19,28
	.word	.L420,.L599
	.byte	6
	.byte	'PduRRetry',0,1,211,19,19
	.word	.L600,.L601
	.byte	6
	.byte	'SrcModuleType',0,1,212,19,20
	.word	.L537,.L602
	.byte	6
	.byte	'TxPduId',0,1,213,19,15
	.word	.L420,.L603
	.byte	6
	.byte	'pTxConfMask',0,1,214,19,56
	.word	.L545,.L604
	.byte	6
	.byte	'pTxErrorMask',0,1,215,19,56
	.word	.L545,.L605
	.byte	6
	.byte	'CopyFinishMask',0,1,216,19,28
	.word	.L420,.L606
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_LowerTpCopyTxData')
	.sect	'.debug_abbrev'
.L377:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_LowerTpCopyTxData')
	.sect	'.debug_line'
.L378:
	.word	.L1257-.L1256
.L1256:
	.half	3
	.word	.L1259-.L1258
.L1258:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1259:
	.byte	5,43,7,0,5,2
	.word	.L176
	.byte	3,199,19,1,5,30,9
	.half	.L690-.L176
	.byte	3,9,1,5,35,9
	.half	.L694-.L690
	.byte	3,1,1,5,63,9
	.half	.L1260-.L694
	.byte	1,5,36,9
	.half	.L695-.L1260
	.byte	3,2,1,5,75,9
	.half	.L1261-.L695
	.byte	1,5,25,9
	.half	.L697-.L1261
	.byte	3,1,1,5,64,9
	.half	.L1262-.L697
	.byte	1,5,68,9
	.half	.L698-.L1262
	.byte	3,1,1,5,69,9
	.half	.L699-.L698
	.byte	3,1,1,5,5,9
	.half	.L700-.L699
	.byte	3,9,1,5,23,7,9
	.half	.L1263-.L700
	.byte	3,2,1,5,24,9
	.half	.L1264-.L1263
	.byte	3,1,1,5,26,9
	.half	.L1265-.L1264
	.byte	3,1,1,5,53,9
	.half	.L1266-.L1265
	.byte	1,5,5,9
	.half	.L31-.L1266
	.byte	3,16,1,5,23,7,9
	.half	.L1267-.L31
	.byte	3,2,1,5,24,9
	.half	.L1268-.L1267
	.byte	3,1,1,5,26,9
	.half	.L1269-.L1268
	.byte	3,1,1,5,53,9
	.half	.L1270-.L1269
	.byte	1,5,8,9
	.half	.L32-.L1270
	.byte	3,35,1,5,40,9
	.half	.L1271-.L32
	.byte	1,5,20,9
	.half	.L1272-.L1271
	.byte	1,5,40,9
	.half	.L1273-.L1272
	.byte	1,5,55,9
	.half	.L1274-.L1273
	.byte	1,5,5,9
	.half	.L1275-.L1274
	.byte	1,5,12,7,9
	.half	.L1276-.L1275
	.byte	3,3,1,5,51,7,9
	.half	.L1277-.L1276
	.byte	1,5,33,7,9
	.half	.L1278-.L1277
	.byte	3,2,1,5,43,9
	.half	.L1279-.L1278
	.byte	1,5,13,9
	.half	.L1280-.L1279
	.byte	1,5,1,7,9
	.half	.L33-.L1280
	.byte	3,203,0,1,5,32,7,9
	.half	.L36-.L33
	.byte	3,188,127,1,5,56,9
	.half	.L1281-.L36
	.byte	1,5,17,9
	.half	.L1282-.L1281
	.byte	1,5,45,7,9
	.half	.L1283-.L1282
	.byte	3,4,1,5,43,9
	.half	.L1284-.L1283
	.byte	1,5,59,9
	.half	.L1285-.L1284
	.byte	1,5,45,9
	.half	.L38-.L1285
	.byte	3,6,1,5,43,9
	.half	.L701-.L38
	.byte	1,5,49,9
	.half	.L1286-.L701
	.byte	3,1,1,5,43,9
	.half	.L1287-.L1286
	.byte	1,5,28,9
	.half	.L39-.L1287
	.byte	3,3,1,5,38,9
	.half	.L1288-.L39
	.byte	1,5,17,9
	.half	.L702-.L1288
	.byte	3,1,1,5,45,7,9
	.half	.L703-.L702
	.byte	3,3,1,5,43,9
	.half	.L1289-.L703
	.byte	1,5,46,9
	.half	.L40-.L1289
	.byte	3,3,1,5,26,9
	.half	.L1290-.L40
	.byte	1,5,46,9
	.half	.L1291-.L1290
	.byte	1,5,61,9
	.half	.L1292-.L1291
	.byte	1,5,96,9
	.half	.L1293-.L1292
	.byte	1,5,107,9
	.half	.L693-.L1293
	.byte	1,5,17,9
	.half	.L691-.L693
	.byte	3,1,1,5,33,7,9
	.half	.L1294-.L691
	.byte	3,3,1,5,43,9
	.half	.L1295-.L1294
	.byte	1,5,31,9
	.half	.L41-.L1295
	.byte	3,4,1,5,17,9
	.half	.L704-.L41
	.byte	1,5,56,7,9
	.half	.L705-.L704
	.byte	3,2,1,5,42,9
	.half	.L1296-.L705
	.byte	1,5,1,9
	.half	.L42-.L1296
	.byte	3,37,1,7,9
	.half	.L380-.L42
	.byte	0,1,1
.L1257:
	.sdecl	'.debug_ranges',debug,cluster('PduR_LowerTpCopyTxData')
	.sect	'.debug_ranges'
.L379:
	.word	-1,.L176,0,.L380-.L176,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_LowerTpTxConfirmation')
	.sect	'.debug_info'
.L381:
	.word	417
	.half	3
	.word	.L382
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L384,.L383
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_LowerTpTxConfirmation',0,1,251,20,30,1,1
	.word	.L178,.L607,.L177
	.byte	4
	.byte	'PathId',0,1,253,20,28
	.word	.L420,.L608
	.byte	4
	.byte	'ConfId',0,1,254,20,15
	.word	.L420,.L609
	.byte	4
	.byte	'Result',0,1,255,20,20
	.word	.L420,.L610
	.byte	5
	.word	.L178,.L607
	.byte	6
	.byte	'mask',0,1,130,21,28
	.word	.L420,.L611
	.byte	6
	.byte	'SrcModuleType',0,1,131,21,20
	.word	.L537,.L612
	.byte	6
	.byte	'TxPduId',0,1,132,21,15
	.word	.L420,.L613
	.byte	6
	.byte	'pTxConfMask',0,1,133,21,56
	.word	.L545,.L614
	.byte	6
	.byte	'pTxErrorMask',0,1,134,21,56
	.word	.L545,.L615
	.byte	6
	.byte	'ConfirmFinishMask',0,1,135,21,28
	.word	.L420,.L616
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_LowerTpTxConfirmation')
	.sect	'.debug_abbrev'
.L382:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_LowerTpTxConfirmation')
	.sect	'.debug_line'
.L383:
	.word	.L1298-.L1297
.L1297:
	.half	3
	.word	.L1300-.L1299
.L1299:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1300:
	.byte	5,35,7,0,5,2
	.word	.L178
	.byte	3,129,21,1,5,63,9
	.half	.L1301-.L178
	.byte	1,5,36,9
	.half	.L708-.L1301
	.byte	3,1,1,5,75,9
	.half	.L1302-.L708
	.byte	1,5,25,9
	.half	.L710-.L1302
	.byte	3,1,1,5,64,9
	.half	.L1303-.L710
	.byte	1,5,68,9
	.half	.L711-.L1303
	.byte	3,1,1,5,69,9
	.half	.L712-.L711
	.byte	3,1,1,5,5,9
	.half	.L713-.L712
	.byte	3,8,1,5,23,7,9
	.half	.L1304-.L713
	.byte	3,2,1,5,24,9
	.half	.L1305-.L1304
	.byte	3,1,1,5,29,9
	.half	.L1306-.L1305
	.byte	3,1,1,5,56,9
	.half	.L1307-.L1306
	.byte	1,5,5,9
	.half	.L44-.L1307
	.byte	3,16,1,5,23,7,9
	.half	.L1308-.L44
	.byte	3,2,1,5,24,9
	.half	.L1309-.L1308
	.byte	3,1,1,5,29,9
	.half	.L1310-.L1309
	.byte	3,1,1,5,56,9
	.half	.L1311-.L1310
	.byte	1,5,8,9
	.half	.L45-.L1311
	.byte	3,37,1,5,40,9
	.half	.L1312-.L45
	.byte	1,5,20,9
	.half	.L1313-.L1312
	.byte	1,5,40,9
	.half	.L1314-.L1313
	.byte	1,5,55,9
	.half	.L1315-.L1314
	.byte	1,5,5,9
	.half	.L1316-.L1315
	.byte	1,5,12,7,9
	.half	.L1317-.L1316
	.byte	3,2,1,5,51,7,9
	.half	.L1318-.L1317
	.byte	1,5,13,7,9
	.half	.L1319-.L1318
	.byte	3,2,1,5,32,7,9
	.half	.L1320-.L1319
	.byte	3,2,1,5,56,9
	.half	.L1321-.L1320
	.byte	1,5,17,9
	.half	.L1322-.L1321
	.byte	1,7,9
	.half	.L1323-.L1322
	.byte	1,5,29,9
	.half	.L49-.L1323
	.byte	3,9,1,5,39,9
	.half	.L1324-.L49
	.byte	1,5,17,9
	.half	.L714-.L1324
	.byte	3,1,1,5,41,7,9
	.half	.L51-.L714
	.byte	3,3,1,5,21,9
	.half	.L1325-.L51
	.byte	1,5,41,9
	.half	.L1326-.L1325
	.byte	1,5,56,9
	.half	.L1327-.L1326
	.byte	1,5,88,9
	.half	.L1328-.L1327
	.byte	1,5,24,9
	.half	.L50-.L1328
	.byte	3,3,1,5,34,9
	.half	.L1329-.L50
	.byte	1,5,13,9
	.half	.L715-.L1329
	.byte	3,1,1,5,40,7,9
	.half	.L716-.L715
	.byte	3,3,1,5,38,9
	.half	.L1330-.L716
	.byte	1,5,29,9
	.half	.L1331-.L1330
	.byte	3,1,1,5,39,9
	.half	.L1332-.L1331
	.byte	1,5,1,9
	.half	.L46-.L1332
	.byte	3,20,1,7,9
	.half	.L385-.L46
	.byte	0,1,1
.L1298:
	.sdecl	'.debug_ranges',debug,cluster('PduR_LowerTpTxConfirmation')
	.sect	'.debug_ranges'
.L384:
	.word	-1,.L178,0,.L385-.L178,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_LowerTpMultiStartOfReception')
	.sect	'.debug_info'
.L386:
	.word	438
	.half	3
	.word	.L387
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L389,.L388
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_LowerTpMultiStartOfReception',0,1,138,22,36
	.word	.L454
	.byte	1,1,1
	.word	.L180,.L617,.L179
	.byte	4
	.byte	'pRxPduInfo',0,1,140,22,60
	.word	.L448,.L618
	.byte	4
	.byte	'info',0,1,141,22,53
	.word	.L430,.L619
	.byte	4
	.byte	'TpSduLength',0,1,142,22,19
	.word	.L418,.L620
	.byte	4
	.byte	'bufferSizePtr',0,1,143,22,53
	.word	.L459,.L621
	.byte	5
	.word	.L180,.L617
	.byte	6
	.byte	'result',0,1,146,22,23
	.word	.L454,.L622
	.byte	6
	.byte	'PathId',0,1,147,22,28
	.word	.L420,.L623
	.byte	6
	.byte	'i',0,1,148,22,28
	.word	.L420,.L624
	.byte	6
	.byte	'GroupId',0,1,149,22,33
	.word	.L418,.L625
	.byte	6
	.byte	'Flag',0,1,150,22,13
	.word	.L420,.L626
	.byte	6
	.byte	'LargestBuffSize',0,1,151,22,19
	.word	.L418,.L627
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_LowerTpMultiStartOfReception')
	.sect	'.debug_abbrev'
.L387:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_LowerTpMultiStartOfReception')
	.sect	'.debug_line'
.L388:
	.word	.L1334-.L1333
.L1333:
	.half	3
	.word	.L1336-.L1335
.L1335:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1336:
	.byte	5,36,7,0,5,2
	.word	.L180
	.byte	3,137,22,1,5,30,9
	.half	.L720-.L180
	.byte	3,8,1,5,18,9
	.half	.L721-.L720
	.byte	3,4,1,5,35,9
	.half	.L722-.L721
	.byte	3,1,1,5,13,9
	.half	.L1337-.L722
	.byte	3,9,1,5,40,9
	.half	.L1338-.L1337
	.byte	3,122,1,5,28,9
	.half	.L55-.L1338
	.byte	3,2,1,5,37,9
	.half	.L723-.L55
	.byte	1,5,19,9
	.half	.L725-.L723
	.byte	3,1,1,5,59,9
	.half	.L1339-.L725
	.byte	1,5,12,9
	.half	.L727-.L1339
	.byte	3,3,1,5,55,7,9
	.half	.L1340-.L727
	.byte	1,5,83,9
	.half	.L1341-.L1340
	.byte	1,5,52,9
	.half	.L728-.L1341
	.byte	1,5,78,7,9
	.half	.L56-.L728
	.byte	3,2,1,5,13,9
	.half	.L726-.L56
	.byte	3,1,1,5,22,7,9
	.half	.L1342-.L726
	.byte	3,2,1,5,20,9
	.half	.L1343-.L1342
	.byte	3,2,1,5,35,9
	.half	.L732-.L1343
	.byte	1,5,43,9
	.half	.L57-.L732
	.byte	3,115,1,5,30,9
	.half	.L54-.L57
	.byte	1,5,40,9
	.half	.L733-.L54
	.byte	1,5,5,7,9
	.half	.L734-.L733
	.byte	3,22,1,5,16,7,9
	.half	.L1344-.L734
	.byte	3,2,1,5,24,9
	.half	.L735-.L1344
	.byte	3,1,1,5,1,9
	.half	.L59-.L735
	.byte	3,4,1,7,9
	.half	.L390-.L59
	.byte	0,1,1
.L1334:
	.sdecl	'.debug_ranges',debug,cluster('PduR_LowerTpMultiStartOfReception')
	.sect	'.debug_ranges'
.L389:
	.word	-1,.L180,0,.L390-.L180,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_LowerTpMultiCopyRxData')
	.sect	'.debug_info'
.L391:
	.word	407
	.half	3
	.word	.L392
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L394,.L393
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_LowerTpMultiCopyRxData',0,1,198,22,36
	.word	.L454
	.byte	1,1,1
	.word	.L182,.L628,.L181
	.byte	4
	.byte	'pRxPduInfo',0,1,200,22,60
	.word	.L448,.L629
	.byte	4
	.byte	'info',0,1,201,22,53
	.word	.L430,.L630
	.byte	4
	.byte	'bufferSizePtr',0,1,202,22,53
	.word	.L459,.L631
	.byte	5
	.word	.L182,.L628
	.byte	6
	.byte	'PathId',0,1,205,22,28
	.word	.L420,.L632
	.byte	6
	.byte	'result',0,1,206,22,23
	.word	.L454,.L633
	.byte	6
	.byte	'i',0,1,207,22,29
	.word	.L420,.L634
	.byte	6
	.byte	'GroupId',0,1,208,22,33
	.word	.L418,.L635
	.byte	6
	.byte	'Flag',0,1,209,22,13
	.word	.L420,.L636
	.byte	6
	.byte	'LargestBuffSize',0,1,210,22,19
	.word	.L418,.L637
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_LowerTpMultiCopyRxData')
	.sect	'.debug_abbrev'
.L392:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_LowerTpMultiCopyRxData')
	.sect	'.debug_line'
.L393:
	.word	.L1346-.L1345
.L1345:
	.half	3
	.word	.L1348-.L1347
.L1347:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1348:
	.byte	5,36,7,0,5,2
	.word	.L182
	.byte	3,197,22,1,5,18,9
	.half	.L738-.L182
	.byte	3,11,1,5,35,9
	.half	.L739-.L738
	.byte	3,1,1,5,11,9
	.half	.L740-.L739
	.byte	3,3,1,5,13,9
	.half	.L741-.L740
	.byte	3,6,1,5,40,9
	.half	.L1349-.L741
	.byte	3,122,1,5,28,9
	.half	.L62-.L1349
	.byte	3,2,1,5,37,9
	.half	.L1350-.L62
	.byte	1,5,19,9
	.half	.L742-.L1350
	.byte	3,1,1,5,59,9
	.half	.L1351-.L742
	.byte	1,5,12,9
	.half	.L744-.L1351
	.byte	3,3,1,5,55,7,9
	.half	.L1352-.L744
	.byte	1,5,83,9
	.half	.L1353-.L1352
	.byte	1,5,52,9
	.half	.L745-.L1353
	.byte	1,5,59,7,9
	.half	.L63-.L745
	.byte	3,2,1,5,13,9
	.half	.L743-.L63
	.byte	3,1,1,5,22,7,9
	.half	.L1354-.L743
	.byte	3,2,1,5,20,9
	.half	.L1355-.L1354
	.byte	3,2,1,5,35,9
	.half	.L1356-.L1355
	.byte	1,5,43,9
	.half	.L64-.L1356
	.byte	3,115,1,5,30,9
	.half	.L61-.L64
	.byte	1,5,40,9
	.half	.L1357-.L61
	.byte	1,5,5,7,9
	.half	.L1358-.L1357
	.byte	3,22,1,5,16,7,9
	.half	.L1359-.L1358
	.byte	3,2,1,5,24,9
	.half	.L748-.L1359
	.byte	3,1,1,5,1,9
	.half	.L1360-.L748
	.byte	3,7,1,5,16,7,9
	.half	.L66-.L1360
	.byte	3,125,1,5,1,9
	.half	.L749-.L66
	.byte	3,3,1,7,9
	.half	.L395-.L749
	.byte	0,1,1
.L1346:
	.sdecl	'.debug_ranges',debug,cluster('PduR_LowerTpMultiCopyRxData')
	.sect	'.debug_ranges'
.L394:
	.word	-1,.L182,0,.L395-.L182,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_LowerTpMultiRxIndication')
	.sect	'.debug_info'
.L396:
	.word	313
	.half	3
	.word	.L397
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L399,.L398
	.byte	2
	.word	.L227
	.byte	3
	.byte	'PduR_LowerTpMultiRxIndication',0,1,132,23,23,1,1,1
	.word	.L184,.L638,.L183
	.byte	4
	.byte	'pRxPduInfo',0,1,134,23,60
	.word	.L448,.L639
	.byte	4
	.byte	'result',0,1,135,23,20
	.word	.L420,.L640
	.byte	5
	.word	.L184,.L638
	.byte	6
	.byte	'PathId',0,1,138,23,28
	.word	.L420,.L641
	.byte	6
	.byte	'i',0,1,139,23,28
	.word	.L420,.L642
	.byte	6
	.byte	'GroupId',0,1,140,23,33
	.word	.L418,.L643
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_LowerTpMultiRxIndication')
	.sect	'.debug_abbrev'
.L397:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('PduR_LowerTpMultiRxIndication')
	.sect	'.debug_line'
.L398:
	.word	.L1362-.L1361
.L1361:
	.half	3
	.word	.L1364-.L1363
.L1363:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0,0,0,0,0
.L1364:
	.byte	5,23,7,0,5,2
	.word	.L184
	.byte	3,131,23,1,5,11,9
	.half	.L751-.L184
	.byte	3,10,1,5,13,9
	.half	.L752-.L751
	.byte	3,6,1,5,40,9
	.half	.L1365-.L752
	.byte	3,122,1,5,28,9
	.half	.L70-.L1365
	.byte	3,2,1,5,37,9
	.half	.L1366-.L70
	.byte	1,5,19,9
	.half	.L754-.L1366
	.byte	3,1,1,5,59,9
	.half	.L1367-.L754
	.byte	1,5,12,9
	.half	.L755-.L1367
	.byte	3,3,1,5,55,7,9
	.half	.L1368-.L755
	.byte	1,5,83,9
	.half	.L1369-.L1368
	.byte	1,5,52,9
	.half	.L756-.L1369
	.byte	1,5,46,7,9
	.half	.L71-.L756
	.byte	3,2,1,5,43,9
	.half	.L72-.L71
	.byte	3,120,1,5,30,9
	.half	.L69-.L72
	.byte	1,5,40,9
	.half	.L1370-.L69
	.byte	1,5,1,7,9
	.half	.L1371-.L1370
	.byte	3,11,1,7,9
	.half	.L400-.L1371
	.byte	0,1,1
.L1362:
	.sdecl	'.debug_ranges',debug,cluster('PduR_LowerTpMultiRxIndication')
	.sect	'.debug_ranges'
.L399:
	.word	-1,.L184,0,.L400-.L184,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_InitStatus')
	.sect	'.debug_info'
.L401:
	.word	175
	.half	3
	.word	.L402
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L227
	.byte	3
	.byte	'PduR_InitStatus',0,10,193,3,38
	.word	.L644
	.byte	5,3
	.word	PduR_InitStatus
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_InitStatus')
	.sect	'.debug_abbrev'
.L402:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_ModuleFunctions')
	.sect	'.debug_info'
.L403:
	.word	180
	.half	3
	.word	.L404
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L227
	.byte	3
	.byte	'PduR_ModuleFunctions',0,10,205,3,43
	.word	.L645
	.byte	5,3
	.word	PduR_ModuleFunctions
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_ModuleFunctions')
	.sect	'.debug_abbrev'
.L404:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('PduR_RoutingPathGroupEnabled')
	.sect	'.debug_info'
.L405:
	.word	188
	.half	3
	.word	.L406
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L227
	.byte	3
	.byte	'PduR_RoutingPathGroupEnabled',0,10,212,10,31
	.word	.L646
	.byte	5,3
	.word	PduR_RoutingPathGroupEnabled
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('PduR_RoutingPathGroupEnabled')
	.sect	'.debug_abbrev'
.L406:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('ComTxConfMask')
	.sect	'.debug_info'
.L407:
	.word	173
	.half	3
	.word	.L408
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L227
	.byte	3
	.byte	'ComTxConfMask',0,10,221,10,46
	.word	.L647
	.byte	5,3
	.word	ComTxConfMask
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('ComTxConfMask')
	.sect	'.debug_abbrev'
.L408:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('ComTxErrorMask')
	.sect	'.debug_info'
.L409:
	.word	174
	.half	3
	.word	.L410
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L227
	.byte	3
	.byte	'ComTxErrorMask',0,10,225,10,46
	.word	.L647
	.byte	5,3
	.word	ComTxErrorMask
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('ComTxErrorMask')
	.sect	'.debug_abbrev'
.L410:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('DcmTxConfMask')
	.sect	'.debug_info'
.L411:
	.word	173
	.half	3
	.word	.L412
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L227
	.byte	3
	.byte	'DcmTxConfMask',0,10,241,10,46
	.word	.L648
	.byte	5,3
	.word	DcmTxConfMask
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('DcmTxConfMask')
	.sect	'.debug_abbrev'
.L412:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('DcmTxErrorMask')
	.sect	'.debug_info'
.L413:
	.word	174
	.half	3
	.word	.L414
	.byte	4,1
	.byte	'..\\EAS\\BSW\\PduR\\PduR.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L227
	.byte	3
	.byte	'DcmTxErrorMask',0,10,245,10,46
	.word	.L648
	.byte	5,3
	.word	DcmTxErrorMask
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('DcmTxErrorMask')
	.sect	'.debug_abbrev'
.L414:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_CanIfRxIndication')
	.sect	'.debug_loc'
.L447:
	.word	-1,.L198,0,.L786-.L198
	.half	1
	.byte	100
	.word	.L787-.L198,.L445-.L198
	.half	1
	.byte	101
	.word	.L97-.L198,.L445-.L198
	.half	1
	.byte	100
	.word	0,0
.L197:
	.word	-1,.L198,0,.L445-.L198
	.half	2
	.byte	138,0
	.word	0,0
.L446:
	.word	-1,.L198,0,.L445-.L198
	.half	1
	.byte	84
	.word	0,0
.L449:
	.word	-1,.L198,.L786-.L198,.L97-.L198
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_CanIfTxConfirmation')
	.sect	'.debug_loc'
.L453:
	.word	-1,.L200,.L790-.L200,.L791-.L200
	.half	1
	.byte	95
	.word	0,0
.L452:
	.word	-1,.L200,.L789-.L200,.L100-.L200
	.half	5
	.byte	144,32,157,32,0
	.word	.L788-.L200,.L100-.L200
	.half	1
	.byte	84
	.word	0,0
.L199:
	.word	-1,.L200,0,.L450-.L200
	.half	2
	.byte	138,0
	.word	0,0
.L451:
	.word	-1,.L200,0,.L788-.L200
	.half	1
	.byte	84
	.word	.L100-.L200,.L450-.L200
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_CanTpCopyRxData')
	.sect	'.debug_loc'
.L209:
	.word	-1,.L210,0,.L463-.L210
	.half	2
	.byte	138,0
	.word	0,0
.L466:
	.word	-1,.L210,0,.L809-.L210
	.half	1
	.byte	101
	.word	.L812-.L210,.L463-.L210
	.half	1
	.byte	102
	.word	.L121-.L210,.L463-.L210
	.half	1
	.byte	101
	.word	0,0
.L464:
	.word	-1,.L210,0,.L463-.L210
	.half	1
	.byte	84
	.word	0,0
.L465:
	.word	-1,.L210,0,.L810-.L210
	.half	1
	.byte	100
	.word	.L811-.L210,.L463-.L210
	.half	1
	.byte	111
	.word	.L809-.L210,.L121-.L210
	.half	1
	.byte	101
	.word	.L121-.L210,.L463-.L210
	.half	1
	.byte	100
	.word	0,0
.L468:
	.word	-1,.L210,.L810-.L210,.L121-.L210
	.half	1
	.byte	100
	.word	0,0
.L467:
	.word	-1,.L210,.L813-.L210,.L463-.L210
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_CanTpCopyTxData')
	.sect	'.debug_loc'
.L481:
	.word	-1,.L214,.L819-.L214,.L820-.L214
	.half	1
	.byte	95
	.word	0,0
.L480:
	.word	-1,.L214,.L818-.L214,.L127-.L214
	.half	5
	.byte	144,32,157,32,0
	.word	.L816-.L214,.L127-.L214
	.half	1
	.byte	84
	.word	0,0
.L213:
	.word	-1,.L214,0,.L473-.L214
	.half	2
	.byte	138,0
	.word	0,0
.L478:
	.word	-1,.L214,0,.L473-.L214
	.half	1
	.byte	102
	.word	0,0
.L474:
	.word	-1,.L214,0,.L816-.L214
	.half	1
	.byte	84
	.word	.L127-.L214,.L473-.L214
	.half	1
	.byte	84
	.word	0,0
.L475:
	.word	-1,.L214,0,.L473-.L214
	.half	1
	.byte	100
	.word	0,0
.L479:
	.word	-1,.L214,.L817-.L214,.L473-.L214
	.half	1
	.byte	82
	.word	0,0
.L477:
	.word	-1,.L214,0,.L473-.L214
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_CanTpRxIndication')
	.sect	'.debug_loc'
.L211:
	.word	-1,.L212,0,.L469-.L212
	.half	2
	.byte	138,0
	.word	0,0
.L470:
	.word	-1,.L212,0,.L814-.L212
	.half	1
	.byte	84
	.word	.L125-.L212,.L469-.L212
	.half	1
	.byte	84
	.word	0,0
.L472:
	.word	-1,.L212,.L815-.L212,.L125-.L212
	.half	1
	.byte	100
	.word	0,0
.L471:
	.word	-1,.L212,0,.L469-.L212
	.half	1
	.byte	85
	.word	.L814-.L212,.L125-.L212
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_CanTpStartOfReception')
	.sect	'.debug_loc'
.L207:
	.word	-1,.L208,0,.L455-.L208
	.half	2
	.byte	138,0
	.word	0,0
.L458:
	.word	-1,.L208,0,.L455-.L208
	.half	1
	.byte	85
	.word	.L804-.L208,.L117-.L208
	.half	1
	.byte	84
	.word	0,0
.L460:
	.word	-1,.L208,0,.L803-.L208
	.half	1
	.byte	101
	.word	.L807-.L208,.L455-.L208
	.half	1
	.byte	102
	.word	.L117-.L208,.L455-.L208
	.half	1
	.byte	101
	.word	0,0
.L456:
	.word	-1,.L208,0,.L804-.L208
	.half	1
	.byte	84
	.word	.L117-.L208,.L455-.L208
	.half	1
	.byte	84
	.word	0,0
.L457:
	.word	-1,.L208,0,.L805-.L208
	.half	1
	.byte	100
	.word	.L806-.L208,.L455-.L208
	.half	1
	.byte	111
	.word	.L803-.L208,.L117-.L208
	.half	1
	.byte	101
	.word	.L117-.L208,.L455-.L208
	.half	1
	.byte	100
	.word	0,0
.L462:
	.word	-1,.L208,.L805-.L208,.L117-.L208
	.half	1
	.byte	100
	.word	0,0
.L461:
	.word	-1,.L208,.L808-.L208,.L455-.L208
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_CanTpTxConfirmation')
	.sect	'.debug_loc'
.L486:
	.word	-1,.L216,.L825-.L216,.L826-.L216
	.half	1
	.byte	95
	.word	0,0
.L485:
	.word	-1,.L216,.L824-.L216,.L134-.L216
	.half	5
	.byte	144,32,157,32,0
	.word	.L821-.L216,.L134-.L216
	.half	1
	.byte	84
	.word	0,0
.L215:
	.word	-1,.L216,0,.L482-.L216
	.half	2
	.byte	138,0
	.word	0,0
.L483:
	.word	-1,.L216,0,.L821-.L216
	.half	1
	.byte	84
	.word	.L134-.L216,.L482-.L216
	.half	1
	.byte	84
	.word	0,0
.L484:
	.word	-1,.L216,0,.L822-.L216
	.half	1
	.byte	85
	.word	.L823-.L216,.L482-.L216
	.half	1
	.byte	86
	.word	.L134-.L216,.L482-.L216
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_ComTransmit')
	.sect	'.debug_loc'
.L434:
	.word	-1,.L194,.L763-.L194,.L428-.L194
	.half	1
	.byte	90
	.word	.L764-.L194,.L85-.L194
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L436:
	.word	-1,.L194,.L767-.L194,.L84-.L194
	.half	1
	.byte	88
	.word	.L768-.L194,.L769-.L194
	.half	1
	.byte	84
	.word	0,0
.L193:
	.word	-1,.L194,0,.L428-.L194
	.half	2
	.byte	138,0
	.word	0,0
.L432:
	.word	-1,.L194,.L765-.L194,.L766-.L194
	.half	1
	.byte	91
	.word	.L84-.L194,.L81-.L194
	.half	1
	.byte	91
	.word	0,0
.L429:
	.word	-1,.L194,0,.L85-.L194
	.half	1
	.byte	84
	.word	.L761-.L194,.L428-.L194
	.half	1
	.byte	89
	.word	0,0
.L431:
	.word	-1,.L194,0,.L85-.L194
	.half	1
	.byte	100
	.word	.L762-.L194,.L428-.L194
	.half	1
	.byte	108
	.word	.L770-.L194,.L769-.L194
	.half	1
	.byte	100
	.word	0,0
.L435:
	.word	-1,.L194,.L771-.L194,.L87-.L194
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L433:
	.word	-1,.L194,.L769-.L194,.L84-.L194
	.half	1
	.byte	82
	.word	.L772-.L194,.L428-.L194
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_DcmTransmit')
	.sect	'.debug_loc'
.L442:
	.word	-1,.L196,.L775-.L196,.L437-.L196
	.half	1
	.byte	89
	.word	.L776-.L196,.L93-.L196
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L444:
	.word	-1,.L196,.L779-.L196,.L92-.L196
	.half	1
	.byte	88
	.word	.L780-.L196,.L781-.L196
	.half	1
	.byte	84
	.word	0,0
.L195:
	.word	-1,.L196,0,.L437-.L196
	.half	2
	.byte	138,0
	.word	0,0
.L440:
	.word	-1,.L196,.L777-.L196,.L778-.L196
	.half	1
	.byte	90
	.word	.L92-.L196,.L89-.L196
	.half	1
	.byte	90
	.word	0,0
.L438:
	.word	-1,.L196,0,.L93-.L196
	.half	1
	.byte	84
	.word	.L773-.L196,.L437-.L196
	.half	1
	.byte	95
	.word	0,0
.L439:
	.word	-1,.L196,0,.L93-.L196
	.half	1
	.byte	100
	.word	.L774-.L196,.L437-.L196
	.half	1
	.byte	108
	.word	.L782-.L196,.L781-.L196
	.half	1
	.byte	100
	.word	0,0
.L443:
	.word	-1,.L196,.L783-.L196,.L784-.L196
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L441:
	.word	-1,.L196,.L781-.L196,.L92-.L196
	.half	1
	.byte	82
	.word	.L785-.L196,.L437-.L196
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_DisableRouting')
	.sect	'.debug_loc'
.L191:
	.word	-1,.L192,0,.L425-.L192
	.half	2
	.byte	138,0
	.word	0,0
.L426:
	.word	-1,.L192,0,.L425-.L192
	.half	1
	.byte	84
	.word	0,0
.L427:
	.word	-1,.L192,0,.L425-.L192
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_DoIPTpCopyRxData')
	.sect	'.debug_loc'
.L219:
	.word	-1,.L220,0,.L494-.L220
	.half	2
	.byte	138,0
	.word	0,0
.L497:
	.word	-1,.L220,0,.L833-.L220
	.half	1
	.byte	101
	.word	.L836-.L220,.L494-.L220
	.half	1
	.byte	102
	.word	.L142-.L220,.L494-.L220
	.half	1
	.byte	101
	.word	0,0
.L495:
	.word	-1,.L220,0,.L494-.L220
	.half	1
	.byte	84
	.word	0,0
.L496:
	.word	-1,.L220,0,.L834-.L220
	.half	1
	.byte	100
	.word	.L835-.L220,.L494-.L220
	.half	1
	.byte	111
	.word	.L833-.L220,.L142-.L220
	.half	1
	.byte	101
	.word	.L142-.L220,.L494-.L220
	.half	1
	.byte	100
	.word	0,0
.L499:
	.word	-1,.L220,.L834-.L220,.L142-.L220
	.half	1
	.byte	100
	.word	0,0
.L498:
	.word	-1,.L220,.L837-.L220,.L494-.L220
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_DoIPTpCopyTxData')
	.sect	'.debug_loc'
.L511:
	.word	-1,.L224,.L843-.L224,.L844-.L224
	.half	1
	.byte	95
	.word	0,0
.L510:
	.word	-1,.L224,.L842-.L224,.L148-.L224
	.half	5
	.byte	144,32,157,32,0
	.word	.L840-.L224,.L148-.L224
	.half	1
	.byte	84
	.word	0,0
.L223:
	.word	-1,.L224,0,.L504-.L224
	.half	2
	.byte	138,0
	.word	0,0
.L508:
	.word	-1,.L224,0,.L504-.L224
	.half	1
	.byte	102
	.word	0,0
.L505:
	.word	-1,.L224,0,.L840-.L224
	.half	1
	.byte	84
	.word	.L148-.L224,.L504-.L224
	.half	1
	.byte	84
	.word	0,0
.L506:
	.word	-1,.L224,0,.L504-.L224
	.half	1
	.byte	100
	.word	0,0
.L509:
	.word	-1,.L224,.L841-.L224,.L504-.L224
	.half	1
	.byte	82
	.word	0,0
.L507:
	.word	-1,.L224,0,.L504-.L224
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_DoIPTpRxIndication')
	.sect	'.debug_loc'
.L221:
	.word	-1,.L222,0,.L500-.L222
	.half	2
	.byte	138,0
	.word	0,0
.L501:
	.word	-1,.L222,0,.L838-.L222
	.half	1
	.byte	84
	.word	.L146-.L222,.L500-.L222
	.half	1
	.byte	84
	.word	0,0
.L503:
	.word	-1,.L222,.L839-.L222,.L146-.L222
	.half	1
	.byte	100
	.word	0,0
.L502:
	.word	-1,.L222,0,.L500-.L222
	.half	1
	.byte	85
	.word	.L838-.L222,.L146-.L222
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_DoIPTpStartOfReception')
	.sect	'.debug_loc'
.L217:
	.word	-1,.L218,0,.L487-.L218
	.half	2
	.byte	138,0
	.word	0,0
.L490:
	.word	-1,.L218,0,.L487-.L218
	.half	1
	.byte	85
	.word	.L828-.L218,.L138-.L218
	.half	1
	.byte	84
	.word	0,0
.L491:
	.word	-1,.L218,0,.L827-.L218
	.half	1
	.byte	101
	.word	.L831-.L218,.L487-.L218
	.half	1
	.byte	102
	.word	.L138-.L218,.L487-.L218
	.half	1
	.byte	101
	.word	0,0
.L488:
	.word	-1,.L218,0,.L828-.L218
	.half	1
	.byte	84
	.word	.L138-.L218,.L487-.L218
	.half	1
	.byte	84
	.word	0,0
.L489:
	.word	-1,.L218,0,.L829-.L218
	.half	1
	.byte	100
	.word	.L830-.L218,.L487-.L218
	.half	1
	.byte	111
	.word	.L827-.L218,.L138-.L218
	.half	1
	.byte	101
	.word	.L138-.L218,.L487-.L218
	.half	1
	.byte	100
	.word	0,0
.L493:
	.word	-1,.L218,.L829-.L218,.L138-.L218
	.half	1
	.byte	100
	.word	0,0
.L492:
	.word	-1,.L218,.L832-.L218,.L487-.L218
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_DoIPTpTxConfirmation')
	.sect	'.debug_loc'
.L516:
	.word	-1,.L226,.L849-.L226,.L850-.L226
	.half	1
	.byte	95
	.word	0,0
.L515:
	.word	-1,.L226,.L848-.L226,.L155-.L226
	.half	5
	.byte	144,32,157,32,0
	.word	.L845-.L226,.L155-.L226
	.half	1
	.byte	84
	.word	0,0
.L225:
	.word	-1,.L226,0,.L512-.L226
	.half	2
	.byte	138,0
	.word	0,0
.L513:
	.word	-1,.L226,0,.L845-.L226
	.half	1
	.byte	84
	.word	.L155-.L226,.L512-.L226
	.half	1
	.byte	84
	.word	0,0
.L514:
	.word	-1,.L226,0,.L846-.L226
	.half	1
	.byte	85
	.word	.L847-.L226,.L512-.L226
	.half	1
	.byte	86
	.word	.L155-.L226,.L512-.L226
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_EnableRouting')
	.sect	'.debug_loc'
.L189:
	.word	-1,.L190,0,.L423-.L190
	.half	2
	.byte	138,0
	.word	0,0
.L424:
	.word	-1,.L190,0,.L423-.L190
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_GetConfigurationId')
	.sect	'.debug_loc'
.L187:
	.word	-1,.L188,0,.L421-.L188
	.half	2
	.byte	138,0
	.word	0,0
.L422:
	.word	-1,.L188,.L760-.L188,.L421-.L188
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_Init')
	.sect	'.debug_loc'
.L417:
	.word	-1,.L186,0,.L415-.L186
	.half	1
	.byte	100
	.word	0,0
.L419:
	.word	-1,.L186,.L758-.L186,.L759-.L186
	.half	1
	.byte	95
	.word	0,0
.L185:
	.word	-1,.L186,0,.L415-.L186
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_LowerIfMultiRxIndication')
	.sect	'.debug_loc'
.L563:
	.word	-1,.L166,.L675-.L166,.L676-.L166
	.half	1
	.byte	95
	.word	0,0
.L562:
	.word	-1,.L166,.L674-.L166,.L19-.L166
	.half	1
	.byte	84
	.word	0,0
.L560:
	.word	-1,.L166,0,.L17-.L166
	.half	1
	.byte	101
	.word	.L671-.L166,.L558-.L166
	.half	1
	.byte	108
	.word	.L677-.L166,.L19-.L166
	.half	1
	.byte	100
	.word	0,0
.L165:
	.word	-1,.L166,0,.L558-.L166
	.half	2
	.byte	138,0
	.word	0,0
.L561:
	.word	-1,.L166,.L672-.L166,.L673-.L166
	.half	1
	.byte	88
	.word	.L16-.L166,.L558-.L166
	.half	1
	.byte	88
	.word	0,0
.L559:
	.word	-1,.L166,0,.L17-.L166
	.half	1
	.byte	100
	.word	.L670-.L166,.L558-.L166
	.half	1
	.byte	111
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_LowerIfRxIndication')
	.sect	'.debug_loc'
.L538:
	.word	-1,.L160,.L650-.L160,.L651-.L160
	.half	1
	.byte	95
	.word	0,0
.L536:
	.word	-1,.L160,.L649-.L160,.L532-.L160
	.half	1
	.byte	84
	.word	0,0
.L534:
	.word	-1,.L160,0,.L649-.L160
	.half	1
	.byte	84
	.word	0,0
.L535:
	.word	-1,.L160,0,.L532-.L160
	.half	1
	.byte	100
	.word	0,0
.L159:
	.word	-1,.L160,0,.L532-.L160
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_LowerIfTriggerTransmit')
	.sect	'.debug_loc'
.L550:
	.word	-1,.L164,0,.L660-.L164
	.half	1
	.byte	85
	.word	.L661-.L164,.L660-.L164
	.half	1
	.byte	84
	.word	0,0
.L549:
	.word	-1,.L164,0,.L661-.L164
	.half	1
	.byte	84
	.word	0,0
.L551:
	.word	-1,.L164,0,.L660-.L164
	.half	1
	.byte	100
	.word	0,0
.L163:
	.word	-1,.L164,0,.L548-.L164
	.half	2
	.byte	138,0
	.word	0,0
.L554:
	.word	-1,.L164,.L666-.L164,.L660-.L164
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L555:
	.word	-1,.L164,.L667-.L164,.L548-.L164
	.half	1
	.byte	89
	.word	0,0
.L553:
	.word	-1,.L164,.L664-.L164,.L665-.L164
	.half	1
	.byte	88
	.word	0,0
.L556:
	.word	-1,.L164,.L668-.L164,.L548-.L164
	.half	1
	.byte	108
	.word	0,0
.L557:
	.word	-1,.L164,.L669-.L164,.L548-.L164
	.half	1
	.byte	109
	.word	0,0
.L552:
	.word	-1,.L164,.L662-.L164,.L663-.L164
	.half	1
	.byte	82
	.word	.L660-.L164,.L548-.L164
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_LowerIfTxConfirmation')
	.sect	'.debug_loc'
.L541:
	.word	-1,.L162,0,.L8-.L162
	.half	1
	.byte	85
	.word	.L652-.L162,.L8-.L162
	.half	1
	.byte	84
	.word	0,0
.L540:
	.word	-1,.L162,0,.L652-.L162
	.half	1
	.byte	84
	.word	0,0
.L161:
	.word	-1,.L162,0,.L539-.L162
	.half	2
	.byte	138,0
	.word	0,0
.L543:
	.word	-1,.L162,.L655-.L162,.L656-.L162
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L544:
	.word	-1,.L162,.L657-.L162,.L539-.L162
	.half	1
	.byte	89
	.word	0,0
.L542:
	.word	-1,.L162,.L653-.L162,.L654-.L162
	.half	1
	.byte	88
	.word	0,0
.L546:
	.word	-1,.L162,.L658-.L162,.L539-.L162
	.half	1
	.byte	108
	.word	0,0
.L547:
	.word	-1,.L162,.L659-.L162,.L8-.L162
	.half	1
	.byte	98
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_LowerTpCopyRxData')
	.sect	'.debug_loc'
.L585:
	.word	-1,.L172,.L687-.L172,.L580-.L172
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L586:
	.word	-1,.L172,.L685-.L172,.L580-.L172
	.half	1
	.byte	84
	.word	0,0
.L581:
	.word	-1,.L172,0,.L685-.L172
	.half	1
	.byte	84
	.word	0,0
.L171:
	.word	-1,.L172,0,.L580-.L172
	.half	2
	.byte	138,0
	.word	0,0
.L583:
	.word	-1,.L172,0,.L580-.L172
	.half	1
	.byte	101
	.word	0,0
.L582:
	.word	-1,.L172,0,.L580-.L172
	.half	1
	.byte	100
	.word	0,0
.L584:
	.word	-1,.L172,.L686-.L172,.L580-.L172
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_LowerTpCopyTxData')
	.sect	'.debug_loc'
.L594:
	.word	-1,.L176,0,.L691-.L176
	.half	1
	.byte	85
	.word	.L692-.L176,.L691-.L176
	.half	1
	.byte	84
	.word	0,0
.L606:
	.word	-1,.L176,.L702-.L176,.L703-.L176
	.half	1
	.byte	90
	.word	.L704-.L176,.L705-.L176
	.half	1
	.byte	90
	.word	0,0
.L593:
	.word	-1,.L176,0,.L692-.L176
	.half	1
	.byte	84
	.word	0,0
.L601:
	.word	-1,.L176,0,.L592-.L176
	.half	2
	.byte	145,120
	.word	0,0
.L175:
	.word	-1,.L176,0,.L690-.L176
	.half	2
	.byte	138,0
	.word	.L690-.L176,.L36-.L176
	.half	2
	.byte	138,8
	.word	.L36-.L176,.L36-.L176
	.half	2
	.byte	138,0
	.word	.L36-.L176,.L592-.L176
	.half	2
	.byte	138,8
	.word	.L592-.L176,.L592-.L176
	.half	2
	.byte	138,0
	.word	0,0
.L602:
	.word	-1,.L176,.L697-.L176,.L691-.L176
	.half	1
	.byte	81
	.word	0,0
.L603:
	.word	-1,.L176,.L698-.L176,.L592-.L176
	.half	1
	.byte	89
	.word	0,0
.L597:
	.word	-1,.L176,0,.L691-.L176
	.half	1
	.byte	102
	.word	0,0
.L595:
	.word	-1,.L176,0,.L691-.L176
	.half	1
	.byte	100
	.word	0,0
.L599:
	.word	-1,.L176,.L695-.L176,.L696-.L176
	.half	1
	.byte	88
	.word	0,0
.L604:
	.word	-1,.L176,.L699-.L176,.L592-.L176
	.half	1
	.byte	108
	.word	0,0
.L605:
	.word	-1,.L176,.L700-.L176,.L592-.L176
	.half	1
	.byte	109
	.word	0,0
.L598:
	.word	-1,.L176,.L694-.L176,.L592-.L176
	.half	1
	.byte	82
	.word	.L701-.L176,.L39-.L176
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L596:
	.word	-1,.L176,0,.L693-.L176
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_LowerTpMultiCopyRxData')
	.sect	'.debug_loc'
.L636:
	.word	-1,.L182,.L739-.L182,.L628-.L182
	.half	1
	.byte	90
	.word	0,0
.L635:
	.word	-1,.L182,.L744-.L182,.L745-.L182
	.half	1
	.byte	95
	.word	0,0
.L637:
	.word	-1,.L182,.L740-.L182,.L628-.L182
	.half	1
	.byte	89
	.word	0,0
.L632:
	.word	-1,.L182,.L742-.L182,.L743-.L182
	.half	1
	.byte	84
	.word	0,0
.L181:
	.word	-1,.L182,0,.L628-.L182
	.half	2
	.byte	138,0
	.word	0,0
.L631:
	.word	-1,.L182,0,.L62-.L182
	.half	1
	.byte	102
	.word	.L738-.L182,.L628-.L182
	.half	1
	.byte	109
	.word	.L747-.L182,.L743-.L182
	.half	1
	.byte	101
	.word	0,0
.L634:
	.word	-1,.L182,.L741-.L182,.L628-.L182
	.half	1
	.byte	91
	.word	0,0
.L630:
	.word	-1,.L182,0,.L62-.L182
	.half	1
	.byte	101
	.word	.L737-.L182,.L628-.L182
	.half	1
	.byte	108
	.word	.L746-.L182,.L743-.L182
	.half	1
	.byte	100
	.word	0,0
.L629:
	.word	-1,.L182,0,.L62-.L182
	.half	1
	.byte	100
	.word	.L736-.L182,.L628-.L182
	.half	1
	.byte	111
	.word	0,0
.L633:
	.word	-1,.L182,.L743-.L182,.L64-.L182
	.half	1
	.byte	82
	.word	.L748-.L182,.L66-.L182
	.half	1
	.byte	82
	.word	.L749-.L182,.L628-.L182
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_LowerTpMultiRxIndication')
	.sect	'.debug_loc'
.L643:
	.word	-1,.L184,.L755-.L184,.L756-.L184
	.half	1
	.byte	95
	.word	0,0
.L641:
	.word	-1,.L184,.L754-.L184,.L72-.L184
	.half	1
	.byte	84
	.word	0,0
.L183:
	.word	-1,.L184,0,.L638-.L184
	.half	2
	.byte	138,0
	.word	0,0
.L642:
	.word	-1,.L184,.L752-.L184,.L753-.L184
	.half	1
	.byte	89
	.word	.L69-.L184,.L638-.L184
	.half	1
	.byte	89
	.word	0,0
.L639:
	.word	-1,.L184,0,.L70-.L184
	.half	1
	.byte	100
	.word	.L750-.L184,.L638-.L184
	.half	1
	.byte	111
	.word	0,0
.L640:
	.word	-1,.L184,0,.L70-.L184
	.half	1
	.byte	84
	.word	.L751-.L184,.L638-.L184
	.half	1
	.byte	88
	.word	.L757-.L184,.L72-.L184
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_LowerTpMultiStartOfReception')
	.sect	'.debug_loc'
.L626:
	.word	-1,.L180,.L722-.L180,.L617-.L180
	.half	1
	.byte	89
	.word	0,0
.L625:
	.word	-1,.L180,.L727-.L180,.L728-.L180
	.half	1
	.byte	95
	.word	0,0
.L627:
	.word	-1,.L180,.L732-.L180,.L57-.L180
	.half	1
	.byte	90
	.word	.L735-.L180,.L59-.L180
	.half	1
	.byte	90
	.word	0,0
.L623:
	.word	-1,.L180,.L725-.L180,.L726-.L180
	.half	1
	.byte	84
	.word	0,0
.L179:
	.word	-1,.L180,0,.L617-.L180
	.half	2
	.byte	138,0
	.word	0,0
.L620:
	.word	-1,.L180,0,.L55-.L180
	.half	1
	.byte	84
	.word	.L719-.L180,.L617-.L180
	.half	1
	.byte	88
	.word	.L730-.L180,.L726-.L180
	.half	1
	.byte	85
	.word	0,0
.L621:
	.word	-1,.L180,0,.L55-.L180
	.half	1
	.byte	102
	.word	.L720-.L180,.L617-.L180
	.half	1
	.byte	109
	.word	.L731-.L180,.L726-.L180
	.half	1
	.byte	101
	.word	0,0
.L624:
	.word	-1,.L180,.L723-.L180,.L724-.L180
	.half	1
	.byte	91
	.word	.L733-.L180,.L734-.L180
	.half	1
	.byte	91
	.word	0,0
.L619:
	.word	-1,.L180,0,.L55-.L180
	.half	1
	.byte	101
	.word	.L718-.L180,.L617-.L180
	.half	1
	.byte	108
	.word	.L729-.L180,.L726-.L180
	.half	1
	.byte	100
	.word	0,0
.L618:
	.word	-1,.L180,0,.L55-.L180
	.half	1
	.byte	100
	.word	.L717-.L180,.L617-.L180
	.half	1
	.byte	111
	.word	0,0
.L622:
	.word	-1,.L180,.L721-.L180,.L617-.L180
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_LowerTpRxIndication')
	.sect	'.debug_loc'
.L590:
	.word	-1,.L174,.L689-.L174,.L587-.L174
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L591:
	.word	-1,.L174,.L688-.L174,.L587-.L174
	.half	1
	.byte	84
	.word	0,0
.L588:
	.word	-1,.L174,0,.L688-.L174
	.half	1
	.byte	84
	.word	0,0
.L173:
	.word	-1,.L174,0,.L587-.L174
	.half	2
	.byte	138,0
	.word	0,0
.L589:
	.word	-1,.L174,0,.L587-.L174
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_LowerTpStartOfReception')
	.sect	'.debug_loc'
.L578:
	.word	-1,.L170,.L684-.L170,.L572-.L170
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L579:
	.word	-1,.L170,.L682-.L170,.L572-.L170
	.half	1
	.byte	84
	.word	0,0
.L573:
	.word	-1,.L170,0,.L682-.L170
	.half	1
	.byte	84
	.word	0,0
.L169:
	.word	-1,.L170,0,.L572-.L170
	.half	2
	.byte	138,0
	.word	0,0
.L575:
	.word	-1,.L170,0,.L572-.L170
	.half	1
	.byte	85
	.word	0,0
.L576:
	.word	-1,.L170,0,.L572-.L170
	.half	1
	.byte	101
	.word	0,0
.L574:
	.word	-1,.L170,0,.L572-.L170
	.half	1
	.byte	100
	.word	0,0
.L577:
	.word	-1,.L170,.L683-.L170,.L572-.L170
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_LowerTpTxConfirmation')
	.sect	'.debug_loc'
.L609:
	.word	-1,.L178,0,.L706-.L178
	.half	1
	.byte	85
	.word	.L707-.L178,.L50-.L178
	.half	1
	.byte	84
	.word	0,0
.L616:
	.word	-1,.L178,.L714-.L178,.L51-.L178
	.half	1
	.byte	90
	.word	.L715-.L178,.L716-.L178
	.half	1
	.byte	90
	.word	0,0
.L608:
	.word	-1,.L178,0,.L707-.L178
	.half	1
	.byte	84
	.word	0,0
.L177:
	.word	-1,.L178,0,.L607-.L178
	.half	2
	.byte	138,0
	.word	0,0
.L610:
	.word	-1,.L178,0,.L50-.L178
	.half	1
	.byte	86
	.word	.L706-.L178,.L50-.L178
	.half	1
	.byte	85
	.word	0,0
.L612:
	.word	-1,.L178,.L710-.L178,.L50-.L178
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L613:
	.word	-1,.L178,.L711-.L178,.L607-.L178
	.half	1
	.byte	89
	.word	0,0
.L611:
	.word	-1,.L178,.L708-.L178,.L709-.L178
	.half	1
	.byte	88
	.word	0,0
.L614:
	.word	-1,.L178,.L712-.L178,.L607-.L178
	.half	1
	.byte	108
	.word	0,0
.L615:
	.word	-1,.L178,.L713-.L178,.L607-.L178
	.half	1
	.byte	109
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_SoAdIfRxIndication')
	.sect	'.debug_loc'
.L519:
	.word	-1,.L202,0,.L792-.L202
	.half	1
	.byte	100
	.word	.L793-.L202,.L517-.L202
	.half	1
	.byte	101
	.word	.L104-.L202,.L517-.L202
	.half	1
	.byte	100
	.word	0,0
.L201:
	.word	-1,.L202,0,.L517-.L202
	.half	2
	.byte	138,0
	.word	0,0
.L518:
	.word	-1,.L202,0,.L517-.L202
	.half	1
	.byte	84
	.word	0,0
.L520:
	.word	-1,.L202,.L792-.L202,.L104-.L202
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_SoAdIfTriggerTransmit')
	.sect	'.debug_loc'
.L531:
	.word	-1,.L206,.L801-.L206,.L802-.L206
	.half	1
	.byte	95
	.word	0,0
.L530:
	.word	-1,.L206,.L800-.L206,.L111-.L206
	.half	5
	.byte	144,32,157,32,0
	.word	.L798-.L206,.L111-.L206
	.half	1
	.byte	84
	.word	0,0
.L528:
	.word	-1,.L206,0,.L525-.L206
	.half	1
	.byte	100
	.word	0,0
.L205:
	.word	-1,.L206,0,.L525-.L206
	.half	2
	.byte	138,0
	.word	0,0
.L526:
	.word	-1,.L206,0,.L798-.L206
	.half	1
	.byte	84
	.word	.L111-.L206,.L525-.L206
	.half	1
	.byte	84
	.word	0,0
.L529:
	.word	-1,.L206,.L799-.L206,.L525-.L206
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_SoAdIfTxConfirmation')
	.sect	'.debug_loc'
.L524:
	.word	-1,.L204,.L796-.L204,.L797-.L204
	.half	1
	.byte	95
	.word	0,0
.L523:
	.word	-1,.L204,.L795-.L204,.L107-.L204
	.half	5
	.byte	144,32,157,32,0
	.word	.L794-.L204,.L107-.L204
	.half	1
	.byte	84
	.word	0,0
.L203:
	.word	-1,.L204,0,.L521-.L204
	.half	2
	.byte	138,0
	.word	0,0
.L522:
	.word	-1,.L204,0,.L794-.L204
	.half	1
	.byte	84
	.word	.L107-.L204,.L521-.L204
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('PduR_UpTransmit')
	.sect	'.debug_loc'
.L571:
	.word	-1,.L168,.L681-.L168,.L564-.L168
	.half	1
	.byte	81
	.word	0,0
.L569:
	.word	-1,.L168,.L678-.L168,.L564-.L168
	.half	1
	.byte	84
	.word	0,0
.L570:
	.word	-1,.L168,.L680-.L168,.L564-.L168
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L566:
	.word	-1,.L168,0,.L678-.L168
	.half	1
	.byte	84
	.word	0,0
.L167:
	.word	-1,.L168,0,.L564-.L168
	.half	2
	.byte	138,0
	.word	0,0
.L567:
	.word	-1,.L168,0,.L564-.L168
	.half	1
	.byte	100
	.word	0,0
.L568:
	.word	-1,.L168,.L679-.L168,.L564-.L168
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L1372:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('PduR_LowerIfRxIndication')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L160,.L532-.L160
	.sdecl	'.debug_frame',debug,cluster('PduR_LowerIfTxConfirmation')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L162,.L539-.L162
	.sdecl	'.debug_frame',debug,cluster('PduR_LowerIfTriggerTransmit')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L164,.L548-.L164
	.sdecl	'.debug_frame',debug,cluster('PduR_LowerIfMultiRxIndication')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L166,.L558-.L166
	.sdecl	'.debug_frame',debug,cluster('PduR_UpTransmit')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L168,.L564-.L168
	.sdecl	'.debug_frame',debug,cluster('PduR_LowerTpStartOfReception')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L170,.L572-.L170
	.sdecl	'.debug_frame',debug,cluster('PduR_LowerTpCopyRxData')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L172,.L580-.L172
	.sdecl	'.debug_frame',debug,cluster('PduR_LowerTpRxIndication')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L174,.L587-.L174
	.sdecl	'.debug_frame',debug,cluster('PduR_LowerTpCopyTxData')
	.sect	'.debug_frame'
	.word	52
	.word	.L1372,.L176,.L592-.L176
	.byte	4
	.word	(.L690-.L176)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L36-.L690)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L592-.L36)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('PduR_LowerTpTxConfirmation')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L178,.L607-.L178
	.sdecl	'.debug_frame',debug,cluster('PduR_LowerTpMultiStartOfReception')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L180,.L617-.L180
	.sdecl	'.debug_frame',debug,cluster('PduR_LowerTpMultiCopyRxData')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L182,.L628-.L182
	.sdecl	'.debug_frame',debug,cluster('PduR_LowerTpMultiRxIndication')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L184,.L638-.L184
	.sdecl	'.debug_frame',debug,cluster('PduR_Init')
	.sect	'.debug_frame'
	.word	24
	.word	.L1372,.L186,.L415-.L186
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('PduR_GetConfigurationId')
	.sect	'.debug_frame'
	.word	24
	.word	.L1372,.L188,.L421-.L188
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('PduR_EnableRouting')
	.sect	'.debug_frame'
	.word	24
	.word	.L1372,.L190,.L423-.L190
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('PduR_DisableRouting')
	.sect	'.debug_frame'
	.word	24
	.word	.L1372,.L192,.L425-.L192
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('PduR_ComTransmit')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L194,.L428-.L194
	.sdecl	'.debug_frame',debug,cluster('PduR_DcmTransmit')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L196,.L437-.L196
	.sdecl	'.debug_frame',debug,cluster('PduR_CanIfRxIndication')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L198,.L445-.L198
	.sdecl	'.debug_frame',debug,cluster('PduR_CanIfTxConfirmation')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L200,.L450-.L200
	.sdecl	'.debug_frame',debug,cluster('PduR_SoAdIfRxIndication')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L202,.L517-.L202
	.sdecl	'.debug_frame',debug,cluster('PduR_SoAdIfTxConfirmation')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L204,.L521-.L204
	.sdecl	'.debug_frame',debug,cluster('PduR_SoAdIfTriggerTransmit')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L206,.L525-.L206
	.sdecl	'.debug_frame',debug,cluster('PduR_CanTpStartOfReception')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L208,.L455-.L208
	.sdecl	'.debug_frame',debug,cluster('PduR_CanTpCopyRxData')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L210,.L463-.L210
	.sdecl	'.debug_frame',debug,cluster('PduR_CanTpRxIndication')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L212,.L469-.L212
	.sdecl	'.debug_frame',debug,cluster('PduR_CanTpCopyTxData')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L214,.L473-.L214
	.sdecl	'.debug_frame',debug,cluster('PduR_CanTpTxConfirmation')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L216,.L482-.L216
	.sdecl	'.debug_frame',debug,cluster('PduR_DoIPTpStartOfReception')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L218,.L487-.L218
	.sdecl	'.debug_frame',debug,cluster('PduR_DoIPTpCopyRxData')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L220,.L494-.L220
	.sdecl	'.debug_frame',debug,cluster('PduR_DoIPTpRxIndication')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L222,.L500-.L222
	.sdecl	'.debug_frame',debug,cluster('PduR_DoIPTpCopyTxData')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L224,.L504-.L224
	.sdecl	'.debug_frame',debug,cluster('PduR_DoIPTpTxConfirmation')
	.sect	'.debug_frame'
	.word	12
	.word	.L1372,.L226,.L512-.L226

; ..\EAS\BSW\PduR\PduR.c	  7663  
; ..\EAS\BSW\PduR\PduR.c	  7664  #endif
; ..\EAS\BSW\PduR\PduR.c	  7665  
; ..\EAS\BSW\PduR\PduR.c	  7666  #if(STD_ON == PDUR_J1939TP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  7667  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  7668  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7669  * Function Name: PduR_J1939TpStartOfReception    SWS_PduR_00507
; ..\EAS\BSW\PduR\PduR.c	  7670  *
; ..\EAS\BSW\PduR\PduR.c	  7671  * Description:     This function is called by the transport protocol module to query
; ..\EAS\BSW\PduR\PduR.c	  7672  *                the transmit data of an I-PDU segment.
; ..\EAS\BSW\PduR\PduR.c	  7673  *
; ..\EAS\BSW\PduR\PduR.c	  7674  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7675  *                 TpSduLength  Total length of the PDU to be received.
; ..\EAS\BSW\PduR\PduR.c	  7676  *
; ..\EAS\BSW\PduR\PduR.c	  7677  * Outputs:         bufferSizePtr  Available receive buffer in the receiving module.
; ..\EAS\BSW\PduR\PduR.c	  7678  *                               This parameter will be used to compute the Block
; ..\EAS\BSW\PduR\PduR.c	  7679  *                               Size (BS) in the transport protocol module
; ..\EAS\BSW\PduR\PduR.c	  7680  *
; ..\EAS\BSW\PduR\PduR.c	  7681  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  7682  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7683  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  7684  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_J1939TpStartOfReception
; ..\EAS\BSW\PduR\PduR.c	  7685  (
; ..\EAS\BSW\PduR\PduR.c	  7686      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  7687      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  7688      PduLengthType TpSduLength,
; ..\EAS\BSW\PduR\PduR.c	  7689      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  7690  )
; ..\EAS\BSW\PduR\PduR.c	  7691  {
; ..\EAS\BSW\PduR\PduR.c	  7692      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  7693      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  7694  
; ..\EAS\BSW\PduR\PduR.c	  7695      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  7696      {
; ..\EAS\BSW\PduR\PduR.c	  7697          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  7698          PDUR_DET_REPORT_ERROR(PDUR_J1939TP_STARTOFRECEPTION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  7699      }
; ..\EAS\BSW\PduR\PduR.c	  7700      else if(id >= PDUR_GET_NUM_J1939TPRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  7701      {
; ..\EAS\BSW\PduR\PduR.c	  7702          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  7703          PDUR_DET_REPORT_ERROR(PDUR_J1939TP_STARTOFRECEPTION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  7704      }
; ..\EAS\BSW\PduR\PduR.c	  7705      else if(NULL_PTR == bufferSizePtr)
; ..\EAS\BSW\PduR\PduR.c	  7706      {
; ..\EAS\BSW\PduR\PduR.c	  7707          PDUR_DET_REPORT_ERROR(PDUR_J1939TP_STARTOFRECEPTION_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  7708      }
; ..\EAS\BSW\PduR\PduR.c	  7709      else
; ..\EAS\BSW\PduR\PduR.c	  7710      {
; ..\EAS\BSW\PduR\PduR.c	  7711  #if(PDUR_MAX_NUMOFJ1939TPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  7712          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7713          pRxPduInfo = &(PDUR_J1939TP_RXPDUINFO(id));
; ..\EAS\BSW\PduR\PduR.c	  7714          result = PduR_LowerTpMultiStartOfReception(pRxPduInfo, info, TpSduLength, bufferSizePtr);
; ..\EAS\BSW\PduR\PduR.c	  7715          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7716  #endif
; ..\EAS\BSW\PduR\PduR.c	  7717      }
; ..\EAS\BSW\PduR\PduR.c	  7718  
; ..\EAS\BSW\PduR\PduR.c	  7719      return result;
; ..\EAS\BSW\PduR\PduR.c	  7720  }
; ..\EAS\BSW\PduR\PduR.c	  7721  
; ..\EAS\BSW\PduR\PduR.c	  7722  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  7723  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7724  * Function Name: PduR_J1939TpCopyRxData    SWS_PduR_00512
; ..\EAS\BSW\PduR\PduR.c	  7725  *
; ..\EAS\BSW\PduR\PduR.c	  7726  * Description:     This function is called by the transport protocol module to query
; ..\EAS\BSW\PduR\PduR.c	  7727  *                the transmit data of an I-PDU segment.
; ..\EAS\BSW\PduR\PduR.c	  7728  *
; ..\EAS\BSW\PduR\PduR.c	  7729  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7730  *                 info Pointer to the buffer (SduDataPtr) and its length (SduLength)
; ..\EAS\BSW\PduR\PduR.c	  7731  *                     containing the data to be copied by PDU Router module in case
; ..\EAS\BSW\PduR\PduR.c	  7732  *                     of gateway or upper layer module in case of reception
; ..\EAS\BSW\PduR\PduR.c	  7733  *
; ..\EAS\BSW\PduR\PduR.c	  7734  * Outputs:         bufferSizePtr  Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  7735  *
; ..\EAS\BSW\PduR\PduR.c	  7736  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  7737  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7738  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  7739  BufReq_ReturnType PduR_J1939TpCopyRxData
; ..\EAS\BSW\PduR\PduR.c	  7740  (
; ..\EAS\BSW\PduR\PduR.c	  7741      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  7742      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  7743      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  7744  )
; ..\EAS\BSW\PduR\PduR.c	  7745  {
; ..\EAS\BSW\PduR\PduR.c	  7746      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  7747      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  7748  
; ..\EAS\BSW\PduR\PduR.c	  7749      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  7750      {
; ..\EAS\BSW\PduR\PduR.c	  7751          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  7752          PDUR_DET_REPORT_ERROR(PDUR_J1939TP_COPYRXDATA_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  7753      }
; ..\EAS\BSW\PduR\PduR.c	  7754      else if(id >= PDUR_GET_NUM_J1939TPRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  7755      {
; ..\EAS\BSW\PduR\PduR.c	  7756          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  7757          PDUR_DET_REPORT_ERROR(PDUR_J1939TP_COPYRXDATA_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  7758      }
; ..\EAS\BSW\PduR\PduR.c	  7759      else if(NULL_PTR == info)
; ..\EAS\BSW\PduR\PduR.c	  7760      {
; ..\EAS\BSW\PduR\PduR.c	  7761          PDUR_DET_REPORT_ERROR(PDUR_J1939TP_COPYRXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  7762      }
; ..\EAS\BSW\PduR\PduR.c	  7763      else if(NULL_PTR == bufferSizePtr)
; ..\EAS\BSW\PduR\PduR.c	  7764      {
; ..\EAS\BSW\PduR\PduR.c	  7765          PDUR_DET_REPORT_ERROR(PDUR_J1939TP_COPYRXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  7766      }
; ..\EAS\BSW\PduR\PduR.c	  7767      else
; ..\EAS\BSW\PduR\PduR.c	  7768      {
; ..\EAS\BSW\PduR\PduR.c	  7769  #if(PDUR_MAX_NUMOFJ1939TPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  7770          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7771          pRxPduInfo = &(PDUR_J1939TP_RXPDUINFO(id));
; ..\EAS\BSW\PduR\PduR.c	  7772          result = PduR_LowerTpMultiCopyRxData(pRxPduInfo, info, bufferSizePtr);
; ..\EAS\BSW\PduR\PduR.c	  7773          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7774  #endif
; ..\EAS\BSW\PduR\PduR.c	  7775      }
; ..\EAS\BSW\PduR\PduR.c	  7776  
; ..\EAS\BSW\PduR\PduR.c	  7777      return result;
; ..\EAS\BSW\PduR\PduR.c	  7778  }
; ..\EAS\BSW\PduR\PduR.c	  7779  
; ..\EAS\BSW\PduR\PduR.c	  7780  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  7781  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7782  * Function Name: PduR_J1939TpRxIndication    SWS_PduR_00375
; ..\EAS\BSW\PduR\PduR.c	  7783  *
; ..\EAS\BSW\PduR\PduR.c	  7784  * Description:     This function is called by the transport protocol module to query
; ..\EAS\BSW\PduR\PduR.c	  7785  *                the transmit data of an I-PDU segment.
; ..\EAS\BSW\PduR\PduR.c	  7786  *
; ..\EAS\BSW\PduR\PduR.c	  7787  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7788  *                 result Result of the reception.
; ..\EAS\BSW\PduR\PduR.c	  7789  *
; ..\EAS\BSW\PduR\PduR.c	  7790  * Outputs:         bufferSizePtr  Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  7791  *
; ..\EAS\BSW\PduR\PduR.c	  7792  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  7793  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7794  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  7795  FUNC(void, PDUR_CODE) PduR_J1939TpRxIndication
; ..\EAS\BSW\PduR\PduR.c	  7796  (
; ..\EAS\BSW\PduR\PduR.c	  7797      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  7798      NotifResultType result
; ..\EAS\BSW\PduR\PduR.c	  7799  )
; ..\EAS\BSW\PduR\PduR.c	  7800  {
; ..\EAS\BSW\PduR\PduR.c	  7801      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  7802  
; ..\EAS\BSW\PduR\PduR.c	  7803      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  7804      {
; ..\EAS\BSW\PduR\PduR.c	  7805          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  7806          PDUR_DET_REPORT_ERROR(PDUR_J1939TP_RXINDICATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  7807      }
; ..\EAS\BSW\PduR\PduR.c	  7808      else if(id >= PDUR_GET_NUM_J1939TPRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  7809      {
; ..\EAS\BSW\PduR\PduR.c	  7810          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  7811          PDUR_DET_REPORT_ERROR(PDUR_J1939TP_RXINDICATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  7812      }
; ..\EAS\BSW\PduR\PduR.c	  7813      else
; ..\EAS\BSW\PduR\PduR.c	  7814      {
; ..\EAS\BSW\PduR\PduR.c	  7815  #if(PDUR_MAX_NUMOFJ1939TPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  7816          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7817          pRxPduInfo = &(PDUR_J1939TP_RXPDUINFO(id));
; ..\EAS\BSW\PduR\PduR.c	  7818          PduR_LowerTpMultiRxIndication(pRxPduInfo, result);
; ..\EAS\BSW\PduR\PduR.c	  7819          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7820  #endif
; ..\EAS\BSW\PduR\PduR.c	  7821      }
; ..\EAS\BSW\PduR\PduR.c	  7822  }
; ..\EAS\BSW\PduR\PduR.c	  7823  
; ..\EAS\BSW\PduR\PduR.c	  7824  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  7825  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7826  * Function Name: PduR_J1939TpCopyTxData    SWS_PduR_00518
; ..\EAS\BSW\PduR\PduR.c	  7827  *
; ..\EAS\BSW\PduR\PduR.c	  7828  * Description:     This function is called by the transport protocol module to query
; ..\EAS\BSW\PduR\PduR.c	  7829  *                the transmit data of an I-PDU segment.
; ..\EAS\BSW\PduR\PduR.c	  7830  *
; ..\EAS\BSW\PduR\PduR.c	  7831  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7832  *                 info Provides destination buffer and the number of bytes to copy.
; ..\EAS\BSW\PduR\PduR.c	  7833  *                     In case of gateway the PDU Router module will copy, otherwise
; ..\EAS\BSW\PduR\PduR.c	  7834  *                     the source upper layer module will copy the data. If not enough
; ..\EAS\BSW\PduR\PduR.c	  7835  *                     transmit data is available, no data is copied. The transport
; ..\EAS\BSW\PduR\PduR.c	  7836  *                     protocol module will retry. A copy size of 0 can be used to
; ..\EAS\BSW\PduR\PduR.c	  7837  *                     indicate state changes in the retry parameter.
; ..\EAS\BSW\PduR\PduR.c	  7838  *                retry This parameter is used to retransmit data because problems
; ..\EAS\BSW\PduR\PduR.c	  7839  *                      during the last service call.
; ..\EAS\BSW\PduR\PduR.c	  7840  *
; ..\EAS\BSW\PduR\PduR.c	  7841  *
; ..\EAS\BSW\PduR\PduR.c	  7842  * Outputs:         availableDataPtr  Indicates the remaining number of bytes that are
; ..\EAS\BSW\PduR\PduR.c	  7843  *                                  available in the PduR Tx buffer. AvailableTxDataCntPtr
; ..\EAS\BSW\PduR\PduR.c	  7844  *                                  can be used by TP modules that support dynamic payload
; ..\EAS\BSW\PduR\PduR.c	  7845  *                                  lengths (e.g. Iso FrTp) to determine the size of the
; ..\EAS\BSW\PduR\PduR.c	  7846  *                                  following CFs.
; ..\EAS\BSW\PduR\PduR.c	  7847  *
; ..\EAS\BSW\PduR\PduR.c	  7848  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  7849  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7850  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  7851  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_J1939TpCopyTxData
; ..\EAS\BSW\PduR\PduR.c	  7852  (
; ..\EAS\BSW\PduR\PduR.c	  7853      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  7854      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  7855      P2VAR(RetryInfoType, AUTOMATIC, PDUR_APPL_DATA) retry,
; ..\EAS\BSW\PduR\PduR.c	  7856      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) availableDataPtr
; ..\EAS\BSW\PduR\PduR.c	  7857  )
; ..\EAS\BSW\PduR\PduR.c	  7858  {
; ..\EAS\BSW\PduR\PduR.c	  7859      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  7860      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  7861      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  7862  
; ..\EAS\BSW\PduR\PduR.c	  7863      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  7864      {
; ..\EAS\BSW\PduR\PduR.c	  7865          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  7866          PDUR_DET_REPORT_ERROR(PDUR_J1939TP_COPYTXDATA_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  7867      }
; ..\EAS\BSW\PduR\PduR.c	  7868      else if(id >= PDUR_GET_NUM_J1939TPTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  7869      {
; ..\EAS\BSW\PduR\PduR.c	  7870          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  7871          PDUR_DET_REPORT_ERROR(PDUR_J1939TP_COPYTXDATA_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  7872      }
; ..\EAS\BSW\PduR\PduR.c	  7873      else if(NULL_PTR == info)
; ..\EAS\BSW\PduR\PduR.c	  7874      {
; ..\EAS\BSW\PduR\PduR.c	  7875          PDUR_DET_REPORT_ERROR(PDUR_J1939TP_COPYTXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  7876      }
; ..\EAS\BSW\PduR\PduR.c	  7877      else if(NULL_PTR == availableDataPtr)
; ..\EAS\BSW\PduR\PduR.c	  7878      {
; ..\EAS\BSW\PduR\PduR.c	  7879          PDUR_DET_REPORT_ERROR(PDUR_J1939TP_COPYTXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  7880      }
; ..\EAS\BSW\PduR\PduR.c	  7881      else
; ..\EAS\BSW\PduR\PduR.c	  7882      {
; ..\EAS\BSW\PduR\PduR.c	  7883  #if(PDUR_MAX_NUMOFJ1939TPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  7884          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7885          PathId = PDUR_J1939TP_TXCONFPDUINFO(id).PathId;
; ..\EAS\BSW\PduR\PduR.c	  7886          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  7887          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  7888          {
; ..\EAS\BSW\PduR\PduR.c	  7889              result = PduR_LowerTpCopyTxData(PathId, PDUR_J1939TP_TXCONFPDUINFO(id).UpperPduId, info, retry, availableDataPtr);
; ..\EAS\BSW\PduR\PduR.c	  7890          }
; ..\EAS\BSW\PduR\PduR.c	  7891          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7892  #endif
; ..\EAS\BSW\PduR\PduR.c	  7893      }
; ..\EAS\BSW\PduR\PduR.c	  7894      return result;
; ..\EAS\BSW\PduR\PduR.c	  7895  }
; ..\EAS\BSW\PduR\PduR.c	  7896  
; ..\EAS\BSW\PduR\PduR.c	  7897  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  7898  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7899  * Function Name: PduR_J1939TpTxConfirmation    SWS_PduR_00381
; ..\EAS\BSW\PduR\PduR.c	  7900  *
; ..\EAS\BSW\PduR\PduR.c	  7901  * Description:     This function is called after the I-PDU has been transmitted on
; ..\EAS\BSW\PduR\PduR.c	  7902  *                 its network, the result indicates whether the transmission was
; ..\EAS\BSW\PduR\PduR.c	  7903  *                 successful or not
; ..\EAS\BSW\PduR\PduR.c	  7904  *
; ..\EAS\BSW\PduR\PduR.c	  7905  * Inputs:         id - Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7906  *                 result - Result of the transmission of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7907  *
; ..\EAS\BSW\PduR\PduR.c	  7908  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  7909  *
; ..\EAS\BSW\PduR\PduR.c	  7910  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  7911  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7912  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  7913  FUNC(void, PDUR_CODE) PduR_J1939TpTxConfirmation
; ..\EAS\BSW\PduR\PduR.c	  7914  (
; ..\EAS\BSW\PduR\PduR.c	  7915      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  7916      Std_ReturnType result
; ..\EAS\BSW\PduR\PduR.c	  7917  )
; ..\EAS\BSW\PduR\PduR.c	  7918  {
; ..\EAS\BSW\PduR\PduR.c	  7919      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  7920      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  7921  
; ..\EAS\BSW\PduR\PduR.c	  7922      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  7923      {
; ..\EAS\BSW\PduR\PduR.c	  7924          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  7925          PDUR_DET_REPORT_ERROR(PDUR_J1939TP_TXCONFIRMATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  7926      }
; ..\EAS\BSW\PduR\PduR.c	  7927      else if(id >= PDUR_GET_NUM_J1939TPTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  7928      {
; ..\EAS\BSW\PduR\PduR.c	  7929          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  7930          PDUR_DET_REPORT_ERROR(PDUR_J1939TP_TXCONFIRMATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  7931      }
; ..\EAS\BSW\PduR\PduR.c	  7932      else
; ..\EAS\BSW\PduR\PduR.c	  7933      {
; ..\EAS\BSW\PduR\PduR.c	  7934  #if(PDUR_MAX_NUMOFJ1939TPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  7935          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7936          PathId = PDUR_J1939TP_TXCONFPDUINFO(id).PathId;
; ..\EAS\BSW\PduR\PduR.c	  7937          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  7938          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  7939          {
; ..\EAS\BSW\PduR\PduR.c	  7940              PduR_LowerTpTxConfirmation(PathId, PDUR_J1939TP_TXCONFPDUINFO(id).UpperPduId, result);
; ..\EAS\BSW\PduR\PduR.c	  7941          }
; ..\EAS\BSW\PduR\PduR.c	  7942          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7943  #endif
; ..\EAS\BSW\PduR\PduR.c	  7944      }
; ..\EAS\BSW\PduR\PduR.c	  7945  }
; ..\EAS\BSW\PduR\PduR.c	  7946  
; ..\EAS\BSW\PduR\PduR.c	  7947  #endif
; ..\EAS\BSW\PduR\PduR.c	  7948  
; ..\EAS\BSW\PduR\PduR.c	  7949  #if(STD_ON == PDUR_CANNM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  7950  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  7951  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7952  * Function Name: PduR_CanNmRxIndication SWS_PduR_00362
; ..\EAS\BSW\PduR\PduR.c	  7953  *
; ..\EAS\BSW\PduR\PduR.c	  7954  * Description:     Indication of a received I-PDU from a lower layer communication module.
; ..\EAS\BSW\PduR\PduR.c	  7955  *
; ..\EAS\BSW\PduR\PduR.c	  7956  * Inputs:         RxPduId   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7957  *                 PduInfoPtr Contains the length (SduLength) of the received I-PDU
; ..\EAS\BSW\PduR\PduR.c	  7958  *                            and a pointer to a buffer (SduDataPtr) containing the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  7959  *
; ..\EAS\BSW\PduR\PduR.c	  7960  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  7961  *
; ..\EAS\BSW\PduR\PduR.c	  7962  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  7963  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  7964  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  7965  FUNC(void, PDUR_CODE) PduR_CanNmRxIndication
; ..\EAS\BSW\PduR\PduR.c	  7966  (
; ..\EAS\BSW\PduR\PduR.c	  7967      PduIdType RxPduId,
; ..\EAS\BSW\PduR\PduR.c	  7968      P2CONST(PduInfoType, AUTOMATIC, PDUR_CONST) PduInfoPtr
; ..\EAS\BSW\PduR\PduR.c	  7969  )
; ..\EAS\BSW\PduR\PduR.c	  7970  {
; ..\EAS\BSW\PduR\PduR.c	  7971  #if(PDUR_MAX_NUMOFCANNMRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  7972      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  7973  #endif
; ..\EAS\BSW\PduR\PduR.c	  7974  
; ..\EAS\BSW\PduR\PduR.c	  7975      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  7976      {
; ..\EAS\BSW\PduR\PduR.c	  7977          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  7978          PDUR_DET_REPORT_ERROR(PDUR_CANNM_RXINDICATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  7979      }
; ..\EAS\BSW\PduR\PduR.c	  7980      else if(RxPduId >= PDUR_GET_NUM_CANNMRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  7981      {
; ..\EAS\BSW\PduR\PduR.c	  7982          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  7983          PDUR_DET_REPORT_ERROR(PDUR_CANNM_RXINDICATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  7984      }
; ..\EAS\BSW\PduR\PduR.c	  7985      else if(NULL_PTR == PduInfoPtr)
; ..\EAS\BSW\PduR\PduR.c	  7986      {
; ..\EAS\BSW\PduR\PduR.c	  7987          PDUR_DET_REPORT_ERROR(PDUR_CANNM_RXINDICATION_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  7988      }
; ..\EAS\BSW\PduR\PduR.c	  7989      else
; ..\EAS\BSW\PduR\PduR.c	  7990      {
; ..\EAS\BSW\PduR\PduR.c	  7991  #if(PDUR_MAX_NUMOFCANNMRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  7992          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7993          pRxPduInfo = &(PDUR_CANNM_RXPDUINFO(RxPduId));
; ..\EAS\BSW\PduR\PduR.c	  7994          PduR_LowerIfMultiRxIndication(pRxPduInfo, PduInfoPtr);
; ..\EAS\BSW\PduR\PduR.c	  7995          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  7996  #endif
; ..\EAS\BSW\PduR\PduR.c	  7997      }
; ..\EAS\BSW\PduR\PduR.c	  7998  }
; ..\EAS\BSW\PduR\PduR.c	  7999  
; ..\EAS\BSW\PduR\PduR.c	  8000  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  8001  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8002  * Function Name: PduR_CanNmTxConfirmation    SWS_PduR_00365
; ..\EAS\BSW\PduR\PduR.c	  8003  *
; ..\EAS\BSW\PduR\PduR.c	  8004  * Description:     The lower layer communication module confirms the transmission
; ..\EAS\BSW\PduR\PduR.c	  8005  *                of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  8006  *
; ..\EAS\BSW\PduR\PduR.c	  8007  * Inputs:         TxPduId   ID of the I-PDU that has been transmitted.
; ..\EAS\BSW\PduR\PduR.c	  8008  *
; ..\EAS\BSW\PduR\PduR.c	  8009  * Outputs:         bufferSizePtr    Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  8010  *
; ..\EAS\BSW\PduR\PduR.c	  8011  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  8012  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8013  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  8014  FUNC(void, PDUR_CODE) PduR_CanNmTxConfirmation
; ..\EAS\BSW\PduR\PduR.c	  8015  (
; ..\EAS\BSW\PduR\PduR.c	  8016      PduIdType TxPduId
; ..\EAS\BSW\PduR\PduR.c	  8017  )
; ..\EAS\BSW\PduR\PduR.c	  8018  {
; ..\EAS\BSW\PduR\PduR.c	  8019      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  8020      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  8021  
; ..\EAS\BSW\PduR\PduR.c	  8022      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  8023      {
; ..\EAS\BSW\PduR\PduR.c	  8024          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  8025          PDUR_DET_REPORT_ERROR(PDUR_CANNM_TXCONFIRMATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  8026      }
; ..\EAS\BSW\PduR\PduR.c	  8027      else if(TxPduId >= PDUR_GET_NUM_CANNMTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  8028      {
; ..\EAS\BSW\PduR\PduR.c	  8029          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  8030          PDUR_DET_REPORT_ERROR(PDUR_CANNM_TXCONFIRMATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  8031      }
; ..\EAS\BSW\PduR\PduR.c	  8032      else
; ..\EAS\BSW\PduR\PduR.c	  8033      {
; ..\EAS\BSW\PduR\PduR.c	  8034  #if(PDUR_MAX_NUMOFCANNMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  8035          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8036          PathId = PDUR_CANNM_TXCONFPDUINFO(TxPduId).PathId;
; ..\EAS\BSW\PduR\PduR.c	  8037          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  8038          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  8039          {
; ..\EAS\BSW\PduR\PduR.c	  8040              PduR_LowerIfTxConfirmation(PathId, PDUR_CANNM_TXCONFPDUINFO(TxPduId).UpperPduId);
; ..\EAS\BSW\PduR\PduR.c	  8041          }
; ..\EAS\BSW\PduR\PduR.c	  8042          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8043  #endif
; ..\EAS\BSW\PduR\PduR.c	  8044      }
; ..\EAS\BSW\PduR\PduR.c	  8045  }
; ..\EAS\BSW\PduR\PduR.c	  8046  
; ..\EAS\BSW\PduR\PduR.c	  8047  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  8048  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8049  * Function Name: PduR_CanNmTriggerTransmit    SWS_PduR_00369
; ..\EAS\BSW\PduR\PduR.c	  8050  *
; ..\EAS\BSW\PduR\PduR.c	  8051  * Description:     The lower layer communication module requests the buffer of the
; ..\EAS\BSW\PduR\PduR.c	  8052  *                SDU for transmission from the upper layer module.
; ..\EAS\BSW\PduR\PduR.c	  8053  *
; ..\EAS\BSW\PduR\PduR.c	  8054  * Inputs:         TxPduId   ID of the SDU that is requested to be transmitted.
; ..\EAS\BSW\PduR\PduR.c	  8055  *                PduInfoPtr Contains a pointer to a buffer (SduDataPtr) to where
; ..\EAS\BSW\PduR\PduR.c	  8056  *                           the SDU shall be copied to. On return, the service will
; ..\EAS\BSW\PduR\PduR.c	  8057  *                           indicate the length of the copied SDU data in SduLength
; ..\EAS\BSW\PduR\PduR.c	  8058  *
; ..\EAS\BSW\PduR\PduR.c	  8059  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  8060  *
; ..\EAS\BSW\PduR\PduR.c	  8061  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  8062  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8063  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  8064  FUNC(Std_ReturnType, PDUR_CODE) PduR_CanNmTriggerTransmit
; ..\EAS\BSW\PduR\PduR.c	  8065  (
; ..\EAS\BSW\PduR\PduR.c	  8066      PduIdType TxPduId,
; ..\EAS\BSW\PduR\PduR.c	  8067      P2VAR(PduInfoType, AUTOMATIC, PDUR_CONST) PduInfoPtr
; ..\EAS\BSW\PduR\PduR.c	  8068  )
; ..\EAS\BSW\PduR\PduR.c	  8069  {
; ..\EAS\BSW\PduR\PduR.c	  8070      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  8071  #if(PDUR_MAX_NUMOFCANNMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  8072      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  8073      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  8074  #endif
; ..\EAS\BSW\PduR\PduR.c	  8075  
; ..\EAS\BSW\PduR\PduR.c	  8076      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  8077      {
; ..\EAS\BSW\PduR\PduR.c	  8078          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  8079          PDUR_DET_REPORT_ERROR(PDUR_CANNM_TRIGGERTRANSMIT_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  8080      }
; ..\EAS\BSW\PduR\PduR.c	  8081      else if(TxPduId >= PDUR_GET_NUM_CANNMTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  8082      {
; ..\EAS\BSW\PduR\PduR.c	  8083          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  8084          PDUR_DET_REPORT_ERROR(PDUR_CANNM_TRIGGERTRANSMIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  8085      }
; ..\EAS\BSW\PduR\PduR.c	  8086      else if(NULL_PTR == PduInfoPtr)
; ..\EAS\BSW\PduR\PduR.c	  8087      {
; ..\EAS\BSW\PduR\PduR.c	  8088          PDUR_DET_REPORT_ERROR(PDUR_CANNM_TRIGGERTRANSMIT_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  8089      }
; ..\EAS\BSW\PduR\PduR.c	  8090      else
; ..\EAS\BSW\PduR\PduR.c	  8091      {
; ..\EAS\BSW\PduR\PduR.c	  8092  #if(PDUR_MAX_NUMOFCANNMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  8093          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8094          PathId = PDUR_CANNM_TXCONFPDUINFO(TxPduId).PathId;
; ..\EAS\BSW\PduR\PduR.c	  8095          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  8096          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  8097          {
; ..\EAS\BSW\PduR\PduR.c	  8098              ret = PduR_LowerIfTriggerTransmit(PathId, PDUR_CANNM_TXCONFPDUINFO(TxPduId).UpperPduId, PduInfoPtr);
; ..\EAS\BSW\PduR\PduR.c	  8099          }
; ..\EAS\BSW\PduR\PduR.c	  8100          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8101  #endif
; ..\EAS\BSW\PduR\PduR.c	  8102      }
; ..\EAS\BSW\PduR\PduR.c	  8103  
; ..\EAS\BSW\PduR\PduR.c	  8104      return ret;
; ..\EAS\BSW\PduR\PduR.c	  8105  }
; ..\EAS\BSW\PduR\PduR.c	  8106  #endif
; ..\EAS\BSW\PduR\PduR.c	  8107  
; ..\EAS\BSW\PduR\PduR.c	  8108  #if(STD_ON == PDUR_UDPNM_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  8109  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  8110  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8111  * Function Name: PduR_UdpNmRxIndication SWS_PduR_00362
; ..\EAS\BSW\PduR\PduR.c	  8112  *
; ..\EAS\BSW\PduR\PduR.c	  8113  * Description:     Indication of a received I-PDU from a lower layer communication module.
; ..\EAS\BSW\PduR\PduR.c	  8114  *
; ..\EAS\BSW\PduR\PduR.c	  8115  * Inputs:         RxPduId   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  8116  *                 PduInfoPtr Contains the length (SduLength) of the received I-PDU
; ..\EAS\BSW\PduR\PduR.c	  8117  *                            and a pointer to a buffer (SduDataPtr) containing the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  8118  *
; ..\EAS\BSW\PduR\PduR.c	  8119  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  8120  *
; ..\EAS\BSW\PduR\PduR.c	  8121  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  8122  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8123  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  8124  FUNC(void, PDUR_CODE) PduR_UdpNmRxIndication
; ..\EAS\BSW\PduR\PduR.c	  8125  (
; ..\EAS\BSW\PduR\PduR.c	  8126      PduIdType RxPduId,
; ..\EAS\BSW\PduR\PduR.c	  8127      P2CONST(PduInfoType, AUTOMATIC, PDUR_CONST) PduInfoPtr
; ..\EAS\BSW\PduR\PduR.c	  8128  )
; ..\EAS\BSW\PduR\PduR.c	  8129  {
; ..\EAS\BSW\PduR\PduR.c	  8130  #if(PDUR_MAX_NUMOFUDPNMRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  8131      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  8132  #endif
; ..\EAS\BSW\PduR\PduR.c	  8133  
; ..\EAS\BSW\PduR\PduR.c	  8134      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  8135      {
; ..\EAS\BSW\PduR\PduR.c	  8136          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  8137          PDUR_DET_REPORT_ERROR(PDUR_UDPNM_RXINDICATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  8138      }
; ..\EAS\BSW\PduR\PduR.c	  8139      else if(RxPduId >= PDUR_GET_NUM_UDPNMRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  8140      {
; ..\EAS\BSW\PduR\PduR.c	  8141          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  8142          PDUR_DET_REPORT_ERROR(PDUR_UDPNM_RXINDICATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  8143      }
; ..\EAS\BSW\PduR\PduR.c	  8144      else if(NULL_PTR == PduInfoPtr)
; ..\EAS\BSW\PduR\PduR.c	  8145      {
; ..\EAS\BSW\PduR\PduR.c	  8146          PDUR_DET_REPORT_ERROR(PDUR_UDPNM_RXINDICATION_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  8147      }
; ..\EAS\BSW\PduR\PduR.c	  8148      else
; ..\EAS\BSW\PduR\PduR.c	  8149      {
; ..\EAS\BSW\PduR\PduR.c	  8150  #if(PDUR_MAX_NUMOFUDPNMRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  8151          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8152          pRxPduInfo = &(PDUR_UDPNM_RXPDUINFO(RxPduId));
; ..\EAS\BSW\PduR\PduR.c	  8153          PduR_LowerIfMultiRxIndication(pRxPduInfo, PduInfoPtr);
; ..\EAS\BSW\PduR\PduR.c	  8154          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8155  #endif
; ..\EAS\BSW\PduR\PduR.c	  8156      }
; ..\EAS\BSW\PduR\PduR.c	  8157  }
; ..\EAS\BSW\PduR\PduR.c	  8158  
; ..\EAS\BSW\PduR\PduR.c	  8159  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  8160  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8161  * Function Name: PduR_UdpNmTxConfirmation    SWS_PduR_00365
; ..\EAS\BSW\PduR\PduR.c	  8162  *
; ..\EAS\BSW\PduR\PduR.c	  8163  * Description:     The lower layer communication module confirms the transmission
; ..\EAS\BSW\PduR\PduR.c	  8164  *                of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  8165  *
; ..\EAS\BSW\PduR\PduR.c	  8166  * Inputs:         TxPduId   ID of the I-PDU that has been transmitted.
; ..\EAS\BSW\PduR\PduR.c	  8167  *
; ..\EAS\BSW\PduR\PduR.c	  8168  * Outputs:         bufferSizePtr    Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  8169  *
; ..\EAS\BSW\PduR\PduR.c	  8170  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  8171  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8172  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  8173  FUNC(void, PDUR_CODE) PduR_UdpNmTxConfirmation
; ..\EAS\BSW\PduR\PduR.c	  8174  (
; ..\EAS\BSW\PduR\PduR.c	  8175      PduIdType TxPduId
; ..\EAS\BSW\PduR\PduR.c	  8176  )
; ..\EAS\BSW\PduR\PduR.c	  8177  {
; ..\EAS\BSW\PduR\PduR.c	  8178      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  8179      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  8180  
; ..\EAS\BSW\PduR\PduR.c	  8181      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  8182      {
; ..\EAS\BSW\PduR\PduR.c	  8183          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  8184          PDUR_DET_REPORT_ERROR(PDUR_UDPNM_TXCONFIRMATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  8185      }
; ..\EAS\BSW\PduR\PduR.c	  8186      else if(TxPduId >= PDUR_GET_NUM_UDPNMTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  8187      {
; ..\EAS\BSW\PduR\PduR.c	  8188          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  8189          PDUR_DET_REPORT_ERROR(PDUR_UDPNM_TXCONFIRMATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  8190      }
; ..\EAS\BSW\PduR\PduR.c	  8191      else
; ..\EAS\BSW\PduR\PduR.c	  8192      {
; ..\EAS\BSW\PduR\PduR.c	  8193  #if(PDUR_MAX_NUMOFUDPNMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  8194          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8195          PathId = PDUR_UDPNM_TXCONFPDUINFO(TxPduId).PathId;
; ..\EAS\BSW\PduR\PduR.c	  8196          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  8197          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  8198          {
; ..\EAS\BSW\PduR\PduR.c	  8199              PduR_LowerIfTxConfirmation(PathId, PDUR_UDPNM_TXCONFPDUINFO(TxPduId).UpperPduId);
; ..\EAS\BSW\PduR\PduR.c	  8200          }
; ..\EAS\BSW\PduR\PduR.c	  8201          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8202  #endif
; ..\EAS\BSW\PduR\PduR.c	  8203      }
; ..\EAS\BSW\PduR\PduR.c	  8204  }
; ..\EAS\BSW\PduR\PduR.c	  8205  
; ..\EAS\BSW\PduR\PduR.c	  8206  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  8207  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8208  * Function Name: PduR_UdpNmTriggerTransmit    SWS_PduR_00369
; ..\EAS\BSW\PduR\PduR.c	  8209  *
; ..\EAS\BSW\PduR\PduR.c	  8210  * Description:     The lower layer communication module requests the buffer of the
; ..\EAS\BSW\PduR\PduR.c	  8211  *                SDU for transmission from the upper layer module.
; ..\EAS\BSW\PduR\PduR.c	  8212  *
; ..\EAS\BSW\PduR\PduR.c	  8213  * Inputs:         TxPduId   ID of the SDU that is requested to be transmitted.
; ..\EAS\BSW\PduR\PduR.c	  8214  *                PduInfoPtr Contains a pointer to a buffer (SduDataPtr) to where
; ..\EAS\BSW\PduR\PduR.c	  8215  *                           the SDU shall be copied to. On return, the service will
; ..\EAS\BSW\PduR\PduR.c	  8216  *                           indicate the length of the copied SDU data in SduLength
; ..\EAS\BSW\PduR\PduR.c	  8217  *
; ..\EAS\BSW\PduR\PduR.c	  8218  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  8219  *
; ..\EAS\BSW\PduR\PduR.c	  8220  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  8221  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8222  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  8223  FUNC(Std_ReturnType, PDUR_CODE) PduR_UdpNmTriggerTransmit
; ..\EAS\BSW\PduR\PduR.c	  8224  (
; ..\EAS\BSW\PduR\PduR.c	  8225      PduIdType TxPduId,
; ..\EAS\BSW\PduR\PduR.c	  8226      P2VAR(PduInfoType, AUTOMATIC, PDUR_CONST) PduInfoPtr
; ..\EAS\BSW\PduR\PduR.c	  8227  )
; ..\EAS\BSW\PduR\PduR.c	  8228  {
; ..\EAS\BSW\PduR\PduR.c	  8229      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  8230  #if(PDUR_MAX_NUMOFUDPNMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  8231      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  8232      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  8233  #endif
; ..\EAS\BSW\PduR\PduR.c	  8234  
; ..\EAS\BSW\PduR\PduR.c	  8235      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  8236      {
; ..\EAS\BSW\PduR\PduR.c	  8237          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  8238          PDUR_DET_REPORT_ERROR(PDUR_UDPNM_TRIGGERTRANSMIT_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  8239      }
; ..\EAS\BSW\PduR\PduR.c	  8240      else if(TxPduId >= PDUR_GET_NUM_UDPNMTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  8241      {
; ..\EAS\BSW\PduR\PduR.c	  8242          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  8243          PDUR_DET_REPORT_ERROR(PDUR_UDPNM_TRIGGERTRANSMIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  8244      }
; ..\EAS\BSW\PduR\PduR.c	  8245      else if(NULL_PTR == PduInfoPtr)
; ..\EAS\BSW\PduR\PduR.c	  8246      {
; ..\EAS\BSW\PduR\PduR.c	  8247          PDUR_DET_REPORT_ERROR(PDUR_UDPNM_TRIGGERTRANSMIT_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  8248      }
; ..\EAS\BSW\PduR\PduR.c	  8249      else
; ..\EAS\BSW\PduR\PduR.c	  8250      {
; ..\EAS\BSW\PduR\PduR.c	  8251  #if(PDUR_MAX_NUMOFUDPNMTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  8252          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8253          PathId = PDUR_UDPNM_TXCONFPDUINFO(TxPduId).PathId;
; ..\EAS\BSW\PduR\PduR.c	  8254          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  8255          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  8256          {
; ..\EAS\BSW\PduR\PduR.c	  8257              ret = PduR_LowerIfTriggerTransmit(PathId, PDUR_UDPNM_TXCONFPDUINFO(TxPduId).UpperPduId, PduInfoPtr);
; ..\EAS\BSW\PduR\PduR.c	  8258          }
; ..\EAS\BSW\PduR\PduR.c	  8259          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8260  #endif
; ..\EAS\BSW\PduR\PduR.c	  8261      }
; ..\EAS\BSW\PduR\PduR.c	  8262  
; ..\EAS\BSW\PduR\PduR.c	  8263      return ret;
; ..\EAS\BSW\PduR\PduR.c	  8264  }
; ..\EAS\BSW\PduR\PduR.c	  8265  #endif
; ..\EAS\BSW\PduR\PduR.c	  8266  
; ..\EAS\BSW\PduR\PduR.c	  8267  
; ..\EAS\BSW\PduR\PduR.c	  8268  #if(STD_ON == PDUR_SECOC_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  8269  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  8270  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8271  * Function Name: PduR_IpduMTransmit
; ..\EAS\BSW\PduR\PduR.c	  8272  *
; ..\EAS\BSW\PduR\PduR.c	  8273  * Description:     Requests transmission of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  8274  *
; ..\EAS\BSW\PduR\PduR.c	  8275  * Inputs:         id   Identification of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  8276  *                info Length and pointer to the buffer of the I-PDU
; ..\EAS\BSW\PduR\PduR.c	  8277  *
; ..\EAS\BSW\PduR\PduR.c	  8278  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  8279  *
; ..\EAS\BSW\PduR\PduR.c	  8280  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  8281  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8282  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  8283  FUNC(Std_ReturnType, PDUR_CODE) PduR_SecOCTransmit
; ..\EAS\BSW\PduR\PduR.c	  8284  (
; ..\EAS\BSW\PduR\PduR.c	  8285      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  8286      P2CONST(PduInfoType, AUTOMATIC, PDUR_CONST) info
; ..\EAS\BSW\PduR\PduR.c	  8287  )
; ..\EAS\BSW\PduR\PduR.c	  8288  {
; ..\EAS\BSW\PduR\PduR.c	  8289      PduR_RoutingPathIdType i;
; ..\EAS\BSW\PduR\PduR.c	  8290      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  8291      boolean Flag = FALSE;
; ..\EAS\BSW\PduR\PduR.c	  8292      PduR_MulticastMaskType mask;
; ..\EAS\BSW\PduR\PduR.c	  8293      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  8294  
; ..\EAS\BSW\PduR\PduR.c	  8295      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  8296      {
; ..\EAS\BSW\PduR\PduR.c	  8297          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  8298          PDUR_DET_REPORT_ERROR(PDUR_SECOC_TRANSMIT_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  8299      }
; ..\EAS\BSW\PduR\PduR.c	  8300      else if(id >= PDUR_GET_NUM_SECOCTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  8301      {
; ..\EAS\BSW\PduR\PduR.c	  8302          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  8303          PDUR_DET_REPORT_ERROR(PDUR_SECOC_TRANSMIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  8304      }
; ..\EAS\BSW\PduR\PduR.c	  8305      else if(NULL_PTR == info)
; ..\EAS\BSW\PduR\PduR.c	  8306      {
; ..\EAS\BSW\PduR\PduR.c	  8307          PDUR_DET_REPORT_ERROR(PDUR_SECOC_TRANSMIT_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  8308      }
; ..\EAS\BSW\PduR\PduR.c	  8309      else
; ..\EAS\BSW\PduR\PduR.c	  8310      {
; ..\EAS\BSW\PduR\PduR.c	  8311  #if(PDUR_MAX_NUMOFSECOCTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  8312          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8313  
; ..\EAS\BSW\PduR\PduR.c	  8314          SecOCTxErrorMask[id] = (PduR_MulticastMaskType)0;
; ..\EAS\BSW\PduR\PduR.c	  8315          SecOCTxConfMask[id] = (PduR_MulticastMaskType)0;
; ..\EAS\BSW\PduR\PduR.c	  8316          for(i = (PduR_RoutingPathIdType)0; i < PDUR_SECOC_TXPDUINFO(id).NumPaths; i++)
; ..\EAS\BSW\PduR\PduR.c	  8317          {
; ..\EAS\BSW\PduR\PduR.c	  8318              PathId = PDUR_SECOC_TXPDUINFO(id).PathIdx[i];
; ..\EAS\BSW\PduR\PduR.c	  8319              ret = PduR_UpTransmit(PathId, info);
; ..\EAS\BSW\PduR\PduR.c	  8320              if(ret == E_OK)
; ..\EAS\BSW\PduR\PduR.c	  8321              {
; ..\EAS\BSW\PduR\PduR.c	  8322                  Flag = TRUE;
; ..\EAS\BSW\PduR\PduR.c	  8323              }
; ..\EAS\BSW\PduR\PduR.c	  8324              else
; ..\EAS\BSW\PduR\PduR.c	  8325              {
; ..\EAS\BSW\PduR\PduR.c	  8326                  /*Set mask as if the wrong path has finished*/
; ..\EAS\BSW\PduR\PduR.c	  8327                  mask = PDUR_ROUTINGPATHINFO(PathId).ConfMask;
; ..\EAS\BSW\PduR\PduR.c	  8328                  SecOCTxErrorMask[id] |= mask;
; ..\EAS\BSW\PduR\PduR.c	  8329                  SecOCTxConfMask[id] |= mask;
; ..\EAS\BSW\PduR\PduR.c	  8330              }
; ..\EAS\BSW\PduR\PduR.c	  8331          }
; ..\EAS\BSW\PduR\PduR.c	  8332  
; ..\EAS\BSW\PduR\PduR.c	  8333          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8334  #endif
; ..\EAS\BSW\PduR\PduR.c	  8335      }
; ..\EAS\BSW\PduR\PduR.c	  8336  
; ..\EAS\BSW\PduR\PduR.c	  8337      /*SWS_PduR_00218*/
; ..\EAS\BSW\PduR\PduR.c	  8338      if(TRUE == Flag)
; ..\EAS\BSW\PduR\PduR.c	  8339      {
; ..\EAS\BSW\PduR\PduR.c	  8340          ret = E_OK;
; ..\EAS\BSW\PduR\PduR.c	  8341      }
; ..\EAS\BSW\PduR\PduR.c	  8342      else
; ..\EAS\BSW\PduR\PduR.c	  8343      {
; ..\EAS\BSW\PduR\PduR.c	  8344          ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  8345      }
; ..\EAS\BSW\PduR\PduR.c	  8346      return ret;
; ..\EAS\BSW\PduR\PduR.c	  8347  }
; ..\EAS\BSW\PduR\PduR.c	  8348  
; ..\EAS\BSW\PduR\PduR.c	  8349  #if(STD_ON == PDUR_SECOCTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  8350  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  8351  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8352  * Function Name: PduR_J1939TpStartOfReception    SWS_PduR_00507
; ..\EAS\BSW\PduR\PduR.c	  8353  *
; ..\EAS\BSW\PduR\PduR.c	  8354  * Description:     This function is called by the transport protocol module to query
; ..\EAS\BSW\PduR\PduR.c	  8355  *                the transmit data of an I-PDU segment.
; ..\EAS\BSW\PduR\PduR.c	  8356  *
; ..\EAS\BSW\PduR\PduR.c	  8357  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  8358  *                 TpSduLength  Total length of the PDU to be received.
; ..\EAS\BSW\PduR\PduR.c	  8359  *
; ..\EAS\BSW\PduR\PduR.c	  8360  * Outputs:         bufferSizePtr  Available receive buffer in the receiving module.
; ..\EAS\BSW\PduR\PduR.c	  8361  *                               This parameter will be used to compute the Block
; ..\EAS\BSW\PduR\PduR.c	  8362  *                               Size (BS) in the transport protocol module
; ..\EAS\BSW\PduR\PduR.c	  8363  *
; ..\EAS\BSW\PduR\PduR.c	  8364  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  8365  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8366  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  8367  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_SecOCStartOfReception
; ..\EAS\BSW\PduR\PduR.c	  8368  (
; ..\EAS\BSW\PduR\PduR.c	  8369      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  8370      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  8371      PduLengthType TpSduLength,
; ..\EAS\BSW\PduR\PduR.c	  8372      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  8373  )
; ..\EAS\BSW\PduR\PduR.c	  8374  {
; ..\EAS\BSW\PduR\PduR.c	  8375      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  8376      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  8377  
; ..\EAS\BSW\PduR\PduR.c	  8378      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  8379      {
; ..\EAS\BSW\PduR\PduR.c	  8380          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  8381          PDUR_DET_REPORT_ERROR(PDUR_SECOCTP_STARTOFRECEPTION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  8382      }
; ..\EAS\BSW\PduR\PduR.c	  8383      else if(id >= PDUR_GET_NUM_SECOCTPRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  8384      {
; ..\EAS\BSW\PduR\PduR.c	  8385          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  8386          PDUR_DET_REPORT_ERROR(PDUR_SECOCTP_STARTOFRECEPTION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  8387      }
; ..\EAS\BSW\PduR\PduR.c	  8388      else if(NULL_PTR == bufferSizePtr)
; ..\EAS\BSW\PduR\PduR.c	  8389      {
; ..\EAS\BSW\PduR\PduR.c	  8390          PDUR_DET_REPORT_ERROR(PDUR_SECOCTP_STARTOFRECEPTION_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  8391      }
; ..\EAS\BSW\PduR\PduR.c	  8392      else
; ..\EAS\BSW\PduR\PduR.c	  8393      {
; ..\EAS\BSW\PduR\PduR.c	  8394  #if(PDUR_MAX_NUMOFSECOCTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  8395          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8396          pRxPduInfo = &(PDUR_SECOCTP_RXPDUINFO(id));
; ..\EAS\BSW\PduR\PduR.c	  8397          result = PduR_LowerTpMultiStartOfReception(pRxPduInfo, info, TpSduLength, bufferSizePtr);
; ..\EAS\BSW\PduR\PduR.c	  8398          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8399  #endif
; ..\EAS\BSW\PduR\PduR.c	  8400      }
; ..\EAS\BSW\PduR\PduR.c	  8401  
; ..\EAS\BSW\PduR\PduR.c	  8402      return result;
; ..\EAS\BSW\PduR\PduR.c	  8403  }
; ..\EAS\BSW\PduR\PduR.c	  8404  #endif
; ..\EAS\BSW\PduR\PduR.c	  8405  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  8406  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8407  * Function Name: PduR_ComCancelTransmit     SWS_PduR_00769
; ..\EAS\BSW\PduR\PduR.c	  8408  *
; ..\EAS\BSW\PduR\PduR.c	  8409  * Description:     Request for cancellation of an ongoing transmission of an I-Pdu
; ..\EAS\BSW\PduR\PduR.c	  8410  *                in transport protocol or communication interface.
; ..\EAS\BSW\PduR\PduR.c	  8411  *
; ..\EAS\BSW\PduR\PduR.c	  8412  * Inputs:         id   Identification of the I-PDU to be cancelled.
; ..\EAS\BSW\PduR\PduR.c	  8413  *
; ..\EAS\BSW\PduR\PduR.c	  8414  *
; ..\EAS\BSW\PduR\PduR.c	  8415  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  8416  *
; ..\EAS\BSW\PduR\PduR.c	  8417  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  8418  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8419  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  8420  FUNC(Std_ReturnType, PDUR_CODE) PduR_SecOCCancelTransmit
; ..\EAS\BSW\PduR\PduR.c	  8421  (
; ..\EAS\BSW\PduR\PduR.c	  8422      PduIdType id
; ..\EAS\BSW\PduR\PduR.c	  8423  )
; ..\EAS\BSW\PduR\PduR.c	  8424  {
; ..\EAS\BSW\PduR\PduR.c	  8425      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  8426      PduR_RoutingPathIdType i;
; ..\EAS\BSW\PduR\PduR.c	  8427      boolean ErrorFlag = FALSE;
; ..\EAS\BSW\PduR\PduR.c	  8428  
; ..\EAS\BSW\PduR\PduR.c	  8429      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  8430      {
; ..\EAS\BSW\PduR\PduR.c	  8431          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  8432          PDUR_DET_REPORT_ERROR(PDUR_SECOC_CANCELTRANSMIT_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  8433      }
; ..\EAS\BSW\PduR\PduR.c	  8434      else if(id >= PDUR_GET_NUM_SECOCTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  8435      {
; ..\EAS\BSW\PduR\PduR.c	  8436          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  8437          PDUR_DET_REPORT_ERROR(PDUR_SECOC_CANCELTRANSMIT_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  8438      }
; ..\EAS\BSW\PduR\PduR.c	  8439      else
; ..\EAS\BSW\PduR\PduR.c	  8440      {
; ..\EAS\BSW\PduR\PduR.c	  8441  #if(PDUR_MAX_NUMOFSECOCTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  8442          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8443          for(i = 0; i < PDUR_SECOC_TXPDUINFO(id).NumPaths; i++)
; ..\EAS\BSW\PduR\PduR.c	  8444          {
; ..\EAS\BSW\PduR\PduR.c	  8445              ret = PduR_UpCancelTransmit(PDUR_SECOC_TXPDUINFO(id).PathIdx[i]);
; ..\EAS\BSW\PduR\PduR.c	  8446              if(ret != E_OK)
; ..\EAS\BSW\PduR\PduR.c	  8447              {
; ..\EAS\BSW\PduR\PduR.c	  8448                  ErrorFlag = TRUE;
; ..\EAS\BSW\PduR\PduR.c	  8449              }
; ..\EAS\BSW\PduR\PduR.c	  8450  
; ..\EAS\BSW\PduR\PduR.c	  8451          }
; ..\EAS\BSW\PduR\PduR.c	  8452          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8453  #endif
; ..\EAS\BSW\PduR\PduR.c	  8454      }
; ..\EAS\BSW\PduR\PduR.c	  8455  
; ..\EAS\BSW\PduR\PduR.c	  8456      /*SWS_PduR_00701*/
; ..\EAS\BSW\PduR\PduR.c	  8457      if(ErrorFlag)
; ..\EAS\BSW\PduR\PduR.c	  8458      {
; ..\EAS\BSW\PduR\PduR.c	  8459          ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  8460      }
; ..\EAS\BSW\PduR\PduR.c	  8461      else
; ..\EAS\BSW\PduR\PduR.c	  8462      {
; ..\EAS\BSW\PduR\PduR.c	  8463          ret = E_OK;
; ..\EAS\BSW\PduR\PduR.c	  8464      }
; ..\EAS\BSW\PduR\PduR.c	  8465      return ret;
; ..\EAS\BSW\PduR\PduR.c	  8466  }
; ..\EAS\BSW\PduR\PduR.c	  8467  
; ..\EAS\BSW\PduR\PduR.c	  8468  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  8469  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8470  * Function Name: PduR_DcmCancelReceive   SWS_PduR_00767
; ..\EAS\BSW\PduR\PduR.c	  8471  *
; ..\EAS\BSW\PduR\PduR.c	  8472  * Description:     Requests for cancellation of an ongoing reception of an I-Pdu
; ..\EAS\BSW\PduR\PduR.c	  8473  *                in transport protocol
; ..\EAS\BSW\PduR\PduR.c	  8474  *
; ..\EAS\BSW\PduR\PduR.c	  8475  * Inputs:         id   Identification of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  8476  *
; ..\EAS\BSW\PduR\PduR.c	  8477  *
; ..\EAS\BSW\PduR\PduR.c	  8478  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  8479  *
; ..\EAS\BSW\PduR\PduR.c	  8480  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  8481  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8482  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  8483  FUNC(Std_ReturnType, PDUR_CODE) PduR_SecOCCancelReceive
; ..\EAS\BSW\PduR\PduR.c	  8484  (
; ..\EAS\BSW\PduR\PduR.c	  8485      PduIdType id
; ..\EAS\BSW\PduR\PduR.c	  8486  )
; ..\EAS\BSW\PduR\PduR.c	  8487  {
; ..\EAS\BSW\PduR\PduR.c	  8488      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  8489  
; ..\EAS\BSW\PduR\PduR.c	  8490      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  8491      {
; ..\EAS\BSW\PduR\PduR.c	  8492          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  8493          PDUR_DET_REPORT_ERROR(PDUR_SECOC_CANCELRECEIVE_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  8494      }
; ..\EAS\BSW\PduR\PduR.c	  8495      else if(id >= PDUR_GET_NUM_SECOCRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  8496      {
; ..\EAS\BSW\PduR\PduR.c	  8497          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  8498          PDUR_DET_REPORT_ERROR(PDUR_SECOC_CANCELRECEIVE_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  8499      }
; ..\EAS\BSW\PduR\PduR.c	  8500      else
; ..\EAS\BSW\PduR\PduR.c	  8501      {
; ..\EAS\BSW\PduR\PduR.c	  8502          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8503          /*SWS_PduR_00736*/
; ..\EAS\BSW\PduR\PduR.c	  8504          ret = PduR_UpCancelReceive(PDUR_SECOC_CANCELRXPDUINFO(id).PathId);
; ..\EAS\BSW\PduR\PduR.c	  8505          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8506      }
; ..\EAS\BSW\PduR\PduR.c	  8507      return ret;
; ..\EAS\BSW\PduR\PduR.c	  8508  }
; ..\EAS\BSW\PduR\PduR.c	  8509  #endif
; ..\EAS\BSW\PduR\PduR.c	  8510  
; ..\EAS\BSW\PduR\PduR.c	  8511  #if(STD_ON == PDUR_SECOCTP_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  8512  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  8513  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8514  * Function Name: PduR_J1939TpCopyTxData    SWS_PduR_00518
; ..\EAS\BSW\PduR\PduR.c	  8515  *
; ..\EAS\BSW\PduR\PduR.c	  8516  * Description:     This function is called by the transport protocol module to query
; ..\EAS\BSW\PduR\PduR.c	  8517  *                the transmit data of an I-PDU segment.
; ..\EAS\BSW\PduR\PduR.c	  8518  *
; ..\EAS\BSW\PduR\PduR.c	  8519  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  8520  *                 info Provides destination buffer and the number of bytes to copy.
; ..\EAS\BSW\PduR\PduR.c	  8521  *                     In case of gateway the PDU Router module will copy, otherwise
; ..\EAS\BSW\PduR\PduR.c	  8522  *                     the source upper layer module will copy the data. If not enough
; ..\EAS\BSW\PduR\PduR.c	  8523  *                     transmit data is available, no data is copied. The transport
; ..\EAS\BSW\PduR\PduR.c	  8524  *                     protocol module will retry. A copy size of 0 can be used to
; ..\EAS\BSW\PduR\PduR.c	  8525  *                     indicate state changes in the retry parameter.
; ..\EAS\BSW\PduR\PduR.c	  8526  *                retry This parameter is used to retransmit data because problems
; ..\EAS\BSW\PduR\PduR.c	  8527  *                      during the last service call.
; ..\EAS\BSW\PduR\PduR.c	  8528  *
; ..\EAS\BSW\PduR\PduR.c	  8529  *
; ..\EAS\BSW\PduR\PduR.c	  8530  * Outputs:         availableDataPtr  Indicates the remaining number of bytes that are
; ..\EAS\BSW\PduR\PduR.c	  8531  *                                  available in the PduR Tx buffer. AvailableTxDataCntPtr
; ..\EAS\BSW\PduR\PduR.c	  8532  *                                  can be used by TP modules that support dynamic payload
; ..\EAS\BSW\PduR\PduR.c	  8533  *                                  lengths (e.g. Iso FrTp) to determine the size of the
; ..\EAS\BSW\PduR\PduR.c	  8534  *                                  following CFs.
; ..\EAS\BSW\PduR\PduR.c	  8535  *
; ..\EAS\BSW\PduR\PduR.c	  8536  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  8537  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8538  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  8539  
; ..\EAS\BSW\PduR\PduR.c	  8540  FUNC(BufReq_ReturnType, PDUR_CODE) PduR_SecOCTpCopyTxData
; ..\EAS\BSW\PduR\PduR.c	  8541  (
; ..\EAS\BSW\PduR\PduR.c	  8542      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  8543      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  8544      P2VAR(RetryInfoType, AUTOMATIC, PDUR_APPL_DATA) retry,
; ..\EAS\BSW\PduR\PduR.c	  8545      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) availableDataPtr
; ..\EAS\BSW\PduR\PduR.c	  8546  )
; ..\EAS\BSW\PduR\PduR.c	  8547  {
; ..\EAS\BSW\PduR\PduR.c	  8548      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  8549      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  8550      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  8551  
; ..\EAS\BSW\PduR\PduR.c	  8552      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  8553      {
; ..\EAS\BSW\PduR\PduR.c	  8554          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  8555          PDUR_DET_REPORT_ERROR(PDUR_SECOCTP_COPYTXDATA_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  8556      }
; ..\EAS\BSW\PduR\PduR.c	  8557      else if(id >= PDUR_GET_NUM_SECOCTPTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  8558      {
; ..\EAS\BSW\PduR\PduR.c	  8559          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  8560          PDUR_DET_REPORT_ERROR(PDUR_SECOCTP_COPYTXDATA_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  8561      }
; ..\EAS\BSW\PduR\PduR.c	  8562      else if(NULL_PTR == info)
; ..\EAS\BSW\PduR\PduR.c	  8563      {
; ..\EAS\BSW\PduR\PduR.c	  8564          PDUR_DET_REPORT_ERROR(PDUR_SECOCTP_COPYTXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  8565      }
; ..\EAS\BSW\PduR\PduR.c	  8566      else if(NULL_PTR == availableDataPtr)
; ..\EAS\BSW\PduR\PduR.c	  8567      {
; ..\EAS\BSW\PduR\PduR.c	  8568          PDUR_DET_REPORT_ERROR(PDUR_SECOCTP_COPYTXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  8569      }
; ..\EAS\BSW\PduR\PduR.c	  8570      else
; ..\EAS\BSW\PduR\PduR.c	  8571      {
; ..\EAS\BSW\PduR\PduR.c	  8572  #if(PDUR_MAX_NUMOFSECOCTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  8573          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8574          PathId = PDUR_SECOCTP_TXCONFPDUINFO(id).PathId;
; ..\EAS\BSW\PduR\PduR.c	  8575          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  8576          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  8577          {
; ..\EAS\BSW\PduR\PduR.c	  8578              result = PduR_LowerTpCopyTxData(PathId, PDUR_SECOCTP_TXCONFPDUINFO(id).UpperPduId, info, retry, availableDataPtr);//PDUR_SECOCTP_TXCONFPDUINFO
; ..\EAS\BSW\PduR\PduR.c	  8579          }
; ..\EAS\BSW\PduR\PduR.c	  8580          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8581  #endif
; ..\EAS\BSW\PduR\PduR.c	  8582      }
; ..\EAS\BSW\PduR\PduR.c	  8583      return result;
; ..\EAS\BSW\PduR\PduR.c	  8584  }
; ..\EAS\BSW\PduR\PduR.c	  8585  
; ..\EAS\BSW\PduR\PduR.c	  8586  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  8587  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8588  * Function Name: PduR_SecOCTpTxConfirmation    SWS_PduR_00381
; ..\EAS\BSW\PduR\PduR.c	  8589  *
; ..\EAS\BSW\PduR\PduR.c	  8590  * Description:     This function is called after the I-PDU has been transmitted on
; ..\EAS\BSW\PduR\PduR.c	  8591  *                 its network, the result indicates whether the transmission was
; ..\EAS\BSW\PduR\PduR.c	  8592  *                 successful or not
; ..\EAS\BSW\PduR\PduR.c	  8593  *
; ..\EAS\BSW\PduR\PduR.c	  8594  * Inputs:         id - Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  8595  *                 result - Result of the transmission of the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  8596  *
; ..\EAS\BSW\PduR\PduR.c	  8597  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  8598  *
; ..\EAS\BSW\PduR\PduR.c	  8599  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  8600  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8601  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  8602  FUNC(void, PDUR_CODE) PduR_SecOCTpTxConfirmation
; ..\EAS\BSW\PduR\PduR.c	  8603  (
; ..\EAS\BSW\PduR\PduR.c	  8604      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  8605      Std_ReturnType result
; ..\EAS\BSW\PduR\PduR.c	  8606  )
; ..\EAS\BSW\PduR\PduR.c	  8607  {
; ..\EAS\BSW\PduR\PduR.c	  8608      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  8609      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  8610  
; ..\EAS\BSW\PduR\PduR.c	  8611      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  8612      {
; ..\EAS\BSW\PduR\PduR.c	  8613          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  8614          PDUR_DET_REPORT_ERROR(PDUR_SECOCTP_TXCONFIRMATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  8615      }
; ..\EAS\BSW\PduR\PduR.c	  8616      else if(id >= PDUR_GET_NUM_SECOCTPTXPDU()) 
; ..\EAS\BSW\PduR\PduR.c	  8617      {
; ..\EAS\BSW\PduR\PduR.c	  8618          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  8619          PDUR_DET_REPORT_ERROR(PDUR_SECOCTP_TXCONFIRMATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  8620      }
; ..\EAS\BSW\PduR\PduR.c	  8621      else
; ..\EAS\BSW\PduR\PduR.c	  8622      {
; ..\EAS\BSW\PduR\PduR.c	  8623  #if(PDUR_MAX_NUMOFSECOCTPTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  8624          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8625          PathId = PDUR_SECOCTP_TXCONFPDUINFO(id).PathId;
; ..\EAS\BSW\PduR\PduR.c	  8626          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  8627          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  8628          {
; ..\EAS\BSW\PduR\PduR.c	  8629              PduR_LowerTpTxConfirmation(PathId, PDUR_SECOCTP_TXCONFPDUINFO(id).UpperPduId, result);//PDUR_SECOCTP_TXCONFPDUINFO
; ..\EAS\BSW\PduR\PduR.c	  8630          }
; ..\EAS\BSW\PduR\PduR.c	  8631          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8632  #endif
; ..\EAS\BSW\PduR\PduR.c	  8633      }
; ..\EAS\BSW\PduR\PduR.c	  8634  }
; ..\EAS\BSW\PduR\PduR.c	  8635  
; ..\EAS\BSW\PduR\PduR.c	  8636  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  8637  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8638  * Function Name: PduR_J1939TpCopyRxData    SWS_PduR_00512
; ..\EAS\BSW\PduR\PduR.c	  8639  *
; ..\EAS\BSW\PduR\PduR.c	  8640  * Description:     This function is called by the transport protocol module to query
; ..\EAS\BSW\PduR\PduR.c	  8641  *                the transmit data of an I-PDU segment.
; ..\EAS\BSW\PduR\PduR.c	  8642  *
; ..\EAS\BSW\PduR\PduR.c	  8643  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  8644  *                 info Pointer to the buffer (SduDataPtr) and its length (SduLength)
; ..\EAS\BSW\PduR\PduR.c	  8645  *                     containing the data to be copied by PDU Router module in case
; ..\EAS\BSW\PduR\PduR.c	  8646  *                     of gateway or upper layer module in case of reception
; ..\EAS\BSW\PduR\PduR.c	  8647  *
; ..\EAS\BSW\PduR\PduR.c	  8648  * Outputs:         bufferSizePtr  Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  8649  *
; ..\EAS\BSW\PduR\PduR.c	  8650  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  8651  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8652  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  8653  BufReq_ReturnType PduR_SecOCTpCopyRxData
; ..\EAS\BSW\PduR\PduR.c	  8654  (
; ..\EAS\BSW\PduR\PduR.c	  8655      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  8656      P2CONST(PduInfoType, AUTOMATIC, PDUR_APPL_DATA) info,
; ..\EAS\BSW\PduR\PduR.c	  8657      P2VAR(PduLengthType, AUTOMATIC, PDUR_APPL_DATA) bufferSizePtr
; ..\EAS\BSW\PduR\PduR.c	  8658  )
; ..\EAS\BSW\PduR\PduR.c	  8659  {
; ..\EAS\BSW\PduR\PduR.c	  8660      BufReq_ReturnType result = BUFREQ_E_NOT_OK;
; ..\EAS\BSW\PduR\PduR.c	  8661      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  8662  
; ..\EAS\BSW\PduR\PduR.c	  8663      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  8664      {
; ..\EAS\BSW\PduR\PduR.c	  8665          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  8666          PDUR_DET_REPORT_ERROR(PDUR_SECOCTP_COPYRXDATA_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  8667      }
; ..\EAS\BSW\PduR\PduR.c	  8668      else if(id >= PDUR_GET_NUM_SECOCTPRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  8669      {
; ..\EAS\BSW\PduR\PduR.c	  8670          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  8671          PDUR_DET_REPORT_ERROR(PDUR_SECOCTP_COPYRXDATA_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  8672      }
; ..\EAS\BSW\PduR\PduR.c	  8673      else if(NULL_PTR == info)
; ..\EAS\BSW\PduR\PduR.c	  8674      {
; ..\EAS\BSW\PduR\PduR.c	  8675          PDUR_DET_REPORT_ERROR(PDUR_SECOCTP_COPYRXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  8676      }
; ..\EAS\BSW\PduR\PduR.c	  8677      else if(NULL_PTR == bufferSizePtr)
; ..\EAS\BSW\PduR\PduR.c	  8678      {
; ..\EAS\BSW\PduR\PduR.c	  8679          PDUR_DET_REPORT_ERROR(PDUR_SECOCTP_COPYRXDATA_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  8680      }
; ..\EAS\BSW\PduR\PduR.c	  8681      else
; ..\EAS\BSW\PduR\PduR.c	  8682      {
; ..\EAS\BSW\PduR\PduR.c	  8683  #if(PDUR_MAX_NUMOFSECOCTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  8684          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8685          pRxPduInfo = &(PDUR_SECOCTP_RXPDUINFO(id));
; ..\EAS\BSW\PduR\PduR.c	  8686          result = PduR_LowerTpMultiCopyRxData(pRxPduInfo, info, bufferSizePtr);
; ..\EAS\BSW\PduR\PduR.c	  8687          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8688  #endif
; ..\EAS\BSW\PduR\PduR.c	  8689      }
; ..\EAS\BSW\PduR\PduR.c	  8690  
; ..\EAS\BSW\PduR\PduR.c	  8691      return result;
; ..\EAS\BSW\PduR\PduR.c	  8692  }
; ..\EAS\BSW\PduR\PduR.c	  8693  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  8694  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8695  * Function Name: PduR_J1939TpRxIndication    SWS_PduR_00375
; ..\EAS\BSW\PduR\PduR.c	  8696  *
; ..\EAS\BSW\PduR\PduR.c	  8697  * Description:     This function is called by the transport protocol module to query
; ..\EAS\BSW\PduR\PduR.c	  8698  *                the transmit data of an I-PDU segment.
; ..\EAS\BSW\PduR\PduR.c	  8699  *
; ..\EAS\BSW\PduR\PduR.c	  8700  * Inputs:         id   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  8701  *                 result Result of the reception.
; ..\EAS\BSW\PduR\PduR.c	  8702  *
; ..\EAS\BSW\PduR\PduR.c	  8703  * Outputs:         bufferSizePtr  Available receive buffer after data has been copied.
; ..\EAS\BSW\PduR\PduR.c	  8704  *
; ..\EAS\BSW\PduR\PduR.c	  8705  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  8706  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8707  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  8708  FUNC(void, PDUR_CODE) PduR_SecOCTpRxIndication
; ..\EAS\BSW\PduR\PduR.c	  8709  (
; ..\EAS\BSW\PduR\PduR.c	  8710      PduIdType id,
; ..\EAS\BSW\PduR\PduR.c	  8711      NotifResultType result
; ..\EAS\BSW\PduR\PduR.c	  8712  )
; ..\EAS\BSW\PduR\PduR.c	  8713  {
; ..\EAS\BSW\PduR\PduR.c	  8714      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  8715  
; ..\EAS\BSW\PduR\PduR.c	  8716      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  8717      {
; ..\EAS\BSW\PduR\PduR.c	  8718          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  8719          PDUR_DET_REPORT_ERROR(PDUR_SECOCTP_RXINDICATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  8720      }
; ..\EAS\BSW\PduR\PduR.c	  8721      else if(id >= PDUR_GET_NUM_SECOCTPRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  8722      {
; ..\EAS\BSW\PduR\PduR.c	  8723          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  8724          PDUR_DET_REPORT_ERROR(PDUR_SECOCTP_RXINDICATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  8725      }
; ..\EAS\BSW\PduR\PduR.c	  8726      else
; ..\EAS\BSW\PduR\PduR.c	  8727      {
; ..\EAS\BSW\PduR\PduR.c	  8728  #if(PDUR_MAX_NUMOFSECOCTPRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  8729          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8730          pRxPduInfo = &(PDUR_SECOCTP_RXPDUINFO(id));
; ..\EAS\BSW\PduR\PduR.c	  8731          PduR_LowerTpMultiRxIndication(pRxPduInfo, result);
; ..\EAS\BSW\PduR\PduR.c	  8732          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8733  #endif
; ..\EAS\BSW\PduR\PduR.c	  8734      }
; ..\EAS\BSW\PduR\PduR.c	  8735  }
; ..\EAS\BSW\PduR\PduR.c	  8736  
; ..\EAS\BSW\PduR\PduR.c	  8737  #endif
; ..\EAS\BSW\PduR\PduR.c	  8738  
; ..\EAS\BSW\PduR\PduR.c	  8739  #if(STD_ON == PDUR_SECOCIF_MODULE_SUPPORT)
; ..\EAS\BSW\PduR\PduR.c	  8740  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  8741  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8742  * Function Name: PduR_IpduMTxConfirmation    SWS_PduR_00365
; ..\EAS\BSW\PduR\PduR.c	  8743  *
; ..\EAS\BSW\PduR\PduR.c	  8744  * Description:     The lower layer communication module confirms the transmission
; ..\EAS\BSW\PduR\PduR.c	  8745  *                of an I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  8746  *
; ..\EAS\BSW\PduR\PduR.c	  8747  * Inputs:         TxPduId   ID of the I-PDU that has been transmitted.
; ..\EAS\BSW\PduR\PduR.c	  8748  *
; ..\EAS\BSW\PduR\PduR.c	  8749  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  8750  *
; ..\EAS\BSW\PduR\PduR.c	  8751  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  8752  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8753  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  8754  FUNC(void, PDUR_CODE) PduR_SecOCIfTxConfirmation
; ..\EAS\BSW\PduR\PduR.c	  8755  (
; ..\EAS\BSW\PduR\PduR.c	  8756      PduIdType TxPduId
; ..\EAS\BSW\PduR\PduR.c	  8757  )
; ..\EAS\BSW\PduR\PduR.c	  8758  {
; ..\EAS\BSW\PduR\PduR.c	  8759      PduR_RoutingPathIdType PathId;
; ..\EAS\BSW\PduR\PduR.c	  8760      PduR_RoutingPathGroupIdType GroupId;
; ..\EAS\BSW\PduR\PduR.c	  8761  
; ..\EAS\BSW\PduR\PduR.c	  8762      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  8763      {
; ..\EAS\BSW\PduR\PduR.c	  8764          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  8765          PDUR_DET_REPORT_ERROR(PDUR_SECOCIF_TXCONFIRMATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  8766      }
; ..\EAS\BSW\PduR\PduR.c	  8767      else if(TxPduId >= PDUR_GET_NUM_SECOCIFTXPDU())
; ..\EAS\BSW\PduR\PduR.c	  8768      {
; ..\EAS\BSW\PduR\PduR.c	  8769          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  8770          PDUR_DET_REPORT_ERROR(PDUR_SECOCIF_TXCONFIRMATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  8771      }
; ..\EAS\BSW\PduR\PduR.c	  8772      else
; ..\EAS\BSW\PduR\PduR.c	  8773      {
; ..\EAS\BSW\PduR\PduR.c	  8774  #if( PDUR_MAX_NUMOFSECOCIFTXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  8775          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8776          PathId = PDUR_SECOCIF_TXCONFPDUINFO(TxPduId).PathId;
; ..\EAS\BSW\PduR\PduR.c	  8777          GroupId = PDUR_ROUTINGPATHINFO(PathId).PduRDestPdu.PduRRoutingGroup;
; ..\EAS\BSW\PduR\PduR.c	  8778          if((PDUR_RPGROUP_NONE == GroupId) || (TRUE == PduR_RoutingPathGroupEnabled[GroupId]))
; ..\EAS\BSW\PduR\PduR.c	  8779          {
; ..\EAS\BSW\PduR\PduR.c	  8780              PduR_LowerIfTxConfirmation(PathId, PDUR_SECOCIF_TXCONFPDUINFO(TxPduId).UpperPduId);
; ..\EAS\BSW\PduR\PduR.c	  8781          }
; ..\EAS\BSW\PduR\PduR.c	  8782          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8783  #endif
; ..\EAS\BSW\PduR\PduR.c	  8784      }
; ..\EAS\BSW\PduR\PduR.c	  8785  }
; ..\EAS\BSW\PduR\PduR.c	  8786  
; ..\EAS\BSW\PduR\PduR.c	  8787  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\PduR\PduR.c	  8788  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8789  * Function Name: PduR_CanIfRxIndication SWS_PduR_00362
; ..\EAS\BSW\PduR\PduR.c	  8790  *
; ..\EAS\BSW\PduR\PduR.c	  8791  * Description:     Indication of a received I-PDU from a lower layer communication module.
; ..\EAS\BSW\PduR\PduR.c	  8792  *
; ..\EAS\BSW\PduR\PduR.c	  8793  * Inputs:         RxPduId   Identification of the transmitted I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  8794  *                 PduInfoPtr Contains the length (SduLength) of the received I-PDU
; ..\EAS\BSW\PduR\PduR.c	  8795  *                           and a pointer to a buffer (SduDataPtr) containing the I-PDU.
; ..\EAS\BSW\PduR\PduR.c	  8796  *
; ..\EAS\BSW\PduR\PduR.c	  8797  * Outputs:         None
; ..\EAS\BSW\PduR\PduR.c	  8798  *
; ..\EAS\BSW\PduR\PduR.c	  8799  * Limitations:     None
; ..\EAS\BSW\PduR\PduR.c	  8800  ********************************************************************************
; ..\EAS\BSW\PduR\PduR.c	  8801  END_FUNCTION_HDR*/
; ..\EAS\BSW\PduR\PduR.c	  8802  FUNC(void, PDUR_CODE) PduR_SecOCIfRxIndication
; ..\EAS\BSW\PduR\PduR.c	  8803  (
; ..\EAS\BSW\PduR\PduR.c	  8804      PduIdType RxPduId,
; ..\EAS\BSW\PduR\PduR.c	  8805      P2CONST(PduInfoType, AUTOMATIC, PDUR_CONST) PduInfoPtr
; ..\EAS\BSW\PduR\PduR.c	  8806  )
; ..\EAS\BSW\PduR\PduR.c	  8807  {
; ..\EAS\BSW\PduR\PduR.c	  8808      P2CONST(PduRRoutingPduInfoType, AUTOMATIC, PDUR_CONST) pRxPduInfo;
; ..\EAS\BSW\PduR\PduR.c	  8809  
; ..\EAS\BSW\PduR\PduR.c	  8810      if(!PDUR_IS_INITIALIZED())
; ..\EAS\BSW\PduR\PduR.c	  8811      {
; ..\EAS\BSW\PduR\PduR.c	  8812          /*SWS_PduR_00328 SWS_PduR_00330 SWS_PduR_00119*/
; ..\EAS\BSW\PduR\PduR.c	  8813          PDUR_DET_REPORT_ERROR(PDUR_SECOCIF_RXINDICATION_APIID, PDUR_E_INVALID_REQUEST);
; ..\EAS\BSW\PduR\PduR.c	  8814      }
; ..\EAS\BSW\PduR\PduR.c	  8815      else if(RxPduId >= PDUR_GET_NUM_SECOCIFRXPDU())
; ..\EAS\BSW\PduR\PduR.c	  8816      {
; ..\EAS\BSW\PduR\PduR.c	  8817          /*SWS_PduR_00221*/
; ..\EAS\BSW\PduR\PduR.c	  8818          PDUR_DET_REPORT_ERROR(PDUR_SECOCIF_RXINDICATION_APIID, PDUR_E_PDU_ID_INVALID);
; ..\EAS\BSW\PduR\PduR.c	  8819      }
; ..\EAS\BSW\PduR\PduR.c	  8820      else if(NULL_PTR == PduInfoPtr)
; ..\EAS\BSW\PduR\PduR.c	  8821      {
; ..\EAS\BSW\PduR\PduR.c	  8822          PDUR_DET_REPORT_ERROR(PDUR_SECOCIF_RXINDICATION_APIID, PDUR_E_PARAM_POINTER);
; ..\EAS\BSW\PduR\PduR.c	  8823      }
; ..\EAS\BSW\PduR\PduR.c	  8824      else
; ..\EAS\BSW\PduR\PduR.c	  8825      {
; ..\EAS\BSW\PduR\PduR.c	  8826  #if(PDUR_MAX_NUMOFSECOCIFRXPDU > 0)
; ..\EAS\BSW\PduR\PduR.c	  8827          SchM_Enter_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8828          pRxPduInfo = &(PDUR_SECOCIF_RXPDUINFO(RxPduId));
; ..\EAS\BSW\PduR\PduR.c	  8829          PduR_LowerIfMultiRxIndication(pRxPduInfo, PduInfoPtr);
; ..\EAS\BSW\PduR\PduR.c	  8830          SchM_Exit_PduR_PDUR_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\PduR\PduR.c	  8831  #endif
; ..\EAS\BSW\PduR\PduR.c	  8832      }
; ..\EAS\BSW\PduR\PduR.c	  8833  }
; ..\EAS\BSW\PduR\PduR.c	  8834  #endif
; ..\EAS\BSW\PduR\PduR.c	  8835  
; ..\EAS\BSW\PduR\PduR.c	  8836  #define PDUR_STOP_SEC_CODE
; ..\EAS\BSW\PduR\PduR.c	  8837  #include "MemMap.h"
; ..\EAS\BSW\PduR\PduR.c	  8838  
; ..\EAS\BSW\PduR\PduR.c	  8839  #endif/*#if(STD_ON == PDUR_ZERO_COST_OPERATION)*/
; ..\EAS\BSW\PduR\PduR.c	  8840  

	; Module end
