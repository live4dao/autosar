	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 09003395"
	.compiler_invocation	"ctc -f cc35768a --dep-file=Mcal\\Tricore\\Smu\\ssc\\src\\.Smu.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --fp-model=+float -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Lib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\App_Func -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\demo -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Adc_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Gtm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\AscLin_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Can_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\EthV2_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Stm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Main -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\APP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\BswM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanSm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Com -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\ComM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Common -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Crc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Det -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\DoIP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EcuM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Eth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthSM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTrcv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FiM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FlsTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Nm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\PduR -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\RamTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\StbM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\arpa -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\net -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\sys -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\stdc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\apps -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\priv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\UdpNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Cal -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Daq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pag -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pgm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Std -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\XcpOnEth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Library\\Vfx_ComE2E -g2 --make-target=Mcal\\Tricore\\Smu\\ssc\\src\\Smu.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O1 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o Mcal\\Tricore\\Smu\\ssc\\src\\Smu.src ..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c"
	.compiler_name		"ctc"
	;source	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c'

	
$TC162
	
	.sdecl	'.text.Smu_lClearAllAlarms.Code.Cpu0',code,cluster('Smu_lClearAllAlarms')
	.sect	'.text.Smu_lClearAllAlarms.Code.Cpu0'
	.align	2
	

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	     1  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	     2  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	     3  ** Copyright (C) Infineon Technologies (2023)                                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	     4  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	     5  ** All rights reserved.                                                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	     6  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	     7  ** This document contains proprietary information belonging to Infineon       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	     8  ** Technologies. Passing on and copying of this document, and communication   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	     9  ** of its contents is not permitted without prior written authorization.      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    10  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    11  ********************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    12  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    13  **  FILENAME     : Smu.c                                                      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    14  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    15  **  VERSION      : 40.0.0                                                     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    16  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    17  **  DATE         : 2023-05-24                                                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    18  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    19  **  VARIANT      : Variant PB                                                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    20  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    21  **  PLATFORM     : Infineon AURIX2G                                           **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    22  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    23  **  AUTHOR       : DL-AUTOSAR-Engineering                                     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    24  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    25  **  TRACEABILITY :  [cover parentID={815FDDAE-0BA0-48d5-9822-E887D8DF54B8},   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    26  **                                  {7B2B919A-48D4-42ec-9EAB-C8703FCC451B},   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    27  **                                  {F5CF0050-FA3F-4e14-8C3E-FD0E8CB08831}]   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    28  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    29  **  VENDOR       : Infineon Technologies                                      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    30  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    31  **  DESCRIPTION  : Smu Driver source file                                     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    32  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    33  **  [/cover]                                                                  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    34  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    35  **  SPECIFICATION(S) : NA                                                     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    36  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    37  **  MAY BE CHANGED BY USER : no                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    38  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    39  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    40  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    41  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    42  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    43  **                      Includes                                              **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    44  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    45  /*[cover parentID={BFB18007-C83F-439b-A0C6-A894B5B71D9E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    46  Header file inclusions for Imported SW Interfaces
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    47  [/cover]*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    48  /*[cover parentID={825C220C-45ED-44f2-9CDA-CE9D43F07B83}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    49  File Structure
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    50  [/cover]*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    51  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    52  #include "McalLib.h"
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    53  #include "Smu.h"
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    54  #include "SchM_Smu.h"
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    55  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    56  #include "IfxSmu_bf.h"
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    57  #include "IfxSmu_reg.h"
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    58  #include "IfxPms_bf.h"
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    59  #include "IfxPms_reg.h"
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    60  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    61  #if (SMU_DEV_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    62  #include "Det.h"
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    63  #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    64  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    65  #if(SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    66  #include "Mcal_SafetyError.h"
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    67  #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    68  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    69  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    70  **                          User Mode Supoort Macros                          **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    71  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    72  /*[cover parentID={2A02D62C-64C2-4af4-90F1-753403F5273A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    73  User Mode Execution
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    74  [/cover]*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    75  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    76  #if( (SMU_INIT_DEINIT_API_MODE != SMU_MCAL_SUPERVISOR)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    77       (SMU_RUNTIME_API_MODE != SMU_MCAL_SUPERVISOR) )
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    78  #include "McalLib_OsStub.h"
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    79  #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    80  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    81  #if SMU_INIT_DEINIT_API_MODE  == SMU_MCAL_SUPERVISOR
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    82  /* Library APIs  */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    83  /* MISRA2012_RULE_4_9_JUSTIFICATION: Function like macro
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    84   * 'SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG'
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    85   * defined for User mode support in code.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    86   * No side effects foreseen by violating this MISRA rule. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    87  #define SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG(RegAdd,Data)   \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    88  Mcal_WriteSafetyEndInitProtReg(RegAdd,Data)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    89  /* MISRA2012_RULE_4_9_JUSTIFICATION: Function like macro
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    90   * 'SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREGMASK'
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    91   * defined for User mode support in code.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    92   * No side effects foreseen by violating this MISRA rule. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    93  /* MISRA2012_RULE_5_1_JUSTIFICATION: External identifiers going beyond 32 chars.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    94  due to Autosar Naming constraints.*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    95  /* MISRA2012_RULE_5_2_JUSTIFICATION: External identifiers going beyond 32 chars.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    96  due to Autosar Naming constraints.*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    97  /* MISRA2012_RULE_5_4_JUSTIFICATION: External identifiers going beyond 32 chars.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    98  due to Autosar Naming constraints.*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	    99  /* MISRA2012_RULE_5_5_JUSTIFICATION: External identifiers going beyond 32 chars.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   100  due to Autosar Naming constraints.*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   101  #define SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREGMASK(RegAdd,Data,Mask)    \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   102  Mcal_WriteSafetyEndInitProtRegMask(RegAdd,Data,Mask)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   103  /* MISRA2012_RULE_4_9_JUSTIFICATION: Function like macro
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   104   * 'SMU_SFR_INIT_DEINIT_WRITE32'
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   105   * defined for User mode support in code.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   106   * No side effects foreseen by violating this MISRA rule. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   107  #define  SMU_SFR_INIT_DEINIT_WRITE32(reg, value)    ((*(reg)) = (uint32)(value))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   108  #else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   109  /* MISRA2012_RULE_4_9_JUSTIFICATION: Function like macro
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   110   * 'SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG'
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   111   * defined for User mode support in code.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   112   * No side effects foreseen by violating this MISRA rule. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   113  #define SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG(RegAdd,Data)    \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   114  MCAL_LIB_WRITESAFETYENDINITPROTREG(RegAdd,Data)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   115  /* MISRA2012_RULE_4_9_JUSTIFICATION: Function like macro
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   116   * 'SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREGMASK'
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   117   * defined for User mode support in code.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   118   * No side effects foreseen by violating this MISRA rule. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   119  /* MISRA2012_RULE_5_1_JUSTIFICATION: External identifiers going beyond 32 chars.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   120  due to Autosar Naming constraints.*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   121  /* MISRA2012_RULE_5_2_JUSTIFICATION: External identifiers going beyond 32 chars.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   122  due to Autosar Naming constraints.*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   123  /* MISRA2012_RULE_5_4_JUSTIFICATION: External identifiers going beyond 32 chars.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   124  due to Autosar Naming constraints.*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   125  /* MISRA2012_RULE_5_5_JUSTIFICATION: External identifiers going beyond 32 chars.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   126  due to Autosar Naming constraints.*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   127  #define SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREGMASK(RegAdd,Data,Mask)    \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   128  MCAL_LIB_WRITESAFETYENDINITPROTREGMASK(RegAdd,Data,Mask)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   129  /* MISRA2012_RULE_4_9_JUSTIFICATION: Function like macro
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   130   * 'SMU_SFR_INIT_DEINIT_WRITE32'
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   131   * defined for User mode support in code.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   132   * No side effects foreseen by violating this MISRA rule. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   133  #define  SMU_SFR_INIT_DEINIT_WRITE32(reg, value)   \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   134                                 MCAL_SFR_OS_WRITE32(SMU_MODULE_ID, reg, value)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   135  #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   136  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   137  #if SMU_RUNTIME_API_MODE  == SMU_MCAL_SUPERVISOR
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   138  /* Library APIs  */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   139  /* MISRA2012_RULE_4_9_JUSTIFICATION: Function like macro
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   140   * 'SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG'
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   141   * defined for User mode support in code.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   142   * No side effects foreseen by violating this MISRA rule. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   143  #define SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG(RegAdd,Data)    \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   144  Mcal_WriteSafetyEndInitProtReg(RegAdd,Data)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   145  /* Supervisory mode registers */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   146  /* MISRA2012_RULE_4_9_JUSTIFICATION: Function like macro
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   147   * 'SMU_SFR_RUNTIME_WRITE32'
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   148   * defined for User mode support in code.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   149   * No side effects foreseen by violating this MISRA rule. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   150  #define  SMU_SFR_RUNTIME_WRITE32(reg, value)    ((*(reg)) = (uint32)(value))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   151  #else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   152  /* Library APIs  */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   153  /* MISRA2012_RULE_4_9_JUSTIFICATION: Function like macro
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   154   * 'SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG'
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   155   * defined for User mode support in code.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   156   * No side effects foreseen by violating this MISRA rule. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   157  #define SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG(RegAdd,Data)    \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   158  MCAL_LIB_WRITESAFETYENDINITPROTREG(RegAdd,Data)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   159  /* Supervisory mode registers */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   160  /* MISRA2012_RULE_4_9_JUSTIFICATION: Function like macro
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   161   * 'SMU_SFR_RUNTIME_WRITE32'
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   162   * defined for User mode support in code.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   163   * No side effects foreseen by violating this MISRA rule. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   164  #define  SMU_SFR_RUNTIME_WRITE32(reg, value)    \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   165  MCAL_SFR_OS_WRITE32(SMU_MODULE_ID, reg, value)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   166  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   167  #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   168  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   169  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   170  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   171  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   172  **                      Imported Compiler Switch Check                        **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   173  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   174  #ifndef SMU_SW_MAJOR_VERSION
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   175    #error "SMU_SW_MAJOR_VERSION is not defined."
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   176  #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   177  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   178  #ifndef SMU_SW_MINOR_VERSION
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   179    #error "SMU_SW_MINOR_VERSION is not defined."
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   180  #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   181  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   182  #ifndef SMU_SW_PATCH_VERSION
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   183    #error "SMU_SW_PATCH_VERSION is not defined."
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   184  #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   185  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   186  #if ( SMU_SW_MAJOR_VERSION != 20U )
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   187    #error "SMU_SW_MAJOR_VERSION does not match."
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   188  #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   189  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   190  #if ( SMU_SW_MINOR_VERSION != 25U )
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   191    #error "SMU_SW_MINOR_VERSION does not match."
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   192  #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   193  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   194  #if ( SMU_SW_PATCH_VERSION != 0U )
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   195    #error "SMU_SW_PATCH_VERSION does not match."
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   196  #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   197  /*[cover parentID={6867086D-86C6-4eb6-962C-ABF2FC465496}] [/cover]*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   198  /*[cover parentID={E86BC0A7-8DEE-4818-AFCA-A9C02F2E61A6}] [/cover]*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   199  #if (SMU_DEV_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   200  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   201    #ifndef DET_AR_RELEASE_MAJOR_VERSION
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   202      #error "DET_AR_RELEASE_MAJOR_VERSION is not defined."
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   203    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   204  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   205    #if ( DET_AR_RELEASE_MAJOR_VERSION != 4U )
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   206      #error "DET_AR_RELEASE_MAJOR_VERSION does not match."
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   207    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   208  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   209  #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   210  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   211  #if ((SMU_ACTIVATE_RUN_STATE_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   212       (SMU_CLEAR_ALARM_STATUS_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   213       (SMU_RELEASE_FSP_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   214       (SMU_CORE_ALIVE_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   215       (SMU_RT_STOP_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   216       (SMU_ACTIVATE_PES_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   217       (SMU_ACTIVATE_FSP_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   218       (SMU_SET_ALARM_STATUS_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   219       (SMU_SFF_TEST_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   220  #include "Mcal_Wrapper.h"
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   221  #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   222  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   223  **                      Private Macro Definitions                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   224  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   225  #if ((SMU_DEV_ERROR_DETECT == STD_ON) || \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   226  (SMU_SAFETY_ENABLE == STD_ON) ||(SMU_INIT_CHECK_API == STD_ON))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   227  /* Driver initialization flag */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   228  #define SMU_INITIALIZED      (0x1U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   229  #define SMU_NOT_INITIALIZED  (0x0U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   230  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   231  /* Error Pin  initialization flag */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   232  #define SMU_ERRPIN_SET       (0x1U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   233  #define SMU_ERRPIN_NOTSET    (0x0U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   234  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   235  /* SMU Driver status */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   236  #define SMU_FAILED           (0x1U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   237  #define SMU_NOT_FAILED       (0x0U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   238  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   239  /* SMU Configuration registers lock flag */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   240  #define SMU_LOCKED           (0x1U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   241  #define SMU_NOT_LOCKED       (0x0U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   242  #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   243  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   244  /* SMU SW alarm to validate API input parameter */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   245  #define SMU_SW_ALARM_GROUP   (10U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   246  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   247  /* SMU Command Argument bit position in the CMD register */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   248  #define SMU_CMD_ARG_BIT_POS  (4U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   249  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   250  /* SMU configuration - permanent lock value on and cfg(temp) lock on*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   251  #define SMU_CFG_PERLCK_ON_CFGLCK_ON  (0x0000FF00U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   252  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   253  /* SMU configuration - permanent lock value off and cfg(temp) lock off*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   254  #define SMU_CFG_PERLCK_OFF_CFGLCK_OFF  (0x000000BCU)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   255  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   256  /* SMU configuration unlock lock value */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   257  #define SMU_CFG_KEY_UNLOCK  ((SMU_KEYS.U & (uint32)(0xFFFFFF00U)) | \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   258                                ((uint32)0xBCU))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   259  #define SMU_CFG_KEY_TEMPLOCK (0x0U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   260  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   261  /* Status of SMU CMD execution sucess value in SMU_STS.B.RES bit*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   262  #define SMU_COMMAND_SUCCESS  (0x0U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   263  #define SMU_COMMAND_FAILURE  (0x1U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   264  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   265  /*Alarm status readback result*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   266  #define SMU_CLEAR_ALARM_STATUS_READBACK (0x0U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   267  #define SMU_SET_ALARM_STATUS_READBACK (0x1U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   268  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   269  /* The mask for the Alarm group configuration from 3 bit value for each
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   270  CFG registers*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   271  #define SMU_ALMGRP_CFG0_MASK (0x1U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   272  #define SMU_ALMGRP_CFG1_MASK (0x2U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   273  #define SMU_ALMGRP_CFG2_MASK (0x4U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   274  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   275  /*The masks for error pin set and release*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   276  #define SMU_PCTL_MASK (0x80U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   277  #define SMU_PCTL_HWEN_POS (2U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   278  #define SMU_PCTL_GF_SCU (4U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   279  #define SMU_PCTL_GF_STS (5U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   280  #define SMU_PCTL_RESET_VAL (0x00088000U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   281  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   282  /* SMU registers  Reset values */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   283  #define SMU_FSP_RESET_VAL       (0x003FFF00U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   284  #define SMU_AGC_RESET_VAL       (0x0U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   285  #define SMU_RTC_RESET_VAL       (0x003FFF03U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   286  #define SMU_RTAC00_RESET_VAL     (0x00A80108U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   287  #define SMU_RTAC01_RESET_VAL     (0x00C800B8U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   288  #define SMU_RTAC10_RESET_VAL     (0x00E800D8U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   289  #define SMU_RTAC11_RESET_VAL     (0x00F800F8U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   290  #define SMU_ALARM_CFG_RESET_VAL (0x0U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   291  #define SMU_ALARM8_CFG_RESET_VAL (0x0001FC00U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   292  #define SMU_ALARM10_CFG_RESET_VAL (0x00030000U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   293  #define SMU_ALARM_FSP_RESET_VAL (0x0U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   294  #define SMU_AGFSPSTDBY0_RESET_VAL  (0x0U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   295  #define SMU_AGFSPSTDBY1_RESET_VAL   (0x0U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   296  #define SMU_CMD_STDBY_RESET_VAL   (0x0U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   297  #define SMU_RMSTS_RESETVAL (0x0U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   298  #define SMU_RMEF_RESETVAL (0x0U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   299  #define SMU_RMCTL_RESETVAL (0x0U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   300  #define SMU_AG_SET_ALL          (0xFFFFFFFFU)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   301  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   302  /* Mask for extracting the FSP action from Register after shift */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   303  #define SMU_ALARM_FSP_MASK      ((uint8)0x1U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   304  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   305  /*Mask to test whether SMU alarm can be configured*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   306  #define SMU_ALARM_VALID (0x1U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   307  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   308  /*Macro to offset a value by half word*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   309  #define SMU_HALF_WORD_OFFSET (0x10U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   310  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   311  /*Macros for register monitoring*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   312  #define SMU_TOTAL_RMCTL_BITS (0xBU)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   313  #define SMU_SFF_TEST_ENABLE (0x1U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   314  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   315  /*JIRA Reference: 0000053912-10134
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   316  The time required for completion of Register Monitor test depends on the
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   317  frequency settings for the module under test. Maximum time is required for
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   318  Register monitor test of IOM, as it has module specific clock divider
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   319  IOM_CLC.RMC, which further divdes the SPB frequency.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   320  Based on the results of hardware testing, the maximum number of while loop
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   321  iterations for completion of Register Monitor test is 310, when
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   322  Register monitor test of IOM is enabled, Fsource0=PLL0 Frequency = 100Mhz,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   323  SPBDIV=4, IOM_CLC.RMC=255 and Compiler=Dcc.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   324  Based on these results, SFF_RM_TIMEOUT is set to 0x168U(360), considering
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   325  15% tolerance on maximum value.*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   326  #define SFF_RM_TIMEOUT (0x168U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   327  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   328  /*JIRA Reference: 0000053912-7453
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   329  One SPB cycle can correspond to minimum one CPU cycle and
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   330  maximum six CPU cycles, depending on the configurations.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   331  One readback while loop iteration correspond to minimum six CPU cycle,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   332  depending on the compiler and compiler options.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   333  Hence, atleast one SPB cycle delay is achieved by each iteration of the
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   334  readback while loop.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   335  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   336  The time required for status update into SMU_STS register after a command is
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   337  written to SMU_CMD register is one SPB cycle.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   338  Based on these calculations, SMU_CMDSTATUS_TIMEOUT is set to 2, considering
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   339  tolerance of one extra iteration.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   340  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   341  Similarly, the time required for alarm status update into SMU_AGx register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   342  can be upto four SPB cycle.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   343  Based on these calculations, SMU_AGSTATUS_TIMEOUT is set to 5, considering
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   344  tolerance of one extra iteration.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   345  */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   346  #define SMU_CMDSTATUS_TIMEOUT   (2U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   347  #define SMU_AGSTATUS_TIMEOUT (5U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   348  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   349  /*AGCF Masks for alarm positions*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   350  #define SMU_ALARM_POS1 (1U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   351  #define SMU_ALARM_POS2 (2U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   352  #define SMU_GROUP8_CFG_POS1 (24U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   353  #define SMU_GROUP8_CFG_POS2 (26U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   354  #define SMU_GROUP10_CFG_POS1 (31U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   355  #define SMU_GROUP10_CFG_POS2 (32U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   356  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   357  /*RT Missed event position*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   358  #define SMU_RT0_MISSED_EVENT (0x20000U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   359  #define SMU_RT1_MISSED_EVENT (0x80000U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   360  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   361  /*Alarm action masks*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   362  #define SMU_ALMACTION_MSK      (3U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   363  #define SMU_FSP_ACTION_MSK     (1U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   364  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   365  /*Macros if DET is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   366  #if (SMU_DEV_ERROR_DETECT == STD_ON)||(SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   367  /*SMU per lock value*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   368  #define SMU_CFG_PERLCK_VALUE (0xFFU)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   369  /*SMU alarm valid/invalid mask*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   370  #define SMU_ALARM_INVALID (0x0U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   371  /*SMU permanent lock check mask*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   372  #define SMU_LOCK_MSK           (8U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   373  /*SMU alarm execution status check mask*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   374  #define SMU_ALMEXEC_MSK        (31U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   375  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   376  /* SMU maximum recovery timers */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   377  #define SMU_MAX_RECOV_TIM    (0x2U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   378  /* Mask for SMU permanent lock */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   379  #define SMU_KEY_PERLOCK_MASK    (0xFF00U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   380  #endif/*End of DET check masks*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   381  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   382  /*Macros available if Smu_stdby is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   383  #if SMU_STANDBY_SWITCH == STD_ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   384  #define SMU_STDBY_BIT_PROT (0x40000000U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   385  #define SMU_CMD_FSP_RESET (0x40000009U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   386  #define SMU_STDBY_F1_MSK (0x2U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   387  #define SMU_STDBY_F0_MSK (0x1U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   388  #define SMU_ALIVE_TEST_START    ((uint8)0x5U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   389  #define SMU_ALIVE_TEST_STOP    ((uint8)0xAU)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   390  /*Enabling the disabling bit protection for Smu_stdby CMD register*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   391  #define SMU_STDBY_ASCE_COMMAND (0x8U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   392  #else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   393  #define SMU_STDBY_BIT_PROT (0x0U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   394  #endif/*End of Smu_stdby enable check masks*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   395  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   396  /*Spinlock timeout value*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   397  #define SMU_SPINLOCK_TIMEOUT   (8192U)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   398  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   399  /*Mask for all configuration fields of FSP register except FSP mode*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   400  #define SMU_FSP_MODE_MSK  (uint32)((uint32)IFX_SMU_FSP_MODE_MSK \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   401                                    << IFX_SMU_FSP_MODE_OFF)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   402  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   403  /*Mask for all configuration fields of FSP register except FSP mode*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   404  #define SMU_FSP_CFG_MSK  (uint32)(~SMU_FSP_MODE_MSK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   405  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   406  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   407  **                      Private Variable Definitions                          **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   408  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   409  /*[cover parentID={22DA4B9E-BACA-444d-AF9E-4B6B656A5A88}] [/cover]*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   410  /*[cover parentID={EA0715EE-3E3C-4aac-A42E-4B5CFC96CEED}] [/cover]*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   411  /*[cover parentID={4579FE20-92DA-4848-93DB-7AD4FD35DD50}] [/cover]*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   412  /*[cover parentID={566ED99C-0D96-46ac-97BF-E97B04E2C700}] [/cover]*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   413  /*[cover parentID={E4047F9A-8865-4b2c-9D3C-385479854EAD}] [/cover]*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   414  /*[cover parentID={5713A17A-3FA1-427f-A0B6-89125A17689A}] [/cover]*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   415  /*[cover parentID={72DABBEB-F27B-4677-B6B4-B53F634341BA}] [/cover]*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   416  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   417  #define SMU_START_SEC_VAR_INIT_ASIL_B_GLOBAL_32
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   418  /* MISRA2012_RULE_4_10_JUSTIFICATION: Smu_Memmap.h is repeatedly included
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   419   * without include guard. This is as per AUTOSAR */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   420  /* MISRA2012_RULE_20_1_JUSTIFICATION: declaration of global status variables
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   421   * before include of memap.h - Accepted deviation in AUTOSAR */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   422  #include "Smu_MemMap.h"
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   423  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   424  #if ((SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON) ||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   425       (SMU_INIT_CHECK_API == STD_ON))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   426  /*Global variable to store initialization status*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   427  /*[cover parentID={610F7DF6-E647-43fe-9E36-D3C5C0CE4C48}] [/cover]*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   428  static uint32 Smu_InitStatus = SMU_NOT_INITIALIZED;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   429  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   430  /*Global variable to store error pin status*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   431  /*[cover parentID={AF223FA2-14DD-486d-9702-AD4FA5601FA2}] [/cover]*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   432  static uint32 Smu_ErrPinStatus = SMU_ERRPIN_SET;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   433  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   434  /*Global variable to store permanent lock status status*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   435  /*[cover parentID={8D55AA29-1FEB-484f-99F7-6D287B517292}] [/cover]*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   436  static uint32 Smu_LockState = SMU_LOCKED;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   437  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   438  /*Global variable to store driver status*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   439  /*[cover parentID={5067294E-BC26-4198-B883-73DC498420EE}] [/cover]*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   440  static uint32 Smu_DriverState = SMU_FAILED;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   441  #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   442  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   443  /*Global variable to store TTAS lock address for SMU driver*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   444  /*[cover parentID={2E4F4AFD-36D0-47ca-9184-D410327295FD}][/cover]*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   445  static uint32 Smu_LockAddress = 0U;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   446  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   447  /*Global variable to store TTAS lock address for SMU command sequence*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   448  /*[cover parentID={712603E7-496B-432a-B8B5-C93A0F8204FD}][/cover]*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   449  static uint32 Smu_CmdLockAddress = 0U;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   450  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   451  #define SMU_STOP_SEC_VAR_INIT_ASIL_B_GLOBAL_32
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   452  /* MISRA2012_RULE_4_10_JUSTIFICATION: Smu_Memmap.h is repeatedly included
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   453   * without include guard. This is as per AUTOSAR */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   454  /* MISRA2012_RULE_20_1_JUSTIFICATION: declaration of Smu_LockAddress
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   455   * before #include memap.h - Accepted deviation in AUTOSAR */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   456  #include "Smu_MemMap.h"
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   457  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   458  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   459  **                      Private Type Definitions                              **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   460  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   461  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   462  /* Type:SMU_CoreAlarmGroupRegMap - SMU Alarm group specific registers is listed
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   463  according to their order in hardware Memory.   */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   464  typedef struct
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   465  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   466    volatile Ifx_SMU_AGCF CfgReg[SMU_CORE_TOTAL_ALARM_CONFIG_REG];
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   467    volatile Ifx_SMU_AGFSP FSPCfgReg[SMU_CORE_TOTAL_ALARM_GROUPS];
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   468    volatile Ifx_SMU_AG AGStatusReg[SMU_CORE_TOTAL_ALARM_GROUPS];
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   469    uint32 Reserved1[4];
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   470    volatile Ifx_SMU_AD ADStatusReg[SMU_CORE_TOTAL_ALARM_GROUPS];
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   471  } SMU_CoreAlarmGroupRegMapType;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   472  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   473  /* Mapping starting location of register set(SMU_CoreAlarmGroupRegMapType)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   474   * - Alarm group registers.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   475   */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   476  #define SMU_CORE_ALARM_GROUP  \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   477  ((SMU_CoreAlarmGroupRegMapType *)(&SMU_AGCF0_0))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   478  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   479  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   480  **                      Global Constant Definitions                           **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   481  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   482  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   483  **                      Private Function Declarations                         **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   484  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   485  #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   486  /* Local function - to check for init and driver state */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   487  static Std_ReturnType Smu_lInitFailedCheck(const uint8 ServiceId);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   488  /* Local function - to check for valid alarm group and position */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   489  static Std_ReturnType Smu_lAlarmValidCheck(const Smu_AlarmGroupId AlarmGroup,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   490                                             const Smu_AlarmIdType AlarmPos,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   491                                             const uint8 ServiceId);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   492  /*Local Function to report Safety Error and DET*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   493  static void Smu_lReportError(const uint8 ApiId,const uint8 ErrorId);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   494  #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   495  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   496  #if ((SMU_ACTIVATE_RUN_STATE_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   497       (SMU_CLEAR_ALARM_STATUS_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   498       (SMU_RELEASE_FSP_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   499       (SMU_CORE_ALIVE_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   500       (SMU_RT_STOP_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   501       (SMU_ACTIVATE_PES_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   502       (SMU_ACTIVATE_FSP_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   503       (SMU_SET_ALARM_STATUS_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   504       (SMU_SFF_TEST_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   505  /*Local Function to report Production Error event status*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   506  static void Smu_lReportDemError(const Dem_EventIdType EventId,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   507  const Dem_EventStatusType EventStatus);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   508  #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   509  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   510  /* Local function - to clear all SMU alarms on initialization */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   511  static void Smu_lClearAllAlarms(void);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   512  /* Local function - to write into the SFR for clearing alarm status */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   513  static void Smu_lClrAlarmStatus(const Smu_AlarmGroupId AlarmGroup,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   514                                            const Smu_AlarmIdType AlarmPos);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   515  /* Local function - to write into the SFR for setting alarm status */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   516  static void Smu_lSetAlarmStatus(const Smu_AlarmGroupId AlarmGroup,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   517                                   const Smu_AlarmIdType AlarmPos);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   518  /* Local function - to get the alarm action */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   519  static Std_ReturnType Smu_lSetAlmAction(const Smu_AlarmGroupId AlarmGroup,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   520                                 const Smu_AlarmIdType AlarmPos,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   521                                 const Smu_CoreAlarmActionType AlarmAction,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   522                                 const Smu_FSPActionType FSPAction);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   523  /* Local function - to get the alarm action */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   524  static Std_ReturnType Smu_lGetAlmAction(const Smu_AlarmGroupId AlarmGroup,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   525                                const Smu_AlarmIdType AlarmPos,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   526                                Smu_CoreAlarmActionType * const IntAlarmAction,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   527                                Smu_FSPActionType * const FSPAction);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   528  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   529  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   530  #define SMU_START_SEC_CODE_ASIL_B_GLOBAL
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   531  /* MISRA2012_RULE_4_10_JUSTIFICATION: Smu_Memmap.h is repeatedly included
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   532   * without include guard. This is as per AUTOSAR */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   533  /* MISRA2012_RULE_20_1_JUSTIFICATION: declaration of Smu_InitStatus
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   534   * before #include memap.h - Accepted deviation in AUTOSAR */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   535  #include "Smu_MemMap.h"
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   536  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   537  **                       Private Function Definitions                         **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   538  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   539  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   540  #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   541  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   542  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   543  ** Traceability     : [cover parentID={C0FF38A0-6DFF-4de3-AF10-FD846B363D58}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   544  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   545  ** Syntax           : static Std_ReturnType Smu_lInitFailedCheck              **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   546  **                    (const uint8 ServiceId)                                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   547  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   548  ** Description      : This function checks the initialization status and      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   549  **                    driver state.                                           **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   550  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   551  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   552  ** Service ID       : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   553  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   554  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   555  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   556  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   557  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   558  ** Parameters(in)   : ServiceId: ServiceId of the API for which check is made **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   559  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   560  ** Parameters (out) : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   561  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   562  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   563  **                    E_NOT_OK - Operation failed                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   564  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   565  static Std_ReturnType Smu_lInitFailedCheck(const uint8 ServiceId)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   566  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   567    /* [cover parentID={49FD4B3C-CB0A-48ab-874E-94866AA16CCF}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   568    Error Detection OR Safety Checks Enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   569    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   570    Std_ReturnType RetVal = (Std_ReturnType)E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   571  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   572    /*Check if driver is initialized*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   573    /* [cover parentID={2A8B3342-5CF4-4e37-87EC-1784E2DDBFA1}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   574    Is driver  initialized?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   575    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   576    if(SMU_NOT_INITIALIZED == Smu_InitStatus)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   577    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   578      /*Report error SMU_E_UNINIT*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   579      /* [cover parentID={610E7593-7D93-47da-AD6A-30E745A0FC5D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   580      Report error SMU_E_UNINIT
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   581      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   582      Smu_lReportError(ServiceId, SMU_E_UNINIT);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   583    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   584    else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   585    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   586      /*Check driver state is not FAILED state*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   587      /* [cover parentID={DAD935D7-10B4-4a2a-B9CE-5D2FB22F3F90}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   588      Is driver state FAILED?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   589      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   590      if(SMU_FAILED == Smu_DriverState)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   591      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   592        /*Report error SMU_E_INVALID_DRIVER_STATE*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   593        /* [cover parentID={D144A63C-4304-4c04-A0E8-FC5DA0687FD1}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   594        Report error SMU_E_INVALID_DRIVER_STATE
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   595        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   596        Smu_lReportError(ServiceId, SMU_E_INVALID_DRIVER_STATE);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   597      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   598      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   599      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   600        /* [cover parentID={44F789B1-94E1-49c7-80CC-82346C7D65FF}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   601        Result set as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   602        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   603        RetVal = (Std_ReturnType)E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   604      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   605    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   606    /* [cover parentID={5D8D9D56-D6FF-4c9e-8558-97E08DD2BA9D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   607    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   608    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   609    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   610  }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   611  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   612  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   613  ** Traceability     : [cover parentID={853755DD-5F97-442b-ADF9-96B7B4FB7EB0}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   614  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   615  ** Syntax           : static Std_ReturnType Smu_lAlarmValidCheck              **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   616  **                    (const Smu_AlarmGroupId AlarmGroup,                     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   617  **                     const Smu_AlarmIdType  AlarmPos,                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   618  **                     const uint8 ServiceId)                                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   619  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   620  ** Service ID       : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   621  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   622  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   623  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   624  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   625  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   626  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   627  ** Parameters(in)   : AlarmGroup:Alarm group to clear the status              **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   628  **                    AlarmPos:Alarm position to clear the status             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   629  **                    ServiceId: Service id of the API for which check is made**
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   630  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   631  ** Parameters (out) : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   632  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   633  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   634  **                    E_NOT_OK - Operation failed                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   635  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   636  ** Description      : The purpose of the function is to check for the         **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   637  **                    validity of the Smu_core and Smu_stdby alarm group      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   638  **                    and positions. In case the group requested is in        **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   639  **                    Smu_stdby, it checks whether Smu_stdby is enabled or    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   640  **                    disabled.                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   641  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   642  static Std_ReturnType Smu_lAlarmValidCheck(const Smu_AlarmGroupId AlarmGroup,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   643                                               const Smu_AlarmIdType AlarmPos,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   644                                               const uint8 ServiceId)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   645  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   646    /* [cover parentID={D648A504-FB7D-4dc0-A2FA-2B4D6E2863F4}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   647    Error Detection OR Safety Checks Enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   648    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   649    Std_ReturnType RetVal = (Std_ReturnType)E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   650    uint32 AlarmRes;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   651  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   652    /*Array to check the alarm position validity for Smu_core*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   653    uint32 CoreAlarmIdReservedType[SMU_CORE_TOTAL_ALARM_GROUPS] =
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   654    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   655      SMU_GROUP0_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   656      SMU_GROUP1_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   657      SMU_GROUP2_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   658      SMU_GROUP3_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   659      SMU_GROUP4_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   660      SMU_GROUP5_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   661      SMU_GROUP6_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   662      SMU_GROUP7_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   663      SMU_GROUP8_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   664      SMU_GROUP9_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   665      SMU_GROUP10_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   666      SMU_GROUP11_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   667    };
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   668  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   669    /*Check if the alarm position is within range*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   670    /* [cover parentID={5EF2D2F9-C286-4338-B96E-DA482D80C1AD}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   671    Is the alarm position in valid range?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   672    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   673    if((uint32)AlarmPos <= SMU_MAX_ALARM_POS)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   674    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   675      /*Check if the group is valid in core/stdby*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   676      /* [cover parentID={2F315458-8DBA-45e9-A6C3-E8DE9201D71A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   677      Is the alarm group in core domain?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   678      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   679      if((uint32)AlarmGroup < SMU_CORE_TOTAL_ALARM_GROUPS)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   680      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   681        /*Check for validity of alarm position*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   682        /* [cover parentID={F21C9CCC-D2C2-41df-966A-828077A9C20E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   683        Check for validity of alarm position for the specified alarm group
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   684        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   685        AlarmRes = (uint32)CoreAlarmIdReservedType[AlarmGroup] &
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   686                   ((uint32)SMU_ALARM_VALID << (uint32)AlarmPos);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   687  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   688        AlarmRes = AlarmRes >> (uint32)AlarmPos;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   689  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   690        /*Check if alarm position is valid*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   691        /* [cover parentID={113C32E0-2589-4eda-835F-91542B8C2E32}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   692        Is the alarm position invalid?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   693        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   694        if(AlarmRes == SMU_ALARM_INVALID)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   695        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   696          /* [cover parentID={2D68C2E7-ADAB-474e-9748-81B7E69888D7}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   697          Report error SMU_E_PARAM_GROUP
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   698          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   699          Smu_lReportError(ServiceId, SMU_E_PARAM_GROUP);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   700        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   701        else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   702        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   703          /* [cover parentID={7529AC86-C419-477e-8103-5EDB2FB90E0E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   704          Set the result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   705          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   706          RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   707        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   708      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   709      /* [cover parentID={618B9F0C-38E9-402f-A460-345E23573499}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   710      Is the alarm group in standby domain?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   711      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   712      else if(((uint32)AlarmGroup <= SMU_STDBY_END_ALARM_GROUP) &&
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   713              ((uint32)AlarmGroup >= SMU_STDBY_START_ALARM_GROUP))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   714      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   715        /*Check if Smu_stdby is OFF*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   716        /* [cover parentID={79D139E0-6860-4ed6-B20E-01BCB5E3085F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   717        Is Standby mode OFF?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   718        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   719        /* [cover parentID={3D262481-9F08-4b88-B7F2-90C28397B31D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   720        Standby Mode OFF
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   721        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   722        #if(SMU_STANDBY_SWITCH == STD_OFF)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   723        /*Report error SMU_E_STDBY_DISABLED*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   724        /* [cover parentID={21F14CFD-B086-41e0-B9EE-2753F40F7FAE}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   725        Report error SMU_E_STDBY_DISABLED
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   726        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   727        Smu_lReportError(ServiceId, SMU_E_STDBY_DISABLED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   728        /* [cover parentID={0F1DDC1F-D613-4c7d-9DC9-F2E46CC50E0F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   729        Standby Mode ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   730        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   731        #else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   732        /*Array to check the alarm position validity for Smu_core*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   733        uint32 StdbyAlarmIdReservedType[SMU_STDBY_TOTAL_ALARM_GROUPS] =
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   734        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   735          SMU_GROUP20_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   736          SMU_GROUP21_POS
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   737        };
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   738  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   739        /* [cover parentID={6EB4B5BB-5DC8-4b12-A8A9-C3F0F6E564FB}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   740        Is the alarm group Alarm group 20?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   741        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   742        if(AlarmGroup == SMU_ALARM_GROUP20)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   743        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   744          /* [cover parentID={03924AAD-19EF-4b9c-AA7A-12EFCE94FED2}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   745          Check for validity of alarm position for alarm group 20
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   746          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   747          AlarmRes = (uint32)StdbyAlarmIdReservedType[0] & \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   748                     ((uint32)SMU_ALARM_VALID << (uint32)AlarmPos);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   749        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   750        else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   751        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   752          /* [cover parentID={2FE40D31-108C-4c1f-98E6-CEA791E8255F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   753          Check for validity of alarm position for alarm group 21
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   754          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   755          AlarmRes = (uint32)StdbyAlarmIdReservedType[1] & \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   756                     ((uint32)SMU_ALARM_VALID << (uint32)AlarmPos);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   757  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   758        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   759        AlarmRes = AlarmRes >> (uint32)AlarmPos;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   760        /*Check if alarm position is valid*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   761        /* [cover parentID={6A0D061E-9186-4834-A03C-D41177B54D45}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   762        Is the alarm position valid?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   763        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   764        if(AlarmRes == SMU_ALARM_INVALID)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   765        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   766          /*Report error SMU_E_PARAM_GROUP*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   767          /* [cover parentID={3D5355A2-FC91-43d2-82F0-6CCB0C3D88A8}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   768          Report error SMU_E_PARAM_GROUP
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   769          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   770          Smu_lReportError(ServiceId, SMU_E_PARAM_GROUP);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   771  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   772        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   773        else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   774        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   775          /* [cover parentID={9020A3E9-D672-4865-889D-90E247C7C66C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   776          Set the result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   777          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   778          RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   779        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   780        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   781      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   782      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   783      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   784        /*Report error SMU_E_PARAM_GROUP*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   785        /* [cover parentID={0321E4AC-4B15-4a49-A767-BB10F5544EAE}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   786        Report error SMU_E_PARAM_GROUP
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   787        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   788        Smu_lReportError(ServiceId, SMU_E_PARAM_GROUP);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   789      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   790    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   791    else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   792    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   793      /*Report error SMU_E_PARAM_GROUP*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   794      /* [cover parentID={30479E7B-FC5A-41fb-B867-993AA96FF4BE}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   795      Report error SMU_E_PARAM_GROUP
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   796      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   797      Smu_lReportError(ServiceId, SMU_E_PARAM_GROUP);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   798    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   799    /* [cover parentID={586D54F1-81D8-4b4a-BF25-958884DCEA77}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   800    Return the result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   801    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   802    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   803  }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   804  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   805  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   806  ** Traceability     :[cover parentID={12ACA780-4EA8-48fc-B8BE-51498C0ECD2A}]  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   807  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   808  ** Syntax           : LOCAL_INLINE void Smu_lReportError                      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   809  **                    ( const uint8 ApiId,const uint8 ErrorId)                **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   810  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   811  ** Description      : Function to report Safety Error and DET                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   812  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   813  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   814  ** Service ID       : None                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   815  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   816  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   817  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   818  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   819  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   820  ** Parameters (in)  : ApiId - Service ID of the API reporting an error        **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   821  **                    ErrorId - ID of the error reported                      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   822  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   823  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   824  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   825  ** Return value     : None                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   826  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   827  static void Smu_lReportError(const uint8 ApiId,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   828                               const uint8 ErrorId)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   829  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   830    /* [cover parentID={DD7B24BD-EF10-4abf-A6E0-30C8D435839F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   831    DET is ON or safety is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   832    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   833    /* [cover parentID={9BF22F7C-856A-4d43-9B7B-B425A8C1C197}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   834    DET Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   835    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   836    #if (SMU_DEV_ERROR_DETECT == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   837    /* [cover parentID={AB39144C-28F2-4113-B2DE-E5E1703ECC4D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   838    Report DET as per the ID specified by input parameter
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   839    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   840    (void)Det_ReportError(SMU_MODULE_ID, SMU_MODULE_INSTANCE, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   841                    ApiId, ErrorId); /* End of report to DET */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   842    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   843  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   844    /* [cover parentID={44A663A1-D99C-4ef7-A532-826DC6EB2A17}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   845    Is Safety Check enabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   846    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   847    #if (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   848    /* [cover parentID={ACA4ABEB-7783-4e65-B510-90C674F03739}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   849    Report safety error as per the ID specified by input parameter
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   850    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   851    Mcal_ReportSafetyError(SMU_MODULE_ID, SMU_MODULE_INSTANCE, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   852                           ApiId, ErrorId); /* End of report to Safety */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   853    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   854  }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   855  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   856  #endif/*End of DET specific functions*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   857  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   858  #if ((SMU_ACTIVATE_RUN_STATE_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   859       (SMU_CLEAR_ALARM_STATUS_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   860       (SMU_RELEASE_FSP_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   861       (SMU_CORE_ALIVE_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   862       (SMU_RT_STOP_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   863       (SMU_ACTIVATE_PES_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   864       (SMU_ACTIVATE_FSP_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   865       (SMU_SET_ALARM_STATUS_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   866       (SMU_SFF_TEST_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   867  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   868  ** Traceability     : [cover parentID={25A6FC10-B10D-44e0-B5E5-8A02230BF657}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   869  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   870  ** Syntax           : static void Smu_lReportDemError                         **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   871  **                    (                                                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   872  **                       const Dem_EventIdType EventId,                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   873  **                       const Dem_EventStatusType EventStatus                **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   874  **                    )                                                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   875  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   876  ** Description      : Function to report the production error status           **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   877  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   878  ** Service ID       : None                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   879  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   880  ** Sync/Async       : Asynchronous                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   881  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   882  ** Reentrancy       : Reentrant for different Event IDs                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   883  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   884  ** Parameters (in)  : EventId - ID of the event reported                      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   885  **                    EventStatus - Status of the event reported              **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   886  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   887  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   888  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   889  ** Return value     : None                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   890  *                                                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   891  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   892  static void Smu_lReportDemError(const Dem_EventIdType EventId,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   893  const Dem_EventStatusType EventStatus)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   894  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   895    /* [cover parentID={B3C232D7-6277-464f-86FB-3275E5860F71}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   896    Autosar version is AR422 [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   897    #if (MCAL_AR_VERSION == MCAL_AR_422)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   898    /* [cover parentID={FF8F9E12-8F45-434c-B70E-D4D7C7F97332}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   899    Report the Production Error status [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   900    Mcal_Wrapper_Dem_ReportErrorStatus(EventId, EventStatus);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   901  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   902    /* [cover parentID={58143BBD-FE93-495a-84EE-6F6B75820F99}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   903    Autosar version is AR440 [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   904    #else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   905    /* [cover parentID={D70BD90A-7A10-4312-9703-A6B4EE709A97}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   906    Report the Production Error status [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   907    (void)Mcal_Wrapper_Dem_SetEventStatus(EventId, EventStatus);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   908  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   909    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   910  }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   911  #endif/*End of Production Error specific function*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   912  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   913  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   914  ** Traceability     : [cover parentID={78878FBF-B398-4bfe-AE2E-0B20ACD97895}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   915  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   916  ** Syntax           : static void Smu_lClearAllAlarms(void)                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   917  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   918  ** Description      : The purpose of the function is to clear all the         **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   919  **                    SMU Alarms                                              **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   920  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   921  ** Service ID       : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   922  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   923  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   924  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   925  ** Reentrancy       : Non Reentrant                                           **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   926  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   927  ** Parameters(in)   : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   928  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   929  ** Parameters (out) : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   930  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   931  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   932  **                    E_NOT_OK - Operation failed                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   933  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   934  static void Smu_lClearAllAlarms(void)
; Function Smu_lClearAllAlarms
.L105:
Smu_lClearAllAlarms:	.type	func

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   935  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   936    uint8 AlarmGroupIndex;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   937  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   938    /*For Smu_core, clear the alarm status for all alarm groups*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   939    AlarmGroupIndex = (uint8)SMU_ALARM_GROUP0;
	mov	d15,#0
.L481:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   940    /* [cover parentID={BA442D50-E0FB-461c-A98F-0BBF0E00A636}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   941    Write clear alarm status in the alarm configuration registers
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   942    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   943    do
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   944    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   945      /* Write SMU_ASCE(0) in CMD register of Smu_core */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   946      /* [cover parentID={2F57FEED-BF74-4448-A234-0C5FC4EF6861}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   947      Enable Alarm Status Clear by writing to Command register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   948      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   949      SMU_SFR_INIT_DEINIT_WRITE32(&SMU_CMD.U, (uint32)SMU_ASCE_COMMAND);
	mov	d8,#5
	movh.a	a15,#61443

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   950  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   951      /* Write clear alarm status in all the alarm configuration registers
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   952      for Smu_core*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   953  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   954      /* [cover parentID={A7443B2C-F20A-42c8-B2CF-EADFF615CD59}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   955      Clear the alarm status for all alarm groups for Smu_core
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   956      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   957      /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   958      pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   959      SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   960          &SMU_CORE_ALARM_GROUP->AGStatusReg[AlarmGroupIndex], \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   961          (uint32)SMU_AG_SET_ALL);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   962      AlarmGroupIndex++;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   963  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   964    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   965    /* [cover parentID={EBA0E8F9-F685-4560-8874-6D97E0B20C66}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   966    Loop till last Alarm Group in SMU Core
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   967    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   968    while(AlarmGroupIndex < SMU_CORE_TOTAL_ALARM_GROUPS);
.L2:
	st.w	[a15]@los(0xf0036820),d8
.L922:
	mov.aa	a2,a15
	lea	a2,[a2]@los(0xf00369c0)
	addsc.a	a4,a2,d15,#2
	mov	d4,#-1
	call	Mcal_WriteSafetyEndInitProtReg
.L923:
	add	d15,#1
.L924:
	jlt.u	d15,#12,.L2
.L925:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   969  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   970    /*If Smu_stdby is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   971    /* [cover parentID={0DD8A08E-D3BD-4e1e-9A0A-891ED84C3BA2}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   972    Is SMU Standby Mode enabled ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   973    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   974    #if(SMU_STANDBY_SWITCH == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   975    /* [cover parentID={E850ABCE-70C3-4aef-A291-5EE122BF9A84}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   976    Enable the command to clear the alarm status for group 20
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   977    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   978    SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG(&MODULE_PMS.CMD_STDBY, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   979        (SMU_STDBY_BIT_PROT | SMU_STDBY_ASCE_COMMAND | PMS_CMD_STDBY.U));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   980  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   981    /* [cover parentID={AC40131F-89D5-407f-8BB7-268FEA05FACC}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   982    Clear the alarm status for alarm group 20
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   983    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   984    SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG(&MODULE_PMS.AG_STDBY0, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   985        (uint32)SMU_AG_SET_ALL);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   986  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   987    /* [cover parentID={3DE26362-26E5-4688-9642-AB08ABBD8014}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   988    Enable the command to clear alarm status for group 21
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   989    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   990    SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG(&MODULE_PMS.CMD_STDBY, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   991        (SMU_STDBY_BIT_PROT | SMU_STDBY_ASCE_COMMAND | PMS_CMD_STDBY.U));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   992  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   993    /* [cover parentID={8F4D7B8D-A242-4166-9FAD-72E2ED633575}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   994    Clear the alarm status for alarm group 21
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   995    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   996    SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG(&MODULE_PMS.AG_STDBY1, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   997        (uint32)SMU_AG_SET_ALL);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   998    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	   999  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1000  }
	ret
.L437:
	
__Smu_lClearAllAlarms_function_end:
	.size	Smu_lClearAllAlarms,__Smu_lClearAllAlarms_function_end-Smu_lClearAllAlarms
.L276:
	; End of function
	
	.sdecl	'.text.Smu_lClrAlarmStatus.Code.Cpu0',code,cluster('Smu_lClrAlarmStatus')
	.sect	'.text.Smu_lClrAlarmStatus.Code.Cpu0'
	.align	2
	

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1001  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1002  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1003  ** Traceability     :[cover parentID={1E6E002B-FE95-4798-B0F3-B597C29CE5EC}]  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1004  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1005  ** Syntax           : static Std_ReturnType Smu_lClrAlarmStatus(              **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1006  **                      const Smu_AlarmGroupId AlarmGroup,                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1007  **                      const Smu_AlarmIdType  AlarmPos)                      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1008  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1009  ** Description      : This function clears the alarm status of the alarm group**
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1010  **                    and position requested.                                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1011  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1012  ** Service ID       : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1013  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1014  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1015  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1016  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1017  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1018  ** Parameters(in)   : AlarmGroup:Alarm group to clear the status              **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1019  **                    AlarmPos:Alarm position to clear the status             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1020  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1021  ** Parameters (out) : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1022  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1023  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1024  **                    E_NOT_OK - Operation failed                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1025  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1026  static void Smu_lClrAlarmStatus(const Smu_AlarmGroupId AlarmGroup,
; Function Smu_lClrAlarmStatus
.L107:
Smu_lClrAlarmStatus:	.type	func

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1027                                  const Smu_AlarmIdType AlarmPos)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1028  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1029    /*If alarm group lies in Smu_core*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1030    /* [cover parentID={BAAB0956-DAC6-4600-B05D-69CA33A1FAC0}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1031    Is the requested alarm  group in Core Domain?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1032    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1033    if((uint8)AlarmGroup < SMU_CORE_TOTAL_ALARM_GROUPS)
	jge.u	d4,#12,.L3
.L930:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1034    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1035      /* Write the command to clear alarm status in  CMD register */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1036      /* [cover parentID={64C79D3C-5C0C-440e-AF61-3DEA665D1A23}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1037      Clear alarm status by writing to  Command register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1038      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1039      SMU_SFR_RUNTIME_WRITE32(&SMU_CMD.U, (uint32)SMU_ASCE_COMMAND );
	mov	d15,#5
	movh.a	a15,#61443
	st.w	[a15]@los(0xf0036820),d15
.L931:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1040      /* [cover parentID={650CBF32-FC30-439d-9548-EBE11B07B2E4}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1041      Clear the alarm configuration register for the requested alarm group
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1042      and position.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1043      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1044      /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1045      pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1046      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
	lea	a15,[a15]@los(0xf00369c0)
	addsc.a	a4,a15,d4,#2
	mov	d4,#1
.L482:
	sh	d4,d4,d5
	j	Mcal_WriteSafetyEndInitProtReg
.L3:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1047          &SMU_CORE_ALARM_GROUP->AGStatusReg[AlarmGroup], \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1048          (uint32)((uint32)SMU_ALARM_POS1 << AlarmPos));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1049    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1050  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1051    /* [cover parentID={43057EC8-85E3-4489-8FD1-586527A8BCF1}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1052    Is Smu_stdby enabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1053    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1054    #if(SMU_STANDBY_SWITCH == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1055    /*If the requested group is group 20*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1056    /* [cover parentID={CF30CD2A-BDCD-49a5-AED1-B49D0AC8F04D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1057    Is the requested alarm  group is Alarm group 20?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1058    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1059    else if((uint8)AlarmGroup == (uint8)SMU_ALARM_GROUP20)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1060    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1061      /*Enable alarm status clear for Smu_stdby*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1062      /* [cover parentID={2C74811C-A09F-4daa-9944-99B450A1835E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1063      Enable alarm status clear for SMU standby mode
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1064      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1065      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG(&MODULE_PMS.CMD_STDBY, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1066          (SMU_STDBY_BIT_PROT | SMU_STDBY_ASCE_COMMAND | PMS_CMD_STDBY.U));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1067      /* [cover parentID={E9783993-B319-444f-99BE-F8682A0C7849}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1068      Clear the alarm configuration register for the requested alarm group
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1069      20 position.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1070      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1071      /*Write Config key to configure the SMU registers. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1072      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1073          &MODULE_PMS.AG_STDBY0, (uint32)((uint32)SMU_ALARM_POS1 << AlarmPos));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1074    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1075    /*If the requested group is group 21*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1076    else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1077    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1078      /* [cover parentID={A21DBEB9-7E2C-4111-9433-8FF217D2BF36}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1079      Is DET and Safety disabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1080      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1081      #if (SMU_DEV_ERROR_DETECT == STD_OFF) && \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1082      (SMU_SAFETY_ENABLE == STD_OFF)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1083      /* [cover parentID={485F7D54-D0D9-41bb-BF5A-7C7E1D2B2A68}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1084      Is the requested alarm  group is Alarm group 21?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1085      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1086      if((uint8)AlarmGroup == (uint8)SMU_ALARM_GROUP21)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1087      #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1088      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1089        /*Enable alarm status clear for Smu_stdby*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1090        /* [cover parentID={F02B96C1-F463-4c61-B913-A6BC44FBDE37}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1091        Enable alarm status clear for SMU standby mode
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1092        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1093        SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG(&MODULE_PMS.CMD_STDBY, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1094            (SMU_STDBY_BIT_PROT | SMU_STDBY_ASCE_COMMAND | PMS_CMD_STDBY.U));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1095        /* [cover parentID={A3C19486-954B-447d-9434-A5D3B324E223}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1096        Clear the alarm configuration register for the requested alarm
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1097        group 21 position.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1098        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1099        SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1100            &MODULE_PMS.AG_STDBY1, (uint32)((uint32)SMU_ALARM_POS1 << AlarmPos));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1101      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1102    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1103    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1104  }
	ret
.L439:
	
__Smu_lClrAlarmStatus_function_end:
	.size	Smu_lClrAlarmStatus,__Smu_lClrAlarmStatus_function_end-Smu_lClrAlarmStatus
.L281:
	; End of function
	
	.sdecl	'.text.Smu_lSetAlarmStatus.Code.Cpu0',code,cluster('Smu_lSetAlarmStatus')
	.sect	'.text.Smu_lSetAlarmStatus.Code.Cpu0'
	.align	2
	

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1105  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1106  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1107  ** Traceability     :[cover parentID={1E29E5BF-A25E-4ea4-AF0E-74A79844AA92}]  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1108  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1109  ** Syntax           : static Std_ReturnType Smu_lSetAlarmStatus(              **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1110  **                      const Smu_AlarmGroupId AlarmGroup,                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1111  **                      const Smu_AlarmIdType  AlarmPos)                      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1112  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1113  ** Description      : The purpose of the function is to set the status of     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1114  **                    requested alarm group and position.                     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1115  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1116  ** Service ID       : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1117  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1118  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1119  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1120  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1121  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1122  ** Parameters(in)   : AlarmGroup:Alarm group to clear the status              **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1123  **                    AlarmPos:Alarm position to clear the status             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1124  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1125  ** Parameters (out) : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1126  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1127  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1128  **                    E_NOT_OK - Operation failed                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1129  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1130  static void Smu_lSetAlarmStatus(const Smu_AlarmGroupId AlarmGroup,
; Function Smu_lSetAlarmStatus
.L109:
Smu_lSetAlarmStatus:	.type	func

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1131                                  const Smu_AlarmIdType AlarmPos)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1132  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1133    Smu_CoreStateType SmuState;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1134    /* Read the SMU state from module DBG register */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1135    /* [cover parentID={C1F92F60-2A93-46d3-BFF4-CB12D2E5C2DA}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1136    Read the SMU state from module DBG register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1137    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1138    SmuState = (uint8)(SMU_DBG.B.SSM);
	movh.a	a15,#61443
	ld.bu	d15,[a15]@los(0xf0036838)
.L485:
	and	d15,#3
.L936:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1139    /* SMU is in START state */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1140    /* [cover parentID={A9F458AD-5786-4e50-B01E-6B1085CACBA4}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1141    Is SMU in START state ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1142    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1143    if(SMU_START_STATE == SmuState)
	jne	d15,#0,.L4
.L937:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1144    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1145      /* All SMU Groups are allowed to set alarm status */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1146      /* [cover parentID={DEF71E0A-5250-40e9-8A25-8EF3676FD79D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1147      Set alarm status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1148      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1149      /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1150      pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1151      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG((uint32*)  \ 
	lea	a15,[a15]@los(0xf00369c0)
	addsc.a	a4,a15,d4,#2
	mov	d4,#1
.L483:
	sh	d4,d4,d5
	j	Mcal_WriteSafetyEndInitProtReg
.L4:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1152          &SMU_CORE_ALARM_GROUP->AGStatusReg[AlarmGroup], \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1153          ((uint32)SMU_ALARM_POS1 << AlarmPos));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1154    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1155    /* Alarm is in RUN state or FAULT state */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1156    /* [cover parentID={FE8126A1-A1DE-480a-B089-ED0F2D509F5E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1157    Is Alarm in either RUN state or FAULT state ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1158    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1159    else if ((SMU_RUN_STATE == SmuState) || (SMU_FAULT_STATE == SmuState))
	jeq	d15,#1,.L6
.L938:
	jne	d15,#2,.L7
.L6:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1160    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1161      /*Only SMU SW alarm group can chenge status in this state.*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1162      /*Check if the requested group is SW alarm group.*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1163      /* [cover parentID={4AC51A1A-E163-47a2-810E-854959950439}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1164      Is the requested group SW alarm group ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1165      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1166      if((uint8)AlarmGroup == SMU_SW_ALARM_GROUP)
	mov	d15,#10
.L486:
	jne	d15,d4,.L8
.L939:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1167      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1168        /*Write SMU_Alarm command to trigger SW based alarm*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1169        /* [cover parentID={8AC727F8-D116-44c7-AD9E-B8FE33FB2DC4}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1170        Write SMU_Alarm command to trigger SW based alarm
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1171        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1172        SMU_SFR_RUNTIME_WRITE32(&SMU_CMD.U, ((uint32)SMU_ALARM_COMMAND \ 
	sh	d5,#4
.L484:
	or	d15,d5,#6
	movh.a	a15,#61443
	st.w	[a15]@los(0xf0036820),d15
.L8:
.L7:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1173                               | ((uint32)AlarmPos << SMU_CMD_ARG_BIT_POS)));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1174      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1175    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1176    else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1177    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1178      /*Invalid state*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1179    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1180  }
	ret
.L444:
	
__Smu_lSetAlarmStatus_function_end:
	.size	Smu_lSetAlarmStatus,__Smu_lSetAlarmStatus_function_end-Smu_lSetAlarmStatus
.L286:
	; End of function
	
	.sdecl	'.text.Smu_lSetAlmAction.Code.Cpu0',code,cluster('Smu_lSetAlmAction')
	.sect	'.text.Smu_lSetAlmAction.Code.Cpu0'
	.align	2
	

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1181  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1182  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1183  ** Traceability     :[cover parentID={0918C35B-BE7C-4fbf-A5CB-21803F1417F5}]  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1184  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1185  ** Syntax           : static Std_ReturnType Smu_lSetAlmAction(                **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1186  **                      const Smu_AlarmGroupId AlarmGroup,                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1187  **                      const Smu_AlarmIdType  AlarmPos,                      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1188  **                      const Smu_CoreAlarmActionType AlarmAction,            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1189  **                      const Smu_FSPActionType FSPAction)                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1190  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1191  ** Description      : The purpose of the function is to set the desired alarm **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1192  **                    action.                                                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1193  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1194  ** Service ID       : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1195  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1196  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1197  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1198  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1199  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1200  ** Parameters(in)   : AlarmGroup:Alarm group to clear the status              **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1201  **                    AlarmPos:Alarm position to clear the status             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1202  **                    AlarmAction:Internal alarm action to be configured      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1203  **                    FSPAction:FSP alarm action to be configured             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1204  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1205  ** Parameters (out) : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1206  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1207  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1208  **                    E_NOT_OK - Operation failed                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1209  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1210  static Std_ReturnType Smu_lSetAlmAction(const Smu_AlarmGroupId AlarmGroup,
; Function Smu_lSetAlmAction
.L111:
Smu_lSetAlmAction:	.type	func
	sub.a	a10,#8
.L487:
	mov	d9,d4
.L489:
	mov	e10,d6,d5
	mov	d12,d7
.L490:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1211                                 const Smu_AlarmIdType AlarmPos,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1212                                 const Smu_CoreAlarmActionType AlarmAction,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1213                                 const Smu_FSPActionType FSPAction)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1214  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1215    uint8 AlarmGroupCFIndex;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1216    uint32 AlarmGroupCF2;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1217    uint32 AlarmGroupCF1;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1218    uint32 AlarmGroupCF0;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1219    uint32 AlarmGroupCFMask;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1220    Std_ReturnType RetVal = E_NOT_OK;
	mov	d8,#1
.L492:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1221  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1222    /* Get the Register set index */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1223    AlarmGroupCFIndex = (uint8)((uint8)AlarmGroup * SMU_ALMACTION_MSK);
	mul	d0,d9,#3
.L944:
	extr.u	d13,d0,#0,#8
.L494:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1224  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1225    /* Get the mask for configuration registers to set the perticular bits*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1226    AlarmGroupCFMask = ~((uint32)SMU_ALARM_VALID << AlarmPos);
	mov	d0,d8
.L495:
	sh	d0,d0,d10
.L496:
	mov	d15,#-1
	xor	d14,d0,d15
.L497:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1227  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1228    /* [cover parentID={0D20AD6F-7260-4c0d-90C9-531A056367E4}][/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1229    /* [cover parentID={5F697F7E-0A4B-411b-9ADB-B60CA7D7C01C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1230    Enter critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1231    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1232    SchM_Enter_Smu_DriverAccess();
	call	SchM_Enter_Smu_DriverAccess
.L488:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1233    /*Acquire spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1234    /* [cover parentID={6471CFAE-4C46-4291-9E14-30DB3B098643}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1235    Acquire spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1236    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1237    Mcal_GetSpinlock(&Smu_LockAddress, SMU_SPINLOCK_TIMEOUT);
	movh.a	a4,#@his(Smu_LockAddress)
	lea	a4,[a4]@los(Smu_LockAddress)
.L945:
	mov	d4,#8192
	call	Mcal_GetSpinlock
.L946:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1238  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1239    /* [cover parentID={C9EFB3CD-B2F4-4301-986D-F3F5FD7F54F9}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1240    Is the alarm group in SMU core ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1241    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1242    if((uint8)AlarmGroup < SMU_CORE_TOTAL_ALARM_GROUPS)
	jge.u	d9,#12,.L9
.L499:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1243    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1244      /* Extract Alarm configuration for 3 CFG registers from
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1245      input parameter*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1246      /* [cover parentID={B6576F5B-2DB9-4a3c-958F-4631A45B0F52}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1247      Extract Configuration Group 0 as per mask from input parameter
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1248      for specified alarm group
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1249      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1250      AlarmGroupCF0 = (uint32)(((uint32)AlarmAction & \ 
	and	d15,d11,#1
.L500:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1251                      (uint32)SMU_ALMGRP_CFG0_MASK)<< (uint32)AlarmPos);
	sh	d8,d15,d10
.L493:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1252      /*Extract Configuration Group 1 as per mask from input parameter
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1253      for specified alarm group*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1254      AlarmGroupCF1 = (uint32)((uint32)(((uint32)AlarmAction & \ 
	and	d15,d11,#2
.L501:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1255                      (uint32)SMU_ALMGRP_CFG1_MASK) >> (uint32)SMU_ALARM_POS1) \ 
	sh	d15,#-1
.L502:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1256                      << (uint32)AlarmPos);
	sh	d15,d15,d10
.L503:
	st.w	[a10],d15
.L505:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1257      /*Extract Configuration Group 2 as per mask from input parameter
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1258      for specified alarm group*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1259      AlarmGroupCF2 = (uint32)((uint32)(((uint32)AlarmAction & \ 
	and	d15,d11,#4
.L504:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1260                      (uint32)SMU_ALMGRP_CFG2_MASK) >> (uint32)SMU_ALARM_POS2) \ 
	sh	d15,#-2
.L506:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1261                      << (uint32)AlarmPos);
	sh	d11,d15,d10
.L507:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1262  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1263      /*Write Config key to configure the SMU registers. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1264      /* [cover parentID={DB839A87-32AD-44f8-82A7-56B042B0D57D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1265      Write Config key to Unlock the SMU  configuration registers
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1266      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1267      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG(&MODULE_SMU.KEYS, \ 
	movh.a	a4,#61443
	ld.w	d15,[a4]@los(0xf0036834)
	insert	d15,d15,#0,#0,#8
	or	d4,d15,#188
	lea	a4,[a4]@los(0xf0036834)
	call	Mcal_WriteSafetyEndInitProtReg
.L947:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1268          (uint32)SMU_CFG_KEY_UNLOCK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1269  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1270      /* [cover parentID={DACC9979-02B5-4e00-8348-956B477DA98A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1271      Write Alarm configuration into SMU alarm CF0 registers
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1272      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1273      /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1274      pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1275      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf0036900)
	addsc.a	a15,a15,d13,#2
	ld.w	d15,[a15]
	and	d15,d14
	or	d4,d15,d8
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf0036900)
	addsc.a	a4,a15,d13,#2
	call	Mcal_WriteSafetyEndInitProtReg
.L948:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1276          &SMU_CORE_ALARM_GROUP->CfgReg[AlarmGroupCFIndex].U, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1277          (((SMU_CORE_ALARM_GROUP->CfgReg[AlarmGroupCFIndex].U)& \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1278            (uint32)AlarmGroupCFMask) | (uint32)AlarmGroupCF0));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1279  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1280      /* [cover parentID={93351F5F-1B48-4492-AE4D-BF346674720A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1281      Write Alarm configuration into SMU alarm CF1 registers
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1282      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1283      /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1284      pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1285      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf0036900)
	sh	d0,d13,#2
	addsc.a	a15,a15,d0,#0
	ld.w	d15,[a15]4
	and	d15,d14
	ld.w	d4,[a10]
.L508:
	or	d4,d15
.L509:
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf0036900)
	addsc.a	a15,a15,d0,#0
	lea	a4,[a15]4
	call	Mcal_WriteSafetyEndInitProtReg
.L949:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1286          &SMU_CORE_ALARM_GROUP->CfgReg \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1287          [(AlarmGroupCFIndex + SMU_ALARM_POS1)].U, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1288          (((SMU_CORE_ALARM_GROUP->CfgReg \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1289             [(AlarmGroupCFIndex + SMU_ALARM_POS1)].U)& \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1290            (uint32)AlarmGroupCFMask) | (uint32)AlarmGroupCF1) );
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1291  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1292      /* [cover parentID={DE391D65-8AE5-4892-8551-ED9A511DF301}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1293      Write Alarm configuration into SMU alarm CF2 registers
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1294      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1295      /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1296      pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1297      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf0036900)
	sh	d15,d13,#2
	addsc.a	a15,a15,d15,#0
	ld.w	d0,[a15]8
	and	d0,d14
	or	d4,d0,d11
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf0036900)
	addsc.a	a15,a15,d15,#0
	lea	a4,[a15]8
	call	Mcal_WriteSafetyEndInitProtReg
.L950:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1298          &SMU_CORE_ALARM_GROUP->CfgReg \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1299          [(AlarmGroupCFIndex + SMU_ALARM_POS2)].U, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1300          (((SMU_CORE_ALARM_GROUP->CfgReg \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1301             [(AlarmGroupCFIndex + SMU_ALARM_POS2)].U) & \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1302            (uint32)AlarmGroupCFMask) | (uint32)AlarmGroupCF2 ) );
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1303  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1304      /* [cover parentID={7E6B847B-5530-4a57-ADC9-EF5ECDE5B0D3}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1305      Write FSP action into FSP configuration register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1306      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1307      /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1308      pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1309      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf0036990)
	addsc.a	a15,a15,d9,#2
	ld.w	d15,[a15]
	and	d14,d15
.L498:
	sh	d12,d12,d10
.L491:
	or	d4,d14,d12
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf0036990)
	addsc.a	a4,a15,d9,#2
	call	Mcal_WriteSafetyEndInitProtReg
.L951:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1310          &SMU_CORE_ALARM_GROUP->FSPCfgReg[AlarmGroup].U, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1311          (((SMU_CORE_ALARM_GROUP->FSPCfgReg[AlarmGroup].U)& \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1312            (uint32)AlarmGroupCFMask) | (FSPAction << AlarmPos)));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1313  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1314      /* After configuration set temporary lock of SMU configuration*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1315      /* [cover parentID={9B04BE01-CFC4-4ba0-8A29-D287AFEA97E4}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1316      Set temporary lock of SMU configuration
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1317      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1318      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG(&MODULE_SMU.KEYS, \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036834)
	mov	d4,#0
	call	Mcal_WriteSafetyEndInitProtReg
.L952:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1319          (uint32)SMU_CFG_KEY_TEMPLOCK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1320  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1321      RetVal = E_OK;
	mov	d8,#0
.L9:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1322    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1323    /* [cover parentID={F539D404-CF9A-411e-993A-C7936815F3E5}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1324    Is Smu_stdby enabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1325    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1326    #if(SMU_STANDBY_SWITCH == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1327    /* [cover parentID={5633929C-DDBE-430c-B4ED-2BD7F4E660F6}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1328    Is the alarm group Alarm group 20 ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1329    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1330    else if(AlarmGroup == SMU_ALARM_GROUP20)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1331    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1332      /*Configure the FSP configuration registers for Smu_stdby
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1333        group 20*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1334      /* [cover parentID={81153733-B64A-4865-BDA5-AB4907B228D8}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1335      Write FSP action into FSP configuration registers for Smu_stdby group 20
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1336      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1337      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1338        &MODULE_PMS.AGFSP_STDBY0, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1339        ((PMS_AGFSP_STDBY0.U & (uint32)AlarmGroupCFMask) | \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1340        SMU_STDBY_BIT_PROT | (FSPAction << AlarmPos)));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1341  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1342      RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1343    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1344    else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1345    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1346      /* [cover parentID={AEE38933-84C6-46e9-B809-D879A2C54F9E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1347      Is DET and Safety disabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1348      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1349      #if (SMU_DEV_ERROR_DETECT == STD_OFF) && \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1350      (SMU_SAFETY_ENABLE == STD_OFF)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1351      /* [cover parentID={A7E56CC4-C987-479a-A2E7-58719704708F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1352      Is the alarm group Alarm group 21 ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1353      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1354      if(AlarmGroup == SMU_ALARM_GROUP21)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1355      #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1356      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1357        /*Configure the FSP configuration registers for Smu_stdby
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1358        group 21*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1359        /* [cover parentID={85757A0E-878D-4ffc-8CCE-C256AB4AA1B3}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1360        Write FSP action into FSP configuration registers for
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1361        Smu_stdby group 21
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1362        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1363        SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1364          &MODULE_PMS.AGFSP_STDBY1, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1365          ((PMS_AGFSP_STDBY1.U & (uint32)AlarmGroupCFMask) | \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1366          SMU_STDBY_BIT_PROT | (FSPAction << AlarmPos)));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1367  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1368        RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1369      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1370    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1371    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1372    /*Release the spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1373    /* [cover parentID={59D8ACF6-2DC8-4cea-8A20-3DC26C486E3B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1374    Release the spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1375    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1376    Mcal_ReleaseSpinlock(&Smu_LockAddress);
	movh.a	a4,#@his(Smu_LockAddress)
	lea	a4,[a4]@los(Smu_LockAddress)
	call	Mcal_ReleaseSpinlock
.L953:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1377    /* [cover parentID={93C3EE94-390A-464f-914A-6659FA643752}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1378    Exit critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1379    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1380    SchM_Exit_Smu_DriverAccess();
	call	SchM_Exit_Smu_DriverAccess
.L954:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1381    /* [cover parentID={7989ED14-0EE8-4cff-9E6A-30BE2EAD3997}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1382    Return the result of return value
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1383    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1384    return RetVal;
	mov	d2,d8
.L510:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1385  }
	ret
.L450:
	
__Smu_lSetAlmAction_function_end:
	.size	Smu_lSetAlmAction,__Smu_lSetAlmAction_function_end-Smu_lSetAlmAction
.L291:
	; End of function
	
	.sdecl	'.text.Smu_lGetAlmAction.Code.Cpu0',code,cluster('Smu_lGetAlmAction')
	.sect	'.text.Smu_lGetAlmAction.Code.Cpu0'
	.align	2
	

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1386  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1387  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1388  ** Traceability     : [cover parentID={F49F8CE5-965F-4fce-9D0E-0B00189837C1}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1389  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1390  ** Syntax           : static Std_ReturnType Smu_lGetAlmAction(                **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1391  **                      const Smu_AlarmGroupId AlarmGroup,                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1392  **                      const Smu_AlarmIdType  AlarmPos)                      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1393  **                      Smu_CoreAlarmActionType * const AlarmGroup,           **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1394  **                      Smu_FSPActionType * const FSPAction)                  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1395  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1396  ** Description      : The purpose of the function is to get the desired alarm **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1397  **                    action.                                                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1398  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1399  ** Service ID       : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1400  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1401  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1402  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1403  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1404  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1405  ** Parameters(in)   : AlarmGroup : Alarm group register                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1406  **                    AlarmPos   : Alarm position within the requested group  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1407  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1408  ** Parameters (out) : IntAlarmAction: Alarm action for the requested alarm    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1409  **                    FSPAction  : FSP action for the requested alarm         **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1410  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1411  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1412  **                    E_NOT_OK - Operation failed                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1413  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1414  static Std_ReturnType Smu_lGetAlmAction(const Smu_AlarmGroupId AlarmGroup,
; Function Smu_lGetAlmAction
.L113:
Smu_lGetAlmAction:	.type	func

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1415                                const Smu_AlarmIdType AlarmPos,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1416                                Smu_CoreAlarmActionType * const IntAlarmAction,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1417                                Smu_FSPActionType * const FSPAction)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1418  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1419    Std_ReturnType RetVal = (Std_ReturnType)E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1420    uint32  AlarmGroupCF2;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1421    uint32  AlarmGroupCF1;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1422    uint32  AlarmGroupCF0;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1423    uint32 AlarmGroupCFIndex;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1424    Smu_CoreAlarmActionType  IntActionRes;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1425    Smu_FSPActionType FSPActionRes;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1426  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1427    /* [cover parentID={57F99E91-8AA6-4108-88A6-F6CD8A1B3B0B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1428    Is the required Alarm Group in SMU Core ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1429    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1430    if((uint8)AlarmGroup < SMU_CORE_TOTAL_ALARM_GROUPS)
	jge.u	d4,#12,.L11
.L959:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1431    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1432      /* Get the Register set index */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1433      /* [cover parentID={F02B98BC-8A82-4b99-A0B3-4138B77BA86B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1434      Get the Register set index
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1435      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1436      AlarmGroupCFIndex = (uint32)((uint32)AlarmGroup * SMU_ALMACTION_MSK);
	mul	d15,d4,#3
.L512:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1437  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1438      /* Read Alarm configuration from SMU alarm CFx (x=0-2) registers
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1439      and align them to combine to get 3 bit value*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1440  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1441      /* [cover parentID={0F3EBF11-7258-4448-A572-A035EA943164}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1442      Read  as per mask from configuration group 0 for specified alarm position
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1443      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1444      /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1445      pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1446      AlarmGroupCF0 = (uint32)(((uint32) \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1447                      (SMU_CORE_ALARM_GROUP->CfgReg[AlarmGroupCFIndex].U)>> \ 
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf0036900)
.L960:
	addsc.a	a15,a15,d15,#2
.L961:
	ld.w	d0,[a15]
.L962:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1448                      (uint32)AlarmPos) & (uint32)SMU_ALMGRP_CFG0_MASK);
	extr.u	d0,d0,d5,#1
.L514:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1449  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1450      /* [cover parentID={CB032CB6-A1D5-4581-9B64-F927A4463E6C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1451      Read  as per mask from configuration group 1 for specified alarm position
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1452      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1453      /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1454      pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1455      AlarmGroupCF1 = ((uint32)((uint32)((uint32)(SMU_CORE_ALARM_GROUP->CfgReg
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf0036900)
.L963:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1456                      [(AlarmGroupCFIndex + (uint32)SMU_ALARM_POS1)].U) >> \ 
	sh	d15,#2
.L513:
	addsc.a	a15,a15,d15,#0
.L964:
	ld.w	d1,[a15]4
.L965:
	mov	d2,d5
.L516:
	rsub	d2,#0
.L511:
	sh	d1,d1,d2
.L966:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1457                      (uint32)AlarmPos) << (uint32)SMU_ALARM_POS1) & \ 
	sh	d1,#1
.L967:
	and	d1,d1,#2
.L517:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1458                      (uint32)SMU_ALMGRP_CFG1_MASK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1459  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1460      /* [cover parentID={254C5CA1-5CDD-4866-8041-77A1866948BD}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1461      Read  as per mask from configuration group 2 for specified alarm position
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1462      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1463      /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1464      pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1465      AlarmGroupCF2 = ((uint32)((uint32)((uint32)(SMU_CORE_ALARM_GROUP->CfgReg \ 
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf0036900)
.L968:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1466                      [(AlarmGroupCFIndex + (uint32)SMU_ALARM_POS2)].U) >> \ 
	addsc.a	a15,a15,d15,#0
.L969:
	ld.w	d15,[a15]8
.L970:
	sh	d15,d15,d2
.L971:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1467                      (uint32)AlarmPos) << (uint32)SMU_ALARM_POS2) & \ 
	sh	d15,#2
.L518:
	and	d15,#4
.L972:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1468                      (uint32)SMU_ALMGRP_CFG2_MASK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1469  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1470      /* [cover parentID={81D53095-EA8F-46fd-993D-8138631AC1E4}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1471      Combine the alarm actions configured into 3 bit value and assign
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1472      to out parameter
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1473      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1474      *IntAlarmAction = (Smu_CoreAlarmActionType)(AlarmGroupCF0 |
	or	d0,d1
.L515:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1475                        AlarmGroupCF1 | AlarmGroupCF2);
	or	d0,d15
.L973:
	st.b	[a4],d0
.L974:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1476  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1477      /* [cover parentID={306ACA73-D7A6-4da9-87B4-9D5DE5430A96}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1478      Assign the FSP action configured to out parameter
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1479      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1480      /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between pointers of
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1481          different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1482      *FSPAction = (Smu_FSPActionType) \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1483                   (((SMU_CORE_ALARM_GROUP->FSPCfgReg[(uint32)AlarmGroup].U) \ 
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf0036990)
.L975:
	addsc.a	a15,a15,d4,#2
.L976:
	ld.w	d15,[a15]
.L519:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1484                     >> (uint32)AlarmPos)& SMU_ALARM_FSP_MASK);
	extr.u	d15,d15,d5,#1
.L520:
	st.w	[a5],d15
.L11:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1485  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1486    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1487    /* [cover parentID={16B82FB9-FF42-4cbf-A599-7E4A35C0B2C6}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1488    Is Smu_stdby enabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1489    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1490    #if(SMU_STANDBY_SWITCH == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1491    /* [cover parentID={3E7CB496-47E9-41f9-B61A-1407060EB635}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1492    Is required alarm group Alarm Group 20 ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1493    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1494    else if(AlarmGroup == SMU_ALARM_GROUP20)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1495    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1496      /* [cover parentID={AA555433-703C-4c9d-84A0-A92ABACC824C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1497      Assign internal action to no reaction
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1498      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1499      *IntAlarmAction = SMU_ALARM_ACTION_NONE;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1500      /* [cover parentID={15FB85CE-4FCE-454f-8268-BB345D184C05}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1501      Assign the FSP action configured to out parameter
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1502      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1503      *FSPAction = (Smu_FSPActionType)(((PMS_AGFSP_STDBY0.U) >> \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1504                                        (uint32)AlarmPos)& SMU_ALARM_FSP_MASK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1505    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1506    else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1507    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1508      /* [cover parentID={62F372AD-4BB1-4921-A43C-E0AB6CE21F39}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1509      Is required alarm group Alarm group 21?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1510      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1511      if(AlarmGroup == SMU_ALARM_GROUP21)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1512      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1513        /* [cover parentID={39F24D91-2C2C-4660-803D-BB53709FE986}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1514        Assign internal action to no reaction
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1515        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1516        *IntAlarmAction = SMU_ALARM_ACTION_NONE;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1517        /* [cover parentID={4A54E508-E1ED-4498-8BE9-DDE19A15BB17}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1518        Assign the FSP action configured to out parameter
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1519        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1520        *FSPAction = (Smu_FSPActionType)(((PMS_AGFSP_STDBY1.U) >> \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1521                                          (uint32)AlarmPos)& SMU_ALARM_FSP_MASK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1522      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1523    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1524    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1525    /*Check validity of internal action*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1526    IntActionRes = *IntAlarmAction;
	ld.bu	d15,[a4]
.L521:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1527  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1528    /*Check validity of FSP action*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1529    FSPActionRes = *FSPAction;
	ld.w	d0,[a5]
.L522:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1530  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1531    /* [cover parentID={C5B925C4-7642-4a75-ABF0-59B438BF20FF}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1532    Is internal action as well as FSP action valid ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1533    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1534    if(((IntActionRes == SMU_ALARM_ACTION_NONE) ||
	jeq	d15,#0,.L12
.L977:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1535        (IntActionRes == SMU_ALARM_ACTION_IGCS0) ||
	jeq	d15,#2,.L13
.L978:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1536        (IntActionRes == SMU_ALARM_ACTION_IGCS1) ||
	jeq	d15,#3,.L14
.L979:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1537        (IntActionRes == SMU_ALARM_ACTION_IGCS2) ||
	jeq	d15,#4,.L15
.L980:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1538        (IntActionRes == SMU_ALARM_ACTION_NMI) ||
	jeq	d15,#5,.L16
.L981:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1539        (IntActionRes == SMU_ALARM_ACTION_RESET) ||
	jeq	d15,#6,.L17
.L982:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1540        (IntActionRes == SMU_ALARM_ACTION_CPU_RESET)) &&
	jne	d15,#7,.L18
.L17:
.L16:
.L15:
.L14:
.L13:
.L12:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1541        (FSPActionRes <= SMU_FSP_ACTION_MSK))
	jge.u	d0,#2,.L19
.L983:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1542    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1543      /* [cover parentID={4BCDE4C2-DB3C-4837-AFBA-EAFEE4FA175B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1544      Return result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1545      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1546      RetVal = (Std_ReturnType)E_OK;
	mov	d2,#0
.L523:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1547    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1548    else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1549    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1550      /* [cover parentID={8D2CD8B3-1A75-45cf-B763-19344F240AF1}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1551      Return result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1552      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1553      RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1554    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1555    /* [cover parentID={5C95A235-BD5A-4099-B449-9084702C9598}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1556    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1557    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1558    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1559  }
	ret
.L19:
.L18:
	mov	d2,#1
.L524:
	ret
.L465:
	
__Smu_lGetAlmAction_function_end:
	.size	Smu_lGetAlmAction,__Smu_lGetAlmAction_function_end-Smu_lGetAlmAction
.L296:
	; End of function
	
	.sdecl	'.text.Smu_Init.Code.Cpu0',code,cluster('Smu_Init')
	.sect	'.text.Smu_Init.Code.Cpu0'
	.align	2
	
	.global	Smu_Init

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1560  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1561  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1562  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1563  **                      Global Function Definitions                           **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1564  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1565  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1566  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1567  ** Traceability     : [cover parentID={B04BBEBC-4001-4d36-B4B5-2A1442DE3350}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1568  **                    [cover parentID={20BE67A9-790F-4e0f-961F-F823089B98E1}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1569  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1570  ** Syntax           : Std_ReturnType Smu_Init(Smu_ConfigType* ConfigPtr)      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1571  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1572  ** Description      : The purpose of the API is to setup the SMU peripheral   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1573  **                    based on the configuration. The SMU driver initializes  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1574  **                    the resources of the AURIX SMU peripheral, for example  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1575  **                    the error reaction and the Fault Signalling Protocol    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1576  **                    (FSP). Initialization should be done only from the      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1577  **                    master core.                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1578  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1579  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1580  ** Service ID       : 0xA8                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1581  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1582  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1583  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1584  ** Reentrancy       : Non Reentrant                                           **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1585  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1586  ** Parameters(in)   : ConfigPtr - Pointer to the SMU configuration for        **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1587  **                                  initialization                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1588  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1589  ** Parameters (out) : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1590  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1591  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1592  **                    E_NOT_OK - Operation failed eg. Driver already          **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1593  **                    initialized.                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1594  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1595  Std_ReturnType Smu_Init
; Function Smu_Init
.L115:
Smu_Init:	.type	func
	mov.aa	a15,a4
.L526:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1596  (
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1597    const Smu_ConfigType* const ConfigPtr
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1598  )
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1599  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1600    Std_ReturnType RetVal = (Std_ReturnType)E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1601    uint32 Index;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1602    uint32 CurrentCoreID;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1603  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1604    /*Check if det is on or safety is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1605    /* [cover parentID={0209F0E0-A75E-47c7-BE00-4C3CA36077DB}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1606    DET or safety is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1607    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1608    #if (SMU_DEV_ERROR_DETECT == STD_ON)||(SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1609    /*Check if config pointer is a NULL pointer*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1610    /* [cover parentID={577A59B1-E4F3-4616-B0FB-CE1C96BFFA29}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1611    Check if config pointer is  a NULL pointer
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1612    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1613    if( ConfigPtr == NULL_PTR)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1614    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1615      /*Report error SMU_E_INIT_FAILED*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1616      /* [cover parentID={B2961759-7D15-4d74-A984-93F8333BF8F3}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1617      Report error SMU_E_INIT_FAILED
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1618      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1619      Smu_lReportError(SMU_SID_INIT, SMU_E_INIT_FAILED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1620    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1621    else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1622    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1623    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1624      /*Get the current core id*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1625      /* [cover parentID={4C65168E-B58B-4005-871E-B58E3D3D51D3}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1626      Get the current core id
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1627      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1628      CurrentCoreID = Mcal_GetCpuIndex();
	call	Mcal_GetCpuIndex
.L525:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1629      /*If the core is master core, proceed with initialization sequence*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1630      /* [cover parentID={2882EA1A-2F3A-4c59-8FA8-FFA856726F9E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1631      Check if it is the core  master core ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1632      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1633      if(MCAL_MASTER_COREID == CurrentCoreID)
	jne	d2,#0,.L22
.L635:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1634      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1635        /*Check if det is on or safety is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1636        /* [cover parentID={31C5F837-EA53-45fb-8D38-CAD8A8398641}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1637        DET is or safety is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1638        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1639        #if (SMU_DEV_ERROR_DETECT == STD_ON) || \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1640        (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1641  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1642        /* Check if SMU driver is already initialized */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1643        /* [cover parentID={B9C4E348-42FF-4e61-B121-2DC45C97AB15}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1644        Check if SMU driver is already initialized
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1645        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1646        if(SMU_INITIALIZED == Smu_InitStatus)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1647        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1648          /*Report error SMU_E_ALREADY_INITIALIZED*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1649          /* [cover parentID={7CF4713A-D698-4e4d-AE8E-4C341E39D103}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1650          Report error SMU_E_ALREADY_INITIALIZED
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1651          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1652          Smu_lReportError(SMU_SID_INIT, SMU_E_ALREADY_INITIALIZED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1653        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1654        /*Check if driver is permanently locked*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1655        /* [cover parentID={49CD2848-6097-4443-82E9-BD0DAE331F4C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1656        Check if configuration registers are permanently locked
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1657        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1658        else if(((uint32)(SMU_KEYS.U & SMU_KEY_PERLOCK_MASK) >>
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1659                 SMU_LOCK_MSK) == (uint32)SMU_CFG_PERLCK_VALUE)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1660        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1661          /* SMU config registers are permanently locked */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1662          /* [cover parentID={CBAF9024-3EC9-42b3-AC18-B005EA60FED5}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1663          Set SMU Lock State to Locked
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1664          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1665          Smu_LockState = SMU_LOCKED;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1666          /*Report error SMU_E_LOCKED*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1667          /* [cover parentID={3DF437D5-189C-4119-91F6-D86737739007}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1668          Report error SMU_E_LOCKED
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1669          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1670          Smu_lReportError(SMU_SID_INIT, SMU_E_LOCKED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1671          /* [cover parentID={FD570D1C-0740-4014-8AB5-9DC50E2887DA}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1672          Return Result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1673          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1674          RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1675        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1676        else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1677        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1678          /* [cover parentID={F886D40A-FAB0-47a5-A5B0-F2C6E329EDB7}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1679          Set Result to E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1680          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1681          RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1682        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1683        /* Initialize SMU Driver if no DET or Safety errors */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1684        /* [cover parentID={49F3741A-5E9B-42aa-A1BB-70FD4954757B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1685        Are DET and safety checks  passed?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1686        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1687        if(RetVal == (Std_ReturnType)E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1688        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1689        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1690  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1691          /* [cover parentID={1CDB2637-5F2E-4a6e-8D7C-08CE79D866A3}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1692          Clear all SMU Alarms
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1693          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1694          Smu_lClearAllAlarms();
	call	Smu_lClearAllAlarms
.L527:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1695  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1696          /*Unlock the configuration to configure the SMU registers. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1697          /* [cover parentID={BAFD1E3C-2C3D-460d-BB3B-1261FFF93DAA}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1698          Unlock the configuration registers to configure the SMU registers
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1699          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1700          SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	ld.w	d15,[a4]@los(0xf0036834)
	insert	d15,d15,#0,#0,#8
	or	d4,d15,#188
	lea	a4,[a4]@los(0xf0036834)
	call	Mcal_WriteSafetyEndInitProtReg
.L636:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1701              &MODULE_SMU.KEYS, SMU_CFG_KEY_UNLOCK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1702  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1703          /* [cover parentID={7A08B7FA-598D-41f3-83B9-A4C9F8A24C26}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1704          Configure FSP mode in FSP register of Smu_core as Bi-stable mode
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1705          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1706          SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREGMASK(&MODULE_SMU.FSP, \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036828)
	mov	d4,#0
	mov	d5,#96
	call	Mcal_WriteSafetyEndInitProtRegMask
.L637:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1707          (SMU_FSP_RESET_VAL & SMU_FSP_MODE_MSK), \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1708          SMU_FSP_MODE_MSK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1709  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1710          /*JIRA Reference: 0000053912-9599
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1711          A dummy read of FSP register is required to ensure that FSP mode is
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1712          written into the register and not cached or stored in write buffer,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1713          before modifying the values of PRE1, PRE2 or TFSP_HIGH.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1714          Mcal_WriteSafetyEndInitProtRegMask API, which is used to write into
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1715          the FSP register, has multiple dummy reads of WDT registers. Both WDT
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1716          and SMU operate on the SPB bus. Thus, the dummy reads of WDT registers
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1717          in the Mcal_WriteSafetyEndInitProtRegMask API also ensure that FSP mode
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1718          is written into the FSP register.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1719          Hence, a separate dummy read is not done here .*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1720  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1721          /* [cover parentID={7A08B7FA-598D-41f3-83B9-A4C9F8A24C26}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1722          Configure FSP configuration register of Smu_core except for FSP mode
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1723          as per the configuration*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1724          SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREGMASK( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036828)
	ld.w	d15,[a15]
	insert	d4,d15,#0,#5,#2
	mov	d5,#-97
	call	Mcal_WriteSafetyEndInitProtRegMask
.L638:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1725          &MODULE_SMU.FSP, ((ConfigPtr->FSPCfg) & SMU_FSP_CFG_MSK), \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1726          SMU_FSP_CFG_MSK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1727  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1728          /* [cover parentID={7A08B7FA-598D-41f3-83B9-A4C9F8A24C26}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1729          Configure FSP mode in FSP register of Smu_core as per the
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1730          configuration*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1731          SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREGMASK( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036828)
	ld.w	d15,[a15]
	and	d4,d15,#96
	mov	d5,#96
	call	Mcal_WriteSafetyEndInitProtRegMask
.L639:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1732          &MODULE_SMU.FSP, ((ConfigPtr->FSPCfg) & SMU_FSP_MODE_MSK), \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1733          SMU_FSP_MODE_MSK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1734  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1735          /*Configure alarm global configuration of Smu_core register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1736          as per the configuration */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1737          SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG\ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf003682c)
	ld.w	d4,[a15]4
	call	Mcal_WriteSafetyEndInitProtReg
.L640:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1738          (&MODULE_SMU.AGC, ConfigPtr->AGCCfg);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1739  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1740          /*Configure the recovery timer register of Smu_core as per the
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1741          configuration*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1742          SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036830)
	ld.w	d4,[a15]8
	call	Mcal_WriteSafetyEndInitProtReg
.L641:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1743              &MODULE_SMU.RTC, ConfigPtr->RTCCfg);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1744  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1745          /*Configure the recovery timer 0 alarm configuration 0 register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1746          as per the configuration*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1747          SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036860)
	ld.w	d4,[a15]12
	call	Mcal_WriteSafetyEndInitProtReg
.L642:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1748          (&MODULE_SMU.RTAC00, ConfigPtr->RTAC00Cfg);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1749  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1750          /*Configure the recovery timer 0 alarm configuration 1 register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1751          as per the configuration*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1752          SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036864)
	ld.w	d4,[a15]16
	call	Mcal_WriteSafetyEndInitProtReg
.L643:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1753              &MODULE_SMU.RTAC01, ConfigPtr->RTAC01Cfg);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1754  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1755          /*Configure the recovery timer 1 alarm configuration 0 register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1756          as per the configuration*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1757          SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036868)
	ld.w	d4,[a15]20
	call	Mcal_WriteSafetyEndInitProtReg
.L644:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1758          (&MODULE_SMU.RTAC10, ConfigPtr->RTAC10Cfg);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1759  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1760          /*Configure the recovery timer 1 alarm configuration 1 register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1761          as per the configuration*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1762          SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf003686c)
	ld.w	d4,[a15]24
.L645:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1763              &MODULE_SMU.RTAC11, ConfigPtr->RTAC11Cfg);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1764  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1765          /*Configure the alarm group configuration registers
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1766          for Smu_core*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1767          /* [cover parentID={CBE27963-B9A3-460d-8893-39C4C5D0E449}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1768          Configure Alarm  configuration registers as per the
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1769          configuration for SMU Core
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1770          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1771          for(Index = 0U; Index < SMU_CORE_TOTAL_ALARM_CONFIG_REG; Index++)
	mov	d15,#0
.L528:
	mov	d8,#36
.L646:
	j	.L23
.L24:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1772          {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1773            /* [cover parentID={F63E22AB-94B3-456e-A2F9-1466254A3A43}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1774            Configure Alarm  configuration register as per the alarm
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1775            group configuration for SMU Core
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1776            [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1777            /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1778            pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1779            SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a2,#61443
	lea	a2,[a2]@los(0xf0036900)
	addsc.a	a4,a2,d15,#2
	addsc.a	a2,a15,d15,#2
	ld.w	d4,[a2]32
.L647:
	add	d15,#1
.L23:
	call	Mcal_WriteSafetyEndInitProtReg
.L648:
	jlt.u	d15,d8,.L24
.L649:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1780                &SMU_CORE_ALARM_GROUP->CfgReg[Index], \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1781                ConfigPtr->AlarmCoreConfig[Index]);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1782          }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1783  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1784          /*Configure the FSP configuration registers for Smu_core*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1785          /* [cover parentID={2161037F-6C28-4799-8AAE-025E4000670A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1786          Configure the FSP configuration registers for SMU Core
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1787          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1788          for(Index = 0U; Index < SMU_CORE_TOTAL_ALARM_GROUPS; Index++)
	mov	d15,#0
.L650:
	j	.L25
.L26:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1789          {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1790            /* [cover parentID={A42FFC7E-620A-43b5-92E4-C3AFA1C10B3C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1791            Configure the FSP configuration registers for SMU Core
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1792            [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1793            /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1794            pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1795            SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a2,#61443
	lea	a2,[a2]@los(0xf0036990)
	addsc.a	a4,a2,d15,#2
	addsc.a	a2,a15,d15,#2
	ld.w	d4,[a2]176
	call	Mcal_WriteSafetyEndInitProtReg
.L651:
	add	d15,#1
.L25:
	jlt.u	d15,#12,.L26
.L652:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1796                &SMU_CORE_ALARM_GROUP->FSPCfgReg[Index], \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1797                ConfigPtr->AlarmCoreFspConfig[Index]);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1798          }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1799  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1800          /*Configure the Smu_stdby as disabled or enabled as per
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1801          user configuration*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1802          SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61477
	lea	a4,[a4]@los(0xf024819c)
	ld.w	d4,[a15]28
	call	Mcal_WriteSafetyEndInitProtReg
.L653:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1803              &MODULE_PMS.CMD_STDBY, (SMU_STDBY_BIT_PROT | \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1804                                      ConfigPtr->AlarmStdbyCfg));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1805  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1806          /*Configure the FSP configuration registers for Smu_stdby
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1807          group 20*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1808          SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61477
	lea	a4,[a4]@los(0xf02481a4)
	ld.w	d4,[a15]224
	call	Mcal_WriteSafetyEndInitProtReg
.L654:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1809              &MODULE_PMS.AGFSP_STDBY0, (SMU_STDBY_BIT_PROT | \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1810                                         ConfigPtr->AlarmStdbyFspConfig[0]));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1811  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1812          /*Configure the FSP configuration registers for Smu_stdby
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1813          group 21*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1814          SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61477
	lea	a4,[a4]@los(0xf02481a8)
	ld.w	d4,[a15]228
	call	Mcal_WriteSafetyEndInitProtReg
.L655:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1815              &MODULE_PMS.AGFSP_STDBY1, (SMU_STDBY_BIT_PROT | \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1816                                         ConfigPtr->AlarmStdbyFspConfig[1]));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1817  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1818          /* After configuration set temporary lock of SMU configuration*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1819          /* [cover parentID={01D28EAB-1F6F-4ebd-BE28-804B1FA9C83A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1820          Set temporary lock of SMU configuration
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1821          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1822          SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036834)
	mov	d4,#0
	call	Mcal_WriteSafetyEndInitProtReg
.L656:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1823              &MODULE_SMU.KEYS, SMU_CFG_KEY_TEMPLOCK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1824  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1825          /* [cover parentID={C54BB564-F844-4a24-BE88-83A157DE12DE}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1826          Is DET or Safety or Init Check enabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1827          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1828          #if ((SMU_DEV_ERROR_DETECT == STD_ON) || \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1829          (SMU_SAFETY_ENABLE == STD_ON) ||(SMU_INIT_CHECK_API == STD_ON))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1830          /* Set the error pin status to not set */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1831          /* [cover parentID={A36C7B8A-9C44-4a72-92EA-E8798E5FCC8B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1832          Set the error pin status to not set
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1833          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1834          Smu_ErrPinStatus = SMU_ERRPIN_NOTSET;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1835  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1836          /* Set the error pin status to not set */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1837          /* [cover parentID={739BA3D4-5E81-42a2-88D6-4FAA4F2D3E41}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1838          Set the Driver state to not failed
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1839          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1840          Smu_DriverState = SMU_NOT_FAILED;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1841  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1842          /* Set the lock state  to not locked */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1843          /* [cover parentID={42818553-DB6E-48d8-9882-78E118D768C6}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1844          Set the lock state  to not locked
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1845          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1846          Smu_LockState = SMU_NOT_LOCKED;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1847  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1848          /* Set the initialisation staus as initialized */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1849          /* [cover parentID={3B1EFE55-E1FE-4ec4-AF2C-4BCA151AC4DB}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1850          Set the initialisation status as initialized
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1851          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1852          Smu_InitStatus = SMU_INITIALIZED;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1853          #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1854          /* [cover parentID={89F549DF-6A85-413d-B152-EFE7A1AB9CD8}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1855          Set Result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1856          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1857          RetVal = E_OK;
	mov	d2,#0
.L529:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1858        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1859      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1860      /*If the core is a slave core abort the sequence*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1861      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1862      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1863        /* [cover parentID={FD570D1C-0740-4014-8AB5-9DC50E2887DA}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1864        Return Result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1865        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1866        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1867  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1868        /*Check if DET is on or safety is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1869        /* [cover parentID={4763A026-7422-42c9-AADD-9B18BDDD3884}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1870        DET is ON or safety is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1871        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1872        #if (SMU_DEV_ERROR_DETECT == STD_ON) || \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1873        (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1874        /*Report error SMU_E_CORE_MISMATCH*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1875        /* [cover parentID={577F7A58-C22E-47ec-B34C-E4574E48C911}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1876        Report error SMU_E_CORE_MISMATCH
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1877        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1878        Smu_lReportError(SMU_SID_INIT, SMU_E_CORE_MISMATCH);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1879        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1880      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1881    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1882    /* [cover parentID={D096F902-EFD2-4eef-B83D-73E6925DD209}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1883    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1884    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1885    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1886  }
	ret
.L22:
	mov	d2,#1
.L530:
	ret
.L302:
	
__Smu_Init_function_end:
	.size	Smu_Init,__Smu_Init_function_end-Smu_Init
.L166:
	; End of function
	
	.sdecl	'.text.Smu_DeInit.Code.Cpu0',code,cluster('Smu_DeInit')
	.sect	'.text.Smu_DeInit.Code.Cpu0'
	.align	2
	
	.global	Smu_DeInit

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1887  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1888  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1889  ** Traceability      : [cover parentID={AF259B1B-60B1-4c22-BB8F-6E2B3453AFDC}]**
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1890  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1891  ** Syntax           : Std_ReturnType Smu_DeInit(void)                         **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1892  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1893  ** Description      :Deinitializes the SMU driver by reseting the module      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1894  **                   registers. Deinitialization shall be done only from      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1895  **                   master core.                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1896  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1897  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1898  ** Service ID       : 0xAA                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1899  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1900  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1901  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1902  ** Reentrancy       : Non Reentrant                                           **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1903  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1904  ** Parameters(in)   : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1905  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1906  ** Parameters (out) : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1907  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1908  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1909  **                    E_NOT_OK - Operation failed                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1910  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1911  /* CYCLOMATIC_Smu_DeInit_JUSTIFICATION: This Function has Cyclomatic Complexity
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1912  >15. This is due to higher number of DET checks inside the function which are
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1913  used to reset the global variables and do plausibility check. The different if
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1914  conditions in different operating mode causes the complexity to increase,but
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1915  actually during run-time out of all if conditions many will be pre-compile
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1916  time removed */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1917  Std_ReturnType Smu_DeInit(void)
; Function Smu_DeInit
.L117:
Smu_DeInit:	.type	func

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1918  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1919    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1920    uint32 Index;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1921    uint32 CurrentCoreID;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1922  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1923    /*Get the current core id*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1924    /* [cover parentID={D3DC8446-2C4F-4c82-856B-3FD2058302D4}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1925    Get the current core ID
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1926    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1927    CurrentCoreID = Mcal_GetCpuIndex();
	call	Mcal_GetCpuIndex
.L531:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1928    /*If the current core is the master core proceed with
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1929    deinitialization sequence*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1930    /* [cover parentID={D58AC000-BE3E-4507-8A45-7EE56FED0CA9}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1931    Check if the core is the core  master core ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1932    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1933    if(MCAL_MASTER_COREID == CurrentCoreID)
	jne	d2,#0,.L29
.L661:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1934    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1935      /*Check if DET is on or Safety is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1936      /* [cover parentID={C6F432EA-73F8-4a3c-B509-FD283F60D90E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1937      DET is ON or safety is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1938      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1939      #if (SMU_DEV_ERROR_DETECT == STD_ON) || \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1940      (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1941  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1942      /* Check if SMU driver is already initialized */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1943      /* [cover parentID={5C134582-15EB-450f-A00B-963F8163D7BB}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1944      Check if SMU driver is not initialized
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1945      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1946      if(SMU_NOT_INITIALIZED == Smu_InitStatus)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1947      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1948        /* [cover parentID={C8BCA559-19A4-4a33-B91D-978FBF61B715}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1949        Report error SMU_E_UNINIT
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1950        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1951        Smu_lReportError(SMU_SID_DEINIT, SMU_E_UNINIT);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1952      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1953      /*Check if driver is permanently locked*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1954      /* [cover parentID={A8631D44-E072-4839-8BEB-7EC15E498C1B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1955      Check if SMU cfg registers are permanently locked
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1956      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1957      else if(Smu_LockState == SMU_LOCKED)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1958      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1959        /*Report error SMU_E_LOCKED*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1960        /* [cover parentID={8A120D9E-87FB-4b6f-A834-F99046C08063}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1961        Report error SMU_E_LOCKED
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1962        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1963        Smu_lReportError(SMU_SID_DEINIT, SMU_E_LOCKED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1964      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1965      /* [cover parentID={572D9FAA-D874-49ce-81A7-54D3171135F1}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1966      For all other conditions when driver is both initialized and unlocked
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1967      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1968      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1969      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1970        /* [cover parentID={9B65BA75-1136-47b5-8A51-A3E8318DD8E4}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1971        Set result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1972        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1973        RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1974      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1975      /*Check if all DET or Saftey checks have passed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1976      /* [cover parentID={7F7DC553-8B18-4927-AA9E-68E5E0A95376}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1977      Have all checks passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1978      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1979      if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1980      #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1981      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1982        /* [cover parentID={372A0DDE-01BB-4b49-9745-9C6A445EF95C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1983        Is DET or Safety or Init Check enabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1984        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1985        #if ((SMU_DEV_ERROR_DETECT == STD_ON) || \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1986        (SMU_SAFETY_ENABLE == STD_ON) ||(SMU_INIT_CHECK_API == STD_ON))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1987        /* Set SMU Driver init status to not initialized */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1988        /* [cover parentID={3F931DBC-A994-4ab7-AA2C-3609CA287296}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1989        Set the initialization status to deinitialized
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1990        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1991        Smu_InitStatus = SMU_NOT_INITIALIZED;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1992        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1993  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1994        /*Unlock configuration register configure the SMU registers. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1995        /* [cover parentID={05F5391C-DF31-4d1c-B856-09C99C43F897}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1996        Unlock configuration register configure the SMU registers
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1997        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1998        SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	ld.w	d15,[a4]@los(0xf0036834)
	insert	d15,d15,#0,#0,#8
	or	d4,d15,#188
	lea	a4,[a4]@los(0xf0036834)
.L662:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  1999            &MODULE_SMU.KEYS, SMU_CFG_KEY_UNLOCK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2000  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2001        /* Configure alarm group configuration registers of
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2002        Smu_core to their reset value */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2003        /* [cover parentID={BD23A33E-1750-4106-9421-D2EBEC7C0517}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2004        Configure alarm group configuration registers of SMU Core to
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2005        their reset value
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2006        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2007  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2008        for(Index = 0U; Index < SMU_CORE_TOTAL_ALARM_CONFIG_REG; Index++)
	mov	d15,#0
.L532:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2009        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2010          /* [cover parentID={8CE28A9D-EE50-4e3d-8873-78B7245F8A8C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2011          Select the reset value of alarm group configuration register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2012          depending on the alarm group
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2013          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2014          /* [cover parentID={AAC508C1-8830-4213-8F74-4F161C1E9067}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2015          Check if the configuration register is alarm group 8
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2016          configuration register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2017          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2018          if((Index == SMU_GROUP8_CFG_POS1) || \ 
	mov	d8,#24
.L663:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2019                (Index == SMU_GROUP8_CFG_POS2))
	mov	d9,#26
.L664:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2020          {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2021            /* [cover parentID={676FA24F-2D1F-4b74-B77C-AF38EF4E8D00}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2022            Configure alarm group 8 configuration registers of SMU Core
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2023             to reset value of alarm group 8 configuration
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2024            [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2025            /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2026            pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2027            SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2028                &SMU_CORE_ALARM_GROUP->CfgReg[Index], \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2029                SMU_ALARM8_CFG_RESET_VAL);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2030  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2031          }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2032          /* [cover parentID={87582AAD-D472-4f9a-B55C-2497C48EC7B0}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2033          Check if the configuration register is alarm group 10
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2034          configuration register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2035          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2036          else if((Index == SMU_GROUP10_CFG_POS1) || \ 
	mov	d10,#31
.L665:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2037                  (Index == SMU_GROUP10_CFG_POS2))
	mov	d11,#32
.L666:
	mov	d12,#36
.L667:
	j	.L30
.L31:
	jeq	d15,d8,.L32
.L668:
	jne	d15,d9,.L33
.L32:
	mov.u	d4,#64512
	addih	d4,d4,#1
.L669:
	j	.L34
.L33:
	jeq	d15,d10,.L35
.L670:
	jne	d15,d11,.L36
.L35:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2038          {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2039            /* [cover parentID={CAC02F34-1859-4053-8C2F-6CF83A44746E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2040            Configure alarm group 10 configuration registers of SMU
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2041            Core to reset value of alarm group 10 configuration
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2042            [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2043            /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2044            pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2045            SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh	d4,#3
.L671:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2046                &SMU_CORE_ALARM_GROUP->CfgReg[Index], \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2047                SMU_ALARM10_CFG_RESET_VAL);
	j	.L37
.L36:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2048          }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2049          /* [cover parentID={99825212-B921-49c7-9EAD-DDE310BA397F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2050          For all the configuration register except alarm group 8 and
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2051          group10 configuration register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2052          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2053          else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2054          {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2055            /* [cover parentID={D848DCB8-E079-4d91-96FC-3F242990421B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2056            Configure alarm group configuration registers of SMU Core
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2057            to their reset value
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2058            [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2059            /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2060            pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2061            SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	mov	d4,#0
.L34:
.L37:
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf0036900)
	addsc.a	a4,a15,d15,#2
.L672:
	add	d15,#1
.L30:
	call	Mcal_WriteSafetyEndInitProtReg
.L673:
	jlt.u	d15,d12,.L31
.L674:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2062                &SMU_CORE_ALARM_GROUP->CfgReg[Index] \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2063                , SMU_ALARM_CFG_RESET_VAL);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2064          }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2065        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2066        /* Configure FSP configuration registers of Smu_core to their
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2067        reset value */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2068        /* [cover parentID={A8B9B38C-E22F-4915-99DE-4A2048787581}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2069        Configure FSP configuration registers of SMU Core to their reset
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2070        value
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2071        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2072        for(Index = 0U; Index < SMU_CORE_TOTAL_ALARM_GROUPS; Index++)
	mov	d15,#0
.L675:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2073        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2074          /* [cover parentID={34B22379-76A1-4176-BB99-3855C5ED89EE}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2075          Check if the alarm group is alarm group 10
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2076          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2077          if(Index == (uint32)SMU_ALARM_GROUP10)
	mov	d8,#10
.L676:
	j	.L38
.L39:
	jne	d15,d8,.L40
.L677:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2078          {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2079            /* [cover parentID={C8030C99-A06F-4aa0-B26E-D498805D0382}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2080            Configure FSP configuration register of alarm group 10 of
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2081            Smu_core to reset value of alarrm group 10 FSP configuration
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2082            [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2083            /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2084            pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2085            SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh	d4,#3
.L678:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2086                &SMU_CORE_ALARM_GROUP->FSPCfgReg[Index], \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2087                SMU_ALARM10_CFG_RESET_VAL);
	j	.L41
.L40:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2088  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2089          }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2090          /* [cover parentID={2D69E9FB-56E9-42ff-91FA-1AF8D315E616}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2091          For all the alarm groups except alarm group10
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2092          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2093          else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2094          {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2095            /* [cover parentID={A8B9B38C-E22F-4915-99DE-4A2048787581}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2096            Configure FSP configuration registers of SMU Core to
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2097            their reset value
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2098            [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2099            /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2100            pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2101            SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	mov	d4,#0
.L41:
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf0036990)
	addsc.a	a4,a15,d15,#2
	call	Mcal_WriteSafetyEndInitProtReg
.L679:
	add	d15,#1
.L38:
	jlt.u	d15,#12,.L39
.L680:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2102                &SMU_CORE_ALARM_GROUP->FSPCfgReg[Index], \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2103                SMU_ALARM_FSP_RESET_VAL);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2104          }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2105        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2106  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2107        /* Configure Smu_stdby alarm group 20 FSP configuration register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2108        to its reset value*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2109        SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61477
	lea	a4,[a4]@los(0xf02481a4)
	mov	d4,#0
	call	Mcal_WriteSafetyEndInitProtReg
.L681:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2110            &MODULE_PMS.AGFSP_STDBY0, (SMU_STDBY_BIT_PROT | \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2111                                       SMU_AGFSPSTDBY0_RESET_VAL));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2112  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2113        /* Configure Smu_stdby alarm group 21 FSP configuration register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2114            to its reset value*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2115        SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61477
	lea	a4,[a4]@los(0xf02481a8)
	mov	d4,#0
	call	Mcal_WriteSafetyEndInitProtReg
.L682:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2116            &MODULE_PMS.AGFSP_STDBY1, (SMU_STDBY_BIT_PROT | \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2117                                       SMU_AGFSPSTDBY1_RESET_VAL));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2118  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2119        /* [cover parentID={85D1E643-A48C-4c20-8001-E550C3457BF0},
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2120                           {7A08B7FA-598D-41f3-83B9-A4C9F8A24C26}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2121        Configure FSP mode in FSP register of Smu_core as Bi-stable mode
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2122        which is also the reset value
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2123        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2124        SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREGMASK( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036828)
	mov	d4,#0
	mov	d5,#96
	call	Mcal_WriteSafetyEndInitProtRegMask
.L683:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2125            &MODULE_SMU.FSP, (SMU_FSP_RESET_VAL & SMU_FSP_MODE_MSK), \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2126            SMU_FSP_MODE_MSK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2127  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2128        /*JIRA Reference: 0000053912-9599
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2129        A dummy read of FSP register is required to ensure that FSP mode is
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2130        written into the register and not cached or stored in write buffer,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2131        before modifying the values of PRE1, PRE2 or TFSP_HIGH.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2132        Mcal_WriteSafetyEndInitProtRegMask API, which is used to write into
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2133        the FSP register, has multiple dummy reads of WDT registers. Both WDT
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2134        and SMU operate on the SPB bus. Thus, the dummy reads of WDT registers
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2135        in the Mcal_WriteSafetyEndInitProtRegMask API also ensure that FSP mode
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2136        is written into the FSP register.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2137        Hence, a separate dummy read is not done here .*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2138  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2139        /* [cover parentID={C4889A78-324F-4e4e-981E-A25FF099A83D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2140        Configure FSP configuration register of Smu_core except for FSP mode to
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2141        its reset value
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2142        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2143        SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREGMASK( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036828)
	mov.u	d4,#65280
	addih	d4,d4,#63
	mov	d5,#-97
	call	Mcal_WriteSafetyEndInitProtRegMask
.L684:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2144            &MODULE_SMU.FSP, (SMU_FSP_RESET_VAL & SMU_FSP_CFG_MSK), \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2145            SMU_FSP_CFG_MSK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2146  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2147        /* Configure alarm global configuration register of Smu_core to
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2148        its reset value */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2149        SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf003682c)
	mov	d4,#0
	call	Mcal_WriteSafetyEndInitProtReg
.L685:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2150            &MODULE_SMU.AGC, SMU_AGC_RESET_VAL);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2151  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2152        /* Configure recovery timer configuration register of Smu_core to
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2153        its reset value */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2154        SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036830)
	mov.u	d4,#65283
	addih	d4,d4,#63
	call	Mcal_WriteSafetyEndInitProtReg
.L686:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2155            &MODULE_SMU.RTC, SMU_RTC_RESET_VAL);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2156  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2157        /* Configure recovery timer 0 alarm configuration 0 register of
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2158        Smu_core to its reset value */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2159        SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036860)
	mov	d4,#264
	addih	d4,d4,#168
	call	Mcal_WriteSafetyEndInitProtReg
.L687:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2160            &MODULE_SMU.RTAC00, SMU_RTAC00_RESET_VAL);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2161  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2162        /* Configure recovery timer 0 alarm configuration 1 register of
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2163        Smu_core to its reset value */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2164        SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036864)
	mov	d4,#184
	addih	d4,d4,#200
	call	Mcal_WriteSafetyEndInitProtReg
.L688:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2165            &MODULE_SMU.RTAC01, SMU_RTAC01_RESET_VAL);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2166  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2167        /* Configure recovery timer 1 alarm configuration 0 register of
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2168        Smu_core to its reset value */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2169        SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036868)
	mov	d4,#216
	addih	d4,d4,#232
	call	Mcal_WriteSafetyEndInitProtReg
.L689:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2170            &MODULE_SMU.RTAC10, SMU_RTAC10_RESET_VAL);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2171  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2172        /* Configure recovery timer 1 alarm configuration 1 register of
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2173        Smu_core to its reset value */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2174        SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf003686c)
	mov	d4,#248
	addih	d4,d4,#248
	call	Mcal_WriteSafetyEndInitProtReg
.L690:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2175            &MODULE_SMU.RTAC11, SMU_RTAC11_RESET_VAL);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2176  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2177        /* Configure Smu_stdby CMD register to its reset value */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2178        SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61477
	lea	a4,[a4]@los(0xf024819c)
	mov	d4,#0
	call	Mcal_WriteSafetyEndInitProtReg
.L691:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2179          &MODULE_PMS.CMD_STDBY, (SMU_STDBY_BIT_PROT | SMU_CMD_STDBY_RESET_VAL));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2180  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2181  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2182        /* After configuration set temporary lock of SMU configuration */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2183        /* [cover parentID={EB65210A-06DE-4dba-BA5E-46EB65A803D7}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2184        Set temporary lock of SMU configuration
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2185        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2186        SMU_LIB_INIT_DEINIT_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036834)
	mov	d4,#0
	call	Mcal_WriteSafetyEndInitProtReg
.L692:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2187            &MODULE_SMU.KEYS, SMU_CFG_KEY_TEMPLOCK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2188  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2189        /* [cover parentID={2E81904E-2A04-4b44-975B-2480F77920A8}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2190        Clear all SMU Alarms
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2191        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2192        Smu_lClearAllAlarms();
	call	Smu_lClearAllAlarms
.L693:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2193  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2194        /* [cover parentID={CCFAB638-FC8F-4df7-9DF0-5384DAA4B59C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2195        Is DET or Safety or Init Check is enabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2196        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2197        #if ((SMU_DEV_ERROR_DETECT == STD_ON) || \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2198        (SMU_SAFETY_ENABLE == STD_ON) ||(SMU_INIT_CHECK_API == STD_ON))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2199        /* Set SMU error pin status to error pin not set */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2200        /* [cover parentID={6B1E8803-4629-49b2-AB54-230CB7684B35}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2201        Set the error pin status to not set
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2202        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2203        Smu_ErrPinStatus = SMU_ERRPIN_NOTSET;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2204  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2205        /* Set SMU Driver status to not failed */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2206        /* [cover parentID={58695AB0-C954-4404-ADCD-AAC50E20648D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2207        Set the Driver state to not failed
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2208        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2209        Smu_DriverState = SMU_NOT_FAILED;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2210  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2211        /* Set SMU lock status to not locked */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2212        /* [cover parentID={D9CE2E5B-DBCC-412f-A3AC-DAB6D5ACA25B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2213        Set the lock state  to not locked
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2214        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2215        Smu_LockState = SMU_NOT_LOCKED;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2216        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2217        /* [cover parentID={6E6EB485-2ECC-4fa2-9299-DCAF42FA1AEA}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2218        Set Result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2219        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2220        RetVal = E_OK;
	mov	d2,#0
.L533:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2221      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2222    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2223    else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2224    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2225      /* [cover parentID={74823B27-26C9-4405-B7CC-0C9D9C450BEC}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2226      Return Result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2227      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2228      RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2229      /*Check if det is on or safety is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2230      /* [cover parentID={5704399B-511F-45ab-B936-B4CABA760879}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2231      DET is ON or safety is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2232      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2233      #if(SMU_DEV_ERROR_DETECT == STD_ON)||(SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2234      /*Report error SMU_E_ALREADY_INITIALIZED*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2235      /* [cover parentID={58EE5FB3-3151-45e7-A3D7-B7FE626E254F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2236      Report error SMU_E_CORE_MISMATCH
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2237      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2238      Smu_lReportError(SMU_SID_DEINIT, SMU_E_CORE_MISMATCH);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2239      #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2240  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2241    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2242    /* [cover parentID={DFE9BD05-8B4B-400e-873D-BAA2C2F124DB}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2243    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2244    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2245    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2246  }
	ret
.L29:
	mov	d2,#1
.L534:
	ret
.L309:
	
__Smu_DeInit_function_end:
	.size	Smu_DeInit,__Smu_DeInit_function_end-Smu_DeInit
.L171:
	; End of function
	
	.sdecl	'.text.Smu_ClearAlarmStatus.Code.Cpu0',code,cluster('Smu_ClearAlarmStatus')
	.sect	'.text.Smu_ClearAlarmStatus.Code.Cpu0'
	.align	2
	
	.global	Smu_ClearAlarmStatus

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2247  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2248  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2249  ** Traceability      : [cover parentID={E9869FA4-F02D-4635-8028-136CCF94FCBF}]**
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2250  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2251  ** Syntax           : Std_ReturnType Smu_ClearAlarmStatus                     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2252  **                    (                                                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2253  **                      const Smu_AlarmGroupId AlarmGroup,                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2254  **                      const Smu_AlarmIdType AlarmPos                        **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2255  **                    )                                                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2256  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2257  ** Description      : This service clears SMU alarm status of the requested   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2258  **                    alarm.                                                  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2259  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2260  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2261  ** Service ID       : 0xAD                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2262  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2263  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2264  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2265  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2266  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2267  ** Parameters(in)   : AlarmGroup : Alarm group register                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2268  **                    AlarmPos : Alarm position within the requested group    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2269  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2270  ** Parameters (out) : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2271  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2272  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2273  **                    E_NOT_OK - Operation failed eg. Due to invalid          **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2274  **                      parameters.                                           **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2275  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2276  Std_ReturnType Smu_ClearAlarmStatus
; Function Smu_ClearAlarmStatus
.L119:
Smu_ClearAlarmStatus:	.type	func
	mov	e8,d5,d4
.L737:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2277  (
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2278    const Smu_AlarmGroupId AlarmGroup,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2279    const Smu_AlarmIdType AlarmPos
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2280  )
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2281  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2282    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2283    uint32 AlarmStatusReadback = 0xFFFFFFFFU;
	mov	d15,#-1
.L536:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2284    uint32 Timeout = 0U;
	mov	d10,#0
.L538:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2285  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2286    /*Check if DET or Safety errors are enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2287    /* [cover parentID={37F52E11-AB41-4520-8531-9465980FE670}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2288    DET OR Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2289    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2290    #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2291    /*Check if driver is initialized and driver state not failed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2292    /* [cover parentID={3659CFC4-69DA-450d-AAD9-4C3C3F9EEFE5}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2293    Check if driver is initialized and is not in failed state
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2294    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2295    RetVal = Smu_lInitFailedCheck(SMU_SID_CLEAR_ALARM_STATUS);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2296  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2297    /* [cover parentID={6AEF1797-A95A-4017-9159-67070EB2E934}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2298    Have all initialization checks passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2299    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2300    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2301    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2302      /*Check the validity of alarm group and position.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2303      In case Smu_stdby group and position is requested check whether
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2304      Smu_stdby is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2305      /* [cover parentID={EBC0834E-211D-41c1-8B38-499E0371F7FE}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2306      Check the validity of alarm group and position
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2307      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2308      RetVal = Smu_lAlarmValidCheck(AlarmGroup, AlarmPos,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2309                                    SMU_SID_CLEAR_ALARM_STATUS);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2310    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2311    /*Check if all checks have passed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2312    /* [cover parentID={25090A97-E5A9-4698-A8EB-9D6D6506B67E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2313    Have all checks passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2314    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2315    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2316    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2317    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2318      /* [cover parentID={0D20AD6F-7260-4c0d-90C9-531A056367E4}][/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2319      /* [cover parentID={6DA99BD3-6A81-4b94-8D75-680F0374A2BB}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2320      Enter critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2321      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2322      SchM_Enter_Smu_DriverAccess();
	call	SchM_Enter_Smu_DriverAccess
.L535:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2323      /*Acquire Spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2324      /* [cover parentID={C9F6FE80-E4CE-4aad-B21E-CE93B17C1A36}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2325      Acquire spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2326      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2327      Mcal_GetSpinlock(&Smu_LockAddress, SMU_SPINLOCK_TIMEOUT);
	movh.a	a4,#@his(Smu_LockAddress)
	lea	a4,[a4]@los(Smu_LockAddress)
.L738:
	mov	d4,#8192
	call	Mcal_GetSpinlock
.L539:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2328  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2329      /* [cover parentID={859D93D7-9434-4806-9C4B-78895B88FF65}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2330      Clear Alarm Status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2331      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2332      Smu_lClrAlarmStatus(AlarmGroup, AlarmPos);
	mov	e4,d9,d8
.L540:
	call	Smu_lClrAlarmStatus

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2333  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2334      /*Read back AG register to validate the Clear */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2335      /* [cover parentID={A3E2E97D-84CA-4218-9F99-890830A65BE3}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2336      Read back AG register to validate the Clear
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2337      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2338      do
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2339      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2340        /* [cover parentID={EAFC1A72-385B-4b33-AECF-D3C5021A65A8}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2341        Check if the alarm group is in Smu_core. The check is done in case
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2342        DET and Safety is OFF and Smu_Stdby is ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2343        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2344        #if(SMU_STANDBY_SWITCH == STD_ON)||\ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2345        ((SMU_DEV_ERROR_DETECT == STD_OFF) && \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2346         (SMU_SAFETY_ENABLE == STD_OFF))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2347        /* [cover parentID={EAFC1A72-385B-4b33-AECF-D3C5021A65A8}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2348        Check if the alarm group is in Smu_core
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2349        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2350        if((uint32)AlarmGroup < SMU_CORE_TOTAL_ALARM_GROUPS)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2351        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2352        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2353          /* Read Alarm status */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2354          /* [cover parentID={E4473F51-4E6F-4b10-A13E-1AB2E07F556E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2355          Read the alarm status of alarm group in core domain
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2356          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2357          /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2358           pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2359          AlarmStatusReadback = (((uint32) \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2360                (SMU_CORE_ALARM_GROUP->AGStatusReg[AlarmGroup].U) >> AlarmPos) \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2361               & SMU_ALARM_POS1);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2362  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2363        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2364        /*For Smu_stdby*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2365        /* [cover parentID={A5CB8F8E-E6D1-47e4-B7DA-60E2BE0A91AB}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2366        Standby mode is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2367        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2368        #if(SMU_STANDBY_SWITCH == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2369        /* [cover parentID={961AEBCD-7A61-4218-AE28-8565808FB387}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2370        Check if the alarm group is SMU Alarm Group 20
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2371        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2372        else if(AlarmGroup == SMU_ALARM_GROUP20)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2373        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2374          /* [cover parentID={ABB04BFD-54DD-4bc2-A19D-11822FAA3882}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2375          Read the alarm status from Alarm group 20
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2376          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2377          AlarmStatusReadback = (uint32)(PMS_AG_STDBY0.U >> AlarmPos) \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2378                                & SMU_ALARM_POS1;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2379        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2380        else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2381        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2382          /* [cover parentID={09323012-00FE-4936-8A00-F7E4A20E123A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2383          Check if DET and Safety is OFF and Smu_Stdby id ON. If yes,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2384          then check if the alarm group is SMU Alarm Group 21
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2385          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2386          #if (SMU_DEV_ERROR_DETECT == STD_OFF) && \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2387          (SMU_SAFETY_ENABLE == STD_OFF)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2388          /* [cover parentID={09323012-00FE-4936-8A00-F7E4A20E123A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2389          Check if the alarm group is SMU Alarm Group 21
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2390          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2391          if(AlarmGroup == SMU_ALARM_GROUP21)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2392          #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2393          {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2394            /* [cover parentID={E08B2692-DB05-4a81-98AC-739268BE5EBE}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2395            Read the alarm status from Alarm group 21
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2396            [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2397            AlarmStatusReadback = (uint32)(PMS_AG_STDBY1.U >> AlarmPos) \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2398                                  & SMU_ALARM_POS1;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2399          }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2400        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2401        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2402        Timeout++;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2403      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2404      /* [cover parentID={7DCB738B-DBF9-4ba6-9B68-3F05C99231CD}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2405      Loop till Alarm Status Clear is not Validated or till Timeout
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2406      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2407      while((Timeout < SMU_AGSTATUS_TIMEOUT) &&
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2408            (AlarmStatusReadback != SMU_CLEAR_ALARM_STATUS_READBACK));
.L44:
	jge.u	d8,#12,.L45
.L541:
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf00369c0)
.L542:
	addsc.a	a15,a15,d8,#2
.L543:
	ld.w	d15,[a15]
.L537:
	extr.u	d15,d15,d9,#1
.L45:
	add	d10,#1
.L739:
	jge.u	d10,#5,.L46
.L740:
	jne	d15,#0,.L44
.L46:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2409  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2410      /*Release spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2411      /* [cover parentID={E5729C2E-60FA-439d-B8B2-7C61D984913A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2412      Release Spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2413      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2414      Mcal_ReleaseSpinlock(&Smu_LockAddress);
	movh.a	a4,#@his(Smu_LockAddress)
	lea	a4,[a4]@los(Smu_LockAddress)
	call	Mcal_ReleaseSpinlock
.L741:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2415      /* [cover parentID={1A2077D6-9DF6-4c3b-A1F9-6755D70C0436}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2416      Exit critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2417      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2418      SchM_Exit_Smu_DriverAccess();
	call	SchM_Exit_Smu_DriverAccess
.L742:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2419  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2420      /*Check the readback value*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2421      /* [cover parentID={92B1B4FC-5C21-4767-AA0C-D30B6CD5FA7D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2422      Is readback value equal to expected status ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2423      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2424      if(AlarmStatusReadback != SMU_CLEAR_ALARM_STATUS_READBACK)
	ne	d2,d15,#0
.L544:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2425      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2426        /* [cover parentID={C1EBF5F8-9E36-47fb-B0DC-96BC40575354}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2427        Set Result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2428        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2429        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2430  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2431        /* [cover parentID={0ACD2144-183F-42f9-AB78-0F37EBEFF276}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2432        Production Error notification for clearing alarm status failure or success is
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2433        enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2434        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2435        #if (SMU_CLEAR_ALARM_STATUS_DEM_NOTIF == \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2436        SMU_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2437        /* Report failure as Production Error event status*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2438        /* [cover parentID={433D1BD1-EBB3-44fa-A167-403123BD967D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2439        Report failure as Production Error event status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2440        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2441        Smu_lReportDemError(SMU_E_CLEAR_ALARM_STATUS_FAILURE,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2442                              DEM_EVENT_STATUS_FAILED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2443        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2444      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2445      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2446      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2447        /* [cover parentID={8B75A328-5DE7-47c7-8F95-F497F1F885EF}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2448        Set Result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2449        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2450        RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2451        /* [cover parentID={1E04B99D-E58D-4f48-A4B3-7C5C7D62E855}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2452        Production Error notification for clearing alarm status failure or success is
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2453        enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2454        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2455        #if (SMU_CLEAR_ALARM_STATUS_DEM_NOTIF == \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2456        SMU_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2457        /* Report success as Production Error event status*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2458        /* [cover parentID={A231A655-F5D0-49a1-86CA-EA152A0846B4}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2459        Report success as Production Error event status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2460        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2461        Smu_lReportDemError(SMU_E_CLEAR_ALARM_STATUS_FAILURE,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2462                              DEM_EVENT_STATUS_PASSED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2463        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2464      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2465    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2466    /* [cover parentID={30EC0A0B-8ED5-4357-BD08-1ECCE9CE8AF5}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2467    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2468    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2469    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2470  }
	ret
.L346:
	
__Smu_ClearAlarmStatus_function_end:
	.size	Smu_ClearAlarmStatus,__Smu_ClearAlarmStatus_function_end-Smu_ClearAlarmStatus
.L196:
	; End of function
	
	.sdecl	'.text.Smu_SetAlarmStatus.Code.Cpu0',code,cluster('Smu_SetAlarmStatus')
	.sect	'.text.Smu_SetAlarmStatus.Code.Cpu0'
	.align	2
	
	.global	Smu_SetAlarmStatus

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2471  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2472  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2473  ** Traceability     : [cover parentID={474BDCAA-C380-4ce2-AEBB-FEF0F93F2CA9}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2474  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2475  ** Syntax           : Std_ReturnType Smu_SetAlarmStatus                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2476  **                    (                                                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2477  **                      const Smu_AlarmGroupId AlarmGroup,                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2478  **                      const Smu_AlarmGroupId AlarmPos                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2479  **                    )                                                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2480  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2481  ** Description      : The purpose of the API is to set the requested alarm    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2482  **                    status. This service can be used by the user software to**
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2483  **                    to trigger software SMU alarm. For SMU_core during the  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2484  **                    START state of the SMU, it shall be possible to set any **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2485  **                    of the alarms. However, during the RUN state, only the  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2486  **                    software alarms shall be set. The API is applicable only**
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2487  **                    for SMU_core alarm groups and positions.                **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2488  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2489  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2490  ** Service ID       : 0xAE                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2491  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2492  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2493  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2494  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2495  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2496  ** Parameters(in)   : AlarmGroup : Alarm group register                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2497  **                    AlarmPos : Alarm position within the requested group    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2498  ** Parameters (out) : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2499  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2500  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2501  **                    E_NOT_OK - Operation failed eg. Due to invalid          **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2502  **                      parameters.                                           **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2503  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2504  Std_ReturnType Smu_SetAlarmStatus
; Function Smu_SetAlarmStatus
.L121:
Smu_SetAlarmStatus:	.type	func
	mov	e8,d5,d4
.L747:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2505  (
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2506    const Smu_AlarmGroupId AlarmGroup,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2507    const Smu_AlarmIdType AlarmPos
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2508  )
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2509  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2510    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2511    uint32 Timeout = 0U;
	mov	d10,#0
.L546:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2512    uint32 AlarmStatusReadback = 0xFFFFFFFFU;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2513  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2514    /*Check if the DET or Safety checks are enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2515    /* [cover parentID={FA987376-A7E7-4508-99B2-CFD2A0397112}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2516    DET OR Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2517    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2518    #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2519  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2520    uint32 AlarmRes = 0U;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2521    uint32 CoreAlarmIdReservedType[SMU_CORE_TOTAL_ALARM_GROUPS] =
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2522    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2523      SMU_GROUP0_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2524      SMU_GROUP1_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2525      SMU_GROUP2_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2526      SMU_GROUP3_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2527      SMU_GROUP4_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2528      SMU_GROUP5_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2529      SMU_GROUP6_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2530      SMU_GROUP7_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2531      SMU_GROUP8_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2532      SMU_GROUP9_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2533      SMU_GROUP10_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2534      SMU_GROUP11_POS,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2535    };
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2536  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2537    /*Check if driver is initialized and driver state not failed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2538    /* [cover parentID={167BD113-2215-4287-AE75-DF7400BA3350}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2539    Check if driver is initialized and is not in failed state
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2540    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2541    RetVal = Smu_lInitFailedCheck(SMU_SID_SET_ALARM_STATUS);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2542  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2543    /* [cover parentID={F49B8616-BC70-4141-9609-A3927B97339C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2544    Have all checks passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2545    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2546    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2547    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2548      /* [cover parentID={8BBC54BF-9988-4d0a-B170-8864FBAD662A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2549      Is the alarm position within the maximum range?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2550      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2551      if((uint32)AlarmPos <= SMU_MAX_ALARM_POS)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2552      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2553        /* [cover parentID={6429446D-1FD5-4265-B94C-D30299685BF8}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2554        Is the alarm group within Smu_core?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2555        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2556        if((uint32)AlarmGroup < SMU_CORE_TOTAL_ALARM_GROUPS)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2557        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2558          AlarmRes = (CoreAlarmIdReservedType[AlarmGroup]) & \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2559                     ((uint32)SMU_ALARM_VALID << (uint32)AlarmPos);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2560  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2561          AlarmRes = AlarmRes >> (uint32)AlarmPos;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2562          /* [cover parentID={9AAD5213-E7A0-458d-9266-B98CA7B128E5}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2563          Check the validity of alarm position
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2564          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2565          if(AlarmRes == SMU_ALARM_INVALID)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2566          {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2567            /* [cover parentID={8744099B-118A-4bed-996C-22D48091A4E5}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2568            Report error SMU_E_PARAM_GROUP
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2569            [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2570            Smu_lReportError(SMU_SID_SET_ALARM_STATUS, SMU_E_PARAM_GROUP);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2571            RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2572          }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2573        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2574        else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2575        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2576          /* [cover parentID={99F488C7-B8FE-4b09-9B96-975E761CB4DA}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2577          Report error SMU_E_PARAM_GROUP
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2578          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2579          Smu_lReportError(SMU_SID_SET_ALARM_STATUS, SMU_E_PARAM_GROUP);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2580          RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2581        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2582      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2583      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2584      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2585        /*Report error SMU_E_PARAM_GROUP*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2586        /* [cover parentID={112687FE-AC96-4ba3-85EA-5A18B7C25A88}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2587        Report error SMU_E_PARAM_GROUP
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2588        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2589        Smu_lReportError(SMU_SID_SET_ALARM_STATUS, SMU_E_PARAM_GROUP);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2590        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2591      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2592    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2593    /*Check if all checks have passed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2594    /* [cover parentID={96096F14-0055-4f2d-A450-E56153C00EFB}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2595    Have all checks passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2596    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2597    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2598    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2599    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2600      /* [cover parentID={0D20AD6F-7260-4c0d-90C9-531A056367E4}][/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2601      /* [cover parentID={7AC360ED-9ED0-428c-9D58-CC49AB8D6093}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2602      Enter critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2603      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2604      SchM_Enter_Smu_DriverAccess();
	call	SchM_Enter_Smu_DriverAccess
.L545:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2605      /*Acquire Spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2606      /* [cover parentID={F7BB6B09-719A-45df-9FAD-85B370EA67C8}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2607      Get Spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2608      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2609      Mcal_GetSpinlock(&Smu_LockAddress, SMU_SPINLOCK_TIMEOUT);
	movh.a	a4,#@his(Smu_LockAddress)
	lea	a4,[a4]@los(Smu_LockAddress)
.L748:
	mov	d4,#8192
	call	Mcal_GetSpinlock
.L547:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2610  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2611      /* [cover parentID={15B941A8-23E9-44e0-A588-4B57E873B66E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2612      Smu_lSetAlarmStatus
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2613      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2614      Smu_lSetAlarmStatus(AlarmGroup, AlarmPos);
	mov	e4,d9,d8
.L548:
	call	Smu_lSetAlarmStatus

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2615  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2616      /*Confirm the readback status*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2617      /* [cover parentID={E75C7E2F-316F-45de-A498-FB47CE177AEB}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2618      Current Value of Alarm Status Timer
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2619      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2620      do
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2621      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2622        /*Read the alarm status*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2623        /* [cover parentID={E8EE1ABE-E212-44e9-873F-F8E463FE0CE0}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2624        Read the alarm status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2625        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2626        /*MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between pointers
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2627           of different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2628        AlarmStatusReadback = (((uint32) \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2629                          (SMU_CORE_ALARM_GROUP->AGStatusReg[AlarmGroup].U) >> \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2630                          AlarmPos)& SMU_ALARM_POS1);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2631        Timeout++;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2632  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2633      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2634      /* [cover parentID={853288A6-F376-4141-80DE-D74BDCE301BE}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2635      Loop till Timeout or Change in Alarm Status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2636      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2637      while((Timeout < SMU_AGSTATUS_TIMEOUT) &&
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2638            (AlarmStatusReadback != SMU_SET_ALARM_STATUS_READBACK));
.L48:
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf00369c0)
.L549:
	addsc.a	a15,a15,d8,#2
.L550:
	ld.w	d15,[a15]
.L551:
	extr.u	d15,d15,d9,#1
.L552:
	add	d10,#1
.L749:
	jge.u	d10,#5,.L49
.L750:
	jeq	d15,#0,.L48
.L49:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2639  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2640      /*Release spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2641      /* [cover parentID={7B24FFF4-445B-4a67-AC84-62B9047D5648}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2642      Release spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2643      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2644      Mcal_ReleaseSpinlock(&Smu_LockAddress);
	movh.a	a4,#@his(Smu_LockAddress)
	lea	a4,[a4]@los(Smu_LockAddress)
	call	Mcal_ReleaseSpinlock
.L751:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2645      /* [cover parentID={A3891C9E-EEBC-4e69-8A7D-DDC8DF5C76CA}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2646      Exit critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2647      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2648      SchM_Exit_Smu_DriverAccess();
	call	SchM_Exit_Smu_DriverAccess
.L752:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2649  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2650      /* [cover parentID={342C1FC1-9201-4ea5-9F91-6D83DC82BB4B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2651      Is readback value equal to expected status ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2652      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2653      /*Check if readback value is equal to expected status*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2654      if(AlarmStatusReadback != SMU_SET_ALARM_STATUS_READBACK)
	eq	d2,d15,#0
.L553:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2655      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2656        /* Error in reading */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2657        /* [cover parentID={423057EA-4D81-4c4b-B02B-B8F2F3D6A765}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2658        Set Result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2659        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2660        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2661  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2662        /* [cover parentID={27D372DF-BD68-455d-9768-38160A9333D7}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2663        Production Error notification for setting alarm status failure is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2664        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2665        #if (SMU_SET_ALARM_STATUS_DEM_NOTIF == \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2666        SMU_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2667        /* Report failure as Production Error event status*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2668        /* [cover parentID={8928DCFE-51C5-48bb-8CEB-99187B49072F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2669        Report failure as Production Error event status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2670        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2671        Smu_lReportDemError(SMU_E_SET_ALARM_STATUS_FAILURE,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2672                              DEM_EVENT_STATUS_FAILED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2673        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2674      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2675      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2676      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2677        /* [cover parentID={4748C213-EE3D-4557-91AA-899060B37272}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2678        Set Result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2679        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2680        RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2681        /* [cover parentID={D40A04C4-73FD-4a21-B56C-F8BD6343F771}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2682        Production Error notification for setting alarm status failure or
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2683        success is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2684        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2685        #if (SMU_SET_ALARM_STATUS_DEM_NOTIF == \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2686        SMU_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2687        /* Report success as Production Error event status*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2688        /* [cover parentID={4C63B199-5645-4d55-9026-9CE7388AFA2E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2689        Report success as Production Error event status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2690        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2691        Smu_lReportDemError(SMU_E_SET_ALARM_STATUS_FAILURE,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2692                              DEM_EVENT_STATUS_PASSED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2693        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2694      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2695    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2696    /* [cover parentID={75C9C8CD-4EB9-484a-B495-57AA470AFD73}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2697    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2698    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2699    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2700  }
	ret
.L354:
	
__Smu_SetAlarmStatus_function_end:
	.size	Smu_SetAlarmStatus,__Smu_SetAlarmStatus_function_end-Smu_SetAlarmStatus
.L201:
	; End of function
	
	.sdecl	'.text.Smu_GetAlarmStatus.Code.Cpu0',code,cluster('Smu_GetAlarmStatus')
	.sect	'.text.Smu_GetAlarmStatus.Code.Cpu0'
	.align	2
	
	.global	Smu_GetAlarmStatus

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2701  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2702  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2703  ** Traceability      :[cover parentID={2555771A-6BE0-4ba4-9FDA-F301A662610B}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2704  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2705  ** Syntax           : Std_ReturnType Smu_GetAlarmStatus                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2706  **                    (                                                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2707  **                      const Smu_AlarmGroupId AlarmGroup,                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2708  **                      uint32* const AlarmStatus                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2709  **                    )                                                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2710  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2711  ** Description      : The purpose of the API is to provide the alarm status   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2712  **                      requested alarm group.                                **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2713  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2714  ** Service ID       : 0xAF                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2715  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2716  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2717  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2718  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2719  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2720  ** Parameters(in)   : AlarmGroup : Alarm group register                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2721  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2722  ** Parameters (out) : AlarmStatus: Status of the Alarm register               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2723  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2724  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2725  **                    E_NOT_OK - Operation failed eg. Due to invalid          **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2726  **                      parameters.                                           **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2727  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2728  Std_ReturnType Smu_GetAlarmStatus
; Function Smu_GetAlarmStatus
.L123:
Smu_GetAlarmStatus:	.type	func

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2729  (
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2730    const Smu_AlarmGroupId AlarmGroup,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2731    uint32* const AlarmStatus
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2732  )
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2733  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2734    Std_ReturnType RetVal = E_NOT_OK;
	mov	d2,#1
.L554:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2735  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2736    /*Check if DET or Safety error is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2737    /* [cover parentID={5F4AF45C-AEBC-4f15-8091-111BB5C70904}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2738    DET OR Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2739    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2740    #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2741    /* [cover parentID={2B3FADE9-3F7C-4f9a-92F2-AED5F0B7EF17}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2742    Check if input parameter is NULL pointer
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2743    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2744    if(AlarmStatus == NULL_PTR)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2745    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2746      /* [cover parentID={64010FFE-28DF-4aa0-9688-4DD8868E8113}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2747      Report error SMU_E_PARAM_POINTER
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2748      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2749      Smu_lReportError(SMU_SID_GET_ALARM_STATUS, SMU_E_PARAM_POINTER);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2750    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2751    /* [cover parentID={C1B94F65-79AE-4879-A395-3BBC5F4D1B13}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2752    Is SMU driver initialized ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2753    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2754    else if(SMU_INITIALIZED == Smu_InitStatus)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2755    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2756      /* [cover parentID={922DC0BD-5888-49c4-B0C1-90D5DB401341}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2757      Does the alarm group lie within the Smu_Standby domain?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2758      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2759      if(((uint32)AlarmGroup <= SMU_STDBY_END_ALARM_GROUP) &&
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2760          ((uint32)AlarmGroup >= SMU_STDBY_START_ALARM_GROUP))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2761      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2762        /* [cover parentID={065B6383-679D-4803-BB33-E3897B42D065}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2763        Is Smu_Stdby disabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2764        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2765        #if(SMU_STANDBY_SWITCH == STD_OFF)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2766        /* [cover parentID={BF646E1F-746A-4b42-8E43-40CD820DEE11}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2767        Report error SMU_E_STDBY_DISABLED
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2768        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2769        Smu_lReportError(SMU_SID_GET_ALARM_STATUS, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2770                         SMU_E_STDBY_DISABLED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2771        /* [cover parentID={71CD9897-7826-4033-AF48-968D62D9510F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2772        Is Smu_Standby enabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2773        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2774        #else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2775        RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2776        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2777      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2778      /* [cover parentID={2A63BDB4-C7CD-4fa2-9DA0-0AFD62B3F1C3}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2779      Is the alarm group within Smu_core?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2780      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2781      else if((uint32)AlarmGroup < SMU_CORE_TOTAL_ALARM_GROUPS)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2782      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2783        /* [cover parentID={B1B69236-C2A3-41c0-B112-1BC57F7A04C2}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2784        Set Result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2785        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2786        RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2787      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2788      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2789      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2790        /* [cover parentID={B4DBC5F1-9DB4-40bc-B343-B0EAD21DBDD7}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2791        Report error SMU_E_PARAM_GROUP
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2792        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2793        Smu_lReportError(SMU_SID_GET_ALARM_STATUS, SMU_E_PARAM_GROUP);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2794      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2795    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2796    else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2797    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2798      /* [cover parentID={083A65A3-4417-4965-B3FF-70F36415C1F2}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2799      Report error SMU_E_UNINIT
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2800      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2801      Smu_lReportError(SMU_SID_GET_ALARM_STATUS, SMU_E_UNINIT);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2802    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2803    /* [cover parentID={E439BFE5-CE15-45b3-BA83-29351974DD0E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2804    Have all checks passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2805    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2806    if(RetVal == (Std_ReturnType)E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2807    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2808    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2809      /* [cover parentID={47EC3FF4-EB82-4a0b-8E49-C1444E2D31D5}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2810      Standby mode is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2811      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2812      #if(SMU_STANDBY_SWITCH == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2813      /* [cover parentID={3968BF57-B40B-4fe5-B661-AC653ABC913C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2814      Check if the alarm group is SMU Alarm Group 20
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2815      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2816      if(AlarmGroup == SMU_ALARM_GROUP20)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2817      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2818        /* [cover parentID={1B1819B7-BC1E-4243-B93F-F45C897AA50A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2819        Read the alarm status from Alarm group 20
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2820        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2821        *AlarmStatus = (uint32)(PMS_AG_STDBY0.U  & SMU_GROUP20_POS);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2822        RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2823      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2824      /* [cover parentID={D0035E5A-6D90-46a5-AB1A-3A00D47B96BF}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2825      Check if alarm group is SMU Alarm Group 21
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2826      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2827      else if(AlarmGroup == SMU_ALARM_GROUP21)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2828      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2829        /* [cover parentID={E540C914-02E2-4577-B72D-2C82C9A81A4E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2830        Read the alarm status from Alarm group 21
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2831        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2832        *AlarmStatus = (uint32)(PMS_AG_STDBY1.U);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2833        RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2834      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2835      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2836      #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2837      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2838        /* [cover parentID={791310BD-E80F-4688-A22E-788D2BC3C178}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2839        Is Safety and DET disabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2840        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2841        #if(SMU_DEV_ERROR_DETECT == STD_OFF) && \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2842        (SMU_SAFETY_ENABLE == STD_OFF)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2843        /* [cover parentID={3521AE75-49A7-4820-892B-22963D68A81F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2844        Check if the alarm group is in Smu_core
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2845        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2846        if((uint32)AlarmGroup < SMU_CORE_TOTAL_ALARM_GROUPS)
	jge.u	d4,#12,.L51
.L757:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2847        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2848        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2849          /* [cover parentID={DFF0CAFD-0023-47d3-B2CE-08A77DB52C60}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2850          Read the alarm status of alarm group in core domain
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2851          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2852          /*MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2853          pointers of different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2854          *AlarmStatus = \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2855                         (SMU_CORE_ALARM_GROUP->AGStatusReg[AlarmGroup].U);
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf00369c0)
.L758:
	addsc.a	a15,a15,d4,#2
.L759:
	ld.w	d15,[a15]
.L760:
	st.w	[a4],d15
.L761:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2856          RetVal = E_OK;
	mov	d2,#0
.L51:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2857        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2858      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2859    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2860    /* [cover parentID={A9684859-4987-4c46-8692-6C6E635DD8B8}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2861    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2862    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2863    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2864  }
	ret
.L362:
	
__Smu_GetAlarmStatus_function_end:
	.size	Smu_GetAlarmStatus,__Smu_GetAlarmStatus_function_end-Smu_GetAlarmStatus
.L206:
	; End of function
	
	.sdecl	'.text.Smu_GetAlarmDebugStatus.Code.Cpu0',code,cluster('Smu_GetAlarmDebugStatus')
	.sect	'.text.Smu_GetAlarmDebugStatus.Code.Cpu0'
	.align	2
	
	.global	Smu_GetAlarmDebugStatus

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2865  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2866  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2867  ** Traceability      :[cover parentID={26FB7351-B093-434b-A30E-F9BE2DA12080}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2868  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2869  ** Syntax           : Std_ReturnType Smu_GetAlarmDebugStatus                  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2870  **                    (                                                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2871  **                      const Smu_AlarmGroupId AlarmGroup,                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2872  **                      uint32* const AlarmStatus                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2873  **                    )                                                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2874  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2875  ** Description      : The purpose of the API is to provide the alarm status   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2876  **                      for the requested alarm group from the stored debug   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2877  **                      registers.It is applicable only for Smu_core.         **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2878  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2879  ** Service ID       : 0xB0                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2880  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2881  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2882  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2883  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2884  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2885  ** Parameters(in)   : AlarmGroup : Alarm group register                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2886  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2887  ** Parameters (out) : AlarmStatus: Status of the Alarm register               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2888  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2889  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2890  **                    E_NOT_OK - Operation failed eg. Due to invalid          **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2891  **                      parameters.                                           **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2892  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2893  Std_ReturnType Smu_GetAlarmDebugStatus
; Function Smu_GetAlarmDebugStatus
.L125:
Smu_GetAlarmDebugStatus:	.type	func

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2894  (
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2895    const Smu_AlarmGroupId AlarmGroup,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2896    uint32* const AlarmStatus
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2897  )
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2898  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2899    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2900    /*Check if DET or safety is enabled/disabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2901    /* [cover parentID={32FC3AC5-A77F-4ee3-94C4-B3612F1C2ACF}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2902    DET OR Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2903    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2904    #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2905    /* [cover parentID={7276793C-5C3E-4274-AF95-154BD0B55B1E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2906    Check if input parameter is NULL pointer
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2907    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2908    if(AlarmStatus == NULL_PTR)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2909    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2910      /*Report error SMU_E_PARAM_POINTER*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2911      /* [cover parentID={60BFF620-261E-4212-9AFF-92A54B88930B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2912      Report error SMU_E_PARAM_POINTER
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2913      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2914      Smu_lReportError(SMU_SID_GET_ALARM_DEBUG_STATUS, SMU_E_PARAM_POINTER);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2915    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2916    else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2917    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2918      /* [cover parentID={DCB48520-5726-420b-9159-405996BA3254}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2919      Is SMU driver initialized?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2920      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2921      if(SMU_INITIALIZED == Smu_InitStatus)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2922      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2923        /* [cover parentID={FD90824D-0E45-48cb-A2BA-CF44FA3B5CFE}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2924        Is the alarm group and position valid and  in SMU Core Domain ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2925        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2926        if((uint32)AlarmGroup < SMU_CORE_TOTAL_ALARM_GROUPS)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2927        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2928          /* [cover parentID={08C0DEA6-BA13-4ad4-9661-E837B4100F9D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2929          Set Result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2930          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2931          RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2932        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2933        else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2934        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2935          /* [cover parentID={0840E1C6-C91E-4878-A475-154E2BC817A6}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2936          Report error SMU_E_PARAM_GROUP
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2937          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2938          Smu_lReportError(SMU_SID_GET_ALARM_DEBUG_STATUS, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2939                           SMU_E_PARAM_GROUP);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2940        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2941      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2942      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2943      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2944        /* [cover parentID={A2D5DF0E-F90A-46da-A68A-47D30C2F9764}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2945        Report error SMU_E_UNINIT
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2946        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2947        Smu_lReportError(SMU_SID_GET_ALARM_DEBUG_STATUS, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2948                         SMU_E_UNINIT);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2949      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2950    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2951  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2952    /*Check if all checks have passed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2953    /* [cover parentID={7275BB85-A276-43d5-BAEE-4AEC9A02006A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2954    Have all checks passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2955    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2956    if(RetVal == (Std_ReturnType)E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2957    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2958    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2959      /* [cover parentID={5A0535E5-3863-4352-A8A7-6C0FC4F8A729}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2960      Read the alarm debug status from the debug register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2961      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2962      /*MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between pointers
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2963      of different object types due to SFR access. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2964      *AlarmStatus = (SMU_CORE_ALARM_GROUP->ADStatusReg[AlarmGroup].U);
	movh.a	a15,#61443
	lea	a15,[a15]@los(0xf0036a00)
.L766:
	addsc.a	a15,a15,d4,#2
.L767:
	ld.w	d15,[a15]
.L768:
	st.w	[a4],d15
.L769:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2965      RetVal = E_OK;
	mov	d2,#0
.L555:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2966    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2967  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2968    /* [cover parentID={7EA7033E-7C78-46d2-AA61-D11684B4A8F2}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2969    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2970    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2971    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2972  }
	ret
.L368:
	
__Smu_GetAlarmDebugStatus_function_end:
	.size	Smu_GetAlarmDebugStatus,__Smu_GetAlarmDebugStatus_function_end-Smu_GetAlarmDebugStatus
.L211:
	; End of function
	
	.sdecl	'.text.Smu_GetAlarmAction.Code.Cpu0',code,cluster('Smu_GetAlarmAction')
	.sect	'.text.Smu_GetAlarmAction.Code.Cpu0'
	.align	2
	
	.global	Smu_GetAlarmAction

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2973  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2974  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2975  ** Traceability      : [cover parentID={6764836C-E38B-4182-AAD7-7FF688427633}]**
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2976  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2977  ** Syntax           : Std_ReturnType Smu_GetAlarmAction                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2978  **                    (                                                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2979  **                      const Smu_AlarmGroupId AlarmGroup,                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2980  **                      const Smu_AlarmIdType AlarmPos,                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2981  **                      Smu_CoreAlarmActionType* const IntAlarmAction,        **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2982  **                      Smu_FSPActionType* const FSPAction                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2983  **                    )                                                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2984  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2985  ** Description      : The purpose of the API is to provide the internal alarm,**
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2986  **                    FSP action currently configured for the requested alarm.**
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2987  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2988  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2989  ** Service ID       : 0xAB                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2990  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2991  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2992  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2993  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2994  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2995  ** Parameters(in)   : AlarmGroup : Alarm group register                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2996  **                    AlarmPos   : Alarm position within the requested group  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2997  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2998  ** Parameters (out) : IntAlarmAction: Alarm action for the requested alarm    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  2999  **                    FSPAction  : FSP action for the requested alarm         **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3000  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3001  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3002  **                    E_NOT_OK - Operation failed eg. Due to invalid          **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3003  **                      parameters.                                           **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3004  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3005  Std_ReturnType Smu_GetAlarmAction
; Function Smu_GetAlarmAction
.L127:
Smu_GetAlarmAction:	.type	func

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3006  (
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3007    const Smu_AlarmGroupId AlarmGroup,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3008    const Smu_AlarmIdType AlarmPos,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3009    Smu_CoreAlarmActionType * const IntAlarmAction,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3010    Smu_FSPActionType * const FSPAction
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3011  )
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3012  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3013    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3014    /* [cover parentID={983EB5DF-90AB-4222-A4C5-86CDD5DD4F72}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3015    DET OR Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3016    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3017    #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3018    /* [cover parentID={26091F8C-EB32-47b9-9B62-4B30BED39B2F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3019    Check if output parameters are NULL pointers
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3020    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3021    if((IntAlarmAction == NULL_PTR) || (FSPAction == NULL_PTR))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3022    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3023      /* [cover parentID={3BDB6554-3513-4b70-A6AE-86615EFE9BEA}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3024      Report error SMU_E_PARAM_POINTER
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3025      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3026      Smu_lReportError(SMU_SID_GET_ALARM_ACTION, SMU_E_PARAM_POINTER);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3027    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3028    else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3029    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3030      /*Check if driver is initialized*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3031      /* [cover parentID={43BA95D6-E2CA-474d-A350-877B12998FD7}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3032      Is the initialization check passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3033      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3034      if(SMU_INITIALIZED == Smu_InitStatus)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3035      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3036        /* [cover parentID={B436CFD9-B889-40e5-ABA7-A501256BB06B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3037        Is the alarm group validity check passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3038        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3039        if(E_OK == Smu_lAlarmValidCheck(AlarmGroup, AlarmPos,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3040                                        SMU_SID_GET_ALARM_ACTION))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3041        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3042          /* [cover parentID={5520B822-F05F-486c-9D66-1680B28D1AD1}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3043          Set result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3044          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3045          RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3046        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3047      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3048      /* [cover parentID={8D2CE7D2-F1AF-4fe8-8B8F-9C10C29527AA}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3049      For all other conditions when ouput parameter is not NULL and registers
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3050      are not locked
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3051      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3052      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3053      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3054        /* [cover parentID={8E3ACE08-372A-4172-A6EE-2A8232EF549A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3055        Report error SMU_E_UNINIT
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3056        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3057        Smu_lReportError(SMU_SID_GET_ALARM_ACTION, SMU_E_UNINIT);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3058      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3059    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3060  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3061    /* [cover parentID={A04D910F-2EA8-44f6-969A-6938573C304D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3062    Have all checks passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3063    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3064    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3065    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3066    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3067      /* [cover parentID={4DCA642B-2109-4b22-875B-484AE23E744D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3068      Get Alarm Action
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3069      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3070      RetVal = Smu_lGetAlmAction(AlarmGroup, AlarmPos, IntAlarmAction,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3071                                 FSPAction);
	j	Smu_lGetAlmAction
.L313:
	
__Smu_GetAlarmAction_function_end:
	.size	Smu_GetAlarmAction,__Smu_GetAlarmAction_function_end-Smu_GetAlarmAction
.L176:
	; End of function
	
	.sdecl	'.text.Smu_SetAlarmAction.Code.Cpu0',code,cluster('Smu_SetAlarmAction')
	.sect	'.text.Smu_SetAlarmAction.Code.Cpu0'
	.align	2
	
	.global	Smu_SetAlarmAction

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3072    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3073    /* [cover parentID={A7CB4C89-02C8-422b-9BAD-252644F3172C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3074    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3075    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3076    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3077  }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3078  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3079  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3080  ** Traceability     :[cover parentID={969BDF14-FEEB-4224-A413-F16A79239E4C}]  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3081  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3082  ** Syntax           : Std_ReturnType Smu_SetAlarmAction                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3083  **                    (                                                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3084  **                      const Smu_AlarmGroupId AlarmGroup,                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3085  **                      const Smu_AlarmIdType AlarmPos,                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3086  **                      const Smu_CoreAlarmActionType AlarmAction             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3087  **                      const Smu_FSPActionType FSPAction)                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3088  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3089  ** Description      : The purpose of the API is to set the desired alarm      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3090  **                    action for the group and position specified.            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3091  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3092  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3093  ** Service ID       : 0xAC                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3094  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3095  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3096  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3097  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3098  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3099  ** Parameters(in)   : AlarmGroup : Alarm group register                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3100  **                    AlarmPos   : Alarm position within the requested group  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3101  **                    AlarmAction: Alarm action for the requested alarm       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3102  **                    FSPAction:FSP alarm action to be configured             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3103  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3104  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3105  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3106  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3107  **                    E_NOT_OK - Operation failed eg. Due to invalid          **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3108  **                      parameters. SMU lock already activated                **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3109  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3110  Std_ReturnType Smu_SetAlarmAction
; Function Smu_SetAlarmAction
.L129:
Smu_SetAlarmAction:	.type	func

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3111  (
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3112    const Smu_AlarmGroupId AlarmGroup,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3113    const Smu_AlarmIdType AlarmPos,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3114    const Smu_CoreAlarmActionType AlarmAction,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3115    const Smu_FSPActionType FSPAction
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3116  )
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3117  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3118    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3119  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3120    /*Check if DET or Safety enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3121    /* [cover parentID={A0BE1253-CADE-44de-8E51-9818895C9F1C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3122    DET OR Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3123    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3124    #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3125    /* [cover parentID={B412347C-0941-4d84-9070-820DB92269E6}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3126    Is the driver initialized and not in failed state?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3127    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3128    if(E_OK == Smu_lInitFailedCheck(SMU_SID_SET_ALARM_ACTION))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3129    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3130      /* [cover parentID={F78717BB-983A-4baa-8EC3-62217D3DE5D3}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3131      Have all alarm group validation checks passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3132      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3133      if(E_OK == Smu_lAlarmValidCheck(AlarmGroup, AlarmPos,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3134                                      SMU_SID_SET_ALARM_ACTION))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3135      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3136        /* [cover parentID={A1809107-AAF8-4162-B533-5EBE3AA49698}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3137        Check if the alarm group is in SMU core and the alarm action is
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3138        outside the range or reserved.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3139        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3140        if(((uint32)AlarmGroup < SMU_CORE_TOTAL_ALARM_GROUPS) &&
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3141            ((AlarmAction > SMU_ALARM_ACTION_CPU_RESET) ||
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3142             ((uint8)AlarmAction == (uint8)SMU_ALARM_ACTION_RSVD)))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3143        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3144          /* Invalid AlarmAction */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3145          /*Report DET SMU_E_INVALID_ALARM_ACTION*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3146          /* [cover parentID={F7466CA9-41BE-40ee-8854-234220F15156}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3147          Report SMU_E_INVALID_ALARM_ACTION
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3148          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3149          Smu_lReportError(SMU_SID_SET_ALARM_ACTION, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3150                           SMU_E_INVALID_ALARM_ACTION);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3151        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3152        /* [cover parentID={680AC9D3-8EA0-4359-8DCA-74A6922AF808}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3153        Is Smu_Stdby enabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3154        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3155        #if(SMU_STANDBY_SWITCH == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3156        /* [cover parentID={C615EAC9-2FA2-4431-A55D-D127EEBB49DC}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3157        Check if the alarm group is outside SMU core and the alarm action
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3158        is not alarm action none.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3159        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3160        else if(((uint8)AlarmAction != (uint8)SMU_ALARM_ACTION_NONE)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3161                && ((uint32)AlarmGroup > SMU_CORE_TOTAL_ALARM_GROUPS)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3162               )
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3163        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3164          /* [cover parentID={1F665189-CC0E-467a-B0FF-846F2EF736E2}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3165          Report Error SMU_E_INVALID_ALARM_ACTION
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3166          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3167          Smu_lReportError(SMU_SID_SET_ALARM_ACTION, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3168                           SMU_E_INVALID_ALARM_ACTION);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3169        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3170        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3171        /* [cover parentID={18B8AA72-2C12-40a7-BA48-EC4AB8E5E945}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3172        Check if SMU configuration registers are permanently locked
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3173        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3174        else if(Smu_LockState == SMU_LOCKED)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3175        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3176          /* SMU config registers are permanently locked */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3177          /* [cover parentID={105B18B3-732A-44be-835F-03C730FC6A63}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3178          Report Error SMU_E_LOCKED
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3179          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3180          Smu_lReportError(SMU_SID_SET_ALARM_ACTION, SMU_E_LOCKED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3181  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3182        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3183        /* [cover parentID={DA878D39-2F6B-465e-8724-C07ACDB0B8B4}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3184        Check if FSP action is invalid
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3185        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3186        else if(FSPAction > SMU_FSP_ACTION_MSK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3187        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3188          /* [cover parentID={89339310-90AB-4f01-AD78-77F36E93A370}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3189          Report Error SMU_E_INVALID_ALARM_ACTION
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3190          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3191          Smu_lReportError(SMU_SID_SET_ALARM_ACTION,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3192                           SMU_E_INVALID_ALARM_ACTION);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3193        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3194        /* [cover parentID={9EE25F8F-7D29-4b16-8FC8-B18B8DCA2650}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3195        For all other conditions when SMU is not locked,alarm group is in
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3196        SMU core,internal and external alarm action is valid or alarm group
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3197        is outside SMU core and alarm action is none .
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3198        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3199        else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3200        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3201          /* [cover parentID={832AB722-63DD-4a52-9B5A-A8A291691636}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3202          Set Result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3203          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3204          RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3205        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3206      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3207    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3208    /* [cover parentID={F6F635A7-E448-4e67-AA73-5893A0A9984C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3209    Have all checks passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3210    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3211    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3212    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3213    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3214      /* [cover parentID={299769C5-BFE2-479c-877C-7A0CE4C23B90}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3215      Set Alarm Action
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3216      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3217      RetVal = Smu_lSetAlmAction(AlarmGroup, AlarmPos, AlarmAction, FSPAction);
	j	Smu_lSetAlmAction
.L323:
	
__Smu_SetAlarmAction_function_end:
	.size	Smu_SetAlarmAction,__Smu_SetAlarmAction_function_end-Smu_SetAlarmAction
.L181:
	; End of function
	
	.sdecl	'.text.Smu_ReleaseFSP.Code.Cpu0',code,cluster('Smu_ReleaseFSP')
	.sect	'.text.Smu_ReleaseFSP.Code.Cpu0'
	.align	2
	
	.global	Smu_ReleaseFSP

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3218    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3219  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3220    /* [cover parentID={8A42093A-3739-4b59-B746-F4C1FDAD7362}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3221    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3222    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3223    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3224  }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3225  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3226  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3227  ** Traceability      : [cover parentID={23EABD59-5B57-464d-A9C3-63C45653C383},**
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3228  **                                     {7D727F3C-08FD-42d8-92DC-792B515ACDC4}]**
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3229  ** Syntax           : Std_ReturnType Smu_ReleaseFSP(void)                     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3230  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3231  ** Service ID       : 0xB2                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3232  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3233  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3234  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3235  ** Reentrancy       : Non Reentrant                                           **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3236  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3237  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3238  ** Parameters(in)   : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3239  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3240  ** Parameters (out) : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3241  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3242  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3243  **                    E_NOT_OK - Operation failed eg. Due to invalid          **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3244  **                    conditions i.e.transition from FAULT to RUN is disabled.**
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3245  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3246  ** Description      : The purpose of the API is to switch the SMU peripheral  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3247  **                    from the FAULT state to the RUN state. This also        **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3248  **                    switches the error pin from the FAULT state to          **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3249  **                    FAULT-FREE state. Additionally, this API can be used    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3250  **                    change the FSP state from the power-on state to the     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3251  **                    Fault-free state. This is essential to setup the error  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3252  **                    pin to drive the FSP.It is also required for testing of **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3253  **                    FSP pin                                                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3254  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3255  Std_ReturnType Smu_ReleaseFSP(void)
; Function Smu_ReleaseFSP
.L131:
Smu_ReleaseFSP:	.type	func

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3256  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3257    /* [cover parentID={CB792BB6-1652-44f0-B08D-DC4E3D02E653}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3258    Initialize Result to E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3259    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3260    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3261    Smu_CoreStateType SmuState;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3262    uint32 SmuEFRST;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3263    uint32 CommandStatus;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3264    uint32 Timeout = 0U;
	mov	d8,#0
.L556:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3265    /*Check if Safety or DET is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3266    /* [cover parentID={FA347CC1-DB7C-4092-A6F0-774712EA710F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3267    DET OR Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3268    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3269    #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3270    /* [cover parentID={D677E59D-3629-4b9e-9B8F-736F7B0A328F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3271    Check if driver is initialized and is not in failed state
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3272    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3273    RetVal = Smu_lInitFailedCheck(SMU_SID_RELEASE_FSP);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3274    /*Check if all checks have passed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3275    /* [cover parentID={ECA27BE2-4AED-479c-BCB5-5C016C5E2316}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3276    Have all checks passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3277    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3278    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3279    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3280    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3281      /*Read if Fault to RUN state is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3282      /* [cover parentID={756C97F7-DD34-4fed-BD77-70DE4AFB94EF}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3283      Read the value of Fault to RUN state Enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3284      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3285      SmuEFRST = (uint32)(SMU_AGC.B.EFRST);
	movh.a	a15,#61443
	ld.w	d15,[a15]@los(0xf003682c)
	extr.u	d0,d15,#29,#1
.L557:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3286      /* [cover parentID={74A7A315-5F22-4610-A8DF-111FC94AE59B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3287      Read the SMU state from DBG register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3288      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3289      SmuState = (Smu_CoreStateType)(SMU_DBG.B.SSM);
	ld.bu	d15,[a15]@los(0xf0036838)
.L559:
	and	d15,#3
.L798:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3290      /* SMU is in START state or (FAULT state with EFRST enabled) */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3291      /* [cover parentID={E5CF30E9-3B9F-4974-B711-96D4D86B5F81}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3292      Is SMU either  in START state or FAULT state with EFRST enabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3293      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3294      if((SmuState == SMU_START_STATE) || ((SmuState == SMU_FAULT_STATE) &&
	jeq	d15,#0,.L56
.L799:
	jne	d15,#2,.L57
.L800:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3295         (SmuEFRST == (uint32)SMU_EFRST_ENABLE)))
	jeq	d0,#0,.L58
.L56:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3296      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3297        /* [cover parentID={65742C32-D390-4a2a-B344-13CD5A75D90A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3298        Enter critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3299        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3300        /* [cover parentID={FFAA68CC-DFB9-4a4d-8ECD-A9509C305330}][/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3301        SchM_Enter_Smu_CmdAccess();
	call	SchM_Enter_Smu_CmdAccess
.L558:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3302        /*Acquire Spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3303        /* [cover parentID={90C27175-4883-424b-95DB-7ACB95EC0B5E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3304        Acquire Spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3305        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3306        Mcal_GetSpinlock(&Smu_CmdLockAddress, SMU_SPINLOCK_TIMEOUT);
	movh.a	a4,#@his(Smu_CmdLockAddress)
	lea	a4,[a4]@los(Smu_CmdLockAddress)
.L801:
	mov	d4,#8192
	call	Mcal_GetSpinlock
.L802:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3307  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3308        /* Write SMU_ReleaseFSP(0) in CMD register */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3309        /* [cover parentID={4E7185F1-3699-4bdd-868C-81ADB0E2B802}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3310        Give command to release FSP by writing to Command Register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3311        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3312        SMU_SFR_RUNTIME_WRITE32(&SMU_CMD.U, (uint32)SMU_RELEASEFSP_COMMAND);
	mov	d15,#2
.L560:
	movh.a	a15,#61443
	st.w	[a15]@los(0xf0036820),d15

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3313  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3314  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3315        /* Check if Release FSP command is accepted
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3316        by reading the Status reg*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3317        /* [cover parentID={40205E6F-3528-4feb-BD84-616C7E247FAE}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3318        Loop till Command Status Change is reflected while reading
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3319        back the status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3320        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3321        do
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3322        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3323          /* [cover parentID={70AA337B-20A7-4ec4-877B-A3FD91971E92}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3324          Read from the Command Status Register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3325          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3326          CommandStatus = (uint32)SMU_STS.B.RES;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3327          Timeout++;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3328        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3329        /* [cover parentID={A9A79892-32AE-4711-B4C4-EEC59AD7693A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3330        Loop till timeout is zero AND status of command is failed
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3331        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3332        while((Timeout < SMU_CMDSTATUS_TIMEOUT) &&
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3333              (CommandStatus != SMU_COMMAND_SUCCESS));
.L59:
	ld.w	d15,[a15]@los(0xf0036824)
	extr.u	d15,d15,#8,#1
.L561:
	add	d8,#1
.L803:
	jge.u	d8,#2,.L60
.L804:
	jne	d15,#0,.L59
.L60:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3334  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3335        /*Release spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3336        /* [cover parentID={FAD61CFF-11D2-4184-9AA4-B3E0B816F1F9}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3337        Release Spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3338        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3339        Mcal_ReleaseSpinlock(&Smu_CmdLockAddress);
	movh.a	a4,#@his(Smu_CmdLockAddress)
	lea	a4,[a4]@los(Smu_CmdLockAddress)
	call	Mcal_ReleaseSpinlock
.L805:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3340  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3341        /* [cover parentID={68A8EF5A-0EDA-496e-BD47-EFB3FFFD2BBE}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3342        Exit critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3343        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3344        SchM_Exit_Smu_CmdAccess();
	call	SchM_Exit_Smu_CmdAccess
.L806:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3345  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3346        /* [cover parentID={C9B4899A-DE24-4012-83BA-2086C0BDEBE0}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3347        Is release FSP command accepted?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3348        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3349        if(CommandStatus != SMU_COMMAND_SUCCESS)
	jne	d15,#0,.L61
.L807:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3350        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3351          /* [cover parentID={378BA7E0-E550-4d52-9294-B0ECE54B0D15}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3352          Set Result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3353          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3354          RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3355  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3356          /* [cover parentID={DCD9313F-BB06-4ade-AF10-B1F338BD6ED3}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3357          Production Error notification for FSP release failure or success is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3358          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3359          #if (SMU_RELEASE_FSP_DEM_NOTIF == \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3360          SMU_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3361          /* Set status to passed, when set alarm status fails*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3362          /* [cover parentID={30984FBF-7DEF-427b-9E6E-52709C203423}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3363          Report failure as Production Error event status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3364          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3365          Smu_lReportDemError(SMU_E_RELEASE_FSP_FAILURE, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3366                                DEM_EVENT_STATUS_FAILED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3367          #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3368        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3369        else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3370        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3371          /* [cover parentID={1804B9CC-A6AD-4387-AEF2-F3AB7CEDED36}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3372          Set Result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3373          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3374          RetVal = E_OK;
	mov	d2,#0
.L562:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3375  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3376          /* [cover parentID={BAB7D3D4-AA32-4ddf-B4A4-E3941FDA8E2A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3377          Production Error notification for FSP release failure or success is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3378          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3379          #if (SMU_RELEASE_FSP_DEM_NOTIF == \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3380          SMU_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3381          /* Set status to passed, when set alarm status is passed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3382          /* [cover parentID={E0E751E4-B2CD-4f16-97B3-F2E31877C8C8}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3383          Report success as Production Error event status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3384          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3385          Smu_lReportDemError(SMU_E_RELEASE_FSP_FAILURE, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3386                                DEM_EVENT_STATUS_PASSED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3387          #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3388        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3389      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3390      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3391      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3392        /* [cover parentID={C58E3BFE-AC07-4cd0-B4FB-63A3255DA8B2}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3393        Set Result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3394        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3395        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3396      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3397    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3398    /* [cover parentID={D4AFD21B-2690-4727-8013-A3C57428BA45}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3399    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3400    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3401    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3402  }
	ret
.L61:
.L58:
.L57:
	mov	d2,#1
.L563:
	ret
.L381:
	
__Smu_ReleaseFSP_function_end:
	.size	Smu_ReleaseFSP,__Smu_ReleaseFSP_function_end-Smu_ReleaseFSP
.L226:
	; End of function
	
	.sdecl	'.text.Smu_ActivateFSP.Code.Cpu0',code,cluster('Smu_ActivateFSP')
	.sect	'.text.Smu_ActivateFSP.Code.Cpu0'
	.align	2
	
	.global	Smu_ActivateFSP

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3403  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3404  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3405  ** Traceability     : [cover parentID={CC28E023-9FD7-4f99-BCCC-55D4AFFAADF3}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3406  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3407  ** Syntax           : Std_ReturnType Smu_ActivateFSP (void)                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3408  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3409  ** Description      : This API activates the FSP to indicate a FAULT state on **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3410  **                    the error pin to the safe state switching device. Also, **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3411  **                    in the SMU START state, activation of FSP is only       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3412  **                    possible using this API as alarms are NOT processed.    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3413  **                    Additionally, this is required for the testing of the   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3414  **                    FSP timing                                              **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3415  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3416  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3417  ** Service ID       : 0xB3                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3418  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3419  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3420  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3421  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3422  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3423  ** Parameters(in)   : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3424  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3425  ** Parameters (out) : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3426  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3427  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3428  **                    E_NOT_OK - Operation failed eg. SMU not initialized     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3429  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3430  Std_ReturnType Smu_ActivateFSP(void)
; Function Smu_ActivateFSP
.L133:
Smu_ActivateFSP:	.type	func

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3431  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3432  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3433    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3434    uint32 Timeout = 0U;
	mov	d8,#0
.L564:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3435    uint32 CommandStatus;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3436    /*Check if DET or Safety are enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3437    /* [cover parentID={6A9418DE-F72D-4d9a-9C00-B7CECA135400}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3438    DET OR Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3439    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3440    #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3441    /*Check if driver is initialized and is not in failed state*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3442    /* [cover parentID={A60AE207-9EB8-4218-90E3-F246AC7D6B46}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3443    Check if driver is initialized and is not in failed state
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3444    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3445    RetVal = Smu_lInitFailedCheck(SMU_SID_ACTIVATE_FSP);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3446  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3447    /*Check if all checks have passed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3448    /* [cover parentID={0B91F7A6-1064-4603-ADFC-A30EF703227C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3449    Have all checks passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3450    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3451    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3452    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3453    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3454      /* [cover parentID={309CCDE0-2A40-4046-8582-2B885DFB6718}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3455      Enter critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3456      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3457      /* [cover parentID={FFAA68CC-DFB9-4a4d-8ECD-A9509C305330}][/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3458      SchM_Enter_Smu_CmdAccess();
	call	SchM_Enter_Smu_CmdAccess
.L812:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3459      /*Acquire spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3460      /* [cover parentID={3705F9B1-2A40-4a1b-B334-F24EE4DADFC8}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3461      Acquire Spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3462      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3463      Mcal_GetSpinlock(&Smu_CmdLockAddress, SMU_SPINLOCK_TIMEOUT);
	movh.a	a4,#@his(Smu_CmdLockAddress)
	lea	a4,[a4]@los(Smu_CmdLockAddress)
.L813:
	mov	d4,#8192
	call	Mcal_GetSpinlock
.L814:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3464  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3465      /* Activate FSP by Writing into CMD register*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3466      /* [cover parentID={B396B44D-A5B0-4c80-8B69-3342AD5C7DB6}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3467      Give command to activate FSP by writing to Command Register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3468      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3469      SMU_SFR_RUNTIME_WRITE32(&SMU_CMD.U, (uint32)SMU_ACTIVATEFSP_COMMAND );
	mov	d15,#1
	movh.a	a15,#61443
	st.w	[a15]@los(0xf0036820),d15

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3470  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3471      /* Check if Activate FSP command is successfully accepted */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3472      /* [cover parentID={38D25FF8-C7E8-47a8-803E-8FF8EFB7710E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3473      Loop till Command Status Change is reflected while reading back the
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3474      status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3475      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3476      do
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3477      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3478        /* [cover parentID={1159B80A-4289-4783-B4BD-0CAAC9AA40F2}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3479        Read from the Command Status Register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3480        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3481        CommandStatus = (uint32)SMU_STS.B.RES;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3482        Timeout++;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3483      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3484      /* [cover parentID={D225CDB9-A033-4802-8F50-D6784B6F24ED}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3485      Loop till timeout is zero AND status of command is failed
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3486      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3487      while((Timeout < SMU_CMDSTATUS_TIMEOUT) &&
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3488            (CommandStatus != SMU_COMMAND_SUCCESS));
.L64:
	ld.w	d15,[a15]@los(0xf0036824)
	extr.u	d15,d15,#8,#1
.L565:
	add	d8,#1
.L815:
	jge.u	d8,#2,.L65
.L816:
	jne	d15,#0,.L64
.L65:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3489  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3490      /*Release spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3491      /* [cover parentID={39EFA903-F17A-4e63-977D-01E14BE495D6}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3492      Release spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3493      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3494      Mcal_ReleaseSpinlock(&Smu_CmdLockAddress);
	movh.a	a4,#@his(Smu_CmdLockAddress)
	lea	a4,[a4]@los(Smu_CmdLockAddress)
	call	Mcal_ReleaseSpinlock
.L817:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3495  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3496      /* [cover parentID={90CB5D3B-9A79-48e9-BC66-C7702F5B763C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3497      Exit critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3498      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3499      SchM_Exit_Smu_CmdAccess();
	call	SchM_Exit_Smu_CmdAccess
.L818:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3500      /* [cover parentID={8A7ECE32-264C-448d-A50C-9F3B2844F54A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3501      Is activate FSP command accepted?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3502      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3503      if(CommandStatus != SMU_COMMAND_SUCCESS)
	ne	d2,d15,#0
.L566:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3504      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3505        /* [cover parentID={737F09CC-1175-4f8b-88F7-A59370302462}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3506        Set Result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3507        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3508        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3509  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3510        /* [cover parentID={1FC76E12-EEA8-4a2e-A27A-8DC8E1362497}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3511        Production Error notification for FSP activation failure or success is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3512        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3513        #if (SMU_ACTIVATE_FSP_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3514        /* Raise failure Production Error, when activate FSP fails*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3515        /* [cover parentID={ADE66FCE-FAFB-493b-BC41-21261F1C93ED}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3516        Report failure as Production Error event status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3517        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3518        Smu_lReportDemError(SMU_E_ACTIVATE_FSP_FAILURE,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3519                              DEM_EVENT_STATUS_FAILED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3520        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3521      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3522      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3523      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3524        /* [cover parentID={1C96DC5B-1B50-44a1-A2A3-263B7AA55184}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3525        Set Result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3526        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3527        RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3528        /* [cover parentID={BD3CA5C3-951E-4a19-9A9A-BDE9AA8BC8A1}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3529        Production Error notification for FSP activation failure or success is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3530        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3531        #if (SMU_ACTIVATE_FSP_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3532        /* Raise failure Production Error, when activate FSP fails*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3533        /* [cover parentID={594C3C4D-DFC0-487f-90A1-FC58E6687B73}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3534        Report success as Production Error event status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3535        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3536        Smu_lReportDemError(SMU_E_ACTIVATE_FSP_FAILURE,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3537                              DEM_EVENT_STATUS_PASSED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3538        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3539      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3540  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3541    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3542    /* [cover parentID={169A7A9E-2A8B-4a6e-88A2-6F1841A7FE41}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3543    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3544    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3545    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3546  }
	ret
.L387:
	
__Smu_ActivateFSP_function_end:
	.size	Smu_ActivateFSP,__Smu_ActivateFSP_function_end-Smu_ActivateFSP
.L231:
	; End of function
	
	.sdecl	'.text.Smu_SetupErrorPin.Code.Cpu0',code,cluster('Smu_SetupErrorPin')
	.sect	'.text.Smu_SetupErrorPin.Code.Cpu0'
	.align	2
	
	.global	Smu_SetupErrorPin

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3547  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3548  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3549  ** Traceability     : [cover parentID={A001457A-1DCC-48c1-9D56-C167B076C012}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3550  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3551  ** Syntax           : Std_ReturnType Smu_SetupErrorPin(void)                  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3552  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3553  ** Description      : This service enables the SMU to control the error pin   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3554  **                    and hence activate the safe state via the FSP. This API **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3555  **                    switches the error pin from GPIO mode to SMU mode.      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3556  **                    Only after switching to the SMU mode, SMU can control   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3557  **                    the error pin (i.e by Alarm, Activate, Release APIs)    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3558  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3559  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3560  ** Service ID       : 0xB4                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3561  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3562  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3563  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3564  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3565  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3566  ** Parameters(in)   : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3567  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3568  ** Parameters (out) : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3569  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3570  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3571  **                    E_NOT_OK - Operation failed eg. already in SMU mode     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3572  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3573  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3574  Std_ReturnType Smu_SetupErrorPin(void)
; Function Smu_SetupErrorPin
.L135:
Smu_SetupErrorPin:	.type	func

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3575  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3576    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3577    uint32 ReadPCTL;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3578    uint32 FSPHWDir;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3579    uint32 FSPPortEnable;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3580  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3581    /* [cover parentID={F6366B22-5138-44e3-9F7B-9C2AB11FECEC}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3582    DET OR Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3583    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3584    #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3585    /* [cover parentID={D45E96D1-7415-4bd7-8837-22F9CDC33931}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3586    Check if driver is initialized and is not in failed state
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3587    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3588    RetVal = Smu_lInitFailedCheck(SMU_SID_SET_ERROR_PIN);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3589    /* [cover parentID={F2C6FE58-5E4F-4453-B4AD-276782FBF220}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3590    Is the initialization and driver state check passed?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3591    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3592    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3593    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3594      /*Check if configuration registers are permanently locked*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3595      /* [cover parentID={67F89F96-F123-4e3a-9884-03C71BE506E2}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3596      Is SMU  already locked ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3597      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3598      if(Smu_LockState == SMU_LOCKED)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3599      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3600        /*Report error SMU_E_LOCKED*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3601        /* [cover parentID={1F81A925-FDFE-4dd6-9BFE-6F759965EAEB}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3602        Report error SMU_E_LOCKED
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3603        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3604        Smu_lReportError(SMU_SID_SET_ERROR_PIN, SMU_E_LOCKED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3605        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3606      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3607      /* Check if Error Pin is already setup */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3608      /* [cover parentID={DF51F979-8A84-45b6-9E65-91BEB0F46F46}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3609      Is Error Pin already setup?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3610      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3611      else if(Smu_ErrPinStatus == SMU_ERRPIN_SET)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3612      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3613        /* [cover parentID={01286938-A7EB-42f9-B613-EFABFD4D1E45}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3614        Set Result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3615        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3616        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3617      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3618      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3619      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3620        /* [cover parentID={1A109F76-21FD-49c8-AA39-2FABD45A244E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3621        Set Result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3622        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3623        RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3624      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3625    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3626    /*Check if all checks have passed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3627    /* [cover parentID={1CFE6DFC-F223-4425-8874-BC5F1A9C7114}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3628    Have all checks  passed?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3629    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3630    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3631    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3632    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3633  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3634      /*Calculate the FSP HW Direction which chooses port direction*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3635      /* [cover parentID={BC7F1497-4821-432e-8059-A5E1CA2DA1B2}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3636      Calculate the FSP HW Direction which chooses port direction
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3637      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3638      FSPHWDir = SMU_CORE_FSP0_HWDIR | (SMU_CORE_FSP1_HWDIR << SMU_ALARM_VALID);
	mov	d15,#0
.L567:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3639  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3640      /*Calculate the FSP Port Enable*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3641      FSPPortEnable = SMU_CORE_FSP0_PORT_ENABLE | \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3642                      (SMU_CORE_FSP1_PORT_ENABLE << SMU_ALARM_VALID);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3643  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3644      /*calculate final PCTL mask*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3645      ReadPCTL = (FSPHWDir | (FSPPortEnable << SMU_PCTL_HWEN_POS) | \ 
	sh	d0,d15,#2
.L774:
	or	d15,d0
.L568:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3646                ((uint32)SMU_GLITCHFILTER_SCU << (uint32)SMU_PCTL_GF_SCU) | \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3647                ((uint32)SMU_GLITCHFILTER_SMU_STS << (uint32)SMU_PCTL_GF_STS) | \ 
	or	d8,d15,#128
.L569:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3648                (uint32)SMU_PCTL_MASK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3649  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3650      /* [cover parentID={206D7F00-F26B-4553-A155-51A957009A9B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3651      Enter critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3652      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3653      /* [cover parentID={0D20AD6F-7260-4c0d-90C9-531A056367E4}][/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3654      SchM_Enter_Smu_DriverAccess();
	call	SchM_Enter_Smu_DriverAccess
.L775:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3655      /*Acquire spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3656      /* [cover parentID={8CB4FC8A-687C-4ee6-82AE-8B4627DEA1C5}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3657      Acquire Spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3658      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3659      Mcal_GetSpinlock(&Smu_LockAddress, SMU_SPINLOCK_TIMEOUT);
	movh.a	a4,#@his(Smu_LockAddress)
	lea	a4,[a4]@los(Smu_LockAddress)
.L776:
	mov	d4,#8192
	call	Mcal_GetSpinlock
.L777:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3660  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3661      /*Unlock the SMU configuration registers*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3662      /* [cover parentID={2610EDD8-33E1-42a1-BB71-5A6E13279A1F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3663      Unlock the SMU configuration registers
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3664      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3665      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG(&MODULE_SMU.KEYS,  \ 
	movh.a	a4,#61443
	ld.w	d15,[a4]@los(0xf0036834)
	insert	d15,d15,#0,#0,#8
	or	d4,d15,#188
	lea	a4,[a4]@los(0xf0036834)
	call	Mcal_WriteSafetyEndInitProtReg
.L778:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3666          (uint32)SMU_CFG_KEY_UNLOCK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3667  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3668      /* [cover parentID={7126F98F-6F1D-4ef0-935F-8B514DB3631D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3669      Write the FSP configuration values to setup error pin
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3670      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3671      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf003683c)
	mov	d4,d8
.L570:
	call	Mcal_WriteSafetyEndInitProtReg
.L571:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3672          &MODULE_SMU.PCTL, (uint32)ReadPCTL);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3673  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3674      /* After configuration set temporary lock of SMU configuration */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3675      /* [cover parentID={0A8016E8-EA75-41b3-AA84-369F0C02677E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3676      Set temporary lock on SMU configuration
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3677      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3678      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036834)
	mov	d4,#0
	call	Mcal_WriteSafetyEndInitProtReg
.L779:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3679          &MODULE_SMU.KEYS, (uint32)SMU_CFG_KEY_TEMPLOCK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3680  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3681      /*Check if Smu_stdby is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3682      /* [cover parentID={784A2D1A-FBDE-49c6-85EA-4C7E14E2981B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3683      SMU standby mode ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3684      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3685      #if(SMU_STANDBY_SWITCH == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3686      uint32 FSPStdbyPortEnable;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3687      /*Calculate the FSP[1:0] enable values for Smu_stdby*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3688      /* [cover parentID={21B6680F-CC27-4104-B238-593D0C1A8A56}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3689      Calculate FSP Port enable for SMU Stand by
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3690      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3691      FSPStdbyPortEnable = (SMU_STDBY_FSP1_OUTPUT << SMU_STDBY_F1_MSK) \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3692             | (SMU_STDBY_FSP0_OUTPUT << SMU_STDBY_F0_MSK) | SMU_STDBY_BIT_PROT;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3693  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3694      FSPStdbyPortEnable = PMS_CMD_STDBY.U | FSPStdbyPortEnable;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3695  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3696      /*Write into the CMD SFR to enable PORT*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3697      /* [cover parentID={68E792FD-9399-4ac8-954F-C5FD263663BA}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3698      Setup the Error Pin in SMU Standby mode
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3699      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3700      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3701          &MODULE_PMS.CMD_STDBY, (uint32)FSPStdbyPortEnable);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3702  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3703      #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3704      /* [cover parentID={2CE026D0-BE73-409c-B103-9933D776C4A8}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3705      Is DET or safety or Init Check API is enabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3706      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3707      #if ((SMU_DEV_ERROR_DETECT == STD_ON) || \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3708      (SMU_SAFETY_ENABLE == STD_ON) ||(SMU_INIT_CHECK_API == STD_ON))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3709      /* Set the Smu_ErrPinStatus global variable SMU_ERRPIN_SET*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3710      /* [cover parentID={A90229BE-515A-4f65-A240-056C3C187D35}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3711      Set Error Pin Status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3712      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3713      Smu_ErrPinStatus = SMU_ERRPIN_SET;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3714      #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3715      /*Release spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3716      /* [cover parentID={6BB983CA-4C60-485c-BDD8-87EEABB83849}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3717      Release spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3718      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3719      Mcal_ReleaseSpinlock(&Smu_LockAddress);
	movh.a	a4,#@his(Smu_LockAddress)
	lea	a4,[a4]@los(Smu_LockAddress)
	call	Mcal_ReleaseSpinlock
.L780:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3720  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3721      /* [cover parentID={158C78F1-AF94-4735-B773-DD50F410D57D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3722      Exit critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3723      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3724      SchM_Exit_Smu_DriverAccess();
	call	SchM_Exit_Smu_DriverAccess
.L781:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3725      RetVal = E_OK;
	mov	d2,#0
.L572:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3726  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3727    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3728    /* [cover parentID={D0A0B97A-473A-4504-8D84-B4F57B98BE5D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3729    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3730    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3731    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3732  }
	ret
.L374:
	
__Smu_SetupErrorPin_function_end:
	.size	Smu_SetupErrorPin,__Smu_SetupErrorPin_function_end-Smu_SetupErrorPin
.L216:
	; End of function
	
	.sdecl	'.text.Smu_ReleaseErrorPin.Code.Cpu0',code,cluster('Smu_ReleaseErrorPin')
	.sect	'.text.Smu_ReleaseErrorPin.Code.Cpu0'
	.align	2
	
	.global	Smu_ReleaseErrorPin

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3733  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3734  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3735  ** Traceability     : [cover parentID={E9D7EA34-BB9E-45f1-8EED-F89C5AA17DA5}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3736  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3737  ** Syntax           : Std_ReturnType Smu_ReleaseErrorPin(void)                **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3738  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3739  ** Descripition:      This API switches the error pin from SMU mode           **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3740  **                    to GPIO mode.                                           **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3741  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3742  ** Service ID       : 0xB5                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3743  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3744  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3745  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3746  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3747  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3748  ** Parameters(in)   : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3749  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3750  ** Parameters (out) : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3751  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3752  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3753  **                    E_NOT_OK - Operation failed eg. Configuration is locked **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3754  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3755  Std_ReturnType Smu_ReleaseErrorPin(void)
; Function Smu_ReleaseErrorPin
.L137:
Smu_ReleaseErrorPin:	.type	func

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3756  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3757    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3758  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3759    /*Check if DET or safety is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3760    /* [cover parentID={24D09745-158B-4cdc-AD8D-EC9087B6685E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3761    DET OR Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3762    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3763    #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3764    /* [cover parentID={58684C8D-826C-4745-B85C-EDF7B90DB636}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3765    Check if driver is initialized and is not in failed state
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3766    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3767    RetVal = Smu_lInitFailedCheck(SMU_SID_RELEASE_ERROR_PIN);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3768    /* Check if SMU is already locked */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3769    /* [cover parentID={95AA665A-DB8B-4040-B336-766CA6CC8B6C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3770    Has the initialization and driver failed check passed?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3771    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3772    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3773    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3774      /* [cover parentID={D28802DC-4556-4788-8A75-7BA61BE84454}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3775      Is SMU  already locked ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3776      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3777      if(Smu_LockState == SMU_LOCKED)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3778      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3779        /* [cover parentID={41231000-0D71-4d8c-9007-B21B07AAD18C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3780        Report error SMU_E_LOCKED
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3781        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3782        Smu_lReportError(SMU_SID_RELEASE_ERROR_PIN, SMU_E_LOCKED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3783        /* SMU config registers are permanently locked */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3784        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3785      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3786      /* Check if Error Pin is already released */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3787      /* [cover parentID={B3554C4B-C7CC-42f9-9915-01166F0606F6}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3788      Is Error Pin already released?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3789      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3790      else if(Smu_ErrPinStatus == SMU_ERRPIN_NOTSET)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3791      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3792        /* [cover parentID={47F5900E-D93E-426d-820B-F7CEEE2F1333}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3793        Set Result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3794        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3795        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3796      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3797      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3798      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3799        /* [cover parentID={E706F68B-CBC7-49db-890C-96D30735EA98}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3800        Set Result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3801        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3802        RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3803      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3804    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3805    /*Check if all checks have passed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3806    /* [cover parentID={6C67E1AD-AF7D-487b-817B-9A83B6D5ECE3}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3807    Have all checks  passed?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3808    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3809    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3810    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3811    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3812      /* [cover parentID={F7DEABC5-71D1-49ef-8F98-130ECAF794DD}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3813      Enter critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3814      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3815      /* [cover parentID={0D20AD6F-7260-4c0d-90C9-531A056367E4}][/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3816      SchM_Enter_Smu_DriverAccess();
	call	SchM_Enter_Smu_DriverAccess
.L786:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3817      /*Acquire spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3818      /* [cover parentID={183A22C8-624C-464f-A880-A0458E3027BB}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3819      Acquire Spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3820      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3821      Mcal_GetSpinlock(&Smu_LockAddress, SMU_SPINLOCK_TIMEOUT);
	movh.a	a4,#@his(Smu_LockAddress)
	lea	a4,[a4]@los(Smu_LockAddress)
.L787:
	mov	d4,#8192
	call	Mcal_GetSpinlock
.L788:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3822  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3823      /*Unlock configuration registers*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3824      /* [cover parentID={958F8D19-A0B1-4d28-A993-016A979CD695}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3825      Unlock the SMU configuration registers
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3826      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3827      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG(&MODULE_SMU.KEYS,    \ 
	movh.a	a4,#61443
	ld.w	d15,[a4]@los(0xf0036834)
	insert	d15,d15,#0,#0,#8
	or	d4,d15,#188
	lea	a4,[a4]@los(0xf0036834)
	call	Mcal_WriteSafetyEndInitProtReg
.L789:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3828          (uint32)SMU_CFG_KEY_UNLOCK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3829  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3830      /* [cover parentID={4E910AFB-FE0F-480b-9E32-79D849BB6B79}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3831      Relase Error Pin from SMU mode
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3832      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3833      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG(&MODULE_SMU.PCTL,  \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf003683c)
	mov.u	d4,#32768
	addih	d4,d4,#8
	call	Mcal_WriteSafetyEndInitProtReg
.L790:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3834          (uint32)SMU_PCTL_RESET_VAL);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3835  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3836      /* After configuration set temporary lock of SMU configuration */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3837      /* [cover parentID={15BD79D8-8890-4252-8664-7C99E375D7E7}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3838      Set temporary lock on SMU configuration
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3839      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3840      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG(&MODULE_SMU.KEYS,   \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036834)
	mov	d4,#0
	call	Mcal_WriteSafetyEndInitProtReg
.L791:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3841          (uint32)SMU_CFG_KEY_TEMPLOCK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3842  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3843      /*Check if Smu_stdby is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3844      /* [cover parentID={23622706-6D97-4922-AD27-7ED87ED4BD56}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3845      SMU standby mode ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3846      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3847      #if(SMU_STANDBY_SWITCH == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3848  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3849      /* [cover parentID={DE86E215-7636-49eb-86DD-2C441153C4AF}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3850      Calculate FSP Port enable for SMU Stand by
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3851      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3852      uint32 FSPStdbyPortEnable = PMS_CMD_STDBY.U & SMU_CMD_FSP_RESET;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3853  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3854      /*Release error pin to GPIO mode*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3855      /* [cover parentID={63EDFC55-DBA8-44d2-BB9D-17111AB0CA68}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3856      Release the Error Pin in SMU Standby mode
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3857      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3858      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3859          &MODULE_PMS.CMD_STDBY, (uint32) \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3860          (FSPStdbyPortEnable | SMU_STDBY_BIT_PROT));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3861  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3862      #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3863      /* [cover parentID={B06B8E6C-53E4-43cd-996F-E6C3059026F4}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3864      Is DET or Safety or Init Check API enabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3865      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3866      #if ((SMU_DEV_ERROR_DETECT == STD_ON) || \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3867      (SMU_SAFETY_ENABLE == STD_ON) ||(SMU_INIT_CHECK_API == STD_ON))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3868      /* Set the Smu_ErrPinStatus global variable to SMU_ERRPIN_NOTSET*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3869      /* [cover parentID={288FB060-C7AB-42fc-88C5-26A434745EFF}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3870      Reset Error Pin Status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3871      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3872      Smu_ErrPinStatus = SMU_ERRPIN_NOTSET;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3873      #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3874  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3875      /*Release spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3876      /* [cover parentID={2A52C48F-6BB0-44ab-9C5C-6E4DCDCA8952}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3877      Release spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3878      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3879      Mcal_ReleaseSpinlock(&Smu_LockAddress);
	movh.a	a4,#@his(Smu_LockAddress)
	lea	a4,[a4]@los(Smu_LockAddress)
	call	Mcal_ReleaseSpinlock
.L792:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3880  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3881      /* [cover parentID={666A0CEE-091A-4230-8791-349290D6C5AD}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3882      Exit critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3883      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3884      SchM_Exit_Smu_DriverAccess();
	call	SchM_Exit_Smu_DriverAccess
.L793:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3885      RetVal = E_OK;
	mov	d2,#0
.L573:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3886  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3887    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3888  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3889    /* [cover parentID={0AA5591D-968B-4468-8C42-EFAD72A14CF5}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3890    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3891    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3892    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3893  }
	ret
.L379:
	
__Smu_ReleaseErrorPin_function_end:
	.size	Smu_ReleaseErrorPin,__Smu_ReleaseErrorPin_function_end-Smu_ReleaseErrorPin
.L221:
	; End of function
	
	.sdecl	'.text.Smu_RTStop.Code.Cpu0',code,cluster('Smu_RTStop')
	.sect	'.text.Smu_RTStop.Code.Cpu0'
	.align	2
	
	.global	Smu_RTStop

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3894  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3895  ** Traceability      :[cover parentID={5DEE019E-6A73-49f3-97B4-93E28844ADE6}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3896  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3897  ** Syntax           : Std_ReturnType Smu_RTStop(const uint8 TimerNum )        **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3898  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3899  ** Service ID       : 0xB6                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3900  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3901  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3902  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3903  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3904  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3905  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3906  ** Parameters(in)   : TimerNum : Identifies the Recovery Timer unit to be     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3907  **                      stopped                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3908  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3909  ** Parameters (out) : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3910  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3911  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3912  **                    E_NOT_OK - Operation failed eg. Due to invalid          **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3913  **                                 parameters                                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3914  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3915  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3916  ** Description      : The purpose of the API is to stop the requested recovery**
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3917  **                    timer unit. Possible usecase: When an fault occurs,     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3918  **                    error handler might be triggered. However, this error   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3919  **                    handler should setup a recovery mechanism or error      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3920  **                    mitigation mechanism within a finite interval of time   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3921  **                    to prevent the system from failing.                     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3922  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3923  Std_ReturnType Smu_RTStop(const uint8 TimerNum )
; Function Smu_RTStop
.L139:
Smu_RTStop:	.type	func
	sub.a	a10,#8
.L574:
	mov	d8,d4
.L576:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3924  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3925    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3926    uint32 Timeout = 0U;
	mov	d9,#0
.L578:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3927    uint32 CommandStatus = SMU_COMMAND_FAILURE;
	mov	d10,#1
.L579:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3928    uint32 RTSArray[2];
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3929  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3930    /* [cover parentID={0F2F6810-0765-42f6-97A0-EAE6D1EBDD61}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3931    DET OR Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3932    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3933    #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3934    /* [cover parentID={C9769357-8593-411d-8796-1DEAB6717E56}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3935    Check if the input parameter timer index is within the valid range
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3936    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3937    if(TimerNum >= (uint8)SMU_MAX_RECOV_TIM)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3938    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3939      /* [cover parentID={D1EA75FC-1D12-46d0-89EA-E2A313C1CA2C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3940      Report error SMU_E_INVALID_TIMER
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3941      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3942      Smu_lReportError(SMU_SID_RTSTOP, SMU_E_INVALID_TIMER);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3943    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3944    else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3945    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3946      /* [cover parentID={DD76A869-D0C7-497d-8653-DE1F62DF1686}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3947      Check if driver is initialized and is not in failed state
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3948      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3949      RetVal = Smu_lInitFailedCheck(SMU_SID_RTSTOP);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3950    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3951    /*Check if all checks have passed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3952    /* [cover parentID={B59C3B01-EB84-480d-9919-222FBC22382A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3953    Have all checks passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3954    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3955    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3956    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3957    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3958      /* [cover parentID={1D9C60D6-C9AC-4b62-979E-D3C695DB50DE}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3959      Enter critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3960      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3961      /* [cover parentID={FFAA68CC-DFB9-4a4d-8ECD-A9509C305330}][/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3962      SchM_Enter_Smu_CmdAccess();
	call	SchM_Enter_Smu_CmdAccess
.L575:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3963      /*Acquire spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3964      /* [cover parentID={578A0BF2-A667-4d68-ABB4-BA1754AC9E86}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3965      Acquire Spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3966      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3967      Mcal_GetSpinlock(&Smu_CmdLockAddress, SMU_SPINLOCK_TIMEOUT);
	movh.a	a4,#@his(Smu_CmdLockAddress)
	lea	a4,[a4]@los(Smu_CmdLockAddress)
.L823:
	mov	d4,#8192
	call	Mcal_GetSpinlock
.L824:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3968  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3969      /* Read the Register status */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3970      RTSArray[0] = SMU_STS.B.RTS0;
	movh.a	a15,#61443
	ld.w	d0,[a15]@los(0xf0036824)
	extr.u	d0,d0,#16,#1
.L825:
	st.w	[a10],d0
.L826:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3971      RTSArray[1] = SMU_STS.B.RTS1;
	ld.w	d0,[a15]@los(0xf0036824)
	extr.u	d15,d0,#18,#1
.L827:
	st.w	[a10]4,d15
.L828:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3972  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3973      /* [cover parentID={A1B0C76F-B92C-4ba2-80A0-BED65F092F16}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3974      Is the recovery timer already stopped?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3975      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3976      if(RTSArray[TimerNum & SMU_ALARM_VALID] == SMU_ALARM_VALID)
	and	d15,d8,#1
.L829:
	addsc.a	a2,a10,d15,#2
	ld.w	d15,[a2]
.L830:
	jne	d15,#1,.L69
.L831:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3977      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3978        /* Write CMD for Stop Recovery Timer */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3979        /* [cover parentID={C369DC35-221E-4466-914B-68FE515F0E2E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3980        Give command to Stop Recovery Timer by writing to Command Register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3981        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3982        SMU_SFR_RUNTIME_WRITE32(&SMU_CMD.U, ((uint32)SMU_STOPREC_COMMAND | \ 
	sh	d8,#4
.L577:
	or	d15,d8,#4
	st.w	[a15]@los(0xf0036820),d15

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3983                               ((uint32)TimerNum << SMU_CMD_ARG_BIT_POS))) ;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3984        /* [cover parentID={6B892884-F37B-411d-9167-026D519520A7}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3985        Loop till Command Status Change is reflected while reading back
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3986        the status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3987        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3988        do
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3989        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3990          /* [cover parentID={3939ABBF-FADC-47e0-8E76-B79B8B5A4C4F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3991          Read from the Command Status Register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3992          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3993          CommandStatus = (uint32)SMU_STS.B.RES;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3994          Timeout++;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3995        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3996        /* [cover parentID={6CEB4F04-18ED-4dc9-ADDA-F0FC5F7586E3}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3997        Loop till timeout is zero AND status of command is failed
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3998        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  3999        while((Timeout < SMU_CMDSTATUS_TIMEOUT) &&
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4000              (CommandStatus != SMU_COMMAND_SUCCESS));
.L70:
	ld.w	d15,[a15]@los(0xf0036824)
	extr.u	d10,d15,#8,#1
.L832:
	add	d9,#1
.L833:
	jge.u	d9,#2,.L71
.L834:
	jne	d10,#0,.L70
.L71:
.L69:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4001      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4002  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4003      /*Release spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4004      /* [cover parentID={665E7EA4-02BE-409a-9C28-D8D36688AF52}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4005      Release Spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4006      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4007      Mcal_ReleaseSpinlock(&Smu_CmdLockAddress);
	movh.a	a4,#@his(Smu_CmdLockAddress)
	lea	a4,[a4]@los(Smu_CmdLockAddress)
	call	Mcal_ReleaseSpinlock
.L835:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4008      /* [cover parentID={A7AB34EC-5C84-4c45-A15C-1EBA1D8C5C98}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4009      Exit SchM
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4010      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4011      SchM_Exit_Smu_CmdAccess();
	call	SchM_Exit_Smu_CmdAccess
.L836:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4012  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4013      /* [cover parentID={56CC505D-96AA-4cbc-865B-29EBB2632EFB}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4014      Is command to stop Recovery timer accepted?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4015      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4016      if(CommandStatus != SMU_COMMAND_SUCCESS)
	ne	d2,d10,#0
.L580:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4017      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4018        /* [cover parentID={7E0CBCE8-B2C8-46c6-A523-F15839F6CFF2}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4019        Set Result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4020        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4021        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4022        /* [cover parentID={3E308B57-1CFB-449a-AAEE-41C9FDCF4D44}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4023        Production Error notification for stop recovery timer command failure or
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4024        success is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4025        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4026        /* [cover parentID={3D1FDAEF-C113-4ebd-9D5F-34D4D373547A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4027        Is Production Error notification for stop recovery timer command failure or
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4028        success enabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4029        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4030        #if (SMU_RT_STOP_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4031        /* Raise failure Production Error, when activate FSP fails*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4032        /* [cover parentID={224E8842-8CFF-4ced-8745-0122FD78A720}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4033        Report failure as Production Error event status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4034        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4035        Smu_lReportDemError(SMU_E_RT_STOP_FAILURE, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4036                              DEM_EVENT_STATUS_FAILED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4037        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4038      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4039      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4040      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4041        /* [cover parentID={C38567F4-AD33-4762-A2C6-A1D697541795}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4042        Set Result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4043        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4044        RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4045        /* [cover parentID={D74196F1-570B-43da-BB09-D98ADB83B824}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4046        Production Error notification for stop recovery timer command failure or
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4047        success is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4048        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4049        /* [cover parentID={C4488086-77F0-43d5-9CC1-BDD69B502C84}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4050        Is Production Error notification for stop recovery timer command failure or
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4051        success enabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4052        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4053        #if (SMU_RT_STOP_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4054        /* Raise failure Production Error, when activate FSP fails*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4055        /* [cover parentID={A1982512-8307-4d4d-BDE2-987B5FBE2055}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4056        Report success as Production Error event status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4057        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4058        Smu_lReportDemError(SMU_E_RT_STOP_FAILURE, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4059                              DEM_EVENT_STATUS_PASSED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4060        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4061      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4062    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4063    /* [cover parentID={CB00C76A-3A20-44a2-A2CE-C9B84A20EE22}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4064    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4065    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4066    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4067  }
	ret
.L391:
	
__Smu_RTStop_function_end:
	.size	Smu_RTStop,__Smu_RTStop_function_end-Smu_RTStop
.L236:
	; End of function
	
	.sdecl	'.text.Smu_GetRTMissedEvent.Code.Cpu0',code,cluster('Smu_GetRTMissedEvent')
	.sect	'.text.Smu_GetRTMissedEvent.Code.Cpu0'
	.align	2
	
	.global	Smu_GetRTMissedEvent

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4068  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4069  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4070  ** Traceability      :[cover parentID={F7F8E849-20E0-413d-B603-B55F711DF221}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4071  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4072  ** Syntax           : Std_ReturnType Smu_GetRTMissedEvent                     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4073  **                    (                                                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4074  **                      const uint8 TimerNum,                                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4075  **                      boolean* const EventMissed                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4076  **                    )                                                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4077  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4078  ** Description      : The purpose of the API is to know if any alarms         **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4079  **                    requiring the requested recovery timer was SET while    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4080  **                    the recovery timer was running.                         **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4081  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4082  ** Service ID       : 0xB7                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4083  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4084  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4085  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4086  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4087  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4088  ** Parameters(in)   : TimerNum : Identifies the Recovery Timer unit to be     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4089  **                    stopped                                                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4090  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4091  ** Parameters (out) : EventMissed                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4092  **                    TRUE: Event has been missed                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4093  **                    FALSE: Event has NOT been missed                        **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4094  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4095  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4096  **                    E_NOT_OK - Operation failed eg. Due to invalid          **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4097  **                                 parameters                                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4098  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4099  Std_ReturnType Smu_GetRTMissedEvent
; Function Smu_GetRTMissedEvent
.L141:
Smu_GetRTMissedEvent:	.type	func
	sub.a	a10,#8
.L581:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4100  (
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4101    const uint8 TimerNum,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4102    boolean* const EventMissed
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4103  )
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4104  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4105    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4106    uint32 kTimMissEventPos[2] = {(uint32)SMU_RT0_MISSED_EVENT,
	movh.a	a15,#@his(.1.ini)
	lea	a15,[a15]@los(.1.ini)
	ld.w	d1,[a15]4
	ld.w	d0,[a15]
.L841:
	st.w	[a10]4,d1
	st.w	[a10],d0
.L842:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4107                                  (uint32)SMU_RT1_MISSED_EVENT};
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4108    uint32 TimerMissEvent;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4109  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4110    /*Check if DET or Safety is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4111    /* [cover parentID={57DC994B-9EC6-4e73-A4B3-45CB90931884}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4112    DET OR Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4113    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4114    #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4115    /* [cover parentID={751CDA57-9BE3-4d8d-B8D1-5D8EB15DD4D5}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4116    Check if the input parameters are not with in the valid range
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4117    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4118    if(TimerNum >= (uint8)SMU_MAX_RECOV_TIM)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4119    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4120      /* [cover parentID={E7BB49B0-3668-41d8-8776-2A36BF6AA071}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4121      Report error SMU_E_INVALID_TIMER
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4122      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4123      Smu_lReportError(SMU_SID_GET_RT_MISSEDEVENT, SMU_E_INVALID_TIMER);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4124    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4125    /* [cover parentID={DC08F38B-535A-40a5-BC78-4D5449884EA8}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4126    Check if the pointer is NULL
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4127    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4128    else if(EventMissed == NULL_PTR)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4129    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4130      /* [cover parentID={7942D4CF-F598-4a24-9112-75885EAEAA01}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4131      Report error SMU_E_PARAM_POINTER
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4132      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4133      Smu_lReportError(SMU_SID_GET_RT_MISSEDEVENT, SMU_E_PARAM_POINTER);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4134    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4135    /* [cover parentID={A22577DE-4FDF-4bc8-AC93-4F973626065F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4136    Check if the driver is initialized and not failed?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4137    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4138    else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4139    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4140      /* [cover parentID={5E55A91A-C723-4ebc-A36F-238546D9928F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4141      Return the value of Smu_lInitFailedCheck
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4142      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4143      RetVal = Smu_lInitFailedCheck(SMU_SID_GET_RT_MISSEDEVENT);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4144    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4145  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4146    /*Check if all checks have passed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4147    /* [cover parentID={71BD5535-5449-4447-AD07-9DECE3C1D6F1}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4148    Have all checks passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4149    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4150    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4151    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4152    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4153      /*Read the timer event from status register */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4154      /* [cover parentID={17725203-995C-4fde-9C78-DD496E52E0E7}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4155      Read the timer event from status register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4156      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4157      /* MISRA2012_RULE_18_1_JUSTIFICATION:Value of Timer is within range */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4158      TimerMissEvent = (uint32)(SMU_STS.U & kTimMissEventPos[TimerNum]);
	movh.a	a15,#61443
	ld.w	d15,[a15]@los(0xf0036824)
.L843:
	addsc.a	a15,a10,d4,#2
	ld.w	d0,[a15]
.L582:
	and	d15,d0
.L844:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4159      /* [cover parentID={EC9FADAA-884F-4fc3-A8C5-ADE75DB847D0}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4160      Is event missed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4161      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4162      if(TimerMissEvent > 0U)
	ne	d15,d15,#0
.L583:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4163      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4164        /* [cover parentID={83CF7012-FD74-44bc-909D-6D45287D1BB5}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4165        Set out parameter as TRUE
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4166        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4167        *EventMissed = (boolean)TRUE;
	st.b	[a4],d15
.L845:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4168      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4169      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4170      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4171        /* [cover parentID={BDD7C434-78B3-4ed5-B23C-D54BA73E5C95}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4172        Set out parameter as FALSE
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4173        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4174        *EventMissed = (boolean)FALSE;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4175      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4176      RetVal = E_OK;
	mov	d2,#0
.L584:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4177    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4178    /* [cover parentID={AD3C5099-256E-43b2-B6BA-4F088CC221FF}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4179    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4180    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4181    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4182  }
	ret
.L399:
	
__Smu_GetRTMissedEvent_function_end:
	.size	Smu_GetRTMissedEvent,__Smu_GetRTMissedEvent_function_end-Smu_GetRTMissedEvent
.L241:
	; End of function
	
	.sdecl	'.text.Smu_LockConfigRegs.Code.Cpu0',code,cluster('Smu_LockConfigRegs')
	.sect	'.text.Smu_LockConfigRegs.Code.Cpu0'
	.align	2
	
	.global	Smu_LockConfigRegs

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4183  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4184  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4185  ** Traceability     : [cover parentID={288D8F0D-7CD5-44c2-9DD7-4B5F8A69DE7D}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4186  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4187  ** Syntax           : Std_ReturnType Smu_LockConfigRegs(void)                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4188  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4189  ** Description      : The purpose of the API is to lock the SMU configuration **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4190  **                    registers to prevent any modification to configuration  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4191  **                    register content.                                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4192  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4193  ** Service ID       : 0xB1                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4194  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4195  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4196  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4197  ** Reentrancy       : Non Reentrant                                           **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4198  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4199  ** Parameters(in)   : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4200  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4201  ** Parameters (out) : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4202  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4203  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4204  **                    E_NOT_OK - Operation failed eg. Config registers already**
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4205  **                                 locked                                     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4206  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4207  Std_ReturnType Smu_LockConfigRegs(void)
; Function Smu_LockConfigRegs
.L143:
Smu_LockConfigRegs:	.type	func

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4208  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4209    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4210    uint32 RtcValueOld;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4211    uint32 RtcValueNew;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4212    uint32 AgcValueOld;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4213    uint32 AgcValueNew;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4214  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4215    /* [cover parentID={56341190-CE4D-4feb-A019-C7235275287B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4216    Is DET or Safety or Init Check enabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4217    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4218    #if ((SMU_DEV_ERROR_DETECT == STD_ON) || \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4219    (SMU_SAFETY_ENABLE == STD_ON) ||(SMU_INIT_CHECK_API == STD_ON))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4220    /* Set Smu_LockState global variable status to SMU_LOCKED*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4221    /* [cover parentID={44BC3D81-B43D-4e43-A141-F3918AA20F6B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4222    Set SMU Locked state as SMU Locked
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4223    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4224    Smu_LockState = SMU_LOCKED;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4225    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4226  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4227    /*Check if DET or Safety is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4228    /* [cover parentID={2FC1CAF1-C2FB-4dc5-B9A8-24E3CAD5F4BF}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4229    DET OR Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4230    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4231    #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4232    /* [cover parentID={20A3537E-0793-4e96-9C53-C1BF176ED462}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4233    Check if driver is initialized and is not in failed state
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4234    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4235    RetVal = Smu_lInitFailedCheck(SMU_SID_LOCK_CFG_REGISTER);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4236    /* [cover parentID={8126A0C8-D31D-4b2c-B4B2-EC5BA6258D68}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4237    Has the initialization check passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4238    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4239    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4240  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4241    /* Check if SMU cfg registers is already locked */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4242    /* [cover parentID={E2D302FC-7B9C-4c80-97C5-BC3C05826C75}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4243    Check if SMU cfg registers is already locked
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4244    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4245    if(SMU_KEYS.B.PERLCK == SMU_CFG_PERLCK_VALUE)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4246      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4247        /*Report error SMU_E_LOCKED*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4248        /* [cover parentID={E861B2FF-3E09-4043-8755-D2CE6AB0CBE4}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4249        Report error SMU_E_LOCKED
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4250        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4251        Smu_lReportError(SMU_SID_LOCK_CFG_REGISTER, SMU_E_LOCKED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4252        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4253      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4254    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4255    /*Check if all checks have passed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4256    /* [cover parentID={C70F4A31-3C61-4347-A543-9BCEDF98AA6F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4257    Have all checks passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4258    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4259    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4260    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4261  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4262    /* Enable permanent lock and enable cfg(temp) lock */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4263    /* [cover parentID={AA34154C-CA35-4927-BDBD-BDBFF52D7769}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4264    Enable permanent lock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4265    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4266    SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG(&MODULE_SMU.KEYS,  \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036834)
	mov.u	d4,#65280
	call	Mcal_WriteSafetyEndInitProtReg
.L706:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4267        (uint32)SMU_CFG_PERLCK_ON_CFGLCK_ON);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4268  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4269      /* Try to disable permanent lock and disable cfg(temp) lock.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4270      Since permanent lock is already done, this instruction shall
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4271      not have any effect on SMU_KEYS register */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4272      /* [cover parentID={C976F954-DE19-4912-BE06-AEE4FAE45C3B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4273      Disable the permanent lock by writing into lock register. This should
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4274      have no effect
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4275      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4276      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG(&MODULE_SMU.KEYS,  \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036834)
	mov	d4,#188
	call	Mcal_WriteSafetyEndInitProtReg
.L707:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4277          (uint32)SMU_CFG_PERLCK_OFF_CFGLCK_OFF);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4278      /*Check if permanent lock is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4279      /* [cover parentID={67E9BDCE-4063-4e27-AD43-FF903A5D42DF}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4280      Is permanent lock enabled ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4281      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4282      if ((uint32)SMU_CFG_PERLCK_ON_CFGLCK_ON == SMU_KEYS.U)
	movh.a	a4,#61443
	ld.w	d15,[a4]@los(0xf0036834)
.L708:
	mov.u	d0,#65280
.L709:
	jne	d15,d0,.L74
.L710:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4283      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4284        /* To verify lock mechanism, try to ovewrite couple of SMU
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4285        configuration registers that are controlled by SMU_KEYS
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4286        register and ensure register contents remains unchanged.*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4287  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4288        /*Store old value of RTC register*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4289        /* [cover parentID={FF969715-97D0-4f94-A542-EC82AD4202CF}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4290        Store old value of RTC register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4291        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4292        RtcValueOld = SMU_RTC.U;
	ld.w	d8,[a4]@los(0xf0036830)
.L585:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4293  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4294        /*Store old value of AGC register*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4295        AgcValueOld = SMU_AGC.U;
	ld.w	d9,[a4]@los(0xf003682c)
.L586:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4296  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4297        /*Write new value to RTC register*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4298        SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
	lea	a4,[a4]@los(0xf0036830)
	xor	d4,d8,#1
	call	Mcal_WriteSafetyEndInitProtReg
.L711:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4299            &MODULE_SMU.RTC, (uint32)((uint32)RtcValueOld ^ \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4300                                      (uint32)IFX_SMU_RTC_RT0E_MSK));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4301  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4302        /*Write new value to AGC register*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4303        SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf003682c)
	xor	d4,d9,#7
	call	Mcal_WriteSafetyEndInitProtReg
.L712:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4304            &MODULE_SMU.AGC, (uint32)((uint32)AgcValueOld ^ \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4305                                      (uint32)IFX_SMU_AGC_IGCS0_MSK));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4306  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4307        /*Compare the old and new values*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4308        RtcValueNew = SMU_RTC.U;
	movh.a	a15,#61443
	ld.w	d15,[a15]@los(0xf0036830)
.L587:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4309  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4310        AgcValueNew = SMU_AGC.U;
	ld.w	d0,[a15]@los(0xf003682c)
.L588:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4311  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4312        /*The values are not written into*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4313        /* [cover parentID={54A1C9B2-6A07-48cd-BD60-49BFEFAA55D7}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4314        Are the old and new values RTC and AGC register respectively same ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4315        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4316        if ((RtcValueOld == RtcValueNew) && (AgcValueOld == AgcValueNew))
	jne	d15,d8,.L75
.L713:
	jne	d9,d0,.L76
.L714:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4317        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4318          /* [cover parentID={E1E88324-001C-4b41-B515-C2B518BB0D3A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4319          Set Result As E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4320          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4321          RetVal = E_OK;
	mov	d2,#0
.L589:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4322  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4323        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4324        else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4325        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4326          /* [cover parentID={E2C5E442-B9E7-4dae-BBF2-5D2B422DE52B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4327          Is DET or Safety or Init Check enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4328          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4329          #if ((SMU_DEV_ERROR_DETECT == STD_ON) || \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4330          (SMU_SAFETY_ENABLE == STD_ON) ||(SMU_INIT_CHECK_API == STD_ON))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4331          /* Set Smu_LockState global variable status SMU_LOCKED*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4332          /* [cover parentID={3ED60AB9-C62E-4310-B5A4-57EEE41C2936}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4333          Reset SMU Locked state as SMU Unlocked
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4334          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4335          Smu_LockState = SMU_NOT_LOCKED;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4336          #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4337  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4338          RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4339          /* [cover parentID={91877E26-C853-46f4-81B8-8F724C157B8C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4340          Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4341          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4342          #if(SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4343          /* [cover parentID={BB576F03-F340-4efa-AC3D-22F870762BA7}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4344          Report safety error SMU_E_SF_CFG_LOCKED_FAILURE
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4345          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4346          Mcal_ReportSafetyError(SMU_MODULE_ID, SMU_MODULE_INSTANCE, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4347                       SMU_SID_LOCK_CFG_REGISTER, SMU_E_SF_CFG_LOCKED_FAILURE);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4348          #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4349        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4350      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4351      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4352      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4353        /* [cover parentID={2D75511A-3535-4e53-90D8-2912A222A20D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4354        Is DET or Safety or Init Check is enabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4355        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4356        #if ((SMU_DEV_ERROR_DETECT == STD_ON) || \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4357        (SMU_SAFETY_ENABLE == STD_ON) ||(SMU_INIT_CHECK_API == STD_ON))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4358        /* Set Smu_LockState global variable status SMU_LOCKED*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4359        /* [cover parentID={F0F44AAB-28CE-4266-8A14-BC83B8B22031}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4360        Smu_LockState is set to NOT LOCKED
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4361        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4362        Smu_LockState = SMU_NOT_LOCKED;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4363        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4364        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4365        /* [cover parentID={8D2B17DE-D912-466c-903C-64611C331C33}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4366        Is Safety check enabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4367        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4368        #if(SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4369        /* [cover parentID={9FF0EEF2-8001-42d1-B2F6-2DB97F144738}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4370        Report safety Error SMU_E_SF_CFG_LOCKED_FAILURE
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4371        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4372        Mcal_ReportSafetyError(SMU_MODULE_ID, SMU_MODULE_INSTANCE, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4373                     SMU_SID_LOCK_CFG_REGISTER, SMU_E_SF_CFG_LOCKED_FAILURE);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4374        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4375      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4376    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4377    /* [cover parentID={5A3A4E6F-274D-42ba-B2B5-6CF9F3C0ED8C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4378    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4379    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4380    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4381  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4382  }
	ret
.L76:
.L75:
.L74:
	mov	d2,#1
.L590:
	ret
.L333:
	
__Smu_LockConfigRegs_function_end:
	.size	Smu_LockConfigRegs,__Smu_LockConfigRegs_function_end-Smu_LockConfigRegs
.L186:
	; End of function
	
	.sdecl	'.text.Smu_GetSmuState.Code.Cpu0',code,cluster('Smu_GetSmuState')
	.sect	'.text.Smu_GetSmuState.Code.Cpu0'
	.align	2
	
	.global	Smu_GetSmuState

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4383  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4384  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4385  ** Traceability      :[cover parentID={8B53101F-9B99-48c0-92B7-6792A141297E}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4386  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4387  ** Syntax           : Smu_CoreStateType Smu_GetSmuState (void)                **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4388  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4389  ** Description      : The purpose of the API is to provide the current state  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4390  **                    of the Smu_core. This is referred to as the safety      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4391  **                    status of the system as all critical faults will cause  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4392  **                    the SMU to go to the FAIL state as configured by the    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4393  **                    user.                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4394  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4395  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4396  ** Service ID       : 0xBA                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4397  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4398  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4399  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4400  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4401  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4402  ** Parameters(in)   : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4403  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4404  ** Parameters (out) : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4405  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4406  ** Return value     : SMU_START - SMU is in the START state                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4407  **                  : SMU_RUN   - SMU is in the RUN state                     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4408  **                  : SMU_FAULT    - SMU is in the FAULT state                **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4409  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4410  Smu_CoreStateType Smu_GetSmuState(void)
; Function Smu_GetSmuState
.L145:
Smu_GetSmuState:	.type	func

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4411  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4412    /* [cover parentID={890FB504-8F63-4ba5-9807-48AF30D53148}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4413    Set SMU state as undefined
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4414    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4415    Smu_CoreStateType RetVal = SMU_UNDEFINED_STATE;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4416    /* [cover parentID={D329C532-79EE-49e1-A1BE-1C79D22FAB90}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4417    DET OR Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4418    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4419    #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4420  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4421    uint8 lErrorVal = SMU_E_NO_ERR;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4422    /* [cover parentID={E7F4669A-F3C8-4952-A462-63AB82E491BD}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4423    Is driver initialized ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4424    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4425    if(SMU_NOT_INITIALIZED == Smu_InitStatus)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4426    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4427      /*Report error SMU_E_UNINIT*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4428      /* [cover parentID={5AD7B51E-98A4-436e-BE8A-C8993619764D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4429      Report error SMU_E_UNINIT
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4430      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4431      lErrorVal = SMU_E_UNINIT;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4432      Smu_lReportError(SMU_SID_GET_SMU_STATE, SMU_E_UNINIT);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4433    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4434    /*Check if all checks have passed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4435    /* [cover parentID={9B8E2400-70D6-4950-8FDB-708782F1358D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4436    Have all checks passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4437    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4438    if(lErrorVal == SMU_E_NO_ERR)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4439    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4440    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4441      /* Read SMU state read from DBG register */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4442      /* [cover parentID={18BE4FA0-2DDD-4cb2-BADE-AB7FED6FAC3D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4443      Read SMU state read from DBG register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4444      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4445      RetVal = (Smu_CoreStateType)SMU_DBG.B.SSM;
	movh.a	a15,#61443
	ld.bu	d15,[a15]@los(0xf0036838)
	and	d2,d15,#3
.L591:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4446    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4447    /* [cover parentID={DB0E2367-8163-4d19-B590-C803BE7B62ED}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4448    Return result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4449    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4450    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4451  }
	ret
.L407:
	
__Smu_GetSmuState_function_end:
	.size	Smu_GetSmuState,__Smu_GetSmuState_function_end-Smu_GetSmuState
.L246:
	; End of function
	
	.sdecl	'.text.Smu_ActivateRunState.Code.Cpu0',code,cluster('Smu_ActivateRunState')
	.sect	'.text.Smu_ActivateRunState.Code.Cpu0'
	.align	2
	
	.global	Smu_ActivateRunState

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4452  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4453  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4454  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4455  ** Traceability      : [cover parentID={5A7DB499-BDAF-40c7-8E30-DA6DBFFE4B76},**
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4456  **                                     {7D727F3C-08FD-42d8-92DC-792B515ACDC4}]**
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4457  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4458  ** Syntax           : Std_ReturnType Smu_ActivateRunState (const uint32 Cmd)  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4459  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4460  ** Description      : This API allows to switch the SMU peripheral into the   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4461  **                    RUN fault-free state as requested by the caller.        **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4462  **                    The SMU validates the request based                     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4463  **                    on its own integrity checks (i.e. check of the command  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4464  **                    value).                                                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4465  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4466  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4467  ** Service ID       : 0xBB                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4468  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4469  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4470  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4471  ** Reentrancy       : Non Reentrant                                           **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4472  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4473  ** Parameters(in)   : Cmd       : Command to switch the SMU to the RUN state  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4474  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4475  ** Parameters (out) : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4476  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4477  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4478  **                    E_NOT_OK - Operation failed eg. SMU not in START state, **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4479  **                                 invalid command                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4480  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4481  Std_ReturnType Smu_ActivateRunState(const uint32 Cmd)
; Function Smu_ActivateRunState
.L147:
Smu_ActivateRunState:	.type	func
	mov	d8,d4
.L593:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4482  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4483    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4484    Smu_CoreStateType SmuState;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4485    uint32 CommandStatus;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4486    uint32 Timeout = 0U;
	mov	d9,#0
.L594:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4487  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4488    /*Check if DET or Safety is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4489    /* [cover parentID={12F363EB-91A5-41c4-9548-3EC8395A7A18}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4490    DET OR Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4491    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4492    #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4493    /* [cover parentID={F22F5492-E34F-46c7-97AB-28844CAF5DD2}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4494    Check if driver is initialized and is not in failed state
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4495    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4496    RetVal = Smu_lInitFailedCheck(SMU_SID_ACTIVATE_RUN_STATE);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4497    /*Check if all checks have passed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4498    /* [cover parentID={4BD350BE-B270-493a-9391-5C3CD5DD4272}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4499    Have all checks passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4500    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4501    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4502    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4503    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4504      /* Read the SMU state from DBG register */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4505      /* [cover parentID={BD4CD263-4486-4cca-ADBF-A8B1298F888F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4506      Read the SMU state from DBG register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4507      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4508      SmuState = (Smu_CoreStateType)(SMU_DBG.B.SSM);
	movh.a	a15,#61443
	ld.bu	d15,[a15]@los(0xf0036838)
.L595:
	and	d15,#3
.L719:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4509  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4510      /* Check if SMU is in START state */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4511      /* [cover parentID={1396AC28-A9C2-4ab3-8A13-91142BCB70CB}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4512      Is SMU in START state ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4513      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4514      if (SmuState != SMU_START_STATE)
	jne	d15,#0,.L80
.L720:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4515      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4516        /* [cover parentID={94F5FEFB-2C19-4ef4-8D7A-D2D5EFE2B009}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4517        Set Result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4518        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4519        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4520      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4521      /* Check if input Cmd is RUN Command */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4522      /* [cover parentID={3A1D86E6-5308-40b9-9565-C87A4DE72997}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4523      Is input Command RUN Command ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4524      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4525      else if (Cmd != (uint32)SMU_RUN_COMMAND)
	jeq	d8,#0,.L81
.L721:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4526      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4527  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4528        /* [cover parentID={FFAA68CC-DFB9-4a4d-8ECD-A9509C305330}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4529        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4530        /* [cover parentID={49930FD6-8BBF-42bf-8C1C-B1353C3E84EA}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4531        Enter critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4532        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4533        SchM_Enter_Smu_CmdAccess();
	call	SchM_Enter_Smu_CmdAccess
.L592:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4534        /*Acquire spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4535        /* [cover parentID={95D720CA-36D2-4f3b-8075-AF224B8A81F9}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4536        Acquire Spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4537        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4538        Mcal_GetSpinlock(&Smu_CmdLockAddress, SMU_SPINLOCK_TIMEOUT);
	movh.a	a4,#@his(Smu_CmdLockAddress)
	lea	a4,[a4]@los(Smu_CmdLockAddress)
.L722:
	mov	d4,#8192
	call	Mcal_GetSpinlock
.L723:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4539  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4540        /* Set SMU in Fault state */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4541        /* [cover parentID={6B3D0554-0FC3-4cc8-9EC1-C16403919A9F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4542        Activate FSP by Writting SMU_ActivateFSP(0) in CMD register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4543        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4544        SMU_SFR_RUNTIME_WRITE32(&SMU_CMD.U, (uint32)SMU_ACTIVATEFSP_COMMAND);
	mov	d15,#1
.L596:
	movh.a	a15,#61443
	st.w	[a15]@los(0xf0036820),d15
.L724:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4545        /* [cover parentID={EA0BC1A6-9E73-4c3a-BECD-412366CCDDC9}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4546        Is DET or safety or Init Check is enabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4547        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4548        #if ((SMU_DEV_ERROR_DETECT == STD_ON) || \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4549        (SMU_SAFETY_ENABLE == STD_ON) ||(SMU_INIT_CHECK_API == STD_ON))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4550        /* Set SMU Driver as Failed */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4551        /* [cover parentID={8490A03A-293C-4c6d-9E2C-AC0A03792132}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4552        Set SMU Driver as Failed
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4553        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4554        Smu_DriverState = SMU_FAILED;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4555        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4556  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4557        /*Release spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4558        /* [cover parentID={19A82F21-D33B-4d70-BDDA-CD69D9C0B400}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4559        Release spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4560        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4561        Mcal_ReleaseSpinlock(&Smu_CmdLockAddress);
	movh.a	a4,#@his(Smu_CmdLockAddress)
	lea	a4,[a4]@los(Smu_CmdLockAddress)
	call	Mcal_ReleaseSpinlock
.L725:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4562        /* [cover parentID={92AE513C-8392-4692-97A7-FA93EE547163}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4563        Exit critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4564        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4565        SchM_Exit_Smu_CmdAccess();
	call	SchM_Exit_Smu_CmdAccess
.L726:
	j	.L82
.L81:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4566        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4567      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4568      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4569      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4570  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4571        /* [cover parentID={FFAA68CC-DFB9-4a4d-8ECD-A9509C305330}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4572        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4573        /* [cover parentID={97BC47EC-9219-4541-A85F-B7A584A72CA8}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4574        Enter critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4575        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4576        SchM_Enter_Smu_CmdAccess();
	call	SchM_Enter_Smu_CmdAccess
.L597:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4577        /*Acquire spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4578        /* [cover parentID={3DD44A7C-4CBE-4edc-9FD8-FD99A17210EE}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4579        Acquire Spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4580        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4581        Mcal_GetSpinlock(&Smu_CmdLockAddress, SMU_SPINLOCK_TIMEOUT);
	movh.a	a4,#@his(Smu_CmdLockAddress)
	lea	a4,[a4]@los(Smu_CmdLockAddress)
.L727:
	mov	d4,#8192
	call	Mcal_GetSpinlock
.L728:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4582  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4583        /* [cover parentID={D0B50B95-C6A0-454e-A4AF-23F812E09E56}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4584        Write CMD for RUN
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4585        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4586        SMU_SFR_RUNTIME_WRITE32(&SMU_CMD.U, Cmd );
	movh.a	a15,#61443
	st.w	[a15]@los(0xf0036820),d8

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4587        /* Check if RUN command is successfully accepted */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4588        /* [cover parentID={6D252100-645C-404c-90CD-448EDF76C6A0}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4589        Loop till timeout is zero AND status of command is failed
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4590        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4591        do
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4592        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4593          /* [cover parentID={2FAF43DC-EA43-4937-99AA-DB6EC9D3CAF3}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4594          Read from the Command Status Register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4595          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4596          CommandStatus = (uint32)SMU_STS.B.RES;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4597          Timeout++;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4598        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4599  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4600        /* [cover parentID={BF75201C-CECE-4ad7-8E9B-1FBD48A6CE33}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4601        Loop till Command Status Change is reflected while reading back the status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4602        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4603        while((Timeout < SMU_CMDSTATUS_TIMEOUT) &&
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4604              (CommandStatus != SMU_COMMAND_SUCCESS));
.L83:
	ld.w	d15,[a15]@los(0xf0036824)
	extr.u	d15,d15,#8,#1
.L598:
	add	d9,#1
.L729:
	jge.u	d9,#2,.L84
.L730:
	jne	d15,#0,.L83
.L84:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4605  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4606        /*Release spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4607        /* [cover parentID={B635DCD9-F1ED-4f91-8056-3E31467ADE5D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4608        Release spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4609        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4610        Mcal_ReleaseSpinlock(&Smu_CmdLockAddress);
	movh.a	a4,#@his(Smu_CmdLockAddress)
	lea	a4,[a4]@los(Smu_CmdLockAddress)
	call	Mcal_ReleaseSpinlock
.L731:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4611        /* [cover parentID={8BD71C19-BBB8-4cd9-B11D-0ADE66F3566C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4612        Exit critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4613        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4614        SchM_Exit_Smu_CmdAccess();
	call	SchM_Exit_Smu_CmdAccess
.L732:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4615        /* [cover parentID={D585785A-FA36-42a7-AFB4-93E3A46C9C27}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4616        Is RUN command successfully accepted ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4617        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4618        if(CommandStatus != SMU_COMMAND_SUCCESS)
	jeq	d15,#0,.L85
.L82:
.L80:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4619        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4620          /* [cover parentID={EF5E54B1-547D-45f3-8A55-224EFCE6D93E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4621          Set Result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4622          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4623          RetVal = E_NOT_OK;
	mov	d2,#1
.L599:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4624          /* [cover parentID={2C74451B-6685-4e18-954E-6FFC494A5FA0}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4625          Production Error notification for activating run state failure is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4626          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4627          #if (SMU_ACTIVATE_RUN_STATE_FAILURE_DEM_NOTIF == \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4628          SMU_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4629          /* Raise failure Production Error, when activate FSP fails*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4630          /* [cover parentID={E033B4A3-4191-4b6b-9BFA-6F695F595617}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4631          Report failure as Production Error event status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4632          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4633          Smu_lReportDemError(SMU_E_ACTIVATE_RUN_STATE_FAILURE,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4634                                DEM_EVENT_STATUS_FAILED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4635          #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4636        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4637        else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4638        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4639          /* [cover parentID={1C5C76B7-AB11-44a6-B059-B5D0A254F5D7}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4640          Set Result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4641          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4642          RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4643          /* [cover parentID={24A73774-D5D6-443e-8B5C-C9E78F3D77D7}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4644          Is DET or safety or Init Check is enabled?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4645          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4646          #if ((SMU_DEV_ERROR_DETECT == STD_ON) || \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4647          (SMU_SAFETY_ENABLE == STD_ON) ||(SMU_INIT_CHECK_API == STD_ON))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4648          /* Set SMU Driver as Failed */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4649          /* [cover parentID={9AD0DE95-2C40-48fd-9416-5741AD904270}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4650          Set SMU Driver state as not failed
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4651          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4652          Smu_DriverState = SMU_NOT_FAILED;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4653          #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4654          /* [cover parentID={2C8DADED-8A37-47a3-AE08-60AB6AAA2F95}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4655          Production Error notification for activating run state failure or success
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4656          is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4657          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4658          #if (SMU_ACTIVATE_RUN_STATE_FAILURE_DEM_NOTIF == \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4659          SMU_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4660          /* Raise failure Production Error, when activate FSP fails*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4661          /* [cover parentID={C7FA568E-2514-4ae9-A165-AA1359B1FFDB}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4662          Report success as Production Error event status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4663          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4664          Smu_lReportDemError(SMU_E_ACTIVATE_RUN_STATE_FAILURE,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4665                                DEM_EVENT_STATUS_PASSED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4666          #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4667        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4668      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4669    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4670    /* [cover parentID={AFE9A11E-6BEA-4f95-A78B-C43A014D86C9}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4671    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4672    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4673    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4674  }
	ret
.L85:
	mov	d2,#0
.L600:
	ret
.L339:
	
__Smu_ActivateRunState_function_end:
	.size	Smu_ActivateRunState,__Smu_ActivateRunState_function_end-Smu_ActivateRunState
.L191:
	; End of function
	
	.sdecl	'.text.Smu_ActivatePES.Code.Cpu0',code,cluster('Smu_ActivatePES')
	.sect	'.text.Smu_ActivatePES.Code.Cpu0'
	.align	2
	
	.global	Smu_ActivatePES

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4675  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4676  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4677  ** Traceability      : [cover parentID={BCBDE82F-3689-4ef3-BFE4-0691CA2F3262}]**
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4678  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4679  ** Syntax           : Std_ReturnType Smu_ActivatePES (void)                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4680  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4681  ** Description      : Triggers the activation of the Port Emergency Stop(PES).**
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4682  **                   The PES is also directly controlled by the SMU_core when **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4683  **                   entering the FAULT state.                                **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4684  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4685  ** Service ID       : 0xB8                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4686  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4687  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4688  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4689  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4690  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4691  ** Parameters(in)   : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4692  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4693  ** Parameters (out) : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4694  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4695  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4696  **                    E_NOT_OK - Operation failed eg. Due to invalid          **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4697  **                                 parameters                                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4698  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4699  Std_ReturnType Smu_ActivatePES(void)
; Function Smu_ActivatePES
.L149:
Smu_ActivatePES:	.type	func

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4700  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4701    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4702    uint32 Timeout = 0U;
	mov	d8,#0
.L601:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4703    uint32 CommandStatus;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4704  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4705    /*Check if DET or safety is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4706    /* [cover parentID={B87882C9-049A-416e-91CA-A8456DBBE505}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4707    DET OR Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4708    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4709    #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4710    /* [cover parentID={E4834DC5-D11D-4240-943B-1B7796C23B0B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4711    Check if driver is initialized and is not in failed state
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4712    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4713    RetVal = Smu_lInitFailedCheck(SMU_SID_ACTIVATE_PES);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4714  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4715    /*Check if all checks have passed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4716    /* [cover parentID={0938BC91-FA8E-4122-9803-7C1B3B4C71CD}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4717    Have all checks passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4718    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4719    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4720    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4721    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4722      /* [cover parentID={82A24743-622D-4719-8D55-E23DEF701DA0}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4723      Enter critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4724      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4725      /* [cover parentID={FFAA68CC-DFB9-4a4d-8ECD-A9509C305330}][/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4726      SchM_Enter_Smu_CmdAccess();
	call	SchM_Enter_Smu_CmdAccess
.L854:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4727      /*Acquire spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4728      /* [cover parentID={296E6FF3-CAB2-4315-8A2C-020C2A6A32DB}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4729      Acquire Spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4730      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4731      Mcal_GetSpinlock(&Smu_CmdLockAddress, SMU_SPINLOCK_TIMEOUT);
	movh.a	a4,#@his(Smu_CmdLockAddress)
	lea	a4,[a4]@los(Smu_CmdLockAddress)
.L855:
	mov	d4,#8192
	call	Mcal_GetSpinlock
.L856:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4732  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4733      /* Activate PES by Writing SMU_ActivatePES command in CMD register */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4734      /* [cover parentID={E2286174-E2C2-4722-83FB-66776A2575C7}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4735      Give command to activate PES by writing to Command Register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4736      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4737      SMU_SFR_RUNTIME_WRITE32(&SMU_CMD.U, (uint32)SMU_ACTIVATEPES_COMMAND );
	mov	d15,#3
	movh.a	a15,#61443
	st.w	[a15]@los(0xf0036820),d15

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4738      /* Check if Activate PES command is successfully accepted */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4739      /* [cover parentID={9286C2FB-FB77-4176-9558-8E066FEC9C7B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4740      Loop till Command Status Change is reflected while reading back
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4741      the status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4742      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4743      do
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4744      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4745        /* [cover parentID={DE2C7680-47CA-41c0-9246-42B958912866}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4746        Read from the Command Status Register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4747        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4748        CommandStatus = (uint32)SMU_STS.B.RES;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4749        Timeout++;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4750      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4751      /* [cover parentID={BC5083F4-65E5-4562-B8C4-B26C4383B5CA}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4752      Loop till timeout is zero AND status of command is failed
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4753      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4754      while((Timeout < SMU_CMDSTATUS_TIMEOUT) &&
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4755            (CommandStatus != SMU_COMMAND_SUCCESS));
.L88:
	ld.w	d15,[a15]@los(0xf0036824)
	extr.u	d15,d15,#8,#1
.L602:
	add	d8,#1
.L857:
	jge.u	d8,#2,.L89
.L858:
	jne	d15,#0,.L88
.L89:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4756  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4757      /*Release Spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4758      /* [cover parentID={9F9B0CEE-1679-4d1f-94F0-F1AB2F0E432A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4759      Release spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4760      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4761      Mcal_ReleaseSpinlock(&Smu_CmdLockAddress);
	movh.a	a4,#@his(Smu_CmdLockAddress)
	lea	a4,[a4]@los(Smu_CmdLockAddress)
	call	Mcal_ReleaseSpinlock
.L859:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4762      /* [cover parentID={FDCD18DB-9B97-4cdf-9B80-7F24EE30AB7B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4763      Exit critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4764      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4765      SchM_Exit_Smu_CmdAccess();
	call	SchM_Exit_Smu_CmdAccess
.L860:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4766      /* [cover parentID={B6579E49-5172-4380-9865-37E677F6A710}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4767      Is activate PES command accepted?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4768      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4769      if(CommandStatus != SMU_COMMAND_SUCCESS)
	ne	d2,d15,#0
.L603:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4770      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4771        /* [cover parentID={A7F69481-8E37-457c-B38E-2B2051D3B9AC}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4772        Set Result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4773        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4774        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4775  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4776        /* [cover parentID={957D91A2-7CEF-40af-80F2-B94A39B9C157}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4777        Production Error notification for activating PES failure or success is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4778        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4779        #if (SMU_ACTIVATE_PES_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4780        /* Raise failure Production Error, when activate PES fails*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4781        /* [cover parentID={57A96D3C-44BB-46ae-8BD6-201B345AB9BA}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4782        Report failure as Production Error event status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4783        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4784        Smu_lReportDemError(SMU_E_ACTIVATE_PES_FAILURE, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4785                              DEM_EVENT_STATUS_FAILED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4786        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4787      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4788      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4789      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4790        /* [cover parentID={8299784B-2730-4e4a-88FA-C11B09FC4E71}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4791        Set Result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4792        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4793        RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4794  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4795        /* [cover parentID={25A467F0-66D6-46d7-8FAE-0F54CA635FB7}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4796        Production Error notification for activating PES failure or success is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4797        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4798        #if (SMU_ACTIVATE_PES_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4799        /* Raise failure Production Error, when activate PES is passed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4800        /* [cover parentID={C4CC54DE-DDF0-4c23-BF69-4FCC8BF38B92}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4801        Report success as Production Error event status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4802        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4803        Smu_lReportDemError(SMU_E_ACTIVATE_PES_FAILURE, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4804                              DEM_EVENT_STATUS_PASSED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4805        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4806      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4807  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4808    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4809    /* [cover parentID={3A752477-ECCB-4359-A7C6-CCB299079280}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4810    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4811    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4812    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4813  }
	ret
.L409:
	
__Smu_ActivatePES_function_end:
	.size	Smu_ActivatePES,__Smu_ActivatePES_function_end-Smu_ActivatePES
.L251:
	; End of function
	
	.sdecl	'.text.Smu_CoreAliveTest.Code.Cpu0',code,cluster('Smu_CoreAliveTest')
	.sect	'.text.Smu_CoreAliveTest.Code.Cpu0'
	.align	2
	
	.global	Smu_CoreAliveTest

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4814  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4815  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4816  ** Traceability      :[cover parentID={088D792F-9D76-4472-A6C9-741D9C26C61E}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4817  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4818  ** Syntax           : Std_ReturnType Smu_CoreAliveTest (void)                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4819  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4820  ** Description      : This API provides the means to execute the Smu_CoreAlive**
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4821  **                  command which checks the Smu_core_alive signal. the       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4822  **                  Smu_stdby has to remain enabled to execute this command.  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4823  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4824  ** Service ID       : 0xBD                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4825  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4826  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4827  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4828  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4829  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4830  ** Parameters(in)   : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4831  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4832  ** Parameters (out) : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4833  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4834  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4835  **                    E_NOT_OK - Operation failed eg. Due to invalid          **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4836  **                                 parameters                                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4837  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4838  Std_ReturnType Smu_CoreAliveTest(void)
; Function Smu_CoreAliveTest
.L151:
Smu_CoreAliveTest:	.type	func

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4839  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4840    /* [cover parentID={1D25BBAF-50C8-4453-836D-F95C510C7AFA}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4841    Initialize Result to E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4842    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4843    Std_ReturnType RetVal = E_NOT_OK;
	mov	d2,#1
.L604:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4844  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4845    /*Check if Smu_stdby is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4846    /* [cover parentID={B3F6C832-5FE7-4b81-92E4-F087EDB0FD70}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4847    Is Smu_Standby is ON?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4848    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4849    #if(SMU_STANDBY_SWITCH == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4850    uint32 CommandStatus;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4851    uint32 Timeout = 0U;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4852    Smu_CoreStateType SmuState;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4853  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4854    /*Check if DET or Safety check is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4855    /* [cover parentID={832D864E-16DD-4c91-A5D9-55D3B02350B1}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4856    DET OR Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4857    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4858    #if (SMU_DEV_ERROR_DETECT == STD_ON) || \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4859    (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4860  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4861    /*Check if driver is initialized and driver state not failed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4862    /* [cover parentID={47CE4A0A-30AC-4704-B630-4434A4E4C391}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4863    Check if driver is initialized and is not in failed state
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4864    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4865    RetVal = Smu_lInitFailedCheck(SMU_SID_CORE_ALIVE_TEST);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4866  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4867    /*Check if all checks have passed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4868    /* [cover parentID={123F652B-AC22-4126-83F8-61FAD0F72892}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4869    Have all checks passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4870    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4871    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4872    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4873    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4874      /* Read the SMU state from DBG register */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4875      /* [cover parentID={D473B8B1-DB1E-45a7-8223-F3224E4F04B6}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4876      Read the SMU state from DBG register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4877      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4878      SmuState = (Smu_CoreStateType)(SMU_DBG.B.SSM);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4879  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4880      /* Check if SMU is in START state */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4881      /* [cover parentID={E976F1C5-9E79-4a87-BC75-A3EC1B486911}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4882      Is SMU in START state ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4883      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4884      if (SmuState == SMU_START_STATE)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4885      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4886        /* [cover parentID={472F72D5-FD07-4300-9103-B179225D6F77}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4887        Enter critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4888        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4889        /* [cover parentID={FFAA68CC-DFB9-4a4d-8ECD-A9509C305330}][/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4890        SchM_Enter_Smu_CmdAccess();
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4891        /*Acquire spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4892        /* [cover parentID={ECD3CDFE-4226-4210-811D-F9ABBD3DCABC}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4893        Acquire Spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4894        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4895        Mcal_GetSpinlock(&Smu_CmdLockAddress, SMU_SPINLOCK_TIMEOUT);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4896  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4897        /* Activate FSP by Writing SMU_AliveTest(0x5) in CMD register */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4898        /* [cover parentID={01E5C3CB-1684-46e7-B357-67708D410D42}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4899        Give command to test if core is alive by writing to Command Register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4900        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4901        SMU_SFR_RUNTIME_WRITE32(&SMU_CMD.U, (uint32)(SMU_ALIVETEST_COMMAND \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4902                                | (SMU_ALIVE_TEST_START << SMU_CMD_ARG_BIT_POS)));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4903  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4904        /* Check if alive test command is successfully accepted */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4905        /* [cover parentID={DB014A62-0CDF-4a23-8547-B6F7FDF26C2C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4906        Loop till Command Status Change is reflected while reading back
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4907        the status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4908        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4909        do
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4910        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4911          /* [cover parentID={EE58AFFD-ACD9-4a5f-8CDA-9A8D8C46356F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4912          Read from the Command Status Register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4913          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4914          CommandStatus = (uint32)SMU_STS.B.RES;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4915          Timeout++;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4916        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4917        /* [cover parentID={B2C3C789-9269-4178-BD58-ECE4C27281D2}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4918        Loop till timeout is zero AND status of command is failed
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4919        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4920        while((Timeout < SMU_CMDSTATUS_TIMEOUT) &&
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4921              (CommandStatus != SMU_COMMAND_SUCCESS));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4922  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4923        /* Stop alive test by Writing 0xA in CMD register */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4924        /* [cover parentID={75F5DECC-400C-4f8f-BE3D-AA09A305B4CC}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4925        Stop alive test by writing 0xA in command register
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4926        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4927        SMU_SFR_RUNTIME_WRITE32(&SMU_CMD.U, (uint32)(SMU_ALIVETEST_COMMAND \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4928                                | (SMU_ALIVE_TEST_STOP << SMU_CMD_ARG_BIT_POS)));
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4929  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4930        /*Release spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4931        /* [cover parentID={53F08F17-7D90-46e9-A105-A090F77A8585}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4932        Release spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4933        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4934        Mcal_ReleaseSpinlock(&Smu_CmdLockAddress);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4935        /* [cover parentID={718F058D-6FCF-41bd-A6B5-5BE25D7E87A8}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4936        Exit critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4937        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4938        SchM_Exit_Smu_CmdAccess();
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4939        /* [cover parentID={2B6C2B77-580C-48fd-BA88-14D75051AEF9}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4940        Is Alive Test command accepted?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4941        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4942        if(CommandStatus != SMU_COMMAND_SUCCESS)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4943        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4944          /* [cover parentID={E935183A-32B7-4bfb-99D2-6D3B0B426BB0}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4945          Set Result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4946          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4947          RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4948  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4949          /* [cover parentID={937FA92C-058F-47a0-A89A-7609FAB5327B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4950          Production Error notification for core alive failure is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4951          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4952          #if (SMU_CORE_ALIVE_FAILURE_DEM_NOTIF == \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4953          SMU_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4954          /* Raise failure Production Error, when activate PES fails*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4955          /* [cover parentID={B674A008-F671-49d1-B7A6-953EFBC98C19}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4956          Report failure as Production Error event status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4957          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4958          Smu_lReportDemError(SMU_E_CORE_ALIVE_FAILURE, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4959                                DEM_EVENT_STATUS_FAILED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4960          #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4961  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4962        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4963        else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4964        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4965          /* [cover parentID={1FE06FAF-101E-4f68-8BFA-33F00DCAD33E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4966          Set Result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4967          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4968          RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4969          /* [cover parentID={DB7C0CD9-BEA3-41de-AF70-85DB41DFCC77}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4970          Production Error notification for core alive failure or success is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4971          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4972          #if (SMU_CORE_ALIVE_FAILURE_DEM_NOTIF == \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4973          SMU_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4974          /* Raise failure Production Error, when activate PES fails*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4975          /* [cover parentID={9B7BF114-143D-47c9-8EDC-31259D96C81B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4976          Report success as Production Error event status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4977          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4978          Smu_lReportDemError(SMU_E_CORE_ALIVE_FAILURE, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4979                                DEM_EVENT_STATUS_PASSED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4980          #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4981        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4982      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4983      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4984      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4985        /* [cover parentID={3B47B050-D2C4-4884-833B-0B1423AAE2E1}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4986        Set Result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4987        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4988        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4989      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4990    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4991    /*If Smu_stdby is not enabled the command will not execute*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4992    /* [cover parentID={B5FEF9E0-F899-4597-937D-6670FA228235}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4993    Standby Mode OFF
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4994    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4995    #else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4996    /* [cover parentID={627EBBE0-8DED-48f0-AA49-E0CB7EDBF402}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4997    DET OR Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4998    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  4999    #if(SMU_DEV_ERROR_DETECT == STD_ON)||(SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5000    /* [cover parentID={52752ED3-2432-4c09-990E-C44B5A30EF31}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5001    Report error SMU_E_STDBY_DISABLED
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5002    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5003    Smu_lReportError(SMU_SID_CORE_ALIVE_TEST, SMU_E_STDBY_DISABLED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5004    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5005    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5006  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5007    /* [cover parentID={79828D0E-CFDA-453e-AE34-37424E7F5DEE}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5008    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5009    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5010    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5011  }
	ret
.L413:
	
__Smu_CoreAliveTest_function_end:
	.size	Smu_CoreAliveTest,__Smu_CoreAliveTest_function_end-Smu_CoreAliveTest
.L256:
	; End of function
	
	.sdecl	'.text.Smu_GetAlarmExecutionStatus.Code.Cpu0',code,cluster('Smu_GetAlarmExecutionStatus')
	.sect	'.text.Smu_GetAlarmExecutionStatus.Code.Cpu0'
	.align	2
	
	.global	Smu_GetAlarmExecutionStatus

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5012  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5013  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5014  ** Traceability      :[cover parentID={4A9763EF-63A4-4888-88FD-5E75716ED268}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5015  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5016  ** Syntax           : Std_ReturnType Smu_GetAlarmExecutionStatus              **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5017  **                                   (const uint32 AlarmExecStatusReq,        **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5018  **                                    uint32* const AlarmExecStatus)          **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5019  ** Description      : The purpose of the API is to retrieve the requested     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5020  **                    alarm reaction execution status or the alarm event      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5021  **                    missed result.                                          **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5022  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5023  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5024  ** Service ID       : 0xBE                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5025  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5026  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5027  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5028  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5029  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5030  ** Parameters(in)   : AlarmExecStatusReq:  Requested alarm reaction execution **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5031  **                    status bit or alarm event missed bit                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5032  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5033  ** Parameters (out) : AlarmExecStatus: Pointer that stores the alarm execution**
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5034  **                    status or the alarm event missed result                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5035  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5036  ** Return value     : E_OK: Operation successful that is retrieval of         **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5037  **                    requested alarm reaction execution status or the alarm  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5038  **                    event missed result is successful.                      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5039  **                    E_NOT_OK: Operation not successful that is retrieval of **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5040  **                    requested alarm reaction execution status or the alarm  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5041  **                    event missed result is not successful, for example due  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5042  **                    to invalid parameters.                                  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5043  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5044  Std_ReturnType Smu_GetAlarmExecutionStatus
; Function Smu_GetAlarmExecutionStatus
.L153:
Smu_GetAlarmExecutionStatus:	.type	func

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5045  (
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5046    const uint32 AlarmExecStatusReq,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5047    uint32* const AlarmExecStatus
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5048  )
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5049  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5050    /* [cover parentID={EEE98563-976C-4aa8-B599-959624CFAE3F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5051    Initialize Result to E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5052    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5053    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5054    /*Check if DET or Safety check is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5055    /* [cover parentID={389B4610-BF6A-4c60-8E4F-346C15D4F8BE}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5056    DET OR Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5057    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5058    #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5059  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5060    uint32 AlarmRes = 0U;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5061    /* [cover parentID={D5FCCD08-6B63-4cf8-B981-5307767C7A67}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5062    Check if input parameter is a null pointer
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5063    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5064    /* [cover parentID={30EE0789-80CC-47e0-B3DC-EF7680D2DA2E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5065    Is the parameter a NULL ponter?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5066    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5067    if(AlarmExecStatus != NULL_PTR)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5068    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5069      /* [cover parentID={76562B65-712E-4cf4-A41E-2E725710D275}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5070      Check if driver is initialized and is not in failed state
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5071      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5072      RetVal = Smu_lInitFailedCheck(SMU_SID_GET_ALARM_EXEC_STS);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5073      /* [cover parentID={F12282A9-0D23-431a-830E-3B5CA0940466}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5074      Has driver initialization and state check passed?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5075      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5076      if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5077      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5078        /* [cover parentID={CBF556F3-202E-4e45-9CC5-1BF8318180C3}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5079        Is the alarm reaction execution status bit or alarm event missed bit
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5080        request within a valid range?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5081        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5082        if(AlarmExecStatusReq > SMU_ALMEXEC_MSK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5083        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5084          /* [cover parentID={DD0EF293-538B-4fbf-910D-D3188E16C61B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5085          Report error SMU_E_INVALID_EXECUTION_STATUS
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5086          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5087          Smu_lReportError(SMU_SID_GET_ALARM_EXEC_STS, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5088                           SMU_E_INVALID_EXECUTION_STATUS);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5089          /* [cover parentID={DF54D2E7-BAEF-4320-B063-23CC8795BC22}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5090          Return Result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5091          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5092          RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5093        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5094        else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5095        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5096          /* [cover parentID={2D7CFF7A-B626-45f1-A39C-9674C92F90D3}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5097          Check if requested alarm reaction execution status bit or alarm event
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5098          missed bit is reserved
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5099          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5100          AlarmRes = (uint32)SMU_ALARMEXECSTATUS_VALID & \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5101                     ((uint32)SMU_ALARM_VALID << (uint32)AlarmExecStatusReq);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5102          AlarmRes = AlarmRes >> AlarmExecStatusReq;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5103          /* [cover parentID={60A0115C-884F-474e-8C13-28B96B9E3BA4}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5104          Is the requested alarm reaction execution status bit or alarm event
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5105          missed bit reserved?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5106          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5107          if(AlarmRes == SMU_ALARM_INVALID)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5108          {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5109            /* [cover parentID={7A3B4108-0D70-406f-8CE0-B915E6BE223E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5110            Report error SMU_E_INVALID_EXECUTION_STATUS
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5111            [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5112            Smu_lReportError(SMU_SID_GET_ALARM_EXEC_STS, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5113                             SMU_E_INVALID_EXECUTION_STATUS);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5114            /* [cover parentID={F9783E2D-A2E7-40c7-B51E-9F8D50DD541B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5115            Set result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5116            [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5117            RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5118          }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5119        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5120      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5121    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5122    else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5123    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5124      /* [cover parentID={18DF0D15-2E02-45bb-8DB4-DA2DA88AEA47}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5125      Report error SMU_E_PARAM_POINTER
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5126      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5127      Smu_lReportError(SMU_SID_GET_ALARM_EXEC_STS, SMU_E_PARAM_POINTER);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5128    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5129  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5130    /*Check if all checks have passed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5131    /* [cover parentID={164C7DBC-7A86-465c-9687-DEA2888065D8}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5132    Have all checks passed?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5133    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5134    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5135    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5136    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5137      /* [cover parentID={9F870C5A-5499-4c4b-B3FD-5AB72A93871E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5138      Extract alarm reaction execution status or alarm event missed bit
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5139      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5140      *AlarmExecStatus = ((SMU_AEX.U & ((uint32)SMU_ALARM_VALID <<
	movh.a	a15,#61443
	ld.w	d15,[a15]@los(0xf0036870)
.L869:
	mov	d0,#1
.L870:
	sh	d0,d0,d4
.L871:
	and	d15,d0
.L872:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5141                    (uint32)AlarmExecStatusReq)) >> (uint32)AlarmExecStatusReq);
	rsub	d4,#0
	sh	d15,d15,d4
.L873:
	st.w	[a4],d15
.L874:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5142      /* [cover parentID={7D56BEBE-9CF9-44a7-ADFC-306BF4269E43}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5143      Set Result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5144      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5145      RetVal = E_OK;
	mov	d2,#0
.L605:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5146    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5147    /* [cover parentID={5FF7B60E-5FB5-4c20-9D44-B965E931E154}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5148    Return result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5149    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5150    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5151  }
	ret
.L415:
	
__Smu_GetAlarmExecutionStatus_function_end:
	.size	Smu_GetAlarmExecutionStatus,__Smu_GetAlarmExecutionStatus_function_end-Smu_GetAlarmExecutionStatus
.L261:
	; End of function
	
	.sdecl	'.text.Smu_ClearAlarmExecutionStatus.Code.Cpu0',code,cluster('Smu_ClearAlarmExecutionStatus')
	.sect	'.text.Smu_ClearAlarmExecutionStatus.Code.Cpu0'
	.align	2
	
	.global	Smu_ClearAlarmExecutionStatus

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5152  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5153  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5154  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5155  ** Traceability     : [cover parentID={625BDBDC-549F-4429-9289-E48015B2B9B2}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5156  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5157  ** Syntax           : Std_ReturnType Smu_ClearAlarmExecutionStatus            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5158  **                                   (const uint32 AlarmExecStatusReq)        **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5159  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5160  ** Description      : The purpose of the API is to clear the requested alarm  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5161  **                    reaction execution status bit or the alarm event missed **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5162  **                    bit.                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5163  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5164  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5165  ** Service ID       : 0xBF                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5166  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5167  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5168  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5169  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5170  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5171  ** Parameters(in)   : AlarmExecStatusReq: Alarm reaction execution status bit **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5172  **                    or alarm event missed bit to be cleared                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5173  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5174  ** Parameters (out) : None                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5175  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5176  ** Return value     : E_OK: Operation successful that is requested alarm      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5177  **                    reaction execution status bit or the alarm event missed **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5178  **                    bit is cleared successfully                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5179  **                    E_NOT_OK: Operation not successful that is requested    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5180  **                    alarm reaction execution status bit or the alarm event  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5181  **                    missed bit is not cleared successfully, for example due **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5182  **                    to invalid parameters                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5183  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5184  Std_ReturnType Smu_ClearAlarmExecutionStatus
; Function Smu_ClearAlarmExecutionStatus
.L155:
Smu_ClearAlarmExecutionStatus:	.type	func

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5185  (
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5186    const uint32 AlarmExecStatusReq
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5187  )
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5188  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5189    /* [cover parentID={C20C2C47-DD08-43f1-A48D-F32CBC4F235D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5190    Initialize Result to E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5191    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5192    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5193    uint32 StatusClearRes;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5194  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5195    /*Check if DET or Safety check is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5196    /* [cover parentID={35BA1C86-2DBD-4e0f-A8A8-88800A489E83}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5197    DET OR Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5198    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5199    #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5200    /* [cover parentID={8145195A-F5F9-4214-A1AA-C6562D57AC7C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5201    Check if driver is initialized and is not in failed state
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5202    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5203    uint32 AlarmRes = 0U;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5204    RetVal = Smu_lInitFailedCheck(SMU_SID_CLEAR_ALARM_EXEC_STS);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5205    /* [cover parentID={A4A41D0D-1F39-47ac-960E-3DE8171E2C46}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5206    Has driver initialization and state check passed?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5207    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5208    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5209    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5210      /* [cover parentID={4D89B29A-146A-42c2-9D92-9E165E6BABD5}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5211      Is the alarm reaction execution status bit or alarm event missed bit
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5212      request within a valid range?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5213      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5214      if(AlarmExecStatusReq > SMU_ALMEXEC_MSK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5215      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5216        /* [cover parentID={DFDA3884-9FE9-4472-8E20-730B75FDD01A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5217        Report error SMU_E_INVALID_EXECUTION_STATUS
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5218        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5219        Smu_lReportError(SMU_SID_CLEAR_ALARM_EXEC_STS, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5220                         SMU_E_INVALID_EXECUTION_STATUS);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5221        /* [cover parentID={B00434B1-107C-4a59-94A0-01CA528CF85D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5222        Set Result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5223        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5224        RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5225      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5226      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5227      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5228        /* [cover parentID={FBD98AE7-5B57-48d4-B9D9-817A1BADDB9B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5229        Check if requested alarm reaction execution status bit or alarm event
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5230        missed bit is reserved
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5231        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5232        AlarmRes = (uint32)SMU_ALARMEXECSTATUS_VALID & \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5233                   ((uint32)SMU_ALARM_VALID << (uint32)AlarmExecStatusReq);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5234        AlarmRes = AlarmRes >> AlarmExecStatusReq;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5235        /* [cover parentID={DC296C8F-D593-4ac6-88D9-03655BADC4E6}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5236        Is the requested alarm reaction execution status bit or alarm event
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5237        missed bit reserved?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5238        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5239        if(AlarmRes == SMU_ALARM_INVALID)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5240        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5241          /* [cover parentID={1C8F23EA-660A-4b20-8A67-F843DF208F20}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5242          Report error SMU_E_INVALID_EXECUTION_STATUS
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5243          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5244          Smu_lReportError(SMU_SID_CLEAR_ALARM_EXEC_STS, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5245                           SMU_E_INVALID_EXECUTION_STATUS);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5246          /* [cover parentID={D2E58440-6E94-47af-AFBF-11E894225065}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5247          Set result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5248          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5249          RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5250        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5251      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5252    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5253  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5254    /*Check if all checks have passed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5255    /* [cover parentID={08011079-FB94-4a1b-B166-1C0DD5E03756}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5256    Have all checks passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5257    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5258    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5259    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5260    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5261      /* [cover parentID={C7DE04ED-9E3E-4505-BDF8-522B457BEBC3}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5262      Read the result of the requested alarm reaction execution status bit or alarm
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5263      event missed bit
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5264      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5265      StatusClearRes = ((uint32)SMU_ALARM_VALID << AlarmExecStatusReq);
	mov	d15,#1
.L879:
	sh	d15,d15,d4
.L880:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5266  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5267      /* [cover parentID={8133EF9E-D185-465f-8B3B-DECED5EBB598}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5268      Update the result to also include corresponding missed event bit, in case,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5269      the requested bit corresponds to one of the STS bits
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5270      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5271      /*If AEM bit is requested, then below code will result in ORing
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5272      StatusClearRes with 0.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5273      This is done to avoid if condition.*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5274      StatusClearRes = StatusClearRes | \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5275                       (((uint32)SMU_ALARM_VALID << SMU_HALF_WORD_OFFSET) \ 
	movh	d0,#1
.L881:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5276                        << AlarmExecStatusReq);
	sh	d0,d0,d4
.L607:
	or	d15,d0
.L882:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5277  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5278      /* [cover parentID={34561FDD-78DB-4165-957E-75A0FE7B76A2}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5279      Enter critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5280      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5281      /* [cover parentID={0D20AD6F-7260-4c0d-90C9-531A056367E4}][/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5282      SchM_Enter_Smu_DriverAccess();
	call	SchM_Enter_Smu_DriverAccess
.L606:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5283      /*Acquire spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5284      /* [cover parentID={D499399E-8050-432d-9BBC-468717D1231A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5285      Acquire Spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5286      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5287      Mcal_GetSpinlock(&Smu_LockAddress, SMU_SPINLOCK_TIMEOUT);
	movh.a	a4,#@his(Smu_LockAddress)
	lea	a4,[a4]@los(Smu_LockAddress)
.L883:
	mov	d4,#8192
	call	Mcal_GetSpinlock
.L884:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5288  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5289      /*Write into the alarm execution staus clear register*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5290      /* [cover parentID={DD7776D4-44B9-43c2-8297-0CAE75F1D22F}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5291      Clear alarm event missed bit or alarm reaction execution status bit and
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5292      corresponding alarm event missed bit
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5293      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5294      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036874)
	mov	d4,d15
.L608:
	call	Mcal_WriteSafetyEndInitProtReg
.L609:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5295          &MODULE_SMU.AEXCLR, (uint32)StatusClearRes);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5296  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5297      /*Release the spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5298      /* [cover parentID={E577889A-0851-495f-9CF8-F79FB4C23B6E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5299      Release spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5300      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5301      Mcal_ReleaseSpinlock(&Smu_LockAddress);
	movh.a	a4,#@his(Smu_LockAddress)
	lea	a4,[a4]@los(Smu_LockAddress)
	call	Mcal_ReleaseSpinlock
.L885:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5302      /* [cover parentID={0C035A58-62B0-4f4c-8F3C-0650D20842C5}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5303      Exit critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5304      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5305      SchM_Exit_Smu_DriverAccess();
	call	SchM_Exit_Smu_DriverAccess
.L886:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5306      /* [cover parentID={87ECA555-748E-4179-A049-8AA510415204}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5307      Set Result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5308      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5309      RetVal = E_OK;
	mov	d2,#0
.L610:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5310    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5311    /* [cover parentID={B362009D-EEA3-4ac5-869B-DB946C1BF5ED}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5312    Return result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5313    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5314    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5315  }
	ret
.L421:
	
__Smu_ClearAlarmExecutionStatus_function_end:
	.size	Smu_ClearAlarmExecutionStatus,__Smu_ClearAlarmExecutionStatus_function_end-Smu_ClearAlarmExecutionStatus
.L266:
	; End of function
	
	.sdecl	'.text.Smu_RegisterMonitor.Code.Cpu0',code,cluster('Smu_RegisterMonitor')
	.sect	'.text.Smu_RegisterMonitor.Code.Cpu0'
	.align	2
	
	.global	Smu_RegisterMonitor

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5316  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5317  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5318  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5319  ** Traceability      :[cover parentID={CDC49D92-3240-4011-A48F-65600AECD8EB}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5320  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5321  ** Syntax           : Std_ReturnType Smu_RegisterMonitor                      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5322  **                    (                                                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5323  **                      const uint16 * const RegMonPtr,                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5324  **                      Smu_SffTestResType * const  RegMonResult              **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5325  **                    )                                                       **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5326  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5327  ** Service ID       : 0xB9                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5328  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5329  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5330  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5331  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5332  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5333  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5334  ** Parameters(in)   : RegMonPtr : Pointer to the SFF test request variable    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5335  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5336  ** Parameters (out) : RegMonResult: Status of the SFF test irrespective of    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5337  **                    the RMCTL bit enabled/disabled                          **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5338  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5339  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5340  **                    E_NOT_OK - Operation failed eg. Due to invalid          **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5341  **                      parameters.                                           **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5342  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5343  ** Description      : This API provides the initialization, execution and     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5344  **                    termination of the SafetyFlipFlop Tests to be executed  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5345  **                    for different modules as per the configuration.         **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5346  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5347  Std_ReturnType Smu_RegisterMonitor
; Function Smu_RegisterMonitor
.L157:
Smu_RegisterMonitor:	.type	func
	mov.aa	a15,a5
.L612:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5348  (
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5349    const uint16 * const RegMonPtr, Smu_SffTestResType * const  RegMonResult
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5350  )
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5351  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5352    uint8 Index = 0U;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5353    Std_ReturnType RetVal = (Std_ReturnType)E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5354    uint32 RMCTLVal = 0U;
	mov	d8,#0
.L613:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5355    uint32 ResStatus;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5356    uint32 Timeout = 0U;
	mov	d9,d8
.L615:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5357    uint32 RMSTSVal = 0U;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5358    /* [cover parentID={BF61C256-7A97-4d61-A528-924776FE4571}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5359    DET OR Safety Checks ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5360    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5361    #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5362    /*Check if driver is initialized and driver state not failed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5363    /* [cover parentID={E8898744-63BA-431e-9B7C-5237DEA98867}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5364    Check if driver is initialized and is not in failed state
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5365    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5366    RetVal = Smu_lInitFailedCheck(SMU_SID_REGISTER_MONITORING);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5367    /* [cover parentID={86560ABE-2634-4887-9CEF-85143DB55157}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5368    Is the Result E_OK?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5369    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5370    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5371    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5372      /* [cover parentID={E47C0CED-2FF4-46d7-9FDF-2CAE039A3562}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5373      Is SMU locked ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5374      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5375      if(SMU_LOCKED == Smu_LockState)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5376      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5377        /*Report error SMU_E_LOCKED*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5378        /* [cover parentID={F59AB20B-86EC-4361-B648-5DD47372CEAD}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5379        Report error SMU_E_LOCKED
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5380        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5381        Smu_lReportError(SMU_SID_REGISTER_MONITORING, SMU_E_LOCKED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5382        RetVal = (Std_ReturnType)E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5383      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5384      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5385      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5386        /* [cover parentID={742A4FBB-EF2E-4e59-B42E-12C81551E600}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5387        Is the SFF test request pointer or the result pointer NULL?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5388        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5389        if((RegMonPtr == NULL_PTR) || (RegMonResult == NULL_PTR))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5390        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5391          /* [cover parentID={F0DD6FD5-229F-42c4-AEBE-03F20A5D1559}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5392          Report error SMU_E_PARAM_POINTER
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5393          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5394          /*Report error SMU_E_PARAM_POINTER*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5395          Smu_lReportError(SMU_SID_REGISTER_MONITORING,
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5396                           SMU_E_PARAM_POINTER);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5397          RetVal = (Std_ReturnType)E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5398        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5399      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5400    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5401  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5402    /*Check if all checks have passed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5403    /* [cover parentID={1C5231A1-EA61-41aa-A7E8-CB70516C2F75}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5404    Have all checks passed ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5405    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5406    if(RetVal == (Std_ReturnType)E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5407    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5408    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5409      /*Set the RMCTL bits according to the tests chosen*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5410      /* [cover parentID={B81B29F8-DC33-40ec-879E-887E8088E3FF},
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5411                         {BB923ED4-973C-4afe-8270-CBDD00DA8116}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5412        Start SFF tests
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5413      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5414      /* [cover parentID={9AC2E3B2-0C67-4ae1-8497-024E22F58818}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5415      Check if Register Monitor is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5416      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5417      for(Index = 0U; (Index < SMU_TOTAL_RMCTL_BITS); Index++)
	mov	d0,d8
.L616:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5418      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5419        /* [cover parentID={6517FAC4-F17A-42e8-B63A-4C286E6A11CF}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5420        Check if it is valid RMCTL Bit and Register Monitor is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5421        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5422        if(RegMonPtr[Index] == SMU_SFF_TEST_ENABLE)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5423        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5424          /* [cover parentID={C862C55A-1F4F-45a7-B7BF-D7FA2D4CD3FE}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5425          Set the value of Register Monitor Control Bit
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5426          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5427          RMCTLVal = RMCTLVal | ((uint32)SMU_ALARM_VALID << \ 
	mov	d1,#1
.L891:
	j	.L94
.L95:
	addsc.a	a2,a4,d0,#1
	ld.hu	d15,[a2]0
.L892:
	jne	d15,#1,.L96
.L893:
	sh	d2,d1,d0
.L894:
	or	d8,d2
.L96:
	add	d0,#1
.L94:
	jlt.u	d0,#11,.L95
.L895:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5428                                 (uint32)Index);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5429        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5430  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5431      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5432      /* [cover parentID={43DBC0B0-B738-4d6f-9A40-77D4A4A861D8}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5433      Enter critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5434      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5435      /* [cover parentID={0D20AD6F-7260-4c0d-90C9-531A056367E4}][/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5436      SchM_Enter_Smu_DriverAccess();
	call	SchM_Enter_Smu_DriverAccess
.L611:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5437      /*Acquire spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5438      /* [cover parentID={81DD6662-B00C-448e-97D3-8D2B2D96A8F0}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5439      Acquire spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5440      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5441      Mcal_GetSpinlock(&Smu_LockAddress, SMU_SPINLOCK_TIMEOUT);
	movh.a	a4,#@his(Smu_LockAddress)
	lea	a4,[a4]@los(Smu_LockAddress)
.L896:
	mov	d4,#8192
	call	Mcal_GetSpinlock
.L897:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5442  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5443      /*Write Config key to configure the SMU registers. */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5444      /* [cover parentID={AAFF1DEB-ACC8-4af4-9B3C-59A460A4FBB0}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5445      Unlock SMU Registers
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5446      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5447      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	ld.w	d0,[a4]@los(0xf0036834)
	insert	d15,d0,#0,#0,#8
	or	d4,d15,#188
	lea	a4,[a4]@los(0xf0036834)
	call	Mcal_WriteSafetyEndInitProtReg
.L898:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5448          &MODULE_SMU.KEYS, SMU_CFG_KEY_UNLOCK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5449  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5450  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5451      /* [cover parentID={D6D91B36-BC16-4610-B1D9-5B83ECA7D7C8}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5452      Set the RMCTL bits according to the tests chosen
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5453      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5454      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036b00)
	mov	d4,d8
.L617:
	call	Mcal_WriteSafetyEndInitProtReg
.L618:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5455          &MODULE_SMU.RMCTL, RMCTLVal);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5456  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5457      /* After configuration set temporary lock of SMU configuration */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5458      /* [cover parentID={0C311A13-811D-4fb1-A456-CFC0372ACC5E}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5459      Temporarily lock SMU Registers
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5460      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5461      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036834)
	mov	d4,#0
	call	Mcal_WriteSafetyEndInitProtReg
.L899:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5462          &MODULE_SMU.KEYS, SMU_CFG_KEY_TEMPLOCK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5463  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5464      /*Wait until all the active status bits are set or timeout occurs*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5465      /* [cover parentID={542C3CE3-A3C6-4f1f-955C-BC8C2E25DD65}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5466      Wait until all the active status bits are set or timeout occurs
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5467      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5468      do
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5469      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5470        /* [cover parentID={46A891CB-2FCD-4391-8565-C1B56F7D1D27}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5471        Set the value of Register Monitor Control Bit
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5472        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5473        RMSTSVal = SMU_RMSTS.U;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5474        Timeout++;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5475      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5476      /* [cover parentID={3B286671-3E8B-4566-860D-057EB2941C6D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5477      Loop till all the active status bits are set or timeout occurs
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5478      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5479      while ((RMCTLVal != (RMSTSVal & RMCTLVal)) \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5480             && (Timeout < SFF_RM_TIMEOUT));
	mov	d0,#360
.L900:
	movh.a	a2,#61443
.L97:
	ld.w	d15,[a2]@los(0xf0036b08)
.L619:
	add	d9,#1
.L901:
	and	d15,d8
.L620:
	jeq	d15,d8,.L98
.L902:
	jlt.u	d9,d0,.L97
.L98:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5481  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5482      ResStatus = SMU_RMEF.U;
	mov.aa	a4,a2
	ld.w	d8,[a4]@los(0xf0036b04)
.L614:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5483  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5484      /*set the RMSTS status bits to 0*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5485      /* [cover parentID={135A7830-88CD-4c75-BFE8-E986DC608290}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5486      Reset the Register Monitor status bits
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5487      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5488      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
	lea	a4,[a4]@los(0xf0036b08)
	mov	d4,#0
	call	Mcal_WriteSafetyEndInitProtReg
.L903:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5489          &MODULE_SMU.RMSTS, SMU_RMSTS_RESETVAL);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5490      /*set the RMEF status bits to 0*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5491      /* [cover parentID={63ABACFC-1644-40c2-A90E-A2171D497348}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5492      Reset the Register Monitor error flags
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5493      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5494      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036b04)
	mov	d4,#0
	call	Mcal_WriteSafetyEndInitProtReg
.L904:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5495          &MODULE_SMU.RMEF, SMU_RMEF_RESETVAL);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5496  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5497      /* [cover parentID={B1EEA932-1E94-456a-A524-396FD5DA3B9B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5498      Unlock the SMU temporary configuration lock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5499      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5500      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	ld.w	d15,[a4]@los(0xf0036834)
	insert	d15,d15,#0,#0,#8
	or	d4,d15,#188
	lea	a4,[a4]@los(0xf0036834)
	call	Mcal_WriteSafetyEndInitProtReg
.L905:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5501          &MODULE_SMU.KEYS, SMU_CFG_KEY_UNLOCK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5502  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5503      /*set the RMCTL status bits to 0*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5504      /* [cover parentID={9853166E-864B-4445-9E9F-E08CCEE8BC9B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5505      Reset the Register Monitor error flags
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5506      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5507      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036b00)
	mov	d4,#0
	call	Mcal_WriteSafetyEndInitProtReg
.L906:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5508          &MODULE_SMU.RMCTL, SMU_RMCTL_RESETVAL);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5509  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5510      /* After configuration set temporary lock of SMU configuration */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5511      /* [cover parentID={18E8827F-C172-4422-9082-3FFC2C24F4C5}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5512      Lock the SMU temporary configuration lock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5513      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5514      SMU_LIB_RUNTIME_WRITESAFETYENDINITPROTREG( \ 
	movh.a	a4,#61443
	lea	a4,[a4]@los(0xf0036834)
	mov	d4,#0
	call	Mcal_WriteSafetyEndInitProtReg
.L907:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5515          &MODULE_SMU.KEYS, SMU_CFG_KEY_TEMPLOCK);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5516  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5517      /*Release the spinlock*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5518      /* [cover parentID={605A62F7-0193-4276-B430-FB7FF08B0F47}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5519      Release Spinlock
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5520      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5521      Mcal_ReleaseSpinlock(&Smu_LockAddress);
	movh.a	a4,#@his(Smu_LockAddress)
	lea	a4,[a4]@los(Smu_LockAddress)
	call	Mcal_ReleaseSpinlock
.L908:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5522      /* [cover parentID={C42A08F7-2487-49d2-BF2E-9768D23E9223}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5523      Exit critical section
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5524      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5525      SchM_Exit_Smu_DriverAccess();
	call	SchM_Exit_Smu_DriverAccess
.L909:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5526  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5527      /*If timeout error occurs*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5528      /* [cover parentID={05B31E40-BBBE-4a77-85B0-32EF858A87D0}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5529      Has timeout error occurred ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5530      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5531      if (Timeout >= SFF_RM_TIMEOUT)
	mov	d15,#360
.L910:
	jlt.u	d9,d15,.L99
.L911:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5532      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5533        /* Timeout error has occurred */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5534        /* [cover parentID={2174263F-7BDA-4235-8896-B0CD861927A3}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5535        Set Result as E_NOT_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5536        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5537        RetVal = E_NOT_OK;
	mov	d2,#1
.L621:

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5538        /* [cover parentID={EE57D66A-A772-4f3e-B89A-0978386DF91D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5539        Production Error notification for SFF test failure is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5540        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5541        #if(SMU_SFF_TEST_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5542        /* Raise failure Production Error, when clear alarm status fails*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5543        /* [cover parentID={0E00500E-341E-46a8-B2A8-66F2F0FD41FB}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5544        Report failure as Production Error event status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5545        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5546        Smu_lReportDemError(SMU_E_SFF_TEST_FAILURE, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5547                              DEM_EVENT_STATUS_FAILED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5548        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5549      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5550      else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5551      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5552        /*Write the result into the result array*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5553        /* [cover parentID={DB320615-407F-4134-9F4D-A2E21219C98A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5554        Extract the result and write into the result array
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5555        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5556        for(Index = 0; Index < SMU_TOTAL_RMCTL_BITS; Index++)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5557        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5558          /* [cover parentID={D1B235FB-4744-469a-AFAE-132250D5DEE3}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5559          Extract the Register Monitor error flags for particular
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5560          control bit and write into the result array
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5561          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5562          RegMonResult[Index] = (Smu_SffTestResType)((ResStatus & \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5563                  ((uint32)SMU_ALARM_VALID << (uint32)Index)) >> (uint32)Index);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5564  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5565        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5566        RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5567        /* [cover parentID={75875BF7-730B-4dd6-8906-94726201BC81}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5568        Production Error notification for SFF test failure or success is enabled
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5569        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5570        #if (SMU_SFF_TEST_FAILURE_DEM_NOTIF == SMU_ENABLE_DEM_REPORT)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5571        /* Raise failure Production Error, when clear alarm status fails*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5572        /* [cover parentID={292D5ACD-7DAF-4630-B5D4-2C6C14923AE9}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5573        Report success as Production Error event status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5574        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5575        Smu_lReportDemError(SMU_E_SFF_TEST_FAILURE, \ 
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5576                              DEM_EVENT_STATUS_PASSED);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5577        #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5578      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5579    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5580    /* [cover parentID={E65887AE-E02F-4e37-8CF2-ECFB032FD79C}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5581    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5582    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5583    return RetVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5584  }
	ret
.L99:
	mov	d15,#0
.L622:
	mov	d1,#1
.L912:
	j	.L101
.L102:
	addsc.a	a2,a15,d15,#0
.L913:
	sh	d0,d1,d15
.L914:
	and	d0,d8
.L915:
	mov	d2,d15
.L624:
	rsub	d2,#0
.L623:
	sh	d0,d0,d2
.L916:
	st.b	[a2],d0
.L625:
	add	d15,#1
.L101:
	jlt.u	d15,#11,.L102
.L917:
	mov	d2,#0
.L626:
	ret
.L426:
	
__Smu_RegisterMonitor_function_end:
	.size	Smu_RegisterMonitor,__Smu_RegisterMonitor_function_end-Smu_RegisterMonitor
.L271:
	; End of function
	
	.sdecl	'.data.Smu_LockAddress.InitData.LmuNC.32bit',data,cluster('Smu_LockAddress')
	.sect	'.data.Smu_LockAddress.InitData.LmuNC.32bit'
	.align	4
Smu_LockAddress:	.type	object
	.size	Smu_LockAddress,4
	.space	4
	.sdecl	'.data.Smu_CmdLockAddress.InitData.LmuNC.32bit',data,cluster('Smu_CmdLockAddress')
	.sect	'.data.Smu_CmdLockAddress.InitData.LmuNC.32bit'
	.align	4
Smu_CmdLockAddress:	.type	object
	.size	Smu_CmdLockAddress,4
	.space	4
	.sdecl	'.rodata.Smu..1.ini',data,rom
	.sect	'.rodata.Smu..1.ini'
	.align	2
.1.ini:	.type	object
	.size	.1.ini,8
	.word	131072,524288
	.calls	'Smu_lClearAllAlarms','Mcal_WriteSafetyEndInitProtReg'
	.calls	'Smu_lClrAlarmStatus','Mcal_WriteSafetyEndInitProtReg'
	.calls	'Smu_lSetAlarmStatus','Mcal_WriteSafetyEndInitProtReg'
	.calls	'Smu_lSetAlmAction','SchM_Enter_Smu_DriverAccess'
	.calls	'Smu_lSetAlmAction','Mcal_GetSpinlock'
	.calls	'Smu_lSetAlmAction','Mcal_WriteSafetyEndInitProtReg'
	.calls	'Smu_lSetAlmAction','Mcal_ReleaseSpinlock'
	.calls	'Smu_lSetAlmAction','SchM_Exit_Smu_DriverAccess'
	.calls	'Smu_Init','Mcal_GetCpuIndex'
	.calls	'Smu_Init','Smu_lClearAllAlarms'
	.calls	'Smu_Init','Mcal_WriteSafetyEndInitProtReg'
	.calls	'Smu_Init','Mcal_WriteSafetyEndInitProtRegMask'
	.calls	'Smu_DeInit','Mcal_GetCpuIndex'
	.calls	'Smu_DeInit','Mcal_WriteSafetyEndInitProtReg'
	.calls	'Smu_DeInit','Mcal_WriteSafetyEndInitProtRegMask'
	.calls	'Smu_DeInit','Smu_lClearAllAlarms'
	.calls	'Smu_ClearAlarmStatus','SchM_Enter_Smu_DriverAccess'
	.calls	'Smu_ClearAlarmStatus','Mcal_GetSpinlock'
	.calls	'Smu_ClearAlarmStatus','Smu_lClrAlarmStatus'
	.calls	'Smu_ClearAlarmStatus','Mcal_ReleaseSpinlock'
	.calls	'Smu_ClearAlarmStatus','SchM_Exit_Smu_DriverAccess'
	.calls	'Smu_SetAlarmStatus','SchM_Enter_Smu_DriverAccess'
	.calls	'Smu_SetAlarmStatus','Mcal_GetSpinlock'
	.calls	'Smu_SetAlarmStatus','Smu_lSetAlarmStatus'
	.calls	'Smu_SetAlarmStatus','Mcal_ReleaseSpinlock'
	.calls	'Smu_SetAlarmStatus','SchM_Exit_Smu_DriverAccess'
	.calls	'Smu_GetAlarmAction','Smu_lGetAlmAction'
	.calls	'Smu_SetAlarmAction','Smu_lSetAlmAction'
	.calls	'Smu_ReleaseFSP','SchM_Enter_Smu_CmdAccess'
	.calls	'Smu_ReleaseFSP','Mcal_GetSpinlock'
	.calls	'Smu_ReleaseFSP','Mcal_ReleaseSpinlock'
	.calls	'Smu_ReleaseFSP','SchM_Exit_Smu_CmdAccess'
	.calls	'Smu_ActivateFSP','SchM_Enter_Smu_CmdAccess'
	.calls	'Smu_ActivateFSP','Mcal_GetSpinlock'
	.calls	'Smu_ActivateFSP','Mcal_ReleaseSpinlock'
	.calls	'Smu_ActivateFSP','SchM_Exit_Smu_CmdAccess'
	.calls	'Smu_SetupErrorPin','SchM_Enter_Smu_DriverAccess'
	.calls	'Smu_SetupErrorPin','Mcal_GetSpinlock'
	.calls	'Smu_SetupErrorPin','Mcal_WriteSafetyEndInitProtReg'
	.calls	'Smu_SetupErrorPin','Mcal_ReleaseSpinlock'
	.calls	'Smu_SetupErrorPin','SchM_Exit_Smu_DriverAccess'
	.calls	'Smu_ReleaseErrorPin','SchM_Enter_Smu_DriverAccess'
	.calls	'Smu_ReleaseErrorPin','Mcal_GetSpinlock'
	.calls	'Smu_ReleaseErrorPin','Mcal_WriteSafetyEndInitProtReg'
	.calls	'Smu_ReleaseErrorPin','Mcal_ReleaseSpinlock'
	.calls	'Smu_ReleaseErrorPin','SchM_Exit_Smu_DriverAccess'
	.calls	'Smu_RTStop','SchM_Enter_Smu_CmdAccess'
	.calls	'Smu_RTStop','Mcal_GetSpinlock'
	.calls	'Smu_RTStop','Mcal_ReleaseSpinlock'
	.calls	'Smu_RTStop','SchM_Exit_Smu_CmdAccess'
	.calls	'Smu_LockConfigRegs','Mcal_WriteSafetyEndInitProtReg'
	.calls	'Smu_ActivateRunState','SchM_Enter_Smu_CmdAccess'
	.calls	'Smu_ActivateRunState','Mcal_GetSpinlock'
	.calls	'Smu_ActivateRunState','Mcal_ReleaseSpinlock'
	.calls	'Smu_ActivateRunState','SchM_Exit_Smu_CmdAccess'
	.calls	'Smu_ActivatePES','SchM_Enter_Smu_CmdAccess'
	.calls	'Smu_ActivatePES','Mcal_GetSpinlock'
	.calls	'Smu_ActivatePES','Mcal_ReleaseSpinlock'
	.calls	'Smu_ActivatePES','SchM_Exit_Smu_CmdAccess'
	.calls	'Smu_ClearAlarmExecutionStatus','SchM_Enter_Smu_DriverAccess'
	.calls	'Smu_ClearAlarmExecutionStatus','Mcal_GetSpinlock'
	.calls	'Smu_ClearAlarmExecutionStatus','Mcal_WriteSafetyEndInitProtReg'
	.calls	'Smu_ClearAlarmExecutionStatus','Mcal_ReleaseSpinlock'
	.calls	'Smu_ClearAlarmExecutionStatus','SchM_Exit_Smu_DriverAccess'
	.calls	'Smu_RegisterMonitor','SchM_Enter_Smu_DriverAccess'
	.calls	'Smu_RegisterMonitor','Mcal_GetSpinlock'
	.calls	'Smu_RegisterMonitor','Mcal_WriteSafetyEndInitProtReg'
	.calls	'Smu_RegisterMonitor','Mcal_ReleaseSpinlock'
	.calls	'Smu_RegisterMonitor','SchM_Exit_Smu_DriverAccess'
	.calls	'Smu_lClearAllAlarms','',0
	.calls	'Smu_lClrAlarmStatus','',0
	.calls	'Smu_lSetAlarmStatus','',0
	.calls	'Smu_lSetAlmAction','',8
	.calls	'Smu_lGetAlmAction','',0
	.calls	'Smu_Init','',0
	.calls	'Smu_DeInit','',0
	.calls	'Smu_ClearAlarmStatus','',0
	.calls	'Smu_SetAlarmStatus','',0
	.calls	'Smu_GetAlarmStatus','',0
	.calls	'Smu_GetAlarmDebugStatus','',0
	.calls	'Smu_GetAlarmAction','',0
	.calls	'Smu_SetAlarmAction','',0
	.calls	'Smu_ReleaseFSP','',0
	.calls	'Smu_ActivateFSP','',0
	.calls	'Smu_SetupErrorPin','',0
	.calls	'Smu_ReleaseErrorPin','',0
	.calls	'Smu_RTStop','',8
	.calls	'Smu_GetRTMissedEvent','',8
	.calls	'Smu_LockConfigRegs','',0
	.calls	'Smu_GetSmuState','',0
	.calls	'Smu_ActivateRunState','',0
	.calls	'Smu_ActivatePES','',0
	.calls	'Smu_CoreAliveTest','',0
	.calls	'Smu_GetAlarmExecutionStatus','',0
	.calls	'Smu_ClearAlarmExecutionStatus','',0
	.extern	Mcal_WriteSafetyEndInitProtReg
	.extern	Mcal_WriteSafetyEndInitProtRegMask
	.extern	Mcal_GetCpuIndex
	.extern	Mcal_GetSpinlock
	.extern	Mcal_ReleaseSpinlock
	.extern	SchM_Enter_Smu_CmdAccess
	.extern	SchM_Enter_Smu_DriverAccess
	.extern	SchM_Exit_Smu_CmdAccess
	.extern	SchM_Exit_Smu_DriverAccess
	.calls	'Smu_RegisterMonitor','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L159:
	.word	34289
	.half	3
	.word	.L160
	.byte	4
.L158:
	.byte	1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L161
	.byte	2
	.byte	'void',0,3
	.word	157
	.byte	4
	.word	163
	.byte	5
	.word	168
.L306:
	.byte	6
	.byte	'unsigned long int',0,4,7,5
	.word	178
	.byte	7
	.byte	'Mcal_WriteSafetyEndInitProtReg',0,1,178,3,13,1,1,1,1,8
	.byte	'RegAddress',0,1,179,3,24
	.word	173
	.byte	8
	.byte	'DataValue',0,1,179,3,49
	.word	199
	.byte	0,5
	.word	168
	.byte	5
	.word	178
	.byte	7
	.byte	'Mcal_WriteSafetyEndInitProtRegMask',0,1,212,3,13,1,1,1,1,8
	.byte	'RegAddress',0,1,213,3,23
	.word	284
	.byte	8
	.byte	'DataValue',0,1,213,3,48
	.word	289
	.byte	8
	.byte	'Mask',0,1,213,3,66
	.word	178
	.byte	0,9
	.byte	'Mcal_GetCpuIndex',0,1,183,6,15
	.word	178
	.byte	1,1,1,1,3
	.word	178
	.byte	4
	.word	422
	.byte	5
	.word	427
	.byte	5
	.word	178
	.byte	7
	.byte	'Mcal_GetSpinlock',0,1,215,6,13,1,1,1,1,8
	.byte	'LockAddress',0,1,216,6,26
	.word	432
	.byte	8
	.byte	'Timeout',0,1,216,6,52
	.word	437
	.byte	0,5
	.word	427
	.byte	7
	.byte	'Mcal_ReleaseSpinlock',0,1,241,6,13,1,1,1,1,8
	.byte	'LockAddress',0,1,241,6,58
	.word	507
	.byte	0
.L301:
	.byte	6
	.byte	'unsigned char',0,1,8,10,144,1
	.word	178
	.byte	11,35,0,10,48
	.word	178
	.byte	11,11,0
.L397:
	.byte	10,8
	.word	178
	.byte	11,1,0,12,2,233,1,9,232,1,13
	.byte	'FSPCfg',0
	.word	178
	.byte	4,2,35,0,13
	.byte	'AGCCfg',0
	.word	178
	.byte	4,2,35,4,13
	.byte	'RTCCfg',0
	.word	178
	.byte	4,2,35,8,13
	.byte	'RTAC00Cfg',0
	.word	178
	.byte	4,2,35,12,13
	.byte	'RTAC01Cfg',0
	.word	178
	.byte	4,2,35,16,13
	.byte	'RTAC10Cfg',0
	.word	178
	.byte	4,2,35,20,13
	.byte	'RTAC11Cfg',0
	.word	178
	.byte	4,2,35,24,13
	.byte	'AlarmStdbyCfg',0
	.word	178
	.byte	4,2,35,28,13
	.byte	'AlarmCoreConfig',0
	.word	581
	.byte	144,1,2,35,32,13
	.byte	'AlarmCoreFspConfig',0
	.word	591
	.byte	48,3,35,176,1,13
	.byte	'AlarmStdbyFspConfig',0
	.word	600
	.byte	8,3,35,224,1,0,5
	.word	609
	.byte	4
	.word	849
.L303:
	.byte	5
	.word	854
	.byte	14,2,170,1,9,1,15
	.byte	'SMU_ALARM_GROUP0',0,0,15
	.byte	'SMU_ALARM_GROUP1',0,1,15
	.byte	'SMU_ALARM_GROUP2',0,2,15
	.byte	'SMU_ALARM_GROUP3',0,3,15
	.byte	'SMU_ALARM_GROUP4',0,4,15
	.byte	'SMU_ALARM_GROUP5',0,5,15
	.byte	'SMU_ALARM_GROUP6',0,6,15
	.byte	'SMU_ALARM_GROUP7',0,7,15
	.byte	'SMU_ALARM_GROUP8',0,8,15
	.byte	'SMU_ALARM_GROUP9',0,9,15
	.byte	'SMU_ALARM_GROUP10',0,10,15
	.byte	'SMU_ALARM_GROUP11',0,11,15
	.byte	'SMU_ALARM_GROUP20',0,20,15
	.byte	'SMU_ALARM_GROUP21',0,21,0
.L314:
	.byte	5
	.word	864
	.byte	14,2,190,1,9,1,15
	.byte	'SMU_ALARM_0',0,0,15
	.byte	'SMU_ALARM_1',0,1,15
	.byte	'SMU_ALARM_2',0,2,15
	.byte	'SMU_ALARM_3',0,3,15
	.byte	'SMU_ALARM_4',0,4,15
	.byte	'SMU_ALARM_5',0,5,15
	.byte	'SMU_ALARM_6',0,6,15
	.byte	'SMU_ALARM_7',0,7,15
	.byte	'SMU_ALARM_8',0,8,15
	.byte	'SMU_ALARM_9',0,9,15
	.byte	'SMU_ALARM_10',0,10,15
	.byte	'SMU_ALARM_11',0,11,15
	.byte	'SMU_ALARM_12',0,12,15
	.byte	'SMU_ALARM_13',0,13,15
	.byte	'SMU_ALARM_14',0,14,15
	.byte	'SMU_ALARM_15',0,15,15
	.byte	'SMU_ALARM_16',0,16,15
	.byte	'SMU_ALARM_17',0,17,15
	.byte	'SMU_ALARM_18',0,18,15
	.byte	'SMU_ALARM_19',0,19,15
	.byte	'SMU_ALARM_20',0,20,15
	.byte	'SMU_ALARM_21',0,21,15
	.byte	'SMU_ALARM_22',0,22,15
	.byte	'SMU_ALARM_23',0,23,15
	.byte	'SMU_ALARM_24',0,24,15
	.byte	'SMU_ALARM_25',0,25,15
	.byte	'SMU_ALARM_26',0,26,15
	.byte	'SMU_ALARM_27',0,27,15
	.byte	'SMU_ALARM_28',0,28,15
	.byte	'SMU_ALARM_29',0,29,15
	.byte	'SMU_ALARM_30',0,30,15
	.byte	'SMU_ALARM_31',0,31,0
.L316:
	.byte	5
	.word	1146
	.byte	4
	.word	564
.L318:
	.byte	5
	.word	1628
	.byte	4
	.word	178
.L320:
	.byte	5
	.word	1638
.L324:
	.byte	5
	.word	864
.L326:
	.byte	5
	.word	1146
.L328:
	.byte	5
	.word	564
.L330:
	.byte	5
	.word	178
.L340:
	.byte	5
	.word	178
.L347:
	.byte	5
	.word	864
.L349:
	.byte	5
	.word	1146
.L355:
	.byte	5
	.word	864
.L357:
	.byte	5
	.word	1146
.L363:
	.byte	5
	.word	864
	.byte	4
	.word	178
.L365:
	.byte	5
	.word	1698
.L369:
	.byte	5
	.word	864
.L371:
	.byte	5
	.word	1698
.L392:
	.byte	5
	.word	564
.L400:
	.byte	5
	.word	564
	.byte	4
	.word	564
.L402:
	.byte	5
	.word	1728
.L416:
	.byte	5
	.word	178
.L418:
	.byte	5
	.word	1698
.L422:
	.byte	5
	.word	178
	.byte	6
	.byte	'unsigned short int',0,2,7,5
	.word	1753
	.byte	4
	.word	1775
.L427:
	.byte	5
	.word	1780
	.byte	4
	.word	564
.L429:
	.byte	5
	.word	1790
	.byte	16
	.byte	'SchM_Enter_Smu_CmdAccess',0,3,55,13,1,1,1,1,16
	.byte	'SchM_Enter_Smu_DriverAccess',0,3,74,13,1,1,1,1,16
	.byte	'SchM_Exit_Smu_CmdAccess',0,3,93,13,1,1,1,1,16
	.byte	'SchM_Exit_Smu_DriverAccess',0,3,112,13,1,1,1,1
.L440:
	.byte	5
	.word	864
.L442:
	.byte	5
	.word	1146
.L445:
	.byte	5
	.word	864
.L447:
	.byte	5
	.word	1146
.L451:
	.byte	5
	.word	864
.L453:
	.byte	5
	.word	1146
.L455:
	.byte	5
	.word	564
.L457:
	.byte	5
	.word	178
.L466:
	.byte	5
	.word	864
.L468:
	.byte	5
	.word	1146
.L470:
	.byte	5
	.word	1628
.L472:
	.byte	5
	.word	1638
	.byte	17,1,4
	.word	1996
	.byte	18
	.byte	'__codeptr',0,4,1,1
	.word	1998
	.byte	18
	.byte	'boolean',0,5,102,29
	.word	564
	.byte	18
	.byte	'uint8',0,5,106,29
	.word	564
	.byte	18
	.byte	'uint16',0,5,110,29
	.word	1753
	.byte	18
	.byte	'uint32',0,5,114,29
	.word	178
	.byte	18
	.byte	'Std_ReturnType',0,6,109,16
	.word	564
	.byte	18
	.byte	'Smu_FSPActionType',0,2,124,16
	.word	178
	.byte	18
	.byte	'Smu_CoreStateType',0,2,149,1,15
	.word	564
	.byte	18
	.byte	'Smu_CoreAlarmActionType',0,2,158,1,15
	.word	564
	.byte	18
	.byte	'Smu_AlarmGroupId',0,2,186,1,3
	.word	864
	.byte	18
	.byte	'Smu_AlarmIdType',0,2,224,1,3
	.word	1146
	.byte	18
	.byte	'Smu_SffTestResType',0,2,228,1,15
	.word	564
	.byte	18
	.byte	'Smu_ConfigType',0,2,246,1,3
	.word	609
	.byte	18
	.byte	'Ifx_UReg_8Bit',0,7,79,24
	.word	564
	.byte	6
	.byte	'unsigned int',0,4,7,18
	.byte	'Ifx_UReg_32Bit',0,7,81,24
	.word	2315
	.byte	6
	.byte	'int',0,4,5,18
	.byte	'Ifx_SReg_32Bit',0,7,84,24
	.word	2354
	.byte	19
	.byte	'_Ifx_SMU_ACCEN0_Bits',0,8,70,16,4,20
	.byte	'EN0',0,1
	.word	564
	.byte	1,7,2,35,0,20
	.byte	'EN1',0,1
	.word	564
	.byte	1,6,2,35,0,20
	.byte	'EN2',0,1
	.word	564
	.byte	1,5,2,35,0,20
	.byte	'EN3',0,1
	.word	564
	.byte	1,4,2,35,0,20
	.byte	'EN4',0,1
	.word	564
	.byte	1,3,2,35,0,20
	.byte	'EN5',0,1
	.word	564
	.byte	1,2,2,35,0,20
	.byte	'EN6',0,1
	.word	564
	.byte	1,1,2,35,0,20
	.byte	'EN7',0,1
	.word	564
	.byte	1,0,2,35,0,20
	.byte	'EN8',0,1
	.word	564
	.byte	1,7,2,35,1,20
	.byte	'EN9',0,1
	.word	564
	.byte	1,6,2,35,1,20
	.byte	'EN10',0,1
	.word	564
	.byte	1,5,2,35,1,20
	.byte	'EN11',0,1
	.word	564
	.byte	1,4,2,35,1,20
	.byte	'EN12',0,1
	.word	564
	.byte	1,3,2,35,1,20
	.byte	'EN13',0,1
	.word	564
	.byte	1,2,2,35,1,20
	.byte	'EN14',0,1
	.word	564
	.byte	1,1,2,35,1,20
	.byte	'EN15',0,1
	.word	564
	.byte	1,0,2,35,1,20
	.byte	'EN16',0,1
	.word	564
	.byte	1,7,2,35,2,20
	.byte	'EN17',0,1
	.word	564
	.byte	1,6,2,35,2,20
	.byte	'EN18',0,1
	.word	564
	.byte	1,5,2,35,2,20
	.byte	'EN19',0,1
	.word	564
	.byte	1,4,2,35,2,20
	.byte	'EN20',0,1
	.word	564
	.byte	1,3,2,35,2,20
	.byte	'EN21',0,1
	.word	564
	.byte	1,2,2,35,2,20
	.byte	'EN22',0,1
	.word	564
	.byte	1,1,2,35,2,20
	.byte	'EN23',0,1
	.word	564
	.byte	1,0,2,35,2,20
	.byte	'EN24',0,1
	.word	564
	.byte	1,7,2,35,3,20
	.byte	'EN25',0,1
	.word	564
	.byte	1,6,2,35,3,20
	.byte	'EN26',0,1
	.word	564
	.byte	1,5,2,35,3,20
	.byte	'EN27',0,1
	.word	564
	.byte	1,4,2,35,3,20
	.byte	'EN28',0,1
	.word	564
	.byte	1,3,2,35,3,20
	.byte	'EN29',0,1
	.word	564
	.byte	1,2,2,35,3,20
	.byte	'EN30',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'EN31',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SMU_ACCEN0_Bits',0,8,104,3
	.word	2384
	.byte	19
	.byte	'_Ifx_SMU_ACCEN1_Bits',0,8,107,16,4,20
	.byte	'reserved_0',0,4
	.word	2315
	.byte	32,0,2,35,0,0,18
	.byte	'Ifx_SMU_ACCEN1_Bits',0,8,110,3
	.word	2941
	.byte	19
	.byte	'_Ifx_SMU_AD_Bits',0,8,113,16,4,20
	.byte	'DF0',0,1
	.word	564
	.byte	1,7,2,35,0,20
	.byte	'DF1',0,1
	.word	564
	.byte	1,6,2,35,0,20
	.byte	'DF2',0,1
	.word	564
	.byte	1,5,2,35,0,20
	.byte	'DF3',0,1
	.word	564
	.byte	1,4,2,35,0,20
	.byte	'DF4',0,1
	.word	564
	.byte	1,3,2,35,0,20
	.byte	'DF5',0,1
	.word	564
	.byte	1,2,2,35,0,20
	.byte	'DF6',0,1
	.word	564
	.byte	1,1,2,35,0,20
	.byte	'DF7',0,1
	.word	564
	.byte	1,0,2,35,0,20
	.byte	'DF8',0,1
	.word	564
	.byte	1,7,2,35,1,20
	.byte	'DF9',0,1
	.word	564
	.byte	1,6,2,35,1,20
	.byte	'DF10',0,1
	.word	564
	.byte	1,5,2,35,1,20
	.byte	'DF11',0,1
	.word	564
	.byte	1,4,2,35,1,20
	.byte	'DF12',0,1
	.word	564
	.byte	1,3,2,35,1,20
	.byte	'DF13',0,1
	.word	564
	.byte	1,2,2,35,1,20
	.byte	'DF14',0,1
	.word	564
	.byte	1,1,2,35,1,20
	.byte	'DF15',0,1
	.word	564
	.byte	1,0,2,35,1,20
	.byte	'DF16',0,1
	.word	564
	.byte	1,7,2,35,2,20
	.byte	'DF17',0,1
	.word	564
	.byte	1,6,2,35,2,20
	.byte	'DF18',0,1
	.word	564
	.byte	1,5,2,35,2,20
	.byte	'DF19',0,1
	.word	564
	.byte	1,4,2,35,2,20
	.byte	'DF20',0,1
	.word	564
	.byte	1,3,2,35,2,20
	.byte	'DF21',0,1
	.word	564
	.byte	1,2,2,35,2,20
	.byte	'DF22',0,1
	.word	564
	.byte	1,1,2,35,2,20
	.byte	'DF23',0,1
	.word	564
	.byte	1,0,2,35,2,20
	.byte	'DF24',0,1
	.word	564
	.byte	1,7,2,35,3,20
	.byte	'DF25',0,1
	.word	564
	.byte	1,6,2,35,3,20
	.byte	'DF26',0,1
	.word	564
	.byte	1,5,2,35,3,20
	.byte	'DF27',0,1
	.word	564
	.byte	1,4,2,35,3,20
	.byte	'DF28',0,1
	.word	564
	.byte	1,3,2,35,3,20
	.byte	'DF29',0,1
	.word	564
	.byte	1,2,2,35,3,20
	.byte	'DF30',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'DF31',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SMU_AD_Bits',0,8,147,1,3
	.word	3018
	.byte	19
	.byte	'_Ifx_SMU_AEX_Bits',0,8,150,1,16,4,20
	.byte	'IRQ0STS',0,1
	.word	564
	.byte	1,7,2,35,0,20
	.byte	'IRQ1STS',0,1
	.word	564
	.byte	1,6,2,35,0,20
	.byte	'IRQ2STS',0,1
	.word	564
	.byte	1,5,2,35,0,20
	.byte	'RST0STS',0,1
	.word	564
	.byte	1,4,2,35,0,20
	.byte	'RST1STS',0,1
	.word	564
	.byte	1,3,2,35,0,20
	.byte	'RST2STS',0,1
	.word	564
	.byte	1,2,2,35,0,20
	.byte	'RST3STS',0,1
	.word	564
	.byte	1,1,2,35,0,20
	.byte	'RST4STS',0,1
	.word	564
	.byte	1,0,2,35,0,20
	.byte	'RST5STS',0,1
	.word	564
	.byte	1,7,2,35,1,20
	.byte	'NMISTS',0,1
	.word	564
	.byte	1,6,2,35,1,20
	.byte	'reserved_10',0,1
	.word	564
	.byte	1,5,2,35,1,20
	.byte	'EMSSTS',0,1
	.word	564
	.byte	1,4,2,35,1,20
	.byte	'reserved_12',0,1
	.word	564
	.byte	4,0,2,35,1,20
	.byte	'IRQ0AEM',0,1
	.word	564
	.byte	1,7,2,35,2,20
	.byte	'IRQ1AEM',0,1
	.word	564
	.byte	1,6,2,35,2,20
	.byte	'IRQ2AEM',0,1
	.word	564
	.byte	1,5,2,35,2,20
	.byte	'RST0AEM',0,1
	.word	564
	.byte	1,4,2,35,2,20
	.byte	'RST1AEM',0,1
	.word	564
	.byte	1,3,2,35,2,20
	.byte	'RST2AEM',0,1
	.word	564
	.byte	1,2,2,35,2,20
	.byte	'RST3AEM',0,1
	.word	564
	.byte	1,1,2,35,2,20
	.byte	'RST4AEM',0,1
	.word	564
	.byte	1,0,2,35,2,20
	.byte	'RST5AEM',0,1
	.word	564
	.byte	1,7,2,35,3,20
	.byte	'NMIAEM',0,1
	.word	564
	.byte	1,6,2,35,3,20
	.byte	'reserved_26',0,1
	.word	564
	.byte	1,5,2,35,3,20
	.byte	'EMSAEM',0,1
	.word	564
	.byte	1,4,2,35,3,20
	.byte	'reserved_28',0,1
	.word	564
	.byte	4,0,2,35,3,0,18
	.byte	'Ifx_SMU_AEX_Bits',0,8,178,1,3
	.word	3568
	.byte	6
	.byte	'unsigned int',0,4,7,19
	.byte	'_Ifx_SMU_AEXCLR_Bits',0,8,181,1,16,4,20
	.byte	'IRQ0CLR',0,4
	.word	4125
	.byte	1,31,2,35,0,20
	.byte	'IRQ1CLR',0,4
	.word	4125
	.byte	1,30,2,35,0,20
	.byte	'IRQ2CLR',0,4
	.word	4125
	.byte	1,29,2,35,0,20
	.byte	'RST0CLR',0,4
	.word	4125
	.byte	1,28,2,35,0,20
	.byte	'RST1CLR',0,4
	.word	4125
	.byte	1,27,2,35,0,20
	.byte	'RST2CLR',0,4
	.word	4125
	.byte	1,26,2,35,0,20
	.byte	'RST3CLR',0,4
	.word	4125
	.byte	1,25,2,35,0,20
	.byte	'RST4CLR',0,4
	.word	4125
	.byte	1,24,2,35,0,20
	.byte	'RST5CLR',0,4
	.word	4125
	.byte	1,23,2,35,0,20
	.byte	'NMICLR',0,4
	.word	4125
	.byte	1,22,2,35,0,20
	.byte	'reserved_10',0,4
	.word	4125
	.byte	1,21,2,35,0,20
	.byte	'EMSCLR',0,4
	.word	4125
	.byte	1,20,2,35,0,20
	.byte	'reserved_12',0,4
	.word	4125
	.byte	4,16,2,35,0,20
	.byte	'IRQ0AEMCLR',0,4
	.word	4125
	.byte	1,15,2,35,0,20
	.byte	'IRQ1AEMCLR',0,4
	.word	4125
	.byte	1,14,2,35,0,20
	.byte	'IRQ2AEMCLR',0,4
	.word	4125
	.byte	1,13,2,35,0,20
	.byte	'RST0AEMCLR',0,4
	.word	4125
	.byte	1,12,2,35,0,20
	.byte	'RST1AEMCLR',0,4
	.word	4125
	.byte	1,11,2,35,0,20
	.byte	'RST2AEMCLR',0,4
	.word	4125
	.byte	1,10,2,35,0,20
	.byte	'RST3AEMCLR',0,4
	.word	4125
	.byte	1,9,2,35,0,20
	.byte	'RST4AEMCLR',0,4
	.word	4125
	.byte	1,8,2,35,0,20
	.byte	'RST5AEMCLR',0,4
	.word	4125
	.byte	1,7,2,35,0,20
	.byte	'NMIAEMCLR',0,4
	.word	4125
	.byte	1,6,2,35,0,20
	.byte	'reserved_26',0,4
	.word	4125
	.byte	1,5,2,35,0,20
	.byte	'EMSAEMCLR',0,4
	.word	4125
	.byte	1,4,2,35,0,20
	.byte	'reserved_28',0,4
	.word	4125
	.byte	4,0,2,35,0,0,18
	.byte	'Ifx_SMU_AEXCLR_Bits',0,8,209,1,3
	.word	4141
	.byte	19
	.byte	'_Ifx_SMU_AFCNT_Bits',0,8,212,1,16,4,20
	.byte	'FCNT',0,1
	.word	564
	.byte	4,4,2,35,0,20
	.byte	'ACNT',0,2
	.word	1753
	.byte	12,0,2,35,0,20
	.byte	'reserved_16',0,2
	.word	1753
	.byte	14,2,2,35,2,20
	.byte	'FCO',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'ACO',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_SMU_AFCNT_Bits',0,8,219,1,3
	.word	4737
	.byte	19
	.byte	'_Ifx_SMU_AG_Bits',0,8,222,1,16,4,20
	.byte	'SF0',0,4
	.word	4125
	.byte	1,31,2,35,0,20
	.byte	'SF1',0,4
	.word	4125
	.byte	1,30,2,35,0,20
	.byte	'SF2',0,4
	.word	4125
	.byte	1,29,2,35,0,20
	.byte	'SF3',0,4
	.word	4125
	.byte	1,28,2,35,0,20
	.byte	'SF4',0,4
	.word	4125
	.byte	1,27,2,35,0,20
	.byte	'SF5',0,4
	.word	4125
	.byte	1,26,2,35,0,20
	.byte	'SF6',0,4
	.word	4125
	.byte	1,25,2,35,0,20
	.byte	'SF7',0,4
	.word	4125
	.byte	1,24,2,35,0,20
	.byte	'SF8',0,4
	.word	4125
	.byte	1,23,2,35,0,20
	.byte	'SF9',0,4
	.word	4125
	.byte	1,22,2,35,0,20
	.byte	'SF10',0,4
	.word	4125
	.byte	1,21,2,35,0,20
	.byte	'SF11',0,4
	.word	4125
	.byte	1,20,2,35,0,20
	.byte	'SF12',0,4
	.word	4125
	.byte	1,19,2,35,0,20
	.byte	'SF13',0,4
	.word	4125
	.byte	1,18,2,35,0,20
	.byte	'SF14',0,4
	.word	4125
	.byte	1,17,2,35,0,20
	.byte	'SF15',0,4
	.word	4125
	.byte	1,16,2,35,0,20
	.byte	'SF16',0,4
	.word	4125
	.byte	1,15,2,35,0,20
	.byte	'SF17',0,4
	.word	4125
	.byte	1,14,2,35,0,20
	.byte	'SF18',0,4
	.word	4125
	.byte	1,13,2,35,0,20
	.byte	'SF19',0,4
	.word	4125
	.byte	1,12,2,35,0,20
	.byte	'SF20',0,4
	.word	4125
	.byte	1,11,2,35,0,20
	.byte	'SF21',0,4
	.word	4125
	.byte	1,10,2,35,0,20
	.byte	'SF22',0,4
	.word	4125
	.byte	1,9,2,35,0,20
	.byte	'SF23',0,4
	.word	4125
	.byte	1,8,2,35,0,20
	.byte	'SF24',0,4
	.word	4125
	.byte	1,7,2,35,0,20
	.byte	'SF25',0,4
	.word	4125
	.byte	1,6,2,35,0,20
	.byte	'SF26',0,4
	.word	4125
	.byte	1,5,2,35,0,20
	.byte	'SF27',0,4
	.word	4125
	.byte	1,4,2,35,0,20
	.byte	'SF28',0,4
	.word	4125
	.byte	1,3,2,35,0,20
	.byte	'SF29',0,4
	.word	4125
	.byte	1,2,2,35,0,20
	.byte	'SF30',0,4
	.word	4125
	.byte	1,1,2,35,0,20
	.byte	'SF31',0,4
	.word	4125
	.byte	1,0,2,35,0,0,18
	.byte	'Ifx_SMU_AG_Bits',0,8,128,2,3
	.word	4877
	.byte	19
	.byte	'_Ifx_SMU_AGC_Bits',0,8,131,2,16,4,20
	.byte	'IGCS0',0,4
	.word	4125
	.byte	3,29,2,35,0,20
	.byte	'reserved_3',0,4
	.word	4125
	.byte	1,28,2,35,0,20
	.byte	'IGCS1',0,4
	.word	4125
	.byte	3,25,2,35,0,20
	.byte	'reserved_7',0,4
	.word	4125
	.byte	1,24,2,35,0,20
	.byte	'IGCS2',0,4
	.word	4125
	.byte	3,21,2,35,0,20
	.byte	'reserved_11',0,4
	.word	4125
	.byte	5,16,2,35,0,20
	.byte	'RCS',0,4
	.word	4125
	.byte	6,10,2,35,0,20
	.byte	'reserved_22',0,4
	.word	4125
	.byte	2,8,2,35,0,20
	.byte	'PES',0,4
	.word	4125
	.byte	5,3,2,35,0,20
	.byte	'EFRST',0,4
	.word	4125
	.byte	1,2,2,35,0,20
	.byte	'reserved_30',0,4
	.word	4125
	.byte	2,0,2,35,0,0,18
	.byte	'Ifx_SMU_AGC_Bits',0,8,144,2,3
	.word	5428
	.byte	19
	.byte	'_Ifx_SMU_AGCF_Bits',0,8,147,2,16,4,20
	.byte	'CF0',0,4
	.word	4125
	.byte	1,31,2,35,0,20
	.byte	'CF1',0,4
	.word	4125
	.byte	1,30,2,35,0,20
	.byte	'CF2',0,4
	.word	4125
	.byte	1,29,2,35,0,20
	.byte	'CF3',0,4
	.word	4125
	.byte	1,28,2,35,0,20
	.byte	'CF4',0,4
	.word	4125
	.byte	1,27,2,35,0,20
	.byte	'CF5',0,4
	.word	4125
	.byte	1,26,2,35,0,20
	.byte	'CF6',0,4
	.word	4125
	.byte	1,25,2,35,0,20
	.byte	'CF7',0,4
	.word	4125
	.byte	1,24,2,35,0,20
	.byte	'CF8',0,4
	.word	4125
	.byte	1,23,2,35,0,20
	.byte	'CF9',0,4
	.word	4125
	.byte	1,22,2,35,0,20
	.byte	'CF10',0,4
	.word	4125
	.byte	1,21,2,35,0,20
	.byte	'CF11',0,4
	.word	4125
	.byte	1,20,2,35,0,20
	.byte	'CF12',0,4
	.word	4125
	.byte	1,19,2,35,0,20
	.byte	'CF13',0,4
	.word	4125
	.byte	1,18,2,35,0,20
	.byte	'CF14',0,4
	.word	4125
	.byte	1,17,2,35,0,20
	.byte	'CF15',0,4
	.word	4125
	.byte	1,16,2,35,0,20
	.byte	'CF16',0,4
	.word	4125
	.byte	1,15,2,35,0,20
	.byte	'CF17',0,4
	.word	4125
	.byte	1,14,2,35,0,20
	.byte	'CF18',0,4
	.word	4125
	.byte	1,13,2,35,0,20
	.byte	'CF19',0,4
	.word	4125
	.byte	1,12,2,35,0,20
	.byte	'CF20',0,4
	.word	4125
	.byte	1,11,2,35,0,20
	.byte	'CF21',0,4
	.word	4125
	.byte	1,10,2,35,0,20
	.byte	'CF22',0,4
	.word	4125
	.byte	1,9,2,35,0,20
	.byte	'CF23',0,4
	.word	4125
	.byte	1,8,2,35,0,20
	.byte	'CF24',0,4
	.word	4125
	.byte	1,7,2,35,0,20
	.byte	'CF25',0,4
	.word	4125
	.byte	1,6,2,35,0,20
	.byte	'CF26',0,4
	.word	4125
	.byte	1,5,2,35,0,20
	.byte	'CF27',0,4
	.word	4125
	.byte	1,4,2,35,0,20
	.byte	'CF28',0,4
	.word	4125
	.byte	1,3,2,35,0,20
	.byte	'CF29',0,4
	.word	4125
	.byte	1,2,2,35,0,20
	.byte	'CF30',0,4
	.word	4125
	.byte	1,1,2,35,0,20
	.byte	'CF31',0,4
	.word	4125
	.byte	1,0,2,35,0,0,18
	.byte	'Ifx_SMU_AGCF_Bits',0,8,181,2,3
	.word	5690
	.byte	19
	.byte	'_Ifx_SMU_AGFSP_Bits',0,8,184,2,16,4,20
	.byte	'FE0',0,4
	.word	4125
	.byte	1,31,2,35,0,20
	.byte	'FE1',0,4
	.word	4125
	.byte	1,30,2,35,0,20
	.byte	'FE2',0,4
	.word	4125
	.byte	1,29,2,35,0,20
	.byte	'FE3',0,4
	.word	4125
	.byte	1,28,2,35,0,20
	.byte	'FE4',0,4
	.word	4125
	.byte	1,27,2,35,0,20
	.byte	'FE5',0,4
	.word	4125
	.byte	1,26,2,35,0,20
	.byte	'FE6',0,4
	.word	4125
	.byte	1,25,2,35,0,20
	.byte	'FE7',0,4
	.word	4125
	.byte	1,24,2,35,0,20
	.byte	'FE8',0,4
	.word	4125
	.byte	1,23,2,35,0,20
	.byte	'FE9',0,4
	.word	4125
	.byte	1,22,2,35,0,20
	.byte	'FE10',0,4
	.word	4125
	.byte	1,21,2,35,0,20
	.byte	'FE11',0,4
	.word	4125
	.byte	1,20,2,35,0,20
	.byte	'FE12',0,4
	.word	4125
	.byte	1,19,2,35,0,20
	.byte	'FE13',0,4
	.word	4125
	.byte	1,18,2,35,0,20
	.byte	'FE14',0,4
	.word	4125
	.byte	1,17,2,35,0,20
	.byte	'FE15',0,4
	.word	4125
	.byte	1,16,2,35,0,20
	.byte	'FE16',0,4
	.word	4125
	.byte	1,15,2,35,0,20
	.byte	'FE17',0,4
	.word	4125
	.byte	1,14,2,35,0,20
	.byte	'FE18',0,4
	.word	4125
	.byte	1,13,2,35,0,20
	.byte	'FE19',0,4
	.word	4125
	.byte	1,12,2,35,0,20
	.byte	'FE20',0,4
	.word	4125
	.byte	1,11,2,35,0,20
	.byte	'FE21',0,4
	.word	4125
	.byte	1,10,2,35,0,20
	.byte	'FE22',0,4
	.word	4125
	.byte	1,9,2,35,0,20
	.byte	'FE23',0,4
	.word	4125
	.byte	1,8,2,35,0,20
	.byte	'FE24',0,4
	.word	4125
	.byte	1,7,2,35,0,20
	.byte	'FE25',0,4
	.word	4125
	.byte	1,6,2,35,0,20
	.byte	'FE26',0,4
	.word	4125
	.byte	1,5,2,35,0,20
	.byte	'FE27',0,4
	.word	4125
	.byte	1,4,2,35,0,20
	.byte	'FE28',0,4
	.word	4125
	.byte	1,3,2,35,0,20
	.byte	'FE29',0,4
	.word	4125
	.byte	1,2,2,35,0,20
	.byte	'FE30',0,4
	.word	4125
	.byte	1,1,2,35,0,20
	.byte	'FE31',0,4
	.word	4125
	.byte	1,0,2,35,0,0,18
	.byte	'Ifx_SMU_AGFSP_Bits',0,8,218,2,3
	.word	6245
	.byte	19
	.byte	'_Ifx_SMU_CLC_Bits',0,8,221,2,16,4,20
	.byte	'DISR',0,1
	.word	564
	.byte	1,7,2,35,0,20
	.byte	'DISS',0,1
	.word	564
	.byte	1,6,2,35,0,20
	.byte	'reserved_2',0,1
	.word	564
	.byte	1,5,2,35,0,20
	.byte	'EDIS',0,1
	.word	564
	.byte	1,4,2,35,0,20
	.byte	'reserved_4',0,4
	.word	2315
	.byte	28,0,2,35,0,0,18
	.byte	'Ifx_SMU_CLC_Bits',0,8,228,2,3
	.word	6802
	.byte	19
	.byte	'_Ifx_SMU_CMD_Bits',0,8,231,2,16,4,20
	.byte	'CMD',0,4
	.word	4125
	.byte	4,28,2,35,0,20
	.byte	'ARG',0,4
	.word	4125
	.byte	4,24,2,35,0,20
	.byte	'reserved_8',0,4
	.word	4125
	.byte	24,0,2,35,0,0,18
	.byte	'Ifx_SMU_CMD_Bits',0,8,236,2,3
	.word	6945
	.byte	19
	.byte	'_Ifx_SMU_DBG_Bits',0,8,239,2,16,4,20
	.byte	'SSM',0,1
	.word	564
	.byte	2,6,2,35,0,20
	.byte	'reserved_2',0,4
	.word	2315
	.byte	30,0,2,35,0,0,18
	.byte	'Ifx_SMU_DBG_Bits',0,8,243,2,3
	.word	7048
	.byte	19
	.byte	'_Ifx_SMU_FSP_Bits',0,8,246,2,16,4,20
	.byte	'PRE1',0,4
	.word	4125
	.byte	3,29,2,35,0,20
	.byte	'PRE2',0,4
	.word	4125
	.byte	2,27,2,35,0,20
	.byte	'MODE',0,4
	.word	4125
	.byte	2,25,2,35,0,20
	.byte	'PES',0,4
	.word	4125
	.byte	1,24,2,35,0,20
	.byte	'TFSP_LOW',0,4
	.word	4125
	.byte	14,10,2,35,0,20
	.byte	'TFSP_HIGH',0,4
	.word	4125
	.byte	10,0,2,35,0,0,18
	.byte	'Ifx_SMU_FSP_Bits',0,8,254,2,3
	.word	7136
	.byte	19
	.byte	'_Ifx_SMU_ID_Bits',0,8,129,3,16,4,20
	.byte	'MOD_REV',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'MOD_TYPE',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'MOD_NUMBER',0,2
	.word	1753
	.byte	16,0,2,35,2,0,18
	.byte	'Ifx_SMU_ID_Bits',0,8,134,3,3
	.word	7291
	.byte	19
	.byte	'_Ifx_SMU_KEYS_Bits',0,8,137,3,16,4,20
	.byte	'CFGLCK',0,4
	.word	4125
	.byte	8,24,2,35,0,20
	.byte	'PERLCK',0,4
	.word	4125
	.byte	8,16,2,35,0,20
	.byte	'reserved_16',0,4
	.word	4125
	.byte	16,0,2,35,0,0,18
	.byte	'Ifx_SMU_KEYS_Bits',0,8,142,3,3
	.word	7401
	.byte	19
	.byte	'_Ifx_SMU_OCS_Bits',0,8,145,3,16,4,20
	.byte	'TGS',0,1
	.word	564
	.byte	2,6,2,35,0,20
	.byte	'TGB',0,1
	.word	564
	.byte	1,5,2,35,0,20
	.byte	'TG_P',0,1
	.word	564
	.byte	1,4,2,35,0,20
	.byte	'reserved_4',0,4
	.word	2315
	.byte	20,8,2,35,0,20
	.byte	'SUS',0,1
	.word	564
	.byte	4,4,2,35,3,20
	.byte	'SUS_P',0,1
	.word	564
	.byte	1,3,2,35,3,20
	.byte	'SUSSTA',0,1
	.word	564
	.byte	1,2,2,35,3,20
	.byte	'reserved_30',0,1
	.word	564
	.byte	2,0,2,35,3,0,18
	.byte	'Ifx_SMU_OCS_Bits',0,8,155,3,3
	.word	7513
	.byte	19
	.byte	'_Ifx_SMU_PCTL_Bits',0,8,158,3,16,4,20
	.byte	'HWDIR',0,4
	.word	4125
	.byte	2,30,2,35,0,20
	.byte	'HWEN',0,4
	.word	4125
	.byte	2,28,2,35,0,20
	.byte	'GFSCU_EN',0,4
	.word	4125
	.byte	1,27,2,35,0,20
	.byte	'GFSTS_EN',0,4
	.word	4125
	.byte	1,26,2,35,0,20
	.byte	'reserved_6',0,4
	.word	4125
	.byte	1,25,2,35,0,20
	.byte	'PCS',0,4
	.word	4125
	.byte	1,24,2,35,0,20
	.byte	'reserved_8',0,4
	.word	4125
	.byte	6,18,2,35,0,20
	.byte	'reserved_14',0,4
	.word	4125
	.byte	9,9,2,35,0,20
	.byte	'reserved_23',0,4
	.word	4125
	.byte	9,0,2,35,0,0,18
	.byte	'Ifx_SMU_PCTL_Bits',0,8,169,3,3
	.word	7705
	.byte	19
	.byte	'_Ifx_SMU_RMCTL_Bits',0,8,172,3,16,4,20
	.byte	'TE0',0,4
	.word	4125
	.byte	1,31,2,35,0,20
	.byte	'TE1',0,4
	.word	4125
	.byte	1,30,2,35,0,20
	.byte	'TE2',0,4
	.word	4125
	.byte	1,29,2,35,0,20
	.byte	'TE3',0,4
	.word	4125
	.byte	1,28,2,35,0,20
	.byte	'TE4',0,4
	.word	4125
	.byte	1,27,2,35,0,20
	.byte	'TE5',0,4
	.word	4125
	.byte	1,26,2,35,0,20
	.byte	'TE6',0,4
	.word	4125
	.byte	1,25,2,35,0,20
	.byte	'TE7',0,4
	.word	4125
	.byte	1,24,2,35,0,20
	.byte	'TE8',0,4
	.word	4125
	.byte	1,23,2,35,0,20
	.byte	'TE9',0,4
	.word	4125
	.byte	1,22,2,35,0,20
	.byte	'TE10',0,4
	.word	4125
	.byte	1,21,2,35,0,20
	.byte	'reserved_11',0,4
	.word	4125
	.byte	1,20,2,35,0,20
	.byte	'reserved_12',0,4
	.word	4125
	.byte	1,19,2,35,0,20
	.byte	'reserved_13',0,4
	.word	4125
	.byte	1,18,2,35,0,20
	.byte	'reserved_14',0,4
	.word	4125
	.byte	1,17,2,35,0,20
	.byte	'reserved_15',0,4
	.word	4125
	.byte	1,16,2,35,0,20
	.byte	'reserved_16',0,4
	.word	4125
	.byte	1,15,2,35,0,20
	.byte	'reserved_17',0,4
	.word	4125
	.byte	1,14,2,35,0,20
	.byte	'reserved_18',0,4
	.word	4125
	.byte	1,13,2,35,0,20
	.byte	'reserved_19',0,4
	.word	4125
	.byte	1,12,2,35,0,20
	.byte	'reserved_20',0,4
	.word	4125
	.byte	1,11,2,35,0,20
	.byte	'reserved_21',0,4
	.word	4125
	.byte	1,10,2,35,0,20
	.byte	'reserved_22',0,4
	.word	4125
	.byte	1,9,2,35,0,20
	.byte	'reserved_23',0,4
	.word	4125
	.byte	1,8,2,35,0,20
	.byte	'reserved_24',0,4
	.word	4125
	.byte	1,7,2,35,0,20
	.byte	'reserved_25',0,4
	.word	4125
	.byte	1,6,2,35,0,20
	.byte	'reserved_26',0,4
	.word	4125
	.byte	1,5,2,35,0,20
	.byte	'reserved_27',0,4
	.word	4125
	.byte	1,4,2,35,0,20
	.byte	'reserved_28',0,4
	.word	4125
	.byte	1,3,2,35,0,20
	.byte	'reserved_29',0,4
	.word	4125
	.byte	1,2,2,35,0,20
	.byte	'reserved_30',0,4
	.word	4125
	.byte	1,1,2,35,0,20
	.byte	'reserved_31',0,4
	.word	4125
	.byte	1,0,2,35,0,0,18
	.byte	'Ifx_SMU_RMCTL_Bits',0,8,206,3,3
	.word	7936
	.byte	19
	.byte	'_Ifx_SMU_RMEF_Bits',0,8,209,3,16,4,20
	.byte	'EF0',0,4
	.word	4125
	.byte	1,31,2,35,0,20
	.byte	'EF1',0,4
	.word	4125
	.byte	1,30,2,35,0,20
	.byte	'EF2',0,4
	.word	4125
	.byte	1,29,2,35,0,20
	.byte	'EF3',0,4
	.word	4125
	.byte	1,28,2,35,0,20
	.byte	'EF4',0,4
	.word	4125
	.byte	1,27,2,35,0,20
	.byte	'EF5',0,4
	.word	4125
	.byte	1,26,2,35,0,20
	.byte	'EF6',0,4
	.word	4125
	.byte	1,25,2,35,0,20
	.byte	'EF7',0,4
	.word	4125
	.byte	1,24,2,35,0,20
	.byte	'EF8',0,4
	.word	4125
	.byte	1,23,2,35,0,20
	.byte	'EF9',0,4
	.word	4125
	.byte	1,22,2,35,0,20
	.byte	'EF10',0,4
	.word	4125
	.byte	1,21,2,35,0,20
	.byte	'reserved_11',0,4
	.word	4125
	.byte	1,20,2,35,0,20
	.byte	'reserved_12',0,4
	.word	4125
	.byte	1,19,2,35,0,20
	.byte	'reserved_13',0,4
	.word	4125
	.byte	1,18,2,35,0,20
	.byte	'reserved_14',0,4
	.word	4125
	.byte	1,17,2,35,0,20
	.byte	'reserved_15',0,4
	.word	4125
	.byte	1,16,2,35,0,20
	.byte	'reserved_16',0,4
	.word	4125
	.byte	1,15,2,35,0,20
	.byte	'reserved_17',0,4
	.word	4125
	.byte	1,14,2,35,0,20
	.byte	'reserved_18',0,4
	.word	4125
	.byte	1,13,2,35,0,20
	.byte	'reserved_19',0,4
	.word	4125
	.byte	1,12,2,35,0,20
	.byte	'reserved_20',0,4
	.word	4125
	.byte	1,11,2,35,0,20
	.byte	'reserved_21',0,4
	.word	4125
	.byte	1,10,2,35,0,20
	.byte	'reserved_22',0,4
	.word	4125
	.byte	1,9,2,35,0,20
	.byte	'reserved_23',0,4
	.word	4125
	.byte	1,8,2,35,0,20
	.byte	'reserved_24',0,4
	.word	4125
	.byte	1,7,2,35,0,20
	.byte	'reserved_25',0,4
	.word	4125
	.byte	1,6,2,35,0,20
	.byte	'reserved_26',0,4
	.word	4125
	.byte	1,5,2,35,0,20
	.byte	'reserved_27',0,4
	.word	4125
	.byte	1,4,2,35,0,20
	.byte	'reserved_28',0,4
	.word	4125
	.byte	1,3,2,35,0,20
	.byte	'reserved_29',0,4
	.word	4125
	.byte	1,2,2,35,0,20
	.byte	'reserved_30',0,4
	.word	4125
	.byte	1,1,2,35,0,20
	.byte	'reserved_31',0,4
	.word	4125
	.byte	1,0,2,35,0,0,18
	.byte	'Ifx_SMU_RMEF_Bits',0,8,243,3,3
	.word	8640
	.byte	19
	.byte	'_Ifx_SMU_RMSTS_Bits',0,8,246,3,16,4,20
	.byte	'STS0',0,4
	.word	4125
	.byte	1,31,2,35,0,20
	.byte	'STS1',0,4
	.word	4125
	.byte	1,30,2,35,0,20
	.byte	'STS2',0,4
	.word	4125
	.byte	1,29,2,35,0,20
	.byte	'STS3',0,4
	.word	4125
	.byte	1,28,2,35,0,20
	.byte	'STS4',0,4
	.word	4125
	.byte	1,27,2,35,0,20
	.byte	'STS5',0,4
	.word	4125
	.byte	1,26,2,35,0,20
	.byte	'STS6',0,4
	.word	4125
	.byte	1,25,2,35,0,20
	.byte	'STS7',0,4
	.word	4125
	.byte	1,24,2,35,0,20
	.byte	'STS8',0,4
	.word	4125
	.byte	1,23,2,35,0,20
	.byte	'STS9',0,4
	.word	4125
	.byte	1,22,2,35,0,20
	.byte	'STS10',0,4
	.word	4125
	.byte	1,21,2,35,0,20
	.byte	'reserved_11',0,4
	.word	4125
	.byte	1,20,2,35,0,20
	.byte	'reserved_12',0,4
	.word	4125
	.byte	1,19,2,35,0,20
	.byte	'reserved_13',0,4
	.word	4125
	.byte	1,18,2,35,0,20
	.byte	'reserved_14',0,4
	.word	4125
	.byte	1,17,2,35,0,20
	.byte	'reserved_15',0,4
	.word	4125
	.byte	1,16,2,35,0,20
	.byte	'reserved_16',0,4
	.word	4125
	.byte	1,15,2,35,0,20
	.byte	'reserved_17',0,4
	.word	4125
	.byte	1,14,2,35,0,20
	.byte	'reserved_18',0,4
	.word	4125
	.byte	1,13,2,35,0,20
	.byte	'reserved_19',0,4
	.word	4125
	.byte	1,12,2,35,0,20
	.byte	'reserved_20',0,4
	.word	4125
	.byte	1,11,2,35,0,20
	.byte	'reserved_21',0,4
	.word	4125
	.byte	1,10,2,35,0,20
	.byte	'reserved_22',0,4
	.word	4125
	.byte	1,9,2,35,0,20
	.byte	'reserved_23',0,4
	.word	4125
	.byte	1,8,2,35,0,20
	.byte	'reserved_24',0,4
	.word	4125
	.byte	1,7,2,35,0,20
	.byte	'reserved_25',0,4
	.word	4125
	.byte	1,6,2,35,0,20
	.byte	'reserved_26',0,4
	.word	4125
	.byte	1,5,2,35,0,20
	.byte	'reserved_27',0,4
	.word	4125
	.byte	1,4,2,35,0,20
	.byte	'reserved_28',0,4
	.word	4125
	.byte	1,3,2,35,0,20
	.byte	'reserved_29',0,4
	.word	4125
	.byte	1,2,2,35,0,20
	.byte	'reserved_30',0,4
	.word	4125
	.byte	1,1,2,35,0,20
	.byte	'reserved_31',0,4
	.word	4125
	.byte	1,0,2,35,0,0,18
	.byte	'Ifx_SMU_RMSTS_Bits',0,8,152,4,3
	.word	9342
	.byte	19
	.byte	'_Ifx_SMU_RTAC00_Bits',0,8,155,4,16,4,20
	.byte	'GID0',0,4
	.word	4125
	.byte	4,28,2,35,0,20
	.byte	'ALID0',0,4
	.word	4125
	.byte	5,23,2,35,0,20
	.byte	'reserved_9',0,4
	.word	4125
	.byte	7,16,2,35,0,20
	.byte	'GID1',0,4
	.word	4125
	.byte	4,12,2,35,0,20
	.byte	'ALID1',0,4
	.word	4125
	.byte	5,7,2,35,0,20
	.byte	'reserved_25',0,4
	.word	4125
	.byte	7,0,2,35,0,0,18
	.byte	'Ifx_SMU_RTAC00_Bits',0,8,163,4,3
	.word	10057
	.byte	19
	.byte	'_Ifx_SMU_RTAC01_Bits',0,8,166,4,16,4,20
	.byte	'GID2',0,4
	.word	4125
	.byte	4,28,2,35,0,20
	.byte	'ALID2',0,4
	.word	4125
	.byte	5,23,2,35,0,20
	.byte	'reserved_9',0,4
	.word	4125
	.byte	7,16,2,35,0,20
	.byte	'GID3',0,4
	.word	4125
	.byte	4,12,2,35,0,20
	.byte	'ALID3',0,4
	.word	4125
	.byte	5,7,2,35,0,20
	.byte	'reserved_25',0,4
	.word	4125
	.byte	7,0,2,35,0,0,18
	.byte	'Ifx_SMU_RTAC01_Bits',0,8,174,4,3
	.word	10225
	.byte	19
	.byte	'_Ifx_SMU_RTAC10_Bits',0,8,177,4,16,4,20
	.byte	'GID0',0,4
	.word	4125
	.byte	4,28,2,35,0,20
	.byte	'ALID0',0,4
	.word	4125
	.byte	5,23,2,35,0,20
	.byte	'reserved_9',0,4
	.word	4125
	.byte	7,16,2,35,0,20
	.byte	'GID1',0,4
	.word	4125
	.byte	4,12,2,35,0,20
	.byte	'ALID1',0,4
	.word	4125
	.byte	5,7,2,35,0,20
	.byte	'reserved_25',0,4
	.word	4125
	.byte	7,0,2,35,0,0,18
	.byte	'Ifx_SMU_RTAC10_Bits',0,8,185,4,3
	.word	10393
	.byte	19
	.byte	'_Ifx_SMU_RTAC11_Bits',0,8,188,4,16,4,20
	.byte	'GID2',0,4
	.word	4125
	.byte	4,28,2,35,0,20
	.byte	'ALID2',0,4
	.word	4125
	.byte	5,23,2,35,0,20
	.byte	'reserved_9',0,4
	.word	4125
	.byte	7,16,2,35,0,20
	.byte	'GID3',0,4
	.word	4125
	.byte	4,12,2,35,0,20
	.byte	'ALID3',0,4
	.word	4125
	.byte	5,7,2,35,0,20
	.byte	'reserved_25',0,4
	.word	4125
	.byte	7,0,2,35,0,0,18
	.byte	'Ifx_SMU_RTAC11_Bits',0,8,196,4,3
	.word	10561
	.byte	19
	.byte	'_Ifx_SMU_RTC_Bits',0,8,199,4,16,4,20
	.byte	'RT0E',0,4
	.word	4125
	.byte	1,31,2,35,0,20
	.byte	'RT1E',0,4
	.word	4125
	.byte	1,30,2,35,0,20
	.byte	'reserved_2',0,4
	.word	4125
	.byte	6,24,2,35,0,20
	.byte	'RTD',0,4
	.word	4125
	.byte	24,0,2,35,0,0,18
	.byte	'Ifx_SMU_RTC_Bits',0,8,205,4,3
	.word	10729
	.byte	19
	.byte	'_Ifx_SMU_STS_Bits',0,8,208,4,16,4,20
	.byte	'CMD',0,4
	.word	4125
	.byte	4,28,2,35,0,20
	.byte	'ARG',0,4
	.word	4125
	.byte	4,24,2,35,0,20
	.byte	'RES',0,4
	.word	4125
	.byte	1,23,2,35,0,20
	.byte	'ASCE',0,4
	.word	4125
	.byte	1,22,2,35,0,20
	.byte	'FSP',0,4
	.word	4125
	.byte	2,20,2,35,0,20
	.byte	'FSTS',0,4
	.word	4125
	.byte	1,19,2,35,0,20
	.byte	'reserved_13',0,4
	.word	4125
	.byte	3,16,2,35,0,20
	.byte	'RTS0',0,4
	.word	4125
	.byte	1,15,2,35,0,20
	.byte	'RTME0',0,4
	.word	4125
	.byte	1,14,2,35,0,20
	.byte	'RTS1',0,4
	.word	4125
	.byte	1,13,2,35,0,20
	.byte	'RTME1',0,4
	.word	4125
	.byte	1,12,2,35,0,20
	.byte	'reserved_20',0,4
	.word	4125
	.byte	12,0,2,35,0,0,18
	.byte	'Ifx_SMU_STS_Bits',0,8,222,4,3
	.word	10849
	.byte	21,8,230,4,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2384
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_ACCEN0',0,8,235,4,3
	.word	11104
	.byte	21,8,238,4,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	2941
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_ACCEN1',0,8,243,4,3
	.word	11168
	.byte	21,8,246,4,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3018
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_AD',0,8,251,4,3
	.word	11232
	.byte	21,8,254,4,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	3568
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_AEX',0,8,131,5,3
	.word	11292
	.byte	21,8,134,5,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4141
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_AEXCLR',0,8,139,5,3
	.word	11353
	.byte	21,8,142,5,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4737
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_AFCNT',0,8,147,5,3
	.word	11417
	.byte	21,8,150,5,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	4877
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_AG',0,8,155,5,3
	.word	11480
	.byte	21,8,158,5,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5428
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_AGC',0,8,163,5,3
	.word	11540
	.byte	21,8,166,5,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	5690
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_AGCF',0,8,171,5,3
	.word	11601
	.byte	21,8,174,5,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6245
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_AGFSP',0,8,179,5,3
	.word	11663
	.byte	21,8,182,5,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6802
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_CLC',0,8,187,5,3
	.word	11726
	.byte	21,8,190,5,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	6945
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_CMD',0,8,195,5,3
	.word	11787
	.byte	21,8,198,5,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7048
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_DBG',0,8,203,5,3
	.word	11848
	.byte	21,8,206,5,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7136
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_FSP',0,8,211,5,3
	.word	11909
	.byte	21,8,214,5,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7291
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_ID',0,8,219,5,3
	.word	11970
	.byte	21,8,222,5,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7401
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_KEYS',0,8,227,5,3
	.word	12030
	.byte	21,8,230,5,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7513
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_OCS',0,8,235,5,3
	.word	12092
	.byte	21,8,238,5,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7705
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_PCTL',0,8,243,5,3
	.word	12153
	.byte	21,8,246,5,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	7936
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_RMCTL',0,8,251,5,3
	.word	12215
	.byte	21,8,254,5,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	8640
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_RMEF',0,8,131,6,3
	.word	12278
	.byte	21,8,134,6,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	9342
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_RMSTS',0,8,139,6,3
	.word	12340
	.byte	21,8,142,6,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10057
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_RTAC00',0,8,147,6,3
	.word	12403
	.byte	21,8,150,6,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10225
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_RTAC01',0,8,155,6,3
	.word	12467
	.byte	21,8,158,6,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10393
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_RTAC10',0,8,163,6,3
	.word	12531
	.byte	21,8,166,6,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10561
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_RTAC11',0,8,171,6,3
	.word	12595
	.byte	21,8,174,6,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10729
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_RTC',0,8,179,6,3
	.word	12659
	.byte	21,8,182,6,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	10849
	.byte	4,2,35,0,0,18
	.byte	'Ifx_SMU_STS',0,8,187,6,3
	.word	12720
	.byte	19
	.byte	'_Ifx_PMS_ACCEN0_Bits',0,9,70,16,4,20
	.byte	'EN0',0,4
	.word	4125
	.byte	1,31,2,35,0,20
	.byte	'EN1',0,4
	.word	4125
	.byte	1,30,2,35,0,20
	.byte	'EN2',0,4
	.word	4125
	.byte	1,29,2,35,0,20
	.byte	'EN3',0,4
	.word	4125
	.byte	1,28,2,35,0,20
	.byte	'EN4',0,4
	.word	4125
	.byte	1,27,2,35,0,20
	.byte	'EN5',0,4
	.word	4125
	.byte	1,26,2,35,0,20
	.byte	'EN6',0,4
	.word	4125
	.byte	1,25,2,35,0,20
	.byte	'EN7',0,4
	.word	4125
	.byte	1,24,2,35,0,20
	.byte	'EN8',0,4
	.word	4125
	.byte	1,23,2,35,0,20
	.byte	'EN9',0,4
	.word	4125
	.byte	1,22,2,35,0,20
	.byte	'EN10',0,4
	.word	4125
	.byte	1,21,2,35,0,20
	.byte	'EN11',0,4
	.word	4125
	.byte	1,20,2,35,0,20
	.byte	'EN12',0,4
	.word	4125
	.byte	1,19,2,35,0,20
	.byte	'EN13',0,4
	.word	4125
	.byte	1,18,2,35,0,20
	.byte	'EN14',0,4
	.word	4125
	.byte	1,17,2,35,0,20
	.byte	'EN15',0,4
	.word	4125
	.byte	1,16,2,35,0,20
	.byte	'EN16',0,4
	.word	4125
	.byte	1,15,2,35,0,20
	.byte	'EN17',0,4
	.word	4125
	.byte	1,14,2,35,0,20
	.byte	'EN18',0,4
	.word	4125
	.byte	1,13,2,35,0,20
	.byte	'EN19',0,4
	.word	4125
	.byte	1,12,2,35,0,20
	.byte	'EN20',0,4
	.word	4125
	.byte	1,11,2,35,0,20
	.byte	'EN21',0,4
	.word	4125
	.byte	1,10,2,35,0,20
	.byte	'EN22',0,4
	.word	4125
	.byte	1,9,2,35,0,20
	.byte	'EN23',0,4
	.word	4125
	.byte	1,8,2,35,0,20
	.byte	'EN24',0,4
	.word	4125
	.byte	1,7,2,35,0,20
	.byte	'EN25',0,4
	.word	4125
	.byte	1,6,2,35,0,20
	.byte	'EN26',0,4
	.word	4125
	.byte	1,5,2,35,0,20
	.byte	'EN27',0,4
	.word	4125
	.byte	1,4,2,35,0,20
	.byte	'EN28',0,4
	.word	4125
	.byte	1,3,2,35,0,20
	.byte	'EN29',0,4
	.word	4125
	.byte	1,2,2,35,0,20
	.byte	'EN30',0,4
	.word	4125
	.byte	1,1,2,35,0,20
	.byte	'EN31',0,4
	.word	4125
	.byte	1,0,2,35,0,0,18
	.byte	'Ifx_PMS_ACCEN0_Bits',0,9,104,3
	.word	12781
	.byte	19
	.byte	'_Ifx_PMS_ACCEN1_Bits',0,9,107,16,4,20
	.byte	'reserved_0',0,4
	.word	4125
	.byte	32,0,2,35,0,0,18
	.byte	'Ifx_PMS_ACCEN1_Bits',0,9,110,3
	.word	13338
	.byte	19
	.byte	'_Ifx_PMS_AGFSP_STDBY0_Bits',0,9,113,16,4,20
	.byte	'reserved_0',0,1
	.word	564
	.byte	1,7,2,35,0,20
	.byte	'reserved_1',0,1
	.word	564
	.byte	1,6,2,35,0,20
	.byte	'reserved_2',0,1
	.word	564
	.byte	1,5,2,35,0,20
	.byte	'reserved_3',0,1
	.word	564
	.byte	1,4,2,35,0,20
	.byte	'FE4',0,1
	.word	564
	.byte	1,3,2,35,0,20
	.byte	'FE5',0,1
	.word	564
	.byte	1,2,2,35,0,20
	.byte	'FE6',0,1
	.word	564
	.byte	1,1,2,35,0,20
	.byte	'FE7',0,1
	.word	564
	.byte	1,0,2,35,0,20
	.byte	'FE8',0,1
	.word	564
	.byte	1,7,2,35,1,20
	.byte	'FE9',0,1
	.word	564
	.byte	1,6,2,35,1,20
	.byte	'FE10',0,1
	.word	564
	.byte	1,5,2,35,1,20
	.byte	'FE11',0,1
	.word	564
	.byte	1,4,2,35,1,20
	.byte	'FE12',0,1
	.word	564
	.byte	1,3,2,35,1,20
	.byte	'FE13',0,1
	.word	564
	.byte	1,2,2,35,1,20
	.byte	'FE14',0,1
	.word	564
	.byte	1,1,2,35,1,20
	.byte	'FE15',0,1
	.word	564
	.byte	1,0,2,35,1,20
	.byte	'reserved_16',0,1
	.word	564
	.byte	1,7,2,35,2,20
	.byte	'reserved_17',0,2
	.word	1753
	.byte	13,2,2,35,2,20
	.byte	'BITPROT',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'reserved_31',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_AGFSP_STDBY0_Bits',0,9,135,1,3
	.word	13415
	.byte	19
	.byte	'_Ifx_PMS_AGFSP_STDBY1_Bits',0,9,138,1,16,4,20
	.byte	'FE0',0,1
	.word	564
	.byte	1,7,2,35,0,20
	.byte	'FE1',0,1
	.word	564
	.byte	1,6,2,35,0,20
	.byte	'FE2',0,1
	.word	564
	.byte	1,5,2,35,0,20
	.byte	'FE3',0,1
	.word	564
	.byte	1,4,2,35,0,20
	.byte	'FE4',0,1
	.word	564
	.byte	1,3,2,35,0,20
	.byte	'FE5',0,1
	.word	564
	.byte	1,2,2,35,0,20
	.byte	'reserved_6',0,1
	.word	564
	.byte	1,1,2,35,0,20
	.byte	'FE7',0,1
	.word	564
	.byte	1,0,2,35,0,20
	.byte	'FE8',0,1
	.word	564
	.byte	1,7,2,35,1,20
	.byte	'FE9',0,1
	.word	564
	.byte	1,6,2,35,1,20
	.byte	'FE10',0,1
	.word	564
	.byte	1,5,2,35,1,20
	.byte	'FE11',0,1
	.word	564
	.byte	1,4,2,35,1,20
	.byte	'FE12',0,1
	.word	564
	.byte	1,3,2,35,1,20
	.byte	'FE13',0,1
	.word	564
	.byte	1,2,2,35,1,20
	.byte	'FE14',0,1
	.word	564
	.byte	1,1,2,35,1,20
	.byte	'FE15',0,1
	.word	564
	.byte	1,0,2,35,1,20
	.byte	'FE16',0,1
	.word	564
	.byte	1,7,2,35,2,20
	.byte	'reserved_17',0,2
	.word	1753
	.byte	13,2,2,35,2,20
	.byte	'BITPROT',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'reserved_31',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_AGFSP_STDBY1_Bits',0,9,160,1,3
	.word	13845
	.byte	19
	.byte	'_Ifx_PMS_AG_STDBY0_Bits',0,9,163,1,16,4,20
	.byte	'reserved_0',0,1
	.word	564
	.byte	1,7,2,35,0,20
	.byte	'reserved_1',0,1
	.word	564
	.byte	1,6,2,35,0,20
	.byte	'reserved_2',0,1
	.word	564
	.byte	1,5,2,35,0,20
	.byte	'reserved_3',0,1
	.word	564
	.byte	1,4,2,35,0,20
	.byte	'SF4',0,1
	.word	564
	.byte	1,3,2,35,0,20
	.byte	'SF5',0,1
	.word	564
	.byte	1,2,2,35,0,20
	.byte	'SF6',0,1
	.word	564
	.byte	1,1,2,35,0,20
	.byte	'SF7',0,1
	.word	564
	.byte	1,0,2,35,0,20
	.byte	'SF8',0,1
	.word	564
	.byte	1,7,2,35,1,20
	.byte	'SF9',0,1
	.word	564
	.byte	1,6,2,35,1,20
	.byte	'SF10',0,1
	.word	564
	.byte	1,5,2,35,1,20
	.byte	'SF11',0,1
	.word	564
	.byte	1,4,2,35,1,20
	.byte	'SF12',0,1
	.word	564
	.byte	1,3,2,35,1,20
	.byte	'SF13',0,1
	.word	564
	.byte	1,2,2,35,1,20
	.byte	'SF14',0,1
	.word	564
	.byte	1,1,2,35,1,20
	.byte	'SF15',0,1
	.word	564
	.byte	1,0,2,35,1,20
	.byte	'reserved_16',0,1
	.word	564
	.byte	1,7,2,35,2,20
	.byte	'reserved_17',0,2
	.word	1753
	.byte	13,2,2,35,2,20
	.byte	'FSPERR',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'reserved_31',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_AG_STDBY0_Bits',0,9,185,1,3
	.word	14248
	.byte	19
	.byte	'_Ifx_PMS_AG_STDBY1_Bits',0,9,188,1,16,4,20
	.byte	'SF0',0,1
	.word	564
	.byte	1,7,2,35,0,20
	.byte	'SF1',0,1
	.word	564
	.byte	1,6,2,35,0,20
	.byte	'SF2',0,1
	.word	564
	.byte	1,5,2,35,0,20
	.byte	'SF3',0,1
	.word	564
	.byte	1,4,2,35,0,20
	.byte	'SF4',0,1
	.word	564
	.byte	1,3,2,35,0,20
	.byte	'SF5',0,1
	.word	564
	.byte	1,2,2,35,0,20
	.byte	'reserved_6',0,1
	.word	564
	.byte	1,1,2,35,0,20
	.byte	'SF7',0,1
	.word	564
	.byte	1,0,2,35,0,20
	.byte	'SF8',0,1
	.word	564
	.byte	1,7,2,35,1,20
	.byte	'SF9',0,1
	.word	564
	.byte	1,6,2,35,1,20
	.byte	'SF10',0,1
	.word	564
	.byte	1,5,2,35,1,20
	.byte	'SF11',0,1
	.word	564
	.byte	1,4,2,35,1,20
	.byte	'SF12',0,1
	.word	564
	.byte	1,3,2,35,1,20
	.byte	'SF13',0,1
	.word	564
	.byte	1,2,2,35,1,20
	.byte	'SF14',0,1
	.word	564
	.byte	1,1,2,35,1,20
	.byte	'SF15',0,1
	.word	564
	.byte	1,0,2,35,1,20
	.byte	'SF16',0,1
	.word	564
	.byte	1,7,2,35,2,20
	.byte	'reserved_17',0,2
	.word	1753
	.byte	13,2,2,35,2,20
	.byte	'reserved_30',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'reserved_31',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_AG_STDBY1_Bits',0,9,210,1,3
	.word	14672
	.byte	19
	.byte	'_Ifx_PMS_CMD_STDBY_Bits',0,9,213,1,16,4,20
	.byte	'SMUEN',0,1
	.word	564
	.byte	1,7,2,35,0,20
	.byte	'FSP0EN',0,1
	.word	564
	.byte	1,6,2,35,0,20
	.byte	'FSP1EN',0,1
	.word	564
	.byte	1,5,2,35,0,20
	.byte	'ASCE',0,1
	.word	564
	.byte	1,4,2,35,0,20
	.byte	'reserved_4',0,4
	.word	2315
	.byte	26,2,2,35,0,20
	.byte	'BITPROT',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'reserved_31',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_CMD_STDBY_Bits',0,9,222,1,3
	.word	15073
	.byte	19
	.byte	'_Ifx_PMS_DTSLIM_Bits',0,9,225,1,16,4,20
	.byte	'LOWER',0,2
	.word	1753
	.byte	12,4,2,35,0,20
	.byte	'reserved_12',0,1
	.word	564
	.byte	3,1,2,35,1,20
	.byte	'LLU',0,1
	.word	564
	.byte	1,0,2,35,1,20
	.byte	'UPPER',0,2
	.word	1753
	.byte	12,4,2,35,2,20
	.byte	'reserved_28',0,1
	.word	564
	.byte	2,2,2,35,3,20
	.byte	'SLCK',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'UOF',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_DTSLIM_Bits',0,9,234,1,3
	.word	15269
	.byte	19
	.byte	'_Ifx_PMS_DTSSTAT_Bits',0,9,237,1,16,4,20
	.byte	'RESULT',0,2
	.word	1753
	.byte	12,4,2,35,0,20
	.byte	'reserved_12',0,4
	.word	2315
	.byte	20,0,2,35,0,0,18
	.byte	'Ifx_PMS_DTSSTAT_Bits',0,9,241,1,3
	.word	15452
	.byte	19
	.byte	'_Ifx_PMS_EVR33CON_Bits',0,9,244,1,16,4,20
	.byte	'SHVH33',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'reserved_8',0,1
	.word	564
	.byte	4,4,2,35,1,20
	.byte	'SHHVEN',0,1
	.word	564
	.byte	1,3,2,35,1,20
	.byte	'SHLVEN',0,1
	.word	564
	.byte	1,2,2,35,1,20
	.byte	'reserved_14',0,1
	.word	564
	.byte	2,0,2,35,1,20
	.byte	'SHVL33',0,1
	.word	564
	.byte	8,0,2,35,2,20
	.byte	'reserved_24',0,1
	.word	564
	.byte	4,4,2,35,3,20
	.byte	'reserved_28',0,1
	.word	564
	.byte	1,3,2,35,3,20
	.byte	'reserved_29',0,1
	.word	564
	.byte	1,2,2,35,3,20
	.byte	'SLCK',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'reserved_31',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVR33CON_Bits',0,9,129,2,3
	.word	15552
	.byte	19
	.byte	'_Ifx_PMS_EVRADCSTAT_Bits',0,9,132,2,16,4,20
	.byte	'ADCCV',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'ADC33V',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'ADCSWDV',0,1
	.word	564
	.byte	8,0,2,35,2,20
	.byte	'OVC',0,1
	.word	564
	.byte	1,7,2,35,3,20
	.byte	'OV33',0,1
	.word	564
	.byte	1,6,2,35,3,20
	.byte	'OVSWD',0,1
	.word	564
	.byte	1,5,2,35,3,20
	.byte	'UVC',0,1
	.word	564
	.byte	1,4,2,35,3,20
	.byte	'UV33',0,1
	.word	564
	.byte	1,3,2,35,3,20
	.byte	'UVSWD',0,1
	.word	564
	.byte	1,2,2,35,3,20
	.byte	'reserved_30',0,1
	.word	564
	.byte	2,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRADCSTAT_Bits',0,9,144,2,3
	.word	15838
	.byte	19
	.byte	'_Ifx_PMS_EVROSCCTRL_Bits',0,9,147,2,16,4,20
	.byte	'OSCFTRIM',0,1
	.word	564
	.byte	6,2,2,35,0,20
	.byte	'reserved_6',0,2
	.word	1753
	.byte	10,0,2,35,0,20
	.byte	'OSCFPTRIM',0,1
	.word	564
	.byte	6,2,2,35,2,20
	.byte	'reserved_22',0,2
	.word	1753
	.byte	7,3,2,35,2,20
	.byte	'OSCTEMPOFFS',0,1
	.word	564
	.byte	1,2,2,35,3,20
	.byte	'reserved_30',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'OSCTRIMEN',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVROSCCTRL_Bits',0,9,156,2,3
	.word	16076
	.byte	19
	.byte	'_Ifx_PMS_EVRRSTCON_Bits',0,9,159,2,16,4,20
	.byte	'RSTCTRIM',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'RST33TRIM',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'RSTSWDTRIM',0,1
	.word	564
	.byte	8,0,2,35,2,20
	.byte	'RSTCOFF',0,1
	.word	564
	.byte	1,7,2,35,3,20
	.byte	'BPRSTCOFF',0,1
	.word	564
	.byte	1,6,2,35,3,20
	.byte	'RST33OFF',0,1
	.word	564
	.byte	1,5,2,35,3,20
	.byte	'BPRST33OFF',0,1
	.word	564
	.byte	1,4,2,35,3,20
	.byte	'RSTSWDOFF',0,1
	.word	564
	.byte	1,3,2,35,3,20
	.byte	'BPRSTSWDOFF',0,1
	.word	564
	.byte	1,2,2,35,3,20
	.byte	'SLCK',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'reserved_31',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRRSTCON_Bits',0,9,172,2,3
	.word	16294
	.byte	19
	.byte	'_Ifx_PMS_EVRRSTSTAT_Bits',0,9,175,2,16,4,20
	.byte	'RSTC',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'RST33',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'RSTSWD',0,1
	.word	564
	.byte	8,0,2,35,2,20
	.byte	'RSTCOFF',0,1
	.word	564
	.byte	1,7,2,35,3,20
	.byte	'reserved_25',0,1
	.word	564
	.byte	1,6,2,35,3,20
	.byte	'RST33OFF',0,1
	.word	564
	.byte	1,5,2,35,3,20
	.byte	'reserved_27',0,1
	.word	564
	.byte	1,4,2,35,3,20
	.byte	'RSTSWDOFF',0,1
	.word	564
	.byte	1,3,2,35,3,20
	.byte	'reserved_29',0,1
	.word	564
	.byte	3,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRRSTSTAT_Bits',0,9,186,2,3
	.word	16585
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCOEFF0_Bits',0,9,189,2,16,4,20
	.byte	'M0S0EN',0,1
	.word	564
	.byte	1,7,2,35,0,20
	.byte	'M0S2EN',0,1
	.word	564
	.byte	1,6,2,35,0,20
	.byte	'M0S3EN',0,1
	.word	564
	.byte	1,5,2,35,0,20
	.byte	'M0S3CLIP',0,1
	.word	564
	.byte	1,4,2,35,0,20
	.byte	'M0S4EN',0,1
	.word	564
	.byte	1,3,2,35,0,20
	.byte	'M0RAMPEN',0,1
	.word	564
	.byte	1,2,2,35,0,20
	.byte	'M0SFRGET',0,1
	.word	564
	.byte	1,1,2,35,0,20
	.byte	'M0SKIPEN',0,1
	.word	564
	.byte	1,0,2,35,0,20
	.byte	'M0S3COEFF',0,1
	.word	564
	.byte	4,4,2,35,1,20
	.byte	'M0S4COEFF',0,1
	.word	564
	.byte	4,0,2,35,1,20
	.byte	'M0SRMPCOEFF',0,1
	.word	564
	.byte	4,4,2,35,2,20
	.byte	'M0FGETCOEFF',0,1
	.word	564
	.byte	4,0,2,35,2,20
	.byte	'M0S2COEFF',0,1
	.word	564
	.byte	4,4,2,35,3,20
	.byte	'M0S2VINSRC',0,1
	.word	564
	.byte	1,3,2,35,3,20
	.byte	'M0S2VOSRC',0,1
	.word	564
	.byte	1,2,2,35,3,20
	.byte	'M0SRMPCOEFFFRAC',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'LCK',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCOEFF0_Bits',0,9,208,2,3
	.word	16830
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCOEFF1_Bits',0,9,211,2,16,4,20
	.byte	'M0VOCFLPF',0,1
	.word	564
	.byte	4,4,2,35,0,20
	.byte	'M0VOCFINC',0,1
	.word	564
	.byte	4,0,2,35,0,20
	.byte	'M0VOUT',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'M0VIN',0,2
	.word	1753
	.byte	11,5,2,35,2,20
	.byte	'M0S3COEFFFRAC',0,1
	.word	564
	.byte	2,3,2,35,3,20
	.byte	'M0S2COEFFFRAC',0,1
	.word	564
	.byte	2,1,2,35,3,20
	.byte	'LCK',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCOEFF1_Bits',0,9,220,2,3
	.word	17243
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCOEFF2_Bits',0,9,223,2,16,4,20
	.byte	'M1S0EN',0,1
	.word	564
	.byte	1,7,2,35,0,20
	.byte	'M1S2EN',0,1
	.word	564
	.byte	1,6,2,35,0,20
	.byte	'M1S3EN',0,1
	.word	564
	.byte	1,5,2,35,0,20
	.byte	'M1S3CLIP',0,1
	.word	564
	.byte	1,4,2,35,0,20
	.byte	'M1S4EN',0,1
	.word	564
	.byte	1,3,2,35,0,20
	.byte	'M1RAMPEN',0,1
	.word	564
	.byte	1,2,2,35,0,20
	.byte	'M1SFRGET',0,1
	.word	564
	.byte	1,1,2,35,0,20
	.byte	'M1SKIPEN',0,1
	.word	564
	.byte	1,0,2,35,0,20
	.byte	'M1S3COEFF',0,1
	.word	564
	.byte	4,4,2,35,1,20
	.byte	'M1S4COEFF',0,1
	.word	564
	.byte	4,0,2,35,1,20
	.byte	'M1SRMPCOEFF',0,1
	.word	564
	.byte	4,4,2,35,2,20
	.byte	'M1FGETCOEFF',0,1
	.word	564
	.byte	4,0,2,35,2,20
	.byte	'M1S2COEFF',0,1
	.word	564
	.byte	4,4,2,35,3,20
	.byte	'M1S2VINSRC',0,1
	.word	564
	.byte	1,3,2,35,3,20
	.byte	'M1S2VOSRC',0,1
	.word	564
	.byte	1,2,2,35,3,20
	.byte	'reserved_30',0,1
	.word	564
	.byte	2,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCOEFF2_Bits',0,9,241,2,3
	.word	17452
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCOEFF3_Bits',0,9,244,2,16,4,20
	.byte	'M1VOCFLPF',0,1
	.word	564
	.byte	4,4,2,35,0,20
	.byte	'M1VOCFINC',0,1
	.word	564
	.byte	4,0,2,35,0,20
	.byte	'M1VOUT',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'M1VIN',0,2
	.word	1753
	.byte	11,5,2,35,2,20
	.byte	'M1S3COEFFFRAC',0,1
	.word	564
	.byte	2,3,2,35,3,20
	.byte	'M1S2COEFFFRAC',0,1
	.word	564
	.byte	2,1,2,35,3,20
	.byte	'M1SRMPCOEFFFRAC',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCOEFF3_Bits',0,9,253,2,3
	.word	17846
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCOEFF4_Bits',0,9,128,3,16,4,20
	.byte	'M2S0EN',0,1
	.word	564
	.byte	1,7,2,35,0,20
	.byte	'M2S2EN',0,1
	.word	564
	.byte	1,6,2,35,0,20
	.byte	'M2S3EN',0,1
	.word	564
	.byte	1,5,2,35,0,20
	.byte	'M2S3CLIP',0,1
	.word	564
	.byte	1,4,2,35,0,20
	.byte	'M2S4EN',0,1
	.word	564
	.byte	1,3,2,35,0,20
	.byte	'M2RAMPEN',0,1
	.word	564
	.byte	1,2,2,35,0,20
	.byte	'M2SFRGET',0,1
	.word	564
	.byte	1,1,2,35,0,20
	.byte	'M2SKIPEN',0,1
	.word	564
	.byte	1,0,2,35,0,20
	.byte	'M2S3COEFF',0,1
	.word	564
	.byte	4,4,2,35,1,20
	.byte	'M2S4COEFF',0,1
	.word	564
	.byte	4,0,2,35,1,20
	.byte	'M2SRMPCOEFF',0,1
	.word	564
	.byte	4,4,2,35,2,20
	.byte	'M2FGETCOEFF',0,1
	.word	564
	.byte	4,0,2,35,2,20
	.byte	'M2S2COEFF',0,1
	.word	564
	.byte	4,4,2,35,3,20
	.byte	'M2S2VINSRC',0,1
	.word	564
	.byte	1,3,2,35,3,20
	.byte	'M2S2VOSRC',0,1
	.word	564
	.byte	1,2,2,35,3,20
	.byte	'reserved_30',0,1
	.word	564
	.byte	2,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCOEFF4_Bits',0,9,146,3,3
	.word	18067
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCOEFF5_Bits',0,9,149,3,16,4,20
	.byte	'M2VOCFLPF',0,1
	.word	564
	.byte	4,4,2,35,0,20
	.byte	'M2VOCFINC',0,1
	.word	564
	.byte	4,0,2,35,0,20
	.byte	'M2VOUT',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'M2VIN',0,2
	.word	1753
	.byte	11,5,2,35,2,20
	.byte	'M2S3COEFFFRAC',0,1
	.word	564
	.byte	2,3,2,35,3,20
	.byte	'M2S2COEFFFRAC',0,1
	.word	564
	.byte	2,1,2,35,3,20
	.byte	'M2SRMPCOEFFFRAC',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCOEFF5_Bits',0,9,158,3,3
	.word	18461
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCOEFF6_Bits',0,9,161,3,16,4,20
	.byte	'CT5REG0',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'CT5REG1',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'CT5REG2',0,1
	.word	564
	.byte	8,0,2,35,2,20
	.byte	'reserved_24',0,1
	.word	564
	.byte	7,1,2,35,3,20
	.byte	'LCK',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCOEFF6_Bits',0,9,168,3,3
	.word	18682
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCOEFF7_Bits',0,9,171,3,16,4,20
	.byte	'CT5REG3',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'CT5REG4',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'reserved_16',0,2
	.word	1753
	.byte	15,1,2,35,2,20
	.byte	'LCK',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCOEFF7_Bits',0,9,177,3,3
	.word	18844
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCOEFF8_Bits',0,9,180,3,16,4,20
	.byte	'CT33REG0',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'CT33REG1',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'CT33REG2',0,1
	.word	564
	.byte	8,0,2,35,2,20
	.byte	'reserved_24',0,1
	.word	564
	.byte	7,1,2,35,3,20
	.byte	'LCK',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCOEFF8_Bits',0,9,187,3,3
	.word	18987
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCOEFF9_Bits',0,9,190,3,16,4,20
	.byte	'CT33REG3',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'CT33REG4',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'reserved_16',0,2
	.word	1753
	.byte	15,1,2,35,2,20
	.byte	'LCK',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCOEFF9_Bits',0,9,196,3,3
	.word	19152
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCTRL0_Bits',0,9,199,3,16,4,20
	.byte	'SDFREQSPRD',0,2
	.word	1753
	.byte	16,0,2,35,0,20
	.byte	'SDFREQ',0,2
	.word	1753
	.byte	12,4,2,35,2,20
	.byte	'NGOFF',0,1
	.word	564
	.byte	1,3,2,35,3,20
	.byte	'PGOFF',0,1
	.word	564
	.byte	1,2,2,35,3,20
	.byte	'UP',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'LCK',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCTRL0_Bits',0,9,207,3,3
	.word	19297
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCTRL1_Bits',0,9,210,3,16,4,20
	.byte	'M0TOFF',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'M0TON',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'M0S0COEFF',0,1
	.word	564
	.byte	4,4,2,35,2,20
	.byte	'M0DEADBD',0,1
	.word	564
	.byte	2,2,2,35,2,20
	.byte	'M0ADCZB',0,1
	.word	564
	.byte	2,0,2,35,2,20
	.byte	'M0SKIP',0,1
	.word	564
	.byte	4,4,2,35,3,20
	.byte	'reserved_28',0,1
	.word	564
	.byte	2,2,2,35,3,20
	.byte	'SYNCEN',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'LCK',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCTRL1_Bits',0,9,221,3,3
	.word	19465
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCTRL10_Bits',0,9,224,3,16,4,20
	.byte	'SHVH',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'SHVL',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'reserved_16',0,2
	.word	1753
	.byte	12,4,2,35,2,20
	.byte	'SHHVEN',0,1
	.word	564
	.byte	1,3,2,35,3,20
	.byte	'SHLVEN',0,1
	.word	564
	.byte	1,2,2,35,3,20
	.byte	'reserved_30',0,1
	.word	564
	.byte	2,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCTRL10_Bits',0,9,232,3,3
	.word	19699
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCTRL11_Bits',0,9,235,3,16,4,20
	.byte	'DROOPVH',0,1
	.word	564
	.byte	5,3,2,35,0,20
	.byte	'reserved_5',0,1
	.word	564
	.byte	3,0,2,35,0,20
	.byte	'DROOPVL',0,1
	.word	564
	.byte	5,3,2,35,1,20
	.byte	'reserved_13',0,1
	.word	564
	.byte	3,0,2,35,1,20
	.byte	'SYNCMAXDEV',0,1
	.word	564
	.byte	5,3,2,35,2,20
	.byte	'reserved_21',0,1
	.word	564
	.byte	3,0,2,35,2,20
	.byte	'SYNCHYST',0,1
	.word	564
	.byte	3,5,2,35,3,20
	.byte	'reserved_27',0,1
	.word	564
	.byte	1,4,2,35,3,20
	.byte	'SYNCMUXSEL',0,1
	.word	564
	.byte	2,2,2,35,3,20
	.byte	'reserved_30',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'LCK',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCTRL11_Bits',0,9,248,3,3
	.word	19880
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCTRL2_Bits',0,9,251,3,16,4,20
	.byte	'LPBNDOFFSET',0,1
	.word	564
	.byte	4,4,2,35,0,20
	.byte	'LPBNDWIDTH',0,1
	.word	564
	.byte	4,0,2,35,0,20
	.byte	'LPLPFCOEFF',0,1
	.word	564
	.byte	4,4,2,35,1,20
	.byte	'reserved_12',0,1
	.word	564
	.byte	4,0,2,35,1,20
	.byte	'SDFREQLP',0,2
	.word	1753
	.byte	12,4,2,35,2,20
	.byte	'reserved_28',0,1
	.word	564
	.byte	2,2,2,35,3,20
	.byte	'EVRCMOD',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'LCK',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCTRL2_Bits',0,9,133,4,3
	.word	20178
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCTRL3_Bits',0,9,136,4,16,4,20
	.byte	'M1TOFF',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'M1TON',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'M1S0COEFF',0,1
	.word	564
	.byte	4,4,2,35,2,20
	.byte	'M1DEADBD',0,1
	.word	564
	.byte	2,2,2,35,2,20
	.byte	'M1ADCZB',0,1
	.word	564
	.byte	2,0,2,35,2,20
	.byte	'M1SKIP',0,1
	.word	564
	.byte	4,4,2,35,3,20
	.byte	'reserved_28',0,1
	.word	564
	.byte	4,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCTRL3_Bits',0,9,145,4,3
	.word	20410
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCTRL4_Bits',0,9,148,4,16,4,20
	.byte	'VOKCFG',0,1
	.word	564
	.byte	6,2,2,35,0,20
	.byte	'reserved_6',0,2
	.word	1753
	.byte	10,0,2,35,0,20
	.byte	'SDFREQST',0,2
	.word	1753
	.byte	12,4,2,35,2,20
	.byte	'reserved_28',0,1
	.word	564
	.byte	4,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCTRL4_Bits',0,9,154,4,3
	.word	20611
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCTRL5_Bits',0,9,157,4,16,4,20
	.byte	'M2TOFF',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'M2TON',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'M2S0COEFF',0,1
	.word	564
	.byte	4,4,2,35,2,20
	.byte	'M2DEADBD',0,1
	.word	564
	.byte	2,2,2,35,2,20
	.byte	'M2ADCZB',0,1
	.word	564
	.byte	2,0,2,35,2,20
	.byte	'M2SKIP',0,1
	.word	564
	.byte	4,4,2,35,3,20
	.byte	'reserved_28',0,1
	.word	564
	.byte	4,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCTRL5_Bits',0,9,166,4,3
	.word	20759
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCTRL6_Bits',0,9,169,4,16,4,20
	.byte	'SVINTH',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'SVOTH',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'SINCLO',0,1
	.word	564
	.byte	3,5,2,35,2,20
	.byte	'reserved_19',0,1
	.word	564
	.byte	1,4,2,35,2,20
	.byte	'SINCHI',0,1
	.word	564
	.byte	3,1,2,35,2,20
	.byte	'reserved_23',0,2
	.word	1753
	.byte	8,1,2,35,2,20
	.byte	'LCK',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCTRL6_Bits',0,9,178,4,3
	.word	20960
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCTRL7_Bits',0,9,181,4,16,4,20
	.byte	'DRVNI',0,1
	.word	564
	.byte	2,6,2,35,0,20
	.byte	'DRVPCBF',0,1
	.word	564
	.byte	2,4,2,35,0,20
	.byte	'DRVP',0,1
	.word	564
	.byte	4,0,2,35,0,20
	.byte	'DRVSLOMODE',0,1
	.word	564
	.byte	2,6,2,35,1,20
	.byte	'reserved_10',0,1
	.word	564
	.byte	6,0,2,35,1,20
	.byte	'DRVSPR',0,1
	.word	564
	.byte	8,0,2,35,2,20
	.byte	'SYNCDIVFAC',0,1
	.word	564
	.byte	3,5,2,35,3,20
	.byte	'reserved_27',0,1
	.word	564
	.byte	4,1,2,35,3,20
	.byte	'LCK',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCTRL7_Bits',0,9,192,4,3
	.word	21157
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCTRL8_Bits',0,9,195,4,16,4,20
	.byte	'FBADCOFFS',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'FBADCSMP',0,1
	.word	564
	.byte	6,2,2,35,1,20
	.byte	'reserved_14',0,1
	.word	564
	.byte	2,0,2,35,1,20
	.byte	'FBADCBLNK',0,1
	.word	564
	.byte	2,6,2,35,2,20
	.byte	'reserved_18',0,1
	.word	564
	.byte	2,4,2,35,2,20
	.byte	'FBADCLPF',0,1
	.word	564
	.byte	2,2,2,35,2,20
	.byte	'reserved_22',0,1
	.word	564
	.byte	2,0,2,35,2,20
	.byte	'FBADCERR',0,1
	.word	564
	.byte	2,6,2,35,3,20
	.byte	'reserved_26',0,1
	.word	564
	.byte	2,4,2,35,3,20
	.byte	'FBADCLSB',0,1
	.word	564
	.byte	1,3,2,35,3,20
	.byte	'reserved_29',0,1
	.word	564
	.byte	2,1,2,35,3,20
	.byte	'LCK',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCTRL8_Bits',0,9,209,4,3
	.word	21397
	.byte	19
	.byte	'_Ifx_PMS_EVRSDCTRL9_Bits',0,9,212,4,16,4,20
	.byte	'FFADCOFFS',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'FFADCLPF',0,1
	.word	564
	.byte	3,5,2,35,1,20
	.byte	'reserved_11',0,4
	.word	2315
	.byte	20,1,2,35,0,20
	.byte	'LCK',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDCTRL9_Bits',0,9,218,4,3
	.word	21714
	.byte	19
	.byte	'_Ifx_PMS_EVRSDSTAT0_Bits',0,9,221,4,16,4,20
	.byte	'ADCFBCV',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'reserved_8',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'DPWMOUT',0,2
	.word	1753
	.byte	12,4,2,35,2,20
	.byte	'reserved_28',0,1
	.word	564
	.byte	4,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSDSTAT0_Bits',0,9,227,4,3
	.word	21858
	.byte	19
	.byte	'_Ifx_PMS_EVRSTAT_Bits',0,9,230,4,16,4,20
	.byte	'EVRC',0,1
	.word	564
	.byte	1,7,2,35,0,20
	.byte	'OVC',0,1
	.word	564
	.byte	1,6,2,35,0,20
	.byte	'EVR33',0,1
	.word	564
	.byte	1,5,2,35,0,20
	.byte	'OV33',0,1
	.word	564
	.byte	1,4,2,35,0,20
	.byte	'OVSWD',0,1
	.word	564
	.byte	1,3,2,35,0,20
	.byte	'UVC',0,1
	.word	564
	.byte	1,2,2,35,0,20
	.byte	'UV33',0,1
	.word	564
	.byte	1,1,2,35,0,20
	.byte	'UVSWD',0,1
	.word	564
	.byte	1,0,2,35,0,20
	.byte	'SYNCLCK',0,1
	.word	564
	.byte	1,7,2,35,1,20
	.byte	'EVR33VOK',0,1
	.word	564
	.byte	1,6,2,35,1,20
	.byte	'reserved_10',0,1
	.word	564
	.byte	3,3,2,35,1,20
	.byte	'RSTC',0,1
	.word	564
	.byte	1,2,2,35,1,20
	.byte	'RST33',0,1
	.word	564
	.byte	1,1,2,35,1,20
	.byte	'RSTSWD',0,1
	.word	564
	.byte	1,0,2,35,1,20
	.byte	'EVRCSHLV',0,1
	.word	564
	.byte	1,7,2,35,2,20
	.byte	'EVRCSHHV',0,1
	.word	564
	.byte	1,6,2,35,2,20
	.byte	'EVR33SHLV',0,1
	.word	564
	.byte	1,5,2,35,2,20
	.byte	'EVR33SHHV',0,1
	.word	564
	.byte	1,4,2,35,2,20
	.byte	'SWDLVL',0,1
	.word	564
	.byte	1,3,2,35,2,20
	.byte	'SDVOK',0,1
	.word	564
	.byte	1,2,2,35,2,20
	.byte	'EVRCMOD',0,1
	.word	564
	.byte	2,0,2,35,2,20
	.byte	'OVPRE',0,1
	.word	564
	.byte	1,7,2,35,3,20
	.byte	'OVSB',0,1
	.word	564
	.byte	1,6,2,35,3,20
	.byte	'OVDDM',0,1
	.word	564
	.byte	1,5,2,35,3,20
	.byte	'UVPRE',0,1
	.word	564
	.byte	1,4,2,35,3,20
	.byte	'UVSB',0,1
	.word	564
	.byte	1,3,2,35,3,20
	.byte	'UVDDM',0,1
	.word	564
	.byte	1,2,2,35,3,20
	.byte	'reserved_30',0,1
	.word	564
	.byte	2,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRSTAT_Bits',0,9,132,5,3
	.word	22006
	.byte	19
	.byte	'_Ifx_PMS_EVRTRIM_Bits',0,9,135,5,16,4,20
	.byte	'EVR33VOUTSEL',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'SDVOUTSEL',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'EVR33VOUTTRIM',0,1
	.word	564
	.byte	6,2,2,35,2,20
	.byte	'reserved_22',0,1
	.word	564
	.byte	2,0,2,35,2,20
	.byte	'SDVOUTTRIM',0,1
	.word	564
	.byte	6,2,2,35,3,20
	.byte	'SLCK',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'LCK',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRTRIM_Bits',0,9,144,5,3
	.word	22566
	.byte	19
	.byte	'_Ifx_PMS_EVRTRIMSTAT_Bits',0,9,147,5,16,4,20
	.byte	'EVR33VOUTSEL',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'SDVOUTSEL',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'EVR33VOUTTRIM',0,1
	.word	564
	.byte	6,2,2,35,2,20
	.byte	'reserved_22',0,1
	.word	564
	.byte	2,0,2,35,2,20
	.byte	'SDVOUTTRIM',0,1
	.word	564
	.byte	6,2,2,35,3,20
	.byte	'reserved_30',0,1
	.word	564
	.byte	2,0,2,35,3,0,18
	.byte	'Ifx_PMS_EVRTRIMSTAT_Bits',0,9,155,5,3
	.word	22771
	.byte	19
	.byte	'_Ifx_PMS_HSMOVMON_Bits',0,9,158,5,16,4,20
	.byte	'EVRCOVVAL',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'EVR33OVVAL',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'SWDOVVAL',0,1
	.word	564
	.byte	8,0,2,35,2,20
	.byte	'EVRCOFF',0,1
	.word	564
	.byte	1,7,2,35,3,20
	.byte	'EVR33OFF',0,1
	.word	564
	.byte	1,6,2,35,3,20
	.byte	'SWDOFF',0,1
	.word	564
	.byte	1,5,2,35,3,20
	.byte	'reserved_27',0,1
	.word	564
	.byte	4,1,2,35,3,20
	.byte	'SLCK',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_HSMOVMON_Bits',0,9,168,5,3
	.word	22976
	.byte	19
	.byte	'_Ifx_PMS_HSMUVMON_Bits',0,9,171,5,16,4,20
	.byte	'EVRCUVVAL',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'EVR33UVVAL',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'SWDUVVAL',0,1
	.word	564
	.byte	8,0,2,35,2,20
	.byte	'EVRCOFF',0,1
	.word	564
	.byte	1,7,2,35,3,20
	.byte	'EVR33OFF',0,1
	.word	564
	.byte	1,6,2,35,3,20
	.byte	'SWDOFF',0,1
	.word	564
	.byte	1,5,2,35,3,20
	.byte	'HSMFIL',0,1
	.word	564
	.byte	4,1,2,35,3,20
	.byte	'SLCK',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_HSMUVMON_Bits',0,9,181,5,3
	.word	23196
	.byte	19
	.byte	'_Ifx_PMS_ID_Bits',0,9,184,5,16,4,20
	.byte	'MODREV',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'MODTYPE',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'MODNUMBER',0,2
	.word	1753
	.byte	16,0,2,35,2,0,18
	.byte	'Ifx_PMS_ID_Bits',0,9,189,5,3
	.word	23411
	.byte	19
	.byte	'_Ifx_PMS_MONBISTCTRL_Bits',0,9,192,5,16,4,20
	.byte	'TSTEN',0,1
	.word	564
	.byte	1,7,2,35,0,20
	.byte	'TSTCLR',0,1
	.word	564
	.byte	1,6,2,35,0,20
	.byte	'reserved_2',0,4
	.word	2315
	.byte	28,2,2,35,0,20
	.byte	'BITPROT',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'reserved_31',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_MONBISTCTRL_Bits',0,9,199,5,3
	.word	23518
	.byte	19
	.byte	'_Ifx_PMS_MONBISTSTAT_Bits',0,9,202,5,16,4,20
	.byte	'TSTOK',0,1
	.word	564
	.byte	1,7,2,35,0,20
	.byte	'reserved_1',0,1
	.word	564
	.byte	1,6,2,35,0,20
	.byte	'TSTRUN',0,1
	.word	564
	.byte	1,5,2,35,0,20
	.byte	'TSTDONE',0,1
	.word	564
	.byte	1,4,2,35,0,20
	.byte	'SMUERR',0,1
	.word	564
	.byte	1,3,2,35,0,20
	.byte	'PMSERR',0,1
	.word	564
	.byte	1,2,2,35,0,20
	.byte	'reserved_6',0,4
	.word	2315
	.byte	26,0,2,35,0,0,18
	.byte	'Ifx_PMS_MONBISTSTAT_Bits',0,9,211,5,3
	.word	23684
	.byte	19
	.byte	'_Ifx_PMS_MONCTRL_Bits',0,9,214,5,16,4,20
	.byte	'EVRCOVMOD',0,1
	.word	564
	.byte	2,6,2,35,0,20
	.byte	'PREOVMOD',0,1
	.word	564
	.byte	2,4,2,35,0,20
	.byte	'EVRCUVMOD',0,1
	.word	564
	.byte	2,2,2,35,0,20
	.byte	'PREUVMOD',0,1
	.word	564
	.byte	2,0,2,35,0,20
	.byte	'EVR33OVMOD',0,1
	.word	564
	.byte	2,6,2,35,1,20
	.byte	'VDDMOVMOD',0,1
	.word	564
	.byte	2,4,2,35,1,20
	.byte	'EVR33UVMOD',0,1
	.word	564
	.byte	2,2,2,35,1,20
	.byte	'VDDMUVMOD',0,1
	.word	564
	.byte	2,0,2,35,1,20
	.byte	'SWDOVMOD',0,1
	.word	564
	.byte	2,6,2,35,2,20
	.byte	'SBOVMOD',0,1
	.word	564
	.byte	2,4,2,35,2,20
	.byte	'SWDUVMOD',0,1
	.word	564
	.byte	2,2,2,35,2,20
	.byte	'SBUVMOD',0,1
	.word	564
	.byte	2,0,2,35,2,20
	.byte	'reserved_24',0,1
	.word	564
	.byte	6,2,2,35,3,20
	.byte	'SLCK',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'reserved_31',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_MONCTRL_Bits',0,9,231,5,3
	.word	23885
	.byte	19
	.byte	'_Ifx_PMS_MONFILT_Bits',0,9,234,5,16,4,20
	.byte	'EVRCFIL',0,1
	.word	564
	.byte	4,4,2,35,0,20
	.byte	'PREFIL',0,1
	.word	564
	.byte	4,0,2,35,0,20
	.byte	'EVR33FIL',0,1
	.word	564
	.byte	4,4,2,35,1,20
	.byte	'VDDMFIL',0,1
	.word	564
	.byte	4,0,2,35,1,20
	.byte	'SWDFIL',0,1
	.word	564
	.byte	4,4,2,35,2,20
	.byte	'SBFIL',0,1
	.word	564
	.byte	4,0,2,35,2,20
	.byte	'reserved_24',0,1
	.word	564
	.byte	5,3,2,35,3,20
	.byte	'CLRFIL',0,1
	.word	564
	.byte	1,2,2,35,3,20
	.byte	'SLCK',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'reserved_31',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_MONFILT_Bits',0,9,246,5,3
	.word	24252
	.byte	19
	.byte	'_Ifx_PMS_MONSTAT1_Bits',0,9,249,5,16,4,20
	.byte	'ADCCV',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'ADC33V',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'ADCSWDV',0,1
	.word	564
	.byte	8,0,2,35,2,20
	.byte	'ACTVCNT',0,1
	.word	564
	.byte	6,2,2,35,3,20
	.byte	'reserved_30',0,1
	.word	564
	.byte	2,0,2,35,3,0,18
	.byte	'Ifx_PMS_MONSTAT1_Bits',0,9,128,6,3
	.word	24502
	.byte	19
	.byte	'_Ifx_PMS_MONSTAT2_Bits',0,9,131,6,16,4,20
	.byte	'ADCPRE',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'ADCSB',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'ADCVDDM',0,1
	.word	564
	.byte	8,0,2,35,2,20
	.byte	'reserved_24',0,1
	.word	564
	.byte	8,0,2,35,3,0,18
	.byte	'Ifx_PMS_MONSTAT2_Bits',0,9,137,6,3
	.word	24659
	.byte	19
	.byte	'_Ifx_PMS_OTSC0_Bits',0,9,140,6,16,4,20
	.byte	'B0LAM',0,1
	.word	564
	.byte	4,4,2,35,0,20
	.byte	'reserved_4',0,1
	.word	564
	.byte	4,0,2,35,0,20
	.byte	'B0HAM',0,1
	.word	564
	.byte	4,4,2,35,1,20
	.byte	'reserved_12',0,1
	.word	564
	.byte	4,0,2,35,1,20
	.byte	'B1LAM',0,1
	.word	564
	.byte	4,4,2,35,2,20
	.byte	'reserved_20',0,1
	.word	564
	.byte	4,0,2,35,2,20
	.byte	'B1HAM',0,1
	.word	564
	.byte	4,4,2,35,3,20
	.byte	'reserved_28',0,1
	.word	564
	.byte	4,0,2,35,3,0,18
	.byte	'Ifx_PMS_OTSC0_Bits',0,9,150,6,3
	.word	24797
	.byte	19
	.byte	'_Ifx_PMS_OTSC1_Bits',0,9,153,6,16,4,20
	.byte	'B0EC',0,1
	.word	564
	.byte	4,4,2,35,0,20
	.byte	'reserved_4',0,1
	.word	564
	.byte	4,0,2,35,0,20
	.byte	'B1EC',0,1
	.word	564
	.byte	4,4,2,35,1,20
	.byte	'reserved_12',0,1
	.word	564
	.byte	4,0,2,35,1,20
	.byte	'DMONAD',0,1
	.word	564
	.byte	8,0,2,35,2,20
	.byte	'SMCDBG',0,1
	.word	564
	.byte	8,0,2,35,3,0,18
	.byte	'Ifx_PMS_OTSC1_Bits',0,9,161,6,3
	.word	25011
	.byte	19
	.byte	'_Ifx_PMS_OTSS_Bits',0,9,164,6,16,4,20
	.byte	'OTGB0',0,1
	.word	564
	.byte	4,4,2,35,0,20
	.byte	'reserved_4',0,1
	.word	564
	.byte	4,0,2,35,0,20
	.byte	'OTGB1',0,1
	.word	564
	.byte	4,4,2,35,1,20
	.byte	'reserved_12',0,1
	.word	564
	.byte	4,0,2,35,1,20
	.byte	'reserved_16',0,2
	.word	1753
	.byte	16,0,2,35,2,0,18
	.byte	'Ifx_PMS_OTSS_Bits',0,9,171,6,3
	.word	25179
	.byte	19
	.byte	'_Ifx_PMS_OVMON_Bits',0,9,174,6,16,4,20
	.byte	'EVRCOVVAL',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'EVR33OVVAL',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'SWDOVVAL',0,1
	.word	564
	.byte	8,0,2,35,2,20
	.byte	'reserved_24',0,1
	.word	564
	.byte	6,2,2,35,3,20
	.byte	'SLCK',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'reserved_31',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_OVMON_Bits',0,9,182,6,3
	.word	25334
	.byte	19
	.byte	'_Ifx_PMS_OVMON2_Bits',0,9,185,6,16,4,20
	.byte	'PREOVVAL',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'VDDMOVVAL',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'SBOVVAL',0,1
	.word	564
	.byte	8,0,2,35,2,20
	.byte	'reserved_24',0,1
	.word	564
	.byte	6,2,2,35,3,20
	.byte	'SLCK',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'reserved_31',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_OVMON2_Bits',0,9,193,6,3
	.word	25514
	.byte	19
	.byte	'_Ifx_PMS_PMSIEN_Bits',0,9,196,6,16,4,20
	.byte	'OVSWD',0,1
	.word	564
	.byte	1,7,2,35,0,20
	.byte	'UVSWD',0,1
	.word	564
	.byte	1,6,2,35,0,20
	.byte	'OV33',0,1
	.word	564
	.byte	1,5,2,35,0,20
	.byte	'UV33',0,1
	.word	564
	.byte	1,4,2,35,0,20
	.byte	'OVC',0,1
	.word	564
	.byte	1,3,2,35,0,20
	.byte	'UVC',0,1
	.word	564
	.byte	1,2,2,35,0,20
	.byte	'OVPRE',0,1
	.word	564
	.byte	1,1,2,35,0,20
	.byte	'UVPRE',0,1
	.word	564
	.byte	1,0,2,35,0,20
	.byte	'OVDDM',0,1
	.word	564
	.byte	1,7,2,35,1,20
	.byte	'UVDDM',0,1
	.word	564
	.byte	1,6,2,35,1,20
	.byte	'OVSB',0,1
	.word	564
	.byte	1,5,2,35,1,20
	.byte	'UVSB',0,1
	.word	564
	.byte	1,4,2,35,1,20
	.byte	'reserved_12',0,1
	.word	564
	.byte	4,0,2,35,1,20
	.byte	'EVRCMOD',0,1
	.word	564
	.byte	1,7,2,35,2,20
	.byte	'SDVOK',0,1
	.word	564
	.byte	1,6,2,35,2,20
	.byte	'SYNCLCK',0,1
	.word	564
	.byte	1,5,2,35,2,20
	.byte	'SWDLVL',0,1
	.word	564
	.byte	1,4,2,35,2,20
	.byte	'reserved_20',0,1
	.word	564
	.byte	1,3,2,35,2,20
	.byte	'WUTWKP',0,1
	.word	564
	.byte	1,2,2,35,2,20
	.byte	'ESR0WKP',0,1
	.word	564
	.byte	1,1,2,35,2,20
	.byte	'ESR1WKP',0,1
	.word	564
	.byte	1,0,2,35,2,20
	.byte	'PINAWKP',0,1
	.word	564
	.byte	1,7,2,35,3,20
	.byte	'PINBWKP',0,1
	.word	564
	.byte	1,6,2,35,3,20
	.byte	'SCRINT',0,1
	.word	564
	.byte	1,5,2,35,3,20
	.byte	'SCRRST',0,1
	.word	564
	.byte	1,4,2,35,3,20
	.byte	'SCRECC',0,1
	.word	564
	.byte	1,3,2,35,3,20
	.byte	'SCRWDT',0,1
	.word	564
	.byte	1,2,2,35,3,20
	.byte	'reserved_30',0,1
	.word	564
	.byte	2,0,2,35,3,0,18
	.byte	'Ifx_PMS_PMSIEN_Bits',0,9,226,6,3
	.word	25693
	.byte	19
	.byte	'_Ifx_PMS_PMSWCR0_Bits',0,9,229,6,16,4,20
	.byte	'reserved_0',0,1
	.word	564
	.byte	2,6,2,35,0,20
	.byte	'VEXTSTBYEN',0,1
	.word	564
	.byte	1,5,2,35,0,20
	.byte	'VDDSTBYEN',0,1
	.word	564
	.byte	1,4,2,35,0,20
	.byte	'ESR0DFEN',0,1
	.word	564
	.byte	1,3,2,35,0,20
	.byte	'ESR0EDCON',0,1
	.word	564
	.byte	2,1,2,35,0,20
	.byte	'ESR1DFEN',0,1
	.word	564
	.byte	1,0,2,35,0,20
	.byte	'ESR1EDCON',0,1
	.word	564
	.byte	2,6,2,35,1,20
	.byte	'PINADFEN',0,1
	.word	564
	.byte	1,5,2,35,1,20
	.byte	'PINAEDCON',0,1
	.word	564
	.byte	2,3,2,35,1,20
	.byte	'PINBDFEN',0,1
	.word	564
	.byte	1,2,2,35,1,20
	.byte	'PINBEDCON',0,1
	.word	564
	.byte	2,0,2,35,1,20
	.byte	'STBYRAMSEL',0,1
	.word	564
	.byte	3,5,2,35,2,20
	.byte	'reserved_19',0,1
	.word	564
	.byte	1,4,2,35,2,20
	.byte	'BLNKFIL',0,1
	.word	564
	.byte	4,0,2,35,2,20
	.byte	'ESR0WKEN',0,1
	.word	564
	.byte	1,7,2,35,3,20
	.byte	'ESR1WKEN',0,1
	.word	564
	.byte	1,6,2,35,3,20
	.byte	'PINAWKEN',0,1
	.word	564
	.byte	1,5,2,35,3,20
	.byte	'PINBWKEN',0,1
	.word	564
	.byte	1,4,2,35,3,20
	.byte	'PWRWKEN',0,1
	.word	564
	.byte	1,3,2,35,3,20
	.byte	'SCRWKEN',0,1
	.word	564
	.byte	1,2,2,35,3,20
	.byte	'PORSTWKEN',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'WUTWKEN',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_PMSWCR0_Bits',0,9,253,6,3
	.word	26254
	.byte	19
	.byte	'_Ifx_PMS_PMSWCR2_Bits',0,9,128,7,16,4,20
	.byte	'SCRINT',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'reserved_8',0,1
	.word	564
	.byte	1,7,2,35,1,20
	.byte	'SCRECC',0,1
	.word	564
	.byte	1,6,2,35,1,20
	.byte	'SCRWDT',0,1
	.word	564
	.byte	1,5,2,35,1,20
	.byte	'SCRRST',0,1
	.word	564
	.byte	1,4,2,35,1,20
	.byte	'reserved_12',0,1
	.word	564
	.byte	4,0,2,35,1,20
	.byte	'TCINT',0,1
	.word	564
	.byte	8,0,2,35,2,20
	.byte	'TCINTREQ',0,1
	.word	564
	.byte	1,7,2,35,3,20
	.byte	'SMURST',0,1
	.word	564
	.byte	1,6,2,35,3,20
	.byte	'RST',0,1
	.word	564
	.byte	1,5,2,35,3,20
	.byte	'reserved_27',0,1
	.word	564
	.byte	5,0,2,35,3,0,18
	.byte	'Ifx_PMS_PMSWCR2_Bits',0,9,141,7,3
	.word	26764
	.byte	19
	.byte	'_Ifx_PMS_PMSWCR3_Bits',0,9,144,7,16,4,20
	.byte	'WUTREL',0,4
	.word	2315
	.byte	24,8,2,35,0,20
	.byte	'reserved_24',0,1
	.word	564
	.byte	3,5,2,35,3,20
	.byte	'WUTEN',0,1
	.word	564
	.byte	1,4,2,35,3,20
	.byte	'BUSY',0,1
	.word	564
	.byte	1,3,2,35,3,20
	.byte	'WUTDIV',0,1
	.word	564
	.byte	1,2,2,35,3,20
	.byte	'WUTMODE',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'reserved_31',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_PMSWCR3_Bits',0,9,153,7,3
	.word	27033
	.byte	19
	.byte	'_Ifx_PMS_PMSWCR4_Bits',0,9,156,7,16,4,20
	.byte	'BPSCRSTREQ',0,1
	.word	564
	.byte	1,7,2,35,0,20
	.byte	'SCRSTREQ',0,1
	.word	564
	.byte	1,6,2,35,0,20
	.byte	'reserved_2',0,1
	.word	564
	.byte	2,4,2,35,0,20
	.byte	'BPPORSTREQ',0,1
	.word	564
	.byte	1,3,2,35,0,20
	.byte	'PORSTREQ',0,1
	.word	564
	.byte	1,2,2,35,0,20
	.byte	'SCRCLKSEL',0,1
	.word	564
	.byte	1,1,2,35,0,20
	.byte	'reserved_7',0,2
	.word	1753
	.byte	9,0,2,35,0,20
	.byte	'SCRCFG',0,1
	.word	564
	.byte	8,0,2,35,2,20
	.byte	'BPSCREN',0,1
	.word	564
	.byte	1,7,2,35,3,20
	.byte	'SCREN',0,1
	.word	564
	.byte	1,6,2,35,3,20
	.byte	'reserved_26',0,1
	.word	564
	.byte	6,0,2,35,3,0,18
	.byte	'Ifx_PMS_PMSWCR4_Bits',0,9,169,7,3
	.word	27226
	.byte	19
	.byte	'_Ifx_PMS_PMSWCR5_Bits',0,9,172,7,16,4,20
	.byte	'BPTRISTREQ',0,1
	.word	564
	.byte	1,7,2,35,0,20
	.byte	'TRISTREQ',0,1
	.word	564
	.byte	1,6,2,35,0,20
	.byte	'ESR0TRIST',0,1
	.word	564
	.byte	1,5,2,35,0,20
	.byte	'reserved_3',0,1
	.word	564
	.byte	1,4,2,35,0,20
	.byte	'PORSTDF',0,1
	.word	564
	.byte	1,3,2,35,0,20
	.byte	'reserved_5',0,1
	.word	564
	.byte	1,2,2,35,0,20
	.byte	'DCDCSYNCO',0,1
	.word	564
	.byte	1,1,2,35,0,20
	.byte	'reserved_7',0,4
	.word	2315
	.byte	25,0,2,35,0,0,18
	.byte	'Ifx_PMS_PMSWCR5_Bits',0,9,182,7,3
	.word	27511
	.byte	19
	.byte	'_Ifx_PMS_PMSWSTAT_Bits',0,9,185,7,16,4,20
	.byte	'reserved_0',0,1
	.word	564
	.byte	1,7,2,35,0,20
	.byte	'HWCFGEVR',0,1
	.word	564
	.byte	2,5,2,35,0,20
	.byte	'reserved_3',0,1
	.word	564
	.byte	1,4,2,35,0,20
	.byte	'HWCFG4',0,1
	.word	564
	.byte	1,3,2,35,0,20
	.byte	'HWCFG5',0,1
	.word	564
	.byte	1,2,2,35,0,20
	.byte	'TRIST',0,1
	.word	564
	.byte	1,1,2,35,0,20
	.byte	'TESTMODE',0,1
	.word	564
	.byte	1,0,2,35,0,20
	.byte	'ESR0TRIST',0,1
	.word	564
	.byte	1,7,2,35,1,20
	.byte	'reserved_9',0,1
	.word	564
	.byte	2,5,2,35,1,20
	.byte	'PORSTDF',0,1
	.word	564
	.byte	1,4,2,35,1,20
	.byte	'reserved_12',0,1
	.word	564
	.byte	4,0,2,35,1,20
	.byte	'SCR',0,1
	.word	564
	.byte	1,7,2,35,2,20
	.byte	'SCRST',0,1
	.word	564
	.byte	1,6,2,35,2,20
	.byte	'SCRCLK',0,1
	.word	564
	.byte	1,5,2,35,2,20
	.byte	'PORSTREQ',0,1
	.word	564
	.byte	1,4,2,35,2,20
	.byte	'reserved_20',0,1
	.word	564
	.byte	4,0,2,35,2,20
	.byte	'WUTEN',0,1
	.word	564
	.byte	1,7,2,35,3,20
	.byte	'WUTRUN',0,1
	.word	564
	.byte	1,6,2,35,3,20
	.byte	'WUTMODE',0,1
	.word	564
	.byte	1,5,2,35,3,20
	.byte	'reserved_27',0,1
	.word	564
	.byte	1,4,2,35,3,20
	.byte	'ESR0INT',0,1
	.word	564
	.byte	1,3,2,35,3,20
	.byte	'ESR1INT',0,1
	.word	564
	.byte	1,2,2,35,3,20
	.byte	'PINAINT',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'PINBINT',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_PMSWSTAT_Bits',0,9,211,7,3
	.word	27739
	.byte	19
	.byte	'_Ifx_PMS_PMSWSTAT2_Bits',0,9,214,7,16,4,20
	.byte	'ESR0WKP',0,1
	.word	564
	.byte	1,7,2,35,0,20
	.byte	'ESR1WKP',0,1
	.word	564
	.byte	1,6,2,35,0,20
	.byte	'PINAWKP',0,1
	.word	564
	.byte	1,5,2,35,0,20
	.byte	'PINBWKP',0,1
	.word	564
	.byte	1,4,2,35,0,20
	.byte	'PWRWKP',0,1
	.word	564
	.byte	1,3,2,35,0,20
	.byte	'SCRWKP',0,1
	.word	564
	.byte	1,2,2,35,0,20
	.byte	'PORSTWKP',0,1
	.word	564
	.byte	1,1,2,35,0,20
	.byte	'WUTWKP',0,1
	.word	564
	.byte	1,0,2,35,0,20
	.byte	'ESR0OVRUN',0,1
	.word	564
	.byte	1,7,2,35,1,20
	.byte	'ESR1OVRUN',0,1
	.word	564
	.byte	1,6,2,35,1,20
	.byte	'PINAOVRUN',0,1
	.word	564
	.byte	1,5,2,35,1,20
	.byte	'PINBOVRUN',0,1
	.word	564
	.byte	1,4,2,35,1,20
	.byte	'VDDSTBYEN',0,1
	.word	564
	.byte	1,3,2,35,1,20
	.byte	'SCROVRUN',0,1
	.word	564
	.byte	1,2,2,35,1,20
	.byte	'PORSTOVRUN',0,1
	.word	564
	.byte	1,1,2,35,1,20
	.byte	'WUTOVRUN',0,1
	.word	564
	.byte	1,0,2,35,1,20
	.byte	'STBYRAM',0,1
	.word	564
	.byte	3,5,2,35,2,20
	.byte	'VEXTSTBYEN',0,1
	.word	564
	.byte	1,4,2,35,2,20
	.byte	'BLNKFIL',0,1
	.word	564
	.byte	4,0,2,35,2,20
	.byte	'ESR0WKEN',0,1
	.word	564
	.byte	1,7,2,35,3,20
	.byte	'ESR1WKEN',0,1
	.word	564
	.byte	1,6,2,35,3,20
	.byte	'PINAWKEN',0,1
	.word	564
	.byte	1,5,2,35,3,20
	.byte	'PINBWKEN',0,1
	.word	564
	.byte	1,4,2,35,3,20
	.byte	'PWRWKEN',0,1
	.word	564
	.byte	1,3,2,35,3,20
	.byte	'SCRWKEN',0,1
	.word	564
	.byte	1,2,2,35,3,20
	.byte	'PORSTWKEN',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'WUTWKEN',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_PMSWSTAT2_Bits',0,9,243,7,3
	.word	28268
	.byte	19
	.byte	'_Ifx_PMS_PMSWSTATCLR_Bits',0,9,246,7,16,4,20
	.byte	'ESR0WKPCLR',0,1
	.word	564
	.byte	1,7,2,35,0,20
	.byte	'ESR1WKPCLR',0,1
	.word	564
	.byte	1,6,2,35,0,20
	.byte	'PINAWKPCLR',0,1
	.word	564
	.byte	1,5,2,35,0,20
	.byte	'PINBWKPCLR',0,1
	.word	564
	.byte	1,4,2,35,0,20
	.byte	'PWRWKPCLR',0,1
	.word	564
	.byte	1,3,2,35,0,20
	.byte	'SCRWKPCLR',0,1
	.word	564
	.byte	1,2,2,35,0,20
	.byte	'PORSTWKPCLR',0,1
	.word	564
	.byte	1,1,2,35,0,20
	.byte	'WUTWKPCLR',0,1
	.word	564
	.byte	1,0,2,35,0,20
	.byte	'ESR0OVRUNCLR',0,1
	.word	564
	.byte	1,7,2,35,1,20
	.byte	'ESR1OVRUNCLR',0,1
	.word	564
	.byte	1,6,2,35,1,20
	.byte	'PINAOVRUNCLR',0,1
	.word	564
	.byte	1,5,2,35,1,20
	.byte	'PINBOVRUNCLR',0,1
	.word	564
	.byte	1,4,2,35,1,20
	.byte	'reserved_12',0,1
	.word	564
	.byte	1,3,2,35,1,20
	.byte	'SCROVRUNCLR',0,1
	.word	564
	.byte	1,2,2,35,1,20
	.byte	'PORSTOVRUNCLR',0,1
	.word	564
	.byte	1,1,2,35,1,20
	.byte	'WUTOVRUNCLR',0,1
	.word	564
	.byte	1,0,2,35,1,20
	.byte	'SCRSTCLR',0,1
	.word	564
	.byte	1,7,2,35,2,20
	.byte	'reserved_17',0,2
	.word	1753
	.byte	11,4,2,35,2,20
	.byte	'ESR0INTCLR',0,1
	.word	564
	.byte	1,3,2,35,3,20
	.byte	'ESR1INTCLR',0,1
	.word	564
	.byte	1,2,2,35,3,20
	.byte	'PINAINTCLR',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'PINBINTCLR',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_PMSWSTATCLR_Bits',0,9,142,8,3
	.word	28866
	.byte	19
	.byte	'_Ifx_PMS_PMSWUTCNT_Bits',0,9,145,8,16,4,20
	.byte	'WUTCNT',0,4
	.word	2315
	.byte	24,8,2,35,0,20
	.byte	'reserved_24',0,1
	.word	564
	.byte	8,0,2,35,3,0,18
	.byte	'Ifx_PMS_PMSWUTCNT_Bits',0,9,149,8,3
	.word	29428
	.byte	19
	.byte	'_Ifx_PMS_UVMON_Bits',0,9,152,8,16,4,20
	.byte	'EVRCUVVAL',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'EVR33UVVAL',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'SWDUVVAL',0,1
	.word	564
	.byte	8,0,2,35,2,20
	.byte	'reserved_24',0,1
	.word	564
	.byte	6,2,2,35,3,20
	.byte	'SLCK',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'reserved_31',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_UVMON_Bits',0,9,160,8,3
	.word	29532
	.byte	19
	.byte	'_Ifx_PMS_UVMON2_Bits',0,9,163,8,16,4,20
	.byte	'PREUVVAL',0,1
	.word	564
	.byte	8,0,2,35,0,20
	.byte	'VDDMUVVAL',0,1
	.word	564
	.byte	8,0,2,35,1,20
	.byte	'SBUVVAL',0,1
	.word	564
	.byte	8,0,2,35,2,20
	.byte	'VDDMLVLSEL',0,1
	.word	564
	.byte	6,2,2,35,3,20
	.byte	'SLCK',0,1
	.word	564
	.byte	1,1,2,35,3,20
	.byte	'reserved_31',0,1
	.word	564
	.byte	1,0,2,35,3,0,18
	.byte	'Ifx_PMS_UVMON2_Bits',0,9,171,8,3
	.word	29712
	.byte	21,9,179,8,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	12781
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_ACCEN0',0,9,184,8,3
	.word	29890
	.byte	21,9,187,8,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13338
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_ACCEN1',0,9,192,8,3
	.word	29954
	.byte	21,9,195,8,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13415
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_AGFSP_STDBY0',0,9,200,8,3
	.word	30018
	.byte	21,9,203,8,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	13845
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_AGFSP_STDBY1',0,9,208,8,3
	.word	30088
	.byte	21,9,211,8,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14248
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_AG_STDBY0',0,9,216,8,3
	.word	30158
	.byte	21,9,219,8,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	14672
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_AG_STDBY1',0,9,224,8,3
	.word	30225
	.byte	21,9,227,8,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15073
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_CMD_STDBY',0,9,232,8,3
	.word	30292
	.byte	21,9,235,8,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15269
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_DTSLIM',0,9,240,8,3
	.word	30359
	.byte	21,9,243,8,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15452
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_DTSSTAT',0,9,248,8,3
	.word	30423
	.byte	21,9,251,8,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15552
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVR33CON',0,9,128,9,3
	.word	30488
	.byte	21,9,131,9,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	15838
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRADCSTAT',0,9,136,9,3
	.word	30554
	.byte	21,9,139,9,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16076
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVROSCCTRL',0,9,144,9,3
	.word	30622
	.byte	21,9,147,9,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16294
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRRSTCON',0,9,152,9,3
	.word	30690
	.byte	21,9,155,9,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16585
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRRSTSTAT',0,9,160,9,3
	.word	30757
	.byte	21,9,163,9,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	16830
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCOEFF0',0,9,168,9,3
	.word	30825
	.byte	21,9,171,9,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17243
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCOEFF1',0,9,176,9,3
	.word	30894
	.byte	21,9,179,9,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17452
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCOEFF2',0,9,184,9,3
	.word	30963
	.byte	21,9,187,9,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	17846
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCOEFF3',0,9,192,9,3
	.word	31032
	.byte	21,9,195,9,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18067
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCOEFF4',0,9,200,9,3
	.word	31101
	.byte	21,9,203,9,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18461
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCOEFF5',0,9,208,9,3
	.word	31170
	.byte	21,9,211,9,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18682
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCOEFF6',0,9,216,9,3
	.word	31239
	.byte	21,9,219,9,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18844
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCOEFF7',0,9,224,9,3
	.word	31308
	.byte	21,9,227,9,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	18987
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCOEFF8',0,9,232,9,3
	.word	31377
	.byte	21,9,235,9,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19152
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCOEFF9',0,9,240,9,3
	.word	31446
	.byte	21,9,243,9,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19297
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCTRL0',0,9,248,9,3
	.word	31515
	.byte	21,9,251,9,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19465
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCTRL1',0,9,128,10,3
	.word	31583
	.byte	21,9,131,10,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19699
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCTRL10',0,9,136,10,3
	.word	31651
	.byte	21,9,139,10,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	19880
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCTRL11',0,9,144,10,3
	.word	31720
	.byte	21,9,147,10,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20178
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCTRL2',0,9,152,10,3
	.word	31789
	.byte	21,9,155,10,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20410
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCTRL3',0,9,160,10,3
	.word	31857
	.byte	21,9,163,10,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20611
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCTRL4',0,9,168,10,3
	.word	31925
	.byte	21,9,171,10,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20759
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCTRL5',0,9,176,10,3
	.word	31993
	.byte	21,9,179,10,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	20960
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCTRL6',0,9,184,10,3
	.word	32061
	.byte	21,9,187,10,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21157
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCTRL7',0,9,192,10,3
	.word	32129
	.byte	21,9,195,10,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21397
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCTRL8',0,9,200,10,3
	.word	32197
	.byte	21,9,203,10,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21714
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDCTRL9',0,9,208,10,3
	.word	32265
	.byte	21,9,211,10,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	21858
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSDSTAT0',0,9,216,10,3
	.word	32333
	.byte	21,9,219,10,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22006
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRSTAT',0,9,224,10,3
	.word	32401
	.byte	21,9,227,10,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22566
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRTRIM',0,9,232,10,3
	.word	32466
	.byte	21,9,235,10,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22771
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_EVRTRIMSTAT',0,9,240,10,3
	.word	32531
	.byte	21,9,243,10,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	22976
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_HSMOVMON',0,9,248,10,3
	.word	32600
	.byte	21,9,251,10,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23196
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_HSMUVMON',0,9,128,11,3
	.word	32666
	.byte	21,9,131,11,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23411
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_ID',0,9,136,11,3
	.word	32732
	.byte	21,9,139,11,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23518
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_MONBISTCTRL',0,9,144,11,3
	.word	32792
	.byte	21,9,147,11,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23684
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_MONBISTSTAT',0,9,152,11,3
	.word	32861
	.byte	21,9,155,11,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	23885
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_MONCTRL',0,9,160,11,3
	.word	32930
	.byte	21,9,163,11,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24252
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_MONFILT',0,9,168,11,3
	.word	32995
	.byte	21,9,171,11,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24502
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_MONSTAT1',0,9,176,11,3
	.word	33060
	.byte	21,9,179,11,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24659
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_MONSTAT2',0,9,184,11,3
	.word	33126
	.byte	21,9,187,11,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	24797
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_OTSC0',0,9,192,11,3
	.word	33192
	.byte	21,9,195,11,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25011
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_OTSC1',0,9,200,11,3
	.word	33255
	.byte	21,9,203,11,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25179
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_OTSS',0,9,208,11,3
	.word	33318
	.byte	21,9,211,11,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25334
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_OVMON',0,9,216,11,3
	.word	33380
	.byte	21,9,219,11,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25514
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_OVMON2',0,9,224,11,3
	.word	33443
	.byte	21,9,227,11,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	25693
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_PMSIEN',0,9,232,11,3
	.word	33507
	.byte	21,9,235,11,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26254
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_PMSWCR0',0,9,240,11,3
	.word	33571
	.byte	21,9,243,11,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	26764
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_PMSWCR2',0,9,248,11,3
	.word	33636
	.byte	21,9,251,11,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27033
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_PMSWCR3',0,9,128,12,3
	.word	33701
	.byte	21,9,131,12,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27226
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_PMSWCR4',0,9,136,12,3
	.word	33766
	.byte	21,9,139,12,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27511
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_PMSWCR5',0,9,144,12,3
	.word	33831
	.byte	21,9,147,12,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	27739
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_PMSWSTAT',0,9,152,12,3
	.word	33896
	.byte	21,9,155,12,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28268
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_PMSWSTAT2',0,9,160,12,3
	.word	33962
	.byte	21,9,163,12,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	28866
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_PMSWSTATCLR',0,9,168,12,3
	.word	34029
	.byte	21,9,171,12,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29428
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_PMSWUTCNT',0,9,176,12,3
	.word	34098
	.byte	21,9,179,12,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29532
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_UVMON',0,9,184,12,3
	.word	34165
	.byte	21,9,187,12,9,4,13
	.byte	'U',0
	.word	2315
	.byte	4,2,35,0,13
	.byte	'I',0
	.word	2354
	.byte	4,2,35,0,13
	.byte	'B',0
	.word	29712
	.byte	4,2,35,0,0,18
	.byte	'Ifx_PMS_UVMON2',0,9,192,12,3
	.word	34228
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L160:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,59,0,3,8,0,0,3,53,0,73,19,0,0,4,15,0,73,19,0,0,5,38,0
	.byte	73,19,0,0,6,36,0,3,8,11,15,62,15,0,0,7,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,8,5,0,3
	.byte	8,58,15,59,15,57,15,73,19,0,0,9,46,0,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,10,1,1,11
	.byte	15,73,19,0,0,11,33,0,47,15,0,0,12,19,1,58,15,59,15,57,15,11,15,0,0,13,13,0,3,8,73,19,11,15,56,9,0,0,14
	.byte	4,1,58,15,59,15,57,15,11,15,0,0,15,40,0,3,8,28,13,0,0,16,46,0,3,8,58,15,59,15,57,15,54,15,39,12,63,12
	.byte	60,12,0,0,17,21,0,54,15,0,0,18,22,0,3,8,58,15,59,15,57,15,73,19,0,0,19,19,1,3,8,58,15,59,15,57,15,11,15
	.byte	0,0,20,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,21,23,1,58,15,59,15,57,15,11,15,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L161:
	.word	.L628-.L627
.L627:
	.half	3
	.word	.L630-.L629
.L629:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\inc',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg',0,0
	.byte	'McalLib.h',0,1,0,0
	.byte	'Smu.h',0,2,0,0
	.byte	'SchM_Smu.h',0,3,0,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0
	.byte	'Platform_Types.h',0,4,0,0
	.byte	'Std_Types.h',0,4,0,0
	.byte	'Ifx_TypesReg.h',0,5,0,0
	.byte	'IfxSmu_regdef.h',0,5,0,0
	.byte	'IfxPms_regdef.h',0,5,0,0,0
.L630:
.L628:
	.sdecl	'.debug_info',debug,cluster('Smu_Init')
	.sect	'.debug_info'
.L162:
	.word	296
	.half	3
	.word	.L163
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L165,.L164
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_Init',0,1,187,12,16
	.word	.L301
	.byte	1,1,1
	.word	.L115,.L302,.L114
	.byte	4
	.byte	'ConfigPtr',0,1,189,12,31
	.word	.L303,.L304
	.byte	5
	.word	.L115,.L302
	.byte	6
	.byte	'RetVal',0,1,192,12,18
	.word	.L301,.L305
	.byte	6
	.byte	'Index',0,1,193,12,10
	.word	.L306,.L307
	.byte	6
	.byte	'CurrentCoreID',0,1,194,12,10
	.word	.L306,.L308
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_Init')
	.sect	'.debug_abbrev'
.L163:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_Init')
	.sect	'.debug_line'
.L164:
	.word	.L632-.L631
.L631:
	.half	3
	.word	.L634-.L633
.L633:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L634:
	.byte	5,16,7,0,5,2
	.word	.L115
	.byte	3,186,12,1,5,37,9
	.half	.L526-.L115
	.byte	3,33,1,5,5,9
	.half	.L525-.L526
	.byte	3,5,1,5,28,7,9
	.half	.L635-.L525
	.byte	3,61,1,5,9,9
	.half	.L527-.L635
	.byte	3,6,1,9
	.half	.L636-.L527
	.byte	3,6,1,9
	.half	.L637-.L636
	.byte	3,18,1,9
	.half	.L638-.L637
	.byte	3,7,1,9
	.half	.L639-.L638
	.byte	3,6,1,9
	.half	.L640-.L639
	.byte	3,5,1,9
	.half	.L641-.L640
	.byte	3,5,1,9
	.half	.L642-.L641
	.byte	3,5,1,9
	.half	.L643-.L642
	.byte	3,5,1,9
	.half	.L644-.L643
	.byte	3,5,1,5,19,9
	.half	.L645-.L644
	.byte	3,9,1,5,33,9
	.half	.L528-.L645
	.byte	1,5,64,9
	.half	.L646-.L528
	.byte	1,5,11,9
	.half	.L24-.L646
	.byte	3,8,1,5,71,9
	.half	.L647-.L24
	.byte	3,120,1,5,11,9
	.half	.L23-.L647
	.byte	3,8,1,5,64,9
	.half	.L648-.L23
	.byte	3,120,1,5,19,7,9
	.half	.L649-.L648
	.byte	3,17,1,5,60,9
	.half	.L650-.L649
	.byte	1,5,11,9
	.half	.L26-.L650
	.byte	3,7,1,5,67,9
	.half	.L651-.L26
	.byte	3,121,1,5,60,9
	.half	.L25-.L651
	.byte	1,5,9,7,9
	.half	.L652-.L25
	.byte	3,14,1,9
	.half	.L653-.L652
	.byte	3,6,1,9
	.half	.L654-.L653
	.byte	3,6,1,9
	.half	.L655-.L654
	.byte	3,8,1,5,16,9
	.half	.L656-.L655
	.byte	3,35,1,5,1,9
	.half	.L529-.L656
	.byte	3,29,1,5,14,7,9
	.half	.L22-.L529
	.byte	3,108,1,5,1,9
	.half	.L530-.L22
	.byte	3,20,1,7,9
	.half	.L166-.L530
	.byte	0,1,1
.L632:
	.sdecl	'.debug_ranges',debug,cluster('Smu_Init')
	.sect	'.debug_ranges'
.L165:
	.word	-1,.L115,0,.L166-.L115,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_DeInit')
	.sect	'.debug_info'
.L167:
	.word	275
	.half	3
	.word	.L168
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L170,.L169
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_DeInit',0,1,253,14,16
	.word	.L301
	.byte	1,1,1
	.word	.L117,.L309,.L116
	.byte	4
	.word	.L117,.L309
	.byte	5
	.byte	'RetVal',0,1,255,14,18
	.word	.L301,.L310
	.byte	5
	.byte	'Index',0,1,128,15,10
	.word	.L306,.L311
	.byte	5
	.byte	'CurrentCoreID',0,1,129,15,10
	.word	.L306,.L312
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_DeInit')
	.sect	'.debug_abbrev'
.L168:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_DeInit')
	.sect	'.debug_line'
.L169:
	.word	.L658-.L657
.L657:
	.half	3
	.word	.L660-.L659
.L659:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L660:
	.byte	5,35,7,0,5,2
	.word	.L117
	.byte	3,134,15,1,5,3,9
	.half	.L531-.L117
	.byte	3,6,1,5,7,7,9
	.half	.L661-.L531
	.byte	3,193,0,1,5,17,9
	.half	.L662-.L661
	.byte	3,10,1,5,22,9
	.half	.L532-.L662
	.byte	3,10,1,5,25,9
	.half	.L663-.L532
	.byte	3,1,1,5,27,9
	.half	.L664-.L663
	.byte	3,17,1,9
	.half	.L665-.L664
	.byte	3,1,1,5,31,9
	.half	.L666-.L665
	.byte	3,99,1,5,62,9
	.half	.L667-.L666
	.byte	1,5,12,9
	.half	.L31-.L667
	.byte	3,10,1,5,22,7,9
	.half	.L668-.L31
	.byte	3,1,1,5,11,7,9
	.half	.L32-.L668
	.byte	3,8,1,5,40,9
	.half	.L669-.L32
	.byte	3,2,1,5,17,9
	.half	.L33-.L669
	.byte	3,7,1,5,24,7,9
	.half	.L670-.L33
	.byte	3,1,1,5,11,7,9
	.half	.L35-.L670
	.byte	3,8,1,5,41,9
	.half	.L671-.L35
	.byte	3,2,1,5,11,9
	.half	.L36-.L671
	.byte	3,14,1,5,69,9
	.half	.L672-.L36
	.byte	3,75,1,5,11,9
	.half	.L30-.L672
	.byte	3,53,1,5,62,9
	.half	.L673-.L30
	.byte	3,75,1,5,17,7,9
	.half	.L674-.L673
	.byte	3,192,0,1,5,21,9
	.half	.L675-.L674
	.byte	3,5,1,5,58,9
	.half	.L676-.L675
	.byte	3,123,1,5,9,9
	.half	.L39-.L676
	.byte	3,5,1,5,11,7,9
	.half	.L677-.L39
	.byte	3,8,1,5,41,9
	.half	.L678-.L677
	.byte	3,2,1,5,11,9
	.half	.L40-.L678
	.byte	3,14,1,5,65,9
	.half	.L679-.L40
	.byte	3,99,1,5,58,9
	.half	.L38-.L679
	.byte	1,5,7,7,9
	.half	.L680-.L38
	.byte	3,37,1,9
	.half	.L681-.L680
	.byte	3,6,1,9
	.half	.L682-.L681
	.byte	3,9,1,9
	.half	.L683-.L682
	.byte	3,19,1,9
	.half	.L684-.L683
	.byte	3,6,1,9
	.half	.L685-.L684
	.byte	3,5,1,9
	.half	.L686-.L685
	.byte	3,5,1,9
	.half	.L687-.L686
	.byte	3,5,1,9
	.half	.L688-.L687
	.byte	3,5,1,9
	.half	.L689-.L688
	.byte	3,5,1,9
	.half	.L690-.L689
	.byte	3,4,1,9
	.half	.L691-.L690
	.byte	3,8,1,5,26,9
	.half	.L692-.L691
	.byte	3,6,1,5,14,9
	.half	.L693-.L692
	.byte	3,28,1,5,1,9
	.half	.L533-.L693
	.byte	3,26,1,5,12,7,9
	.half	.L29-.L533
	.byte	3,110,1,5,1,9
	.half	.L534-.L29
	.byte	3,18,1,7,9
	.half	.L171-.L534
	.byte	0,1,1
.L658:
	.sdecl	'.debug_ranges',debug,cluster('Smu_DeInit')
	.sect	'.debug_ranges'
.L170:
	.word	-1,.L117,0,.L171-.L117,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_GetAlarmAction')
	.sect	'.debug_info'
.L172:
	.word	334
	.half	3
	.word	.L173
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L175,.L174
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_GetAlarmAction',0,1,189,23,16
	.word	.L301
	.byte	1,1,1
	.word	.L127,.L313,.L126
	.byte	4
	.byte	'AlarmGroup',0,1,191,23,26
	.word	.L314,.L315
	.byte	4
	.byte	'AlarmPos',0,1,192,23,25
	.word	.L316,.L317
	.byte	4
	.byte	'IntAlarmAction',0,1,193,23,35
	.word	.L318,.L319
	.byte	4
	.byte	'FSPAction',0,1,194,23,29
	.word	.L320,.L321
	.byte	5
	.word	.L127,.L313
	.byte	6
	.byte	'RetVal',0,1,197,23,18
	.word	.L301,.L322
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_GetAlarmAction')
	.sect	'.debug_abbrev'
.L173:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_GetAlarmAction')
	.sect	'.debug_line'
.L174:
	.word	.L695-.L694
.L694:
	.half	3
	.word	.L697-.L696
.L696:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L697:
	.byte	5,32,7,0,5,2
	.word	.L127
	.byte	3,254,23,1,5,1,7,9
	.half	.L176-.L127
	.byte	3,6,0,1,1
.L695:
	.sdecl	'.debug_ranges',debug,cluster('Smu_GetAlarmAction')
	.sect	'.debug_ranges'
.L175:
	.word	-1,.L127,0,.L176-.L127,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_SetAlarmAction')
	.sect	'.debug_info'
.L177:
	.word	331
	.half	3
	.word	.L178
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L180,.L179
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_SetAlarmAction',0,1,166,24,16
	.word	.L301
	.byte	1,1,1
	.word	.L129,.L323,.L128
	.byte	4
	.byte	'AlarmGroup',0,1,168,24,26
	.word	.L324,.L325
	.byte	4
	.byte	'AlarmPos',0,1,169,24,25
	.word	.L326,.L327
	.byte	4
	.byte	'AlarmAction',0,1,170,24,33
	.word	.L328,.L329
	.byte	4
	.byte	'FSPAction',0,1,171,24,27
	.word	.L330,.L331
	.byte	5
	.word	.L129,.L323
	.byte	6
	.byte	'RetVal',0,1,174,24,18
	.word	.L301,.L332
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_SetAlarmAction')
	.sect	'.debug_abbrev'
.L178:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_SetAlarmAction')
	.sect	'.debug_line'
.L179:
	.word	.L699-.L698
.L698:
	.half	3
	.word	.L701-.L700
.L700:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L701:
	.byte	5,67,7,0,5,2
	.word	.L129
	.byte	3,144,25,1,5,1,7,9
	.half	.L181-.L129
	.byte	3,7,0,1,1
.L699:
	.sdecl	'.debug_ranges',debug,cluster('Smu_SetAlarmAction')
	.sect	'.debug_ranges'
.L180:
	.word	-1,.L129,0,.L181-.L129,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_LockConfigRegs')
	.sect	'.debug_info'
.L182:
	.word	337
	.half	3
	.word	.L183
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L185,.L184
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_LockConfigRegs',0,1,239,32,16
	.word	.L301
	.byte	1,1,1
	.word	.L143,.L333,.L142
	.byte	4
	.word	.L143,.L333
	.byte	5
	.byte	'RetVal',0,1,241,32,18
	.word	.L301,.L334
	.byte	5
	.byte	'RtcValueOld',0,1,242,32,10
	.word	.L306,.L335
	.byte	5
	.byte	'RtcValueNew',0,1,243,32,10
	.word	.L306,.L336
	.byte	5
	.byte	'AgcValueOld',0,1,244,32,10
	.word	.L306,.L337
	.byte	5
	.byte	'AgcValueNew',0,1,245,32,10
	.word	.L306,.L338
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_LockConfigRegs')
	.sect	'.debug_abbrev'
.L183:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_LockConfigRegs')
	.sect	'.debug_line'
.L184:
	.word	.L703-.L702
.L702:
	.half	3
	.word	.L705-.L704
.L704:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L705:
	.byte	5,3,7,0,5,2
	.word	.L143
	.byte	3,169,33,1,5,5,9
	.half	.L706-.L143
	.byte	3,10,1,5,56,9
	.half	.L707-.L706
	.byte	3,6,1,5,9,9
	.half	.L708-.L707
	.byte	1,5,5,9
	.half	.L709-.L708
	.byte	1,5,28,7,9
	.half	.L710-.L709
	.byte	3,10,1,9
	.half	.L585-.L710
	.byte	3,3,1,5,7,9
	.half	.L586-.L585
	.byte	3,3,1,9
	.half	.L711-.L586
	.byte	3,5,1,5,28,9
	.half	.L712-.L711
	.byte	3,5,1,9
	.half	.L587-.L712
	.byte	3,2,1,5,11,9
	.half	.L588-.L587
	.byte	3,6,1,5,56,7,9
	.half	.L713-.L588
	.byte	1,5,16,7,9
	.half	.L714-.L713
	.byte	3,5,1,5,1,9
	.half	.L589-.L714
	.byte	3,61,1,5,14,7,9
	.half	.L74-.L589
	.byte	3,110,1,5,1,9
	.half	.L590-.L74
	.byte	3,18,1,7,9
	.half	.L186-.L590
	.byte	0,1,1
.L703:
	.sdecl	'.debug_ranges',debug,cluster('Smu_LockConfigRegs')
	.sect	'.debug_ranges'
.L185:
	.word	-1,.L143,0,.L186-.L143,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_ActivateRunState')
	.sect	'.debug_info'
.L187:
	.word	326
	.half	3
	.word	.L188
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L190,.L189
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_ActivateRunState',0,1,129,35,16
	.word	.L301
	.byte	1,1,1
	.word	.L147,.L339,.L146
	.byte	4
	.byte	'Cmd',0,1,129,35,50
	.word	.L340,.L341
	.byte	5
	.word	.L147,.L339
	.byte	6
	.byte	'RetVal',0,1,131,35,18
	.word	.L301,.L342
	.byte	6
	.byte	'SmuState',0,1,132,35,21
	.word	.L301,.L343
	.byte	6
	.byte	'CommandStatus',0,1,133,35,10
	.word	.L306,.L344
	.byte	6
	.byte	'Timeout',0,1,134,35,10
	.word	.L306,.L345
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_ActivateRunState')
	.sect	'.debug_abbrev'
.L188:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_ActivateRunState')
	.sect	'.debug_line'
.L189:
	.word	.L716-.L715
.L715:
	.half	3
	.word	.L718-.L717
.L717:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L718:
	.byte	5,16,7,0,5,2
	.word	.L147
	.byte	3,128,35,1,5,18,9
	.half	.L593-.L147
	.byte	3,5,1,5,45,9
	.half	.L594-.L593
	.byte	3,22,1,5,5,9
	.half	.L719-.L594
	.byte	3,6,1,5,10,7,9
	.half	.L720-.L719
	.byte	3,11,1,5,31,7,9
	.half	.L721-.L720
	.byte	3,8,1,5,25,9
	.half	.L592-.L721
	.byte	3,5,1,5,45,9
	.half	.L722-.L592
	.byte	1,5,7,9
	.half	.L723-.L722
	.byte	3,6,1,5,29,9
	.half	.L724-.L723
	.byte	3,17,1,5,30,9
	.half	.L725-.L724
	.byte	3,4,1,5,33,9
	.half	.L726-.L725
	.byte	3,96,1,5,31,9
	.half	.L81-.L726
	.byte	3,43,1,5,25,9
	.half	.L597-.L81
	.byte	3,5,1,5,45,9
	.half	.L727-.L597
	.byte	1,5,7,9
	.half	.L728-.L727
	.byte	3,5,1,5,42,9
	.half	.L83-.L728
	.byte	3,10,1,5,16,9
	.half	.L598-.L83
	.byte	3,1,1,5,13,9
	.half	.L729-.L598
	.byte	3,6,1,5,28,7,9
	.half	.L730-.L729
	.byte	3,1,1,5,29,7,9
	.half	.L84-.L730
	.byte	3,6,1,5,30,9
	.half	.L731-.L84
	.byte	3,4,1,5,7,9
	.half	.L732-.L731
	.byte	3,4,1,5,16,7,9
	.half	.L80-.L732
	.byte	3,5,1,5,1,9
	.half	.L599-.L80
	.byte	3,51,1,5,16,7,9
	.half	.L85-.L599
	.byte	3,96,1,5,1,9
	.half	.L600-.L85
	.byte	3,32,1,7,9
	.half	.L191-.L600
	.byte	0,1,1
.L716:
	.sdecl	'.debug_ranges',debug,cluster('Smu_ActivateRunState')
	.sect	'.debug_ranges'
.L190:
	.word	-1,.L147,0,.L191-.L147,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_ClearAlarmStatus')
	.sect	'.debug_info'
.L192:
	.word	339
	.half	3
	.word	.L193
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L195,.L194
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_ClearAlarmStatus',0,1,228,17,16
	.word	.L301
	.byte	1,1,1
	.word	.L119,.L346,.L118
	.byte	4
	.byte	'AlarmGroup',0,1,230,17,26
	.word	.L347,.L348
	.byte	4
	.byte	'AlarmPos',0,1,231,17,25
	.word	.L349,.L350
	.byte	5
	.word	.L119,.L346
	.byte	6
	.byte	'RetVal',0,1,234,17,18
	.word	.L301,.L351
	.byte	6
	.byte	'AlarmStatusReadback',0,1,235,17,10
	.word	.L306,.L352
	.byte	6
	.byte	'Timeout',0,1,236,17,10
	.word	.L306,.L353
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_ClearAlarmStatus')
	.sect	'.debug_abbrev'
.L193:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_ClearAlarmStatus')
	.sect	'.debug_line'
.L194:
	.word	.L734-.L733
.L733:
	.half	3
	.word	.L736-.L735
.L735:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L736:
	.byte	5,16,7,0,5,2
	.word	.L119
	.byte	3,227,17,1,5,30,9
	.half	.L737-.L119
	.byte	3,7,1,5,18,9
	.half	.L536-.L737
	.byte	3,1,1,5,32,9
	.half	.L538-.L536
	.byte	3,38,1,5,23,9
	.half	.L535-.L538
	.byte	3,5,1,5,40,9
	.half	.L738-.L535
	.byte	1,5,37,9
	.half	.L539-.L738
	.byte	3,5,1,5,7,9
	.half	.L44-.L539
	.byte	3,18,1,5,36,7,9
	.half	.L541-.L44
	.byte	3,10,1,5,49,9
	.half	.L542-.L541
	.byte	1,5,61,9
	.half	.L543-.L542
	.byte	1,5,14,9
	.half	.L537-.L543
	.byte	3,1,1,9
	.half	.L45-.L537
	.byte	3,41,1,5,11,9
	.half	.L739-.L45
	.byte	3,5,1,5,32,7,9
	.half	.L740-.L739
	.byte	3,1,1,5,27,7,9
	.half	.L46-.L740
	.byte	3,6,1,5,31,9
	.half	.L741-.L46
	.byte	3,4,1,5,28,9
	.half	.L742-.L741
	.byte	3,6,1,5,1,9
	.half	.L544-.L742
	.byte	3,46,1,7,9
	.half	.L196-.L544
	.byte	0,1,1
.L734:
	.sdecl	'.debug_ranges',debug,cluster('Smu_ClearAlarmStatus')
	.sect	'.debug_ranges'
.L195:
	.word	-1,.L119,0,.L196-.L119,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_SetAlarmStatus')
	.sect	'.debug_info'
.L197:
	.word	337
	.half	3
	.word	.L198
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L200,.L199
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_SetAlarmStatus',0,1,200,19,16
	.word	.L301
	.byte	1,1,1
	.word	.L121,.L354,.L120
	.byte	4
	.byte	'AlarmGroup',0,1,202,19,26
	.word	.L355,.L356
	.byte	4
	.byte	'AlarmPos',0,1,203,19,25
	.word	.L357,.L358
	.byte	5
	.word	.L121,.L354
	.byte	6
	.byte	'RetVal',0,1,206,19,18
	.word	.L301,.L359
	.byte	6
	.byte	'Timeout',0,1,207,19,10
	.word	.L306,.L360
	.byte	6
	.byte	'AlarmStatusReadback',0,1,208,19,10
	.word	.L306,.L361
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_SetAlarmStatus')
	.sect	'.debug_abbrev'
.L198:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_SetAlarmStatus')
	.sect	'.debug_line'
.L199:
	.word	.L744-.L743
.L743:
	.half	3
	.word	.L746-.L745
.L745:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L746:
	.byte	5,16,7,0,5,2
	.word	.L121
	.byte	3,199,19,1,5,18,9
	.half	.L747-.L121
	.byte	3,7,1,5,32,9
	.half	.L546-.L747
	.byte	3,221,0,1,5,23,9
	.half	.L545-.L546
	.byte	3,5,1,5,40,9
	.half	.L748-.L545
	.byte	1,5,37,9
	.half	.L547-.L748
	.byte	3,5,1,5,46,9
	.half	.L48-.L547
	.byte	3,15,1,5,59,9
	.half	.L549-.L48
	.byte	1,5,71,9
	.half	.L550-.L549
	.byte	1,5,34,9
	.half	.L551-.L550
	.byte	3,1,1,5,14,9
	.half	.L552-.L551
	.byte	3,1,1,5,11,9
	.half	.L749-.L552
	.byte	3,6,1,5,32,7,9
	.half	.L750-.L749
	.byte	3,1,1,5,27,7,9
	.half	.L49-.L750
	.byte	3,6,1,5,31,9
	.half	.L751-.L49
	.byte	3,4,1,5,28,9
	.half	.L752-.L751
	.byte	3,6,1,5,1,9
	.half	.L553-.L752
	.byte	3,46,1,7,9
	.half	.L201-.L553
	.byte	0,1,1
.L744:
	.sdecl	'.debug_ranges',debug,cluster('Smu_SetAlarmStatus')
	.sect	'.debug_ranges'
.L200:
	.word	-1,.L121,0,.L201-.L121,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_GetAlarmStatus')
	.sect	'.debug_info'
.L202:
	.word	286
	.half	3
	.word	.L203
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L205,.L204
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_GetAlarmStatus',0,1,168,21,16
	.word	.L301
	.byte	1,1,1
	.word	.L123,.L362,.L122
	.byte	4
	.byte	'AlarmGroup',0,1,170,21,26
	.word	.L363,.L364
	.byte	4
	.byte	'AlarmStatus',0,1,171,21,17
	.word	.L365,.L366
	.byte	5
	.word	.L123,.L362
	.byte	6
	.byte	'RetVal',0,1,174,21,18
	.word	.L301,.L367
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_GetAlarmStatus')
	.sect	'.debug_abbrev'
.L203:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_GetAlarmStatus')
	.sect	'.debug_line'
.L204:
	.word	.L754-.L753
.L753:
	.half	3
	.word	.L756-.L755
.L755:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L756:
	.byte	5,25,7,0,5,2
	.word	.L123
	.byte	3,173,21,1,5,7,9
	.half	.L554-.L123
	.byte	3,240,0,1,5,45,7,9
	.half	.L757-.L554
	.byte	3,9,1,5,58,9
	.half	.L758-.L757
	.byte	1,5,70,9
	.half	.L759-.L758
	.byte	1,5,22,9
	.half	.L760-.L759
	.byte	3,127,1,5,16,9
	.half	.L761-.L760
	.byte	3,2,1,5,1,9
	.half	.L51-.L761
	.byte	3,8,1,7,9
	.half	.L206-.L51
	.byte	0,1,1
.L754:
	.sdecl	'.debug_ranges',debug,cluster('Smu_GetAlarmStatus')
	.sect	'.debug_ranges'
.L205:
	.word	-1,.L123,0,.L206-.L123,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_GetAlarmDebugStatus')
	.sect	'.debug_info'
.L207:
	.word	291
	.half	3
	.word	.L208
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L210,.L209
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_GetAlarmDebugStatus',0,1,205,22,16
	.word	.L301
	.byte	1,1,1
	.word	.L125,.L368,.L124
	.byte	4
	.byte	'AlarmGroup',0,1,207,22,26
	.word	.L369,.L370
	.byte	4
	.byte	'AlarmStatus',0,1,208,22,17
	.word	.L371,.L372
	.byte	5
	.word	.L125,.L368
	.byte	6
	.byte	'RetVal',0,1,211,22,18
	.word	.L301,.L373
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_GetAlarmDebugStatus')
	.sect	'.debug_abbrev'
.L208:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_GetAlarmDebugStatus')
	.sect	'.debug_line'
.L209:
	.word	.L763-.L762
.L762:
	.half	3
	.word	.L765-.L764
.L764:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L765:
	.byte	5,41,7,0,5,2
	.word	.L125
	.byte	3,147,23,1,5,54,9
	.half	.L766-.L125
	.byte	1,5,66,9
	.half	.L767-.L766
	.byte	1,5,18,9
	.half	.L768-.L767
	.byte	1,5,12,9
	.half	.L769-.L768
	.byte	3,1,1,5,1,9
	.half	.L555-.L769
	.byte	3,7,1,7,9
	.half	.L211-.L555
	.byte	0,1,1
.L763:
	.sdecl	'.debug_ranges',debug,cluster('Smu_GetAlarmDebugStatus')
	.sect	'.debug_ranges'
.L210:
	.word	-1,.L125,0,.L211-.L125,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_SetupErrorPin')
	.sect	'.debug_info'
.L212:
	.word	307
	.half	3
	.word	.L213
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L215,.L214
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_SetupErrorPin',0,1,246,27,16
	.word	.L301
	.byte	1,1,1
	.word	.L135,.L374,.L134
	.byte	4
	.word	.L135,.L374
	.byte	5
	.byte	'RetVal',0,1,248,27,18
	.word	.L301,.L375
	.byte	5
	.byte	'ReadPCTL',0,1,249,27,10
	.word	.L306,.L376
	.byte	5
	.byte	'FSPHWDir',0,1,250,27,10
	.word	.L306,.L377
	.byte	5
	.byte	'FSPPortEnable',0,1,251,27,10
	.word	.L306,.L378
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_SetupErrorPin')
	.sect	'.debug_abbrev'
.L213:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_SetupErrorPin')
	.sect	'.debug_line'
.L214:
	.word	.L771-.L770
.L770:
	.half	3
	.word	.L773-.L772
.L772:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L773:
	.byte	5,14,7,0,5,2
	.word	.L135
	.byte	3,181,28,1,5,43,9
	.half	.L567-.L135
	.byte	3,7,1,5,26,9
	.half	.L774-.L567
	.byte	1,5,77,9
	.half	.L568-.L774
	.byte	3,2,1,5,32,9
	.half	.L569-.L568
	.byte	3,7,1,5,23,9
	.half	.L775-.L569
	.byte	3,5,1,5,40,9
	.half	.L776-.L775
	.byte	1,5,5,9
	.half	.L777-.L776
	.byte	3,6,1,9
	.half	.L778-.L777
	.byte	3,6,1,9
	.half	.L571-.L778
	.byte	3,7,1,5,27,9
	.half	.L779-.L571
	.byte	3,41,1,5,31,9
	.half	.L780-.L779
	.byte	3,5,1,5,12,9
	.half	.L781-.L780
	.byte	3,1,1,5,1,9
	.half	.L572-.L781
	.byte	3,7,1,7,9
	.half	.L216-.L572
	.byte	0,1,1
.L771:
	.sdecl	'.debug_ranges',debug,cluster('Smu_SetupErrorPin')
	.sect	'.debug_ranges'
.L215:
	.word	-1,.L135,0,.L216-.L135,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_ReleaseErrorPin')
	.sect	'.debug_info'
.L217:
	.word	238
	.half	3
	.word	.L218
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L220,.L219
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_ReleaseErrorPin',0,1,171,29,16
	.word	.L301
	.byte	1,1,1
	.word	.L137,.L379,.L136
	.byte	4
	.word	.L137,.L379
	.byte	5
	.byte	'RetVal',0,1,173,29,18
	.word	.L301,.L380
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_ReleaseErrorPin')
	.sect	'.debug_abbrev'
.L218:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_ReleaseErrorPin')
	.sect	'.debug_line'
.L219:
	.word	.L783-.L782
.L782:
	.half	3
	.word	.L785-.L784
.L784:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L785:
	.byte	5,32,7,0,5,2
	.word	.L137
	.byte	3,231,29,1,5,23,9
	.half	.L786-.L137
	.byte	3,5,1,5,40,9
	.half	.L787-.L786
	.byte	1,5,5,9
	.half	.L788-.L787
	.byte	3,6,1,9
	.half	.L789-.L788
	.byte	3,6,1,9
	.half	.L790-.L789
	.byte	3,7,1,5,27,9
	.half	.L791-.L790
	.byte	3,39,1,5,31,9
	.half	.L792-.L791
	.byte	3,5,1,5,12,9
	.half	.L793-.L792
	.byte	3,1,1,5,1,9
	.half	.L573-.L793
	.byte	3,8,1,7,9
	.half	.L221-.L573
	.byte	0,1,1
.L783:
	.sdecl	'.debug_ranges',debug,cluster('Smu_ReleaseErrorPin')
	.sect	'.debug_ranges'
.L220:
	.word	-1,.L137,0,.L221-.L137,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_ReleaseFSP')
	.sect	'.debug_info'
.L222:
	.word	325
	.half	3
	.word	.L223
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L225,.L224
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_ReleaseFSP',0,1,183,25,16
	.word	.L301
	.byte	1,1,1
	.word	.L131,.L381,.L130
	.byte	4
	.word	.L131,.L381
	.byte	5
	.byte	'RetVal',0,1,188,25,18
	.word	.L301,.L382
	.byte	5
	.byte	'SmuState',0,1,189,25,21
	.word	.L301,.L383
	.byte	5
	.byte	'SmuEFRST',0,1,190,25,10
	.word	.L306,.L384
	.byte	5
	.byte	'CommandStatus',0,1,191,25,10
	.word	.L306,.L385
	.byte	5
	.byte	'Timeout',0,1,192,25,10
	.word	.L306,.L386
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_ReleaseFSP')
	.sect	'.debug_abbrev'
.L223:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_ReleaseFSP')
	.sect	'.debug_line'
.L224:
	.word	.L795-.L794
.L794:
	.half	3
	.word	.L797-.L796
.L796:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L797:
	.byte	5,18,7,0,5,2
	.word	.L131
	.byte	3,191,25,1,5,34,9
	.half	.L556-.L131
	.byte	3,21,1,5,45,9
	.half	.L557-.L556
	.byte	3,4,1,5,8,9
	.half	.L798-.L557
	.byte	3,5,1,5,42,7,9
	.half	.L799-.L798
	.byte	1,5,18,7,9
	.half	.L800-.L799
	.byte	3,1,1,5,31,7,9
	.half	.L56-.L800
	.byte	3,6,1,5,25,9
	.half	.L558-.L56
	.byte	3,5,1,5,45,9
	.half	.L801-.L558
	.byte	1,5,7,9
	.half	.L802-.L801
	.byte	3,6,1,5,42,9
	.half	.L59-.L802
	.byte	3,14,1,5,16,9
	.half	.L561-.L59
	.byte	3,1,1,5,13,9
	.half	.L803-.L561
	.byte	3,5,1,5,28,7,9
	.half	.L804-.L803
	.byte	3,1,1,5,29,7,9
	.half	.L60-.L804
	.byte	3,6,1,5,30,9
	.half	.L805-.L60
	.byte	3,5,1,5,7,9
	.half	.L806-.L805
	.byte	3,5,1,5,16,7,9
	.half	.L807-.L806
	.byte	3,25,1,5,1,9
	.half	.L562-.L807
	.byte	3,28,1,5,14,7,9
	.half	.L57-.L562
	.byte	3,121,1,5,1,9
	.half	.L563-.L57
	.byte	3,7,1,7,9
	.half	.L226-.L563
	.byte	0,1,1
.L795:
	.sdecl	'.debug_ranges',debug,cluster('Smu_ReleaseFSP')
	.sect	'.debug_ranges'
.L225:
	.word	-1,.L131,0,.L226-.L131,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_ActivateFSP')
	.sect	'.debug_info'
.L227:
	.word	282
	.half	3
	.word	.L228
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L230,.L229
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_ActivateFSP',0,1,230,26,16
	.word	.L301
	.byte	1,1,1
	.word	.L133,.L387,.L132
	.byte	4
	.word	.L133,.L387
	.byte	5
	.byte	'RetVal',0,1,233,26,18
	.word	.L301,.L388
	.byte	5
	.byte	'Timeout',0,1,234,26,10
	.word	.L306,.L389
	.byte	5
	.byte	'CommandStatus',0,1,235,26,10
	.word	.L306,.L390
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_ActivateFSP')
	.sect	'.debug_abbrev'
.L228:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_ActivateFSP')
	.sect	'.debug_line'
.L229:
	.word	.L809-.L808
.L808:
	.half	3
	.word	.L811-.L810
.L810:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L811:
	.byte	5,18,7,0,5,2
	.word	.L133
	.byte	3,233,26,1,5,29,9
	.half	.L564-.L133
	.byte	3,24,1,5,23,9
	.half	.L812-.L564
	.byte	3,5,1,5,43,9
	.half	.L813-.L812
	.byte	1,5,5,9
	.half	.L814-.L813
	.byte	3,6,1,5,40,9
	.half	.L64-.L814
	.byte	3,12,1,5,14,9
	.half	.L565-.L64
	.byte	3,1,1,5,11,9
	.half	.L815-.L565
	.byte	3,5,1,5,26,7,9
	.half	.L816-.L815
	.byte	3,1,1,5,27,7,9
	.half	.L65-.L816
	.byte	3,6,1,5,28,9
	.half	.L817-.L65
	.byte	3,5,1,5,22,9
	.half	.L818-.L817
	.byte	3,4,1,5,1,9
	.half	.L566-.L818
	.byte	3,43,1,7,9
	.half	.L231-.L566
	.byte	0,1,1
.L809:
	.sdecl	'.debug_ranges',debug,cluster('Smu_ActivateFSP')
	.sect	'.debug_ranges'
.L230:
	.word	-1,.L133,0,.L231-.L133,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_RTStop')
	.sect	'.debug_info'
.L232:
	.word	321
	.half	3
	.word	.L233
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L235,.L234
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_RTStop',0,1,211,30,16
	.word	.L301
	.byte	1,1,1
	.word	.L139,.L391,.L138
	.byte	4
	.byte	'TimerNum',0,1,211,30,39
	.word	.L392,.L393
	.byte	5
	.word	.L139,.L391
	.byte	6
	.byte	'RetVal',0,1,213,30,18
	.word	.L301,.L394
	.byte	6
	.byte	'Timeout',0,1,214,30,10
	.word	.L306,.L395
	.byte	6
	.byte	'CommandStatus',0,1,215,30,10
	.word	.L306,.L396
	.byte	6
	.byte	'RTSArray',0,1,216,30,10
	.word	.L397,.L398
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_RTStop')
	.sect	'.debug_abbrev'
.L233:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_RTStop')
	.sect	'.debug_line'
.L234:
	.word	.L820-.L819
.L819:
	.half	3
	.word	.L822-.L821
.L821:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L822:
	.byte	5,16,7,0,5,2
	.word	.L139
	.byte	3,210,30,1,5,18,9
	.half	.L576-.L139
	.byte	3,3,1,5,24,9
	.half	.L578-.L576
	.byte	3,1,1,5,29,9
	.half	.L579-.L578
	.byte	3,35,1,5,23,9
	.half	.L575-.L579
	.byte	3,5,1,5,43,9
	.half	.L823-.L575
	.byte	1,5,28,9
	.half	.L824-.L823
	.byte	3,3,1,5,17,9
	.half	.L825-.L824
	.byte	1,5,28,9
	.half	.L826-.L825
	.byte	3,1,1,5,17,9
	.half	.L827-.L826
	.byte	1,5,26,9
	.half	.L828-.L827
	.byte	3,5,1,5,16,9
	.half	.L829-.L828
	.byte	1,5,5,9
	.half	.L830-.L829
	.byte	1,5,7,7,9
	.half	.L831-.L830
	.byte	3,6,1,5,42,9
	.half	.L70-.L831
	.byte	3,11,1,5,16,9
	.half	.L832-.L70
	.byte	3,1,1,5,13,9
	.half	.L833-.L832
	.byte	3,5,1,5,28,7,9
	.half	.L834-.L833
	.byte	3,1,1,5,27,7,9
	.half	.L69-.L834
	.byte	3,7,1,5,28,9
	.half	.L835-.L69
	.byte	3,4,1,5,22,9
	.half	.L836-.L835
	.byte	3,5,1,5,1,9
	.half	.L580-.L836
	.byte	3,51,1,7,9
	.half	.L236-.L580
	.byte	0,1,1
.L820:
	.sdecl	'.debug_ranges',debug,cluster('Smu_RTStop')
	.sect	'.debug_ranges'
.L235:
	.word	-1,.L139,0,.L236-.L139,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_GetRTMissedEvent')
	.sect	'.debug_info'
.L237:
	.word	344
	.half	3
	.word	.L238
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L240,.L239
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_GetRTMissedEvent',0,1,131,32,16
	.word	.L301
	.byte	1,1,1
	.word	.L141,.L399,.L140
	.byte	4
	.byte	'TimerNum',0,1,133,32,15
	.word	.L400,.L401
	.byte	4
	.byte	'EventMissed',0,1,134,32,18
	.word	.L402,.L403
	.byte	5
	.word	.L141,.L399
	.byte	6
	.byte	'RetVal',0,1,137,32,18
	.word	.L301,.L404
	.byte	6
	.byte	'kTimMissEventPos',0,1,138,32,10
	.word	.L397,.L405
	.byte	6
	.byte	'TimerMissEvent',0,1,140,32,10
	.word	.L306,.L406
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_GetRTMissedEvent')
	.sect	'.debug_abbrev'
.L238:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_GetRTMissedEvent')
	.sect	'.debug_line'
.L239:
	.word	.L838-.L837
.L837:
	.half	3
	.word	.L840-.L839
.L839:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L840:
	.byte	5,16,7,0,5,2
	.word	.L141
	.byte	3,130,32,1,5,32,9
	.half	.L581-.L141
	.byte	3,7,1,5,30,9
	.half	.L841-.L581
	.byte	1,5,38,9
	.half	.L842-.L841
	.byte	3,52,1,5,59,9
	.half	.L843-.L842
	.byte	1,5,41,9
	.half	.L582-.L843
	.byte	1,5,23,9
	.half	.L844-.L582
	.byte	3,4,1,5,20,9
	.half	.L583-.L844
	.byte	3,5,1,5,12,9
	.half	.L845-.L583
	.byte	3,9,1,5,1,9
	.half	.L584-.L845
	.byte	3,6,1,7,9
	.half	.L241-.L584
	.byte	0,1,1
.L838:
	.sdecl	'.debug_ranges',debug,cluster('Smu_GetRTMissedEvent')
	.sect	'.debug_ranges'
.L240:
	.word	-1,.L141,0,.L241-.L141,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_GetSmuState')
	.sect	'.debug_info'
.L242:
	.word	234
	.half	3
	.word	.L243
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L245,.L244
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_GetSmuState',0,1,186,34,19
	.word	.L301
	.byte	1,1,1
	.word	.L145,.L407,.L144
	.byte	4
	.word	.L145,.L407
	.byte	5
	.byte	'RetVal',0,1,191,34,21
	.word	.L301,.L408
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_GetSmuState')
	.sect	'.debug_abbrev'
.L243:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_GetSmuState')
	.sect	'.debug_line'
.L244:
	.word	.L847-.L846
.L846:
	.half	3
	.word	.L849-.L848
.L848:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L849:
	.byte	5,42,7,0,5,2
	.word	.L145
	.byte	3,220,34,1,5,1,9
	.half	.L591-.L145
	.byte	3,6,1,7,9
	.half	.L246-.L591
	.byte	0,1,1
.L847:
	.sdecl	'.debug_ranges',debug,cluster('Smu_GetSmuState')
	.sect	'.debug_ranges'
.L245:
	.word	-1,.L145,0,.L246-.L145,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_ActivatePES')
	.sect	'.debug_info'
.L247:
	.word	282
	.half	3
	.word	.L248
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L250,.L249
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_ActivatePES',0,1,219,36,16
	.word	.L301
	.byte	1,1,1
	.word	.L149,.L409,.L148
	.byte	4
	.word	.L149,.L409
	.byte	5
	.byte	'RetVal',0,1,221,36,18
	.word	.L301,.L410
	.byte	5
	.byte	'Timeout',0,1,222,36,10
	.word	.L306,.L411
	.byte	5
	.byte	'CommandStatus',0,1,223,36,10
	.word	.L306,.L412
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_ActivatePES')
	.sect	'.debug_abbrev'
.L248:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_ActivatePES')
	.sect	'.debug_line'
.L249:
	.word	.L851-.L850
.L850:
	.half	3
	.word	.L853-.L852
.L852:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L853:
	.byte	5,18,7,0,5,2
	.word	.L149
	.byte	3,221,36,1,5,29,9
	.half	.L601-.L149
	.byte	3,24,1,5,23,9
	.half	.L854-.L601
	.byte	3,5,1,5,43,9
	.half	.L855-.L854
	.byte	1,5,5,9
	.half	.L856-.L855
	.byte	3,6,1,5,40,9
	.half	.L88-.L856
	.byte	3,11,1,5,14,9
	.half	.L602-.L88
	.byte	3,1,1,5,11,9
	.half	.L857-.L602
	.byte	3,5,1,5,26,7,9
	.half	.L858-.L857
	.byte	3,1,1,5,27,7,9
	.half	.L89-.L858
	.byte	3,6,1,5,28,9
	.half	.L859-.L89
	.byte	3,4,1,5,22,9
	.half	.L860-.L859
	.byte	3,4,1,5,1,9
	.half	.L603-.L860
	.byte	3,44,1,7,9
	.half	.L251-.L603
	.byte	0,1,1
.L851:
	.sdecl	'.debug_ranges',debug,cluster('Smu_ActivatePES')
	.sect	'.debug_ranges'
.L250:
	.word	-1,.L149,0,.L251-.L149,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_CoreAliveTest')
	.sect	'.debug_info'
.L252:
	.word	236
	.half	3
	.word	.L253
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L255,.L254
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_CoreAliveTest',0,1,230,37,16
	.word	.L301
	.byte	1,1,1
	.word	.L151,.L413,.L150
	.byte	4
	.word	.L151,.L413
	.byte	5
	.byte	'RetVal',0,1,235,37,18
	.word	.L301,.L414
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_CoreAliveTest')
	.sect	'.debug_abbrev'
.L253:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_CoreAliveTest')
	.sect	'.debug_line'
.L254:
	.word	.L862-.L861
.L861:
	.half	3
	.word	.L864-.L863
.L863:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L864:
	.byte	5,25,7,0,5,2
	.word	.L151
	.byte	3,234,37,1,5,1,9
	.half	.L604-.L151
	.byte	3,168,1,1,7,9
	.half	.L256-.L604
	.byte	0,1,1
.L862:
	.sdecl	'.debug_ranges',debug,cluster('Smu_CoreAliveTest')
	.sect	'.debug_ranges'
.L255:
	.word	-1,.L151,0,.L256-.L151,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_GetAlarmExecutionStatus')
	.sect	'.debug_info'
.L257:
	.word	307
	.half	3
	.word	.L258
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L260,.L259
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_GetAlarmExecutionStatus',0,1,180,39,16
	.word	.L301
	.byte	1,1,1
	.word	.L153,.L415,.L152
	.byte	4
	.byte	'AlarmExecStatusReq',0,1,182,39,16
	.word	.L416,.L417
	.byte	4
	.byte	'AlarmExecStatus',0,1,183,39,17
	.word	.L418,.L419
	.byte	5
	.word	.L153,.L415
	.byte	6
	.byte	'RetVal',0,1,189,39,18
	.word	.L301,.L420
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_GetAlarmExecutionStatus')
	.sect	'.debug_abbrev'
.L258:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_GetAlarmExecutionStatus')
	.sect	'.debug_line'
.L259:
	.word	.L866-.L865
.L865:
	.half	3
	.word	.L868-.L867
.L867:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L868:
	.byte	5,33,7,0,5,2
	.word	.L153
	.byte	3,147,40,1,5,39,9
	.half	.L869-.L153
	.byte	1,5,63,9
	.half	.L870-.L869
	.byte	1,5,36,9
	.half	.L871-.L870
	.byte	1,5,48,9
	.half	.L872-.L871
	.byte	3,1,1,5,22,9
	.half	.L873-.L872
	.byte	3,127,1,5,12,9
	.half	.L874-.L873
	.byte	3,5,1,5,1,9
	.half	.L605-.L874
	.byte	3,6,1,7,9
	.half	.L261-.L605
	.byte	0,1,1
.L866:
	.sdecl	'.debug_ranges',debug,cluster('Smu_GetAlarmExecutionStatus')
	.sect	'.debug_ranges'
.L260:
	.word	-1,.L153,0,.L261-.L153,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_ClearAlarmExecutionStatus')
	.sect	'.debug_info'
.L262:
	.word	308
	.half	3
	.word	.L263
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L265,.L264
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_ClearAlarmExecutionStatus',0,1,192,40,16
	.word	.L301
	.byte	1,1,1
	.word	.L155,.L421,.L154
	.byte	4
	.byte	'AlarmExecStatusReq',0,1,194,40,16
	.word	.L422,.L423
	.byte	5
	.word	.L155,.L421
	.byte	6
	.byte	'RetVal',0,1,200,40,18
	.word	.L301,.L424
	.byte	6
	.byte	'StatusClearRes',0,1,201,40,10
	.word	.L306,.L425
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_ClearAlarmExecutionStatus')
	.sect	'.debug_abbrev'
.L263:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_ClearAlarmExecutionStatus')
	.sect	'.debug_line'
.L264:
	.word	.L876-.L875
.L875:
	.half	3
	.word	.L878-.L877
.L877:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L878:
	.byte	5,23,7,0,5,2
	.word	.L155
	.byte	3,144,41,1,5,47,9
	.half	.L879-.L155
	.byte	1,5,48,9
	.half	.L880-.L879
	.byte	3,10,1,5,23,9
	.half	.L881-.L880
	.byte	3,1,1,5,37,9
	.half	.L607-.L881
	.byte	3,126,1,5,32,9
	.half	.L882-.L607
	.byte	3,8,1,5,23,9
	.half	.L606-.L882
	.byte	3,5,1,5,40,9
	.half	.L883-.L606
	.byte	1,5,5,9
	.half	.L884-.L883
	.byte	3,7,1,5,27,9
	.half	.L609-.L884
	.byte	3,7,1,5,31,9
	.half	.L885-.L609
	.byte	3,4,1,5,12,9
	.half	.L886-.L885
	.byte	3,4,1,5,1,9
	.half	.L610-.L886
	.byte	3,6,1,7,9
	.half	.L266-.L610
	.byte	0,1,1
.L876:
	.sdecl	'.debug_ranges',debug,cluster('Smu_ClearAlarmExecutionStatus')
	.sect	'.debug_ranges'
.L265:
	.word	-1,.L155,0,.L266-.L155,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_RegisterMonitor')
	.sect	'.debug_info'
.L267:
	.word	394
	.half	3
	.word	.L268
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L270,.L269
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_RegisterMonitor',0,1,227,41,16
	.word	.L301
	.byte	1,1,1
	.word	.L157,.L426,.L156
	.byte	4
	.byte	'RegMonPtr',0,1,229,41,24
	.word	.L427,.L428
	.byte	4
	.byte	'RegMonResult',0,1,229,41,63
	.word	.L429,.L430
	.byte	5
	.word	.L157,.L426
	.byte	6
	.byte	'Index',0,1,232,41,9
	.word	.L301,.L431
	.byte	6
	.byte	'RetVal',0,1,233,41,18
	.word	.L301,.L432
	.byte	6
	.byte	'RMCTLVal',0,1,234,41,10
	.word	.L306,.L433
	.byte	6
	.byte	'ResStatus',0,1,235,41,10
	.word	.L306,.L434
	.byte	6
	.byte	'Timeout',0,1,236,41,10
	.word	.L306,.L435
	.byte	6
	.byte	'RMSTSVal',0,1,237,41,10
	.word	.L306,.L436
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_RegisterMonitor')
	.sect	'.debug_abbrev'
.L268:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_RegisterMonitor')
	.sect	'.debug_line'
.L269:
	.word	.L888-.L887
.L887:
	.half	3
	.word	.L890-.L889
.L889:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L890:
	.byte	5,16,7,0,5,2
	.word	.L157
	.byte	3,226,41,1,5,19,9
	.half	.L612-.L157
	.byte	3,7,1,5,18,9
	.half	.L613-.L612
	.byte	3,2,1,5,15,9
	.half	.L615-.L613
	.byte	3,61,1,5,32,9
	.half	.L616-.L615
	.byte	3,10,1,5,51,9
	.half	.L891-.L616
	.byte	3,118,1,5,19,9
	.half	.L95-.L891
	.byte	3,5,1,5,7,9
	.half	.L892-.L95
	.byte	1,5,56,7,9
	.half	.L893-.L892
	.byte	3,5,1,5,29,9
	.half	.L894-.L893
	.byte	1,5,58,9
	.half	.L96-.L894
	.byte	3,118,1,5,51,9
	.half	.L94-.L96
	.byte	1,5,32,7,9
	.half	.L895-.L94
	.byte	3,19,1,5,23,9
	.half	.L611-.L895
	.byte	3,5,1,5,40,9
	.half	.L896-.L611
	.byte	1,5,5,9
	.half	.L897-.L896
	.byte	3,6,1,9
	.half	.L898-.L897
	.byte	3,7,1,9
	.half	.L618-.L898
	.byte	3,7,1,5,26,9
	.half	.L899-.L618
	.byte	3,19,1,5,27,9
	.half	.L900-.L899
	.byte	3,121,1,5,14,9
	.half	.L619-.L900
	.byte	3,1,1,5,35,9
	.half	.L901-.L619
	.byte	3,5,1,5,12,9
	.half	.L620-.L901
	.byte	1,5,24,7,9
	.half	.L902-.L620
	.byte	3,1,1,5,25,7,9
	.half	.L98-.L902
	.byte	3,2,1,5,5,9
	.half	.L614-.L98
	.byte	3,6,1,9
	.half	.L903-.L614
	.byte	3,6,1,9
	.half	.L904-.L903
	.byte	3,6,1,9
	.half	.L905-.L904
	.byte	3,7,1,9
	.half	.L906-.L905
	.byte	3,7,1,5,27,9
	.half	.L907-.L906
	.byte	3,7,1,5,31,9
	.half	.L908-.L907
	.byte	3,4,1,5,20,9
	.half	.L909-.L908
	.byte	3,6,1,5,5,9
	.half	.L910-.L909
	.byte	1,5,14,7,9
	.half	.L911-.L910
	.byte	3,6,1,5,1,9
	.half	.L621-.L911
	.byte	3,47,1,5,17,7,9
	.half	.L99-.L621
	.byte	3,100,1,5,18,9
	.half	.L622-.L99
	.byte	3,7,1,5,50,9
	.half	.L912-.L622
	.byte	3,121,1,5,21,9
	.half	.L102-.L912
	.byte	3,6,1,5,42,9
	.half	.L913-.L102
	.byte	3,1,1,5,63,9
	.half	.L914-.L913
	.byte	3,127,1,5,61,9
	.half	.L915-.L914
	.byte	3,1,1,5,29,9
	.half	.L916-.L915
	.byte	3,127,1,5,57,9
	.half	.L625-.L916
	.byte	3,122,1,5,50,9
	.half	.L101-.L625
	.byte	1,5,14,7,9
	.half	.L917-.L101
	.byte	3,10,1,5,1,9
	.half	.L626-.L917
	.byte	3,18,1,7,9
	.half	.L271-.L626
	.byte	0,1,1
.L888:
	.sdecl	'.debug_ranges',debug,cluster('Smu_RegisterMonitor')
	.sect	'.debug_ranges'
.L270:
	.word	-1,.L157,0,.L271-.L157,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_lClearAllAlarms')
	.sect	'.debug_info'
.L272:
	.word	242
	.half	3
	.word	.L273
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L275,.L274
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_lClearAllAlarms',0,1,166,7,13,1,1
	.word	.L105,.L437,.L104
	.byte	4
	.word	.L105,.L437
	.byte	5
	.byte	'AlarmGroupIndex',0,1,168,7,9
	.word	.L301,.L438
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_lClearAllAlarms')
	.sect	'.debug_abbrev'
.L273:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_lClearAllAlarms')
	.sect	'.debug_line'
.L274:
	.word	.L919-.L918
.L918:
	.half	3
	.word	.L921-.L920
.L920:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L921:
	.byte	5,19,7,0,5,2
	.word	.L105
	.byte	3,170,7,1,5,5,9
	.half	.L481-.L105
	.byte	3,10,1,9
	.half	.L922-.L481
	.byte	3,10,1,5,20,9
	.half	.L923-.L922
	.byte	3,3,1,5,55,9
	.half	.L924-.L923
	.byte	3,6,1,5,1,7,9
	.half	.L925-.L924
	.byte	3,32,1,7,9
	.half	.L276-.L925
	.byte	0,1,1
.L919:
	.sdecl	'.debug_ranges',debug,cluster('Smu_lClearAllAlarms')
	.sect	'.debug_ranges'
.L275:
	.word	-1,.L105,0,.L276-.L105,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_lClrAlarmStatus')
	.sect	'.debug_info'
.L277:
	.word	258
	.half	3
	.word	.L278
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L280,.L279
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_lClrAlarmStatus',0,1,130,8,13,1,1
	.word	.L107,.L439,.L106
	.byte	4
	.byte	'AlarmGroup',0,1,130,8,56
	.word	.L440,.L441
	.byte	4
	.byte	'AlarmPos',0,1,131,8,55
	.word	.L442,.L443
	.byte	5
	.word	.L107,.L439
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_lClrAlarmStatus')
	.sect	'.debug_abbrev'
.L278:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_lClrAlarmStatus')
	.sect	'.debug_line'
.L279:
	.word	.L927-.L926
.L926:
	.half	3
	.word	.L929-.L928
.L928:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L929:
	.byte	5,3,7,0,5,2
	.word	.L107
	.byte	3,136,8,1,5,5,7,9
	.half	.L930-.L107
	.byte	3,6,1,9
	.half	.L931-.L930
	.byte	3,7,1,5,1,9
	.half	.L3-.L931
	.byte	3,58,1,7,9
	.half	.L281-.L3
	.byte	0,1,1
.L927:
	.sdecl	'.debug_ranges',debug,cluster('Smu_lClrAlarmStatus')
	.sect	'.debug_ranges'
.L280:
	.word	-1,.L107,0,.L281-.L107,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_lSetAlarmStatus')
	.sect	'.debug_info'
.L282:
	.word	281
	.half	3
	.word	.L283
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L285,.L284
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_lSetAlarmStatus',0,1,234,8,13,1,1
	.word	.L109,.L444,.L108
	.byte	4
	.byte	'AlarmGroup',0,1,234,8,56
	.word	.L445,.L446
	.byte	4
	.byte	'AlarmPos',0,1,235,8,55
	.word	.L447,.L448
	.byte	5
	.word	.L109,.L444
	.byte	6
	.byte	'SmuState',0,1,237,8,21
	.word	.L301,.L449
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_lSetAlarmStatus')
	.sect	'.debug_abbrev'
.L283:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_lSetAlarmStatus')
	.sect	'.debug_line'
.L284:
	.word	.L933-.L932
.L932:
	.half	3
	.word	.L935-.L934
.L934:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L935:
	.byte	5,31,7,0,5,2
	.word	.L109
	.byte	3,241,8,1,5,3,9
	.half	.L936-.L109
	.byte	3,5,1,5,5,7,9
	.half	.L937-.L936
	.byte	3,8,1,5,12,9
	.half	.L4-.L937
	.byte	3,8,1,5,60,7,9
	.half	.L938-.L4
	.byte	1,5,29,7,9
	.half	.L6-.L938
	.byte	3,7,1,5,5,9
	.half	.L486-.L6
	.byte	1,5,7,7,9
	.half	.L939-.L486
	.byte	3,6,1,5,1,9
	.half	.L7-.L939
	.byte	3,8,1,7,9
	.half	.L286-.L7
	.byte	0,1,1
.L933:
	.sdecl	'.debug_ranges',debug,cluster('Smu_lSetAlarmStatus')
	.sect	'.debug_ranges'
.L285:
	.word	-1,.L109,0,.L286-.L109,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_lSetAlmAction')
	.sect	'.debug_info'
.L287:
	.word	471
	.half	3
	.word	.L288
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L290,.L289
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_lSetAlmAction',0,1,186,9,23
	.word	.L301
	.byte	1,1
	.word	.L111,.L450,.L110
	.byte	4
	.byte	'AlarmGroup',0,1,186,9,64
	.word	.L451,.L452
	.byte	4
	.byte	'AlarmPos',0,1,187,9,54
	.word	.L453,.L454
	.byte	4
	.byte	'AlarmAction',0,1,188,9,62
	.word	.L455,.L456
	.byte	4
	.byte	'FSPAction',0,1,189,9,56
	.word	.L457,.L458
	.byte	5
	.word	.L111,.L450
	.byte	6
	.byte	'AlarmGroupCFIndex',0,1,191,9,9
	.word	.L301,.L459
	.byte	6
	.byte	'AlarmGroupCF2',0,1,192,9,10
	.word	.L306,.L460
	.byte	6
	.byte	'AlarmGroupCF1',0,1,193,9,10
	.word	.L306,.L461
	.byte	6
	.byte	'AlarmGroupCF0',0,1,194,9,10
	.word	.L306,.L462
	.byte	6
	.byte	'AlarmGroupCFMask',0,1,195,9,10
	.word	.L306,.L463
	.byte	6
	.byte	'RetVal',0,1,196,9,18
	.word	.L301,.L464
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_lSetAlmAction')
	.sect	'.debug_abbrev'
.L288:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_lSetAlmAction')
	.sect	'.debug_line'
.L289:
	.word	.L941-.L940
.L940:
	.half	3
	.word	.L943-.L942
.L942:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L943:
	.byte	5,23,7,0,5,2
	.word	.L111
	.byte	3,185,9,1,5,25,9
	.half	.L490-.L111
	.byte	3,10,1,5,49,9
	.half	.L492-.L490
	.byte	3,3,1,5,23,9
	.half	.L944-.L492
	.byte	1,5,24,9
	.half	.L494-.L944
	.byte	3,3,1,5,48,9
	.half	.L495-.L494
	.byte	1,5,22,9
	.half	.L496-.L495
	.byte	1,5,30,9
	.half	.L497-.L496
	.byte	3,6,1,5,21,9
	.half	.L488-.L497
	.byte	3,5,1,5,38,9
	.half	.L945-.L488
	.byte	1,5,3,9
	.half	.L946-.L945
	.byte	3,5,1,5,51,7,9
	.half	.L499-.L946
	.byte	3,8,1,5,50,9
	.half	.L500-.L499
	.byte	3,1,1,5,60,9
	.half	.L493-.L500
	.byte	3,3,1,5,51,9
	.half	.L501-.L493
	.byte	3,1,1,5,21,9
	.half	.L502-.L501
	.byte	3,1,1,5,60,9
	.half	.L505-.L502
	.byte	3,3,1,5,51,9
	.half	.L504-.L505
	.byte	3,1,1,5,21,9
	.half	.L506-.L504
	.byte	3,1,1,5,5,9
	.half	.L507-.L506
	.byte	3,6,1,9
	.half	.L947-.L507
	.byte	3,8,1,9
	.half	.L948-.L947
	.byte	3,10,1,9
	.half	.L949-.L948
	.byte	3,12,1,9
	.half	.L950-.L949
	.byte	3,12,1,9
	.half	.L951-.L950
	.byte	3,9,1,5,12,9
	.half	.L952-.L951
	.byte	3,3,1,5,25,9
	.half	.L9-.L952
	.byte	3,55,1,5,29,9
	.half	.L953-.L9
	.byte	3,4,1,5,3,9
	.half	.L954-.L953
	.byte	3,4,1,5,1,9
	.half	.L510-.L954
	.byte	3,1,1,7,9
	.half	.L291-.L510
	.byte	0,1,1
.L941:
	.sdecl	'.debug_ranges',debug,cluster('Smu_lSetAlmAction')
	.sect	'.debug_ranges'
.L290:
	.word	-1,.L111,0,.L291-.L111,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_lGetAlmAction')
	.sect	'.debug_info'
.L292:
	.word	496
	.half	3
	.word	.L293
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L295,.L294
	.byte	2
	.word	.L158
	.byte	3
	.byte	'Smu_lGetAlmAction',0,1,134,11,23
	.word	.L301
	.byte	1,1
	.word	.L113,.L465,.L112
	.byte	4
	.byte	'AlarmGroup',0,1,134,11,64
	.word	.L466,.L467
	.byte	4
	.byte	'AlarmPos',0,1,135,11,53
	.word	.L468,.L469
	.byte	4
	.byte	'IntAlarmAction',0,1,136,11,63
	.word	.L470,.L471
	.byte	4
	.byte	'FSPAction',0,1,137,11,57
	.word	.L472,.L473
	.byte	5
	.word	.L113,.L465
	.byte	6
	.byte	'RetVal',0,1,139,11,18
	.word	.L301,.L474
	.byte	6
	.byte	'AlarmGroupCF2',0,1,140,11,11
	.word	.L306,.L475
	.byte	6
	.byte	'AlarmGroupCF1',0,1,141,11,11
	.word	.L306,.L476
	.byte	6
	.byte	'AlarmGroupCF0',0,1,142,11,11
	.word	.L306,.L477
	.byte	6
	.byte	'AlarmGroupCFIndex',0,1,143,11,10
	.word	.L306,.L478
	.byte	6
	.byte	'IntActionRes',0,1,144,11,28
	.word	.L301,.L479
	.byte	6
	.byte	'FSPActionRes',0,1,145,11,21
	.word	.L306,.L480
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_lGetAlmAction')
	.sect	'.debug_abbrev'
.L293:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Smu_lGetAlmAction')
	.sect	'.debug_line'
.L294:
	.word	.L956-.L955
.L955:
	.half	3
	.word	.L958-.L957
.L957:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0,0,0,0,0
.L958:
	.byte	5,3,7,0,5,2
	.word	.L113
	.byte	3,149,11,1,5,53,7,9
	.half	.L959-.L113
	.byte	3,6,1,5,42,9
	.half	.L512-.L959
	.byte	3,11,1,5,50,9
	.half	.L960-.L512
	.byte	1,5,69,9
	.half	.L961-.L960
	.byte	1,5,39,9
	.half	.L962-.L961
	.byte	3,1,1,5,69,9
	.half	.L514-.L962
	.byte	3,7,1,5,41,9
	.half	.L963-.L514
	.byte	3,1,1,5,21,9
	.half	.L513-.L963
	.byte	1,5,67,9
	.half	.L964-.L513
	.byte	1,5,71,9
	.half	.L965-.L964
	.byte	1,5,39,9
	.half	.L966-.L965
	.byte	3,1,1,5,66,9
	.half	.L967-.L966
	.byte	1,5,69,9
	.half	.L517-.L967
	.byte	3,8,1,5,21,9
	.half	.L968-.L517
	.byte	3,1,1,5,67,9
	.half	.L969-.L968
	.byte	1,5,71,9
	.half	.L970-.L969
	.byte	1,5,39,9
	.half	.L971-.L970
	.byte	3,1,1,5,66,9
	.half	.L518-.L971
	.byte	1,5,63,9
	.half	.L972-.L518
	.byte	3,7,1,5,37,9
	.half	.L515-.L972
	.byte	3,1,1,5,21,9
	.half	.L973-.L515
	.byte	3,127,1,5,41,9
	.half	.L974-.L973
	.byte	3,9,1,5,52,9
	.half	.L975-.L974
	.byte	1,5,72,9
	.half	.L976-.L975
	.byte	1,5,40,9
	.half	.L519-.L976
	.byte	3,1,1,5,16,9
	.half	.L520-.L519
	.byte	3,126,1,5,18,9
	.half	.L11-.L520
	.byte	3,44,1,9
	.half	.L521-.L11
	.byte	3,3,1,5,7,9
	.half	.L522-.L521
	.byte	3,5,1,5,21,7,9
	.half	.L977-.L522
	.byte	3,1,1,7,9
	.half	.L978-.L977
	.byte	3,1,1,7,9
	.half	.L979-.L978
	.byte	3,1,1,7,9
	.half	.L980-.L979
	.byte	3,1,1,7,9
	.half	.L981-.L980
	.byte	3,1,1,7,9
	.half	.L982-.L981
	.byte	3,1,1,7,9
	.half	.L12-.L982
	.byte	3,1,1,5,12,7,9
	.half	.L983-.L12
	.byte	3,5,1,5,1,9
	.half	.L523-.L983
	.byte	3,13,1,5,12,7,9
	.half	.L18-.L523
	.byte	3,122,1,5,1,9
	.half	.L524-.L18
	.byte	3,6,1,7,9
	.half	.L296-.L524
	.byte	0,1,1
.L956:
	.sdecl	'.debug_ranges',debug,cluster('Smu_lGetAlmAction')
	.sect	'.debug_ranges'
.L295:
	.word	-1,.L113,0,.L296-.L113,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_LockAddress')
	.sect	'.debug_info'
.L297:
	.word	186
	.half	3
	.word	.L298
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L158
	.byte	3
	.byte	'Smu_LockAddress',0,4,189,3,15
	.word	.L306
	.byte	5,3
	.word	Smu_LockAddress
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_LockAddress')
	.sect	'.debug_abbrev'
.L298:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Smu_CmdLockAddress')
	.sect	'.debug_info'
.L299:
	.word	189
	.half	3
	.word	.L300
	.byte	4,1
	.byte	'..\\Mcal\\Tricore\\Smu\\ssc\\src\\Smu.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L158
	.byte	3
	.byte	'Smu_CmdLockAddress',0,4,193,3,15
	.word	.L306
	.byte	5,3
	.word	Smu_CmdLockAddress
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Smu_CmdLockAddress')
	.sect	'.debug_abbrev'
.L300:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_ActivateFSP')
	.sect	'.debug_loc'
.L390:
	.word	-1,.L133,.L565-.L133,.L387-.L133
	.half	1
	.byte	95
	.word	0,0
.L388:
	.word	-1,.L133,.L566-.L133,.L387-.L133
	.half	1
	.byte	82
	.word	0,0
.L132:
	.word	-1,.L133,0,.L387-.L133
	.half	2
	.byte	138,0
	.word	0,0
.L389:
	.word	-1,.L133,.L564-.L133,.L387-.L133
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_ActivatePES')
	.sect	'.debug_loc'
.L412:
	.word	-1,.L149,.L602-.L149,.L409-.L149
	.half	1
	.byte	95
	.word	0,0
.L410:
	.word	-1,.L149,.L603-.L149,.L409-.L149
	.half	1
	.byte	82
	.word	0,0
.L148:
	.word	-1,.L149,0,.L409-.L149
	.half	2
	.byte	138,0
	.word	0,0
.L411:
	.word	-1,.L149,.L601-.L149,.L409-.L149
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_ActivateRunState')
	.sect	'.debug_loc'
.L341:
	.word	-1,.L147,0,.L592-.L147
	.half	1
	.byte	84
	.word	.L593-.L147,.L339-.L147
	.half	1
	.byte	88
	.word	.L81-.L147,.L597-.L147
	.half	1
	.byte	84
	.word	0,0
.L344:
	.word	-1,.L147,.L598-.L147,.L80-.L147
	.half	1
	.byte	95
	.word	.L85-.L147,.L339-.L147
	.half	1
	.byte	95
	.word	0,0
.L342:
	.word	-1,.L147,.L599-.L147,.L85-.L147
	.half	1
	.byte	82
	.word	.L600-.L147,.L339-.L147
	.half	1
	.byte	82
	.word	0,0
.L343:
	.word	-1,.L147,.L595-.L147,.L596-.L147
	.half	1
	.byte	95
	.word	.L81-.L147,.L83-.L147
	.half	1
	.byte	95
	.word	0,0
.L146:
	.word	-1,.L147,0,.L339-.L147
	.half	2
	.byte	138,0
	.word	0,0
.L345:
	.word	-1,.L147,.L594-.L147,.L339-.L147
	.half	1
	.byte	89
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_ClearAlarmExecutionStatus')
	.sect	'.debug_loc'
.L423:
	.word	-1,.L155,0,.L606-.L155
	.half	1
	.byte	84
	.word	0,0
.L424:
	.word	-1,.L155,.L610-.L155,.L421-.L155
	.half	1
	.byte	82
	.word	0,0
.L154:
	.word	-1,.L155,0,.L421-.L155
	.half	2
	.byte	138,0
	.word	0,0
.L425:
	.word	-1,.L155,.L607-.L155,.L421-.L155
	.half	1
	.byte	95
	.word	.L608-.L155,.L609-.L155
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_ClearAlarmStatus')
	.sect	'.debug_loc'
.L348:
	.word	-1,.L119,0,.L535-.L119
	.half	1
	.byte	84
	.word	.L539-.L119,.L540-.L119
	.half	1
	.byte	88
	.word	.L44-.L119,.L541-.L119
	.half	1
	.byte	88
	.word	.L542-.L119,.L543-.L119
	.half	1
	.byte	88
	.word	0,0
.L350:
	.word	-1,.L119,0,.L535-.L119
	.half	1
	.byte	85
	.word	.L539-.L119,.L540-.L119
	.half	1
	.byte	89
	.word	.L537-.L119,.L45-.L119
	.half	1
	.byte	89
	.word	0,0
.L352:
	.word	-1,.L119,.L536-.L119,.L537-.L119
	.half	1
	.byte	95
	.word	.L45-.L119,.L346-.L119
	.half	1
	.byte	95
	.word	0,0
.L351:
	.word	-1,.L119,.L544-.L119,.L346-.L119
	.half	1
	.byte	82
	.word	0,0
.L118:
	.word	-1,.L119,0,.L346-.L119
	.half	2
	.byte	138,0
	.word	0,0
.L353:
	.word	-1,.L119,.L538-.L119,.L346-.L119
	.half	1
	.byte	90
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_CoreAliveTest')
	.sect	'.debug_loc'
.L414:
	.word	-1,.L151,.L604-.L151,.L413-.L151
	.half	1
	.byte	82
	.word	0,0
.L150:
	.word	-1,.L151,0,.L413-.L151
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_DeInit')
	.sect	'.debug_loc'
.L312:
	.word	-1,.L117,.L531-.L117,.L31-.L117
	.half	1
	.byte	82
	.word	.L29-.L117,.L534-.L117
	.half	1
	.byte	82
	.word	0,0
.L311:
	.word	-1,.L117,.L532-.L117,.L29-.L117
	.half	1
	.byte	95
	.word	0,0
.L310:
	.word	-1,.L117,.L533-.L117,.L29-.L117
	.half	1
	.byte	82
	.word	.L534-.L117,.L309-.L117
	.half	1
	.byte	82
	.word	0,0
.L116:
	.word	-1,.L117,0,.L309-.L117
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_GetAlarmAction')
	.sect	'.debug_loc'
.L315:
	.word	-1,.L127,0,.L313-.L127
	.half	1
	.byte	84
	.word	0,0
.L317:
	.word	-1,.L127,0,.L313-.L127
	.half	1
	.byte	85
	.word	0,0
.L321:
	.word	-1,.L127,0,.L313-.L127
	.half	1
	.byte	101
	.word	0,0
.L319:
	.word	-1,.L127,0,.L313-.L127
	.half	1
	.byte	100
	.word	0,0
.L322:
	.word	0,0
.L126:
	.word	-1,.L127,0,.L313-.L127
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_GetAlarmDebugStatus')
	.sect	'.debug_loc'
.L370:
	.word	-1,.L125,0,.L368-.L125
	.half	1
	.byte	84
	.word	0,0
.L372:
	.word	-1,.L125,0,.L368-.L125
	.half	1
	.byte	100
	.word	0,0
.L373:
	.word	-1,.L125,.L555-.L125,.L368-.L125
	.half	1
	.byte	82
	.word	0,0
.L124:
	.word	-1,.L125,0,.L368-.L125
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_GetAlarmExecutionStatus')
	.sect	'.debug_loc'
.L419:
	.word	-1,.L153,0,.L415-.L153
	.half	1
	.byte	100
	.word	0,0
.L417:
	.word	-1,.L153,0,.L415-.L153
	.half	1
	.byte	84
	.word	0,0
.L420:
	.word	-1,.L153,.L605-.L153,.L415-.L153
	.half	1
	.byte	82
	.word	0,0
.L152:
	.word	-1,.L153,0,.L415-.L153
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_GetAlarmStatus')
	.sect	'.debug_loc'
.L364:
	.word	-1,.L123,0,.L362-.L123
	.half	1
	.byte	84
	.word	0,0
.L366:
	.word	-1,.L123,0,.L362-.L123
	.half	1
	.byte	100
	.word	0,0
.L367:
	.word	-1,.L123,.L554-.L123,.L362-.L123
	.half	1
	.byte	82
	.word	0,0
.L122:
	.word	-1,.L123,0,.L362-.L123
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_GetRTMissedEvent')
	.sect	'.debug_loc'
.L403:
	.word	-1,.L141,0,.L399-.L141
	.half	1
	.byte	100
	.word	0,0
.L404:
	.word	-1,.L141,.L584-.L141,.L399-.L141
	.half	1
	.byte	82
	.word	0,0
.L140:
	.word	-1,.L141,0,.L581-.L141
	.half	2
	.byte	138,0
	.word	.L581-.L141,.L399-.L141
	.half	2
	.byte	138,8
	.word	.L399-.L141,.L399-.L141
	.half	2
	.byte	138,0
	.word	0,0
.L406:
	.word	-1,.L141,.L582-.L141,.L583-.L141
	.half	1
	.byte	95
	.word	0,0
.L401:
	.word	-1,.L141,0,.L399-.L141
	.half	1
	.byte	84
	.word	0,0
.L405:
	.word	-1,.L141,0,.L399-.L141
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_GetSmuState')
	.sect	'.debug_loc'
.L408:
	.word	-1,.L145,.L591-.L145,.L407-.L145
	.half	1
	.byte	82
	.word	0,0
.L144:
	.word	-1,.L145,0,.L407-.L145
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_Init')
	.sect	'.debug_loc'
.L304:
	.word	-1,.L115,0,.L525-.L115
	.half	1
	.byte	100
	.word	.L526-.L115,.L302-.L115
	.half	1
	.byte	111
	.word	0,0
.L308:
	.word	-1,.L115,.L525-.L115,.L527-.L115
	.half	1
	.byte	82
	.word	.L22-.L115,.L530-.L115
	.half	1
	.byte	82
	.word	0,0
.L307:
	.word	-1,.L115,.L528-.L115,.L22-.L115
	.half	1
	.byte	95
	.word	0,0
.L305:
	.word	-1,.L115,.L529-.L115,.L22-.L115
	.half	1
	.byte	82
	.word	.L530-.L115,.L302-.L115
	.half	1
	.byte	82
	.word	0,0
.L114:
	.word	-1,.L115,0,.L302-.L115
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_LockConfigRegs')
	.sect	'.debug_loc'
.L338:
	.word	-1,.L143,.L588-.L143,.L74-.L143
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L337:
	.word	-1,.L143,.L586-.L143,.L74-.L143
	.half	1
	.byte	89
	.word	0,0
.L334:
	.word	-1,.L143,.L589-.L143,.L74-.L143
	.half	1
	.byte	82
	.word	.L590-.L143,.L333-.L143
	.half	1
	.byte	82
	.word	0,0
.L336:
	.word	-1,.L143,.L587-.L143,.L74-.L143
	.half	1
	.byte	95
	.word	0,0
.L335:
	.word	-1,.L143,.L585-.L143,.L74-.L143
	.half	1
	.byte	88
	.word	0,0
.L142:
	.word	-1,.L143,0,.L333-.L143
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_RTStop')
	.sect	'.debug_loc'
.L396:
	.word	-1,.L139,.L579-.L139,.L391-.L139
	.half	1
	.byte	90
	.word	0,0
.L398:
	.word	-1,.L139,0,.L391-.L139
	.half	2
	.byte	145,120
	.word	0,0
.L394:
	.word	-1,.L139,.L580-.L139,.L391-.L139
	.half	1
	.byte	82
	.word	0,0
.L138:
	.word	-1,.L139,0,.L574-.L139
	.half	2
	.byte	138,0
	.word	.L574-.L139,.L391-.L139
	.half	2
	.byte	138,8
	.word	.L391-.L139,.L391-.L139
	.half	2
	.byte	138,0
	.word	0,0
.L395:
	.word	-1,.L139,.L578-.L139,.L391-.L139
	.half	1
	.byte	89
	.word	0,0
.L393:
	.word	-1,.L139,0,.L575-.L139
	.half	1
	.byte	84
	.word	.L576-.L139,.L577-.L139
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_RegisterMonitor')
	.sect	'.debug_loc'
.L431:
	.word	-1,.L157,.L616-.L157,.L611-.L157
	.half	5
	.byte	144,32,157,32,0
	.word	.L622-.L157,.L623-.L157
	.half	1
	.byte	95
	.word	.L624-.L157,.L101-.L157
	.half	1
	.byte	82
	.word	.L625-.L157,.L426-.L157
	.half	1
	.byte	95
	.word	0,0
.L433:
	.word	-1,.L157,.L613-.L157,.L614-.L157
	.half	1
	.byte	88
	.word	.L617-.L157,.L618-.L157
	.half	1
	.byte	84
	.word	0,0
.L436:
	.word	-1,.L157,.L619-.L157,.L620-.L157
	.half	1
	.byte	95
	.word	0,0
.L428:
	.word	-1,.L157,0,.L611-.L157
	.half	1
	.byte	100
	.word	0,0
.L430:
	.word	-1,.L157,0,.L611-.L157
	.half	1
	.byte	101
	.word	.L612-.L157,.L426-.L157
	.half	1
	.byte	111
	.word	0,0
.L434:
	.word	-1,.L157,.L614-.L157,.L426-.L157
	.half	1
	.byte	88
	.word	0,0
.L432:
	.word	-1,.L157,.L621-.L157,.L99-.L157
	.half	1
	.byte	82
	.word	.L626-.L157,.L426-.L157
	.half	1
	.byte	82
	.word	0,0
.L156:
	.word	-1,.L157,0,.L426-.L157
	.half	2
	.byte	138,0
	.word	0,0
.L435:
	.word	-1,.L157,.L615-.L157,.L426-.L157
	.half	1
	.byte	89
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_ReleaseErrorPin')
	.sect	'.debug_loc'
.L380:
	.word	-1,.L137,.L573-.L137,.L379-.L137
	.half	1
	.byte	82
	.word	0,0
.L136:
	.word	-1,.L137,0,.L379-.L137
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_ReleaseFSP')
	.sect	'.debug_loc'
.L385:
	.word	-1,.L131,.L561-.L131,.L57-.L131
	.half	1
	.byte	95
	.word	0,0
.L382:
	.word	-1,.L131,.L562-.L131,.L57-.L131
	.half	1
	.byte	82
	.word	.L563-.L131,.L381-.L131
	.half	1
	.byte	82
	.word	0,0
.L384:
	.word	-1,.L131,.L557-.L131,.L558-.L131
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L383:
	.word	-1,.L131,.L559-.L131,.L560-.L131
	.half	1
	.byte	95
	.word	0,0
.L130:
	.word	-1,.L131,0,.L381-.L131
	.half	2
	.byte	138,0
	.word	0,0
.L386:
	.word	-1,.L131,.L556-.L131,.L381-.L131
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_SetAlarmAction')
	.sect	'.debug_loc'
.L329:
	.word	-1,.L129,0,.L323-.L129
	.half	1
	.byte	86
	.word	0,0
.L325:
	.word	-1,.L129,0,.L323-.L129
	.half	1
	.byte	84
	.word	0,0
.L327:
	.word	-1,.L129,0,.L323-.L129
	.half	1
	.byte	85
	.word	0,0
.L331:
	.word	-1,.L129,0,.L323-.L129
	.half	1
	.byte	87
	.word	0,0
.L332:
	.word	0,0
.L128:
	.word	-1,.L129,0,.L323-.L129
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_SetAlarmStatus')
	.sect	'.debug_loc'
.L356:
	.word	-1,.L121,0,.L545-.L121
	.half	1
	.byte	84
	.word	.L547-.L121,.L548-.L121
	.half	1
	.byte	88
	.word	.L549-.L121,.L550-.L121
	.half	1
	.byte	88
	.word	0,0
.L358:
	.word	-1,.L121,0,.L545-.L121
	.half	1
	.byte	85
	.word	.L547-.L121,.L548-.L121
	.half	1
	.byte	89
	.word	.L551-.L121,.L552-.L121
	.half	1
	.byte	89
	.word	0,0
.L361:
	.word	-1,.L121,.L552-.L121,.L354-.L121
	.half	1
	.byte	95
	.word	0,0
.L359:
	.word	-1,.L121,.L553-.L121,.L354-.L121
	.half	1
	.byte	82
	.word	0,0
.L120:
	.word	-1,.L121,0,.L354-.L121
	.half	2
	.byte	138,0
	.word	0,0
.L360:
	.word	-1,.L121,.L546-.L121,.L354-.L121
	.half	1
	.byte	90
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_SetupErrorPin')
	.sect	'.debug_loc'
.L377:
	.word	-1,.L135,.L567-.L135,.L568-.L135
	.half	1
	.byte	95
	.word	0,0
.L378:
	.word	0,0
.L376:
	.word	-1,.L135,.L569-.L135,.L374-.L135
	.half	1
	.byte	88
	.word	.L570-.L135,.L571-.L135
	.half	1
	.byte	84
	.word	0,0
.L375:
	.word	-1,.L135,.L572-.L135,.L374-.L135
	.half	1
	.byte	82
	.word	0,0
.L134:
	.word	-1,.L135,0,.L374-.L135
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_lClearAllAlarms')
	.sect	'.debug_loc'
.L438:
	.word	-1,.L105,.L481-.L105,.L437-.L105
	.half	1
	.byte	95
	.word	0,0
.L104:
	.word	-1,.L105,0,.L437-.L105
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_lClrAlarmStatus')
	.sect	'.debug_loc'
.L441:
	.word	-1,.L107,0,.L482-.L107
	.half	1
	.byte	84
	.word	.L3-.L107,.L439-.L107
	.half	1
	.byte	84
	.word	0,0
.L443:
	.word	-1,.L107,0,.L439-.L107
	.half	1
	.byte	85
	.word	0,0
.L106:
	.word	-1,.L107,0,.L439-.L107
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_lGetAlmAction')
	.sect	'.debug_loc'
.L467:
	.word	-1,.L113,0,.L465-.L113
	.half	1
	.byte	84
	.word	0,0
.L477:
	.word	-1,.L113,.L514-.L113,.L515-.L113
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L476:
	.word	-1,.L113,.L517-.L113,.L11-.L113
	.half	1
	.byte	81
	.word	0,0
.L475:
	.word	-1,.L113,.L518-.L113,.L519-.L113
	.half	1
	.byte	95
	.word	0,0
.L478:
	.word	-1,.L113,.L512-.L113,.L513-.L113
	.half	1
	.byte	95
	.word	0,0
.L469:
	.word	-1,.L113,0,.L511-.L113
	.half	1
	.byte	85
	.word	.L516-.L113,.L11-.L113
	.half	1
	.byte	82
	.word	.L519-.L113,.L520-.L113
	.half	1
	.byte	85
	.word	0,0
.L473:
	.word	-1,.L113,0,.L465-.L113
	.half	1
	.byte	101
	.word	0,0
.L480:
	.word	-1,.L113,.L522-.L113,.L465-.L113
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L479:
	.word	-1,.L113,.L521-.L113,.L465-.L113
	.half	1
	.byte	95
	.word	0,0
.L471:
	.word	-1,.L113,0,.L465-.L113
	.half	1
	.byte	100
	.word	0,0
.L474:
	.word	-1,.L113,.L523-.L113,.L18-.L113
	.half	1
	.byte	82
	.word	.L524-.L113,.L465-.L113
	.half	1
	.byte	82
	.word	0,0
.L112:
	.word	-1,.L113,0,.L465-.L113
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_lSetAlarmStatus')
	.sect	'.debug_loc'
.L446:
	.word	-1,.L109,0,.L483-.L109
	.half	1
	.byte	84
	.word	.L4-.L109,.L444-.L109
	.half	1
	.byte	84
	.word	0,0
.L448:
	.word	-1,.L109,0,.L484-.L109
	.half	1
	.byte	85
	.word	0,0
.L449:
	.word	-1,.L109,.L485-.L109,.L486-.L109
	.half	1
	.byte	95
	.word	0,0
.L108:
	.word	-1,.L109,0,.L444-.L109
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Smu_lSetAlmAction')
	.sect	'.debug_loc'
.L456:
	.word	-1,.L111,0,.L488-.L111
	.half	1
	.byte	86
	.word	.L499-.L111,.L500-.L111
	.half	1
	.byte	91
	.word	.L493-.L111,.L501-.L111
	.half	1
	.byte	91
	.word	.L505-.L111,.L504-.L111
	.half	1
	.byte	91
	.word	0,0
.L452:
	.word	-1,.L111,0,.L488-.L111
	.half	1
	.byte	84
	.word	.L489-.L111,.L450-.L111
	.half	1
	.byte	89
	.word	0,0
.L462:
	.word	-1,.L111,.L493-.L111,.L9-.L111
	.half	1
	.byte	88
	.word	0,0
.L461:
	.word	-1,.L111,.L503-.L111,.L504-.L111
	.half	1
	.byte	95
	.word	.L505-.L111,.L9-.L111
	.half	2
	.byte	145,120
	.word	.L508-.L111,.L509-.L111
	.half	1
	.byte	84
	.word	0,0
.L460:
	.word	-1,.L111,.L507-.L111,.L9-.L111
	.half	1
	.byte	91
	.word	0,0
.L459:
	.word	-1,.L111,.L494-.L111,.L450-.L111
	.half	1
	.byte	93
	.word	0,0
.L463:
	.word	-1,.L111,.L497-.L111,.L498-.L111
	.half	1
	.byte	94
	.word	0,0
.L454:
	.word	-1,.L111,0,.L488-.L111
	.half	1
	.byte	85
	.word	.L495-.L111,.L496-.L111
	.half	1
	.byte	90
	.word	.L500-.L111,.L493-.L111
	.half	1
	.byte	90
	.word	.L502-.L111,.L503-.L111
	.half	1
	.byte	90
	.word	.L506-.L111,.L507-.L111
	.half	1
	.byte	90
	.word	.L498-.L111,.L491-.L111
	.half	1
	.byte	90
	.word	0,0
.L458:
	.word	-1,.L111,0,.L488-.L111
	.half	1
	.byte	87
	.word	.L490-.L111,.L491-.L111
	.half	1
	.byte	92
	.word	0,0
.L464:
	.word	-1,.L111,.L492-.L111,.L493-.L111
	.half	1
	.byte	88
	.word	.L495-.L111,.L496-.L111
	.half	5
	.byte	144,32,157,32,0
	.word	.L9-.L111,.L450-.L111
	.half	1
	.byte	88
	.word	.L510-.L111,.L450-.L111
	.half	1
	.byte	82
	.word	0,0
.L110:
	.word	-1,.L111,0,.L487-.L111
	.half	2
	.byte	138,0
	.word	.L487-.L111,.L450-.L111
	.half	2
	.byte	138,8
	.word	.L450-.L111,.L450-.L111
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L984:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('Smu_lClearAllAlarms')
	.sect	'.debug_frame'
	.word	12
	.word	.L984,.L105,.L437-.L105
	.sdecl	'.debug_frame',debug,cluster('Smu_lClrAlarmStatus')
	.sect	'.debug_frame'
	.word	12
	.word	.L984,.L107,.L439-.L107
	.sdecl	'.debug_frame',debug,cluster('Smu_lSetAlarmStatus')
	.sect	'.debug_frame'
	.word	12
	.word	.L984,.L109,.L444-.L109
	.sdecl	'.debug_frame',debug,cluster('Smu_lSetAlmAction')
	.sect	'.debug_frame'
	.word	36
	.word	.L984,.L111,.L450-.L111
	.byte	4
	.word	(.L487-.L111)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L450-.L487)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Smu_lGetAlmAction')
	.sect	'.debug_frame'
	.word	20
	.word	.L984,.L113,.L465-.L113
	.byte	8,18,8,19,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Smu_Init')
	.sect	'.debug_frame'
	.word	12
	.word	.L984,.L115,.L302-.L115
	.sdecl	'.debug_frame',debug,cluster('Smu_DeInit')
	.sect	'.debug_frame'
	.word	12
	.word	.L984,.L117,.L309-.L117
	.sdecl	'.debug_frame',debug,cluster('Smu_ClearAlarmStatus')
	.sect	'.debug_frame'
	.word	12
	.word	.L984,.L119,.L346-.L119
	.sdecl	'.debug_frame',debug,cluster('Smu_SetAlarmStatus')
	.sect	'.debug_frame'
	.word	12
	.word	.L984,.L121,.L354-.L121
	.sdecl	'.debug_frame',debug,cluster('Smu_GetAlarmStatus')
	.sect	'.debug_frame'
	.word	24
	.word	.L984,.L123,.L362-.L123
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Smu_GetAlarmDebugStatus')
	.sect	'.debug_frame'
	.word	24
	.word	.L984,.L125,.L368-.L125
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Smu_GetAlarmAction')
	.sect	'.debug_frame'
	.word	12
	.word	.L984,.L127,.L313-.L127
	.sdecl	'.debug_frame',debug,cluster('Smu_SetAlarmAction')
	.sect	'.debug_frame'
	.word	12
	.word	.L984,.L129,.L323-.L129
	.sdecl	'.debug_frame',debug,cluster('Smu_ReleaseFSP')
	.sect	'.debug_frame'
	.word	12
	.word	.L984,.L131,.L381-.L131
	.sdecl	'.debug_frame',debug,cluster('Smu_ActivateFSP')
	.sect	'.debug_frame'
	.word	12
	.word	.L984,.L133,.L387-.L133
	.sdecl	'.debug_frame',debug,cluster('Smu_SetupErrorPin')
	.sect	'.debug_frame'
	.word	12
	.word	.L984,.L135,.L374-.L135
	.sdecl	'.debug_frame',debug,cluster('Smu_ReleaseErrorPin')
	.sect	'.debug_frame'
	.word	12
	.word	.L984,.L137,.L379-.L137
	.sdecl	'.debug_frame',debug,cluster('Smu_RTStop')
	.sect	'.debug_frame'
	.word	36
	.word	.L984,.L139,.L391-.L139
	.byte	4
	.word	(.L574-.L139)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L391-.L574)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Smu_GetRTMissedEvent')
	.sect	'.debug_frame'
	.word	44
	.word	.L984,.L141,.L399-.L141
	.byte	8,18,8,19,8,21,8,22,8,23,4
	.word	(.L581-.L141)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L399-.L581)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('Smu_LockConfigRegs')
	.sect	'.debug_frame'
	.word	12
	.word	.L984,.L143,.L333-.L143
	.sdecl	'.debug_frame',debug,cluster('Smu_GetSmuState')
	.sect	'.debug_frame'
	.word	24
	.word	.L984,.L145,.L407-.L145
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Smu_ActivateRunState')
	.sect	'.debug_frame'
	.word	12
	.word	.L984,.L147,.L339-.L147
	.sdecl	'.debug_frame',debug,cluster('Smu_ActivatePES')
	.sect	'.debug_frame'
	.word	12
	.word	.L984,.L149,.L409-.L149
	.sdecl	'.debug_frame',debug,cluster('Smu_CoreAliveTest')
	.sect	'.debug_frame'
	.word	24
	.word	.L984,.L151,.L413-.L151
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Smu_GetAlarmExecutionStatus')
	.sect	'.debug_frame'
	.word	24
	.word	.L984,.L153,.L415-.L153
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Smu_ClearAlarmExecutionStatus')
	.sect	'.debug_frame'
	.word	12
	.word	.L984,.L155,.L421-.L155
	.sdecl	'.debug_frame',debug,cluster('Smu_RegisterMonitor')
	.sect	'.debug_frame'
	.word	12
	.word	.L984,.L157,.L426-.L157

; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5585  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5586  /* Enable / Disable the use of the function as per Init Check API
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5587  enabled/disableds*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5588  /*[cover parentID={13D694F5-C200-415a-9315-24246544DA9E}] [/cover]*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5589  #if(SMU_INIT_CHECK_API==STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5590  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5591  ** Traceability      :[cover parentID={E91BE0ED-EBBE-49de-80D7-1F05348A6D92}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5592  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5593  ** Syntax           :Std_ReturnType Smu_InitCheck (const Smu_ConfigType*      **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5594  **                   const ConfigPtr)                                         **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5595  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5596  ** Description      : This API checks the initialization values after SMU is  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5597  **                    initialized. It should be called after Smu_Init to check**
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5598  **                    the initialization values.                              **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5599  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5600  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5601  ** Service ID       : 0xA9                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5602  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5603  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5604  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5605  ** Reentrancy       : Reentrant for different cores                           **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5606  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5607  ** Parameters(in)   : ConfigPtr - Pointer to the SMU configuration for        **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5608  **                                  initialization                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5609  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5610  ** Parameters (out) : none                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5611  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5612  ** Return value     : E_OK - Operation successfully performed                 **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5613  **                    E_NOT_OK - Operation failed                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5614  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5615  Std_ReturnType Smu_InitCheck (const Smu_ConfigType* const ConfigPtr)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5616  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5617    Std_ReturnType TempErrFlag = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5618    uint32 Index = 0U;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5619    uint32 SfrVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5620    uint32 CfgVal;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5621    volatile uint32 CompareFlag = 0xFFFFFFFFU;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5622  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5623    Std_ReturnType RetVal = E_NOT_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5624    /* [cover parentID={1BA15EAC-E9D5-45d9-9954-B60C2CCAE746}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5625    Is input parameter a NULL pointer?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5626    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5627    if(ConfigPtr != NULL_PTR)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5628    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5629      /*Check if driver is initialized*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5630      /* [cover parentID={620CA9BE-116B-434d-A6BE-F9AF70588E38}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5631      Is driver initialized?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5632      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5633      if(SMU_INITIALIZED == Smu_InitStatus)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5634      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5635        /* [cover parentID={AC89776F-909E-4cd7-82F9-CC71AFC01491}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5636        Set result as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5637        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5638        RetVal = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5639      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5640    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5641    /*Check if all checks have passed*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5642    /* [cover parentID={CCF354E8-BFE3-428a-ADED-730ED2D3D418}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5643    Have all checks passed?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5644    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5645    if(RetVal == E_OK)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5646    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5647  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5648      /*Compare FSP register value with configuration.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5649      Update flag as per result*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5650      /* [cover parentID={BC0AA302-67FE-4eb2-83F1-70CB6EB9EB1A}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5651      Compare the FSP configuration registers for SMU Core with the
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5652      configurations and update the flag as per the result.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5653      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5654      SfrVal = (uint32)SMU_FSP.U ;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5655      CfgVal = (ConfigPtr->FSPCfg | SMU_FSP_RESET_VAL);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5656      CompareFlag &= ~(SfrVal ^ CfgVal);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5657  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5658      /*Compare RTC register value with configuration.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5659      Update flag as per result*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5660      SfrVal = (uint32)SMU_RTC.U;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5661      CfgVal = ConfigPtr->RTCCfg;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5662      CompareFlag &= ~(SfrVal ^ CfgVal);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5663  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5664      /*Compare AGC register value with configuration.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5665      Update flag as per result*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5666      SfrVal = (uint32)SMU_AGC.U;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5667      CfgVal = ConfigPtr->AGCCfg;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5668      CompareFlag &= ~(SfrVal ^ CfgVal);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5669  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5670      /*Compare RTAC00 register value with configuration.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5671      Update flag as per result*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5672      SfrVal = (uint32)SMU_RTAC00.U;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5673      CfgVal = ConfigPtr->RTAC00Cfg;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5674      CompareFlag &= ~(SfrVal ^ CfgVal);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5675  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5676      /*Compare RTAC01 register value with configuration.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5677      Update flag as per result*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5678      SfrVal = (uint32)SMU_RTAC01.U;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5679      CfgVal = ConfigPtr->RTAC01Cfg;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5680      CompareFlag &= ~(SfrVal ^ CfgVal);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5681  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5682      /*Compare RTAC10 register value with configuration.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5683      Update flag as per result*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5684      SfrVal = (uint32)SMU_RTAC10.U;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5685      CfgVal = ConfigPtr->RTAC10Cfg;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5686      CompareFlag &= ~(SfrVal ^ CfgVal);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5687  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5688      /*Compare RTAC11 register value with configuration.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5689      Update flag as per result*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5690      SfrVal = (uint32)SMU_RTAC11.U;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5691      CfgVal = ConfigPtr->RTAC11Cfg;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5692      CompareFlag &= ~(SfrVal ^ CfgVal);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5693  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5694      /*Compare Smu_stdby CMD register value with configuration.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5695      Update flag as per result*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5696      SfrVal = (uint32)PMS_CMD_STDBY.U ;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5697      CfgVal = ConfigPtr->AlarmStdbyCfg ;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5698      CompareFlag &= ~(SfrVal ^ CfgVal);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5699  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5700      /*Compare Smu_stdby FSP group 20 register value with configuration.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5701      Update flag as per result*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5702      SfrVal = (uint32)PMS_AGFSP_STDBY0.U;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5703      CfgVal = ConfigPtr->AlarmStdbyFspConfig[0];
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5704      CompareFlag &= ~(SfrVal ^ CfgVal);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5705  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5706      /*Compare Smu_stdby FSP group 21 register value with configuration.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5707      Update flag as per result*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5708      SfrVal = (uint32)PMS_AGFSP_STDBY1.U ;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5709      CfgVal = ConfigPtr->AlarmStdbyFspConfig[1];
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5710      CompareFlag &= ~(SfrVal ^ CfgVal);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5711  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5712      /*Compare alarm cfg register value with configuration.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5713      Update flag as per result*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5714      /* [cover parentID={28924FCC-2F91-4835-886B-8E47A7991C47}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5715      Compare the Alarm Group configuration registers for SMU Core
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5716      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5717      for(Index = 0U; Index < SMU_CORE_TOTAL_ALARM_CONFIG_REG; Index++)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5718      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5719        /* [cover parentID={28924FCC-2F91-4835-886B-8E47A7991C47}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5720        Compare the Alarm Group configuration registers for SMU Core
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5721        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5722        /* [cover parentID={C2FCC7F5-29EB-495c-B427-A9F97C3898E2}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5723        Compare the Alarm Group configuration registers for SMU Core
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5724        with the configurations and update the flag as per the result.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5725        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5726        /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between a
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5727        pointer of type to pointer of type uint32 is performed for
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5728        continuous array based access of the register. SFR.U based
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5729        access and Uint32* based access would be same because of
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5730        same data width. Advantange is better code.*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5731        SfrVal = (uint32)SMU_CORE_ALARM_GROUP->CfgReg[Index].U;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5732        CfgVal = ConfigPtr->AlarmCoreConfig[Index];
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5733        CompareFlag &= ~(SfrVal ^ CfgVal);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5734      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5735  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5736      /*Compare alarm FSP register value with configuration.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5737      Update flag as per result*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5738      /* [cover parentID={AED6A617-DBA0-4295-8B89-26C4FC7BF1D1}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5739      Compare FSP configuration register with the configurations and
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5740      update the flag as per the result.
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5741      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5742      for(Index = 0U; Index < SMU_CORE_TOTAL_ALARM_GROUPS; Index++)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5743      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5744        /* [cover parentID={015FD3E3-7EFD-4ec1-8FE0-2168AB6E9568}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5745        Compare the FSP configuration registers for SMU Core
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5746        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5747        /* MISRA2012_RULE_11_3_JUSTIFICATION: Conversion between a
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5748        pointer of type to pointer of type uint32 is performed for
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5749        continuous array based access of the register. SFR.U based
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5750        access and Uint32* based access would be same because of
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5751        same data width. Advantange is better code.*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5752        SfrVal = (uint32)SMU_CORE_ALARM_GROUP->FSPCfgReg[Index].U;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5753        CfgVal = ConfigPtr->AlarmCoreFspConfig[Index];
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5754        CompareFlag &= ~(SfrVal ^ CfgVal);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5755      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5756  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5757      /*Check the global variable status values and SFR values*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5758      /* [cover parentID={6D0881CD-8162-4215-B25F-E781AE1B77F3}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5759      Are the values of the global variables for error pin, driver status
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5760      and lock status not set,not failed and not locked respectively?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5761      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5762      if((Smu_LockState == SMU_NOT_LOCKED) &&
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5763          (Smu_DriverState == SMU_NOT_FAILED) &&
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5764          (Smu_ErrPinStatus == SMU_ERRPIN_NOTSET))
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5765      {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5766        /* [cover parentID={96EF5704-369F-43f0-A914-082CB48CA65D}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5767        Is result of comparison for all global variables and SFRs with
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5768        corresponding configurations positive ?
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5769        [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5770        if(CompareFlag == 0xFFFFFFFFU)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5771        {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5772          /* [cover parentID={EF046654-BDB4-4086-B6D0-A78DFDA07F16}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5773          Set result of comparison flag as E_OK
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5774          [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5775          TempErrFlag = E_OK;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5776        }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5777      }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5778    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5779    /* [cover parentID={7BEFF850-DF0C-4956-B47C-7E5114D0F669}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5780    Return Result
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5781    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5782    return TempErrFlag;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5783  }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5784  #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5785  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5786  /* Enable / Disable the use of the function as per Version Info API
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5787  enabled/disableds*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5788  #if (SMU_VERSION_INFO_API == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5789  /*******************************************************************************
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5790  ** Traceability      :[cover parentID={0718DB96-C902-43cd-A42E-FC4059BD228D}] **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5791  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5792  ** Syntax           :void Smu_GetVersionInfo(Std_VersionInfoType              **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5793  **                   * const VersionInfoPtr)                                  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5794  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5795  ** Description      : This function returns the version information of this   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5796  **                    module. The version information include :               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5797  **                    Module ID, Vendor ID. Vendor specific version numbers   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5798  **                    This function is available if the SMU_VERSION_INFO_API  **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5799  **                    is set ON                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5800  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5801  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5802  ** Service ID       : 0xBC                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5803  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5804  ** Sync/Async       : Synchronous                                             **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5805  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5806  ** Reentrancy       : Reentrant                                               **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5807  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5808  ** [/cover]                                                                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5809  ** Parameters(in)   : None                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5810  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5811  ** Parameters (out):  VersionInfoPtr - Pointer to store the                   **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5812  **                    version information of this module.                     **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5813  **                                                                            **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5814  ** Return value     : None                                                    **
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5815  *******************************************************************************/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5816  void Smu_GetVersionInfo(Std_VersionInfoType * const VersionInfoPtr)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5817  {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5818    /*Check if DET is enabled*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5819    /* [cover parentID={8181CA5D-94C5-4207-A800-9E368B1E4EEA}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5820    DET Check ON
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5821    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5822    #if (SMU_DEV_ERROR_DETECT == STD_ON) || (SMU_SAFETY_ENABLE == STD_ON)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5823    /* [cover parentID={3C8A18E2-7169-45d3-AB24-247579C15030}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5824    DET Check
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5825    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5826    /* [cover parentID={DF6CEAD8-4B1D-4abd-BDCA-ECC3632E904B}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5827    Check if pointer to location where  the version information should be
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5828    stored is a NULL pointer
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5829    [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5830    if ((VersionInfoPtr) == NULL_PTR)
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5831    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5832      /* Report SMU_E_PARAM_POINTER DET if service called with NULL_PTR*/
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5833      /* [cover parentID={EF18141C-BB95-4764-B8C0-6D8CC8851397}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5834      Report DET SMU_E_PARAM_POINTER
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5835      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5836      Smu_lReportError(SMU_SID_GET_VERSION_INFO, SMU_E_PARAM_POINTER);
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5837    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5838    else
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5839    #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5840    {
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5841      /* Vendor ID information */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5842      /* [cover parentID={426C377A-6C94-4bff-AEFF-BE1211513BBA}]
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5843      Extract Vendor ID
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5844      [/cover] */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5845      ((Std_VersionInfoType*)(VersionInfoPtr))->vendorID = SMU_VENDOR_ID;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5846      /* Smu module ID information */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5847      ((Std_VersionInfoType*)(VersionInfoPtr))->moduleID = SMU_MODULE_ID;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5848      /* Smu module Software major version information */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5849      ((Std_VersionInfoType*)(VersionInfoPtr))->sw_major_version =
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5850        (uint8)SMU_SW_MAJOR_VERSION;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5851      /* Smu module Software minor version information */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5852      ((Std_VersionInfoType*)(VersionInfoPtr))->sw_minor_version =
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5853        (uint8)SMU_SW_MINOR_VERSION;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5854      /* Smu module Software patch version information */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5855      ((Std_VersionInfoType*)(VersionInfoPtr))->sw_patch_version =
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5856        (uint8)SMU_SW_PATCH_VERSION;
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5857    }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5858  }
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5859  #endif
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5860  
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5861  #define SMU_STOP_SEC_CODE_ASIL_B_GLOBAL
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5862  /* MISRA2012_RULE_4_10_JUSTIFICATION: Smu_Memmap.h is repeatedly included
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5863   * without include guard. This is as per AUTOSAR */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5864  /* MISRA2012_RULE_20_1_JUSTIFICATION: declaration of Smu_InitStatus
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5865   * before include of memap.h - Accepted deviation in AUTOSAR */
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5866  #include "Smu_MemMap.h"
; ..\Mcal\Tricore\Smu\ssc\src\Smu.c	  5867  

	; Module end
