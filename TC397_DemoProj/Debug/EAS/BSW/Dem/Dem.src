	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 09003395"
	.compiler_invocation	"ctc -f cc34544a --dep-file=EAS\\BSW\\Dem\\.Dem.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --fp-model=+float -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Lib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\App_Func -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\demo -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Adc_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Gtm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\AscLin_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Can_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\EthV2_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Stm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Main -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\APP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\BswM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanSm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Com -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\ComM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Common -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Crc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Det -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\DoIP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EcuM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Eth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthSM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTrcv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FiM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FlsTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Nm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\PduR -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\RamTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\StbM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\arpa -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\net -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\sys -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\stdc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\apps -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\priv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\UdpNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Cal -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Daq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pag -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pgm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Std -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\XcpOnEth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Library\\Vfx_ComE2E -g2 --make-target=EAS\\BSW\\Dem\\Dem.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O1 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o EAS\\BSW\\Dem\\Dem.src ..\\EAS\\BSW\\Dem\\Dem.c"
	.compiler_name		"ctc"
	;source	'..\\EAS\\BSW\\Dem\\Dem.c'

	
$TC162
	
	.sdecl	'.text.Dem.DemInternal_CheckStorageMem',code,cluster('DemInternal_CheckStorageMem')
	.sect	'.text.Dem.DemInternal_CheckStorageMem'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	     1  /*  BEGIN_FILE_HDR
; ..\EAS\BSW\Dem\Dem.c	     2  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	     3  *   NOTICE
; ..\EAS\BSW\Dem\Dem.c	     4  *   This software is the property of HiRain Technologies. Any information
; ..\EAS\BSW\Dem\Dem.c	     5  *   contained in this doc should not be reproduced, or used, or disclosed
; ..\EAS\BSW\Dem\Dem.c	     6  *   without the written authorization from HiRain Technologies.
; ..\EAS\BSW\Dem\Dem.c	     7  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	     8  *   File Name       : Dem.c
; ..\EAS\BSW\Dem\Dem.c	     9  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	    10  *   Project/Product : AUTOSAR 4.2
; ..\EAS\BSW\Dem\Dem.c	    11  *   Title           : Dem.c
; ..\EAS\BSW\Dem\Dem.c	    12  *   Author          : Hirain
; ..\EAS\BSW\Dem\Dem.c	    13  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	    14  *   Description: Main source file of the AUTOSAR Diagnositc Event Manager,
; ..\EAS\BSW\Dem\Dem.c	    15  *                    AUTOSAR_SWS_DiagnosticEventManager.pdf (Release 4.2)
; ..\EAS\BSW\Dem\Dem.c	    16  *                    and ISO14229-1(2013).pdf.
; ..\EAS\BSW\Dem\Dem.c	    17  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	    18  *   Limitations: None
; ..\EAS\BSW\Dem\Dem.c	    19  *
; ..\EAS\BSW\Dem\Dem.c	    20  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	    21  *
; ..\EAS\BSW\Dem\Dem.c	    22  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	    23  *   Revision History:
; ..\EAS\BSW\Dem\Dem.c	    24  *
; ..\EAS\BSW\Dem\Dem.c	    25  *   Version      Date         Initials          CR#       Descriptions
; ..\EAS\BSW\Dem\Dem.c	    26  *   ---------   ----------    ------------  ----------   ---------------
; ..\EAS\BSW\Dem\Dem.c	    27  *   01.00.00    15/11/2017    Feixiang.Dong     N/A       Beta
; ..\EAS\BSW\Dem\Dem.c	    28  *   01.01.00    26/06/2018    Feixiang.Dong     N/A       Original
; ..\EAS\BSW\Dem\Dem.c	    29  *   01.01.03    11/09/2018    Feixiang.Dong     N/A       EAS422_DEM_20180911_01
; ..\EAS\BSW\Dem\Dem.c	    30  *   01.01.04    10/01/2019    Feixiang.Dong     N/A       EAS422_DEM_20190110_01
; ..\EAS\BSW\Dem\Dem.c	    31  *   01.01.05    27/02/2019    Feixiang.Dong     N/A       EAS422_DEM_20190227_01
; ..\EAS\BSW\Dem\Dem.c	    32  *   01.01.06    20/03/2019    Feixiang.Dong     N/A       EAS422_DEM_20190320_01
; ..\EAS\BSW\Dem\Dem.c	    33  *   01.01.07    24/03/2019    Feixiang.Dong     N/A       EAS422_DEM_20190324_01
; ..\EAS\BSW\Dem\Dem.c	    34  *   01.01.08    03/04/2019    Feixiang.Dong     N/A       EAS422_DEM_20190403_01
; ..\EAS\BSW\Dem\Dem.c	    35  *   01.01.09    08/04/2019    Feixiang.Dong     N/A       EAS422_DEM_20190408_01
; ..\EAS\BSW\Dem\Dem.c	    36  *   01.01.10    22/04/2019    Feixiang.Dong     N/A       EAS422_DEM_20190422_01
; ..\EAS\BSW\Dem\Dem.c	    37  *   01.01.11    05/08/2019    Feixiang.Dong     N/A       EAS422_DEM_20190805_01
; ..\EAS\BSW\Dem\Dem.c	    38  *   01.01.12    25/10/2019    Feixiang.Dong     N/A       EAS422_DEM_20191025_01
; ..\EAS\BSW\Dem\Dem.c	    39  *   01.01.13    17/01/2020    Feixiang.Dong     N/A       EAS422_DEM_20200117_01
; ..\EAS\BSW\Dem\Dem.c	    40  *   01.01.14    13/03/2020    Feixiang.Dong     N/A       EAS422_DEM_20200313_01
; ..\EAS\BSW\Dem\Dem.c	    41  *   01.01.15    30/03/2020    Feixiang.Dong     N/A       EAS422_DEM_20200330_01
; ..\EAS\BSW\Dem\Dem.c	    42  *   01.01.16    13/11/2020    Feixiang.Dong     N/A       EAS422_DEM_20201113_01
; ..\EAS\BSW\Dem\Dem.c	    43  *   01.01.17    22/01/2021    Feixiang.Dong     N/A       EAS422_DEM_20210122_01
; ..\EAS\BSW\Dem\Dem.c	    44  *   01.01.18    11/03/2021    Feixiang.Dong     N/A       EAS422_DEM_20210311_01
; ..\EAS\BSW\Dem\Dem.c	    45  *   01.01.19    10/05/2021    Feixiang.Dong     N/A       EAS422_DEM_20210510_01
; ..\EAS\BSW\Dem\Dem.c	    46  *   01.01.20    26/05/2021    Feixiang.Dong     N/A       EAS422_DEM_20210526_01
; ..\EAS\BSW\Dem\Dem.c	    47  *   01.01.21    18/06/2021    Feixiang.Dong     N/A       EAS422_DEM_20210618_01
; ..\EAS\BSW\Dem\Dem.c	    48  *   01.01.22    03/08/2021    Feixiang.Dong     N/A       EAS422_DEM_20210803_01
; ..\EAS\BSW\Dem\Dem.c	    49  *   01.01.23    15/11/2021    Feixiang.Dong     N/A       EAS422_DEM_20211115_01
; ..\EAS\BSW\Dem\Dem.c	    50  *   01.01.24    25/05/2022    Feixiang.Dong     N/A       EAS422_DEM_20220525_01
; ..\EAS\BSW\Dem\Dem.c	    51  *   01.01.25    17/10/2022    Zhenxing.Wu       N/A       EAS422_DEM_20221017_01
; ..\EAS\BSW\Dem\Dem.c	    52  *   01.01.26    09/01/2023    Feixiang.Dong     N/A       EAS422_DEM_20230109_01
; ..\EAS\BSW\Dem\Dem.c	    53  *   01.01.27    03/04/2023    Feixiang.Dong     N/A       EAS422_DEM_20230403_01
; ..\EAS\BSW\Dem\Dem.c	    54  *   01.01.28    27/06/2023    chaolimen.Han     N/A       EAS422_DEM_20230627_01
; ..\EAS\BSW\Dem\Dem.c	    55  *   01.02.00    01/08/2023    chaolimen.Han     N/A       EAS422_DEM_20230801_01
; ..\EAS\BSW\Dem\Dem.c	    56  *   01.02.00    04/08/2023    chaolimen.Han     N/A       EAS422_DEM_20230804_01
; ..\EAS\BSW\Dem\Dem.c	    57  *   01.02.01    10/08/2023    chaolimen.Han     N/A       EAS422_DEM_20230810_01
; ..\EAS\BSW\Dem\Dem.c	    58  *   01.02.01    22/08/2023    chaolimen.Han     N/A       EAS422_DEM_20230822_01
; ..\EAS\BSW\Dem\Dem.c	    59  *   01.02.02    06/09/2023    chaolimen.Han     N/A       EAS422_DEM_20230906_01
; ..\EAS\BSW\Dem\Dem.c	    60  *   01.02.03    08/10/2023    chaolimen.Han     N/A       EAS422_DEM_20231008_01
; ..\EAS\BSW\Dem\Dem.c	    61  *   01.02.04    01/11/2023    chaolimen.Han     N/A       EAS422_DEM_20231101_01
; ..\EAS\BSW\Dem\Dem.c	    62  *   01.02.05    30/11/2023    chaolimen.Han     N/A       EAS422_DEM_20231130_01
; ..\EAS\BSW\Dem\Dem.c	    63  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	    64  * END_FILE_HDR*/
; ..\EAS\BSW\Dem\Dem.c	    65  
; ..\EAS\BSW\Dem\Dem.c	    66  /*******************************************************************************
; ..\EAS\BSW\Dem\Dem.c	    67  *   Includes
; ..\EAS\BSW\Dem\Dem.c	    68  *******************************************************************************/
; ..\EAS\BSW\Dem\Dem.c	    69  #include "Dem.h"
; ..\EAS\BSW\Dem\Dem.c	    70  #include "Dem_Dcm.h"
; ..\EAS\BSW\Dem\Dem.c	    71  #include "Dem_NvM.h"
; ..\EAS\BSW\Dem\Dem.c	    72  #include "Dem_Lcfg.h"
; ..\EAS\BSW\Dem\Dem.c	    73  #include "SchM_Dem.h"
; ..\EAS\BSW\Dem\Dem.c	    74  #if(DEM_DEV_ERROR_DETECT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	    75  #include "Det.h"
; ..\EAS\BSW\Dem\Dem.c	    76  #endif
; ..\EAS\BSW\Dem\Dem.c	    77  #if(DEM_NVM_SUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	    78  #include "NvM.h"
; ..\EAS\BSW\Dem\Dem.c	    79  #endif
; ..\EAS\BSW\Dem\Dem.c	    80  #if(DEM_CFG_TRIGGER_FIM_REPORTS == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	    81  #include "FiM.h"
; ..\EAS\BSW\Dem\Dem.c	    82  #endif
; ..\EAS\BSW\Dem\Dem.c	    83  #include "Bsw_Common.h"
; ..\EAS\BSW\Dem\Dem.c	    84  
; ..\EAS\BSW\Dem\Dem.c	    85  /*******************************************************************************
; ..\EAS\BSW\Dem\Dem.c	    86  *   Version Check
; ..\EAS\BSW\Dem\Dem.c	    87  *******************************************************************************/
; ..\EAS\BSW\Dem\Dem.c	    88  #if(DEM_PRIVATE_VERSION_CHECK == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	    89  /* check Version with cfg file */
; ..\EAS\BSW\Dem\Dem.c	    90  #if ((DEM_AR_RELEASE_MAJOR_VERSION != DEM_AR_RELEASE_MAJOR_VERSION_CFG) || \ 
; ..\EAS\BSW\Dem\Dem.c	    91     (DEM_AR_RELEASE_MINOR_VERSION != DEM_AR_RELEASE_MINOR_VERSION_CFG))
; ..\EAS\BSW\Dem\Dem.c	    92  #error "AutoSar Version Numbers of Dem and its cfg file are different"
; ..\EAS\BSW\Dem\Dem.c	    93  #endif
; ..\EAS\BSW\Dem\Dem.c	    94  
; ..\EAS\BSW\Dem\Dem.c	    95  #if ((DEM_SW_MAJOR_VERSION != DEM_SW_MAJOR_VERSION_CFG) || \ 
; ..\EAS\BSW\Dem\Dem.c	    96     (DEM_SW_MINOR_VERSION != DEM_SW_MINOR_VERSION_CFG))
; ..\EAS\BSW\Dem\Dem.c	    97  #error "SW Version Numbers of Dem and its cfg file are different"
; ..\EAS\BSW\Dem\Dem.c	    98  #endif
; ..\EAS\BSW\Dem\Dem.c	    99  
; ..\EAS\BSW\Dem\Dem.c	   100  #endif/*(DEM_PRIVATE_VERSION_CHECK == STD_ON)*/
; ..\EAS\BSW\Dem\Dem.c	   101  
; ..\EAS\BSW\Dem\Dem.c	   102  /*******************************************************************************
; ..\EAS\BSW\Dem\Dem.c	   103  *   Cfg data Check
; ..\EAS\BSW\Dem\Dem.c	   104  *******************************************************************************/
; ..\EAS\BSW\Dem\Dem.c	   105  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	   106  #if(0 == DEM_CFG_OBD_NUM_OF_PID)
; ..\EAS\BSW\Dem\Dem.c	   107  #error "The number of Pid should not be 0 while OBD is supported."
; ..\EAS\BSW\Dem\Dem.c	   108  #endif
; ..\EAS\BSW\Dem\Dem.c	   109  #if(0 == DEM_NUM_OF_INDICATOR)
; ..\EAS\BSW\Dem\Dem.c	   110  #error "The number of indicator should not be 0 while OBD is supported."
; ..\EAS\BSW\Dem\Dem.c	   111  #endif
; ..\EAS\BSW\Dem\Dem.c	   112  #if(0xFF == DEM_CFG_MILINDICATORREF)
; ..\EAS\BSW\Dem\Dem.c	   113  #error "The DemMILIndicatorRef parameter should reference to a valid indicator while OBD is supported."
; ..\EAS\BSW\Dem\Dem.c	   114  #endif
; ..\EAS\BSW\Dem\Dem.c	   115  #if(0 == DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT)
; ..\EAS\BSW\Dem\Dem.c	   116  #error "The number of permanent memory entry should not be 0 while OBD is supported."
; ..\EAS\BSW\Dem\Dem.c	   117  #endif
; ..\EAS\BSW\Dem\Dem.c	   118  #else/*#if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))*/
; ..\EAS\BSW\Dem\Dem.c	   119  #if(0 != DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT)
; ..\EAS\BSW\Dem\Dem.c	   120  #error "The number of permanent memory entry should be 0 if OBD is not supported."
; ..\EAS\BSW\Dem\Dem.c	   121  #endif
; ..\EAS\BSW\Dem\Dem.c	   122  #endif/*#if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))*/
; ..\EAS\BSW\Dem\Dem.c	   123  
; ..\EAS\BSW\Dem\Dem.c	   124  /*******************************************************************************
; ..\EAS\BSW\Dem\Dem.c	   125  *   Macro
; ..\EAS\BSW\Dem\Dem.c	   126  *******************************************************************************/
; ..\EAS\BSW\Dem\Dem.c	   127  #if(DEM_DEV_ERROR_DETECT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	   128  #define DEM_DET_ERROR_DETECT(cond, ApiId, errcode)  \ 
; ..\EAS\BSW\Dem\Dem.c	   129      DET_ERROR_DETECT(cond, DEM_MODULE_ID, DEM_INSTANCE_ID, ApiId, errcode)
; ..\EAS\BSW\Dem\Dem.c	   130  
; ..\EAS\BSW\Dem\Dem.c	   131  #define DEM_DET_ERROR_DETECT_RET(cond, ApiId, errcode, ret) \ 
; ..\EAS\BSW\Dem\Dem.c	   132      DET_ERROR_DETECT_RET(cond, DEM_MODULE_ID, DEM_INSTANCE_ID, ApiId, errcode, ret)
; ..\EAS\BSW\Dem\Dem.c	   133  
; ..\EAS\BSW\Dem\Dem.c	   134  #define DEM_DET_REPORT_ERROR(ApiId, errcode)  \ 
; ..\EAS\BSW\Dem\Dem.c	   135      DET_REPORT_ERROR(DEM_MODULE_ID, DEM_INSTANCE_ID, ApiId, errcode)
; ..\EAS\BSW\Dem\Dem.c	   136  #else
; ..\EAS\BSW\Dem\Dem.c	   137  #define DEM_DET_ERROR_DETECT(cond, ApiId, errcode)
; ..\EAS\BSW\Dem\Dem.c	   138  #define DEM_DET_ERROR_DETECT_RET(cond, ApiId, errcode, ret)
; ..\EAS\BSW\Dem\Dem.c	   139  #define DEM_DET_REPORT_ERROR(ApiId, errcode)
; ..\EAS\BSW\Dem\Dem.c	   140  #endif
; ..\EAS\BSW\Dem\Dem.c	   141  
; ..\EAS\BSW\Dem\Dem.c	   142  typedef uint8 Dem_StateType;
; ..\EAS\BSW\Dem\Dem.c	   143  #define DEM_UNINIT                  ((Dem_StateType)0x00)
; ..\EAS\BSW\Dem\Dem.c	   144  #define DEM_PREINIT                 ((Dem_StateType)0x01)
; ..\EAS\BSW\Dem\Dem.c	   145  #define DEM_NORMAL                  ((Dem_StateType)0x02)
; ..\EAS\BSW\Dem\Dem.c	   146  
; ..\EAS\BSW\Dem\Dem.c	   147  typedef uint8 Dem_MemIdType;
; ..\EAS\BSW\Dem\Dem.c	   148  
; ..\EAS\BSW\Dem\Dem.c	   149  /*Clear DTC State*/
; ..\EAS\BSW\Dem\Dem.c	   150  #define DEM_IN_CLEAR_DTC_IDLE       ((uint8)0x00)
; ..\EAS\BSW\Dem\Dem.c	   151  #define DEM_IN_CLEAR_DTC_BUSY       ((uint8)0x01)
; ..\EAS\BSW\Dem\Dem.c	   152  #define DEM_IN_CLEAR_DTC_OK         ((uint8)0x02)
; ..\EAS\BSW\Dem\Dem.c	   153  #define DEM_IN_CLEAR_DTC_ERR        ((uint8)0x03)
; ..\EAS\BSW\Dem\Dem.c	   154  #define DEM_IN_CLEAR_EVENT_MEM      ((uint8)0x04)
; ..\EAS\BSW\Dem\Dem.c	   155  #define DEM_IN_CLEAR_DTC_GROUP      ((uint8)0x05)
; ..\EAS\BSW\Dem\Dem.c	   156  #define DEM_CLEAR_NUM_PER_CYCLE     ((uint16)20)
; ..\EAS\BSW\Dem\Dem.c	   157  
; ..\EAS\BSW\Dem\Dem.c	   158  #define DEM_DATA_INVALID_U8         ((uint8)0xFF)
; ..\EAS\BSW\Dem\Dem.c	   159  #define DEM_DATA_INVALID_U16        ((uint16)0xFFFF)
; ..\EAS\BSW\Dem\Dem.c	   160  #define DEM_DATA_CLEAR              (0u)
; ..\EAS\BSW\Dem\Dem.c	   161  #define DEM_DATA_MAX_FDC            ((sint8)127)
; ..\EAS\BSW\Dem\Dem.c	   162  #define DEM_DATA_U8_FF              ((uint8)0xFF)
; ..\EAS\BSW\Dem\Dem.c	   163  #define DEM_OBD_PCSLF_MAXVALUE      ((uint8)3)
; ..\EAS\BSW\Dem\Dem.c	   164  
; ..\EAS\BSW\Dem\Dem.c	   165  #define DEM_STATUS_RESET            ((Dem_UdsStatusByteType)0x50)
; ..\EAS\BSW\Dem\Dem.c	   166  
; ..\EAS\BSW\Dem\Dem.c	   167  #define DEM_F_FDC_FACTOR            ((uint8)127)
; ..\EAS\BSW\Dem\Dem.c	   168  #define DEM_P_FDC_FACTOR            ((uint8)128)
; ..\EAS\BSW\Dem\Dem.c	   169  
; ..\EAS\BSW\Dem\Dem.c	   170  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	   171  #define DEM_OBD_PID1C_DATA_LENGTH   (1)/*byte*/
; ..\EAS\BSW\Dem\Dem.c	   172  #define DEM_OBD_PID21_DATA_LENGTH   (2)/*byte*/
; ..\EAS\BSW\Dem\Dem.c	   173  #define DEM_OBD_PID30_DATA_LENGTH   (1)/*byte*/
; ..\EAS\BSW\Dem\Dem.c	   174  #define DEM_OBD_PID4D_DATA_LENGTH   (2)/*byte*/
; ..\EAS\BSW\Dem\Dem.c	   175  #define DEM_OBD_PID4E_DATA_LENGTH   (2)/*byte*/
; ..\EAS\BSW\Dem\Dem.c	   176  #define DEM_OBD_PID91_DATA_LENGTH   (5)/*byte*/
; ..\EAS\BSW\Dem\Dem.c	   177  #define DEM_OBD_INFO08_DATA_LENGTH  (40)/*byte: 32/40/56*/
; ..\EAS\BSW\Dem\Dem.c	   178  #define DEM_OBD_INFO0B_DATA_LENGTH  (36)/*byte: 32/36*/
; ..\EAS\BSW\Dem\Dem.c	   179  
; ..\EAS\BSW\Dem\Dem.c	   180  #if(DEM_NUM_OF_RATIO > 0)
; ..\EAS\BSW\Dem\Dem.c	   181  #define DEM_OBD_NUM_INCREASED_MASK  ((uint8)0x01)
; ..\EAS\BSW\Dem\Dem.c	   182  #define DEM_OBD_DEN_INCREASED_MASK  ((uint8)0x02)
; ..\EAS\BSW\Dem\Dem.c	   183  #define DEM_OBD_DEN_LOCK_MASK       ((uint8)0x04)
; ..\EAS\BSW\Dem\Dem.c	   184  /*Numerator/Denominator max value*/
; ..\EAS\BSW\Dem\Dem.c	   185  #define DEM_OBD_NUMDEN_MAX_VALUE    ((uint16)65535)
; ..\EAS\BSW\Dem\Dem.c	   186  #endif
; ..\EAS\BSW\Dem\Dem.c	   187  
; ..\EAS\BSW\Dem\Dem.c	   188  #endif
; ..\EAS\BSW\Dem\Dem.c	   189  
; ..\EAS\BSW\Dem\Dem.c	   190  #if(DEM_NUM_OF_INDICATOR > 0)
; ..\EAS\BSW\Dem\Dem.c	   191  typedef enum
; ..\EAS\BSW\Dem\Dem.c	   192  {
; ..\EAS\BSW\Dem\Dem.c	   193      DEM_TF_CLEAR = 0,/*TestFailed bit of DTC status is reset to 0.*/
; ..\EAS\BSW\Dem\Dem.c	   194      DEM_CYCLE_END = 1/*Operation cycle end.*/
; ..\EAS\BSW\Dem\Dem.c	   195  } Dem_IndicatorOffType;
; ..\EAS\BSW\Dem\Dem.c	   196  #endif
; ..\EAS\BSW\Dem\Dem.c	   197  
; ..\EAS\BSW\Dem\Dem.c	   198  
; ..\EAS\BSW\Dem\Dem.c	   199  #define DEM_SET_STATE(state)        (Dem_State = state)
; ..\EAS\BSW\Dem\Dem.c	   200  
; ..\EAS\BSW\Dem\Dem.c	   201  /*Event*/
; ..\EAS\BSW\Dem\Dem.c	   202  #define DEM_EVENT_FIRST_FAILED                 (Dem_StorageMem.EventHead.FirstFailedEvent)
; ..\EAS\BSW\Dem\Dem.c	   203  #define DEM_EVENT_RECENT_FAILED                (Dem_StorageMem.EventHead.MostRecentFailedEvent)
; ..\EAS\BSW\Dem\Dem.c	   204  #define DEM_EVENT_FIRST_CONFIRMED              (Dem_StorageMem.EventHead.FirstConfirmedEvent)
; ..\EAS\BSW\Dem\Dem.c	   205  #define DEM_EVENT_RECENT_CONFIRMED             (Dem_StorageMem.EventHead.MostRecentConfirmedEvent)
; ..\EAS\BSW\Dem\Dem.c	   206  
; ..\EAS\BSW\Dem\Dem.c	   207  /*Event Counter*/
; ..\EAS\BSW\Dem\Dem.c	   208  #define DEM_EVENT_FCC(i)                       (Dem_StorageMem.EventEntry[i].EventFaultConfCnt)
; ..\EAS\BSW\Dem\Dem.c	   209  #if(DEM_NUM_OF_INDICATOR > 0)
; ..\EAS\BSW\Dem\Dem.c	   210  #define DEM_EVENT_IFCC(i)                      (Dem_StorageMem.EventEntry[i].IndicatorFailureCycleCounter)
; ..\EAS\BSW\Dem\Dem.c	   211  #define DEM_EVENT_IHCC(i)                      (Dem_StorageMem.EventEntry[i].IndicatorHealingCycleCounter)
; ..\EAS\BSW\Dem\Dem.c	   212  #endif
; ..\EAS\BSW\Dem\Dem.c	   213  #define DEM_EVENT_OCCCTR(i)                    (Dem_StorageMem.EventEntry[i].EventOccurrence)
; ..\EAS\BSW\Dem\Dem.c	   214  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	   215  #define DEM_EVENT_DBC(i)                       (Dem_StorageMem.EventEntry[i].EventDebounceCnt)
; ..\EAS\BSW\Dem\Dem.c	   216  #endif
; ..\EAS\BSW\Dem\Dem.c	   217  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	   218  #define DEM_EVENT_DBT(i)                       (Dem_StorageMem.EventEntry[i].EventDebounceTimer)
; ..\EAS\BSW\Dem\Dem.c	   219  #define DEM_EVENT_TIMERDIRECTION(i)            (Dem_StorageMem.EventEntry[i].TimerDirection)
; ..\EAS\BSW\Dem\Dem.c	   220  #endif
; ..\EAS\BSW\Dem\Dem.c	   221  #define DEM_EVENT_MAXFDCDCC(i)                 (Dem_StorageMem.EventEntry[i].EventMaxFdcDuringCurrentCycle)
; ..\EAS\BSW\Dem\Dem.c	   222  #define DEM_EVENT_MAXFDCSLC(i)                 (Dem_StorageMem.EventEntry[i].EventMaxFdcSinceLastClear)
; ..\EAS\BSW\Dem\Dem.c	   223  #define DEM_EVENT_CSLF(i)                      (Dem_StorageMem.EventEntry[i].EventCyclesSinceLastFailed)
; ..\EAS\BSW\Dem\Dem.c	   224  #define DEM_EVENT_CSFF(i)                      (Dem_StorageMem.EventEntry[i].EventCyclesSinceFirstFailed)
; ..\EAS\BSW\Dem\Dem.c	   225  #define DEM_EVENT_FCSLC(i)                     (Dem_StorageMem.EventEntry[i].EventFailedCyclesSinceLastCleared)
; ..\EAS\BSW\Dem\Dem.c	   226  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	   227  #define DEM_EVENT_OBD_PCSLF(i)                 (Dem_StorageMem.EventEntry[i].EventOBDPassedCyclesSinceLastFailed)
; ..\EAS\BSW\Dem\Dem.c	   228  #endif
; ..\EAS\BSW\Dem\Dem.c	   229  #if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)
; ..\EAS\BSW\Dem\Dem.c	   230  #define DEM_EVENT_OBD_CLEAR_FLAG(i)            (Dem_StorageMem.EventEntry[i].EventClearFlagForPermanent)
; ..\EAS\BSW\Dem\Dem.c	   231  #endif
; ..\EAS\BSW\Dem\Dem.c	   232  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	   233  #define DEM_EVENT_CMA_STATUS(i)                (Dem_StorageMem.EventEntry[i].EventCMAStatus)
; ..\EAS\BSW\Dem\Dem.c	   234  #define DEM_EVENT_CMA_PCSLF(i)                 (Dem_StorageMem.EventEntry[i].EventPassedCyclesSinceLastFailed)
; ..\EAS\BSW\Dem\Dem.c	   235  #endif
; ..\EAS\BSW\Dem\Dem.c	   236  /*Indicator*/
; ..\EAS\BSW\Dem\Dem.c	   237  #if(DEM_NUM_OF_INDICATOR > 0)
; ..\EAS\BSW\Dem\Dem.c	   238  #define DEM_INDICATOR_STATUS(i)                (Dem_StorageMem.IndicatorStatus[i])
; ..\EAS\BSW\Dem\Dem.c	   239  #endif
; ..\EAS\BSW\Dem\Dem.c	   240  /*DTC*/
; ..\EAS\BSW\Dem\Dem.c	   241  #define DEM_DTC_STATUS(i)                      (Dem_StorageMem.DtcEntry[i].DtcStatus)
; ..\EAS\BSW\Dem\Dem.c	   242  #define DEM_DTC_LASTSTATUS(i)                  (Dem_StorageMem.DtcEntry[i].DtcLastStatus)
; ..\EAS\BSW\Dem\Dem.c	   243  #define DEM_DTC_AGINGCNT(i)                    (Dem_StorageMem.DtcEntry[i].DtcAgingCounter)
; ..\EAS\BSW\Dem\Dem.c	   244  #define DEM_DTC_AGEDCNT(i)                     (Dem_StorageMem.DtcEntry[i].DtcAgedCounter)
; ..\EAS\BSW\Dem\Dem.c	   245  #define DEM_DTC_DATAENTRYREF(i)                (Dem_StorageMem.DtcEntry[i].DataEntryRef)
; ..\EAS\BSW\Dem\Dem.c	   246  
; ..\EAS\BSW\Dem\Dem.c	   247  #define DEM_PRIMARY_DATAENTRY_USEDNUM          (Dem_StorageMem.PrimaryDataEntryUsedNum)
; ..\EAS\BSW\Dem\Dem.c	   248  #define DEM_PRIMARY_DATAENTRY_USED(i)          (Dem_StorageMem.PrimaryDataEntry[i].Used)
; ..\EAS\BSW\Dem\Dem.c	   249  #if(DEM_MAX_FFSIZE_OF_DTC > 0)
; ..\EAS\BSW\Dem\Dem.c	   250  #define DEM_PRIMARY_FFDATA_PTR(i)              (Dem_StorageMem.PrimaryDataEntry[i].FreezeFrameData)
; ..\EAS\BSW\Dem\Dem.c	   251  #endif
; ..\EAS\BSW\Dem\Dem.c	   252  #if(DEM_MAX_EXTSIZE_OF_DTC > 0)
; ..\EAS\BSW\Dem\Dem.c	   253  #define DEM_PRIMARY_EXTDATA_PTR(i)             (Dem_StorageMem.PrimaryDataEntry[i].ExtendedData)
; ..\EAS\BSW\Dem\Dem.c	   254  #endif
; ..\EAS\BSW\Dem\Dem.c	   255  
; ..\EAS\BSW\Dem\Dem.c	   256  #if(DEM_MAX_J1939FFSIZE_OF_DTC > 0)
; ..\EAS\BSW\Dem\Dem.c	   257  #define DEM_PRIMARY_J1939DTC_FFDATA_PTR(i)            (Dem_StorageMem.PrimaryDataEntry[i].J1939FreezeFrameData)
; ..\EAS\BSW\Dem\Dem.c	   258  #endif
; ..\EAS\BSW\Dem\Dem.c	   259  #if(DEM_MAX_J1939EXPFFSIZE_OF_DTC > 0)
; ..\EAS\BSW\Dem\Dem.c	   260  #define DEM_PRIMARY_J1939DTC_EXPFFDATA_PTR(i)            (Dem_StorageMem.PrimaryDataEntry[i].J1939ExpFreezeFrameData)
; ..\EAS\BSW\Dem\Dem.c	   261  #endif
; ..\EAS\BSW\Dem\Dem.c	   262  
; ..\EAS\BSW\Dem\Dem.c	   263  
; ..\EAS\BSW\Dem\Dem.c	   264  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	   265  #define DEM_OBD_DATA_INFO                      (Dem_StorageMem.OBDDataInfo)
; ..\EAS\BSW\Dem\Dem.c	   266  /*Used for PID01/41*/
; ..\EAS\BSW\Dem\Dem.c	   267  #define DEM_OBD_READINESSGROUP_STATUS          (DEM_OBD_DATA_INFO.ReadinessGroupStatus)
; ..\EAS\BSW\Dem\Dem.c	   268  /*Used for PID31.Unit:m, Range:0-65535000*/
; ..\EAS\BSW\Dem\Dem.c	   269  #define DEM_OBD_DISTANCE_SINCEDTCCLEARED       (DEM_OBD_DATA_INFO.DistanceSinceDtcCleared)
; ..\EAS\BSW\Dem\Dem.c	   270  /*Data for Service 02*/
; ..\EAS\BSW\Dem\Dem.c	   271  #define DEM_OBD_FF_EVENT                       (DEM_OBD_DATA_INFO.ObdEventId)
; ..\EAS\BSW\Dem\Dem.c	   272  #define DEM_OBD_FF_DATA_BUF                    (DEM_OBD_DATA_INFO.ObdFreezeFrameData)
; ..\EAS\BSW\Dem\Dem.c	   273  /*Data for Service 09*/
; ..\EAS\BSW\Dem\Dem.c	   274  #if(DEM_NUM_OF_RATIO > 0)
; ..\EAS\BSW\Dem\Dem.c	   275  #define DEM_OBD_RATIO_IGN_CNT                  (DEM_OBD_DATA_INFO.RatioIGNCycleCounter)
; ..\EAS\BSW\Dem\Dem.c	   276  #define DEM_OBD_RATIO_GENDEN_CNT               (DEM_OBD_DATA_INFO.RatioGeneralDenominatorCounter)
; ..\EAS\BSW\Dem\Dem.c	   277  #define DEM_OBD_RATIO_GENDEN_STATE             (DEM_OBD_DATA_INFO.RatioGeneralDenominatorState)
; ..\EAS\BSW\Dem\Dem.c	   278  #define DEM_OBD_RATIO_DENOMCOND_STATUS(i)      (DEM_OBD_DATA_INFO.RatioDenomCondStatus[i])
; ..\EAS\BSW\Dem\Dem.c	   279  #define DEM_OBD_RATIO_NUMERATOR(i)             (DEM_OBD_DATA_INFO.RatioNumerator[i])
; ..\EAS\BSW\Dem\Dem.c	   280  #define DEM_OBD_RATIO_DENOMINATOR(i)           (DEM_OBD_DATA_INFO.RatioDenominator[i])
; ..\EAS\BSW\Dem\Dem.c	   281  /*bit 0: Numerator increased flag;
; ..\EAS\BSW\Dem\Dem.c	   282    bit 1: Denominator increased flag;
; ..\EAS\BSW\Dem\Dem.c	   283    bit 2: Denominator lock flag.*/
; ..\EAS\BSW\Dem\Dem.c	   284  #define DEM_OBD_RATIO_STATE(i)                 (DEM_OBD_DATA_INFO.RatioState[i])
; ..\EAS\BSW\Dem\Dem.c	   285  #endif
; ..\EAS\BSW\Dem\Dem.c	   286  #if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)
; ..\EAS\BSW\Dem\Dem.c	   287  #define DEM_OBD_PFC_CYCLE_STATUS               (DEM_OBD_DATA_INFO.PfcCycleStatus)
; ..\EAS\BSW\Dem\Dem.c	   288  #endif
; ..\EAS\BSW\Dem\Dem.c	   289  #endif/*#if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))*/
; ..\EAS\BSW\Dem\Dem.c	   290  
; ..\EAS\BSW\Dem\Dem.c	   291  #if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)
; ..\EAS\BSW\Dem\Dem.c	   292  #define DEM_PERMANENT_DATAENTRY_USEDNUM        (Dem_StorageMem.PermanentEntryUsedNum)
; ..\EAS\BSW\Dem\Dem.c	   293  #define DEM_PERMANENT_DATAENTRY_EVENTID(i)     (Dem_StorageMem.PermanentDataEntry[i])
; ..\EAS\BSW\Dem\Dem.c	   294  #endif/*#if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)*/
; ..\EAS\BSW\Dem\Dem.c	   295  
; ..\EAS\BSW\Dem\Dem.c	   296  
; ..\EAS\BSW\Dem\Dem.c	   297  /*SWS_Dem_00415*/
; ..\EAS\BSW\Dem\Dem.c	   298  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	   299  #define DEM_EVENT_DBC_F_FDC(i)                 (sint8)(((sint32)DEM_EVENT_DBC(i)*DEM_F_FDC_FACTOR)/(DEM_CFG_EVENT_DBC_FAILTHRESHOLD(i)))
; ..\EAS\BSW\Dem\Dem.c	   300  #define DEM_EVENT_DBC_P_FDC(i)                 (sint8)(((sint32)DEM_EVENT_DBC(i)*DEM_P_FDC_FACTOR)/(0-DEM_CFG_EVENT_DBC_PASSTHRESHOLD(i)))
; ..\EAS\BSW\Dem\Dem.c	   301  #endif
; ..\EAS\BSW\Dem\Dem.c	   302  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	   303  #define DEM_EVENT_DBT_F_FDC(i)                 (sint8)(((sint32)DEM_EVENT_DBT(i)*DEM_F_FDC_FACTOR)/(DEM_CFG_EVENT_DBT_FAILED(i)))
; ..\EAS\BSW\Dem\Dem.c	   304  #define DEM_EVENT_DBT_P_FDC(i)                 (sint8)(((sint32)DEM_EVENT_DBT(i)*DEM_P_FDC_FACTOR)/(sint32)(0-DEM_CFG_EVENT_DBT_PASSED(i)))
; ..\EAS\BSW\Dem\Dem.c	   305  #endif
; ..\EAS\BSW\Dem\Dem.c	   306  
; ..\EAS\BSW\Dem\Dem.c	   307  
; ..\EAS\BSW\Dem\Dem.c	   308  /*Operation Cycle*/
; ..\EAS\BSW\Dem\Dem.c	   309  #define DEM_CFG_OPCYC_AUTOSTART(i)             (Dem_OperationCycleTable[i].DemOperationCycleAutostart)
; ..\EAS\BSW\Dem\Dem.c	   310  #define DEM_CFG_OPCYC_AUTOEND(i)               (Dem_OperationCycleTable[i].DemOperationCycleAutomaticEnd)
; ..\EAS\BSW\Dem\Dem.c	   311  #define DEM_CFG_OPCYC_TYPE(i)                  (Dem_OperationCycleTable[i].DemOperationCycleType)
; ..\EAS\BSW\Dem\Dem.c	   312  
; ..\EAS\BSW\Dem\Dem.c	   313  /*NvM BlockId*/
; ..\EAS\BSW\Dem\Dem.c	   314  #define DEM_CFG_NVM_BLOCKID                    (Dem_NvRamBlockIdTable[0].DemNvRamBlockIdRef)
; ..\EAS\BSW\Dem\Dem.c	   315  
; ..\EAS\BSW\Dem\Dem.c	   316  /*Event*/
; ..\EAS\BSW\Dem\Dem.c	   317  #define DEM_CFG_EVENT_DTCREF(i)                (Dem_EventTable[i].DemDTCRef)
; ..\EAS\BSW\Dem\Dem.c	   318  #define DEM_CFG_EVENT_AVAILABLE(i)             (Dem_EventTable[i].DemEventAvailable)
; ..\EAS\BSW\Dem\Dem.c	   319  #define DEM_CFG_EVENT_OPCYCREF(i)              (Dem_EventTable[i].DemOperationCycleRef)
; ..\EAS\BSW\Dem\Dem.c	   320  #define DEM_CFG_EVENT_KIND(i)                  (Dem_EventTable[i].DemEventKind)
; ..\EAS\BSW\Dem\Dem.c	   321  #define DEM_CFG_EVENT_REPBEHAVIOR(i)           (Dem_EventTable[i].DemReportBehavior)
; ..\EAS\BSW\Dem\Dem.c	   322  #if(DEM_NUM_OF_EN_GROUP > 0)
; ..\EAS\BSW\Dem\Dem.c	   323  #define DEM_CFG_EVENT_EN(i)                    (Dem_EventTable[i].DemEnableConditionGroupRef)
; ..\EAS\BSW\Dem\Dem.c	   324  #define DEM_CFG_EVENT_EN_NUM(i)                (Dem_EventTable[i].DemEnableConditionGroupRef->Number)
; ..\EAS\BSW\Dem\Dem.c	   325  #define DEM_CFG_EVENT_EN_REF(i)                (Dem_EventTable[i].DemEnableConditionGroupRef->DemEnableConditionRef)
; ..\EAS\BSW\Dem\Dem.c	   326  #endif
; ..\EAS\BSW\Dem\Dem.c	   327  #if(DEM_NUM_OF_STOR_GROUP > 0)
; ..\EAS\BSW\Dem\Dem.c	   328  #define DEM_CFG_EVENT_STOR(i)                  (Dem_EventTable[i].DemStorageConditionGroupRef)
; ..\EAS\BSW\Dem\Dem.c	   329  #define DEM_CFG_EVENT_STOR_NUM(i)              (Dem_EventTable[i].DemStorageConditionGroupRef->Number)
; ..\EAS\BSW\Dem\Dem.c	   330  #define DEM_CFG_EVENT_STOR_REF(i)              (Dem_EventTable[i].DemStorageConditionGroupRef->DemStorageConditionRef)
; ..\EAS\BSW\Dem\Dem.c	   331  #endif
; ..\EAS\BSW\Dem\Dem.c	   332  #if(DEM_NUM_OF_INDICATOR > 0)
; ..\EAS\BSW\Dem\Dem.c	   333  #define DEM_CFG_EVENT_INDICATOR_NUM(i)         (Dem_EventTable[i].NumOfIndicator)
; ..\EAS\BSW\Dem\Dem.c	   334  #define DEM_CFG_EVENT_INDICATOR(i)             (Dem_EventTable[i].DemIndicatorAttribute)
; ..\EAS\BSW\Dem\Dem.c	   335  #define DEM_CFG_EVENT_INDICATOR_BEHAVIOUR(i,j) (Dem_EventTable[i].DemIndicatorAttribute[j].DemIndicatorBehaviour)
; ..\EAS\BSW\Dem\Dem.c	   336  #define DEM_CFG_EVENT_INDICATOR_F_THRESHOLD(i,j) \ 
; ..\EAS\BSW\Dem\Dem.c	   337      (Dem_EventTable[i].DemIndicatorAttribute[j].DemIndicatorFailureCycleCounterThreshold)
; ..\EAS\BSW\Dem\Dem.c	   338  #define DEM_CFG_EVENT_INDICATOR_H_THRESHOLD(i,j) \ 
; ..\EAS\BSW\Dem\Dem.c	   339      (Dem_EventTable[i].DemIndicatorAttribute[j].DemIndicatorHealingCycleCounterThreshold)
; ..\EAS\BSW\Dem\Dem.c	   340  #define DEM_CFG_EVENT_INDICATOR_ID(i,j)        (Dem_EventTable[i].DemIndicatorAttribute[j].DemIndicatorID)
; ..\EAS\BSW\Dem\Dem.c	   341  #define DEM_CFG_EVENT_INDICATOR_OFFSET(i,j)    (Dem_EventTable[i].DemIndicatorAttribute[j].DemIndicatorStatusPosOffset)
; ..\EAS\BSW\Dem\Dem.c	   342  #endif/*#if(DEM_NUM_OF_INDICATOR > 0)*/
; ..\EAS\BSW\Dem\Dem.c	   343  
; ..\EAS\BSW\Dem\Dem.c	   344  #define DEM_CFG_EVENT_FAULTCNTTHRESHOLD(i)     (Dem_EventTable[i].DemEventFailureCycleCounterThreshold)
; ..\EAS\BSW\Dem\Dem.c	   345  #define DEM_CFG_EVENT_CLEARALLOWED_BEHAVIOR(i) (Dem_EventTable[i].DemCallbackClearEventAllowed.DemClearEventAllowedBehavior)
; ..\EAS\BSW\Dem\Dem.c	   346  #define DEM_CFG_EVENT_CLEARALLOWED_CALLFNC(i)  (Dem_EventTable[i].DemCallbackClearEventAllowed.DemCallbackClearEventAllowedFnc)
; ..\EAS\BSW\Dem\Dem.c	   347  #define DEM_CFG_EVENT_STATUSCHANGED_CALLFNC(i) (Dem_EventTable[i].DemCallbackEventStatusChangedFnc)
; ..\EAS\BSW\Dem\Dem.c	   348  #define DEM_CFG_EVENT_DATACHANGED_CALLFNC(i)   (Dem_EventTable[i].DemCallbackEventDataChangedFnc)
; ..\EAS\BSW\Dem\Dem.c	   349  #define DEM_CFG_EVENT_INITM_CALLFNC(i)         (Dem_EventTable[i].DemCallbackInitMForEFnc)
; ..\EAS\BSW\Dem\Dem.c	   350  
; ..\EAS\BSW\Dem\Dem.c	   351  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	   352  #define DEM_CFG_EVENT_DBC(i)                   \ 
; ..\EAS\BSW\Dem\Dem.c	   353      (Dem_EventTable[i].DemDebounceAlgorithmClass.DemDebounceCounterBasedClassRef)
; ..\EAS\BSW\Dem\Dem.c	   354  #define DEM_CFG_EVENT_DBC_BEHAVIOR(i)          \ 
; ..\EAS\BSW\Dem\Dem.c	   355      (DEM_CFG_EVENT_DBC(i)->DemDebounceBehavior)
; ..\EAS\BSW\Dem\Dem.c	   356  #define DEM_CFG_EVENT_DBC_FAILTHRESHOLD(i)     \ 
; ..\EAS\BSW\Dem\Dem.c	   357      (DEM_CFG_EVENT_DBC(i)->DemDebounceCounterFailedThreshold)
; ..\EAS\BSW\Dem\Dem.c	   358  #define DEM_CFG_EVENT_DBC_JUMPUP(i)            \ 
; ..\EAS\BSW\Dem\Dem.c	   359      (DEM_CFG_EVENT_DBC(i)->DemDebounceCounterJumpUp)
; ..\EAS\BSW\Dem\Dem.c	   360  #define DEM_CFG_EVENT_DBC_JUMPUP_VALUE(i)      \ 
; ..\EAS\BSW\Dem\Dem.c	   361      (DEM_CFG_EVENT_DBC(i)->DemDebounceCounterJumpUpValue)
; ..\EAS\BSW\Dem\Dem.c	   362  #define DEM_CFG_EVENT_DBC_INCREMENT_SIZE(i)    \ 
; ..\EAS\BSW\Dem\Dem.c	   363      (DEM_CFG_EVENT_DBC(i)->DemDebounceCounterIncrementStepSize)
; ..\EAS\BSW\Dem\Dem.c	   364  #define DEM_CFG_EVENT_DBC_PASSTHRESHOLD(i)     \ 
; ..\EAS\BSW\Dem\Dem.c	   365      (DEM_CFG_EVENT_DBC(i)->DemDebounceCounterPassedThreshold)
; ..\EAS\BSW\Dem\Dem.c	   366  #define DEM_CFG_EVENT_DBC_JUMPDOWN(i)          \ 
; ..\EAS\BSW\Dem\Dem.c	   367      (DEM_CFG_EVENT_DBC(i)->DemDebounceCounterJumpDown)
; ..\EAS\BSW\Dem\Dem.c	   368  #define DEM_CFG_EVENT_DBC_JUMPDOWN_VALUE(i)    \ 
; ..\EAS\BSW\Dem\Dem.c	   369      (DEM_CFG_EVENT_DBC(i)->DemDebounceCounterJumpDownValue)
; ..\EAS\BSW\Dem\Dem.c	   370  #define DEM_CFG_EVENT_DBC_DECREMENT_SIZE(i)    \ 
; ..\EAS\BSW\Dem\Dem.c	   371      (DEM_CFG_EVENT_DBC(i)->DemDebounceCounterDecrementStepSize)
; ..\EAS\BSW\Dem\Dem.c	   372  #define DEM_CFG_EVENT_DBC_STORAGE(i)           \ 
; ..\EAS\BSW\Dem\Dem.c	   373      (DEM_CFG_EVENT_DBC(i)->DemDebounceCounterStorage)
; ..\EAS\BSW\Dem\Dem.c	   374  #endif
; ..\EAS\BSW\Dem\Dem.c	   375  
; ..\EAS\BSW\Dem\Dem.c	   376  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	   377  #define DEM_CFG_EVENT_DBT(i)                   \ 
; ..\EAS\BSW\Dem\Dem.c	   378      (Dem_EventTable[i].DemDebounceAlgorithmClass.DemDebounceTimeBaseRef)
; ..\EAS\BSW\Dem\Dem.c	   379  #define DEM_CFG_EVENT_DBT_FAILED(i)            \ 
; ..\EAS\BSW\Dem\Dem.c	   380      ((DEM_CFG_EVENT_DBT(i)->DemDebounceTimeFailedThreshold)/DEM_TASK_TIME)
; ..\EAS\BSW\Dem\Dem.c	   381  #define DEM_CFG_EVENT_DBT_PASSED(i)            \ 
; ..\EAS\BSW\Dem\Dem.c	   382      ((DEM_CFG_EVENT_DBT(i)->DemDebounceTimePassedThreshold)/DEM_TASK_TIME)
; ..\EAS\BSW\Dem\Dem.c	   383  #define DEM_CFG_EVENT_DBT_BAHAVIOR(i)          \ 
; ..\EAS\BSW\Dem\Dem.c	   384      (DEM_CFG_EVENT_DBT(i)->DemDebounceBehavior)
; ..\EAS\BSW\Dem\Dem.c	   385  #endif
; ..\EAS\BSW\Dem\Dem.c	   386  
; ..\EAS\BSW\Dem\Dem.c	   387  #define DEM_CFG_EVENT_GET_FDC_FNC(i)           \ 
; ..\EAS\BSW\Dem\Dem.c	   388      (Dem_EventTable[i].DemDebounceAlgorithmClass.DemCallbackGetFDCFnc)
; ..\EAS\BSW\Dem\Dem.c	   389  
; ..\EAS\BSW\Dem\Dem.c	   390  /*DTC StatusChangedNotification*/
; ..\EAS\BSW\Dem\Dem.c	   391  #define DEM_CFG_DTC_STATUSCHANGED_CALLFNC      (Dem_DtcStatusChangedNotificationArray[0])
; ..\EAS\BSW\Dem\Dem.c	   392  /*DTC groups*/
; ..\EAS\BSW\Dem\Dem.c	   393  #define DEM_CFG_DTC_GROUPVALUE(i)              (Dem_GroupOfDTCTable[i])
; ..\EAS\BSW\Dem\Dem.c	   394  /*DTCs*/
; ..\EAS\BSW\Dem\Dem.c	   395  #define DEM_CFG_DTC_VALUE(i)                   (Dem_DTCTable[i].DemDtcValue)
; ..\EAS\BSW\Dem\Dem.c	   396  #define DEM_CFG_DTC_SEVERITY(i)                (Dem_DTCTable[i].DemDTCSeverity)
; ..\EAS\BSW\Dem\Dem.c	   397  #define DEM_CFG_DTC_FNCUNIT(i)                 (Dem_DTCTable[i].DemDTCFunctionalUnit)
; ..\EAS\BSW\Dem\Dem.c	   398  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU)||(DEM_J1939_SUPPORT == STD_ON))
; ..\EAS\BSW\Dem\Dem.c	   399  #define DEM_CFG_DTC_OBDDTCREF(i)               (Dem_DTCTable[i].DemObdDTCRef)
; ..\EAS\BSW\Dem\Dem.c	   400  
; ..\EAS\BSW\Dem\Dem.c	   401  #if(DEM_CFG_PTO_SUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	   402  #define DEM_CFG_DTC_OBD_CON_PTO(i)             (DEM_CFG_DTC_OBDDTCREF(i)->DemConsiderPtoStatus)
; ..\EAS\BSW\Dem\Dem.c	   403  #endif
; ..\EAS\BSW\Dem\Dem.c	   404  
; ..\EAS\BSW\Dem\Dem.c	   405  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	   406  #define DEM_CFG_DTC_OBD_VALUE(i)               (DEM_CFG_DTC_OBDDTCREF(i)->DemDtcValue)
; ..\EAS\BSW\Dem\Dem.c	   407  #define DEM_CFG_DTC_OBDDTCCLASS(i)             (Dem_DTCTable[i].DemWWHOBDDTCClass)
; ..\EAS\BSW\Dem\Dem.c	   408  
; ..\EAS\BSW\Dem\Dem.c	   409  #define DEM_DTC_IS_OBD(i)                      \ 
; ..\EAS\BSW\Dem\Dem.c	   410      ((DEM_CFG_DTC_OBDDTCREF(i) != NULL_PTR) && (DEM_CFG_DTC_OBD_VALUE(i) != 0))
; ..\EAS\BSW\Dem\Dem.c	   411  #endif
; ..\EAS\BSW\Dem\Dem.c	   412  
; ..\EAS\BSW\Dem\Dem.c	   413  #if(DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)
; ..\EAS\BSW\Dem\Dem.c	   414  #define DEM_CFG_DTC_OBD_READINESSGROUP(i)      (DEM_CFG_DTC_OBDDTCREF(i)->DemEventOBDReadinessGroup)
; ..\EAS\BSW\Dem\Dem.c	   415  #endif
; ..\EAS\BSW\Dem\Dem.c	   416  
; ..\EAS\BSW\Dem\Dem.c	   417  #if(DEM_J1939_SUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	   418  #define DEM_CFG_DTC_J1939_VALUE(i)             (DEM_CFG_DTC_OBDDTCREF(i)->DemJ1939DTCValue)
; ..\EAS\BSW\Dem\Dem.c	   419  #endif
; ..\EAS\BSW\Dem\Dem.c	   420  #endif/*#if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU)||(DEM_J1939_SUPPORT == STD_ON))*/
; ..\EAS\BSW\Dem\Dem.c	   421  
; ..\EAS\BSW\Dem\Dem.c	   422  #define DEM_CFG_DTC_AGING_ALLOWED(i)           \ 
; ..\EAS\BSW\Dem\Dem.c	   423      (Dem_DTCAttributesTable[Dem_DTCTable[i].DemDTCAttributesRef].DemAgingAllowed)
; ..\EAS\BSW\Dem\Dem.c	   424  #define DEM_CFG_DTC_AGINGCYCREF(i)             \ 
; ..\EAS\BSW\Dem\Dem.c	   425      (Dem_DTCAttributesTable[Dem_DTCTable[i].DemDTCAttributesRef].DemAgingCycleRef)
; ..\EAS\BSW\Dem\Dem.c	   426  #define DEM_CFG_AGINGCYCLECOUNTERTHRESHOLD(i)  \ 
; ..\EAS\BSW\Dem\Dem.c	   427      (Dem_DTCAttributesTable[Dem_DTCTable[i].DemDTCAttributesRef].DemAgingCycleCounterThreshold)
; ..\EAS\BSW\Dem\Dem.c	   428  #define DEM_CFG_DTC_SIGNIFICANCE(i)            \ 
; ..\EAS\BSW\Dem\Dem.c	   429      (Dem_DTCAttributesTable[Dem_DTCTable[i].DemDTCAttributesRef].DemDTCSignificance)
; ..\EAS\BSW\Dem\Dem.c	   430  #define DEM_CFG_DTC_PRIORITY(i)                \ 
; ..\EAS\BSW\Dem\Dem.c	   431      (Dem_DTCAttributesTable[Dem_DTCTable[i].DemDTCAttributesRef].DemDTCPriority)
; ..\EAS\BSW\Dem\Dem.c	   432  #define DEM_CFG_DTC_FDC_THRESHLD(i)            \ 
; ..\EAS\BSW\Dem\Dem.c	   433      (Dem_DTCAttributesTable[Dem_DTCTable[i].DemDTCAttributesRef].DemEventMemoryEntryFdcThresholdStorageValue)
; ..\EAS\BSW\Dem\Dem.c	   434  #define DEM_CFG_DTC_J1939NODE_REF(i)           \ 
; ..\EAS\BSW\Dem\Dem.c	   435      (Dem_DTCAttributesTable[Dem_DTCTable[i].DemDTCAttributesRef].DemJ1939DTC_J1939NodeRef)
; ..\EAS\BSW\Dem\Dem.c	   436  #define DEM_CFG_DTC_J1939NODE_NUM(i)           \ 
; ..\EAS\BSW\Dem\Dem.c	   437      (Dem_DTCAttributesTable[Dem_DTCTable[i].DemDTCAttributesRef].DemJ1939DTC_J1939NodeRef->Number)
; ..\EAS\BSW\Dem\Dem.c	   438  #define DEM_CFG_DTC_J1939NODE_ARRAY(i)         \ 
; ..\EAS\BSW\Dem\Dem.c	   439      (Dem_DTCAttributesTable[Dem_DTCTable[i].DemDTCAttributesRef].DemJ1939DTC_J1939NodeRef->DemJ1939NmNodeRef)
; ..\EAS\BSW\Dem\Dem.c	   440  
; ..\EAS\BSW\Dem\Dem.c	   441  
; ..\EAS\BSW\Dem\Dem.c	   442  
; ..\EAS\BSW\Dem\Dem.c	   443  #if(DEM_NUM_OF_EXTDATACLASS > 0)
; ..\EAS\BSW\Dem\Dem.c	   444  /*ExtendedData*/
; ..\EAS\BSW\Dem\Dem.c	   445  #define DEM_CFG_DTC_EXTDATACLASSREF(i)         \ 
; ..\EAS\BSW\Dem\Dem.c	   446      (Dem_DTCAttributesTable[Dem_DTCTable[i].DemDTCAttributesRef].DemExtendedDataClassRef)
; ..\EAS\BSW\Dem\Dem.c	   447  #define DEM_CFG_DTC_NUM_OF_EXTREC(i)           \ 
; ..\EAS\BSW\Dem\Dem.c	   448      (Dem_ExtDataClassTable[*DEM_CFG_DTC_EXTDATACLASSREF(i)].Number)
; ..\EAS\BSW\Dem\Dem.c	   449  #define DEM_CFG_DTC_EXTREC_ARRAY(i)            \ 
; ..\EAS\BSW\Dem\Dem.c	   450      (Dem_ExtDataClassTable[*DEM_CFG_DTC_EXTDATACLASSREF(i)].DemExtendedDataRecordClassRef)
; ..\EAS\BSW\Dem\Dem.c	   451  #define DEM_CFG_DTC_EXTRECNUM(i)               \ 
; ..\EAS\BSW\Dem\Dem.c	   452      (Dem_ExtDataRecClassTable[i].DemExtendedDataRecordNumber)
; ..\EAS\BSW\Dem\Dem.c	   453  #define DEM_CFG_DTC_EXTREC_UPDATA(i)           \ 
; ..\EAS\BSW\Dem\Dem.c	   454      (Dem_ExtDataRecClassTable[i].DemExtendedDataRecordUpdate)
; ..\EAS\BSW\Dem\Dem.c	   455  #define DEM_CFG_DTC_EXTREC_TRIGGER(i)          \ 
; ..\EAS\BSW\Dem\Dem.c	   456      (Dem_ExtDataRecClassTable[i].DemExtendedDataRecordTrigger)
; ..\EAS\BSW\Dem\Dem.c	   457  #define DEM_CFG_NUMDATA_OF_EXTRECNUM(i)        \ 
; ..\EAS\BSW\Dem\Dem.c	   458      (Dem_ExtDataRecClassTable[i].Number)
; ..\EAS\BSW\Dem\Dem.c	   459  #define DEM_CFG_DATAARRAY_OF_EXTRECNUM(i)      \ 
; ..\EAS\BSW\Dem\Dem.c	   460      (Dem_ExtDataRecClassTable[i].DemDataElementClassRef)
; ..\EAS\BSW\Dem\Dem.c	   461  #endif
; ..\EAS\BSW\Dem\Dem.c	   462  
; ..\EAS\BSW\Dem\Dem.c	   463  #if(DEM_NUM_OF_FFRECCLASS > 0)
; ..\EAS\BSW\Dem\Dem.c	   464  /*FreezeFrameData*/
; ..\EAS\BSW\Dem\Dem.c	   465  #define DEM_CFG_DTC_FFRECNUMCLASSREF(i)        \ 
; ..\EAS\BSW\Dem\Dem.c	   466      (Dem_DTCAttributesTable[Dem_DTCTable[i].DemDTCAttributesRef].DemFreezeFrameRecNumClassRef)
; ..\EAS\BSW\Dem\Dem.c	   467  #define DEM_CFG_DTC_NUM_OF_FFREC(i)            \ 
; ..\EAS\BSW\Dem\Dem.c	   468      (Dem_FFRecNumClassTable[*DEM_CFG_DTC_FFRECNUMCLASSREF(i)].Number)
; ..\EAS\BSW\Dem\Dem.c	   469  #define DEM_CFG_DTC_FFREC_ARRAY(i)             \ 
; ..\EAS\BSW\Dem\Dem.c	   470      (Dem_FFRecNumClassTable[*DEM_CFG_DTC_FFRECNUMCLASSREF(i)].DemFreezeFrameRecordClassRef)
; ..\EAS\BSW\Dem\Dem.c	   471  #define DEM_CFG_DTC_FFRECNUM(i)                \ 
; ..\EAS\BSW\Dem\Dem.c	   472      (Dem_FFRecClassTable[i].DemFreezeFrameRecordNumber)
; ..\EAS\BSW\Dem\Dem.c	   473  #define DEM_CFG_DTC_FFREC_UPDATA(i)            \ 
; ..\EAS\BSW\Dem\Dem.c	   474      (Dem_FFRecClassTable[i].DemFreezeFrameRecordUpdate)
; ..\EAS\BSW\Dem\Dem.c	   475  #define DEM_CFG_DTC_FFREC_TRIGGER(i)           \ 
; ..\EAS\BSW\Dem\Dem.c	   476      (Dem_FFRecClassTable[i].DemFreezeFrameRecordTrigger)
; ..\EAS\BSW\Dem\Dem.c	   477  #define DEM_CFG_NUMDID_OF_FFRECNUM(i)          \ 
; ..\EAS\BSW\Dem\Dem.c	   478      (Dem_FFRecClassTable[i].Number)
; ..\EAS\BSW\Dem\Dem.c	   479  #define DEM_CFG_DIDARRAY_OF_FFRECNUM(i)        \ 
; ..\EAS\BSW\Dem\Dem.c	   480      (Dem_FFRecClassTable[i].DemDidClassRef)
; ..\EAS\BSW\Dem\Dem.c	   481  #define DEM_CFG_DID(i)                         \ 
; ..\EAS\BSW\Dem\Dem.c	   482      (Dem_DidClassTable[i].DemDidIdentifier)
; ..\EAS\BSW\Dem\Dem.c	   483  #define DEM_CFG_NUMDATA_OF_DID(i)              \ 
; ..\EAS\BSW\Dem\Dem.c	   484      (Dem_DidClassTable[i].Number)
; ..\EAS\BSW\Dem\Dem.c	   485  #define DEM_CFG_DATAARRAY_OF_DID(i)            \ 
; ..\EAS\BSW\Dem\Dem.c	   486      (Dem_DidClassTable[i].DemDidDataElementClassRef)
; ..\EAS\BSW\Dem\Dem.c	   487  #endif
; ..\EAS\BSW\Dem\Dem.c	   488  
; ..\EAS\BSW\Dem\Dem.c	   489  #if(STD_ON == DEM_CFG_J1939_FF_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	   490  #define DEM_CFG_J1939DTC_FFRECNUMCLASSREF(i)        \ 
; ..\EAS\BSW\Dem\Dem.c	   491      (Dem_DTCAttributesTable[Dem_DTCTable[i].DemDTCAttributesRef].DemJ1939FreezeFrameClassRef)
; ..\EAS\BSW\Dem\Dem.c	   492  #define DEM_CFG_J1939DTC_NUM_OF_FFSPNC(i)            \ 
; ..\EAS\BSW\Dem\Dem.c	   493      (DEM_CFG_J1939DTC_FFRECNUMCLASSREF(i)->Number)
; ..\EAS\BSW\Dem\Dem.c	   494  #define DEM_CFG_J1939DTC_FFSPNC_ARRAY(i)             \ 
; ..\EAS\BSW\Dem\Dem.c	   495      (DEM_CFG_J1939DTC_FFRECNUMCLASSREF(i)->DemSPNClassRef) 
; ..\EAS\BSW\Dem\Dem.c	   496  #endif
; ..\EAS\BSW\Dem\Dem.c	   497  
; ..\EAS\BSW\Dem\Dem.c	   498  #if((STD_ON == DEM_CFG_J1939_FF_SUPPORT)||(STD_ON == DEM_CFG_J1939EX_FF_SUPPORT))
; ..\EAS\BSW\Dem\Dem.c	   499  #define DEM_CFG_DATAARRAY_OF_FFSPN(i)            \ 
; ..\EAS\BSW\Dem\Dem.c	   500      (Dem_SPNClassTable[i].DemSPNDataElementClassRef)
; ..\EAS\BSW\Dem\Dem.c	   501  #define DEM_CFG_SPNID_OF_FFSPNC(i)\ 
; ..\EAS\BSW\Dem\Dem.c	   502      (Dem_SPNClassTable[i].DemSPNId)
; ..\EAS\BSW\Dem\Dem.c	   503  #endif
; ..\EAS\BSW\Dem\Dem.c	   504  
; ..\EAS\BSW\Dem\Dem.c	   505  #if(STD_ON == DEM_CFG_J1939EX_FF_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	   506  #define DEM_CFG_1939DTC_EXPFFRECNUMCLASSREF(i)        \ 
; ..\EAS\BSW\Dem\Dem.c	   507      (Dem_DTCAttributesTable[Dem_DTCTable[i].DemDTCAttributesRef].DemJ1939ExpandedFreezeFrameClassRef)
; ..\EAS\BSW\Dem\Dem.c	   508  #define DEM_CFG_J1939DTC_NUM_OF_EXPFFSPNC(i)            \ 
; ..\EAS\BSW\Dem\Dem.c	   509      (DEM_CFG_1939DTC_EXPFFRECNUMCLASSREF(i)->Number)
; ..\EAS\BSW\Dem\Dem.c	   510  #define DEM_CFG_J1939DTC_EXPFFSPNC_ARRAY(i)             \ 
; ..\EAS\BSW\Dem\Dem.c	   511      (DEM_CFG_1939DTC_EXPFFRECNUMCLASSREF(i)->DemSPNClassRef) 
; ..\EAS\BSW\Dem\Dem.c	   512  #endif
; ..\EAS\BSW\Dem\Dem.c	   513  
; ..\EAS\BSW\Dem\Dem.c	   514  #if(DEM_NUM_OF_DATA > 0)
; ..\EAS\BSW\Dem\Dem.c	   515  /*DataElement*/
; ..\EAS\BSW\Dem\Dem.c	   516  #define DEM_CFG_DATA_IN_DATA(i)                \ 
; ..\EAS\BSW\Dem\Dem.c	   517      (Dem_DataElementClassTable[i].DemInternalDataElementClass)
; ..\EAS\BSW\Dem\Dem.c	   518  #define DEM_CFG_DATA_IN_DATA_SIZE(i)           \ 
; ..\EAS\BSW\Dem\Dem.c	   519      (DEM_CFG_DATA_IN_DATA(i)->DemDataElementDataSize)
; ..\EAS\BSW\Dem\Dem.c	   520  #define DEM_CFG_DATA_IN_DATA_TYPE(i)           \ 
; ..\EAS\BSW\Dem\Dem.c	   521      (DEM_CFG_DATA_IN_DATA(i)->DemInternalDataElement)
; ..\EAS\BSW\Dem\Dem.c	   522  #define DEM_CFG_DATA_CS_DATA(i)                \ 
; ..\EAS\BSW\Dem\Dem.c	   523      (Dem_DataElementClassTable[i].DemExternalCSDataElementClass)
; ..\EAS\BSW\Dem\Dem.c	   524  #define DEM_CFG_DATA_CS_DATA_SIZE(i)           \ 
; ..\EAS\BSW\Dem\Dem.c	   525      (DEM_CFG_DATA_CS_DATA(i)->DemDataElementDataSize)
; ..\EAS\BSW\Dem\Dem.c	   526  #define DEM_CFG_DATA_CS_DATA_READ_FNC(i)       \ 
; ..\EAS\BSW\Dem\Dem.c	   527      (DEM_CFG_DATA_CS_DATA(i)->DemDataElementReadFnc)
; ..\EAS\BSW\Dem\Dem.c	   528  #endif
; ..\EAS\BSW\Dem\Dem.c	   529  
; ..\EAS\BSW\Dem\Dem.c	   530  /*Enable condition*/
; ..\EAS\BSW\Dem\Dem.c	   531  #if(DEM_NUM_OF_EN_CONDITION > 0)
; ..\EAS\BSW\Dem\Dem.c	   532  #define DEM_CFG_EN_CONDITION_STATUS(i)         \ 
; ..\EAS\BSW\Dem\Dem.c	   533      (Dem_EnConditionTable[i].DemEnableConditionStatus)
; ..\EAS\BSW\Dem\Dem.c	   534  #endif
; ..\EAS\BSW\Dem\Dem.c	   535  /*Enable condition*/
; ..\EAS\BSW\Dem\Dem.c	   536  #if(DEM_NUM_OF_STOR_CONDITION > 0)
; ..\EAS\BSW\Dem\Dem.c	   537  #define DEM_CFG_STOR_CONDITION_STATUS(i)       \ 
; ..\EAS\BSW\Dem\Dem.c	   538      (Dem_StorageConditionTable[i].DemStorageConditionStatus)
; ..\EAS\BSW\Dem\Dem.c	   539  #endif
; ..\EAS\BSW\Dem\Dem.c	   540  
; ..\EAS\BSW\Dem\Dem.c	   541  /*Indicator*/
; ..\EAS\BSW\Dem\Dem.c	   542  #if(DEM_NUM_OF_INDICATOR > 0)
; ..\EAS\BSW\Dem\Dem.c	   543  #define DEM_CFG_INDICATOR_STATUS_FNC(i)        \ 
; ..\EAS\BSW\Dem\Dem.c	   544      (Dem_IndicatorStatusIndex[i].DemCallbackIndicatorStatusNotifyFnc)
; ..\EAS\BSW\Dem\Dem.c	   545  #define DEM_CFG_INDICATOR_STATUS_START(i)      \ 
; ..\EAS\BSW\Dem\Dem.c	   546      (Dem_IndicatorStatusIndex[i].IndicatorStatusStartOffset)
; ..\EAS\BSW\Dem\Dem.c	   547  #define DEM_CFG_INDICATOR_STATUS_NUM(i)        \ 
; ..\EAS\BSW\Dem\Dem.c	   548      (Dem_IndicatorStatusIndex[i].NumOfReferencedEvent)
; ..\EAS\BSW\Dem\Dem.c	   549  #endif/*#if(DEM_NUM_OF_INDICATOR > 0)*/
; ..\EAS\BSW\Dem\Dem.c	   550  
; ..\EAS\BSW\Dem\Dem.c	   551  
; ..\EAS\BSW\Dem\Dem.c	   552  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	   553  /*DemRatio*/
; ..\EAS\BSW\Dem\Dem.c	   554  #if(DEM_NUM_OF_RATIO > 0)
; ..\EAS\BSW\Dem\Dem.c	   555  #define DEM_CFG_RATIO_EVENTREF(i)              (Dem_RatioTable[i].DemDiagnosticEventRef)
; ..\EAS\BSW\Dem\Dem.c	   556  #define DEM_CFG_RATIO_IUMPR(i)                 (Dem_RatioTable[i].DemIUMPRGroup)
; ..\EAS\BSW\Dem\Dem.c	   557  #define DEM_CFG_RATIO_IUMPR_DEN(i)             (Dem_RatioTable[i].DemIUMPRDenGroup)
; ..\EAS\BSW\Dem\Dem.c	   558  #define DEM_CFG_RATIO_KIND(i)                  (Dem_RatioTable[i].DemRatioKind)
; ..\EAS\BSW\Dem\Dem.c	   559  #endif/*#if(DEM_NUM_OF_RATIO > 0)*/
; ..\EAS\BSW\Dem\Dem.c	   560  #if(DEM_CFG_OBD_NUM_OF_PID > 0)
; ..\EAS\BSW\Dem\Dem.c	   561  /*DemPidClass*/
; ..\EAS\BSW\Dem\Dem.c	   562  #define DEM_CFG_PID_ID(i)                      (Dem_PidTable[i].DemPidIdentifier)
; ..\EAS\BSW\Dem\Dem.c	   563  #define DEM_CFG_PID_NUM_OF_DATA(i)             (Dem_PidTable[i].NumOfData)
; ..\EAS\BSW\Dem\Dem.c	   564  #define DEM_CFG_PID_DATA_CLASS(i)              (Dem_PidTable[i].DemPidDataElementClassRef)
; ..\EAS\BSW\Dem\Dem.c	   565  #endif
; ..\EAS\BSW\Dem\Dem.c	   566  #endif/*#if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))*/
; ..\EAS\BSW\Dem\Dem.c	   567  
; ..\EAS\BSW\Dem\Dem.c	   568  
; ..\EAS\BSW\Dem\Dem.c	   569  /* Status bit0 testFailed  */
; ..\EAS\BSW\Dem\Dem.c	   570  #define DEM_TEST_UDS_STATUS_TF(Status)              ((Status & DEM_UDS_STATUS_TF) != 0)
; ..\EAS\BSW\Dem\Dem.c	   571  #define DEM_SET_UDS_STATUS_TF(Status)               (Status | DEM_UDS_STATUS_TF)
; ..\EAS\BSW\Dem\Dem.c	   572  #define DEM_CLEAR_UDS_STATUS_TF(Status)             (Status & (~DEM_UDS_STATUS_TF))
; ..\EAS\BSW\Dem\Dem.c	   573  
; ..\EAS\BSW\Dem\Dem.c	   574  /* Status bit1 testFailedThisOperationCycle */
; ..\EAS\BSW\Dem\Dem.c	   575  #define DEM_TEST_UDS_STATUS_TFTOC(Status)           ((Status & DEM_UDS_STATUS_TFTOC) != 0)
; ..\EAS\BSW\Dem\Dem.c	   576  #define DEM_SET_UDS_STATUS_TFTOC(Status)            (Status | DEM_UDS_STATUS_TFTOC)
; ..\EAS\BSW\Dem\Dem.c	   577  #define DEM_CLEAR_UDS_STATUS_TFTOC(Status)          (Status & (~DEM_UDS_STATUS_TFTOC))
; ..\EAS\BSW\Dem\Dem.c	   578  
; ..\EAS\BSW\Dem\Dem.c	   579  /* Status bit2 pendingDTC */
; ..\EAS\BSW\Dem\Dem.c	   580  #define DEM_TEST_UDS_STATUS_PDTC(Status)            ((Status & DEM_UDS_STATUS_PDTC) != 0)
; ..\EAS\BSW\Dem\Dem.c	   581  #define DEM_SET_UDS_STATUS_PDTC(Status)             (Status | DEM_UDS_STATUS_PDTC)
; ..\EAS\BSW\Dem\Dem.c	   582  #define DEM_CLEAR_UDS_STATUS_PDTC(Status)           (Status & (~DEM_UDS_STATUS_PDTC))
; ..\EAS\BSW\Dem\Dem.c	   583  
; ..\EAS\BSW\Dem\Dem.c	   584  /* Status bit3 confirmedDTC */
; ..\EAS\BSW\Dem\Dem.c	   585  #define DEM_TEST_UDS_STATUS_CDTC(Status)            ((Status & DEM_UDS_STATUS_CDTC) != 0)
; ..\EAS\BSW\Dem\Dem.c	   586  #define DEM_SET_UDS_STATUS_CDTC(Status)             (Status | DEM_UDS_STATUS_CDTC)
; ..\EAS\BSW\Dem\Dem.c	   587  #define DEM_CLEAR_UDS_STATUS_CDTC(Status)           (Status & (~DEM_UDS_STATUS_CDTC))
; ..\EAS\BSW\Dem\Dem.c	   588  
; ..\EAS\BSW\Dem\Dem.c	   589  /* Status bit4 testNotCompletedSinceLastClear*/
; ..\EAS\BSW\Dem\Dem.c	   590  #define DEM_TEST_UDS_STATUS_TNCSLC(Status)          ((Status & DEM_UDS_STATUS_TNCSLC) != 0)
; ..\EAS\BSW\Dem\Dem.c	   591  #define DEM_SET_UDS_STATUS_TNCSLC(Status)           (Status | DEM_UDS_STATUS_TNCSLC)
; ..\EAS\BSW\Dem\Dem.c	   592  #define DEM_CLEAR_UDS_STATUS_TNCSLC(Status)         (Status & (~DEM_UDS_STATUS_TNCSLC))
; ..\EAS\BSW\Dem\Dem.c	   593  
; ..\EAS\BSW\Dem\Dem.c	   594  /* Status bit5 testFailedSinceLastClear */
; ..\EAS\BSW\Dem\Dem.c	   595  #define DEM_TEST_UDS_STATUS_TFSLC(Status)           ((Status & DEM_UDS_STATUS_TFSLC) != 0)
; ..\EAS\BSW\Dem\Dem.c	   596  #define DEM_SET_UDS_STATUS_TFSLC(Status)            (Status | DEM_UDS_STATUS_TFSLC)
; ..\EAS\BSW\Dem\Dem.c	   597  #define DEM_CLEAR_UDS_STATUS_TFSLC(Status)          (Status & (~DEM_UDS_STATUS_TFSLC))
; ..\EAS\BSW\Dem\Dem.c	   598  
; ..\EAS\BSW\Dem\Dem.c	   599  /* Status bit6 testNotCompletedThisOperationCycle*/
; ..\EAS\BSW\Dem\Dem.c	   600  #define DEM_TEST_UDS_STATUS_TNCTOC(Status)          ((Status & DEM_UDS_STATUS_TNCTOC) != 0)
; ..\EAS\BSW\Dem\Dem.c	   601  #define DEM_SET_UDS_STATUS_TNCTOC(Status)           (Status | DEM_UDS_STATUS_TNCTOC)
; ..\EAS\BSW\Dem\Dem.c	   602  #define DEM_CLEAR_UDS_STATUS_TNCTOC(Status)         (Status & (~DEM_UDS_STATUS_TNCTOC))
; ..\EAS\BSW\Dem\Dem.c	   603  
; ..\EAS\BSW\Dem\Dem.c	   604  /* Status bit7 warningIndicatorRequested */
; ..\EAS\BSW\Dem\Dem.c	   605  #define DEM_TEST_UDS_STATUS_WIR(Status)             ((Status & DEM_UDS_STATUS_WIR) != 0)
; ..\EAS\BSW\Dem\Dem.c	   606  #define DEM_SET_UDS_STATUS_WIR(Status)              (Status | DEM_UDS_STATUS_WIR)
; ..\EAS\BSW\Dem\Dem.c	   607  #define DEM_CLEAR_UDS_STATUS_WIR(Status)            (Status & (~DEM_UDS_STATUS_WIR))
; ..\EAS\BSW\Dem\Dem.c	   608  
; ..\EAS\BSW\Dem\Dem.c	   609  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	   610  /*Status bit0 UnconfirmedDTC*/
; ..\EAS\BSW\Dem\Dem.c	   611  #define DEM_TEST_CMA_STATUS_UDTC(Status)            ((Status & DEM_UDS_STATUS_TF) != 0)
; ..\EAS\BSW\Dem\Dem.c	   612  #define DEM_SET_CMA_STATUS_UDTC(Status)             (Status | DEM_UDS_STATUS_TF)
; ..\EAS\BSW\Dem\Dem.c	   613  #define DEM_CLEAR_CMA_STATUS_UDTC(Status)           (Status & (~DEM_UDS_STATUS_TF))
; ..\EAS\BSW\Dem\Dem.c	   614  /*Status bit1 UnconfirmedDTCThisOperationonCycle*/
; ..\EAS\BSW\Dem\Dem.c	   615  #define DEM_TEST_CMA_STATUS_UDTCTOC(Status)         ((Status & DEM_UDS_STATUS_TFTOC) != 0)
; ..\EAS\BSW\Dem\Dem.c	   616  #define DEM_SET_CMA_STATUS_UDTCTOC(Status)          (Status | DEM_UDS_STATUS_TFTOC)
; ..\EAS\BSW\Dem\Dem.c	   617  #define DEM_CLEAR_CMA_STATUS_UDTCTOC(Status)        (Status & (~DEM_UDS_STATUS_TFTOC))
; ..\EAS\BSW\Dem\Dem.c	   618  /*Status bit2 UnconfirmedDTCSinceLastClear*/
; ..\EAS\BSW\Dem\Dem.c	   619  #define DEM_TEST_CMA_STATUS_UDTCSLC(Status)         ((Status & DEM_UDS_STATUS_PDTC) != 0)
; ..\EAS\BSW\Dem\Dem.c	   620  #define DEM_SET_CMA_STATUS_UDTCSLC(Status)          (Status | DEM_UDS_STATUS_PDTC)
; ..\EAS\BSW\Dem\Dem.c	   621  #define DEM_CLEAR_CMA_STATUS_UDTCSLC(Status)        (Status & (~DEM_UDS_STATUS_PDTC))
; ..\EAS\BSW\Dem\Dem.c	   622  /*Status bit3 AgedDTC*/
; ..\EAS\BSW\Dem\Dem.c	   623  #define DEM_TEST_CMA_STATUS_ADTC(Status)            ((Status & DEM_UDS_STATUS_CDTC) != 0)
; ..\EAS\BSW\Dem\Dem.c	   624  #define DEM_SET_CMA_STATUS_ADTC(Status)             (Status | DEM_UDS_STATUS_CDTC)
; ..\EAS\BSW\Dem\Dem.c	   625  #define DEM_CLEAR_CMA_STATUS_ADTC(Status)           (Status & (~DEM_UDS_STATUS_CDTC))
; ..\EAS\BSW\Dem\Dem.c	   626  /*Status bit4 SymptomSinceLastClear*/
; ..\EAS\BSW\Dem\Dem.c	   627  #define DEM_TEST_CMA_STATUS_SSLC(Status)            ((Status & DEM_UDS_STATUS_TNCSLC) != 0)
; ..\EAS\BSW\Dem\Dem.c	   628  #define DEM_SET_CMA_STATUS_SSLC(Status)             (Status | DEM_UDS_STATUS_TNCSLC)
; ..\EAS\BSW\Dem\Dem.c	   629  #define DEM_CLEAR_CMA_STATUS_SSLC(Status)           (Status & (~DEM_UDS_STATUS_TNCSLC))
; ..\EAS\BSW\Dem\Dem.c	   630  /*Status bit5 WarningIndicatorRequestedSinceLastClear*/
; ..\EAS\BSW\Dem\Dem.c	   631  #define DEM_TEST_CMA_STATUS_WIRSLC(Status)          ((Status & DEM_UDS_STATUS_TFSLC) != 0)
; ..\EAS\BSW\Dem\Dem.c	   632  #define DEM_SET_CMA_STATUS_WIRSLC(Status)           (Status | DEM_UDS_STATUS_TFSLC)
; ..\EAS\BSW\Dem\Dem.c	   633  #define DEM_CLEAR_CMA_STATUS_WIRSLC(Status)         (Status & (~DEM_UDS_STATUS_TFSLC))
; ..\EAS\BSW\Dem\Dem.c	   634  /*Status bit6 EmissionRelatedDTC*/
; ..\EAS\BSW\Dem\Dem.c	   635  #define DEM_TEST_CMA_STATUS_ERDTC(Status)           ((Status & DEM_UDS_STATUS_TNCTOC) != 0)
; ..\EAS\BSW\Dem\Dem.c	   636  #define DEM_SET_CMA_STATUS_ERDTC(Status)            (Status | DEM_UDS_STATUS_TNCTOC)
; ..\EAS\BSW\Dem\Dem.c	   637  #define DEM_CLEAR_CMA_STATUS_ERDTC(Status)          (Status & (~DEM_UDS_STATUS_TNCTOC))
; ..\EAS\BSW\Dem\Dem.c	   638  /*Status bit7 TestFailedSinceLastClear/Aged*/
; ..\EAS\BSW\Dem\Dem.c	   639  #define DEM_TEST_CMA_STATUS_TFSLCA(Status)          ((Status & DEM_UDS_STATUS_WIR) != 0)
; ..\EAS\BSW\Dem\Dem.c	   640  #define DEM_SET_CMA_STATUS_TFSLCA(Status)           (Status | DEM_UDS_STATUS_WIR)
; ..\EAS\BSW\Dem\Dem.c	   641  #define DEM_CLEAR_CMA_STATUS_TFSLCA(Status)         (Status & (~DEM_UDS_STATUS_WIR))
; ..\EAS\BSW\Dem\Dem.c	   642  #endif
; ..\EAS\BSW\Dem\Dem.c	   643  /*******************************************************************************
; ..\EAS\BSW\Dem\Dem.c	   644  *   typedef
; ..\EAS\BSW\Dem\Dem.c	   645  *******************************************************************************/
; ..\EAS\BSW\Dem\Dem.c	   646  typedef struct
; ..\EAS\BSW\Dem\Dem.c	   647  {
; ..\EAS\BSW\Dem\Dem.c	   648      boolean FilteredValidFlag;
; ..\EAS\BSW\Dem\Dem.c	   649      Dem_UdsStatusByteType DTCStatusMask;
; ..\EAS\BSW\Dem\Dem.c	   650      Dem_DTCKindType DTCKind;
; ..\EAS\BSW\Dem\Dem.c	   651      Dem_DTCFormatType DTCFormat;
; ..\EAS\BSW\Dem\Dem.c	   652      Dem_DTCOriginType DTCOrigin;
; ..\EAS\BSW\Dem\Dem.c	   653      boolean FilterWithSeverity;
; ..\EAS\BSW\Dem\Dem.c	   654      boolean FilterForFDC;
; ..\EAS\BSW\Dem\Dem.c	   655      Dem_DTCSeverityType DTCSeverityMask;
; ..\EAS\BSW\Dem\Dem.c	   656      uint16 FilteredDTCIndexTable[DEM_NUM_OF_DTC];
; ..\EAS\BSW\Dem\Dem.c	   657      uint16 NumberOfFilteredDTC;
; ..\EAS\BSW\Dem\Dem.c	   658      uint16 NextFilteredDTCIndex;
; ..\EAS\BSW\Dem\Dem.c	   659  } Dem_DcmFilterInfoType;
; ..\EAS\BSW\Dem\Dem.c	   660  
; ..\EAS\BSW\Dem\Dem.c	   661  #if(STD_ON == DEM_CFG_J1939READING_DTC_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	   662  typedef struct
; ..\EAS\BSW\Dem\Dem.c	   663  {
; ..\EAS\BSW\Dem\Dem.c	   664      boolean FilteredValidFlag;
; ..\EAS\BSW\Dem\Dem.c	   665      Dem_J1939DcmDTCStatusFilterType DTCStatusFilter;
; ..\EAS\BSW\Dem\Dem.c	   666      Dem_DTCKindType DTCKind;
; ..\EAS\BSW\Dem\Dem.c	   667      uint8 node;
; ..\EAS\BSW\Dem\Dem.c	   668      Dem_J1939DcmSetFreezeFrameFilterType FreezeFrameKind;
; ..\EAS\BSW\Dem\Dem.c	   669      uint16 FilteredDTCIndexTable[DEM_NUM_OF_DTC];
; ..\EAS\BSW\Dem\Dem.c	   670      uint16 NumberOfFilteredDTC;
; ..\EAS\BSW\Dem\Dem.c	   671      uint16 NextFilteredDTCIndex;
; ..\EAS\BSW\Dem\Dem.c	   672  } Dem_J1939DcmFilterInfoType;
; ..\EAS\BSW\Dem\Dem.c	   673  #endif/*#if(STD_ON == DEM_CFG_J1939READING_DTC_SUPPORT)*/
; ..\EAS\BSW\Dem\Dem.c	   674  
; ..\EAS\BSW\Dem\Dem.c	   675  
; ..\EAS\BSW\Dem\Dem.c	   676  /*******************************************************************************
; ..\EAS\BSW\Dem\Dem.c	   677  *   Vars
; ..\EAS\BSW\Dem\Dem.c	   678  *******************************************************************************/
; ..\EAS\BSW\Dem\Dem.c	   679  #define DEM_START_SEC_VAR_NOINIT_UNSPECIFIED
; ..\EAS\BSW\Dem\Dem.c	   680  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   681  
; ..\EAS\BSW\Dem\Dem.c	   682  VAR(Dem_StorageMemType, DEM_VAR_NOINIT) Dem_StorageMem;
; ..\EAS\BSW\Dem\Dem.c	   683  
; ..\EAS\BSW\Dem\Dem.c	   684  #define DEM_STOP_SEC_VAR_NOINIT_UNSPECIFIED
; ..\EAS\BSW\Dem\Dem.c	   685  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   686  
; ..\EAS\BSW\Dem\Dem.c	   687  #define DEM_START_SEC_VAR_INIT_8
; ..\EAS\BSW\Dem\Dem.c	   688  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   689  
; ..\EAS\BSW\Dem\Dem.c	   690  STATIC VAR(Dem_StateType, DEM_VAR_INIT) Dem_State = DEM_UNINIT;
; ..\EAS\BSW\Dem\Dem.c	   691  STATIC VAR(uint8, DEM_VAR_INIT) Dem_ClearDTCState = DEM_IN_CLEAR_DTC_IDLE;
; ..\EAS\BSW\Dem\Dem.c	   692  
; ..\EAS\BSW\Dem\Dem.c	   693  #define DEM_STOP_SEC_VAR_INIT_8
; ..\EAS\BSW\Dem\Dem.c	   694  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   695  
; ..\EAS\BSW\Dem\Dem.c	   696  #define DEM_START_SEC_VAR_NOINIT_8
; ..\EAS\BSW\Dem\Dem.c	   697  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   698  
; ..\EAS\BSW\Dem\Dem.c	   699  STATIC VAR(Dem_OperationCycleStateType, DEM_VAR_NOINIT) Dem_OpCycReq[DEM_NUM_OF_OPCYCLE];
; ..\EAS\BSW\Dem\Dem.c	   700  STATIC VAR(Dem_OperationCycleStateType, DEM_VAR_NOINIT) Dem_OpCycState[DEM_NUM_OF_OPCYCLE];
; ..\EAS\BSW\Dem\Dem.c	   701  
; ..\EAS\BSW\Dem\Dem.c	   702  
; ..\EAS\BSW\Dem\Dem.c	   703  #if(DEM_NUM_OF_EN_CONDITION > 0)
; ..\EAS\BSW\Dem\Dem.c	   704  STATIC VAR(boolean, DEM_VAR_NOINIT) Dem_EventEnCondition[DEM_NUM_OF_EN_CONDITION];
; ..\EAS\BSW\Dem\Dem.c	   705  #endif
; ..\EAS\BSW\Dem\Dem.c	   706  #if(DEM_NUM_OF_STOR_CONDITION > 0)
; ..\EAS\BSW\Dem\Dem.c	   707  STATIC VAR(boolean, DEM_VAR_NOINIT) Dem_EventStorCondition[DEM_NUM_OF_STOR_CONDITION];
; ..\EAS\BSW\Dem\Dem.c	   708  #endif
; ..\EAS\BSW\Dem\Dem.c	   709  
; ..\EAS\BSW\Dem\Dem.c	   710  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	   711      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	   712  STATIC VAR(uint8, DEM_VAR_NOINIT) Dem_EventAvailable[DEM_NUM_OF_EVENT];
; ..\EAS\BSW\Dem\Dem.c	   713  #endif
; ..\EAS\BSW\Dem\Dem.c	   714  
; ..\EAS\BSW\Dem\Dem.c	   715  STATIC VAR(boolean, DEM_VAR_NOINIT) Dem_EnableDtcSetting[DEM_NUM_OF_DTC];
; ..\EAS\BSW\Dem\Dem.c	   716  STATIC VAR(boolean, DEM_VAR_NOINIT) Dem_DtcUpDateState[DEM_NUM_OF_DTC];
; ..\EAS\BSW\Dem\Dem.c	   717  
; ..\EAS\BSW\Dem\Dem.c	   718  STATIC VAR(boolean, DEM_VAR_NOINIT) Dem_DataCaptureFlag[DEM_NUM_OF_EVENT];
; ..\EAS\BSW\Dem\Dem.c	   719  STATIC VAR(Dem_EventMemoryEntryStorageTriggerType, DEM_VAR_NOINIT) Dem_DataCaptureTrigger[DEM_NUM_OF_EVENT];
; ..\EAS\BSW\Dem\Dem.c	   720  
; ..\EAS\BSW\Dem\Dem.c	   721  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	   722  STATIC VAR(boolean, DEM_VAR_NOINIT) Dem_EventDBTFreezeFlag[DEM_NUM_OF_EVENT];
; ..\EAS\BSW\Dem\Dem.c	   723  #endif
; ..\EAS\BSW\Dem\Dem.c	   724  
; ..\EAS\BSW\Dem\Dem.c	   725  
; ..\EAS\BSW\Dem\Dem.c	   726  STATIC VAR(boolean, DEM_VAR_NOINIT) Dem_DTC_FirstFdcThreshold[DEM_NUM_OF_DTC];
; ..\EAS\BSW\Dem\Dem.c	   727  
; ..\EAS\BSW\Dem\Dem.c	   728  
; ..\EAS\BSW\Dem\Dem.c	   729  
; ..\EAS\BSW\Dem\Dem.c	   730  #define DEM_STOP_SEC_VAR_NOINIT_8
; ..\EAS\BSW\Dem\Dem.c	   731  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   732  
; ..\EAS\BSW\Dem\Dem.c	   733  #define DEM_START_SEC_VAR_NOINIT_16
; ..\EAS\BSW\Dem\Dem.c	   734  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   735  
; ..\EAS\BSW\Dem\Dem.c	   736  STATIC VAR(uint16, DEM_VAR_NOINIT) Dem_CapturePosition;
; ..\EAS\BSW\Dem\Dem.c	   737  
; ..\EAS\BSW\Dem\Dem.c	   738  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU) && (DEM_CFG_OBD_CENTRALIZED_PID31_HANDLING == STD_ON))
; ..\EAS\BSW\Dem\Dem.c	   739  STATIC VAR(uint16, DEM_VAR_NOINIT) Dem_ObdTimeSinceEngineStartLast;
; ..\EAS\BSW\Dem\Dem.c	   740  STATIC VAR(uint16, DEM_VAR_NOINIT) Dem_ObdTimesOneSecond;
; ..\EAS\BSW\Dem\Dem.c	   741  #endif
; ..\EAS\BSW\Dem\Dem.c	   742  
; ..\EAS\BSW\Dem\Dem.c	   743  #define DEM_STOP_SEC_VAR_NOINIT_16
; ..\EAS\BSW\Dem\Dem.c	   744  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   745  
; ..\EAS\BSW\Dem\Dem.c	   746  #define DEM_START_SEC_VAR_NOINIT_UNSPECIFIED
; ..\EAS\BSW\Dem\Dem.c	   747  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   748  
; ..\EAS\BSW\Dem\Dem.c	   749  STATIC VAR(Dem_DcmFilterInfoType, DEM_VAR_NOINIT) Dem_DcmFilterInfo;
; ..\EAS\BSW\Dem\Dem.c	   750  #if(STD_ON == DEM_CFG_J1939READING_DTC_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	   751  STATIC VAR(Dem_J1939DcmFilterInfoType, DEM_VAR_NOINIT) Dem_J1939DcmFilterInfo;
; ..\EAS\BSW\Dem\Dem.c	   752  #endif
; ..\EAS\BSW\Dem\Dem.c	   753  
; ..\EAS\BSW\Dem\Dem.c	   754  #define DEM_STOP_SEC_VAR_NOINIT_UNSPECIFIED
; ..\EAS\BSW\Dem\Dem.c	   755  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   756  
; ..\EAS\BSW\Dem\Dem.c	   757  #define DEM_START_SEC_VAR_NOINIT_8
; ..\EAS\BSW\Dem\Dem.c	   758  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   759  
; ..\EAS\BSW\Dem\Dem.c	   760  /*used for UDS: Dem_DcmSetFreezeFrameRecordFilter & Dem_DcmGetNextFilteredRecord*/
; ..\EAS\BSW\Dem\Dem.c	   761  #if(DEM_NUM_OF_FFRECCLASS > 0)
; ..\EAS\BSW\Dem\Dem.c	   762  STATIC VAR(uint8, DEM_VAR_NOINIT) Dem_NumFFRecOfDTC;
; ..\EAS\BSW\Dem\Dem.c	   763  #endif
; ..\EAS\BSW\Dem\Dem.c	   764  
; ..\EAS\BSW\Dem\Dem.c	   765  #define DEM_STOP_SEC_VAR_NOINIT_8
; ..\EAS\BSW\Dem\Dem.c	   766  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   767  
; ..\EAS\BSW\Dem\Dem.c	   768  #if(DEM_CFG_BSWERRORBUFFERSIZE > 0)
; ..\EAS\BSW\Dem\Dem.c	   769  #define DEM_START_SEC_VAR_NOINIT_16
; ..\EAS\BSW\Dem\Dem.c	   770  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   771  STATIC VAR(Dem_EventIdType, DEM_VAR_NOINIT) Dem_BswErrorQueue[DEM_CFG_BSWERRORBUFFERSIZE];
; ..\EAS\BSW\Dem\Dem.c	   772  #define DEM_STOP_SEC_VAR_NOINIT_16
; ..\EAS\BSW\Dem\Dem.c	   773  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   774  #define DEM_START_SEC_VAR_NOINIT_8
; ..\EAS\BSW\Dem\Dem.c	   775  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   776  STATIC VAR(Dem_EventStatusType, DEM_VAR_NOINIT) Dem_BswErrorStatus[DEM_CFG_BSWERRORBUFFERSIZE];
; ..\EAS\BSW\Dem\Dem.c	   777  #define DEM_STOP_SEC_VAR_NOINIT_8
; ..\EAS\BSW\Dem\Dem.c	   778  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   779  #endif
; ..\EAS\BSW\Dem\Dem.c	   780  
; ..\EAS\BSW\Dem\Dem.c	   781  
; ..\EAS\BSW\Dem\Dem.c	   782  #define DEM_START_SEC_VAR_NOINIT_32
; ..\EAS\BSW\Dem\Dem.c	   783  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   784  STATIC VAR(uint32, DEM_VAR_NOINIT) Dem_ClearDTC_DTC;
; ..\EAS\BSW\Dem\Dem.c	   785  #define DEM_STOP_SEC_VAR_NOINIT_32
; ..\EAS\BSW\Dem\Dem.c	   786  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   787  
; ..\EAS\BSW\Dem\Dem.c	   788  #define DEM_START_SEC_VAR_NOINIT_32
; ..\EAS\BSW\Dem\Dem.c	   789  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   790  STATIC VAR(uint16, DEM_VAR_NOINIT) Dem_ClearDTC_Index;
; ..\EAS\BSW\Dem\Dem.c	   791  #define DEM_STOP_SEC_VAR_NOINIT_32
; ..\EAS\BSW\Dem\Dem.c	   792  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   793  
; ..\EAS\BSW\Dem\Dem.c	   794  #define DEM_START_SEC_VAR_NOINIT_8
; ..\EAS\BSW\Dem\Dem.c	   795  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   796  STATIC VAR(Dem_DTCFormatType, DEM_VAR_NOINIT) Dem_ClearDTC_DTCFormat;
; ..\EAS\BSW\Dem\Dem.c	   797  STATIC VAR(Dem_DTCOriginType, DEM_VAR_NOINIT) Dem_ClearDTC_DTCOrigin;
; ..\EAS\BSW\Dem\Dem.c	   798  #define DEM_STOP_SEC_VAR_NOINIT_8
; ..\EAS\BSW\Dem\Dem.c	   799  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   800  
; ..\EAS\BSW\Dem\Dem.c	   801  
; ..\EAS\BSW\Dem\Dem.c	   802  
; ..\EAS\BSW\Dem\Dem.c	   803  #define DEM_START_SEC_CODE
; ..\EAS\BSW\Dem\Dem.c	   804  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	   805  
; ..\EAS\BSW\Dem\Dem.c	   806  /*******************************************************************************
; ..\EAS\BSW\Dem\Dem.c	   807  *   Dem static Api declaration
; ..\EAS\BSW\Dem\Dem.c	   808  *******************************************************************************/
; ..\EAS\BSW\Dem\Dem.c	   809  STATIC FUNC(void, DEM_CODE) DemInternal_CheckStorageMem
; ..\EAS\BSW\Dem\Dem.c	   810  (
; ..\EAS\BSW\Dem\Dem.c	   811      void
; ..\EAS\BSW\Dem\Dem.c	   812  );
; ..\EAS\BSW\Dem\Dem.c	   813  
; ..\EAS\BSW\Dem\Dem.c	   814  STATIC FUNC(void, DEM_CODE) DemInternal_SetCaptureQueue
; ..\EAS\BSW\Dem\Dem.c	   815  (
; ..\EAS\BSW\Dem\Dem.c	   816      uint16 EventId,
; ..\EAS\BSW\Dem\Dem.c	   817      Dem_EventMemoryEntryStorageTriggerType Trigger
; ..\EAS\BSW\Dem\Dem.c	   818  );
; ..\EAS\BSW\Dem\Dem.c	   819  
; ..\EAS\BSW\Dem\Dem.c	   820  STATIC FUNC(void, DEM_CODE) DemInternal_ClrCaptureQueue
; ..\EAS\BSW\Dem\Dem.c	   821  (
; ..\EAS\BSW\Dem\Dem.c	   822      uint16 EventId
; ..\EAS\BSW\Dem\Dem.c	   823  );
; ..\EAS\BSW\Dem\Dem.c	   824  
; ..\EAS\BSW\Dem\Dem.c	   825  STATIC FUNC(boolean, DEM_CODE) DemInternal_GetCaptureQueue
; ..\EAS\BSW\Dem\Dem.c	   826  (
; ..\EAS\BSW\Dem\Dem.c	   827      uint16 EventId,
; ..\EAS\BSW\Dem\Dem.c	   828      Dem_EventMemoryEntryStorageTriggerType *Trigger
; ..\EAS\BSW\Dem\Dem.c	   829  );
; ..\EAS\BSW\Dem\Dem.c	   830  
; ..\EAS\BSW\Dem\Dem.c	   831  STATIC FUNC(Dem_UdsStatusByteType, DEM_CODE) DemInternal_SetEventPass
; ..\EAS\BSW\Dem\Dem.c	   832  (
; ..\EAS\BSW\Dem\Dem.c	   833      Dem_EventIdType EventId
; ..\EAS\BSW\Dem\Dem.c	   834  );
; ..\EAS\BSW\Dem\Dem.c	   835  
; ..\EAS\BSW\Dem\Dem.c	   836  STATIC FUNC(Dem_UdsStatusByteType, DEM_CODE) DemInternal_SetEventFail
; ..\EAS\BSW\Dem\Dem.c	   837  (
; ..\EAS\BSW\Dem\Dem.c	   838      Dem_EventIdType EventId
; ..\EAS\BSW\Dem\Dem.c	   839  );
; ..\EAS\BSW\Dem\Dem.c	   840  
; ..\EAS\BSW\Dem\Dem.c	   841  STATIC FUNC(void, DEM_CODE) DemInternal_SetEventStatus
; ..\EAS\BSW\Dem\Dem.c	   842  (
; ..\EAS\BSW\Dem\Dem.c	   843      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	   844      Dem_EventStatusType EventStatus
; ..\EAS\BSW\Dem\Dem.c	   845  );
; ..\EAS\BSW\Dem\Dem.c	   846  
; ..\EAS\BSW\Dem\Dem.c	   847  STATIC FUNC(Std_ReturnType, DEM_CODE) DemInternal_GetUsableMemoryEntry
; ..\EAS\BSW\Dem\Dem.c	   848  (
; ..\EAS\BSW\Dem\Dem.c	   849      uint16 DtcId,
; ..\EAS\BSW\Dem\Dem.c	   850      P2VAR(Dem_MemIdType, AUTOMATIC, DEM_APPL_DATA) MemoryEntryId
; ..\EAS\BSW\Dem\Dem.c	   851  );
; ..\EAS\BSW\Dem\Dem.c	   852  
; ..\EAS\BSW\Dem\Dem.c	   853  STATIC FUNC(Std_ReturnType, DEM_CODE) DemInternal_SearchFreeEntry
; ..\EAS\BSW\Dem\Dem.c	   854  (
; ..\EAS\BSW\Dem\Dem.c	   855      P2VAR(Dem_MemIdType, AUTOMATIC, DEM_APPL_DATA) MemoryEntryId
; ..\EAS\BSW\Dem\Dem.c	   856  );
; ..\EAS\BSW\Dem\Dem.c	   857  
; ..\EAS\BSW\Dem\Dem.c	   858  STATIC FUNC(void, DEM_CODE) DemInternal_ClearOneMemoryEntry
; ..\EAS\BSW\Dem\Dem.c	   859  (
; ..\EAS\BSW\Dem\Dem.c	   860      Dem_MemIdType MemoryEntryId
; ..\EAS\BSW\Dem\Dem.c	   861  );
; ..\EAS\BSW\Dem\Dem.c	   862  
; ..\EAS\BSW\Dem\Dem.c	   863  STATIC FUNC(Std_ReturnType, DEM_CODE) DemInternal_SearchEntryForDisplacement
; ..\EAS\BSW\Dem\Dem.c	   864  (
; ..\EAS\BSW\Dem\Dem.c	   865      uint16 DtcId,
; ..\EAS\BSW\Dem\Dem.c	   866      P2VAR(Dem_MemIdType, AUTOMATIC, DEM_APPL_DATA) MemoryEntryId
; ..\EAS\BSW\Dem\Dem.c	   867  );
; ..\EAS\BSW\Dem\Dem.c	   868  
; ..\EAS\BSW\Dem\Dem.c	   869  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	   870  #if(DEM_CFG_OBD_EVENT_DISPLACEMENT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	   871  STATIC FUNC(boolean, DEM_CODE) DemInternal_IgnoreFoundEntry
; ..\EAS\BSW\Dem\Dem.c	   872  (
; ..\EAS\BSW\Dem\Dem.c	   873      uint16 EventId
; ..\EAS\BSW\Dem\Dem.c	   874  );
; ..\EAS\BSW\Dem\Dem.c	   875  #endif
; ..\EAS\BSW\Dem\Dem.c	   876  #endif
; ..\EAS\BSW\Dem\Dem.c	   877  
; ..\EAS\BSW\Dem\Dem.c	   878  #if(DEM_CFG_EVENTDISPLACEMENTSTRATEGY == DEM_DISPLACEMENT_FULL)
; ..\EAS\BSW\Dem\Dem.c	   879  STATIC FUNC(boolean, DEM_CODE) DemInternal_IsDtcActive
; ..\EAS\BSW\Dem\Dem.c	   880  (
; ..\EAS\BSW\Dem\Dem.c	   881      uint16 DtcId
; ..\EAS\BSW\Dem\Dem.c	   882  );
; ..\EAS\BSW\Dem\Dem.c	   883  #endif
; ..\EAS\BSW\Dem\Dem.c	   884  
; ..\EAS\BSW\Dem\Dem.c	   885  #if(DEM_CFG_EVENTDISPLACEMENTSTRATEGY != DEM_DISPLACEMENT_NONE)
; ..\EAS\BSW\Dem\Dem.c	   886  STATIC FUNC(boolean, DEM_CODE) DemInternal_IsDtcOlder
; ..\EAS\BSW\Dem\Dem.c	   887  (
; ..\EAS\BSW\Dem\Dem.c	   888      uint16 Event1,
; ..\EAS\BSW\Dem\Dem.c	   889      uint16 Event2
; ..\EAS\BSW\Dem\Dem.c	   890  );
; ..\EAS\BSW\Dem\Dem.c	   891  #endif
; ..\EAS\BSW\Dem\Dem.c	   892  
; ..\EAS\BSW\Dem\Dem.c	   893  STATIC FUNC(uint8, DEM_CODE) DemInternal_GetEventInternalData
; ..\EAS\BSW\Dem\Dem.c	   894  (
; ..\EAS\BSW\Dem\Dem.c	   895      uint16 EventId,
; ..\EAS\BSW\Dem\Dem.c	   896      Dem_InternalDataElementType DataType
; ..\EAS\BSW\Dem\Dem.c	   897  );
; ..\EAS\BSW\Dem\Dem.c	   898  
; ..\EAS\BSW\Dem\Dem.c	   899  #if(((DEM_MAX_FFSIZE_OF_DTC > 0)&&(DEM_NUM_OF_FFRECCLASS > 0))||((DEM_MAX_EXTSIZE_OF_DTC > 0)&&(DEM_NUM_OF_EXTDATACLASS > 0))\ 
; ..\EAS\BSW\Dem\Dem.c	   900      || (DEM_MAX_J1939FFSIZE_OF_DTC > 0) || (DEM_MAX_J1939EXPFFSIZE_OF_DTC > 0))
; ..\EAS\BSW\Dem\Dem.c	   901  STATIC FUNC(void, DEM_CODE) DemInternal_StorageDataElement
; ..\EAS\BSW\Dem\Dem.c	   902  (
; ..\EAS\BSW\Dem\Dem.c	   903      uint16 EventId,
; ..\EAS\BSW\Dem\Dem.c	   904      uint16 DataIdx,
; ..\EAS\BSW\Dem\Dem.c	   905      P2P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) DataBufferPtr
; ..\EAS\BSW\Dem\Dem.c	   906  );
; ..\EAS\BSW\Dem\Dem.c	   907  #endif
; ..\EAS\BSW\Dem\Dem.c	   908  
; ..\EAS\BSW\Dem\Dem.c	   909  STATIC FUNC(uint8, DEM_CODE) DemInternal_GetDtcInternalData
; ..\EAS\BSW\Dem\Dem.c	   910  (
; ..\EAS\BSW\Dem\Dem.c	   911      uint16 DtcId,
; ..\EAS\BSW\Dem\Dem.c	   912      uint16 DataIdx
; ..\EAS\BSW\Dem\Dem.c	   913  );
; ..\EAS\BSW\Dem\Dem.c	   914  
; ..\EAS\BSW\Dem\Dem.c	   915  STATIC FUNC(void, DEM_CODE) DemInternal_CaptureData
; ..\EAS\BSW\Dem\Dem.c	   916  (
; ..\EAS\BSW\Dem\Dem.c	   917      uint16 EventId
; ..\EAS\BSW\Dem\Dem.c	   918  );
; ..\EAS\BSW\Dem\Dem.c	   919  
; ..\EAS\BSW\Dem\Dem.c	   920  #if((DEM_MAX_FFSIZE_OF_DTC > 0) && (DEM_NUM_OF_FFRECCLASS > 0) \ 
; ..\EAS\BSW\Dem\Dem.c	   921      || ((DEM_MAX_J1939FFSIZE_OF_DTC > 0) || (DEM_MAX_J1939EXPFFSIZE_OF_DTC > 0)))
; ..\EAS\BSW\Dem\Dem.c	   922  STATIC FUNC(boolean, DEM_CODE) DemInternal_UpdateFFData
; ..\EAS\BSW\Dem\Dem.c	   923  (
; ..\EAS\BSW\Dem\Dem.c	   924      uint16 EventId,
; ..\EAS\BSW\Dem\Dem.c	   925      Dem_EventMemoryEntryStorageTriggerType Trigger
; ..\EAS\BSW\Dem\Dem.c	   926  );
; ..\EAS\BSW\Dem\Dem.c	   927  #endif
; ..\EAS\BSW\Dem\Dem.c	   928  
; ..\EAS\BSW\Dem\Dem.c	   929  #if((DEM_MAX_EXTSIZE_OF_DTC > 0) && (DEM_NUM_OF_EXTDATACLASS > 0))
; ..\EAS\BSW\Dem\Dem.c	   930  STATIC FUNC(boolean, DEM_CODE) DemInternal_UpdateExtData
; ..\EAS\BSW\Dem\Dem.c	   931  (
; ..\EAS\BSW\Dem\Dem.c	   932      uint16 EventId,
; ..\EAS\BSW\Dem\Dem.c	   933      Dem_EventMemoryEntryStorageTriggerType Trigger
; ..\EAS\BSW\Dem\Dem.c	   934  );
; ..\EAS\BSW\Dem\Dem.c	   935  #endif
; ..\EAS\BSW\Dem\Dem.c	   936  
; ..\EAS\BSW\Dem\Dem.c	   937  STATIC FUNC(void, DEM_CODE) DemInternal_CycleStartProcess
; ..\EAS\BSW\Dem\Dem.c	   938  (
; ..\EAS\BSW\Dem\Dem.c	   939      uint8 OperationCycleId
; ..\EAS\BSW\Dem\Dem.c	   940  );
; ..\EAS\BSW\Dem\Dem.c	   941  
; ..\EAS\BSW\Dem\Dem.c	   942  STATIC FUNC(void, DEM_CODE) DemInternal_CycleEndProcess
; ..\EAS\BSW\Dem\Dem.c	   943  (
; ..\EAS\BSW\Dem\Dem.c	   944      uint8 OperationCycleId
; ..\EAS\BSW\Dem\Dem.c	   945  );
; ..\EAS\BSW\Dem\Dem.c	   946  
; ..\EAS\BSW\Dem\Dem.c	   947  STATIC FUNC(void, DEM_CODE) DemInternal_MainFnc_OperationCycle
; ..\EAS\BSW\Dem\Dem.c	   948  (
; ..\EAS\BSW\Dem\Dem.c	   949      void
; ..\EAS\BSW\Dem\Dem.c	   950  );
; ..\EAS\BSW\Dem\Dem.c	   951  
; ..\EAS\BSW\Dem\Dem.c	   952  STATIC FUNC(void, DEM_CODE) DemInternal_MainFnc_BswErrorHandle
; ..\EAS\BSW\Dem\Dem.c	   953  (
; ..\EAS\BSW\Dem\Dem.c	   954      void
; ..\EAS\BSW\Dem\Dem.c	   955  );
; ..\EAS\BSW\Dem\Dem.c	   956  
; ..\EAS\BSW\Dem\Dem.c	   957  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	   958  STATIC FUNC(void, DEM_CODE) DemInternal_MainFnc_DebounceTimer
; ..\EAS\BSW\Dem\Dem.c	   959  (
; ..\EAS\BSW\Dem\Dem.c	   960      void
; ..\EAS\BSW\Dem\Dem.c	   961  );
; ..\EAS\BSW\Dem\Dem.c	   962  #endif
; ..\EAS\BSW\Dem\Dem.c	   963  
; ..\EAS\BSW\Dem\Dem.c	   964  STATIC FUNC(void, DEM_CODE) DemInternal_MainFnc_CaptureData
; ..\EAS\BSW\Dem\Dem.c	   965  (
; ..\EAS\BSW\Dem\Dem.c	   966      void
; ..\EAS\BSW\Dem\Dem.c	   967  );
; ..\EAS\BSW\Dem\Dem.c	   968  
; ..\EAS\BSW\Dem\Dem.c	   969  STATIC FUNC(void, DEM_CODE) DemInternal_MainFnc_ClearDTC
; ..\EAS\BSW\Dem\Dem.c	   970  (
; ..\EAS\BSW\Dem\Dem.c	   971      void
; ..\EAS\BSW\Dem\Dem.c	   972  );
; ..\EAS\BSW\Dem\Dem.c	   973  
; ..\EAS\BSW\Dem\Dem.c	   974  STATIC FUNC(void, DEM_CODE) DemInternal_ClearOneDTC
; ..\EAS\BSW\Dem\Dem.c	   975  (
; ..\EAS\BSW\Dem\Dem.c	   976      uint16 DtcId
; ..\EAS\BSW\Dem\Dem.c	   977  );
; ..\EAS\BSW\Dem\Dem.c	   978  
; ..\EAS\BSW\Dem\Dem.c	   979  STATIC FUNC(void, DEM_CODE) DemInternal_ClearOneEvent
; ..\EAS\BSW\Dem\Dem.c	   980  (
; ..\EAS\BSW\Dem\Dem.c	   981      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	   982      boolean Aging
; ..\EAS\BSW\Dem\Dem.c	   983  );
; ..\EAS\BSW\Dem\Dem.c	   984  
; ..\EAS\BSW\Dem\Dem.c	   985  STATIC FUNC(void, DEM_CODE) DemInternal_ClearOneDTCGroup
; ..\EAS\BSW\Dem\Dem.c	   986  (
; ..\EAS\BSW\Dem\Dem.c	   987      void
; ..\EAS\BSW\Dem\Dem.c	   988  );
; ..\EAS\BSW\Dem\Dem.c	   989  
; ..\EAS\BSW\Dem\Dem.c	   990  STATIC FUNC(Std_ReturnType, DEM_CODE) DemInternal_GetEventFreezeFrameDataEx
; ..\EAS\BSW\Dem\Dem.c	   991  (
; ..\EAS\BSW\Dem\Dem.c	   992      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	   993      uint8 RecordNumber,
; ..\EAS\BSW\Dem\Dem.c	   994      uint16 DataId,
; ..\EAS\BSW\Dem\Dem.c	   995      uint8 *DestBuffer,
; ..\EAS\BSW\Dem\Dem.c	   996      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) BufSize
; ..\EAS\BSW\Dem\Dem.c	   997  );
; ..\EAS\BSW\Dem\Dem.c	   998  
; ..\EAS\BSW\Dem\Dem.c	   999  STATIC FUNC(Std_ReturnType, DEM_CODE) DemInternal_GetEventExtendedDataRecordEx
; ..\EAS\BSW\Dem\Dem.c	  1000  (
; ..\EAS\BSW\Dem\Dem.c	  1001      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  1002      uint8 RecordNumber,
; ..\EAS\BSW\Dem\Dem.c	  1003      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) DestBuffer,
; ..\EAS\BSW\Dem\Dem.c	  1004      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) BufSize
; ..\EAS\BSW\Dem\Dem.c	  1005  );
; ..\EAS\BSW\Dem\Dem.c	  1006  
; ..\EAS\BSW\Dem\Dem.c	  1007  #if(DEM_NUM_OF_INDICATOR > 0)
; ..\EAS\BSW\Dem\Dem.c	  1008  STATIC FUNC(void, DEM_CODE) DemInternal_IndicatorOnCriteriaFulfilled
; ..\EAS\BSW\Dem\Dem.c	  1009  (
; ..\EAS\BSW\Dem\Dem.c	  1010      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  1011      Dem_UdsStatusByteType EventOldStatus, 
; ..\EAS\BSW\Dem\Dem.c	  1012      P2VAR(Dem_UdsStatusByteType, AUTOMATIC, DEM_APPL_DATA) EventNewStatus
; ..\EAS\BSW\Dem\Dem.c	  1013  );
; ..\EAS\BSW\Dem\Dem.c	  1014  
; ..\EAS\BSW\Dem\Dem.c	  1015  STATIC FUNC(void, DEM_CODE) DemInternal_IndicatorOffCriteriaFulfilled
; ..\EAS\BSW\Dem\Dem.c	  1016  (
; ..\EAS\BSW\Dem\Dem.c	  1017      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  1018      Dem_IndicatorOffType OffReason,
; ..\EAS\BSW\Dem\Dem.c	  1019      Dem_UdsStatusByteType EventOldStatus, 
; ..\EAS\BSW\Dem\Dem.c	  1020      P2VAR(Dem_UdsStatusByteType, AUTOMATIC, DEM_APPL_DATA) EventNewStatus
; ..\EAS\BSW\Dem\Dem.c	  1021  );
; ..\EAS\BSW\Dem\Dem.c	  1022  
; ..\EAS\BSW\Dem\Dem.c	  1023  STATIC FUNC(void, DEM_CODE) DemInternal_GetIndicatorStatus
; ..\EAS\BSW\Dem\Dem.c	  1024  (
; ..\EAS\BSW\Dem\Dem.c	  1025      uint8 IndicatorId,
; ..\EAS\BSW\Dem\Dem.c	  1026      P2VAR(Dem_IndicatorStatusType, AUTOMATIC, DEM_APPL_DATA) IndicatorStatus
; ..\EAS\BSW\Dem\Dem.c	  1027  );
; ..\EAS\BSW\Dem\Dem.c	  1028  #endif/*#if(DEM_NUM_OF_INDICATOR > 0)*/
; ..\EAS\BSW\Dem\Dem.c	  1029  
; ..\EAS\BSW\Dem\Dem.c	  1030  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  1031  STATIC FUNC(void, DEM_CODE) DemInternal_InitOBDData
; ..\EAS\BSW\Dem\Dem.c	  1032  (
; ..\EAS\BSW\Dem\Dem.c	  1033      void
; ..\EAS\BSW\Dem\Dem.c	  1034  );
; ..\EAS\BSW\Dem\Dem.c	  1035  
; ..\EAS\BSW\Dem\Dem.c	  1036  STATIC FUNC(void, DEM_CODE) DemInternal_StoreOBDFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	  1037  (
; ..\EAS\BSW\Dem\Dem.c	  1038      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  1039      Dem_UdsStatusByteType EventOldStatus,
; ..\EAS\BSW\Dem\Dem.c	  1040      Dem_UdsStatusByteType EventNewStatus
; ..\EAS\BSW\Dem\Dem.c	  1041  );
; ..\EAS\BSW\Dem\Dem.c	  1042  
; ..\EAS\BSW\Dem\Dem.c	  1043  STATIC FUNC(void, DEM_CODE) DemInternal_ClearOBDFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	  1044  (
; ..\EAS\BSW\Dem\Dem.c	  1045      Dem_EventIdType EventId
; ..\EAS\BSW\Dem\Dem.c	  1046  );
; ..\EAS\BSW\Dem\Dem.c	  1047  
; ..\EAS\BSW\Dem\Dem.c	  1048  STATIC FUNC(void, DEM_CODE) DemInternal_MainFnc_OBD
; ..\EAS\BSW\Dem\Dem.c	  1049  (
; ..\EAS\BSW\Dem\Dem.c	  1050      void
; ..\EAS\BSW\Dem\Dem.c	  1051  );
; ..\EAS\BSW\Dem\Dem.c	  1052  
; ..\EAS\BSW\Dem\Dem.c	  1053  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU) && (DEM_CFG_OBD_CENTRALIZED_PID31_HANDLING == STD_ON))
; ..\EAS\BSW\Dem\Dem.c	  1054  STATIC FUNC(void, DEM_CODE) DemInternal_CalPID31Data
; ..\EAS\BSW\Dem\Dem.c	  1055  (
; ..\EAS\BSW\Dem\Dem.c	  1056      void
; ..\EAS\BSW\Dem\Dem.c	  1057  );
; ..\EAS\BSW\Dem\Dem.c	  1058  #endif/*#if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU) && (DEM_CFG_OBD_CENTRALIZED_PID31_HANDLING == STD_ON))*/
; ..\EAS\BSW\Dem\Dem.c	  1059  
; ..\EAS\BSW\Dem\Dem.c	  1060  #if(DEM_NUM_OF_RATIO > 0)
; ..\EAS\BSW\Dem\Dem.c	  1061  STATIC FUNC(void, DEM_CODE) DemInternal_UpdateRatioNumerator
; ..\EAS\BSW\Dem\Dem.c	  1062  (
; ..\EAS\BSW\Dem\Dem.c	  1063      Dem_EventIdType EventId
; ..\EAS\BSW\Dem\Dem.c	  1064  );
; ..\EAS\BSW\Dem\Dem.c	  1065  
; ..\EAS\BSW\Dem\Dem.c	  1066  STATIC FUNC(void, DEM_CODE) DemInternal_UpdateRatioDenominator
; ..\EAS\BSW\Dem\Dem.c	  1067  (
; ..\EAS\BSW\Dem\Dem.c	  1068      void
; ..\EAS\BSW\Dem\Dem.c	  1069  );
; ..\EAS\BSW\Dem\Dem.c	  1070  #endif/*#if(DEM_NUM_OF_RATIO > 0)*/
; ..\EAS\BSW\Dem\Dem.c	  1071  #endif/*#if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))*/
; ..\EAS\BSW\Dem\Dem.c	  1072  
; ..\EAS\BSW\Dem\Dem.c	  1073  #if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)
; ..\EAS\BSW\Dem\Dem.c	  1074  STATIC FUNC(void, DEM_CODE) DemInternal_AddEventPermanentEntry
; ..\EAS\BSW\Dem\Dem.c	  1075  (
; ..\EAS\BSW\Dem\Dem.c	  1076      Dem_EventIdType EventId
; ..\EAS\BSW\Dem\Dem.c	  1077  );
; ..\EAS\BSW\Dem\Dem.c	  1078  
; ..\EAS\BSW\Dem\Dem.c	  1079  STATIC FUNC(void, DEM_CODE) DemInternal_RemoveEventPermanentEntry
; ..\EAS\BSW\Dem\Dem.c	  1080  (
; ..\EAS\BSW\Dem\Dem.c	  1081      Dem_EventIdType EventId
; ..\EAS\BSW\Dem\Dem.c	  1082  );
; ..\EAS\BSW\Dem\Dem.c	  1083  #endif/*#if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)*/
; ..\EAS\BSW\Dem\Dem.c	  1084  
; ..\EAS\BSW\Dem\Dem.c	  1085  STATIC FUNC(Std_ReturnType, DEM_CODE) DemInternal_J1939GetSizeOfFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	  1086  (
; ..\EAS\BSW\Dem\Dem.c	  1087      uint16 DtcId,
; ..\EAS\BSW\Dem\Dem.c	  1088      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) SizeOfFreezeFrame,
; ..\EAS\BSW\Dem\Dem.c	  1089      Dem_J1939DcmSetFreezeFrameFilterType FreezeFrameKind
; ..\EAS\BSW\Dem\Dem.c	  1090  );
; ..\EAS\BSW\Dem\Dem.c	  1091  
; ..\EAS\BSW\Dem\Dem.c	  1092  STATIC FUNC(void, DEM_CODE) DemInternal_J1939GetOccurrenceCounter
; ..\EAS\BSW\Dem\Dem.c	  1093  (
; ..\EAS\BSW\Dem\Dem.c	  1094      uint16 DtcId,
; ..\EAS\BSW\Dem\Dem.c	  1095      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) OccurenceCounter
; ..\EAS\BSW\Dem\Dem.c	  1096  );
; ..\EAS\BSW\Dem\Dem.c	  1097  STATIC FUNC(void, DEM_CODE) DemInternal_J1939GetDataOfFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	  1098  (
; ..\EAS\BSW\Dem\Dem.c	  1099      uint16 DtcId,
; ..\EAS\BSW\Dem\Dem.c	  1100      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) DestBuffer,
; ..\EAS\BSW\Dem\Dem.c	  1101      Dem_J1939DcmSetFreezeFrameFilterType FreezeFrameKind
; ..\EAS\BSW\Dem\Dem.c	  1102  );
; ..\EAS\BSW\Dem\Dem.c	  1103  /*******************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1104  *   Dem static Api definition
; ..\EAS\BSW\Dem\Dem.c	  1105  *******************************************************************************/
; ..\EAS\BSW\Dem\Dem.c	  1106  
; ..\EAS\BSW\Dem\Dem.c	  1107  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  1108  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1109  * Function Name: DemInternal_CheckStorageMem
; ..\EAS\BSW\Dem\Dem.c	  1110  *
; ..\EAS\BSW\Dem\Dem.c	  1111  * Description:
; ..\EAS\BSW\Dem\Dem.c	  1112  *
; ..\EAS\BSW\Dem\Dem.c	  1113  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  1114  *
; ..\EAS\BSW\Dem\Dem.c	  1115  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  1116  *
; ..\EAS\BSW\Dem\Dem.c	  1117  * Return:
; ..\EAS\BSW\Dem\Dem.c	  1118  *
; ..\EAS\BSW\Dem\Dem.c	  1119  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  1120  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1121  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  1122  FUNC(void, DEM_CODE) DemInternal_CheckStorageMem
; Function DemInternal_CheckStorageMem
.L899:
DemInternal_CheckStorageMem:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  1123  (
; ..\EAS\BSW\Dem\Dem.c	  1124      void
; ..\EAS\BSW\Dem\Dem.c	  1125  )
; ..\EAS\BSW\Dem\Dem.c	  1126  {
; ..\EAS\BSW\Dem\Dem.c	  1127      uint16 i;
; ..\EAS\BSW\Dem\Dem.c	  1128  #if((DEM_MAX_FFSIZE_OF_DTC > 0)||(DEM_MAX_EXTSIZE_OF_DTC > 0))
; ..\EAS\BSW\Dem\Dem.c	  1129      uint16 j;
; ..\EAS\BSW\Dem\Dem.c	  1130  #endif
; ..\EAS\BSW\Dem\Dem.c	  1131      Std_ReturnType ret = E_OK;
	mov	d1,#0
.L2140:

; ..\EAS\BSW\Dem\Dem.c	  1132  
; ..\EAS\BSW\Dem\Dem.c	  1133      if(((DEM_EVENT_FIRST_FAILED != DEM_DATA_INVALID_U16) && (DEM_EVENT_FIRST_FAILED >= DEM_NUM_OF_EVENT)) \ 
	movh.a	a15,#@his(Dem_StorageMem)
	ld.hu	d0,[a15]@los(Dem_StorageMem)
.L4017:
	mov.u	d15,#65535
.L4018:
	jeq	d15,d0,.L2
.L4019:
	mov	d15,#116
.L4020:
	jge.u	d0,d15,.L3
.L2:

; ..\EAS\BSW\Dem\Dem.c	  1134          || ((DEM_EVENT_RECENT_FAILED != DEM_DATA_INVALID_U16) && (DEM_EVENT_RECENT_FAILED >= DEM_NUM_OF_EVENT)) \ 
	movh.a	a15,#@his(Dem_StorageMem+4)
	ld.hu	d0,[a15]@los(Dem_StorageMem+4)
.L4021:
	mov.u	d15,#65535
.L4022:
	jeq	d15,d0,.L4
.L4023:
	mov	d15,#116
.L4024:
	jge.u	d0,d15,.L5
.L4:

; ..\EAS\BSW\Dem\Dem.c	  1135          || ((DEM_EVENT_FIRST_CONFIRMED != DEM_DATA_INVALID_U16) && (DEM_EVENT_FIRST_CONFIRMED >= DEM_NUM_OF_EVENT)) \ 
	movh.a	a15,#@his(Dem_StorageMem+2)
	ld.hu	d0,[a15]@los(Dem_StorageMem+2)
.L4025:
	mov.u	d15,#65535
.L4026:
	jeq	d15,d0,.L6
.L4027:
	mov	d15,#116
.L4028:
	jge.u	d0,d15,.L7
.L6:

; ..\EAS\BSW\Dem\Dem.c	  1136          || ((DEM_EVENT_RECENT_CONFIRMED != DEM_DATA_INVALID_U16) && (DEM_EVENT_RECENT_CONFIRMED >= DEM_NUM_OF_EVENT)))
	movh.a	a15,#@his(Dem_StorageMem+6)
	ld.hu	d0,[a15]@los(Dem_StorageMem+6)
.L4029:
	mov.u	d15,#65535
.L4030:
	jeq	d15,d0,.L8
.L4031:
	mov	d15,#116
.L4032:
	jlt.u	d0,d15,.L9
.L7:
.L5:
.L3:

; ..\EAS\BSW\Dem\Dem.c	  1137      {
; ..\EAS\BSW\Dem\Dem.c	  1138          ret = E_NOT_OK;
	mov	d1,#1
.L9:
.L8:

; ..\EAS\BSW\Dem\Dem.c	  1139      }
; ..\EAS\BSW\Dem\Dem.c	  1140  
; ..\EAS\BSW\Dem\Dem.c	  1141      if((ret == E_OK) && (DEM_PRIMARY_DATAENTRY_USEDNUM > DEM_CFG_MAXNUMBEREVENTENTRY_PRIMARY))
	jne	d1,#0,.L10
.L4033:
	movh.a	a15,#@his(Dem_StorageMem+2560)
	ld.hu	d0,[a15]@los(Dem_StorageMem+2560)
.L4034:
	mov	d15,#121
.L4035:
	jge.u	d15,d0,.L11
.L4036:

; ..\EAS\BSW\Dem\Dem.c	  1142      {
; ..\EAS\BSW\Dem\Dem.c	  1143          ret = E_NOT_OK;
	mov	d1,#1
.L11:
.L10:

; ..\EAS\BSW\Dem\Dem.c	  1144      }
; ..\EAS\BSW\Dem\Dem.c	  1145  
; ..\EAS\BSW\Dem\Dem.c	  1146      if((ret == E_OK) && (DEM_PRIMARY_DATAENTRY_USEDNUM == DEM_DATA_CLEAR))
	jne	d1,#0,.L12
.L4037:
	movh.a	a15,#@his(Dem_StorageMem+2560)
	ld.hu	d15,[a15]@los(Dem_StorageMem+2560)
.L4038:
	jne	d15,#0,.L13
.L4039:

; ..\EAS\BSW\Dem\Dem.c	  1147      {
; ..\EAS\BSW\Dem\Dem.c	  1148          for(i = 0; i < DEM_CFG_MAXNUMBEREVENTENTRY_PRIMARY; i++)
	mov	d0,#0
.L2141:

; ..\EAS\BSW\Dem\Dem.c	  1149          {
; ..\EAS\BSW\Dem\Dem.c	  1150  #if(DEM_MAX_FFSIZE_OF_DTC > 0)
; ..\EAS\BSW\Dem\Dem.c	  1151              for(j = 0; j < DEM_MAX_FFSIZE_OF_DTC; j++)
; ..\EAS\BSW\Dem\Dem.c	  1152              {
; ..\EAS\BSW\Dem\Dem.c	  1153                  if((DEM_PRIMARY_FFDATA_PTR(i))[j] != DEM_DATA_INVALID_U8)
	mov	d2,#255
.L4040:
	mov	d3,#46
.L4041:

; ..\EAS\BSW\Dem\Dem.c	  1154                  {
; ..\EAS\BSW\Dem\Dem.c	  1155                      ret = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  1156                      break;
; ..\EAS\BSW\Dem\Dem.c	  1157                  }
; ..\EAS\BSW\Dem\Dem.c	  1158              }
; ..\EAS\BSW\Dem\Dem.c	  1159  #endif/*#if(DEM_MAX_FFSIZE_OF_DTC > 0)*/
; ..\EAS\BSW\Dem\Dem.c	  1160  
; ..\EAS\BSW\Dem\Dem.c	  1161  #if(DEM_MAX_EXTSIZE_OF_DTC > 0)
; ..\EAS\BSW\Dem\Dem.c	  1162              if(ret == E_OK)
; ..\EAS\BSW\Dem\Dem.c	  1163              {
; ..\EAS\BSW\Dem\Dem.c	  1164                  for(j = 0; j < DEM_MAX_EXTSIZE_OF_DTC; j++)
; ..\EAS\BSW\Dem\Dem.c	  1165                  {
; ..\EAS\BSW\Dem\Dem.c	  1166                      if((DEM_PRIMARY_EXTDATA_PTR(i))[j] != DEM_DATA_INVALID_U8)
	mov	d4,d2
.L4042:
	mov	d5,#121
.L4043:
	j	.L14
.L15:
	mov	d6,#0
.L2142:
	mul	d7,d0,#56
.L4044:
	j	.L16
.L17:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d7,#0
.L4045:
	addsc.a	a15,a15,d6,#0
	ld.bu	d15,[a15]2565
.L4046:
	jeq	d15,d2,.L18
.L4047:
	mov	d1,#1
.L4048:
	j	.L19
.L18:
	add	d6,#1
.L16:
	jlt.u	d6,d3,.L17
.L19:
	jne	d1,#0,.L20
.L4049:
	mov	d6,#0
.L4050:
	mul	d7,d0,#56
.L4051:
	j	.L21
.L22:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d7,#0
.L4052:
	addsc.a	a15,a15,d6,#0
	ld.bu	d15,[a15]2611
.L4053:
	jeq	d15,d4,.L23
.L4054:

; ..\EAS\BSW\Dem\Dem.c	  1167                      {
; ..\EAS\BSW\Dem\Dem.c	  1168                          ret = E_NOT_OK;
	mov	d1,#1
.L4055:

; ..\EAS\BSW\Dem\Dem.c	  1169                          break;
	j	.L24
.L23:
	add	d6,#1
.L21:
	jlt.u	d6,#8,.L22

; ..\EAS\BSW\Dem\Dem.c	  1170                      }
; ..\EAS\BSW\Dem\Dem.c	  1171                  }
; ..\EAS\BSW\Dem\Dem.c	  1172              }
.L24:
.L20:

; ..\EAS\BSW\Dem\Dem.c	  1173  #endif/*#if(DEM_MAX_EXTSIZE_OF_DTC > 0)*/
; ..\EAS\BSW\Dem\Dem.c	  1174              if(ret == E_NOT_OK)
	jne	d1,#0,.L25
.L4056:
	add	d0,#1
.L14:
	jlt.u	d0,d5,.L15

; ..\EAS\BSW\Dem\Dem.c	  1175              {
; ..\EAS\BSW\Dem\Dem.c	  1176                  break;
; ..\EAS\BSW\Dem\Dem.c	  1177              }
; ..\EAS\BSW\Dem\Dem.c	  1178          }
; ..\EAS\BSW\Dem\Dem.c	  1179      }
.L25:
.L13:
.L12:

; ..\EAS\BSW\Dem\Dem.c	  1180  
; ..\EAS\BSW\Dem\Dem.c	  1181  #if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)
; ..\EAS\BSW\Dem\Dem.c	  1182      if((ret == E_OK) && (DEM_PERMANENT_DATAENTRY_USEDNUM > DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT))
; ..\EAS\BSW\Dem\Dem.c	  1183      {
; ..\EAS\BSW\Dem\Dem.c	  1184          ret = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  1185      }
; ..\EAS\BSW\Dem\Dem.c	  1186  
; ..\EAS\BSW\Dem\Dem.c	  1187      if((ret == E_OK) && (DEM_PERMANENT_DATAENTRY_USEDNUM == DEM_DATA_CLEAR))
; ..\EAS\BSW\Dem\Dem.c	  1188      {
; ..\EAS\BSW\Dem\Dem.c	  1189          for(i = 0; i < DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT; i++)
; ..\EAS\BSW\Dem\Dem.c	  1190          {
; ..\EAS\BSW\Dem\Dem.c	  1191              if(DEM_PERMANENT_DATAENTRY_EVENTID(i) != DEM_EVENT_ID_INVALID)
; ..\EAS\BSW\Dem\Dem.c	  1192              {
; ..\EAS\BSW\Dem\Dem.c	  1193                  ret = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  1194                  break;
; ..\EAS\BSW\Dem\Dem.c	  1195              }
; ..\EAS\BSW\Dem\Dem.c	  1196          }
; ..\EAS\BSW\Dem\Dem.c	  1197      }
; ..\EAS\BSW\Dem\Dem.c	  1198  #endif/*#if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)*/
; ..\EAS\BSW\Dem\Dem.c	  1199  
; ..\EAS\BSW\Dem\Dem.c	  1200      if(ret == E_OK)
	jne	d1,#0,.L26
.L4057:

; ..\EAS\BSW\Dem\Dem.c	  1201      {
; ..\EAS\BSW\Dem\Dem.c	  1202          for(i = (uint16)0; i < DEM_NUM_OF_EVENT; i++)
	mov	d3,#0
.L2143:

; ..\EAS\BSW\Dem\Dem.c	  1203          {
; ..\EAS\BSW\Dem\Dem.c	  1204              if((DEM_EVENT_MAXFDCDCC(i) > DEM_EVENT_MAXFDCSLC(i)) \ 
; ..\EAS\BSW\Dem\Dem.c	  1205                  || (DEM_EVENT_CSLF(i) > DEM_EVENT_CSFF(i)))
; ..\EAS\BSW\Dem\Dem.c	  1206              {
; ..\EAS\BSW\Dem\Dem.c	  1207                  ret = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  1208                  break;
; ..\EAS\BSW\Dem\Dem.c	  1209              }
; ..\EAS\BSW\Dem\Dem.c	  1210              else if((DEM_DTC_DATAENTRYREF(DEM_CFG_EVENT_DTCREF(i)) != DEM_DATA_INVALID_U16) \ 
	mov.u	d4,#65535
.L4058:

; ..\EAS\BSW\Dem\Dem.c	  1211                  && (DEM_DTC_DATAENTRYREF(DEM_CFG_EVENT_DTCREF(i)) >= DEM_CFG_MAXNUMBEREVENTENTRY_PRIMARY))
	mov	d5,#121
.L4059:
	mov	d6,#116
.L4060:
	j	.L27
.L28:
	sha	d15,d3,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.b	d0,[a15]17
.L4061:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.b	d2,[a15]18
.L4062:
	jlt	d2,d0,.L29
.L4063:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]19
.L4064:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d2,[a15]20
.L4065:
	jlt.u	d2,d0,.L30
.L4066:
	mul	d15,d3,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]4
	mul	d0,d0,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
	ld.hu	d0,[a15]1868
.L4067:
	jeq	d0,d4,.L31
.L4068:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]4
	mul	d15,d0,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]1868
.L4069:
	jlt.u	d15,d5,.L32

; ..\EAS\BSW\Dem\Dem.c	  1212              {
; ..\EAS\BSW\Dem\Dem.c	  1213                  ret = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  1214                  break;
; ..\EAS\BSW\Dem\Dem.c	  1215              }
; ..\EAS\BSW\Dem\Dem.c	  1216              else
; ..\EAS\BSW\Dem\Dem.c	  1217              {
; ..\EAS\BSW\Dem\Dem.c	  1218                  /*Continue check*/
; ..\EAS\BSW\Dem\Dem.c	  1219              }
; ..\EAS\BSW\Dem\Dem.c	  1220          }
; ..\EAS\BSW\Dem\Dem.c	  1221      }
.L30:
.L29:
	mov	d1,#1
.L4070:
	j	.L33
.L32:
.L31:
	add	d3,#1
.L27:
	jlt.u	d3,d6,.L28
.L33:
.L26:

; ..\EAS\BSW\Dem\Dem.c	  1222  
; ..\EAS\BSW\Dem\Dem.c	  1223      if(ret == E_NOT_OK)
	jeq	d1,#0,.L34
.L4071:

; ..\EAS\BSW\Dem\Dem.c	  1224      {
; ..\EAS\BSW\Dem\Dem.c	  1225          DEM_DET_REPORT_ERROR(DEM_INIT_APIID, DEM_E_INIT_FAILED);
; ..\EAS\BSW\Dem\Dem.c	  1226          (void)Dem_NvM_InitStorageMem();
	j	Dem_NvM_InitStorageMem
.L34:

; ..\EAS\BSW\Dem\Dem.c	  1227      }
; ..\EAS\BSW\Dem\Dem.c	  1228  }
	ret
.L1892:
	
__DemInternal_CheckStorageMem_function_end:
	.size	DemInternal_CheckStorageMem,__DemInternal_CheckStorageMem_function_end-DemInternal_CheckStorageMem
.L1372:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_SetCaptureQueue',code,cluster('DemInternal_SetCaptureQueue')
	.sect	'.text.Dem.DemInternal_SetCaptureQueue'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  1229  
; ..\EAS\BSW\Dem\Dem.c	  1230  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  1231  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1232  * Function Name: DemInternal_SetCaptureQueue
; ..\EAS\BSW\Dem\Dem.c	  1233  *
; ..\EAS\BSW\Dem\Dem.c	  1234  * Description:
; ..\EAS\BSW\Dem\Dem.c	  1235  *
; ..\EAS\BSW\Dem\Dem.c	  1236  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  1237  *
; ..\EAS\BSW\Dem\Dem.c	  1238  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  1239  *
; ..\EAS\BSW\Dem\Dem.c	  1240  * Return:
; ..\EAS\BSW\Dem\Dem.c	  1241  *
; ..\EAS\BSW\Dem\Dem.c	  1242  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  1243  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1244  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  1245  STATIC FUNC(void, DEM_CODE) DemInternal_SetCaptureQueue
; Function DemInternal_SetCaptureQueue
.L901:
DemInternal_SetCaptureQueue:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  1246  (
; ..\EAS\BSW\Dem\Dem.c	  1247      uint16 EventId,
; ..\EAS\BSW\Dem\Dem.c	  1248      Dem_EventMemoryEntryStorageTriggerType Trigger
; ..\EAS\BSW\Dem\Dem.c	  1249  )
; ..\EAS\BSW\Dem\Dem.c	  1250  {
; ..\EAS\BSW\Dem\Dem.c	  1251      Dem_DataCaptureFlag[EventId] = TRUE;
	movh.a	a15,#@his(Dem_DataCaptureFlag)
	lea	a15,[a15]@los(Dem_DataCaptureFlag)
.L4076:
	addsc.a	a15,a15,d4,#0
.L4077:
	mov	d15,#1
.L4078:
	st.b	[a15],d15
.L4079:

; ..\EAS\BSW\Dem\Dem.c	  1252      Dem_DataCaptureTrigger[EventId] |= Trigger;
	movh.a	a15,#@his(Dem_DataCaptureTrigger)
	lea	a15,[a15]@los(Dem_DataCaptureTrigger)
.L4080:
	addsc.a	a15,a15,d4,#0
.L4081:
	movh.a	a2,#@his(Dem_DataCaptureTrigger)
	lea	a2,[a2]@los(Dem_DataCaptureTrigger)
.L4082:
	addsc.a	a2,a2,d4,#0
	ld.bu	d15,[a2]
.L4083:
	or	d15,d5
	st.b	[a15],d15
.L4084:

; ..\EAS\BSW\Dem\Dem.c	  1253  }
	ret
.L1896:
	
__DemInternal_SetCaptureQueue_function_end:
	.size	DemInternal_SetCaptureQueue,__DemInternal_SetCaptureQueue_function_end-DemInternal_SetCaptureQueue
.L1377:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_ClrCaptureQueue',code,cluster('DemInternal_ClrCaptureQueue')
	.sect	'.text.Dem.DemInternal_ClrCaptureQueue'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  1254  
; ..\EAS\BSW\Dem\Dem.c	  1255  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  1256  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1257  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	  1258  *
; ..\EAS\BSW\Dem\Dem.c	  1259  * Description:
; ..\EAS\BSW\Dem\Dem.c	  1260  *
; ..\EAS\BSW\Dem\Dem.c	  1261  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  1262  *
; ..\EAS\BSW\Dem\Dem.c	  1263  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  1264  *
; ..\EAS\BSW\Dem\Dem.c	  1265  * Return:
; ..\EAS\BSW\Dem\Dem.c	  1266  *
; ..\EAS\BSW\Dem\Dem.c	  1267  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  1268  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1269  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  1270  STATIC FUNC(void, DEM_CODE) DemInternal_ClrCaptureQueue
; Function DemInternal_ClrCaptureQueue
.L903:
DemInternal_ClrCaptureQueue:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  1271  (
; ..\EAS\BSW\Dem\Dem.c	  1272      uint16 EventId
; ..\EAS\BSW\Dem\Dem.c	  1273  )
; ..\EAS\BSW\Dem\Dem.c	  1274  {
; ..\EAS\BSW\Dem\Dem.c	  1275      Dem_DataCaptureFlag[EventId] = FALSE;
	movh.a	a15,#@his(Dem_DataCaptureFlag)
	lea	a15,[a15]@los(Dem_DataCaptureFlag)
.L4089:
	addsc.a	a15,a15,d4,#0
.L4090:
	mov	d15,#0
.L4091:
	st.b	[a15],d15
.L4092:

; ..\EAS\BSW\Dem\Dem.c	  1276      Dem_DataCaptureTrigger[EventId] = DEM_DATA_CLEAR;
	movh.a	a15,#@his(Dem_DataCaptureTrigger)
	lea	a15,[a15]@los(Dem_DataCaptureTrigger)
.L4093:
	addsc.a	a15,a15,d4,#0
.L4094:
	st.b	[a15],d15
.L4095:

; ..\EAS\BSW\Dem\Dem.c	  1277  }
	ret
.L1899:
	
__DemInternal_ClrCaptureQueue_function_end:
	.size	DemInternal_ClrCaptureQueue,__DemInternal_ClrCaptureQueue_function_end-DemInternal_ClrCaptureQueue
.L1382:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_GetCaptureQueue',code,cluster('DemInternal_GetCaptureQueue')
	.sect	'.text.Dem.DemInternal_GetCaptureQueue'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  1278  
; ..\EAS\BSW\Dem\Dem.c	  1279  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  1280  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1281  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	  1282  *
; ..\EAS\BSW\Dem\Dem.c	  1283  * Description:
; ..\EAS\BSW\Dem\Dem.c	  1284  *
; ..\EAS\BSW\Dem\Dem.c	  1285  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  1286  *
; ..\EAS\BSW\Dem\Dem.c	  1287  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  1288  *
; ..\EAS\BSW\Dem\Dem.c	  1289  * Return:
; ..\EAS\BSW\Dem\Dem.c	  1290  *
; ..\EAS\BSW\Dem\Dem.c	  1291  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  1292  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1293  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  1294  STATIC FUNC(boolean, DEM_CODE) DemInternal_GetCaptureQueue
; Function DemInternal_GetCaptureQueue
.L905:
DemInternal_GetCaptureQueue:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  1295  (
; ..\EAS\BSW\Dem\Dem.c	  1296      uint16 EventId,
; ..\EAS\BSW\Dem\Dem.c	  1297      Dem_EventMemoryEntryStorageTriggerType *Trigger
; ..\EAS\BSW\Dem\Dem.c	  1298  )
; ..\EAS\BSW\Dem\Dem.c	  1299  {
; ..\EAS\BSW\Dem\Dem.c	  1300      boolean ret = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  1301  
; ..\EAS\BSW\Dem\Dem.c	  1302      if(Dem_DataCaptureFlag[EventId] == TRUE)
	movh.a	a15,#@his(Dem_DataCaptureFlag)
	lea	a15,[a15]@los(Dem_DataCaptureFlag)
.L4100:
	addsc.a	a15,a15,d4,#0
	ld.bu	d15,[a15]
.L4101:
	eq	d2,d15,#1
.L2144:

; ..\EAS\BSW\Dem\Dem.c	  1303      {
; ..\EAS\BSW\Dem\Dem.c	  1304          ret = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  1305      }
; ..\EAS\BSW\Dem\Dem.c	  1306  
; ..\EAS\BSW\Dem\Dem.c	  1307      if(Trigger != NULL_PTR)
	jz.a	a4,.L35
.L4102:

; ..\EAS\BSW\Dem\Dem.c	  1308      {
; ..\EAS\BSW\Dem\Dem.c	  1309          *Trigger = Dem_DataCaptureTrigger[EventId];
	movh.a	a15,#@his(Dem_DataCaptureTrigger)
	lea	a15,[a15]@los(Dem_DataCaptureTrigger)
.L4103:
	addsc.a	a15,a15,d4,#0
	ld.bu	d15,[a15]
.L4104:
	st.b	[a4],d15
.L35:

; ..\EAS\BSW\Dem\Dem.c	  1310      }
; ..\EAS\BSW\Dem\Dem.c	  1311  
; ..\EAS\BSW\Dem\Dem.c	  1312      return ret;
; ..\EAS\BSW\Dem\Dem.c	  1313  }
	ret
.L1901:
	
__DemInternal_GetCaptureQueue_function_end:
	.size	DemInternal_GetCaptureQueue,__DemInternal_GetCaptureQueue_function_end-DemInternal_GetCaptureQueue
.L1387:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_SetEventPass',code,cluster('DemInternal_SetEventPass')
	.sect	'.text.Dem.DemInternal_SetEventPass'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  1314  
; ..\EAS\BSW\Dem\Dem.c	  1315  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  1316  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1317  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	  1318  *
; ..\EAS\BSW\Dem\Dem.c	  1319  * Description:
; ..\EAS\BSW\Dem\Dem.c	  1320  *
; ..\EAS\BSW\Dem\Dem.c	  1321  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  1322  *
; ..\EAS\BSW\Dem\Dem.c	  1323  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  1324  *
; ..\EAS\BSW\Dem\Dem.c	  1325  * Return:
; ..\EAS\BSW\Dem\Dem.c	  1326  *
; ..\EAS\BSW\Dem\Dem.c	  1327  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  1328  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1329  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  1330  STATIC FUNC(Dem_UdsStatusByteType, DEM_CODE) DemInternal_SetEventPass
; Function DemInternal_SetEventPass
.L907:
DemInternal_SetEventPass:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  1331  (
; ..\EAS\BSW\Dem\Dem.c	  1332      Dem_EventIdType EventId
; ..\EAS\BSW\Dem\Dem.c	  1333  )
; ..\EAS\BSW\Dem\Dem.c	  1334  {
; ..\EAS\BSW\Dem\Dem.c	  1335      Dem_UdsStatusByteType EventNewStatus;
; ..\EAS\BSW\Dem\Dem.c	  1336      Dem_UdsStatusByteType EventOldStatus;
; ..\EAS\BSW\Dem\Dem.c	  1337  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  1338      uint8 EventCmaStatus;
; ..\EAS\BSW\Dem\Dem.c	  1339  #endif
; ..\EAS\BSW\Dem\Dem.c	  1340  
; ..\EAS\BSW\Dem\Dem.c	  1341      EventNewStatus = DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId));
	mul	d0,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.hu	d15,[a15]4
	mul	d15,d15,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]1864
.L2145:

; ..\EAS\BSW\Dem\Dem.c	  1342      EventOldStatus = DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId));
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.hu	d1,[a15]4
	mul	d1,d1,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d1,#0
	ld.bu	d1,[a15]1864
.L2147:

; ..\EAS\BSW\Dem\Dem.c	  1343  
; ..\EAS\BSW\Dem\Dem.c	  1344      /*SWS_Dem_00036*//*SWS_Dem_00386*/
; ..\EAS\BSW\Dem\Dem.c	  1345      EventNewStatus = DEM_CLEAR_UDS_STATUS_TF(EventNewStatus);
	and	d8,d15,#174
.L2146:

; ..\EAS\BSW\Dem\Dem.c	  1346      /*SWS_Dem_00392*/
; ..\EAS\BSW\Dem\Dem.c	  1347      EventNewStatus = DEM_CLEAR_UDS_STATUS_TNCSLC(EventNewStatus);
; ..\EAS\BSW\Dem\Dem.c	  1348      /*SWS_Dem_00394*/
; ..\EAS\BSW\Dem\Dem.c	  1349      EventNewStatus = DEM_CLEAR_UDS_STATUS_TNCTOC(EventNewStatus);
; ..\EAS\BSW\Dem\Dem.c	  1350  
; ..\EAS\BSW\Dem\Dem.c	  1351  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  1352      EventCmaStatus = DEM_EVENT_CMA_STATUS(EventId);
; ..\EAS\BSW\Dem\Dem.c	  1353      EventCmaStatus = DEM_CLEAR_CMA_STATUS_UDTC(EventCmaStatus);
; ..\EAS\BSW\Dem\Dem.c	  1354      DEM_EVENT_CMA_STATUS(EventId) = EventCmaStatus;
; ..\EAS\BSW\Dem\Dem.c	  1355  
; ..\EAS\BSW\Dem\Dem.c	  1356      if((DEM_TEST_UDS_STATUS_TFSLC(EventNewStatus)) \ 
; ..\EAS\BSW\Dem\Dem.c	  1357          && (!DEM_TEST_UDS_STATUS_TFTOC(EventNewStatus)) \ 
; ..\EAS\BSW\Dem\Dem.c	  1358  		&& (DEM_TEST_UDS_STATUS_TNCTOC(EventOldStatus)) \ 
; ..\EAS\BSW\Dem\Dem.c	  1359          && (DEM_EVENT_CMA_PCSLF(EventId) < DEM_DATA_U8_FF))
; ..\EAS\BSW\Dem\Dem.c	  1360      {
; ..\EAS\BSW\Dem\Dem.c	  1361          DEM_EVENT_CMA_PCSLF(EventId)++;
; ..\EAS\BSW\Dem\Dem.c	  1362      }
; ..\EAS\BSW\Dem\Dem.c	  1363  #endif
; ..\EAS\BSW\Dem\Dem.c	  1364  
; ..\EAS\BSW\Dem\Dem.c	  1365      /*SWS_Dem_00421*/
; ..\EAS\BSW\Dem\Dem.c	  1366  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  1367      if(DEM_CFG_EVENT_DBC(EventId) != NULL_PTR)
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.w	d15,[a15]20
.L4109:
	jeq	d15,#0,.L37
.L4110:

; ..\EAS\BSW\Dem\Dem.c	  1368      {
; ..\EAS\BSW\Dem\Dem.c	  1369          DEM_EVENT_DBC(EventId) = DEM_CFG_EVENT_DBC_PASSTHRESHOLD(EventId);
	sha	d15,d4,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a2,a15,d15,#0
.L4111:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]20
	ld.h	d15,[a15]6
.L4112:
	st.h	[a2]10,d15
.L37:

; ..\EAS\BSW\Dem\Dem.c	  1370      }
; ..\EAS\BSW\Dem\Dem.c	  1371  #endif
; ..\EAS\BSW\Dem\Dem.c	  1372      /*SWS_Dem_00435*/
; ..\EAS\BSW\Dem\Dem.c	  1373  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  1374      if(DEM_CFG_EVENT_DBT(EventId) != NULL_PTR)
	mul	d0,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.w	d15,[a15]24
.L4113:
	jeq	d15,#0,.L38
.L4114:

; ..\EAS\BSW\Dem\Dem.c	  1375      {
; ..\EAS\BSW\Dem\Dem.c	  1376          DEM_EVENT_DBT(EventId) = DEM_CFG_EVENT_DBT_PASSED(EventId);
	sha	d15,d4,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a2,a15,d15,#0
.L4115:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]24
	ld.w	d0,[a15]2
	mov	d2,#5
	div.u	e2,d0,d2
.L4116:
	st.w	[a2]12,d2
.L4117:

; ..\EAS\BSW\Dem\Dem.c	  1377          DEM_EVENT_TIMERDIRECTION(EventId) = DEM_EVENT_STATUS_PASSED;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4118:
	mov	d15,#0
.L4119:
	st.b	[a15]16,d15
.L4120:

; ..\EAS\BSW\Dem\Dem.c	  1378          Dem_EventDBTFreezeFlag[EventId] = FALSE;
	movh.a	a15,#@his(Dem_EventDBTFreezeFlag)
	lea	a15,[a15]@los(Dem_EventDBTFreezeFlag)
.L4121:
	addsc.a	a15,a15,d4,#0
.L4122:
	st.b	[a15],d15
.L38:

; ..\EAS\BSW\Dem\Dem.c	  1379      }
; ..\EAS\BSW\Dem\Dem.c	  1380  #endif
; ..\EAS\BSW\Dem\Dem.c	  1381  
; ..\EAS\BSW\Dem\Dem.c	  1382  #if(STD_ON != DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  1383      if((DEM_TEST_UDS_STATUS_TF(EventOldStatus)) && (!DEM_TEST_UDS_STATUS_TF(EventNewStatus)))
	jz.t	d1:0,.L39
.L4123:
	jnz.t	d8:0,.L40
.L4124:

; ..\EAS\BSW\Dem\Dem.c	  1384  #endif
; ..\EAS\BSW\Dem\Dem.c	  1385      {
; ..\EAS\BSW\Dem\Dem.c	  1386          /*SWS_Dem_01070*/
; ..\EAS\BSW\Dem\Dem.c	  1387          DemInternal_SetCaptureQueue(EventId, DEM_TRIGGER_ON_PASSED);
	mov	d5,#2
	call	DemInternal_SetCaptureQueue
.L40:
.L39:

; ..\EAS\BSW\Dem\Dem.c	  1388      }
; ..\EAS\BSW\Dem\Dem.c	  1389  
; ..\EAS\BSW\Dem\Dem.c	  1390  #if(DEM_NUM_OF_INDICATOR > 0)
; ..\EAS\BSW\Dem\Dem.c	  1391      DemInternal_IndicatorOffCriteriaFulfilled(EventId, DEM_TF_CLEAR, EventOldStatus, &EventNewStatus);
; ..\EAS\BSW\Dem\Dem.c	  1392  #endif
; ..\EAS\BSW\Dem\Dem.c	  1393  
; ..\EAS\BSW\Dem\Dem.c	  1394      return EventNewStatus;
	mov	d2,d8
.L2148:

; ..\EAS\BSW\Dem\Dem.c	  1395  }
	ret
.L1906:
	
__DemInternal_SetEventPass_function_end:
	.size	DemInternal_SetEventPass,__DemInternal_SetEventPass_function_end-DemInternal_SetEventPass
.L1392:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_SetEventFail',code,cluster('DemInternal_SetEventFail')
	.sect	'.text.Dem.DemInternal_SetEventFail'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  1396  
; ..\EAS\BSW\Dem\Dem.c	  1397  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  1398  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1399  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	  1400  *
; ..\EAS\BSW\Dem\Dem.c	  1401  * Description:
; ..\EAS\BSW\Dem\Dem.c	  1402  *
; ..\EAS\BSW\Dem\Dem.c	  1403  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  1404  *
; ..\EAS\BSW\Dem\Dem.c	  1405  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  1406  *
; ..\EAS\BSW\Dem\Dem.c	  1407  * Return:
; ..\EAS\BSW\Dem\Dem.c	  1408  *
; ..\EAS\BSW\Dem\Dem.c	  1409  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  1410  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1411  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  1412  STATIC FUNC(Dem_UdsStatusByteType, DEM_CODE) DemInternal_SetEventFail
; Function DemInternal_SetEventFail
.L909:
DemInternal_SetEventFail:	.type	func
	mov	d8,d4
.L2150:

; ..\EAS\BSW\Dem\Dem.c	  1413  (
; ..\EAS\BSW\Dem\Dem.c	  1414      Dem_EventIdType EventId
; ..\EAS\BSW\Dem\Dem.c	  1415  )
; ..\EAS\BSW\Dem\Dem.c	  1416  {
; ..\EAS\BSW\Dem\Dem.c	  1417      Dem_UdsStatusByteType EventOldStatus;
; ..\EAS\BSW\Dem\Dem.c	  1418      Dem_UdsStatusByteType EventNewStatus;
; ..\EAS\BSW\Dem\Dem.c	  1419  #if(DEM_NUM_OF_STOR_GROUP > 0)
; ..\EAS\BSW\Dem\Dem.c	  1420      boolean EventStorageCondFullFilled = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  1421  #endif
; ..\EAS\BSW\Dem\Dem.c	  1422  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  1423      uint8 EventCmaStatus;
; ..\EAS\BSW\Dem\Dem.c	  1424  #endif
; ..\EAS\BSW\Dem\Dem.c	  1425  #if(DEM_NUM_OF_STOR_CONDITION > 0)
; ..\EAS\BSW\Dem\Dem.c	  1426      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	  1427  #endif
; ..\EAS\BSW\Dem\Dem.c	  1428  
; ..\EAS\BSW\Dem\Dem.c	  1429      if(DEM_EVENT_FIRST_FAILED == DEM_DATA_INVALID_U16)
	movh.a	a15,#@his(Dem_StorageMem)
	ld.hu	d0,[a15]@los(Dem_StorageMem)
.L4129:
	mov.u	d15,#65535
.L4130:
	jne	d15,d0,.L42
.L4131:

; ..\EAS\BSW\Dem\Dem.c	  1430      {
; ..\EAS\BSW\Dem\Dem.c	  1431          DEM_EVENT_FIRST_FAILED = EventId;
	st.h	[a15]@los(Dem_StorageMem),d8
.L42:

; ..\EAS\BSW\Dem\Dem.c	  1432      }
; ..\EAS\BSW\Dem\Dem.c	  1433  
; ..\EAS\BSW\Dem\Dem.c	  1434      EventOldStatus = DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId));
	mul	d0,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.hu	d1,[a15]4
	mul	d15,d1,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d9,[a15]1864
.L2151:

; ..\EAS\BSW\Dem\Dem.c	  1435      EventNewStatus = DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId));
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.hu	d1,[a15]4
	mul	d15,d1,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]1864
	or	d15,#7
.L4132:

; ..\EAS\BSW\Dem\Dem.c	  1436  
; ..\EAS\BSW\Dem\Dem.c	  1437      /*SWS_Dem_00036*//*SWS_Dem_00386*/
; ..\EAS\BSW\Dem\Dem.c	  1438      EventNewStatus = DEM_SET_UDS_STATUS_TF(EventNewStatus);
; ..\EAS\BSW\Dem\Dem.c	  1439      /*SWS_Dem_00389*/
; ..\EAS\BSW\Dem\Dem.c	  1440      EventNewStatus = DEM_SET_UDS_STATUS_TFTOC(EventNewStatus);
; ..\EAS\BSW\Dem\Dem.c	  1441      /*SWS_Dem_00390*/
; ..\EAS\BSW\Dem\Dem.c	  1442      EventNewStatus = DEM_SET_UDS_STATUS_PDTC(EventNewStatus);
; ..\EAS\BSW\Dem\Dem.c	  1443      /*SWS_Dem_00392*/
; ..\EAS\BSW\Dem\Dem.c	  1444      EventNewStatus = DEM_CLEAR_UDS_STATUS_TNCSLC(EventNewStatus);
	and	d15,#239
.L4133:

; ..\EAS\BSW\Dem\Dem.c	  1445      /*SWS_Dem_00393*/
; ..\EAS\BSW\Dem\Dem.c	  1446      EventNewStatus = DEM_SET_UDS_STATUS_TFSLC(EventNewStatus);
	or	d15,#32
.L4134:

; ..\EAS\BSW\Dem\Dem.c	  1447      /*SWS_Dem_00394*/
; ..\EAS\BSW\Dem\Dem.c	  1448      EventNewStatus = DEM_CLEAR_UDS_STATUS_TNCTOC(EventNewStatus);
	and	d10,d15,#191
.L2152:

; ..\EAS\BSW\Dem\Dem.c	  1449  
; ..\EAS\BSW\Dem\Dem.c	  1450  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  1451      EventCmaStatus = DEM_EVENT_CMA_STATUS(EventId);
; ..\EAS\BSW\Dem\Dem.c	  1452      EventCmaStatus = DEM_SET_CMA_STATUS_UDTC(EventCmaStatus);
; ..\EAS\BSW\Dem\Dem.c	  1453      EventCmaStatus = DEM_SET_CMA_STATUS_UDTCTOC(EventCmaStatus);
; ..\EAS\BSW\Dem\Dem.c	  1454      EventCmaStatus = DEM_SET_CMA_STATUS_UDTCSLC(EventCmaStatus);
; ..\EAS\BSW\Dem\Dem.c	  1455      EventCmaStatus = DEM_CLEAR_CMA_STATUS_ADTC(EventCmaStatus);
; ..\EAS\BSW\Dem\Dem.c	  1456      EventCmaStatus = DEM_SET_CMA_STATUS_SSLC(EventCmaStatus);
; ..\EAS\BSW\Dem\Dem.c	  1457      EventCmaStatus = DEM_SET_CMA_STATUS_ERDTC(EventCmaStatus);
; ..\EAS\BSW\Dem\Dem.c	  1458      EventCmaStatus = DEM_SET_CMA_STATUS_TFSLCA(EventCmaStatus);
; ..\EAS\BSW\Dem\Dem.c	  1459      DEM_EVENT_CMA_STATUS(EventId) = EventCmaStatus;
; ..\EAS\BSW\Dem\Dem.c	  1460  #endif
; ..\EAS\BSW\Dem\Dem.c	  1461  
; ..\EAS\BSW\Dem\Dem.c	  1462      /*SWS_Dem_00420*/
; ..\EAS\BSW\Dem\Dem.c	  1463  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  1464      if(DEM_CFG_EVENT_DBC(EventId) != NULL_PTR)
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.w	d15,[a15]20
.L4135:
	jeq	d15,#0,.L43
.L4136:

; ..\EAS\BSW\Dem\Dem.c	  1465      {
; ..\EAS\BSW\Dem\Dem.c	  1466          DEM_EVENT_DBC(EventId) = DEM_CFG_EVENT_DBC_FAILTHRESHOLD(EventId);
	sha	d15,d8,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a2,a15,d15,#0
.L4137:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]20
	ld.h	d15,[a15]8
.L4138:
	st.h	[a2]10,d15
.L43:

; ..\EAS\BSW\Dem\Dem.c	  1467      }
; ..\EAS\BSW\Dem\Dem.c	  1468  #endif
; ..\EAS\BSW\Dem\Dem.c	  1469      /*SWS_Dem_00431*/
; ..\EAS\BSW\Dem\Dem.c	  1470  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  1471      if(DEM_CFG_EVENT_DBT(EventId) != NULL_PTR)
	mul	d0,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.w	d15,[a15]24
.L4139:
	jeq	d15,#0,.L44
.L4140:

; ..\EAS\BSW\Dem\Dem.c	  1472      {
; ..\EAS\BSW\Dem\Dem.c	  1473          DEM_EVENT_DBT(EventId) = DEM_CFG_EVENT_DBT_FAILED(EventId);
	sha	d15,d8,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a2,a15,d15,#0
.L4141:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]24
	ld.w	d0,[a15]6
	mov	d1,#5
	div.u	e0,d0,d1
.L4142:
	st.w	[a2]12,d0
.L4143:

; ..\EAS\BSW\Dem\Dem.c	  1474          DEM_EVENT_TIMERDIRECTION(EventId) = DEM_EVENT_STATUS_FAILED;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4144:
	mov	d15,#1
.L4145:
	st.b	[a15]16,d15
.L4146:

; ..\EAS\BSW\Dem\Dem.c	  1475          Dem_EventDBTFreezeFlag[EventId] = FALSE;
	movh.a	a15,#@his(Dem_EventDBTFreezeFlag)
	lea	a15,[a15]@los(Dem_EventDBTFreezeFlag)
.L4147:
	addsc.a	a15,a15,d8,#0
.L4148:
	mov	d15,#0
.L4149:
	st.b	[a15],d15
.L44:

; ..\EAS\BSW\Dem\Dem.c	  1476      }
; ..\EAS\BSW\Dem\Dem.c	  1477  #endif
; ..\EAS\BSW\Dem\Dem.c	  1478      /*SWS_Dem_00791*/
; ..\EAS\BSW\Dem\Dem.c	  1479      DEM_EVENT_MAXFDCDCC(EventId) = DEM_DATA_MAX_FDC;
	sha	d15,d8,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4150:
	mov	d0,#127
.L4151:
	st.b	[a15]17,d0
.L4152:

; ..\EAS\BSW\Dem\Dem.c	  1480      /*SWS_Dem_00795*/
; ..\EAS\BSW\Dem\Dem.c	  1481      DEM_EVENT_MAXFDCSLC(EventId) = DEM_DATA_MAX_FDC;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4153:
	st.b	[a15]18,d0
.L4154:

; ..\EAS\BSW\Dem\Dem.c	  1482      /*Reset DTC aging counter*/
; ..\EAS\BSW\Dem\Dem.c	  1483      DEM_DTC_AGINGCNT(DEM_CFG_EVENT_DTCREF(EventId)) = DEM_DATA_CLEAR;
	mul	d0,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.hu	d1,[a15]4
	mul	d1,d1,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d1,#0
.L4155:
	mov	d1,#0
.L4156:
	st.b	[a15]1866,d1
.L4157:

; ..\EAS\BSW\Dem\Dem.c	  1484  
; ..\EAS\BSW\Dem\Dem.c	  1485      if(!DEM_TEST_UDS_STATUS_TFTOC(EventOldStatus))
	jnz.t	d9:1,.L45
.L4158:

; ..\EAS\BSW\Dem\Dem.c	  1486      {
; ..\EAS\BSW\Dem\Dem.c	  1487          if(DEM_EVENT_FCC(EventId) < DEM_CFG_EVENT_FAULTCNTTHRESHOLD(EventId))
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d1,[a15]8
.L4159:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.bu	d2,[a15]12
.L4160:
	jge.u	d1,d2,.L46
.L4161:

; ..\EAS\BSW\Dem\Dem.c	  1488          {
; ..\EAS\BSW\Dem\Dem.c	  1489              DEM_EVENT_FCC(EventId)++;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a2,a15,d15,#0
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d1,[a15]8
.L4162:
	add	d1,#1
	st.b	[a2]8,d1
.L4163:

; ..\EAS\BSW\Dem\Dem.c	  1490              if(DEM_EVENT_FCC(EventId) >= DEM_CFG_EVENT_FAULTCNTTHRESHOLD(EventId))
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d1,[a15]8
.L4164:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.bu	d15,[a15]12
.L4165:
	jlt.u	d1,d15,.L47
.L4166:

; ..\EAS\BSW\Dem\Dem.c	  1491              {
; ..\EAS\BSW\Dem\Dem.c	  1492  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  1493                  DEM_EVENT_FCC(EventId) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  1494  #endif
; ..\EAS\BSW\Dem\Dem.c	  1495                  /*SWS_Dem_00391*/
; ..\EAS\BSW\Dem\Dem.c	  1496                  EventNewStatus = DEM_SET_UDS_STATUS_CDTC(EventNewStatus);
	or	d10,d10,#8
.L4167:

; ..\EAS\BSW\Dem\Dem.c	  1497                  if(DEM_EVENT_FIRST_CONFIRMED == DEM_DATA_INVALID_U16)
	movh.a	a15,#@his(Dem_StorageMem+2)
	ld.hu	d0,[a15]@los(Dem_StorageMem+2)
.L4168:
	mov.u	d15,#65535
.L4169:
	jne	d15,d0,.L48
.L4170:

; ..\EAS\BSW\Dem\Dem.c	  1498                  {
; ..\EAS\BSW\Dem\Dem.c	  1499                      DEM_EVENT_FIRST_CONFIRMED = EventId;
	st.h	[a15]@los(Dem_StorageMem+2),d8
.L48:

; ..\EAS\BSW\Dem\Dem.c	  1500                  }
; ..\EAS\BSW\Dem\Dem.c	  1501  
; ..\EAS\BSW\Dem\Dem.c	  1502                  if(!DEM_TEST_UDS_STATUS_CDTC(EventOldStatus))
	jnz.t	d9:3,.L49
.L4171:

; ..\EAS\BSW\Dem\Dem.c	  1503                  {
; ..\EAS\BSW\Dem\Dem.c	  1504                      DEM_EVENT_RECENT_CONFIRMED = EventId;
	movh.a	a15,#@his(Dem_StorageMem+6)
.L4172:
	st.h	[a15]@los(Dem_StorageMem+6),d8
.L49:
.L47:
.L46:
.L45:

; ..\EAS\BSW\Dem\Dem.c	  1505                  }
; ..\EAS\BSW\Dem\Dem.c	  1506              }
; ..\EAS\BSW\Dem\Dem.c	  1507          }
; ..\EAS\BSW\Dem\Dem.c	  1508      }
; ..\EAS\BSW\Dem\Dem.c	  1509  
; ..\EAS\BSW\Dem\Dem.c	  1510      /*SWS_Dem_00771*//*SWS_Dem_00772*/
; ..\EAS\BSW\Dem\Dem.c	  1511      DEM_EVENT_CSLF(EventId) = DEM_DATA_CLEAR;
	sha	d15,d8,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4173:
	mov	d0,#0
.L4174:
	st.b	[a15]19,d0
.L4175:

; ..\EAS\BSW\Dem\Dem.c	  1512  
; ..\EAS\BSW\Dem\Dem.c	  1513      if(!DEM_TEST_UDS_STATUS_TF(EventOldStatus))
	jnz.t	d9:0,.L50
.L4176:

; ..\EAS\BSW\Dem\Dem.c	  1514      {
; ..\EAS\BSW\Dem\Dem.c	  1515          /*SWS_Dem_00787*/
; ..\EAS\BSW\Dem\Dem.c	  1516          DEM_EVENT_RECENT_FAILED = EventId;
	movh.a	a15,#@his(Dem_StorageMem+4)
.L4177:
	st.h	[a15]@los(Dem_StorageMem+4),d8
.L4178:

; ..\EAS\BSW\Dem\Dem.c	  1517  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  1518          DEM_EVENT_OBD_PCSLF(EventId) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  1519  #endif
; ..\EAS\BSW\Dem\Dem.c	  1520  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  1521          DEM_EVENT_CMA_PCSLF(EventId) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  1522  #endif
; ..\EAS\BSW\Dem\Dem.c	  1523  
; ..\EAS\BSW\Dem\Dem.c	  1524  #if(DEM_PROCESS_OCCCTR_TF == DEM_CFG_OCCURRENCECOUNTERPROCESSING)
; ..\EAS\BSW\Dem\Dem.c	  1525          /*SWS_Dem_00524*/
; ..\EAS\BSW\Dem\Dem.c	  1526          if(DEM_DTC_DATAENTRYREF(DEM_CFG_EVENT_DTCREF(EventId)) != DEM_DATA_INVALID_U16)
	mul	d0,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.hu	d0,[a15]4
	mul	d0,d0,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
	ld.hu	d0,[a15]1868
.L4179:
	mov.u	d1,#65535
.L4180:
	jeq	d0,d1,.L51
.L4181:

; ..\EAS\BSW\Dem\Dem.c	  1527  #else
; ..\EAS\BSW\Dem\Dem.c	  1528          /*SWS_Dem_00580*/
; ..\EAS\BSW\Dem\Dem.c	  1529          if((DEM_DTC_DATAENTRYREF(DEM_CFG_EVENT_DTCREF(EventId)) != DEM_DATA_INVALID_U16) \ 
; ..\EAS\BSW\Dem\Dem.c	  1530                  && (DEM_TEST_UDS_STATUS_CDTC(EventNewStatus)))
; ..\EAS\BSW\Dem\Dem.c	  1531  #endif
; ..\EAS\BSW\Dem\Dem.c	  1532          {
; ..\EAS\BSW\Dem\Dem.c	  1533              /*SWS_Dem_00625*/
; ..\EAS\BSW\Dem\Dem.c	  1534              if(DEM_EVENT_OCCCTR(EventId) < DEM_DATA_U8_FF)
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]9
.L4182:
	mov	d1,#255
.L4183:
	jge.u	d0,d1,.L52
.L4184:

; ..\EAS\BSW\Dem\Dem.c	  1535              {
; ..\EAS\BSW\Dem\Dem.c	  1536                  DEM_EVENT_OCCCTR(EventId)++;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a2,a15,d15,#0
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]9
.L4185:
	add	d15,#1
	st.b	[a2]9,d15
.L52:
.L51:
.L50:

; ..\EAS\BSW\Dem\Dem.c	  1537              }
; ..\EAS\BSW\Dem\Dem.c	  1538          }
; ..\EAS\BSW\Dem\Dem.c	  1539      }
; ..\EAS\BSW\Dem\Dem.c	  1540  
; ..\EAS\BSW\Dem\Dem.c	  1541      if(!DEM_TEST_UDS_STATUS_TFSLC(EventOldStatus))
	jnz.t	d9:5,.L53
.L4186:

; ..\EAS\BSW\Dem\Dem.c	  1542      {
; ..\EAS\BSW\Dem\Dem.c	  1543          /*SWS_Dem_00776*/
; ..\EAS\BSW\Dem\Dem.c	  1544          DEM_EVENT_CSFF(EventId) = DEM_DATA_CLEAR;
	sha	d15,d8,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4187:
	mov	d0,#0
.L4188:
	st.b	[a15]20,d0
.L4189:

; ..\EAS\BSW\Dem\Dem.c	  1545          /*SWS_Dem_00780*/
; ..\EAS\BSW\Dem\Dem.c	  1546          DEM_EVENT_FCSLC(EventId) = DEM_DATA_CLEAR;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4190:
	st.b	[a15]21,d0
.L53:

; ..\EAS\BSW\Dem\Dem.c	  1547      }
; ..\EAS\BSW\Dem\Dem.c	  1548  
; ..\EAS\BSW\Dem\Dem.c	  1549  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  1550      /*SWS_Dem_00782*/
; ..\EAS\BSW\Dem\Dem.c	  1551      if((!DEM_TEST_UDS_STATUS_TFTOC(EventOldStatus)) \ 
; ..\EAS\BSW\Dem\Dem.c	  1552              && (DEM_EVENT_FCSLC(EventId) < DEM_DATA_U8_FF))
; ..\EAS\BSW\Dem\Dem.c	  1553      {
; ..\EAS\BSW\Dem\Dem.c	  1554          DEM_EVENT_FCSLC(EventId)++;
; ..\EAS\BSW\Dem\Dem.c	  1555      }
; ..\EAS\BSW\Dem\Dem.c	  1556  #endif
; ..\EAS\BSW\Dem\Dem.c	  1557  
; ..\EAS\BSW\Dem\Dem.c	  1558  #if(DEM_NUM_OF_STOR_GROUP > 0)
; ..\EAS\BSW\Dem\Dem.c	  1559      /*SWS_Dem_00455*//*SWS_Dem_00458*/
; ..\EAS\BSW\Dem\Dem.c	  1560      /*SWS_Dem_00591*//*SWS_Dem_00459*/
; ..\EAS\BSW\Dem\Dem.c	  1561      if(DEM_CFG_EVENT_STOR(EventId) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  1562      {
; ..\EAS\BSW\Dem\Dem.c	  1563          for(i = 0; i < DEM_CFG_EVENT_STOR_NUM(EventId); i++)
; ..\EAS\BSW\Dem\Dem.c	  1564          {
; ..\EAS\BSW\Dem\Dem.c	  1565              if(Dem_EventStorCondition[(DEM_CFG_EVENT_STOR_REF(EventId)[i])] != TRUE)
; ..\EAS\BSW\Dem\Dem.c	  1566              {
; ..\EAS\BSW\Dem\Dem.c	  1567                  EventStorageCondFullFilled = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  1568                  break;
; ..\EAS\BSW\Dem\Dem.c	  1569              }
; ..\EAS\BSW\Dem\Dem.c	  1570          }
; ..\EAS\BSW\Dem\Dem.c	  1571      }
; ..\EAS\BSW\Dem\Dem.c	  1572      if(EventStorageCondFullFilled != FALSE)
; ..\EAS\BSW\Dem\Dem.c	  1573      {
; ..\EAS\BSW\Dem\Dem.c	  1574  #endif
; ..\EAS\BSW\Dem\Dem.c	  1575          if(!DEM_TEST_UDS_STATUS_TF(EventOldStatus))
	jnz.t	d9:0,.L54
.L4191:

; ..\EAS\BSW\Dem\Dem.c	  1576          {
; ..\EAS\BSW\Dem\Dem.c	  1577              /*SWS_Dem_00783*/
; ..\EAS\BSW\Dem\Dem.c	  1578              DemInternal_SetCaptureQueue(EventId, DEM_TRIGGER_ON_TEST_FAILED);
	mov	d5,#8
	call	DemInternal_SetCaptureQueue
.L2149:

; ..\EAS\BSW\Dem\Dem.c	  1579              /*SWS_Dem_00784*//*SWS_Dem_00922*/
; ..\EAS\BSW\Dem\Dem.c	  1580              DemInternal_SetCaptureQueue(EventId, DEM_TRIGGER_ON_PENDING);
	mov	d5,#16
	mov	d4,d8
.L2153:
	call	DemInternal_SetCaptureQueue
.L2154:

; ..\EAS\BSW\Dem\Dem.c	  1581              /*SWS_Dem_00923*/
; ..\EAS\BSW\Dem\Dem.c	  1582              if(DEM_TEST_UDS_STATUS_CDTC(EventNewStatus))
	jz.t	d10:3,.L55
.L4192:

; ..\EAS\BSW\Dem\Dem.c	  1583              {
; ..\EAS\BSW\Dem\Dem.c	  1584                  DemInternal_SetCaptureQueue(EventId, DEM_TRIGGER_ON_CONFIRMED);
	mov	d5,#32
	mov	d4,d8
.L2155:
	call	DemInternal_SetCaptureQueue
.L55:
.L54:

; ..\EAS\BSW\Dem\Dem.c	  1585              }
; ..\EAS\BSW\Dem\Dem.c	  1586          }
; ..\EAS\BSW\Dem\Dem.c	  1587  
; ..\EAS\BSW\Dem\Dem.c	  1588          if((DEM_TEST_UDS_STATUS_CDTC(EventNewStatus)) && (!DEM_TEST_UDS_STATUS_CDTC(EventOldStatus)))
	jz.t	d10:3,.L56
.L4193:
	jnz.t	d9:3,.L57
.L4194:

; ..\EAS\BSW\Dem\Dem.c	  1589          {
; ..\EAS\BSW\Dem\Dem.c	  1590              /*SWS_Dem_00785*/
; ..\EAS\BSW\Dem\Dem.c	  1591              DemInternal_SetCaptureQueue(EventId, DEM_TRIGGER_ON_CONFIRMED);
	mov	d5,#32
	mov	d4,d8
.L2156:
	call	DemInternal_SetCaptureQueue
.L57:
.L56:

; ..\EAS\BSW\Dem\Dem.c	  1592          }
; ..\EAS\BSW\Dem\Dem.c	  1593  
; ..\EAS\BSW\Dem\Dem.c	  1594  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  1595          DemInternal_StoreOBDFreezeFrame(EventId, EventOldStatus, EventNewStatus);
; ..\EAS\BSW\Dem\Dem.c	  1596  #endif/*#if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))*/
; ..\EAS\BSW\Dem\Dem.c	  1597  
; ..\EAS\BSW\Dem\Dem.c	  1598  #if(DEM_NUM_OF_STOR_GROUP > 0)
; ..\EAS\BSW\Dem\Dem.c	  1599      }
; ..\EAS\BSW\Dem\Dem.c	  1600  #endif
; ..\EAS\BSW\Dem\Dem.c	  1601  
; ..\EAS\BSW\Dem\Dem.c	  1602  #if(DEM_NUM_OF_INDICATOR > 0)
; ..\EAS\BSW\Dem\Dem.c	  1603      DemInternal_IndicatorOnCriteriaFulfilled(EventId, EventOldStatus, &EventNewStatus);
; ..\EAS\BSW\Dem\Dem.c	  1604  #endif
; ..\EAS\BSW\Dem\Dem.c	  1605  #if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)
; ..\EAS\BSW\Dem\Dem.c	  1606      DemInternal_AddEventPermanentEntry(EventId);
; ..\EAS\BSW\Dem\Dem.c	  1607      DEM_EVENT_OBD_CLEAR_FLAG(EventId) = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  1608  #endif
; ..\EAS\BSW\Dem\Dem.c	  1609      return EventNewStatus;
	mov	d2,d10
.L2157:

; ..\EAS\BSW\Dem\Dem.c	  1610  }
	ret
.L1910:
	
__DemInternal_SetEventFail_function_end:
	.size	DemInternal_SetEventFail,__DemInternal_SetEventFail_function_end-DemInternal_SetEventFail
.L1397:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_SetEventStatus',code,cluster('DemInternal_SetEventStatus')
	.sect	'.text.Dem.DemInternal_SetEventStatus'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  1611  
; ..\EAS\BSW\Dem\Dem.c	  1612  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  1613  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1614  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	  1615  *
; ..\EAS\BSW\Dem\Dem.c	  1616  * Description:
; ..\EAS\BSW\Dem\Dem.c	  1617  *
; ..\EAS\BSW\Dem\Dem.c	  1618  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  1619  *
; ..\EAS\BSW\Dem\Dem.c	  1620  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  1621  *
; ..\EAS\BSW\Dem\Dem.c	  1622  * Return:
; ..\EAS\BSW\Dem\Dem.c	  1623  *
; ..\EAS\BSW\Dem\Dem.c	  1624  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  1625  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1626  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  1627  STATIC FUNC(void, DEM_CODE) DemInternal_SetEventStatus
; Function DemInternal_SetEventStatus
.L911:
DemInternal_SetEventStatus:	.type	func
	mov	d8,d4
.L2159:

; ..\EAS\BSW\Dem\Dem.c	  1628  (
; ..\EAS\BSW\Dem\Dem.c	  1629      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  1630      Dem_EventStatusType EventStatus
; ..\EAS\BSW\Dem\Dem.c	  1631  )
; ..\EAS\BSW\Dem\Dem.c	  1632  {
; ..\EAS\BSW\Dem\Dem.c	  1633      Dem_UdsStatusByteType EventOldStatus;
; ..\EAS\BSW\Dem\Dem.c	  1634      Dem_UdsStatusByteType EventNewStatus;
; ..\EAS\BSW\Dem\Dem.c	  1635  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  1636      uint8 EventCmaStatus;
; ..\EAS\BSW\Dem\Dem.c	  1637  #endif
; ..\EAS\BSW\Dem\Dem.c	  1638  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  1639      sint8 EventOldFdc;
; ..\EAS\BSW\Dem\Dem.c	  1640      sint8 EventNewFdc;
; ..\EAS\BSW\Dem\Dem.c	  1641      sint8 EventCurrentFDC;
; ..\EAS\BSW\Dem\Dem.c	  1642  #endif
; ..\EAS\BSW\Dem\Dem.c	  1643  
; ..\EAS\BSW\Dem\Dem.c	  1644      /*SWS_Dem_00626*//*SWS_Dem_00529*//*SWS_Dem_00481*//*SWS_Dem_00482*/
; ..\EAS\BSW\Dem\Dem.c	  1645      if((Dem_OpCycState[DEM_CFG_EVENT_OPCYCREF(EventId)] == DEM_CYCLE_STATE_START) \ 
	mul	d15,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]18
.L4199:
	movh.a	a15,#@his(Dem_OpCycState)
	lea	a15,[a15]@los(Dem_OpCycState)
.L4200:
	addsc.a	a15,a15,d0,#0
	ld.bu	d0,[a15]
.L4201:
	jne	d0,#1,.L59
.L4202:

; ..\EAS\BSW\Dem\Dem.c	  1646          && (Dem_EnableDtcSetting[EventId] == TRUE))
	movh.a	a15,#@his(Dem_EnableDtcSetting)
	lea	a15,[a15]@los(Dem_EnableDtcSetting)
.L4203:
	addsc.a	a15,a15,d8,#0
	ld.bu	d0,[a15]
.L4204:
	jne	d0,#1,.L60
.L4205:

; ..\EAS\BSW\Dem\Dem.c	  1647      {
; ..\EAS\BSW\Dem\Dem.c	  1648          EventOldStatus = DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId));
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]4
	mul	d0,d0,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
	ld.bu	d9,[a15]1864
.L2160:

; ..\EAS\BSW\Dem\Dem.c	  1649          EventNewStatus = DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId));
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]4
	mul	d15,d0,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d10,[a15]1864
.L2161:

; ..\EAS\BSW\Dem\Dem.c	  1650  
; ..\EAS\BSW\Dem\Dem.c	  1651          if(EventStatus == DEM_EVENT_STATUS_FAILED)
	jne	d5,#1,.L61
.L4206:

; ..\EAS\BSW\Dem\Dem.c	  1652          {
; ..\EAS\BSW\Dem\Dem.c	  1653              EventNewStatus = DemInternal_SetEventFail(EventId);
	call	DemInternal_SetEventFail
.L2158:
	mov	d10,d2
.L2162:
	j	.L62
.L61:

; ..\EAS\BSW\Dem\Dem.c	  1654          }
; ..\EAS\BSW\Dem\Dem.c	  1655          else if(EventStatus == DEM_EVENT_STATUS_PREFAILED)
	jne	d5,#3,.L63
.L4207:

; ..\EAS\BSW\Dem\Dem.c	  1656          {
; ..\EAS\BSW\Dem\Dem.c	  1657  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  1658              if(DEM_CFG_EVENT_DBC(EventId) != NULL_PTR)
	mul	d15,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.w	d0,[a15]20
.L4208:
	jeq	d0,#0,.L64
.L4209:

; ..\EAS\BSW\Dem\Dem.c	  1659              {
; ..\EAS\BSW\Dem\Dem.c	  1660                  EventOldFdc = DEM_EVENT_DBC_F_FDC(EventId);
	sha	d0,d8,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
	ld.h	d1,[a15]10
	mul	d1,d1,#127
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]20
	ld.h	d2,[a15]8
	div	e2,d1,d2
	extr	d11,d2,#0,#8
.L2164:

; ..\EAS\BSW\Dem\Dem.c	  1661  
; ..\EAS\BSW\Dem\Dem.c	  1662                  if((DEM_EVENT_DBC(EventId) < DEM_CFG_EVENT_DBC_JUMPUP_VALUE(EventId)) \ 
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
	ld.h	d1,[a15]10
.L4210:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]20
	ld.h	d2,[a15]14
.L4211:
	jge	d1,d2,.L65
.L4212:

; ..\EAS\BSW\Dem\Dem.c	  1663                          && (DEM_CFG_EVENT_DBC_JUMPUP(EventId) == TRUE))
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]20
	ld.bu	d1,[a15]11
.L4213:
	jne	d1,#1,.L66
.L4214:

; ..\EAS\BSW\Dem\Dem.c	  1664                  {
; ..\EAS\BSW\Dem\Dem.c	  1665                      /*SWS_Dem_00425*/
; ..\EAS\BSW\Dem\Dem.c	  1666                      DEM_EVENT_DBC(EventId) = DEM_CFG_EVENT_DBC_JUMPUP_VALUE(EventId);
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a2,a15,d0,#0
.L4215:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]20
	ld.h	d15,[a15]14
.L4216:
	st.h	[a2]10,d15
.L66:
.L65:

; ..\EAS\BSW\Dem\Dem.c	  1667                  }
; ..\EAS\BSW\Dem\Dem.c	  1668  
; ..\EAS\BSW\Dem\Dem.c	  1669                  if((DEM_CFG_EVENT_DBC_FAILTHRESHOLD(EventId) - DEM_EVENT_DBC(EventId)) \ 
	mul	d15,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]20
	ld.h	d0,[a15]8
.L4217:
	sha	d1,d8,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d1,#0
	ld.h	d2,[a15]10
.L4218:
	sub	d0,d2
.L4219:

; ..\EAS\BSW\Dem\Dem.c	  1670                      > DEM_CFG_EVENT_DBC_INCREMENT_SIZE(EventId))
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]20
	ld.hu	d2,[a15]4
.L4220:
	jge	d2,d0,.L67
.L4221:

; ..\EAS\BSW\Dem\Dem.c	  1671                  {
; ..\EAS\BSW\Dem\Dem.c	  1672                      /*SWS_Dem_00418*/
; ..\EAS\BSW\Dem\Dem.c	  1673                      DEM_EVENT_DBC(EventId) += DEM_CFG_EVENT_DBC_INCREMENT_SIZE(EventId);
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a2,a15,d1,#0
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d1,#0
	ld.h	d0,[a15]10
.L4222:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]20
	ld.hu	d15,[a15]4
.L4223:
	add	d0,d15
	st.h	[a2]10,d0
.L4224:
	j	.L68
.L67:

; ..\EAS\BSW\Dem\Dem.c	  1674                  }
; ..\EAS\BSW\Dem\Dem.c	  1675                  else
; ..\EAS\BSW\Dem\Dem.c	  1676                  {
; ..\EAS\BSW\Dem\Dem.c	  1677                      EventNewStatus = DemInternal_SetEventFail(EventId);
	call	DemInternal_SetEventFail
.L2163:
	mov	d10,d2
.L68:

; ..\EAS\BSW\Dem\Dem.c	  1678                  }
; ..\EAS\BSW\Dem\Dem.c	  1679  
; ..\EAS\BSW\Dem\Dem.c	  1680                  EventNewFdc = DEM_EVENT_DBC_F_FDC(EventId);
	sha	d15,d8,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.h	d15,[a15]10
	mul	d0,d15,#127
	mul	d2,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d2,#0
	ld.a	a15,[a15]20
	ld.h	d15,[a15]8
	div	e0,d0,d15
	extr	d0,d0,#0,#8
.L2166:

; ..\EAS\BSW\Dem\Dem.c	  1681  
; ..\EAS\BSW\Dem\Dem.c	  1682                  if((EventOldFdc < (sint8)DEM_CFG_DTC_FDC_THRESHLD(DEM_CFG_EVENT_DTCREF(EventId))) \ 
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d2,#0
	ld.hu	d15,[a15]4
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.hu	d1,[a15]0
	sha	d1,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d1,#0
	ld.bu	d15,[a15]11
.L4225:
	extr	d1,d15,#0,#8
.L4226:
	jge	d11,d1,.L69
.L4227:

; ..\EAS\BSW\Dem\Dem.c	  1683                          && (EventNewFdc >= (sint8)DEM_CFG_DTC_FDC_THRESHLD(DEM_CFG_EVENT_DTCREF(EventId))))
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d2,#0
	ld.hu	d15,[a15]4
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]11
.L4228:
	extr	d15,d15,#0,#8
.L4229:
	jlt	d0,d15,.L70
.L4230:

; ..\EAS\BSW\Dem\Dem.c	  1684                  {
; ..\EAS\BSW\Dem\Dem.c	  1685  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  1686                      EventCmaStatus = DEM_EVENT_CMA_STATUS(EventId);
; ..\EAS\BSW\Dem\Dem.c	  1687                      EventCmaStatus = DEM_SET_CMA_STATUS_UDTC(EventCmaStatus);
; ..\EAS\BSW\Dem\Dem.c	  1688                      EventCmaStatus = DEM_SET_CMA_STATUS_UDTCTOC(EventCmaStatus);
; ..\EAS\BSW\Dem\Dem.c	  1689                      EventCmaStatus = DEM_SET_CMA_STATUS_UDTCSLC(EventCmaStatus);
; ..\EAS\BSW\Dem\Dem.c	  1690                      EventCmaStatus = DEM_CLEAR_CMA_STATUS_ADTC(EventCmaStatus);
; ..\EAS\BSW\Dem\Dem.c	  1691                      EventCmaStatus = DEM_SET_CMA_STATUS_SSLC(EventCmaStatus);
; ..\EAS\BSW\Dem\Dem.c	  1692                      DEM_EVENT_CMA_STATUS(EventId) = EventCmaStatus;
; ..\EAS\BSW\Dem\Dem.c	  1693  #endif
; ..\EAS\BSW\Dem\Dem.c	  1694                      if(FALSE == Dem_DTC_FirstFdcThreshold[DEM_CFG_EVENT_DTCREF(EventId)])
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d2,#0
	ld.hu	d15,[a15]4
.L4231:
	movh.a	a15,#@his(Dem_DTC_FirstFdcThreshold)
	lea	a15,[a15]@los(Dem_DTC_FirstFdcThreshold)
.L4232:
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L4233:
	jne	d15,#0,.L71
.L4234:

; ..\EAS\BSW\Dem\Dem.c	  1695                      {
; ..\EAS\BSW\Dem\Dem.c	  1696                          Dem_DTC_FirstFdcThreshold[DEM_CFG_EVENT_DTCREF(EventId)] = TRUE;
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d2,#0
	ld.hu	d15,[a15]4
.L4235:
	movh.a	a15,#@his(Dem_DTC_FirstFdcThreshold)
	lea	a15,[a15]@los(Dem_DTC_FirstFdcThreshold)
.L4236:
	addsc.a	a15,a15,d15,#0
.L4237:
	mov	d15,#1
.L4238:
	st.b	[a15],d15
.L4239:

; ..\EAS\BSW\Dem\Dem.c	  1697                          /*SWS_Dem_00786*//*SWS_Dem_00799*//*SWS_Dem_00811*/
; ..\EAS\BSW\Dem\Dem.c	  1698                          DemInternal_SetCaptureQueue(EventId, DEM_TRIGGER_ON_FDC_THRESHOLD);
	mov	d5,#4
	mov	d4,d8
.L2167:
	call	DemInternal_SetCaptureQueue
.L71:
.L70:
.L69:

; ..\EAS\BSW\Dem\Dem.c	  1699                      }
; ..\EAS\BSW\Dem\Dem.c	  1700                  }
; ..\EAS\BSW\Dem\Dem.c	  1701  
; ..\EAS\BSW\Dem\Dem.c	  1702                  EventCurrentFDC = DEM_EVENT_DBC_F_FDC(EventId);
	sha	d0,d8,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
	ld.h	d15,[a15]10
	mul	d1,d15,#127
	mul	d15,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]20
	ld.h	d15,[a15]8
	div	e2,d1,d15
	extr	d1,d2,#0,#8
.L2168:

; ..\EAS\BSW\Dem\Dem.c	  1703                  /*SWS_Dem_00791*/
; ..\EAS\BSW\Dem\Dem.c	  1704                  if(EventCurrentFDC > DEM_EVENT_MAXFDCDCC(EventId))
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
	ld.b	d15,[a15]17
.L4240:
	jge	d15,d1,.L72
.L4241:

; ..\EAS\BSW\Dem\Dem.c	  1705                  {
; ..\EAS\BSW\Dem\Dem.c	  1706                      DEM_EVENT_MAXFDCDCC(EventId) = EventCurrentFDC;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
.L4242:
	st.b	[a15]17,d1
.L72:

; ..\EAS\BSW\Dem\Dem.c	  1707                  }
; ..\EAS\BSW\Dem\Dem.c	  1708                  /*SWS_Dem_00795*/
; ..\EAS\BSW\Dem\Dem.c	  1709                  if(EventCurrentFDC > DEM_EVENT_MAXFDCSLC(EventId))
	mov	d15,d0
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.b	d0,[a15]18
.L4243:
	jge	d0,d1,.L73
.L4244:

; ..\EAS\BSW\Dem\Dem.c	  1710                  {
; ..\EAS\BSW\Dem\Dem.c	  1711                      DEM_EVENT_MAXFDCSLC(EventId) = EventCurrentFDC;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4245:
	st.b	[a15]18,d1
.L73:
.L64:

; ..\EAS\BSW\Dem\Dem.c	  1712                  }
; ..\EAS\BSW\Dem\Dem.c	  1713              }
; ..\EAS\BSW\Dem\Dem.c	  1714  #endif
; ..\EAS\BSW\Dem\Dem.c	  1715  
; ..\EAS\BSW\Dem\Dem.c	  1716  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  1717              if(DEM_CFG_EVENT_DBT(EventId) != NULL_PTR)
	mul	d15,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]24
.L4246:
	jeq	d15,#0,.L74
.L4247:

; ..\EAS\BSW\Dem\Dem.c	  1718              {
; ..\EAS\BSW\Dem\Dem.c	  1719                  /*SWS_Dem_00429*//*SWS_Dem_00430*/
; ..\EAS\BSW\Dem\Dem.c	  1720                  if((DEM_EVENT_TIMERDIRECTION(EventId) != DEM_EVENT_STATUS_PREFAILED) \ 
	sha	d15,d8,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]16
.L4248:
	jeq	d0,#3,.L75
.L4249:

; ..\EAS\BSW\Dem\Dem.c	  1721                          && (DEM_EVENT_TIMERDIRECTION(EventId) != DEM_EVENT_STATUS_FAILED))
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]16
.L4250:
	jeq	d0,#1,.L76
.L4251:

; ..\EAS\BSW\Dem\Dem.c	  1722                  {
; ..\EAS\BSW\Dem\Dem.c	  1723                      DEM_EVENT_TIMERDIRECTION(EventId) = DEM_EVENT_STATUS_PREFAILED;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4252:
	mov	d15,#3
.L4253:
	j	.L77
.L63:

; ..\EAS\BSW\Dem\Dem.c	  1724                      DEM_EVENT_DBT(EventId) = 0;
; ..\EAS\BSW\Dem\Dem.c	  1725                  }
; ..\EAS\BSW\Dem\Dem.c	  1726                  /*SWS_Dem_00656*/
; ..\EAS\BSW\Dem\Dem.c	  1727                  Dem_EventDBTFreezeFlag[EventId] = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  1728              }
; ..\EAS\BSW\Dem\Dem.c	  1729  #endif
; ..\EAS\BSW\Dem\Dem.c	  1730          }
; ..\EAS\BSW\Dem\Dem.c	  1731          else if(EventStatus == DEM_EVENT_STATUS_PASSED)
	jne	d5,#0,.L78
.L4254:

; ..\EAS\BSW\Dem\Dem.c	  1732          {
; ..\EAS\BSW\Dem\Dem.c	  1733              EventNewStatus = DemInternal_SetEventPass(EventId);
	call	DemInternal_SetEventPass
.L2165:
	mov	d10,d2
.L2169:
	j	.L79
.L78:

; ..\EAS\BSW\Dem\Dem.c	  1734          }
; ..\EAS\BSW\Dem\Dem.c	  1735          else if(EventStatus == DEM_EVENT_STATUS_PREPASSED)
	jne	d5,#2,.L80
.L4255:

; ..\EAS\BSW\Dem\Dem.c	  1736          {
; ..\EAS\BSW\Dem\Dem.c	  1737  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  1738              if(DEM_CFG_EVENT_DBC(EventId) != NULL_PTR)
	mul	d15,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.w	d0,[a15]20
.L4256:
	jeq	d0,#0,.L81
.L4257:

; ..\EAS\BSW\Dem\Dem.c	  1739              {
; ..\EAS\BSW\Dem\Dem.c	  1740                  if((DEM_EVENT_DBC(EventId) > DEM_CFG_EVENT_DBC_JUMPDOWN_VALUE(EventId)) \ 
	sha	d0,d8,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
	ld.h	d1,[a15]10
.L4258:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]20
	ld.h	d2,[a15]12
.L4259:
	jge	d2,d1,.L82
.L4260:

; ..\EAS\BSW\Dem\Dem.c	  1741                          && (DEM_CFG_EVENT_DBC_JUMPDOWN(EventId) == TRUE))
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]20
	ld.bu	d1,[a15]10
.L4261:
	jne	d1,#1,.L83
.L4262:

; ..\EAS\BSW\Dem\Dem.c	  1742                  {
; ..\EAS\BSW\Dem\Dem.c	  1743                      /*SWS_Dem_00423*/
; ..\EAS\BSW\Dem\Dem.c	  1744                      DEM_EVENT_DBC(EventId) = DEM_CFG_EVENT_DBC_JUMPDOWN_VALUE(EventId);
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a2,a15,d0,#0
.L4263:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]20
	ld.h	d15,[a15]12
.L4264:
	st.h	[a2]10,d15
.L83:
.L82:

; ..\EAS\BSW\Dem\Dem.c	  1745                  }
; ..\EAS\BSW\Dem\Dem.c	  1746  
; ..\EAS\BSW\Dem\Dem.c	  1747                  if((DEM_EVENT_DBC(EventId) - DEM_CFG_EVENT_DBC_PASSTHRESHOLD(EventId)) \ 
	mov	d15,d0
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.h	d0,[a15]10
.L4265:
	mul	d1,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d1,#0
	ld.a	a15,[a15]20
	ld.h	d2,[a15]6
.L4266:
	sub	d0,d2
.L4267:

; ..\EAS\BSW\Dem\Dem.c	  1748                          > DEM_CFG_EVENT_DBC_DECREMENT_SIZE(EventId))
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d1,#0
	ld.a	a15,[a15]20
	ld.hu	d2,[a15]2
.L4268:
	jge	d2,d0,.L84
.L4269:

; ..\EAS\BSW\Dem\Dem.c	  1749                  {
; ..\EAS\BSW\Dem\Dem.c	  1750                      /*SWS_Dem_00419*/
; ..\EAS\BSW\Dem\Dem.c	  1751                      DEM_EVENT_DBC(EventId) -= DEM_CFG_EVENT_DBC_DECREMENT_SIZE(EventId);
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a2,a15,d15,#0
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.h	d15,[a15]10
.L4270:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d1,#0
	ld.a	a15,[a15]20
	ld.hu	d0,[a15]2
.L4271:
	sub	d15,d0
	st.h	[a2]10,d15
.L4272:
	j	.L85
.L84:

; ..\EAS\BSW\Dem\Dem.c	  1752                  }
; ..\EAS\BSW\Dem\Dem.c	  1753                  else
; ..\EAS\BSW\Dem\Dem.c	  1754                  {
; ..\EAS\BSW\Dem\Dem.c	  1755                      EventNewStatus = DemInternal_SetEventPass(EventId);
	call	DemInternal_SetEventPass
.L2170:
	mov	d10,d2
.L85:
.L81:

; ..\EAS\BSW\Dem\Dem.c	  1756                  }
; ..\EAS\BSW\Dem\Dem.c	  1757              }
; ..\EAS\BSW\Dem\Dem.c	  1758  #endif
; ..\EAS\BSW\Dem\Dem.c	  1759  
; ..\EAS\BSW\Dem\Dem.c	  1760  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  1761              if(DEM_CFG_EVENT_DBT(EventId) != NULL_PTR)
	mul	d15,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]24
.L4273:
	jeq	d15,#0,.L86
.L4274:

; ..\EAS\BSW\Dem\Dem.c	  1762              {
; ..\EAS\BSW\Dem\Dem.c	  1763                  /*SWS_Dem_00432*//*SWS_Dem_00433*/
; ..\EAS\BSW\Dem\Dem.c	  1764                  if((DEM_EVENT_TIMERDIRECTION(EventId) != DEM_EVENT_STATUS_PREPASSED) \ 
	sha	d15,d8,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]16
.L4275:
	jeq	d0,#2,.L87
.L4276:

; ..\EAS\BSW\Dem\Dem.c	  1765                          && (DEM_EVENT_TIMERDIRECTION(EventId) != DEM_EVENT_STATUS_PASSED))
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]16
.L4277:
	jeq	d0,#0,.L88
.L4278:

; ..\EAS\BSW\Dem\Dem.c	  1766                  {
; ..\EAS\BSW\Dem\Dem.c	  1767                      DEM_EVENT_TIMERDIRECTION(EventId) = DEM_EVENT_STATUS_PREPASSED;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4279:
	mov	d15,#2
.L77:
	st.b	[a15]16,d15
.L4280:

; ..\EAS\BSW\Dem\Dem.c	  1768                      DEM_EVENT_DBT(EventId) = 0;
	sha	d15,d8,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4281:
	mov	d15,#0
.L4282:
	st.w	[a15]12,d15
.L88:
.L87:
.L76:
.L75:

; ..\EAS\BSW\Dem\Dem.c	  1769                  }
; ..\EAS\BSW\Dem\Dem.c	  1770                  /*SWS_Dem_00656*/
; ..\EAS\BSW\Dem\Dem.c	  1771                  Dem_EventDBTFreezeFlag[EventId] = FALSE;
	movh.a	a15,#@his(Dem_EventDBTFreezeFlag)
	lea	a15,[a15]@los(Dem_EventDBTFreezeFlag)
.L4283:
	addsc.a	a15,a15,d8,#0
.L4284:
	mov	d15,#0
.L4285:
	st.b	[a15],d15
.L4286:
	j	.L89
.L80:

; ..\EAS\BSW\Dem\Dem.c	  1772              }
; ..\EAS\BSW\Dem\Dem.c	  1773  #endif
; ..\EAS\BSW\Dem\Dem.c	  1774          }
; ..\EAS\BSW\Dem\Dem.c	  1775          else if(EventStatus == DEM_EVENT_STATUS_FDC_THRESHOLD_REACHED)
	jne	d5,#4,.L90
.L4287:

; ..\EAS\BSW\Dem\Dem.c	  1776          {
; ..\EAS\BSW\Dem\Dem.c	  1777              if(FALSE == Dem_DTC_FirstFdcThreshold[DEM_CFG_EVENT_DTCREF(EventId)])
	mul	d15,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]4
.L4288:
	movh.a	a15,#@his(Dem_DTC_FirstFdcThreshold)
	lea	a15,[a15]@los(Dem_DTC_FirstFdcThreshold)
.L4289:
	addsc.a	a15,a15,d0,#0
	ld.bu	d0,[a15]
.L4290:
	jne	d0,#0,.L91
.L4291:

; ..\EAS\BSW\Dem\Dem.c	  1778              {
; ..\EAS\BSW\Dem\Dem.c	  1779                  Dem_DTC_FirstFdcThreshold[DEM_CFG_EVENT_DTCREF(EventId)] = TRUE;
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]4
.L4292:
	movh.a	a15,#@his(Dem_DTC_FirstFdcThreshold)
	lea	a15,[a15]@los(Dem_DTC_FirstFdcThreshold)
.L4293:
	addsc.a	a15,a15,d15,#0
.L4294:
	mov	d15,#1
.L4295:
	st.b	[a15],d15
.L4296:

; ..\EAS\BSW\Dem\Dem.c	  1780                  /*SWS_Dem_01068*//*SWS_Dem_01069*/
; ..\EAS\BSW\Dem\Dem.c	  1781                  DemInternal_SetCaptureQueue(EventId, DEM_TRIGGER_ON_FDC_THRESHOLD);
	call	DemInternal_SetCaptureQueue
.L91:
.L90:
.L89:
.L86:
.L79:
.L74:
.L62:

; ..\EAS\BSW\Dem\Dem.c	  1782              }
; ..\EAS\BSW\Dem\Dem.c	  1783          }
; ..\EAS\BSW\Dem\Dem.c	  1784          else
; ..\EAS\BSW\Dem\Dem.c	  1785          {
; ..\EAS\BSW\Dem\Dem.c	  1786              /*do nothing*/
; ..\EAS\BSW\Dem\Dem.c	  1787          }
; ..\EAS\BSW\Dem\Dem.c	  1788  
; ..\EAS\BSW\Dem\Dem.c	  1789          DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId)) = EventNewStatus;
	mul	d15,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]4
	mul	d0,d0,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
.L4297:
	st.b	[a15]1864,d10
.L4298:

; ..\EAS\BSW\Dem\Dem.c	  1790  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  1791  #if(DEM_NUM_OF_RATIO > 0)
; ..\EAS\BSW\Dem\Dem.c	  1792          DemInternal_UpdateRatioNumerator(EventId);
; ..\EAS\BSW\Dem\Dem.c	  1793  #endif
; ..\EAS\BSW\Dem\Dem.c	  1794  #endif
; ..\EAS\BSW\Dem\Dem.c	  1795          if(EventNewStatus != EventOldStatus)
	jeq	d10,d9,.L92
.L4299:

; ..\EAS\BSW\Dem\Dem.c	  1796          {
; ..\EAS\BSW\Dem\Dem.c	  1797              /*SWS_Dem_00284*/
; ..\EAS\BSW\Dem\Dem.c	  1798              (void)DEM_CFG_DTC_STATUSCHANGED_CALLFNC(DEM_CFG_DTC_VALUE(DEM_CFG_EVENT_DTCREF(EventId)), EventOldStatus, EventNewStatus);
	movh.a	a15,#@his(Dem_DtcStatusChangedNotificationArray)
	ld.a	a2,[a15]@los(Dem_DtcStatusChangedNotificationArray)
.L4300:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]4
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.w	d4,[a15]4
.L4301:
	mov	d5,d9
.L2171:
	mov	d6,d10
.L2173:
	calli	a2
.L2172:

; ..\EAS\BSW\Dem\Dem.c	  1799  
; ..\EAS\BSW\Dem\Dem.c	  1800              if(NULL_PTR != DEM_CFG_EVENT_STATUSCHANGED_CALLFNC(EventId))
	mov.a	a2,#0
.L4302:
	mul	d15,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]44
.L4303:
	jeq.a	a2,a15,.L93
.L4304:

; ..\EAS\BSW\Dem\Dem.c	  1801              {
; ..\EAS\BSW\Dem\Dem.c	  1802                  /*SWS_Dem_00016*/
; ..\EAS\BSW\Dem\Dem.c	  1803                  (void)DEM_CFG_EVENT_STATUSCHANGED_CALLFNC(EventId)(EventOldStatus, EventNewStatus);
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]44
.L4305:
	mov	e4,d10,d9
	calli	a15
.L93:

; ..\EAS\BSW\Dem\Dem.c	  1804              }
; ..\EAS\BSW\Dem\Dem.c	  1805  #if(DEM_CFG_TRIGGER_FIM_REPORTS == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  1806              FiM_DemTriggerOnEventStatus(EventId, EventOldStatus, EventNewStatus);
	mov	e4,d9,d8
	mov	d6,d10
.L2174:
	j	FiM_DemTriggerOnEventStatus
.L92:
.L60:
.L59:

; ..\EAS\BSW\Dem\Dem.c	  1807  #endif
; ..\EAS\BSW\Dem\Dem.c	  1808          }
; ..\EAS\BSW\Dem\Dem.c	  1809      }/*if((Dem_OpCycState[DEM_CFG_EVENT_OPCYCREF(EventId)] == DEM_CYCLE_STATE_START) \ 
; ..\EAS\BSW\Dem\Dem.c	  1810            && (Dem_EnableDtcSetting[EventId] == TRUE))*/
; ..\EAS\BSW\Dem\Dem.c	  1811  }
	ret
.L1914:
	
__DemInternal_SetEventStatus_function_end:
	.size	DemInternal_SetEventStatus,__DemInternal_SetEventStatus_function_end-DemInternal_SetEventStatus
.L1402:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_GetUsableMemoryEntry',code,cluster('DemInternal_GetUsableMemoryEntry')
	.sect	'.text.Dem.DemInternal_GetUsableMemoryEntry'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  1812  
; ..\EAS\BSW\Dem\Dem.c	  1813  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  1814  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1815  * Function Name: DemInternal_GetUsableMemoryEntry
; ..\EAS\BSW\Dem\Dem.c	  1816  *
; ..\EAS\BSW\Dem\Dem.c	  1817  * Description:
; ..\EAS\BSW\Dem\Dem.c	  1818  *
; ..\EAS\BSW\Dem\Dem.c	  1819  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  1820  *
; ..\EAS\BSW\Dem\Dem.c	  1821  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  1822  *
; ..\EAS\BSW\Dem\Dem.c	  1823  * Return:
; ..\EAS\BSW\Dem\Dem.c	  1824  *
; ..\EAS\BSW\Dem\Dem.c	  1825  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  1826  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1827  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  1828  STATIC FUNC(Std_ReturnType, DEM_CODE) DemInternal_GetUsableMemoryEntry
; Function DemInternal_GetUsableMemoryEntry
.L913:
DemInternal_GetUsableMemoryEntry:	.type	func
	mov	d15,d4
.L2176:
	mov.aa	a15,a4
.L2177:

; ..\EAS\BSW\Dem\Dem.c	  1829  (
; ..\EAS\BSW\Dem\Dem.c	  1830      uint16 DtcId,
; ..\EAS\BSW\Dem\Dem.c	  1831      P2VAR(Dem_MemIdType, AUTOMATIC, DEM_APPL_DATA) MemoryEntryId
; ..\EAS\BSW\Dem\Dem.c	  1832  )
; ..\EAS\BSW\Dem\Dem.c	  1833  {
; ..\EAS\BSW\Dem\Dem.c	  1834      /*SWS_Dem_00810*/
; ..\EAS\BSW\Dem\Dem.c	  1835      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  1836  
; ..\EAS\BSW\Dem\Dem.c	  1837      /*Search a free entry for the reported event.*/
; ..\EAS\BSW\Dem\Dem.c	  1838      Result = DemInternal_SearchFreeEntry(MemoryEntryId);
	call	DemInternal_SearchFreeEntry
.L2175:

; ..\EAS\BSW\Dem\Dem.c	  1839  
; ..\EAS\BSW\Dem\Dem.c	  1840      if(Result != E_OK)
	jeq	d2,#0,.L94
.L4310:

; ..\EAS\BSW\Dem\Dem.c	  1841      {
; ..\EAS\BSW\Dem\Dem.c	  1842          /*SWS_Dem_00400*//*Event displacement*/
; ..\EAS\BSW\Dem\Dem.c	  1843          Result = DemInternal_SearchEntryForDisplacement(DtcId, MemoryEntryId);
	mov	d4,d15
.L2178:
	mov.aa	a4,a15
.L2179:
	j	DemInternal_SearchEntryForDisplacement
.L94:

; ..\EAS\BSW\Dem\Dem.c	  1844      }
; ..\EAS\BSW\Dem\Dem.c	  1845  
; ..\EAS\BSW\Dem\Dem.c	  1846      return Result;
; ..\EAS\BSW\Dem\Dem.c	  1847  }
	ret
.L1923:
	
__DemInternal_GetUsableMemoryEntry_function_end:
	.size	DemInternal_GetUsableMemoryEntry,__DemInternal_GetUsableMemoryEntry_function_end-DemInternal_GetUsableMemoryEntry
.L1407:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_SearchFreeEntry',code,cluster('DemInternal_SearchFreeEntry')
	.sect	'.text.Dem.DemInternal_SearchFreeEntry'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  1848  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  1849  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1850  * Function Name: DemInternal_SearchFreeEntry
; ..\EAS\BSW\Dem\Dem.c	  1851  *
; ..\EAS\BSW\Dem\Dem.c	  1852  * Description: Search a free entry for reported event.
; ..\EAS\BSW\Dem\Dem.c	  1853  *
; ..\EAS\BSW\Dem\Dem.c	  1854  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  1855  *
; ..\EAS\BSW\Dem\Dem.c	  1856  * Outputs: MemoryEntryId
; ..\EAS\BSW\Dem\Dem.c	  1857  *
; ..\EAS\BSW\Dem\Dem.c	  1858  * Return:
; ..\EAS\BSW\Dem\Dem.c	  1859  *
; ..\EAS\BSW\Dem\Dem.c	  1860  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  1861  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1862  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  1863  STATIC FUNC(Std_ReturnType, DEM_CODE) DemInternal_SearchFreeEntry
; Function DemInternal_SearchFreeEntry
.L915:
DemInternal_SearchFreeEntry:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  1864  (
; ..\EAS\BSW\Dem\Dem.c	  1865      P2VAR(Dem_MemIdType, AUTOMATIC, DEM_APPL_DATA) MemoryEntryId
; ..\EAS\BSW\Dem\Dem.c	  1866  )
; ..\EAS\BSW\Dem\Dem.c	  1867  {
; ..\EAS\BSW\Dem\Dem.c	  1868      Std_ReturnType Result = E_NOT_OK;
	mov	d2,#1
.L2180:

; ..\EAS\BSW\Dem\Dem.c	  1869      Dem_MemIdType MemIndex;
; ..\EAS\BSW\Dem\Dem.c	  1870  
; ..\EAS\BSW\Dem\Dem.c	  1871      if(DEM_PRIMARY_DATAENTRY_USEDNUM < DEM_CFG_MAXNUMBEREVENTENTRY_PRIMARY)
	movh.a	a15,#@his(Dem_StorageMem+2560)
	ld.hu	d0,[a15]@los(Dem_StorageMem+2560)
.L4315:
	mov	d15,#121
.L4316:
	jge.u	d0,d15,.L96
.L4317:

; ..\EAS\BSW\Dem\Dem.c	  1872      {
; ..\EAS\BSW\Dem\Dem.c	  1873          for(MemIndex = 0; MemIndex < DEM_CFG_MAXNUMBEREVENTENTRY_PRIMARY; MemIndex++)
	mov	d0,#0
.L2181:
	mov	d1,d15
.L4318:
	j	.L97
.L98:

; ..\EAS\BSW\Dem\Dem.c	  1874          {
; ..\EAS\BSW\Dem\Dem.c	  1875              if(DEM_PRIMARY_DATAENTRY_USED(MemIndex) == FALSE)
	mul	d15,d0,#56
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d3,[a15]2564
.L4319:
	jne	d3,#0,.L99
.L4320:

; ..\EAS\BSW\Dem\Dem.c	  1876              {
; ..\EAS\BSW\Dem\Dem.c	  1877                  DEM_PRIMARY_DATAENTRY_USED(MemIndex) = TRUE;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4321:
	mov	d15,#1
.L4322:
	st.b	[a15]2564,d15
.L4323:

; ..\EAS\BSW\Dem\Dem.c	  1878                  *MemoryEntryId = MemIndex;
	st.b	[a4],d0
.L4324:

; ..\EAS\BSW\Dem\Dem.c	  1879                  DEM_PRIMARY_DATAENTRY_USEDNUM++;
	movh.a	a15,#@his(Dem_StorageMem+2560)
	ld.hu	d15,[a15]@los(Dem_StorageMem+2560)
.L4325:
	add	d15,#1
	st.h	[a15]@los(Dem_StorageMem+2560),d15
.L4326:

; ..\EAS\BSW\Dem\Dem.c	  1880                  Result = E_OK;
	mov	d2,#0
.L96:

; ..\EAS\BSW\Dem\Dem.c	  1881                  break;
; ..\EAS\BSW\Dem\Dem.c	  1882              }
; ..\EAS\BSW\Dem\Dem.c	  1883          }
; ..\EAS\BSW\Dem\Dem.c	  1884      }/*if(DEM_PRIMARY_DATAENTRY_USEDNUM < DEM_CFG_MAXNUMBEREVENTENTRY_PRIMARY)*/
; ..\EAS\BSW\Dem\Dem.c	  1885  
; ..\EAS\BSW\Dem\Dem.c	  1886      return Result;
; ..\EAS\BSW\Dem\Dem.c	  1887  }
	ret
.L99:
	add	d0,#1
.L97:
	jlt.u	d0,d1,.L98
.L4327:
	ret
.L1928:
	
__DemInternal_SearchFreeEntry_function_end:
	.size	DemInternal_SearchFreeEntry,__DemInternal_SearchFreeEntry_function_end-DemInternal_SearchFreeEntry
.L1412:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_ClearOneMemoryEntry',code,cluster('DemInternal_ClearOneMemoryEntry')
	.sect	'.text.Dem.DemInternal_ClearOneMemoryEntry'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  1888  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  1889  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1890  * Function Name: DemInternal_ClearOneMemoryEntry
; ..\EAS\BSW\Dem\Dem.c	  1891  *
; ..\EAS\BSW\Dem\Dem.c	  1892  * Description: Clear one memory entry.
; ..\EAS\BSW\Dem\Dem.c	  1893  *
; ..\EAS\BSW\Dem\Dem.c	  1894  * Inputs: MemoryEntryId
; ..\EAS\BSW\Dem\Dem.c	  1895  *
; ..\EAS\BSW\Dem\Dem.c	  1896  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  1897  *
; ..\EAS\BSW\Dem\Dem.c	  1898  * Return: None
; ..\EAS\BSW\Dem\Dem.c	  1899  *
; ..\EAS\BSW\Dem\Dem.c	  1900  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  1901  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1902  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  1903  STATIC FUNC(void, DEM_CODE) DemInternal_ClearOneMemoryEntry
; Function DemInternal_ClearOneMemoryEntry
.L917:
DemInternal_ClearOneMemoryEntry:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  1904  (
; ..\EAS\BSW\Dem\Dem.c	  1905      Dem_MemIdType MemoryEntryId
; ..\EAS\BSW\Dem\Dem.c	  1906  )
; ..\EAS\BSW\Dem\Dem.c	  1907  {
; ..\EAS\BSW\Dem\Dem.c	  1908  #if((DEM_MAX_FFSIZE_OF_DTC > 0) || (DEM_MAX_EXTSIZE_OF_DTC > 0) || (DEM_MAX_J1939FFSIZE_OF_DTC > 0) || (DEM_MAX_J1939EXPFFSIZE_OF_DTC > 0))
; ..\EAS\BSW\Dem\Dem.c	  1909      uint16 DataIndex = 0;
; ..\EAS\BSW\Dem\Dem.c	  1910  #endif/*#if((DEM_MAX_FFSIZE_OF_DTC > 0) || (DEM_MAX_EXTSIZE_OF_DTC > 0))*/
; ..\EAS\BSW\Dem\Dem.c	  1911  
; ..\EAS\BSW\Dem\Dem.c	  1912  #if(DEM_MAX_FFSIZE_OF_DTC > 0)
; ..\EAS\BSW\Dem\Dem.c	  1913      for(DataIndex = 0; DataIndex < DEM_MAX_FFSIZE_OF_DTC; DataIndex++)
	mov	d15,#0
.L2182:

; ..\EAS\BSW\Dem\Dem.c	  1914      {
; ..\EAS\BSW\Dem\Dem.c	  1915          DEM_PRIMARY_FFDATA_PTR(MemoryEntryId)[DataIndex] = DEM_DATA_INVALID_U8;
	mul	d0,d4,#56
.L4332:
	mov	d1,#255
.L4333:
	mov	d2,#46
.L4334:
	j	.L102
.L103:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
.L4335:
	addsc.a	a15,a15,d15,#0
.L4336:
	st.b	[a15]2565,d1
.L4337:
	add	d15,#1
.L102:
	jlt.u	d15,d2,.L103
.L4338:

; ..\EAS\BSW\Dem\Dem.c	  1916      }
; ..\EAS\BSW\Dem\Dem.c	  1917  #endif
; ..\EAS\BSW\Dem\Dem.c	  1918  
; ..\EAS\BSW\Dem\Dem.c	  1919  #if(DEM_MAX_J1939FFSIZE_OF_DTC > 0)
; ..\EAS\BSW\Dem\Dem.c	  1920      for(DataIndex = 0; DataIndex < DEM_MAX_J1939FFSIZE_OF_DTC; DataIndex++)
; ..\EAS\BSW\Dem\Dem.c	  1921      {
; ..\EAS\BSW\Dem\Dem.c	  1922          DEM_PRIMARY_J1939DTC_FFDATA_PTR(MemoryEntryId)[DataIndex] = DEM_DATA_INVALID_U8;
; ..\EAS\BSW\Dem\Dem.c	  1923      }
; ..\EAS\BSW\Dem\Dem.c	  1924  #endif
; ..\EAS\BSW\Dem\Dem.c	  1925  
; ..\EAS\BSW\Dem\Dem.c	  1926  #if(DEM_MAX_J1939EXPFFSIZE_OF_DTC > 0)
; ..\EAS\BSW\Dem\Dem.c	  1927      for(DataIndex = 0; DataIndex < DEM_MAX_J1939EXPFFSIZE_OF_DTC; DataIndex++)
; ..\EAS\BSW\Dem\Dem.c	  1928      {
; ..\EAS\BSW\Dem\Dem.c	  1929          DEM_PRIMARY_J1939DTC_EXPFFDATA_PTR(MemoryEntryId)[DataIndex] = DEM_DATA_INVALID_U8;
; ..\EAS\BSW\Dem\Dem.c	  1930      }
; ..\EAS\BSW\Dem\Dem.c	  1931  #endif
; ..\EAS\BSW\Dem\Dem.c	  1932  
; ..\EAS\BSW\Dem\Dem.c	  1933  #if(DEM_MAX_EXTSIZE_OF_DTC > 0)
; ..\EAS\BSW\Dem\Dem.c	  1934      for(DataIndex = 0; DataIndex < DEM_MAX_EXTSIZE_OF_DTC; DataIndex++)
	mov	d0,#0
.L2183:

; ..\EAS\BSW\Dem\Dem.c	  1935      {
; ..\EAS\BSW\Dem\Dem.c	  1936          DEM_PRIMARY_EXTDATA_PTR(MemoryEntryId)[DataIndex] = DEM_DATA_INVALID_U8;
	mul	d15,d4,#56
.L4339:
	j	.L104
.L105:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4340:
	addsc.a	a15,a15,d0,#0
.L4341:
	st.b	[a15]2611,d1
.L4342:
	add	d0,#1
.L104:
	jlt.u	d0,#8,.L105
.L4343:

; ..\EAS\BSW\Dem\Dem.c	  1937      }
; ..\EAS\BSW\Dem\Dem.c	  1938  #endif
; ..\EAS\BSW\Dem\Dem.c	  1939  }
	ret
.L1932:
	
__DemInternal_ClearOneMemoryEntry_function_end:
	.size	DemInternal_ClearOneMemoryEntry,__DemInternal_ClearOneMemoryEntry_function_end-DemInternal_ClearOneMemoryEntry
.L1417:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_SearchEntryForDisplacement',code,cluster('DemInternal_SearchEntryForDisplacement')
	.sect	'.text.Dem.DemInternal_SearchEntryForDisplacement'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  1940  
; ..\EAS\BSW\Dem\Dem.c	  1941  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  1942  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1943  * Function Name: DemInternal_SearchEntryForDisplacement
; ..\EAS\BSW\Dem\Dem.c	  1944  *
; ..\EAS\BSW\Dem\Dem.c	  1945  * Description: Event displacement
; ..\EAS\BSW\Dem\Dem.c	  1946  *
; ..\EAS\BSW\Dem\Dem.c	  1947  * Inputs: DtcId
; ..\EAS\BSW\Dem\Dem.c	  1948  *
; ..\EAS\BSW\Dem\Dem.c	  1949  * Outputs: MemoryEntryId
; ..\EAS\BSW\Dem\Dem.c	  1950  *
; ..\EAS\BSW\Dem\Dem.c	  1951  * Return:
; ..\EAS\BSW\Dem\Dem.c	  1952  *
; ..\EAS\BSW\Dem\Dem.c	  1953  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  1954  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  1955  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  1956  STATIC FUNC(Std_ReturnType, DEM_CODE) DemInternal_SearchEntryForDisplacement
; Function DemInternal_SearchEntryForDisplacement
.L919:
DemInternal_SearchEntryForDisplacement:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  1957  (
; ..\EAS\BSW\Dem\Dem.c	  1958      uint16 DtcId,
; ..\EAS\BSW\Dem\Dem.c	  1959      P2VAR(Dem_MemIdType, AUTOMATIC, DEM_APPL_DATA) MemoryEntryId
; ..\EAS\BSW\Dem\Dem.c	  1960  )
; ..\EAS\BSW\Dem\Dem.c	  1961  {
; ..\EAS\BSW\Dem\Dem.c	  1962      /*SWS_Dem_00810*/
; ..\EAS\BSW\Dem\Dem.c	  1963      Std_ReturnType Result = E_NOT_OK;
	mov	d2,#1
.L2184:

; ..\EAS\BSW\Dem\Dem.c	  1964  #if(DEM_CFG_RESETCONFIRMEDBITONOVERFLOW == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  1965      Dem_UdsStatusByteType DtcStatus;
; ..\EAS\BSW\Dem\Dem.c	  1966  #endif
; ..\EAS\BSW\Dem\Dem.c	  1967  #if(DEM_CFG_EVENTDISPLACEMENTSTRATEGY != DEM_DISPLACEMENT_NONE)
; ..\EAS\BSW\Dem\Dem.c	  1968      uint16 EventId1 = 0;
; ..\EAS\BSW\Dem\Dem.c	  1969      uint16 EventId2 = 0;
; ..\EAS\BSW\Dem\Dem.c	  1970      uint16 DtcIndex1 = 0;
; ..\EAS\BSW\Dem\Dem.c	  1971      uint16 DtcIndex2 = 0;
; ..\EAS\BSW\Dem\Dem.c	  1972      boolean DtcActive1 = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  1973      boolean DtcActive2 = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  1974      Dem_PriorityType LowestPri = DEM_CFG_DTC_PRIORITY(DtcId);
; ..\EAS\BSW\Dem\Dem.c	  1975  #endif/*#if(DEM_CFG_EVENTDISPLACEMENTSTRATEGY != DEM_DISPLACEMENT_NONE)*/
; ..\EAS\BSW\Dem\Dem.c	  1976  
; ..\EAS\BSW\Dem\Dem.c	  1977      /*SWS_Dem_00401*//*SWS_Dem_00402*/
; ..\EAS\BSW\Dem\Dem.c	  1978  #if(DEM_CFG_EVENTDISPLACEMENTSTRATEGY != DEM_DISPLACEMENT_NONE)
; ..\EAS\BSW\Dem\Dem.c	  1979      for(EventId1 = 0; EventId1 < DEM_NUM_OF_EVENT; EventId1++)
; ..\EAS\BSW\Dem\Dem.c	  1980      {
; ..\EAS\BSW\Dem\Dem.c	  1981          DtcIndex1 = DEM_CFG_EVENT_DTCREF(EventId1);
; ..\EAS\BSW\Dem\Dem.c	  1982  
; ..\EAS\BSW\Dem\Dem.c	  1983  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  1984  #if(DEM_CFG_OBD_EVENT_DISPLACEMENT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  1985          if((DEM_DTC_DATAENTRYREF(DtcIndex1) != DEM_DATA_INVALID_U16)
; ..\EAS\BSW\Dem\Dem.c	  1986              && (FALSE == DemInternal_IgnoreFoundEntry(EventId1)))
; ..\EAS\BSW\Dem\Dem.c	  1987  #else/*#if(DEM_CFG_OBD_EVENT_DISPLACEMENT == STD_ON)*/
; ..\EAS\BSW\Dem\Dem.c	  1988          if(DEM_DTC_DATAENTRYREF(DtcIndex1) != DEM_DATA_INVALID_U16)
; ..\EAS\BSW\Dem\Dem.c	  1989  #endif/*#if(DEM_CFG_OBD_EVENT_DISPLACEMENT == STD_ON)*/
; ..\EAS\BSW\Dem\Dem.c	  1990  #else/*#if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))*/
; ..\EAS\BSW\Dem\Dem.c	  1991          if(DEM_DTC_DATAENTRYREF(DtcIndex1) != DEM_DATA_INVALID_U16)
; ..\EAS\BSW\Dem\Dem.c	  1992  #endif/*#if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))*/
; ..\EAS\BSW\Dem\Dem.c	  1993          {
; ..\EAS\BSW\Dem\Dem.c	  1994              /*SWS_Dem_00406*//*SWS_Dem_00403*/
; ..\EAS\BSW\Dem\Dem.c	  1995              if(LowestPri < DEM_CFG_DTC_PRIORITY(DtcIndex1))
; ..\EAS\BSW\Dem\Dem.c	  1996              {
; ..\EAS\BSW\Dem\Dem.c	  1997                  LowestPri = DEM_CFG_DTC_PRIORITY(DtcIndex1);
; ..\EAS\BSW\Dem\Dem.c	  1998                  DtcIndex2 = DtcIndex1;
; ..\EAS\BSW\Dem\Dem.c	  1999                  EventId2 = EventId1;
; ..\EAS\BSW\Dem\Dem.c	  2000                  *MemoryEntryId = DEM_DTC_DATAENTRYREF(DtcIndex1);
; ..\EAS\BSW\Dem\Dem.c	  2001                  Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  2002              }
; ..\EAS\BSW\Dem\Dem.c	  2003              else if(LowestPri == DEM_CFG_DTC_PRIORITY(DtcIndex1))
; ..\EAS\BSW\Dem\Dem.c	  2004              {
; ..\EAS\BSW\Dem\Dem.c	  2005  #if(DEM_CFG_EVENTDISPLACEMENTSTRATEGY == DEM_DISPLACEMENT_FULL)
; ..\EAS\BSW\Dem\Dem.c	  2006                  DtcActive1 = DemInternal_IsDtcActive(DtcIndex1);
; ..\EAS\BSW\Dem\Dem.c	  2007                  /*SWS_Dem_00404*/
; ..\EAS\BSW\Dem\Dem.c	  2008                  if(Result == E_NOT_OK)/*None event entry has been searched for displacement.*/
; ..\EAS\BSW\Dem\Dem.c	  2009                  {
; ..\EAS\BSW\Dem\Dem.c	  2010                      if(DtcActive1 == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  2011                      {
; ..\EAS\BSW\Dem\Dem.c	  2012                          LowestPri = DEM_CFG_DTC_PRIORITY(DtcIndex1);
; ..\EAS\BSW\Dem\Dem.c	  2013                          DtcIndex2 = DtcIndex1;
; ..\EAS\BSW\Dem\Dem.c	  2014                          EventId2 = EventId1;
; ..\EAS\BSW\Dem\Dem.c	  2015                          *MemoryEntryId = DEM_DTC_DATAENTRYREF(DtcIndex1);
; ..\EAS\BSW\Dem\Dem.c	  2016                          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  2017                      }
; ..\EAS\BSW\Dem\Dem.c	  2018                  }
; ..\EAS\BSW\Dem\Dem.c	  2019                  else/*Has found at least one memory entry used by lower priority DTC.*/
; ..\EAS\BSW\Dem\Dem.c	  2020                  {
; ..\EAS\BSW\Dem\Dem.c	  2021                      DtcActive2 = DemInternal_IsDtcActive(DtcIndex2);
; ..\EAS\BSW\Dem\Dem.c	  2022  
; ..\EAS\BSW\Dem\Dem.c	  2023                      if(((DtcActive1 == FALSE) && (DtcActive2 == TRUE)) \ 
; ..\EAS\BSW\Dem\Dem.c	  2024                          || (DemInternal_IsDtcOlder(EventId1, EventId2)))
; ..\EAS\BSW\Dem\Dem.c	  2025                      {
; ..\EAS\BSW\Dem\Dem.c	  2026                          /*SWS_Dem_00405*/
; ..\EAS\BSW\Dem\Dem.c	  2027                          LowestPri = DEM_CFG_DTC_PRIORITY(DtcIndex1);
; ..\EAS\BSW\Dem\Dem.c	  2028                          DtcIndex2 = DtcIndex1;
; ..\EAS\BSW\Dem\Dem.c	  2029                          EventId2 = EventId1;
; ..\EAS\BSW\Dem\Dem.c	  2030                          *MemoryEntryId = DEM_DTC_DATAENTRYREF(DtcIndex1);
; ..\EAS\BSW\Dem\Dem.c	  2031                          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  2032                      }
; ..\EAS\BSW\Dem\Dem.c	  2033                  }
; ..\EAS\BSW\Dem\Dem.c	  2034  #else/*DEM_CFG_EVENTDISPLACEMENTSTRATEGY == DEM_DISPLACEMENT_PRIO_OCC*/
; ..\EAS\BSW\Dem\Dem.c	  2035                  if((DEM_CFG_DTC_PRIORITY(DtcId) < DEM_CFG_DTC_PRIORITY(DtcIndex1)) \ 
; ..\EAS\BSW\Dem\Dem.c	  2036                      && (DemInternal_IsDtcOlder(EventId1, EventId2)))
; ..\EAS\BSW\Dem\Dem.c	  2037                  {
; ..\EAS\BSW\Dem\Dem.c	  2038                      /*SWS_Dem_00405*/
; ..\EAS\BSW\Dem\Dem.c	  2039                      LowestPri = DEM_CFG_DTC_PRIORITY(DtcIndex1);
; ..\EAS\BSW\Dem\Dem.c	  2040                      DtcIndex2 = DtcIndex1;
; ..\EAS\BSW\Dem\Dem.c	  2041                      EventId2 = EventId1;
; ..\EAS\BSW\Dem\Dem.c	  2042                      *MemoryEntryId = DEM_DTC_DATAENTRYREF(DtcIndex1);
; ..\EAS\BSW\Dem\Dem.c	  2043                      Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  2044                  }
; ..\EAS\BSW\Dem\Dem.c	  2045  #endif/*#if(DEM_CFG_EVENTDISPLACEMENTSTRATEGY == DEM_DISPLACEMENT_FULL)*/
; ..\EAS\BSW\Dem\Dem.c	  2046              }
; ..\EAS\BSW\Dem\Dem.c	  2047              else
; ..\EAS\BSW\Dem\Dem.c	  2048              {
; ..\EAS\BSW\Dem\Dem.c	  2049                  /*do nothing*/
; ..\EAS\BSW\Dem\Dem.c	  2050              }
; ..\EAS\BSW\Dem\Dem.c	  2051          }
; ..\EAS\BSW\Dem\Dem.c	  2052      }
; ..\EAS\BSW\Dem\Dem.c	  2053  
; ..\EAS\BSW\Dem\Dem.c	  2054      /*Clear the displacement memory entry.*/
; ..\EAS\BSW\Dem\Dem.c	  2055      if(Result == E_OK)
; ..\EAS\BSW\Dem\Dem.c	  2056      {
; ..\EAS\BSW\Dem\Dem.c	  2057          DEM_DTC_DATAENTRYREF(DtcIndex2) = DEM_DATA_INVALID_U16;
; ..\EAS\BSW\Dem\Dem.c	  2058          /*SWS_Dem_00408*//*Clear the stored data*/
; ..\EAS\BSW\Dem\Dem.c	  2059          DemInternal_ClearOneMemoryEntry(*MemoryEntryId);
; ..\EAS\BSW\Dem\Dem.c	  2060  
; ..\EAS\BSW\Dem\Dem.c	  2061  #if(DEM_CFG_RESETCONFIRMEDBITONOVERFLOW == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  2062          DtcStatus = DEM_DTC_STATUS(DtcIndex2);
; ..\EAS\BSW\Dem\Dem.c	  2063          /*SWS_Dem_00409*/
; ..\EAS\BSW\Dem\Dem.c	  2064          DtcStatus = DEM_CLEAR_UDS_STATUS_PDTC(DtcStatus);
; ..\EAS\BSW\Dem\Dem.c	  2065          DtcStatus = DEM_CLEAR_UDS_STATUS_CDTC(DtcStatus);
; ..\EAS\BSW\Dem\Dem.c	  2066  
; ..\EAS\BSW\Dem\Dem.c	  2067          /*SWS_Dem_01186*/
; ..\EAS\BSW\Dem\Dem.c	  2068  #if(DEM_CFG_STATUSBITHANDLING_TFSLC == DEM_STATUS_BIT_AGING_AND_DISPLACEMENT)
; ..\EAS\BSW\Dem\Dem.c	  2069          DtcStatus = DEM_CLEAR_UDS_STATUS_TFSLC(DtcStatus);
; ..\EAS\BSW\Dem\Dem.c	  2070  #endif
; ..\EAS\BSW\Dem\Dem.c	  2071          DEM_DTC_STATUS(DtcIndex2) = DtcStatus;
; ..\EAS\BSW\Dem\Dem.c	  2072  #endif
; ..\EAS\BSW\Dem\Dem.c	  2073      }
; ..\EAS\BSW\Dem\Dem.c	  2074  #endif/*#if(DEM_CFG_EVENTDISPLACEMENTSTRATEGY != DEM_DISPLACEMENT_NONE)*/
; ..\EAS\BSW\Dem\Dem.c	  2075  
; ..\EAS\BSW\Dem\Dem.c	  2076  #if(DEM_CFG_RESETCONFIRMEDBITONOVERFLOW == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  2077      if(Result == E_NOT_OK)
; ..\EAS\BSW\Dem\Dem.c	  2078      {
; ..\EAS\BSW\Dem\Dem.c	  2079          DtcStatus = DEM_DTC_STATUS(DtcId);
	mul	d15,d4,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]1864
	and	d0,d0,#243
.L2185:

; ..\EAS\BSW\Dem\Dem.c	  2080          DtcStatus = DEM_CLEAR_UDS_STATUS_PDTC(DtcStatus);
; ..\EAS\BSW\Dem\Dem.c	  2081          DtcStatus = DEM_CLEAR_UDS_STATUS_CDTC(DtcStatus);
; ..\EAS\BSW\Dem\Dem.c	  2082          DEM_DTC_STATUS(DtcId) = DtcStatus;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4348:
	st.b	[a15]1864,d0
.L4349:

; ..\EAS\BSW\Dem\Dem.c	  2083      }
; ..\EAS\BSW\Dem\Dem.c	  2084  #endif
; ..\EAS\BSW\Dem\Dem.c	  2085  
; ..\EAS\BSW\Dem\Dem.c	  2086      return Result;
; ..\EAS\BSW\Dem\Dem.c	  2087  }
	ret
.L1935:
	
__DemInternal_SearchEntryForDisplacement_function_end:
	.size	DemInternal_SearchEntryForDisplacement,__DemInternal_SearchEntryForDisplacement_function_end-DemInternal_SearchEntryForDisplacement
.L1422:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_GetEventInternalData',code,cluster('DemInternal_GetEventInternalData')
	.sect	'.text.Dem.DemInternal_GetEventInternalData'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  2088  
; ..\EAS\BSW\Dem\Dem.c	  2089  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  2090  #if(DEM_CFG_OBD_EVENT_DISPLACEMENT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  2091  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  2092  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2093  * Function Name: DemInternal_IgnoreFoundEntry
; ..\EAS\BSW\Dem\Dem.c	  2094  *
; ..\EAS\BSW\Dem\Dem.c	  2095  * Description: Check whether the found entry should be ignored.
; ..\EAS\BSW\Dem\Dem.c	  2096  *
; ..\EAS\BSW\Dem\Dem.c	  2097  * Inputs: DtcId
; ..\EAS\BSW\Dem\Dem.c	  2098  *
; ..\EAS\BSW\Dem\Dem.c	  2099  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  2100  *
; ..\EAS\BSW\Dem\Dem.c	  2101  * Return: TRUE: active, FALSE: passive
; ..\EAS\BSW\Dem\Dem.c	  2102  *
; ..\EAS\BSW\Dem\Dem.c	  2103  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  2104  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2105  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  2106  STATIC FUNC(boolean, DEM_CODE) DemInternal_IgnoreFoundEntry
; ..\EAS\BSW\Dem\Dem.c	  2107  (
; ..\EAS\BSW\Dem\Dem.c	  2108      uint16 EventId
; ..\EAS\BSW\Dem\Dem.c	  2109  )
; ..\EAS\BSW\Dem\Dem.c	  2110  {
; ..\EAS\BSW\Dem\Dem.c	  2111      uint8 Index;
; ..\EAS\BSW\Dem\Dem.c	  2112      uint8 IndicatorId;
; ..\EAS\BSW\Dem\Dem.c	  2113      uint16 StatusPos;
; ..\EAS\BSW\Dem\Dem.c	  2114      boolean Ignore = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  2115      uint16 DtcId = DEM_CFG_EVENT_DTCREF(EventId);
; ..\EAS\BSW\Dem\Dem.c	  2116      Dem_UdsStatusByteType DtcStatus = DEM_DTC_STATUS(DtcId);
; ..\EAS\BSW\Dem\Dem.c	  2117  
; ..\EAS\BSW\Dem\Dem.c	  2118      if(DEM_CFG_DTC_OBDDTCREF(DtcId) == NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  2119      {
; ..\EAS\BSW\Dem\Dem.c	  2120          Ignore = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  2121      }
; ..\EAS\BSW\Dem\Dem.c	  2122      else if(DEM_OBD_FF_EVENT == EventId)
; ..\EAS\BSW\Dem\Dem.c	  2123      {
; ..\EAS\BSW\Dem\Dem.c	  2124          Ignore = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  2125      }
; ..\EAS\BSW\Dem\Dem.c	  2126      else if(DEM_TEST_UDS_STATUS_PDTC(DtcStatus))
; ..\EAS\BSW\Dem\Dem.c	  2127      {
; ..\EAS\BSW\Dem\Dem.c	  2128          Ignore = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  2129      }
; ..\EAS\BSW\Dem\Dem.c	  2130      else if((DEM_CFG_EVENT_INDICATOR_NUM(EventId) > (uint8)0) \ 
; ..\EAS\BSW\Dem\Dem.c	  2131          && (DEM_CFG_EVENT_INDICATOR(EventId) != NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	  2132      {
; ..\EAS\BSW\Dem\Dem.c	  2133          for(Index = 0; Index < DEM_CFG_EVENT_INDICATOR_NUM(EventId); Index++)
; ..\EAS\BSW\Dem\Dem.c	  2134          {
; ..\EAS\BSW\Dem\Dem.c	  2135              IndicatorId = DEM_CFG_EVENT_INDICATOR_ID(EventId,Index);
; ..\EAS\BSW\Dem\Dem.c	  2136              StatusPos = DEM_CFG_EVENT_INDICATOR_OFFSET(EventId,Index) \ 
; ..\EAS\BSW\Dem\Dem.c	  2137                              + DEM_CFG_INDICATOR_STATUS_START(IndicatorId);
; ..\EAS\BSW\Dem\Dem.c	  2138  
; ..\EAS\BSW\Dem\Dem.c	  2139              if((IndicatorId == DEM_CFG_MILINDICATORREF) \ 
; ..\EAS\BSW\Dem\Dem.c	  2140                  && (DEM_INDICATOR_STATUS(StatusPos) != DEM_INDICATOR_OFF))
; ..\EAS\BSW\Dem\Dem.c	  2141              {
; ..\EAS\BSW\Dem\Dem.c	  2142                  Ignore = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  2143                  break;
; ..\EAS\BSW\Dem\Dem.c	  2144              }
; ..\EAS\BSW\Dem\Dem.c	  2145          }
; ..\EAS\BSW\Dem\Dem.c	  2146      }
; ..\EAS\BSW\Dem\Dem.c	  2147      else
; ..\EAS\BSW\Dem\Dem.c	  2148      {
; ..\EAS\BSW\Dem\Dem.c	  2149          /*do nothing*/
; ..\EAS\BSW\Dem\Dem.c	  2150      }
; ..\EAS\BSW\Dem\Dem.c	  2151      return Ignore;
; ..\EAS\BSW\Dem\Dem.c	  2152  }
; ..\EAS\BSW\Dem\Dem.c	  2153  #endif
; ..\EAS\BSW\Dem\Dem.c	  2154  #endif
; ..\EAS\BSW\Dem\Dem.c	  2155  
; ..\EAS\BSW\Dem\Dem.c	  2156  #if(DEM_CFG_EVENTDISPLACEMENTSTRATEGY == DEM_DISPLACEMENT_FULL)
; ..\EAS\BSW\Dem\Dem.c	  2157  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  2158  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2159  * Function Name: DemInternal_IsDtcActive
; ..\EAS\BSW\Dem\Dem.c	  2160  *
; ..\EAS\BSW\Dem\Dem.c	  2161  * Description: Get DTC Active/Passive status.
; ..\EAS\BSW\Dem\Dem.c	  2162  *
; ..\EAS\BSW\Dem\Dem.c	  2163  * Inputs: DtcId
; ..\EAS\BSW\Dem\Dem.c	  2164  *
; ..\EAS\BSW\Dem\Dem.c	  2165  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  2166  *
; ..\EAS\BSW\Dem\Dem.c	  2167  * Return: TRUE: active, FALSE: passive
; ..\EAS\BSW\Dem\Dem.c	  2168  *
; ..\EAS\BSW\Dem\Dem.c	  2169  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  2170  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2171  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  2172  STATIC FUNC(boolean, DEM_CODE) DemInternal_IsDtcActive
; ..\EAS\BSW\Dem\Dem.c	  2173  (
; ..\EAS\BSW\Dem\Dem.c	  2174      uint16 DtcId
; ..\EAS\BSW\Dem\Dem.c	  2175  )
; ..\EAS\BSW\Dem\Dem.c	  2176  {
; ..\EAS\BSW\Dem\Dem.c	  2177      boolean DtcActive = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  2178      Dem_UdsStatusByteType DtcStatus = DEM_DTC_STATUS(DtcId);
; ..\EAS\BSW\Dem\Dem.c	  2179  
; ..\EAS\BSW\Dem\Dem.c	  2180      /*SWS_Dem_00692*//*SWS_Dem_00693*/
; ..\EAS\BSW\Dem\Dem.c	  2181      if(DEM_TEST_UDS_STATUS_TF(DtcStatus))
; ..\EAS\BSW\Dem\Dem.c	  2182      {
; ..\EAS\BSW\Dem\Dem.c	  2183          DtcActive = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  2184      }
; ..\EAS\BSW\Dem\Dem.c	  2185      else
; ..\EAS\BSW\Dem\Dem.c	  2186      {
; ..\EAS\BSW\Dem\Dem.c	  2187          DtcActive = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  2188      }
; ..\EAS\BSW\Dem\Dem.c	  2189      return DtcActive;
; ..\EAS\BSW\Dem\Dem.c	  2190  }
; ..\EAS\BSW\Dem\Dem.c	  2191  #endif/*#if(DEM_CFG_EVENTDISPLACEMENTSTRATEGY == DEM_DISPLACEMENT_FULL)*/
; ..\EAS\BSW\Dem\Dem.c	  2192  
; ..\EAS\BSW\Dem\Dem.c	  2193  #if(DEM_CFG_EVENTDISPLACEMENTSTRATEGY != DEM_DISPLACEMENT_NONE)
; ..\EAS\BSW\Dem\Dem.c	  2194  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  2195  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2196  * Function Name: DemInternal_IsDtcOlder
; ..\EAS\BSW\Dem\Dem.c	  2197  *
; ..\EAS\BSW\Dem\Dem.c	  2198  * Description: Check whether the fault Event1 is older than Event2.
; ..\EAS\BSW\Dem\Dem.c	  2199  *
; ..\EAS\BSW\Dem\Dem.c	  2200  * Inputs: Event1, Event2
; ..\EAS\BSW\Dem\Dem.c	  2201  *
; ..\EAS\BSW\Dem\Dem.c	  2202  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  2203  *
; ..\EAS\BSW\Dem\Dem.c	  2204  * Return:
; ..\EAS\BSW\Dem\Dem.c	  2205  *
; ..\EAS\BSW\Dem\Dem.c	  2206  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  2207  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2208  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  2209  STATIC FUNC(boolean, DEM_CODE) DemInternal_IsDtcOlder
; ..\EAS\BSW\Dem\Dem.c	  2210  (
; ..\EAS\BSW\Dem\Dem.c	  2211      uint16 Event1,
; ..\EAS\BSW\Dem\Dem.c	  2212      uint16 Event2
; ..\EAS\BSW\Dem\Dem.c	  2213  )
; ..\EAS\BSW\Dem\Dem.c	  2214  {
; ..\EAS\BSW\Dem\Dem.c	  2215      boolean E1OlderThanE2 = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  2216  
; ..\EAS\BSW\Dem\Dem.c	  2217      if(DEM_EVENT_OCCCTR(Event1) > DEM_EVENT_OCCCTR(Event2))
; ..\EAS\BSW\Dem\Dem.c	  2218      {
; ..\EAS\BSW\Dem\Dem.c	  2219          E1OlderThanE2 = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  2220      }
; ..\EAS\BSW\Dem\Dem.c	  2221      return E1OlderThanE2;
; ..\EAS\BSW\Dem\Dem.c	  2222  }
; ..\EAS\BSW\Dem\Dem.c	  2223  #endif
; ..\EAS\BSW\Dem\Dem.c	  2224  
; ..\EAS\BSW\Dem\Dem.c	  2225  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  2226  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2227  * Function Name: DemInternal_GetEventInternalData
; ..\EAS\BSW\Dem\Dem.c	  2228  *
; ..\EAS\BSW\Dem\Dem.c	  2229  * Description:
; ..\EAS\BSW\Dem\Dem.c	  2230  *
; ..\EAS\BSW\Dem\Dem.c	  2231  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  2232  *
; ..\EAS\BSW\Dem\Dem.c	  2233  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  2234  *
; ..\EAS\BSW\Dem\Dem.c	  2235  * Return:
; ..\EAS\BSW\Dem\Dem.c	  2236  *
; ..\EAS\BSW\Dem\Dem.c	  2237  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  2238  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2239  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  2240  STATIC FUNC(uint8, DEM_CODE) DemInternal_GetEventInternalData
; Function DemInternal_GetEventInternalData
.L921:
DemInternal_GetEventInternalData:	.type	func
	sub.a	a10,#8
.L2186:

; ..\EAS\BSW\Dem\Dem.c	  2241  (
; ..\EAS\BSW\Dem\Dem.c	  2242      uint16 EventId,
; ..\EAS\BSW\Dem\Dem.c	  2243      Dem_InternalDataElementType DataType
; ..\EAS\BSW\Dem\Dem.c	  2244  )
; ..\EAS\BSW\Dem\Dem.c	  2245  {
; ..\EAS\BSW\Dem\Dem.c	  2246      uint8 Data;
; ..\EAS\BSW\Dem\Dem.c	  2247      uint16 DtcId = DEM_CFG_EVENT_DTCREF(EventId);
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]4
.L2188:

; ..\EAS\BSW\Dem\Dem.c	  2248      Std_ReturnType ret = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  2249  
; ..\EAS\BSW\Dem\Dem.c	  2250      if(DataType == DEM_AGINGCTR_DOWNCNT)
	jne	d5,#0,.L107
.L4354:

; ..\EAS\BSW\Dem\Dem.c	  2251      {
; ..\EAS\BSW\Dem\Dem.c	  2252          /*SWS_Dem_00472*//*SWS_Dem_00673*/
; ..\EAS\BSW\Dem\Dem.c	  2253          if(DEM_CFG_DTC_AGING_ALLOWED(DtcId) == TRUE)
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d0,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L4355:
	jne	d15,#1,.L108
.L4356:

; ..\EAS\BSW\Dem\Dem.c	  2254          {
; ..\EAS\BSW\Dem\Dem.c	  2255              Data = DEM_CFG_AGINGCYCLECOUNTERTHRESHOLD(DtcId) - DEM_DTC_AGINGCNT(DtcId);/*1 byte*/
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d0,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d1,[a15]2
.L4357:
	mul	d15,d0,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]1866
.L4358:
	sub	d1,d15
.L4359:
	st.b	[a10],d1
.L4360:
	j	.L109
.L107:

; ..\EAS\BSW\Dem\Dem.c	  2256          }
; ..\EAS\BSW\Dem\Dem.c	  2257          else
; ..\EAS\BSW\Dem\Dem.c	  2258          {
; ..\EAS\BSW\Dem\Dem.c	  2259              /*SWS_Dem_01043*/
; ..\EAS\BSW\Dem\Dem.c	  2260              Data = DEM_DATA_U8_FF;
; ..\EAS\BSW\Dem\Dem.c	  2261          }
; ..\EAS\BSW\Dem\Dem.c	  2262      }
; ..\EAS\BSW\Dem\Dem.c	  2263      else if(DataType == DEM_AGINGCTR_UPCNT)
	jne	d5,#1,.L110
.L4361:

; ..\EAS\BSW\Dem\Dem.c	  2264      {
; ..\EAS\BSW\Dem\Dem.c	  2265          /*SWS_Dem_00472*//*SWS_Dem_00643*/
; ..\EAS\BSW\Dem\Dem.c	  2266          if(DEM_CFG_DTC_AGING_ALLOWED(DtcId) == TRUE)
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d0,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L4362:
	jne	d15,#1,.L111
.L4363:

; ..\EAS\BSW\Dem\Dem.c	  2267          {
; ..\EAS\BSW\Dem\Dem.c	  2268              Data = DEM_DTC_AGINGCNT(DtcId);/*1 byte*/
	mul	d15,d0,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]1866
.L4364:
	j	.L112
.L110:

; ..\EAS\BSW\Dem\Dem.c	  2269          }
; ..\EAS\BSW\Dem\Dem.c	  2270          else
; ..\EAS\BSW\Dem\Dem.c	  2271          {
; ..\EAS\BSW\Dem\Dem.c	  2272              /*SWS_Dem_01044*/
; ..\EAS\BSW\Dem\Dem.c	  2273              Data = 0;
; ..\EAS\BSW\Dem\Dem.c	  2274          }
; ..\EAS\BSW\Dem\Dem.c	  2275      }
; ..\EAS\BSW\Dem\Dem.c	  2276      else if(DataType == DEM_AGED_COUNTER)
	mov	d15,#15
.L4365:
	jne	d15,d5,.L113
.L4366:

; ..\EAS\BSW\Dem\Dem.c	  2277      {
; ..\EAS\BSW\Dem\Dem.c	  2278          /*User requirement*/
; ..\EAS\BSW\Dem\Dem.c	  2279          Data = DEM_DTC_AGEDCNT(DtcId);/*1 byte*/
	mul	d15,d0,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]1867
.L4367:
	j	.L114
.L113:

; ..\EAS\BSW\Dem\Dem.c	  2280      }
; ..\EAS\BSW\Dem\Dem.c	  2281      else if(DataType == DEM_CURRENT_FDC)
	jne	d5,#2,.L115
.L4368:

; ..\EAS\BSW\Dem\Dem.c	  2282      {
; ..\EAS\BSW\Dem\Dem.c	  2283          /*SWS_Dem_01084*//*SWS_Dem_01045*/
; ..\EAS\BSW\Dem\Dem.c	  2284          /*1 byte*/
; ..\EAS\BSW\Dem\Dem.c	  2285          ret = Dem_GetFaultDetectionCounter(EventId, (sint8*)&Data);
	mov.aa	a4,a10
.L4369:
	call	Dem_GetFaultDetectionCounter
.L2187:

; ..\EAS\BSW\Dem\Dem.c	  2286          if(ret != E_OK)
	jeq	d2,#0,.L116
.L108:

; ..\EAS\BSW\Dem\Dem.c	  2287          {
; ..\EAS\BSW\Dem\Dem.c	  2288              Data = DEM_DATA_INVALID_U8;
	mov	d15,#255
.L4370:
	j	.L117
.L115:

; ..\EAS\BSW\Dem\Dem.c	  2289          }
; ..\EAS\BSW\Dem\Dem.c	  2290      }
; ..\EAS\BSW\Dem\Dem.c	  2291      else if(DataType == DEM_CYCLES_SINCE_FIRST_FAILED)
	jne	d5,#3,.L118
.L4371:

; ..\EAS\BSW\Dem\Dem.c	  2292      {
; ..\EAS\BSW\Dem\Dem.c	  2293          /*SWS_Dem_00821*/
; ..\EAS\BSW\Dem\Dem.c	  2294          Data = DEM_EVENT_CSFF(EventId);/*1 byte*/
	sha	d4,#4
.L2190:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d4,#0
	ld.bu	d15,[a15]20
.L4372:
	j	.L119
.L118:

; ..\EAS\BSW\Dem\Dem.c	  2295      }
; ..\EAS\BSW\Dem\Dem.c	  2296      else if(DataType == DEM_CYCLES_SINCE_LAST_FAILED)
	jne	d5,#4,.L120
.L4373:

; ..\EAS\BSW\Dem\Dem.c	  2297      {
; ..\EAS\BSW\Dem\Dem.c	  2298          /*SWS_Dem_00820*/
; ..\EAS\BSW\Dem\Dem.c	  2299          Data = DEM_EVENT_CSLF(EventId);/*1 byte*/
	sha	d4,#4
.L2191:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d4,#0
	ld.bu	d15,[a15]19
.L4374:
	j	.L121
.L120:

; ..\EAS\BSW\Dem\Dem.c	  2300      }
; ..\EAS\BSW\Dem\Dem.c	  2301      else if(DataType == DEM_FAILED_CYCLES)
	jne	d5,#5,.L122
.L4375:

; ..\EAS\BSW\Dem\Dem.c	  2302      {
; ..\EAS\BSW\Dem\Dem.c	  2303          /*SWS_Dem_00822*/
; ..\EAS\BSW\Dem\Dem.c	  2304          Data = DEM_EVENT_FCSLC(EventId);/*1 byte*/
	sha	d4,#4
.L2192:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d4,#0
	ld.bu	d15,[a15]21
.L4376:
	j	.L123
.L122:

; ..\EAS\BSW\Dem\Dem.c	  2305      }
; ..\EAS\BSW\Dem\Dem.c	  2306      else if(DataType == DEM_MAX_FDC_DURING_CURRENT_CYCLE)
	jne	d5,#6,.L124
.L4377:

; ..\EAS\BSW\Dem\Dem.c	  2307      {
; ..\EAS\BSW\Dem\Dem.c	  2308          /*SWS_Dem_00788*//*SWS_Dem_00819*//*SWS_Dem_00792*/
; ..\EAS\BSW\Dem\Dem.c	  2309          Data = DEM_EVENT_MAXFDCDCC(EventId);/*1 byte*/
	sha	d4,#4
.L2193:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d4,#0
	ld.b	d15,[a15]17
.L4378:
	st.b	[a10],d15
.L4379:
	j	.L125
.L124:

; ..\EAS\BSW\Dem\Dem.c	  2310      }
; ..\EAS\BSW\Dem\Dem.c	  2311      else if(DataType == DEM_MAX_FDC_SINCE_LAST_CLEAR)
	jne	d5,#7,.L126
.L4380:

; ..\EAS\BSW\Dem\Dem.c	  2312      {
; ..\EAS\BSW\Dem\Dem.c	  2313          /*SWS_Dem_00818*/
; ..\EAS\BSW\Dem\Dem.c	  2314          Data = DEM_EVENT_MAXFDCSLC(EventId);/*1 byte*/
	sha	d4,#4
.L2194:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d4,#0
	ld.b	d15,[a15]18
.L4381:
	st.b	[a10],d15
.L4382:
	j	.L127
.L126:

; ..\EAS\BSW\Dem\Dem.c	  2315      }
; ..\EAS\BSW\Dem\Dem.c	  2316      else if(DataType == DEM_OCCCTR)
	mov	d15,#8
.L4383:
	jne	d15,d5,.L128
.L4384:

; ..\EAS\BSW\Dem\Dem.c	  2317      {
; ..\EAS\BSW\Dem\Dem.c	  2318          /*SWS_Dem_00471*/
; ..\EAS\BSW\Dem\Dem.c	  2319          Data = DEM_EVENT_OCCCTR(EventId);/*1 byte*/
	sha	d4,#4
.L2195:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d4,#0
	ld.bu	d15,[a15]9
.L4385:
	j	.L129
.L128:

; ..\EAS\BSW\Dem\Dem.c	  2320      }
; ..\EAS\BSW\Dem\Dem.c	  2321  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  2322      else if(DataType == DEM_OBD_PASSED_CYCLES_SINCE_LAST_FAILED)
; ..\EAS\BSW\Dem\Dem.c	  2323      {
; ..\EAS\BSW\Dem\Dem.c	  2324          Data = DEM_EVENT_OBD_PCSLF(EventId);
; ..\EAS\BSW\Dem\Dem.c	  2325      }
; ..\EAS\BSW\Dem\Dem.c	  2326  #endif
; ..\EAS\BSW\Dem\Dem.c	  2327  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  2328      else if(DataType == DEM_PASSED_CYCLES_SINCE_LAST_FAILED)
; ..\EAS\BSW\Dem\Dem.c	  2329      {
; ..\EAS\BSW\Dem\Dem.c	  2330          Data = DEM_EVENT_CMA_PCSLF(EventId);/*1 byte*/
; ..\EAS\BSW\Dem\Dem.c	  2331      }
; ..\EAS\BSW\Dem\Dem.c	  2332      else if(DataType == DEM_CMA_SI30)
; ..\EAS\BSW\Dem\Dem.c	  2333      {
; ..\EAS\BSW\Dem\Dem.c	  2334          Data = DEM_EVENT_CMA_STATUS(EventId);/*1 byte*/
; ..\EAS\BSW\Dem\Dem.c	  2335      }
; ..\EAS\BSW\Dem\Dem.c	  2336      else if(DataType == DEM_CMA_CONSECUTIVE_FAILED_CYCLES)
; ..\EAS\BSW\Dem\Dem.c	  2337      {
; ..\EAS\BSW\Dem\Dem.c	  2338          Data = DEM_EVENT_FCC(EventId);/*1 byte*/
; ..\EAS\BSW\Dem\Dem.c	  2339      }
; ..\EAS\BSW\Dem\Dem.c	  2340  #endif
; ..\EAS\BSW\Dem\Dem.c	  2341      else if(DataType == DEM_OVFLIND)
	mov	d15,#9
.L4386:
	jne	d15,d5,.L130
.L4387:

; ..\EAS\BSW\Dem\Dem.c	  2342      {
; ..\EAS\BSW\Dem\Dem.c	  2343          /*SWS_Dem_00473*/
; ..\EAS\BSW\Dem\Dem.c	  2344          if(DEM_PRIMARY_DATAENTRY_USEDNUM < DEM_CFG_MAXNUMBEREVENTENTRY_PRIMARY)
	movh.a	a15,#@his(Dem_StorageMem+2560)
	ld.hu	d0,[a15]@los(Dem_StorageMem+2560)
.L2189:
	mov	d15,#121
.L4388:
	jge.u	d0,d15,.L131
.L111:

; ..\EAS\BSW\Dem\Dem.c	  2345          {
; ..\EAS\BSW\Dem\Dem.c	  2346              Data = FALSE;/*1 byte*/
	mov	d15,#0
.L4389:
	j	.L132
.L131:

; ..\EAS\BSW\Dem\Dem.c	  2347          }
; ..\EAS\BSW\Dem\Dem.c	  2348          else
; ..\EAS\BSW\Dem\Dem.c	  2349          {
; ..\EAS\BSW\Dem\Dem.c	  2350              Data = TRUE;/*1 byte*/
	mov	d15,#1
.L4390:
	j	.L133
.L130:

; ..\EAS\BSW\Dem\Dem.c	  2351          }
; ..\EAS\BSW\Dem\Dem.c	  2352      }
; ..\EAS\BSW\Dem\Dem.c	  2353      else/*(DataType == DEM_SIGNIFICANCE)*/
; ..\EAS\BSW\Dem\Dem.c	  2354      {
; ..\EAS\BSW\Dem\Dem.c	  2355          /*SWS_Dem_00592*/
; ..\EAS\BSW\Dem\Dem.c	  2356          Data = DEM_CFG_DTC_SIGNIFICANCE(DtcId);/*1 byte*/
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d0,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]10
.L112:
.L114:
.L117:
.L119:
.L121:
.L123:
.L129:
.L132:
.L133:
	st.b	[a10],d15
.L127:
.L125:
.L116:
.L109:

; ..\EAS\BSW\Dem\Dem.c	  2357      }
; ..\EAS\BSW\Dem\Dem.c	  2358  
; ..\EAS\BSW\Dem\Dem.c	  2359      return Data;
	ld.bu	d2,[a10]
.L4391:

; ..\EAS\BSW\Dem\Dem.c	  2360  }
	ret
.L1940:
	
__DemInternal_GetEventInternalData_function_end:
	.size	DemInternal_GetEventInternalData,__DemInternal_GetEventInternalData_function_end-DemInternal_GetEventInternalData
.L1427:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_StorageDataElement',code,cluster('DemInternal_StorageDataElement')
	.sect	'.text.Dem.DemInternal_StorageDataElement'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  2361  
; ..\EAS\BSW\Dem\Dem.c	  2362  #if(((DEM_MAX_FFSIZE_OF_DTC > 0)&&(DEM_NUM_OF_FFRECCLASS > 0))||((DEM_MAX_EXTSIZE_OF_DTC > 0)&&(DEM_NUM_OF_EXTDATACLASS > 0))\ 
; ..\EAS\BSW\Dem\Dem.c	  2363      || (DEM_MAX_J1939FFSIZE_OF_DTC > 0) || (DEM_MAX_J1939EXPFFSIZE_OF_DTC > 0))
; ..\EAS\BSW\Dem\Dem.c	  2364  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  2365  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2366  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	  2367  *
; ..\EAS\BSW\Dem\Dem.c	  2368  * Description:
; ..\EAS\BSW\Dem\Dem.c	  2369  *
; ..\EAS\BSW\Dem\Dem.c	  2370  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  2371  *
; ..\EAS\BSW\Dem\Dem.c	  2372  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  2373  *
; ..\EAS\BSW\Dem\Dem.c	  2374  * Return:
; ..\EAS\BSW\Dem\Dem.c	  2375  *
; ..\EAS\BSW\Dem\Dem.c	  2376  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  2377  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2378  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  2379  STATIC FUNC(void, DEM_CODE) DemInternal_StorageDataElement
; Function DemInternal_StorageDataElement
.L923:
DemInternal_StorageDataElement:	.type	func
	mov	d15,d5
.L2198:
	mov.aa	a12,a4
.L2200:

; ..\EAS\BSW\Dem\Dem.c	  2380  (
; ..\EAS\BSW\Dem\Dem.c	  2381      uint16 EventId,
; ..\EAS\BSW\Dem\Dem.c	  2382      uint16 DataIdx,
; ..\EAS\BSW\Dem\Dem.c	  2383      P2P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) DataBufferPtr
; ..\EAS\BSW\Dem\Dem.c	  2384  )
; ..\EAS\BSW\Dem\Dem.c	  2385  {
; ..\EAS\BSW\Dem\Dem.c	  2386  #if(DEM_NUM_OF_DATA > 0)
; ..\EAS\BSW\Dem\Dem.c	  2387      uint8 DataSize;
; ..\EAS\BSW\Dem\Dem.c	  2388      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	  2389      Std_ReturnType ret = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  2390  
; ..\EAS\BSW\Dem\Dem.c	  2391      if(DEM_CFG_DATA_IN_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.w	d0,[a15]
.L4396:
	jeq	d0,#0,.L135
.L4397:

; ..\EAS\BSW\Dem\Dem.c	  2392      {
; ..\EAS\BSW\Dem\Dem.c	  2393          DataSize = DEM_CFG_DATA_IN_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]
	ld.bu	d8,[a15]
.L2201:

; ..\EAS\BSW\Dem\Dem.c	  2394  
; ..\EAS\BSW\Dem\Dem.c	  2395          **DataBufferPtr = DemInternal_GetEventInternalData(EventId, DEM_CFG_DATA_IN_DATA_TYPE(DataIdx));
	ld.a	a13,[a12]
.L4398:
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]
	ld.bu	d5,[a15]1
.L2197:
	call	DemInternal_GetEventInternalData
.L2196:
	st.b	[a13],d2
.L4399:

; ..\EAS\BSW\Dem\Dem.c	  2396  
; ..\EAS\BSW\Dem\Dem.c	  2397          (*DataBufferPtr) += DataSize;
	ld.a	a15,[a12]
.L4400:
	addsc.a	a15,a15,d8,#0
	st.a	[a12],a15
.L135:

; ..\EAS\BSW\Dem\Dem.c	  2398      }
; ..\EAS\BSW\Dem\Dem.c	  2399  
; ..\EAS\BSW\Dem\Dem.c	  2400      if(DEM_CFG_DATA_CS_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.w	d0,[a15]4
.L4401:
	jeq	d0,#0,.L136
.L4402:

; ..\EAS\BSW\Dem\Dem.c	  2401      {
; ..\EAS\BSW\Dem\Dem.c	  2402          DataSize = DEM_CFG_DATA_CS_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]4
	ld.bu	d8,[a15]
.L2202:

; ..\EAS\BSW\Dem\Dem.c	  2403          /*SWS_Dem_00282*//*SWS_Dem_00918*//*SWS_Dem_00919*//*SWS_Dem_00920*/
; ..\EAS\BSW\Dem\Dem.c	  2404          ret = (*DEM_CFG_DATA_CS_DATA_READ_FNC(DataIdx))(*DataBufferPtr);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]4
	ld.a	a15,[a15]4
.L4403:
	ld.a	a4,[a12]
	calli	a15
.L2203:

; ..\EAS\BSW\Dem\Dem.c	  2405          /*SWS_Dem_00463*/
; ..\EAS\BSW\Dem\Dem.c	  2406          if(ret != E_OK)
	jeq	d2,#0,.L137
.L4404:

; ..\EAS\BSW\Dem\Dem.c	  2407          {
; ..\EAS\BSW\Dem\Dem.c	  2408              for(i = 0; i < DataSize; i++)
	mov	d15,#0
.L2199:

; ..\EAS\BSW\Dem\Dem.c	  2409              {
; ..\EAS\BSW\Dem\Dem.c	  2410                  *((*DataBufferPtr) + i) = DEM_DATA_INVALID_U8;
	mov	d0,#255
.L4405:
	j	.L138
.L139:
	ld.a	a15,[a12]
.L4406:
	addsc.a	a15,a15,d15,#0
.L4407:
	st.b	[a15],d0
.L4408:
	add	d15,#1
.L2204:
	extr.u	d15,d15,#0,#8
.L138:
	jlt.u	d15,d8,.L139
.L137:

; ..\EAS\BSW\Dem\Dem.c	  2411              }
; ..\EAS\BSW\Dem\Dem.c	  2412              /*SWS_Dem_00370*/
; ..\EAS\BSW\Dem\Dem.c	  2413              DEM_DET_REPORT_ERROR(DEM_MAINFUNCTION_APIID, DEM_E_NODATAAVAILABLE);
; ..\EAS\BSW\Dem\Dem.c	  2414          }
; ..\EAS\BSW\Dem\Dem.c	  2415          (*DataBufferPtr) += DataSize;
	ld.a	a15,[a12]
.L4409:
	addsc.a	a15,a15,d8,#0
	st.a	[a12],a15
.L136:

; ..\EAS\BSW\Dem\Dem.c	  2416      }
; ..\EAS\BSW\Dem\Dem.c	  2417  #endif
; ..\EAS\BSW\Dem\Dem.c	  2418  }
	ret
.L1946:
	
__DemInternal_StorageDataElement_function_end:
	.size	DemInternal_StorageDataElement,__DemInternal_StorageDataElement_function_end-DemInternal_StorageDataElement
.L1432:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_GetDtcInternalData',code,cluster('DemInternal_GetDtcInternalData')
	.sect	'.text.Dem.DemInternal_GetDtcInternalData'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  2419  #endif
; ..\EAS\BSW\Dem\Dem.c	  2420  
; ..\EAS\BSW\Dem\Dem.c	  2421  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  2422  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2423  * Function Name: DemInternal_GetDtcInternalData
; ..\EAS\BSW\Dem\Dem.c	  2424  *
; ..\EAS\BSW\Dem\Dem.c	  2425  * Description:
; ..\EAS\BSW\Dem\Dem.c	  2426  *
; ..\EAS\BSW\Dem\Dem.c	  2427  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  2428  *
; ..\EAS\BSW\Dem\Dem.c	  2429  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  2430  *
; ..\EAS\BSW\Dem\Dem.c	  2431  * Return:
; ..\EAS\BSW\Dem\Dem.c	  2432  *
; ..\EAS\BSW\Dem\Dem.c	  2433  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  2434  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2435  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  2436  STATIC FUNC(uint8, DEM_CODE) DemInternal_GetDtcInternalData
; Function DemInternal_GetDtcInternalData
.L925:
DemInternal_GetDtcInternalData:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  2437  (
; ..\EAS\BSW\Dem\Dem.c	  2438      uint16 DtcId,
; ..\EAS\BSW\Dem\Dem.c	  2439      uint16 DataIdx
; ..\EAS\BSW\Dem\Dem.c	  2440  )
; ..\EAS\BSW\Dem\Dem.c	  2441  {
; ..\EAS\BSW\Dem\Dem.c	  2442      uint8 Data = DEM_DATA_U8_FF;
	mov	d2,#255
.L2207:

; ..\EAS\BSW\Dem\Dem.c	  2443  #if(DEM_NUM_OF_DATA > 0)
; ..\EAS\BSW\Dem\Dem.c	  2444      uint16 EventId;
; ..\EAS\BSW\Dem\Dem.c	  2445  
; ..\EAS\BSW\Dem\Dem.c	  2446      for(EventId = (uint16)0; EventId < DEM_NUM_OF_EVENT; EventId++)
	mov	d0,#0
.L2208:
	mov	d1,#116
.L4414:
	j	.L140
.L141:

; ..\EAS\BSW\Dem\Dem.c	  2447      {
; ..\EAS\BSW\Dem\Dem.c	  2448          if(DtcId == DEM_CFG_EVENT_DTCREF(EventId))
	mul	d15,d0,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]4
.L4415:
	jne	d15,d4,.L142
.L4416:

; ..\EAS\BSW\Dem\Dem.c	  2449          {
; ..\EAS\BSW\Dem\Dem.c	  2450              Data = DemInternal_GetEventInternalData(EventId, DEM_CFG_DATA_IN_DATA_TYPE(DataIdx));
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d5,#3
	ld.a	a15,[a15]
	ld.bu	d5,[a15]1
.L2205:
	mov	d4,d0
.L2206:
	j	DemInternal_GetEventInternalData
.L142:
	add	d0,#1
.L140:
	jlt.u	d0,d1,.L141
.L4417:

; ..\EAS\BSW\Dem\Dem.c	  2451              break;
; ..\EAS\BSW\Dem\Dem.c	  2452          }
; ..\EAS\BSW\Dem\Dem.c	  2453      }
; ..\EAS\BSW\Dem\Dem.c	  2454  #endif
; ..\EAS\BSW\Dem\Dem.c	  2455      return Data;
; ..\EAS\BSW\Dem\Dem.c	  2456  }
	ret
.L1954:
	
__DemInternal_GetDtcInternalData_function_end:
	.size	DemInternal_GetDtcInternalData,__DemInternal_GetDtcInternalData_function_end-DemInternal_GetDtcInternalData
.L1437:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_CaptureData',code,cluster('DemInternal_CaptureData')
	.sect	'.text.Dem.DemInternal_CaptureData'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  2457  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  2458  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2459  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	  2460  *
; ..\EAS\BSW\Dem\Dem.c	  2461  * Description:
; ..\EAS\BSW\Dem\Dem.c	  2462  *
; ..\EAS\BSW\Dem\Dem.c	  2463  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  2464  *
; ..\EAS\BSW\Dem\Dem.c	  2465  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  2466  *
; ..\EAS\BSW\Dem\Dem.c	  2467  * Return:
; ..\EAS\BSW\Dem\Dem.c	  2468  *
; ..\EAS\BSW\Dem\Dem.c	  2469  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  2470  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2471  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  2472  STATIC FUNC(void, DEM_CODE) DemInternal_CaptureData
; Function DemInternal_CaptureData
.L927:
DemInternal_CaptureData:	.type	func
	sub.a	a10,#8
.L2209:
	mov	d8,d4
.L2211:

; ..\EAS\BSW\Dem\Dem.c	  2473  (
; ..\EAS\BSW\Dem\Dem.c	  2474      uint16 EventId
; ..\EAS\BSW\Dem\Dem.c	  2475  )
; ..\EAS\BSW\Dem\Dem.c	  2476  {
; ..\EAS\BSW\Dem\Dem.c	  2477      Dem_MemIdType MemEntryId;
; ..\EAS\BSW\Dem\Dem.c	  2478      uint16 DtcId;
; ..\EAS\BSW\Dem\Dem.c	  2479  
; ..\EAS\BSW\Dem\Dem.c	  2480      Dem_EventMemoryEntryStorageTriggerType Trigger;
; ..\EAS\BSW\Dem\Dem.c	  2481      boolean ExtDataChangedFlag = FALSE;
	mov	d9,#0
.L2212:

; ..\EAS\BSW\Dem\Dem.c	  2482  	boolean FFDataChangedFlag = FALSE;
	mov	d10,d9
.L2214:

; ..\EAS\BSW\Dem\Dem.c	  2483  
; ..\EAS\BSW\Dem\Dem.c	  2484      DemInternal_GetCaptureQueue(EventId, &Trigger);
	lea	a4,[a10]1
	call	DemInternal_GetCaptureQueue
.L2210:

; ..\EAS\BSW\Dem\Dem.c	  2485      DemInternal_ClrCaptureQueue(EventId);
	mov	d4,d8
.L2216:
	call	DemInternal_ClrCaptureQueue
.L2217:

; ..\EAS\BSW\Dem\Dem.c	  2486      DtcId = DEM_CFG_EVENT_DTCREF(EventId);
	mul	d15,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d11,[a15]4
.L2218:

; ..\EAS\BSW\Dem\Dem.c	  2487  
; ..\EAS\BSW\Dem\Dem.c	  2488      /*DemEventMemoryEntryStorageTrigger: used to allocate an event memory entry.*/
; ..\EAS\BSW\Dem\Dem.c	  2489      /*SWS_Dem_00783*//*SWS_Dem_00784*/
; ..\EAS\BSW\Dem\Dem.c	  2490      /*SWS_Dem_00922*//*SWS_Dem_00785*/
; ..\EAS\BSW\Dem\Dem.c	  2491      /*SWS_Dem_00786*//*SWS_Dem_00810*/
; ..\EAS\BSW\Dem\Dem.c	  2492      if((DEM_DTC_DATAENTRYREF(DtcId) == DEM_DATA_INVALID_U16) \ 
	mul	d15,d11,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]1868
.L4422:
	mov.u	d1,#65535
.L4423:
	jne	d0,d1,.L145
.L4424:

; ..\EAS\BSW\Dem\Dem.c	  2493          && (Trigger >= DEM_CFG_EVENTMEMORYENTRYSTORAGETRIGGER))
	ld.bu	d0,[a10]1
.L4425:
	mov	d15,#16
.L4426:
	jlt.u	d0,d15,.L146
.L4427:

; ..\EAS\BSW\Dem\Dem.c	  2494      {
; ..\EAS\BSW\Dem\Dem.c	  2495          if(E_OK == DemInternal_GetUsableMemoryEntry(DtcId, &MemEntryId))
	mov.aa	a4,a10
	mov	d4,d11
.L2219:
	call	DemInternal_GetUsableMemoryEntry
.L2220:
	jne	d2,#0,.L147
.L4428:

; ..\EAS\BSW\Dem\Dem.c	  2496          {
; ..\EAS\BSW\Dem\Dem.c	  2497              /*SWS_Dem_00523*/
; ..\EAS\BSW\Dem\Dem.c	  2498              DEM_EVENT_OCCCTR(EventId) = 1;
	sha	d15,d8,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4429:
	mov	d15,#1
.L4430:
	st.b	[a15]9,d15
.L4431:

; ..\EAS\BSW\Dem\Dem.c	  2499  
; ..\EAS\BSW\Dem\Dem.c	  2500              DEM_DTC_DATAENTRYREF(DtcId) = MemEntryId;
	mul	d15,d11,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4432:
	ld.bu	d15,[a10]
.L4433:
	st.h	[a15]1868,d15
.L4434:
	j	.L148
.L147:

; ..\EAS\BSW\Dem\Dem.c	  2501          }
; ..\EAS\BSW\Dem\Dem.c	  2502          else
; ..\EAS\BSW\Dem\Dem.c	  2503          {
; ..\EAS\BSW\Dem\Dem.c	  2504              DEM_EVENT_FCC(EventId) = DEM_DATA_CLEAR;
	sha	d15,d8,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4435:
	mov	d0,#0
.L4436:
	st.b	[a15]8,d0
.L4437:

; ..\EAS\BSW\Dem\Dem.c	  2505              DEM_EVENT_OCCCTR(EventId) = DEM_DATA_CLEAR;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4438:
	st.b	[a15]9,d0
.L4439:

; ..\EAS\BSW\Dem\Dem.c	  2506              DEM_EVENT_MAXFDCDCC(EventId) = 0;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4440:
	st.b	[a15]17,d0
.L4441:

; ..\EAS\BSW\Dem\Dem.c	  2507              DEM_EVENT_MAXFDCSLC(EventId) = 0;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4442:
	st.b	[a15]18,d0
.L4443:

; ..\EAS\BSW\Dem\Dem.c	  2508              DEM_EVENT_CSLF(EventId) = DEM_DATA_CLEAR;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4444:
	st.b	[a15]19,d0
.L4445:

; ..\EAS\BSW\Dem\Dem.c	  2509              DEM_EVENT_CSFF(EventId) = DEM_DATA_CLEAR;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4446:
	st.b	[a15]20,d0
.L4447:

; ..\EAS\BSW\Dem\Dem.c	  2510              DEM_EVENT_FCSLC(EventId) = DEM_DATA_CLEAR;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4448:
	st.b	[a15]21,d0
.L148:
.L146:
.L145:

; ..\EAS\BSW\Dem\Dem.c	  2511  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  2512              DEM_EVENT_OBD_PCSLF(EventId) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  2513  #endif
; ..\EAS\BSW\Dem\Dem.c	  2514  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  2515              DEM_EVENT_CMA_PCSLF(EventId) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  2516  #endif
; ..\EAS\BSW\Dem\Dem.c	  2517          }
; ..\EAS\BSW\Dem\Dem.c	  2518      }
; ..\EAS\BSW\Dem\Dem.c	  2519  
; ..\EAS\BSW\Dem\Dem.c	  2520      /*Store data for the first time or Update Record*/
; ..\EAS\BSW\Dem\Dem.c	  2521      if(DEM_DTC_DATAENTRYREF(DtcId) != DEM_DATA_INVALID_U16)
	mul	d15,d11,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]1868
.L4449:
	mov.u	d15,#65535
.L4450:
	jeq	d15,d0,.L149
.L4451:

; ..\EAS\BSW\Dem\Dem.c	  2522      {
; ..\EAS\BSW\Dem\Dem.c	  2523          /*SWS_Dem_00270: The function Dem_DcmDisableDTCRecordUpdate
; ..\EAS\BSW\Dem\Dem.c	  2524          shall protect the event related data of the specified DTC
; ..\EAS\BSW\Dem\Dem.c	  2525          within the specified origin from updating or deleting.*/
; ..\EAS\BSW\Dem\Dem.c	  2526          if(Dem_DtcUpDateState[DtcId] == TRUE)
	movh.a	a15,#@his(Dem_DtcUpDateState)
	lea	a15,[a15]@los(Dem_DtcUpDateState)
.L4452:
	addsc.a	a15,a15,d11,#0
	ld.bu	d15,[a15]
.L4453:
	jne	d15,#1,.L150
.L4454:

; ..\EAS\BSW\Dem\Dem.c	  2527          {
; ..\EAS\BSW\Dem\Dem.c	  2528  #if((DEM_MAX_FFSIZE_OF_DTC > 0) && (DEM_NUM_OF_FFRECCLASS > 0) \ 
; ..\EAS\BSW\Dem\Dem.c	  2529      || ((DEM_MAX_J1939FFSIZE_OF_DTC > 0) || (DEM_MAX_J1939EXPFFSIZE_OF_DTC > 0))) 
; ..\EAS\BSW\Dem\Dem.c	  2530              /*Update FreezeFrameData*/
; ..\EAS\BSW\Dem\Dem.c	  2531              FFDataChangedFlag = DemInternal_UpdateFFData(EventId, Trigger);
	ld.bu	d5,[a10]1
	mov	d4,d8
.L2221:
	call	DemInternal_UpdateFFData
.L2215:
	mov	d10,d2
.L2222:

; ..\EAS\BSW\Dem\Dem.c	  2532  #endif
; ..\EAS\BSW\Dem\Dem.c	  2533  
; ..\EAS\BSW\Dem\Dem.c	  2534  #if((DEM_MAX_EXTSIZE_OF_DTC > 0) && (DEM_NUM_OF_EXTDATACLASS > 0))
; ..\EAS\BSW\Dem\Dem.c	  2535              /*Update Extended Data*/
; ..\EAS\BSW\Dem\Dem.c	  2536              ExtDataChangedFlag = DemInternal_UpdateExtData(EventId, Trigger);
	ld.bu	d5,[a10]1
	mov	d4,d8
.L2223:
	call	DemInternal_UpdateExtData
.L2213:
	mov	d9,d2
.L150:
.L149:

; ..\EAS\BSW\Dem\Dem.c	  2537  #endif
; ..\EAS\BSW\Dem\Dem.c	  2538          }
; ..\EAS\BSW\Dem\Dem.c	  2539      }
; ..\EAS\BSW\Dem\Dem.c	  2540      else
; ..\EAS\BSW\Dem\Dem.c	  2541      {
; ..\EAS\BSW\Dem\Dem.c	  2542          /*SWS_Dem_00407*/
; ..\EAS\BSW\Dem\Dem.c	  2543      }
; ..\EAS\BSW\Dem\Dem.c	  2544  
; ..\EAS\BSW\Dem\Dem.c	  2545      if((FFDataChangedFlag == TRUE) || (ExtDataChangedFlag == TRUE))
	jne	d10,#0,.L151
.L4455:
	jeq	d9,#0,.L152
.L151:

; ..\EAS\BSW\Dem\Dem.c	  2546      {
; ..\EAS\BSW\Dem\Dem.c	  2547          /*SWS_Dem_00475*/
; ..\EAS\BSW\Dem\Dem.c	  2548          if(DEM_CFG_EVENT_DATACHANGED_CALLFNC(DtcId) != NULL_PTR)
	mul	d15,d11,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.w	d0,[a15]40
.L4456:
	jeq	d0,#0,.L153
.L4457:

; ..\EAS\BSW\Dem\Dem.c	  2549          {
; ..\EAS\BSW\Dem\Dem.c	  2550              (void)(*DEM_CFG_EVENT_DATACHANGED_CALLFNC(DtcId))();
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]40
.L4458:
	ji	a15
.L153:
.L152:

; ..\EAS\BSW\Dem\Dem.c	  2551          }
; ..\EAS\BSW\Dem\Dem.c	  2552      }
; ..\EAS\BSW\Dem\Dem.c	  2553  }
	ret
.L1959:
	
__DemInternal_CaptureData_function_end:
	.size	DemInternal_CaptureData,__DemInternal_CaptureData_function_end-DemInternal_CaptureData
.L1442:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_UpdateFFData',code,cluster('DemInternal_UpdateFFData')
	.sect	'.text.Dem.DemInternal_UpdateFFData'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  2554  
; ..\EAS\BSW\Dem\Dem.c	  2555  #if((DEM_MAX_FFSIZE_OF_DTC > 0) && (DEM_NUM_OF_FFRECCLASS > 0) \ 
; ..\EAS\BSW\Dem\Dem.c	  2556      || ((DEM_MAX_J1939FFSIZE_OF_DTC > 0) || (DEM_MAX_J1939EXPFFSIZE_OF_DTC > 0)))
; ..\EAS\BSW\Dem\Dem.c	  2557  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  2558  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2559  * Function Name: DemInternal_UpdateFFData
; ..\EAS\BSW\Dem\Dem.c	  2560  *
; ..\EAS\BSW\Dem\Dem.c	  2561  * Description: Update the Freeze Frame Data of one Event/DTC.
; ..\EAS\BSW\Dem\Dem.c	  2562  *
; ..\EAS\BSW\Dem\Dem.c	  2563  * Inputs: EventId, Trigger
; ..\EAS\BSW\Dem\Dem.c	  2564  *
; ..\EAS\BSW\Dem\Dem.c	  2565  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  2566  *
; ..\EAS\BSW\Dem\Dem.c	  2567  * Return: TRUE: Data has been changed. FALSE:No data changed.
; ..\EAS\BSW\Dem\Dem.c	  2568  *
; ..\EAS\BSW\Dem\Dem.c	  2569  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  2570  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2571  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  2572  STATIC FUNC(boolean, DEM_CODE) DemInternal_UpdateFFData
; Function DemInternal_UpdateFFData
.L929:
DemInternal_UpdateFFData:	.type	func
	sub.a	a10,#8
.L2224:
	mov	d8,d4
.L2225:
	st.w	[a10]4,d5
.L2226:

; ..\EAS\BSW\Dem\Dem.c	  2573  (
; ..\EAS\BSW\Dem\Dem.c	  2574      uint16 EventId,
; ..\EAS\BSW\Dem\Dem.c	  2575      Dem_EventMemoryEntryStorageTriggerType Trigger
; ..\EAS\BSW\Dem\Dem.c	  2576  )
; ..\EAS\BSW\Dem\Dem.c	  2577  {
; ..\EAS\BSW\Dem\Dem.c	  2578      boolean DataChangedFlag = FALSE;
	mov	d9,#0
.L2227:

; ..\EAS\BSW\Dem\Dem.c	  2579      uint8 RecIdx;
; ..\EAS\BSW\Dem\Dem.c	  2580      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	  2581      uint8 j;
; ..\EAS\BSW\Dem\Dem.c	  2582      uint8 DataIdx;
; ..\EAS\BSW\Dem\Dem.c	  2583      uint8 *DataBufferPtr;
; ..\EAS\BSW\Dem\Dem.c	  2584      uint8 RecNum;
; ..\EAS\BSW\Dem\Dem.c	  2585      uint8 DidIdx;
; ..\EAS\BSW\Dem\Dem.c	  2586      uint16 DID;
; ..\EAS\BSW\Dem\Dem.c	  2587      uint8 k;
; ..\EAS\BSW\Dem\Dem.c	  2588      uint16 SPNIndex;
; ..\EAS\BSW\Dem\Dem.c	  2589      uint16 DtcId = DEM_CFG_EVENT_DTCREF(EventId);
	mul	d15,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d10,[a15]4
.L2228:

; ..\EAS\BSW\Dem\Dem.c	  2590      Dem_MemIdType MemEntryId = DEM_DTC_DATAENTRYREF(DtcId);
	mul	d15,d10,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]1868
	extr.u	d1,d0,#0,#8
.L2229:

; ..\EAS\BSW\Dem\Dem.c	  2591  #if(DEM_NUM_OF_FFRECCLASS > 0)
; ..\EAS\BSW\Dem\Dem.c	  2592      if(DEM_CFG_DTC_FFRECNUMCLASSREF(DtcId) != NULL_PTR)
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d10,#3
	ld.hu	d0,[a15]0
	sha	d0,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d0,#0
	ld.w	d15,[a15]16
.L4463:
	jeq	d15,#0,.L154
.L4464:

; ..\EAS\BSW\Dem\Dem.c	  2593      {
; ..\EAS\BSW\Dem\Dem.c	  2594          DataBufferPtr = DEM_PRIMARY_FFDATA_PTR(MemEntryId);
	mul	d15,d1,#56
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	lea	a4,[a15]2565
.L2230:

; ..\EAS\BSW\Dem\Dem.c	  2595          RecNum = 0;
; ..\EAS\BSW\Dem\Dem.c	  2596  
; ..\EAS\BSW\Dem\Dem.c	  2597          for(i = 0; i < DEM_CFG_DTC_NUM_OF_FFREC(DtcId); i++)
	mov	d11,d9
.L2232:
	j	.L155
.L156:

; ..\EAS\BSW\Dem\Dem.c	  2598          {
; ..\EAS\BSW\Dem\Dem.c	  2599              RecIdx = (DEM_CFG_DTC_FFREC_ARRAY(DtcId)[i]);
	movh.a	a2,#@his(Dem_DTCTable)
	lea	a2,[a2]@los(Dem_DTCTable)
	addsc.a	a2,a2,d10,#3
	ld.hu	d0,[a2]0
	sha	d0,#5
	movh.a	a2,#@his(Dem_DTCAttributesTable)
	lea	a2,[a2]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a2,d0,#0
	ld.a	a2,[a15]16
	ld.bu	d15,[a2]
	movh.a	a2,#@his(Dem_FFRecNumClassTable)
	lea	a2,[a2]@los(Dem_FFRecNumClassTable)
	addsc.a	a15,a2,d15,#3
	ld.a	a2,[a15]4
.L4465:
	addsc.a	a2,a2,d11,#0
	ld.bu	d12,[a2]
.L2234:

; ..\EAS\BSW\Dem\Dem.c	  2600  #if(DEM_CFG_TYPE_OF_FF_RECORD_NUMERATION == DEM_FF_RECNUM_CONFIGURED)
; ..\EAS\BSW\Dem\Dem.c	  2601              /*SWS_Dem_00582*/
; ..\EAS\BSW\Dem\Dem.c	  2602              RecNum = DEM_CFG_DTC_FFRECNUM(RecIdx);
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d12,#3
	ld.bu	d0,[a15]
.L2235:

; ..\EAS\BSW\Dem\Dem.c	  2603  #else
; ..\EAS\BSW\Dem\Dem.c	  2604              /*SWS_Dem_00337*//*SWS_Dem_00581*/
; ..\EAS\BSW\Dem\Dem.c	  2605              RecNum++;
; ..\EAS\BSW\Dem\Dem.c	  2606  #endif
; ..\EAS\BSW\Dem\Dem.c	  2607              /*DemFreezeFrameRecordTrigger: Defines the trigger to store the FreezeFrameRecord*/
; ..\EAS\BSW\Dem\Dem.c	  2608              if(((DEM_CFG_DTC_FFREC_UPDATA(RecIdx) == DEM_UPDATE_RECORD_YES) \ 
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d12,#3
	ld.bu	d15,[a15]2
.L4466:
	jeq	d15,#1,.L157
.L4467:

; ..\EAS\BSW\Dem\Dem.c	  2609                  || ((DEM_CFG_DTC_FFREC_UPDATA(RecIdx) == DEM_UPDATE_RECORD_NO) \ 
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d12,#3
	ld.bu	d15,[a15]2
.L4468:
	jne	d15,#0,.L158
.L4469:

; ..\EAS\BSW\Dem\Dem.c	  2610                      && (*DataBufferPtr == DEM_DATA_INVALID_U8))) \ 
	ld.bu	d1,[a4]
.L4470:
	mov	d15,#255
.L4471:
	jne	d15,d1,.L159
.L157:

; ..\EAS\BSW\Dem\Dem.c	  2611                  && (((DEM_CFG_DTC_FFREC_TRIGGER(RecIdx))&Trigger) != 0))
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d12,#3
	ld.bu	d1,[a15]1
.L4472:
	ld.w	d15,[a10]4
.L2236:
	and	d1,d15
.L4473:
	jeq	d1,#0,.L160
.L4474:

; ..\EAS\BSW\Dem\Dem.c	  2612              {
; ..\EAS\BSW\Dem\Dem.c	  2613                  DataChangedFlag = TRUE;
	mov	d9,#1
.L4475:

; ..\EAS\BSW\Dem\Dem.c	  2614                  /*+ RecNum length(one byte) + RecordNumberOfIdentifiers length(one byte)*/
; ..\EAS\BSW\Dem\Dem.c	  2615                  *DataBufferPtr = RecNum;
; ..\EAS\BSW\Dem\Dem.c	  2616                  *(DataBufferPtr + 1) = DEM_CFG_NUMDID_OF_FFRECNUM(RecIdx);
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d12,#3
	ld.bu	d15,[a15]3
.L2237:
	st.b	[a4]1,d15
.L4476:

; ..\EAS\BSW\Dem\Dem.c	  2617                  DataBufferPtr += 2;
	st.b	[a4+]2,d0
.L4477:

; ..\EAS\BSW\Dem\Dem.c	  2618  
; ..\EAS\BSW\Dem\Dem.c	  2619                  for(j = 0; j < DEM_CFG_NUMDID_OF_FFRECNUM(RecIdx); j++)
	mov	d13,#0
.L2238:
	j	.L161
.L162:

; ..\EAS\BSW\Dem\Dem.c	  2620                  {
; ..\EAS\BSW\Dem\Dem.c	  2621                      DidIdx = (DEM_CFG_DIDARRAY_OF_FFRECNUM(RecIdx)[j]);
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d12,#3
	ld.a	a15,[a15]4
.L4478:
	addsc.a	a15,a15,d13,#0
	ld.bu	d14,[a15]
.L2240:

; ..\EAS\BSW\Dem\Dem.c	  2622                      DID = DEM_CFG_DID(DidIdx);
	mul	d15,d14,#12
	movh.a	a15,#@his(Dem_DidClassTable)
	lea	a15,[a15]@los(Dem_DidClassTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]8
.L2241:

; ..\EAS\BSW\Dem\Dem.c	  2623                      /*Did length(two bytes)*/
; ..\EAS\BSW\Dem\Dem.c	  2624                      *DataBufferPtr = ((uint8)(DID >> 8));
	sha	d0,d15,#-8
.L4479:

; ..\EAS\BSW\Dem\Dem.c	  2625                      *(DataBufferPtr + 1) = ((uint8)DID);
	st.b	[a4]1,d15
.L4480:

; ..\EAS\BSW\Dem\Dem.c	  2626                      DataBufferPtr += 2;
	st.b	[a4+]2,d0
.L4481:

; ..\EAS\BSW\Dem\Dem.c	  2627  
; ..\EAS\BSW\Dem\Dem.c	  2628                      for(k = 0; k < DEM_CFG_NUMDATA_OF_DID(DidIdx); k++)
	mov	d15,#0
.L2242:
	j	.L163
.L164:

; ..\EAS\BSW\Dem\Dem.c	  2629                      {
; ..\EAS\BSW\Dem\Dem.c	  2630                          DataIdx = (DEM_CFG_DATAARRAY_OF_DID(DidIdx)[k]);
	mul	d0,d14,#12
	movh.a	a15,#@his(Dem_DidClassTable)
	lea	a15,[a15]@los(Dem_DidClassTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]4
.L4482:
	addsc.a	a15,a15,d15,#0
	ld.bu	d5,[a15]
.L2244:

; ..\EAS\BSW\Dem\Dem.c	  2631                          /*SWS_Dem_00261*/
; ..\EAS\BSW\Dem\Dem.c	  2632                          DemInternal_StorageDataElement(EventId, DataIdx, &DataBufferPtr);
	st.a	[a10],a4
	mov.aa	a4,a10
.L2231:
	mov	d4,d8
.L2246:
	call	DemInternal_StorageDataElement
.L2245:
	ld.a	a4,[a10]
.L2247:
	add	d15,#1
.L2243:
	extr.u	d15,d15,#0,#8
.L163:
	mul	d0,d14,#12
	movh.a	a15,#@his(Dem_DidClassTable)
	lea	a15,[a15]@los(Dem_DidClassTable)
	addsc.a	a15,a15,d0,#0
	ld.bu	d0,[a15]
.L4483:
	jlt.u	d15,d0,.L164
.L4484:
	add	d13,#1
.L2239:
	extr.u	d13,d13,#0,#8
.L161:
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d12,#3
	ld.bu	d15,[a15]3
.L4485:
	jlt.u	d13,d15,.L162
.L4486:
	j	.L165
.L160:
.L159:
.L158:

; ..\EAS\BSW\Dem\Dem.c	  2633                      }
; ..\EAS\BSW\Dem\Dem.c	  2634                  }
; ..\EAS\BSW\Dem\Dem.c	  2635              }
; ..\EAS\BSW\Dem\Dem.c	  2636              else
; ..\EAS\BSW\Dem\Dem.c	  2637              {
; ..\EAS\BSW\Dem\Dem.c	  2638                  /*+ RecNum length(one byte) + RecordNumberOfIdentifiers length(one byte)*/
; ..\EAS\BSW\Dem\Dem.c	  2639                  DataBufferPtr += 2;
	add.a	a4,#2
.L4487:

; ..\EAS\BSW\Dem\Dem.c	  2640  
; ..\EAS\BSW\Dem\Dem.c	  2641                  for(j = 0; j < DEM_CFG_NUMDID_OF_FFRECNUM(RecIdx); j++)
	mov	d2,#0
.L2248:
	j	.L166
.L167:

; ..\EAS\BSW\Dem\Dem.c	  2642                  {
; ..\EAS\BSW\Dem\Dem.c	  2643                      DidIdx = (DEM_CFG_DIDARRAY_OF_FFRECNUM(RecIdx)[j]);
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d12,#3
	ld.a	a15,[a15]4
.L4488:
	addsc.a	a15,a15,d2,#0
	ld.bu	d3,[a15]
.L2250:

; ..\EAS\BSW\Dem\Dem.c	  2644                      /*Did length(two bytes)*/
; ..\EAS\BSW\Dem\Dem.c	  2645                      DataBufferPtr += 2;
	add.a	a4,#2
.L4489:

; ..\EAS\BSW\Dem\Dem.c	  2646  
; ..\EAS\BSW\Dem\Dem.c	  2647                      for(k = 0; k < DEM_CFG_NUMDATA_OF_DID(DidIdx); k++)
	mov	d0,#0
.L2251:
	j	.L168
.L169:

; ..\EAS\BSW\Dem\Dem.c	  2648                      {
; ..\EAS\BSW\Dem\Dem.c	  2649                          DataIdx = (DEM_CFG_DATAARRAY_OF_DID(DidIdx)[k]);
	mul	d15,d3,#12
	movh.a	a15,#@his(Dem_DidClassTable)
	lea	a15,[a15]@los(Dem_DidClassTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]4
.L4490:
	addsc.a	a15,a15,d0,#0
	ld.bu	d15,[a15]
.L2253:

; ..\EAS\BSW\Dem\Dem.c	  2650  
; ..\EAS\BSW\Dem\Dem.c	  2651                          if(DEM_CFG_DATA_IN_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.w	d1,[a15]
.L4491:
	jeq	d1,#0,.L170
.L4492:

; ..\EAS\BSW\Dem\Dem.c	  2652                          {
; ..\EAS\BSW\Dem\Dem.c	  2653                              DataBufferPtr += DEM_CFG_DATA_IN_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]
	ld.bu	d1,[a15]
.L4493:
	addsc.a	a4,a4,d1,#0
.L170:

; ..\EAS\BSW\Dem\Dem.c	  2654                          }
; ..\EAS\BSW\Dem\Dem.c	  2655  
; ..\EAS\BSW\Dem\Dem.c	  2656                          if(DEM_CFG_DATA_CS_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.w	d1,[a15]4
.L4494:
	jeq	d1,#0,.L171
.L4495:

; ..\EAS\BSW\Dem\Dem.c	  2657                          {
; ..\EAS\BSW\Dem\Dem.c	  2658                              DataBufferPtr += DEM_CFG_DATA_CS_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]4
	ld.bu	d15,[a15]
.L2254:
	addsc.a	a4,a4,d15,#0
.L171:
	add	d0,#1
.L2252:
	extr.u	d0,d0,#0,#8
.L168:
	mul	d15,d3,#12
	movh.a	a15,#@his(Dem_DidClassTable)
	lea	a15,[a15]@los(Dem_DidClassTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L4496:
	jlt.u	d0,d15,.L169
.L4497:
	add	d2,#1
.L2249:
	extr.u	d2,d2,#0,#8
.L166:
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d12,#3
	ld.bu	d15,[a15]3
.L4498:
	jlt.u	d2,d15,.L167
.L165:
	add	d11,#1
.L2233:
	extr.u	d11,d11,#0,#8
.L155:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d10,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]16
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_FFRecNumClassTable)
	lea	a15,[a15]@los(Dem_FFRecNumClassTable)
	addsc.a	a15,a15,d15,#3
	ld.bu	d15,[a15]
.L4499:
	jlt.u	d11,d15,.L156
.L154:

; ..\EAS\BSW\Dem\Dem.c	  2659                          }
; ..\EAS\BSW\Dem\Dem.c	  2660                      }
; ..\EAS\BSW\Dem\Dem.c	  2661                  }
; ..\EAS\BSW\Dem\Dem.c	  2662              }
; ..\EAS\BSW\Dem\Dem.c	  2663          }/*for(i = 0; i < DEM_CFG_DTC_NUM_OF_FFREC(DtcId); i++)*/
; ..\EAS\BSW\Dem\Dem.c	  2664      }/*if(DEM_CFG_DTC_FFRECNUMCLASSREF(DtcId) != NULL_PTR)*/
; ..\EAS\BSW\Dem\Dem.c	  2665  #endif
; ..\EAS\BSW\Dem\Dem.c	  2666  #if(DEM_MAX_J1939FFSIZE_OF_DTC > 0)
; ..\EAS\BSW\Dem\Dem.c	  2667      if(DEM_CFG_J1939DTC_FFRECNUMCLASSREF(DtcId) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  2668      {
; ..\EAS\BSW\Dem\Dem.c	  2669          DataBufferPtr = DEM_PRIMARY_J1939DTC_FFDATA_PTR(MemEntryId);
; ..\EAS\BSW\Dem\Dem.c	  2670          DataChangedFlag = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  2671          for(i = 0U; i < DEM_CFG_J1939DTC_NUM_OF_FFSPNC(DtcId); i++)
; ..\EAS\BSW\Dem\Dem.c	  2672          {
; ..\EAS\BSW\Dem\Dem.c	  2673              SPNIndex = DEM_CFG_J1939DTC_FFSPNC_ARRAY(DtcId)[i];
; ..\EAS\BSW\Dem\Dem.c	  2674              DataIdx = DEM_CFG_DATAARRAY_OF_FFSPN(SPNIndex);
; ..\EAS\BSW\Dem\Dem.c	  2675              DemInternal_StorageDataElement(EventId, DataIdx, &DataBufferPtr);
; ..\EAS\BSW\Dem\Dem.c	  2676          }
; ..\EAS\BSW\Dem\Dem.c	  2677      }
; ..\EAS\BSW\Dem\Dem.c	  2678  #endif
; ..\EAS\BSW\Dem\Dem.c	  2679  #if(DEM_MAX_J1939EXPFFSIZE_OF_DTC > 0)
; ..\EAS\BSW\Dem\Dem.c	  2680      if( DEM_CFG_1939DTC_EXPFFRECNUMCLASSREF(DtcId) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  2681      {
; ..\EAS\BSW\Dem\Dem.c	  2682          DataBufferPtr = DEM_PRIMARY_J1939DTC_EXPFFDATA_PTR(MemEntryId);
; ..\EAS\BSW\Dem\Dem.c	  2683  
; ..\EAS\BSW\Dem\Dem.c	  2684          DataChangedFlag = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  2685          for(i = 0U; i < DEM_CFG_J1939DTC_NUM_OF_EXPFFSPNC(DtcId); i++)
; ..\EAS\BSW\Dem\Dem.c	  2686          {
; ..\EAS\BSW\Dem\Dem.c	  2687              SPNIndex = DEM_CFG_J1939DTC_EXPFFSPNC_ARRAY(DtcId)[i];
; ..\EAS\BSW\Dem\Dem.c	  2688              DataIdx = DEM_CFG_DATAARRAY_OF_FFSPN(SPNIndex);
; ..\EAS\BSW\Dem\Dem.c	  2689              DemInternal_StorageDataElement(EventId, DataIdx, &DataBufferPtr);
; ..\EAS\BSW\Dem\Dem.c	  2690          }
; ..\EAS\BSW\Dem\Dem.c	  2691      }
; ..\EAS\BSW\Dem\Dem.c	  2692  #endif
; ..\EAS\BSW\Dem\Dem.c	  2693      return DataChangedFlag;
	mov	d2,d9
.L2255:

; ..\EAS\BSW\Dem\Dem.c	  2694  }
	ret
.L1966:
	
__DemInternal_UpdateFFData_function_end:
	.size	DemInternal_UpdateFFData,__DemInternal_UpdateFFData_function_end-DemInternal_UpdateFFData
.L1447:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_UpdateExtData',code,cluster('DemInternal_UpdateExtData')
	.sect	'.text.Dem.DemInternal_UpdateExtData'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  2695  #endif
; ..\EAS\BSW\Dem\Dem.c	  2696  
; ..\EAS\BSW\Dem\Dem.c	  2697  #if((DEM_MAX_EXTSIZE_OF_DTC > 0) && (DEM_NUM_OF_EXTDATACLASS > 0))
; ..\EAS\BSW\Dem\Dem.c	  2698  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  2699  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2700  * Function Name: DemInternal_UpdateExtData
; ..\EAS\BSW\Dem\Dem.c	  2701  *
; ..\EAS\BSW\Dem\Dem.c	  2702  * Description: Update the Extended Data of one Event/DTC.
; ..\EAS\BSW\Dem\Dem.c	  2703  *
; ..\EAS\BSW\Dem\Dem.c	  2704  * Inputs: EventId, Trigger
; ..\EAS\BSW\Dem\Dem.c	  2705  *
; ..\EAS\BSW\Dem\Dem.c	  2706  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  2707  *
; ..\EAS\BSW\Dem\Dem.c	  2708  * Return: TRUE: Data has been changed. FALSE:No data changed.
; ..\EAS\BSW\Dem\Dem.c	  2709  *
; ..\EAS\BSW\Dem\Dem.c	  2710  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  2711  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2712  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  2713  STATIC FUNC(boolean, DEM_CODE) DemInternal_UpdateExtData
; Function DemInternal_UpdateExtData
.L931:
DemInternal_UpdateExtData:	.type	func
	sub.a	a10,#8
.L2256:
	mov	e8,d5,d4
.L4504:

; ..\EAS\BSW\Dem\Dem.c	  2714  (
; ..\EAS\BSW\Dem\Dem.c	  2715      uint16 EventId,
; ..\EAS\BSW\Dem\Dem.c	  2716      Dem_EventMemoryEntryStorageTriggerType Trigger
; ..\EAS\BSW\Dem\Dem.c	  2717  )
; ..\EAS\BSW\Dem\Dem.c	  2718  {
; ..\EAS\BSW\Dem\Dem.c	  2719      boolean DataChangedFlag = FALSE;
	mov	d10,#0
.L2257:

; ..\EAS\BSW\Dem\Dem.c	  2720      uint8 RecIdx;
; ..\EAS\BSW\Dem\Dem.c	  2721      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	  2722      uint8 j;
; ..\EAS\BSW\Dem\Dem.c	  2723      uint8 DataIdx;
; ..\EAS\BSW\Dem\Dem.c	  2724      uint8 *DataBufferPtr;
; ..\EAS\BSW\Dem\Dem.c	  2725      uint16 DtcId = DEM_CFG_EVENT_DTCREF(EventId);
	mul	d15,d8,#52
.L2258:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d11,[a15]4
.L2259:

; ..\EAS\BSW\Dem\Dem.c	  2726      Dem_MemIdType MemEntryId = DEM_DTC_DATAENTRYREF(DtcId);
	mul	d15,d11,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]1868
	extr.u	d1,d0,#0,#8
.L2260:

; ..\EAS\BSW\Dem\Dem.c	  2727  
; ..\EAS\BSW\Dem\Dem.c	  2728      if(DEM_CFG_DTC_EXTDATACLASSREF(DtcId) != NULL_PTR)
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d11,#3
	ld.hu	d0,[a15]0
	sha	d0,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d0,#0
	ld.w	d15,[a15]12
.L4505:
	jeq	d15,#0,.L173
.L4506:

; ..\EAS\BSW\Dem\Dem.c	  2729      {
; ..\EAS\BSW\Dem\Dem.c	  2730          DataBufferPtr = DEM_PRIMARY_EXTDATA_PTR(MemEntryId);
	mul	d15,d1,#56
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	lea	a2,[a15]2611
.L2261:

; ..\EAS\BSW\Dem\Dem.c	  2731  
; ..\EAS\BSW\Dem\Dem.c	  2732          for(i = 0; i < DEM_CFG_DTC_NUM_OF_EXTREC(DtcId); i++)
	mov	d12,d10
.L2263:

; ..\EAS\BSW\Dem\Dem.c	  2733          {
; ..\EAS\BSW\Dem\Dem.c	  2734              RecIdx = (DEM_CFG_DTC_EXTREC_ARRAY(DtcId)[i]);
; ..\EAS\BSW\Dem\Dem.c	  2735              /*SWS_Dem_00809*//*SWS_Dem_00811*/
; ..\EAS\BSW\Dem\Dem.c	  2736              /*SWS_Dem_01069*//*SWS_Dem_00812*/
; ..\EAS\BSW\Dem\Dem.c	  2737              /*SWS_Dem_00813*//*SWS_Dem_00814*/
; ..\EAS\BSW\Dem\Dem.c	  2738              /*SWS_Dem_00815*//*SWS_Dem_00816*/
; ..\EAS\BSW\Dem\Dem.c	  2739              if(((DEM_CFG_DTC_EXTREC_UPDATA(RecIdx) == DEM_UPDATE_RECORD_YES) \ 
; ..\EAS\BSW\Dem\Dem.c	  2740                  || ((DEM_CFG_DTC_EXTREC_UPDATA(RecIdx) == DEM_UPDATE_RECORD_NO) \ 
; ..\EAS\BSW\Dem\Dem.c	  2741                      && (*DataBufferPtr == DEM_DATA_INVALID_U8))) \ 
	mov	d13,#255
.L4507:
	j	.L174
.L175:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d11,#3
	ld.hu	d0,[a15]0
	sha	d0,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]12
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_ExtDataClassTable)
	lea	a15,[a15]@los(Dem_ExtDataClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]4
.L4508:
	addsc.a	a15,a15,d12,#0
	ld.bu	d14,[a15]
.L2265:
	mul	d0,d14,#12
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d0,#0
	ld.bu	d15,[a15]10
.L4509:
	jeq	d15,#1,.L176
.L4510:
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d0,#0
	ld.bu	d15,[a15]10
.L4511:
	jne	d15,#0,.L177
.L4512:
	ld.bu	d15,[a2]
.L4513:
	jne	d15,d13,.L178
.L176:

; ..\EAS\BSW\Dem\Dem.c	  2742                  && (((DEM_CFG_DTC_EXTREC_TRIGGER(RecIdx))&Trigger) != 0))
	mul	d0,d14,#12
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d0,#0
	ld.bu	d15,[a15]9
.L2266:
	and	d15,d9
.L2267:
	jeq	d15,#0,.L179
.L4514:

; ..\EAS\BSW\Dem\Dem.c	  2743              {
; ..\EAS\BSW\Dem\Dem.c	  2744                  DataChangedFlag = TRUE;
	mov	d10,#1
.L4515:

; ..\EAS\BSW\Dem\Dem.c	  2745                  /*+ DataRecNum length(one byte)*/
; ..\EAS\BSW\Dem\Dem.c	  2746                  *DataBufferPtr = DEM_CFG_DTC_EXTRECNUM(RecIdx);
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d0,#0
	ld.bu	d15,[a15]8
.L4516:
	st.b	[a2+],d15
.L4517:

; ..\EAS\BSW\Dem\Dem.c	  2747                  DataBufferPtr += 1;
; ..\EAS\BSW\Dem\Dem.c	  2748  
; ..\EAS\BSW\Dem\Dem.c	  2749                  for(j = 0; j < DEM_CFG_NUMDATA_OF_EXTRECNUM(RecIdx); j++)
	mov	d15,#0
.L2268:
	j	.L180
.L181:

; ..\EAS\BSW\Dem\Dem.c	  2750                  {
; ..\EAS\BSW\Dem\Dem.c	  2751                      DataIdx = (DEM_CFG_DATAARRAY_OF_EXTRECNUM(RecIdx)[j]);
	mul	d0,d14,#12
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]4
.L4518:
	addsc.a	a15,a15,d15,#0
	ld.bu	d5,[a15]
.L2270:

; ..\EAS\BSW\Dem\Dem.c	  2752                      /*SWS_Dem_00468*/
; ..\EAS\BSW\Dem\Dem.c	  2753                      DemInternal_StorageDataElement(EventId, DataIdx, &DataBufferPtr);
	st.a	[a10],a2
	mov.aa	a4,a10
.L2271:
	mov	d4,d8
.L2272:
	call	DemInternal_StorageDataElement
.L2262:
	ld.a	a2,[a10]
.L2273:
	add	d15,#1
.L2269:
	extr.u	d15,d15,#0,#8
.L180:
	mul	d0,d14,#12
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d0,#0
	ld.bu	d0,[a15]
.L4519:
	jlt.u	d15,d0,.L181
.L4520:
	j	.L182
.L179:
.L178:
.L177:

; ..\EAS\BSW\Dem\Dem.c	  2754                  }
; ..\EAS\BSW\Dem\Dem.c	  2755              }
; ..\EAS\BSW\Dem\Dem.c	  2756              else
; ..\EAS\BSW\Dem\Dem.c	  2757              {
; ..\EAS\BSW\Dem\Dem.c	  2758                  /*+ DataRecNum length(one byte)*/
; ..\EAS\BSW\Dem\Dem.c	  2759                  DataBufferPtr += 1;
	add.a	a2,#1
.L4521:

; ..\EAS\BSW\Dem\Dem.c	  2760  
; ..\EAS\BSW\Dem\Dem.c	  2761                  for(j = 0; j < DEM_CFG_NUMDATA_OF_EXTRECNUM(RecIdx); j++)
	mov	d0,#0
.L2274:
	j	.L183
.L184:

; ..\EAS\BSW\Dem\Dem.c	  2762                  {
; ..\EAS\BSW\Dem\Dem.c	  2763                      DataIdx = (DEM_CFG_DATAARRAY_OF_EXTRECNUM(RecIdx)[j]);
	mul	d15,d14,#12
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]4
.L4522:
	addsc.a	a15,a15,d0,#0
	ld.bu	d15,[a15]
.L2276:

; ..\EAS\BSW\Dem\Dem.c	  2764  
; ..\EAS\BSW\Dem\Dem.c	  2765                      if(DEM_CFG_DATA_IN_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.w	d1,[a15]
.L4523:
	jeq	d1,#0,.L185
.L4524:

; ..\EAS\BSW\Dem\Dem.c	  2766                      {
; ..\EAS\BSW\Dem\Dem.c	  2767                          DataBufferPtr += DEM_CFG_DATA_IN_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]
	ld.bu	d1,[a15]
.L4525:
	addsc.a	a2,a2,d1,#0
.L185:

; ..\EAS\BSW\Dem\Dem.c	  2768                      }
; ..\EAS\BSW\Dem\Dem.c	  2769  
; ..\EAS\BSW\Dem\Dem.c	  2770                      if(DEM_CFG_DATA_CS_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.w	d1,[a15]4
.L4526:
	jeq	d1,#0,.L186
.L4527:

; ..\EAS\BSW\Dem\Dem.c	  2771                      {
; ..\EAS\BSW\Dem\Dem.c	  2772                          DataBufferPtr += DEM_CFG_DATA_CS_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]4
	ld.bu	d15,[a15]
.L2277:
	addsc.a	a2,a2,d15,#0
.L186:
	add	d0,#1
.L2275:
	extr.u	d0,d0,#0,#8
.L183:
	mul	d15,d14,#12
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L4528:
	jlt.u	d0,d15,.L184
.L182:
	add	d12,#1
.L2264:
	extr.u	d12,d12,#0,#8
.L174:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d11,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]12
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_ExtDataClassTable)
	lea	a15,[a15]@los(Dem_ExtDataClassTable)
	addsc.a	a15,a15,d15,#3
	ld.bu	d15,[a15]
.L4529:
	jlt.u	d12,d15,.L175
.L173:

; ..\EAS\BSW\Dem\Dem.c	  2773                      }
; ..\EAS\BSW\Dem\Dem.c	  2774                  }
; ..\EAS\BSW\Dem\Dem.c	  2775              }
; ..\EAS\BSW\Dem\Dem.c	  2776          }
; ..\EAS\BSW\Dem\Dem.c	  2777      }
; ..\EAS\BSW\Dem\Dem.c	  2778  	
; ..\EAS\BSW\Dem\Dem.c	  2779  	return DataChangedFlag;
	mov	d2,d10
.L2278:

; ..\EAS\BSW\Dem\Dem.c	  2780  }
	ret
.L1981:
	
__DemInternal_UpdateExtData_function_end:
	.size	DemInternal_UpdateExtData,__DemInternal_UpdateExtData_function_end-DemInternal_UpdateExtData
.L1452:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_CycleStartProcess',code,cluster('DemInternal_CycleStartProcess')
	.sect	'.text.Dem.DemInternal_CycleStartProcess'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  2781  #endif
; ..\EAS\BSW\Dem\Dem.c	  2782  
; ..\EAS\BSW\Dem\Dem.c	  2783  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  2784  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2785  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	  2786  *
; ..\EAS\BSW\Dem\Dem.c	  2787  * Description:
; ..\EAS\BSW\Dem\Dem.c	  2788  *
; ..\EAS\BSW\Dem\Dem.c	  2789  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  2790  *
; ..\EAS\BSW\Dem\Dem.c	  2791  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  2792  *
; ..\EAS\BSW\Dem\Dem.c	  2793  * Return:
; ..\EAS\BSW\Dem\Dem.c	  2794  *
; ..\EAS\BSW\Dem\Dem.c	  2795  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  2796  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2797  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  2798  STATIC FUNC(void, DEM_CODE) DemInternal_CycleStartProcess
; Function DemInternal_CycleStartProcess
.L933:
DemInternal_CycleStartProcess:	.type	func
	mov	d8,d4
.L2279:

; ..\EAS\BSW\Dem\Dem.c	  2799  (
; ..\EAS\BSW\Dem\Dem.c	  2800      uint8 OperationCycleId
; ..\EAS\BSW\Dem\Dem.c	  2801  )
; ..\EAS\BSW\Dem\Dem.c	  2802  {
; ..\EAS\BSW\Dem\Dem.c	  2803      uint16 EventId;
; ..\EAS\BSW\Dem\Dem.c	  2804      uint16 DtcId;
; ..\EAS\BSW\Dem\Dem.c	  2805      Dem_UdsStatusByteType EventOldStatus;
; ..\EAS\BSW\Dem\Dem.c	  2806      Dem_UdsStatusByteType EventNewStatus;
; ..\EAS\BSW\Dem\Dem.c	  2807  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  2808  #if(DEM_NUM_OF_RATIO > 0)
; ..\EAS\BSW\Dem\Dem.c	  2809      Dem_RatioIdType RatioID;
; ..\EAS\BSW\Dem\Dem.c	  2810  #endif
; ..\EAS\BSW\Dem\Dem.c	  2811  #endif
; ..\EAS\BSW\Dem\Dem.c	  2812  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  2813      uint8 EventCmaStatus;
; ..\EAS\BSW\Dem\Dem.c	  2814  #endif
; ..\EAS\BSW\Dem\Dem.c	  2815  
; ..\EAS\BSW\Dem\Dem.c	  2816  
; ..\EAS\BSW\Dem\Dem.c	  2817      for(EventId = 0; EventId < DEM_NUM_OF_EVENT; EventId++)
	mov	d9,#0
.L2280:

; ..\EAS\BSW\Dem\Dem.c	  2818      {
; ..\EAS\BSW\Dem\Dem.c	  2819          if(OperationCycleId == DEM_CFG_EVENT_OPCYCREF(EventId))
; ..\EAS\BSW\Dem\Dem.c	  2820          {
; ..\EAS\BSW\Dem\Dem.c	  2821              DtcId = DEM_CFG_EVENT_DTCREF(EventId);
; ..\EAS\BSW\Dem\Dem.c	  2822              EventOldStatus = DEM_DTC_STATUS(DtcId);
; ..\EAS\BSW\Dem\Dem.c	  2823              EventNewStatus = DEM_DTC_STATUS(DtcId);
; ..\EAS\BSW\Dem\Dem.c	  2824              Dem_DTC_FirstFdcThreshold[DEM_CFG_EVENT_DTCREF(EventId)] = FALSE;
	mov	e10,d9,d9
.L4534:

; ..\EAS\BSW\Dem\Dem.c	  2825  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  2826              /*SWS_Dem_00674*//*SWS_Dem_00675*/
; ..\EAS\BSW\Dem\Dem.c	  2827              if((DEM_CFG_EVENT_DBC(EventId) != NULL_PTR) && (DEM_CFG_EVENT_DBC_STORAGE(EventId) != TRUE))
; ..\EAS\BSW\Dem\Dem.c	  2828              {
; ..\EAS\BSW\Dem\Dem.c	  2829                  /*SWS_Dem_00344*/
; ..\EAS\BSW\Dem\Dem.c	  2830                  DEM_EVENT_DBC(EventId) = 0;
; ..\EAS\BSW\Dem\Dem.c	  2831              }
; ..\EAS\BSW\Dem\Dem.c	  2832  #endif
; ..\EAS\BSW\Dem\Dem.c	  2833  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  2834              DEM_EVENT_DBT(EventId) = 0;
; ..\EAS\BSW\Dem\Dem.c	  2835              DEM_EVENT_TIMERDIRECTION(EventId) = DEM_DATA_INVALID_U8;
	mov	d12,#255
.L4535:

; ..\EAS\BSW\Dem\Dem.c	  2836              Dem_EventDBTFreezeFlag[EventId] = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  2837  #endif
; ..\EAS\BSW\Dem\Dem.c	  2838  
; ..\EAS\BSW\Dem\Dem.c	  2839  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  2840              if((!DEM_TEST_UDS_STATUS_TFTOC(EventNewStatus)) \ 
; ..\EAS\BSW\Dem\Dem.c	  2841                      && (!DEM_TEST_UDS_STATUS_TNCTOC(EventNewStatus)))
; ..\EAS\BSW\Dem\Dem.c	  2842              {
; ..\EAS\BSW\Dem\Dem.c	  2843                  DEM_EVENT_FCC(EventId) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  2844              }
; ..\EAS\BSW\Dem\Dem.c	  2845  
; ..\EAS\BSW\Dem\Dem.c	  2846              EventCmaStatus = DEM_EVENT_CMA_STATUS(EventId);
; ..\EAS\BSW\Dem\Dem.c	  2847              EventCmaStatus = DEM_CLEAR_CMA_STATUS_UDTCTOC(EventCmaStatus);
; ..\EAS\BSW\Dem\Dem.c	  2848              DEM_EVENT_CMA_STATUS(EventId) = EventCmaStatus;
; ..\EAS\BSW\Dem\Dem.c	  2849  #endif
; ..\EAS\BSW\Dem\Dem.c	  2850  
; ..\EAS\BSW\Dem\Dem.c	  2851              /*SWS_Dem_00790 The maximum FDC during current operation cycle
; ..\EAS\BSW\Dem\Dem.c	  2852              shall be reset to zero with each (re-)start operation cycle.*/
; ..\EAS\BSW\Dem\Dem.c	  2853              DEM_EVENT_MAXFDCDCC(EventId) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  2854  
; ..\EAS\BSW\Dem\Dem.c	  2855              /*clear bit1 TestFailedThisOperationCycle*//*SWS_Dem_00389*/
; ..\EAS\BSW\Dem\Dem.c	  2856              EventNewStatus = DEM_CLEAR_UDS_STATUS_TFTOC(EventNewStatus);
; ..\EAS\BSW\Dem\Dem.c	  2857  #if(DEM_CFG_STATUSBITSTORAGE_TF != STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  2858              /*clear bit0 TestFailed*//*SWS_Dem_00525*/
; ..\EAS\BSW\Dem\Dem.c	  2859              EventNewStatus = DEM_CLEAR_UDS_STATUS_TF(EventNewStatus);
; ..\EAS\BSW\Dem\Dem.c	  2860  #endif
; ..\EAS\BSW\Dem\Dem.c	  2861              /*set bit6 testNotCompletedThisOperationCycle*//*SWS_Dem_00394*/
; ..\EAS\BSW\Dem\Dem.c	  2862              EventNewStatus = DEM_SET_UDS_STATUS_TNCTOC(EventNewStatus);
; ..\EAS\BSW\Dem\Dem.c	  2863  
; ..\EAS\BSW\Dem\Dem.c	  2864              /*save the current and last operation cycle status*/
; ..\EAS\BSW\Dem\Dem.c	  2865              DEM_DTC_LASTSTATUS(DtcId) = EventNewStatus;
; ..\EAS\BSW\Dem\Dem.c	  2866              DEM_DTC_STATUS(DtcId) = EventNewStatus;
; ..\EAS\BSW\Dem\Dem.c	  2867  
; ..\EAS\BSW\Dem\Dem.c	  2868              if(EventNewStatus != EventOldStatus)
; ..\EAS\BSW\Dem\Dem.c	  2869              {
; ..\EAS\BSW\Dem\Dem.c	  2870                  /*SWS_Dem_00284*/
; ..\EAS\BSW\Dem\Dem.c	  2871                  (void)DEM_CFG_DTC_STATUSCHANGED_CALLFNC(DEM_CFG_DTC_VALUE(DtcId), EventOldStatus, EventNewStatus);
	movh.a	a12,#@his(Dem_DtcStatusChangedNotificationArray)
.L4536:

; ..\EAS\BSW\Dem\Dem.c	  2872                  if(NULL_PTR != DEM_CFG_EVENT_STATUSCHANGED_CALLFNC(EventId))
	mov.a	a13,#0
.L4537:
	mov	d13,#116
.L4538:
	j	.L188
.L189:
	mul	d15,d9,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]18
.L4539:
	jne	d8,d0,.L190
.L4540:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d2,[a15]4
.L2281:
	mul	d0,d2,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
	ld.bu	d14,[a15]1864
.L2283:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
	ld.bu	d0,[a15]1864
.L2284:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d1,[a15]4
.L4541:
	movh.a	a15,#@his(Dem_DTC_FirstFdcThreshold)
	lea	a15,[a15]@los(Dem_DTC_FirstFdcThreshold)
.L4542:
	addsc.a	a15,a15,d1,#0
.L4543:
	st.b	[a15],d10
.L4544:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.w	d1,[a15]20
.L4545:
	jeq	d1,#0,.L191
.L4546:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]20
	ld.bu	d15,[a15]16
.L4547:
	jeq	d15,#1,.L192
.L4548:
	sha	d15,d9,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4549:
	st.h	[a15]10,d10
.L192:
.L191:
	sha	d15,d9,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4550:
	st.w	[a15]12,d11
.L4551:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4552:
	st.b	[a15]16,d12
.L4553:
	movh.a	a15,#@his(Dem_EventDBTFreezeFlag)
	lea	a15,[a15]@los(Dem_EventDBTFreezeFlag)
.L4554:
	addsc.a	a15,a15,d9,#0
.L4555:
	st.b	[a15],d11
.L4556:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4557:
	st.b	[a15]17,d11
.L4558:
	and	d15,d0,#252
.L2286:
	or	d15,#64
.L2285:
	mul	d0,d2,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
.L4559:
	st.b	[a15]1865,d15
.L4560:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
.L4561:
	st.b	[a15]1864,d15
.L4562:
	jeq	d15,d14,.L193
.L4563:
	ld.a	a2,[a12]@los(Dem_DtcStatusChangedNotificationArray)
.L4564:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d2,#3
	ld.w	d4,[a15]4
.L4565:
	mov	d5,d14
.L2288:
	mov	d6,d15
.L2289:
	calli	a2
.L2282:
	mul	d0,d9,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]44
.L4566:
	jeq.a	a13,a15,.L194
.L4567:

; ..\EAS\BSW\Dem\Dem.c	  2873                  {
; ..\EAS\BSW\Dem\Dem.c	  2874                      /*SWS_Dem_00016*/
; ..\EAS\BSW\Dem\Dem.c	  2875                      (void)DEM_CFG_EVENT_STATUSCHANGED_CALLFNC(EventId)(EventOldStatus, EventNewStatus);
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]44
.L4568:
	mov	e4,d15,d14
	calli	a15
.L194:

; ..\EAS\BSW\Dem\Dem.c	  2876                  }
; ..\EAS\BSW\Dem\Dem.c	  2877  #if(DEM_CFG_TRIGGER_FIM_REPORTS == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  2878                  FiM_DemTriggerOnEventStatus(EventId, EventOldStatus, EventNewStatus);
	mov	e4,d14,d9
	mov	d6,d15
.L2290:
	call	FiM_DemTriggerOnEventStatus
.L193:

; ..\EAS\BSW\Dem\Dem.c	  2879  #endif
; ..\EAS\BSW\Dem\Dem.c	  2880              }
; ..\EAS\BSW\Dem\Dem.c	  2881              /*SWS_Dem_00679*/
; ..\EAS\BSW\Dem\Dem.c	  2882              if(DEM_CFG_EVENT_INITM_CALLFNC(EventId) != NULL_PTR)
	mul	d0,d9,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.w	d15,[a15]48
.L2287:
	jeq	d15,#0,.L195
.L4569:

; ..\EAS\BSW\Dem\Dem.c	  2883              {
; ..\EAS\BSW\Dem\Dem.c	  2884                  DEM_CFG_EVENT_INITM_CALLFNC(EventId)(DEM_INIT_MONITOR_RESTART);
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]48
.L4570:
	mov	d4,#2
	calli	a15
.L195:
.L190:
	add	d9,#1
.L188:
	jlt.u	d9,d13,.L189
.L4571:

; ..\EAS\BSW\Dem\Dem.c	  2885              }
; ..\EAS\BSW\Dem\Dem.c	  2886          }
; ..\EAS\BSW\Dem\Dem.c	  2887      }/*for(EventId = 0; EventId < DEM_NUM_OF_EVENT; EventId++)*/
; ..\EAS\BSW\Dem\Dem.c	  2888  
; ..\EAS\BSW\Dem\Dem.c	  2889  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  2890  #if(DEM_NUM_OF_RATIO > 0)
; ..\EAS\BSW\Dem\Dem.c	  2891      if(DEM_CFG_OPCYC_TYPE(OperationCycleId) == DEM_OPCYC_IGNITION)
; ..\EAS\BSW\Dem\Dem.c	  2892      {
; ..\EAS\BSW\Dem\Dem.c	  2893          if(DEM_OBD_RATIO_IGN_CNT >= DEM_OBD_NUMDEN_MAX_VALUE)
; ..\EAS\BSW\Dem\Dem.c	  2894          {
; ..\EAS\BSW\Dem\Dem.c	  2895              DEM_OBD_RATIO_IGN_CNT = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  2896          }
; ..\EAS\BSW\Dem\Dem.c	  2897  
; ..\EAS\BSW\Dem\Dem.c	  2898          /*Clear the General Denominator increased flag*/
; ..\EAS\BSW\Dem\Dem.c	  2899          DEM_OBD_RATIO_GENDEN_STATE &= (~DEM_OBD_DEN_INCREASED_MASK);
; ..\EAS\BSW\Dem\Dem.c	  2900          /*Reset the General Denominator condition state.*/
; ..\EAS\BSW\Dem\Dem.c	  2901          DEM_OBD_RATIO_DENOMCOND_STATUS(DEM_IUMPR_GENERAL_DENOMINATOR) = DEM_IUMPR_DEN_STATUS_NOT_REACHED;
; ..\EAS\BSW\Dem\Dem.c	  2902          /*Ignition Cycle counter increase 1*/
; ..\EAS\BSW\Dem\Dem.c	  2903          DEM_OBD_RATIO_IGN_CNT++;
; ..\EAS\BSW\Dem\Dem.c	  2904  
; ..\EAS\BSW\Dem\Dem.c	  2905          if(DEM_OBD_RATIO_GENDEN_CNT >= DEM_OBD_NUMDEN_MAX_VALUE)
; ..\EAS\BSW\Dem\Dem.c	  2906          {
; ..\EAS\BSW\Dem\Dem.c	  2907              DEM_OBD_RATIO_GENDEN_CNT = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  2908          }
; ..\EAS\BSW\Dem\Dem.c	  2909      }
; ..\EAS\BSW\Dem\Dem.c	  2910  
; ..\EAS\BSW\Dem\Dem.c	  2911      if(DEM_CFG_OPCYC_TYPE(OperationCycleId) == DEM_OPCYC_OBD_DCY)
; ..\EAS\BSW\Dem\Dem.c	  2912      {
; ..\EAS\BSW\Dem\Dem.c	  2913          /*Reset status enabled all readiness group*/
; ..\EAS\BSW\Dem\Dem.c	  2914          DEM_OBD_READINESSGROUP_STATUS[0] = (uint8)0x03;
; ..\EAS\BSW\Dem\Dem.c	  2915          DEM_OBD_READINESSGROUP_STATUS[0] = (uint8)0xFF;
; ..\EAS\BSW\Dem\Dem.c	  2916  
; ..\EAS\BSW\Dem\Dem.c	  2917          for(RatioID = 0; RatioID < DEM_NUM_OF_RATIO; RatioID++)
; ..\EAS\BSW\Dem\Dem.c	  2918          {
; ..\EAS\BSW\Dem\Dem.c	  2919              /*Clear the Denominator increased flag*/
; ..\EAS\BSW\Dem\Dem.c	  2920              DEM_OBD_RATIO_STATE(RatioID) &= (~DEM_OBD_DEN_INCREASED_MASK);
; ..\EAS\BSW\Dem\Dem.c	  2921              /*Clear the Numerator increased flag*/
; ..\EAS\BSW\Dem\Dem.c	  2922              DEM_OBD_RATIO_STATE(RatioID) &= (~DEM_OBD_NUM_INCREASED_MASK);
; ..\EAS\BSW\Dem\Dem.c	  2923          }
; ..\EAS\BSW\Dem\Dem.c	  2924          /*Reset additional IUMPR denominator condition state.*/
; ..\EAS\BSW\Dem\Dem.c	  2925          DEM_OBD_RATIO_DENOMCOND_STATUS(DEM_IUMPR_DEN_COND_COLDSTART) = DEM_IUMPR_DEN_STATUS_NOT_REACHED;
; ..\EAS\BSW\Dem\Dem.c	  2926          DEM_OBD_RATIO_DENOMCOND_STATUS(DEM_IUMPR_DEN_COND_EVAP) = DEM_IUMPR_DEN_STATUS_NOT_REACHED;
; ..\EAS\BSW\Dem\Dem.c	  2927          DEM_OBD_RATIO_DENOMCOND_STATUS(DEM_IUMPR_DEN_COND_500MI) = DEM_IUMPR_DEN_STATUS_NOT_REACHED;
; ..\EAS\BSW\Dem\Dem.c	  2928      }
; ..\EAS\BSW\Dem\Dem.c	  2929  #endif/*#if(DEM_NUM_OF_RATIO > 0)*/
; ..\EAS\BSW\Dem\Dem.c	  2930  #endif/*#if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))*/
; ..\EAS\BSW\Dem\Dem.c	  2931  }
	ret
.L1992:
	
__DemInternal_CycleStartProcess_function_end:
	.size	DemInternal_CycleStartProcess,__DemInternal_CycleStartProcess_function_end-DemInternal_CycleStartProcess
.L1457:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_CycleEndProcess',code,cluster('DemInternal_CycleEndProcess')
	.sect	'.text.Dem.DemInternal_CycleEndProcess'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  2932  
; ..\EAS\BSW\Dem\Dem.c	  2933  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  2934  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2935  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	  2936  *
; ..\EAS\BSW\Dem\Dem.c	  2937  * Description:
; ..\EAS\BSW\Dem\Dem.c	  2938  *
; ..\EAS\BSW\Dem\Dem.c	  2939  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  2940  *
; ..\EAS\BSW\Dem\Dem.c	  2941  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  2942  *
; ..\EAS\BSW\Dem\Dem.c	  2943  * Return:
; ..\EAS\BSW\Dem\Dem.c	  2944  *
; ..\EAS\BSW\Dem\Dem.c	  2945  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  2946  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  2947  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  2948  STATIC FUNC(void, DEM_CODE) DemInternal_CycleEndProcess
; Function DemInternal_CycleEndProcess
.L935:
DemInternal_CycleEndProcess:	.type	func
	sub.a	a10,#8
.L2291:
	mov	d8,d4
.L2292:

; ..\EAS\BSW\Dem\Dem.c	  2949  (
; ..\EAS\BSW\Dem\Dem.c	  2950      uint8 OperationCycleId
; ..\EAS\BSW\Dem\Dem.c	  2951  )
; ..\EAS\BSW\Dem\Dem.c	  2952  {
; ..\EAS\BSW\Dem\Dem.c	  2953      uint16 EventId;
; ..\EAS\BSW\Dem\Dem.c	  2954      uint16 DtcId;
; ..\EAS\BSW\Dem\Dem.c	  2955      Dem_UdsStatusByteType DtcOldStatus;
; ..\EAS\BSW\Dem\Dem.c	  2956      Dem_UdsStatusByteType DtcNewStatus;
; ..\EAS\BSW\Dem\Dem.c	  2957      Dem_UdsStatusByteType EventCurStatus;
; ..\EAS\BSW\Dem\Dem.c	  2958  
; ..\EAS\BSW\Dem\Dem.c	  2959      for(EventId = 0; EventId < DEM_NUM_OF_EVENT; EventId++)
	mov	d9,#0
.L2293:

; ..\EAS\BSW\Dem\Dem.c	  2960      {
; ..\EAS\BSW\Dem\Dem.c	  2961          if(OperationCycleId == DEM_CFG_EVENT_OPCYCREF(EventId))
; ..\EAS\BSW\Dem\Dem.c	  2962          {
; ..\EAS\BSW\Dem\Dem.c	  2963              EventCurStatus = DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId));
; ..\EAS\BSW\Dem\Dem.c	  2964              /*The counter shall be started*/
; ..\EAS\BSW\Dem\Dem.c	  2965              if((DEM_DTC_DATAENTRYREF(DEM_CFG_EVENT_DTCREF(EventId)) != DEM_DATA_INVALID_U16) \ 
	mov.u	d10,#65535
.L4576:

; ..\EAS\BSW\Dem\Dem.c	  2966                      && (DEM_TEST_UDS_STATUS_TFSLC(EventCurStatus)))
; ..\EAS\BSW\Dem\Dem.c	  2967              {
; ..\EAS\BSW\Dem\Dem.c	  2968                  /*SWS_Dem_00773*//*SWS_Dem_00774*/
; ..\EAS\BSW\Dem\Dem.c	  2969                  if(DEM_EVENT_CSLF(EventId) < DEM_DATA_U8_FF)
	mov	d11,#255
.L4577:

; ..\EAS\BSW\Dem\Dem.c	  2970                  {
; ..\EAS\BSW\Dem\Dem.c	  2971                      DEM_EVENT_CSLF(EventId)++;
; ..\EAS\BSW\Dem\Dem.c	  2972                  }
; ..\EAS\BSW\Dem\Dem.c	  2973                  /*SWS_Dem_00777*//*SWS_Dem_00778*/
; ..\EAS\BSW\Dem\Dem.c	  2974                  if(DEM_EVENT_CSFF(EventId) < DEM_DATA_U8_FF)
	mov	d12,#255
.L4578:
	j	.L196
.L197:
	mul	d15,d9,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]18
.L4579:
	jne	d8,d0,.L198
.L4580:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]4
	mul	d0,d0,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
	ld.bu	d1,[a15]1864
.L2294:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]4
	mul	d15,d15,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]1868
.L4581:
	jeq	d15,d10,.L199
.L4582:
	jz.t	d1:5,.L200
.L4583:
	sha	d15,d9,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]19
.L4584:
	jge.u	d0,d11,.L201
.L4585:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	movh.a	a2,#@his(Dem_StorageMem)
	lea	a2,[a2]@los(Dem_StorageMem)
	addsc.a	a2,a2,d15,#0
	ld.bu	d15,[a2]19
.L4586:
	add	d15,#1
	st.b	[a15]19,d15
.L201:
	sha	d15,d9,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]20
.L4587:
	jge.u	d0,d12,.L202
.L4588:

; ..\EAS\BSW\Dem\Dem.c	  2975                  {
; ..\EAS\BSW\Dem\Dem.c	  2976                      DEM_EVENT_CSFF(EventId)++;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	movh.a	a2,#@his(Dem_StorageMem)
	lea	a2,[a2]@los(Dem_StorageMem)
	addsc.a	a2,a2,d15,#0
	ld.bu	d15,[a2]20
.L4589:
	add	d15,#1
	st.b	[a15]20,d15
.L202:

; ..\EAS\BSW\Dem\Dem.c	  2977                  }
; ..\EAS\BSW\Dem\Dem.c	  2978  #if(STD_OFF == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  2979                  /*SWS_Dem_00781*//*SWS_Dem_00782*/
; ..\EAS\BSW\Dem\Dem.c	  2980                  if((DEM_TEST_UDS_STATUS_TFTOC(EventCurStatus)) \ 
	jz.t	d1:1,.L203
.L4590:

; ..\EAS\BSW\Dem\Dem.c	  2981                      && (DEM_EVENT_FCSLC(EventId) < DEM_DATA_U8_FF))
	sha	d15,d9,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]21
.L4591:
	mov	d1,#255
.L2295:
	jge.u	d0,d1,.L204
.L4592:

; ..\EAS\BSW\Dem\Dem.c	  2982                  {
; ..\EAS\BSW\Dem\Dem.c	  2983                      DEM_EVENT_FCSLC(EventId)++;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	movh.a	a2,#@his(Dem_StorageMem)
	lea	a2,[a2]@los(Dem_StorageMem)
	addsc.a	a2,a2,d15,#0
	ld.bu	d15,[a2]21
.L4593:
	add	d15,#1
	st.b	[a15]21,d15
.L204:
.L203:
.L200:
.L199:

; ..\EAS\BSW\Dem\Dem.c	  2984                  }
; ..\EAS\BSW\Dem\Dem.c	  2985  #endif
; ..\EAS\BSW\Dem\Dem.c	  2986              }
; ..\EAS\BSW\Dem\Dem.c	  2987  
; ..\EAS\BSW\Dem\Dem.c	  2988  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  2989              if((DEM_TEST_UDS_STATUS_TFSLC(EventCurStatus)) \ 
; ..\EAS\BSW\Dem\Dem.c	  2990                  && (!DEM_TEST_UDS_STATUS_TFTOC(EventCurStatus)) \ 
; ..\EAS\BSW\Dem\Dem.c	  2991                  && (!DEM_TEST_UDS_STATUS_TNCTOC(EventCurStatus)) \ 
; ..\EAS\BSW\Dem\Dem.c	  2992                  && (DEM_EVENT_OBD_PCSLF(EventId) < DEM_OBD_PCSLF_MAXVALUE))
; ..\EAS\BSW\Dem\Dem.c	  2993              {
; ..\EAS\BSW\Dem\Dem.c	  2994                  DEM_EVENT_OBD_PCSLF(EventId)++;
; ..\EAS\BSW\Dem\Dem.c	  2995              }
; ..\EAS\BSW\Dem\Dem.c	  2996  #endif
; ..\EAS\BSW\Dem\Dem.c	  2997              /*Capture data before operation cycle end*/
; ..\EAS\BSW\Dem\Dem.c	  2998              if(TRUE == DemInternal_GetCaptureQueue(EventId, NULL_PTR))
	mov.a	a4,#0
	mov	d4,d9
.L2296:
	call	DemInternal_GetCaptureQueue
.L2297:
	jeq	d2,#0,.L205
.L4594:

; ..\EAS\BSW\Dem\Dem.c	  2999              {
; ..\EAS\BSW\Dem\Dem.c	  3000                  DemInternal_CaptureData(EventId);
	mov	d4,d9
.L2298:
	call	DemInternal_CaptureData
.L205:
.L198:

; ..\EAS\BSW\Dem\Dem.c	  3001              }
; ..\EAS\BSW\Dem\Dem.c	  3002          }
; ..\EAS\BSW\Dem\Dem.c	  3003  
; ..\EAS\BSW\Dem\Dem.c	  3004          /*Aging process*/
; ..\EAS\BSW\Dem\Dem.c	  3005          /*SWS_Dem_00985*/
; ..\EAS\BSW\Dem\Dem.c	  3006          /*SWS_Dem_00489: The Dem module shall only allow processing
; ..\EAS\BSW\Dem\Dem.c	  3007          (counting further)the value of the aging counter, if the related
; ..\EAS\BSW\Dem\Dem.c	  3008          event is stored in the event memory and is qualified as passed.
; ..\EAS\BSW\Dem\Dem.c	  3009          Note: Aging is independent of the UDS status bit 3 (ConfirmedDTC)
; ..\EAS\BSW\Dem\Dem.c	  3010          and therefore independent of the fault confirmation.*/
; ..\EAS\BSW\Dem\Dem.c	  3011          DtcId = DEM_CFG_EVENT_DTCREF(EventId);
	mul	d0,d9,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.hu	d15,[a15]4
.L2299:
	st.w	[a10],d15
.L2301:

; ..\EAS\BSW\Dem\Dem.c	  3012          DtcOldStatus = DEM_DTC_STATUS(DtcId);
	mul	d15,d15,#6
.L2300:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d13,[a15]1864
.L2302:

; ..\EAS\BSW\Dem\Dem.c	  3013          DtcNewStatus = DEM_DTC_STATUS(DtcId);
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d14,[a15]1864
.L2303:

; ..\EAS\BSW\Dem\Dem.c	  3014  
; ..\EAS\BSW\Dem\Dem.c	  3015          /*if(OperationCycleId == DEM_CFG_DTC_AGINGCYCREF(DtcId))*/
; ..\EAS\BSW\Dem\Dem.c	  3016          if(OperationCycleId == DEM_CFG_EVENT_OPCYCREF(EventId))
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.bu	d15,[a15]18
.L4595:
	jne	d15,d8,.L206
.L4596:

; ..\EAS\BSW\Dem\Dem.c	  3017          {
; ..\EAS\BSW\Dem\Dem.c	  3018  #if(DEM_NUM_OF_INDICATOR > 0)
; ..\EAS\BSW\Dem\Dem.c	  3019              DemInternal_IndicatorOffCriteriaFulfilled(EventId, DEM_CYCLE_END, DtcOldStatus, &DtcNewStatus);
; ..\EAS\BSW\Dem\Dem.c	  3020  #endif
; ..\EAS\BSW\Dem\Dem.c	  3021  #if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)
; ..\EAS\BSW\Dem\Dem.c	  3022              if((!DEM_TEST_UDS_STATUS_TFTOC(DtcOldStatus)) \ 
; ..\EAS\BSW\Dem\Dem.c	  3023                  && (!DEM_TEST_UDS_STATUS_TNCTOC(DtcOldStatus)))
; ..\EAS\BSW\Dem\Dem.c	  3024              {
; ..\EAS\BSW\Dem\Dem.c	  3025                  DemInternal_RemoveEventPermanentEntry(EventId);
; ..\EAS\BSW\Dem\Dem.c	  3026              }
; ..\EAS\BSW\Dem\Dem.c	  3027  #endif
; ..\EAS\BSW\Dem\Dem.c	  3028  
; ..\EAS\BSW\Dem\Dem.c	  3029  #if(DEM_CFG_AGINGREQUIRESTESTEDCYCLE == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  3030              if((!DEM_TEST_UDS_STATUS_TFTOC(DtcOldStatus)) \ 
	jnz.t	d13:1,.L207
.L4597:

; ..\EAS\BSW\Dem\Dem.c	  3031                  && (!DEM_TEST_UDS_STATUS_TNCTOC(DtcOldStatus)))
	jnz.t	d13:6,.L208
.L4598:

; ..\EAS\BSW\Dem\Dem.c	  3032  #else
; ..\EAS\BSW\Dem\Dem.c	  3033              if(!DEM_TEST_UDS_STATUS_TFTOC(DtcOldStatus))
; ..\EAS\BSW\Dem\Dem.c	  3034  #endif
; ..\EAS\BSW\Dem\Dem.c	  3035              {
; ..\EAS\BSW\Dem\Dem.c	  3036                  /*BIT2_Pending_DTC*//*SWS_Dem_00390*//*SWS_Dem_01183*/
; ..\EAS\BSW\Dem\Dem.c	  3037                  if(DEM_TEST_UDS_STATUS_PDTC(DtcOldStatus))
	jz.t	d13:2,.L209
.L4599:

; ..\EAS\BSW\Dem\Dem.c	  3038                  {
; ..\EAS\BSW\Dem\Dem.c	  3039                      DtcNewStatus = DEM_CLEAR_UDS_STATUS_PDTC(DtcOldStatus);
	and	d14,d13,#251
.L4600:

; ..\EAS\BSW\Dem\Dem.c	  3040  #if(STD_OFF == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  3041                      DEM_EVENT_FCC(EventId) = DEM_DATA_CLEAR;
	sha	d15,d9,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4601:
	mov	d15,#0
.L4602:
	st.b	[a15]8,d15
.L209:
.L208:
.L207:
.L206:

; ..\EAS\BSW\Dem\Dem.c	  3042  #endif
; ..\EAS\BSW\Dem\Dem.c	  3043                  }
; ..\EAS\BSW\Dem\Dem.c	  3044  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  3045                  if(!DEM_TEST_UDS_STATUS_CDTC(DtcOldStatus))
; ..\EAS\BSW\Dem\Dem.c	  3046                  {
; ..\EAS\BSW\Dem\Dem.c	  3047                      DemInternal_ClearOBDFreezeFrame(EventId);
; ..\EAS\BSW\Dem\Dem.c	  3048                  }
; ..\EAS\BSW\Dem\Dem.c	  3049  #endif
; ..\EAS\BSW\Dem\Dem.c	  3050              }
; ..\EAS\BSW\Dem\Dem.c	  3051          }
; ..\EAS\BSW\Dem\Dem.c	  3052  
; ..\EAS\BSW\Dem\Dem.c	  3053          if((DEM_DTC_DATAENTRYREF(DtcId) != DEM_DATA_INVALID_U16) \ 
	ld.w	d15,[a10]
.L2304:
	mul	d2,d15,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d2,#0
	ld.hu	d0,[a15]1868
.L4603:
	mov.u	d1,#65535
.L4604:
	jeq	d0,d1,.L210
.L4605:

; ..\EAS\BSW\Dem\Dem.c	  3054              && (OperationCycleId == DEM_CFG_DTC_AGINGCYCREF(DtcId)) \ 
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.hu	d0,[a15]0
	sha	d0,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d0,#0
	ld.bu	d15,[a15]6
.L2305:
	jne	d15,d8,.L211
.L4606:

; ..\EAS\BSW\Dem\Dem.c	  3055              && (DEM_CFG_DTC_AGING_ALLOWED(DtcId) == TRUE))
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	ld.w	d15,[a10]
.L2306:
	addsc.a	a15,a15,d15,#3
	ld.hu	d0,[a15]0
	sha	d0,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d0,#0
	ld.bu	d15,[a15]
.L2307:
	jne	d15,#1,.L212
.L4607:

; ..\EAS\BSW\Dem\Dem.c	  3056          {
; ..\EAS\BSW\Dem\Dem.c	  3057              /*SWS_Dem_00490*//*SWS_Dem_00826*/
; ..\EAS\BSW\Dem\Dem.c	  3058  #if(DEM_CFG_AGINGREQUIRESTESTEDCYCLE == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  3059              if((!DEM_TEST_UDS_STATUS_TFTOC(DtcOldStatus)) \ 
	jnz.t	d13:1,.L213
.L4608:

; ..\EAS\BSW\Dem\Dem.c	  3060                  && (!DEM_TEST_UDS_STATUS_TNCTOC(DtcOldStatus)))
	jnz.t	d13:6,.L214
.L4609:

; ..\EAS\BSW\Dem\Dem.c	  3061  #else
; ..\EAS\BSW\Dem\Dem.c	  3062              if(!DEM_TEST_UDS_STATUS_TFTOC(DtcOldStatus))
; ..\EAS\BSW\Dem\Dem.c	  3063  #endif
; ..\EAS\BSW\Dem\Dem.c	  3064              {
; ..\EAS\BSW\Dem\Dem.c	  3065                  /*SWS_Dem_01184*/
; ..\EAS\BSW\Dem\Dem.c	  3066                  DEM_DTC_AGINGCNT(DtcId)++;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d2,#0
	movh.a	a2,#@his(Dem_StorageMem)
	lea	a2,[a2]@los(Dem_StorageMem)
	addsc.a	a2,a2,d2,#0
	ld.bu	d15,[a2]1866
.L4610:
	add	d15,#1
	st.b	[a15]1866,d15
.L214:
.L213:

; ..\EAS\BSW\Dem\Dem.c	  3067              }
; ..\EAS\BSW\Dem\Dem.c	  3068              /*else
; ..\EAS\BSW\Dem\Dem.c	  3069              {
; ..\EAS\BSW\Dem\Dem.c	  3070                  DEM_DTC_AGINGCNT(DtcId) = 0;
; ..\EAS\BSW\Dem\Dem.c	  3071              }*/
; ..\EAS\BSW\Dem\Dem.c	  3072  
; ..\EAS\BSW\Dem\Dem.c	  3073              if(DEM_DTC_AGINGCNT(DtcId) >= DEM_CFG_AGINGCYCLECOUNTERTHRESHOLD(DtcId))
	ld.w	d15,[a10]
.L2308:
	mul	d15,d15,#6
.L2309:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]1866
.L4611:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	ld.w	d15,[a10]
.L2310:
	addsc.a	a15,a15,d15,#3
	ld.hu	d15,[a15]0
.L2311:
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]2
.L4612:
	jlt.u	d0,d15,.L215
.L4613:

; ..\EAS\BSW\Dem\Dem.c	  3074              {
; ..\EAS\BSW\Dem\Dem.c	  3075                  /*Clear event info*/
; ..\EAS\BSW\Dem\Dem.c	  3076                  DemInternal_ClearOneEvent(EventId, TRUE);
	mov	d5,#1
	mov	d4,d9
.L2312:
	call	DemInternal_ClearOneEvent
.L2313:

; ..\EAS\BSW\Dem\Dem.c	  3077                  /*Clear DTC info*/
; ..\EAS\BSW\Dem\Dem.c	  3078                  /*SWS_Dem_00391*//*SWS_Dem_00498*/
; ..\EAS\BSW\Dem\Dem.c	  3079                  DtcNewStatus = DEM_CLEAR_UDS_STATUS_CDTC(DtcNewStatus);
	and	d14,d14,#215
.L4614:

; ..\EAS\BSW\Dem\Dem.c	  3080  #if(DEM_CFG_STATUSBITHANDLING_TFSLC == DEM_STATUS_BIT_AGING_AND_DISPLACEMENT)
; ..\EAS\BSW\Dem\Dem.c	  3081                  /*SWS_Dem_00393*//*SWS_Dem_01054*/
; ..\EAS\BSW\Dem\Dem.c	  3082                  DtcNewStatus = DEM_CLEAR_UDS_STATUS_TFSLC(DtcNewStatus);
; ..\EAS\BSW\Dem\Dem.c	  3083  #endif
; ..\EAS\BSW\Dem\Dem.c	  3084                  DEM_DTC_AGINGCNT(DtcId) = DEM_DATA_CLEAR;
	ld.w	d15,[a10]
.L2314:
	mul	d15,d15,#6
.L2315:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4615:
	mov	d0,#0
.L4616:
	st.b	[a15]1866,d0
.L4617:

; ..\EAS\BSW\Dem\Dem.c	  3085                  if(DEM_DTC_AGEDCNT(DtcId) < DEM_DATA_U8_FF)
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]1867
.L4618:
	mov	d1,#255
.L4619:
	jge.u	d0,d1,.L216
.L4620:

; ..\EAS\BSW\Dem\Dem.c	  3086                  {
; ..\EAS\BSW\Dem\Dem.c	  3087                      DEM_DTC_AGEDCNT(DtcId)++;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	movh.a	a2,#@his(Dem_StorageMem)
	lea	a2,[a2]@los(Dem_StorageMem)
	addsc.a	a2,a2,d15,#0
	ld.bu	d15,[a2]1867
.L4621:
	add	d15,#1
	st.b	[a15]1867,d15
.L216:

; ..\EAS\BSW\Dem\Dem.c	  3088                  }
; ..\EAS\BSW\Dem\Dem.c	  3089                  /*SWS_Dem_01075*/
; ..\EAS\BSW\Dem\Dem.c	  3090                  DEM_PRIMARY_DATAENTRY_USEDNUM--;
	movh.a	a15,#@his(Dem_StorageMem+2560)
	ld.hu	d15,[a15]@los(Dem_StorageMem+2560)
.L4622:
	add	d15,#-1
	st.h	[a15]@los(Dem_StorageMem+2560),d15
.L4623:

; ..\EAS\BSW\Dem\Dem.c	  3091                  DemInternal_ClearOneMemoryEntry((DEM_DTC_DATAENTRYREF(DtcId)));
	ld.w	d15,[a10]
.L2316:
	mul	d15,d15,#6
.L2317:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]1868
	extr.u	d4,d15,#0,#8
	call	DemInternal_ClearOneMemoryEntry
.L4624:

; ..\EAS\BSW\Dem\Dem.c	  3092                  DEM_PRIMARY_DATAENTRY_USED(DEM_DTC_DATAENTRYREF(DtcId)) = FALSE;
	ld.w	d15,[a10]
.L2318:
	mul	d15,d15,#6
.L2319:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]1868
	mul	d0,d0,#56
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
.L4625:
	mov	d0,#0
.L4626:
	st.b	[a15]2564,d0
.L4627:

; ..\EAS\BSW\Dem\Dem.c	  3093                  DEM_DTC_DATAENTRYREF(DtcId) = DEM_DATA_INVALID_U16;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4628:
	mov.u	d15,#65535
.L4629:
	st.h	[a15]1868,d15
.L215:

; ..\EAS\BSW\Dem\Dem.c	  3094  
; ..\EAS\BSW\Dem\Dem.c	  3095  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  3096                  /*SWS_Dem_01174*/
; ..\EAS\BSW\Dem\Dem.c	  3097                  DemInternal_ClearOBDFreezeFrame(EventId);
; ..\EAS\BSW\Dem\Dem.c	  3098  #endif
; ..\EAS\BSW\Dem\Dem.c	  3099              }
; ..\EAS\BSW\Dem\Dem.c	  3100  
; ..\EAS\BSW\Dem\Dem.c	  3101              if(DtcNewStatus != DtcOldStatus)
	jeq	d14,d13,.L217
.L4630:

; ..\EAS\BSW\Dem\Dem.c	  3102              {
; ..\EAS\BSW\Dem\Dem.c	  3103                  /*SWS_Dem_00284*/
; ..\EAS\BSW\Dem\Dem.c	  3104                  (void)DEM_CFG_DTC_STATUSCHANGED_CALLFNC(DEM_CFG_DTC_VALUE(DtcId), DtcOldStatus, DtcNewStatus);
	movh.a	a15,#@his(Dem_DtcStatusChangedNotificationArray)
	ld.a	a2,[a15]@los(Dem_DtcStatusChangedNotificationArray)
.L4631:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	ld.w	d15,[a10]
.L2320:
	addsc.a	a15,a15,d15,#3
	ld.w	d4,[a15]4
.L4632:
	mov	d5,d13
.L2322:
	mov	d6,d14
.L2324:
	calli	a2
.L2323:

; ..\EAS\BSW\Dem\Dem.c	  3105                  if(NULL_PTR != DEM_CFG_EVENT_STATUSCHANGED_CALLFNC(EventId))
	mov.a	a2,#0
.L4633:
	mul	d15,d9,#52
.L2321:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]44
.L4634:
	jeq.a	a2,a15,.L218
.L4635:

; ..\EAS\BSW\Dem\Dem.c	  3106                  {
; ..\EAS\BSW\Dem\Dem.c	  3107                      /*SWS_Dem_00016*/
; ..\EAS\BSW\Dem\Dem.c	  3108                      (void)DEM_CFG_EVENT_STATUSCHANGED_CALLFNC(EventId)(DtcOldStatus, DtcNewStatus);
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]44
.L4636:
	mov	e4,d14,d13
	calli	a15
.L218:

; ..\EAS\BSW\Dem\Dem.c	  3109                  }
; ..\EAS\BSW\Dem\Dem.c	  3110  #if(DEM_CFG_TRIGGER_FIM_REPORTS == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  3111                  FiM_DemTriggerOnEventStatus(EventId, DtcOldStatus, DtcNewStatus);
	mov	e4,d13,d9
	mov	d6,d14
.L2325:
	call	FiM_DemTriggerOnEventStatus
.L217:
.L212:
.L211:
.L210:

; ..\EAS\BSW\Dem\Dem.c	  3112  #endif
; ..\EAS\BSW\Dem\Dem.c	  3113              }
; ..\EAS\BSW\Dem\Dem.c	  3114          }
; ..\EAS\BSW\Dem\Dem.c	  3115          else
; ..\EAS\BSW\Dem\Dem.c	  3116          {
; ..\EAS\BSW\Dem\Dem.c	  3117              /*do nothing*/
; ..\EAS\BSW\Dem\Dem.c	  3118          }
; ..\EAS\BSW\Dem\Dem.c	  3119          /*save the current and last operation cycle DTC status*/
; ..\EAS\BSW\Dem\Dem.c	  3120          DEM_DTC_LASTSTATUS(DtcId) = DtcOldStatus;
	ld.w	d15,[a10]
.L2326:
	mul	d15,d15,#6
.L2327:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4637:
	st.b	[a15]1865,d13
.L4638:

; ..\EAS\BSW\Dem\Dem.c	  3121          DEM_DTC_STATUS(DtcId) = DtcNewStatus;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4639:
	st.b	[a15]1864,d14
.L4640:
	add	d9,#1
.L196:
	mov	d15,#116
.L4641:
	jlt.u	d9,d15,.L197
.L4642:

; ..\EAS\BSW\Dem\Dem.c	  3122      }
; ..\EAS\BSW\Dem\Dem.c	  3123  }
	ret
.L1998:
	
__DemInternal_CycleEndProcess_function_end:
	.size	DemInternal_CycleEndProcess,__DemInternal_CycleEndProcess_function_end-DemInternal_CycleEndProcess
.L1462:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_MainFnc_OperationCycle',code,cluster('DemInternal_MainFnc_OperationCycle')
	.sect	'.text.Dem.DemInternal_MainFnc_OperationCycle'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  3124  
; ..\EAS\BSW\Dem\Dem.c	  3125  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  3126  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  3127  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	  3128  *
; ..\EAS\BSW\Dem\Dem.c	  3129  * Description:
; ..\EAS\BSW\Dem\Dem.c	  3130  *
; ..\EAS\BSW\Dem\Dem.c	  3131  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  3132  *
; ..\EAS\BSW\Dem\Dem.c	  3133  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  3134  *
; ..\EAS\BSW\Dem\Dem.c	  3135  * Return:
; ..\EAS\BSW\Dem\Dem.c	  3136  *
; ..\EAS\BSW\Dem\Dem.c	  3137  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  3138  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  3139  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  3140  STATIC FUNC(void, DEM_CODE) DemInternal_MainFnc_OperationCycle
; Function DemInternal_MainFnc_OperationCycle
.L937:
DemInternal_MainFnc_OperationCycle:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  3141  (
; ..\EAS\BSW\Dem\Dem.c	  3142      void
; ..\EAS\BSW\Dem\Dem.c	  3143  )
; ..\EAS\BSW\Dem\Dem.c	  3144  {
; ..\EAS\BSW\Dem\Dem.c	  3145      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	  3146  
; ..\EAS\BSW\Dem\Dem.c	  3147      for(i = 0; i < DEM_NUM_OF_OPCYCLE; i++)
	mov	d8,#0
.L2328:

; ..\EAS\BSW\Dem\Dem.c	  3148      {
; ..\EAS\BSW\Dem\Dem.c	  3149          if((Dem_OpCycReq[i] == DEM_CYCLE_STATE_START) \ 
; ..\EAS\BSW\Dem\Dem.c	  3150                  && (Dem_OpCycState[i] == DEM_CYCLE_STATE_END))
; ..\EAS\BSW\Dem\Dem.c	  3151          {
; ..\EAS\BSW\Dem\Dem.c	  3152              Dem_OpCycReq[i] = DEM_DATA_CLEAR;
	mov	d9,d8
.L2329:

; ..\EAS\BSW\Dem\Dem.c	  3153              Dem_OpCycState[i] = DEM_CYCLE_STATE_START;
	mov	d10,#1
.L4647:

; ..\EAS\BSW\Dem\Dem.c	  3154              DemInternal_CycleStartProcess(i);
; ..\EAS\BSW\Dem\Dem.c	  3155          }
; ..\EAS\BSW\Dem\Dem.c	  3156          else if((Dem_OpCycReq[i] == DEM_CYCLE_STATE_END) \ 
; ..\EAS\BSW\Dem\Dem.c	  3157                  && (Dem_OpCycState[i] == DEM_CYCLE_STATE_START))
; ..\EAS\BSW\Dem\Dem.c	  3158          {
; ..\EAS\BSW\Dem\Dem.c	  3159              Dem_OpCycReq[i] = DEM_DATA_CLEAR;
	mov	d11,d8
.L2330:

; ..\EAS\BSW\Dem\Dem.c	  3160              Dem_OpCycState[i] = DEM_CYCLE_STATE_END;
	mov	d12,#2
.L4648:

; ..\EAS\BSW\Dem\Dem.c	  3161              DemInternal_CycleEndProcess(i);
; ..\EAS\BSW\Dem\Dem.c	  3162          }
; ..\EAS\BSW\Dem\Dem.c	  3163          else if((Dem_OpCycReq[i] == DEM_CYCLE_STATE_START) \ 
; ..\EAS\BSW\Dem\Dem.c	  3164                  && (Dem_OpCycState[i] == DEM_CYCLE_STATE_START))
; ..\EAS\BSW\Dem\Dem.c	  3165          {
; ..\EAS\BSW\Dem\Dem.c	  3166              /*SWS_Dem_00483*/
; ..\EAS\BSW\Dem\Dem.c	  3167              Dem_OpCycReq[i] = DEM_DATA_CLEAR;
	mov	d13,d8
.L2331:

; ..\EAS\BSW\Dem\Dem.c	  3168              Dem_OpCycState[i] = DEM_CYCLE_STATE_START;
	mov	d14,#1
.L4649:
	j	.L219
.L220:
	movh.a	a15,#@his(Dem_OpCycReq)
	lea	a15,[a15]@los(Dem_OpCycReq)
.L4650:
	ld.bu	d15,[+a15]0
.L4651:
	jne	d15,#1,.L221
.L4652:
	movh.a	a15,#@his(Dem_OpCycState)
	lea	a15,[a15]@los(Dem_OpCycState)
.L4653:
	ld.bu	d15,[+a15]0
.L4654:
	jne	d15,#2,.L222
.L4655:
	movh.a	a15,#@his(Dem_OpCycReq)
	lea	a15,[a15]@los(Dem_OpCycReq)
.L2332:
	st.b	[+a15]0,d9
.L2333:
	movh.a	a15,#@his(Dem_OpCycState)
	lea	a15,[a15]@los(Dem_OpCycState)
.L4656:
	st.b	[+a15]0,d10
.L4657:
	j	.L223
.L222:
.L221:
	movh.a	a15,#@his(Dem_OpCycReq)
	lea	a15,[a15]@los(Dem_OpCycReq)
.L4658:
	ld.bu	d15,[+a15]0
.L4659:
	jne	d15,#2,.L224
.L4660:
	movh.a	a15,#@his(Dem_OpCycState)
	lea	a15,[a15]@los(Dem_OpCycState)
.L4661:
	ld.bu	d15,[+a15]0
.L4662:
	jne	d15,#1,.L225
.L4663:
	movh.a	a15,#@his(Dem_OpCycReq)
	lea	a15,[a15]@los(Dem_OpCycReq)
.L2334:
	st.b	[+a15]0,d11
.L2335:
	movh.a	a15,#@his(Dem_OpCycState)
	lea	a15,[a15]@los(Dem_OpCycState)
.L4664:
	st.b	[+a15]0,d12
.L4665:
	mov	d4,d8
.L2336:
	call	DemInternal_CycleEndProcess
.L2337:
	j	.L226
.L225:
.L224:
	movh.a	a15,#@his(Dem_OpCycReq)
	lea	a15,[a15]@los(Dem_OpCycReq)
.L4666:
	ld.bu	d15,[+a15]0
.L4667:
	jne	d15,#1,.L227
.L4668:
	movh.a	a15,#@his(Dem_OpCycState)
	lea	a15,[a15]@los(Dem_OpCycState)
.L4669:
	ld.bu	d15,[+a15]0
.L4670:
	jne	d15,#1,.L228
.L4671:
	movh.a	a15,#@his(Dem_OpCycReq)
	lea	a15,[a15]@los(Dem_OpCycReq)
.L2338:
	st.b	[+a15]0,d13
.L2339:
	movh.a	a15,#@his(Dem_OpCycState)
	lea	a15,[a15]@los(Dem_OpCycState)
.L4672:
	st.b	[+a15]0,d14
.L4673:

; ..\EAS\BSW\Dem\Dem.c	  3169              DemInternal_CycleEndProcess(i);
	mov	d4,d8
.L2340:
	call	DemInternal_CycleEndProcess
.L223:

; ..\EAS\BSW\Dem\Dem.c	  3170              DemInternal_CycleStartProcess(i);
	mov	d4,d8
.L2341:
	call	DemInternal_CycleStartProcess
.L228:
.L227:
.L226:
	add	d8,#1
.L219:
	jeq	d8,#0,.L220
.L4674:

; ..\EAS\BSW\Dem\Dem.c	  3171          }
; ..\EAS\BSW\Dem\Dem.c	  3172          else
; ..\EAS\BSW\Dem\Dem.c	  3173          {
; ..\EAS\BSW\Dem\Dem.c	  3174              /*SWS_Dem_00484*/
; ..\EAS\BSW\Dem\Dem.c	  3175          }
; ..\EAS\BSW\Dem\Dem.c	  3176      }
; ..\EAS\BSW\Dem\Dem.c	  3177  }
	ret
.L2005:
	
__DemInternal_MainFnc_OperationCycle_function_end:
	.size	DemInternal_MainFnc_OperationCycle,__DemInternal_MainFnc_OperationCycle_function_end-DemInternal_MainFnc_OperationCycle
.L1467:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_MainFnc_BswErrorHandle',code,cluster('DemInternal_MainFnc_BswErrorHandle')
	.sect	'.text.Dem.DemInternal_MainFnc_BswErrorHandle'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  3178  
; ..\EAS\BSW\Dem\Dem.c	  3179  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  3180  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  3181  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	  3182  *
; ..\EAS\BSW\Dem\Dem.c	  3183  * Description:
; ..\EAS\BSW\Dem\Dem.c	  3184  *
; ..\EAS\BSW\Dem\Dem.c	  3185  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  3186  *
; ..\EAS\BSW\Dem\Dem.c	  3187  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  3188  *
; ..\EAS\BSW\Dem\Dem.c	  3189  * Return:
; ..\EAS\BSW\Dem\Dem.c	  3190  *
; ..\EAS\BSW\Dem\Dem.c	  3191  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  3192  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  3193  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  3194  STATIC FUNC(void, DEM_CODE) DemInternal_MainFnc_BswErrorHandle
; Function DemInternal_MainFnc_BswErrorHandle
.L939:
DemInternal_MainFnc_BswErrorHandle:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  3195  (
; ..\EAS\BSW\Dem\Dem.c	  3196      void
; ..\EAS\BSW\Dem\Dem.c	  3197  )
; ..\EAS\BSW\Dem\Dem.c	  3198  {
; ..\EAS\BSW\Dem\Dem.c	  3199      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	  3200  #if(DEM_CFG_BSWERRORBUFFERSIZE > 0)
; ..\EAS\BSW\Dem\Dem.c	  3201      for(i = 0; i < DEM_CFG_BSWERRORBUFFERSIZE; i++)
	mov	d15,#0
.L2342:

; ..\EAS\BSW\Dem\Dem.c	  3202      {
; ..\EAS\BSW\Dem\Dem.c	  3203          if(Dem_BswErrorQueue[i] != DEM_DATA_INVALID_U16)
	mov.u	d8,#65535
.L4679:

; ..\EAS\BSW\Dem\Dem.c	  3204          {
; ..\EAS\BSW\Dem\Dem.c	  3205              DemInternal_SetEventStatus(Dem_BswErrorQueue[i], Dem_BswErrorStatus[i]);
; ..\EAS\BSW\Dem\Dem.c	  3206              Dem_BswErrorQueue[i] = DEM_DATA_INVALID_U16;
	mov.u	d9,#65535
.L4680:
	j	.L229
.L230:
	movh.a	a15,#@his(Dem_BswErrorQueue)
	lea	a15,[a15]@los(Dem_BswErrorQueue)
.L4681:
	addsc.a	a15,a15,d15,#1
	ld.hu	d0,[a15]0
.L4682:
	jeq	d0,d8,.L231
.L4683:
	movh.a	a15,#@his(Dem_BswErrorQueue)
	lea	a15,[a15]@los(Dem_BswErrorQueue)
.L4684:
	addsc.a	a15,a15,d15,#1
	ld.hu	d4,[a15]0
.L4685:
	movh.a	a15,#@his(Dem_BswErrorStatus)
	lea	a15,[a15]@los(Dem_BswErrorStatus)
.L4686:
	addsc.a	a15,a15,d15,#0
	ld.bu	d5,[a15]
	call	DemInternal_SetEventStatus
.L4687:
	movh.a	a15,#@his(Dem_BswErrorQueue)
	lea	a15,[a15]@los(Dem_BswErrorQueue)
.L4688:
	addsc.a	a15,a15,d15,#1
.L4689:
	st.h	[a15],d9
.L231:
	add	d15,#1
.L229:
	jlt.u	d15,#8,.L230
.L4690:

; ..\EAS\BSW\Dem\Dem.c	  3207          }
; ..\EAS\BSW\Dem\Dem.c	  3208      }
; ..\EAS\BSW\Dem\Dem.c	  3209  #endif
; ..\EAS\BSW\Dem\Dem.c	  3210  }
	ret
.L2007:
	
__DemInternal_MainFnc_BswErrorHandle_function_end:
	.size	DemInternal_MainFnc_BswErrorHandle,__DemInternal_MainFnc_BswErrorHandle_function_end-DemInternal_MainFnc_BswErrorHandle
.L1472:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_MainFnc_DebounceTimer',code,cluster('DemInternal_MainFnc_DebounceTimer')
	.sect	'.text.Dem.DemInternal_MainFnc_DebounceTimer'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  3211  
; ..\EAS\BSW\Dem\Dem.c	  3212  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  3213  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  3214  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  3215  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	  3216  *
; ..\EAS\BSW\Dem\Dem.c	  3217  * Description:
; ..\EAS\BSW\Dem\Dem.c	  3218  *
; ..\EAS\BSW\Dem\Dem.c	  3219  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  3220  *
; ..\EAS\BSW\Dem\Dem.c	  3221  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  3222  *
; ..\EAS\BSW\Dem\Dem.c	  3223  * Return:
; ..\EAS\BSW\Dem\Dem.c	  3224  *
; ..\EAS\BSW\Dem\Dem.c	  3225  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  3226  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  3227  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  3228  STATIC FUNC(void, DEM_CODE) DemInternal_MainFnc_DebounceTimer
; Function DemInternal_MainFnc_DebounceTimer
.L941:
DemInternal_MainFnc_DebounceTimer:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  3229  (
; ..\EAS\BSW\Dem\Dem.c	  3230      void
; ..\EAS\BSW\Dem\Dem.c	  3231  )
; ..\EAS\BSW\Dem\Dem.c	  3232  {
; ..\EAS\BSW\Dem\Dem.c	  3233      Dem_EventIdType EventId;
; ..\EAS\BSW\Dem\Dem.c	  3234      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	  3235  #if(DEM_NUM_OF_EN_GROUP > 0)
; ..\EAS\BSW\Dem\Dem.c	  3236      boolean DbtStopFlag;
; ..\EAS\BSW\Dem\Dem.c	  3237  #endif
; ..\EAS\BSW\Dem\Dem.c	  3238  
; ..\EAS\BSW\Dem\Dem.c	  3239      for(EventId = 0; EventId < DEM_NUM_OF_EVENT; EventId++)
	mov	d8,#0
.L2343:

; ..\EAS\BSW\Dem\Dem.c	  3240      {
; ..\EAS\BSW\Dem\Dem.c	  3241  #if(DEM_NUM_OF_EN_GROUP > 0)
; ..\EAS\BSW\Dem\Dem.c	  3242          DbtStopFlag = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  3243  
; ..\EAS\BSW\Dem\Dem.c	  3244          if(DEM_CFG_EVENT_EN(EventId) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  3245          {
; ..\EAS\BSW\Dem\Dem.c	  3246              for(i = 0; i < DEM_CFG_EVENT_EN_NUM(EventId); i++)
; ..\EAS\BSW\Dem\Dem.c	  3247              {
; ..\EAS\BSW\Dem\Dem.c	  3248                  if(Dem_EventEnCondition[(DEM_CFG_EVENT_EN_REF(EventId)[i])] != TRUE)
; ..\EAS\BSW\Dem\Dem.c	  3249                  {
; ..\EAS\BSW\Dem\Dem.c	  3250                      DbtStopFlag = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  3251                      break;
; ..\EAS\BSW\Dem\Dem.c	  3252                  }
; ..\EAS\BSW\Dem\Dem.c	  3253              }
; ..\EAS\BSW\Dem\Dem.c	  3254          }
; ..\EAS\BSW\Dem\Dem.c	  3255          /*SWS_Dem_00655*//*SWS_Dem_00678*/
; ..\EAS\BSW\Dem\Dem.c	  3256          if((DEM_CFG_EVENT_DBT(EventId) != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	  3257              && ((DEM_EVENT_TIMERDIRECTION(EventId) == DEM_EVENT_STATUS_PREFAILED) \ 
; ..\EAS\BSW\Dem\Dem.c	  3258                  || (DEM_EVENT_TIMERDIRECTION(EventId) == DEM_EVENT_STATUS_PREPASSED)) \ 
; ..\EAS\BSW\Dem\Dem.c	  3259              && (Dem_EventDBTFreezeFlag[EventId] == FALSE) \ 
; ..\EAS\BSW\Dem\Dem.c	  3260              && (Dem_EnableDtcSetting[EventId] == TRUE) \ 
; ..\EAS\BSW\Dem\Dem.c	  3261              && (DbtStopFlag == FALSE))
; ..\EAS\BSW\Dem\Dem.c	  3262  #else
; ..\EAS\BSW\Dem\Dem.c	  3263          if((DEM_CFG_EVENT_DBT(EventId) != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	  3264              && ((DEM_EVENT_TIMERDIRECTION(EventId) == DEM_EVENT_STATUS_PREFAILED) \ 
; ..\EAS\BSW\Dem\Dem.c	  3265                  || (DEM_EVENT_TIMERDIRECTION(EventId) == DEM_EVENT_STATUS_PREPASSED)) \ 
; ..\EAS\BSW\Dem\Dem.c	  3266              && (Dem_EventDBTFreezeFlag[EventId] == FALSE) \ 
; ..\EAS\BSW\Dem\Dem.c	  3267              && (Dem_EnableDtcSetting[EventId] == TRUE))
; ..\EAS\BSW\Dem\Dem.c	  3268  #endif
; ..\EAS\BSW\Dem\Dem.c	  3269          {
; ..\EAS\BSW\Dem\Dem.c	  3270              (DEM_EVENT_DBT(EventId))++;
; ..\EAS\BSW\Dem\Dem.c	  3271  
; ..\EAS\BSW\Dem\Dem.c	  3272              if((DEM_EVENT_TIMERDIRECTION(EventId) == DEM_EVENT_STATUS_PREFAILED) \ 
; ..\EAS\BSW\Dem\Dem.c	  3273                  && (DEM_EVENT_DBT(EventId) >= DEM_CFG_EVENT_DBT_FAILED(EventId)))
	mov	d9,#5
.L4695:

; ..\EAS\BSW\Dem\Dem.c	  3274              {
; ..\EAS\BSW\Dem\Dem.c	  3275                  DemInternal_SetEventStatus(EventId, DEM_EVENT_STATUS_FAILED);
; ..\EAS\BSW\Dem\Dem.c	  3276              }
; ..\EAS\BSW\Dem\Dem.c	  3277              else if((DEM_EVENT_TIMERDIRECTION(EventId) == DEM_EVENT_STATUS_PREPASSED) \ 
; ..\EAS\BSW\Dem\Dem.c	  3278                  && (DEM_EVENT_DBT(EventId) >= DEM_CFG_EVENT_DBT_PASSED(EventId)))
	mov	d10,#5
.L4696:
	mov	d11,#116
.L4697:
	j	.L232
.L233:
	mov	d2,#0
.L2344:
	mul	d15,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]8
.L4698:
	jeq	d15,#0,.L234
.L4699:
	mov	d0,d2
.L2345:
	j	.L235
.L236:
	mul	d15,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]8
	ld.a	a15,[a15]4
.L4700:
	addsc.a	a15,a15,d0,#0
	ld.bu	d15,[a15]
.L4701:
	movh.a	a15,#@his(Dem_EventEnCondition)
	lea	a15,[a15]@los(Dem_EventEnCondition)
.L4702:
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L4703:
	jeq	d15,#1,.L237
.L4704:
	mov	d2,#1
.L4705:
	j	.L238
.L237:
	add	d0,#1
.L2346:
	extr.u	d0,d0,#0,#8
.L235:
	mul	d15,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]8
	ld.bu	d1,[a15]
.L4706:
	jlt.u	d0,d1,.L236
.L238:
.L234:
	mul	d15,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]24
.L4707:
	jeq	d15,#0,.L239
.L4708:
	sha	d15,d8,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]16
.L4709:
	jeq	d0,#3,.L240
.L4710:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]16
.L4711:
	jne	d15,#2,.L241
.L240:
	movh.a	a15,#@his(Dem_EventDBTFreezeFlag)
	lea	a15,[a15]@los(Dem_EventDBTFreezeFlag)
.L4712:
	addsc.a	a15,a15,d8,#0
	ld.bu	d15,[a15]
.L4713:
	jne	d15,#0,.L242
.L4714:
	movh.a	a15,#@his(Dem_EnableDtcSetting)
	lea	a15,[a15]@los(Dem_EnableDtcSetting)
.L4715:
	addsc.a	a15,a15,d8,#0
	ld.bu	d15,[a15]
.L4716:
	jne	d15,#1,.L243
.L4717:
	jne	d2,#0,.L244
.L4718:
	sha	d15,d8,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a2,a15,d15,#0
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.w	d0,[a15]12
.L4719:
	add	d0,#1
	st.w	[a2]12,d0
.L4720:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]16
.L4721:
	jne	d0,#3,.L245
.L4722:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]12
.L4723:
	mul	d0,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]24
	ld.w	d0,[a15]6
	div.u	e0,d0,d9
.L4724:
	jlt.u	d15,d0,.L246
.L4725:
	mov	d5,#1
.L4726:
	j	.L247
.L246:
.L245:
	sha	d15,d8,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]16
.L4727:
	jne	d0,#2,.L248
.L4728:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]12
.L4729:
	mul	d0,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]24
	ld.w	d0,[a15]2
	div.u	e0,d0,d10
.L4730:
	jlt.u	d15,d0,.L249
.L4731:

; ..\EAS\BSW\Dem\Dem.c	  3279              {
; ..\EAS\BSW\Dem\Dem.c	  3280                  DemInternal_SetEventStatus(EventId, DEM_EVENT_STATUS_PASSED);
	mov	d5,#0
.L247:
	mov	d4,d8
.L2347:
	call	DemInternal_SetEventStatus
.L249:
.L248:
.L244:
.L243:
.L242:
.L241:
.L239:
	add	d8,#1
.L232:
	jlt.u	d8,d11,.L233
.L4732:

; ..\EAS\BSW\Dem\Dem.c	  3281              }
; ..\EAS\BSW\Dem\Dem.c	  3282              else
; ..\EAS\BSW\Dem\Dem.c	  3283              {
; ..\EAS\BSW\Dem\Dem.c	  3284                  /*do nothing*/
; ..\EAS\BSW\Dem\Dem.c	  3285              }
; ..\EAS\BSW\Dem\Dem.c	  3286          }
; ..\EAS\BSW\Dem\Dem.c	  3287      }
; ..\EAS\BSW\Dem\Dem.c	  3288  }
	ret
.L2009:
	
__DemInternal_MainFnc_DebounceTimer_function_end:
	.size	DemInternal_MainFnc_DebounceTimer,__DemInternal_MainFnc_DebounceTimer_function_end-DemInternal_MainFnc_DebounceTimer
.L1477:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_MainFnc_CaptureData',code,cluster('DemInternal_MainFnc_CaptureData')
	.sect	'.text.Dem.DemInternal_MainFnc_CaptureData'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  3289  #endif/*#if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)*/
; ..\EAS\BSW\Dem\Dem.c	  3290  
; ..\EAS\BSW\Dem\Dem.c	  3291  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  3292  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  3293  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	  3294  *
; ..\EAS\BSW\Dem\Dem.c	  3295  * Description:
; ..\EAS\BSW\Dem\Dem.c	  3296  *
; ..\EAS\BSW\Dem\Dem.c	  3297  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  3298  *
; ..\EAS\BSW\Dem\Dem.c	  3299  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  3300  *
; ..\EAS\BSW\Dem\Dem.c	  3301  * Return:
; ..\EAS\BSW\Dem\Dem.c	  3302  *
; ..\EAS\BSW\Dem\Dem.c	  3303  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  3304  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  3305  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  3306  STATIC FUNC(void, DEM_CODE) DemInternal_MainFnc_CaptureData
; Function DemInternal_MainFnc_CaptureData
.L943:
DemInternal_MainFnc_CaptureData:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  3307  (
; ..\EAS\BSW\Dem\Dem.c	  3308      void
; ..\EAS\BSW\Dem\Dem.c	  3309  )
; ..\EAS\BSW\Dem\Dem.c	  3310  {
; ..\EAS\BSW\Dem\Dem.c	  3311      uint16 EventId;
; ..\EAS\BSW\Dem\Dem.c	  3312      uint16 i = 0;
	mov	d8,#0
.L2348:

; ..\EAS\BSW\Dem\Dem.c	  3313  
; ..\EAS\BSW\Dem\Dem.c	  3314      for(EventId = Dem_CapturePosition; EventId < DEM_NUM_OF_DTC; EventId++)
	movh.a	a15,#@his(Dem_CapturePosition)
	ld.hu	d9,[a15]@los(Dem_CapturePosition)
.L2349:

; ..\EAS\BSW\Dem\Dem.c	  3315      {
; ..\EAS\BSW\Dem\Dem.c	  3316          if(DemInternal_GetCaptureQueue(EventId, NULL_PTR) == TRUE)
; ..\EAS\BSW\Dem\Dem.c	  3317          {
; ..\EAS\BSW\Dem\Dem.c	  3318              i++;
; ..\EAS\BSW\Dem\Dem.c	  3319  
; ..\EAS\BSW\Dem\Dem.c	  3320              SchM_Enter_Dem_DEM_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\Dem\Dem.c	  3321              DemInternal_CaptureData(EventId);
; ..\EAS\BSW\Dem\Dem.c	  3322              SchM_Exit_Dem_DEM_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\Dem\Dem.c	  3323          }
; ..\EAS\BSW\Dem\Dem.c	  3324  
; ..\EAS\BSW\Dem\Dem.c	  3325          if(EventId >= (DEM_NUM_OF_EVENT - 1))
	mov	d15,#115
.L4737:
	mov	d10,#116
.L4738:
	j	.L250
.L251:
	mov.a	a4,#0
	mov	d4,d9
.L2350:
	call	DemInternal_GetCaptureQueue
.L2351:
	jeq	d2,#0,.L252
.L4739:
	add	d8,#1
.L4740:
	mov	d4,d9
.L2352:
	call	DemInternal_CaptureData
.L252:
	jlt.u	d9,d15,.L253
.L4741:

; ..\EAS\BSW\Dem\Dem.c	  3326          {
; ..\EAS\BSW\Dem\Dem.c	  3327              /*the last DTC*/
; ..\EAS\BSW\Dem\Dem.c	  3328              Dem_CapturePosition = 0;
	movh.a	a15,#@his(Dem_CapturePosition)
.L4742:
	mov	d15,#0
.L4743:
	st.h	[a15]@los(Dem_CapturePosition),d15
.L4744:

; ..\EAS\BSW\Dem\Dem.c	  3329              break;
; ..\EAS\BSW\Dem\Dem.c	  3330          }
; ..\EAS\BSW\Dem\Dem.c	  3331          else if(i >= DEM_MAXNUM_CAPTURE_DATA_PER_MAINCYCLE)
; ..\EAS\BSW\Dem\Dem.c	  3332          {
; ..\EAS\BSW\Dem\Dem.c	  3333              /*MaxNumOfCaptureDataForDtcPerMainCycle is reached*/
; ..\EAS\BSW\Dem\Dem.c	  3334              Dem_CapturePosition += DEM_MAXNUM_CAPTURE_DATA_PER_MAINCYCLE;
; ..\EAS\BSW\Dem\Dem.c	  3335              break;
; ..\EAS\BSW\Dem\Dem.c	  3336          }
; ..\EAS\BSW\Dem\Dem.c	  3337          else
; ..\EAS\BSW\Dem\Dem.c	  3338          {
; ..\EAS\BSW\Dem\Dem.c	  3339              /*continue capture data*/
; ..\EAS\BSW\Dem\Dem.c	  3340          }
; ..\EAS\BSW\Dem\Dem.c	  3341      }
; ..\EAS\BSW\Dem\Dem.c	  3342  }
	ret
.L253:
	jlt.u	d8,#4,.L255
.L4745:
	movh.a	a15,#@his(Dem_CapturePosition)
	ld.hu	d15,[a15]@los(Dem_CapturePosition)
.L4746:
	add	d15,#4
	st.h	[a15]@los(Dem_CapturePosition),d15
.L4747:
	ret
.L255:
	add	d9,#1
.L250:
	jlt.u	d9,d10,.L251
.L4748:
	ret
.L2013:
	
__DemInternal_MainFnc_CaptureData_function_end:
	.size	DemInternal_MainFnc_CaptureData,__DemInternal_MainFnc_CaptureData_function_end-DemInternal_MainFnc_CaptureData
.L1482:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_MainFnc_ClearDTC',code,cluster('DemInternal_MainFnc_ClearDTC')
	.sect	'.text.Dem.DemInternal_MainFnc_ClearDTC'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  3343  
; ..\EAS\BSW\Dem\Dem.c	  3344  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  3345  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  3346  * Function Name: DemInternal_MainFnc_ClearDTC
; ..\EAS\BSW\Dem\Dem.c	  3347  *
; ..\EAS\BSW\Dem\Dem.c	  3348  * Description: Clear the group DTC or Write the RAM info which has been cleared
; ..\EAS\BSW\Dem\Dem.c	  3349  *              in nonvalatile memory.
; ..\EAS\BSW\Dem\Dem.c	  3350  *
; ..\EAS\BSW\Dem\Dem.c	  3351  * Inputs: None
; ..\EAS\BSW\Dem\Dem.c	  3352  *
; ..\EAS\BSW\Dem\Dem.c	  3353  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  3354  *
; ..\EAS\BSW\Dem\Dem.c	  3355  * Return: None
; ..\EAS\BSW\Dem\Dem.c	  3356  *
; ..\EAS\BSW\Dem\Dem.c	  3357  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  3358  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  3359  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  3360  STATIC FUNC(void, DEM_CODE) DemInternal_MainFnc_ClearDTC
; Function DemInternal_MainFnc_ClearDTC
.L945:
DemInternal_MainFnc_ClearDTC:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  3361  (
; ..\EAS\BSW\Dem\Dem.c	  3362      void
; ..\EAS\BSW\Dem\Dem.c	  3363  )
; ..\EAS\BSW\Dem\Dem.c	  3364  {
; ..\EAS\BSW\Dem\Dem.c	  3365  
; ..\EAS\BSW\Dem\Dem.c	  3366  #if(DEM_CFG_CLEARDTCBEHAIOR != DEM_CLRRESP_VOLATILE)    
; ..\EAS\BSW\Dem\Dem.c	  3367      NvM_RequestResultType ret = NVM_REQ_OK;
; ..\EAS\BSW\Dem\Dem.c	  3368  #endif
; ..\EAS\BSW\Dem\Dem.c	  3369  
; ..\EAS\BSW\Dem\Dem.c	  3370      if(Dem_ClearDTCState == DEM_IN_CLEAR_DTC_GROUP)
	movh.a	a15,#@his(Dem_ClearDTCState)
	ld.bu	d15,[a15]@los(Dem_ClearDTCState)
.L4753:
	jne	d15,#5,.L257
.L4754:

; ..\EAS\BSW\Dem\Dem.c	  3371      {
; ..\EAS\BSW\Dem\Dem.c	  3372          DemInternal_ClearOneDTCGroup();
	j	DemInternal_ClearOneDTCGroup
.L257:

; ..\EAS\BSW\Dem\Dem.c	  3373      }
; ..\EAS\BSW\Dem\Dem.c	  3374  #if(DEM_CFG_CLEARDTCBEHAIOR != DEM_CLRRESP_VOLATILE)
; ..\EAS\BSW\Dem\Dem.c	  3375      else if(Dem_ClearDTCState == DEM_IN_CLEAR_EVENT_MEM)
; ..\EAS\BSW\Dem\Dem.c	  3376      {
; ..\EAS\BSW\Dem\Dem.c	  3377          if(E_OK == Dem_WriteBlock(DEM_CFG_NVM_BLOCKID, &Dem_StorageMem))
; ..\EAS\BSW\Dem\Dem.c	  3378          {
; ..\EAS\BSW\Dem\Dem.c	  3379              Dem_ClearDTCState = DEM_IN_CLEAR_DTC_BUSY;
; ..\EAS\BSW\Dem\Dem.c	  3380              Dem_SetRamBlockStatus(DEM_CFG_NVM_BLOCKID, TRUE);
; ..\EAS\BSW\Dem\Dem.c	  3381          }
; ..\EAS\BSW\Dem\Dem.c	  3382          else
; ..\EAS\BSW\Dem\Dem.c	  3383          {
; ..\EAS\BSW\Dem\Dem.c	  3384              Dem_ClearDTCState = DEM_IN_CLEAR_DTC_ERR;
; ..\EAS\BSW\Dem\Dem.c	  3385          }
; ..\EAS\BSW\Dem\Dem.c	  3386      }
; ..\EAS\BSW\Dem\Dem.c	  3387      else if(Dem_ClearDTCState == DEM_IN_CLEAR_DTC_BUSY)
; ..\EAS\BSW\Dem\Dem.c	  3388      {
; ..\EAS\BSW\Dem\Dem.c	  3389          if(E_OK == Dem_GetErrorStatus(DEM_CFG_NVM_BLOCKID, &ret))
; ..\EAS\BSW\Dem\Dem.c	  3390          {
; ..\EAS\BSW\Dem\Dem.c	  3391              if(ret == NVM_REQ_OK)
; ..\EAS\BSW\Dem\Dem.c	  3392              {
; ..\EAS\BSW\Dem\Dem.c	  3393                  Dem_ClearDTCState = DEM_IN_CLEAR_DTC_OK;
; ..\EAS\BSW\Dem\Dem.c	  3394  
; ..\EAS\BSW\Dem\Dem.c	  3395              }
; ..\EAS\BSW\Dem\Dem.c	  3396              else if(ret == NVM_REQ_PENDING)
; ..\EAS\BSW\Dem\Dem.c	  3397              {
; ..\EAS\BSW\Dem\Dem.c	  3398                  /*do nothing*/
; ..\EAS\BSW\Dem\Dem.c	  3399              }
; ..\EAS\BSW\Dem\Dem.c	  3400              else
; ..\EAS\BSW\Dem\Dem.c	  3401              {
; ..\EAS\BSW\Dem\Dem.c	  3402                  Dem_ClearDTCState = DEM_IN_CLEAR_DTC_ERR;
; ..\EAS\BSW\Dem\Dem.c	  3403              }
; ..\EAS\BSW\Dem\Dem.c	  3404          }
; ..\EAS\BSW\Dem\Dem.c	  3405          else
; ..\EAS\BSW\Dem\Dem.c	  3406          {
; ..\EAS\BSW\Dem\Dem.c	  3407              Dem_ClearDTCState = DEM_IN_CLEAR_DTC_ERR;
; ..\EAS\BSW\Dem\Dem.c	  3408          }
; ..\EAS\BSW\Dem\Dem.c	  3409      }
; ..\EAS\BSW\Dem\Dem.c	  3410  #endif
; ..\EAS\BSW\Dem\Dem.c	  3411      else
; ..\EAS\BSW\Dem\Dem.c	  3412      {
; ..\EAS\BSW\Dem\Dem.c	  3413          /*do nothing*/
; ..\EAS\BSW\Dem\Dem.c	  3414      }
; ..\EAS\BSW\Dem\Dem.c	  3415  }
	ret
.L2016:
	
__DemInternal_MainFnc_ClearDTC_function_end:
	.size	DemInternal_MainFnc_ClearDTC,__DemInternal_MainFnc_ClearDTC_function_end-DemInternal_MainFnc_ClearDTC
.L1487:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_ClearOneDTC',code,cluster('DemInternal_ClearOneDTC')
	.sect	'.text.Dem.DemInternal_ClearOneDTC'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  3416  
; ..\EAS\BSW\Dem\Dem.c	  3417  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  3418  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  3419  * Function Name: DemInternal_ClearOneDTC
; ..\EAS\BSW\Dem\Dem.c	  3420  *
; ..\EAS\BSW\Dem\Dem.c	  3421  * Description: Clear the RAM info of one DTC
; ..\EAS\BSW\Dem\Dem.c	  3422  *
; ..\EAS\BSW\Dem\Dem.c	  3423  * Inputs: DtcId
; ..\EAS\BSW\Dem\Dem.c	  3424  *
; ..\EAS\BSW\Dem\Dem.c	  3425  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  3426  *
; ..\EAS\BSW\Dem\Dem.c	  3427  * Return: None
; ..\EAS\BSW\Dem\Dem.c	  3428  *
; ..\EAS\BSW\Dem\Dem.c	  3429  * Limitations: Used for UDS and J1939
; ..\EAS\BSW\Dem\Dem.c	  3430  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  3431  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  3432  STATIC FUNC(void, DEM_CODE) DemInternal_ClearOneDTC
; Function DemInternal_ClearOneDTC
.L947:
DemInternal_ClearOneDTC:	.type	func
	sub.a	a10,#8
.L2353:
	mov	d8,d4
.L2354:

; ..\EAS\BSW\Dem\Dem.c	  3433  (
; ..\EAS\BSW\Dem\Dem.c	  3434      uint16 DtcId
; ..\EAS\BSW\Dem\Dem.c	  3435  )
; ..\EAS\BSW\Dem\Dem.c	  3436  {
; ..\EAS\BSW\Dem\Dem.c	  3437      Std_ReturnType ret = E_OK;
	mov	d2,#0
.L2355:

; ..\EAS\BSW\Dem\Dem.c	  3438      Dem_UdsStatusByteType OldStatus;
; ..\EAS\BSW\Dem\Dem.c	  3439      Dem_UdsStatusByteType NewStatus;
; ..\EAS\BSW\Dem\Dem.c	  3440      uint16 EventId;
; ..\EAS\BSW\Dem\Dem.c	  3441      boolean ClearAllowed = TRUE;
	mov	d0,#1
.L4759:
	st.b	[a10],d0
.L4760:

; ..\EAS\BSW\Dem\Dem.c	  3442  
; ..\EAS\BSW\Dem\Dem.c	  3443      for(EventId = 0U; EventId < DEM_NUM_OF_EVENT; EventId++)
	mov	d9,d2
.L2357:
	mov	d0,#116
.L4761:
	j	.L258
.L259:

; ..\EAS\BSW\Dem\Dem.c	  3444      {
; ..\EAS\BSW\Dem\Dem.c	  3445  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  3446          /*SWS_Dem_01108*/
; ..\EAS\BSW\Dem\Dem.c	  3447          if((Dem_EventAvailable[EventId] == TRUE) && (DEM_CFG_EVENT_DTCREF(EventId) == DtcId))
; ..\EAS\BSW\Dem\Dem.c	  3448  #else
; ..\EAS\BSW\Dem\Dem.c	  3449          if(DEM_CFG_EVENT_DTCREF(EventId) == DtcId)
	mul	d15,d9,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]4
.L4762:
	jeq	d15,d8,.L260
.L4763:
	add	d9,#1
.L258:
	jlt.u	d9,d0,.L259

; ..\EAS\BSW\Dem\Dem.c	  3450  #endif
; ..\EAS\BSW\Dem\Dem.c	  3451          {
; ..\EAS\BSW\Dem\Dem.c	  3452              break;
; ..\EAS\BSW\Dem\Dem.c	  3453          }
; ..\EAS\BSW\Dem\Dem.c	  3454      }/*for(EventId = 0U; EventId < DEM_NUM_OF_EVENT; EventId++)*/
; ..\EAS\BSW\Dem\Dem.c	  3455  
; ..\EAS\BSW\Dem\Dem.c	  3456      if(DEM_CFG_EVENT_CLEARALLOWED_CALLFNC(EventId) != NULL_PTR)
.L260:
	mul	d0,d9,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.w	d15,[a15]32
.L4764:
	jeq	d15,#0,.L261
.L4765:

; ..\EAS\BSW\Dem\Dem.c	  3457      {
; ..\EAS\BSW\Dem\Dem.c	  3458          /*SWS_Dem_00514*//*SWS_Dem_00515*/
; ..\EAS\BSW\Dem\Dem.c	  3459          ret = DEM_CFG_EVENT_CLEARALLOWED_CALLFNC(EventId)(&ClearAllowed);
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]32
.L4766:
	mov.aa	a4,a10
	calli	a15
.L261:

; ..\EAS\BSW\Dem\Dem.c	  3460      }
; ..\EAS\BSW\Dem\Dem.c	  3461  
; ..\EAS\BSW\Dem\Dem.c	  3462      OldStatus = DEM_DTC_STATUS(DtcId);
	mul	d15,d8,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d10,[a15]1864
.L2358:

; ..\EAS\BSW\Dem\Dem.c	  3463      NewStatus = DEM_DTC_STATUS(DtcId);
; ..\EAS\BSW\Dem\Dem.c	  3464      /*SWS_Dem_00667*//*SWS_Dem_00516*/
; ..\EAS\BSW\Dem\Dem.c	  3465      if((ClearAllowed == TRUE) || (ret == E_NOT_OK))
	ld.bu	d15,[a10]
.L4767:
	jeq	d15,#1,.L262
.L4768:
	jne	d2,#1,.L263
.L262:

; ..\EAS\BSW\Dem\Dem.c	  3466      {
; ..\EAS\BSW\Dem\Dem.c	  3467          Dem_DTC_FirstFdcThreshold[DtcId] = FALSE;
	movh.a	a15,#@his(Dem_DTC_FirstFdcThreshold)
	lea	a15,[a15]@los(Dem_DTC_FirstFdcThreshold)
.L4769:
	addsc.a	a15,a15,d8,#0
.L4770:
	mov	d5,#0
.L4771:
	st.b	[a15],d5
.L4772:

; ..\EAS\BSW\Dem\Dem.c	  3468          /*SWS_Dem_00660*/
; ..\EAS\BSW\Dem\Dem.c	  3469          /*Clear event info*/
; ..\EAS\BSW\Dem\Dem.c	  3470          DemInternal_ClearOneEvent(EventId, FALSE);
	mov	d4,d9
.L2359:
	call	DemInternal_ClearOneEvent
.L2356:

; ..\EAS\BSW\Dem\Dem.c	  3471  
; ..\EAS\BSW\Dem\Dem.c	  3472          /*Clear DTC info*/
; ..\EAS\BSW\Dem\Dem.c	  3473          /*SWS_Dem_00385*//*SWS_Dem_00386*/
; ..\EAS\BSW\Dem\Dem.c	  3474          /*SWS_Dem_00389*//*SWS_Dem_00390*/
; ..\EAS\BSW\Dem\Dem.c	  3475          /*SWS_Dem_00391*//*SWS_Dem_00392*/
; ..\EAS\BSW\Dem\Dem.c	  3476          /*SWS_Dem_00393*//*SWS_Dem_00395*/
; ..\EAS\BSW\Dem\Dem.c	  3477          DEM_DTC_STATUS(DtcId) = DEM_STATUS_RESET;
	mul	d15,d8,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4773:
	mov	d0,#80
.L4774:
	st.b	[a15]1864,d0
.L4775:

; ..\EAS\BSW\Dem\Dem.c	  3478          DEM_DTC_LASTSTATUS(DtcId) = DEM_STATUS_RESET;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4776:
	st.b	[a15]1865,d0
.L4777:

; ..\EAS\BSW\Dem\Dem.c	  3479          DEM_DTC_AGINGCNT(DtcId) = DEM_DATA_CLEAR;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4778:
	mov	d0,#0
.L4779:
	st.b	[a15]1866,d0
.L4780:

; ..\EAS\BSW\Dem\Dem.c	  3480          DEM_DTC_AGEDCNT(DtcId) = DEM_DATA_CLEAR;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4781:
	st.b	[a15]1867,d0
.L4782:

; ..\EAS\BSW\Dem\Dem.c	  3481  
; ..\EAS\BSW\Dem\Dem.c	  3482          /*Clear Record data*/
; ..\EAS\BSW\Dem\Dem.c	  3483          if(DEM_DTC_DATAENTRYREF(DtcId) != DEM_DATA_INVALID_U16)
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]1868
.L4783:
	mov.u	d1,#65535
.L4784:
	jeq	d0,d1,.L264
.L4785:

; ..\EAS\BSW\Dem\Dem.c	  3484          {
; ..\EAS\BSW\Dem\Dem.c	  3485              /*SWS_Dem_00399*/
; ..\EAS\BSW\Dem\Dem.c	  3486              DEM_PRIMARY_DATAENTRY_USEDNUM--;
	movh.a	a15,#@his(Dem_StorageMem+2560)
	ld.hu	d0,[a15]@los(Dem_StorageMem+2560)
.L4786:
	add	d0,#-1
	st.h	[a15]@los(Dem_StorageMem+2560),d0
.L4787:

; ..\EAS\BSW\Dem\Dem.c	  3487              DemInternal_ClearOneMemoryEntry((DEM_DTC_DATAENTRYREF(DtcId)));
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]1868
	extr.u	d4,d15,#0,#8
	call	DemInternal_ClearOneMemoryEntry
.L4788:

; ..\EAS\BSW\Dem\Dem.c	  3488              DEM_PRIMARY_DATAENTRY_USED(DEM_DTC_DATAENTRYREF(DtcId)) = FALSE;
	mul	d15,d8,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]1868
	mul	d0,d0,#56
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
.L4789:
	mov	d0,#0
.L4790:
	st.b	[a15]2564,d0
.L4791:

; ..\EAS\BSW\Dem\Dem.c	  3489              DEM_DTC_DATAENTRYREF(DtcId) = DEM_DATA_INVALID_U16;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4792:
	mov.u	d15,#65535
.L4793:
	st.h	[a15]1868,d15
.L4794:
	j	.L265
.L263:

; ..\EAS\BSW\Dem\Dem.c	  3490          }
; ..\EAS\BSW\Dem\Dem.c	  3491      }
; ..\EAS\BSW\Dem\Dem.c	  3492      else
; ..\EAS\BSW\Dem\Dem.c	  3493      {
; ..\EAS\BSW\Dem\Dem.c	  3494          /*SWS_Dem_00668*//*SWS_Dem_00669*/
; ..\EAS\BSW\Dem\Dem.c	  3495          if(DEM_CFG_EVENT_CLEARALLOWED_BEHAVIOR(EventId) == DEM_ONLY_THIS_CYCLE_AND_READINESS)
	mul	d15,d9,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]36
.L4795:
	jne	d15,#1,.L266
.L4796:

; ..\EAS\BSW\Dem\Dem.c	  3496          {
; ..\EAS\BSW\Dem\Dem.c	  3497              Dem_DTC_FirstFdcThreshold[DtcId] = FALSE;
	movh.a	a15,#@his(Dem_DTC_FirstFdcThreshold)
	lea	a15,[a15]@los(Dem_DTC_FirstFdcThreshold)
.L4797:
	addsc.a	a15,a15,d8,#0
.L4798:
	mov	d15,#0
.L4799:
	st.b	[a15],d15
.L4800:

; ..\EAS\BSW\Dem\Dem.c	  3498              /*bit1*/
; ..\EAS\BSW\Dem\Dem.c	  3499              NewStatus = DEM_CLEAR_UDS_STATUS_TFTOC(OldStatus);
; ..\EAS\BSW\Dem\Dem.c	  3500              /*bit4*/
; ..\EAS\BSW\Dem\Dem.c	  3501              NewStatus = DEM_SET_UDS_STATUS_TNCSLC(OldStatus);
; ..\EAS\BSW\Dem\Dem.c	  3502              /*bit5*/
; ..\EAS\BSW\Dem\Dem.c	  3503              NewStatus = DEM_CLEAR_UDS_STATUS_TFSLC(OldStatus);
; ..\EAS\BSW\Dem\Dem.c	  3504              /*bit6*/
; ..\EAS\BSW\Dem\Dem.c	  3505              NewStatus = DEM_SET_UDS_STATUS_TNCTOC(OldStatus);
	or	d15,d10,#64
.L2360:

; ..\EAS\BSW\Dem\Dem.c	  3506              DEM_DTC_STATUS(DtcId) = NewStatus;
	mul	d0,d8,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
.L4801:
	st.b	[a15]1864,d15
.L266:
.L265:
.L264:

; ..\EAS\BSW\Dem\Dem.c	  3507              
; ..\EAS\BSW\Dem\Dem.c	  3508          }
; ..\EAS\BSW\Dem\Dem.c	  3509      }
; ..\EAS\BSW\Dem\Dem.c	  3510  
; ..\EAS\BSW\Dem\Dem.c	  3511      NewStatus = DEM_DTC_STATUS(DtcId);
	mul	d15,d8,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d11,[a15]1864
.L2361:

; ..\EAS\BSW\Dem\Dem.c	  3512      /*SWS_Dem_00284*/
; ..\EAS\BSW\Dem\Dem.c	  3513      if(OldStatus != NewStatus)
	jeq	d10,d11,.L267
.L4802:

; ..\EAS\BSW\Dem\Dem.c	  3514      {
; ..\EAS\BSW\Dem\Dem.c	  3515          (void)DEM_CFG_DTC_STATUSCHANGED_CALLFNC(DEM_CFG_DTC_VALUE(DtcId), OldStatus, NewStatus);
	movh.a	a15,#@his(Dem_DtcStatusChangedNotificationArray)
	ld.a	a2,[a15]@los(Dem_DtcStatusChangedNotificationArray)
.L4803:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d8,#3
	ld.w	d4,[a15]4
.L4804:
	mov	d5,d10
.L2362:
	mov	d6,d11
.L2364:
	calli	a2
.L2363:

; ..\EAS\BSW\Dem\Dem.c	  3516          if(NULL_PTR != DEM_CFG_EVENT_STATUSCHANGED_CALLFNC(EventId))
	mov.a	a2,#0
.L4805:
	mul	d15,d9,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]44
.L4806:
	jeq.a	a2,a15,.L268
.L4807:

; ..\EAS\BSW\Dem\Dem.c	  3517          {
; ..\EAS\BSW\Dem\Dem.c	  3518              /*SWS_Dem_00016*/
; ..\EAS\BSW\Dem\Dem.c	  3519              (void)DEM_CFG_EVENT_STATUSCHANGED_CALLFNC(EventId)(OldStatus, NewStatus);
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]44
.L4808:
	mov	e4,d11,d10
	calli	a15
.L268:

; ..\EAS\BSW\Dem\Dem.c	  3520          }
; ..\EAS\BSW\Dem\Dem.c	  3521  #if(DEM_CFG_TRIGGER_FIM_REPORTS == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  3522          FiM_DemTriggerOnEventStatus(EventId, OldStatus, NewStatus);
	mov	e4,d10,d9
	mov	d6,d11
.L2365:
	call	FiM_DemTriggerOnEventStatus
.L267:

; ..\EAS\BSW\Dem\Dem.c	  3523  #endif
; ..\EAS\BSW\Dem\Dem.c	  3524      }
; ..\EAS\BSW\Dem\Dem.c	  3525      /*SWS_Dem_00659*//*SWS_Dem_00680*/
; ..\EAS\BSW\Dem\Dem.c	  3526      if(DEM_CFG_EVENT_INITM_CALLFNC(EventId) != NULL_PTR)
	mul	d15,d9,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.w	d0,[a15]48
.L4809:
	jeq	d0,#0,.L269
.L4810:

; ..\EAS\BSW\Dem\Dem.c	  3527      {
; ..\EAS\BSW\Dem\Dem.c	  3528          DEM_CFG_EVENT_INITM_CALLFNC(EventId)(DEM_INIT_MONITOR_CLEAR);
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]48
.L4811:
	mov	d4,#1
	ji	a15
.L269:

; ..\EAS\BSW\Dem\Dem.c	  3529      }
; ..\EAS\BSW\Dem\Dem.c	  3530  
; ..\EAS\BSW\Dem\Dem.c	  3531  }
	ret
.L2017:
	
__DemInternal_ClearOneDTC_function_end:
	.size	DemInternal_ClearOneDTC,__DemInternal_ClearOneDTC_function_end-DemInternal_ClearOneDTC
.L1492:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_ClearOneEvent',code,cluster('DemInternal_ClearOneEvent')
	.sect	'.text.Dem.DemInternal_ClearOneEvent'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  3532  
; ..\EAS\BSW\Dem\Dem.c	  3533  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  3534  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  3535  * Function Name: DemInternal_ClearOneEvent
; ..\EAS\BSW\Dem\Dem.c	  3536  *
; ..\EAS\BSW\Dem\Dem.c	  3537  * Description: Clear data information of one event
; ..\EAS\BSW\Dem\Dem.c	  3538  *
; ..\EAS\BSW\Dem\Dem.c	  3539  * Inputs: EventId
; ..\EAS\BSW\Dem\Dem.c	  3540  *         Aging: TRUE-clear because of aging;
; ..\EAS\BSW\Dem\Dem.c	  3541  *                FALSE-Clear because of Clear Command
; ..\EAS\BSW\Dem\Dem.c	  3542  *
; ..\EAS\BSW\Dem\Dem.c	  3543  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  3544  *
; ..\EAS\BSW\Dem\Dem.c	  3545  * Return:
; ..\EAS\BSW\Dem\Dem.c	  3546  *
; ..\EAS\BSW\Dem\Dem.c	  3547  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  3548  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  3549  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  3550  STATIC FUNC(void, DEM_CODE) DemInternal_ClearOneEvent
; Function DemInternal_ClearOneEvent
.L949:
DemInternal_ClearOneEvent:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  3551  (
; ..\EAS\BSW\Dem\Dem.c	  3552      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  3553      boolean Aging
; ..\EAS\BSW\Dem\Dem.c	  3554  )
; ..\EAS\BSW\Dem\Dem.c	  3555  {
; ..\EAS\BSW\Dem\Dem.c	  3556  #if(DEM_NUM_OF_INDICATOR > 0)
; ..\EAS\BSW\Dem\Dem.c	  3557      uint8 Index;
; ..\EAS\BSW\Dem\Dem.c	  3558      uint8 IndicatorId;
; ..\EAS\BSW\Dem\Dem.c	  3559      uint16 StatusPos;
; ..\EAS\BSW\Dem\Dem.c	  3560  #endif
; ..\EAS\BSW\Dem\Dem.c	  3561  
; ..\EAS\BSW\Dem\Dem.c	  3562      DEM_EVENT_FCC(EventId) = DEM_DATA_CLEAR;
	sha	d15,d4,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4816:
	mov	d0,#0
.L4817:
	st.b	[a15]8,d0
.L4818:

; ..\EAS\BSW\Dem\Dem.c	  3563      DEM_EVENT_OCCCTR(EventId) = DEM_DATA_CLEAR;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4819:
	st.b	[a15]9,d0
.L4820:

; ..\EAS\BSW\Dem\Dem.c	  3564  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  3565      /*SWS_Dem_00343*/
; ..\EAS\BSW\Dem\Dem.c	  3566      DEM_EVENT_DBC(EventId) = 0;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4821:
	st.h	[a15]10,d0
.L4822:

; ..\EAS\BSW\Dem\Dem.c	  3567  #endif
; ..\EAS\BSW\Dem\Dem.c	  3568  
; ..\EAS\BSW\Dem\Dem.c	  3569  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  3570      DEM_EVENT_DBT(EventId) = 0;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4823:
	st.w	[a15]12,d0
.L4824:

; ..\EAS\BSW\Dem\Dem.c	  3571      DEM_EVENT_TIMERDIRECTION(EventId) = DEM_DATA_INVALID_U8;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4825:
	mov	d1,#255
.L4826:
	st.b	[a15]16,d1
.L4827:

; ..\EAS\BSW\Dem\Dem.c	  3572      Dem_EventDBTFreezeFlag[EventId] = FALSE;
	movh.a	a15,#@his(Dem_EventDBTFreezeFlag)
	lea	a15,[a15]@los(Dem_EventDBTFreezeFlag)
.L4828:
	addsc.a	a15,a15,d4,#0
.L4829:
	st.b	[a15],d0
.L4830:

; ..\EAS\BSW\Dem\Dem.c	  3573  #endif
; ..\EAS\BSW\Dem\Dem.c	  3574      DEM_EVENT_MAXFDCDCC(EventId) = 0;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4831:
	st.b	[a15]17,d0
.L4832:

; ..\EAS\BSW\Dem\Dem.c	  3575      /*SWS_Dem_00794*/
; ..\EAS\BSW\Dem\Dem.c	  3576      DEM_EVENT_MAXFDCSLC(EventId) = 0;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4833:
	st.b	[a15]18,d0
.L4834:

; ..\EAS\BSW\Dem\Dem.c	  3577      DEM_EVENT_CSLF(EventId) = DEM_DATA_CLEAR;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4835:
	st.b	[a15]19,d0
.L4836:

; ..\EAS\BSW\Dem\Dem.c	  3578      DEM_EVENT_CSFF(EventId) = DEM_DATA_CLEAR;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4837:
	st.b	[a15]20,d0
.L4838:

; ..\EAS\BSW\Dem\Dem.c	  3579      DEM_EVENT_FCSLC(EventId) = DEM_DATA_CLEAR;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L4839:
	st.b	[a15]21,d0
.L4840:

; ..\EAS\BSW\Dem\Dem.c	  3580  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  3581      DEM_EVENT_OBD_PCSLF(EventId) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  3582  #endif
; ..\EAS\BSW\Dem\Dem.c	  3583  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  3584      DEM_EVENT_CMA_PCSLF(EventId) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  3585      DEM_EVENT_CMA_STATUS(EventId) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  3586  #endif
; ..\EAS\BSW\Dem\Dem.c	  3587  
; ..\EAS\BSW\Dem\Dem.c	  3588      if(Aging == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  3589      {
; ..\EAS\BSW\Dem\Dem.c	  3590  #if(DEM_NUM_OF_INDICATOR > 0)
; ..\EAS\BSW\Dem\Dem.c	  3591          if((DEM_CFG_EVENT_INDICATOR_NUM(EventId) > (uint8)0) \ 
; ..\EAS\BSW\Dem\Dem.c	  3592              && (DEM_CFG_EVENT_INDICATOR(EventId) != NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	  3593          {
; ..\EAS\BSW\Dem\Dem.c	  3594  
; ..\EAS\BSW\Dem\Dem.c	  3595              DEM_EVENT_IFCC(EventId) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  3596              DEM_EVENT_IHCC(EventId) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  3597  
; ..\EAS\BSW\Dem\Dem.c	  3598              for(Index = 0; Index < DEM_CFG_EVENT_INDICATOR_NUM(EventId); Index++)
; ..\EAS\BSW\Dem\Dem.c	  3599              {
; ..\EAS\BSW\Dem\Dem.c	  3600                  IndicatorId = DEM_CFG_EVENT_INDICATOR_ID(EventId,Index);
; ..\EAS\BSW\Dem\Dem.c	  3601                  StatusPos = DEM_CFG_EVENT_INDICATOR_OFFSET(EventId,Index) \ 
; ..\EAS\BSW\Dem\Dem.c	  3602                                  + DEM_CFG_INDICATOR_STATUS_START(IndicatorId);
; ..\EAS\BSW\Dem\Dem.c	  3603  
; ..\EAS\BSW\Dem\Dem.c	  3604                  if(DEM_INDICATOR_STATUS(StatusPos) != DEM_INDICATOR_OFF)
; ..\EAS\BSW\Dem\Dem.c	  3605                  {
; ..\EAS\BSW\Dem\Dem.c	  3606                      DEM_INDICATOR_STATUS(StatusPos) = DEM_INDICATOR_OFF;
; ..\EAS\BSW\Dem\Dem.c	  3607  
; ..\EAS\BSW\Dem\Dem.c	  3608                      if(DEM_CFG_INDICATOR_STATUS_FNC(IndicatorId) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  3609                      {
; ..\EAS\BSW\Dem\Dem.c	  3610                          (void)DEM_CFG_INDICATOR_STATUS_FNC(IndicatorId)(EventId, DEM_INDICATOR_OFF);
; ..\EAS\BSW\Dem\Dem.c	  3611                      }
; ..\EAS\BSW\Dem\Dem.c	  3612                  }
; ..\EAS\BSW\Dem\Dem.c	  3613              }
; ..\EAS\BSW\Dem\Dem.c	  3614          }/*if((DEM_CFG_EVENT_INDICATOR_NUM(EventId) > (uint8)0) \ 
; ..\EAS\BSW\Dem\Dem.c	  3615                && (DEM_CFG_EVENT_INDICATOR(EventId) != NULL_PTR))*/
; ..\EAS\BSW\Dem\Dem.c	  3616  #endif/*#if(DEM_NUM_OF_INDICATOR > 0)*/
; ..\EAS\BSW\Dem\Dem.c	  3617  
; ..\EAS\BSW\Dem\Dem.c	  3618  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  3619          DemInternal_ClearOBDFreezeFrame(EventId);
; ..\EAS\BSW\Dem\Dem.c	  3620  #endif
; ..\EAS\BSW\Dem\Dem.c	  3621  
; ..\EAS\BSW\Dem\Dem.c	  3622  #if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)
; ..\EAS\BSW\Dem\Dem.c	  3623          DEM_EVENT_OBD_CLEAR_FLAG(EventId) = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  3624  #endif
; ..\EAS\BSW\Dem\Dem.c	  3625      }/*if(Aging == FALSE)*/
; ..\EAS\BSW\Dem\Dem.c	  3626      else
; ..\EAS\BSW\Dem\Dem.c	  3627      {
; ..\EAS\BSW\Dem\Dem.c	  3628  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  3629          DEM_EVENT_CMA_STATUS(EventId) = DEM_SET_CMA_STATUS_ADTC(DEM_EVENT_CMA_STATUS(EventId));
; ..\EAS\BSW\Dem\Dem.c	  3630  #endif
; ..\EAS\BSW\Dem\Dem.c	  3631      }
; ..\EAS\BSW\Dem\Dem.c	  3632  }
	ret
.L2024:
	
__DemInternal_ClearOneEvent_function_end:
	.size	DemInternal_ClearOneEvent,__DemInternal_ClearOneEvent_function_end-DemInternal_ClearOneEvent
.L1497:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_ClearOneDTCGroup',code,cluster('DemInternal_ClearOneDTCGroup')
	.sect	'.text.Dem.DemInternal_ClearOneDTCGroup'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  3633  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  3634  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  3635  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	  3636  *
; ..\EAS\BSW\Dem\Dem.c	  3637  * Description:
; ..\EAS\BSW\Dem\Dem.c	  3638  *
; ..\EAS\BSW\Dem\Dem.c	  3639  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  3640  *
; ..\EAS\BSW\Dem\Dem.c	  3641  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  3642  *
; ..\EAS\BSW\Dem\Dem.c	  3643  * Return:
; ..\EAS\BSW\Dem\Dem.c	  3644  *
; ..\EAS\BSW\Dem\Dem.c	  3645  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  3646  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  3647  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  3648  STATIC FUNC(void, DEM_CODE) DemInternal_ClearOneDTCGroup
; Function DemInternal_ClearOneDTCGroup
.L951:
DemInternal_ClearOneDTCGroup:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  3649  (
; ..\EAS\BSW\Dem\Dem.c	  3650      void
; ..\EAS\BSW\Dem\Dem.c	  3651  )
; ..\EAS\BSW\Dem\Dem.c	  3652  {
; ..\EAS\BSW\Dem\Dem.c	  3653      uint16 DtcIndex;
; ..\EAS\BSW\Dem\Dem.c	  3654      uint16 MaxIndexCurrentCycle;
; ..\EAS\BSW\Dem\Dem.c	  3655  
; ..\EAS\BSW\Dem\Dem.c	  3656      if(DEM_NUM_OF_DTC <= DEM_CLEAR_NUM_PER_CYCLE)
; ..\EAS\BSW\Dem\Dem.c	  3657      {
; ..\EAS\BSW\Dem\Dem.c	  3658          MaxIndexCurrentCycle = DEM_NUM_OF_DTC;
; ..\EAS\BSW\Dem\Dem.c	  3659      }
; ..\EAS\BSW\Dem\Dem.c	  3660      else
; ..\EAS\BSW\Dem\Dem.c	  3661      {
; ..\EAS\BSW\Dem\Dem.c	  3662          if((DEM_NUM_OF_DTC - DEM_CLEAR_NUM_PER_CYCLE) > Dem_ClearDTC_Index)
	movh.a	a15,#@his(Dem_ClearDTC_Index)
	ld.hu	d0,[a15]@los(Dem_ClearDTC_Index)
.L4845:
	mov	d15,#96
.L4846:
	jge.u	d0,d15,.L270
.L4847:

; ..\EAS\BSW\Dem\Dem.c	  3663          {
; ..\EAS\BSW\Dem\Dem.c	  3664              MaxIndexCurrentCycle = (Dem_ClearDTC_Index + DEM_CLEAR_NUM_PER_CYCLE);
	add	d8,d0,#20
.L2366:
	j	.L271
.L270:

; ..\EAS\BSW\Dem\Dem.c	  3665          }
; ..\EAS\BSW\Dem\Dem.c	  3666          else
; ..\EAS\BSW\Dem\Dem.c	  3667          {
; ..\EAS\BSW\Dem\Dem.c	  3668              MaxIndexCurrentCycle = DEM_NUM_OF_DTC;
	mov	d8,#116
.L271:

; ..\EAS\BSW\Dem\Dem.c	  3669          }
; ..\EAS\BSW\Dem\Dem.c	  3670      }
; ..\EAS\BSW\Dem\Dem.c	  3671  
; ..\EAS\BSW\Dem\Dem.c	  3672      switch(Dem_ClearDTC_DTC)
	movh.a	a15,#@his(Dem_ClearDTC_DTC)
	ld.w	d15,[a15]@los(Dem_ClearDTC_DTC)
.L4848:

; ..\EAS\BSW\Dem\Dem.c	  3673      {
; ..\EAS\BSW\Dem\Dem.c	  3674          case DEM_DTC_GROUP_ALL:
; ..\EAS\BSW\Dem\Dem.c	  3675          case DEM_DTC_GROUP_CHASSIS:
; ..\EAS\BSW\Dem\Dem.c	  3676          case DEM_DTC_GROUP_BODY:
; ..\EAS\BSW\Dem\Dem.c	  3677          case DEM_DTC_GROUP_POWERTRAIN:
	movh	d0,#16
	jeq	d15,d0,.L272
.L4849:
	movh	d0,#64
	jeq	d15,d0,.L273
.L4850:
	movh	d0,#128
	jeq	d15,d0,.L274
.L4851:

; ..\EAS\BSW\Dem\Dem.c	  3678          case DEM_DTC_GROUP_NETWORK_COM:
	movh	d0,#192
	jeq	d15,d0,.L275
.L4852:
	mov.u	d0,#65535
	addih	d0,d0,#255
	jne	d15,d0,.L277
.L275:
.L272:
.L274:
.L273:

; ..\EAS\BSW\Dem\Dem.c	  3679              for(DtcIndex = Dem_ClearDTC_Index; DtcIndex < MaxIndexCurrentCycle; DtcIndex++)
	movh.a	a15,#@his(Dem_ClearDTC_Index)
	ld.hu	d9,[a15]@los(Dem_ClearDTC_Index)
.L2367:

; ..\EAS\BSW\Dem\Dem.c	  3680              {
; ..\EAS\BSW\Dem\Dem.c	  3681                  if(DEM_DTC_GROUP_ALL == Dem_ClearDTC_DTC)
	movh.a	a12,#@his(Dem_ClearDTC_DTC)
.L4853:
	mov.u	d10,#65535
	addih	d10,d10,#255
.L4854:

; ..\EAS\BSW\Dem\Dem.c	  3682                  {
; ..\EAS\BSW\Dem\Dem.c	  3683                      DemInternal_ClearOneDTC(DtcIndex);
; ..\EAS\BSW\Dem\Dem.c	  3684                  }
; ..\EAS\BSW\Dem\Dem.c	  3685                  else if((DEM_DTC_GROUP_CHASSIS == Dem_ClearDTC_DTC) && (DEM_DTC_CHASSIS_RANGE_LOW <= DEM_CFG_DTC_VALUE(DtcIndex)) \ 
	movh	d11,#64
.L4855:

; ..\EAS\BSW\Dem\Dem.c	  3686                      && (DEM_DTC_CHASSIS_RANGE_HIGH >= DEM_CFG_DTC_VALUE(DtcIndex)))
	mov.u	d12,#65535
	addih	d12,d12,#63
.L4856:

; ..\EAS\BSW\Dem\Dem.c	  3687                  {
; ..\EAS\BSW\Dem\Dem.c	  3688                      DemInternal_ClearOneDTC(DtcIndex);
; ..\EAS\BSW\Dem\Dem.c	  3689                  }
; ..\EAS\BSW\Dem\Dem.c	  3690                  else if((DEM_DTC_GROUP_BODY == Dem_ClearDTC_DTC) && (DEM_DTC_BODY_RANGE_LOW <= DEM_CFG_DTC_VALUE(DtcIndex)) \ 
	movh.a	a13,#@his(Dem_ClearDTC_DTC)
.L4857:
	movh	d13,#128
.L4858:

; ..\EAS\BSW\Dem\Dem.c	  3691                      && (DEM_DTC_BODY_RANGE_HIGH >= DEM_CFG_DTC_VALUE(DtcIndex)))
	mov.u	d14,#65535
	addih	d14,d14,#63
.L4859:
	j	.L278
.L279:
	ld.w	d15,[a12]@los(Dem_ClearDTC_DTC)
.L4860:
	jeq	d15,d10,.L280
.L4861:
	jne	d15,d11,.L281
.L4862:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d9,#3
	ld.w	d15,[a15]4
	sub	d15,d11
.L4863:
	jge.u	d12,d15,.L282
.L281:
	ld.w	d15,[a13]@los(Dem_ClearDTC_DTC)
.L4864:
	jne	d15,d13,.L283
.L4865:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d9,#3
	ld.w	d15,[a15]4
	sub	d15,d13
.L4866:
	jge.u	d14,d15,.L284
.L283:

; ..\EAS\BSW\Dem\Dem.c	  3692                  {
; ..\EAS\BSW\Dem\Dem.c	  3693                      DemInternal_ClearOneDTC(DtcIndex);
; ..\EAS\BSW\Dem\Dem.c	  3694                  }
; ..\EAS\BSW\Dem\Dem.c	  3695                  else if((DEM_DTC_GROUP_POWERTRAIN == Dem_ClearDTC_DTC) && (DEM_DTC_POWER_RANGE_LOW <= DEM_CFG_DTC_VALUE(DtcIndex)) \ 
	movh.a	a15,#@his(Dem_ClearDTC_DTC)
	ld.w	d0,[a15]@los(Dem_ClearDTC_DTC)
.L4867:
	movh	d15,#16
.L4868:
	jne	d15,d0,.L285
.L4869:

; ..\EAS\BSW\Dem\Dem.c	  3696                      && (DEM_DTC_POWER_RANGE_HIGH >= DEM_CFG_DTC_VALUE(DtcIndex)))
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d9,#3
	ld.w	d15,[a15]4
	addi	d15,d15,#-256
.L4870:
	mov.u	d0,#65279
	addih	d0,d0,#63
.L4871:
	jge.u	d0,d15,.L286
.L285:

; ..\EAS\BSW\Dem\Dem.c	  3697                  {
; ..\EAS\BSW\Dem\Dem.c	  3698                      DemInternal_ClearOneDTC(DtcIndex);
; ..\EAS\BSW\Dem\Dem.c	  3699                  }
; ..\EAS\BSW\Dem\Dem.c	  3700                  else if((DEM_DTC_GROUP_NETWORK_COM == Dem_ClearDTC_DTC) && (DEM_DTC_COM_RANGE_LOW <= DEM_CFG_DTC_VALUE(DtcIndex)) \ 
	movh.a	a15,#@his(Dem_ClearDTC_DTC)
	ld.w	d15,[a15]@los(Dem_ClearDTC_DTC)
.L4872:
	movh	d0,#192
.L4873:
	jne	d15,d0,.L287
.L4874:

; ..\EAS\BSW\Dem\Dem.c	  3701                      && (DEM_DTC_COM_RANGE_HIGH >= DEM_CFG_DTC_VALUE(DtcIndex)))
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d9,#3
	ld.w	d15,[a15]4
	sub	d15,d0
.L4875:
	mov.u	d0,#65280
	addih	d0,d0,#63
.L4876:
	jlt.u	d0,d15,.L288
.L286:
.L284:
.L282:
.L280:

; ..\EAS\BSW\Dem\Dem.c	  3702                  {
; ..\EAS\BSW\Dem\Dem.c	  3703                      DemInternal_ClearOneDTC(DtcIndex);
	mov	d4,d9
.L2369:
	call	DemInternal_ClearOneDTC
.L288:
.L287:
	add	d9,#1
.L2368:
	extr.u	d9,d9,#0,#16
.L278:
	jlt.u	d9,d8,.L279
.L4877:

; ..\EAS\BSW\Dem\Dem.c	  3704                  }
; ..\EAS\BSW\Dem\Dem.c	  3705                  else
; ..\EAS\BSW\Dem\Dem.c	  3706                  {
; ..\EAS\BSW\Dem\Dem.c	  3707                      /*Continue*/
; ..\EAS\BSW\Dem\Dem.c	  3708                  }
; ..\EAS\BSW\Dem\Dem.c	  3709              }
; ..\EAS\BSW\Dem\Dem.c	  3710  
; ..\EAS\BSW\Dem\Dem.c	  3711              if(MaxIndexCurrentCycle == DEM_NUM_OF_DTC)
	mov	d15,#116
.L4878:
	jne	d15,d8,.L289
.L4879:

; ..\EAS\BSW\Dem\Dem.c	  3712              {
; ..\EAS\BSW\Dem\Dem.c	  3713  #if(DEM_CFG_CLEARDTCBEHAIOR == DEM_CLRRESP_VOLATILE)
; ..\EAS\BSW\Dem\Dem.c	  3714                  Dem_ClearDTCState = DEM_IN_CLEAR_DTC_OK;
	movh.a	a15,#@his(Dem_ClearDTCState)
.L4880:
	mov	d15,#2
.L4881:
	st.b	[a15]@los(Dem_ClearDTCState),d15
.L289:

; ..\EAS\BSW\Dem\Dem.c	  3715  #else
; ..\EAS\BSW\Dem\Dem.c	  3716                  Dem_ClearDTCState = DEM_IN_CLEAR_EVENT_MEM;
; ..\EAS\BSW\Dem\Dem.c	  3717  #endif
; ..\EAS\BSW\Dem\Dem.c	  3718              }
; ..\EAS\BSW\Dem\Dem.c	  3719              /*Update the start index value for the next cycle to clear DTC.*/
; ..\EAS\BSW\Dem\Dem.c	  3720              Dem_ClearDTC_Index = MaxIndexCurrentCycle; 
	movh.a	a15,#@his(Dem_ClearDTC_Index)
.L4882:
	st.h	[a15]@los(Dem_ClearDTC_Index),d8
.L4883:

; ..\EAS\BSW\Dem\Dem.c	  3721          break;
; ..\EAS\BSW\Dem\Dem.c	  3722  
; ..\EAS\BSW\Dem\Dem.c	  3723          case DEM_DTC_GROUP_EMISSION:
; ..\EAS\BSW\Dem\Dem.c	  3724          case DEM_DTC_GROUP_SAFETY:
; ..\EAS\BSW\Dem\Dem.c	  3725          case DEM_DTC_GROUP_VOBD:
; ..\EAS\BSW\Dem\Dem.c	  3726  
; ..\EAS\BSW\Dem\Dem.c	  3727          default:
; ..\EAS\BSW\Dem\Dem.c	  3728              Dem_ClearDTCState = DEM_IN_CLEAR_DTC_ERR;
; ..\EAS\BSW\Dem\Dem.c	  3729          break;
; ..\EAS\BSW\Dem\Dem.c	  3730      }
; ..\EAS\BSW\Dem\Dem.c	  3731  }
	ret
.L277:
	movh.a	a15,#@his(Dem_ClearDTCState)
.L4884:
	mov	d15,#3
.L4885:
	st.b	[a15]@los(Dem_ClearDTCState),d15
.L4886:
	ret
.L2027:
	
__DemInternal_ClearOneDTCGroup_function_end:
	.size	DemInternal_ClearOneDTCGroup,__DemInternal_ClearOneDTCGroup_function_end-DemInternal_ClearOneDTCGroup
.L1502:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_GetEventFreezeFrameDataEx',code,cluster('DemInternal_GetEventFreezeFrameDataEx')
	.sect	'.text.Dem.DemInternal_GetEventFreezeFrameDataEx'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  3732  
; ..\EAS\BSW\Dem\Dem.c	  3733  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  3734  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  3735  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	  3736  *
; ..\EAS\BSW\Dem\Dem.c	  3737  * Description:
; ..\EAS\BSW\Dem\Dem.c	  3738  *
; ..\EAS\BSW\Dem\Dem.c	  3739  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  3740  *
; ..\EAS\BSW\Dem\Dem.c	  3741  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  3742  *
; ..\EAS\BSW\Dem\Dem.c	  3743  * Return:
; ..\EAS\BSW\Dem\Dem.c	  3744  *
; ..\EAS\BSW\Dem\Dem.c	  3745  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  3746  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  3747  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  3748  STATIC FUNC(Std_ReturnType, DEM_CODE) DemInternal_GetEventFreezeFrameDataEx
; Function DemInternal_GetEventFreezeFrameDataEx
.L953:
DemInternal_GetEventFreezeFrameDataEx:	.type	func
	sub.a	a10,#16
.L2370:
	st.w	[a10]4,d5
.L2371:
	st.w	[a10]8,d6
.L2372:
	mov.aa	a12,a4
.L2373:
	mov.aa	a13,a5
.L2374:

; ..\EAS\BSW\Dem\Dem.c	  3749  (
; ..\EAS\BSW\Dem\Dem.c	  3750      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  3751      uint8 RecordNumber,
; ..\EAS\BSW\Dem\Dem.c	  3752      uint16 DataId,
; ..\EAS\BSW\Dem\Dem.c	  3753      uint8 *DestBuffer,
; ..\EAS\BSW\Dem\Dem.c	  3754      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) BufSize
; ..\EAS\BSW\Dem\Dem.c	  3755  )
; ..\EAS\BSW\Dem\Dem.c	  3756  {
; ..\EAS\BSW\Dem\Dem.c	  3757      Std_ReturnType Result = E_OK;
	mov	d8,#0
.L2375:
	st.w	[a10]12,d8
.L2376:

; ..\EAS\BSW\Dem\Dem.c	  3758  #if(DEM_MAX_FFSIZE_OF_DTC > 0)
; ..\EAS\BSW\Dem\Dem.c	  3759      uint16 DtcId;
; ..\EAS\BSW\Dem\Dem.c	  3760      uint16 MemEntryId;
; ..\EAS\BSW\Dem\Dem.c	  3761      uint8 *SrcDataPtr;
; ..\EAS\BSW\Dem\Dem.c	  3762      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	  3763      uint8 j;
; ..\EAS\BSW\Dem\Dem.c	  3764      uint8 k;
; ..\EAS\BSW\Dem\Dem.c	  3765      uint8 RecIdx;
; ..\EAS\BSW\Dem\Dem.c	  3766      uint8 DidIdx;
; ..\EAS\BSW\Dem\Dem.c	  3767      uint8 DataIdx;
; ..\EAS\BSW\Dem\Dem.c	  3768  #endif
; ..\EAS\BSW\Dem\Dem.c	  3769      uint16 DataSize = 0;
; ..\EAS\BSW\Dem\Dem.c	  3770  
; ..\EAS\BSW\Dem\Dem.c	  3771  #if(DEM_MAX_FFSIZE_OF_DTC > 0)
; ..\EAS\BSW\Dem\Dem.c	  3772  #if(DEM_NUM_OF_FFRECCLASS > 0)
; ..\EAS\BSW\Dem\Dem.c	  3773  
; ..\EAS\BSW\Dem\Dem.c	  3774      DtcId = DEM_CFG_EVENT_DTCREF(EventId);
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d9,[a15]4
.L2377:

; ..\EAS\BSW\Dem\Dem.c	  3775  
; ..\EAS\BSW\Dem\Dem.c	  3776      if(DEM_CFG_DTC_FFRECNUMCLASSREF(DtcId) != NULL_PTR)
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d9,#3
	ld.hu	d0,[a15]0
	sha	d0,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d0,#0
	ld.w	d15,[a15]16
.L4891:
	jeq	d15,#0,.L291
.L4892:

; ..\EAS\BSW\Dem\Dem.c	  3777      {
; ..\EAS\BSW\Dem\Dem.c	  3778          MemEntryId = DEM_DTC_DATAENTRYREF(DtcId);
	mul	d15,d9,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]1868
.L2378:

; ..\EAS\BSW\Dem\Dem.c	  3779          SrcDataPtr = DEM_PRIMARY_FFDATA_PTR(MemEntryId);
	mul	d15,d0,#56
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	lea	a14,[a15]2565
.L2379:

; ..\EAS\BSW\Dem\Dem.c	  3780  
; ..\EAS\BSW\Dem\Dem.c	  3781          for(i = 0; i < DEM_CFG_DTC_NUM_OF_FFREC(DtcId); i++)
	mov	d10,d8
.L2380:
	j	.L292
.L293:

; ..\EAS\BSW\Dem\Dem.c	  3782          {
; ..\EAS\BSW\Dem\Dem.c	  3783              RecIdx = (DEM_CFG_DTC_FFREC_ARRAY(DtcId)[i]);
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d9,#3
	ld.hu	d0,[a15]0
	sha	d0,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]16
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_FFRecNumClassTable)
	lea	a15,[a15]@los(Dem_FFRecNumClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]4
.L4893:
	addsc.a	a15,a15,d10,#0
	ld.bu	d11,[a15]
.L2381:

; ..\EAS\BSW\Dem\Dem.c	  3784  
; ..\EAS\BSW\Dem\Dem.c	  3785              if(SrcDataPtr[0] == RecordNumber)
	ld.bu	d0,[a14]
.L4894:
	ld.w	d15,[a10]4
.L2383:
	jne	d15,d0,.L294
.L4895:

; ..\EAS\BSW\Dem\Dem.c	  3786              {
; ..\EAS\BSW\Dem\Dem.c	  3787                  /*+ RecNum length(one byte) + RecordNumberOfIdentifiers length(one byte)*/
; ..\EAS\BSW\Dem\Dem.c	  3788                  SrcDataPtr += 2;
	add.a	a14,#2
.L4896:

; ..\EAS\BSW\Dem\Dem.c	  3789  
; ..\EAS\BSW\Dem\Dem.c	  3790                  for(j = 0; j < DEM_CFG_NUMDID_OF_FFRECNUM(RecIdx); j++)
	mov	d12,#0
.L2384:
	j	.L295
.L296:

; ..\EAS\BSW\Dem\Dem.c	  3791                  {
; ..\EAS\BSW\Dem\Dem.c	  3792                      /*Did length(two bytes)*/
; ..\EAS\BSW\Dem\Dem.c	  3793                      SrcDataPtr += 2;
	add.a	a14,#2
.L4897:

; ..\EAS\BSW\Dem\Dem.c	  3794  
; ..\EAS\BSW\Dem\Dem.c	  3795                      DidIdx = (DEM_CFG_DIDARRAY_OF_FFRECNUM(RecIdx)[j]);
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d11,#3
	ld.a	a15,[a15]4
.L4898:
	addsc.a	a15,a15,d12,#0
	ld.bu	d10,[a15]
.L2385:

; ..\EAS\BSW\Dem\Dem.c	  3796                      if(DataId == DEM_CFG_DID(DidIdx))
	mul	d15,d10,#12
	movh.a	a15,#@his(Dem_DidClassTable)
	lea	a15,[a15]@los(Dem_DidClassTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]8
.L4899:
	ld.w	d15,[a10]8
.L2386:
	jne	d15,d0,.L297
.L4900:

; ..\EAS\BSW\Dem\Dem.c	  3797                      {
; ..\EAS\BSW\Dem\Dem.c	  3798                          for(k = 0; k < DEM_CFG_NUMDATA_OF_DID(DidIdx); k++)
	mov	d11,#0
.L2382:
	j	.L298
.L299:

; ..\EAS\BSW\Dem\Dem.c	  3799                          {
; ..\EAS\BSW\Dem\Dem.c	  3800                              DataIdx = (DEM_CFG_DATAARRAY_OF_DID(DidIdx)[k]);
	mul	d15,d10,#12
	movh.a	a15,#@his(Dem_DidClassTable)
	lea	a15,[a15]@los(Dem_DidClassTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]4
.L4901:
	addsc.a	a15,a15,d11,#0
	ld.bu	d12,[a15]
.L2388:

; ..\EAS\BSW\Dem\Dem.c	  3801                              if(DEM_CFG_DATA_IN_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d12,#3
	ld.w	d15,[a15]
.L4902:
	jeq	d15,#0,.L300
.L4903:

; ..\EAS\BSW\Dem\Dem.c	  3802                              {
; ..\EAS\BSW\Dem\Dem.c	  3803                                  /*SWS_Dem_00817*/
; ..\EAS\BSW\Dem\Dem.c	  3804                                  *SrcDataPtr = DemInternal_GetDtcInternalData(DtcId, DataIdx);
	mov	e4,d12,d9
	call	DemInternal_GetDtcInternalData
.L4904:
	st.b	[a14],d2
.L4905:

; ..\EAS\BSW\Dem\Dem.c	  3805                                  DataSize += DEM_CFG_DATA_IN_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d12,#3
	ld.a	a15,[a15]
	ld.bu	d0,[a15]
.L4906:
	add	d8,d0
	extr.u	d8,d8,#0,#16
.L300:

; ..\EAS\BSW\Dem\Dem.c	  3806                              }
; ..\EAS\BSW\Dem\Dem.c	  3807  
; ..\EAS\BSW\Dem\Dem.c	  3808                              if(DEM_CFG_DATA_CS_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d12,#3
	ld.w	d15,[a15]4
.L4907:
	jeq	d15,#0,.L301
.L4908:

; ..\EAS\BSW\Dem\Dem.c	  3809                              {
; ..\EAS\BSW\Dem\Dem.c	  3810                                  DataSize += DEM_CFG_DATA_CS_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d12,#3
	ld.a	a15,[a15]4
	ld.bu	d15,[a15]
.L4909:
	add	d8,d15
	extr.u	d8,d8,#0,#16
.L301:
	add	d11,#1
.L2387:
	extr.u	d11,d11,#0,#8
.L298:
	mul	d15,d10,#12
	movh.a	a15,#@his(Dem_DidClassTable)
	lea	a15,[a15]@los(Dem_DidClassTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L4910:
	jlt.u	d11,d15,.L299
.L4911:

; ..\EAS\BSW\Dem\Dem.c	  3811                              }
; ..\EAS\BSW\Dem\Dem.c	  3812                          }
; ..\EAS\BSW\Dem\Dem.c	  3813                          /*SWS_Dem_00991*/
; ..\EAS\BSW\Dem\Dem.c	  3814                          if(*BufSize >= DataSize)
	ld.hu	d15,[a13]0
.L2389:
	jlt.u	d15,d8,.L302
.L2390:

; ..\EAS\BSW\Dem\Dem.c	  3815                          {
; ..\EAS\BSW\Dem\Dem.c	  3816                              Bsw_MemCpy(DestBuffer, SrcDataPtr, DataSize);
	mov.aa	a4,a12
.L2391:
	mov.aa	a5,a14
.L2393:
	mov	d4,d8
.L2394:
	call	Bsw_MemCpy
.L2392:

; ..\EAS\BSW\Dem\Dem.c	  3817                              *BufSize = DataSize;
	st.h	[a13],d8
.L2395:
	j	.L303
.L302:

; ..\EAS\BSW\Dem\Dem.c	  3818                          }
; ..\EAS\BSW\Dem\Dem.c	  3819                          else
; ..\EAS\BSW\Dem\Dem.c	  3820                          {
; ..\EAS\BSW\Dem\Dem.c	  3821                              Result = E_NOT_OK;
	mov	d15,#1
.L2396:
	st.w	[a10]12,d15
.L4912:

; ..\EAS\BSW\Dem\Dem.c	  3822                          }
; ..\EAS\BSW\Dem\Dem.c	  3823                          break;
	j	.L304
.L297:

; ..\EAS\BSW\Dem\Dem.c	  3824                      }
; ..\EAS\BSW\Dem\Dem.c	  3825                      else
; ..\EAS\BSW\Dem\Dem.c	  3826                      {
; ..\EAS\BSW\Dem\Dem.c	  3827                          for(k = 0; k < DEM_CFG_NUMDATA_OF_DID(DidIdx); k++)
	mov	d13,#0
.L2398:
	j	.L305
.L306:

; ..\EAS\BSW\Dem\Dem.c	  3828                          {
; ..\EAS\BSW\Dem\Dem.c	  3829                              DataIdx = (DEM_CFG_DATAARRAY_OF_DID(DidIdx)[k]);
	mul	d15,d10,#12
	movh.a	a15,#@his(Dem_DidClassTable)
	lea	a15,[a15]@los(Dem_DidClassTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]4
.L4913:
	addsc.a	a15,a15,d13,#0
	ld.bu	d14,[a15]
.L2400:

; ..\EAS\BSW\Dem\Dem.c	  3830                              if(DEM_CFG_DATA_IN_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d14,#3
	ld.w	d15,[a15]
.L4914:
	jeq	d15,#0,.L307
.L4915:

; ..\EAS\BSW\Dem\Dem.c	  3831                              {
; ..\EAS\BSW\Dem\Dem.c	  3832                                  /*SWS_Dem_00817*/
; ..\EAS\BSW\Dem\Dem.c	  3833                                  *SrcDataPtr = DemInternal_GetDtcInternalData(DtcId, DataIdx);
	mov	e4,d14,d9
	call	DemInternal_GetDtcInternalData
.L4916:
	st.b	[a14],d2
.L4917:

; ..\EAS\BSW\Dem\Dem.c	  3834                                  SrcDataPtr += DEM_CFG_DATA_IN_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d14,#3
	ld.a	a15,[a15]
	ld.bu	d15,[a15]
.L4918:
	addsc.a	a14,a14,d15,#0
.L307:

; ..\EAS\BSW\Dem\Dem.c	  3835                              }
; ..\EAS\BSW\Dem\Dem.c	  3836  
; ..\EAS\BSW\Dem\Dem.c	  3837                              if(DEM_CFG_DATA_CS_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d14,#3
	ld.w	d15,[a15]4
.L4919:
	jeq	d15,#0,.L308
.L4920:

; ..\EAS\BSW\Dem\Dem.c	  3838                              {
; ..\EAS\BSW\Dem\Dem.c	  3839                                  SrcDataPtr += DEM_CFG_DATA_CS_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d14,#3
	ld.a	a15,[a15]4
	ld.bu	d15,[a15]
.L4921:
	addsc.a	a14,a14,d15,#0
.L308:
	add	d13,#1
.L2399:
	extr.u	d13,d13,#0,#8
.L305:
	mul	d15,d10,#12
	movh.a	a15,#@his(Dem_DidClassTable)
	lea	a15,[a15]@los(Dem_DidClassTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L4922:
	jlt.u	d13,d15,.L306
.L4923:
	add	d12,#1
.L2397:
	extr.u	d12,d12,#0,#8
.L295:
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d11,#3
	ld.bu	d15,[a15]3
.L4924:
	jlt.u	d12,d15,.L296
.L4925:

; ..\EAS\BSW\Dem\Dem.c	  3840                              }
; ..\EAS\BSW\Dem\Dem.c	  3841                          }
; ..\EAS\BSW\Dem\Dem.c	  3842                      }
; ..\EAS\BSW\Dem\Dem.c	  3843                  }
; ..\EAS\BSW\Dem\Dem.c	  3844                  break;
	j	.L309
.L294:

; ..\EAS\BSW\Dem\Dem.c	  3845              }
; ..\EAS\BSW\Dem\Dem.c	  3846              else
; ..\EAS\BSW\Dem\Dem.c	  3847              {
; ..\EAS\BSW\Dem\Dem.c	  3848                  /*+ RecNum length(one byte) + RecordNumberOfIdentifiers length(one byte)*/
; ..\EAS\BSW\Dem\Dem.c	  3849                  SrcDataPtr += 2;
	add.a	a14,#2
.L4926:

; ..\EAS\BSW\Dem\Dem.c	  3850  
; ..\EAS\BSW\Dem\Dem.c	  3851                  for(j = 0; j < DEM_CFG_NUMDID_OF_FFRECNUM(RecIdx); j++)
	mov	d12,#0
.L2402:
	j	.L310
.L311:

; ..\EAS\BSW\Dem\Dem.c	  3852                  {
; ..\EAS\BSW\Dem\Dem.c	  3853                      /*Did length(two bytes)*/
; ..\EAS\BSW\Dem\Dem.c	  3854                      SrcDataPtr += 2;
	add.a	a14,#2
.L4927:

; ..\EAS\BSW\Dem\Dem.c	  3855  
; ..\EAS\BSW\Dem\Dem.c	  3856                      DidIdx = (DEM_CFG_DIDARRAY_OF_FFRECNUM(RecIdx)[j]);
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d11,#3
	ld.a	a15,[a15]4
.L4928:
	addsc.a	a15,a15,d12,#0
	ld.bu	d13,[a15]
.L2404:

; ..\EAS\BSW\Dem\Dem.c	  3857                      for(k = 0; k < DEM_CFG_NUMDATA_OF_DID(DidIdx); k++)
	mov	d14,#0
.L2405:
	j	.L312
.L313:

; ..\EAS\BSW\Dem\Dem.c	  3858                      {
; ..\EAS\BSW\Dem\Dem.c	  3859                          DataIdx = (DEM_CFG_DATAARRAY_OF_DID(DidIdx)[k]);
	mul	d15,d13,#12
	movh.a	a15,#@his(Dem_DidClassTable)
	lea	a15,[a15]@los(Dem_DidClassTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]4
.L4929:
	addsc.a	a15,a15,d14,#0
	ld.bu	d15,[a15]
.L2407:
	st.w	[a10],d15
.L2409:

; ..\EAS\BSW\Dem\Dem.c	  3860                          if(DEM_CFG_DATA_IN_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.w	d15,[a15]
.L2408:
	jeq	d15,#0,.L314
.L4930:

; ..\EAS\BSW\Dem\Dem.c	  3861                          {
; ..\EAS\BSW\Dem\Dem.c	  3862                              /*SWS_Dem_00817*/
; ..\EAS\BSW\Dem\Dem.c	  3863                              *SrcDataPtr = DemInternal_GetDtcInternalData(DtcId, DataIdx);
	mov	d4,d9
.L2410:
	ld.w	d5,[a10]
.L2412:
	call	DemInternal_GetDtcInternalData
.L2411:
	st.b	[a14],d2
.L4931:

; ..\EAS\BSW\Dem\Dem.c	  3864                              SrcDataPtr += DEM_CFG_DATA_IN_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	ld.w	d15,[a10]
.L2413:
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]
	ld.bu	d15,[a15]
.L2414:
	addsc.a	a14,a14,d15,#0
.L314:

; ..\EAS\BSW\Dem\Dem.c	  3865                          }
; ..\EAS\BSW\Dem\Dem.c	  3866  
; ..\EAS\BSW\Dem\Dem.c	  3867                          if(DEM_CFG_DATA_CS_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	ld.w	d15,[a10]
.L2415:
	addsc.a	a15,a15,d15,#3
	ld.w	d15,[a15]4
.L2416:
	jeq	d15,#0,.L315
.L4932:

; ..\EAS\BSW\Dem\Dem.c	  3868                          {
; ..\EAS\BSW\Dem\Dem.c	  3869                              SrcDataPtr += DEM_CFG_DATA_CS_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	ld.w	d15,[a10]
.L2417:
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]4
	ld.bu	d15,[a15]
.L2418:
	addsc.a	a14,a14,d15,#0
.L315:
	add	d14,#1
.L2406:
	extr.u	d14,d14,#0,#8
.L312:
	mul	d15,d13,#12
	movh.a	a15,#@his(Dem_DidClassTable)
	lea	a15,[a15]@los(Dem_DidClassTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L4933:
	jlt.u	d14,d15,.L313
.L4934:
	add	d12,#1
.L2403:
	extr.u	d12,d12,#0,#8
.L310:
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d11,#3
	ld.bu	d15,[a15]3
.L4935:
	jlt.u	d12,d15,.L311
.L4936:
	add	d10,#1
.L2401:
	extr.u	d10,d10,#0,#8
.L292:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d9,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]16
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_FFRecNumClassTable)
	lea	a15,[a15]@los(Dem_FFRecNumClassTable)
	addsc.a	a15,a15,d15,#3
	ld.bu	d15,[a15]
.L4937:
	jlt.u	d10,d15,.L293

; ..\EAS\BSW\Dem\Dem.c	  3870                          }
; ..\EAS\BSW\Dem\Dem.c	  3871                      }
; ..\EAS\BSW\Dem\Dem.c	  3872                  }
; ..\EAS\BSW\Dem\Dem.c	  3873              }
; ..\EAS\BSW\Dem\Dem.c	  3874          }
; ..\EAS\BSW\Dem\Dem.c	  3875      }
.L309:
.L304:
.L303:
.L291:

; ..\EAS\BSW\Dem\Dem.c	  3876  #endif
; ..\EAS\BSW\Dem\Dem.c	  3877  #endif
; ..\EAS\BSW\Dem\Dem.c	  3878      if(DataSize == 0)
	jne	d8,#0,.L316
.L2419:

; ..\EAS\BSW\Dem\Dem.c	  3879      {
; ..\EAS\BSW\Dem\Dem.c	  3880          Result = E_NOT_OK;
	mov	d15,#1
.L2420:
	st.w	[a10]12,d15
.L316:

; ..\EAS\BSW\Dem\Dem.c	  3881      }
; ..\EAS\BSW\Dem\Dem.c	  3882      return Result;
	ld.w	d2,[a10]12
.L2421:

; ..\EAS\BSW\Dem\Dem.c	  3883  }
	ret
.L2030:
	
__DemInternal_GetEventFreezeFrameDataEx_function_end:
	.size	DemInternal_GetEventFreezeFrameDataEx,__DemInternal_GetEventFreezeFrameDataEx_function_end-DemInternal_GetEventFreezeFrameDataEx
.L1507:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_GetEventExtendedDataRecordEx',code,cluster('DemInternal_GetEventExtendedDataRecordEx')
	.sect	'.text.Dem.DemInternal_GetEventExtendedDataRecordEx'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  3884  
; ..\EAS\BSW\Dem\Dem.c	  3885  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  3886  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  3887  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	  3888  *
; ..\EAS\BSW\Dem\Dem.c	  3889  * Description:
; ..\EAS\BSW\Dem\Dem.c	  3890  *
; ..\EAS\BSW\Dem\Dem.c	  3891  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  3892  *
; ..\EAS\BSW\Dem\Dem.c	  3893  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  3894  *
; ..\EAS\BSW\Dem\Dem.c	  3895  * Return:
; ..\EAS\BSW\Dem\Dem.c	  3896  *
; ..\EAS\BSW\Dem\Dem.c	  3897  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  3898  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  3899  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  3900  STATIC FUNC(Std_ReturnType, DEM_CODE) DemInternal_GetEventExtendedDataRecordEx
; Function DemInternal_GetEventExtendedDataRecordEx
.L955:
DemInternal_GetEventExtendedDataRecordEx:	.type	func
	sub.a	a10,#8
.L2422:
	mov	d8,d5
.L2423:
	mov.aa	a12,a4
.L2425:
	mov.aa	a13,a5
.L2426:

; ..\EAS\BSW\Dem\Dem.c	  3901  (
; ..\EAS\BSW\Dem\Dem.c	  3902      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  3903      uint8 RecordNumber,
; ..\EAS\BSW\Dem\Dem.c	  3904      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) DestBuffer,
; ..\EAS\BSW\Dem\Dem.c	  3905      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) BufSize
; ..\EAS\BSW\Dem\Dem.c	  3906  )
; ..\EAS\BSW\Dem\Dem.c	  3907  {
; ..\EAS\BSW\Dem\Dem.c	  3908      Std_ReturnType Result = E_OK;
	mov	d9,#0
.L2427:

; ..\EAS\BSW\Dem\Dem.c	  3909  #if(DEM_MAX_EXTSIZE_OF_DTC > 0)
; ..\EAS\BSW\Dem\Dem.c	  3910      uint16 DtcId;
; ..\EAS\BSW\Dem\Dem.c	  3911      uint16 MemEntryId;
; ..\EAS\BSW\Dem\Dem.c	  3912      uint8 *SrcDataPtr;
; ..\EAS\BSW\Dem\Dem.c	  3913      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	  3914      uint8 j;
; ..\EAS\BSW\Dem\Dem.c	  3915      uint8 RecIdx;
; ..\EAS\BSW\Dem\Dem.c	  3916      uint8 DataIdx;
; ..\EAS\BSW\Dem\Dem.c	  3917  #endif
; ..\EAS\BSW\Dem\Dem.c	  3918      uint16 DataSize = 0;
	mov	d10,d9
.L2428:

; ..\EAS\BSW\Dem\Dem.c	  3919  
; ..\EAS\BSW\Dem\Dem.c	  3920  #if(DEM_MAX_EXTSIZE_OF_DTC > 0)
; ..\EAS\BSW\Dem\Dem.c	  3921  #if(DEM_NUM_OF_EXTDATACLASS > 0)
; ..\EAS\BSW\Dem\Dem.c	  3922  
; ..\EAS\BSW\Dem\Dem.c	  3923      DtcId = DEM_CFG_EVENT_DTCREF(EventId);
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d11,[a15]4
.L2430:

; ..\EAS\BSW\Dem\Dem.c	  3924  
; ..\EAS\BSW\Dem\Dem.c	  3925      if(DEM_CFG_DTC_EXTDATACLASSREF(DtcId) != NULL_PTR)
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d11,#3
	ld.hu	d0,[a15]0
	sha	d0,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d0,#0
	ld.w	d15,[a15]12
.L4942:
	jeq	d15,#0,.L318
.L4943:

; ..\EAS\BSW\Dem\Dem.c	  3926      {
; ..\EAS\BSW\Dem\Dem.c	  3927          MemEntryId = DEM_DTC_DATAENTRYREF(DtcId);
	mul	d15,d11,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]1868
.L2431:

; ..\EAS\BSW\Dem\Dem.c	  3928          SrcDataPtr = DEM_PRIMARY_EXTDATA_PTR(MemEntryId);
	mul	d15,d15,#56
.L2432:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	lea	a14,[a15]2611
.L2433:

; ..\EAS\BSW\Dem\Dem.c	  3929  
; ..\EAS\BSW\Dem\Dem.c	  3930          for(i = 0; i < DEM_CFG_DTC_NUM_OF_EXTREC(DtcId); i++)
	mov	d12,d9
.L2434:
	j	.L319
.L320:

; ..\EAS\BSW\Dem\Dem.c	  3931          {
; ..\EAS\BSW\Dem\Dem.c	  3932              RecIdx = (DEM_CFG_DTC_EXTREC_ARRAY(DtcId)[i]);
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d11,#3
	ld.hu	d0,[a15]0
	sha	d0,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]12
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_ExtDataClassTable)
	lea	a15,[a15]@los(Dem_ExtDataClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]4
.L4944:
	addsc.a	a15,a15,d12,#0
	ld.bu	d13,[a15]
.L2435:

; ..\EAS\BSW\Dem\Dem.c	  3933  
; ..\EAS\BSW\Dem\Dem.c	  3934              if(SrcDataPtr[0] == RecordNumber)
	ld.bu	d15,[a14]
.L4945:
	jne	d15,d8,.L321
.L4946:

; ..\EAS\BSW\Dem\Dem.c	  3935              {
; ..\EAS\BSW\Dem\Dem.c	  3936                  /*+ DataRecNum length(one byte)*/
; ..\EAS\BSW\Dem\Dem.c	  3937                  SrcDataPtr += 1;
	add.a	a14,#1
.L4947:

; ..\EAS\BSW\Dem\Dem.c	  3938  
; ..\EAS\BSW\Dem\Dem.c	  3939                  for(j = 0; j < DEM_CFG_NUMDATA_OF_EXTRECNUM(RecIdx); j++)
	mov	d8,#0
.L2424:
	j	.L322
.L323:

; ..\EAS\BSW\Dem\Dem.c	  3940                  {
; ..\EAS\BSW\Dem\Dem.c	  3941                      DataIdx = (DEM_CFG_DATAARRAY_OF_EXTRECNUM(RecIdx)[j]);
	mul	d15,d13,#12
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]4
.L4948:
	addsc.a	a15,a15,d8,#0
	ld.bu	d12,[a15]
.L2437:

; ..\EAS\BSW\Dem\Dem.c	  3942                      if(DEM_CFG_DATA_IN_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d12,#3
	ld.w	d15,[a15]
.L4949:
	jeq	d15,#0,.L324
.L4950:

; ..\EAS\BSW\Dem\Dem.c	  3943                      {
; ..\EAS\BSW\Dem\Dem.c	  3944                          /*SWS_Dem_00817*/
; ..\EAS\BSW\Dem\Dem.c	  3945                          *SrcDataPtr = DemInternal_GetDtcInternalData(DtcId, DataIdx);
	mov	e4,d12,d11
	call	DemInternal_GetDtcInternalData
.L4951:
	st.b	[a14],d2
.L4952:

; ..\EAS\BSW\Dem\Dem.c	  3946                          DataSize += DEM_CFG_DATA_IN_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d12,#3
	ld.a	a15,[a15]
	ld.bu	d0,[a15]
.L4953:
	add	d10,d0
.L2429:
	extr.u	d10,d10,#0,#16
.L324:

; ..\EAS\BSW\Dem\Dem.c	  3947                      }
; ..\EAS\BSW\Dem\Dem.c	  3948  
; ..\EAS\BSW\Dem\Dem.c	  3949                      if(DEM_CFG_DATA_CS_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d12,#3
	ld.w	d15,[a15]4
.L4954:
	jeq	d15,#0,.L325
.L4955:

; ..\EAS\BSW\Dem\Dem.c	  3950                      {
; ..\EAS\BSW\Dem\Dem.c	  3951                          DataSize += DEM_CFG_DATA_CS_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d12,#3
	ld.a	a15,[a15]4
	ld.bu	d15,[a15]
.L4956:
	add	d10,d15
.L2438:
	extr.u	d10,d10,#0,#16
.L325:
	add	d8,#1
.L2436:
	extr.u	d8,d8,#0,#8
.L322:
	mul	d15,d13,#12
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L4957:
	jlt.u	d8,d15,.L323
.L4958:

; ..\EAS\BSW\Dem\Dem.c	  3952                      }
; ..\EAS\BSW\Dem\Dem.c	  3953                  }
; ..\EAS\BSW\Dem\Dem.c	  3954                  /*SWS_Dem_00989*/
; ..\EAS\BSW\Dem\Dem.c	  3955                  if(*BufSize >= DataSize)
	ld.hu	d15,[a13]0
.L4959:
	jlt.u	d15,d10,.L326
.L4960:

; ..\EAS\BSW\Dem\Dem.c	  3956                  {
; ..\EAS\BSW\Dem\Dem.c	  3957                      Bsw_MemCpy(DestBuffer, SrcDataPtr, DataSize);
	mov.aa	a4,a12
.L2439:
	mov.aa	a5,a14
.L2441:
	mov	d4,d10
.L2442:
	call	Bsw_MemCpy
.L2440:

; ..\EAS\BSW\Dem\Dem.c	  3958                      *BufSize = DataSize;
	st.h	[a13],d10
.L4961:
	j	.L327
.L326:

; ..\EAS\BSW\Dem\Dem.c	  3959                  }
; ..\EAS\BSW\Dem\Dem.c	  3960                  else
; ..\EAS\BSW\Dem\Dem.c	  3961                  {
; ..\EAS\BSW\Dem\Dem.c	  3962                      Result = E_NOT_OK;
	mov	d9,#1
.L4962:

; ..\EAS\BSW\Dem\Dem.c	  3963                  }
; ..\EAS\BSW\Dem\Dem.c	  3964                  break;
	j	.L328
.L321:

; ..\EAS\BSW\Dem\Dem.c	  3965              }
; ..\EAS\BSW\Dem\Dem.c	  3966              else
; ..\EAS\BSW\Dem\Dem.c	  3967              {
; ..\EAS\BSW\Dem\Dem.c	  3968                  /*+ DataRecNum length(one byte)*/
; ..\EAS\BSW\Dem\Dem.c	  3969                  SrcDataPtr += 1;
	add.a	a14,#1
.L4963:

; ..\EAS\BSW\Dem\Dem.c	  3970  
; ..\EAS\BSW\Dem\Dem.c	  3971                  for(j = 0; j < DEM_CFG_NUMDATA_OF_EXTRECNUM(RecIdx); j++)
	mov	d14,#0
.L2444:
	j	.L329
.L330:

; ..\EAS\BSW\Dem\Dem.c	  3972                  {
; ..\EAS\BSW\Dem\Dem.c	  3973                      DataIdx = (DEM_CFG_DATAARRAY_OF_EXTRECNUM(RecIdx)[j]);
	mul	d15,d13,#12
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]4
.L4964:
	addsc.a	a15,a15,d14,#0
	ld.bu	d15,[a15]
.L2446:
	st.w	[a10],d15
.L2448:

; ..\EAS\BSW\Dem\Dem.c	  3974                      if(DEM_CFG_DATA_IN_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.w	d15,[a15]
.L2447:
	jeq	d15,#0,.L331
.L4965:

; ..\EAS\BSW\Dem\Dem.c	  3975                      {
; ..\EAS\BSW\Dem\Dem.c	  3976                          /*SWS_Dem_00817*/
; ..\EAS\BSW\Dem\Dem.c	  3977                          *SrcDataPtr = DemInternal_GetDtcInternalData(DtcId, DataIdx);
	mov	d4,d11
.L2449:
	ld.w	d5,[a10]
.L2451:
	call	DemInternal_GetDtcInternalData
.L2450:
	st.b	[a14],d2
.L4966:

; ..\EAS\BSW\Dem\Dem.c	  3978                          SrcDataPtr += DEM_CFG_DATA_IN_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	ld.w	d15,[a10]
.L2452:
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]
	ld.bu	d15,[a15]
.L2453:
	addsc.a	a14,a14,d15,#0
.L331:

; ..\EAS\BSW\Dem\Dem.c	  3979                      }
; ..\EAS\BSW\Dem\Dem.c	  3980  
; ..\EAS\BSW\Dem\Dem.c	  3981                      if(DEM_CFG_DATA_CS_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	ld.w	d15,[a10]
.L2454:
	addsc.a	a15,a15,d15,#3
	ld.w	d15,[a15]4
.L2455:
	jeq	d15,#0,.L332
.L4967:

; ..\EAS\BSW\Dem\Dem.c	  3982                      {
; ..\EAS\BSW\Dem\Dem.c	  3983                          SrcDataPtr += DEM_CFG_DATA_CS_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	ld.w	d15,[a10]
.L2456:
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]4
	ld.bu	d15,[a15]
.L2457:
	addsc.a	a14,a14,d15,#0
.L332:
	add	d14,#1
.L2445:
	extr.u	d14,d14,#0,#8
.L329:
	mul	d15,d13,#12
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L4968:
	jlt.u	d14,d15,.L330
.L4969:
	add	d12,#1
.L2443:
	extr.u	d12,d12,#0,#8
.L319:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d11,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]12
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_ExtDataClassTable)
	lea	a15,[a15]@los(Dem_ExtDataClassTable)
	addsc.a	a15,a15,d15,#3
	ld.bu	d15,[a15]
.L4970:
	jlt.u	d12,d15,.L320

; ..\EAS\BSW\Dem\Dem.c	  3984                      }
; ..\EAS\BSW\Dem\Dem.c	  3985                  }
; ..\EAS\BSW\Dem\Dem.c	  3986              }
; ..\EAS\BSW\Dem\Dem.c	  3987          }
; ..\EAS\BSW\Dem\Dem.c	  3988      }
.L328:
.L327:
.L318:

; ..\EAS\BSW\Dem\Dem.c	  3989  #endif
; ..\EAS\BSW\Dem\Dem.c	  3990  #endif
; ..\EAS\BSW\Dem\Dem.c	  3991      if(DataSize == 0)
	jne	d10,#0,.L333
.L4971:

; ..\EAS\BSW\Dem\Dem.c	  3992      {
; ..\EAS\BSW\Dem\Dem.c	  3993          Result = E_NOT_OK;
	mov	d9,#1
.L333:

; ..\EAS\BSW\Dem\Dem.c	  3994      }
; ..\EAS\BSW\Dem\Dem.c	  3995      return Result;
	mov	d2,d9
.L2458:

; ..\EAS\BSW\Dem\Dem.c	  3996  }
	ret
.L2047:
	
__DemInternal_GetEventExtendedDataRecordEx_function_end:
	.size	DemInternal_GetEventExtendedDataRecordEx,__DemInternal_GetEventExtendedDataRecordEx_function_end-DemInternal_GetEventExtendedDataRecordEx
.L1512:
	; End of function
	
	.sdecl	'.text.Dem.Dem_GetVersionInfo',code,cluster('Dem_GetVersionInfo')
	.sect	'.text.Dem.Dem_GetVersionInfo'
	.align	2
	
	.global	Dem_GetVersionInfo

; ..\EAS\BSW\Dem\Dem.c	  3997  
; ..\EAS\BSW\Dem\Dem.c	  3998  #if(DEM_NUM_OF_INDICATOR > 0)
; ..\EAS\BSW\Dem\Dem.c	  3999  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  4000  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4001  * Function Name: DemInternal_IndicatorOnCriteriaFulfilled
; ..\EAS\BSW\Dem\Dem.c	  4002  *
; ..\EAS\BSW\Dem\Dem.c	  4003  * Description:
; ..\EAS\BSW\Dem\Dem.c	  4004  *
; ..\EAS\BSW\Dem\Dem.c	  4005  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  4006  *
; ..\EAS\BSW\Dem\Dem.c	  4007  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  4008  *
; ..\EAS\BSW\Dem\Dem.c	  4009  * Return:
; ..\EAS\BSW\Dem\Dem.c	  4010  *
; ..\EAS\BSW\Dem\Dem.c	  4011  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  4012  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4013  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  4014  STATIC FUNC(void, DEM_CODE) DemInternal_IndicatorOnCriteriaFulfilled
; ..\EAS\BSW\Dem\Dem.c	  4015  (
; ..\EAS\BSW\Dem\Dem.c	  4016      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  4017      Dem_UdsStatusByteType EventOldStatus, 
; ..\EAS\BSW\Dem\Dem.c	  4018      P2VAR(Dem_UdsStatusByteType, AUTOMATIC, DEM_APPL_DATA) EventNewStatus
; ..\EAS\BSW\Dem\Dem.c	  4019  )
; ..\EAS\BSW\Dem\Dem.c	  4020  {
; ..\EAS\BSW\Dem\Dem.c	  4021      uint8 Index;
; ..\EAS\BSW\Dem\Dem.c	  4022      uint8 IndicatorId;
; ..\EAS\BSW\Dem\Dem.c	  4023      uint16 StatusPos;
; ..\EAS\BSW\Dem\Dem.c	  4024  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  4025      uint8 EventCmaStatus;
; ..\EAS\BSW\Dem\Dem.c	  4026  #endif
; ..\EAS\BSW\Dem\Dem.c	  4027      boolean SetWIRBit = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  4028      Dem_UdsStatusByteType NewStatus = *EventNewStatus;
; ..\EAS\BSW\Dem\Dem.c	  4029  
; ..\EAS\BSW\Dem\Dem.c	  4030      if((DEM_CFG_EVENT_INDICATOR_NUM(EventId) > (uint8)0) \ 
; ..\EAS\BSW\Dem\Dem.c	  4031          && (DEM_CFG_EVENT_INDICATOR(EventId) != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	  4032          && (DEM_TEST_UDS_STATUS_TFTOC(NewStatus)) \ 
; ..\EAS\BSW\Dem\Dem.c	  4033          && (!DEM_TEST_UDS_STATUS_TFTOC(EventOldStatus)))
; ..\EAS\BSW\Dem\Dem.c	  4034      {
; ..\EAS\BSW\Dem\Dem.c	  4035          /*SWS_Dem_00506*/
; ..\EAS\BSW\Dem\Dem.c	  4036          DEM_EVENT_IHCC(EventId) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  4037  
; ..\EAS\BSW\Dem\Dem.c	  4038          if(DEM_EVENT_IFCC(EventId) < DEM_DATA_U8_FF)
; ..\EAS\BSW\Dem\Dem.c	  4039          {
; ..\EAS\BSW\Dem\Dem.c	  4040              DEM_EVENT_IFCC(EventId)++;
; ..\EAS\BSW\Dem\Dem.c	  4041          }
; ..\EAS\BSW\Dem\Dem.c	  4042  
; ..\EAS\BSW\Dem\Dem.c	  4043          if(DEM_TEST_UDS_STATUS_CDTC(NewStatus))
; ..\EAS\BSW\Dem\Dem.c	  4044          {
; ..\EAS\BSW\Dem\Dem.c	  4045              DEM_EVENT_IFCC(EventId) = DEM_DATA_U8_FF;
; ..\EAS\BSW\Dem\Dem.c	  4046          }
; ..\EAS\BSW\Dem\Dem.c	  4047  
; ..\EAS\BSW\Dem\Dem.c	  4048          for(Index = 0; Index < DEM_CFG_EVENT_INDICATOR_NUM(EventId); Index++)
; ..\EAS\BSW\Dem\Dem.c	  4049          {
; ..\EAS\BSW\Dem\Dem.c	  4050              IndicatorId = DEM_CFG_EVENT_INDICATOR_ID(EventId,Index);
; ..\EAS\BSW\Dem\Dem.c	  4051              StatusPos = DEM_CFG_EVENT_INDICATOR_OFFSET(EventId,Index) \ 
; ..\EAS\BSW\Dem\Dem.c	  4052                              + DEM_CFG_INDICATOR_STATUS_START(IndicatorId);
; ..\EAS\BSW\Dem\Dem.c	  4053  
; ..\EAS\BSW\Dem\Dem.c	  4054              if((DEM_INDICATOR_STATUS(StatusPos) == DEM_INDICATOR_OFF) \ 
; ..\EAS\BSW\Dem\Dem.c	  4055                  && (DEM_EVENT_IFCC(EventId) >= DEM_CFG_EVENT_INDICATOR_F_THRESHOLD(EventId,Index)))
; ..\EAS\BSW\Dem\Dem.c	  4056              {
; ..\EAS\BSW\Dem\Dem.c	  4057                  /*SWS_Dem_00501*/
; ..\EAS\BSW\Dem\Dem.c	  4058                  DEM_INDICATOR_STATUS(StatusPos) = DEM_CFG_EVENT_INDICATOR_BEHAVIOUR(EventId,Index);
; ..\EAS\BSW\Dem\Dem.c	  4059                  SetWIRBit = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  4060  
; ..\EAS\BSW\Dem\Dem.c	  4061                  if(DEM_CFG_INDICATOR_STATUS_FNC(IndicatorId) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  4062                  {
; ..\EAS\BSW\Dem\Dem.c	  4063                      (void)DEM_CFG_INDICATOR_STATUS_FNC(IndicatorId)(EventId, (DEM_INDICATOR_STATUS(StatusPos)));
; ..\EAS\BSW\Dem\Dem.c	  4064                  }
; ..\EAS\BSW\Dem\Dem.c	  4065              }
; ..\EAS\BSW\Dem\Dem.c	  4066          }
; ..\EAS\BSW\Dem\Dem.c	  4067  
; ..\EAS\BSW\Dem\Dem.c	  4068          if(SetWIRBit == TRUE)
; ..\EAS\BSW\Dem\Dem.c	  4069          {
; ..\EAS\BSW\Dem\Dem.c	  4070  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  4071              EventCmaStatus = DEM_EVENT_CMA_STATUS(EventId);
; ..\EAS\BSW\Dem\Dem.c	  4072              EventCmaStatus = DEM_SET_CMA_STATUS_WIRSLC(EventCmaStatus);
; ..\EAS\BSW\Dem\Dem.c	  4073              DEM_EVENT_CMA_STATUS(EventId) = EventCmaStatus;
; ..\EAS\BSW\Dem\Dem.c	  4074  #endif
; ..\EAS\BSW\Dem\Dem.c	  4075              /*SWS_Dem_00566*/
; ..\EAS\BSW\Dem\Dem.c	  4076              NewStatus = DEM_SET_UDS_STATUS_WIR(NewStatus);
; ..\EAS\BSW\Dem\Dem.c	  4077              *EventNewStatus = NewStatus;
; ..\EAS\BSW\Dem\Dem.c	  4078          }
; ..\EAS\BSW\Dem\Dem.c	  4079      }
; ..\EAS\BSW\Dem\Dem.c	  4080  }
; ..\EAS\BSW\Dem\Dem.c	  4081  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  4082  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4083  * Function Name: DemInternal_IndicatorOffCriteriaFulfilled
; ..\EAS\BSW\Dem\Dem.c	  4084  *
; ..\EAS\BSW\Dem\Dem.c	  4085  * Description:
; ..\EAS\BSW\Dem\Dem.c	  4086  *
; ..\EAS\BSW\Dem\Dem.c	  4087  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  4088  *
; ..\EAS\BSW\Dem\Dem.c	  4089  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  4090  *
; ..\EAS\BSW\Dem\Dem.c	  4091  * Return:
; ..\EAS\BSW\Dem\Dem.c	  4092  *
; ..\EAS\BSW\Dem\Dem.c	  4093  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  4094  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4095  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  4096  STATIC FUNC(void, DEM_CODE) DemInternal_IndicatorOffCriteriaFulfilled
; ..\EAS\BSW\Dem\Dem.c	  4097  (
; ..\EAS\BSW\Dem\Dem.c	  4098      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  4099      Dem_IndicatorOffType OffReason,
; ..\EAS\BSW\Dem\Dem.c	  4100      Dem_UdsStatusByteType EventOldStatus,
; ..\EAS\BSW\Dem\Dem.c	  4101      P2VAR(Dem_UdsStatusByteType, AUTOMATIC, DEM_APPL_DATA) EventNewStatus
; ..\EAS\BSW\Dem\Dem.c	  4102  )
; ..\EAS\BSW\Dem\Dem.c	  4103  {
; ..\EAS\BSW\Dem\Dem.c	  4104      uint8 Index;
; ..\EAS\BSW\Dem\Dem.c	  4105      uint8 IndicatorId;
; ..\EAS\BSW\Dem\Dem.c	  4106      uint16 StatusPos;
; ..\EAS\BSW\Dem\Dem.c	  4107      boolean ClearWIRBit = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  4108      Dem_UdsStatusByteType NewStatus = *EventNewStatus;
; ..\EAS\BSW\Dem\Dem.c	  4109  
; ..\EAS\BSW\Dem\Dem.c	  4110      if((DEM_CFG_EVENT_INDICATOR_NUM(EventId) > (uint8)0) \ 
; ..\EAS\BSW\Dem\Dem.c	  4111          && (DEM_CFG_EVENT_INDICATOR(EventId) != NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	  4112      {
; ..\EAS\BSW\Dem\Dem.c	  4113          if((OffReason == DEM_CYCLE_END) \ 
; ..\EAS\BSW\Dem\Dem.c	  4114              && (!DEM_TEST_UDS_STATUS_TNCTOC(EventOldStatus)) \ 
; ..\EAS\BSW\Dem\Dem.c	  4115              && (!DEM_TEST_UDS_STATUS_TFTOC(EventOldStatus)))
; ..\EAS\BSW\Dem\Dem.c	  4116          {
; ..\EAS\BSW\Dem\Dem.c	  4117              /*SWS_Dem_00506*/
; ..\EAS\BSW\Dem\Dem.c	  4118              DEM_EVENT_IFCC(EventId) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  4119  
; ..\EAS\BSW\Dem\Dem.c	  4120              if((DEM_TEST_UDS_STATUS_WIR(EventOldStatus)) \ 
; ..\EAS\BSW\Dem\Dem.c	  4121                  && (DEM_EVENT_IHCC(EventId) < DEM_DATA_U8_FF))
; ..\EAS\BSW\Dem\Dem.c	  4122              {
; ..\EAS\BSW\Dem\Dem.c	  4123                  DEM_EVENT_IHCC(EventId)++;
; ..\EAS\BSW\Dem\Dem.c	  4124              }
; ..\EAS\BSW\Dem\Dem.c	  4125          }
; ..\EAS\BSW\Dem\Dem.c	  4126  
; ..\EAS\BSW\Dem\Dem.c	  4127          for(Index = 0; Index < DEM_CFG_EVENT_INDICATOR_NUM(EventId); Index++)
; ..\EAS\BSW\Dem\Dem.c	  4128          {
; ..\EAS\BSW\Dem\Dem.c	  4129              IndicatorId = DEM_CFG_EVENT_INDICATOR_ID(EventId,Index);
; ..\EAS\BSW\Dem\Dem.c	  4130              StatusPos = DEM_CFG_EVENT_INDICATOR_OFFSET(EventId,Index) \ 
; ..\EAS\BSW\Dem\Dem.c	  4131                              + DEM_CFG_INDICATOR_STATUS_START(IndicatorId);
; ..\EAS\BSW\Dem\Dem.c	  4132  
; ..\EAS\BSW\Dem\Dem.c	  4133              if((DEM_INDICATOR_STATUS(StatusPos) != DEM_INDICATOR_OFF) \ 
; ..\EAS\BSW\Dem\Dem.c	  4134                  && (DEM_EVENT_IHCC(EventId) >= DEM_CFG_EVENT_INDICATOR_H_THRESHOLD(EventId,Index)))
; ..\EAS\BSW\Dem\Dem.c	  4135              {
; ..\EAS\BSW\Dem\Dem.c	  4136                  /*SWS_Dem_00503*/
; ..\EAS\BSW\Dem\Dem.c	  4137                  DEM_INDICATOR_STATUS(StatusPos) = DEM_INDICATOR_OFF;
; ..\EAS\BSW\Dem\Dem.c	  4138  
; ..\EAS\BSW\Dem\Dem.c	  4139                  if(DEM_CFG_INDICATOR_STATUS_FNC(IndicatorId) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  4140                  {
; ..\EAS\BSW\Dem\Dem.c	  4141                      (void)DEM_CFG_INDICATOR_STATUS_FNC(IndicatorId)(EventId, (DEM_INDICATOR_STATUS(StatusPos)));
; ..\EAS\BSW\Dem\Dem.c	  4142                  }
; ..\EAS\BSW\Dem\Dem.c	  4143              }
; ..\EAS\BSW\Dem\Dem.c	  4144  
; ..\EAS\BSW\Dem\Dem.c	  4145              if(DEM_INDICATOR_STATUS(StatusPos) != DEM_INDICATOR_OFF)
; ..\EAS\BSW\Dem\Dem.c	  4146              {
; ..\EAS\BSW\Dem\Dem.c	  4147                  ClearWIRBit = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  4148              }
; ..\EAS\BSW\Dem\Dem.c	  4149          }
; ..\EAS\BSW\Dem\Dem.c	  4150  
; ..\EAS\BSW\Dem\Dem.c	  4151          if(ClearWIRBit == TRUE)
; ..\EAS\BSW\Dem\Dem.c	  4152          {
; ..\EAS\BSW\Dem\Dem.c	  4153              /*SWS_Dem_00533*//*SWS_Dem_00835*/
; ..\EAS\BSW\Dem\Dem.c	  4154              NewStatus = DEM_CLEAR_UDS_STATUS_WIR(NewStatus);
; ..\EAS\BSW\Dem\Dem.c	  4155              *EventNewStatus = NewStatus;
; ..\EAS\BSW\Dem\Dem.c	  4156          }
; ..\EAS\BSW\Dem\Dem.c	  4157      }
; ..\EAS\BSW\Dem\Dem.c	  4158  }
; ..\EAS\BSW\Dem\Dem.c	  4159  
; ..\EAS\BSW\Dem\Dem.c	  4160  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  4161  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4162  * Function Name: DemInternal_GetIndicatorStatus
; ..\EAS\BSW\Dem\Dem.c	  4163  *
; ..\EAS\BSW\Dem\Dem.c	  4164  * Description: Get the indicator status internally.
; ..\EAS\BSW\Dem\Dem.c	  4165  *
; ..\EAS\BSW\Dem\Dem.c	  4166  * Inputs: IndicatorId
; ..\EAS\BSW\Dem\Dem.c	  4167  *
; ..\EAS\BSW\Dem\Dem.c	  4168  * Outputs: IndicatorStatus
; ..\EAS\BSW\Dem\Dem.c	  4169  *
; ..\EAS\BSW\Dem\Dem.c	  4170  * Return: None
; ..\EAS\BSW\Dem\Dem.c	  4171  *
; ..\EAS\BSW\Dem\Dem.c	  4172  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  4173  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4174  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  4175  STATIC FUNC(void, DEM_CODE) DemInternal_GetIndicatorStatus
; ..\EAS\BSW\Dem\Dem.c	  4176  (
; ..\EAS\BSW\Dem\Dem.c	  4177      uint8 IndicatorId,
; ..\EAS\BSW\Dem\Dem.c	  4178      P2VAR(Dem_IndicatorStatusType, AUTOMATIC, DEM_APPL_DATA) IndicatorStatus
; ..\EAS\BSW\Dem\Dem.c	  4179  )
; ..\EAS\BSW\Dem\Dem.c	  4180  {
; ..\EAS\BSW\Dem\Dem.c	  4181      uint16 Index;
; ..\EAS\BSW\Dem\Dem.c	  4182      uint16 StartIndex;
; ..\EAS\BSW\Dem\Dem.c	  4183      uint16 EndIndex;
; ..\EAS\BSW\Dem\Dem.c	  4184  
; ..\EAS\BSW\Dem\Dem.c	  4185      *IndicatorStatus = DEM_INDICATOR_OFF;
; ..\EAS\BSW\Dem\Dem.c	  4186  
; ..\EAS\BSW\Dem\Dem.c	  4187      StartIndex = DEM_CFG_INDICATOR_STATUS_START(IndicatorId);
; ..\EAS\BSW\Dem\Dem.c	  4188      EndIndex = DEM_CFG_INDICATOR_STATUS_START(IndicatorId) + DEM_CFG_INDICATOR_STATUS_NUM(IndicatorId);
; ..\EAS\BSW\Dem\Dem.c	  4189  
; ..\EAS\BSW\Dem\Dem.c	  4190      for(Index = StartIndex; Index < EndIndex; Index++)
; ..\EAS\BSW\Dem\Dem.c	  4191      {
; ..\EAS\BSW\Dem\Dem.c	  4192          if(*IndicatorStatus == DEM_INDICATOR_OFF)
; ..\EAS\BSW\Dem\Dem.c	  4193          {
; ..\EAS\BSW\Dem\Dem.c	  4194              *IndicatorStatus = DEM_INDICATOR_STATUS(Index);
; ..\EAS\BSW\Dem\Dem.c	  4195          }
; ..\EAS\BSW\Dem\Dem.c	  4196          else if((DEM_INDICATOR_STATUS(Index) != DEM_INDICATOR_OFF) \ 
; ..\EAS\BSW\Dem\Dem.c	  4197              && (*IndicatorStatus != DEM_INDICATOR_STATUS(Index)))
; ..\EAS\BSW\Dem\Dem.c	  4198          {
; ..\EAS\BSW\Dem\Dem.c	  4199              *IndicatorStatus = DEM_INDICATOR_BLINK_CONT;
; ..\EAS\BSW\Dem\Dem.c	  4200              break;
; ..\EAS\BSW\Dem\Dem.c	  4201          }
; ..\EAS\BSW\Dem\Dem.c	  4202          else
; ..\EAS\BSW\Dem\Dem.c	  4203          {
; ..\EAS\BSW\Dem\Dem.c	  4204              /*do nothing*/
; ..\EAS\BSW\Dem\Dem.c	  4205          }
; ..\EAS\BSW\Dem\Dem.c	  4206      }
; ..\EAS\BSW\Dem\Dem.c	  4207  }
; ..\EAS\BSW\Dem\Dem.c	  4208  #endif/*#if(DEM_NUM_OF_INDICATOR > 0)*/
; ..\EAS\BSW\Dem\Dem.c	  4209  
; ..\EAS\BSW\Dem\Dem.c	  4210  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  4211  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  4212  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4213  * Function Name: DemInternal_InitOBDData
; ..\EAS\BSW\Dem\Dem.c	  4214  *
; ..\EAS\BSW\Dem\Dem.c	  4215  * Description: Init data value of OBD function
; ..\EAS\BSW\Dem\Dem.c	  4216  *
; ..\EAS\BSW\Dem\Dem.c	  4217  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  4218  *
; ..\EAS\BSW\Dem\Dem.c	  4219  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  4220  *
; ..\EAS\BSW\Dem\Dem.c	  4221  * Return:
; ..\EAS\BSW\Dem\Dem.c	  4222  *
; ..\EAS\BSW\Dem\Dem.c	  4223  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  4224  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4225  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  4226  STATIC FUNC(void, DEM_CODE) DemInternal_InitOBDData
; ..\EAS\BSW\Dem\Dem.c	  4227  (
; ..\EAS\BSW\Dem\Dem.c	  4228      void
; ..\EAS\BSW\Dem\Dem.c	  4229  )
; ..\EAS\BSW\Dem\Dem.c	  4230  {
; ..\EAS\BSW\Dem\Dem.c	  4231      uint16 i;
; ..\EAS\BSW\Dem\Dem.c	  4232  
; ..\EAS\BSW\Dem\Dem.c	  4233      /*Used for PID01/41*/
; ..\EAS\BSW\Dem\Dem.c	  4234      DEM_OBD_READINESSGROUP_STATUS[0] = (uint8)0x03;
; ..\EAS\BSW\Dem\Dem.c	  4235      DEM_OBD_READINESSGROUP_STATUS[0] = (uint8)0xFF;
; ..\EAS\BSW\Dem\Dem.c	  4236      /*Used for PID31.Unit:m, Range:0-65535000*/
; ..\EAS\BSW\Dem\Dem.c	  4237      DEM_OBD_DISTANCE_SINCEDTCCLEARED = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  4238      /*Data for Service 02*/
; ..\EAS\BSW\Dem\Dem.c	  4239      DEM_OBD_FF_EVENT = DEM_EVENT_ID_INVALID;
; ..\EAS\BSW\Dem\Dem.c	  4240      for(i = 0; i < DEM_CFG_OBD_FF_LENGTH; i++)
; ..\EAS\BSW\Dem\Dem.c	  4241      {
; ..\EAS\BSW\Dem\Dem.c	  4242          DEM_OBD_FF_DATA_BUF[i] = DEM_DATA_INVALID_U8;
; ..\EAS\BSW\Dem\Dem.c	  4243      }
; ..\EAS\BSW\Dem\Dem.c	  4244      /*Data for Service 09*/
; ..\EAS\BSW\Dem\Dem.c	  4245  #if(DEM_NUM_OF_RATIO > 0)
; ..\EAS\BSW\Dem\Dem.c	  4246      DEM_OBD_RATIO_IGN_CNT = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  4247      DEM_OBD_RATIO_GENDEN_CNT = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  4248      DEM_OBD_RATIO_GENDEN_STATE = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  4249      DEM_OBD_RATIO_DENOMCOND_STATUS(DEM_IUMPR_DEN_GENERAL) = DEM_IUMPR_DEN_STATUS_NOT_REACHED;
; ..\EAS\BSW\Dem\Dem.c	  4250      DEM_OBD_RATIO_DENOMCOND_STATUS(DEM_IUMPR_DEN_COLDSTART) = DEM_IUMPR_DEN_STATUS_NOT_REACHED;
; ..\EAS\BSW\Dem\Dem.c	  4251      DEM_OBD_RATIO_DENOMCOND_STATUS(DEM_IUMPR_DEN_EVAP) = DEM_IUMPR_DEN_STATUS_NOT_REACHED;
; ..\EAS\BSW\Dem\Dem.c	  4252      DEM_OBD_RATIO_DENOMCOND_STATUS(DEM_IUMPR_DEN_500MILL) = DEM_IUMPR_DEN_STATUS_NOT_REACHED;
; ..\EAS\BSW\Dem\Dem.c	  4253      for(i = 0; i < DEM_NUM_OF_RATIO; i++)
; ..\EAS\BSW\Dem\Dem.c	  4254      {
; ..\EAS\BSW\Dem\Dem.c	  4255          DEM_OBD_RATIO_NUMERATOR(i) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  4256          DEM_OBD_RATIO_DENOMINATOR(i) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  4257          DEM_OBD_RATIO_STATE(i) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  4258      }
; ..\EAS\BSW\Dem\Dem.c	  4259  #endif
; ..\EAS\BSW\Dem\Dem.c	  4260  
; ..\EAS\BSW\Dem\Dem.c	  4261  #if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)
; ..\EAS\BSW\Dem\Dem.c	  4262      DEM_OBD_PFC_CYCLE_STATUS = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  4263  #endif
; ..\EAS\BSW\Dem\Dem.c	  4264  }
; ..\EAS\BSW\Dem\Dem.c	  4265  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  4266  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4267  * Function Name: DemInternal_StoreOBDFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	  4268  *
; ..\EAS\BSW\Dem\Dem.c	  4269  * Description: EventId, EventOldStatus, EventNewStatus
; ..\EAS\BSW\Dem\Dem.c	  4270  *
; ..\EAS\BSW\Dem\Dem.c	  4271  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  4272  *
; ..\EAS\BSW\Dem\Dem.c	  4273  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  4274  *
; ..\EAS\BSW\Dem\Dem.c	  4275  * Return:
; ..\EAS\BSW\Dem\Dem.c	  4276  *
; ..\EAS\BSW\Dem\Dem.c	  4277  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  4278  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4279  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  4280  STATIC FUNC(void, DEM_CODE) DemInternal_StoreOBDFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	  4281  (
; ..\EAS\BSW\Dem\Dem.c	  4282      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  4283      Dem_UdsStatusByteType EventOldStatus,
; ..\EAS\BSW\Dem\Dem.c	  4284      Dem_UdsStatusByteType EventNewStatus
; ..\EAS\BSW\Dem\Dem.c	  4285  )
; ..\EAS\BSW\Dem\Dem.c	  4286  {
; ..\EAS\BSW\Dem\Dem.c	  4287      uint8 PidIndex;
; ..\EAS\BSW\Dem\Dem.c	  4288      uint8 DataIndex;/*Data index in PID*/
; ..\EAS\BSW\Dem\Dem.c	  4289      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	  4290      uint16 DataEleIndex;/*Data index in DemDataElementClass*/
; ..\EAS\BSW\Dem\Dem.c	  4291      Dem_PriorityType StoredEventPriority;
; ..\EAS\BSW\Dem\Dem.c	  4292      Dem_PriorityType StoringEventPriority;
; ..\EAS\BSW\Dem\Dem.c	  4293      uint8 *DataPtr;
; ..\EAS\BSW\Dem\Dem.c	  4294      boolean UpdateFlag = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  4295      Std_ReturnType Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  4296  
; ..\EAS\BSW\Dem\Dem.c	  4297      if(DEM_CFG_DTC_OBDDTCREF(DEM_CFG_EVENT_DTCREF(EventId)) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  4298      {
; ..\EAS\BSW\Dem\Dem.c	  4299          if(DEM_OBD_FF_EVENT == DEM_EVENT_ID_INVALID)
; ..\EAS\BSW\Dem\Dem.c	  4300          {
; ..\EAS\BSW\Dem\Dem.c	  4301              /*The OBD freeze frame buffer is empty.*/
; ..\EAS\BSW\Dem\Dem.c	  4302              UpdateFlag = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  4303          }
; ..\EAS\BSW\Dem\Dem.c	  4304          else if(DEM_OBD_FF_EVENT == EventId)
; ..\EAS\BSW\Dem\Dem.c	  4305          {
; ..\EAS\BSW\Dem\Dem.c	  4306              if((DEM_TEST_UDS_STATUS_CDTC(EventNewStatus)) && (!DEM_TEST_UDS_STATUS_CDTC(EventOldStatus)))
; ..\EAS\BSW\Dem\Dem.c	  4307              {
; ..\EAS\BSW\Dem\Dem.c	  4308                  /*The OBD freeze frame buffer needs update.*/
; ..\EAS\BSW\Dem\Dem.c	  4309                  UpdateFlag = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  4310              }
; ..\EAS\BSW\Dem\Dem.c	  4311          }
; ..\EAS\BSW\Dem\Dem.c	  4312          else
; ..\EAS\BSW\Dem\Dem.c	  4313          {
; ..\EAS\BSW\Dem\Dem.c	  4314              /*The OBD freeze frame buffer is full.*/
; ..\EAS\BSW\Dem\Dem.c	  4315              StoredEventPriority = DEM_CFG_DTC_PRIORITY(DEM_CFG_EVENT_DTCREF(DEM_OBD_FF_EVENT));
; ..\EAS\BSW\Dem\Dem.c	  4316              StoringEventPriority = DEM_CFG_DTC_PRIORITY(DEM_CFG_EVENT_DTCREF(EventId));
; ..\EAS\BSW\Dem\Dem.c	  4317  
; ..\EAS\BSW\Dem\Dem.c	  4318              if(StoringEventPriority < StoredEventPriority)
; ..\EAS\BSW\Dem\Dem.c	  4319              {
; ..\EAS\BSW\Dem\Dem.c	  4320                  /*The priority of new event is higher than stored event.*/
; ..\EAS\BSW\Dem\Dem.c	  4321                  UpdateFlag = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  4322              }
; ..\EAS\BSW\Dem\Dem.c	  4323          }
; ..\EAS\BSW\Dem\Dem.c	  4324      }
; ..\EAS\BSW\Dem\Dem.c	  4325  
; ..\EAS\BSW\Dem\Dem.c	  4326      if(UpdateFlag == TRUE)
; ..\EAS\BSW\Dem\Dem.c	  4327      {
; ..\EAS\BSW\Dem\Dem.c	  4328          /*Update the OBD freeze frame buffer.*/
; ..\EAS\BSW\Dem\Dem.c	  4329          DEM_OBD_FF_EVENT = EventId;
; ..\EAS\BSW\Dem\Dem.c	  4330          DataPtr = DEM_OBD_FF_DATA_BUF;
; ..\EAS\BSW\Dem\Dem.c	  4331  #if(DEM_CFG_OBD_NUM_OF_PID > 0)
; ..\EAS\BSW\Dem\Dem.c	  4332          for(PidIndex = 0; PidIndex < DEM_CFG_OBD_NUM_OF_PID; PidIndex++)
; ..\EAS\BSW\Dem\Dem.c	  4333          {
; ..\EAS\BSW\Dem\Dem.c	  4334              *DataPtr = DEM_CFG_PID_ID(PidIndex);
; ..\EAS\BSW\Dem\Dem.c	  4335              DataPtr++;
; ..\EAS\BSW\Dem\Dem.c	  4336  
; ..\EAS\BSW\Dem\Dem.c	  4337              for(DataIndex = 0; DataIndex < DEM_CFG_PID_NUM_OF_DATA(PidIndex); DataIndex++)
; ..\EAS\BSW\Dem\Dem.c	  4338              {
; ..\EAS\BSW\Dem\Dem.c	  4339                  DataEleIndex = DEM_CFG_PID_DATA_CLASS(PidIndex)[DataIndex];
; ..\EAS\BSW\Dem\Dem.c	  4340  
; ..\EAS\BSW\Dem\Dem.c	  4341                  Result = DEM_CFG_DATA_CS_DATA_READ_FNC(DataEleIndex)(DataPtr);
; ..\EAS\BSW\Dem\Dem.c	  4342  
; ..\EAS\BSW\Dem\Dem.c	  4343                  if(Result != E_OK)
; ..\EAS\BSW\Dem\Dem.c	  4344                  {
; ..\EAS\BSW\Dem\Dem.c	  4345                      for(i = 0; i < DEM_CFG_DATA_CS_DATA_SIZE(DataEleIndex); i++)
; ..\EAS\BSW\Dem\Dem.c	  4346                      {
; ..\EAS\BSW\Dem\Dem.c	  4347                          DataPtr[i] = DEM_DATA_INVALID_U8;
; ..\EAS\BSW\Dem\Dem.c	  4348                      }
; ..\EAS\BSW\Dem\Dem.c	  4349                  }
; ..\EAS\BSW\Dem\Dem.c	  4350  
; ..\EAS\BSW\Dem\Dem.c	  4351                  DataPtr += DEM_CFG_DATA_CS_DATA_SIZE(DataEleIndex);
; ..\EAS\BSW\Dem\Dem.c	  4352  
; ..\EAS\BSW\Dem\Dem.c	  4353              }/*for(DataIndex = 0; DataIndex < DEM_CFG_PID_NUM_OF_DATA(PidIndex); DataIndex++)*/
; ..\EAS\BSW\Dem\Dem.c	  4354          }/*for(PidIndex = 0; PidIndex < DEM_CFG_OBD_NUM_OF_PID; PidIndex++)*/
; ..\EAS\BSW\Dem\Dem.c	  4355  #endif
; ..\EAS\BSW\Dem\Dem.c	  4356      }/*if(UpdateFlag == TRUE)*/
; ..\EAS\BSW\Dem\Dem.c	  4357  }
; ..\EAS\BSW\Dem\Dem.c	  4358  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  4359  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4360  * Function Name: DemInternal_ClearOBDFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	  4361  *
; ..\EAS\BSW\Dem\Dem.c	  4362  * Description: Clear the OBD Freeze Frame 0x00 when Event aged.
; ..\EAS\BSW\Dem\Dem.c	  4363  *
; ..\EAS\BSW\Dem\Dem.c	  4364  * Inputs: EventId
; ..\EAS\BSW\Dem\Dem.c	  4365  *
; ..\EAS\BSW\Dem\Dem.c	  4366  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  4367  *
; ..\EAS\BSW\Dem\Dem.c	  4368  * Return:
; ..\EAS\BSW\Dem\Dem.c	  4369  *
; ..\EAS\BSW\Dem\Dem.c	  4370  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  4371  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4372  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  4373  STATIC FUNC(void, DEM_CODE) DemInternal_ClearOBDFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	  4374  (
; ..\EAS\BSW\Dem\Dem.c	  4375      Dem_EventIdType EventId
; ..\EAS\BSW\Dem\Dem.c	  4376  )
; ..\EAS\BSW\Dem\Dem.c	  4377  {
; ..\EAS\BSW\Dem\Dem.c	  4378      uint16 i;
; ..\EAS\BSW\Dem\Dem.c	  4379  
; ..\EAS\BSW\Dem\Dem.c	  4380      if(DEM_OBD_FF_EVENT == EventId)
; ..\EAS\BSW\Dem\Dem.c	  4381      {
; ..\EAS\BSW\Dem\Dem.c	  4382          DEM_OBD_FF_EVENT = DEM_EVENT_ID_INVALID;
; ..\EAS\BSW\Dem\Dem.c	  4383  
; ..\EAS\BSW\Dem\Dem.c	  4384          for(i = 0; i < DEM_CFG_OBD_FF_LENGTH; i++)
; ..\EAS\BSW\Dem\Dem.c	  4385          {
; ..\EAS\BSW\Dem\Dem.c	  4386              DEM_OBD_FF_DATA_BUF[i] = DEM_DATA_INVALID_U8;
; ..\EAS\BSW\Dem\Dem.c	  4387          }
; ..\EAS\BSW\Dem\Dem.c	  4388      }
; ..\EAS\BSW\Dem\Dem.c	  4389  }
; ..\EAS\BSW\Dem\Dem.c	  4390  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  4391  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4392  * Function Name: DemInternal_MainFnc_OBD
; ..\EAS\BSW\Dem\Dem.c	  4393  *
; ..\EAS\BSW\Dem\Dem.c	  4394  * Description: Main function to process task relevant OBD.
; ..\EAS\BSW\Dem\Dem.c	  4395  *
; ..\EAS\BSW\Dem\Dem.c	  4396  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  4397  *
; ..\EAS\BSW\Dem\Dem.c	  4398  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  4399  *
; ..\EAS\BSW\Dem\Dem.c	  4400  * Return:
; ..\EAS\BSW\Dem\Dem.c	  4401  *
; ..\EAS\BSW\Dem\Dem.c	  4402  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  4403  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4404  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  4405  STATIC FUNC(void, DEM_CODE) DemInternal_MainFnc_OBD
; ..\EAS\BSW\Dem\Dem.c	  4406  (
; ..\EAS\BSW\Dem\Dem.c	  4407      void
; ..\EAS\BSW\Dem\Dem.c	  4408  )
; ..\EAS\BSW\Dem\Dem.c	  4409  {
; ..\EAS\BSW\Dem\Dem.c	  4410      /*SWS_Dem_00703*/
; ..\EAS\BSW\Dem\Dem.c	  4411  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU) && (DEM_CFG_OBD_CENTRALIZED_PID31_HANDLING == STD_ON))
; ..\EAS\BSW\Dem\Dem.c	  4412      Dem_ObdTimesOneSecond++;
; ..\EAS\BSW\Dem\Dem.c	  4413      /*1 second = 1000 millisecond*/
; ..\EAS\BSW\Dem\Dem.c	  4414      if(Dem_ObdTimesOneSecond >= (uint16)(1000/DEM_TASK_TIME))
; ..\EAS\BSW\Dem\Dem.c	  4415      {
; ..\EAS\BSW\Dem\Dem.c	  4416          Dem_ObdTimesOneSecond = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  4417          DemInternal_CalPID31Data();
; ..\EAS\BSW\Dem\Dem.c	  4418      }
; ..\EAS\BSW\Dem\Dem.c	  4419  #endif
; ..\EAS\BSW\Dem\Dem.c	  4420  }
; ..\EAS\BSW\Dem\Dem.c	  4421  
; ..\EAS\BSW\Dem\Dem.c	  4422  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU) && (DEM_CFG_OBD_CENTRALIZED_PID31_HANDLING == STD_ON))
; ..\EAS\BSW\Dem\Dem.c	  4423  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  4424  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4425  * Function Name: DemInternal_CalPID31Data
; ..\EAS\BSW\Dem\Dem.c	  4426  *
; ..\EAS\BSW\Dem\Dem.c	  4427  * Description: Calculate data value of PID31.
; ..\EAS\BSW\Dem\Dem.c	  4428  *
; ..\EAS\BSW\Dem\Dem.c	  4429  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  4430  *
; ..\EAS\BSW\Dem\Dem.c	  4431  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  4432  *
; ..\EAS\BSW\Dem\Dem.c	  4433  * Return:
; ..\EAS\BSW\Dem\Dem.c	  4434  *
; ..\EAS\BSW\Dem\Dem.c	  4435  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  4436  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4437  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  4438  STATIC FUNC(void, DEM_CODE) DemInternal_CalPID31Data
; ..\EAS\BSW\Dem\Dem.c	  4439  (
; ..\EAS\BSW\Dem\Dem.c	  4440      void
; ..\EAS\BSW\Dem\Dem.c	  4441  )
; ..\EAS\BSW\Dem\Dem.c	  4442  {
; ..\EAS\BSW\Dem\Dem.c	  4443      uint8 TimeBuf[2];
; ..\EAS\BSW\Dem\Dem.c	  4444      uint16 TimeSinceEngineStart;/*Unit:s*/
; ..\EAS\BSW\Dem\Dem.c	  4445      uint8 VehicleSpeed;/*Unit: km/h*/
; ..\EAS\BSW\Dem\Dem.c	  4446      uint16 TimeDelta = 0;/*Unit:s*/
; ..\EAS\BSW\Dem\Dem.c	  4447      Dem_DataElementReadFncType GetTimeFnc = NULL_PTR;
; ..\EAS\BSW\Dem\Dem.c	  4448      Dem_DataElementReadFncType GetSpeedFnc = NULL_PTR;
; ..\EAS\BSW\Dem\Dem.c	  4449  
; ..\EAS\BSW\Dem\Dem.c	  4450      if((DEM_CFG_OBD_TIME_SINCE_ENGINE_START != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	  4451          && (DEM_CFG_OBD_IN_VEHICLE_SPEED != NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	  4452      {
; ..\EAS\BSW\Dem\Dem.c	  4453          GetTimeFnc = ((Dem_DataElementClassType *)DEM_CFG_OBD_TIME_SINCE_ENGINE_START-> \ 
; ..\EAS\BSW\Dem\Dem.c	  4454                                                    DemExternalCSDataElementClass-> \ 
; ..\EAS\BSW\Dem\Dem.c	  4455                                                    DemDataElementReadFnc);
; ..\EAS\BSW\Dem\Dem.c	  4456          GetSpeedFnc = ((Dem_DataElementClassType *)DEM_CFG_OBD_IN_VEHICLE_SPEED-> \ 
; ..\EAS\BSW\Dem\Dem.c	  4457                                                     DemExternalCSDataElementClass-> \ 
; ..\EAS\BSW\Dem\Dem.c	  4458                                                     DemDataElementReadFnc);
; ..\EAS\BSW\Dem\Dem.c	  4459          if((E_OK == GetTimeFnc(TimeBuf)) && (E_OK == GetSpeedFnc(&VehicleSpeed)))
; ..\EAS\BSW\Dem\Dem.c	  4460          {
; ..\EAS\BSW\Dem\Dem.c	  4461              TimeSinceEngineStart = (((uint16)TimeBuf[0]<<8) | ((uint16)TimeBuf[1]));
; ..\EAS\BSW\Dem\Dem.c	  4462  
; ..\EAS\BSW\Dem\Dem.c	  4463              if(TimeSinceEngineStart < Dem_ObdTimeSinceEngineStartLast)
; ..\EAS\BSW\Dem\Dem.c	  4464              {
; ..\EAS\BSW\Dem\Dem.c	  4465                  Dem_ObdTimeSinceEngineStartLast = TimeSinceEngineStart;
; ..\EAS\BSW\Dem\Dem.c	  4466                  TimeDelta = TimeSinceEngineStart;
; ..\EAS\BSW\Dem\Dem.c	  4467              }
; ..\EAS\BSW\Dem\Dem.c	  4468              else
; ..\EAS\BSW\Dem\Dem.c	  4469              {
; ..\EAS\BSW\Dem\Dem.c	  4470                  TimeDelta = TimeSinceEngineStart - Dem_ObdTimeSinceEngineStartLast;
; ..\EAS\BSW\Dem\Dem.c	  4471                  Dem_ObdTimeSinceEngineStartLast = TimeSinceEngineStart;
; ..\EAS\BSW\Dem\Dem.c	  4472              }
; ..\EAS\BSW\Dem\Dem.c	  4473              /*y km/h = y*1000/3600 m/s*/
; ..\EAS\BSW\Dem\Dem.c	  4474              DEM_OBD_DISTANCE_SINCEDTCCLEARED += ((((uint32)VehicleSpeed)*1000/3600)*(uint32)TimeDelta);
; ..\EAS\BSW\Dem\Dem.c	  4475  
; ..\EAS\BSW\Dem\Dem.c	  4476              if(DEM_OBD_DISTANCE_SINCEDTCCLEARED > (uint32)65535000)
; ..\EAS\BSW\Dem\Dem.c	  4477              {
; ..\EAS\BSW\Dem\Dem.c	  4478                  DEM_OBD_DISTANCE_SINCEDTCCLEARED = (uint32)65535000;
; ..\EAS\BSW\Dem\Dem.c	  4479              }
; ..\EAS\BSW\Dem\Dem.c	  4480          }
; ..\EAS\BSW\Dem\Dem.c	  4481      }
; ..\EAS\BSW\Dem\Dem.c	  4482  }
; ..\EAS\BSW\Dem\Dem.c	  4483  #endif/*#if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU) && (DEM_CFG_OBD_CENTRALIZED_PID31_HANDLING == STD_ON))*/
; ..\EAS\BSW\Dem\Dem.c	  4484  
; ..\EAS\BSW\Dem\Dem.c	  4485  #if(DEM_NUM_OF_RATIO > 0)
; ..\EAS\BSW\Dem\Dem.c	  4486  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  4487  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4488  * Function Name: DemInternal_UpdateRatioNumerator
; ..\EAS\BSW\Dem\Dem.c	  4489  *
; ..\EAS\BSW\Dem\Dem.c	  4490  * Description: Only for monitors being configured with the option "observer",the
; ..\EAS\BSW\Dem\Dem.c	  4491  *              Dem module shall increment the numerator of the corresponding
; ..\EAS\BSW\Dem\Dem.c	  4492  *              monitor, if the assigned event gets tested/qualified (as passed
; ..\EAS\BSW\Dem\Dem.c	  4493  *              or failed).
; ..\EAS\BSW\Dem\Dem.c	  4494  *
; ..\EAS\BSW\Dem\Dem.c	  4495  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  4496  *
; ..\EAS\BSW\Dem\Dem.c	  4497  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  4498  *
; ..\EAS\BSW\Dem\Dem.c	  4499  * Return:
; ..\EAS\BSW\Dem\Dem.c	  4500  *
; ..\EAS\BSW\Dem\Dem.c	  4501  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  4502  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4503  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  4504  STATIC FUNC(void, DEM_CODE) DemInternal_UpdateRatioNumerator
; ..\EAS\BSW\Dem\Dem.c	  4505  (
; ..\EAS\BSW\Dem\Dem.c	  4506      Dem_EventIdType EventId
; ..\EAS\BSW\Dem\Dem.c	  4507  )
; ..\EAS\BSW\Dem\Dem.c	  4508  {
; ..\EAS\BSW\Dem\Dem.c	  4509      Dem_RatioIdType RatioID;
; ..\EAS\BSW\Dem\Dem.c	  4510      Dem_UdsStatusByteType DtcStatus;
; ..\EAS\BSW\Dem\Dem.c	  4511  
; ..\EAS\BSW\Dem\Dem.c	  4512      for(RatioID = 0; RatioID < DEM_NUM_OF_RATIO; RatioID++)
; ..\EAS\BSW\Dem\Dem.c	  4513      {
; ..\EAS\BSW\Dem\Dem.c	  4514          if(DEM_CFG_RATIO_EVENTREF(RatioID) == EventId)
; ..\EAS\BSW\Dem\Dem.c	  4515          {
; ..\EAS\BSW\Dem\Dem.c	  4516              DtcStatus = DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId));
; ..\EAS\BSW\Dem\Dem.c	  4517              /*SWS_Dem_00359*//*SWS_Dem_00299*/
; ..\EAS\BSW\Dem\Dem.c	  4518              if((DEM_CFG_RATIO_KIND(RatioID) == DEM_RATIO_OBSERVER) \ 
; ..\EAS\BSW\Dem\Dem.c	  4519                  && (!DEM_TEST_UDS_STATUS_TNCTOC(DtcStatus)) \ 
; ..\EAS\BSW\Dem\Dem.c	  4520                  && (!DEM_TEST_UDS_STATUS_PDTC(DtcStatus)))
; ..\EAS\BSW\Dem\Dem.c	  4521              {
; ..\EAS\BSW\Dem\Dem.c	  4522                  /*SWS_Dem_01188*/
; ..\EAS\BSW\Dem\Dem.c	  4523                  if((DEM_OBD_RATIO_STATE(RatioID) & DEM_OBD_NUM_INCREASED_MASK) == 0)
; ..\EAS\BSW\Dem\Dem.c	  4524                  {
; ..\EAS\BSW\Dem\Dem.c	  4525                      /*increase 1 to the numerator*/
; ..\EAS\BSW\Dem\Dem.c	  4526                      DEM_OBD_RATIO_NUMERATOR(RatioID)++;
; ..\EAS\BSW\Dem\Dem.c	  4527                      DEM_OBD_RATIO_STATE(RatioID) |= DEM_OBD_NUM_INCREASED_MASK;
; ..\EAS\BSW\Dem\Dem.c	  4528                  }
; ..\EAS\BSW\Dem\Dem.c	  4529  
; ..\EAS\BSW\Dem\Dem.c	  4530                  if(DEM_OBD_RATIO_NUMERATOR(RatioID) >= DEM_OBD_NUMDEN_MAX_VALUE)
; ..\EAS\BSW\Dem\Dem.c	  4531                  {
; ..\EAS\BSW\Dem\Dem.c	  4532                      DEM_OBD_RATIO_NUMERATOR(RatioID) = (DEM_OBD_RATIO_NUMERATOR(RatioID) >> 1);
; ..\EAS\BSW\Dem\Dem.c	  4533                      DEM_OBD_RATIO_DENOMINATOR(RatioID) = (DEM_OBD_RATIO_DENOMINATOR(RatioID) >> 1);
; ..\EAS\BSW\Dem\Dem.c	  4534                  }
; ..\EAS\BSW\Dem\Dem.c	  4535              }
; ..\EAS\BSW\Dem\Dem.c	  4536              break;/*for(RatioID = 0; RatioID < DEM_NUM_OF_RATIO; RatioID++)*/
; ..\EAS\BSW\Dem\Dem.c	  4537          }
; ..\EAS\BSW\Dem\Dem.c	  4538      }
; ..\EAS\BSW\Dem\Dem.c	  4539  }
; ..\EAS\BSW\Dem\Dem.c	  4540  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  4541  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4542  * Function Name: DemInternal_UpdateRatioDenominator
; ..\EAS\BSW\Dem\Dem.c	  4543  *
; ..\EAS\BSW\Dem\Dem.c	  4544  * Description: Update the denominator of all ratio.
; ..\EAS\BSW\Dem\Dem.c	  4545  *
; ..\EAS\BSW\Dem\Dem.c	  4546  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  4547  *
; ..\EAS\BSW\Dem\Dem.c	  4548  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  4549  *
; ..\EAS\BSW\Dem\Dem.c	  4550  * Return:
; ..\EAS\BSW\Dem\Dem.c	  4551  *
; ..\EAS\BSW\Dem\Dem.c	  4552  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  4553  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4554  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  4555  STATIC FUNC(void, DEM_CODE) DemInternal_UpdateRatioDenominator
; ..\EAS\BSW\Dem\Dem.c	  4556  (
; ..\EAS\BSW\Dem\Dem.c	  4557      void
; ..\EAS\BSW\Dem\Dem.c	  4558  )
; ..\EAS\BSW\Dem\Dem.c	  4559  {
; ..\EAS\BSW\Dem\Dem.c	  4560      Dem_RatioIdType RatioID;
; ..\EAS\BSW\Dem\Dem.c	  4561      Dem_EventIdType EventId;
; ..\EAS\BSW\Dem\Dem.c	  4562      Dem_UdsStatusByteType DtcStatus;
; ..\EAS\BSW\Dem\Dem.c	  4563      Dem_IUMPRDenGroupType DenGroup = DEM_IUMPR_DEN_NONE;
; ..\EAS\BSW\Dem\Dem.c	  4564  
; ..\EAS\BSW\Dem\Dem.c	  4565      /*SWS_Dem_00712*/
; ..\EAS\BSW\Dem\Dem.c	  4566      if(DEM_OBD_RATIO_DENOMCOND_STATUS(DEM_IUMPR_DEN_GENERAL) == DEM_IUMPR_DEN_STATUS_REACHED)
; ..\EAS\BSW\Dem\Dem.c	  4567      {
; ..\EAS\BSW\Dem\Dem.c	  4568          for(RatioID = 0; RatioID < DEM_NUM_OF_RATIO; RatioID++)
; ..\EAS\BSW\Dem\Dem.c	  4569          {
; ..\EAS\BSW\Dem\Dem.c	  4570              DenGroup = DEM_CFG_RATIO_IUMPR_DEN(RatioID);
; ..\EAS\BSW\Dem\Dem.c	  4571  
; ..\EAS\BSW\Dem\Dem.c	  4572              if(((DEM_OBD_RATIO_STATE(RatioID) & DEM_OBD_DEN_INCREASED_MASK) == 0) \ 
; ..\EAS\BSW\Dem\Dem.c	  4573                  && (((DenGroup != DEM_IUMPR_DEN_PHYS_API) \ 
; ..\EAS\BSW\Dem\Dem.c	  4574                  && (DEM_OBD_RATIO_DENOMCOND_STATUS(DenGroup) == DEM_IUMPR_DEN_STATUS_REACHED)) \ 
; ..\EAS\BSW\Dem\Dem.c	  4575                  || ((DenGroup == DEM_IUMPR_DEN_PHYS_API) \ 
; ..\EAS\BSW\Dem\Dem.c	  4576                  && ((DEM_OBD_RATIO_STATE(RatioID) & DEM_OBD_DEN_LOCK_MASK) == 0))))
; ..\EAS\BSW\Dem\Dem.c	  4577              {
; ..\EAS\BSW\Dem\Dem.c	  4578                  EventId = DEM_CFG_RATIO_EVENTREF(RatioID);
; ..\EAS\BSW\Dem\Dem.c	  4579                  DtcStatus = DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId));
; ..\EAS\BSW\Dem\Dem.c	  4580                  /*SWS_Dem_00299*//*SWS_Dem_00709*/
; ..\EAS\BSW\Dem\Dem.c	  4581  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  4582      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  4583                  if((Dem_EventAvailable[EventId] == TRUE) && (!DEM_TEST_UDS_STATUS_PDTC(DtcStatus)))
; ..\EAS\BSW\Dem\Dem.c	  4584  #else
; ..\EAS\BSW\Dem\Dem.c	  4585                  if(!DEM_TEST_UDS_STATUS_PDTC(DtcStatus))
; ..\EAS\BSW\Dem\Dem.c	  4586  #endif
; ..\EAS\BSW\Dem\Dem.c	  4587                  {
; ..\EAS\BSW\Dem\Dem.c	  4588                      DEM_OBD_RATIO_DENOMINATOR(RatioID)++;
; ..\EAS\BSW\Dem\Dem.c	  4589                      DEM_OBD_RATIO_STATE(RatioID) |= DEM_OBD_DEN_INCREASED_MASK;
; ..\EAS\BSW\Dem\Dem.c	  4590                  }
; ..\EAS\BSW\Dem\Dem.c	  4591  
; ..\EAS\BSW\Dem\Dem.c	  4592                  if(DEM_OBD_RATIO_DENOMINATOR(RatioID) >= DEM_OBD_NUMDEN_MAX_VALUE)
; ..\EAS\BSW\Dem\Dem.c	  4593                  {
; ..\EAS\BSW\Dem\Dem.c	  4594                      DEM_OBD_RATIO_NUMERATOR(RatioID) = (DEM_OBD_RATIO_NUMERATOR(RatioID) >> 1);
; ..\EAS\BSW\Dem\Dem.c	  4595                      DEM_OBD_RATIO_DENOMINATOR(RatioID) = (DEM_OBD_RATIO_DENOMINATOR(RatioID) >> 1);
; ..\EAS\BSW\Dem\Dem.c	  4596                  }
; ..\EAS\BSW\Dem\Dem.c	  4597              }
; ..\EAS\BSW\Dem\Dem.c	  4598          }/* for(RatioID = 0; RatioID < DEM_NUM_OF_RATIO; RatioID++)*/
; ..\EAS\BSW\Dem\Dem.c	  4599      }/*if(DEM_OBD_RATIO_DENOMCOND_STATUS(DEM_IUMPR_DEN_GENERAL) == DEM_IUMPR_DEN_STATUS_REACHED)*/
; ..\EAS\BSW\Dem\Dem.c	  4600  }
; ..\EAS\BSW\Dem\Dem.c	  4601  #endif/*#if(DEM_NUM_OF_RATIO > 0)*/
; ..\EAS\BSW\Dem\Dem.c	  4602  #endif/*#if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))*/
; ..\EAS\BSW\Dem\Dem.c	  4603  
; ..\EAS\BSW\Dem\Dem.c	  4604  #if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)
; ..\EAS\BSW\Dem\Dem.c	  4605  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  4606  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4607  * Function Name: DemInternal_AddEventPermanentEntry
; ..\EAS\BSW\Dem\Dem.c	  4608  *
; ..\EAS\BSW\Dem\Dem.c	  4609  * Description: Add one event to the permanent memory entry.
; ..\EAS\BSW\Dem\Dem.c	  4610  *
; ..\EAS\BSW\Dem\Dem.c	  4611  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  4612  *
; ..\EAS\BSW\Dem\Dem.c	  4613  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  4614  *
; ..\EAS\BSW\Dem\Dem.c	  4615  * Return:
; ..\EAS\BSW\Dem\Dem.c	  4616  *
; ..\EAS\BSW\Dem\Dem.c	  4617  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  4618  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4619  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  4620  STATIC FUNC(void, DEM_CODE) DemInternal_AddEventPermanentEntry
; ..\EAS\BSW\Dem\Dem.c	  4621  (
; ..\EAS\BSW\Dem\Dem.c	  4622      Dem_EventIdType EventId
; ..\EAS\BSW\Dem\Dem.c	  4623  )
; ..\EAS\BSW\Dem\Dem.c	  4624  {
; ..\EAS\BSW\Dem\Dem.c	  4625      uint8 Index;
; ..\EAS\BSW\Dem\Dem.c	  4626      uint8 IndicatorId;
; ..\EAS\BSW\Dem\Dem.c	  4627      uint16 StatusPos;
; ..\EAS\BSW\Dem\Dem.c	  4628      uint8 FreeEntry = DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT;
; ..\EAS\BSW\Dem\Dem.c	  4629      boolean MilOn = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  4630      boolean IgnOn = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  4631  
; ..\EAS\BSW\Dem\Dem.c	  4632      /*Check if IGN operation cycle is start.*/
; ..\EAS\BSW\Dem\Dem.c	  4633      for(Index = 0; Index < DEM_NUM_OF_OPCYCLE; Index++)
; ..\EAS\BSW\Dem\Dem.c	  4634      {
; ..\EAS\BSW\Dem\Dem.c	  4635          if((DEM_CFG_OPCYC_TYPE(Index) == DEM_OPCYC_IGNITION) \ 
; ..\EAS\BSW\Dem\Dem.c	  4636              && (Dem_OpCycState[Index] == DEM_CYCLE_STATE_START))
; ..\EAS\BSW\Dem\Dem.c	  4637          {
; ..\EAS\BSW\Dem\Dem.c	  4638              IgnOn = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  4639          }
; ..\EAS\BSW\Dem\Dem.c	  4640      }
; ..\EAS\BSW\Dem\Dem.c	  4641  
; ..\EAS\BSW\Dem\Dem.c	  4642      if((DEM_CFG_EVENT_INDICATOR_NUM(EventId) > (uint8)0) \ 
; ..\EAS\BSW\Dem\Dem.c	  4643          && (DEM_CFG_EVENT_INDICATOR(EventId) != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	  4644          && (IgnOn == TRUE))
; ..\EAS\BSW\Dem\Dem.c	  4645      {
; ..\EAS\BSW\Dem\Dem.c	  4646          for(Index = 0; Index < DEM_CFG_EVENT_INDICATOR_NUM(EventId); Index++)
; ..\EAS\BSW\Dem\Dem.c	  4647          {
; ..\EAS\BSW\Dem\Dem.c	  4648              IndicatorId = DEM_CFG_EVENT_INDICATOR_ID(EventId,Index);
; ..\EAS\BSW\Dem\Dem.c	  4649              StatusPos = DEM_CFG_EVENT_INDICATOR_OFFSET(EventId,Index) \ 
; ..\EAS\BSW\Dem\Dem.c	  4650                              + DEM_CFG_INDICATOR_STATUS_START(IndicatorId);
; ..\EAS\BSW\Dem\Dem.c	  4651  
; ..\EAS\BSW\Dem\Dem.c	  4652              if((DEM_INDICATOR_STATUS(StatusPos) != DEM_INDICATOR_OFF) \ 
; ..\EAS\BSW\Dem\Dem.c	  4653                  && (IndicatorId == DEM_CFG_MILINDICATORREF))
; ..\EAS\BSW\Dem\Dem.c	  4654              {
; ..\EAS\BSW\Dem\Dem.c	  4655                  MilOn = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  4656                  break;
; ..\EAS\BSW\Dem\Dem.c	  4657              }
; ..\EAS\BSW\Dem\Dem.c	  4658          }
; ..\EAS\BSW\Dem\Dem.c	  4659      }
; ..\EAS\BSW\Dem\Dem.c	  4660  
; ..\EAS\BSW\Dem\Dem.c	  4661      if(MilOn == TRUE)
; ..\EAS\BSW\Dem\Dem.c	  4662      {
; ..\EAS\BSW\Dem\Dem.c	  4663          for(Index = 0; Index < DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT; Index++)
; ..\EAS\BSW\Dem\Dem.c	  4664          {
; ..\EAS\BSW\Dem\Dem.c	  4665              if(DEM_PERMANENT_DATAENTRY_EVENTID(Index) == EventId)
; ..\EAS\BSW\Dem\Dem.c	  4666              {
; ..\EAS\BSW\Dem\Dem.c	  4667                  break;
; ..\EAS\BSW\Dem\Dem.c	  4668              }
; ..\EAS\BSW\Dem\Dem.c	  4669              else if((DEM_PERMANENT_DATAENTRY_EVENTID(Index) == DEM_EVENT_ID_INVALID) \ 
; ..\EAS\BSW\Dem\Dem.c	  4670                  && (FreeEntry == DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT))
; ..\EAS\BSW\Dem\Dem.c	  4671              {
; ..\EAS\BSW\Dem\Dem.c	  4672                  FreeEntry = Index;
; ..\EAS\BSW\Dem\Dem.c	  4673              }
; ..\EAS\BSW\Dem\Dem.c	  4674              else
; ..\EAS\BSW\Dem\Dem.c	  4675              {
; ..\EAS\BSW\Dem\Dem.c	  4676                  /*do nothing*/
; ..\EAS\BSW\Dem\Dem.c	  4677              }
; ..\EAS\BSW\Dem\Dem.c	  4678          }
; ..\EAS\BSW\Dem\Dem.c	  4679  
; ..\EAS\BSW\Dem\Dem.c	  4680          if((Index == DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT) \ 
; ..\EAS\BSW\Dem\Dem.c	  4681              && (FreeEntry < DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT))
; ..\EAS\BSW\Dem\Dem.c	  4682          {
; ..\EAS\BSW\Dem\Dem.c	  4683              DEM_PERMANENT_DATAENTRY_EVENTID(FreeEntry) = EventId;
; ..\EAS\BSW\Dem\Dem.c	  4684              DEM_PERMANENT_DATAENTRY_USEDNUM++;
; ..\EAS\BSW\Dem\Dem.c	  4685          }
; ..\EAS\BSW\Dem\Dem.c	  4686      }
; ..\EAS\BSW\Dem\Dem.c	  4687  }
; ..\EAS\BSW\Dem\Dem.c	  4688  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  4689  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4690  * Function Name: DemInternal_RemoveEventPermanentEntry
; ..\EAS\BSW\Dem\Dem.c	  4691  *
; ..\EAS\BSW\Dem\Dem.c	  4692  * Description: Remove one event from the permanent memory entry.
; ..\EAS\BSW\Dem\Dem.c	  4693  *
; ..\EAS\BSW\Dem\Dem.c	  4694  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  4695  *
; ..\EAS\BSW\Dem\Dem.c	  4696  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  4697  *
; ..\EAS\BSW\Dem\Dem.c	  4698  * Return:
; ..\EAS\BSW\Dem\Dem.c	  4699  *
; ..\EAS\BSW\Dem\Dem.c	  4700  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  4701  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4702  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  4703  STATIC FUNC(void, DEM_CODE) DemInternal_RemoveEventPermanentEntry
; ..\EAS\BSW\Dem\Dem.c	  4704  (
; ..\EAS\BSW\Dem\Dem.c	  4705      Dem_EventIdType EventId
; ..\EAS\BSW\Dem\Dem.c	  4706  )
; ..\EAS\BSW\Dem\Dem.c	  4707  {
; ..\EAS\BSW\Dem\Dem.c	  4708      uint8 Index;
; ..\EAS\BSW\Dem\Dem.c	  4709      uint8 IndicatorId;
; ..\EAS\BSW\Dem\Dem.c	  4710      uint16 StatusPos;
; ..\EAS\BSW\Dem\Dem.c	  4711      Dem_EventIdType EventIdx;
; ..\EAS\BSW\Dem\Dem.c	  4712      uint8 MemIdx = DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT;
; ..\EAS\BSW\Dem\Dem.c	  4713      boolean MilOff = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  4714      boolean ClearConditionSatisfied = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  4715  
; ..\EAS\BSW\Dem\Dem.c	  4716      if(DEM_EVENT_OBD_CLEAR_FLAG(EventId) == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  4717      {
; ..\EAS\BSW\Dem\Dem.c	  4718          ClearConditionSatisfied = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  4719      }
; ..\EAS\BSW\Dem\Dem.c	  4720      else
; ..\EAS\BSW\Dem\Dem.c	  4721      {
; ..\EAS\BSW\Dem\Dem.c	  4722          /*Check if WarmUp operation cycle is start.*/
; ..\EAS\BSW\Dem\Dem.c	  4723          for(Index = 0; Index < DEM_NUM_OF_OPCYCLE; Index++)
; ..\EAS\BSW\Dem\Dem.c	  4724          {
; ..\EAS\BSW\Dem\Dem.c	  4725              if((DEM_CFG_OPCYC_TYPE(Index) == DEM_OPCYC_WARMUP) \ 
; ..\EAS\BSW\Dem\Dem.c	  4726                  && (Dem_OpCycState[Index] == DEM_CYCLE_STATE_START))
; ..\EAS\BSW\Dem\Dem.c	  4727              {
; ..\EAS\BSW\Dem\Dem.c	  4728                  ClearConditionSatisfied = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  4729              }
; ..\EAS\BSW\Dem\Dem.c	  4730          }
; ..\EAS\BSW\Dem\Dem.c	  4731      }
; ..\EAS\BSW\Dem\Dem.c	  4732  
; ..\EAS\BSW\Dem\Dem.c	  4733      if(ClearConditionSatisfied == TRUE)
; ..\EAS\BSW\Dem\Dem.c	  4734      {
; ..\EAS\BSW\Dem\Dem.c	  4735          for(Index = 0; Index < DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT; Index++)
; ..\EAS\BSW\Dem\Dem.c	  4736          {
; ..\EAS\BSW\Dem\Dem.c	  4737              if(DEM_PERMANENT_DATAENTRY_EVENTID(Index) == EventId)
; ..\EAS\BSW\Dem\Dem.c	  4738              {
; ..\EAS\BSW\Dem\Dem.c	  4739                  MemIdx = Index;
; ..\EAS\BSW\Dem\Dem.c	  4740                  break;
; ..\EAS\BSW\Dem\Dem.c	  4741              }
; ..\EAS\BSW\Dem\Dem.c	  4742          }
; ..\EAS\BSW\Dem\Dem.c	  4743  
; ..\EAS\BSW\Dem\Dem.c	  4744          if(MemIdx < DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT)
; ..\EAS\BSW\Dem\Dem.c	  4745          {
; ..\EAS\BSW\Dem\Dem.c	  4746              for(Index = 0; Index < DEM_CFG_EVENT_INDICATOR_NUM(EventId); Index++)
; ..\EAS\BSW\Dem\Dem.c	  4747              {
; ..\EAS\BSW\Dem\Dem.c	  4748                  IndicatorId = DEM_CFG_EVENT_INDICATOR_ID(EventId,Index);
; ..\EAS\BSW\Dem\Dem.c	  4749                  StatusPos = DEM_CFG_EVENT_INDICATOR_OFFSET(EventId,Index) \ 
; ..\EAS\BSW\Dem\Dem.c	  4750                                  + DEM_CFG_INDICATOR_STATUS_START(IndicatorId);
; ..\EAS\BSW\Dem\Dem.c	  4751  
; ..\EAS\BSW\Dem\Dem.c	  4752                  if((DEM_INDICATOR_STATUS(StatusPos) == DEM_INDICATOR_OFF) \ 
; ..\EAS\BSW\Dem\Dem.c	  4753                      && (IndicatorId == DEM_CFG_MILINDICATORREF))
; ..\EAS\BSW\Dem\Dem.c	  4754                  {
; ..\EAS\BSW\Dem\Dem.c	  4755                      MilOff = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  4756                      break;
; ..\EAS\BSW\Dem\Dem.c	  4757                  }
; ..\EAS\BSW\Dem\Dem.c	  4758              }
; ..\EAS\BSW\Dem\Dem.c	  4759          }
; ..\EAS\BSW\Dem\Dem.c	  4760  
; ..\EAS\BSW\Dem\Dem.c	  4761          if(MilOff == TRUE)
; ..\EAS\BSW\Dem\Dem.c	  4762          {
; ..\EAS\BSW\Dem\Dem.c	  4763              DEM_PERMANENT_DATAENTRY_EVENTID(MemIdx) = DEM_EVENT_ID_INVALID;
; ..\EAS\BSW\Dem\Dem.c	  4764              DEM_PERMANENT_DATAENTRY_USEDNUM--;
; ..\EAS\BSW\Dem\Dem.c	  4765  
; ..\EAS\BSW\Dem\Dem.c	  4766              /*If one event with MIL ON is not stored in permanent entry, now it can be stored.*/
; ..\EAS\BSW\Dem\Dem.c	  4767              for(EventIdx = 0; EventIdx < DEM_NUM_OF_EVENT; EventIdx++)
; ..\EAS\BSW\Dem\Dem.c	  4768              {
; ..\EAS\BSW\Dem\Dem.c	  4769                  DemInternal_AddEventPermanentEntry(EventIdx);
; ..\EAS\BSW\Dem\Dem.c	  4770              }
; ..\EAS\BSW\Dem\Dem.c	  4771          }
; ..\EAS\BSW\Dem\Dem.c	  4772      }
; ..\EAS\BSW\Dem\Dem.c	  4773  }
; ..\EAS\BSW\Dem\Dem.c	  4774  #endif/*#if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)*/
; ..\EAS\BSW\Dem\Dem.c	  4775  
; ..\EAS\BSW\Dem\Dem.c	  4776  /*******************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4777  *   AUTOSAR Stabdard Api
; ..\EAS\BSW\Dem\Dem.c	  4778  *******************************************************************************/
; ..\EAS\BSW\Dem\Dem.c	  4779  #if(STD_ON == DEM_VERSION_INFO_API)
; ..\EAS\BSW\Dem\Dem.c	  4780  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  4781  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4782  * Function Name: Dem_GetVersionInfo
; ..\EAS\BSW\Dem\Dem.c	  4783  *
; ..\EAS\BSW\Dem\Dem.c	  4784  * Description: Returns the version information of this module.
; ..\EAS\BSW\Dem\Dem.c	  4785  *
; ..\EAS\BSW\Dem\Dem.c	  4786  * Inputs: None
; ..\EAS\BSW\Dem\Dem.c	  4787  *
; ..\EAS\BSW\Dem\Dem.c	  4788  * Outputs: versioninfo:Pointer to where to store the version information of
; ..\EAS\BSW\Dem\Dem.c	  4789  *                      this module.
; ..\EAS\BSW\Dem\Dem.c	  4790  *
; ..\EAS\BSW\Dem\Dem.c	  4791  * Return: None
; ..\EAS\BSW\Dem\Dem.c	  4792  *
; ..\EAS\BSW\Dem\Dem.c	  4793  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  4794  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4795  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  4796  FUNC(void, DEM_CODE) Dem_GetVersionInfo
; Function Dem_GetVersionInfo
.L957:
Dem_GetVersionInfo:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  4797  (
; ..\EAS\BSW\Dem\Dem.c	  4798      P2VAR(Std_VersionInfoType, AUTOMATIC, DEM_APPL_DATA) versionInfo
; ..\EAS\BSW\Dem\Dem.c	  4799  )
; ..\EAS\BSW\Dem\Dem.c	  4800  {
; ..\EAS\BSW\Dem\Dem.c	  4801      if(NULL_PTR == versionInfo)
	mov.a	a15,#0
.L2918:
	jeq.a	a15,a4,.L335
.L2919:

; ..\EAS\BSW\Dem\Dem.c	  4802      {
; ..\EAS\BSW\Dem\Dem.c	  4803          DEM_DET_REPORT_ERROR(DEM_GETVERSIONINFO_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  4804      }
; ..\EAS\BSW\Dem\Dem.c	  4805      else
; ..\EAS\BSW\Dem\Dem.c	  4806      {
; ..\EAS\BSW\Dem\Dem.c	  4807          versionInfo->vendorID = DEM_VENDOR_ID;
	mov	d15,#86
.L2920:
	st.h	[a4],d15
.L2921:

; ..\EAS\BSW\Dem\Dem.c	  4808          versionInfo->moduleID = DEM_MODULE_ID;
	mov	d15,#54
.L2922:
	st.h	[a4]2,d15
.L2923:

; ..\EAS\BSW\Dem\Dem.c	  4809  
; ..\EAS\BSW\Dem\Dem.c	  4810          versionInfo->sw_major_version = DEM_SW_MAJOR_VERSION;
	mov	d15,#1
.L2924:
	st.b	[a4]4,d15
.L2925:

; ..\EAS\BSW\Dem\Dem.c	  4811          versionInfo->sw_minor_version = DEM_SW_MINOR_VERSION;
	mov	d15,#2
.L2926:
	st.b	[a4]5,d15
.L2927:

; ..\EAS\BSW\Dem\Dem.c	  4812          versionInfo->sw_patch_version = DEM_SW_PATCH_VERSION;
	mov	d15,#5
.L2928:
	st.b	[a4]6,d15
.L335:

; ..\EAS\BSW\Dem\Dem.c	  4813      }
; ..\EAS\BSW\Dem\Dem.c	  4814  }
	ret
.L1595:
	
__Dem_GetVersionInfo_function_end:
	.size	Dem_GetVersionInfo,__Dem_GetVersionInfo_function_end-Dem_GetVersionInfo
.L1092:
	; End of function
	
	.sdecl	'.text.Dem.Dem_PreInit',code,cluster('Dem_PreInit')
	.sect	'.text.Dem.Dem_PreInit'
	.align	2
	
	.global	Dem_PreInit

; ..\EAS\BSW\Dem\Dem.c	  4815  #endif
; ..\EAS\BSW\Dem\Dem.c	  4816  
; ..\EAS\BSW\Dem\Dem.c	  4817  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  4818  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4819  * Function Name: Dem_PreInit
; ..\EAS\BSW\Dem\Dem.c	  4820  *
; ..\EAS\BSW\Dem\Dem.c	  4821  * Description: Initializes the internal states necessary to process events
; ..\EAS\BSW\Dem\Dem.c	  4822  *              reported by BSW-modules.
; ..\EAS\BSW\Dem\Dem.c	  4823  *
; ..\EAS\BSW\Dem\Dem.c	  4824  * Inputs: None
; ..\EAS\BSW\Dem\Dem.c	  4825  *
; ..\EAS\BSW\Dem\Dem.c	  4826  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  4827  *
; ..\EAS\BSW\Dem\Dem.c	  4828  * Return: None
; ..\EAS\BSW\Dem\Dem.c	  4829  *
; ..\EAS\BSW\Dem\Dem.c	  4830  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  4831  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4832  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  4833  FUNC(void, DEM_CODE) Dem_PreInit
; Function Dem_PreInit
.L959:
Dem_PreInit:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  4834  (
; ..\EAS\BSW\Dem\Dem.c	  4835      void
; ..\EAS\BSW\Dem\Dem.c	  4836  )
; ..\EAS\BSW\Dem\Dem.c	  4837  {
; ..\EAS\BSW\Dem\Dem.c	  4838      uint16 i;
; ..\EAS\BSW\Dem\Dem.c	  4839  
; ..\EAS\BSW\Dem\Dem.c	  4840  #if(DEM_CFG_BSWERRORBUFFERSIZE > 0)
; ..\EAS\BSW\Dem\Dem.c	  4841      for(i = 0; i < DEM_CFG_BSWERRORBUFFERSIZE; i++)
	mov	d15,#0
.L2459:

; ..\EAS\BSW\Dem\Dem.c	  4842      {
; ..\EAS\BSW\Dem\Dem.c	  4843          Dem_BswErrorQueue[i] = DEM_DATA_INVALID_U16;
	mov.u	d0,#65535
.L2933:

; ..\EAS\BSW\Dem\Dem.c	  4844          Dem_BswErrorStatus[i] = DEM_DATA_INVALID_U8;
	mov	d1,#255
.L2934:
	j	.L336
.L337:
	movh.a	a15,#@his(Dem_BswErrorQueue)
	lea	a15,[a15]@los(Dem_BswErrorQueue)
.L2935:
	addsc.a	a15,a15,d15,#1
.L2936:
	st.h	[a15],d0
.L2937:
	movh.a	a15,#@his(Dem_BswErrorStatus)
	lea	a15,[a15]@los(Dem_BswErrorStatus)
.L2938:
	addsc.a	a15,a15,d15,#0
.L2939:
	st.b	[a15],d1
.L2940:
	add	d15,#1
.L336:
	jlt.u	d15,#8,.L337
.L2941:

; ..\EAS\BSW\Dem\Dem.c	  4845      }
; ..\EAS\BSW\Dem\Dem.c	  4846  #endif
; ..\EAS\BSW\Dem\Dem.c	  4847  
; ..\EAS\BSW\Dem\Dem.c	  4848  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  4849      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  4850      /*SWS_Dem_01107 init the availability of an event*/
; ..\EAS\BSW\Dem\Dem.c	  4851      for(i = 0; i < DEM_NUM_OF_EVENT; i++)
; ..\EAS\BSW\Dem\Dem.c	  4852      {
; ..\EAS\BSW\Dem\Dem.c	  4853          if(DEM_CFG_EVENT_AVAILABLE(i) == TRUE)
; ..\EAS\BSW\Dem\Dem.c	  4854          {
; ..\EAS\BSW\Dem\Dem.c	  4855              Dem_EventAvailable[i] = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  4856          }
; ..\EAS\BSW\Dem\Dem.c	  4857          else
; ..\EAS\BSW\Dem\Dem.c	  4858          {
; ..\EAS\BSW\Dem\Dem.c	  4859              Dem_EventAvailable[i] = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  4860          }
; ..\EAS\BSW\Dem\Dem.c	  4861      }
; ..\EAS\BSW\Dem\Dem.c	  4862  #endif
; ..\EAS\BSW\Dem\Dem.c	  4863      /*SWS_Dem_00438*/
; ..\EAS\BSW\Dem\Dem.c	  4864      for(i = 0; i < DEM_NUM_OF_EVENT; i++)
	mov	d0,#0
.L2460:

; ..\EAS\BSW\Dem\Dem.c	  4865      {
; ..\EAS\BSW\Dem\Dem.c	  4866          /*reset the Dem-internal debounce algorithm*/
; ..\EAS\BSW\Dem\Dem.c	  4867  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  4868          DEM_EVENT_DBC(i) = 0;
	mov	d1,d0
.L2462:

; ..\EAS\BSW\Dem\Dem.c	  4869  #endif
; ..\EAS\BSW\Dem\Dem.c	  4870  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  4871          DEM_EVENT_DBT(i) = 0;
; ..\EAS\BSW\Dem\Dem.c	  4872          DEM_EVENT_TIMERDIRECTION(i) = DEM_DATA_INVALID_U8;
	mov	d2,#255
.L2942:
	mov	d3,#116
.L2943:
	j	.L338
.L339:
	sha	d15,d0,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L2463:
	st.h	[a15]10,d1
.L2464:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L2465:
	st.w	[a15]12,d1
.L2466:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L2944:
	st.b	[a15]16,d2
.L2945:

; ..\EAS\BSW\Dem\Dem.c	  4873          Dem_EventDBTFreezeFlag[i] = FALSE;
	movh.a	a15,#@his(Dem_EventDBTFreezeFlag)
	lea	a15,[a15]@los(Dem_EventDBTFreezeFlag)
.L2946:
	addsc.a	a15,a15,d0,#0
.L2467:
	st.b	[a15],d1
.L2468:
	add	d0,#1
.L338:
	jlt.u	d0,d3,.L339
.L2947:

; ..\EAS\BSW\Dem\Dem.c	  4874  #endif
; ..\EAS\BSW\Dem\Dem.c	  4875      }
; ..\EAS\BSW\Dem\Dem.c	  4876      /*init the status of enable conditions*/
; ..\EAS\BSW\Dem\Dem.c	  4877  #if(DEM_NUM_OF_EN_CONDITION > 0)
; ..\EAS\BSW\Dem\Dem.c	  4878      for(i = 0; i < DEM_NUM_OF_EN_CONDITION; i++)
	mov	d15,#0
.L2461:
	j	.L340
.L341:

; ..\EAS\BSW\Dem\Dem.c	  4879      {
; ..\EAS\BSW\Dem\Dem.c	  4880          if(DEM_CFG_EN_CONDITION_STATUS(i) == TRUE)
; ..\EAS\BSW\Dem\Dem.c	  4881          {
; ..\EAS\BSW\Dem\Dem.c	  4882              Dem_EventEnCondition[i] = TRUE;
	movh.a	a15,#@his(Dem_EventEnCondition)
	lea	a15,[a15]@los(Dem_EventEnCondition)
.L2948:
	addsc.a	a2,a15,d15,#0
.L2949:
	movh.a	a15,#@his(Dem_EnConditionTable)
	lea	a15,[a15]@los(Dem_EnConditionTable)
	addsc.a	a15,a15,d15,#1
	ld.bu	d0,[a15]1
.L2950:
	eq	d0,d0,#1
.L2951:
	st.b	[a2],d0
.L2952:
	add	d15,#1
.L340:
	jlt.u	d15,#5,.L341
.L2953:

; ..\EAS\BSW\Dem\Dem.c	  4883          }
; ..\EAS\BSW\Dem\Dem.c	  4884          else
; ..\EAS\BSW\Dem\Dem.c	  4885          {
; ..\EAS\BSW\Dem\Dem.c	  4886              Dem_EventEnCondition[i] = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  4887          }
; ..\EAS\BSW\Dem\Dem.c	  4888      }
; ..\EAS\BSW\Dem\Dem.c	  4889  #endif
; ..\EAS\BSW\Dem\Dem.c	  4890      /*init the status of storage conditions*/
; ..\EAS\BSW\Dem\Dem.c	  4891  #if(DEM_NUM_OF_STOR_CONDITION > 0)
; ..\EAS\BSW\Dem\Dem.c	  4892      for(i = 0; i < DEM_NUM_OF_STOR_CONDITION; i++)
; ..\EAS\BSW\Dem\Dem.c	  4893      {
; ..\EAS\BSW\Dem\Dem.c	  4894          if(DEM_CFG_STOR_CONDITION_STATUS(i) == TRUE)
; ..\EAS\BSW\Dem\Dem.c	  4895          {
; ..\EAS\BSW\Dem\Dem.c	  4896              Dem_EventStorCondition[i] = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  4897          }
; ..\EAS\BSW\Dem\Dem.c	  4898          else
; ..\EAS\BSW\Dem\Dem.c	  4899          {
; ..\EAS\BSW\Dem\Dem.c	  4900              Dem_EventStorCondition[i] = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  4901          }
; ..\EAS\BSW\Dem\Dem.c	  4902      }
; ..\EAS\BSW\Dem\Dem.c	  4903  #endif
; ..\EAS\BSW\Dem\Dem.c	  4904      /*SWS_Dem_00169*/
; ..\EAS\BSW\Dem\Dem.c	  4905      DEM_SET_STATE(DEM_PREINIT);
	movh.a	a15,#@his(Dem_State)
	mov	d15,#1
.L2469:
	st.b	[a15]@los(Dem_State),d15
.L2954:

; ..\EAS\BSW\Dem\Dem.c	  4906  }
	ret
.L1598:
	
__Dem_PreInit_function_end:
	.size	Dem_PreInit,__Dem_PreInit_function_end-Dem_PreInit
.L1097:
	; End of function
	
	.sdecl	'.text.Dem.Dem_Init',code,cluster('Dem_Init')
	.sect	'.text.Dem.Dem_Init'
	.align	2
	
	.global	Dem_Init

; ..\EAS\BSW\Dem\Dem.c	  4907  
; ..\EAS\BSW\Dem\Dem.c	  4908  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  4909  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4910  * Function Name: Dem_Init
; ..\EAS\BSW\Dem\Dem.c	  4911  *
; ..\EAS\BSW\Dem\Dem.c	  4912  * Description: Initializes or reinitializes this module.
; ..\EAS\BSW\Dem\Dem.c	  4913  *
; ..\EAS\BSW\Dem\Dem.c	  4914  * Inputs: ConfigPtr:Pointer to the configuration set in VARIANT-POSTBUILD.
; ..\EAS\BSW\Dem\Dem.c	  4915  *
; ..\EAS\BSW\Dem\Dem.c	  4916  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  4917  *
; ..\EAS\BSW\Dem\Dem.c	  4918  * Return: None
; ..\EAS\BSW\Dem\Dem.c	  4919  *
; ..\EAS\BSW\Dem\Dem.c	  4920  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  4921  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4922  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  4923  FUNC(void, DEM_CODE) Dem_Init
; Function Dem_Init
.L961:
Dem_Init:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  4924  (
; ..\EAS\BSW\Dem\Dem.c	  4925      P2CONST(Dem_ConfigType, AUTOMATIC, DEM_APPL_DATA) ConfigPtr
; ..\EAS\BSW\Dem\Dem.c	  4926  )
; ..\EAS\BSW\Dem\Dem.c	  4927  {
; ..\EAS\BSW\Dem\Dem.c	  4928      uint16 i;
; ..\EAS\BSW\Dem\Dem.c	  4929  
; ..\EAS\BSW\Dem\Dem.c	  4930  #if(DEM_CONFIG_VARIANTS == STD_CONFIG_VARIANTS_POSTBUILD)
; ..\EAS\BSW\Dem\Dem.c	  4931      if(NULL_PTR == ConfigPtr)
; ..\EAS\BSW\Dem\Dem.c	  4932      {
; ..\EAS\BSW\Dem\Dem.c	  4933          DEM_DET_REPORT_ERROR(DEM_INIT_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  4934      }
; ..\EAS\BSW\Dem\Dem.c	  4935      else
; ..\EAS\BSW\Dem\Dem.c	  4936      {
; ..\EAS\BSW\Dem\Dem.c	  4937          Dem_ConfigPtr = ConfigPtr;
; ..\EAS\BSW\Dem\Dem.c	  4938  #else
; ..\EAS\BSW\Dem\Dem.c	  4939      (void)ConfigPtr;
; ..\EAS\BSW\Dem\Dem.c	  4940  #endif
; ..\EAS\BSW\Dem\Dem.c	  4941          /*Check if the value in Dem_StorageMem is valid*/
; ..\EAS\BSW\Dem\Dem.c	  4942          DemInternal_CheckStorageMem();
	call	DemInternal_CheckStorageMem
.L2470:

; ..\EAS\BSW\Dem\Dem.c	  4943  
; ..\EAS\BSW\Dem\Dem.c	  4944          for(i = 0; i < DEM_NUM_OF_DTC; i++)
	mov	d15,#0
.L2471:

; ..\EAS\BSW\Dem\Dem.c	  4945          {
; ..\EAS\BSW\Dem\Dem.c	  4946              /*Enable DTC setting*/
; ..\EAS\BSW\Dem\Dem.c	  4947              Dem_EnableDtcSetting[i] = TRUE;
	mov	d0,#1
.L2959:
	mov	d1,#116
.L2960:
	j	.L342
.L343:
	movh.a	a15,#@his(Dem_EnableDtcSetting)
	lea	a15,[a15]@los(Dem_EnableDtcSetting)
.L2961:
	addsc.a	a15,a15,d15,#0
.L2962:
	st.b	[a15],d0
.L2963:

; ..\EAS\BSW\Dem\Dem.c	  4948              /*Enable DTC Update*/
; ..\EAS\BSW\Dem\Dem.c	  4949              Dem_DtcUpDateState[i] = TRUE;
	movh.a	a15,#@his(Dem_DtcUpDateState)
	lea	a15,[a15]@los(Dem_DtcUpDateState)
.L2964:
	addsc.a	a15,a15,d15,#0
.L2965:
	st.b	[a15],d0
.L2966:
	add	d15,#1
.L342:
	jlt.u	d15,d1,.L343
.L2967:

; ..\EAS\BSW\Dem\Dem.c	  4950          }
; ..\EAS\BSW\Dem\Dem.c	  4951          for(i = 0; i < DEM_NUM_OF_EVENT; i++)
	mov	d8,#0
.L2472:
	mov	d15,d1
.L2968:
	j	.L344
.L345:

; ..\EAS\BSW\Dem\Dem.c	  4952          {
; ..\EAS\BSW\Dem\Dem.c	  4953              /*Clear EventCaptureFlag*/
; ..\EAS\BSW\Dem\Dem.c	  4954              DemInternal_ClrCaptureQueue(i);
	mov	d4,d8
.L2474:
	call	DemInternal_ClrCaptureQueue
.L2475:
	add	d8,#1
.L344:
	jlt.u	d8,d15,.L345
.L2969:

; ..\EAS\BSW\Dem\Dem.c	  4955          }
; ..\EAS\BSW\Dem\Dem.c	  4956          Dem_CapturePosition = 0;
	movh.a	a15,#@his(Dem_CapturePosition)
.L2970:
	mov	d15,#0
.L2473:
	st.h	[a15]@los(Dem_CapturePosition),d15
.L2971:

; ..\EAS\BSW\Dem\Dem.c	  4957  
; ..\EAS\BSW\Dem\Dem.c	  4958          Dem_DcmFilterInfo.FilteredValidFlag = FALSE;
	movh.a	a15,#@his(Dem_DcmFilterInfo)
.L2972:
	st.b	[a15]@los(Dem_DcmFilterInfo),d15
.L2973:

; ..\EAS\BSW\Dem\Dem.c	  4959  #if(STD_ON == DEM_CFG_J1939READING_DTC_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	  4960          Dem_J1939DcmFilterInfo.FilteredValidFlag = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  4961  #endif
; ..\EAS\BSW\Dem\Dem.c	  4962          /*init operation cycle state*//*SWS_Dem_00853*/
; ..\EAS\BSW\Dem\Dem.c	  4963          for(i = 0; i < DEM_NUM_OF_OPCYCLE; i++)
; ..\EAS\BSW\Dem\Dem.c	  4964          {
; ..\EAS\BSW\Dem\Dem.c	  4965              Dem_OpCycState[i] = DEM_CYCLE_STATE_END;
	mov	d0,#2
.L2974:
	j	.L346
.L347:
	movh.a	a15,#@his(Dem_OpCycState)
	lea	a15,[a15]@los(Dem_OpCycState)
.L2975:
	st.b	[+a15]0,d0
.L2976:

; ..\EAS\BSW\Dem\Dem.c	  4966              if(DEM_CFG_OPCYC_AUTOSTART(i) == TRUE)
; ..\EAS\BSW\Dem\Dem.c	  4967              {
; ..\EAS\BSW\Dem\Dem.c	  4968                  Dem_OpCycReq[i] = DEM_CYCLE_STATE_START;
	movh.a	a2,#@his(Dem_OpCycReq)
	lea	a2,[a2]@los(Dem_OpCycReq)
.L2977:
	movh.a	a15,#@his(Dem_OperationCycleTable)
	lea	a15,[a15]@los(Dem_OperationCycleTable)
	addsc.a	a15,a15,d15,#2
	ld.bu	d1,[a15]1
.L2978:
	eq	d1,d1,#1
.L2979:
	st.b	[+a2]0,d1
.L2980:
	add	d15,#1
.L346:
	jeq	d15,#0,.L347
.L2981:

; ..\EAS\BSW\Dem\Dem.c	  4969              }
; ..\EAS\BSW\Dem\Dem.c	  4970              else
; ..\EAS\BSW\Dem\Dem.c	  4971              {
; ..\EAS\BSW\Dem\Dem.c	  4972                  Dem_OpCycReq[i] = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  4973              }
; ..\EAS\BSW\Dem\Dem.c	  4974          }
; ..\EAS\BSW\Dem\Dem.c	  4975  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU) && (DEM_CFG_OBD_CENTRALIZED_PID31_HANDLING == STD_ON))
; ..\EAS\BSW\Dem\Dem.c	  4976          Dem_ObdTimeSinceEngineStartLast = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  4977          Dem_ObdTimesOneSecond = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  4978  #endif
; ..\EAS\BSW\Dem\Dem.c	  4979          /*SWS_Dem_01189*/
; ..\EAS\BSW\Dem\Dem.c	  4980  #if(DEM_CFG_TRIGGER_FIM_REPORTS == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  4981          FiM_DemInit();
	call	FiM_DemInit
.L2982:

; ..\EAS\BSW\Dem\Dem.c	  4982  #endif
; ..\EAS\BSW\Dem\Dem.c	  4983          /*SWS_Dem_00340*/
; ..\EAS\BSW\Dem\Dem.c	  4984          DEM_SET_STATE(DEM_NORMAL);
	movh.a	a15,#@his(Dem_State)
	mov	d15,#2
.L2476:
	st.b	[a15]@los(Dem_State),d15
.L2983:

; ..\EAS\BSW\Dem\Dem.c	  4985  #if(DEM_CONFIG_VARIANTS == STD_CONFIG_VARIANTS_POSTBUILD)
; ..\EAS\BSW\Dem\Dem.c	  4986      }
; ..\EAS\BSW\Dem\Dem.c	  4987  #endif
; ..\EAS\BSW\Dem\Dem.c	  4988  }
	ret
.L1601:
	
__Dem_Init_function_end:
	.size	Dem_Init,__Dem_Init_function_end-Dem_Init
.L1102:
	; End of function
	
	.sdecl	'.text.Dem.Dem_Shutdown',code,cluster('Dem_Shutdown')
	.sect	'.text.Dem.Dem_Shutdown'
	.align	2
	
	.global	Dem_Shutdown

; ..\EAS\BSW\Dem\Dem.c	  4989  
; ..\EAS\BSW\Dem\Dem.c	  4990  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  4991  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  4992  * Function Name: Dem_Shutdown
; ..\EAS\BSW\Dem\Dem.c	  4993  *
; ..\EAS\BSW\Dem\Dem.c	  4994  * Description: Shuts down this module.
; ..\EAS\BSW\Dem\Dem.c	  4995  *
; ..\EAS\BSW\Dem\Dem.c	  4996  * Inputs: None
; ..\EAS\BSW\Dem\Dem.c	  4997  *
; ..\EAS\BSW\Dem\Dem.c	  4998  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  4999  *
; ..\EAS\BSW\Dem\Dem.c	  5000  * Return: None
; ..\EAS\BSW\Dem\Dem.c	  5001  *
; ..\EAS\BSW\Dem\Dem.c	  5002  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  5003  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5004  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  5005  FUNC(void, DEM_CODE) Dem_Shutdown
; Function Dem_Shutdown
.L963:
Dem_Shutdown:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  5006  (
; ..\EAS\BSW\Dem\Dem.c	  5007      void
; ..\EAS\BSW\Dem\Dem.c	  5008  )
; ..\EAS\BSW\Dem\Dem.c	  5009  {
; ..\EAS\BSW\Dem\Dem.c	  5010      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	  5011  
; ..\EAS\BSW\Dem\Dem.c	  5012      SchM_Enter_Dem_DEM_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\Dem\Dem.c	  5013  
; ..\EAS\BSW\Dem\Dem.c	  5014      if(Dem_State != DEM_UNINIT)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L2988:
	jeq	d15,#0,.L348
.L2989:

; ..\EAS\BSW\Dem\Dem.c	  5015      {
; ..\EAS\BSW\Dem\Dem.c	  5016          for(i = 0; i < DEM_NUM_OF_OPCYCLE; i++)
	mov	d8,#0
.L2477:

; ..\EAS\BSW\Dem\Dem.c	  5017          {
; ..\EAS\BSW\Dem\Dem.c	  5018              /*SWS_Dem_01078*/
; ..\EAS\BSW\Dem\Dem.c	  5019              Dem_OpCycReq[i] = DEM_DATA_CLEAR;
	mov	d9,d8
.L2478:

; ..\EAS\BSW\Dem\Dem.c	  5020              if(Dem_OpCycState[i] == DEM_CYCLE_STATE_START)
; ..\EAS\BSW\Dem\Dem.c	  5021              {
; ..\EAS\BSW\Dem\Dem.c	  5022                  Dem_OpCycState[i] = DEM_CYCLE_STATE_END;
	mov	d10,#2
.L2990:
	j	.L349
.L350:
	movh.a	a15,#@his(Dem_OpCycReq)
	lea	a15,[a15]@los(Dem_OpCycReq)
.L2479:
	st.b	[+a15]0,d9
.L2480:
	movh.a	a15,#@his(Dem_OpCycState)
	lea	a15,[a15]@los(Dem_OpCycState)
.L2991:
	ld.bu	d15,[+a15]0
.L2992:
	jne	d15,#1,.L351
.L2993:
	movh.a	a15,#@his(Dem_OpCycState)
	lea	a15,[a15]@los(Dem_OpCycState)
.L2994:
	st.b	[+a15]0,d10
.L2995:

; ..\EAS\BSW\Dem\Dem.c	  5023                  DemInternal_CycleEndProcess(i);
	mov	d4,d8
.L2481:
	call	DemInternal_CycleEndProcess
.L351:
	add	d8,#1
.L349:
	jeq	d8,#0,.L350
.L2996:

; ..\EAS\BSW\Dem\Dem.c	  5024              }
; ..\EAS\BSW\Dem\Dem.c	  5025          }
; ..\EAS\BSW\Dem\Dem.c	  5026          /*SWS_Dem_00368*/
; ..\EAS\BSW\Dem\Dem.c	  5027          DEM_SET_STATE(DEM_PREINIT);
	movh.a	a15,#@his(Dem_State)
	mov	d15,#1
	st.b	[a15]@los(Dem_State),d15
.L348:

; ..\EAS\BSW\Dem\Dem.c	  5028      }
; ..\EAS\BSW\Dem\Dem.c	  5029      SchM_Exit_Dem_DEM_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\Dem\Dem.c	  5030  }
	ret
.L1605:
	
__Dem_Shutdown_function_end:
	.size	Dem_Shutdown,__Dem_Shutdown_function_end-Dem_Shutdown
.L1107:
	; End of function
	
	.sdecl	'.text.Dem.Dem_ReportErrorStatus',code,cluster('Dem_ReportErrorStatus')
	.sect	'.text.Dem.Dem_ReportErrorStatus'
	.align	2
	
	.global	Dem_ReportErrorStatus

; ..\EAS\BSW\Dem\Dem.c	  5031  
; ..\EAS\BSW\Dem\Dem.c	  5032  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  5033  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5034  * Function Name: Dem_ReportErrorStatus
; ..\EAS\BSW\Dem\Dem.c	  5035  *
; ..\EAS\BSW\Dem\Dem.c	  5036  * Description: Queues the reported events from the BSW modules (API is only used
; ..\EAS\BSW\Dem\Dem.c	  5037  *              by BSW modules).The interface has an asynchronous behavior, because
; ..\EAS\BSW\Dem\Dem.c	  5038  *              the processing of the event is done within the Dem main function.
; ..\EAS\BSW\Dem\Dem.c	  5039  *              OBD Events Suppression shall be ignored for this computation.
; ..\EAS\BSW\Dem\Dem.c	  5040  *
; ..\EAS\BSW\Dem\Dem.c	  5041  * Inputs: EventId: Identification of an event by assigned Event ID.
; ..\EAS\BSW\Dem\Dem.c	  5042  *         EventStatus: Monitor test result
; ..\EAS\BSW\Dem\Dem.c	  5043  *
; ..\EAS\BSW\Dem\Dem.c	  5044  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  5045  *
; ..\EAS\BSW\Dem\Dem.c	  5046  * Return: None
; ..\EAS\BSW\Dem\Dem.c	  5047  *
; ..\EAS\BSW\Dem\Dem.c	  5048  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  5049  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5050  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  5051  FUNC(void, DEM_CODE) Dem_ReportErrorStatus
; Function Dem_ReportErrorStatus
.L965:
Dem_ReportErrorStatus:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  5052  (
; ..\EAS\BSW\Dem\Dem.c	  5053      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  5054      Dem_EventStatusType EventStatus
; ..\EAS\BSW\Dem\Dem.c	  5055  )
; ..\EAS\BSW\Dem\Dem.c	  5056  {
; ..\EAS\BSW\Dem\Dem.c	  5057      /*SWS_Dem_00107*/
; ..\EAS\BSW\Dem\Dem.c	  5058  #if(DEM_NUM_OF_EN_GROUP > 0)
; ..\EAS\BSW\Dem\Dem.c	  5059      Std_ReturnType ret = E_OK;
	mov	d2,#0
.L2482:

; ..\EAS\BSW\Dem\Dem.c	  5060  #endif
; ..\EAS\BSW\Dem\Dem.c	  5061      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	  5062  
; ..\EAS\BSW\Dem\Dem.c	  5063      if(Dem_State == DEM_UNINIT)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d0,[a15]@los(Dem_State)
.L3001:
	jeq	d0,#0,.L352
.L3002:

; ..\EAS\BSW\Dem\Dem.c	  5064      {
; ..\EAS\BSW\Dem\Dem.c	  5065          /*SWS_Dem_00364*/
; ..\EAS\BSW\Dem\Dem.c	  5066          DEM_DET_REPORT_ERROR(DEM_REPORTERRORSTATUS_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  5067      }
; ..\EAS\BSW\Dem\Dem.c	  5068      else if(EventId >= DEM_NUM_OF_EVENT)
	mov	d15,#116
.L3003:
	jge.u	d4,d15,.L353
.L3004:

; ..\EAS\BSW\Dem\Dem.c	  5069      {
; ..\EAS\BSW\Dem\Dem.c	  5070          DEM_DET_REPORT_ERROR(DEM_REPORTERRORSTATUS_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  5071      }
; ..\EAS\BSW\Dem\Dem.c	  5072      else if(DEM_CFG_EVENT_KIND(EventId) != DEM_EVENT_KIND_BSW)
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d1,[a15]16
.L3005:
	jne	d1,#0,.L354
.L3006:

; ..\EAS\BSW\Dem\Dem.c	  5073      {
; ..\EAS\BSW\Dem\Dem.c	  5074          DEM_DET_REPORT_ERROR(DEM_REPORTERRORSTATUS_APIID, DEM_E_WRONG_CONFIGURATION);
; ..\EAS\BSW\Dem\Dem.c	  5075      }
; ..\EAS\BSW\Dem\Dem.c	  5076      else if((Dem_State == DEM_PREINIT) \ 
	jne	d0,#1,.L355
.L3007:

; ..\EAS\BSW\Dem\Dem.c	  5077              && (DEM_CFG_EVENT_REPBEHAVIOR(EventId) != DEM_REPORT_BEFORE_INIT))
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]19
.L3008:
	jne	d0,#2,.L356
.L355:

; ..\EAS\BSW\Dem\Dem.c	  5078      {
; ..\EAS\BSW\Dem\Dem.c	  5079          DEM_DET_REPORT_ERROR(DEM_REPORTERRORSTATUS_APIID, DEM_E_WRONG_CONFIGURATION);
; ..\EAS\BSW\Dem\Dem.c	  5080      }
; ..\EAS\BSW\Dem\Dem.c	  5081  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  5082      else if((Dem_State == DEM_PREINIT) \ 
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3009:
	jne	d15,#1,.L357
.L3010:

; ..\EAS\BSW\Dem\Dem.c	  5083              && (DEM_CFG_EVENT_DBC(EventId) != NULL_PTR)
	mul	d0,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.w	d15,[a15]20
.L3011:
	jeq	d15,#0,.L358
.L3012:

; ..\EAS\BSW\Dem\Dem.c	  5084              && (DEM_CFG_EVENT_DBC_STORAGE(EventId) == TRUE))
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]20
	ld.bu	d0,[a15]16
.L3013:
	jeq	d0,#1,.L359
.L358:
.L357:

; ..\EAS\BSW\Dem\Dem.c	  5085      {
; ..\EAS\BSW\Dem\Dem.c	  5086          /*SWS_Dem_00676*//*SWS_Dem_00518*/
; ..\EAS\BSW\Dem\Dem.c	  5087          DEM_DET_REPORT_ERROR(DEM_REPORTERRORSTATUS_APIID, DEM_E_WRONG_CONDITION);
; ..\EAS\BSW\Dem\Dem.c	  5088      }
; ..\EAS\BSW\Dem\Dem.c	  5089  #endif
; ..\EAS\BSW\Dem\Dem.c	  5090  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  5091      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  5092      else if(Dem_EventAvailable[EventId] == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  5093      {
; ..\EAS\BSW\Dem\Dem.c	  5094          /*SWS_Dem_01108*/
; ..\EAS\BSW\Dem\Dem.c	  5095      }
; ..\EAS\BSW\Dem\Dem.c	  5096  #endif
; ..\EAS\BSW\Dem\Dem.c	  5097      else if(((EventStatus == DEM_EVENT_STATUS_PREPASSED) \ 
	jeq	d5,#2,.L360
.L3014:

; ..\EAS\BSW\Dem\Dem.c	  5098               || (EventStatus == DEM_EVENT_STATUS_PREFAILED)) \ 
	jne	d5,#3,.L361
.L360:

; ..\EAS\BSW\Dem\Dem.c	  5099              && (DEM_CFG_EVENT_GET_FDC_FNC(EventId) != NULL_PTR))
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]28
.L3015:
	jne	d15,#0,.L362
.L361:

; ..\EAS\BSW\Dem\Dem.c	  5100      {
; ..\EAS\BSW\Dem\Dem.c	  5101          /*SWS_Dem_00437*/
; ..\EAS\BSW\Dem\Dem.c	  5102      }
; ..\EAS\BSW\Dem\Dem.c	  5103      else
; ..\EAS\BSW\Dem\Dem.c	  5104      {
; ..\EAS\BSW\Dem\Dem.c	  5105  #if(DEM_NUM_OF_EN_GROUP > 0)
; ..\EAS\BSW\Dem\Dem.c	  5106          /*SWS_Dem_00447*//*SWS_Dem_00449*//*SWS_Dem_00450*/
; ..\EAS\BSW\Dem\Dem.c	  5107          if(DEM_CFG_EVENT_EN(EventId) != NULL_PTR)
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]8
.L3016:
	jeq	d15,#0,.L363
.L3017:

; ..\EAS\BSW\Dem\Dem.c	  5108          {
; ..\EAS\BSW\Dem\Dem.c	  5109              for(i = 0; i < DEM_CFG_EVENT_EN_NUM(EventId); i++)
	mov	d0,d2
.L2483:
	j	.L364
.L365:

; ..\EAS\BSW\Dem\Dem.c	  5110              {
; ..\EAS\BSW\Dem\Dem.c	  5111                  if(Dem_EventEnCondition[(DEM_CFG_EVENT_EN_REF(EventId)[i])] != TRUE)
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]8
	ld.a	a15,[a15]4
.L3018:
	addsc.a	a15,a15,d0,#0
	ld.bu	d15,[a15]
.L3019:
	movh.a	a15,#@his(Dem_EventEnCondition)
	lea	a15,[a15]@los(Dem_EventEnCondition)
.L3020:
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L3021:
	jeq	d15,#1,.L366
.L3022:

; ..\EAS\BSW\Dem\Dem.c	  5112                  {
; ..\EAS\BSW\Dem\Dem.c	  5113                      ret = E_NOT_OK;
	mov	d2,#1
.L3023:

; ..\EAS\BSW\Dem\Dem.c	  5114                      break;
	j	.L367
.L366:
	add	d0,#1
.L2484:
	extr.u	d0,d0,#0,#8
.L364:
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]8
	ld.bu	d15,[a15]
.L3024:
	jlt.u	d0,d15,.L365

; ..\EAS\BSW\Dem\Dem.c	  5115                  }
; ..\EAS\BSW\Dem\Dem.c	  5116              }
; ..\EAS\BSW\Dem\Dem.c	  5117          }
.L367:
.L363:

; ..\EAS\BSW\Dem\Dem.c	  5118          if(ret == E_OK)
	jne	d2,#0,.L368
.L3025:

; ..\EAS\BSW\Dem\Dem.c	  5119  #endif
; ..\EAS\BSW\Dem\Dem.c	  5120          {
; ..\EAS\BSW\Dem\Dem.c	  5121  #if(DEM_CFG_BSWERRORBUFFERSIZE > 0)
; ..\EAS\BSW\Dem\Dem.c	  5122              for(i = 0; i < DEM_CFG_BSWERRORBUFFERSIZE; i++)
	mov	d15,#0
.L2485:

; ..\EAS\BSW\Dem\Dem.c	  5123              {
; ..\EAS\BSW\Dem\Dem.c	  5124                  if(Dem_BswErrorQueue[i] == DEM_DATA_INVALID_U16)
	mov.u	d0,#65535
.L3026:
	j	.L369
.L370:
	movh.a	a15,#@his(Dem_BswErrorQueue)
	lea	a15,[a15]@los(Dem_BswErrorQueue)
.L3027:
	addsc.a	a15,a15,d15,#1
	ld.hu	d1,[a15]0
.L3028:
	jne	d1,d0,.L371
.L3029:

; ..\EAS\BSW\Dem\Dem.c	  5125                  {
; ..\EAS\BSW\Dem\Dem.c	  5126                      Dem_BswErrorQueue[i] = EventId;
	movh.a	a15,#@his(Dem_BswErrorQueue)
	lea	a15,[a15]@los(Dem_BswErrorQueue)
.L3030:
	addsc.a	a15,a15,d15,#1
.L3031:
	st.h	[a15],d4
.L3032:

; ..\EAS\BSW\Dem\Dem.c	  5127                      Dem_BswErrorStatus[i] = EventStatus;
	movh.a	a15,#@his(Dem_BswErrorStatus)
	lea	a15,[a15]@los(Dem_BswErrorStatus)
.L3033:
	addsc.a	a15,a15,d15,#0
.L3034:
	st.b	[a15],d5
.L368:
.L362:
.L359:
.L356:
.L354:
.L353:
.L352:

; ..\EAS\BSW\Dem\Dem.c	  5128                      break;
; ..\EAS\BSW\Dem\Dem.c	  5129                  }
; ..\EAS\BSW\Dem\Dem.c	  5130              }
; ..\EAS\BSW\Dem\Dem.c	  5131  #endif
; ..\EAS\BSW\Dem\Dem.c	  5132          }
; ..\EAS\BSW\Dem\Dem.c	  5133      }
; ..\EAS\BSW\Dem\Dem.c	  5134  }
	ret
.L371:
	add	d15,#1
.L369:
	jlt.u	d15,#8,.L370
.L3035:
	ret
.L1608:
	
__Dem_ReportErrorStatus_function_end:
	.size	Dem_ReportErrorStatus,__Dem_ReportErrorStatus_function_end-Dem_ReportErrorStatus
.L1112:
	; End of function
	
	.sdecl	'.text.Dem.Dem_SetEventStatus',code,cluster('Dem_SetEventStatus')
	.sect	'.text.Dem.Dem_SetEventStatus'
	.align	2
	
	.global	Dem_SetEventStatus

; ..\EAS\BSW\Dem\Dem.c	  5135  
; ..\EAS\BSW\Dem\Dem.c	  5136  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  5137      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  5138  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  5139  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5140  * Function Name: Dem_SetEventAvailable
; ..\EAS\BSW\Dem\Dem.c	  5141  *
; ..\EAS\BSW\Dem\Dem.c	  5142  * Description: Set the available status of a specific Event.
; ..\EAS\BSW\Dem\Dem.c	  5143  *
; ..\EAS\BSW\Dem\Dem.c	  5144  * Inputs: EventId: Identification of an event by assigned EventId.
; ..\EAS\BSW\Dem\Dem.c	  5145  *         AvailableStatus: This parameter specifies whether the respective
; ..\EAS\BSW\Dem\Dem.c	  5146  *                          Event shall be available (TRUE) or not (FALSE).
; ..\EAS\BSW\Dem\Dem.c	  5147  *
; ..\EAS\BSW\Dem\Dem.c	  5148  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  5149  *
; ..\EAS\BSW\Dem\Dem.c	  5150  * Return: E_OK: Operation was successful.
; ..\EAS\BSW\Dem\Dem.c	  5151  *         E_NOT_OK: change of available status not accepted
; ..\EAS\BSW\Dem\Dem.c	  5152  *
; ..\EAS\BSW\Dem\Dem.c	  5153  * Limitations: Non Reentrant
; ..\EAS\BSW\Dem\Dem.c	  5154  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5155  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  5156  /*SWS_Dem_00177*//*SWS_Dem_00687*/
; ..\EAS\BSW\Dem\Dem.c	  5157  FUNC(Std_ReturnType, DEM_CODE) Dem_SetEventAvailable
; ..\EAS\BSW\Dem\Dem.c	  5158  (
; ..\EAS\BSW\Dem\Dem.c	  5159      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  5160      boolean AvailableStatus
; ..\EAS\BSW\Dem\Dem.c	  5161  )
; ..\EAS\BSW\Dem\Dem.c	  5162  {
; ..\EAS\BSW\Dem\Dem.c	  5163      Std_ReturnType Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  5164      Dem_UdsStatusByteType EventOldStatus = DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId));
; ..\EAS\BSW\Dem\Dem.c	  5165  
; ..\EAS\BSW\Dem\Dem.c	  5166      if(Dem_State == DEM_UNINIT)
; ..\EAS\BSW\Dem\Dem.c	  5167      {
; ..\EAS\BSW\Dem\Dem.c	  5168          DEM_DET_REPORT_ERROR(DEM_SETEVENTAVAILABLE_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  5169          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  5170      }
; ..\EAS\BSW\Dem\Dem.c	  5171      else if((DEM_TEST_UDS_STATUS_TF(EventOldStatus))\ 
; ..\EAS\BSW\Dem\Dem.c	  5172          || (DEM_DTC_DATAENTRYREF(DEM_CFG_EVENT_DTCREF(EventId)) != DEM_DATA_INVALID_U16))
; ..\EAS\BSW\Dem\Dem.c	  5173      {
; ..\EAS\BSW\Dem\Dem.c	  5174          /*SWS_Dem_01109*/
; ..\EAS\BSW\Dem\Dem.c	  5175          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  5176      }
; ..\EAS\BSW\Dem\Dem.c	  5177      else
; ..\EAS\BSW\Dem\Dem.c	  5178      {
; ..\EAS\BSW\Dem\Dem.c	  5179          if(Dem_EventAvailable[EventId] == AvailableStatus)
; ..\EAS\BSW\Dem\Dem.c	  5180          {
; ..\EAS\BSW\Dem\Dem.c	  5181              /*state not changed*/
; ..\EAS\BSW\Dem\Dem.c	  5182              Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  5183          }
; ..\EAS\BSW\Dem\Dem.c	  5184          else if(AvailableStatus == TRUE)
; ..\EAS\BSW\Dem\Dem.c	  5185          {
; ..\EAS\BSW\Dem\Dem.c	  5186              Dem_EventAvailable[EventId] = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  5187              /*SWS_Dem_01111*/
; ..\EAS\BSW\Dem\Dem.c	  5188              DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId)) = DEM_STATUS_RESET;
; ..\EAS\BSW\Dem\Dem.c	  5189              (void)DEM_CFG_DTC_STATUSCHANGED_CALLFNC(DEM_CFG_DTC_VALUE(DEM_CFG_EVENT_DTCREF(EventId)), DEM_DATA_CLEAR, DEM_STATUS_RESET);
; ..\EAS\BSW\Dem\Dem.c	  5190              if(DEM_CFG_EVENT_STATUSCHANGED_CALLFNC(EventId) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  5191              {
; ..\EAS\BSW\Dem\Dem.c	  5192                  /*SWS_Dem_00016*/
; ..\EAS\BSW\Dem\Dem.c	  5193                  (void)DEM_CFG_EVENT_STATUSCHANGED_CALLFNC(EventId)(DEM_DATA_CLEAR, DEM_STATUS_RESET);
; ..\EAS\BSW\Dem\Dem.c	  5194              }
; ..\EAS\BSW\Dem\Dem.c	  5195  #if(DEM_CFG_TRIGGER_FIM_REPORTS == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  5196              FiM_DemTriggerOnEventStatus(EventId, DEM_DATA_CLEAR, DEM_STATUS_RESET);
; ..\EAS\BSW\Dem\Dem.c	  5197  #endif
; ..\EAS\BSW\Dem\Dem.c	  5198          }
; ..\EAS\BSW\Dem\Dem.c	  5199          else
; ..\EAS\BSW\Dem\Dem.c	  5200          {
; ..\EAS\BSW\Dem\Dem.c	  5201              /*SWS_Dem_01108*/
; ..\EAS\BSW\Dem\Dem.c	  5202              Dem_EventAvailable[EventId] = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  5203              /*SWS_Dem_01110*/
; ..\EAS\BSW\Dem\Dem.c	  5204              DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId)) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  5205              (void)DEM_CFG_DTC_STATUSCHANGED_CALLFNC(DEM_CFG_DTC_VALUE(DEM_CFG_EVENT_DTCREF(EventId)), EventOldStatus, DEM_DATA_CLEAR);
; ..\EAS\BSW\Dem\Dem.c	  5206              if(DEM_CFG_EVENT_STATUSCHANGED_CALLFNC(EventId) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  5207              {
; ..\EAS\BSW\Dem\Dem.c	  5208                  /*SWS_Dem_00016*/
; ..\EAS\BSW\Dem\Dem.c	  5209                  (void)DEM_CFG_EVENT_STATUSCHANGED_CALLFNC(EventId)(EventOldStatus, DEM_DATA_CLEAR);
; ..\EAS\BSW\Dem\Dem.c	  5210              }
; ..\EAS\BSW\Dem\Dem.c	  5211  #if(DEM_CFG_TRIGGER_FIM_REPORTS == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  5212              FiM_DemTriggerOnEventStatus(EventId, EventOldStatus, DEM_DATA_CLEAR);
; ..\EAS\BSW\Dem\Dem.c	  5213  #endif
; ..\EAS\BSW\Dem\Dem.c	  5214          }
; ..\EAS\BSW\Dem\Dem.c	  5215      }
; ..\EAS\BSW\Dem\Dem.c	  5216  
; ..\EAS\BSW\Dem\Dem.c	  5217      return Result;
; ..\EAS\BSW\Dem\Dem.c	  5218  }
; ..\EAS\BSW\Dem\Dem.c	  5219  #endif/*#if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  5220      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))*/
; ..\EAS\BSW\Dem\Dem.c	  5221  
; ..\EAS\BSW\Dem\Dem.c	  5222  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  5223  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5224  * Function Name: Dem_SetEventStatus
; ..\EAS\BSW\Dem\Dem.c	  5225  *
; ..\EAS\BSW\Dem\Dem.c	  5226  * Description: Processes the events reported by SW-Cs via RTE. This API can only
; ..\EAS\BSW\Dem\Dem.c	  5227  *              be used through the RTE, and therefore no declaration is exported
; ..\EAS\BSW\Dem\Dem.c	  5228  *              via Dem.h. Some bits of the UDS DTC status byte changes
; ..\EAS\BSW\Dem\Dem.c	  5229  *              synchronously or asynchronously (refer to SWS_Dem_00036 and
; ..\EAS\BSW\Dem\Dem.c	  5230  *              SWS_Dem_00379).OBD Events Suppression shall be ignored for this
; ..\EAS\BSW\Dem\Dem.c	  5231  *              computation.
; ..\EAS\BSW\Dem\Dem.c	  5232  *
; ..\EAS\BSW\Dem\Dem.c	  5233  * Inputs: EventId: Identification of an event by assigned EventId.
; ..\EAS\BSW\Dem\Dem.c	  5234  *         EventStatus: Monitor test result
; ..\EAS\BSW\Dem\Dem.c	  5235  *
; ..\EAS\BSW\Dem\Dem.c	  5236  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  5237  *
; ..\EAS\BSW\Dem\Dem.c	  5238  * Return: E_OK: set of event status was successful.
; ..\EAS\BSW\Dem\Dem.c	  5239  *         E_NOT_OK: set of event status failed or could not be accepted.
; ..\EAS\BSW\Dem\Dem.c	  5240  *                   (e.g.: the operation cycle configured for this event has not
; ..\EAS\BSW\Dem\Dem.c	  5241  *                   been started,an according enable condition has been disabled)
; ..\EAS\BSW\Dem\Dem.c	  5242  *
; ..\EAS\BSW\Dem\Dem.c	  5243  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  5244  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5245  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  5246  FUNC(Std_ReturnType, DEM_CODE) Dem_SetEventStatus
; Function Dem_SetEventStatus
.L967:
Dem_SetEventStatus:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  5247  (
; ..\EAS\BSW\Dem\Dem.c	  5248      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  5249      Dem_EventStatusType EventStatus
; ..\EAS\BSW\Dem\Dem.c	  5250  )
; ..\EAS\BSW\Dem\Dem.c	  5251  {
; ..\EAS\BSW\Dem\Dem.c	  5252      Std_ReturnType Result = E_NOT_OK;
	mov	d8,#1
.L2486:

; ..\EAS\BSW\Dem\Dem.c	  5253  #if(DEM_NUM_OF_EN_CONDITION > 0)
; ..\EAS\BSW\Dem\Dem.c	  5254      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	  5255  #endif
; ..\EAS\BSW\Dem\Dem.c	  5256  
; ..\EAS\BSW\Dem\Dem.c	  5257      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d0,[a15]@los(Dem_State)
.L3040:
	jne	d0,#2,.L373
.L3041:

; ..\EAS\BSW\Dem\Dem.c	  5258      {
; ..\EAS\BSW\Dem\Dem.c	  5259          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  5260          DEM_DET_REPORT_ERROR(DEM_SETEVENTSTATUS_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  5261      }
; ..\EAS\BSW\Dem\Dem.c	  5262      else if(EventId >= DEM_NUM_OF_EVENT)
	mov	d15,#116
.L3042:
	jge.u	d4,d15,.L374
.L3043:

; ..\EAS\BSW\Dem\Dem.c	  5263      {
; ..\EAS\BSW\Dem\Dem.c	  5264          DEM_DET_REPORT_ERROR(DEM_SETEVENTSTATUS_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  5265      }
; ..\EAS\BSW\Dem\Dem.c	  5266      else if(DEM_CFG_EVENT_KIND(EventId) != DEM_EVENT_KIND_SWC)
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]16
.L3044:
	jne	d0,#1,.L375
.L3045:

; ..\EAS\BSW\Dem\Dem.c	  5267      {
; ..\EAS\BSW\Dem\Dem.c	  5268          DEM_DET_REPORT_ERROR(DEM_SETEVENTSTATUS_APIID, DEM_E_WRONG_CONFIGURATION);
; ..\EAS\BSW\Dem\Dem.c	  5269      }
; ..\EAS\BSW\Dem\Dem.c	  5270  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  5271      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  5272      else if(Dem_EventAvailable[EventId] == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  5273      {
; ..\EAS\BSW\Dem\Dem.c	  5274          /*SWS_Dem_01108*/
; ..\EAS\BSW\Dem\Dem.c	  5275      }
; ..\EAS\BSW\Dem\Dem.c	  5276  #endif
; ..\EAS\BSW\Dem\Dem.c	  5277      else if(((EventStatus == DEM_EVENT_STATUS_PREPASSED) \ 
	jeq	d5,#2,.L376
.L3046:

; ..\EAS\BSW\Dem\Dem.c	  5278               || (EventStatus == DEM_EVENT_STATUS_PREFAILED)) \ 
	jne	d5,#3,.L377
.L376:

; ..\EAS\BSW\Dem\Dem.c	  5279              && (DEM_CFG_EVENT_GET_FDC_FNC(EventId) != NULL_PTR))
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]28
.L3047:
	jne	d15,#0,.L378
.L377:

; ..\EAS\BSW\Dem\Dem.c	  5280      {
; ..\EAS\BSW\Dem\Dem.c	  5281          /*SWS_Dem_00437*/
; ..\EAS\BSW\Dem\Dem.c	  5282      }
; ..\EAS\BSW\Dem\Dem.c	  5283      else
; ..\EAS\BSW\Dem\Dem.c	  5284      {
; ..\EAS\BSW\Dem\Dem.c	  5285          Result = E_OK;
	mov	d8,#0
.L3048:

; ..\EAS\BSW\Dem\Dem.c	  5286  
; ..\EAS\BSW\Dem\Dem.c	  5287  #if(DEM_NUM_OF_EN_GROUP > 0)
; ..\EAS\BSW\Dem\Dem.c	  5288          /*SWS_Dem_00447*//*SWS_Dem_00449*//*SWS_Dem_00450*/
; ..\EAS\BSW\Dem\Dem.c	  5289          if(DEM_CFG_EVENT_EN(EventId) != NULL_PTR)
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]8
.L3049:
	jeq	d15,#0,.L379
.L3050:

; ..\EAS\BSW\Dem\Dem.c	  5290          {
; ..\EAS\BSW\Dem\Dem.c	  5291              for(i = 0; i < DEM_CFG_EVENT_EN_NUM(EventId); i++)
	mov	d0,d8
.L2487:
	j	.L380
.L381:

; ..\EAS\BSW\Dem\Dem.c	  5292              {
; ..\EAS\BSW\Dem\Dem.c	  5293                  if(Dem_EventEnCondition[(DEM_CFG_EVENT_EN_REF(EventId)[i])] != TRUE)
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]8
	ld.a	a15,[a15]4
.L3051:
	addsc.a	a15,a15,d0,#0
	ld.bu	d15,[a15]
.L3052:
	movh.a	a15,#@his(Dem_EventEnCondition)
	lea	a15,[a15]@los(Dem_EventEnCondition)
.L3053:
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L3054:
	jeq	d15,#1,.L382
.L3055:

; ..\EAS\BSW\Dem\Dem.c	  5294                  {
; ..\EAS\BSW\Dem\Dem.c	  5295                      Result = E_NOT_OK;
	mov	d8,#1
.L3056:

; ..\EAS\BSW\Dem\Dem.c	  5296                      break;
	j	.L383
.L382:
	add	d0,#1
.L2488:
	extr.u	d0,d0,#0,#8
.L380:
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]8
	ld.bu	d15,[a15]
.L3057:
	jlt.u	d0,d15,.L381

; ..\EAS\BSW\Dem\Dem.c	  5297                  }
; ..\EAS\BSW\Dem\Dem.c	  5298              }
; ..\EAS\BSW\Dem\Dem.c	  5299          }
.L383:
.L379:

; ..\EAS\BSW\Dem\Dem.c	  5300          if(Result == E_OK)
	jne	d8,#0,.L384
.L3058:

; ..\EAS\BSW\Dem\Dem.c	  5301  #endif
; ..\EAS\BSW\Dem\Dem.c	  5302          {
; ..\EAS\BSW\Dem\Dem.c	  5303              DemInternal_SetEventStatus(EventId, EventStatus);
	call	DemInternal_SetEventStatus
.L384:
.L378:
.L375:
.L374:
.L373:

; ..\EAS\BSW\Dem\Dem.c	  5304          }
; ..\EAS\BSW\Dem\Dem.c	  5305      }
; ..\EAS\BSW\Dem\Dem.c	  5306      return Result;
	mov	d2,d8
.L2489:

; ..\EAS\BSW\Dem\Dem.c	  5307  }
	ret
.L1613:
	
__Dem_SetEventStatus_function_end:
	.size	Dem_SetEventStatus,__Dem_SetEventStatus_function_end-Dem_SetEventStatus
.L1117:
	; End of function
	
	.sdecl	'.text.Dem.Dem_ResetEventDebounceStatus',code,cluster('Dem_ResetEventDebounceStatus')
	.sect	'.text.Dem.Dem_ResetEventDebounceStatus'
	.align	2
	
	.global	Dem_ResetEventDebounceStatus

; ..\EAS\BSW\Dem\Dem.c	  5308  
; ..\EAS\BSW\Dem\Dem.c	  5309  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  5310  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5311  * Function Name: Dem_ResetEventDebounceStatus
; ..\EAS\BSW\Dem\Dem.c	  5312  *
; ..\EAS\BSW\Dem\Dem.c	  5313  * Description: Control the internal debounce counter/timer by BSW modules and SWCs.
; ..\EAS\BSW\Dem\Dem.c	  5314  *              The event qualification will not be affected by these debounce state
; ..\EAS\BSW\Dem\Dem.c	  5315  *              changes. This API is available for BSW modules as soon as Dem_PreInit
; ..\EAS\BSW\Dem\Dem.c	  5316  *              has been completed
; ..\EAS\BSW\Dem\Dem.c	  5317  *
; ..\EAS\BSW\Dem\Dem.c	  5318  * Inputs: EventId: Identification of an event by assigned EventId.
; ..\EAS\BSW\Dem\Dem.c	  5319  *         DebounceResetStatus: Freeze or reset the internal debounce counter/timer
; ..\EAS\BSW\Dem\Dem.c	  5320  *                              of the specified event.
; ..\EAS\BSW\Dem\Dem.c	  5321  *
; ..\EAS\BSW\Dem\Dem.c	  5322  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  5323  *
; ..\EAS\BSW\Dem\Dem.c	  5324  * Return: E_OK: Operation was successful
; ..\EAS\BSW\Dem\Dem.c	  5325  *         E_NOT_OK: Only on development error
; ..\EAS\BSW\Dem\Dem.c	  5326  *
; ..\EAS\BSW\Dem\Dem.c	  5327  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  5328  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5329  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  5330  FUNC(Std_ReturnType, DEM_CODE) Dem_ResetEventDebounceStatus
; Function Dem_ResetEventDebounceStatus
.L969:
Dem_ResetEventDebounceStatus:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  5331  (
; ..\EAS\BSW\Dem\Dem.c	  5332      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  5333      Dem_DebounceResetStatusType DebounceResetStatus
; ..\EAS\BSW\Dem\Dem.c	  5334  )
; ..\EAS\BSW\Dem\Dem.c	  5335  {
; ..\EAS\BSW\Dem\Dem.c	  5336      Std_ReturnType Result = E_OK;
	mov	d2,#0
.L2490:

; ..\EAS\BSW\Dem\Dem.c	  5337  
; ..\EAS\BSW\Dem\Dem.c	  5338      if(Dem_State == DEM_UNINIT)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3063:
	jeq	d15,#0,.L386
.L3064:

; ..\EAS\BSW\Dem\Dem.c	  5339      {
; ..\EAS\BSW\Dem\Dem.c	  5340          /*SWS_Dem_00364*/
; ..\EAS\BSW\Dem\Dem.c	  5341          DEM_DET_REPORT_ERROR(DEM_RESETEVENTDEBOUNCESTATUS_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  5342          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  5343      }
; ..\EAS\BSW\Dem\Dem.c	  5344  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  5345      else if((Dem_State != DEM_NORMAL) && (DEM_CFG_EVENT_DBC_STORAGE(EventId) == TRUE))
	jeq	d15,#2,.L387
.L3065:
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]20
	ld.bu	d15,[a15]16
.L3066:
	jeq	d15,#1,.L388
.L387:

; ..\EAS\BSW\Dem\Dem.c	  5346      {
; ..\EAS\BSW\Dem\Dem.c	  5347          /*SWS_Dem_00676*//*SWS_Dem_00518*/
; ..\EAS\BSW\Dem\Dem.c	  5348          DEM_DET_REPORT_ERROR(DEM_RESETEVENTDEBOUNCESTATUS_APIID, DEM_E_WRONG_CONDITION);
; ..\EAS\BSW\Dem\Dem.c	  5349          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  5350      }
; ..\EAS\BSW\Dem\Dem.c	  5351  #endif
; ..\EAS\BSW\Dem\Dem.c	  5352  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  5353      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  5354      else if(Dem_EventAvailable[EventId] == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  5355      {
; ..\EAS\BSW\Dem\Dem.c	  5356          /*SWS_Dem_01108*/
; ..\EAS\BSW\Dem\Dem.c	  5357          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  5358      }
; ..\EAS\BSW\Dem\Dem.c	  5359  #endif
; ..\EAS\BSW\Dem\Dem.c	  5360      else
; ..\EAS\BSW\Dem\Dem.c	  5361      {
; ..\EAS\BSW\Dem\Dem.c	  5362          if(DebounceResetStatus == DEM_DEBOUNCE_STATUS_FREEZE)
	jne	d5,#0,.L389
.L3067:

; ..\EAS\BSW\Dem\Dem.c	  5363          {
; ..\EAS\BSW\Dem\Dem.c	  5364              /*SWS_Dem_00685*/
; ..\EAS\BSW\Dem\Dem.c	  5365  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  5366              Dem_EventDBTFreezeFlag[EventId] = TRUE;
	movh.a	a15,#@his(Dem_EventDBTFreezeFlag)
	lea	a15,[a15]@los(Dem_EventDBTFreezeFlag)
.L3068:
	addsc.a	a15,a15,d4,#0
.L3069:
	mov	d15,#1
.L3070:
	st.b	[a15],d15
.L3071:

; ..\EAS\BSW\Dem\Dem.c	  5367  #endif
; ..\EAS\BSW\Dem\Dem.c	  5368          }
; ..\EAS\BSW\Dem\Dem.c	  5369          else if(DebounceResetStatus == DEM_DEBOUNCE_STATUS_RESET)
; ..\EAS\BSW\Dem\Dem.c	  5370          {
; ..\EAS\BSW\Dem\Dem.c	  5371              /*SWS_Dem_00684*/
; ..\EAS\BSW\Dem\Dem.c	  5372  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  5373              DEM_EVENT_DBC(EventId) = 0;
; ..\EAS\BSW\Dem\Dem.c	  5374  #endif
; ..\EAS\BSW\Dem\Dem.c	  5375  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  5376              DEM_EVENT_DBT(EventId) = 0;
; ..\EAS\BSW\Dem\Dem.c	  5377              DEM_EVENT_TIMERDIRECTION(EventId) = DEM_DATA_INVALID_U8;
; ..\EAS\BSW\Dem\Dem.c	  5378              Dem_EventDBTFreezeFlag[EventId] = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  5379  #endif
; ..\EAS\BSW\Dem\Dem.c	  5380          }
; ..\EAS\BSW\Dem\Dem.c	  5381          else
; ..\EAS\BSW\Dem\Dem.c	  5382          {
; ..\EAS\BSW\Dem\Dem.c	  5383              Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  5384          }
; ..\EAS\BSW\Dem\Dem.c	  5385      }
; ..\EAS\BSW\Dem\Dem.c	  5386      return Result;
; ..\EAS\BSW\Dem\Dem.c	  5387  }
	ret
.L389:
	jne	d5,#1,.L391
.L3072:
	sha	d15,d4,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L3073:
	mov	d0,d2
.L2491:
	st.h	[a15]10,d0
.L3074:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L3075:
	st.w	[a15]12,d0
.L3076:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L3077:
	mov	d15,#255
.L3078:
	st.b	[a15]16,d15
.L3079:
	movh.a	a15,#@his(Dem_EventDBTFreezeFlag)
	lea	a15,[a15]@los(Dem_EventDBTFreezeFlag)
.L3080:
	addsc.a	a15,a15,d4,#0
.L3081:
	st.b	[a15],d0
.L3082:
	ret
.L391:
.L388:
.L386:
	mov	d2,#1
.L3083:
	ret
.L1618:
	
__Dem_ResetEventDebounceStatus_function_end:
	.size	Dem_ResetEventDebounceStatus,__Dem_ResetEventDebounceStatus_function_end-Dem_ResetEventDebounceStatus
.L1122:
	; End of function
	
	.sdecl	'.text.Dem.Dem_ResetEventStatus',code,cluster('Dem_ResetEventStatus')
	.sect	'.text.Dem.Dem_ResetEventStatus'
	.align	2
	
	.global	Dem_ResetEventStatus

; ..\EAS\BSW\Dem\Dem.c	  5388  
; ..\EAS\BSW\Dem\Dem.c	  5389  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  5390  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5391  * Function Name: Dem_ResetEventStatus
; ..\EAS\BSW\Dem\Dem.c	  5392  *
; ..\EAS\BSW\Dem\Dem.c	  5393  * Description: Resets the event failed status. This API can only be used through
; ..\EAS\BSW\Dem\Dem.c	  5394  *              the RTE and therefore no declaration is exported via Dem.h.
; ..\EAS\BSW\Dem\Dem.c	  5395  *
; ..\EAS\BSW\Dem\Dem.c	  5396  * Inputs: EventId: Identification of an event by assigned EventId.
; ..\EAS\BSW\Dem\Dem.c	  5397  *
; ..\EAS\BSW\Dem\Dem.c	  5398  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  5399  *
; ..\EAS\BSW\Dem\Dem.c	  5400  * Return: E_OK: reset of event status was successful
; ..\EAS\BSW\Dem\Dem.c	  5401  *         E_NOT_OK: reset of event status failed or is not allowed,because the
; ..\EAS\BSW\Dem\Dem.c	  5402  *                   event is already tested in this operation cycle
; ..\EAS\BSW\Dem\Dem.c	  5403  *
; ..\EAS\BSW\Dem\Dem.c	  5404  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  5405  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5406  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  5407  FUNC(Std_ReturnType, DEM_CODE) Dem_ResetEventStatus
; Function Dem_ResetEventStatus
.L971:
Dem_ResetEventStatus:	.type	func
	mov	d8,d4
.L2493:

; ..\EAS\BSW\Dem\Dem.c	  5408  (
; ..\EAS\BSW\Dem\Dem.c	  5409      Dem_EventIdType EventId
; ..\EAS\BSW\Dem\Dem.c	  5410  )
; ..\EAS\BSW\Dem\Dem.c	  5411  {
; ..\EAS\BSW\Dem\Dem.c	  5412      Std_ReturnType Result = E_OK;
	mov	d9,#0
.L2494:

; ..\EAS\BSW\Dem\Dem.c	  5413      uint8 EventOldStatus;
; ..\EAS\BSW\Dem\Dem.c	  5414      uint8 EventNewStatus;
; ..\EAS\BSW\Dem\Dem.c	  5415  
; ..\EAS\BSW\Dem\Dem.c	  5416      if(Dem_State == DEM_UNINIT)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d0,[a15]@los(Dem_State)
.L3088:
	jeq	d0,#0,.L394
.L3089:

; ..\EAS\BSW\Dem\Dem.c	  5417      {
; ..\EAS\BSW\Dem\Dem.c	  5418          /*SWS_Dem_01112*/
; ..\EAS\BSW\Dem\Dem.c	  5419          DEM_DET_REPORT_ERROR(DEM_SETEVENTSTATUS_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  5420          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  5421      }
; ..\EAS\BSW\Dem\Dem.c	  5422      else if(EventId >= DEM_NUM_OF_EVENT)
	mov	d15,#116
.L3090:
	jge.u	d8,d15,.L395
.L3091:

; ..\EAS\BSW\Dem\Dem.c	  5423      {
; ..\EAS\BSW\Dem\Dem.c	  5424          DEM_DET_REPORT_ERROR(DEM_SETEVENTSTATUS_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  5425          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  5426      }
; ..\EAS\BSW\Dem\Dem.c	  5427  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  5428      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  5429      else if(Dem_EventAvailable[EventId] == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  5430      {
; ..\EAS\BSW\Dem\Dem.c	  5431          /*SWS_Dem_01108*/
; ..\EAS\BSW\Dem\Dem.c	  5432          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  5433      }
; ..\EAS\BSW\Dem\Dem.c	  5434  #endif
; ..\EAS\BSW\Dem\Dem.c	  5435      else if(Dem_EnableDtcSetting[EventId] == FALSE)
	movh.a	a15,#@his(Dem_EnableDtcSetting)
	lea	a15,[a15]@los(Dem_EnableDtcSetting)
.L3092:
	addsc.a	a15,a15,d8,#0
	ld.bu	d0,[a15]
.L3093:
	jeq	d0,#0,.L396
.L3094:

; ..\EAS\BSW\Dem\Dem.c	  5436      {
; ..\EAS\BSW\Dem\Dem.c	  5437          /*SWS_Dem_00518*/
; ..\EAS\BSW\Dem\Dem.c	  5438          DEM_DET_REPORT_ERROR(DEM_SETEVENTSTATUS_APIID, DEM_E_WRONG_CONDITION);
; ..\EAS\BSW\Dem\Dem.c	  5439          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  5440      }
; ..\EAS\BSW\Dem\Dem.c	  5441      else
; ..\EAS\BSW\Dem\Dem.c	  5442      {
; ..\EAS\BSW\Dem\Dem.c	  5443          EventOldStatus = DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId));
	mul	d15,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]4
	mul	d0,d0,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
	ld.bu	d10,[a15]1864
.L2495:

; ..\EAS\BSW\Dem\Dem.c	  5444          /*SWS_Dem_00638*//*SWS_Dem_00187*/
; ..\EAS\BSW\Dem\Dem.c	  5445          if(DEM_TEST_UDS_STATUS_TNCTOC(EventOldStatus))
	jz.t	d10:6,.L397
.L3095:

; ..\EAS\BSW\Dem\Dem.c	  5446          {
; ..\EAS\BSW\Dem\Dem.c	  5447              /*SWS_Dem_00386*/
; ..\EAS\BSW\Dem\Dem.c	  5448              EventNewStatus = DEM_CLEAR_UDS_STATUS_TF(EventOldStatus);
	and	d11,d10,#254
.L2496:

; ..\EAS\BSW\Dem\Dem.c	  5449  
; ..\EAS\BSW\Dem\Dem.c	  5450              DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId)) = EventNewStatus;
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]4
	mul	d0,d0,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
.L3096:
	st.b	[a15]1864,d11
.L3097:

; ..\EAS\BSW\Dem\Dem.c	  5451  
; ..\EAS\BSW\Dem\Dem.c	  5452              if(EventNewStatus != EventOldStatus)
	jeq	d11,d10,.L398
.L3098:

; ..\EAS\BSW\Dem\Dem.c	  5453              {
; ..\EAS\BSW\Dem\Dem.c	  5454                  (void)DEM_CFG_DTC_STATUSCHANGED_CALLFNC(DEM_CFG_DTC_VALUE(DEM_CFG_EVENT_DTCREF(EventId)), EventOldStatus, EventNewStatus);
	movh.a	a15,#@his(Dem_DtcStatusChangedNotificationArray)
	ld.a	a2,[a15]@los(Dem_DtcStatusChangedNotificationArray)
.L3099:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]4
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.w	d4,[a15]4
.L2492:
	mov	d5,d10
.L2497:
	mov	d6,d11
.L2499:
	calli	a2
.L2498:

; ..\EAS\BSW\Dem\Dem.c	  5455                  if(NULL_PTR != DEM_CFG_EVENT_STATUSCHANGED_CALLFNC(EventId))
	mov.a	a2,#0
.L3100:
	mul	d15,d8,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]44
.L3101:
	jeq.a	a2,a15,.L399
.L3102:

; ..\EAS\BSW\Dem\Dem.c	  5456                  {
; ..\EAS\BSW\Dem\Dem.c	  5457                      /*SWS_Dem_00016*/
; ..\EAS\BSW\Dem\Dem.c	  5458                      (void)DEM_CFG_EVENT_STATUSCHANGED_CALLFNC(EventId)(EventOldStatus, EventNewStatus);
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]44
.L3103:
	mov	e4,d11,d10
	calli	a15
.L399:

; ..\EAS\BSW\Dem\Dem.c	  5459                  }
; ..\EAS\BSW\Dem\Dem.c	  5460  #if(DEM_CFG_TRIGGER_FIM_REPORTS == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  5461                  FiM_DemTriggerOnEventStatus(EventId, EventOldStatus, EventNewStatus);
	mov	e4,d10,d8
	mov	d6,d11
.L2500:
	call	FiM_DemTriggerOnEventStatus
.L398:

; ..\EAS\BSW\Dem\Dem.c	  5462  #endif
; ..\EAS\BSW\Dem\Dem.c	  5463              }
; ..\EAS\BSW\Dem\Dem.c	  5464  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  5465              /* Reset debounce counter. */
; ..\EAS\BSW\Dem\Dem.c	  5466              DEM_EVENT_DBC(EventId) = 0;
	sha	d15,d8,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L3104:
	mov	d0,#0
.L3105:
	st.h	[a15]10,d0
.L3106:

; ..\EAS\BSW\Dem\Dem.c	  5467  #endif
; ..\EAS\BSW\Dem\Dem.c	  5468  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  5469              DEM_EVENT_DBT(EventId) = 0;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L3107:
	st.w	[a15]12,d0
.L3108:

; ..\EAS\BSW\Dem\Dem.c	  5470              DEM_EVENT_TIMERDIRECTION(EventId) = DEM_DATA_INVALID_U8;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L3109:
	mov	d15,#255
.L3110:
	st.b	[a15]16,d15
.L3111:

; ..\EAS\BSW\Dem\Dem.c	  5471              Dem_EventDBTFreezeFlag[EventId] = FALSE;
	movh.a	a15,#@his(Dem_EventDBTFreezeFlag)
	lea	a15,[a15]@los(Dem_EventDBTFreezeFlag)
.L3112:
	addsc.a	a15,a15,d8,#0
.L3113:
	st.b	[a15],d0
.L3114:
	j	.L400
.L397:
.L396:
.L395:
.L394:

; ..\EAS\BSW\Dem\Dem.c	  5472  #endif
; ..\EAS\BSW\Dem\Dem.c	  5473          }
; ..\EAS\BSW\Dem\Dem.c	  5474          else
; ..\EAS\BSW\Dem\Dem.c	  5475          {
; ..\EAS\BSW\Dem\Dem.c	  5476              Result = E_NOT_OK;
	mov	d9,#1
.L400:

; ..\EAS\BSW\Dem\Dem.c	  5477          }
; ..\EAS\BSW\Dem\Dem.c	  5478      }
; ..\EAS\BSW\Dem\Dem.c	  5479      return Result;
	mov	d2,d9
.L2501:

; ..\EAS\BSW\Dem\Dem.c	  5480  }
	ret
.L1622:
	
__Dem_ResetEventStatus_function_end:
	.size	Dem_ResetEventStatus,__Dem_ResetEventStatus_function_end-Dem_ResetEventStatus
.L1127:
	; End of function
	
	.sdecl	'.text.Dem.Dem_SetOperationCycleState',code,cluster('Dem_SetOperationCycleState')
	.sect	'.text.Dem.Dem_SetOperationCycleState'
	.align	2
	
	.global	Dem_SetOperationCycleState

; ..\EAS\BSW\Dem\Dem.c	  5481  
; ..\EAS\BSW\Dem\Dem.c	  5482  #if(DEM_CFG_MAXNUMBER_PRESTOREDFF > 0)
; ..\EAS\BSW\Dem\Dem.c	  5483  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  5484  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5485  * Function Name: Dem_PrestoreFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	  5486  *
; ..\EAS\BSW\Dem\Dem.c	  5487  * Description: Captures the freeze frame data for a specific event. This API can
; ..\EAS\BSW\Dem\Dem.c	  5488  *              only be used through the RTE and therefore no declaration is
; ..\EAS\BSW\Dem\Dem.c	  5489  *              exported via Dem.h.
; ..\EAS\BSW\Dem\Dem.c	  5490  *
; ..\EAS\BSW\Dem\Dem.c	  5491  * Inputs: EventId: Identification of an event by assigned EventId.
; ..\EAS\BSW\Dem\Dem.c	  5492  *
; ..\EAS\BSW\Dem\Dem.c	  5493  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  5494  *
; ..\EAS\BSW\Dem\Dem.c	  5495  * Return: E_OK: Freeze frame prestorage was successful
; ..\EAS\BSW\Dem\Dem.c	  5496  *         E_NOT_OK: Freeze frame prestorage failed
; ..\EAS\BSW\Dem\Dem.c	  5497  *
; ..\EAS\BSW\Dem\Dem.c	  5498  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  5499  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5500  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  5501  FUNC(Std_ReturnType, DEM_CODE) Dem_PrestoreFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	  5502  (
; ..\EAS\BSW\Dem\Dem.c	  5503      Dem_EventIdType EventId
; ..\EAS\BSW\Dem\Dem.c	  5504  )
; ..\EAS\BSW\Dem\Dem.c	  5505  {
; ..\EAS\BSW\Dem\Dem.c	  5506      /*SWS_Dem_00334*//*SWS_Dem_00189*/
; ..\EAS\BSW\Dem\Dem.c	  5507      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  5508  
; ..\EAS\BSW\Dem\Dem.c	  5509  
; ..\EAS\BSW\Dem\Dem.c	  5510      return Result;
; ..\EAS\BSW\Dem\Dem.c	  5511  }
; ..\EAS\BSW\Dem\Dem.c	  5512  
; ..\EAS\BSW\Dem\Dem.c	  5513  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  5514  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5515  * Function Name: Dem_ClearPrestoredFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	  5516  *
; ..\EAS\BSW\Dem\Dem.c	  5517  * Description: Clears a prestored freeze frame of a specific event. This API can
; ..\EAS\BSW\Dem\Dem.c	  5518  *              only be used through the RTE and therefore no declaration is
; ..\EAS\BSW\Dem\Dem.c	  5519  *              exported via Dem.h.
; ..\EAS\BSW\Dem\Dem.c	  5520  *
; ..\EAS\BSW\Dem\Dem.c	  5521  * Inputs: EventId: Identification of an event by assigned EventId.
; ..\EAS\BSW\Dem\Dem.c	  5522  *
; ..\EAS\BSW\Dem\Dem.c	  5523  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  5524  *
; ..\EAS\BSW\Dem\Dem.c	  5525  * Return: E_OK: Clear prestored freeze frame was successful
; ..\EAS\BSW\Dem\Dem.c	  5526  *         E_NOT_OK: Clear prestored freeze frame failed
; ..\EAS\BSW\Dem\Dem.c	  5527  *
; ..\EAS\BSW\Dem\Dem.c	  5528  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  5529  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5530  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  5531  FUNC(Std_ReturnType, DEM_CODE) Dem_ClearPrestoredFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	  5532  (
; ..\EAS\BSW\Dem\Dem.c	  5533      Dem_EventIdType EventId
; ..\EAS\BSW\Dem\Dem.c	  5534  )
; ..\EAS\BSW\Dem\Dem.c	  5535  {
; ..\EAS\BSW\Dem\Dem.c	  5536      /*SWS_Dem_00334*//*SWS_Dem_00050*/
; ..\EAS\BSW\Dem\Dem.c	  5537      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  5538  
; ..\EAS\BSW\Dem\Dem.c	  5539  
; ..\EAS\BSW\Dem\Dem.c	  5540      return Result;
; ..\EAS\BSW\Dem\Dem.c	  5541  }
; ..\EAS\BSW\Dem\Dem.c	  5542  #endif
; ..\EAS\BSW\Dem\Dem.c	  5543  
; ..\EAS\BSW\Dem\Dem.c	  5544  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  5545  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5546  * Function Name: Dem_SetOperationCycleState
; ..\EAS\BSW\Dem\Dem.c	  5547  *
; ..\EAS\BSW\Dem\Dem.c	  5548  * Description: Sets an operation cycle state. This API can only be used through
; ..\EAS\BSW\Dem\Dem.c	  5549  *              the RTE and therefore no declaration is exported via Dem.h. The
; ..\EAS\BSW\Dem\Dem.c	  5550  *              interface has an asynchronous behavior to avoid exceeding of typical
; ..\EAS\BSW\Dem\Dem.c	  5551  *              timing requirements on APIs if a large number of events has to be
; ..\EAS\BSW\Dem\Dem.c	  5552  *              processed and during the re-initializations of the related monitors.
; ..\EAS\BSW\Dem\Dem.c	  5553  *              The asynchronous acknowledgements are the related InitMonitorForEvent
; ..\EAS\BSW\Dem\Dem.c	  5554  *              callbacks.
; ..\EAS\BSW\Dem\Dem.c	  5555  *
; ..\EAS\BSW\Dem\Dem.c	  5556  * Inputs: OperationCycleId: Identification of operation cycle, like power cycle,
; ..\EAS\BSW\Dem\Dem.c	  5557  *                           driving cycle.
; ..\EAS\BSW\Dem\Dem.c	  5558  *         CycleState: New operation cycle state: (re-)start or end
; ..\EAS\BSW\Dem\Dem.c	  5559  *
; ..\EAS\BSW\Dem\Dem.c	  5560  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  5561  *
; ..\EAS\BSW\Dem\Dem.c	  5562  * Return: E_OK: set of operation cycle was accepted and will be handled
; ..\EAS\BSW\Dem\Dem.c	  5563  *               asynchronously
; ..\EAS\BSW\Dem\Dem.c	  5564  *         E_NOT_OK: set of operation cycle was rejected
; ..\EAS\BSW\Dem\Dem.c	  5565  *
; ..\EAS\BSW\Dem\Dem.c	  5566  * Limitations: Asynchronous,Reentrant
; ..\EAS\BSW\Dem\Dem.c	  5567  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5568  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  5569  FUNC(Std_ReturnType, DEM_CODE) Dem_SetOperationCycleState
; Function Dem_SetOperationCycleState
.L973:
Dem_SetOperationCycleState:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  5570  (
; ..\EAS\BSW\Dem\Dem.c	  5571      uint8 OperationCycleId,
; ..\EAS\BSW\Dem\Dem.c	  5572      Dem_OperationCycleStateType CycleState
; ..\EAS\BSW\Dem\Dem.c	  5573  )
; ..\EAS\BSW\Dem\Dem.c	  5574  {
; ..\EAS\BSW\Dem\Dem.c	  5575      /*SWS_Dem_00338*/
; ..\EAS\BSW\Dem\Dem.c	  5576      Std_ReturnType Result = E_NOT_OK;
	mov	d2,#1
.L2502:

; ..\EAS\BSW\Dem\Dem.c	  5577  
; ..\EAS\BSW\Dem\Dem.c	  5578      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3119:
	jne	d15,#2,.L402
.L3120:

; ..\EAS\BSW\Dem\Dem.c	  5579      {
; ..\EAS\BSW\Dem\Dem.c	  5580          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  5581          DEM_DET_REPORT_ERROR(DEM_SETOPERATIONCYCLESTATE_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  5582      }
; ..\EAS\BSW\Dem\Dem.c	  5583      else if(OperationCycleId >= DEM_NUM_OF_OPCYCLE)
	jne	d4,#0,.L403
.L3121:

; ..\EAS\BSW\Dem\Dem.c	  5584      {
; ..\EAS\BSW\Dem\Dem.c	  5585          DEM_DET_REPORT_ERROR(DEM_SETOPERATIONCYCLESTATE_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  5586      }
; ..\EAS\BSW\Dem\Dem.c	  5587      else if((CycleState != DEM_CYCLE_STATE_START) && (CycleState != DEM_CYCLE_STATE_END))
	jeq	d5,#1,.L404
.L3122:
	jne	d5,#2,.L405
.L404:

; ..\EAS\BSW\Dem\Dem.c	  5588      {
; ..\EAS\BSW\Dem\Dem.c	  5589          DEM_DET_REPORT_ERROR(DEM_SETOPERATIONCYCLESTATE_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  5590      }
; ..\EAS\BSW\Dem\Dem.c	  5591      else
; ..\EAS\BSW\Dem\Dem.c	  5592      {
; ..\EAS\BSW\Dem\Dem.c	  5593          Dem_OpCycReq[OperationCycleId] = CycleState;
	movh.a	a15,#@his(Dem_OpCycReq)
	lea	a15,[a15]@los(Dem_OpCycReq)
.L3123:
	st.b	[+a15]0,d5
.L3124:

; ..\EAS\BSW\Dem\Dem.c	  5594          Result = E_OK;
	mov	d2,#0
.L405:
.L403:
.L402:

; ..\EAS\BSW\Dem\Dem.c	  5595      }
; ..\EAS\BSW\Dem\Dem.c	  5596      return Result;
; ..\EAS\BSW\Dem\Dem.c	  5597  }
	ret
.L1627:
	
__Dem_SetOperationCycleState_function_end:
	.size	Dem_SetOperationCycleState,__Dem_SetOperationCycleState_function_end-Dem_SetOperationCycleState
.L1132:
	; End of function
	
	.sdecl	'.text.Dem.Dem_GetOperationCycleState',code,cluster('Dem_GetOperationCycleState')
	.sect	'.text.Dem.Dem_GetOperationCycleState'
	.align	2
	
	.global	Dem_GetOperationCycleState

; ..\EAS\BSW\Dem\Dem.c	  5598  
; ..\EAS\BSW\Dem\Dem.c	  5599  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  5600  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5601  * Function Name: Dem_GetOperationCycleState
; ..\EAS\BSW\Dem\Dem.c	  5602  *
; ..\EAS\BSW\Dem\Dem.c	  5603  * Description: Gets information about the status of a specific operation cycle.
; ..\EAS\BSW\Dem\Dem.c	  5604  *              This API can only be used through the RTE and therefore no
; ..\EAS\BSW\Dem\Dem.c	  5605  *              declaration is exported via Dem.h.
; ..\EAS\BSW\Dem\Dem.c	  5606  *
; ..\EAS\BSW\Dem\Dem.c	  5607  * Inputs: OperationCycleId: Identification of operation cycle, like power cycle,
; ..\EAS\BSW\Dem\Dem.c	  5608  *                           driving cycle.
; ..\EAS\BSW\Dem\Dem.c	  5609  *
; ..\EAS\BSW\Dem\Dem.c	  5610  * Outputs: CycleState: Cycle status information
; ..\EAS\BSW\Dem\Dem.c	  5611  *
; ..\EAS\BSW\Dem\Dem.c	  5612  * Return: E_OK: read out of operation cycle was successful
; ..\EAS\BSW\Dem\Dem.c	  5613  *         E_NOT_OK: read out of operation cycle failed
; ..\EAS\BSW\Dem\Dem.c	  5614  *
; ..\EAS\BSW\Dem\Dem.c	  5615  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  5616  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5617  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  5618  FUNC(Std_ReturnType, DEM_CODE) Dem_GetOperationCycleState
; Function Dem_GetOperationCycleState
.L975:
Dem_GetOperationCycleState:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  5619  (
; ..\EAS\BSW\Dem\Dem.c	  5620      uint8 OperationCycleId,
; ..\EAS\BSW\Dem\Dem.c	  5621      P2VAR(Dem_OperationCycleStateType, AUTOMATIC, DEM_APPL_DATA) CycleState
; ..\EAS\BSW\Dem\Dem.c	  5622  )
; ..\EAS\BSW\Dem\Dem.c	  5623  {
; ..\EAS\BSW\Dem\Dem.c	  5624      Std_ReturnType Result = E_NOT_OK;
	mov	d2,#1
.L2503:

; ..\EAS\BSW\Dem\Dem.c	  5625  
; ..\EAS\BSW\Dem\Dem.c	  5626      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3129:
	jne	d15,#2,.L407
.L3130:

; ..\EAS\BSW\Dem\Dem.c	  5627      {
; ..\EAS\BSW\Dem\Dem.c	  5628          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  5629          DEM_DET_REPORT_ERROR(DEM_GETOPERATIONCYCLESTATE_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  5630      }
; ..\EAS\BSW\Dem\Dem.c	  5631      else if(OperationCycleId >= DEM_NUM_OF_OPCYCLE)
	jne	d4,#0,.L408
.L3131:

; ..\EAS\BSW\Dem\Dem.c	  5632      {
; ..\EAS\BSW\Dem\Dem.c	  5633          DEM_DET_REPORT_ERROR(DEM_GETOPERATIONCYCLESTATE_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  5634      }
; ..\EAS\BSW\Dem\Dem.c	  5635      else if(CycleState == NULL_PTR)
	jz.a	a4,.L409
.L3132:

; ..\EAS\BSW\Dem\Dem.c	  5636      {
; ..\EAS\BSW\Dem\Dem.c	  5637          DEM_DET_REPORT_ERROR(DEM_GETOPERATIONCYCLESTATE_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  5638      }
; ..\EAS\BSW\Dem\Dem.c	  5639      else
; ..\EAS\BSW\Dem\Dem.c	  5640      {
; ..\EAS\BSW\Dem\Dem.c	  5641          *CycleState = Dem_OpCycState[OperationCycleId];
	movh.a	a15,#@his(Dem_OpCycState)
	lea	a15,[a15]@los(Dem_OpCycState)
.L3133:
	ld.bu	d15,[+a15]0
.L3134:
	st.b	[a4],d15
.L3135:

; ..\EAS\BSW\Dem\Dem.c	  5642          Result = E_OK;
	mov	d2,#0
.L409:
.L408:
.L407:

; ..\EAS\BSW\Dem\Dem.c	  5643      }
; ..\EAS\BSW\Dem\Dem.c	  5644      return Result;
; ..\EAS\BSW\Dem\Dem.c	  5645  }
	ret
.L1631:
	
__Dem_GetOperationCycleState_function_end:
	.size	Dem_GetOperationCycleState,__Dem_GetOperationCycleState_function_end-Dem_GetOperationCycleState
.L1137:
	; End of function
	
	.sdecl	'.text.Dem.Dem_SetAgingCycleState',code,cluster('Dem_SetAgingCycleState')
	.sect	'.text.Dem.Dem_SetAgingCycleState'
	.align	2
	
	.global	Dem_SetAgingCycleState

; ..\EAS\BSW\Dem\Dem.c	  5646  
; ..\EAS\BSW\Dem\Dem.c	  5647  
; ..\EAS\BSW\Dem\Dem.c	  5648  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  5649  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5650  * Function Name: Dem_SetAgingCycleState
; ..\EAS\BSW\Dem\Dem.c	  5651  *
; ..\EAS\BSW\Dem\Dem.c	  5652  * Description: Triggers the next aging cycle state. This API can only be used
; ..\EAS\BSW\Dem\Dem.c	  5653  *              through the RTE,and therefore no declaration is exported via Dem.h.
; ..\EAS\BSW\Dem\Dem.c	  5654  *
; ..\EAS\BSW\Dem\Dem.c	  5655  * Inputs: OperationCycleId: Identification of aging cycle.
; ..\EAS\BSW\Dem\Dem.c	  5656  *
; ..\EAS\BSW\Dem\Dem.c	  5657  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  5658  *
; ..\EAS\BSW\Dem\Dem.c	  5659  * Return: E_OK: set of aging cycle was successful
; ..\EAS\BSW\Dem\Dem.c	  5660  *         E_NOT_OK: set of aging cycle failed
; ..\EAS\BSW\Dem\Dem.c	  5661  *
; ..\EAS\BSW\Dem\Dem.c	  5662  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  5663  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5664  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  5665  FUNC(Std_ReturnType, DEM_CODE) Dem_SetAgingCycleState
; Function Dem_SetAgingCycleState
.L977:
Dem_SetAgingCycleState:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  5666  (
; ..\EAS\BSW\Dem\Dem.c	  5667      uint8 OperationCycleId
; ..\EAS\BSW\Dem\Dem.c	  5668  )
; ..\EAS\BSW\Dem\Dem.c	  5669  {
; ..\EAS\BSW\Dem\Dem.c	  5670      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  5671  
; ..\EAS\BSW\Dem\Dem.c	  5672      Result = Dem_SetOperationCycleState(OperationCycleId, DEM_CYCLE_STATE_START);
	mov	d5,#1
	j	Dem_SetOperationCycleState
.L1636:
	
__Dem_SetAgingCycleState_function_end:
	.size	Dem_SetAgingCycleState,__Dem_SetAgingCycleState_function_end-Dem_SetAgingCycleState
.L1142:
	; End of function
	
	.sdecl	'.text.Dem.Dem_SetWIRStatus',code,cluster('Dem_SetWIRStatus')
	.sect	'.text.Dem.Dem_SetWIRStatus'
	.align	2
	
	.global	Dem_SetWIRStatus

; ..\EAS\BSW\Dem\Dem.c	  5673  
; ..\EAS\BSW\Dem\Dem.c	  5674      return Result;
; ..\EAS\BSW\Dem\Dem.c	  5675  }
; ..\EAS\BSW\Dem\Dem.c	  5676  
; ..\EAS\BSW\Dem\Dem.c	  5677  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  5678  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5679  * Function Name: Dem_SetWIRStatus
; ..\EAS\BSW\Dem\Dem.c	  5680  *
; ..\EAS\BSW\Dem\Dem.c	  5681  * Description: Sets the WIR status bit via failsafe SW-Cs.This API can only be
; ..\EAS\BSW\Dem\Dem.c	  5682  *              used through the RTE and therefore no declaration is exported via
; ..\EAS\BSW\Dem\Dem.c	  5683  *              Dem.h.
; ..\EAS\BSW\Dem\Dem.c	  5684  *
; ..\EAS\BSW\Dem\Dem.c	  5685  * Inputs: EventId: Identification of an event by assigned EventId.
; ..\EAS\BSW\Dem\Dem.c	  5686  *         WIRStatus: Requested status of event related WIR-bit (regarding to the
; ..\EAS\BSW\Dem\Dem.c	  5687  *                    current status of function inhibition)
; ..\EAS\BSW\Dem\Dem.c	  5688  *                    WIRStatus = TRUE -> WIR-bit shall be set to "1"
; ..\EAS\BSW\Dem\Dem.c	  5689  *                    WIRStatus = FALSE -> WIR-bit shall be set to "0"
; ..\EAS\BSW\Dem\Dem.c	  5690  *
; ..\EAS\BSW\Dem\Dem.c	  5691  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  5692  *
; ..\EAS\BSW\Dem\Dem.c	  5693  * Return: E_OK: The request is accepted
; ..\EAS\BSW\Dem\Dem.c	  5694  *         E_NOT_OK: not be accepted (e.g. disabled controlDTCSetting) and should
; ..\EAS\BSW\Dem\Dem.c	  5695  *                   be repeated.
; ..\EAS\BSW\Dem\Dem.c	  5696  *
; ..\EAS\BSW\Dem\Dem.c	  5697  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  5698  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5699  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  5700  /*SWS_Dem_00831*//*SWS_Dem_00832*//*SWS_Dem_00839*/
; ..\EAS\BSW\Dem\Dem.c	  5701  FUNC(Std_ReturnType, DEM_CODE) Dem_SetWIRStatus
; Function Dem_SetWIRStatus
.L979:
Dem_SetWIRStatus:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  5702  (
; ..\EAS\BSW\Dem\Dem.c	  5703      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  5704      boolean WIRStatus
; ..\EAS\BSW\Dem\Dem.c	  5705  )
; ..\EAS\BSW\Dem\Dem.c	  5706  {
; ..\EAS\BSW\Dem\Dem.c	  5707      Std_ReturnType Result = E_NOT_OK;
	mov	d2,#1
.L2504:

; ..\EAS\BSW\Dem\Dem.c	  5708  #if(DEM_NUM_OF_INDICATOR > 0)
; ..\EAS\BSW\Dem\Dem.c	  5709      Dem_UdsStatusByteType EventStatus;
; ..\EAS\BSW\Dem\Dem.c	  5710      uint8 Index;
; ..\EAS\BSW\Dem\Dem.c	  5711      uint8 IndicatorId;
; ..\EAS\BSW\Dem\Dem.c	  5712      uint16 StatusPos;
; ..\EAS\BSW\Dem\Dem.c	  5713      boolean ClearWIRBit = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  5714  #endif
; ..\EAS\BSW\Dem\Dem.c	  5715  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  5716      uint8 EventCmaStatus;
; ..\EAS\BSW\Dem\Dem.c	  5717  #endif
; ..\EAS\BSW\Dem\Dem.c	  5718  
; ..\EAS\BSW\Dem\Dem.c	  5719      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	  5720      {
; ..\EAS\BSW\Dem\Dem.c	  5721          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  5722          DEM_DET_REPORT_ERROR(DEM_SETWIRSTATUS_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  5723      }
; ..\EAS\BSW\Dem\Dem.c	  5724      else if(EventId >= DEM_NUM_OF_EVENT)
; ..\EAS\BSW\Dem\Dem.c	  5725      {
; ..\EAS\BSW\Dem\Dem.c	  5726          DEM_DET_REPORT_ERROR(DEM_SETWIRSTATUS_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  5727      }
; ..\EAS\BSW\Dem\Dem.c	  5728      else if(Dem_EnableDtcSetting[DEM_CFG_EVENT_DTCREF(EventId)] == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  5729      {
; ..\EAS\BSW\Dem\Dem.c	  5730          /*SWS_Dem_00836*/
; ..\EAS\BSW\Dem\Dem.c	  5731      }
; ..\EAS\BSW\Dem\Dem.c	  5732  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  5733      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  5734      else if(Dem_EventAvailable[EventId] == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  5735      {
; ..\EAS\BSW\Dem\Dem.c	  5736          /*SWS_Dem_01108*/
; ..\EAS\BSW\Dem\Dem.c	  5737      }
; ..\EAS\BSW\Dem\Dem.c	  5738  #endif
; ..\EAS\BSW\Dem\Dem.c	  5739  #if(DEM_NUM_OF_INDICATOR > 0)
; ..\EAS\BSW\Dem\Dem.c	  5740      else if((DEM_CFG_EVENT_INDICATOR_NUM(EventId) == 0) \ 
; ..\EAS\BSW\Dem\Dem.c	  5741              || (DEM_CFG_EVENT_INDICATOR(EventId) == NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	  5742      {
; ..\EAS\BSW\Dem\Dem.c	  5743          /*Result = E_NOT_OK;*/
; ..\EAS\BSW\Dem\Dem.c	  5744      }
; ..\EAS\BSW\Dem\Dem.c	  5745      else
; ..\EAS\BSW\Dem\Dem.c	  5746      {
; ..\EAS\BSW\Dem\Dem.c	  5747          EventStatus = DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId));
; ..\EAS\BSW\Dem\Dem.c	  5748  
; ..\EAS\BSW\Dem\Dem.c	  5749          if(WIRStatus == TRUE)
; ..\EAS\BSW\Dem\Dem.c	  5750          {
; ..\EAS\BSW\Dem\Dem.c	  5751  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	  5752              EventCmaStatus = DEM_EVENT_CMA_STATUS(EventId);
; ..\EAS\BSW\Dem\Dem.c	  5753              EventCmaStatus = DEM_SET_CMA_STATUS_WIRSLC(EventCmaStatus);
; ..\EAS\BSW\Dem\Dem.c	  5754              DEM_EVENT_CMA_STATUS(EventId) = EventCmaStatus;
; ..\EAS\BSW\Dem\Dem.c	  5755  #endif
; ..\EAS\BSW\Dem\Dem.c	  5756              /*SWS_Dem_00833*/
; ..\EAS\BSW\Dem\Dem.c	  5757              EventStatus = DEM_SET_UDS_STATUS_WIR(EventStatus);
; ..\EAS\BSW\Dem\Dem.c	  5758              DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId)) = EventStatus;
; ..\EAS\BSW\Dem\Dem.c	  5759          }
; ..\EAS\BSW\Dem\Dem.c	  5760          else if(DEM_TEST_UDS_STATUS_WIR(EventStatus))
; ..\EAS\BSW\Dem\Dem.c	  5761          {
; ..\EAS\BSW\Dem\Dem.c	  5762              for(Index = 0; Index < DEM_CFG_EVENT_INDICATOR_NUM(EventId); Index++)
; ..\EAS\BSW\Dem\Dem.c	  5763              {
; ..\EAS\BSW\Dem\Dem.c	  5764                  IndicatorId = DEM_CFG_EVENT_INDICATOR_ID(EventId,Index);
; ..\EAS\BSW\Dem\Dem.c	  5765                  StatusPos = DEM_CFG_EVENT_INDICATOR_OFFSET(EventId,Index) \ 
; ..\EAS\BSW\Dem\Dem.c	  5766                                  + DEM_CFG_INDICATOR_STATUS_START(IndicatorId);
; ..\EAS\BSW\Dem\Dem.c	  5767                  if(DEM_INDICATOR_STATUS(StatusPos) != DEM_INDICATOR_OFF)
; ..\EAS\BSW\Dem\Dem.c	  5768                  {
; ..\EAS\BSW\Dem\Dem.c	  5769                      ClearWIRBit = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  5770                      break;
; ..\EAS\BSW\Dem\Dem.c	  5771                  }
; ..\EAS\BSW\Dem\Dem.c	  5772              }
; ..\EAS\BSW\Dem\Dem.c	  5773  
; ..\EAS\BSW\Dem\Dem.c	  5774              if(ClearWIRBit == TRUE)
; ..\EAS\BSW\Dem\Dem.c	  5775              {
; ..\EAS\BSW\Dem\Dem.c	  5776                  /*SWS_Dem_00834*/
; ..\EAS\BSW\Dem\Dem.c	  5777                  EventStatus = DEM_CLEAR_UDS_STATUS_WIR(EventStatus);
; ..\EAS\BSW\Dem\Dem.c	  5778                  DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId)) = EventStatus;
; ..\EAS\BSW\Dem\Dem.c	  5779              }
; ..\EAS\BSW\Dem\Dem.c	  5780          }
; ..\EAS\BSW\Dem\Dem.c	  5781          else
; ..\EAS\BSW\Dem\Dem.c	  5782          {
; ..\EAS\BSW\Dem\Dem.c	  5783              /*WIR bit value is 0 now in EventStatus.*/
; ..\EAS\BSW\Dem\Dem.c	  5784          }
; ..\EAS\BSW\Dem\Dem.c	  5785  
; ..\EAS\BSW\Dem\Dem.c	  5786          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  5787      }
; ..\EAS\BSW\Dem\Dem.c	  5788  #else
; ..\EAS\BSW\Dem\Dem.c	  5789      else
; ..\EAS\BSW\Dem\Dem.c	  5790      {
; ..\EAS\BSW\Dem\Dem.c	  5791          /*Result = E_NOT_OK;*/
; ..\EAS\BSW\Dem\Dem.c	  5792      }
; ..\EAS\BSW\Dem\Dem.c	  5793  #endif/*#if(DEM_NUM_OF_INDICATOR > 0)*/
; ..\EAS\BSW\Dem\Dem.c	  5794  
; ..\EAS\BSW\Dem\Dem.c	  5795      return Result;
; ..\EAS\BSW\Dem\Dem.c	  5796  }
	ret
.L1639:
	
__Dem_SetWIRStatus_function_end:
	.size	Dem_SetWIRStatus,__Dem_SetWIRStatus_function_end-Dem_SetWIRStatus
.L1147:
	; End of function
	
	.sdecl	'.text.Dem.Dem_GetComponentFailed',code,cluster('Dem_GetComponentFailed')
	.sect	'.text.Dem.Dem_GetComponentFailed'
	.align	2
	
	.global	Dem_GetComponentFailed

; ..\EAS\BSW\Dem\Dem.c	  5797  
; ..\EAS\BSW\Dem\Dem.c	  5798  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  5799  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5800  * Function Name: Dem_GetComponentFailed
; ..\EAS\BSW\Dem\Dem.c	  5801  *
; ..\EAS\BSW\Dem\Dem.c	  5802  * Description: Gets the failed status of a DemComponent.
; ..\EAS\BSW\Dem\Dem.c	  5803  *
; ..\EAS\BSW\Dem\Dem.c	  5804  * Inputs: ComponentId: Identification of a DemComponent
; ..\EAS\BSW\Dem\Dem.c	  5805  *
; ..\EAS\BSW\Dem\Dem.c	  5806  * Outputs: ComponentFailed: TRUE: failed
; ..\EAS\BSW\Dem\Dem.c	  5807  *                           FALSE: not failed
; ..\EAS\BSW\Dem\Dem.c	  5808  *
; ..\EAS\BSW\Dem\Dem.c	  5809  * Return: E_OK: getting "ComponentFailed" was successful
; ..\EAS\BSW\Dem\Dem.c	  5810  *         E_NOT_OK: getting "ComponentFailed" was not successful
; ..\EAS\BSW\Dem\Dem.c	  5811  *
; ..\EAS\BSW\Dem\Dem.c	  5812  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  5813  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5814  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  5815  FUNC(Std_ReturnType, DEM_CODE) Dem_GetComponentFailed
; Function Dem_GetComponentFailed
.L981:
Dem_GetComponentFailed:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  5816  (
; ..\EAS\BSW\Dem\Dem.c	  5817      Dem_ComponentIdType ComponentId,
; ..\EAS\BSW\Dem\Dem.c	  5818      P2VAR(boolean, AUTOMATIC, DEM_APPL_DATA) ComponentFailed
; ..\EAS\BSW\Dem\Dem.c	  5819  )
; ..\EAS\BSW\Dem\Dem.c	  5820  {
; ..\EAS\BSW\Dem\Dem.c	  5821      Std_ReturnType Result = E_NOT_OK;
	mov	d2,#1
.L2505:

; ..\EAS\BSW\Dem\Dem.c	  5822  
; ..\EAS\BSW\Dem\Dem.c	  5823  
; ..\EAS\BSW\Dem\Dem.c	  5824      return Result;
; ..\EAS\BSW\Dem\Dem.c	  5825  }
	ret
.L1643:
	
__Dem_GetComponentFailed_function_end:
	.size	Dem_GetComponentFailed,__Dem_GetComponentFailed_function_end-Dem_GetComponentFailed
.L1152:
	; End of function
	
	.sdecl	'.text.Dem.Dem_GetEventStatus',code,cluster('Dem_GetEventStatus')
	.sect	'.text.Dem.Dem_GetEventStatus'
	.align	2
	
	.global	Dem_GetEventStatus

; ..\EAS\BSW\Dem\Dem.c	  5826  
; ..\EAS\BSW\Dem\Dem.c	  5827  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  5828  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5829  * Function Name: Dem_GetEventStatus
; ..\EAS\BSW\Dem\Dem.c	  5830  *
; ..\EAS\BSW\Dem\Dem.c	  5831  * Description: Gets the current extended event status of an event.
; ..\EAS\BSW\Dem\Dem.c	  5832  *
; ..\EAS\BSW\Dem\Dem.c	  5833  * Inputs: EventId: Identification of an event by assigned EventId.
; ..\EAS\BSW\Dem\Dem.c	  5834  *
; ..\EAS\BSW\Dem\Dem.c	  5835  * Outputs: EventStatusByte: UDS DTC status byte of the requested event (refer to
; ..\EAS\BSW\Dem\Dem.c	  5836  *                           chapter "Status bit support").If the return value of
; ..\EAS\BSW\Dem\Dem.c	  5837  *                           the function call is E_NOT_OK,this parameter does not
; ..\EAS\BSW\Dem\Dem.c	  5838  *                           contain valid data.
; ..\EAS\BSW\Dem\Dem.c	  5839  *
; ..\EAS\BSW\Dem\Dem.c	  5840  * Return: E_OK: get of event status was successful
; ..\EAS\BSW\Dem\Dem.c	  5841  *         E_NOT_OK: get of event status failed
; ..\EAS\BSW\Dem\Dem.c	  5842  *
; ..\EAS\BSW\Dem\Dem.c	  5843  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  5844  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5845  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  5846  FUNC(Std_ReturnType, DEM_CODE) Dem_GetEventStatus
; Function Dem_GetEventStatus
.L983:
Dem_GetEventStatus:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  5847  (
; ..\EAS\BSW\Dem\Dem.c	  5848      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  5849      P2VAR(Dem_UdsStatusByteType, AUTOMATIC, DEM_APPL_DATA) EventStatusByte
; ..\EAS\BSW\Dem\Dem.c	  5850  )
; ..\EAS\BSW\Dem\Dem.c	  5851  {
; ..\EAS\BSW\Dem\Dem.c	  5852      Std_ReturnType Result = E_NOT_OK;
	mov	d2,#1
.L2506:

; ..\EAS\BSW\Dem\Dem.c	  5853  
; ..\EAS\BSW\Dem\Dem.c	  5854      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3152:
	jne	d15,#2,.L414
.L3153:

; ..\EAS\BSW\Dem\Dem.c	  5855      {
; ..\EAS\BSW\Dem\Dem.c	  5856          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  5857          DEM_DET_REPORT_ERROR(DEM_GETEVENTSTATUS_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  5858      }
; ..\EAS\BSW\Dem\Dem.c	  5859      else if(EventStatusByte == NULL_PTR)
	jz.a	a4,.L415
.L3154:

; ..\EAS\BSW\Dem\Dem.c	  5860      {
; ..\EAS\BSW\Dem\Dem.c	  5861          DEM_DET_REPORT_ERROR(DEM_GETEVENTSTATUS_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  5862      }
; ..\EAS\BSW\Dem\Dem.c	  5863      else if(EventId >= DEM_NUM_OF_EVENT)
	mov	d15,#116
.L3155:
	jge.u	d4,d15,.L416
.L3156:

; ..\EAS\BSW\Dem\Dem.c	  5864      {
; ..\EAS\BSW\Dem\Dem.c	  5865          DEM_DET_REPORT_ERROR(DEM_GETEVENTSTATUS_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  5866      }
; ..\EAS\BSW\Dem\Dem.c	  5867  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  5868      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  5869      else if(Dem_EventAvailable[EventId] == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  5870      {
; ..\EAS\BSW\Dem\Dem.c	  5871          /*SWS_Dem_01108*/
; ..\EAS\BSW\Dem\Dem.c	  5872      }
; ..\EAS\BSW\Dem\Dem.c	  5873  #endif
; ..\EAS\BSW\Dem\Dem.c	  5874      else
; ..\EAS\BSW\Dem\Dem.c	  5875      {
; ..\EAS\BSW\Dem\Dem.c	  5876          /*SWS_Dem_00051*/
; ..\EAS\BSW\Dem\Dem.c	  5877          *EventStatusByte = DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId));
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]4
	mul	d15,d15,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]1864
.L3157:

; ..\EAS\BSW\Dem\Dem.c	  5878          *EventStatusByte &= DEM_CFG_DTCSTATUSAVAILABILITYMASK;
	st.b	[a4],d15
.L3158:

; ..\EAS\BSW\Dem\Dem.c	  5879          Result = E_OK;
	mov	d2,#0
.L416:
.L415:
.L414:

; ..\EAS\BSW\Dem\Dem.c	  5880      }
; ..\EAS\BSW\Dem\Dem.c	  5881      return Result;
; ..\EAS\BSW\Dem\Dem.c	  5882  }
	ret
.L1648:
	
__Dem_GetEventStatus_function_end:
	.size	Dem_GetEventStatus,__Dem_GetEventStatus_function_end-Dem_GetEventStatus
.L1157:
	; End of function
	
	.sdecl	'.text.Dem.Dem_GetEventFailed',code,cluster('Dem_GetEventFailed')
	.sect	'.text.Dem.Dem_GetEventFailed'
	.align	2
	
	.global	Dem_GetEventFailed

; ..\EAS\BSW\Dem\Dem.c	  5883  
; ..\EAS\BSW\Dem\Dem.c	  5884  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  5885  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5886  * Function Name: Dem_GetEventFailed
; ..\EAS\BSW\Dem\Dem.c	  5887  *
; ..\EAS\BSW\Dem\Dem.c	  5888  * Description: Gets the event failed status of an event.
; ..\EAS\BSW\Dem\Dem.c	  5889  *
; ..\EAS\BSW\Dem\Dem.c	  5890  * Inputs: EventId: Identification of an event by assigned EventId.
; ..\EAS\BSW\Dem\Dem.c	  5891  *
; ..\EAS\BSW\Dem\Dem.c	  5892  * Outputs: EventFailed: TRUE - Last Failed
; ..\EAS\BSW\Dem\Dem.c	  5893  *                       FALSE - not Last Failed
; ..\EAS\BSW\Dem\Dem.c	  5894  *
; ..\EAS\BSW\Dem\Dem.c	  5895  * Return: E_OK: get of "EventFailed" was successful
; ..\EAS\BSW\Dem\Dem.c	  5896  *         E_NOT_OK: get of "EventFailed" was not successful
; ..\EAS\BSW\Dem\Dem.c	  5897  *
; ..\EAS\BSW\Dem\Dem.c	  5898  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  5899  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5900  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  5901  FUNC(Std_ReturnType, DEM_CODE) Dem_GetEventFailed
; Function Dem_GetEventFailed
.L985:
Dem_GetEventFailed:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  5902  (
; ..\EAS\BSW\Dem\Dem.c	  5903      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  5904      P2VAR(boolean, AUTOMATIC, DEM_APPL_DATA) EventFailed
; ..\EAS\BSW\Dem\Dem.c	  5905  )
; ..\EAS\BSW\Dem\Dem.c	  5906  {
; ..\EAS\BSW\Dem\Dem.c	  5907      /*SWS_Dem_00333*/
; ..\EAS\BSW\Dem\Dem.c	  5908      Std_ReturnType Result = E_NOT_OK;
	mov	d2,#1
.L2507:

; ..\EAS\BSW\Dem\Dem.c	  5909      Dem_UdsStatusByteType Status;
; ..\EAS\BSW\Dem\Dem.c	  5910  
; ..\EAS\BSW\Dem\Dem.c	  5911      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3163:
	jne	d15,#2,.L418
.L3164:

; ..\EAS\BSW\Dem\Dem.c	  5912      {
; ..\EAS\BSW\Dem\Dem.c	  5913          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  5914          DEM_DET_REPORT_ERROR(DEM_GETEVENTFAILED_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  5915      }
; ..\EAS\BSW\Dem\Dem.c	  5916      else if(EventFailed == NULL_PTR)
	jz.a	a4,.L419
.L3165:

; ..\EAS\BSW\Dem\Dem.c	  5917      {
; ..\EAS\BSW\Dem\Dem.c	  5918          DEM_DET_REPORT_ERROR(DEM_GETEVENTFAILED_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  5919      }
; ..\EAS\BSW\Dem\Dem.c	  5920      else if(EventId >= DEM_NUM_OF_EVENT)
	mov	d15,#116
.L3166:
	jge.u	d4,d15,.L420
.L3167:

; ..\EAS\BSW\Dem\Dem.c	  5921      {
; ..\EAS\BSW\Dem\Dem.c	  5922          DEM_DET_REPORT_ERROR(DEM_GETEVENTFAILED_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  5923      }
; ..\EAS\BSW\Dem\Dem.c	  5924  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  5925      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  5926      else if(Dem_EventAvailable[EventId] == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  5927      {
; ..\EAS\BSW\Dem\Dem.c	  5928          /*SWS_Dem_01108*/
; ..\EAS\BSW\Dem\Dem.c	  5929      }
; ..\EAS\BSW\Dem\Dem.c	  5930  #endif
; ..\EAS\BSW\Dem\Dem.c	  5931      else
; ..\EAS\BSW\Dem\Dem.c	  5932      {
; ..\EAS\BSW\Dem\Dem.c	  5933          Status = DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId));
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]4
	mul	d15,d15,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]1864
.L2508:

; ..\EAS\BSW\Dem\Dem.c	  5934          /*SWS_Dem_00052*/
; ..\EAS\BSW\Dem\Dem.c	  5935          if((DEM_TEST_UDS_STATUS_TF(Status)) && (!DEM_TEST_UDS_STATUS_TNCTOC(Status)))
	jz.t	d15:0,.L421
.L3168:
	jnz.t	d15:6,.L422
.L3169:

; ..\EAS\BSW\Dem\Dem.c	  5936          {
; ..\EAS\BSW\Dem\Dem.c	  5937              *EventFailed = TRUE;
	st.b	[a4],d2
.L3170:
	j	.L423
.L422:
.L421:

; ..\EAS\BSW\Dem\Dem.c	  5938          }
; ..\EAS\BSW\Dem\Dem.c	  5939          else
; ..\EAS\BSW\Dem\Dem.c	  5940          {
; ..\EAS\BSW\Dem\Dem.c	  5941              *EventFailed = FALSE;
	mov	d15,#0
.L2509:
	st.b	[a4],d15
.L423:

; ..\EAS\BSW\Dem\Dem.c	  5942          }
; ..\EAS\BSW\Dem\Dem.c	  5943          Result = E_OK;
	mov	d2,#0
.L420:
.L419:
.L418:

; ..\EAS\BSW\Dem\Dem.c	  5944      }
; ..\EAS\BSW\Dem\Dem.c	  5945      return Result;
; ..\EAS\BSW\Dem\Dem.c	  5946  }
	ret
.L1653:
	
__Dem_GetEventFailed_function_end:
	.size	Dem_GetEventFailed,__Dem_GetEventFailed_function_end-Dem_GetEventFailed
.L1162:
	; End of function
	
	.sdecl	'.text.Dem.Dem_GetEventTested',code,cluster('Dem_GetEventTested')
	.sect	'.text.Dem.Dem_GetEventTested'
	.align	2
	
	.global	Dem_GetEventTested

; ..\EAS\BSW\Dem\Dem.c	  5947  
; ..\EAS\BSW\Dem\Dem.c	  5948  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  5949  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5950  * Function Name: Dem_GetEventTested
; ..\EAS\BSW\Dem\Dem.c	  5951  *
; ..\EAS\BSW\Dem\Dem.c	  5952  * Description: Gets the event tested status of an event.
; ..\EAS\BSW\Dem\Dem.c	  5953  *
; ..\EAS\BSW\Dem\Dem.c	  5954  * Inputs: EventId: Identification of an event by assigned EventId.
; ..\EAS\BSW\Dem\Dem.c	  5955  *
; ..\EAS\BSW\Dem\Dem.c	  5956  * Outputs: EventTested: TRUE - event tested this cycle
; ..\EAS\BSW\Dem\Dem.c	  5957  *                       FALSE - event not tested this cycle
; ..\EAS\BSW\Dem\Dem.c	  5958  *
; ..\EAS\BSW\Dem\Dem.c	  5959  * Return: E_OK: get of event state "tested" successful
; ..\EAS\BSW\Dem\Dem.c	  5960  *         E_NOT_OK: get of event state "tested" failed
; ..\EAS\BSW\Dem\Dem.c	  5961  *
; ..\EAS\BSW\Dem\Dem.c	  5962  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  5963  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  5964  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  5965  FUNC(Std_ReturnType, DEM_CODE) Dem_GetEventTested
; Function Dem_GetEventTested
.L987:
Dem_GetEventTested:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  5966  (
; ..\EAS\BSW\Dem\Dem.c	  5967      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  5968      P2VAR(boolean, AUTOMATIC, DEM_APPL_DATA) EventTested
; ..\EAS\BSW\Dem\Dem.c	  5969  )
; ..\EAS\BSW\Dem\Dem.c	  5970  {
; ..\EAS\BSW\Dem\Dem.c	  5971      /*SWS_Dem_00333*/
; ..\EAS\BSW\Dem\Dem.c	  5972      Std_ReturnType Result = E_NOT_OK;
	mov	d2,#1
.L2510:

; ..\EAS\BSW\Dem\Dem.c	  5973      Dem_UdsStatusByteType Status;
; ..\EAS\BSW\Dem\Dem.c	  5974  
; ..\EAS\BSW\Dem\Dem.c	  5975      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3175:
	jne	d15,#2,.L425
.L3176:

; ..\EAS\BSW\Dem\Dem.c	  5976      {
; ..\EAS\BSW\Dem\Dem.c	  5977          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  5978          DEM_DET_REPORT_ERROR(DEM_GETEVENTTESTED_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  5979      }
; ..\EAS\BSW\Dem\Dem.c	  5980      else if (EventTested == NULL_PTR)
	jz.a	a4,.L426
.L3177:

; ..\EAS\BSW\Dem\Dem.c	  5981      {
; ..\EAS\BSW\Dem\Dem.c	  5982          DEM_DET_REPORT_ERROR(DEM_GETEVENTTESTED_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  5983      }
; ..\EAS\BSW\Dem\Dem.c	  5984      else if(EventId >= DEM_NUM_OF_EVENT)
	mov	d15,#116
.L3178:
	jge.u	d4,d15,.L427
.L3179:

; ..\EAS\BSW\Dem\Dem.c	  5985      {
; ..\EAS\BSW\Dem\Dem.c	  5986          DEM_DET_REPORT_ERROR(DEM_GETEVENTTESTED_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  5987      }
; ..\EAS\BSW\Dem\Dem.c	  5988  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  5989      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  5990      else if(Dem_EventAvailable[EventId] == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  5991      {
; ..\EAS\BSW\Dem\Dem.c	  5992          /*SWS_Dem_01108*/
; ..\EAS\BSW\Dem\Dem.c	  5993      }
; ..\EAS\BSW\Dem\Dem.c	  5994  #endif
; ..\EAS\BSW\Dem\Dem.c	  5995      else
; ..\EAS\BSW\Dem\Dem.c	  5996      {
; ..\EAS\BSW\Dem\Dem.c	  5997          Status = DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId));
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]4
	mul	d15,d15,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]1864
.L2511:

; ..\EAS\BSW\Dem\Dem.c	  5998          /*SWS_Dem_00053*/
; ..\EAS\BSW\Dem\Dem.c	  5999          if(DEM_TEST_UDS_STATUS_TNCTOC(Status))
	and	d15,#64
.L2512:
	eq	d15,d15,#0
.L3180:

; ..\EAS\BSW\Dem\Dem.c	  6000          {
; ..\EAS\BSW\Dem\Dem.c	  6001              *EventTested = FALSE;
	st.b	[a4],d15
.L3181:

; ..\EAS\BSW\Dem\Dem.c	  6002          }
; ..\EAS\BSW\Dem\Dem.c	  6003          else
; ..\EAS\BSW\Dem\Dem.c	  6004          {
; ..\EAS\BSW\Dem\Dem.c	  6005              *EventTested = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  6006          }
; ..\EAS\BSW\Dem\Dem.c	  6007          Result = E_OK;
	mov	d2,#0
.L427:
.L426:
.L425:

; ..\EAS\BSW\Dem\Dem.c	  6008      }
; ..\EAS\BSW\Dem\Dem.c	  6009      return Result;
; ..\EAS\BSW\Dem\Dem.c	  6010  }
	ret
.L1658:
	
__Dem_GetEventTested_function_end:
	.size	Dem_GetEventTested,__Dem_GetEventTested_function_end-Dem_GetEventTested
.L1167:
	; End of function
	
	.sdecl	'.text.Dem.Dem_GetDebouncingOfEvent',code,cluster('Dem_GetDebouncingOfEvent')
	.sect	'.text.Dem.Dem_GetDebouncingOfEvent'
	.align	2
	
	.global	Dem_GetDebouncingOfEvent

; ..\EAS\BSW\Dem\Dem.c	  6011  
; ..\EAS\BSW\Dem\Dem.c	  6012  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  6013  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6014  * Function Name: Dem_GetDebouncingOfEvent
; ..\EAS\BSW\Dem\Dem.c	  6015  *
; ..\EAS\BSW\Dem\Dem.c	  6016  * Description: Gets the debouncing status of an event. This function shall not
; ..\EAS\BSW\Dem\Dem.c	  6017  *              be used for EventId with native debouncing within their functions.
; ..\EAS\BSW\Dem\Dem.c	  6018  *              It is rather for EventIds using debouncing within the Dem.
; ..\EAS\BSW\Dem\Dem.c	  6019  *
; ..\EAS\BSW\Dem\Dem.c	  6020  * Inputs: EventId: Identification of an event by assigned EventId.
; ..\EAS\BSW\Dem\Dem.c	  6021  *
; ..\EAS\BSW\Dem\Dem.c	  6022  * Outputs: DebouncingState
; ..\EAS\BSW\Dem\Dem.c	  6023  *
; ..\EAS\BSW\Dem\Dem.c	  6024  * Return: E_OK: get of debouncing status per event state successful
; ..\EAS\BSW\Dem\Dem.c	  6025  *         E_NOT_OK: get of debouncing per event state failed
; ..\EAS\BSW\Dem\Dem.c	  6026  *
; ..\EAS\BSW\Dem\Dem.c	  6027  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  6028  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6029  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  6030  FUNC(Std_ReturnType, DEM_CODE) Dem_GetDebouncingOfEvent
; Function Dem_GetDebouncingOfEvent
.L989:
Dem_GetDebouncingOfEvent:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  6031  (
; ..\EAS\BSW\Dem\Dem.c	  6032      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  6033      P2VAR(Dem_DebouncingStateType, AUTOMATIC, DEM_APPL_DATA) DebouncingState
; ..\EAS\BSW\Dem\Dem.c	  6034  )
; ..\EAS\BSW\Dem\Dem.c	  6035  {
; ..\EAS\BSW\Dem\Dem.c	  6036      Std_ReturnType Result = E_OK;
	mov	d2,#0
.L2513:

; ..\EAS\BSW\Dem\Dem.c	  6037  
; ..\EAS\BSW\Dem\Dem.c	  6038      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3186:
	jne	d15,#2,.L429
.L3187:

; ..\EAS\BSW\Dem\Dem.c	  6039      {
; ..\EAS\BSW\Dem\Dem.c	  6040          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  6041          DEM_DET_REPORT_ERROR(DEM_GETDEBOUNCINGOFEVENT_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  6042          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6043      }
; ..\EAS\BSW\Dem\Dem.c	  6044      else if (DebouncingState == NULL_PTR)
	jz.a	a4,.L430
.L3188:

; ..\EAS\BSW\Dem\Dem.c	  6045      {
; ..\EAS\BSW\Dem\Dem.c	  6046          DEM_DET_REPORT_ERROR(DEM_GETDEBOUNCINGOFEVENT_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  6047          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6048      }
; ..\EAS\BSW\Dem\Dem.c	  6049      else if(EventId >= DEM_NUM_OF_EVENT)
	mov	d15,#116
.L3189:
	jge.u	d4,d15,.L431
.L3190:

; ..\EAS\BSW\Dem\Dem.c	  6050      {
; ..\EAS\BSW\Dem\Dem.c	  6051          DEM_DET_REPORT_ERROR(DEM_GETDEBOUNCINGOFEVENT_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  6052          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6053      }
; ..\EAS\BSW\Dem\Dem.c	  6054  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  6055      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  6056      else if(Dem_EventAvailable[EventId] == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  6057      {
; ..\EAS\BSW\Dem\Dem.c	  6058          /*SWS_Dem_01108*/
; ..\EAS\BSW\Dem\Dem.c	  6059          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6060      }
; ..\EAS\BSW\Dem\Dem.c	  6061  #endif
; ..\EAS\BSW\Dem\Dem.c	  6062      else
; ..\EAS\BSW\Dem\Dem.c	  6063      {
; ..\EAS\BSW\Dem\Dem.c	  6064          /*SWS_Dem_00844*/
; ..\EAS\BSW\Dem\Dem.c	  6065  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  6066          if(DEM_CFG_EVENT_DBC(EventId) != NULL_PTR)
	mul	d0,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.w	d15,[a15]20
.L3191:
	jeq	d15,#0,.L432
.L3192:

; ..\EAS\BSW\Dem\Dem.c	  6067          {
; ..\EAS\BSW\Dem\Dem.c	  6068              if((DEM_EVENT_DBC(EventId) > 0) \ 
	sha	d15,d4,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.h	d1,[a15]10
.L3193:
	jlt	d1,#1,.L433
.L3194:

; ..\EAS\BSW\Dem\Dem.c	  6069                      && (DEM_EVENT_DBC(EventId) < DEM_CFG_EVENT_DBC_FAILTHRESHOLD(EventId)))
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.h	d1,[a15]10
.L3195:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]20
	ld.h	d15,[a15]8
.L3196:
	jge	d1,d15,.L434
.L3197:

; ..\EAS\BSW\Dem\Dem.c	  6070              {
; ..\EAS\BSW\Dem\Dem.c	  6071                  *DebouncingState = DEM_TEMPORARILY_DEFECTIVE;
	mov	d15,#1
.L3198:
	st.b	[a4],d15
.L3199:
	j	.L435
.L434:
.L433:

; ..\EAS\BSW\Dem\Dem.c	  6072              }
; ..\EAS\BSW\Dem\Dem.c	  6073              else if((DEM_EVENT_DBC(EventId) < 0) \ 
	sha	d15,d4,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.h	d0,[a15]10
.L3200:
	jge	d0,#0,.L436
.L3201:

; ..\EAS\BSW\Dem\Dem.c	  6074                      && (DEM_EVENT_DBC(EventId) > DEM_CFG_EVENT_DBC_PASSTHRESHOLD(EventId)))
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.h	d0,[a15]10
.L3202:
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]20
	ld.h	d15,[a15]6
.L3203:
	jge	d15,d0,.L437
.L3204:

; ..\EAS\BSW\Dem\Dem.c	  6075              {
; ..\EAS\BSW\Dem\Dem.c	  6076                  *DebouncingState = DEM_TEMPORARILY_HEALED;
	mov	d15,#4
.L3205:
	st.b	[a4],d15
.L3206:
	j	.L438
.L437:
.L436:

; ..\EAS\BSW\Dem\Dem.c	  6077              }
; ..\EAS\BSW\Dem\Dem.c	  6078              else if(DEM_EVENT_DBC(EventId) <= DEM_CFG_EVENT_DBC_PASSTHRESHOLD(EventId))
	sha	d15,d4,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.h	d0,[a15]10
.L3207:
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]20
	ld.h	d15,[a15]6
.L3208:
	jlt	d15,d0,.L439
.L3209:

; ..\EAS\BSW\Dem\Dem.c	  6079              {
; ..\EAS\BSW\Dem\Dem.c	  6080                  *DebouncingState = DEM_TEST_COMPLETE;
	mov	d15,#8
.L3210:
	st.b	[a4],d15
.L3211:
	j	.L440
.L439:

; ..\EAS\BSW\Dem\Dem.c	  6081              }
; ..\EAS\BSW\Dem\Dem.c	  6082              else if(DEM_EVENT_DBC(EventId) >= DEM_CFG_EVENT_DBC_FAILTHRESHOLD(EventId))
	sha	d15,d4,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.h	d0,[a15]10
.L3212:
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]20
	ld.h	d1,[a15]8
.L3213:
	jlt	d0,d1,.L441
.L3214:

; ..\EAS\BSW\Dem\Dem.c	  6083              {
; ..\EAS\BSW\Dem\Dem.c	  6084                  if(DEM_DTC_DATAENTRYREF(DEM_CFG_EVENT_DTCREF(EventId)) == DEM_DATA_INVALID_U16)
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]4
	mul	d15,d15,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]1868
.L3215:
	mov.u	d0,#65535
.L3216:
	jne	d15,d0,.L442
.L3217:

; ..\EAS\BSW\Dem\Dem.c	  6085                  {
; ..\EAS\BSW\Dem\Dem.c	  6086                      *DebouncingState = DEM_FINALLY_DEFECTIVE;
	mov	d15,#2
.L3218:
	st.b	[a4],d15
.L3219:
	j	.L443
.L442:

; ..\EAS\BSW\Dem\Dem.c	  6087                  }
; ..\EAS\BSW\Dem\Dem.c	  6088                  else
; ..\EAS\BSW\Dem\Dem.c	  6089                  {
; ..\EAS\BSW\Dem\Dem.c	  6090                      *DebouncingState = DEM_DTR_UPDATE;
	mov	d15,#16
.L3220:
	st.b	[a4],d15
.L3221:
	j	.L444
.L441:

; ..\EAS\BSW\Dem\Dem.c	  6091                  }
; ..\EAS\BSW\Dem\Dem.c	  6092              }
; ..\EAS\BSW\Dem\Dem.c	  6093              else
; ..\EAS\BSW\Dem\Dem.c	  6094              {
; ..\EAS\BSW\Dem\Dem.c	  6095                  Result = E_NOT_OK;
	mov	d2,#1
.L444:
.L443:
.L440:
.L438:
.L435:
.L432:

; ..\EAS\BSW\Dem\Dem.c	  6096              }
; ..\EAS\BSW\Dem\Dem.c	  6097          }
; ..\EAS\BSW\Dem\Dem.c	  6098  #endif
; ..\EAS\BSW\Dem\Dem.c	  6099  
; ..\EAS\BSW\Dem\Dem.c	  6100  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  6101          if(DEM_CFG_EVENT_DBT(EventId) != NULL_PTR)
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]24
.L3222:
	jeq	d15,#0,.L445
.L3223:

; ..\EAS\BSW\Dem\Dem.c	  6102          {
; ..\EAS\BSW\Dem\Dem.c	  6103              if(DEM_EVENT_TIMERDIRECTION(EventId) == DEM_EVENT_STATUS_PREFAILED)
	sha	d15,d4,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]16
.L3224:
	jne	d15,#3,.L446
.L3225:

; ..\EAS\BSW\Dem\Dem.c	  6104              {
; ..\EAS\BSW\Dem\Dem.c	  6105                  *DebouncingState = DEM_TEMPORARILY_DEFECTIVE;
	mov	d15,#1
.L3226:
	st.b	[a4],d15
.L445:

; ..\EAS\BSW\Dem\Dem.c	  6106              }
; ..\EAS\BSW\Dem\Dem.c	  6107              else if(DEM_EVENT_TIMERDIRECTION(EventId) == DEM_EVENT_STATUS_PREPASSED)
; ..\EAS\BSW\Dem\Dem.c	  6108              {
; ..\EAS\BSW\Dem\Dem.c	  6109                  *DebouncingState = DEM_TEMPORARILY_HEALED;
; ..\EAS\BSW\Dem\Dem.c	  6110              }
; ..\EAS\BSW\Dem\Dem.c	  6111              else if(DEM_EVENT_TIMERDIRECTION(EventId) == DEM_EVENT_STATUS_PASSED)
; ..\EAS\BSW\Dem\Dem.c	  6112              {
; ..\EAS\BSW\Dem\Dem.c	  6113                  *DebouncingState = DEM_TEST_COMPLETE;
; ..\EAS\BSW\Dem\Dem.c	  6114              }
; ..\EAS\BSW\Dem\Dem.c	  6115              else if(DEM_EVENT_TIMERDIRECTION(EventId) == DEM_EVENT_STATUS_FAILED)
; ..\EAS\BSW\Dem\Dem.c	  6116              {
; ..\EAS\BSW\Dem\Dem.c	  6117                  if(DEM_DTC_DATAENTRYREF(DEM_CFG_EVENT_DTCREF(EventId)) == DEM_DATA_INVALID_U16)
; ..\EAS\BSW\Dem\Dem.c	  6118                  {
; ..\EAS\BSW\Dem\Dem.c	  6119                      *DebouncingState = DEM_FINALLY_DEFECTIVE;
; ..\EAS\BSW\Dem\Dem.c	  6120                  }
; ..\EAS\BSW\Dem\Dem.c	  6121                  else
; ..\EAS\BSW\Dem\Dem.c	  6122                  {
; ..\EAS\BSW\Dem\Dem.c	  6123                      *DebouncingState = DEM_DTR_UPDATE;
; ..\EAS\BSW\Dem\Dem.c	  6124                  }
; ..\EAS\BSW\Dem\Dem.c	  6125              }
; ..\EAS\BSW\Dem\Dem.c	  6126              else
; ..\EAS\BSW\Dem\Dem.c	  6127              {
; ..\EAS\BSW\Dem\Dem.c	  6128                  Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6129              }
; ..\EAS\BSW\Dem\Dem.c	  6130          }
; ..\EAS\BSW\Dem\Dem.c	  6131  #endif
; ..\EAS\BSW\Dem\Dem.c	  6132      }
; ..\EAS\BSW\Dem\Dem.c	  6133      return Result;
; ..\EAS\BSW\Dem\Dem.c	  6134  }
	ret
.L446:
	sha	d15,d4,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]16
.L3227:
	jne	d15,#2,.L448
.L3228:
	mov	d15,#4
.L3229:
	st.b	[a4],d15
.L3230:
	ret
.L448:
	sha	d15,d4,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]16
.L3231:
	jne	d15,#0,.L450
.L3232:
	mov	d15,#8
.L3233:
	st.b	[a4],d15
.L3234:
	ret
.L450:
	sha	d15,d4,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]16
.L3235:
	jne	d15,#1,.L452
.L3236:
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]4
	mul	d15,d15,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]1868
.L3237:
	mov.u	d0,#65535
.L3238:
	jne	d15,d0,.L453
.L3239:
	mov	d15,#2
.L3240:
	st.b	[a4],d15
.L3241:
	ret
.L453:
	mov	d15,#16
.L3242:
	st.b	[a4],d15
.L3243:
	ret
.L452:
.L431:
.L430:
.L429:
	mov	d2,#1
.L3244:
	ret
.L1663:
	
__Dem_GetDebouncingOfEvent_function_end:
	.size	Dem_GetDebouncingOfEvent,__Dem_GetDebouncingOfEvent_function_end-Dem_GetDebouncingOfEvent
.L1172:
	; End of function
	
	.sdecl	'.text.Dem.Dem_GetDTCOfEvent',code,cluster('Dem_GetDTCOfEvent')
	.sect	'.text.Dem.Dem_GetDTCOfEvent'
	.align	2
	
	.global	Dem_GetDTCOfEvent

; ..\EAS\BSW\Dem\Dem.c	  6135  
; ..\EAS\BSW\Dem\Dem.c	  6136  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  6137  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6138  * Function Name: Dem_GetDTCOfEvent
; ..\EAS\BSW\Dem\Dem.c	  6139  *
; ..\EAS\BSW\Dem\Dem.c	  6140  * Description: Gets the DTC of an event.
; ..\EAS\BSW\Dem\Dem.c	  6141  *
; ..\EAS\BSW\Dem\Dem.c	  6142  * Inputs: EventId: Identification of an event by assigned EventId.
; ..\EAS\BSW\Dem\Dem.c	  6143  *         DTCFormat: Defines the output-format of the requested DTC value.
; ..\EAS\BSW\Dem\Dem.c	  6144  *
; ..\EAS\BSW\Dem\Dem.c	  6145  * Outputs: DTCOfEvent: Receives the DTC value in respective format returned by
; ..\EAS\BSW\Dem\Dem.c	  6146  *                      this function. If the return value of the function is
; ..\EAS\BSW\Dem\Dem.c	  6147  *                      other than E_OK this parameter does not contain valid data.
; ..\EAS\BSW\Dem\Dem.c	  6148  *
; ..\EAS\BSW\Dem\Dem.c	  6149  * Return: E_OK: get of DTC was successful
; ..\EAS\BSW\Dem\Dem.c	  6150  *         E_NOT_OK: the call was not successful
; ..\EAS\BSW\Dem\Dem.c	  6151  *         DEM_E_NO_DTC_AVAILABLE: there is no DTC configured in the requested
; ..\EAS\BSW\Dem\Dem.c	  6152  *                                 format
; ..\EAS\BSW\Dem\Dem.c	  6153  *
; ..\EAS\BSW\Dem\Dem.c	  6154  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  6155  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6156  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  6157  FUNC(Std_ReturnType, DEM_CODE) Dem_GetDTCOfEvent
; Function Dem_GetDTCOfEvent
.L991:
Dem_GetDTCOfEvent:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  6158  (
; ..\EAS\BSW\Dem\Dem.c	  6159      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  6160      Dem_DTCFormatType DTCFormat,
; ..\EAS\BSW\Dem\Dem.c	  6161      P2VAR(uint32, AUTOMATIC, DEM_APPL_DATA) DTCOfEvent
; ..\EAS\BSW\Dem\Dem.c	  6162  )
; ..\EAS\BSW\Dem\Dem.c	  6163  {
; ..\EAS\BSW\Dem\Dem.c	  6164      Std_ReturnType Result = E_OK;
	mov	d2,#0
.L2514:

; ..\EAS\BSW\Dem\Dem.c	  6165  
; ..\EAS\BSW\Dem\Dem.c	  6166      if(EventId >= DEM_NUM_OF_EVENT)
	mov	d15,#116
.L3249:
	jge.u	d4,d15,.L457
.L3250:

; ..\EAS\BSW\Dem\Dem.c	  6167      {
; ..\EAS\BSW\Dem\Dem.c	  6168          DEM_DET_REPORT_ERROR(DEM_GETDTCOFEVENT_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  6169          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6170      }
; ..\EAS\BSW\Dem\Dem.c	  6171  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  6172      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  6173      else if(Dem_EventAvailable[EventId] == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  6174      {
; ..\EAS\BSW\Dem\Dem.c	  6175          /*SWS_Dem_01108*/
; ..\EAS\BSW\Dem\Dem.c	  6176          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6177      }
; ..\EAS\BSW\Dem\Dem.c	  6178  #endif
; ..\EAS\BSW\Dem\Dem.c	  6179      else
; ..\EAS\BSW\Dem\Dem.c	  6180      {
; ..\EAS\BSW\Dem\Dem.c	  6181          if(DTCFormat == DEM_DTC_FORMAT_UDS)
	jne	d5,#1,.L458
.L3251:

; ..\EAS\BSW\Dem\Dem.c	  6182          {
; ..\EAS\BSW\Dem\Dem.c	  6183              if(DEM_CFG_DTC_VALUE(DEM_CFG_EVENT_DTCREF(EventId)) != (uint32)0)
	mul	d0,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.hu	d15,[a15]4
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.w	d15,[a15]4
.L3252:
	jeq	d15,#0,.L459
.L3253:

; ..\EAS\BSW\Dem\Dem.c	  6184              {
; ..\EAS\BSW\Dem\Dem.c	  6185                  *DTCOfEvent = DEM_CFG_DTC_VALUE(DEM_CFG_EVENT_DTCREF(EventId));
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.hu	d15,[a15]4
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.w	d15,[a15]4
.L3254:
	st.w	[a4],d15
.L459:

; ..\EAS\BSW\Dem\Dem.c	  6186              }
; ..\EAS\BSW\Dem\Dem.c	  6187          }
; ..\EAS\BSW\Dem\Dem.c	  6188  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  6189          else if(DTCFormat == DEM_DTC_FORMAT_OBD)
; ..\EAS\BSW\Dem\Dem.c	  6190          {
; ..\EAS\BSW\Dem\Dem.c	  6191              if((DEM_CFG_DTC_OBDDTCREF(DEM_CFG_EVENT_DTCREF(EventId)) != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	  6192                  && (DEM_CFG_DTC_OBD_VALUE(DEM_CFG_EVENT_DTCREF(EventId)) != (uint16)0))
; ..\EAS\BSW\Dem\Dem.c	  6193              {
; ..\EAS\BSW\Dem\Dem.c	  6194                  *DTCOfEvent = (uint32)DEM_CFG_DTC_OBD_VALUE(DEM_CFG_EVENT_DTCREF(EventId));
; ..\EAS\BSW\Dem\Dem.c	  6195              }
; ..\EAS\BSW\Dem\Dem.c	  6196          }
; ..\EAS\BSW\Dem\Dem.c	  6197  #endif
; ..\EAS\BSW\Dem\Dem.c	  6198  #if(DEM_J1939_SUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  6199          else if(DTCFormat == DEM_DTC_FORMAT_J1939)
; ..\EAS\BSW\Dem\Dem.c	  6200          {
; ..\EAS\BSW\Dem\Dem.c	  6201              if((DEM_CFG_DTC_OBDDTCREF(DEM_CFG_EVENT_DTCREF(EventId)) != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	  6202                  && (DEM_CFG_DTC_J1939_VALUE(DEM_CFG_EVENT_DTCREF(EventId)) != (uint32)0))
; ..\EAS\BSW\Dem\Dem.c	  6203              {
; ..\EAS\BSW\Dem\Dem.c	  6204                  *DTCOfEvent = DEM_CFG_DTC_J1939_VALUE(DEM_CFG_EVENT_DTCREF(EventId));
; ..\EAS\BSW\Dem\Dem.c	  6205              }
; ..\EAS\BSW\Dem\Dem.c	  6206          }
; ..\EAS\BSW\Dem\Dem.c	  6207  #endif
; ..\EAS\BSW\Dem\Dem.c	  6208          else
; ..\EAS\BSW\Dem\Dem.c	  6209          {
; ..\EAS\BSW\Dem\Dem.c	  6210              Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6211          }
; ..\EAS\BSW\Dem\Dem.c	  6212      }
; ..\EAS\BSW\Dem\Dem.c	  6213      return Result;
; ..\EAS\BSW\Dem\Dem.c	  6214  }
	ret
.L458:
.L457:
	mov	d2,#1
.L3255:
	ret
.L1668:
	
__Dem_GetDTCOfEvent_function_end:
	.size	Dem_GetDTCOfEvent,__Dem_GetDTCOfEvent_function_end-Dem_GetDTCOfEvent
.L1177:
	; End of function
	
	.sdecl	'.text.Dem.Dem_SetEnableCondition',code,cluster('Dem_SetEnableCondition')
	.sect	'.text.Dem.Dem_SetEnableCondition'
	.align	2
	
	.global	Dem_SetEnableCondition

; ..\EAS\BSW\Dem\Dem.c	  6215  
; ..\EAS\BSW\Dem\Dem.c	  6216  #if(DEM_NUM_OF_EN_CONDITION > 0)
; ..\EAS\BSW\Dem\Dem.c	  6217  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  6218  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6219  * Function Name: Dem_SetEnableCondition
; ..\EAS\BSW\Dem\Dem.c	  6220  *
; ..\EAS\BSW\Dem\Dem.c	  6221  * Description: Sets an enable condition.
; ..\EAS\BSW\Dem\Dem.c	  6222  *
; ..\EAS\BSW\Dem\Dem.c	  6223  * Inputs: EnableConditionID: This parameter identifies the enable condition.
; ..\EAS\BSW\Dem\Dem.c	  6224  *         ConditionFulfilled: This parameter specifies whether the enable
; ..\EAS\BSW\Dem\Dem.c	  6225  *                             condition assigned to the EnableConditionID is
; ..\EAS\BSW\Dem\Dem.c	  6226  *                             fulfilled (TRUE) or not fulfilled (FALSE).
; ..\EAS\BSW\Dem\Dem.c	  6227  *
; ..\EAS\BSW\Dem\Dem.c	  6228  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  6229  *
; ..\EAS\BSW\Dem\Dem.c	  6230  * Return: E_OK: the enable condition could be set successfully
; ..\EAS\BSW\Dem\Dem.c	  6231  *         E_NOT_OK: the setting of the enable condition failed
; ..\EAS\BSW\Dem\Dem.c	  6232  *
; ..\EAS\BSW\Dem\Dem.c	  6233  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  6234  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6235  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  6236  FUNC(Std_ReturnType, DEM_CODE) Dem_SetEnableCondition
; Function Dem_SetEnableCondition
.L993:
Dem_SetEnableCondition:	.type	func
	mov	d6,d4
.L2516:

; ..\EAS\BSW\Dem\Dem.c	  6237  (
; ..\EAS\BSW\Dem\Dem.c	  6238      uint8 EnableConditionID,
; ..\EAS\BSW\Dem\Dem.c	  6239      boolean ConditionFulfilled
; ..\EAS\BSW\Dem\Dem.c	  6240  )
; ..\EAS\BSW\Dem\Dem.c	  6241  {
; ..\EAS\BSW\Dem\Dem.c	  6242      /*SWS_Dem_00202*/
; ..\EAS\BSW\Dem\Dem.c	  6243      Std_ReturnType Result = E_OK;
	mov	d7,#0
.L2517:

; ..\EAS\BSW\Dem\Dem.c	  6244      Dem_EventIdType EventId;
; ..\EAS\BSW\Dem\Dem.c	  6245      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	  6246  
; ..\EAS\BSW\Dem\Dem.c	  6247      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3260:
	jne	d15,#2,.L462
.L3261:

; ..\EAS\BSW\Dem\Dem.c	  6248      {
; ..\EAS\BSW\Dem\Dem.c	  6249          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  6250          DEM_DET_REPORT_ERROR(DEM_SETENABLECONDITION_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  6251          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6252      }
; ..\EAS\BSW\Dem\Dem.c	  6253      else if(EnableConditionID >= DEM_NUM_OF_EN_CONDITION)
	jlt.u	d6,#5,.L463
.L462:

; ..\EAS\BSW\Dem\Dem.c	  6254      {
; ..\EAS\BSW\Dem\Dem.c	  6255          DEM_DET_REPORT_ERROR(DEM_SETENABLECONDITION_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  6256          Result = E_NOT_OK;
	mov	d7,#1
.L3262:
	j	.L464
.L463:

; ..\EAS\BSW\Dem\Dem.c	  6257      }
; ..\EAS\BSW\Dem\Dem.c	  6258      else
; ..\EAS\BSW\Dem\Dem.c	  6259      {
; ..\EAS\BSW\Dem\Dem.c	  6260          if(ConditionFulfilled == TRUE)
	jne	d5,#1,.L465
.L3263:

; ..\EAS\BSW\Dem\Dem.c	  6261          {
; ..\EAS\BSW\Dem\Dem.c	  6262              Dem_EventEnCondition[EnableConditionID] = TRUE;
	movh.a	a15,#@his(Dem_EventEnCondition)
	lea	a15,[a15]@los(Dem_EventEnCondition)
.L3264:
	addsc.a	a15,a15,d6,#0
.L3265:
	mov	d15,#1
.L3266:
	st.b	[a15],d15
.L3267:
	j	.L466
.L465:

; ..\EAS\BSW\Dem\Dem.c	  6263          }
; ..\EAS\BSW\Dem\Dem.c	  6264          else
; ..\EAS\BSW\Dem\Dem.c	  6265          {
; ..\EAS\BSW\Dem\Dem.c	  6266              Dem_EventEnCondition[EnableConditionID] = FALSE;
	movh.a	a15,#@his(Dem_EventEnCondition)
	lea	a15,[a15]@los(Dem_EventEnCondition)
.L3268:
	addsc.a	a15,a15,d6,#0
.L3269:
	mov	d3,#0
.L2518:
	st.b	[a15],d3
.L3270:

; ..\EAS\BSW\Dem\Dem.c	  6267  #if(DEM_NUM_OF_EN_GROUP > 0)
; ..\EAS\BSW\Dem\Dem.c	  6268              for(EventId = 0; EventId < DEM_NUM_OF_EVENT; EventId++)
; ..\EAS\BSW\Dem\Dem.c	  6269              {
; ..\EAS\BSW\Dem\Dem.c	  6270                  if(DEM_CFG_EVENT_EN(EventId) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  6271                  {
; ..\EAS\BSW\Dem\Dem.c	  6272                      for(i = 0; i < DEM_CFG_EVENT_EN_NUM(EventId); i++)
; ..\EAS\BSW\Dem\Dem.c	  6273                      {
; ..\EAS\BSW\Dem\Dem.c	  6274                          if((DEM_CFG_EVENT_EN_REF(EventId)[i]) == EnableConditionID)
; ..\EAS\BSW\Dem\Dem.c	  6275                          {
; ..\EAS\BSW\Dem\Dem.c	  6276                              /*SWS_Dem_00654*/
; ..\EAS\BSW\Dem\Dem.c	  6277  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  6278                              if((DEM_CFG_EVENT_DBC(EventId) != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	  6279                                  && (DEM_CFG_EVENT_DBC_BEHAVIOR(EventId) == DEM_DEBOUNCE_RESET))
; ..\EAS\BSW\Dem\Dem.c	  6280                              {
; ..\EAS\BSW\Dem\Dem.c	  6281                                  DEM_EVENT_DBC(EventId) = 0;
	mov	e4,d3,d3
.L2515:

; ..\EAS\BSW\Dem\Dem.c	  6282                              }
; ..\EAS\BSW\Dem\Dem.c	  6283  #endif
; ..\EAS\BSW\Dem\Dem.c	  6284  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  6285                              if((DEM_CFG_EVENT_DBT(EventId) != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	  6286                                  && (DEM_CFG_EVENT_DBT_BAHAVIOR(EventId) == DEM_DEBOUNCE_RESET))
; ..\EAS\BSW\Dem\Dem.c	  6287                              {
; ..\EAS\BSW\Dem\Dem.c	  6288                                  DEM_EVENT_DBT(EventId) = 0;
; ..\EAS\BSW\Dem\Dem.c	  6289                                  DEM_EVENT_TIMERDIRECTION(EventId) = DEM_DATA_INVALID_U8;
	mov	d8,#255
.L3271:
	mov	d9,#116
.L3272:
	j	.L467
.L468:
	mul	d15,d3,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]8
.L3273:
	jeq	d15,#0,.L469
.L3274:
	mov	d0,#0
.L2519:
	j	.L470
.L471:
	mul	d1,d3,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d1,#0
	ld.a	a15,[a15]8
	ld.a	a15,[a15]4
.L3275:
	addsc.a	a15,a15,d0,#0
	ld.bu	d2,[a15]
.L3276:
	jne	d2,d6,.L472
.L3277:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d1,#0
	ld.w	d15,[a15]20
.L3278:
	jeq	d15,#0,.L473
.L3279:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d1,#0
	ld.a	a15,[a15]20
	ld.bu	d15,[a15]
.L3280:
	jne	d15,#1,.L474
.L3281:
	sha	d15,d3,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L3282:
	st.h	[a15]10,d4
.L474:
.L473:
	mov	d0,d1
.L2520:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.w	d15,[a15]24
.L3283:
	jeq	d15,#0,.L475
.L3284:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]24
	ld.bu	d15,[a15]
.L3285:
	jne	d15,#1,.L476
.L3286:
	sha	d15,d3,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L3287:
	st.w	[a15]12,d5
.L3288:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L3289:
	st.b	[a15]16,d8
.L3290:

; ..\EAS\BSW\Dem\Dem.c	  6290                              }
; ..\EAS\BSW\Dem\Dem.c	  6291  #endif
; ..\EAS\BSW\Dem\Dem.c	  6292                              break;
	j	.L477
.L472:
	add	d0,#1
.L2521:
	extr.u	d0,d0,#0,#8
.L470:
	mul	d15,d3,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]8
	ld.bu	d15,[a15]
.L3291:
	jlt.u	d0,d15,.L471

; ..\EAS\BSW\Dem\Dem.c	  6293                          }
; ..\EAS\BSW\Dem\Dem.c	  6294                      }
; ..\EAS\BSW\Dem\Dem.c	  6295                  }/*if(DEM_CFG_EVENT_EN(EventId) != NULL_PTR)*/
.L477:
.L476:
.L475:
.L469:
	add	d3,#1
.L467:
	jlt.u	d3,d9,.L468
.L466:
.L464:

; ..\EAS\BSW\Dem\Dem.c	  6296              }
; ..\EAS\BSW\Dem\Dem.c	  6297  #endif
; ..\EAS\BSW\Dem\Dem.c	  6298          }
; ..\EAS\BSW\Dem\Dem.c	  6299      }
; ..\EAS\BSW\Dem\Dem.c	  6300      return Result;
	mov	d2,d7
.L2522:

; ..\EAS\BSW\Dem\Dem.c	  6301  }
	ret
.L1674:
	
__Dem_SetEnableCondition_function_end:
	.size	Dem_SetEnableCondition,__Dem_SetEnableCondition_function_end-Dem_SetEnableCondition
.L1182:
	; End of function
	
	.sdecl	'.text.Dem.Dem_GetFaultDetectionCounter',code,cluster('Dem_GetFaultDetectionCounter')
	.sect	'.text.Dem.Dem_GetFaultDetectionCounter'
	.align	2
	
	.global	Dem_GetFaultDetectionCounter

; ..\EAS\BSW\Dem\Dem.c	  6302  #endif/*#if(DEM_NUM_OF_EN_CONDITION > 0)*/
; ..\EAS\BSW\Dem\Dem.c	  6303  
; ..\EAS\BSW\Dem\Dem.c	  6304  #if(DEM_NUM_OF_STOR_CONDITION > 0)
; ..\EAS\BSW\Dem\Dem.c	  6305  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  6306  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6307  * Function Name: Dem_SetStorageCondition
; ..\EAS\BSW\Dem\Dem.c	  6308  *
; ..\EAS\BSW\Dem\Dem.c	  6309  * Description: Sets a storage condition.
; ..\EAS\BSW\Dem\Dem.c	  6310  *
; ..\EAS\BSW\Dem\Dem.c	  6311  * Inputs: StorageConditionID: This parameter identifies the storage condition.
; ..\EAS\BSW\Dem\Dem.c	  6312  *         ConditionFulfilled: This parameter specifies whether the storage
; ..\EAS\BSW\Dem\Dem.c	  6313  *                             condition assigned to the StorageConditionID is
; ..\EAS\BSW\Dem\Dem.c	  6314  *                             fulfilled (TRUE) or not fulfilled (FALSE).
; ..\EAS\BSW\Dem\Dem.c	  6315  *
; ..\EAS\BSW\Dem\Dem.c	  6316  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  6317  *
; ..\EAS\BSW\Dem\Dem.c	  6318  * Return: E_OK: the storage condition could be set successfully
; ..\EAS\BSW\Dem\Dem.c	  6319  *         E_NOT_OK: the setting of the storage condition failed
; ..\EAS\BSW\Dem\Dem.c	  6320  *
; ..\EAS\BSW\Dem\Dem.c	  6321  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  6322  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6323  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  6324  FUNC(Std_ReturnType, DEM_CODE) Dem_SetStorageCondition
; ..\EAS\BSW\Dem\Dem.c	  6325  (
; ..\EAS\BSW\Dem\Dem.c	  6326      uint8 StorageConditionID,
; ..\EAS\BSW\Dem\Dem.c	  6327      boolean ConditionFulfilled
; ..\EAS\BSW\Dem\Dem.c	  6328  )
; ..\EAS\BSW\Dem\Dem.c	  6329  {
; ..\EAS\BSW\Dem\Dem.c	  6330      /*SWS_Dem_00543*/
; ..\EAS\BSW\Dem\Dem.c	  6331      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6332  
; ..\EAS\BSW\Dem\Dem.c	  6333      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	  6334      {
; ..\EAS\BSW\Dem\Dem.c	  6335          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  6336          DEM_DET_REPORT_ERROR(DEM_SETSTORAGECONDITION_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  6337          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6338      }
; ..\EAS\BSW\Dem\Dem.c	  6339      else if(StorageConditionID >= DEM_NUM_OF_STOR_CONDITION)
; ..\EAS\BSW\Dem\Dem.c	  6340      {
; ..\EAS\BSW\Dem\Dem.c	  6341          DEM_DET_REPORT_ERROR(DEM_SETSTORAGECONDITION_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  6342          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6343      }
; ..\EAS\BSW\Dem\Dem.c	  6344      else
; ..\EAS\BSW\Dem\Dem.c	  6345      {
; ..\EAS\BSW\Dem\Dem.c	  6346          if(ConditionFulfilled == TRUE)
; ..\EAS\BSW\Dem\Dem.c	  6347          {
; ..\EAS\BSW\Dem\Dem.c	  6348              Dem_EventStorCondition[StorageConditionID] = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  6349          }
; ..\EAS\BSW\Dem\Dem.c	  6350          else
; ..\EAS\BSW\Dem\Dem.c	  6351          {
; ..\EAS\BSW\Dem\Dem.c	  6352              Dem_EventStorCondition[StorageConditionID] = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  6353          }
; ..\EAS\BSW\Dem\Dem.c	  6354      }
; ..\EAS\BSW\Dem\Dem.c	  6355      return Result;
; ..\EAS\BSW\Dem\Dem.c	  6356  }
; ..\EAS\BSW\Dem\Dem.c	  6357  #endif
; ..\EAS\BSW\Dem\Dem.c	  6358  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  6359  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6360  * Function Name: Dem_GetFaultDetectionCounter
; ..\EAS\BSW\Dem\Dem.c	  6361  *
; ..\EAS\BSW\Dem\Dem.c	  6362  * Description: Gets the fault detection counter of an event. This API can only
; ..\EAS\BSW\Dem\Dem.c	  6363  *              be used through the RTE, and therefore no declaration is exported
; ..\EAS\BSW\Dem\Dem.c	  6364  *              via Dem.h.
; ..\EAS\BSW\Dem\Dem.c	  6365  *
; ..\EAS\BSW\Dem\Dem.c	  6366  * Inputs: EventId: Identification of an event by assigned EventId.
; ..\EAS\BSW\Dem\Dem.c	  6367  *
; ..\EAS\BSW\Dem\Dem.c	  6368  * Outputs: FaultDetectionCounter: This parameter receives the Fault Detection
; ..\EAS\BSW\Dem\Dem.c	  6369  *                                 Counter information of the requested EventId. 
; ..\EAS\BSW\Dem\Dem.c	  6370  *                                 If the return value of the function call is
; ..\EAS\BSW\Dem\Dem.c	  6371  *                                 other than E_OK this parameter does not
; ..\EAS\BSW\Dem\Dem.c	  6372  *                                 contain valid data.
; ..\EAS\BSW\Dem\Dem.c	  6373  *
; ..\EAS\BSW\Dem\Dem.c	  6374  * Return: E_OK: request was successful
; ..\EAS\BSW\Dem\Dem.c	  6375  *         E_NOT_OK: request failed
; ..\EAS\BSW\Dem\Dem.c	  6376  *         DEM_E_NO_FDC_AVAILABLE: there is no fault detection counter available
; ..\EAS\BSW\Dem\Dem.c	  6377  *                                 for the requested event.
; ..\EAS\BSW\Dem\Dem.c	  6378  *
; ..\EAS\BSW\Dem\Dem.c	  6379  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  6380  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6381  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  6382  FUNC(Std_ReturnType, DEM_CODE) Dem_GetFaultDetectionCounter
; Function Dem_GetFaultDetectionCounter
.L995:
Dem_GetFaultDetectionCounter:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  6383  (
; ..\EAS\BSW\Dem\Dem.c	  6384      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  6385      P2VAR(sint8, AUTOMATIC, DEM_APPL_DATA) FaultDetectionCounter
; ..\EAS\BSW\Dem\Dem.c	  6386  )
; ..\EAS\BSW\Dem\Dem.c	  6387  {
; ..\EAS\BSW\Dem\Dem.c	  6388      Std_ReturnType Result = E_OK;
	mov	d2,#0
.L2524:

; ..\EAS\BSW\Dem\Dem.c	  6389  
; ..\EAS\BSW\Dem\Dem.c	  6390      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3296:
	jne	d15,#2,.L479
.L3297:

; ..\EAS\BSW\Dem\Dem.c	  6391      {
; ..\EAS\BSW\Dem\Dem.c	  6392          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  6393          DEM_DET_REPORT_ERROR(DEM_GETFAULTDETECTIONCOUNTER_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  6394          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6395      }
; ..\EAS\BSW\Dem\Dem.c	  6396      else if(EventId >= DEM_NUM_OF_EVENT)
	mov	d15,#116
.L3298:
	jge.u	d4,d15,.L480
.L3299:

; ..\EAS\BSW\Dem\Dem.c	  6397      {
; ..\EAS\BSW\Dem\Dem.c	  6398          DEM_DET_REPORT_ERROR(DEM_GETFAULTDETECTIONCOUNTER_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  6399          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6400      }
; ..\EAS\BSW\Dem\Dem.c	  6401      else if(FaultDetectionCounter == NULL_PTR)
	jnz.a	a4,.L481
.L480:
.L479:

; ..\EAS\BSW\Dem\Dem.c	  6402      {
; ..\EAS\BSW\Dem\Dem.c	  6403          DEM_DET_REPORT_ERROR(DEM_GETFAULTDETECTIONCOUNTER_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  6404          Result = E_NOT_OK;
	mov	d2,#1
.L3300:

; ..\EAS\BSW\Dem\Dem.c	  6405      }
; ..\EAS\BSW\Dem\Dem.c	  6406  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  6407      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  6408      else if(Dem_EventAvailable[EventId] == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  6409      {
; ..\EAS\BSW\Dem\Dem.c	  6410          /*SWS_Dem_01108*/
; ..\EAS\BSW\Dem\Dem.c	  6411          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6412      }
; ..\EAS\BSW\Dem\Dem.c	  6413  #endif
; ..\EAS\BSW\Dem\Dem.c	  6414      else
; ..\EAS\BSW\Dem\Dem.c	  6415      {
; ..\EAS\BSW\Dem\Dem.c	  6416          /*SWS_Dem_00204*/
; ..\EAS\BSW\Dem\Dem.c	  6417  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  6418          if(DEM_CFG_EVENT_DBC(EventId) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  6419          {
; ..\EAS\BSW\Dem\Dem.c	  6420              if(DEM_EVENT_DBC(EventId) >= 0)
; ..\EAS\BSW\Dem\Dem.c	  6421              {
; ..\EAS\BSW\Dem\Dem.c	  6422                  *FaultDetectionCounter = DEM_EVENT_DBC_F_FDC(EventId);
; ..\EAS\BSW\Dem\Dem.c	  6423              }
; ..\EAS\BSW\Dem\Dem.c	  6424              else
; ..\EAS\BSW\Dem\Dem.c	  6425              {
; ..\EAS\BSW\Dem\Dem.c	  6426                  *FaultDetectionCounter = DEM_EVENT_DBC_P_FDC(EventId);
; ..\EAS\BSW\Dem\Dem.c	  6427              }
; ..\EAS\BSW\Dem\Dem.c	  6428          }
; ..\EAS\BSW\Dem\Dem.c	  6429          else
; ..\EAS\BSW\Dem\Dem.c	  6430  #endif
; ..\EAS\BSW\Dem\Dem.c	  6431  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  6432          if(DEM_CFG_EVENT_DBT(EventId) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  6433          {
; ..\EAS\BSW\Dem\Dem.c	  6434              if((DEM_EVENT_TIMERDIRECTION(EventId) == DEM_EVENT_STATUS_FAILED) \ 
; ..\EAS\BSW\Dem\Dem.c	  6435                      || (DEM_EVENT_TIMERDIRECTION(EventId) == DEM_EVENT_STATUS_PREFAILED))
; ..\EAS\BSW\Dem\Dem.c	  6436              {
; ..\EAS\BSW\Dem\Dem.c	  6437                  *FaultDetectionCounter = DEM_EVENT_DBT_F_FDC(EventId);
; ..\EAS\BSW\Dem\Dem.c	  6438              }
; ..\EAS\BSW\Dem\Dem.c	  6439              else if((DEM_EVENT_TIMERDIRECTION(EventId) == DEM_EVENT_STATUS_PASSED) \ 
; ..\EAS\BSW\Dem\Dem.c	  6440                      || (DEM_EVENT_TIMERDIRECTION(EventId) == DEM_EVENT_STATUS_PREPASSED))
; ..\EAS\BSW\Dem\Dem.c	  6441              {
; ..\EAS\BSW\Dem\Dem.c	  6442                  *FaultDetectionCounter = DEM_EVENT_DBT_P_FDC(EventId);
; ..\EAS\BSW\Dem\Dem.c	  6443              }
; ..\EAS\BSW\Dem\Dem.c	  6444              else
; ..\EAS\BSW\Dem\Dem.c	  6445              {
; ..\EAS\BSW\Dem\Dem.c	  6446                  *FaultDetectionCounter = 0;
; ..\EAS\BSW\Dem\Dem.c	  6447              }
; ..\EAS\BSW\Dem\Dem.c	  6448          }
; ..\EAS\BSW\Dem\Dem.c	  6449          else
; ..\EAS\BSW\Dem\Dem.c	  6450  #endif
; ..\EAS\BSW\Dem\Dem.c	  6451          if(DEM_CFG_EVENT_GET_FDC_FNC(EventId) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  6452          {
; ..\EAS\BSW\Dem\Dem.c	  6453              /*SWS_Dem_00264*//*SWS_Dem_00439*/
; ..\EAS\BSW\Dem\Dem.c	  6454              Result = DEM_CFG_EVENT_GET_FDC_FNC(EventId)(FaultDetectionCounter);
; ..\EAS\BSW\Dem\Dem.c	  6455          }
; ..\EAS\BSW\Dem\Dem.c	  6456          else
; ..\EAS\BSW\Dem\Dem.c	  6457          {
; ..\EAS\BSW\Dem\Dem.c	  6458              /*SWS_Dem_00671*/
; ..\EAS\BSW\Dem\Dem.c	  6459              Result = DEM_E_NO_FDC_AVAILABLE;
; ..\EAS\BSW\Dem\Dem.c	  6460          }
; ..\EAS\BSW\Dem\Dem.c	  6461      }
; ..\EAS\BSW\Dem\Dem.c	  6462      return Result;
; ..\EAS\BSW\Dem\Dem.c	  6463  }
	ret
.L481:
	mul	d0,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.w	d15,[a15]20
.L3301:
	jeq	d15,#0,.L483
.L3302:
	sha	d15,d4,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.h	d1,[a15]10
.L3303:
	jlt	d1,#0,.L484
.L3304:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.h	d15,[a15]10
	mul	d1,d15,#127
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]20
	ld.h	d15,[a15]8
	div	e0,d1,d15
.L3305:
	st.b	[a4],d0
.L3306:
	ret
.L484:
	sha	d15,d4,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.h	d15,[a15]10
	sha	d0,d15,#7
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]20
	ld.h	d15,[a15]6
	rsub	d15,#0
	div	e0,d0,d15
.L3307:
	st.b	[a4],d0
.L3308:
	ret
.L483:
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]24
.L3309:
	jeq	d15,#0,.L487
.L3310:
	sha	d15,d4,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]16
.L3311:
	jeq	d0,#1,.L488
.L3312:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]16
.L3313:
	jne	d15,#3,.L489
.L488:
	sha	d15,d4,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]12
	mul	d0,d15,#127
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]24
	ld.w	d15,[a15]6
	mov	d1,#5
	div.u	e4,d15,d1
.L2523:
	div.u	e0,d0,d4
.L3314:
	st.b	[a4],d0
.L3315:
	ret
.L489:
	sha	d15,d4,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]16
.L3316:
	jeq	d0,#0,.L491
.L3317:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]16
.L3318:
	jne	d15,#2,.L492
.L491:
	sha	d15,d4,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]12
	sha	d0,d15,#7
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]24
	ld.w	d15,[a15]2
	mov	d1,#5
	div.u	e4,d15,d1
.L2525:
	rsub	d4,#0
	div	e0,d0,d4
.L3319:
	st.b	[a4],d0
.L3320:
	ret
.L492:
	mov	d15,#0
.L3321:
	st.b	[a4],d15
.L3322:
	ret
.L487:
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.w	d0,[a15]28
.L3323:
	jeq	d0,#0,.L495
.L3324:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]28
.L3325:
	ji	a15
.L495:
	mov	d2,#2
.L3326:
	ret
.L1680:
	
__Dem_GetFaultDetectionCounter_function_end:
	.size	Dem_GetFaultDetectionCounter,__Dem_GetFaultDetectionCounter_function_end-Dem_GetFaultDetectionCounter
.L1187:
	; End of function
	
	.sdecl	'.text.Dem.Dem_GetIndicatorStatus',code,cluster('Dem_GetIndicatorStatus')
	.sect	'.text.Dem.Dem_GetIndicatorStatus'
	.align	2
	
	.global	Dem_GetIndicatorStatus

; ..\EAS\BSW\Dem\Dem.c	  6464  
; ..\EAS\BSW\Dem\Dem.c	  6465  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  6466  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6467  * Function Name: Dem_GetIndicatorStatus
; ..\EAS\BSW\Dem\Dem.c	  6468  *
; ..\EAS\BSW\Dem\Dem.c	  6469  * Description: Gets the indicator status derived from the event status.
; ..\EAS\BSW\Dem\Dem.c	  6470  *
; ..\EAS\BSW\Dem\Dem.c	  6471  * Inputs: IndicatorId: Number of indicator
; ..\EAS\BSW\Dem\Dem.c	  6472  *
; ..\EAS\BSW\Dem\Dem.c	  6473  * Outputs: IndicatorStatus: Status of the indicator, like off, on, or blinking.
; ..\EAS\BSW\Dem\Dem.c	  6474  *
; ..\EAS\BSW\Dem\Dem.c	  6475  * Return: E_OK: Operation was successful
; ..\EAS\BSW\Dem\Dem.c	  6476  *         E_NOT_OK: Operation failed
; ..\EAS\BSW\Dem\Dem.c	  6477  *
; ..\EAS\BSW\Dem\Dem.c	  6478  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  6479  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6480  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  6481  FUNC(Std_ReturnType, DEM_CODE) Dem_GetIndicatorStatus
; Function Dem_GetIndicatorStatus
.L997:
Dem_GetIndicatorStatus:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  6482  (
; ..\EAS\BSW\Dem\Dem.c	  6483      uint8 IndicatorId,
; ..\EAS\BSW\Dem\Dem.c	  6484      P2VAR(Dem_IndicatorStatusType, AUTOMATIC, DEM_APPL_DATA) IndicatorStatus
; ..\EAS\BSW\Dem\Dem.c	  6485  )
; ..\EAS\BSW\Dem\Dem.c	  6486  {
; ..\EAS\BSW\Dem\Dem.c	  6487      /*SWS_Dem_00046*/
; ..\EAS\BSW\Dem\Dem.c	  6488      Std_ReturnType Result = E_NOT_OK;
	mov	d2,#1
.L2526:

; ..\EAS\BSW\Dem\Dem.c	  6489  
; ..\EAS\BSW\Dem\Dem.c	  6490      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	  6491      {
; ..\EAS\BSW\Dem\Dem.c	  6492          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  6493          DEM_DET_REPORT_ERROR(DEM_GETINDICATORSTATUS_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  6494      }
; ..\EAS\BSW\Dem\Dem.c	  6495      else if(IndicatorId >= DEM_NUM_OF_INDICATOR)
; ..\EAS\BSW\Dem\Dem.c	  6496      {
; ..\EAS\BSW\Dem\Dem.c	  6497          DEM_DET_REPORT_ERROR(DEM_GETINDICATORSTATUS_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  6498      }
; ..\EAS\BSW\Dem\Dem.c	  6499      else if(IndicatorStatus == NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  6500      {
; ..\EAS\BSW\Dem\Dem.c	  6501          DEM_DET_REPORT_ERROR(DEM_GETINDICATORSTATUS_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  6502      }
; ..\EAS\BSW\Dem\Dem.c	  6503      else
; ..\EAS\BSW\Dem\Dem.c	  6504      {
; ..\EAS\BSW\Dem\Dem.c	  6505  #if(DEM_NUM_OF_INDICATOR > 0)
; ..\EAS\BSW\Dem\Dem.c	  6506          DemInternal_GetIndicatorStatus(IndicatorId, IndicatorStatus);
; ..\EAS\BSW\Dem\Dem.c	  6507          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  6508  #endif
; ..\EAS\BSW\Dem\Dem.c	  6509      }    
; ..\EAS\BSW\Dem\Dem.c	  6510      return Result;
; ..\EAS\BSW\Dem\Dem.c	  6511  }
	ret
.L1685:
	
__Dem_GetIndicatorStatus_function_end:
	.size	Dem_GetIndicatorStatus,__Dem_GetIndicatorStatus_function_end-Dem_GetIndicatorStatus
.L1192:
	; End of function
	
	.sdecl	'.text.Dem.Dem_GetEventFreezeFrameData',code,cluster('Dem_GetEventFreezeFrameData')
	.sect	'.text.Dem.Dem_GetEventFreezeFrameData'
	.align	2
	
	.global	Dem_GetEventFreezeFrameData

; ..\EAS\BSW\Dem\Dem.c	  6512  
; ..\EAS\BSW\Dem\Dem.c	  6513  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  6514  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6515  * Function Name: Dem_GetEventFreezeFrameData
; ..\EAS\BSW\Dem\Dem.c	  6516  *
; ..\EAS\BSW\Dem\Dem.c	  6517  * Description: Gets the data of a freeze frame by event.
; ..\EAS\BSW\Dem\Dem.c	  6518  *
; ..\EAS\BSW\Dem\Dem.c	  6519  * Inputs: EventId: Identification of an event by assigned EventId.
; ..\EAS\BSW\Dem\Dem.c	  6520  *         RecordNumber: This parameter is a unique identifier for a freeze frame
; ..\EAS\BSW\Dem\Dem.c	  6521  *                       record as defined in ISO14229-1. 0xFF means most recent
; ..\EAS\BSW\Dem\Dem.c	  6522  *                       freeze frame record is returned.
; ..\EAS\BSW\Dem\Dem.c	  6523  *                       0x00 is only supported if the Dem module supports WWH-OBD
; ..\EAS\BSW\Dem\Dem.c	  6524  *                       (refer to DemOBDSupport)
; ..\EAS\BSW\Dem\Dem.c	  6525  *         ReportTotalRecord: This parameter is obsolete and shall be set to FALSE.
; ..\EAS\BSW\Dem\Dem.c	  6526  *                            This function requests a single PID/DID.
; ..\EAS\BSW\Dem\Dem.c	  6527  *         DataId: This parameter specifies the DID (ISO14229-1) that shall be
; ..\EAS\BSW\Dem\Dem.c	  6528  *                 copied to the destination buffer.
; ..\EAS\BSW\Dem\Dem.c	  6529  *
; ..\EAS\BSW\Dem\Dem.c	  6530  * Outputs: DestBuffer: This parameter contains a byte pointer that points to the
; ..\EAS\BSW\Dem\Dem.c	  6531  *                      buffer, to which the freeze frame data record shall be written
; ..\EAS\BSW\Dem\Dem.c	  6532  *                      to. The format is raw hexadecimal values and contains no
; ..\EAS\BSW\Dem\Dem.c	  6533  *                      header-information.
; ..\EAS\BSW\Dem\Dem.c	  6534  *
; ..\EAS\BSW\Dem\Dem.c	  6535  * Return: E_OK: Operation was successful
; ..\EAS\BSW\Dem\Dem.c	  6536  *         E_NOT_OK: Operation could not be performed
; ..\EAS\BSW\Dem\Dem.c	  6537  *         DEM_E_NODATAAVAILABLE: The requested event data is not currently stored
; ..\EAS\BSW\Dem\Dem.c	  6538  *                                (but the request was valid)
; ..\EAS\BSW\Dem\Dem.c	  6539  *         DEM_E_WRONG_RECORDNUMBER: The requested record number is not supported by
; ..\EAS\BSW\Dem\Dem.c	  6540  *                                   the event
; ..\EAS\BSW\Dem\Dem.c	  6541  *         DEM_E_WRONG_DIDNUMBER: The requested DID is not supported by the freeze frame
; ..\EAS\BSW\Dem\Dem.c	  6542  *
; ..\EAS\BSW\Dem\Dem.c	  6543  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  6544  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6545  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  6546  FUNC(Std_ReturnType, DEM_CODE) Dem_GetEventFreezeFrameData
; Function Dem_GetEventFreezeFrameData
.L999:
Dem_GetEventFreezeFrameData:	.type	func
	sub.a	a10,#8
.L2527:

; ..\EAS\BSW\Dem\Dem.c	  6547  (
; ..\EAS\BSW\Dem\Dem.c	  6548      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  6549      uint8 RecordNumber,
; ..\EAS\BSW\Dem\Dem.c	  6550      boolean ReportTotalRecord,
; ..\EAS\BSW\Dem\Dem.c	  6551      uint16 DataId,
; ..\EAS\BSW\Dem\Dem.c	  6552      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) DestBuffer
; ..\EAS\BSW\Dem\Dem.c	  6553  )
; ..\EAS\BSW\Dem\Dem.c	  6554  {
; ..\EAS\BSW\Dem\Dem.c	  6555      Std_ReturnType Result = E_NOT_OK;
	mov	d2,#1
.L2529:

; ..\EAS\BSW\Dem\Dem.c	  6556      uint16 DataSize = DEM_MAX_FFSIZE_OF_DTC;
	mov	d15,#46
.L3335:
	st.h	[a10],d15
.L3336:

; ..\EAS\BSW\Dem\Dem.c	  6557  
; ..\EAS\BSW\Dem\Dem.c	  6558      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3337:
	jne	d15,#2,.L499
.L3338:

; ..\EAS\BSW\Dem\Dem.c	  6559      {
; ..\EAS\BSW\Dem\Dem.c	  6560          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  6561          DEM_DET_REPORT_ERROR(DEM_GETEVENTFREEZEFRAMEDATA_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  6562      }
; ..\EAS\BSW\Dem\Dem.c	  6563      else if(EventId >= DEM_NUM_OF_EVENT)
	mov	d15,#116
.L3339:
	jge.u	d4,d15,.L500
.L3340:

; ..\EAS\BSW\Dem\Dem.c	  6564      {
; ..\EAS\BSW\Dem\Dem.c	  6565          DEM_DET_REPORT_ERROR(DEM_GETEVENTFREEZEFRAMEDATA_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  6566      }
; ..\EAS\BSW\Dem\Dem.c	  6567      else if(DestBuffer == NULL_PTR)
	jz.a	a4,.L501
.L3341:

; ..\EAS\BSW\Dem\Dem.c	  6568      {
; ..\EAS\BSW\Dem\Dem.c	  6569          DEM_DET_REPORT_ERROR(DEM_GETEVENTFREEZEFRAMEDATA_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  6570      }
; ..\EAS\BSW\Dem\Dem.c	  6571  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  6572      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  6573      else if(Dem_EventAvailable[EventId] == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  6574      {
; ..\EAS\BSW\Dem\Dem.c	  6575          /*Result = E_NOT_OK;*/
; ..\EAS\BSW\Dem\Dem.c	  6576      }
; ..\EAS\BSW\Dem\Dem.c	  6577  #endif
; ..\EAS\BSW\Dem\Dem.c	  6578      else if(DEM_DTC_DATAENTRYREF(DEM_CFG_EVENT_DTCREF(EventId)) == DEM_DATA_INVALID_U16)
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]4
	mul	d15,d15,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]1868
.L3342:
	mov.u	d0,#65535
.L3343:
	jeq	d15,d0,.L502
.L3344:

; ..\EAS\BSW\Dem\Dem.c	  6579      {
; ..\EAS\BSW\Dem\Dem.c	  6580          /*Result = E_NOT_OK;*/
; ..\EAS\BSW\Dem\Dem.c	  6581      }
; ..\EAS\BSW\Dem\Dem.c	  6582      else
; ..\EAS\BSW\Dem\Dem.c	  6583      {
; ..\EAS\BSW\Dem\Dem.c	  6584          Result = DemInternal_GetEventFreezeFrameDataEx(EventId, RecordNumber, DataId, DestBuffer, &DataSize);
	mov.aa	a5,a10
	mov	d6,d7
.L2528:
	j	DemInternal_GetEventFreezeFrameDataEx
.L502:
.L501:
.L500:
.L499:

; ..\EAS\BSW\Dem\Dem.c	  6585      }
; ..\EAS\BSW\Dem\Dem.c	  6586      return Result;
; ..\EAS\BSW\Dem\Dem.c	  6587  }
	ret
.L1690:
	
__Dem_GetEventFreezeFrameData_function_end:
	.size	Dem_GetEventFreezeFrameData,__Dem_GetEventFreezeFrameData_function_end-Dem_GetEventFreezeFrameData
.L1197:
	; End of function
	
	.sdecl	'.text.Dem.Dem_GetEventFreezeFrameDataEx',code,cluster('Dem_GetEventFreezeFrameDataEx')
	.sect	'.text.Dem.Dem_GetEventFreezeFrameDataEx'
	.align	2
	
	.global	Dem_GetEventFreezeFrameDataEx

; ..\EAS\BSW\Dem\Dem.c	  6588  
; ..\EAS\BSW\Dem\Dem.c	  6589  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  6590  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6591  * Function Name: Dem_GetEventFreezeFrameDataEx
; ..\EAS\BSW\Dem\Dem.c	  6592  *
; ..\EAS\BSW\Dem\Dem.c	  6593  * Description: Gets the data of a freeze frame by event.
; ..\EAS\BSW\Dem\Dem.c	  6594  *
; ..\EAS\BSW\Dem\Dem.c	  6595  * Inputs: EventId: Identification of an event by assigned EventId.
; ..\EAS\BSW\Dem\Dem.c	  6596  *         RecordNumber: This parameter is a unique identifier for a freeze frame
; ..\EAS\BSW\Dem\Dem.c	  6597  *                       record as defined in ISO14229-1. 0xFF means most recent
; ..\EAS\BSW\Dem\Dem.c	  6598  *                       freeze frame record is returned. 0x00 is only supported
; ..\EAS\BSW\Dem\Dem.c	  6599  *                       if the Dem module supports WWH-OBD (refer to DemOBDSupport)
; ..\EAS\BSW\Dem\Dem.c	  6600  *         DataId: This parameter specifies the DID (ISO14229-1) that shall be
; ..\EAS\BSW\Dem\Dem.c	  6601  *                 copied to the destination buffer.
; ..\EAS\BSW\Dem\Dem.c	  6602  *         BufSize: When the function is called this parameter contains the maximum
; ..\EAS\BSW\Dem\Dem.c	  6603  *                  number of data bytes that can be written to the buffer.
; ..\EAS\BSW\Dem\Dem.c	  6604  *
; ..\EAS\BSW\Dem\Dem.c	  6605  * Outputs: BufSize: The function returns the actual number of written data bytes
; ..\EAS\BSW\Dem\Dem.c	  6606  *                   in this parameter.
; ..\EAS\BSW\Dem\Dem.c	  6607  *          DestBuffer: This parameter contains a byte pointer that points to the
; ..\EAS\BSW\Dem\Dem.c	  6608  *                      buffer, to which the freeze frame data record shall be
; ..\EAS\BSW\Dem\Dem.c	  6609  *                      written to. The format is raw hexadecimal values and
; ..\EAS\BSW\Dem\Dem.c	  6610  *                      contains no header-information.
; ..\EAS\BSW\Dem\Dem.c	  6611  *
; ..\EAS\BSW\Dem\Dem.c	  6612  * Return: E_OK: Operation was successful
; ..\EAS\BSW\Dem\Dem.c	  6613  *         E_NOT_OK: Operation could not be performed
; ..\EAS\BSW\Dem\Dem.c	  6614  *         DEM_E_NODATAAVAILABLE: The requested event data is not currently stored
; ..\EAS\BSW\Dem\Dem.c	  6615  *                                (but the request was valid)
; ..\EAS\BSW\Dem\Dem.c	  6616  *         DEM_E_WRONG_RECORDNUMBER: The requested record number is not supported
; ..\EAS\BSW\Dem\Dem.c	  6617  *                                   by the event
; ..\EAS\BSW\Dem\Dem.c	  6618  *         DEM_E_WRONG_DIDNUMBER: The requested DID is not supported by the freeze
; ..\EAS\BSW\Dem\Dem.c	  6619  *                                frame
; ..\EAS\BSW\Dem\Dem.c	  6620  *         DEM_E_WRONG_BUFFERSIZE: The provided buffer size is too small
; ..\EAS\BSW\Dem\Dem.c	  6621  *
; ..\EAS\BSW\Dem\Dem.c	  6622  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  6623  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6624  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  6625  FUNC(Std_ReturnType, DEM_CODE) Dem_GetEventFreezeFrameDataEx
; Function Dem_GetEventFreezeFrameDataEx
.L1001:
Dem_GetEventFreezeFrameDataEx:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  6626  (
; ..\EAS\BSW\Dem\Dem.c	  6627      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  6628      uint8 RecordNumber,
; ..\EAS\BSW\Dem\Dem.c	  6629      uint16 DataId,
; ..\EAS\BSW\Dem\Dem.c	  6630      uint8 *DestBuffer,
; ..\EAS\BSW\Dem\Dem.c	  6631      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) BufSize
; ..\EAS\BSW\Dem\Dem.c	  6632  )
; ..\EAS\BSW\Dem\Dem.c	  6633  {
; ..\EAS\BSW\Dem\Dem.c	  6634      /*SWS_Dem_01062*//*SWS_Dem_00479*//*SWS_Dem_00995*/
; ..\EAS\BSW\Dem\Dem.c	  6635      Std_ReturnType Result = E_NOT_OK;
	mov	d2,#1
.L2530:

; ..\EAS\BSW\Dem\Dem.c	  6636  
; ..\EAS\BSW\Dem\Dem.c	  6637      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3349:
	jne	d15,#2,.L504
.L3350:

; ..\EAS\BSW\Dem\Dem.c	  6638      {
; ..\EAS\BSW\Dem\Dem.c	  6639          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  6640          DEM_DET_REPORT_ERROR(DEM_GETEVENTFREEZEFRAMEDATAEX_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  6641      }
; ..\EAS\BSW\Dem\Dem.c	  6642      else if(EventId >= DEM_NUM_OF_EVENT)
	mov	d15,#116
.L3351:
	jge.u	d4,d15,.L505
.L3352:

; ..\EAS\BSW\Dem\Dem.c	  6643      {
; ..\EAS\BSW\Dem\Dem.c	  6644          DEM_DET_REPORT_ERROR(DEM_GETEVENTFREEZEFRAMEDATAEX_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  6645      }
; ..\EAS\BSW\Dem\Dem.c	  6646      else if((DestBuffer == NULL_PTR) || (BufSize == NULL_PTR) || (*BufSize == 0))
	jz.a	a4,.L506
.L3353:
	jz.a	a5,.L507
.L3354:
	ld.hu	d15,[a5]0
.L3355:
	jeq	d15,#0,.L508
.L3356:

; ..\EAS\BSW\Dem\Dem.c	  6647      {
; ..\EAS\BSW\Dem\Dem.c	  6648          DEM_DET_REPORT_ERROR(DEM_GETEVENTFREEZEFRAMEDATAEX_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  6649      }
; ..\EAS\BSW\Dem\Dem.c	  6650  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  6651      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  6652      else if(Dem_EventAvailable[EventId] == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  6653      {
; ..\EAS\BSW\Dem\Dem.c	  6654          /*SWS_Dem_00996*//*SWS_Dem_01108*/
; ..\EAS\BSW\Dem\Dem.c	  6655      }
; ..\EAS\BSW\Dem\Dem.c	  6656  #endif
; ..\EAS\BSW\Dem\Dem.c	  6657      else if(DEM_DTC_DATAENTRYREF(DEM_CFG_EVENT_DTCREF(EventId)) == DEM_DATA_INVALID_U16)
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]4
	mul	d15,d15,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]1868
.L3357:
	mov.u	d0,#65535
.L3358:
	jeq	d15,d0,.L509
.L3359:

; ..\EAS\BSW\Dem\Dem.c	  6658      {
; ..\EAS\BSW\Dem\Dem.c	  6659          /*Result = E_NOT_OK;*/
; ..\EAS\BSW\Dem\Dem.c	  6660      }
; ..\EAS\BSW\Dem\Dem.c	  6661      else
; ..\EAS\BSW\Dem\Dem.c	  6662      {
; ..\EAS\BSW\Dem\Dem.c	  6663          Result = DemInternal_GetEventFreezeFrameDataEx(EventId, RecordNumber, DataId, DestBuffer, BufSize);
	j	DemInternal_GetEventFreezeFrameDataEx
.L509:
.L508:
.L507:
.L506:
.L505:
.L504:

; ..\EAS\BSW\Dem\Dem.c	  6664      }
; ..\EAS\BSW\Dem\Dem.c	  6665      return Result;
; ..\EAS\BSW\Dem\Dem.c	  6666  }
	ret
.L1699:
	
__Dem_GetEventFreezeFrameDataEx_function_end:
	.size	Dem_GetEventFreezeFrameDataEx,__Dem_GetEventFreezeFrameDataEx_function_end-Dem_GetEventFreezeFrameDataEx
.L1202:
	; End of function
	
	.sdecl	'.text.Dem.Dem_GetEventExtendedDataRecord',code,cluster('Dem_GetEventExtendedDataRecord')
	.sect	'.text.Dem.Dem_GetEventExtendedDataRecord'
	.align	2
	
	.global	Dem_GetEventExtendedDataRecord

; ..\EAS\BSW\Dem\Dem.c	  6667  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  6668  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6669  * Function Name: Dem_GetEventExtendedDataRecord
; ..\EAS\BSW\Dem\Dem.c	  6670  *
; ..\EAS\BSW\Dem\Dem.c	  6671  * Description: Gets the data of an extended data record by event.
; ..\EAS\BSW\Dem\Dem.c	  6672  *
; ..\EAS\BSW\Dem\Dem.c	  6673  * Inputs: EventId: Identification of an event by assigned EventId.
; ..\EAS\BSW\Dem\Dem.c	  6674  *         RecordNumber: Identification of requested Extended data record.Valid
; ..\EAS\BSW\Dem\Dem.c	  6675  *                       values are between 0x01 and 0xEF as defined in ISO14229-1.
; ..\EAS\BSW\Dem\Dem.c	  6676  *
; ..\EAS\BSW\Dem\Dem.c	  6677  * Outputs: DestBuffer: This parameter contains a byte pointer that points to the
; ..\EAS\BSW\Dem\Dem.c	  6678  *                      buffer, to which the freeze frame data record shall be
; ..\EAS\BSW\Dem\Dem.c	  6679  *                      written to. The format is raw hexadecimal values and
; ..\EAS\BSW\Dem\Dem.c	  6680  *                      contains no header-information.
; ..\EAS\BSW\Dem\Dem.c	  6681  *
; ..\EAS\BSW\Dem\Dem.c	  6682  * Return: E_OK: Operation was successful
; ..\EAS\BSW\Dem\Dem.c	  6683  *         E_NOT_OK: Operation could not be performed
; ..\EAS\BSW\Dem\Dem.c	  6684  *         DEM_E_NODATAAVAILABLE: The requested event data is not currently stored
; ..\EAS\BSW\Dem\Dem.c	  6685  *                                (but the request was valid)
; ..\EAS\BSW\Dem\Dem.c	  6686  *         DEM_E_WRONG_RECORDNUMBER: The requested record number is not supported
; ..\EAS\BSW\Dem\Dem.c	  6687  *                                   by the event
; ..\EAS\BSW\Dem\Dem.c	  6688  *
; ..\EAS\BSW\Dem\Dem.c	  6689  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  6690  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6691  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  6692  FUNC(Std_ReturnType, DEM_CODE) Dem_GetEventExtendedDataRecord
; Function Dem_GetEventExtendedDataRecord
.L1003:
Dem_GetEventExtendedDataRecord:	.type	func
	sub.a	a10,#8
.L2531:

; ..\EAS\BSW\Dem\Dem.c	  6693  (
; ..\EAS\BSW\Dem\Dem.c	  6694      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  6695      uint8 RecordNumber,
; ..\EAS\BSW\Dem\Dem.c	  6696      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) DestBuffer
; ..\EAS\BSW\Dem\Dem.c	  6697  )
; ..\EAS\BSW\Dem\Dem.c	  6698  {
; ..\EAS\BSW\Dem\Dem.c	  6699      Std_ReturnType Result = E_NOT_OK;
	mov	d2,#1
.L2532:

; ..\EAS\BSW\Dem\Dem.c	  6700      uint16 DataSize = DEM_MAX_EXTSIZE_OF_DTC;
	mov	d15,#8
.L3364:
	st.h	[a10],d15
.L3365:

; ..\EAS\BSW\Dem\Dem.c	  6701  
; ..\EAS\BSW\Dem\Dem.c	  6702      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3366:
	jne	d15,#2,.L511
.L3367:

; ..\EAS\BSW\Dem\Dem.c	  6703      {
; ..\EAS\BSW\Dem\Dem.c	  6704          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  6705          DEM_DET_REPORT_ERROR(DEM_GETEVENTEXTENDEDDATARECORD_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  6706      }
; ..\EAS\BSW\Dem\Dem.c	  6707      else if(EventId >= DEM_NUM_OF_EVENT)
	mov	d15,#116
.L3368:
	jge.u	d4,d15,.L512
.L3369:

; ..\EAS\BSW\Dem\Dem.c	  6708      {
; ..\EAS\BSW\Dem\Dem.c	  6709          DEM_DET_REPORT_ERROR(DEM_GETEVENTEXTENDEDDATARECORD_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  6710      }
; ..\EAS\BSW\Dem\Dem.c	  6711      else if(DestBuffer == NULL_PTR)
	jz.a	a4,.L513
.L3370:

; ..\EAS\BSW\Dem\Dem.c	  6712      {
; ..\EAS\BSW\Dem\Dem.c	  6713          DEM_DET_REPORT_ERROR(DEM_GETEVENTEXTENDEDDATARECORD_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  6714      }
; ..\EAS\BSW\Dem\Dem.c	  6715  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  6716      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  6717      else if(Dem_EventAvailable[EventId] == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  6718      {
; ..\EAS\BSW\Dem\Dem.c	  6719          /*Result = E_NOT_OK;*/
; ..\EAS\BSW\Dem\Dem.c	  6720      }
; ..\EAS\BSW\Dem\Dem.c	  6721  #endif
; ..\EAS\BSW\Dem\Dem.c	  6722      else if(DEM_DTC_DATAENTRYREF(DEM_CFG_EVENT_DTCREF(EventId)) == DEM_DATA_INVALID_U16)
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]4
	mul	d15,d15,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]1868
.L3371:
	mov.u	d0,#65535
.L3372:
	jeq	d15,d0,.L514
.L3373:

; ..\EAS\BSW\Dem\Dem.c	  6723      {
; ..\EAS\BSW\Dem\Dem.c	  6724          /*Result = E_NOT_OK;*/
; ..\EAS\BSW\Dem\Dem.c	  6725      }
; ..\EAS\BSW\Dem\Dem.c	  6726      else
; ..\EAS\BSW\Dem\Dem.c	  6727      {
; ..\EAS\BSW\Dem\Dem.c	  6728          Result = DemInternal_GetEventExtendedDataRecordEx(EventId, RecordNumber, DestBuffer, &DataSize);
	mov.aa	a5,a10
	j	DemInternal_GetEventExtendedDataRecordEx
.L514:
.L513:
.L512:
.L511:

; ..\EAS\BSW\Dem\Dem.c	  6729      }
; ..\EAS\BSW\Dem\Dem.c	  6730      return Result;
; ..\EAS\BSW\Dem\Dem.c	  6731  }
	ret
.L1707:
	
__Dem_GetEventExtendedDataRecord_function_end:
	.size	Dem_GetEventExtendedDataRecord,__Dem_GetEventExtendedDataRecord_function_end-Dem_GetEventExtendedDataRecord
.L1207:
	; End of function
	
	.sdecl	'.text.Dem.Dem_GetEventExtendedDataRecordEx',code,cluster('Dem_GetEventExtendedDataRecordEx')
	.sect	'.text.Dem.Dem_GetEventExtendedDataRecordEx'
	.align	2
	
	.global	Dem_GetEventExtendedDataRecordEx

; ..\EAS\BSW\Dem\Dem.c	  6732  
; ..\EAS\BSW\Dem\Dem.c	  6733  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  6734  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6735  * Function Name: Dem_GetEventExtendedDataRecordEx
; ..\EAS\BSW\Dem\Dem.c	  6736  *
; ..\EAS\BSW\Dem\Dem.c	  6737  * Description: Gets the data of an extended data record by event.
; ..\EAS\BSW\Dem\Dem.c	  6738  *
; ..\EAS\BSW\Dem\Dem.c	  6739  * Inputs: EventId: Identification of an event by assigned EventId.
; ..\EAS\BSW\Dem\Dem.c	  6740  *         RecordNumber: Identification of requested Extended data record.Valid
; ..\EAS\BSW\Dem\Dem.c	  6741  *                       values are between 0x01 and 0xEF as defined in ISO14229-1.
; ..\EAS\BSW\Dem\Dem.c	  6742  *         BufSize: When the function is called this parameter contains the maximum
; ..\EAS\BSW\Dem\Dem.c	  6743  *                  number of data bytes that can be written to the buffer.
; ..\EAS\BSW\Dem\Dem.c	  6744  *
; ..\EAS\BSW\Dem\Dem.c	  6745  * Outputs: BufSize: The function returns the actual number of written data bytes in
; ..\EAS\BSW\Dem\Dem.c	  6746  *                   this parameter.
; ..\EAS\BSW\Dem\Dem.c	  6747  *          DestBuffer: This parameter contains a byte pointer that points to the
; ..\EAS\BSW\Dem\Dem.c	  6748  *                      buffer, to which the freeze frame data record shall be written
; ..\EAS\BSW\Dem\Dem.c	  6749  *                      to. The format is raw hexadecimal values and contains no
; ..\EAS\BSW\Dem\Dem.c	  6750  *                      header-information.
; ..\EAS\BSW\Dem\Dem.c	  6751  *
; ..\EAS\BSW\Dem\Dem.c	  6752  * Return: E_OK: Operation was successful
; ..\EAS\BSW\Dem\Dem.c	  6753  *         E_NOT_OK: Operation could not be performed
; ..\EAS\BSW\Dem\Dem.c	  6754  *         DEM_E_NODATAAVAILABLE: The requested event data is not currently stored
; ..\EAS\BSW\Dem\Dem.c	  6755  *                                (but the request was valid)
; ..\EAS\BSW\Dem\Dem.c	  6756  *         DEM_E_WRONG_RECORDNUMBER: The requested record number is not supported
; ..\EAS\BSW\Dem\Dem.c	  6757  *                                   by the event
; ..\EAS\BSW\Dem\Dem.c	  6758  *         DEM_E_WRONG_BUFFERSIZE: The provided buffer size is too small
; ..\EAS\BSW\Dem\Dem.c	  6759  *
; ..\EAS\BSW\Dem\Dem.c	  6760  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  6761  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6762  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  6763  FUNC(Std_ReturnType, DEM_CODE) Dem_GetEventExtendedDataRecordEx
; Function Dem_GetEventExtendedDataRecordEx
.L1005:
Dem_GetEventExtendedDataRecordEx:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  6764  (
; ..\EAS\BSW\Dem\Dem.c	  6765      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  6766      uint8 RecordNumber,
; ..\EAS\BSW\Dem\Dem.c	  6767      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) DestBuffer,
; ..\EAS\BSW\Dem\Dem.c	  6768      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) BufSize
; ..\EAS\BSW\Dem\Dem.c	  6769  )
; ..\EAS\BSW\Dem\Dem.c	  6770  {
; ..\EAS\BSW\Dem\Dem.c	  6771      /*SWS_Dem_01062*//*SWS_Dem_00477*//*SWS_Dem_00995*/
; ..\EAS\BSW\Dem\Dem.c	  6772      Std_ReturnType Result = E_NOT_OK;
	mov	d2,#1
.L2533:

; ..\EAS\BSW\Dem\Dem.c	  6773  
; ..\EAS\BSW\Dem\Dem.c	  6774      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3378:
	jne	d15,#2,.L516
.L3379:

; ..\EAS\BSW\Dem\Dem.c	  6775      {
; ..\EAS\BSW\Dem\Dem.c	  6776          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  6777          DEM_DET_REPORT_ERROR(DEM_GETEVENTEXTENDEDDATARECORDEX_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  6778      }
; ..\EAS\BSW\Dem\Dem.c	  6779      else if(EventId >= DEM_NUM_OF_EVENT)
	mov	d15,#116
.L3380:
	jge.u	d4,d15,.L517
.L3381:

; ..\EAS\BSW\Dem\Dem.c	  6780      {
; ..\EAS\BSW\Dem\Dem.c	  6781          DEM_DET_REPORT_ERROR(DEM_GETEVENTEXTENDEDDATARECORDEX_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  6782      }
; ..\EAS\BSW\Dem\Dem.c	  6783      else if((DestBuffer == NULL_PTR) || (BufSize == NULL_PTR) || (*BufSize == 0))
	jz.a	a4,.L518
.L3382:
	jz.a	a5,.L519
.L3383:
	ld.hu	d15,[a5]0
.L3384:
	jeq	d15,#0,.L520
.L3385:

; ..\EAS\BSW\Dem\Dem.c	  6784      {
; ..\EAS\BSW\Dem\Dem.c	  6785          DEM_DET_REPORT_ERROR(DEM_GETEVENTEXTENDEDDATARECORDEX_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  6786      }
; ..\EAS\BSW\Dem\Dem.c	  6787  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  6788      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  6789      else if(Dem_EventAvailable[EventId] == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  6790      {
; ..\EAS\BSW\Dem\Dem.c	  6791          /*SWS_Dem_00997*//*SWS_Dem_01108*/
; ..\EAS\BSW\Dem\Dem.c	  6792      }
; ..\EAS\BSW\Dem\Dem.c	  6793  #endif
; ..\EAS\BSW\Dem\Dem.c	  6794      else if(DEM_DTC_DATAENTRYREF(DEM_CFG_EVENT_DTCREF(EventId)) == DEM_DATA_INVALID_U16)
	mul	d15,d4,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]4
	mul	d15,d15,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]1868
.L3386:
	mov.u	d0,#65535
.L3387:
	jeq	d15,d0,.L521
.L3388:

; ..\EAS\BSW\Dem\Dem.c	  6795      {
; ..\EAS\BSW\Dem\Dem.c	  6796          /*Result = E_NOT_OK;*/
; ..\EAS\BSW\Dem\Dem.c	  6797      }
; ..\EAS\BSW\Dem\Dem.c	  6798      else
; ..\EAS\BSW\Dem\Dem.c	  6799      {
; ..\EAS\BSW\Dem\Dem.c	  6800          Result = DemInternal_GetEventExtendedDataRecordEx(EventId, RecordNumber, DestBuffer, BufSize);
	j	DemInternal_GetEventExtendedDataRecordEx
.L521:
.L520:
.L519:
.L518:
.L517:
.L516:

; ..\EAS\BSW\Dem\Dem.c	  6801      }
; ..\EAS\BSW\Dem\Dem.c	  6802      return Result;
; ..\EAS\BSW\Dem\Dem.c	  6803  }
	ret
.L1713:
	
__Dem_GetEventExtendedDataRecordEx_function_end:
	.size	Dem_GetEventExtendedDataRecordEx,__Dem_GetEventExtendedDataRecordEx_function_end-Dem_GetEventExtendedDataRecordEx
.L1212:
	; End of function
	
	.sdecl	'.text.Dem.Dem_GetEventMemoryOverflow',code,cluster('Dem_GetEventMemoryOverflow')
	.sect	'.text.Dem.Dem_GetEventMemoryOverflow'
	.align	2
	
	.global	Dem_GetEventMemoryOverflow

; ..\EAS\BSW\Dem\Dem.c	  6804  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  6805  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6806  * Function Name: Dem_GetEventMemoryOverflow
; ..\EAS\BSW\Dem\Dem.c	  6807  *
; ..\EAS\BSW\Dem\Dem.c	  6808  * Description: Control the internal debounce counter/timer by BSW modules and SWCs.
; ..\EAS\BSW\Dem\Dem.c	  6809  *              The event qualification will not be affected by these debounce state
; ..\EAS\BSW\Dem\Dem.c	  6810  *              changes. This API is available for BSW modules as soon as Dem_PreInit
; ..\EAS\BSW\Dem\Dem.c	  6811  *              has been completed
; ..\EAS\BSW\Dem\Dem.c	  6812  *
; ..\EAS\BSW\Dem\Dem.c	  6813  * Inputs: DTCOrigin: If the Dem supports more than one event memory this parameter
; ..\EAS\BSW\Dem\Dem.c	  6814  *                    is used to select the source memory the overflow indication
; ..\EAS\BSW\Dem\Dem.c	  6815  *                    shall be read from.
; ..\EAS\BSW\Dem\Dem.c	  6816  *
; ..\EAS\BSW\Dem\Dem.c	  6817  * Outputs: OverflowIndication: This parameter returns TRUE if the according event
; ..\EAS\BSW\Dem\Dem.c	  6818  *                              memory was overflowed, otherwise it returns FALSE.
; ..\EAS\BSW\Dem\Dem.c	  6819  *
; ..\EAS\BSW\Dem\Dem.c	  6820  * Return: E_OK: Operation was successful
; ..\EAS\BSW\Dem\Dem.c	  6821  *         E_NOT_OK: Operation failed or is not supported
; ..\EAS\BSW\Dem\Dem.c	  6822  *
; ..\EAS\BSW\Dem\Dem.c	  6823  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  6824  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6825  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  6826  FUNC(Std_ReturnType, DEM_CODE) Dem_GetEventMemoryOverflow
; Function Dem_GetEventMemoryOverflow
.L1007:
Dem_GetEventMemoryOverflow:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  6827  (
; ..\EAS\BSW\Dem\Dem.c	  6828      Dem_DTCOriginType DTCOrigin,
; ..\EAS\BSW\Dem\Dem.c	  6829      P2VAR(boolean, AUTOMATIC, DEM_APPL_DATA) OverflowIndication
; ..\EAS\BSW\Dem\Dem.c	  6830  )
; ..\EAS\BSW\Dem\Dem.c	  6831  {
; ..\EAS\BSW\Dem\Dem.c	  6832      /*SWS_Dem_00397*//*SWS_Dem_00398*/
; ..\EAS\BSW\Dem\Dem.c	  6833      Std_ReturnType Result = E_OK;
	mov	d2,#0
.L2534:

; ..\EAS\BSW\Dem\Dem.c	  6834  
; ..\EAS\BSW\Dem\Dem.c	  6835      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3393:
	jne	d15,#2,.L523
.L3394:

; ..\EAS\BSW\Dem\Dem.c	  6836      {
; ..\EAS\BSW\Dem\Dem.c	  6837          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  6838          DEM_DET_REPORT_ERROR(DEM_GETEVENTMEMORYOVERFLOW_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  6839          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6840      }
; ..\EAS\BSW\Dem\Dem.c	  6841      else if(OverflowIndication == NULL_PTR)
	jz.a	a4,.L524
.L3395:

; ..\EAS\BSW\Dem\Dem.c	  6842      {
; ..\EAS\BSW\Dem\Dem.c	  6843          DEM_DET_REPORT_ERROR(DEM_GETEVENTMEMORYOVERFLOW_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  6844          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6845      }
; ..\EAS\BSW\Dem\Dem.c	  6846      else
; ..\EAS\BSW\Dem\Dem.c	  6847      {
; ..\EAS\BSW\Dem\Dem.c	  6848          if(DTCOrigin == DEM_DTC_ORIGIN_PRIMARY_MEMORY)
	jne	d4,#1,.L525
.L3396:

; ..\EAS\BSW\Dem\Dem.c	  6849          {
; ..\EAS\BSW\Dem\Dem.c	  6850              if(DEM_PRIMARY_DATAENTRY_USEDNUM < DEM_CFG_MAXNUMBEREVENTENTRY_PRIMARY)
	movh.a	a15,#@his(Dem_StorageMem+2560)
	ld.hu	d0,[a15]@los(Dem_StorageMem+2560)
.L3397:
	mov	d15,#121
.L3398:
	jge.u	d0,d15,.L526
.L3399:

; ..\EAS\BSW\Dem\Dem.c	  6851              {
; ..\EAS\BSW\Dem\Dem.c	  6852                  *OverflowIndication = FALSE;
	st.b	[a4],d2
.L3400:

; ..\EAS\BSW\Dem\Dem.c	  6853              }
; ..\EAS\BSW\Dem\Dem.c	  6854              else
; ..\EAS\BSW\Dem\Dem.c	  6855              {
; ..\EAS\BSW\Dem\Dem.c	  6856                  *OverflowIndication = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  6857              }
; ..\EAS\BSW\Dem\Dem.c	  6858          }
; ..\EAS\BSW\Dem\Dem.c	  6859  #if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)
; ..\EAS\BSW\Dem\Dem.c	  6860          else if(DTCOrigin == DEM_DTC_ORIGIN_PERMANENT_MEMORY)
; ..\EAS\BSW\Dem\Dem.c	  6861          {
; ..\EAS\BSW\Dem\Dem.c	  6862              if(DEM_PERMANENT_DATAENTRY_USEDNUM < DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT)
; ..\EAS\BSW\Dem\Dem.c	  6863              {
; ..\EAS\BSW\Dem\Dem.c	  6864                  *OverflowIndication = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  6865              }
; ..\EAS\BSW\Dem\Dem.c	  6866              else
; ..\EAS\BSW\Dem\Dem.c	  6867              {
; ..\EAS\BSW\Dem\Dem.c	  6868                  *OverflowIndication = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  6869              }
; ..\EAS\BSW\Dem\Dem.c	  6870          }
; ..\EAS\BSW\Dem\Dem.c	  6871  #endif
; ..\EAS\BSW\Dem\Dem.c	  6872          else
; ..\EAS\BSW\Dem\Dem.c	  6873          {
; ..\EAS\BSW\Dem\Dem.c	  6874              Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6875          }
; ..\EAS\BSW\Dem\Dem.c	  6876      }
; ..\EAS\BSW\Dem\Dem.c	  6877      return Result;
; ..\EAS\BSW\Dem\Dem.c	  6878  }
	ret
.L526:
	mov	d15,#1
.L3401:
	st.b	[a4],d15
.L3402:
	ret
.L525:
.L524:
.L523:
	mov	d2,#1
.L3403:
	ret
.L1719:
	
__Dem_GetEventMemoryOverflow_function_end:
	.size	Dem_GetEventMemoryOverflow,__Dem_GetEventMemoryOverflow_function_end-Dem_GetEventMemoryOverflow
.L1217:
	; End of function
	
	.sdecl	'.text.Dem.Dem_GetNumberOfEventMemoryEntries',code,cluster('Dem_GetNumberOfEventMemoryEntries')
	.sect	'.text.Dem.Dem_GetNumberOfEventMemoryEntries'
	.align	2
	
	.global	Dem_GetNumberOfEventMemoryEntries

; ..\EAS\BSW\Dem\Dem.c	  6879  
; ..\EAS\BSW\Dem\Dem.c	  6880  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  6881  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6882  * Function Name: Dem_GetNumberOfEventMemoryEntries
; ..\EAS\BSW\Dem\Dem.c	  6883  *
; ..\EAS\BSW\Dem\Dem.c	  6884  * Description: Returns the number of entries currently stored in the requested
; ..\EAS\BSW\Dem\Dem.c	  6885  *              event memory.
; ..\EAS\BSW\Dem\Dem.c	  6886  *
; ..\EAS\BSW\Dem\Dem.c	  6887  * Inputs: DTCOrigin: If the Dem supports more than one event memory this parameter
; ..\EAS\BSW\Dem\Dem.c	  6888  *                    is used to select the source memory the number of entries
; ..\EAS\BSW\Dem\Dem.c	  6889  *                    shall be read from.
; ..\EAS\BSW\Dem\Dem.c	  6890  *
; ..\EAS\BSW\Dem\Dem.c	  6891  * Outputs: NumberOfEventMemoryEntries: Number of entries currently stored in the
; ..\EAS\BSW\Dem\Dem.c	  6892  *                                      requested event memory.
; ..\EAS\BSW\Dem\Dem.c	  6893  *
; ..\EAS\BSW\Dem\Dem.c	  6894  * Return: E_OK: Operation was successful
; ..\EAS\BSW\Dem\Dem.c	  6895  *         E_NOT_OK: Operation failed
; ..\EAS\BSW\Dem\Dem.c	  6896  *
; ..\EAS\BSW\Dem\Dem.c	  6897  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  6898  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6899  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  6900  FUNC(Std_ReturnType, DEM_CODE) Dem_GetNumberOfEventMemoryEntries
; Function Dem_GetNumberOfEventMemoryEntries
.L1009:
Dem_GetNumberOfEventMemoryEntries:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  6901  (
; ..\EAS\BSW\Dem\Dem.c	  6902      Dem_DTCOriginType DTCOrigin,
; ..\EAS\BSW\Dem\Dem.c	  6903      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) NumberOfEventMemoryEntries
; ..\EAS\BSW\Dem\Dem.c	  6904  )
; ..\EAS\BSW\Dem\Dem.c	  6905  {
; ..\EAS\BSW\Dem\Dem.c	  6906      /*SWS_Dem_00651*/
; ..\EAS\BSW\Dem\Dem.c	  6907      Std_ReturnType Result = E_OK;
	mov	d2,#0
.L2535:

; ..\EAS\BSW\Dem\Dem.c	  6908  
; ..\EAS\BSW\Dem\Dem.c	  6909      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3408:
	jne	d15,#2,.L530
.L3409:

; ..\EAS\BSW\Dem\Dem.c	  6910      {
; ..\EAS\BSW\Dem\Dem.c	  6911          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  6912          DEM_DET_REPORT_ERROR(DEM_GETNUMBEROFEVENTMEMORYENTRIES_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  6913          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6914      }
; ..\EAS\BSW\Dem\Dem.c	  6915      else if(NumberOfEventMemoryEntries == NULL_PTR)
	jz.a	a4,.L531
.L3410:

; ..\EAS\BSW\Dem\Dem.c	  6916      {
; ..\EAS\BSW\Dem\Dem.c	  6917          DEM_DET_REPORT_ERROR(DEM_GETNUMBEROFEVENTMEMORYENTRIES_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  6918          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6919      }
; ..\EAS\BSW\Dem\Dem.c	  6920      else
; ..\EAS\BSW\Dem\Dem.c	  6921      {
; ..\EAS\BSW\Dem\Dem.c	  6922          if(DTCOrigin == DEM_DTC_ORIGIN_PRIMARY_MEMORY)
	jne	d4,#1,.L532
.L3411:

; ..\EAS\BSW\Dem\Dem.c	  6923          {
; ..\EAS\BSW\Dem\Dem.c	  6924              *NumberOfEventMemoryEntries = DEM_PRIMARY_DATAENTRY_USEDNUM;
	movh.a	a15,#@his(Dem_StorageMem+2560)
	ld.hu	d15,[a15]@los(Dem_StorageMem+2560)
.L3412:
	st.h	[a4],d15
.L3413:

; ..\EAS\BSW\Dem\Dem.c	  6925          }
; ..\EAS\BSW\Dem\Dem.c	  6926  #if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)
; ..\EAS\BSW\Dem\Dem.c	  6927          else if(DTCOrigin == DEM_DTC_ORIGIN_PERMANENT_MEMORY)
; ..\EAS\BSW\Dem\Dem.c	  6928          {
; ..\EAS\BSW\Dem\Dem.c	  6929              *NumberOfEventMemoryEntries = DEM_PERMANENT_DATAENTRY_USEDNUM;
; ..\EAS\BSW\Dem\Dem.c	  6930          }
; ..\EAS\BSW\Dem\Dem.c	  6931  #endif
; ..\EAS\BSW\Dem\Dem.c	  6932          else
; ..\EAS\BSW\Dem\Dem.c	  6933          {
; ..\EAS\BSW\Dem\Dem.c	  6934              Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6935          }
; ..\EAS\BSW\Dem\Dem.c	  6936      }
; ..\EAS\BSW\Dem\Dem.c	  6937      return Result;
; ..\EAS\BSW\Dem\Dem.c	  6938  }
	ret
.L532:
.L531:
.L530:
	mov	d2,#1
.L3414:
	ret
.L1723:
	
__Dem_GetNumberOfEventMemoryEntries_function_end:
	.size	Dem_GetNumberOfEventMemoryEntries,__Dem_GetNumberOfEventMemoryEntries_function_end-Dem_GetNumberOfEventMemoryEntries
.L1222:
	; End of function
	
	.sdecl	'.text.Dem.Dem_SetComponentAvailable',code,cluster('Dem_SetComponentAvailable')
	.sect	'.text.Dem.Dem_SetComponentAvailable'
	.align	2
	
	.global	Dem_SetComponentAvailable

; ..\EAS\BSW\Dem\Dem.c	  6939  
; ..\EAS\BSW\Dem\Dem.c	  6940  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  6941  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6942  * Function Name: Dem_SetComponentAvailable
; ..\EAS\BSW\Dem\Dem.c	  6943  *
; ..\EAS\BSW\Dem\Dem.c	  6944  * Description: Set the availability of a specific DemComponent.
; ..\EAS\BSW\Dem\Dem.c	  6945  *
; ..\EAS\BSW\Dem\Dem.c	  6946  * Inputs: ComponentId: Identification of a DemComponent.
; ..\EAS\BSW\Dem\Dem.c	  6947  *         AvailableStatus: This parameter specifies whether the respective
; ..\EAS\BSW\Dem\Dem.c	  6948  *                          Component shall be available (TRUE) or not (FALSE).
; ..\EAS\BSW\Dem\Dem.c	  6949  *
; ..\EAS\BSW\Dem\Dem.c	  6950  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  6951  *
; ..\EAS\BSW\Dem\Dem.c	  6952  * Return: E_OK: Operation was successful
; ..\EAS\BSW\Dem\Dem.c	  6953  *
; ..\EAS\BSW\Dem\Dem.c	  6954  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  6955  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6956  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  6957  FUNC(Std_ReturnType, DEM_CODE) Dem_SetComponentAvailable
; Function Dem_SetComponentAvailable
.L1011:
Dem_SetComponentAvailable:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  6958  (
; ..\EAS\BSW\Dem\Dem.c	  6959      Dem_ComponentIdType ComponentId,
; ..\EAS\BSW\Dem\Dem.c	  6960      boolean AvailableStatus
; ..\EAS\BSW\Dem\Dem.c	  6961  )
; ..\EAS\BSW\Dem\Dem.c	  6962  {
; ..\EAS\BSW\Dem\Dem.c	  6963      Std_ReturnType Result = E_NOT_OK;
	mov	d2,#1
.L2536:

; ..\EAS\BSW\Dem\Dem.c	  6964      (void)ComponentId;
; ..\EAS\BSW\Dem\Dem.c	  6965      (void)AvailableStatus;
; ..\EAS\BSW\Dem\Dem.c	  6966  
; ..\EAS\BSW\Dem\Dem.c	  6967  
; ..\EAS\BSW\Dem\Dem.c	  6968      return Result;
; ..\EAS\BSW\Dem\Dem.c	  6969  }
	ret
.L1727:
	
__Dem_SetComponentAvailable_function_end:
	.size	Dem_SetComponentAvailable,__Dem_SetComponentAvailable_function_end-Dem_SetComponentAvailable
.L1227:
	; End of function
	
	.sdecl	'.text.Dem.Dem_ClearDTC',code,cluster('Dem_ClearDTC')
	.sect	'.text.Dem.Dem_ClearDTC'
	.align	2
	
	.global	Dem_ClearDTC

; ..\EAS\BSW\Dem\Dem.c	  6970  
; ..\EAS\BSW\Dem\Dem.c	  6971  #if(DEM_CFG_SUPPRESSIONSUPPORT == DEM_DTC_SUPPRESSION)
; ..\EAS\BSW\Dem\Dem.c	  6972  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  6973  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6974  * Function Name: Dem_SetDTCSuppression
; ..\EAS\BSW\Dem\Dem.c	  6975  *
; ..\EAS\BSW\Dem\Dem.c	  6976  * Description: Set the suppression status of a specific DTC.
; ..\EAS\BSW\Dem\Dem.c	  6977  *
; ..\EAS\BSW\Dem\Dem.c	  6978  * Inputs: DTC: Diagnostic Trouble Code
; ..\EAS\BSW\Dem\Dem.c	  6979  *         DTCFormat: Defines the input-format of the provided DTC value.
; ..\EAS\BSW\Dem\Dem.c	  6980  *         SuppressionStatus: This parameter specifies whether the respective DTC
; ..\EAS\BSW\Dem\Dem.c	  6981  *                            shall be disabled (TRUE) or enabled (FALSE).
; ..\EAS\BSW\Dem\Dem.c	  6982  *
; ..\EAS\BSW\Dem\Dem.c	  6983  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  6984  *
; ..\EAS\BSW\Dem\Dem.c	  6985  * Return: E_OK: Operation was successful
; ..\EAS\BSW\Dem\Dem.c	  6986  *         E_NOT_OK: operation failed or event entry for this DTC still exists
; ..\EAS\BSW\Dem\Dem.c	  6987  *
; ..\EAS\BSW\Dem\Dem.c	  6988  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  6989  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  6990  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  6991  FUNC(Std_ReturnType, DEM_CODE) Dem_SetDTCSuppression
; ..\EAS\BSW\Dem\Dem.c	  6992  (
; ..\EAS\BSW\Dem\Dem.c	  6993      uint32 DTC,
; ..\EAS\BSW\Dem\Dem.c	  6994      Dem_DTCFormatType DTCFormat,
; ..\EAS\BSW\Dem\Dem.c	  6995      boolean SuppressionStatus
; ..\EAS\BSW\Dem\Dem.c	  6996  )
; ..\EAS\BSW\Dem\Dem.c	  6997  {
; ..\EAS\BSW\Dem\Dem.c	  6998      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  6999  
; ..\EAS\BSW\Dem\Dem.c	  7000  
; ..\EAS\BSW\Dem\Dem.c	  7001      return Result;
; ..\EAS\BSW\Dem\Dem.c	  7002  }
; ..\EAS\BSW\Dem\Dem.c	  7003  #endif
; ..\EAS\BSW\Dem\Dem.c	  7004  
; ..\EAS\BSW\Dem\Dem.c	  7005  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  7006  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7007  * Function Name: Dem_ClearDTC
; ..\EAS\BSW\Dem\Dem.c	  7008  *
; ..\EAS\BSW\Dem\Dem.c	  7009  * Description: Clears single DTCs, as well as groups of DTCs. This API is intended
; ..\EAS\BSW\Dem\Dem.c	  7010  *              for complex device driver. It can only be used through the RTE (due
; ..\EAS\BSW\Dem\Dem.c	  7011  *              to work-around described below SWS_Dem_00659), and therefore no
; ..\EAS\BSW\Dem\Dem.c	  7012  *              declaration is exported via Dem.h.
; ..\EAS\BSW\Dem\Dem.c	  7013  *
; ..\EAS\BSW\Dem\Dem.c	  7014  * Inputs: DTC: Defines the DTC in respective format, that shall be cleared from
; ..\EAS\BSW\Dem\Dem.c	  7015  *              the event memory.If the DTC fits to a DTC group number, all DTCs
; ..\EAS\BSW\Dem\Dem.c	  7016  *              of the group shall be cleared.
; ..\EAS\BSW\Dem\Dem.c	  7017  *         DTCFormat: Defines the input-format of the provided DTC value.
; ..\EAS\BSW\Dem\Dem.c	  7018  *         DTCOrigin: If the Dem supports more than one event memory this parameter
; ..\EAS\BSW\Dem\Dem.c	  7019  *                    is used to select the source memory the DTCs shall be read from.
; ..\EAS\BSW\Dem\Dem.c	  7020  *
; ..\EAS\BSW\Dem\Dem.c	  7021  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  7022  *
; ..\EAS\BSW\Dem\Dem.c	  7023  * Return: Dem_ReturnClearDTCType
; ..\EAS\BSW\Dem\Dem.c	  7024  *
; ..\EAS\BSW\Dem\Dem.c	  7025  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  7026  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7027  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  7028  FUNC(Dem_ReturnClearDTCType, DEM_CODE) Dem_ClearDTC
; Function Dem_ClearDTC
.L1013:
Dem_ClearDTC:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  7029  (
; ..\EAS\BSW\Dem\Dem.c	  7030      uint32 DTC,
; ..\EAS\BSW\Dem\Dem.c	  7031      Dem_DTCFormatType DTCFormat,
; ..\EAS\BSW\Dem\Dem.c	  7032      Dem_DTCOriginType DTCOrigin
; ..\EAS\BSW\Dem\Dem.c	  7033  )
; ..\EAS\BSW\Dem\Dem.c	  7034  {
; ..\EAS\BSW\Dem\Dem.c	  7035      /*SWS_Dem_00659*/
; ..\EAS\BSW\Dem\Dem.c	  7036      Dem_ReturnClearDTCType Result = DEM_CLEAR_OK;
	mov	d2,#0
.L2539:

; ..\EAS\BSW\Dem\Dem.c	  7037  #if(DEM_CFG_CLEARDTCLIMITATION != DEM_ONLY_CLEAR_ALL_DTCS)
; ..\EAS\BSW\Dem\Dem.c	  7038      uint16 DtcIndex;
; ..\EAS\BSW\Dem\Dem.c	  7039  #endif
; ..\EAS\BSW\Dem\Dem.c	  7040  
; ..\EAS\BSW\Dem\Dem.c	  7041      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3423:
	jne	d15,#2,.L536
.L3424:

; ..\EAS\BSW\Dem\Dem.c	  7042      {
; ..\EAS\BSW\Dem\Dem.c	  7043          DEM_DET_REPORT_ERROR(DEM_CLEARDTC_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  7044          Result = DEM_CLEAR_FAILED;
; ..\EAS\BSW\Dem\Dem.c	  7045      }
; ..\EAS\BSW\Dem\Dem.c	  7046      /*SWS_Dem_01042*/
; ..\EAS\BSW\Dem\Dem.c	  7047      else if(Dem_ClearDTCState == DEM_IN_CLEAR_DTC_IDLE)
	movh.a	a15,#@his(Dem_ClearDTCState)
	ld.bu	d15,[a15]@los(Dem_ClearDTCState)
.L3425:
	jne	d15,#0,.L537
.L3426:

; ..\EAS\BSW\Dem\Dem.c	  7048      {
; ..\EAS\BSW\Dem\Dem.c	  7049          if((DTC == (uint32)0) || (DTC > DEM_DTC_GROUP_ALL))
	jeq	d4,#0,.L538
.L3427:
	mov.u	d15,#65535
	addih	d15,d15,#255
.L3428:
	jge.u	d15,d4,.L539
.L538:

; ..\EAS\BSW\Dem\Dem.c	  7050          {
; ..\EAS\BSW\Dem\Dem.c	  7051              DEM_DET_REPORT_ERROR(DEM_CLEARDTC_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  7052              Result = DEM_CLEAR_WRONG_DTC;
	mov	d2,#1
.L3429:

; ..\EAS\BSW\Dem\Dem.c	  7053          }
; ..\EAS\BSW\Dem\Dem.c	  7054          else if((DTCFormat != DEM_DTC_FORMAT_OBD) \ 
; ..\EAS\BSW\Dem\Dem.c	  7055              && (DTCFormat != DEM_DTC_FORMAT_UDS) \ 
; ..\EAS\BSW\Dem\Dem.c	  7056              && (DTCFormat != DEM_DTC_FORMAT_J1939))
; ..\EAS\BSW\Dem\Dem.c	  7057          {
; ..\EAS\BSW\Dem\Dem.c	  7058              DEM_DET_REPORT_ERROR(DEM_CLEARDTC_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  7059              Result = DEM_CLEAR_FAILED;
; ..\EAS\BSW\Dem\Dem.c	  7060          }
; ..\EAS\BSW\Dem\Dem.c	  7061          else if(DTCOrigin != DEM_DTC_ORIGIN_PRIMARY_MEMORY)
; ..\EAS\BSW\Dem\Dem.c	  7062          {
; ..\EAS\BSW\Dem\Dem.c	  7063              DEM_DET_REPORT_ERROR(DEM_CLEARDTC_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  7064              Result = DEM_CLEAR_WRONG_DTCORIGIN;
; ..\EAS\BSW\Dem\Dem.c	  7065          }
; ..\EAS\BSW\Dem\Dem.c	  7066  #if(DEM_CFG_CLEARDTCLIMITATION == DEM_ONLY_CLEAR_ALL_DTCS)
; ..\EAS\BSW\Dem\Dem.c	  7067          else if(DTC != DEM_DTC_GROUP_ALL)
; ..\EAS\BSW\Dem\Dem.c	  7068          {
; ..\EAS\BSW\Dem\Dem.c	  7069              /*SWS_Dem_00670*/
; ..\EAS\BSW\Dem\Dem.c	  7070              Result = DEM_CLEAR_WRONG_DTC;
; ..\EAS\BSW\Dem\Dem.c	  7071          }
; ..\EAS\BSW\Dem\Dem.c	  7072  #endif
; ..\EAS\BSW\Dem\Dem.c	  7073          else
; ..\EAS\BSW\Dem\Dem.c	  7074          {
; ..\EAS\BSW\Dem\Dem.c	  7075              /*SWS_Dem_00661*//*SWS_Dem_00569*/
; ..\EAS\BSW\Dem\Dem.c	  7076              Dem_ClearDTC_DTC = DTC;
; ..\EAS\BSW\Dem\Dem.c	  7077              Dem_ClearDTC_DTCFormat = DTCFormat;
; ..\EAS\BSW\Dem\Dem.c	  7078              Dem_ClearDTC_DTCOrigin = DTCOrigin;
; ..\EAS\BSW\Dem\Dem.c	  7079              Dem_ClearDTC_Index = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  7080  
; ..\EAS\BSW\Dem\Dem.c	  7081  #if(DEM_CFG_CLEARDTCLIMITATION != DEM_ONLY_CLEAR_ALL_DTCS)
; ..\EAS\BSW\Dem\Dem.c	  7082              /*Check if the request DTC is a group DTC.*/
; ..\EAS\BSW\Dem\Dem.c	  7083              for(DtcIndex = 0; DtcIndex < DEM_NUM_OF_DTCGROUP; DtcIndex++)
; ..\EAS\BSW\Dem\Dem.c	  7084              {
; ..\EAS\BSW\Dem\Dem.c	  7085                  if(DTC == DEM_CFG_DTC_GROUPVALUE(DtcIndex))
; ..\EAS\BSW\Dem\Dem.c	  7086                  {
; ..\EAS\BSW\Dem\Dem.c	  7087                      /*Clear RAM info of one DTC group in main function*/
; ..\EAS\BSW\Dem\Dem.c	  7088                      Dem_ClearDTCState = DEM_IN_CLEAR_DTC_GROUP;
; ..\EAS\BSW\Dem\Dem.c	  7089                      Result = DEM_CLEAR_PENDING;
; ..\EAS\BSW\Dem\Dem.c	  7090                      break;
; ..\EAS\BSW\Dem\Dem.c	  7091                  }
; ..\EAS\BSW\Dem\Dem.c	  7092              }
; ..\EAS\BSW\Dem\Dem.c	  7093  
; ..\EAS\BSW\Dem\Dem.c	  7094              /*if the request DTC not a group DTC, it should be a single DTC.*/
; ..\EAS\BSW\Dem\Dem.c	  7095              if(Result != DEM_CLEAR_PENDING)
; ..\EAS\BSW\Dem\Dem.c	  7096              {
; ..\EAS\BSW\Dem\Dem.c	  7097                  /*SWS_Dem_00172*/
; ..\EAS\BSW\Dem\Dem.c	  7098                  Result = DEM_CLEAR_WRONG_DTC;
; ..\EAS\BSW\Dem\Dem.c	  7099                  for(DtcIndex = 0; DtcIndex < DEM_NUM_OF_DTC; DtcIndex++)
; ..\EAS\BSW\Dem\Dem.c	  7100                  {
; ..\EAS\BSW\Dem\Dem.c	  7101                      if(((DTCFormat == DEM_DTC_FORMAT_UDS) && (DTC == DEM_CFG_DTC_VALUE(DtcIndex)))
; ..\EAS\BSW\Dem\Dem.c	  7102  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  7103                          || ((DTCFormat == DEM_DTC_FORMAT_OBD) && (DEM_CFG_DTC_OBDDTCREF(DtcIndex) != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	  7104                              && (DTC == DEM_CFG_DTC_OBD_VALUE(DtcIndex)))
; ..\EAS\BSW\Dem\Dem.c	  7105  #endif
; ..\EAS\BSW\Dem\Dem.c	  7106  #if(DEM_J1939_SUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  7107                          || ((DTCFormat == DEM_DTC_FORMAT_J1939) && (DEM_CFG_DTC_OBDDTCREF(DtcIndex) != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	  7108                              && (DTC == DEM_CFG_DTC_J1939_VALUE(DtcIndex)))
; ..\EAS\BSW\Dem\Dem.c	  7109  #endif
; ..\EAS\BSW\Dem\Dem.c	  7110  							)
; ..\EAS\BSW\Dem\Dem.c	  7111                      {
; ..\EAS\BSW\Dem\Dem.c	  7112                          /*Clear RAM info of one DTC*/
; ..\EAS\BSW\Dem\Dem.c	  7113                          DemInternal_ClearOneDTC(DtcIndex);
; ..\EAS\BSW\Dem\Dem.c	  7114  #if(DEM_CFG_CLEARDTCBEHAIOR == DEM_CLRRESP_VOLATILE)
; ..\EAS\BSW\Dem\Dem.c	  7115                          /*SWS_Dem_00570*/
; ..\EAS\BSW\Dem\Dem.c	  7116                          Result = DEM_CLEAR_OK;
; ..\EAS\BSW\Dem\Dem.c	  7117  #else
; ..\EAS\BSW\Dem\Dem.c	  7118                          Dem_ClearDTCState = DEM_IN_CLEAR_EVENT_MEM;
; ..\EAS\BSW\Dem\Dem.c	  7119                          Result = DEM_CLEAR_PENDING;
; ..\EAS\BSW\Dem\Dem.c	  7120  #endif/*(DEM_CFG_CLEARDTCBEHAIOR == DEM_CLRRESP_VOLATILE)*/
; ..\EAS\BSW\Dem\Dem.c	  7121  
; ..\EAS\BSW\Dem\Dem.c	  7122                          break;
; ..\EAS\BSW\Dem\Dem.c	  7123                      }
; ..\EAS\BSW\Dem\Dem.c	  7124                  }
; ..\EAS\BSW\Dem\Dem.c	  7125              }
; ..\EAS\BSW\Dem\Dem.c	  7126  #else/*(DEM_CFG_CLEARDTCLIMITATION != DEM_ONLY_CLEAR_ALL_DTCS)*/
; ..\EAS\BSW\Dem\Dem.c	  7127              Dem_ClearDTCState = DEM_IN_CLEAR_DTC_GROUP;
; ..\EAS\BSW\Dem\Dem.c	  7128              Result = DEM_CLEAR_PENDING;
; ..\EAS\BSW\Dem\Dem.c	  7129  #endif/*(DEM_CFG_CLEARDTCLIMITATION != DEM_ONLY_CLEAR_ALL_DTCS)*/
; ..\EAS\BSW\Dem\Dem.c	  7130          }
; ..\EAS\BSW\Dem\Dem.c	  7131      }
; ..\EAS\BSW\Dem\Dem.c	  7132      else
; ..\EAS\BSW\Dem\Dem.c	  7133      {
; ..\EAS\BSW\Dem\Dem.c	  7134          if((Dem_ClearDTC_DTC != DTC) || (Dem_ClearDTC_DTCFormat != DTCFormat) || (Dem_ClearDTC_DTCOrigin != DTCOrigin))
; ..\EAS\BSW\Dem\Dem.c	  7135          {
; ..\EAS\BSW\Dem\Dem.c	  7136              /*SWS_Dem_00662*//*SWS_Dem_00664*/
; ..\EAS\BSW\Dem\Dem.c	  7137              Result = DEM_CLEAR_BUSY;
; ..\EAS\BSW\Dem\Dem.c	  7138          }
; ..\EAS\BSW\Dem\Dem.c	  7139          else
; ..\EAS\BSW\Dem\Dem.c	  7140          {
; ..\EAS\BSW\Dem\Dem.c	  7141              if(Dem_ClearDTCState == DEM_IN_CLEAR_DTC_OK)
; ..\EAS\BSW\Dem\Dem.c	  7142              {
; ..\EAS\BSW\Dem\Dem.c	  7143                  Dem_ClearDTCState = DEM_IN_CLEAR_DTC_IDLE;
; ..\EAS\BSW\Dem\Dem.c	  7144                  /*SWS_Dem_00572*/
; ..\EAS\BSW\Dem\Dem.c	  7145                  Result = DEM_CLEAR_OK;
; ..\EAS\BSW\Dem\Dem.c	  7146              }
; ..\EAS\BSW\Dem\Dem.c	  7147              else if(Dem_ClearDTCState == DEM_IN_CLEAR_DTC_ERR)
; ..\EAS\BSW\Dem\Dem.c	  7148              {
; ..\EAS\BSW\Dem\Dem.c	  7149                  Dem_ClearDTCState = DEM_IN_CLEAR_DTC_IDLE;
; ..\EAS\BSW\Dem\Dem.c	  7150                  /*SWS_Dem_01057*/
; ..\EAS\BSW\Dem\Dem.c	  7151                  Result = DEM_CLEAR_MEMORY_ERROR;
; ..\EAS\BSW\Dem\Dem.c	  7152              }
; ..\EAS\BSW\Dem\Dem.c	  7153              else
; ..\EAS\BSW\Dem\Dem.c	  7154              {
; ..\EAS\BSW\Dem\Dem.c	  7155                  /*SWS_Dem_00663*/
; ..\EAS\BSW\Dem\Dem.c	  7156                  Result = DEM_CLEAR_PENDING;
; ..\EAS\BSW\Dem\Dem.c	  7157              }
; ..\EAS\BSW\Dem\Dem.c	  7158          }
; ..\EAS\BSW\Dem\Dem.c	  7159      }
; ..\EAS\BSW\Dem\Dem.c	  7160  
; ..\EAS\BSW\Dem\Dem.c	  7161      return Result;
; ..\EAS\BSW\Dem\Dem.c	  7162  }
	ret
.L539:
	jeq	d5,#0,.L541
.L3430:
	jeq	d5,#1,.L542
.L3431:
	jeq	d5,#2,.L543
.L536:
	mov	d2,#3
.L3432:
	ret
.L543:
.L542:
.L541:
	jeq	d6,#1,.L545
.L3433:
	mov	d2,#2
.L3434:
	ret
.L545:
	movh.a	a15,#@his(Dem_ClearDTC_DTC)
.L3435:
	st.w	[a15]@los(Dem_ClearDTC_DTC),d4
.L3436:
	movh.a	a15,#@his(Dem_ClearDTC_DTCFormat)
.L3437:
	st.b	[a15]@los(Dem_ClearDTC_DTCFormat),d5
.L3438:
	movh.a	a15,#@his(Dem_ClearDTC_DTCOrigin)
.L3439:
	st.b	[a15]@los(Dem_ClearDTC_DTCOrigin),d6
.L3440:
	movh.a	a15,#@his(Dem_ClearDTC_Index)
.L3441:
	mov	d15,#0
.L2540:
	st.h	[a15]@los(Dem_ClearDTC_Index),d15
.L3442:
	j	.L547
.L548:
	movh.a	a15,#@his(Dem_GroupOfDTCTable)
	lea	a15,[a15]@los(Dem_GroupOfDTCTable)
	addsc.a	a15,a15,d15,#2
	ld.w	d0,[a15]
.L3443:
	jne	d4,d0,.L549
.L3444:
	movh.a	a15,#@his(Dem_ClearDTCState)
.L3445:
	mov	d15,#5
.L2541:
	st.b	[a15]@los(Dem_ClearDTCState),d15
.L3446:
	mov	d2,#4
.L3447:
	j	.L550
.L549:
	add	d15,#1
.L547:
	jeq	d15,#0,.L548
.L550:
	jeq	d2,#4,.L551
.L3448:
	mov	d2,#1
.L3449:
	mov	d0,#0
.L2542:
	mov	d1,#116
.L3450:
	j	.L552
.L553:
	jne	d5,#1,.L554
.L3451:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d0,#3
	ld.w	d15,[a15]4
.L3452:
	jne	d15,d4,.L555
.L3453:
	mov	d4,d0
.L2537:
	call	DemInternal_ClearOneDTC
.L2538:
	j	.L556
.L555:
.L554:
	add	d0,#1
.L552:
	jlt.u	d0,d1,.L553
.L551:
	ret
.L537:
	movh.a	a15,#@his(Dem_ClearDTC_DTC)
	ld.w	d15,[a15]@los(Dem_ClearDTC_DTC)
.L3454:
	jne	d15,d4,.L558
.L3455:
	movh.a	a15,#@his(Dem_ClearDTC_DTCFormat)
	ld.bu	d15,[a15]@los(Dem_ClearDTC_DTCFormat)
.L3456:
	jne	d15,d5,.L559
.L3457:
	movh.a	a15,#@his(Dem_ClearDTC_DTCOrigin)
	ld.bu	d15,[a15]@los(Dem_ClearDTC_DTCOrigin)
.L3458:
	jeq	d15,d6,.L560
.L559:
.L558:
	mov	d2,#5
.L3459:
	ret
.L560:
	movh.a	a15,#@his(Dem_ClearDTCState)
	ld.bu	d15,[a15]@los(Dem_ClearDTCState)
.L3460:
	jne	d15,#2,.L562
.L3461:
	mov	d15,#0
.L3462:
	st.b	[a15]@los(Dem_ClearDTCState),d15
.L556:
	mov	d2,#0
.L2543:
	ret
.L562:
	ld.bu	d15,[a15]@los(Dem_ClearDTCState)
.L3463:
	jne	d15,#3,.L564
.L3464:
	mov	d15,#0
.L3465:
	st.b	[a15]@los(Dem_ClearDTCState),d15
.L3466:
	mov	d2,#6
.L3467:
	ret
.L564:
	mov	d2,#4
.L3468:
	ret
.L1731:
	
__Dem_ClearDTC_function_end:
	.size	Dem_ClearDTC,__Dem_ClearDTC_function_end-Dem_ClearDTC
.L1232:
	; End of function
	
	.sdecl	'.text.Dem.Dem_MainFunction',code,cluster('Dem_MainFunction')
	.sect	'.text.Dem.Dem_MainFunction'
	.align	2
	
	.global	Dem_MainFunction

; ..\EAS\BSW\Dem\Dem.c	  7163  
; ..\EAS\BSW\Dem\Dem.c	  7164  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  7165  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7166  * Function Name: Dem_MainFunction
; ..\EAS\BSW\Dem\Dem.c	  7167  *
; ..\EAS\BSW\Dem\Dem.c	  7168  * Description: Processes all not event based Dem internal functions.
; ..\EAS\BSW\Dem\Dem.c	  7169  *
; ..\EAS\BSW\Dem\Dem.c	  7170  * Inputs: None
; ..\EAS\BSW\Dem\Dem.c	  7171  *
; ..\EAS\BSW\Dem\Dem.c	  7172  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  7173  *
; ..\EAS\BSW\Dem\Dem.c	  7174  * Return: None
; ..\EAS\BSW\Dem\Dem.c	  7175  *
; ..\EAS\BSW\Dem\Dem.c	  7176  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  7177  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7178  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  7179  FUNC(void, DEM_CODE) Dem_MainFunction
; Function Dem_MainFunction
.L1015:
Dem_MainFunction:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  7180  (
; ..\EAS\BSW\Dem\Dem.c	  7181      void
; ..\EAS\BSW\Dem\Dem.c	  7182  )
; ..\EAS\BSW\Dem\Dem.c	  7183  {
; ..\EAS\BSW\Dem\Dem.c	  7184      /*SWS_Dem_00125*/
; ..\EAS\BSW\Dem\Dem.c	  7185      if(Dem_State == DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3473:
	jne	d15,#2,.L567
.L3474:

; ..\EAS\BSW\Dem\Dem.c	  7186      {
; ..\EAS\BSW\Dem\Dem.c	  7187          DemInternal_MainFnc_OperationCycle();
	call	DemInternal_MainFnc_OperationCycle
.L3475:

; ..\EAS\BSW\Dem\Dem.c	  7188          DemInternal_MainFnc_BswErrorHandle();
	call	DemInternal_MainFnc_BswErrorHandle
.L3476:

; ..\EAS\BSW\Dem\Dem.c	  7189  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  7190          DemInternal_MainFnc_DebounceTimer();
	call	DemInternal_MainFnc_DebounceTimer
.L3477:

; ..\EAS\BSW\Dem\Dem.c	  7191  #endif
; ..\EAS\BSW\Dem\Dem.c	  7192          /*SWS_Dem_00806*/
; ..\EAS\BSW\Dem\Dem.c	  7193          DemInternal_MainFnc_CaptureData();
	call	DemInternal_MainFnc_CaptureData
.L3478:

; ..\EAS\BSW\Dem\Dem.c	  7194          /*Clear the group DTC or Write the RAM info which has been cleared in nonvalatile memory.*/
; ..\EAS\BSW\Dem\Dem.c	  7195          DemInternal_MainFnc_ClearDTC();
	j	DemInternal_MainFnc_ClearDTC
.L567:

; ..\EAS\BSW\Dem\Dem.c	  7196  
; ..\EAS\BSW\Dem\Dem.c	  7197  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  7198          DemInternal_MainFnc_OBD();
; ..\EAS\BSW\Dem\Dem.c	  7199  #endif
; ..\EAS\BSW\Dem\Dem.c	  7200      }
; ..\EAS\BSW\Dem\Dem.c	  7201  }
	ret
.L1738:
	
__Dem_MainFunction_function_end:
	.size	Dem_MainFunction,__Dem_MainFunction_function_end-Dem_MainFunction
.L1237:
	; End of function
	
	.sdecl	'.text.Dem.Dem_GetEventInternalData',code,cluster('Dem_GetEventInternalData')
	.sect	'.text.Dem.Dem_GetEventInternalData'
	.align	2
	
	.global	Dem_GetEventInternalData

; ..\EAS\BSW\Dem\Dem.c	  7202  
; ..\EAS\BSW\Dem\Dem.c	  7203  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  7204  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7205  * Function Name: Dem_GetEventInternalData
; ..\EAS\BSW\Dem\Dem.c	  7206  *
; ..\EAS\BSW\Dem\Dem.c	  7207  * Description: Get the internal data of one event.
; ..\EAS\BSW\Dem\Dem.c	  7208  *              It's not AUTOSAR standard interface.
; ..\EAS\BSW\Dem\Dem.c	  7209  *
; ..\EAS\BSW\Dem\Dem.c	  7210  * Inputs: EventId,DataType
; ..\EAS\BSW\Dem\Dem.c	  7211  *
; ..\EAS\BSW\Dem\Dem.c	  7212  * Outputs: DataValue
; ..\EAS\BSW\Dem\Dem.c	  7213  *
; ..\EAS\BSW\Dem\Dem.c	  7214  * Return: None
; ..\EAS\BSW\Dem\Dem.c	  7215  *
; ..\EAS\BSW\Dem\Dem.c	  7216  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  7217  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7218  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  7219  FUNC(Std_ReturnType, DEM_CODE) Dem_GetEventInternalData
; Function Dem_GetEventInternalData
.L1017:
Dem_GetEventInternalData:	.type	func
	mov.aa	a15,a4
.L2545:

; ..\EAS\BSW\Dem\Dem.c	  7220  (
; ..\EAS\BSW\Dem\Dem.c	  7221      Dem_EventIdType EventId,
; ..\EAS\BSW\Dem\Dem.c	  7222      Dem_InternalDataElementType DataType,
; ..\EAS\BSW\Dem\Dem.c	  7223      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) DataValue
; ..\EAS\BSW\Dem\Dem.c	  7224  )
; ..\EAS\BSW\Dem\Dem.c	  7225  {
; ..\EAS\BSW\Dem\Dem.c	  7226      Std_ReturnType Result = E_NOT_OK;
	mov	d2,#1
.L2546:

; ..\EAS\BSW\Dem\Dem.c	  7227  
; ..\EAS\BSW\Dem\Dem.c	  7228      if(Dem_State != DEM_NORMAL)
	movh.a	a2,#@his(Dem_State)
	ld.bu	d15,[a2]@los(Dem_State)
.L3483:
	jne	d15,#2,.L568
.L3484:

; ..\EAS\BSW\Dem\Dem.c	  7229      {
; ..\EAS\BSW\Dem\Dem.c	  7230          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  7231      }
; ..\EAS\BSW\Dem\Dem.c	  7232      else if(EventId >= DEM_NUM_OF_EVENT)
	mov	d15,#116
.L3485:
	jge.u	d4,d15,.L569
.L3486:

; ..\EAS\BSW\Dem\Dem.c	  7233      {
; ..\EAS\BSW\Dem\Dem.c	  7234          /*Result = E_NOT_OK;*/
; ..\EAS\BSW\Dem\Dem.c	  7235      }
; ..\EAS\BSW\Dem\Dem.c	  7236  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  7237      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  7238      else if(Dem_EventAvailable[EventId] == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  7239      {
; ..\EAS\BSW\Dem\Dem.c	  7240          /*SWS_Dem_01108*/
; ..\EAS\BSW\Dem\Dem.c	  7241      }
; ..\EAS\BSW\Dem\Dem.c	  7242  #endif
; ..\EAS\BSW\Dem\Dem.c	  7243      else
; ..\EAS\BSW\Dem\Dem.c	  7244      {
; ..\EAS\BSW\Dem\Dem.c	  7245          *DataValue = DemInternal_GetEventInternalData(EventId, DataType);
	call	DemInternal_GetEventInternalData
.L2544:
	st.b	[a15],d2
.L3487:

; ..\EAS\BSW\Dem\Dem.c	  7246          Result = E_OK;
	mov	d2,#0
.L569:
.L568:

; ..\EAS\BSW\Dem\Dem.c	  7247      }
; ..\EAS\BSW\Dem\Dem.c	  7248  
; ..\EAS\BSW\Dem\Dem.c	  7249      return Result;
; ..\EAS\BSW\Dem\Dem.c	  7250  }
	ret
.L1739:
	
__Dem_GetEventInternalData_function_end:
	.size	Dem_GetEventInternalData,__Dem_GetEventInternalData_function_end-Dem_GetEventInternalData
.L1242:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_CheckDtcValid',code,cluster('DemInternal_CheckDtcValid')
	.sect	'.text.Dem.DemInternal_CheckDtcValid'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  7251  
; ..\EAS\BSW\Dem\Dem.c	  7252  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  7253  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  7254  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7255  * Function Name: Dem_SetEventDisabled
; ..\EAS\BSW\Dem\Dem.c	  7256  *
; ..\EAS\BSW\Dem\Dem.c	  7257  * Description: Service for reporting the event as disabled to the Dem for the
; ..\EAS\BSW\Dem\Dem.c	  7258  *              PID $41 computation.
; ..\EAS\BSW\Dem\Dem.c	  7259  *
; ..\EAS\BSW\Dem\Dem.c	  7260  * Inputs: EventId: Identification of an event by assigned EventId.
; ..\EAS\BSW\Dem\Dem.c	  7261  *
; ..\EAS\BSW\Dem\Dem.c	  7262  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  7263  *
; ..\EAS\BSW\Dem\Dem.c	  7264  * Return: E_OK: set of event to disabled was successfull.
; ..\EAS\BSW\Dem\Dem.c	  7265  *         E_NOT_OK: set of event disabled failed.
; ..\EAS\BSW\Dem\Dem.c	  7266  *
; ..\EAS\BSW\Dem\Dem.c	  7267  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	  7268  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	  7269  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7270  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  7271  /*SWS_Dem_00312*//*SWS_Dem_00294*/
; ..\EAS\BSW\Dem\Dem.c	  7272  FUNC(Std_ReturnType, DEM_CODE) Dem_SetEventDisabled
; ..\EAS\BSW\Dem\Dem.c	  7273  (
; ..\EAS\BSW\Dem\Dem.c	  7274      Dem_EventIdType EventId
; ..\EAS\BSW\Dem\Dem.c	  7275  )
; ..\EAS\BSW\Dem\Dem.c	  7276  {
; ..\EAS\BSW\Dem\Dem.c	  7277      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  7278  #if(DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)
; ..\EAS\BSW\Dem\Dem.c	  7279      Dem_EventOBDReadinessGroupType ReadinessGroup = DEM_OBD_RDY_NONE;
; ..\EAS\BSW\Dem\Dem.c	  7280      uint8 BytePos;
; ..\EAS\BSW\Dem\Dem.c	  7281      uint8 BitPos;
; ..\EAS\BSW\Dem\Dem.c	  7282  #endif
; ..\EAS\BSW\Dem\Dem.c	  7283  
; ..\EAS\BSW\Dem\Dem.c	  7284      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	  7285      {
; ..\EAS\BSW\Dem\Dem.c	  7286          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  7287          DEM_DET_REPORT_ERROR(DEM_SETEVENTDISABLED_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  7288      }
; ..\EAS\BSW\Dem\Dem.c	  7289      else if(EventId >= DEM_NUM_OF_EVENT)
; ..\EAS\BSW\Dem\Dem.c	  7290      {
; ..\EAS\BSW\Dem\Dem.c	  7291          DEM_DET_REPORT_ERROR(DEM_SETEVENTDISABLED_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  7292      }
; ..\EAS\BSW\Dem\Dem.c	  7293  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  7294      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  7295      else if(Dem_EventAvailable[EventId] == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  7296      {
; ..\EAS\BSW\Dem\Dem.c	  7297          /*SWS_Dem_01108*/
; ..\EAS\BSW\Dem\Dem.c	  7298      }
; ..\EAS\BSW\Dem\Dem.c	  7299  #endif
; ..\EAS\BSW\Dem\Dem.c	  7300      else
; ..\EAS\BSW\Dem\Dem.c	  7301      {
; ..\EAS\BSW\Dem\Dem.c	  7302  #if(DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)
; ..\EAS\BSW\Dem\Dem.c	  7303          /*SWS_Dem_00348*/
; ..\EAS\BSW\Dem\Dem.c	  7304          ReadinessGroup = DEM_CFG_DTC_OBD_READINESSGROUP(DEM_CFG_EVENT_DTCREF(EventId));
; ..\EAS\BSW\Dem\Dem.c	  7305  
; ..\EAS\BSW\Dem\Dem.c	  7306          if(ReadinessGroup != DEM_OBD_RDY_NONE)
; ..\EAS\BSW\Dem\Dem.c	  7307          {
; ..\EAS\BSW\Dem\Dem.c	  7308              BytePos = (ReadinessGroup/8);
; ..\EAS\BSW\Dem\Dem.c	  7309              BitPos = (ReadinessGroup%8);
; ..\EAS\BSW\Dem\Dem.c	  7310  
; ..\EAS\BSW\Dem\Dem.c	  7311              DEM_OBD_READINESSGROUP_STATUS[BytePos] &= (~((uint8)0x01 << BitPos));
; ..\EAS\BSW\Dem\Dem.c	  7312  
; ..\EAS\BSW\Dem\Dem.c	  7313              Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  7314          }
; ..\EAS\BSW\Dem\Dem.c	  7315  #endif
; ..\EAS\BSW\Dem\Dem.c	  7316      }
; ..\EAS\BSW\Dem\Dem.c	  7317  
; ..\EAS\BSW\Dem\Dem.c	  7318      return Result;
; ..\EAS\BSW\Dem\Dem.c	  7319  }
; ..\EAS\BSW\Dem\Dem.c	  7320  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  7321  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7322  * Function Name: Dem_RepIUMPRFaultDetect
; ..\EAS\BSW\Dem\Dem.c	  7323  *
; ..\EAS\BSW\Dem\Dem.c	  7324  * Description: Service for reporting that faults are possibly found because all
; ..\EAS\BSW\Dem\Dem.c	  7325  *              conditions are fullfilled.
; ..\EAS\BSW\Dem\Dem.c	  7326  *
; ..\EAS\BSW\Dem\Dem.c	  7327  * Inputs: RatioID: Ratio Identifier reporting that a respective monitor could
; ..\EAS\BSW\Dem\Dem.c	  7328  *                  have found a fault- only used when interface option "API"
; ..\EAS\BSW\Dem\Dem.c	  7329  *                  is selected.
; ..\EAS\BSW\Dem\Dem.c	  7330  *
; ..\EAS\BSW\Dem\Dem.c	  7331  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  7332  *
; ..\EAS\BSW\Dem\Dem.c	  7333  * Return: E_OK: report of IUMPR result was successfully reported.
; ..\EAS\BSW\Dem\Dem.c	  7334  *         E_NOT_OK: report of IUMPR result failed.
; ..\EAS\BSW\Dem\Dem.c	  7335  *
; ..\EAS\BSW\Dem\Dem.c	  7336  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	  7337  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	  7338  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7339  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  7340  /*SWS_Dem_00313*//*SWS_Dem_00360*//*SWS_Dem_00296*/
; ..\EAS\BSW\Dem\Dem.c	  7341  FUNC(Std_ReturnType, DEM_CODE) Dem_RepIUMPRFaultDetect
; ..\EAS\BSW\Dem\Dem.c	  7342  (
; ..\EAS\BSW\Dem\Dem.c	  7343      Dem_RatioIdType RatioID
; ..\EAS\BSW\Dem\Dem.c	  7344  )
; ..\EAS\BSW\Dem\Dem.c	  7345  {
; ..\EAS\BSW\Dem\Dem.c	  7346      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  7347      Dem_EventIdType EventId;
; ..\EAS\BSW\Dem\Dem.c	  7348      Dem_UdsStatusByteType DtcStatus;
; ..\EAS\BSW\Dem\Dem.c	  7349  
; ..\EAS\BSW\Dem\Dem.c	  7350  #if(DEM_NUM_OF_RATIO > 0)
; ..\EAS\BSW\Dem\Dem.c	  7351      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	  7352      {
; ..\EAS\BSW\Dem\Dem.c	  7353          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  7354          DEM_DET_REPORT_ERROR(DEM_REPIUMPRFAULTDETECT_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  7355      }
; ..\EAS\BSW\Dem\Dem.c	  7356      else if(RatioID >= DEM_NUM_OF_RATIO)
; ..\EAS\BSW\Dem\Dem.c	  7357      {
; ..\EAS\BSW\Dem\Dem.c	  7358          DEM_DET_REPORT_ERROR(DEM_REPIUMPRFAULTDETECT_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  7359      }
; ..\EAS\BSW\Dem\Dem.c	  7360      else if(DEM_CFG_RATIO_KIND(RatioID) != DEM_RATIO_API)
; ..\EAS\BSW\Dem\Dem.c	  7361      {
; ..\EAS\BSW\Dem\Dem.c	  7362          DEM_DET_REPORT_ERROR(DEM_REPIUMPRFAULTDETECT_APIID, DEM_E_WRONG_CONFIGURATION);
; ..\EAS\BSW\Dem\Dem.c	  7363      }
; ..\EAS\BSW\Dem\Dem.c	  7364  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  7365      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  7366      else if(Dem_EventAvailable[DEM_CFG_RATIO_EVENTREF(RatioID)] == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  7367      {
; ..\EAS\BSW\Dem\Dem.c	  7368          /*SWS_Dem_01108*//*SWS_Dem_00709*/
; ..\EAS\BSW\Dem\Dem.c	  7369      }
; ..\EAS\BSW\Dem\Dem.c	  7370  #endif
; ..\EAS\BSW\Dem\Dem.c	  7371      else
; ..\EAS\BSW\Dem\Dem.c	  7372      {
; ..\EAS\BSW\Dem\Dem.c	  7373          EventId = DEM_CFG_RATIO_EVENTREF(RatioID);
; ..\EAS\BSW\Dem\Dem.c	  7374          DtcStatus = DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId));
; ..\EAS\BSW\Dem\Dem.c	  7375  
; ..\EAS\BSW\Dem\Dem.c	  7376          /*SWS_Dem_00299*//*Check event status*/
; ..\EAS\BSW\Dem\Dem.c	  7377          if(!DEM_TEST_UDS_STATUS_PDTC(DtcStatus))
; ..\EAS\BSW\Dem\Dem.c	  7378          {
; ..\EAS\BSW\Dem\Dem.c	  7379              /*SWS_Dem_01188*/
; ..\EAS\BSW\Dem\Dem.c	  7380              if((DEM_OBD_RATIO_STATE(RatioID) & DEM_OBD_NUM_INCREASED_MASK) == 0)
; ..\EAS\BSW\Dem\Dem.c	  7381              {
; ..\EAS\BSW\Dem\Dem.c	  7382                  /*increase 1 to the numerator*/
; ..\EAS\BSW\Dem\Dem.c	  7383                  DEM_OBD_RATIO_NUMERATOR(RatioID)++;
; ..\EAS\BSW\Dem\Dem.c	  7384                  DEM_OBD_RATIO_STATE(RatioID) |= DEM_OBD_NUM_INCREASED_MASK;
; ..\EAS\BSW\Dem\Dem.c	  7385              }
; ..\EAS\BSW\Dem\Dem.c	  7386  
; ..\EAS\BSW\Dem\Dem.c	  7387              if(DEM_OBD_RATIO_NUMERATOR(RatioID) >= DEM_OBD_NUMDEN_MAX_VALUE)
; ..\EAS\BSW\Dem\Dem.c	  7388              {
; ..\EAS\BSW\Dem\Dem.c	  7389                  DEM_OBD_RATIO_NUMERATOR(RatioID) = (DEM_OBD_RATIO_NUMERATOR(RatioID) >> 1);
; ..\EAS\BSW\Dem\Dem.c	  7390                  DEM_OBD_RATIO_DENOMINATOR(RatioID) = (DEM_OBD_RATIO_DENOMINATOR(RatioID) >> 1);
; ..\EAS\BSW\Dem\Dem.c	  7391              }
; ..\EAS\BSW\Dem\Dem.c	  7392          }
; ..\EAS\BSW\Dem\Dem.c	  7393  
; ..\EAS\BSW\Dem\Dem.c	  7394          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  7395      }
; ..\EAS\BSW\Dem\Dem.c	  7396  #endif/*#if(DEM_NUM_OF_RATIO > 0)*/
; ..\EAS\BSW\Dem\Dem.c	  7397      return Result;
; ..\EAS\BSW\Dem\Dem.c	  7398  }
; ..\EAS\BSW\Dem\Dem.c	  7399  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  7400  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7401  * Function Name: Dem_SetIUMPRDenCondition
; ..\EAS\BSW\Dem\Dem.c	  7402  *
; ..\EAS\BSW\Dem\Dem.c	  7403  * Description: In order to communicate the status of the (additional) denominator
; ..\EAS\BSW\Dem\Dem.c	  7404  *              conditions among the OBD relevant ECUs, the API is used to forward
; ..\EAS\BSW\Dem\Dem.c	  7405  *              the condition status to a Dem of a particular ECU.
; ..\EAS\BSW\Dem\Dem.c	  7406  *
; ..\EAS\BSW\Dem\Dem.c	  7407  * Inputs: ConditionId: Identification of a IUMPR denominator condition ID
; ..\EAS\BSW\Dem\Dem.c	  7408  *                      (General Denominator, Cold start, EVAP, 500mi).
; ..\EAS\BSW\Dem\Dem.c	  7409  *         ConditionStatus: Status of the IUMPR denominator condition (Notreached,
; ..\EAS\BSW\Dem\Dem.c	  7410  *                          reached, not reachable / inhibited)
; ..\EAS\BSW\Dem\Dem.c	  7411  *
; ..\EAS\BSW\Dem\Dem.c	  7412  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  7413  *
; ..\EAS\BSW\Dem\Dem.c	  7414  * Return: E_OK: set of IUMPR denominator condition was successful.
; ..\EAS\BSW\Dem\Dem.c	  7415  *         E_NOT_OK: set of IUMPR denominator condition failed or could not be
; ..\EAS\BSW\Dem\Dem.c	  7416  *                   accepted.
; ..\EAS\BSW\Dem\Dem.c	  7417  *
; ..\EAS\BSW\Dem\Dem.c	  7418  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	  7419  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	  7420  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7421  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  7422  /*SWS_Dem_00733*//*SWS_Dem_00714*/
; ..\EAS\BSW\Dem\Dem.c	  7423  FUNC(Std_ReturnType, DEM_CODE) Dem_SetIUMPRDenCondition
; ..\EAS\BSW\Dem\Dem.c	  7424  (
; ..\EAS\BSW\Dem\Dem.c	  7425      Dem_IumprDenomCondIdType ConditionId,
; ..\EAS\BSW\Dem\Dem.c	  7426      Dem_IumprDenomCondStatusType ConditionStatus
; ..\EAS\BSW\Dem\Dem.c	  7427  )
; ..\EAS\BSW\Dem\Dem.c	  7428  {
; ..\EAS\BSW\Dem\Dem.c	  7429      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  7430  #if(DEM_NUM_OF_RATIO > 0)
; ..\EAS\BSW\Dem\Dem.c	  7431      Dem_IumprDenomCondStatusType OldConditionStatus = DEM_IUMPR_DEN_STATUS_REACHED;
; ..\EAS\BSW\Dem\Dem.c	  7432  #endif
; ..\EAS\BSW\Dem\Dem.c	  7433      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	  7434      {
; ..\EAS\BSW\Dem\Dem.c	  7435          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  7436          DEM_DET_REPORT_ERROR(DEM_SETIUMPRDENCONDITION_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  7437      }
; ..\EAS\BSW\Dem\Dem.c	  7438      else
; ..\EAS\BSW\Dem\Dem.c	  7439      {
; ..\EAS\BSW\Dem\Dem.c	  7440  #if(DEM_NUM_OF_RATIO > 0)
; ..\EAS\BSW\Dem\Dem.c	  7441          OldConditionStatus = DEM_OBD_RATIO_DENOMCOND_STATUS(ConditionId);
; ..\EAS\BSW\Dem\Dem.c	  7442          /*SWS_Dem_00717*//*Set and record the status*/
; ..\EAS\BSW\Dem\Dem.c	  7443          DEM_OBD_RATIO_DENOMCOND_STATUS(ConditionId) = ConditionStatus;
; ..\EAS\BSW\Dem\Dem.c	  7444  
; ..\EAS\BSW\Dem\Dem.c	  7445          if(ConditionId == DEM_IUMPR_GENERAL_DENOMINATOR)
; ..\EAS\BSW\Dem\Dem.c	  7446          {
; ..\EAS\BSW\Dem\Dem.c	  7447              if((ConditionStatus == DEM_IUMPR_DEN_STATUS_REACHED) \ 
; ..\EAS\BSW\Dem\Dem.c	  7448                  && ((DEM_OBD_RATIO_GENDEN_STATE & DEM_OBD_DEN_INCREASED_MASK) == 0))
; ..\EAS\BSW\Dem\Dem.c	  7449              {
; ..\EAS\BSW\Dem\Dem.c	  7450                  DEM_OBD_RATIO_GENDEN_CNT++;
; ..\EAS\BSW\Dem\Dem.c	  7451                  DEM_OBD_RATIO_GENDEN_STATE |= DEM_OBD_DEN_INCREASED_MASK;
; ..\EAS\BSW\Dem\Dem.c	  7452              }
; ..\EAS\BSW\Dem\Dem.c	  7453              else if(ConditionStatus == DEM_IUMPR_DEN_STATUS_INHIBITED)
; ..\EAS\BSW\Dem\Dem.c	  7454              {
; ..\EAS\BSW\Dem\Dem.c	  7455                  DEM_OBD_RATIO_GENDEN_STATE |= DEM_OBD_DEN_INCREASED_MASK;
; ..\EAS\BSW\Dem\Dem.c	  7456              }
; ..\EAS\BSW\Dem\Dem.c	  7457              else
; ..\EAS\BSW\Dem\Dem.c	  7458              {
; ..\EAS\BSW\Dem\Dem.c	  7459                  /*do nothing*/
; ..\EAS\BSW\Dem\Dem.c	  7460              }
; ..\EAS\BSW\Dem\Dem.c	  7461          }
; ..\EAS\BSW\Dem\Dem.c	  7462  
; ..\EAS\BSW\Dem\Dem.c	  7463          if((OldConditionStatus != ConditionStatus) \ 
; ..\EAS\BSW\Dem\Dem.c	  7464              && (ConditionStatus == DEM_IUMPR_DEN_STATUS_REACHED))
; ..\EAS\BSW\Dem\Dem.c	  7465          {
; ..\EAS\BSW\Dem\Dem.c	  7466              DemInternal_UpdateRatioDenominator();
; ..\EAS\BSW\Dem\Dem.c	  7467          }
; ..\EAS\BSW\Dem\Dem.c	  7468  
; ..\EAS\BSW\Dem\Dem.c	  7469          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  7470  #endif/*#if(DEM_NUM_OF_RATIO > 0)*/
; ..\EAS\BSW\Dem\Dem.c	  7471      }
; ..\EAS\BSW\Dem\Dem.c	  7472  
; ..\EAS\BSW\Dem\Dem.c	  7473      return Result;
; ..\EAS\BSW\Dem\Dem.c	  7474  }
; ..\EAS\BSW\Dem\Dem.c	  7475  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  7476  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7477  * Function Name: Dem_GetIUMPRDenCondition
; ..\EAS\BSW\Dem\Dem.c	  7478  *
; ..\EAS\BSW\Dem\Dem.c	  7479  * Description: In order to communicate the status of the (additional) denominator
; ..\EAS\BSW\Dem\Dem.c	  7480  *              conditions among the OBD relevant ECUs, the API is used to retrieve
; ..\EAS\BSW\Dem\Dem.c	  7481  *              the condition status from the Dem of the ECU where the conditions
; ..\EAS\BSW\Dem\Dem.c	  7482  *              are computed.
; ..\EAS\BSW\Dem\Dem.c	  7483  *
; ..\EAS\BSW\Dem\Dem.c	  7484  * Inputs: ConditionId: Identification of a IUMPR denominator condition ID
; ..\EAS\BSW\Dem\Dem.c	  7485  *                      (General Denominator, Cold start, EVAP, 500mi).
; ..\EAS\BSW\Dem\Dem.c	  7486  *
; ..\EAS\BSW\Dem\Dem.c	  7487  * Outputs: ConditionStatus: Status of the IUMPR denominator condition (Notreached,
; ..\EAS\BSW\Dem\Dem.c	  7488  *                           reached, not reachable / inhibited)
; ..\EAS\BSW\Dem\Dem.c	  7489  *
; ..\EAS\BSW\Dem\Dem.c	  7490  * Return: E_OK: get of IUMPR denominator condition was successful.
; ..\EAS\BSW\Dem\Dem.c	  7491  *         E_NOT_OK: get of condition status failed.
; ..\EAS\BSW\Dem\Dem.c	  7492  *
; ..\EAS\BSW\Dem\Dem.c	  7493  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	  7494  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	  7495  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7496  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  7497  /*SWS_Dem_00734*//*SWS_Dem_00966*/
; ..\EAS\BSW\Dem\Dem.c	  7498  FUNC(Std_ReturnType, DEM_CODE) Dem_GetIUMPRDenCondition
; ..\EAS\BSW\Dem\Dem.c	  7499  (
; ..\EAS\BSW\Dem\Dem.c	  7500      Dem_IumprDenomCondIdType ConditionId,
; ..\EAS\BSW\Dem\Dem.c	  7501      P2VAR(Dem_IumprDenomCondStatusType, AUTOMATIC, DEM_APPL_DATA) ConditionStatus
; ..\EAS\BSW\Dem\Dem.c	  7502  )
; ..\EAS\BSW\Dem\Dem.c	  7503  {
; ..\EAS\BSW\Dem\Dem.c	  7504      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  7505  
; ..\EAS\BSW\Dem\Dem.c	  7506      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	  7507      {
; ..\EAS\BSW\Dem\Dem.c	  7508          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  7509          DEM_DET_REPORT_ERROR(DEM_GETIUMPRDENCONDITION_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  7510      }
; ..\EAS\BSW\Dem\Dem.c	  7511      else if (ConditionStatus == NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  7512      {
; ..\EAS\BSW\Dem\Dem.c	  7513          DEM_DET_REPORT_ERROR(DEM_GETIUMPRDENCONDITION_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  7514      }
; ..\EAS\BSW\Dem\Dem.c	  7515      else
; ..\EAS\BSW\Dem\Dem.c	  7516      {
; ..\EAS\BSW\Dem\Dem.c	  7517  #if(DEM_NUM_OF_RATIO > 0)
; ..\EAS\BSW\Dem\Dem.c	  7518          /*SWS_Dem_00716*//*Read the status*/
; ..\EAS\BSW\Dem\Dem.c	  7519          *ConditionStatus = DEM_OBD_RATIO_DENOMCOND_STATUS(ConditionId);
; ..\EAS\BSW\Dem\Dem.c	  7520          
; ..\EAS\BSW\Dem\Dem.c	  7521          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  7522  #endif
; ..\EAS\BSW\Dem\Dem.c	  7523      }
; ..\EAS\BSW\Dem\Dem.c	  7524  
; ..\EAS\BSW\Dem\Dem.c	  7525      return Result;
; ..\EAS\BSW\Dem\Dem.c	  7526  }
; ..\EAS\BSW\Dem\Dem.c	  7527  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  7528  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7529  * Function Name: Dem_RepIUMPRDenLock
; ..\EAS\BSW\Dem\Dem.c	  7530  *
; ..\EAS\BSW\Dem\Dem.c	  7531  * Description: Service is used to lock a denominator of a specific monitor.
; ..\EAS\BSW\Dem\Dem.c	  7532  *
; ..\EAS\BSW\Dem\Dem.c	  7533  * Inputs: RatioID: Ratio Identifier reporting that specific denominator is locked
; ..\EAS\BSW\Dem\Dem.c	  7534  *                  (for physical reasons - e.g. temperature conditions or minimum
; ..\EAS\BSW\Dem\Dem.c	  7535  *                  activity).
; ..\EAS\BSW\Dem\Dem.c	  7536  *
; ..\EAS\BSW\Dem\Dem.c	  7537  * Outputs: None.
; ..\EAS\BSW\Dem\Dem.c	  7538  *
; ..\EAS\BSW\Dem\Dem.c	  7539  * Return: E_OK: report of IUMPR denominator status was successfully reported.
; ..\EAS\BSW\Dem\Dem.c	  7540  *         E_NOT_OK: report of IUMPR denominator status was not successfully
; ..\EAS\BSW\Dem\Dem.c	  7541  *                   reported.
; ..\EAS\BSW\Dem\Dem.c	  7542  *
; ..\EAS\BSW\Dem\Dem.c	  7543  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	  7544  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	  7545  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7546  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  7547  /*SWS_Dem_00314*//*SWS_Dem_00362*//*SWS_Dem_00297*/
; ..\EAS\BSW\Dem\Dem.c	  7548  FUNC(Std_ReturnType, DEM_CODE) Dem_RepIUMPRDenLock
; ..\EAS\BSW\Dem\Dem.c	  7549  (
; ..\EAS\BSW\Dem\Dem.c	  7550      Dem_RatioIdType RatioID
; ..\EAS\BSW\Dem\Dem.c	  7551  )
; ..\EAS\BSW\Dem\Dem.c	  7552  {
; ..\EAS\BSW\Dem\Dem.c	  7553      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  7554  
; ..\EAS\BSW\Dem\Dem.c	  7555  #if(DEM_NUM_OF_RATIO > 0)
; ..\EAS\BSW\Dem\Dem.c	  7556      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	  7557      {
; ..\EAS\BSW\Dem\Dem.c	  7558          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  7559          DEM_DET_REPORT_ERROR(DEM_REPIUMPRDENLOCK_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  7560      }
; ..\EAS\BSW\Dem\Dem.c	  7561      else if(RatioID >= DEM_NUM_OF_RATIO)
; ..\EAS\BSW\Dem\Dem.c	  7562      {
; ..\EAS\BSW\Dem\Dem.c	  7563          DEM_DET_REPORT_ERROR(DEM_REPIUMPRDENLOCK_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  7564      }
; ..\EAS\BSW\Dem\Dem.c	  7565      else if(DEM_CFG_RATIO_IUMPR_DEN(RatioID) != DEM_IUMPR_DEN_PHYS_API)
; ..\EAS\BSW\Dem\Dem.c	  7566      {
; ..\EAS\BSW\Dem\Dem.c	  7567          DEM_DET_REPORT_ERROR(DEM_REPIUMPRDENLOCK_APIID, DEM_E_WRONG_CONFIGURATION);
; ..\EAS\BSW\Dem\Dem.c	  7568      }
; ..\EAS\BSW\Dem\Dem.c	  7569  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  7570      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  7571      else if(Dem_EventAvailable[DEM_CFG_RATIO_EVENTREF(RatioID)] == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  7572      {
; ..\EAS\BSW\Dem\Dem.c	  7573          /*SWS_Dem_01108*/
; ..\EAS\BSW\Dem\Dem.c	  7574      }
; ..\EAS\BSW\Dem\Dem.c	  7575  #endif
; ..\EAS\BSW\Dem\Dem.c	  7576      else
; ..\EAS\BSW\Dem\Dem.c	  7577      {
; ..\EAS\BSW\Dem\Dem.c	  7578          /*Recod the lock status*/
; ..\EAS\BSW\Dem\Dem.c	  7579          DEM_OBD_RATIO_STATE(RatioID) |= DEM_OBD_DEN_LOCK_MASK;
; ..\EAS\BSW\Dem\Dem.c	  7580  
; ..\EAS\BSW\Dem\Dem.c	  7581          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  7582      }
; ..\EAS\BSW\Dem\Dem.c	  7583  #endif/*#if(DEM_NUM_OF_RATIO > 0)*/
; ..\EAS\BSW\Dem\Dem.c	  7584      return Result;
; ..\EAS\BSW\Dem\Dem.c	  7585  }
; ..\EAS\BSW\Dem\Dem.c	  7586  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  7587  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7588  * Function Name: Dem_RepIUMPRDenRelease
; ..\EAS\BSW\Dem\Dem.c	  7589  *
; ..\EAS\BSW\Dem\Dem.c	  7590  * Description: Service is used to release a denominator of a specific monitor.
; ..\EAS\BSW\Dem\Dem.c	  7591  *
; ..\EAS\BSW\Dem\Dem.c	  7592  * Inputs: RatioID: Ratio Identifier reporting that specific denominator is released
; ..\EAS\BSW\Dem\Dem.c	  7593  *                  (for physical reasons - e.g. temperature conditions or minimum
; ..\EAS\BSW\Dem\Dem.c	  7594  *                  activity).
; ..\EAS\BSW\Dem\Dem.c	  7595  *
; ..\EAS\BSW\Dem\Dem.c	  7596  * Outputs: None.
; ..\EAS\BSW\Dem\Dem.c	  7597  *
; ..\EAS\BSW\Dem\Dem.c	  7598  * Return: E_OK: report of IUMPR denominator status was successfully reported.
; ..\EAS\BSW\Dem\Dem.c	  7599  *         E_NOT_OK: report of IUMPR denominator status was not successfully
; ..\EAS\BSW\Dem\Dem.c	  7600  *                   reported.
; ..\EAS\BSW\Dem\Dem.c	  7601  *
; ..\EAS\BSW\Dem\Dem.c	  7602  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	  7603  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	  7604  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7605  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  7606  /*SWS_Dem_00315*//*SWS_Dem_00362*//*SWS_Dem_00308*/
; ..\EAS\BSW\Dem\Dem.c	  7607  FUNC(Std_ReturnType, DEM_CODE) Dem_RepIUMPRDenRelease
; ..\EAS\BSW\Dem\Dem.c	  7608  (
; ..\EAS\BSW\Dem\Dem.c	  7609      Dem_RatioIdType RatioID
; ..\EAS\BSW\Dem\Dem.c	  7610  )
; ..\EAS\BSW\Dem\Dem.c	  7611  {
; ..\EAS\BSW\Dem\Dem.c	  7612      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  7613      Dem_EventIdType EventId;
; ..\EAS\BSW\Dem\Dem.c	  7614      Dem_UdsStatusByteType DtcStatus;
; ..\EAS\BSW\Dem\Dem.c	  7615  
; ..\EAS\BSW\Dem\Dem.c	  7616  #if(DEM_NUM_OF_RATIO > 0)
; ..\EAS\BSW\Dem\Dem.c	  7617      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	  7618      {
; ..\EAS\BSW\Dem\Dem.c	  7619          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  7620          DEM_DET_REPORT_ERROR(DEM_REPIUMPRDENRELEASE_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  7621      }
; ..\EAS\BSW\Dem\Dem.c	  7622      else if(RatioID >= DEM_NUM_OF_RATIO)
; ..\EAS\BSW\Dem\Dem.c	  7623      {
; ..\EAS\BSW\Dem\Dem.c	  7624          DEM_DET_REPORT_ERROR(DEM_REPIUMPRDENRELEASE_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  7625      }
; ..\EAS\BSW\Dem\Dem.c	  7626      else if(DEM_CFG_RATIO_IUMPR_DEN(RatioID) != DEM_IUMPR_DEN_PHYS_API)
; ..\EAS\BSW\Dem\Dem.c	  7627      {
; ..\EAS\BSW\Dem\Dem.c	  7628          DEM_DET_REPORT_ERROR(DEM_REPIUMPRDENRELEASE_APIID, DEM_E_WRONG_CONFIGURATION);
; ..\EAS\BSW\Dem\Dem.c	  7629      }
; ..\EAS\BSW\Dem\Dem.c	  7630  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  7631      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  7632      else if(Dem_EventAvailable[DEM_CFG_RATIO_EVENTREF(RatioID)] == FALSE)
; ..\EAS\BSW\Dem\Dem.c	  7633      {
; ..\EAS\BSW\Dem\Dem.c	  7634          /*SWS_Dem_01108*/
; ..\EAS\BSW\Dem\Dem.c	  7635      }
; ..\EAS\BSW\Dem\Dem.c	  7636  #endif
; ..\EAS\BSW\Dem\Dem.c	  7637      else
; ..\EAS\BSW\Dem\Dem.c	  7638      {
; ..\EAS\BSW\Dem\Dem.c	  7639          /*Reset the lock status*/
; ..\EAS\BSW\Dem\Dem.c	  7640          DEM_OBD_RATIO_STATE(RatioID) &= (~DEM_OBD_DEN_LOCK_MASK);
; ..\EAS\BSW\Dem\Dem.c	  7641          /*SWS_Dem_00712*/
; ..\EAS\BSW\Dem\Dem.c	  7642          if((DEM_OBD_RATIO_DENOMCOND_STATUS(DEM_IUMPR_DEN_GENERAL) == DEM_IUMPR_DEN_STATUS_REACHED) \ 
; ..\EAS\BSW\Dem\Dem.c	  7643              && ((DEM_OBD_RATIO_STATE(RatioID) & DEM_OBD_DEN_INCREASED_MASK) == 0))
; ..\EAS\BSW\Dem\Dem.c	  7644          {
; ..\EAS\BSW\Dem\Dem.c	  7645              EventId = DEM_CFG_RATIO_EVENTREF(RatioID);
; ..\EAS\BSW\Dem\Dem.c	  7646              DtcStatus = DEM_DTC_STATUS(DEM_CFG_EVENT_DTCREF(EventId));
; ..\EAS\BSW\Dem\Dem.c	  7647              /*SWS_Dem_00299*/
; ..\EAS\BSW\Dem\Dem.c	  7648              if(!DEM_TEST_UDS_STATUS_PDTC(DtcStatus))
; ..\EAS\BSW\Dem\Dem.c	  7649              {
; ..\EAS\BSW\Dem\Dem.c	  7650                  DEM_OBD_RATIO_DENOMINATOR(RatioID)++;
; ..\EAS\BSW\Dem\Dem.c	  7651                  DEM_OBD_RATIO_STATE(RatioID) |= DEM_OBD_DEN_INCREASED_MASK;
; ..\EAS\BSW\Dem\Dem.c	  7652              }
; ..\EAS\BSW\Dem\Dem.c	  7653  
; ..\EAS\BSW\Dem\Dem.c	  7654              if(DEM_OBD_RATIO_DENOMINATOR(RatioID) >= DEM_OBD_NUMDEN_MAX_VALUE)
; ..\EAS\BSW\Dem\Dem.c	  7655              {
; ..\EAS\BSW\Dem\Dem.c	  7656                  DEM_OBD_RATIO_NUMERATOR(RatioID) = (DEM_OBD_RATIO_NUMERATOR(RatioID) >> 1);
; ..\EAS\BSW\Dem\Dem.c	  7657                  DEM_OBD_RATIO_DENOMINATOR(RatioID) = (DEM_OBD_RATIO_DENOMINATOR(RatioID) >> 1);
; ..\EAS\BSW\Dem\Dem.c	  7658              }
; ..\EAS\BSW\Dem\Dem.c	  7659          }
; ..\EAS\BSW\Dem\Dem.c	  7660  
; ..\EAS\BSW\Dem\Dem.c	  7661          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  7662      }
; ..\EAS\BSW\Dem\Dem.c	  7663  #endif/*#if(DEM_NUM_OF_RATIO > 0)*/
; ..\EAS\BSW\Dem\Dem.c	  7664      return Result;
; ..\EAS\BSW\Dem\Dem.c	  7665  }
; ..\EAS\BSW\Dem\Dem.c	  7666  
; ..\EAS\BSW\Dem\Dem.c	  7667  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  7668  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7669  * Function Name: Dem_GetGeneralNumeratorAndDenominator
; ..\EAS\BSW\Dem\Dem.c	  7670  *
; ..\EAS\BSW\Dem\Dem.c	  7671  * Description: This interface is provided to user to get the General Numerator
; ..\EAS\BSW\Dem\Dem.c	  7672  *              and Denominator of one Ratio or Event.
; ..\EAS\BSW\Dem\Dem.c	  7673  *
; ..\EAS\BSW\Dem\Dem.c	  7674  * Inputs: None
; ..\EAS\BSW\Dem\Dem.c	  7675  *
; ..\EAS\BSW\Dem\Dem.c	  7676  * Outputs: Numerator, Denominator
; ..\EAS\BSW\Dem\Dem.c	  7677  *
; ..\EAS\BSW\Dem\Dem.c	  7678  * Return: E_OK, E_NOT_OK
; ..\EAS\BSW\Dem\Dem.c	  7679  *
; ..\EAS\BSW\Dem\Dem.c	  7680  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	  7681  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	  7682  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7683  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  7684  FUNC(Std_ReturnType, DEM_CODE) Dem_GetGeneralNumeratorAndDenominator
; ..\EAS\BSW\Dem\Dem.c	  7685  (
; ..\EAS\BSW\Dem\Dem.c	  7686      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) Numerator,
; ..\EAS\BSW\Dem\Dem.c	  7687      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) Denominator
; ..\EAS\BSW\Dem\Dem.c	  7688  )
; ..\EAS\BSW\Dem\Dem.c	  7689  {
; ..\EAS\BSW\Dem\Dem.c	  7690      Std_ReturnType Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  7691  
; ..\EAS\BSW\Dem\Dem.c	  7692      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	  7693      {
; ..\EAS\BSW\Dem\Dem.c	  7694          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  7695      }
; ..\EAS\BSW\Dem\Dem.c	  7696      else if((Numerator == NULL_PTR) || (Denominator == NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	  7697      {
; ..\EAS\BSW\Dem\Dem.c	  7698          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  7699      }
; ..\EAS\BSW\Dem\Dem.c	  7700      else
; ..\EAS\BSW\Dem\Dem.c	  7701      {
; ..\EAS\BSW\Dem\Dem.c	  7702  #if(DEM_NUM_OF_RATIO > 0)
; ..\EAS\BSW\Dem\Dem.c	  7703          *Numerator = DEM_OBD_RATIO_IGN_CNT;
; ..\EAS\BSW\Dem\Dem.c	  7704          *Denominator = DEM_OBD_RATIO_GENDEN_CNT;
; ..\EAS\BSW\Dem\Dem.c	  7705  #else
; ..\EAS\BSW\Dem\Dem.c	  7706          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  7707  #endif
; ..\EAS\BSW\Dem\Dem.c	  7708      }
; ..\EAS\BSW\Dem\Dem.c	  7709      return Result;
; ..\EAS\BSW\Dem\Dem.c	  7710  }
; ..\EAS\BSW\Dem\Dem.c	  7711  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  7712  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7713  * Function Name: Dem_GetNumeratorAndDenominator
; ..\EAS\BSW\Dem\Dem.c	  7714  *
; ..\EAS\BSW\Dem\Dem.c	  7715  * Description: This interface is provided to user to get the Numerator and
; ..\EAS\BSW\Dem\Dem.c	  7716  *              Denominator of one Ratio or Event.
; ..\EAS\BSW\Dem\Dem.c	  7717  *
; ..\EAS\BSW\Dem\Dem.c	  7718  * Inputs: RatioID
; ..\EAS\BSW\Dem\Dem.c	  7719  *
; ..\EAS\BSW\Dem\Dem.c	  7720  * Outputs: EventId, Numerator, Denominator
; ..\EAS\BSW\Dem\Dem.c	  7721  *
; ..\EAS\BSW\Dem\Dem.c	  7722  * Return: E_OK, E_NOT_OK
; ..\EAS\BSW\Dem\Dem.c	  7723  *
; ..\EAS\BSW\Dem\Dem.c	  7724  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	  7725  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	  7726  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7727  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  7728  FUNC(Std_ReturnType, DEM_CODE) Dem_GetNumeratorAndDenominator
; ..\EAS\BSW\Dem\Dem.c	  7729  (
; ..\EAS\BSW\Dem\Dem.c	  7730      Dem_RatioIdType RatioID,
; ..\EAS\BSW\Dem\Dem.c	  7731      P2VAR(Dem_EventIdType, AUTOMATIC, DEM_APPL_DATA) EventId,
; ..\EAS\BSW\Dem\Dem.c	  7732      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) Numerator,
; ..\EAS\BSW\Dem\Dem.c	  7733      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) Denominator
; ..\EAS\BSW\Dem\Dem.c	  7734  )
; ..\EAS\BSW\Dem\Dem.c	  7735  {
; ..\EAS\BSW\Dem\Dem.c	  7736      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  7737  
; ..\EAS\BSW\Dem\Dem.c	  7738  #if(DEM_NUM_OF_RATIO > 0)
; ..\EAS\BSW\Dem\Dem.c	  7739      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	  7740      {
; ..\EAS\BSW\Dem\Dem.c	  7741          /*Result = E_NOT_OK;*/
; ..\EAS\BSW\Dem\Dem.c	  7742      }
; ..\EAS\BSW\Dem\Dem.c	  7743      else if(RatioID >= DEM_NUM_OF_RATIO)
; ..\EAS\BSW\Dem\Dem.c	  7744      {
; ..\EAS\BSW\Dem\Dem.c	  7745          /*Result = E_NOT_OK;*/
; ..\EAS\BSW\Dem\Dem.c	  7746      }
; ..\EAS\BSW\Dem\Dem.c	  7747      else if((EventId == NULL_PTR) || (Numerator == NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	  7748          || (Denominator == NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	  7749      {
; ..\EAS\BSW\Dem\Dem.c	  7750          /*Result = E_NOT_OK;*/
; ..\EAS\BSW\Dem\Dem.c	  7751      }
; ..\EAS\BSW\Dem\Dem.c	  7752      else
; ..\EAS\BSW\Dem\Dem.c	  7753      {
; ..\EAS\BSW\Dem\Dem.c	  7754          *EventId = DEM_CFG_RATIO_EVENTREF(RatioID);
; ..\EAS\BSW\Dem\Dem.c	  7755          *Numerator = DEM_OBD_RATIO_NUMERATOR(RatioID);
; ..\EAS\BSW\Dem\Dem.c	  7756          *Denominator = DEM_OBD_RATIO_DENOMINATOR(RatioID);
; ..\EAS\BSW\Dem\Dem.c	  7757  
; ..\EAS\BSW\Dem\Dem.c	  7758          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  7759      }
; ..\EAS\BSW\Dem\Dem.c	  7760  #endif/*#if(DEM_NUM_OF_RATIO > 0)*/
; ..\EAS\BSW\Dem\Dem.c	  7761      return Result;
; ..\EAS\BSW\Dem\Dem.c	  7762  }
; ..\EAS\BSW\Dem\Dem.c	  7763  
; ..\EAS\BSW\Dem\Dem.c	  7764  
; ..\EAS\BSW\Dem\Dem.c	  7765  #if(DEM_CFG_PTO_SUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  7766  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  7767  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7768  * Function Name: Dem_SetPtoStatus
; ..\EAS\BSW\Dem\Dem.c	  7769  *
; ..\EAS\BSW\Dem\Dem.c	  7770  * Description: Set the status of the PTO(PID 0x1E).
; ..\EAS\BSW\Dem\Dem.c	  7771  *
; ..\EAS\BSW\Dem\Dem.c	  7772  * Inputs: PtoStatus: sets the status of the PTO (TRUE==active; FALSE==inactive).
; ..\EAS\BSW\Dem\Dem.c	  7773  *
; ..\EAS\BSW\Dem\Dem.c	  7774  * Outputs: None.
; ..\EAS\BSW\Dem\Dem.c	  7775  *
; ..\EAS\BSW\Dem\Dem.c	  7776  * Return: Returns E_OK when the new PTO-status has been adopted by the Dem;
; ..\EAS\BSW\Dem\Dem.c	  7777  *         returns E_NOT_OK in all other cases.
; ..\EAS\BSW\Dem\Dem.c	  7778  *
; ..\EAS\BSW\Dem\Dem.c	  7779  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	  7780  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	  7781  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7782  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  7783  /*SWS_Dem_00627*/
; ..\EAS\BSW\Dem\Dem.c	  7784  FUNC(Std_ReturnType, DEM_CODE) Dem_SetPtoStatus
; ..\EAS\BSW\Dem\Dem.c	  7785  (
; ..\EAS\BSW\Dem\Dem.c	  7786      boolean PtoStatus
; ..\EAS\BSW\Dem\Dem.c	  7787  )
; ..\EAS\BSW\Dem\Dem.c	  7788  {
; ..\EAS\BSW\Dem\Dem.c	  7789      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  7790  
; ..\EAS\BSW\Dem\Dem.c	  7791      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	  7792      {
; ..\EAS\BSW\Dem\Dem.c	  7793          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  7794          DEM_DET_REPORT_ERROR(DEM_SETPTOSTATUS_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  7795      }
; ..\EAS\BSW\Dem\Dem.c	  7796      else if((PtoStatus != TRUE) && (PtoStatus != FALSE))
; ..\EAS\BSW\Dem\Dem.c	  7797      {
; ..\EAS\BSW\Dem\Dem.c	  7798          DEM_DET_REPORT_ERROR(DEM_SETPTOSTATUS_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  7799      }
; ..\EAS\BSW\Dem\Dem.c	  7800      else
; ..\EAS\BSW\Dem\Dem.c	  7801      {
; ..\EAS\BSW\Dem\Dem.c	  7802          /*Not implemented.*/
; ..\EAS\BSW\Dem\Dem.c	  7803          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  7804      }
; ..\EAS\BSW\Dem\Dem.c	  7805  }
; ..\EAS\BSW\Dem\Dem.c	  7806  #endif
; ..\EAS\BSW\Dem\Dem.c	  7807  
; ..\EAS\BSW\Dem\Dem.c	  7808  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  7809  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7810  * Function Name: Dem_ReadDataOfPID01
; ..\EAS\BSW\Dem\Dem.c	  7811  *
; ..\EAS\BSW\Dem\Dem.c	  7812  * Description: Service to report the value of PID $01 computed by the Dem.
; ..\EAS\BSW\Dem\Dem.c	  7813  *
; ..\EAS\BSW\Dem\Dem.c	  7814  * Inputs: None.
; ..\EAS\BSW\Dem\Dem.c	  7815  *
; ..\EAS\BSW\Dem\Dem.c	  7816  * Outputs: PID01value: Buffer containing the contents of PID $01 computed by
; ..\EAS\BSW\Dem\Dem.c	  7817  *                      the Dem.
; ..\EAS\BSW\Dem\Dem.c	  7818  *
; ..\EAS\BSW\Dem\Dem.c	  7819  * Return: Always E_OK is returned, as E_NOT_OK will never appear.
; ..\EAS\BSW\Dem\Dem.c	  7820  *
; ..\EAS\BSW\Dem\Dem.c	  7821  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	  7822  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	  7823  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7824  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  7825  /*SWS_Dem_01167*/
; ..\EAS\BSW\Dem\Dem.c	  7826  FUNC(Std_ReturnType, DEM_CODE) Dem_ReadDataOfPID01
; ..\EAS\BSW\Dem\Dem.c	  7827  (
; ..\EAS\BSW\Dem\Dem.c	  7828      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) PID01value
; ..\EAS\BSW\Dem\Dem.c	  7829  )
; ..\EAS\BSW\Dem\Dem.c	  7830  {
; ..\EAS\BSW\Dem\Dem.c	  7831      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  7832  #if(DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)
; ..\EAS\BSW\Dem\Dem.c	  7833      Dem_EventIdType EventId;
; ..\EAS\BSW\Dem\Dem.c	  7834      uint16 DtcId;
; ..\EAS\BSW\Dem\Dem.c	  7835      Dem_UdsStatusByteType DtcStatus;
; ..\EAS\BSW\Dem\Dem.c	  7836      uint8 BytePos;
; ..\EAS\BSW\Dem\Dem.c	  7837      uint8 BitPos;
; ..\EAS\BSW\Dem\Dem.c	  7838      Dem_IndicatorStatusType IndicatorStatus;
; ..\EAS\BSW\Dem\Dem.c	  7839  #endif
; ..\EAS\BSW\Dem\Dem.c	  7840  
; ..\EAS\BSW\Dem\Dem.c	  7841      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	  7842      {
; ..\EAS\BSW\Dem\Dem.c	  7843          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  7844          DEM_DET_REPORT_ERROR(DEM_READDATAOFPID01_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  7845      }
; ..\EAS\BSW\Dem\Dem.c	  7846      else if(PID01value == NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  7847      {
; ..\EAS\BSW\Dem\Dem.c	  7848          DEM_DET_REPORT_ERROR(DEM_READDATAOFPID01_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  7849      }
; ..\EAS\BSW\Dem\Dem.c	  7850      else
; ..\EAS\BSW\Dem\Dem.c	  7851      {
; ..\EAS\BSW\Dem\Dem.c	  7852  #if(DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)
; ..\EAS\BSW\Dem\Dem.c	  7853          PID01value[0U] = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  7854          /*Set the value of engine type bit*/
; ..\EAS\BSW\Dem\Dem.c	  7855          PID01value[1U] = (uint8)(DEM_CFG_OBD_ENGINE_TYPE << 3);
; ..\EAS\BSW\Dem\Dem.c	  7856          PID01value[2U] = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  7857          PID01value[3U] = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	  7858  
; ..\EAS\BSW\Dem\Dem.c	  7859          for(EventId = 0; EventId < DEM_NUM_OF_EVENT; EventId++)
; ..\EAS\BSW\Dem\Dem.c	  7860          {
; ..\EAS\BSW\Dem\Dem.c	  7861              DtcId = DEM_CFG_EVENT_DTCREF(EventId);
; ..\EAS\BSW\Dem\Dem.c	  7862              /*SWS_Dem_00354*/
; ..\EAS\BSW\Dem\Dem.c	  7863  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	  7864      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	  7865              if((Dem_EventAvailable[EventId] == TRUE) \ 
; ..\EAS\BSW\Dem\Dem.c	  7866                  && (DEM_CFG_DTC_OBDDTCREF(DtcId) != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	  7867                  && (DEM_CFG_DTC_OBD_READINESSGROUP(DtcId) != DEM_OBD_RDY_NONE))
; ..\EAS\BSW\Dem\Dem.c	  7868  #else
; ..\EAS\BSW\Dem\Dem.c	  7869              if((DEM_CFG_DTC_OBDDTCREF(DtcId) != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	  7870                  && (DEM_CFG_DTC_OBD_READINESSGROUP(DtcId) != DEM_OBD_RDY_NONE))
; ..\EAS\BSW\Dem\Dem.c	  7871  #endif
; ..\EAS\BSW\Dem\Dem.c	  7872              {
; ..\EAS\BSW\Dem\Dem.c	  7873                  BytePos = (DEM_CFG_DTC_OBD_READINESSGROUP(DtcId)/8);
; ..\EAS\BSW\Dem\Dem.c	  7874                  BitPos = (DEM_CFG_DTC_OBD_READINESSGROUP(DtcId)%8);
; ..\EAS\BSW\Dem\Dem.c	  7875                  /*Set value of monitors supported bit*/
; ..\EAS\BSW\Dem\Dem.c	  7876                  PID01value[BytePos + 1] |= ((uint8)0x01 << BitPos);
; ..\EAS\BSW\Dem\Dem.c	  7877  
; ..\EAS\BSW\Dem\Dem.c	  7878                  DtcStatus = DEM_DTC_STATUS(DtcId);
; ..\EAS\BSW\Dem\Dem.c	  7879                  /*Status of monitors since DTC cleared*/
; ..\EAS\BSW\Dem\Dem.c	  7880                  if(DEM_TEST_UDS_STATUS_TNCSLC(DtcStatus))
; ..\EAS\BSW\Dem\Dem.c	  7881                  {
; ..\EAS\BSW\Dem\Dem.c	  7882                      switch(BytePos)
; ..\EAS\BSW\Dem\Dem.c	  7883                      {
; ..\EAS\BSW\Dem\Dem.c	  7884                          /*Set value of monitors compleate bit.
; ..\EAS\BSW\Dem\Dem.c	  7885                          0 = monitor complete (YES)
; ..\EAS\BSW\Dem\Dem.c	  7886                          0 = monitor not applicable (N/A)
; ..\EAS\BSW\Dem\Dem.c	  7887                          1 =  monitor not complete (NO)*/
; ..\EAS\BSW\Dem\Dem.c	  7888                          case 0:
; ..\EAS\BSW\Dem\Dem.c	  7889                              PID01value[1] |= ((uint8)0x40 << BitPos);
; ..\EAS\BSW\Dem\Dem.c	  7890                          break;
; ..\EAS\BSW\Dem\Dem.c	  7891  
; ..\EAS\BSW\Dem\Dem.c	  7892                          default:
; ..\EAS\BSW\Dem\Dem.c	  7893                              PID01value[3] |= ((uint8)0x01 << BitPos);
; ..\EAS\BSW\Dem\Dem.c	  7894                          break;
; ..\EAS\BSW\Dem\Dem.c	  7895                      }
; ..\EAS\BSW\Dem\Dem.c	  7896                  }/*if(DEM_TEST_UDS_STATUS_TNCSLC(DtcStatus))*/
; ..\EAS\BSW\Dem\Dem.c	  7897  
; ..\EAS\BSW\Dem\Dem.c	  7898                  if((DEM_TEST_UDS_STATUS_CDTC(DtcStatus)) && (PID01value[0] < (uint8)0x7F))
; ..\EAS\BSW\Dem\Dem.c	  7899                  {
; ..\EAS\BSW\Dem\Dem.c	  7900                      PID01value[0]++;
; ..\EAS\BSW\Dem\Dem.c	  7901                  }
; ..\EAS\BSW\Dem\Dem.c	  7902              }
; ..\EAS\BSW\Dem\Dem.c	  7903          }/*for(EventId = 0; EventId < DEM_NUM_OF_EVENT; EventId++)*/
; ..\EAS\BSW\Dem\Dem.c	  7904  
; ..\EAS\BSW\Dem\Dem.c	  7905          DemInternal_GetIndicatorStatus(DEM_CFG_MILINDICATORREF, &IndicatorStatus);
; ..\EAS\BSW\Dem\Dem.c	  7906  
; ..\EAS\BSW\Dem\Dem.c	  7907          if(IndicatorStatus != DEM_INDICATOR_OFF)
; ..\EAS\BSW\Dem\Dem.c	  7908          {
; ..\EAS\BSW\Dem\Dem.c	  7909              PID01value[0] |= (uint8)0x80;
; ..\EAS\BSW\Dem\Dem.c	  7910          }
; ..\EAS\BSW\Dem\Dem.c	  7911  
; ..\EAS\BSW\Dem\Dem.c	  7912          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  7913  #endif/*#if(DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)*/
; ..\EAS\BSW\Dem\Dem.c	  7914      }
; ..\EAS\BSW\Dem\Dem.c	  7915      return Result;
; ..\EAS\BSW\Dem\Dem.c	  7916  }
; ..\EAS\BSW\Dem\Dem.c	  7917  
; ..\EAS\BSW\Dem\Dem.c	  7918  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU) \ 
; ..\EAS\BSW\Dem\Dem.c	  7919      && (DEM_CFG_OBD_CENTRALIZED_PID21_HANDLING == STD_ON))
; ..\EAS\BSW\Dem\Dem.c	  7920  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  7921  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7922  * Function Name: Dem_GetDataOfPID21
; ..\EAS\BSW\Dem\Dem.c	  7923  *
; ..\EAS\BSW\Dem\Dem.c	  7924  * Description: Service to get the value of PID $21 from the Dem by a software
; ..\EAS\BSW\Dem\Dem.c	  7925  *              component.
; ..\EAS\BSW\Dem\Dem.c	  7926  *
; ..\EAS\BSW\Dem\Dem.c	  7927  * Inputs: None.
; ..\EAS\BSW\Dem\Dem.c	  7928  *
; ..\EAS\BSW\Dem\Dem.c	  7929  * Outputs: PID21value: Content of PID $21 as raw hex value.
; ..\EAS\BSW\Dem\Dem.c	  7930  *
; ..\EAS\BSW\Dem\Dem.c	  7931  * Return: Always E_OK is returned, as E_NOT_OK will never appear.
; ..\EAS\BSW\Dem\Dem.c	  7932  *
; ..\EAS\BSW\Dem\Dem.c	  7933  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral/
; ..\EAS\BSW\Dem\Dem.c	  7934  *              DemGeneralOBD.DemOBDCentralizedPID21Handling)}== true)
; ..\EAS\BSW\Dem\Dem.c	  7935  *              && ({ecuc(Dem/DemGeneral.DemOBDSupport)} == DEM_OBD_MASTER_ECU).
; ..\EAS\BSW\Dem\Dem.c	  7936  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7937  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  7938  /*SWS_Dem_01093*/
; ..\EAS\BSW\Dem\Dem.c	  7939  FUNC(Std_ReturnType, DEM_CODE) Dem_GetDataOfPID21
; ..\EAS\BSW\Dem\Dem.c	  7940  (
; ..\EAS\BSW\Dem\Dem.c	  7941      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) PID21value
; ..\EAS\BSW\Dem\Dem.c	  7942  )
; ..\EAS\BSW\Dem\Dem.c	  7943  {
; ..\EAS\BSW\Dem\Dem.c	  7944      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  7945  
; ..\EAS\BSW\Dem\Dem.c	  7946      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	  7947      {
; ..\EAS\BSW\Dem\Dem.c	  7948          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  7949          DEM_DET_REPORT_ERROR(DEM_GETDATAOFPID21_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  7950      }
; ..\EAS\BSW\Dem\Dem.c	  7951      else if(PID21value == NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  7952      {
; ..\EAS\BSW\Dem\Dem.c	  7953          DEM_DET_REPORT_ERROR(DEM_GETDATAOFPID21_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  7954      }
; ..\EAS\BSW\Dem\Dem.c	  7955      else
; ..\EAS\BSW\Dem\Dem.c	  7956      {
; ..\EAS\BSW\Dem\Dem.c	  7957          /*Not implemented.*/
; ..\EAS\BSW\Dem\Dem.c	  7958          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  7959      }
; ..\EAS\BSW\Dem\Dem.c	  7960      return Result;
; ..\EAS\BSW\Dem\Dem.c	  7961  }
; ..\EAS\BSW\Dem\Dem.c	  7962  #endif/*#if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU) \ 
; ..\EAS\BSW\Dem\Dem.c	  7963              && (DEM_CFG_OBD_CENTRALIZED_PID21_HANDLING == STD_ON))*/
; ..\EAS\BSW\Dem\Dem.c	  7964  
; ..\EAS\BSW\Dem\Dem.c	  7965  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  7966  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7967  * Function Name: Dem_SetDataOfPID21
; ..\EAS\BSW\Dem\Dem.c	  7968  *
; ..\EAS\BSW\Dem\Dem.c	  7969  * Description: Service to set the value of PID $21 in the Dem by a software
; ..\EAS\BSW\Dem\Dem.c	  7970  *              component.
; ..\EAS\BSW\Dem\Dem.c	  7971  *
; ..\EAS\BSW\Dem\Dem.c	  7972  * Inputs: PID21value: Buffer containing the contents of PID $21.
; ..\EAS\BSW\Dem\Dem.c	  7973  *
; ..\EAS\BSW\Dem\Dem.c	  7974  * Outputs: None.
; ..\EAS\BSW\Dem\Dem.c	  7975  *
; ..\EAS\BSW\Dem\Dem.c	  7976  * Return: Always E_OK is returned, as E_NOT_OK will never appear.
; ..\EAS\BSW\Dem\Dem.c	  7977  *
; ..\EAS\BSW\Dem\Dem.c	  7978  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	  7979  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	  7980  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  7981  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  7982  /*SWS_Dem_00735*/
; ..\EAS\BSW\Dem\Dem.c	  7983  FUNC(Std_ReturnType, DEM_CODE) Dem_SetDataOfPID21
; ..\EAS\BSW\Dem\Dem.c	  7984  (
; ..\EAS\BSW\Dem\Dem.c	  7985      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) PID21value
; ..\EAS\BSW\Dem\Dem.c	  7986  )
; ..\EAS\BSW\Dem\Dem.c	  7987  {
; ..\EAS\BSW\Dem\Dem.c	  7988      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  7989  
; ..\EAS\BSW\Dem\Dem.c	  7990      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	  7991      {
; ..\EAS\BSW\Dem\Dem.c	  7992          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  7993          DEM_DET_REPORT_ERROR(DEM_SETDATAOFPID21_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  7994      }
; ..\EAS\BSW\Dem\Dem.c	  7995      else if(PID21value == NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  7996      {
; ..\EAS\BSW\Dem\Dem.c	  7997          DEM_DET_REPORT_ERROR(DEM_SETDATAOFPID21_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  7998      }
; ..\EAS\BSW\Dem\Dem.c	  7999      else
; ..\EAS\BSW\Dem\Dem.c	  8000      {
; ..\EAS\BSW\Dem\Dem.c	  8001          /*Not implemented.*/
; ..\EAS\BSW\Dem\Dem.c	  8002          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  8003      }
; ..\EAS\BSW\Dem\Dem.c	  8004      return Result;
; ..\EAS\BSW\Dem\Dem.c	  8005  }
; ..\EAS\BSW\Dem\Dem.c	  8006  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  8007  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8008  * Function Name: Dem_SetDataOfPID31
; ..\EAS\BSW\Dem\Dem.c	  8009  *
; ..\EAS\BSW\Dem\Dem.c	  8010  * Description: Service to set the value of PID $31 in the Dem by a software
; ..\EAS\BSW\Dem\Dem.c	  8011  *              component.
; ..\EAS\BSW\Dem\Dem.c	  8012  *
; ..\EAS\BSW\Dem\Dem.c	  8013  * Inputs: PID31value: Buffer containing the contents of PID $31.
; ..\EAS\BSW\Dem\Dem.c	  8014  *
; ..\EAS\BSW\Dem\Dem.c	  8015  * Outputs: None.
; ..\EAS\BSW\Dem\Dem.c	  8016  *
; ..\EAS\BSW\Dem\Dem.c	  8017  * Return: Always E_OK is returned, as E_NOT_OK will never appear.
; ..\EAS\BSW\Dem\Dem.c	  8018  *
; ..\EAS\BSW\Dem\Dem.c	  8019  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	  8020  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	  8021  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8022  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  8023  /*SWS_Dem_00736*/
; ..\EAS\BSW\Dem\Dem.c	  8024  FUNC(Std_ReturnType, DEM_CODE) Dem_SetDataOfPID31
; ..\EAS\BSW\Dem\Dem.c	  8025  (
; ..\EAS\BSW\Dem\Dem.c	  8026      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) PID31value
; ..\EAS\BSW\Dem\Dem.c	  8027  )
; ..\EAS\BSW\Dem\Dem.c	  8028  {
; ..\EAS\BSW\Dem\Dem.c	  8029      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  8030      uint32 Distance;
; ..\EAS\BSW\Dem\Dem.c	  8031  
; ..\EAS\BSW\Dem\Dem.c	  8032      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	  8033      {
; ..\EAS\BSW\Dem\Dem.c	  8034          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  8035          DEM_DET_REPORT_ERROR(DEM_SETDATAOFPID31_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  8036      }
; ..\EAS\BSW\Dem\Dem.c	  8037      else if(PID31value == NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  8038      {
; ..\EAS\BSW\Dem\Dem.c	  8039          DEM_DET_REPORT_ERROR(DEM_SETDATAOFPID31_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  8040      }
; ..\EAS\BSW\Dem\Dem.c	  8041      else
; ..\EAS\BSW\Dem\Dem.c	  8042      {
; ..\EAS\BSW\Dem\Dem.c	  8043          Distance = (((uint32)PID31value[0] << 8) | ((uint32)PID31value[1]));
; ..\EAS\BSW\Dem\Dem.c	  8044          DEM_OBD_DISTANCE_SINCEDTCCLEARED = (uint32)(Distance*1000);
; ..\EAS\BSW\Dem\Dem.c	  8045  
; ..\EAS\BSW\Dem\Dem.c	  8046          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  8047      }
; ..\EAS\BSW\Dem\Dem.c	  8048      return Result;
; ..\EAS\BSW\Dem\Dem.c	  8049  }
; ..\EAS\BSW\Dem\Dem.c	  8050  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  8051  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8052  * Function Name: Dem_SetDataOfPID4D
; ..\EAS\BSW\Dem\Dem.c	  8053  *
; ..\EAS\BSW\Dem\Dem.c	  8054  * Description: Service to set the value of PID $4D in the Dem by a software
; ..\EAS\BSW\Dem\Dem.c	  8055  *              component.
; ..\EAS\BSW\Dem\Dem.c	  8056  *
; ..\EAS\BSW\Dem\Dem.c	  8057  * Inputs: PID4Dvalue: Buffer containing the contents of PID $4D.
; ..\EAS\BSW\Dem\Dem.c	  8058  *
; ..\EAS\BSW\Dem\Dem.c	  8059  * Outputs: None.
; ..\EAS\BSW\Dem\Dem.c	  8060  *
; ..\EAS\BSW\Dem\Dem.c	  8061  * Return: Always E_OK is returned, as E_NOT_OK will never appear.
; ..\EAS\BSW\Dem\Dem.c	  8062  *
; ..\EAS\BSW\Dem\Dem.c	  8063  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	  8064  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	  8065  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8066  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  8067  /*SWS_Dem_00737*/
; ..\EAS\BSW\Dem\Dem.c	  8068  FUNC(Std_ReturnType, DEM_CODE) Dem_SetDataOfPID4D
; ..\EAS\BSW\Dem\Dem.c	  8069  (
; ..\EAS\BSW\Dem\Dem.c	  8070      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) PID4Dvalue
; ..\EAS\BSW\Dem\Dem.c	  8071  )
; ..\EAS\BSW\Dem\Dem.c	  8072  {
; ..\EAS\BSW\Dem\Dem.c	  8073      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  8074  
; ..\EAS\BSW\Dem\Dem.c	  8075      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	  8076      {
; ..\EAS\BSW\Dem\Dem.c	  8077          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  8078          DEM_DET_REPORT_ERROR(DEM_SETDATAOFPID4D_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  8079      }
; ..\EAS\BSW\Dem\Dem.c	  8080      else if(PID4Dvalue == NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  8081      {
; ..\EAS\BSW\Dem\Dem.c	  8082          DEM_DET_REPORT_ERROR(DEM_SETDATAOFPID4D_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  8083      }
; ..\EAS\BSW\Dem\Dem.c	  8084      else
; ..\EAS\BSW\Dem\Dem.c	  8085      {
; ..\EAS\BSW\Dem\Dem.c	  8086          /*Not implemented.*/
; ..\EAS\BSW\Dem\Dem.c	  8087          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  8088      }
; ..\EAS\BSW\Dem\Dem.c	  8089      return Result;
; ..\EAS\BSW\Dem\Dem.c	  8090  }
; ..\EAS\BSW\Dem\Dem.c	  8091  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  8092  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8093  * Function Name: Dem_SetDataOfPID4E
; ..\EAS\BSW\Dem\Dem.c	  8094  *
; ..\EAS\BSW\Dem\Dem.c	  8095  * Description: Service to set the value of PID $4E in the Dem by a software
; ..\EAS\BSW\Dem\Dem.c	  8096  *              component.
; ..\EAS\BSW\Dem\Dem.c	  8097  *
; ..\EAS\BSW\Dem\Dem.c	  8098  * Inputs: PID4Evalue: Buffer containing the contents of PID $4E.
; ..\EAS\BSW\Dem\Dem.c	  8099  *
; ..\EAS\BSW\Dem\Dem.c	  8100  * Outputs: None.
; ..\EAS\BSW\Dem\Dem.c	  8101  *
; ..\EAS\BSW\Dem\Dem.c	  8102  * Return: Always E_OK is returned, as E_NOT_OK will never appear.
; ..\EAS\BSW\Dem\Dem.c	  8103  *
; ..\EAS\BSW\Dem\Dem.c	  8104  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	  8105  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	  8106  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8107  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  8108  /*SWS_Dem_00738*/
; ..\EAS\BSW\Dem\Dem.c	  8109  FUNC(Std_ReturnType, DEM_CODE) Dem_SetDataOfPID4E
; ..\EAS\BSW\Dem\Dem.c	  8110  (
; ..\EAS\BSW\Dem\Dem.c	  8111      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) PID4Evalue
; ..\EAS\BSW\Dem\Dem.c	  8112  )
; ..\EAS\BSW\Dem\Dem.c	  8113  {
; ..\EAS\BSW\Dem\Dem.c	  8114      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  8115  
; ..\EAS\BSW\Dem\Dem.c	  8116      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	  8117      {
; ..\EAS\BSW\Dem\Dem.c	  8118          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  8119          DEM_DET_REPORT_ERROR(DEM_SETDATAOFPID4E_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  8120      }
; ..\EAS\BSW\Dem\Dem.c	  8121      else if(PID4Evalue == NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  8122      {
; ..\EAS\BSW\Dem\Dem.c	  8123          DEM_DET_REPORT_ERROR(DEM_SETDATAOFPID4E_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  8124      }
; ..\EAS\BSW\Dem\Dem.c	  8125      else
; ..\EAS\BSW\Dem\Dem.c	  8126      {
; ..\EAS\BSW\Dem\Dem.c	  8127          /*Not implemented.*/
; ..\EAS\BSW\Dem\Dem.c	  8128          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  8129      }
; ..\EAS\BSW\Dem\Dem.c	  8130      return Result;
; ..\EAS\BSW\Dem\Dem.c	  8131  }
; ..\EAS\BSW\Dem\Dem.c	  8132  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  8133  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8134  * Function Name: Dem_SetPfcCycleQualified
; ..\EAS\BSW\Dem\Dem.c	  8135  *
; ..\EAS\BSW\Dem\Dem.c	  8136  * Description: Marks the current OBD driving cycle as having met the criteria
; ..\EAS\BSW\Dem\Dem.c	  8137  *              for the PFC cycle.
; ..\EAS\BSW\Dem\Dem.c	  8138  *
; ..\EAS\BSW\Dem\Dem.c	  8139  * Inputs: None
; ..\EAS\BSW\Dem\Dem.c	  8140  *
; ..\EAS\BSW\Dem\Dem.c	  8141  * Outputs: None.
; ..\EAS\BSW\Dem\Dem.c	  8142  *
; ..\EAS\BSW\Dem\Dem.c	  8143  * Return: Always E_OK is returned, as E_NOT_OK will never appear.
; ..\EAS\BSW\Dem\Dem.c	  8144  *
; ..\EAS\BSW\Dem\Dem.c	  8145  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	  8146  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	  8147  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8148  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  8149  /*SWS_Dem_00739*/
; ..\EAS\BSW\Dem\Dem.c	  8150  FUNC(Std_ReturnType, DEM_CODE) Dem_SetPfcCycleQualified
; ..\EAS\BSW\Dem\Dem.c	  8151  (
; ..\EAS\BSW\Dem\Dem.c	  8152      void
; ..\EAS\BSW\Dem\Dem.c	  8153  )
; ..\EAS\BSW\Dem\Dem.c	  8154  {
; ..\EAS\BSW\Dem\Dem.c	  8155      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  8156  
; ..\EAS\BSW\Dem\Dem.c	  8157      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	  8158      {
; ..\EAS\BSW\Dem\Dem.c	  8159          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  8160          DEM_DET_REPORT_ERROR(DEM_SETPFCCYCLEQUALIFIED_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  8161      }
; ..\EAS\BSW\Dem\Dem.c	  8162      else
; ..\EAS\BSW\Dem\Dem.c	  8163      {
; ..\EAS\BSW\Dem\Dem.c	  8164  #if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)
; ..\EAS\BSW\Dem\Dem.c	  8165          /*Not implemented.*/
; ..\EAS\BSW\Dem\Dem.c	  8166          DEM_OBD_PFC_CYCLE_STATUS = TRUE;
; ..\EAS\BSW\Dem\Dem.c	  8167          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  8168  #endif
; ..\EAS\BSW\Dem\Dem.c	  8169      }
; ..\EAS\BSW\Dem\Dem.c	  8170      return Result;
; ..\EAS\BSW\Dem\Dem.c	  8171  }
; ..\EAS\BSW\Dem\Dem.c	  8172  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  8173  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8174  * Function Name: Dem_GetPfcCycleQualified
; ..\EAS\BSW\Dem\Dem.c	  8175  *
; ..\EAS\BSW\Dem\Dem.c	  8176  * Description: Returns TRUE if the criteria for the PFC cycle have been met
; ..\EAS\BSW\Dem\Dem.c	  8177  *              during the current OBD driving cycle.
; ..\EAS\BSW\Dem\Dem.c	  8178  *
; ..\EAS\BSW\Dem\Dem.c	  8179  * Inputs: None
; ..\EAS\BSW\Dem\Dem.c	  8180  *
; ..\EAS\BSW\Dem\Dem.c	  8181  * Outputs: isqualified: TRUE: During the current OBD driving cycle the criteria
; ..\EAS\BSW\Dem\Dem.c	  8182  *                             for the PFC cycle have been met.
; ..\EAS\BSW\Dem\Dem.c	  8183  *                       FALSE: During the current OBD driving cycle the criteria
; ..\EAS\BSW\Dem\Dem.c	  8184  *                              for the PFC cycle have not been met.
; ..\EAS\BSW\Dem\Dem.c	  8185  *
; ..\EAS\BSW\Dem\Dem.c	  8186  * Return: Always E_OK is returned, as E_NOT_OK will never appear.
; ..\EAS\BSW\Dem\Dem.c	  8187  *
; ..\EAS\BSW\Dem\Dem.c	  8188  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	  8189  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	  8190  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8191  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  8192  /*SWS_Dem_00740*/
; ..\EAS\BSW\Dem\Dem.c	  8193  FUNC(Std_ReturnType, DEM_CODE) Dem_GetPfcCycleQualified
; ..\EAS\BSW\Dem\Dem.c	  8194  (
; ..\EAS\BSW\Dem\Dem.c	  8195      P2VAR(boolean, AUTOMATIC, DEM_APPL_DATA) isqualified
; ..\EAS\BSW\Dem\Dem.c	  8196  )
; ..\EAS\BSW\Dem\Dem.c	  8197  {
; ..\EAS\BSW\Dem\Dem.c	  8198      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  8199  
; ..\EAS\BSW\Dem\Dem.c	  8200      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	  8201      {
; ..\EAS\BSW\Dem\Dem.c	  8202          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  8203          DEM_DET_REPORT_ERROR(DEM_GETPFCCYCLEQUALIFIED_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  8204      }
; ..\EAS\BSW\Dem\Dem.c	  8205      else if(isqualified == NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  8206      {
; ..\EAS\BSW\Dem\Dem.c	  8207          DEM_DET_REPORT_ERROR(DEM_GETPFCCYCLEQUALIFIED_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  8208      }
; ..\EAS\BSW\Dem\Dem.c	  8209      else
; ..\EAS\BSW\Dem\Dem.c	  8210      {
; ..\EAS\BSW\Dem\Dem.c	  8211  #if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)
; ..\EAS\BSW\Dem\Dem.c	  8212          *isqualified = DEM_OBD_PFC_CYCLE_STATUS;
; ..\EAS\BSW\Dem\Dem.c	  8213          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  8214  #endif
; ..\EAS\BSW\Dem\Dem.c	  8215      }
; ..\EAS\BSW\Dem\Dem.c	  8216      return Result;
; ..\EAS\BSW\Dem\Dem.c	  8217  }
; ..\EAS\BSW\Dem\Dem.c	  8218  
; ..\EAS\BSW\Dem\Dem.c	  8219  #if(DEM_CFG_OBD_SUPPORT == DEM_OBD_DEP_SEC_ECU)
; ..\EAS\BSW\Dem\Dem.c	  8220  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  8221  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8222  * Function Name: Dem_SetClearDTC
; ..\EAS\BSW\Dem\Dem.c	  8223  *
; ..\EAS\BSW\Dem\Dem.c	  8224  * Description: API to inform the Dem (of a Dependend / Secondary ECU) about the
; ..\EAS\BSW\Dem\Dem.c	  8225  *              reception of service $04 execution by a software component.
; ..\EAS\BSW\Dem\Dem.c	  8226  *              API is needed in OBD Dependend / Secondary ECUs only.
; ..\EAS\BSW\Dem\Dem.c	  8227  *
; ..\EAS\BSW\Dem\Dem.c	  8228  * Inputs: DTC: Defines the DTC in respective format, that has been cleared from
; ..\EAS\BSW\Dem\Dem.c	  8229  *              the event memory.
; ..\EAS\BSW\Dem\Dem.c	  8230  *         DTCFormat: Format of the provided DTC value.
; ..\EAS\BSW\Dem\Dem.c	  8231  *         DTCOrigin: Event memory (e.g. MIRROR).
; ..\EAS\BSW\Dem\Dem.c	  8232  *
; ..\EAS\BSW\Dem\Dem.c	  8233  * Outputs: None.
; ..\EAS\BSW\Dem\Dem.c	  8234  *
; ..\EAS\BSW\Dem\Dem.c	  8235  * Return: Always E_OK is returned, as E_NOT_OK will never appear.
; ..\EAS\BSW\Dem\Dem.c	  8236  *
; ..\EAS\BSW\Dem\Dem.c	  8237  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	  8238  *              Support)} == DEM_OBD_DEP_SEC_ECU)
; ..\EAS\BSW\Dem\Dem.c	  8239  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8240  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  8241  /*SWS_Dem_00741*/
; ..\EAS\BSW\Dem\Dem.c	  8242  FUNC(Std_ReturnType, DEM_CODE) Dem_SetClearDTC
; ..\EAS\BSW\Dem\Dem.c	  8243  (
; ..\EAS\BSW\Dem\Dem.c	  8244      uint32 DTC,
; ..\EAS\BSW\Dem\Dem.c	  8245      Dem_DTCFormatType DTCFormat,
; ..\EAS\BSW\Dem\Dem.c	  8246      Dem_DTCOriginType DTCOrigin
; ..\EAS\BSW\Dem\Dem.c	  8247  )
; ..\EAS\BSW\Dem\Dem.c	  8248  {
; ..\EAS\BSW\Dem\Dem.c	  8249      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  8250  
; ..\EAS\BSW\Dem\Dem.c	  8251      /*Not implemented.*/
; ..\EAS\BSW\Dem\Dem.c	  8252  
; ..\EAS\BSW\Dem\Dem.c	  8253      return Result;
; ..\EAS\BSW\Dem\Dem.c	  8254  }
; ..\EAS\BSW\Dem\Dem.c	  8255  #endif/*#if(DEM_CFG_OBD_SUPPORT == DEM_OBD_DEP_SEC_ECU)*/
; ..\EAS\BSW\Dem\Dem.c	  8256  
; ..\EAS\BSW\Dem\Dem.c	  8257  
; ..\EAS\BSW\Dem\Dem.c	  8258  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  8259  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8260  * Function Name: Dem_GetB1Counter
; ..\EAS\BSW\Dem\Dem.c	  8261  *
; ..\EAS\BSW\Dem\Dem.c	  8262  * Description: Service to report the value of the B1 counter computed by the Dem.
; ..\EAS\BSW\Dem\Dem.c	  8263  *              API is needed in WWH-OBD relevant ECUs only.
; ..\EAS\BSW\Dem\Dem.c	  8264  *
; ..\EAS\BSW\Dem\Dem.c	  8265  * Inputs: None.
; ..\EAS\BSW\Dem\Dem.c	  8266  *
; ..\EAS\BSW\Dem\Dem.c	  8267  * Outputs: B1Counter: Buffer containing the B1 counter.
; ..\EAS\BSW\Dem\Dem.c	  8268  *                     The buffer is provided by the application with the size
; ..\EAS\BSW\Dem\Dem.c	  8269  *                     of 2 bytes.
; ..\EAS\BSW\Dem\Dem.c	  8270  *
; ..\EAS\BSW\Dem\Dem.c	  8271  * Return: Always E_OK is returned, as E_NOT_OK will never appear.
; ..\EAS\BSW\Dem\Dem.c	  8272  *
; ..\EAS\BSW\Dem\Dem.c	  8273  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	  8274  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	  8275  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8276  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  8277  /*SWS_Dem_01169*/
; ..\EAS\BSW\Dem\Dem.c	  8278  FUNC(Std_ReturnType, DEM_CODE) Dem_GetB1Counter
; ..\EAS\BSW\Dem\Dem.c	  8279  (
; ..\EAS\BSW\Dem\Dem.c	  8280      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) B1Counter
; ..\EAS\BSW\Dem\Dem.c	  8281  )
; ..\EAS\BSW\Dem\Dem.c	  8282  {
; ..\EAS\BSW\Dem\Dem.c	  8283      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  8284  
; ..\EAS\BSW\Dem\Dem.c	  8285      /*Not implemented.*/
; ..\EAS\BSW\Dem\Dem.c	  8286  
; ..\EAS\BSW\Dem\Dem.c	  8287      return Result;
; ..\EAS\BSW\Dem\Dem.c	  8288  }
; ..\EAS\BSW\Dem\Dem.c	  8289  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  8290  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8291  * Function Name: Dem_SetDTR
; ..\EAS\BSW\Dem\Dem.c	  8292  *
; ..\EAS\BSW\Dem\Dem.c	  8293  * Description: Reports a DTR result with lower and upper limit. The internal
; ..\EAS\BSW\Dem\Dem.c	  8294  *              eventstatus serves as master whether the DTR values are forwarded
; ..\EAS\BSW\Dem\Dem.c	  8295  *              or ignored, also taking the DTRUpdateKind into account.
; ..\EAS\BSW\Dem\Dem.c	  8296  *
; ..\EAS\BSW\Dem\Dem.c	  8297  * Inputs: DTRId: Identification of a DTR element by assigned DTRId.
; ..\EAS\BSW\Dem\Dem.c	  8298  *         TestResult: Test result of DTR
; ..\EAS\BSW\Dem\Dem.c	  8299  *         LowerLimit: Lower limit of DTR
; ..\EAS\BSW\Dem\Dem.c	  8300  *         UpperLimit: Upper limit of DTR
; ..\EAS\BSW\Dem\Dem.c	  8301  *         Ctrlval: Control value of the DTR to support its interpretation
; ..\EAS\BSW\Dem\Dem.c	  8302  *                  Dem-internally.
; ..\EAS\BSW\Dem\Dem.c	  8303  *
; ..\EAS\BSW\Dem\Dem.c	  8304  * Outputs: None.
; ..\EAS\BSW\Dem\Dem.c	  8305  *
; ..\EAS\BSW\Dem\Dem.c	  8306  * Return: E_OK: Report of DTR result successful
; ..\EAS\BSW\Dem\Dem.c	  8307  *         E_NOT_OK: Report of DTR result failed
; ..\EAS\BSW\Dem\Dem.c	  8308  *
; ..\EAS\BSW\Dem\Dem.c	  8309  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	  8310  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	  8311  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8312  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  8313  /*SWS_Dem_00765*/
; ..\EAS\BSW\Dem\Dem.c	  8314  FUNC(Std_ReturnType, DEM_CODE) Dem_SetDTR
; ..\EAS\BSW\Dem\Dem.c	  8315  (
; ..\EAS\BSW\Dem\Dem.c	  8316      uint16 DTRId,
; ..\EAS\BSW\Dem\Dem.c	  8317      sint32 TestResult,
; ..\EAS\BSW\Dem\Dem.c	  8318      sint32 LowerLimit,
; ..\EAS\BSW\Dem\Dem.c	  8319      sint32 UpperLimit,
; ..\EAS\BSW\Dem\Dem.c	  8320      Dem_DTRControlType Ctrlval
; ..\EAS\BSW\Dem\Dem.c	  8321  )
; ..\EAS\BSW\Dem\Dem.c	  8322  {
; ..\EAS\BSW\Dem\Dem.c	  8323      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	  8324  
; ..\EAS\BSW\Dem\Dem.c	  8325      /*Not implemented.*/
; ..\EAS\BSW\Dem\Dem.c	  8326  
; ..\EAS\BSW\Dem\Dem.c	  8327      return Result;
; ..\EAS\BSW\Dem\Dem.c	  8328  }
; ..\EAS\BSW\Dem\Dem.c	  8329  #endif/*#if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))*/
; ..\EAS\BSW\Dem\Dem.c	  8330  
; ..\EAS\BSW\Dem\Dem.c	  8331  #define DEM_STOP_SEC_CODE
; ..\EAS\BSW\Dem\Dem.c	  8332  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	  8333  
; ..\EAS\BSW\Dem\Dem.c	  8334  /*******************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8335  *   Dem_Dcm
; ..\EAS\BSW\Dem\Dem.c	  8336  *******************************************************************************/
; ..\EAS\BSW\Dem\Dem.c	  8337  #define DEM_START_SEC_CODE
; ..\EAS\BSW\Dem\Dem.c	  8338  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	  8339  
; ..\EAS\BSW\Dem\Dem.c	  8340  /*******************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8341  *   Dem_Dcm  static Api declaration
; ..\EAS\BSW\Dem\Dem.c	  8342  *******************************************************************************/
; ..\EAS\BSW\Dem\Dem.c	  8343  STATIC FUNC(Std_ReturnType, DEM_CODE) DemInternal_CheckDtcValid
; ..\EAS\BSW\Dem\Dem.c	  8344  (
; ..\EAS\BSW\Dem\Dem.c	  8345      Dem_UdsDTCType DTC,
; ..\EAS\BSW\Dem\Dem.c	  8346      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) DtcId
; ..\EAS\BSW\Dem\Dem.c	  8347  );
; ..\EAS\BSW\Dem\Dem.c	  8348  
; ..\EAS\BSW\Dem\Dem.c	  8349  STATIC FUNC(Dem_ReturnGetSizeOfDataByDTCType, DEM_CODE) DemInternal_GetSizeOfExtendedData
; ..\EAS\BSW\Dem\Dem.c	  8350  (
; ..\EAS\BSW\Dem\Dem.c	  8351      uint32 DTC,
; ..\EAS\BSW\Dem\Dem.c	  8352      Dem_DTCOriginType DTCOrigin,
; ..\EAS\BSW\Dem\Dem.c	  8353      uint8 ExtendedDataNumber,
; ..\EAS\BSW\Dem\Dem.c	  8354      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) SizeOfExtendedDataRecord,
; ..\EAS\BSW\Dem\Dem.c	  8355      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) ExtendedDataOffset
; ..\EAS\BSW\Dem\Dem.c	  8356  );
; ..\EAS\BSW\Dem\Dem.c	  8357  
; ..\EAS\BSW\Dem\Dem.c	  8358  #if(DEM_MAX_EXTSIZE_OF_DTC > 0U)
; ..\EAS\BSW\Dem\Dem.c	  8359  STATIC FUNC(void, DEM_CODE) DemInternal_GetAllExtendedData
; ..\EAS\BSW\Dem\Dem.c	  8360  (
; ..\EAS\BSW\Dem\Dem.c	  8361      uint32 DtcId,
; ..\EAS\BSW\Dem\Dem.c	  8362      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) DestBuffer
; ..\EAS\BSW\Dem\Dem.c	  8363  );
; ..\EAS\BSW\Dem\Dem.c	  8364  #endif
; ..\EAS\BSW\Dem\Dem.c	  8365  
; ..\EAS\BSW\Dem\Dem.c	  8366  STATIC FUNC(Dem_ReturnGetSizeOfDataByDTCType, DEM_CODE) DemInternal_GetSizeOfFFData
; ..\EAS\BSW\Dem\Dem.c	  8367  (
; ..\EAS\BSW\Dem\Dem.c	  8368      uint32 DTC,
; ..\EAS\BSW\Dem\Dem.c	  8369      Dem_DTCOriginType DTCOrigin,
; ..\EAS\BSW\Dem\Dem.c	  8370      uint8 RecordNumber,
; ..\EAS\BSW\Dem\Dem.c	  8371      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) SizeOfFreezeFrame,
; ..\EAS\BSW\Dem\Dem.c	  8372      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) FFDataOffset
; ..\EAS\BSW\Dem\Dem.c	  8373  );
; ..\EAS\BSW\Dem\Dem.c	  8374  
; ..\EAS\BSW\Dem\Dem.c	  8375  #if(DEM_MAX_FFSIZE_OF_DTC > 0U)
; ..\EAS\BSW\Dem\Dem.c	  8376  STATIC FUNC(void, DEM_CODE) DemInternal_GetAllFFData
; ..\EAS\BSW\Dem\Dem.c	  8377  (
; ..\EAS\BSW\Dem\Dem.c	  8378      uint32 DtcId,
; ..\EAS\BSW\Dem\Dem.c	  8379      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) DestBuffer
; ..\EAS\BSW\Dem\Dem.c	  8380  );
; ..\EAS\BSW\Dem\Dem.c	  8381  #endif
; ..\EAS\BSW\Dem\Dem.c	  8382  
; ..\EAS\BSW\Dem\Dem.c	  8383  /*******************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8384  *   Dem_Dcm  static Api definition
; ..\EAS\BSW\Dem\Dem.c	  8385  *******************************************************************************/
; ..\EAS\BSW\Dem\Dem.c	  8386  
; ..\EAS\BSW\Dem\Dem.c	  8387  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  8388  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8389  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	  8390  *
; ..\EAS\BSW\Dem\Dem.c	  8391  * Description:
; ..\EAS\BSW\Dem\Dem.c	  8392  *
; ..\EAS\BSW\Dem\Dem.c	  8393  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  8394  *
; ..\EAS\BSW\Dem\Dem.c	  8395  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  8396  *
; ..\EAS\BSW\Dem\Dem.c	  8397  * Return:
; ..\EAS\BSW\Dem\Dem.c	  8398  *
; ..\EAS\BSW\Dem\Dem.c	  8399  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  8400  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8401  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  8402  STATIC FUNC(Std_ReturnType, DEM_CODE) DemInternal_CheckDtcValid
; Function DemInternal_CheckDtcValid
.L1019:
DemInternal_CheckDtcValid:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  8403  (
; ..\EAS\BSW\Dem\Dem.c	  8404      Dem_UdsDTCType DTC,
; ..\EAS\BSW\Dem\Dem.c	  8405      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) DtcId
; ..\EAS\BSW\Dem\Dem.c	  8406  )
; ..\EAS\BSW\Dem\Dem.c	  8407  {
; ..\EAS\BSW\Dem\Dem.c	  8408      Std_ReturnType Result = E_NOT_OK;
	mov	d2,#1
.L2547:

; ..\EAS\BSW\Dem\Dem.c	  8409      uint16 i;
; ..\EAS\BSW\Dem\Dem.c	  8410  
; ..\EAS\BSW\Dem\Dem.c	  8411      for(i = 0; i < DEM_NUM_OF_DTC; i++)
	mov	d0,#0
.L2548:
	mov	d1,#116
.L4976:
	j	.L571
.L572:

; ..\EAS\BSW\Dem\Dem.c	  8412      {
; ..\EAS\BSW\Dem\Dem.c	  8413          if(DTC == DEM_CFG_DTC_VALUE(i))
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d0,#3
	ld.w	d15,[a15]4
.L4977:
	jne	d15,d4,.L573
.L4978:

; ..\EAS\BSW\Dem\Dem.c	  8414          {
; ..\EAS\BSW\Dem\Dem.c	  8415              *DtcId = i;
	st.h	[a4],d0
.L4979:

; ..\EAS\BSW\Dem\Dem.c	  8416              Result = E_OK;
	mov	d2,#0
.L4980:

; ..\EAS\BSW\Dem\Dem.c	  8417              break;
; ..\EAS\BSW\Dem\Dem.c	  8418          }
; ..\EAS\BSW\Dem\Dem.c	  8419      }
; ..\EAS\BSW\Dem\Dem.c	  8420      return Result;
; ..\EAS\BSW\Dem\Dem.c	  8421  }
	ret
.L573:
	add	d0,#1
.L571:
	jlt.u	d0,d1,.L572
.L4981:
	ret
.L2061:
	
__DemInternal_CheckDtcValid_function_end:
	.size	DemInternal_CheckDtcValid,__DemInternal_CheckDtcValid_function_end-DemInternal_CheckDtcValid
.L1517:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_GetSizeOfExtendedData',code,cluster('DemInternal_GetSizeOfExtendedData')
	.sect	'.text.Dem.DemInternal_GetSizeOfExtendedData'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  8422  
; ..\EAS\BSW\Dem\Dem.c	  8423  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  8424  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8425  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	  8426  *
; ..\EAS\BSW\Dem\Dem.c	  8427  * Description:
; ..\EAS\BSW\Dem\Dem.c	  8428  *
; ..\EAS\BSW\Dem\Dem.c	  8429  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  8430  *
; ..\EAS\BSW\Dem\Dem.c	  8431  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  8432  *
; ..\EAS\BSW\Dem\Dem.c	  8433  * Return:
; ..\EAS\BSW\Dem\Dem.c	  8434  *
; ..\EAS\BSW\Dem\Dem.c	  8435  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  8436  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8437  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  8438  STATIC FUNC(Dem_ReturnGetSizeOfDataByDTCType, DEM_CODE) DemInternal_GetSizeOfExtendedData
; Function DemInternal_GetSizeOfExtendedData
.L1021:
DemInternal_GetSizeOfExtendedData:	.type	func
	sub.a	a10,#16
.L2549:
	st.w	[a10]8,d6
.L2553:
	mov.aa	a12,a4
.L2554:
	mov.aa	a13,a5
.L2555:

; ..\EAS\BSW\Dem\Dem.c	  8439  (
; ..\EAS\BSW\Dem\Dem.c	  8440      uint32 DTC,
; ..\EAS\BSW\Dem\Dem.c	  8441      Dem_DTCOriginType DTCOrigin,
; ..\EAS\BSW\Dem\Dem.c	  8442      uint8 ExtendedDataNumber,
; ..\EAS\BSW\Dem\Dem.c	  8443      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) SizeOfExtendedDataRecord,
; ..\EAS\BSW\Dem\Dem.c	  8444      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) ExtendedDataOffset
; ..\EAS\BSW\Dem\Dem.c	  8445  )
; ..\EAS\BSW\Dem\Dem.c	  8446  {
; ..\EAS\BSW\Dem\Dem.c	  8447      Dem_ReturnGetSizeOfDataByDTCType Result = DEM_GETSIZEBYDTC_OK;
	mov	d15,#0
.L2556:
	st.w	[a10]12,d15
.L2557:

; ..\EAS\BSW\Dem\Dem.c	  8448      uint16 DtcId;
; ..\EAS\BSW\Dem\Dem.c	  8449  #if(DEM_NUM_OF_EXTDATACLASS > 0U)
; ..\EAS\BSW\Dem\Dem.c	  8450      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	  8451      uint8 j;
; ..\EAS\BSW\Dem\Dem.c	  8452      uint8 RecIdx;
; ..\EAS\BSW\Dem\Dem.c	  8453      uint8 DataIdx;
; ..\EAS\BSW\Dem\Dem.c	  8454      uint8 RecNum;
; ..\EAS\BSW\Dem\Dem.c	  8455      uint8 DataSize;
; ..\EAS\BSW\Dem\Dem.c	  8456      uint8 *DataBufferPtr;
; ..\EAS\BSW\Dem\Dem.c	  8457      uint16 RecDataSize;
; ..\EAS\BSW\Dem\Dem.c	  8458      uint16 InvalidDataLength;
; ..\EAS\BSW\Dem\Dem.c	  8459  #endif
; ..\EAS\BSW\Dem\Dem.c	  8460      if(SizeOfExtendedDataRecord == NULL_PTR)
	jz.a	a12,.L576
.L4986:

; ..\EAS\BSW\Dem\Dem.c	  8461      {
; ..\EAS\BSW\Dem\Dem.c	  8462          Result = DEM_GETSIZEBYDTC_WRONG_RECNUM;
; ..\EAS\BSW\Dem\Dem.c	  8463      }
; ..\EAS\BSW\Dem\Dem.c	  8464      else if(DTCOrigin != DEM_DTC_ORIGIN_PRIMARY_MEMORY)
	jeq	d5,#1,.L577
.L4987:

; ..\EAS\BSW\Dem\Dem.c	  8465      {
; ..\EAS\BSW\Dem\Dem.c	  8466          /*SWS_Dem_00171*/
; ..\EAS\BSW\Dem\Dem.c	  8467          Result = DEM_GETSIZEBYDTC_WRONG_DTCORIGIN;
	mov	d15,#2
.L4988:
	j	.L578
.L577:

; ..\EAS\BSW\Dem\Dem.c	  8468      }
; ..\EAS\BSW\Dem\Dem.c	  8469      else if((ExtendedDataNumber == 0U) || ((ExtendedDataNumber > 0xEFU) && (ExtendedDataNumber < 0xFFU)))
	ld.w	d15,[a10]8
.L2551:
	jeq	d15,#0,.L579
.L4989:
	add	d15,d15,#-240
.L2558:
	extr.u	d15,d15,#0,#8
.L4990:
	jlt.u	d15,#15,.L580
.L4991:

; ..\EAS\BSW\Dem\Dem.c	  8470      {
; ..\EAS\BSW\Dem\Dem.c	  8471          Result = DEM_GETSIZEBYDTC_WRONG_RECNUM;
; ..\EAS\BSW\Dem\Dem.c	  8472      }
; ..\EAS\BSW\Dem\Dem.c	  8473      else if(E_OK != DemInternal_CheckDtcValid(DTC, &DtcId))
	mov.aa	a4,a10
.L2552:
	call	DemInternal_CheckDtcValid
.L2550:
	jeq	d2,#0,.L581
.L4992:

; ..\EAS\BSW\Dem\Dem.c	  8474      {
; ..\EAS\BSW\Dem\Dem.c	  8475          /*SWS_Dem_00172*/
; ..\EAS\BSW\Dem\Dem.c	  8476          Result = DEM_GETSIZEBYDTC_WRONG_DTC;
	mov	d15,#1
.L2559:
	j	.L582
.L581:

; ..\EAS\BSW\Dem\Dem.c	  8477      }
; ..\EAS\BSW\Dem\Dem.c	  8478  #if(DEM_NUM_OF_EXTDATACLASS > 0)
; ..\EAS\BSW\Dem\Dem.c	  8479      else if(DEM_CFG_DTC_EXTDATACLASSREF(DtcId) == NULL_PTR)
	ld.hu	d0,[a10]0
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d0,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]12
.L4993:
	jeq	d15,#0,.L583
.L4994:

; ..\EAS\BSW\Dem\Dem.c	  8480      {
; ..\EAS\BSW\Dem\Dem.c	  8481          Result = DEM_GETSIZEBYDTC_WRONG_RECNUM;
; ..\EAS\BSW\Dem\Dem.c	  8482      }
; ..\EAS\BSW\Dem\Dem.c	  8483  #endif
; ..\EAS\BSW\Dem\Dem.c	  8484      else if(DEM_DTC_DATAENTRYREF(DtcId) == DEM_DATA_INVALID_U16)
	mul	d15,d0,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]1868
.L4995:
	mov.u	d0,#65535
.L4996:
	jne	d15,d0,.L584
.L4997:

; ..\EAS\BSW\Dem\Dem.c	  8485      {
; ..\EAS\BSW\Dem\Dem.c	  8486          *SizeOfExtendedDataRecord = 0U;
	mov	d0,#0
.L2560:
	st.h	[a12],d0
.L4998:

; ..\EAS\BSW\Dem\Dem.c	  8487          Result = DEM_GETSIZEBYDTC_WRONG_RECNUM;
	mov	d15,#3
.L2562:
	st.w	[a10]12,d15
.L4999:

; ..\EAS\BSW\Dem\Dem.c	  8488  #if(DEM_NUM_OF_EXTDATACLASS > 0U)
; ..\EAS\BSW\Dem\Dem.c	  8489          for(i = 0U; i < DEM_CFG_DTC_NUM_OF_EXTREC(DtcId); i++)
	j	.L585
.L586:

; ..\EAS\BSW\Dem\Dem.c	  8490          {
; ..\EAS\BSW\Dem\Dem.c	  8491              RecIdx = (DEM_CFG_DTC_EXTREC_ARRAY(DtcId)[i]);
	ld.hu	d15,[a10]0
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]12
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_ExtDataClassTable)
	lea	a15,[a15]@los(Dem_ExtDataClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]4
.L5000:
	addsc.a	a15,a15,d0,#0
	ld.bu	d15,[a15]
.L2563:

; ..\EAS\BSW\Dem\Dem.c	  8492              RecNum = DEM_CFG_DTC_EXTRECNUM(RecIdx);
	mul	d15,d15,#12
.L2564:
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d1,[a15]8
.L2565:

; ..\EAS\BSW\Dem\Dem.c	  8493              if(RecNum == ExtendedDataNumber)
	ld.w	d15,[a10]8
.L2566:
	jne	d15,d1,.L587
.L5001:

; ..\EAS\BSW\Dem\Dem.c	  8494              {
; ..\EAS\BSW\Dem\Dem.c	  8495                  Result = DEM_GETSIZEBYDTC_OK;
	mov	d15,#0
.L2567:
	st.w	[a10]12,d15
.L5002:

; ..\EAS\BSW\Dem\Dem.c	  8496                  break;
	j	.L588
.L587:
	add	d0,#1
.L2561:
	extr.u	d0,d0,#0,#8
.L585:
	ld.hu	d15,[a10]0
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]12
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_ExtDataClassTable)
	lea	a15,[a15]@los(Dem_ExtDataClassTable)
	addsc.a	a15,a15,d15,#3
	ld.bu	d15,[a15]
.L5003:
	jlt.u	d0,d15,.L586

; ..\EAS\BSW\Dem\Dem.c	  8497              }
; ..\EAS\BSW\Dem\Dem.c	  8498          }
; ..\EAS\BSW\Dem\Dem.c	  8499  
; ..\EAS\BSW\Dem\Dem.c	  8500          if(ExtendedDataNumber == (uint8)0xFF)
.L588:
	mov	d15,#255
.L5004:
	ld.w	d0,[a10]8
.L2568:
	jne	d15,d0,.L589
.L5005:

; ..\EAS\BSW\Dem\Dem.c	  8501          {
; ..\EAS\BSW\Dem\Dem.c	  8502              Result = DEM_GETSIZEBYDTC_OK;
	mov	d15,#0
.L2569:
	j	.L590
.L584:

; ..\EAS\BSW\Dem\Dem.c	  8503          }
; ..\EAS\BSW\Dem\Dem.c	  8504  #endif/*#if(DEM_NUM_OF_EXTDATACLASS > 0U)*/
; ..\EAS\BSW\Dem\Dem.c	  8505      }
; ..\EAS\BSW\Dem\Dem.c	  8506      else
; ..\EAS\BSW\Dem\Dem.c	  8507      {
; ..\EAS\BSW\Dem\Dem.c	  8508  #if(DEM_NUM_OF_EXTDATACLASS > 0U)
; ..\EAS\BSW\Dem\Dem.c	  8509  
; ..\EAS\BSW\Dem\Dem.c	  8510          *SizeOfExtendedDataRecord = 0U;
	mov	d8,#0
.L2570:
	st.h	[a12],d8
.L5006:

; ..\EAS\BSW\Dem\Dem.c	  8511          *ExtendedDataOffset = 0U;
	st.h	[a13],d8
.L5007:

; ..\EAS\BSW\Dem\Dem.c	  8512          InvalidDataLength = 0U;
; ..\EAS\BSW\Dem\Dem.c	  8513          DataBufferPtr = DEM_PRIMARY_EXTDATA_PTR(DEM_DTC_DATAENTRYREF(DtcId));
	ld.hu	d15,[a10]0
	mul	d15,d15,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]1868
	mul	d15,d15,#56
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	lea	a14,[a15]2611
.L2572:

; ..\EAS\BSW\Dem\Dem.c	  8514  
; ..\EAS\BSW\Dem\Dem.c	  8515          for(i = 0U; i < DEM_CFG_DTC_NUM_OF_EXTREC(DtcId); i++)
	mov	d9,d8
.L2573:

; ..\EAS\BSW\Dem\Dem.c	  8516          {
; ..\EAS\BSW\Dem\Dem.c	  8517              RecIdx = (DEM_CFG_DTC_EXTREC_ARRAY(DtcId)[i]);
; ..\EAS\BSW\Dem\Dem.c	  8518              RecNum = DEM_CFG_DTC_EXTRECNUM(RecIdx);
; ..\EAS\BSW\Dem\Dem.c	  8519              if(RecNum == ExtendedDataNumber)
; ..\EAS\BSW\Dem\Dem.c	  8520              {
; ..\EAS\BSW\Dem\Dem.c	  8521                  if(*(DataBufferPtr + (*ExtendedDataOffset)) != DEM_DATA_INVALID_U8)
; ..\EAS\BSW\Dem\Dem.c	  8522                  {
; ..\EAS\BSW\Dem\Dem.c	  8523                      /*+ RecNum length(one byte)*/
; ..\EAS\BSW\Dem\Dem.c	  8524                      (*SizeOfExtendedDataRecord)++;
; ..\EAS\BSW\Dem\Dem.c	  8525  
; ..\EAS\BSW\Dem\Dem.c	  8526                      for(j = 0U; j < DEM_CFG_NUMDATA_OF_EXTRECNUM(RecIdx); j++)
; ..\EAS\BSW\Dem\Dem.c	  8527                      {
; ..\EAS\BSW\Dem\Dem.c	  8528                          DataIdx = (DEM_CFG_DATAARRAY_OF_EXTRECNUM(RecIdx)[j]);
; ..\EAS\BSW\Dem\Dem.c	  8529                          if(DEM_CFG_DATA_IN_DATA(DataIdx) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  8530                          {
; ..\EAS\BSW\Dem\Dem.c	  8531                              DataSize = DEM_CFG_DATA_IN_DATA_SIZE(DataIdx);
; ..\EAS\BSW\Dem\Dem.c	  8532                              /*SWS_Dem_00817*/
; ..\EAS\BSW\Dem\Dem.c	  8533                              *(DataBufferPtr + (*ExtendedDataOffset) + (*SizeOfExtendedDataRecord)) = \ 
; ..\EAS\BSW\Dem\Dem.c	  8534                                      DemInternal_GetDtcInternalData(DtcId, DataIdx);
; ..\EAS\BSW\Dem\Dem.c	  8535                              *SizeOfExtendedDataRecord += (uint16)DataSize;
; ..\EAS\BSW\Dem\Dem.c	  8536                          }
; ..\EAS\BSW\Dem\Dem.c	  8537  
; ..\EAS\BSW\Dem\Dem.c	  8538                          if(DEM_CFG_DATA_CS_DATA(DataIdx) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  8539                          {
; ..\EAS\BSW\Dem\Dem.c	  8540                              DataSize = DEM_CFG_DATA_CS_DATA_SIZE(DataIdx);
; ..\EAS\BSW\Dem\Dem.c	  8541                              *SizeOfExtendedDataRecord += (uint16)DataSize;
; ..\EAS\BSW\Dem\Dem.c	  8542                          }
; ..\EAS\BSW\Dem\Dem.c	  8543                      }
; ..\EAS\BSW\Dem\Dem.c	  8544                  }
; ..\EAS\BSW\Dem\Dem.c	  8545                  break;
; ..\EAS\BSW\Dem\Dem.c	  8546              }
; ..\EAS\BSW\Dem\Dem.c	  8547              else
; ..\EAS\BSW\Dem\Dem.c	  8548              {
; ..\EAS\BSW\Dem\Dem.c	  8549                  /*+ RecNum length(one byte)*/
; ..\EAS\BSW\Dem\Dem.c	  8550                  RecDataSize = 1U;
; ..\EAS\BSW\Dem\Dem.c	  8551  
; ..\EAS\BSW\Dem\Dem.c	  8552                  for(j = 0U; j < DEM_CFG_NUMDATA_OF_EXTRECNUM(RecIdx); j++)
; ..\EAS\BSW\Dem\Dem.c	  8553                  {
; ..\EAS\BSW\Dem\Dem.c	  8554                      DataIdx = (DEM_CFG_DATAARRAY_OF_EXTRECNUM(RecIdx)[j]);
; ..\EAS\BSW\Dem\Dem.c	  8555                      if(DEM_CFG_DATA_IN_DATA(DataIdx) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  8556                      {
; ..\EAS\BSW\Dem\Dem.c	  8557                          DataSize = DEM_CFG_DATA_IN_DATA_SIZE(DataIdx);
; ..\EAS\BSW\Dem\Dem.c	  8558                          /*SWS_Dem_00817*/
; ..\EAS\BSW\Dem\Dem.c	  8559                          *(DataBufferPtr + (*ExtendedDataOffset) + RecDataSize) = \ 
; ..\EAS\BSW\Dem\Dem.c	  8560                                  DemInternal_GetDtcInternalData(DtcId, DataIdx);
; ..\EAS\BSW\Dem\Dem.c	  8561                          RecDataSize += (uint16)DataSize;
; ..\EAS\BSW\Dem\Dem.c	  8562                      }
; ..\EAS\BSW\Dem\Dem.c	  8563  
; ..\EAS\BSW\Dem\Dem.c	  8564                      if(DEM_CFG_DATA_CS_DATA(DataIdx) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	  8565                      {
; ..\EAS\BSW\Dem\Dem.c	  8566                          DataSize = DEM_CFG_DATA_CS_DATA_SIZE(DataIdx);
; ..\EAS\BSW\Dem\Dem.c	  8567                          RecDataSize += (uint16)DataSize;
; ..\EAS\BSW\Dem\Dem.c	  8568                      }
; ..\EAS\BSW\Dem\Dem.c	  8569                  }
; ..\EAS\BSW\Dem\Dem.c	  8570  
; ..\EAS\BSW\Dem\Dem.c	  8571                  if(*(DataBufferPtr + (*ExtendedDataOffset)) == DEM_DATA_INVALID_U8)
	mov	d10,#255
.L5008:
	j	.L591
.L592:
	ld.hu	d15,[a10]0
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.hu	d0,[a15]0
	sha	d0,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]12
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_ExtDataClassTable)
	lea	a15,[a15]@los(Dem_ExtDataClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]4
.L5009:
	addsc.a	a15,a15,d9,#0
	ld.bu	d11,[a15]
.L2575:
	mul	d15,d11,#12
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]8
.L2576:
	ld.w	d15,[a10]8
.L2578:
	jne	d15,d0,.L593
.L5010:
	ld.hu	d15,[a13]0
.L2579:
	addsc.a	a15,a14,d15,#0
.L5011:
	ld.bu	d0,[a15]
.L2577:
	mov	d15,#255
.L5012:
	jeq	d15,d0,.L594
.L5013:
	ld.hu	d15,[a12]0
.L5014:
	add	d15,#1
	st.h	[a12],d15
.L5015:
	mov	d10,#0
.L2580:
	j	.L595
.L596:
	mul	d15,d11,#12
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]4
.L5016:
	addsc.a	a15,a15,d10,#0
	ld.bu	d12,[a15]
.L2582:
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d12,#3
	ld.w	d15,[a15]
.L5017:
	jeq	d15,#0,.L597
.L5018:
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d12,#3
	ld.a	a15,[a15]
	ld.bu	d13,[a15]
.L2583:
	ld.hu	d15,[a13]0
.L5019:
	addsc.a	a15,a14,d15,#0
.L5020:
	ld.hu	d15,[a12]0
.L5021:
	addsc.a	a15,a15,d15,#0
.L5022:
	ld.hu	d4,[a10]0
.L5023:
	mov	d5,d12
.L2584:
	call	DemInternal_GetDtcInternalData
.L2585:
	st.b	[a15],d2
.L5024:
	ld.hu	d15,[a12]0
.L5025:
	add	d15,d13
	st.h	[a12],d15
.L597:
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d12,#3
	ld.w	d15,[a15]4
.L5026:
	jeq	d15,#0,.L598
.L5027:
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d12,#3
	ld.a	a15,[a15]4
	ld.bu	d0,[a15]
.L2586:
	ld.hu	d15,[a12]0
.L5028:
	add	d15,d0
	st.h	[a12],d15
.L598:
	add	d10,#1
.L2581:
	extr.u	d10,d10,#0,#8
.L595:
	mul	d15,d11,#12
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L5029:
	jlt.u	d10,d15,.L596
.L5030:
	j	.L599
.L593:
	mov	d12,#1
.L2587:
	mov	d13,#0
.L2589:
	j	.L600
.L601:
	mul	d15,d11,#12
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]4
.L5031:
	addsc.a	a15,a15,d13,#0
	ld.bu	d14,[a15]
.L2591:
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d14,#3
	ld.w	d15,[a15]
.L5032:
	jeq	d15,#0,.L602
.L5033:
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d14,#3
	ld.a	a15,[a15]
	ld.bu	d15,[a15]
.L2592:
	st.w	[a10]4,d15
.L2594:
	ld.hu	d15,[a13]0
.L2593:
	addsc.a	a15,a14,d15,#0
.L5034:
	addsc.a	a15,a15,d12,#0
.L5035:
	ld.hu	d4,[a10]0
.L5036:
	mov	d5,d14
.L2595:
	call	DemInternal_GetDtcInternalData
.L2596:
	st.b	[a15],d2
.L5037:
	ld.w	d15,[a10]4
.L2597:
	add	d12,d15
.L2588:
	extr.u	d12,d12,#0,#16
.L602:
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d14,#3
	ld.w	d15,[a15]4
.L5038:
	jeq	d15,#0,.L603
.L5039:
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d14,#3
	ld.a	a15,[a15]4
	ld.bu	d15,[a15]
.L2599:
	add	d12,d15
.L2598:
	extr.u	d12,d12,#0,#16
.L603:
	add	d13,#1
.L2590:
	extr.u	d13,d13,#0,#8
.L600:
	mul	d15,d11,#12
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L5040:
	jlt.u	d13,d15,.L601
.L5041:
	ld.hu	d15,[a13]0
.L5042:
	addsc.a	a15,a14,d15,#0
.L5043:
	ld.bu	d15,[a15]
.L5044:
	jne	d15,d10,.L604
.L5045:

; ..\EAS\BSW\Dem\Dem.c	  8572                  {
; ..\EAS\BSW\Dem\Dem.c	  8573                      InvalidDataLength += RecDataSize;
	add	d8,d12
.L2571:
	extr.u	d8,d8,#0,#16
.L604:

; ..\EAS\BSW\Dem\Dem.c	  8574                  }
; ..\EAS\BSW\Dem\Dem.c	  8575                  (*ExtendedDataOffset) += RecDataSize;
	ld.hu	d15,[a13]0
.L5046:
	add	d15,d12
	st.h	[a13],d15
.L5047:
	add	d9,#1
.L2574:
	extr.u	d9,d9,#0,#8
.L591:
	ld.hu	d15,[a10]0
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]12
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_ExtDataClassTable)
	lea	a15,[a15]@los(Dem_ExtDataClassTable)
	addsc.a	a15,a15,d15,#3
	ld.bu	d15,[a15]
.L5048:
	jlt.u	d9,d15,.L592

; ..\EAS\BSW\Dem\Dem.c	  8576              }
; ..\EAS\BSW\Dem\Dem.c	  8577          }
; ..\EAS\BSW\Dem\Dem.c	  8578          if(ExtendedDataNumber == 0xFFU)
.L599:
.L594:
	mov	d0,#255
.L5049:
	ld.w	d15,[a10]8
.L2600:
	jne	d15,d0,.L605
.L5050:

; ..\EAS\BSW\Dem\Dem.c	  8579          {
; ..\EAS\BSW\Dem\Dem.c	  8580              *SizeOfExtendedDataRecord = (*ExtendedDataOffset - InvalidDataLength);
	ld.hu	d15,[a13]0
.L2601:
	sub	d15,d8
.L5051:
	st.h	[a12],d15
.L5052:
	j	.L606
.L605:

; ..\EAS\BSW\Dem\Dem.c	  8581          }
; ..\EAS\BSW\Dem\Dem.c	  8582          else if(i == DEM_CFG_DTC_NUM_OF_EXTREC(DtcId))
	ld.hu	d15,[a10]0
.L2602:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]12
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_ExtDataClassTable)
	lea	a15,[a15]@los(Dem_ExtDataClassTable)
	addsc.a	a15,a15,d15,#3
	ld.bu	d15,[a15]
.L5053:
	jne	d15,d9,.L607
.L583:
.L580:
.L579:
.L576:

; ..\EAS\BSW\Dem\Dem.c	  8583          {
; ..\EAS\BSW\Dem\Dem.c	  8584              Result = DEM_GETSIZEBYDTC_WRONG_RECNUM;
	mov	d15,#3
.L578:
.L582:
.L590:
	st.w	[a10]12,d15
.L607:
.L606:
.L589:

; ..\EAS\BSW\Dem\Dem.c	  8585          }
; ..\EAS\BSW\Dem\Dem.c	  8586          else
; ..\EAS\BSW\Dem\Dem.c	  8587          {
; ..\EAS\BSW\Dem\Dem.c	  8588              /*do nothing*/
; ..\EAS\BSW\Dem\Dem.c	  8589          }
; ..\EAS\BSW\Dem\Dem.c	  8590  #else
; ..\EAS\BSW\Dem\Dem.c	  8591          Result = DEM_GETSIZEBYDTC_WRONG_DTC;
; ..\EAS\BSW\Dem\Dem.c	  8592  #endif
; ..\EAS\BSW\Dem\Dem.c	  8593      }
; ..\EAS\BSW\Dem\Dem.c	  8594      return Result;
	ld.w	d2,[a10]12
.L2603:

; ..\EAS\BSW\Dem\Dem.c	  8595  }
	ret
.L2066:
	
__DemInternal_GetSizeOfExtendedData_function_end:
	.size	DemInternal_GetSizeOfExtendedData,__DemInternal_GetSizeOfExtendedData_function_end-DemInternal_GetSizeOfExtendedData
.L1522:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_GetAllExtendedData',code,cluster('DemInternal_GetAllExtendedData')
	.sect	'.text.Dem.DemInternal_GetAllExtendedData'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  8596  
; ..\EAS\BSW\Dem\Dem.c	  8597  #if(DEM_MAX_EXTSIZE_OF_DTC > 0U)
; ..\EAS\BSW\Dem\Dem.c	  8598  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  8599  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8600  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	  8601  *
; ..\EAS\BSW\Dem\Dem.c	  8602  * Description:
; ..\EAS\BSW\Dem\Dem.c	  8603  *
; ..\EAS\BSW\Dem\Dem.c	  8604  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  8605  *
; ..\EAS\BSW\Dem\Dem.c	  8606  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  8607  *
; ..\EAS\BSW\Dem\Dem.c	  8608  * Return:
; ..\EAS\BSW\Dem\Dem.c	  8609  *
; ..\EAS\BSW\Dem\Dem.c	  8610  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  8611  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8612  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  8613  STATIC FUNC(void, DEM_CODE) DemInternal_GetAllExtendedData
; Function DemInternal_GetAllExtendedData
.L1023:
DemInternal_GetAllExtendedData:	.type	func
	mov	d8,d4
.L2604:
	mov.aa	a12,a4
.L2605:

; ..\EAS\BSW\Dem\Dem.c	  8614  (
; ..\EAS\BSW\Dem\Dem.c	  8615      uint32 DtcId,
; ..\EAS\BSW\Dem\Dem.c	  8616      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) DestBuffer
; ..\EAS\BSW\Dem\Dem.c	  8617  )
; ..\EAS\BSW\Dem\Dem.c	  8618  {
; ..\EAS\BSW\Dem\Dem.c	  8619      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	  8620      uint8 j;
; ..\EAS\BSW\Dem\Dem.c	  8621      uint8 RecIdx;
; ..\EAS\BSW\Dem\Dem.c	  8622      uint8 DataIdx;
; ..\EAS\BSW\Dem\Dem.c	  8623      uint8 DataSize;
; ..\EAS\BSW\Dem\Dem.c	  8624      uint8 *SrcBufferPtr = DEM_PRIMARY_EXTDATA_PTR(DEM_DTC_DATAENTRYREF(DtcId));
	mul	d15,d8,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]1868
	mul	d15,d0,#56
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	lea	a13,[a15]2611
.L2606:

; ..\EAS\BSW\Dem\Dem.c	  8625  
; ..\EAS\BSW\Dem\Dem.c	  8626      for(i = 0U; i < DEM_CFG_DTC_NUM_OF_EXTREC(DtcId); i++)
	mov	d9,#0
.L2607:

; ..\EAS\BSW\Dem\Dem.c	  8627      {
; ..\EAS\BSW\Dem\Dem.c	  8628          RecIdx = (DEM_CFG_DTC_EXTREC_ARRAY(DtcId)[i]);
; ..\EAS\BSW\Dem\Dem.c	  8629  
; ..\EAS\BSW\Dem\Dem.c	  8630          if(*SrcBufferPtr != DEM_DATA_INVALID_U8)
	mov	d10,#255
.L5058:
	j	.L609
.L610:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d8,#3
	ld.hu	d0,[a15]0
	sha	d0,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]12
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_ExtDataClassTable)
	lea	a15,[a15]@los(Dem_ExtDataClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]4
.L5059:
	addsc.a	a15,a15,d9,#0
	ld.bu	d12,[a15]
.L2609:
	ld.bu	d0,[a13]
.L5060:
	jeq	d0,d10,.L611
.L5061:

; ..\EAS\BSW\Dem\Dem.c	  8631          {
; ..\EAS\BSW\Dem\Dem.c	  8632              /*RecNum(one byte)*/
; ..\EAS\BSW\Dem\Dem.c	  8633              Bsw_MemCpy(DestBuffer, SrcBufferPtr, 1U);
	mov	d4,#1
	mov.aa	a4,a12
.L2610:
	mov.aa	a5,a13
.L2612:
	call	Bsw_MemCpy
.L2611:

; ..\EAS\BSW\Dem\Dem.c	  8634              DestBuffer++;
	add.a	a12,#1
.L5062:

; ..\EAS\BSW\Dem\Dem.c	  8635              SrcBufferPtr++;
	add.a	a13,#1
.L5063:

; ..\EAS\BSW\Dem\Dem.c	  8636  
; ..\EAS\BSW\Dem\Dem.c	  8637              for(j = 0U; j < DEM_CFG_NUMDATA_OF_EXTRECNUM(RecIdx); j++)
	mov	d13,#0
.L2613:
	j	.L612
.L613:

; ..\EAS\BSW\Dem\Dem.c	  8638              {
; ..\EAS\BSW\Dem\Dem.c	  8639                  DataIdx = (DEM_CFG_DATAARRAY_OF_EXTRECNUM(RecIdx)[j]);
	mul	d15,d12,#12
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]4
.L5064:
	addsc.a	a15,a15,d13,#0
	ld.bu	d14,[a15]
.L2615:

; ..\EAS\BSW\Dem\Dem.c	  8640                  if(DEM_CFG_DATA_IN_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d14,#3
	ld.w	d15,[a15]
.L5065:
	jeq	d15,#0,.L614
.L5066:

; ..\EAS\BSW\Dem\Dem.c	  8641                  {
; ..\EAS\BSW\Dem\Dem.c	  8642                      DataSize = DEM_CFG_DATA_IN_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d14,#3
	ld.a	a15,[a15]
	ld.bu	d11,[a15]
.L2616:

; ..\EAS\BSW\Dem\Dem.c	  8643                      Bsw_MemCpy(DestBuffer, SrcBufferPtr, DataSize);
	mov.aa	a4,a12
.L2617:
	mov.aa	a5,a13
.L2619:
	mov	d4,d11
.L2620:
	call	Bsw_MemCpy
.L2618:

; ..\EAS\BSW\Dem\Dem.c	  8644                      DestBuffer += DataSize;
	addsc.a	a12,a12,d11,#0
.L5067:

; ..\EAS\BSW\Dem\Dem.c	  8645                      SrcBufferPtr += DataSize;
	addsc.a	a13,a13,d11,#0
.L614:

; ..\EAS\BSW\Dem\Dem.c	  8646                  }
; ..\EAS\BSW\Dem\Dem.c	  8647  
; ..\EAS\BSW\Dem\Dem.c	  8648                  if(DEM_CFG_DATA_CS_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d14,#3
	ld.w	d15,[a15]4
.L5068:
	jeq	d15,#0,.L615
.L5069:

; ..\EAS\BSW\Dem\Dem.c	  8649                  {
; ..\EAS\BSW\Dem\Dem.c	  8650                      DataSize = DEM_CFG_DATA_CS_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d14,#3
	ld.a	a15,[a15]4
	ld.bu	d15,[a15]
.L2621:

; ..\EAS\BSW\Dem\Dem.c	  8651                      Bsw_MemCpy(DestBuffer, SrcBufferPtr, DataSize);
	mov.aa	a4,a12
.L2622:
	mov.aa	a5,a13
.L2624:
	mov	d4,d15
.L2625:
	call	Bsw_MemCpy
.L2623:

; ..\EAS\BSW\Dem\Dem.c	  8652                      DestBuffer += DataSize;
	addsc.a	a12,a12,d15,#0
.L5070:

; ..\EAS\BSW\Dem\Dem.c	  8653                      SrcBufferPtr += DataSize;
	addsc.a	a13,a13,d15,#0
.L615:
	add	d13,#1
.L2614:
	extr.u	d13,d13,#0,#8
.L612:
	mul	d15,d12,#12
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L5071:
	jlt.u	d13,d15,.L613
.L5072:
	j	.L616
.L611:

; ..\EAS\BSW\Dem\Dem.c	  8654                  }
; ..\EAS\BSW\Dem\Dem.c	  8655              }
; ..\EAS\BSW\Dem\Dem.c	  8656          }
; ..\EAS\BSW\Dem\Dem.c	  8657          else
; ..\EAS\BSW\Dem\Dem.c	  8658          {
; ..\EAS\BSW\Dem\Dem.c	  8659              /*RecNum(one byte)*/
; ..\EAS\BSW\Dem\Dem.c	  8660              SrcBufferPtr++;
	add.a	a13,#1
.L5073:

; ..\EAS\BSW\Dem\Dem.c	  8661  
; ..\EAS\BSW\Dem\Dem.c	  8662              for(j = 0U; j < DEM_CFG_NUMDATA_OF_EXTRECNUM(RecIdx); j++)
	mov	d0,#0
.L2626:
	j	.L617
.L618:

; ..\EAS\BSW\Dem\Dem.c	  8663              {
; ..\EAS\BSW\Dem\Dem.c	  8664                  DataIdx = (DEM_CFG_DATAARRAY_OF_EXTRECNUM(RecIdx)[j]);
	mul	d15,d12,#12
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]4
.L5074:
	addsc.a	a15,a15,d0,#0
	ld.bu	d15,[a15]
.L2628:

; ..\EAS\BSW\Dem\Dem.c	  8665                  if(DEM_CFG_DATA_IN_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.w	d1,[a15]
.L5075:
	jeq	d1,#0,.L619
.L5076:

; ..\EAS\BSW\Dem\Dem.c	  8666                  {
; ..\EAS\BSW\Dem\Dem.c	  8667                      DataSize = DEM_CFG_DATA_IN_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]
	ld.bu	d1,[a15]
.L2630:

; ..\EAS\BSW\Dem\Dem.c	  8668                      SrcBufferPtr += DataSize;
	addsc.a	a13,a13,d1,#0
.L619:

; ..\EAS\BSW\Dem\Dem.c	  8669                  }
; ..\EAS\BSW\Dem\Dem.c	  8670  
; ..\EAS\BSW\Dem\Dem.c	  8671                  if(DEM_CFG_DATA_CS_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.w	d1,[a15]4
.L5077:
	jeq	d1,#0,.L620
.L5078:

; ..\EAS\BSW\Dem\Dem.c	  8672                  {
; ..\EAS\BSW\Dem\Dem.c	  8673                      DataSize = DEM_CFG_DATA_CS_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]4
	ld.bu	d15,[a15]
.L2629:

; ..\EAS\BSW\Dem\Dem.c	  8674                      SrcBufferPtr += DataSize;
	addsc.a	a13,a13,d15,#0
.L620:
	add	d0,#1
.L2627:
	extr.u	d0,d0,#0,#8
.L617:
	mul	d15,d12,#12
	movh.a	a15,#@his(Dem_ExtDataRecClassTable)
	lea	a15,[a15]@los(Dem_ExtDataRecClassTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L5079:
	jlt.u	d0,d15,.L618
.L616:
	add	d9,#1
.L2608:
	extr.u	d9,d9,#0,#8
.L609:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d8,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]12
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_ExtDataClassTable)
	lea	a15,[a15]@los(Dem_ExtDataClassTable)
	addsc.a	a15,a15,d15,#3
	ld.bu	d15,[a15]
.L5080:
	jlt.u	d9,d15,.L610
.L5081:

; ..\EAS\BSW\Dem\Dem.c	  8675                  }
; ..\EAS\BSW\Dem\Dem.c	  8676              }
; ..\EAS\BSW\Dem\Dem.c	  8677          }
; ..\EAS\BSW\Dem\Dem.c	  8678      }
; ..\EAS\BSW\Dem\Dem.c	  8679  }
	ret
.L2083:
	
__DemInternal_GetAllExtendedData_function_end:
	.size	DemInternal_GetAllExtendedData,__DemInternal_GetAllExtendedData_function_end-DemInternal_GetAllExtendedData
.L1527:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_GetSizeOfFFData',code,cluster('DemInternal_GetSizeOfFFData')
	.sect	'.text.Dem.DemInternal_GetSizeOfFFData'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  8680  #endif
; ..\EAS\BSW\Dem\Dem.c	  8681  
; ..\EAS\BSW\Dem\Dem.c	  8682  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  8683  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8684  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	  8685  *
; ..\EAS\BSW\Dem\Dem.c	  8686  * Description:
; ..\EAS\BSW\Dem\Dem.c	  8687  *
; ..\EAS\BSW\Dem\Dem.c	  8688  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  8689  *
; ..\EAS\BSW\Dem\Dem.c	  8690  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  8691  *
; ..\EAS\BSW\Dem\Dem.c	  8692  * Return:
; ..\EAS\BSW\Dem\Dem.c	  8693  *
; ..\EAS\BSW\Dem\Dem.c	  8694  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  8695  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8696  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  8697  STATIC FUNC(Dem_ReturnGetSizeOfDataByDTCType, DEM_CODE) DemInternal_GetSizeOfFFData
; Function DemInternal_GetSizeOfFFData
.L1025:
DemInternal_GetSizeOfFFData:	.type	func
	sub.a	a10,#24
.L2631:
	st.w	[a10]12,d6
.L2635:
	mov.aa	a12,a4
.L2636:
	mov.aa	a13,a5
.L2637:

; ..\EAS\BSW\Dem\Dem.c	  8698  (
; ..\EAS\BSW\Dem\Dem.c	  8699      uint32 DTC,
; ..\EAS\BSW\Dem\Dem.c	  8700      Dem_DTCOriginType DTCOrigin,
; ..\EAS\BSW\Dem\Dem.c	  8701      uint8 RecordNumber,
; ..\EAS\BSW\Dem\Dem.c	  8702      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) SizeOfFreezeFrame,
; ..\EAS\BSW\Dem\Dem.c	  8703      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) FFDataOffset
; ..\EAS\BSW\Dem\Dem.c	  8704  )
; ..\EAS\BSW\Dem\Dem.c	  8705  {
; ..\EAS\BSW\Dem\Dem.c	  8706      Dem_ReturnGetSizeOfDataByDTCType Result = DEM_GETSIZEBYDTC_OK;
	mov	d15,#0
.L2638:
	st.w	[a10]16,d15
.L2639:

; ..\EAS\BSW\Dem\Dem.c	  8707      uint16 DtcId;
; ..\EAS\BSW\Dem\Dem.c	  8708  #if(DEM_NUM_OF_FFRECCLASS > 0U)
; ..\EAS\BSW\Dem\Dem.c	  8709      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	  8710      uint8 j;
; ..\EAS\BSW\Dem\Dem.c	  8711      uint8 k;
; ..\EAS\BSW\Dem\Dem.c	  8712      uint8 RecIdx;
; ..\EAS\BSW\Dem\Dem.c	  8713      uint8 DidIdx;
; ..\EAS\BSW\Dem\Dem.c	  8714      uint8 DataIdx;
; ..\EAS\BSW\Dem\Dem.c	  8715      uint8 RecNum = 0U;
; ..\EAS\BSW\Dem\Dem.c	  8716      uint8 DataSize;
; ..\EAS\BSW\Dem\Dem.c	  8717      uint8 *DataBufferPtr;
; ..\EAS\BSW\Dem\Dem.c	  8718      uint16 RecDataSize;
; ..\EAS\BSW\Dem\Dem.c	  8719      uint16 InvalidDataLength;
; ..\EAS\BSW\Dem\Dem.c	  8720  #endif
; ..\EAS\BSW\Dem\Dem.c	  8721      if(SizeOfFreezeFrame == NULL_PTR)
	jz.a	a12,.L621
.L5086:

; ..\EAS\BSW\Dem\Dem.c	  8722      {
; ..\EAS\BSW\Dem\Dem.c	  8723          Result = DEM_GETSIZEBYDTC_WRONG_RECNUM;
; ..\EAS\BSW\Dem\Dem.c	  8724      }
; ..\EAS\BSW\Dem\Dem.c	  8725      else if(DTCOrigin != DEM_DTC_ORIGIN_PRIMARY_MEMORY)
	jeq	d5,#1,.L622
.L5087:

; ..\EAS\BSW\Dem\Dem.c	  8726      {
; ..\EAS\BSW\Dem\Dem.c	  8727          /*SWS_Dem_00171*/
; ..\EAS\BSW\Dem\Dem.c	  8728          Result = DEM_GETSIZEBYDTC_WRONG_DTCORIGIN;
	mov	d15,#2
.L5088:
	j	.L623
.L622:

; ..\EAS\BSW\Dem\Dem.c	  8729      }
; ..\EAS\BSW\Dem\Dem.c	  8730      else if(RecordNumber == 0U)
	ld.w	d15,[a10]12
.L2633:
	jeq	d15,#0,.L624
.L5089:

; ..\EAS\BSW\Dem\Dem.c	  8731      {
; ..\EAS\BSW\Dem\Dem.c	  8732          Result = DEM_GETSIZEBYDTC_WRONG_RECNUM;
; ..\EAS\BSW\Dem\Dem.c	  8733      }
; ..\EAS\BSW\Dem\Dem.c	  8734      else if(E_OK != DemInternal_CheckDtcValid(DTC, &DtcId))
	mov.aa	a4,a10
.L2634:
	call	DemInternal_CheckDtcValid
.L2632:
	jeq	d2,#0,.L625
.L5090:

; ..\EAS\BSW\Dem\Dem.c	  8735      {
; ..\EAS\BSW\Dem\Dem.c	  8736          /*SWS_Dem_00172*/
; ..\EAS\BSW\Dem\Dem.c	  8737          Result = DEM_GETSIZEBYDTC_WRONG_DTC;
	mov	d15,#1
.L2640:
	j	.L626
.L625:

; ..\EAS\BSW\Dem\Dem.c	  8738      }
; ..\EAS\BSW\Dem\Dem.c	  8739  #if(DEM_NUM_OF_FFRECCLASS > 0U)
; ..\EAS\BSW\Dem\Dem.c	  8740      else if(DEM_CFG_DTC_FFRECNUMCLASSREF(DtcId) == NULL_PTR)
	ld.hu	d0,[a10]0
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d0,#3
	ld.hu	d15,[a15]0
.L2641:
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]16
.L5091:
	jeq	d15,#0,.L627
.L5092:

; ..\EAS\BSW\Dem\Dem.c	  8741      {
; ..\EAS\BSW\Dem\Dem.c	  8742          Result = DEM_GETSIZEBYDTC_WRONG_RECNUM;
; ..\EAS\BSW\Dem\Dem.c	  8743      }
; ..\EAS\BSW\Dem\Dem.c	  8744  #endif
; ..\EAS\BSW\Dem\Dem.c	  8745      else if(DEM_DTC_DATAENTRYREF(DtcId) == DEM_DATA_INVALID_U16)
	mul	d15,d0,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]1868
.L5093:
	mov.u	d0,#65535
.L5094:
	jne	d15,d0,.L628
.L5095:

; ..\EAS\BSW\Dem\Dem.c	  8746      {
; ..\EAS\BSW\Dem\Dem.c	  8747          *SizeOfFreezeFrame = 0U;
	mov	d0,#0
.L2642:
	st.h	[a12],d0
.L5096:

; ..\EAS\BSW\Dem\Dem.c	  8748          Result = DEM_GETSIZEBYDTC_WRONG_RECNUM;
	mov	d15,#3
.L2644:
	st.w	[a10]16,d15
.L5097:

; ..\EAS\BSW\Dem\Dem.c	  8749  #if(DEM_NUM_OF_FFRECCLASS > 0U)
; ..\EAS\BSW\Dem\Dem.c	  8750          for(i = 0U; i < DEM_CFG_DTC_NUM_OF_FFREC(DtcId); i++)
	j	.L629
.L630:

; ..\EAS\BSW\Dem\Dem.c	  8751          {
; ..\EAS\BSW\Dem\Dem.c	  8752              RecIdx = (DEM_CFG_DTC_FFREC_ARRAY(DtcId)[i]);
	ld.hu	d15,[a10]0
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]16
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_FFRecNumClassTable)
	lea	a15,[a15]@los(Dem_FFRecNumClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]4
.L5098:
	addsc.a	a15,a15,d0,#0
	ld.bu	d15,[a15]
.L2645:

; ..\EAS\BSW\Dem\Dem.c	  8753  #if(DEM_CFG_TYPE_OF_FF_RECORD_NUMERATION == DEM_FF_RECNUM_CONFIGURED)
; ..\EAS\BSW\Dem\Dem.c	  8754              RecNum = DEM_CFG_DTC_FFRECNUM(RecIdx);
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d15,#3
	ld.bu	d1,[a15]
.L2647:

; ..\EAS\BSW\Dem\Dem.c	  8755  #else
; ..\EAS\BSW\Dem\Dem.c	  8756              RecNum++;
; ..\EAS\BSW\Dem\Dem.c	  8757  #endif
; ..\EAS\BSW\Dem\Dem.c	  8758              if(RecNum == RecordNumber)
	ld.w	d15,[a10]12
.L2646:
	jne	d15,d1,.L631
.L5099:

; ..\EAS\BSW\Dem\Dem.c	  8759              {
; ..\EAS\BSW\Dem\Dem.c	  8760                  Result = DEM_GETSIZEBYDTC_OK;
	mov	d15,#0
.L2648:
	st.w	[a10]16,d15
.L5100:

; ..\EAS\BSW\Dem\Dem.c	  8761                  break;
	j	.L632
.L631:
	add	d0,#1
.L2643:
	extr.u	d0,d0,#0,#8
.L629:
	ld.hu	d15,[a10]0
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]16
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_FFRecNumClassTable)
	lea	a15,[a15]@los(Dem_FFRecNumClassTable)
	addsc.a	a15,a15,d15,#3
	ld.bu	d15,[a15]
.L5101:
	jlt.u	d0,d15,.L630

; ..\EAS\BSW\Dem\Dem.c	  8762              }
; ..\EAS\BSW\Dem\Dem.c	  8763          }
; ..\EAS\BSW\Dem\Dem.c	  8764  
; ..\EAS\BSW\Dem\Dem.c	  8765          if(RecordNumber == (uint8)0xFF)
.L632:
	mov	d15,#255
.L5102:
	ld.w	d0,[a10]12
.L2649:
	jne	d15,d0,.L633
.L5103:

; ..\EAS\BSW\Dem\Dem.c	  8766          {
; ..\EAS\BSW\Dem\Dem.c	  8767              Result = DEM_GETSIZEBYDTC_OK;
	mov	d15,#0
.L2650:
	j	.L634
.L628:

; ..\EAS\BSW\Dem\Dem.c	  8768          }
; ..\EAS\BSW\Dem\Dem.c	  8769  #endif/*#if(DEM_NUM_OF_FFRECCLASS > 0U)*/
; ..\EAS\BSW\Dem\Dem.c	  8770      }
; ..\EAS\BSW\Dem\Dem.c	  8771      else
; ..\EAS\BSW\Dem\Dem.c	  8772      {
; ..\EAS\BSW\Dem\Dem.c	  8773  #if(DEM_NUM_OF_FFRECCLASS > 0U)
; ..\EAS\BSW\Dem\Dem.c	  8774  
; ..\EAS\BSW\Dem\Dem.c	  8775          *SizeOfFreezeFrame = 0U;
	mov	d15,#0
.L2651:
	st.w	[a10]8,d15
.L2653:
	st.h	[a12],d15
.L5104:

; ..\EAS\BSW\Dem\Dem.c	  8776          *FFDataOffset = 0U;
	st.h	[a13],d15
.L5105:

; ..\EAS\BSW\Dem\Dem.c	  8777          InvalidDataLength = 0U;
; ..\EAS\BSW\Dem\Dem.c	  8778          DataBufferPtr = DEM_PRIMARY_FFDATA_PTR(DEM_DTC_DATAENTRYREF(DtcId));
	ld.hu	d15,[a10]0
.L2652:
	mul	d15,d15,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]1868
	mul	d15,d15,#56
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	lea	a14,[a15]2565
.L2654:

; ..\EAS\BSW\Dem\Dem.c	  8779  
; ..\EAS\BSW\Dem\Dem.c	  8780          for(i = 0U; i < DEM_CFG_DTC_NUM_OF_FFREC(DtcId); i++)
	ld.w	d15,[a10]8
.L2655:
	j	.L635
.L636:

; ..\EAS\BSW\Dem\Dem.c	  8781          {
; ..\EAS\BSW\Dem\Dem.c	  8782              RecIdx = (DEM_CFG_DTC_FFREC_ARRAY(DtcId)[i]);
	ld.hu	d15,[a10]0
.L2656:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]16
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_FFRecNumClassTable)
	lea	a15,[a15]@los(Dem_FFRecNumClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]4
.L5106:
	ld.w	d15,[a10]4
.L2657:
	addsc.a	a15,a15,d15,#0
	ld.bu	d8,[a15]
.L2659:

; ..\EAS\BSW\Dem\Dem.c	  8783  #if(DEM_CFG_TYPE_OF_FF_RECORD_NUMERATION == DEM_FF_RECNUM_CONFIGURED)
; ..\EAS\BSW\Dem\Dem.c	  8784              /*SWS_Dem_00582*/
; ..\EAS\BSW\Dem\Dem.c	  8785              RecNum = DEM_CFG_DTC_FFRECNUM(RecIdx);
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d8,#3
	ld.bu	d0,[a15]
.L2660:

; ..\EAS\BSW\Dem\Dem.c	  8786  #else
; ..\EAS\BSW\Dem\Dem.c	  8787              /*SWS_Dem_00337*//*SWS_Dem_00581*/
; ..\EAS\BSW\Dem\Dem.c	  8788              RecNum++;
; ..\EAS\BSW\Dem\Dem.c	  8789  #endif
; ..\EAS\BSW\Dem\Dem.c	  8790              if(RecNum == RecordNumber)
	ld.w	d15,[a10]12
.L2658:
	jne	d15,d0,.L637
.L5107:

; ..\EAS\BSW\Dem\Dem.c	  8791              {
; ..\EAS\BSW\Dem\Dem.c	  8792                  if(*(DataBufferPtr + (*FFDataOffset)) != DEM_DATA_INVALID_U8)
	ld.hu	d15,[a13]0
.L2662:
	addsc.a	a15,a14,d15,#0
.L5108:
	ld.bu	d0,[a15]
.L2661:
	mov	d15,#255
.L5109:
	jeq	d15,d0,.L638
.L5110:

; ..\EAS\BSW\Dem\Dem.c	  8793                  {
; ..\EAS\BSW\Dem\Dem.c	  8794                      /*+ RecNum length(one byte) + RecordNumberOfIdentifiers length(one byte)*/
; ..\EAS\BSW\Dem\Dem.c	  8795                      *SizeOfFreezeFrame += 2U;
	ld.hu	d0,[a12]0
.L5111:
	add	d0,#2
	st.h	[a12],d0
.L5112:

; ..\EAS\BSW\Dem\Dem.c	  8796  
; ..\EAS\BSW\Dem\Dem.c	  8797                      for(j = 0U; j < DEM_CFG_NUMDID_OF_FFRECNUM(RecIdx); j++)
	mov	d9,#0
.L2663:
	j	.L639
.L640:

; ..\EAS\BSW\Dem\Dem.c	  8798                      {
; ..\EAS\BSW\Dem\Dem.c	  8799                          /*Did length(two bytes)*/
; ..\EAS\BSW\Dem\Dem.c	  8800                          *SizeOfFreezeFrame += 2U;
	ld.hu	d0,[a12]0
.L5113:
	add	d0,#2
	st.h	[a12],d0
.L5114:

; ..\EAS\BSW\Dem\Dem.c	  8801  
; ..\EAS\BSW\Dem\Dem.c	  8802                          DidIdx = (DEM_CFG_DIDARRAY_OF_FFRECNUM(RecIdx)[j]);
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d8,#3
	ld.a	a15,[a15]4
.L5115:
	addsc.a	a15,a15,d9,#0
	ld.bu	d10,[a15]
.L2665:

; ..\EAS\BSW\Dem\Dem.c	  8803                          for(k = 0U; k < DEM_CFG_NUMDATA_OF_DID(DidIdx); k++)
	mov	d11,#0
.L2666:
	j	.L641
.L642:

; ..\EAS\BSW\Dem\Dem.c	  8804                          {
; ..\EAS\BSW\Dem\Dem.c	  8805                              DataIdx = (DEM_CFG_DATAARRAY_OF_DID(DidIdx)[k]);
	mul	d15,d10,#12
	movh.a	a15,#@his(Dem_DidClassTable)
	lea	a15,[a15]@los(Dem_DidClassTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]4
.L5116:
	addsc.a	a15,a15,d11,#0
	ld.bu	d12,[a15]
.L2668:

; ..\EAS\BSW\Dem\Dem.c	  8806                              if(DEM_CFG_DATA_IN_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d12,#3
	ld.w	d15,[a15]
.L5117:
	jeq	d15,#0,.L643
.L5118:

; ..\EAS\BSW\Dem\Dem.c	  8807                              {
; ..\EAS\BSW\Dem\Dem.c	  8808                                  DataSize = DEM_CFG_DATA_IN_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d12,#3
	ld.a	a15,[a15]
	ld.bu	d13,[a15]
.L2669:

; ..\EAS\BSW\Dem\Dem.c	  8809                                  /*SWS_Dem_00817*/
; ..\EAS\BSW\Dem\Dem.c	  8810                                  *(DataBufferPtr + (*FFDataOffset) + (*SizeOfFreezeFrame)) = \ 
	ld.hu	d15,[a13]0
.L5119:
	addsc.a	a15,a14,d15,#0
.L5120:
	ld.hu	d15,[a12]0
.L5121:
	addsc.a	a15,a15,d15,#0
.L5122:

; ..\EAS\BSW\Dem\Dem.c	  8811                                          DemInternal_GetDtcInternalData(DtcId, DataIdx);
	ld.hu	d4,[a10]0
.L5123:
	mov	d5,d12
.L2670:
	call	DemInternal_GetDtcInternalData
.L2671:
	st.b	[a15],d2
.L5124:

; ..\EAS\BSW\Dem\Dem.c	  8812                                  *SizeOfFreezeFrame += (uint16)DataSize;
	ld.hu	d15,[a12]0
.L5125:
	add	d15,d13
	st.h	[a12],d15
.L643:

; ..\EAS\BSW\Dem\Dem.c	  8813                              }
; ..\EAS\BSW\Dem\Dem.c	  8814  
; ..\EAS\BSW\Dem\Dem.c	  8815                              if(DEM_CFG_DATA_CS_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d12,#3
	ld.w	d15,[a15]4
.L5126:
	jeq	d15,#0,.L644
.L5127:

; ..\EAS\BSW\Dem\Dem.c	  8816                              {
; ..\EAS\BSW\Dem\Dem.c	  8817                                  DataSize = DEM_CFG_DATA_CS_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d12,#3
	ld.a	a15,[a15]4
	ld.bu	d0,[a15]
.L2672:

; ..\EAS\BSW\Dem\Dem.c	  8818                                  *SizeOfFreezeFrame += (uint16)DataSize;
	ld.hu	d15,[a12]0
.L5128:
	add	d15,d0
	st.h	[a12],d15
.L644:
	add	d11,#1
.L2667:
	extr.u	d11,d11,#0,#8
.L641:
	mul	d15,d10,#12
	movh.a	a15,#@his(Dem_DidClassTable)
	lea	a15,[a15]@los(Dem_DidClassTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L5129:
	jlt.u	d11,d15,.L642
.L5130:
	add	d9,#1
.L2664:
	extr.u	d9,d9,#0,#8
.L639:
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d8,#3
	ld.bu	d15,[a15]3
.L5131:
	jlt.u	d9,d15,.L640
.L5132:

; ..\EAS\BSW\Dem\Dem.c	  8819                              }
; ..\EAS\BSW\Dem\Dem.c	  8820                          }
; ..\EAS\BSW\Dem\Dem.c	  8821                      }
; ..\EAS\BSW\Dem\Dem.c	  8822                  }
; ..\EAS\BSW\Dem\Dem.c	  8823                  break;
	j	.L645
.L637:

; ..\EAS\BSW\Dem\Dem.c	  8824              }
; ..\EAS\BSW\Dem\Dem.c	  8825              else
; ..\EAS\BSW\Dem\Dem.c	  8826              {
; ..\EAS\BSW\Dem\Dem.c	  8827                  /*+ RecNum length(one byte) + RecordNumberOfIdentifiers length(one byte)*/
; ..\EAS\BSW\Dem\Dem.c	  8828                  RecDataSize = 2U;
	mov	d10,#2
.L2673:

; ..\EAS\BSW\Dem\Dem.c	  8829  
; ..\EAS\BSW\Dem\Dem.c	  8830                  for(j = 0U; j < DEM_CFG_NUMDID_OF_FFRECNUM(RecIdx); j++)
	mov	d12,#0
.L2675:
	j	.L646
.L647:

; ..\EAS\BSW\Dem\Dem.c	  8831                  {
; ..\EAS\BSW\Dem\Dem.c	  8832                      /*Did length(two bytes)*/
; ..\EAS\BSW\Dem\Dem.c	  8833                      RecDataSize += 2U;
	add	d0,d10,#2
	extr.u	d10,d0,#0,#16
.L5133:

; ..\EAS\BSW\Dem\Dem.c	  8834  
; ..\EAS\BSW\Dem\Dem.c	  8835                      DidIdx = (DEM_CFG_DIDARRAY_OF_FFRECNUM(RecIdx)[j]);
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d8,#3
	ld.a	a15,[a15]4
.L5134:
	addsc.a	a15,a15,d12,#0
	ld.bu	d11,[a15]
.L2677:

; ..\EAS\BSW\Dem\Dem.c	  8836                      for(k = 0U; k < DEM_CFG_NUMDATA_OF_DID(DidIdx); k++)
	mov	d13,#0
.L2678:
	j	.L648
.L649:

; ..\EAS\BSW\Dem\Dem.c	  8837                      {
; ..\EAS\BSW\Dem\Dem.c	  8838                          DataIdx = (DEM_CFG_DATAARRAY_OF_DID(DidIdx)[k]);
	mul	d15,d11,#12
	movh.a	a15,#@his(Dem_DidClassTable)
	lea	a15,[a15]@los(Dem_DidClassTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]4
.L5135:
	addsc.a	a15,a15,d13,#0
	ld.bu	d14,[a15]
.L2680:

; ..\EAS\BSW\Dem\Dem.c	  8839                          if(DEM_CFG_DATA_IN_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d14,#3
	ld.w	d15,[a15]
.L5136:
	jeq	d15,#0,.L650
.L5137:

; ..\EAS\BSW\Dem\Dem.c	  8840                          {
; ..\EAS\BSW\Dem\Dem.c	  8841                              DataSize = DEM_CFG_DATA_IN_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d14,#3
	ld.a	a15,[a15]
	ld.bu	d9,[a15]
.L2681:

; ..\EAS\BSW\Dem\Dem.c	  8842                              /*SWS_Dem_00817*/
; ..\EAS\BSW\Dem\Dem.c	  8843                              *(DataBufferPtr + (*FFDataOffset) + RecDataSize) = \ 
	ld.hu	d15,[a13]0
.L5138:
	addsc.a	a15,a14,d15,#0
.L5139:
	addsc.a	a15,a15,d10,#0
.L5140:

; ..\EAS\BSW\Dem\Dem.c	  8844                                      DemInternal_GetDtcInternalData(DtcId, DataIdx);
	ld.hu	d4,[a10]0
.L5141:
	mov	d5,d14
.L2683:
	call	DemInternal_GetDtcInternalData
.L2684:
	st.b	[a15],d2
.L5142:

; ..\EAS\BSW\Dem\Dem.c	  8845                              RecDataSize += (uint16)DataSize;
	add	d9,d10
.L2682:
	extr.u	d10,d9,#0,#16
.L650:

; ..\EAS\BSW\Dem\Dem.c	  8846                          }
; ..\EAS\BSW\Dem\Dem.c	  8847  
; ..\EAS\BSW\Dem\Dem.c	  8848                          if(DEM_CFG_DATA_CS_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d14,#3
	ld.w	d15,[a15]4
.L5143:
	jeq	d15,#0,.L651
.L5144:

; ..\EAS\BSW\Dem\Dem.c	  8849                          {
; ..\EAS\BSW\Dem\Dem.c	  8850                              DataSize = DEM_CFG_DATA_CS_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d14,#3
	ld.a	a15,[a15]4
	ld.bu	d15,[a15]
.L2685:

; ..\EAS\BSW\Dem\Dem.c	  8851                              RecDataSize += (uint16)DataSize;
	add	d10,d15
.L2674:
	extr.u	d10,d10,#0,#16
.L651:
	add	d13,#1
.L2679:
	extr.u	d13,d13,#0,#8
.L648:
	mul	d15,d11,#12
	movh.a	a15,#@his(Dem_DidClassTable)
	lea	a15,[a15]@los(Dem_DidClassTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L5145:
	jlt.u	d13,d15,.L649
.L5146:
	add	d12,#1
.L2676:
	extr.u	d12,d12,#0,#8
.L646:
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d8,#3
	ld.bu	d15,[a15]3
.L5147:
	jlt.u	d12,d15,.L647
.L5148:

; ..\EAS\BSW\Dem\Dem.c	  8852                          }
; ..\EAS\BSW\Dem\Dem.c	  8853                      }
; ..\EAS\BSW\Dem\Dem.c	  8854                  }
; ..\EAS\BSW\Dem\Dem.c	  8855  
; ..\EAS\BSW\Dem\Dem.c	  8856                  if(*(DataBufferPtr + (*FFDataOffset)) == DEM_DATA_INVALID_U8)
	ld.hu	d15,[a13]0
.L5149:
	addsc.a	a15,a14,d15,#0
.L5150:
	ld.bu	d0,[a15]
.L5151:
	mov	d15,#255
.L5152:
	jne	d15,d0,.L652
.L5153:

; ..\EAS\BSW\Dem\Dem.c	  8857                  {
; ..\EAS\BSW\Dem\Dem.c	  8858                      InvalidDataLength += RecDataSize;
	ld.w	d15,[a10]8
.L2686:
	add	d15,d10
.L2687:
	extr.u	d15,d15,#0,#16
.L2688:
	st.w	[a10]8,d15
.L652:

; ..\EAS\BSW\Dem\Dem.c	  8859                  }
; ..\EAS\BSW\Dem\Dem.c	  8860                  (*FFDataOffset) += RecDataSize;
	ld.hu	d15,[a13]0
.L5154:
	add	d15,d10
	st.h	[a13],d15
.L5155:
	ld.w	d15,[a10]4
.L2689:
	add	d15,#1
.L2690:
	extr.u	d15,d15,#0,#8
.L635:
	st.w	[a10]4,d15
.L2691:
	ld.hu	d15,[a10]0
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]16
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_FFRecNumClassTable)
	lea	a15,[a15]@los(Dem_FFRecNumClassTable)
	addsc.a	a15,a15,d15,#3
	ld.bu	d0,[a15]
.L5156:
	ld.w	d15,[a10]4
.L2692:
	jlt.u	d15,d0,.L636

; ..\EAS\BSW\Dem\Dem.c	  8861              }
; ..\EAS\BSW\Dem\Dem.c	  8862          }
; ..\EAS\BSW\Dem\Dem.c	  8863  
; ..\EAS\BSW\Dem\Dem.c	  8864          if(RecordNumber == 0xFFU)
.L645:
.L638:
	mov	d15,#255
.L5157:
	ld.w	d0,[a10]12
.L2693:
	jne	d15,d0,.L653
.L5158:

; ..\EAS\BSW\Dem\Dem.c	  8865          {
; ..\EAS\BSW\Dem\Dem.c	  8866              *SizeOfFreezeFrame = (*FFDataOffset - InvalidDataLength);
	ld.hu	d0,[a13]0
.L2694:
	ld.w	d15,[a10]8
.L2695:
	sub	d0,d15
.L5159:
	st.h	[a12],d0
.L5160:
	j	.L654
.L653:

; ..\EAS\BSW\Dem\Dem.c	  8867          }
; ..\EAS\BSW\Dem\Dem.c	  8868          else if(i == DEM_CFG_DTC_NUM_OF_FFREC(DtcId))
	ld.hu	d15,[a10]0
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]16
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_FFRecNumClassTable)
	lea	a15,[a15]@los(Dem_FFRecNumClassTable)
	addsc.a	a15,a15,d15,#3
	ld.bu	d0,[a15]
.L2696:
	ld.w	d15,[a10]4
.L2697:
	jne	d15,d0,.L655
.L627:
.L624:
.L621:

; ..\EAS\BSW\Dem\Dem.c	  8869          {
; ..\EAS\BSW\Dem\Dem.c	  8870              Result = DEM_GETSIZEBYDTC_WRONG_RECNUM;
	mov	d15,#3
.L623:
.L626:
.L634:
	st.w	[a10]16,d15
.L655:
.L654:
.L633:

; ..\EAS\BSW\Dem\Dem.c	  8871          }
; ..\EAS\BSW\Dem\Dem.c	  8872          else
; ..\EAS\BSW\Dem\Dem.c	  8873          {
; ..\EAS\BSW\Dem\Dem.c	  8874              /*do nothing*/
; ..\EAS\BSW\Dem\Dem.c	  8875          }
; ..\EAS\BSW\Dem\Dem.c	  8876  #else
; ..\EAS\BSW\Dem\Dem.c	  8877          Result = DEM_GETSIZEBYDTC_WRONG_RECNUM;
; ..\EAS\BSW\Dem\Dem.c	  8878  #endif
; ..\EAS\BSW\Dem\Dem.c	  8879      }
; ..\EAS\BSW\Dem\Dem.c	  8880      return Result;
	ld.w	d2,[a10]16
.L2698:

; ..\EAS\BSW\Dem\Dem.c	  8881  }
	ret
.L2092:
	
__DemInternal_GetSizeOfFFData_function_end:
	.size	DemInternal_GetSizeOfFFData,__DemInternal_GetSizeOfFFData_function_end-DemInternal_GetSizeOfFFData
.L1532:
	; End of function
	
	.sdecl	'.text.Dem.DemInternal_GetAllFFData',code,cluster('DemInternal_GetAllFFData')
	.sect	'.text.Dem.DemInternal_GetAllFFData'
	.align	2
	

; ..\EAS\BSW\Dem\Dem.c	  8882  
; ..\EAS\BSW\Dem\Dem.c	  8883  #if(DEM_MAX_FFSIZE_OF_DTC > 0U)
; ..\EAS\BSW\Dem\Dem.c	  8884  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  8885  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8886  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	  8887  *
; ..\EAS\BSW\Dem\Dem.c	  8888  * Description:
; ..\EAS\BSW\Dem\Dem.c	  8889  *
; ..\EAS\BSW\Dem\Dem.c	  8890  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	  8891  *
; ..\EAS\BSW\Dem\Dem.c	  8892  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	  8893  *
; ..\EAS\BSW\Dem\Dem.c	  8894  * Return:
; ..\EAS\BSW\Dem\Dem.c	  8895  *
; ..\EAS\BSW\Dem\Dem.c	  8896  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	  8897  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8898  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  8899  STATIC FUNC(void, DEM_CODE) DemInternal_GetAllFFData
; Function DemInternal_GetAllFFData
.L1027:
DemInternal_GetAllFFData:	.type	func
	mov	d8,d4
.L2699:
	mov.aa	a12,a4
.L2700:

; ..\EAS\BSW\Dem\Dem.c	  8900  (
; ..\EAS\BSW\Dem\Dem.c	  8901      uint32 DtcId,
; ..\EAS\BSW\Dem\Dem.c	  8902      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) DestBuffer
; ..\EAS\BSW\Dem\Dem.c	  8903  )
; ..\EAS\BSW\Dem\Dem.c	  8904  {
; ..\EAS\BSW\Dem\Dem.c	  8905      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	  8906      uint8 j;
; ..\EAS\BSW\Dem\Dem.c	  8907      uint8 k;
; ..\EAS\BSW\Dem\Dem.c	  8908      uint8 RecIdx;
; ..\EAS\BSW\Dem\Dem.c	  8909      uint8 DidIdx;
; ..\EAS\BSW\Dem\Dem.c	  8910      uint8 DataIdx;
; ..\EAS\BSW\Dem\Dem.c	  8911      uint8 DataSize;
; ..\EAS\BSW\Dem\Dem.c	  8912      uint8 *SrcBufferPtr = DEM_PRIMARY_FFDATA_PTR(DEM_DTC_DATAENTRYREF(DtcId));
	mul	d15,d8,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]1868
	mul	d15,d0,#56
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	lea	a13,[a15]2565
.L2701:

; ..\EAS\BSW\Dem\Dem.c	  8913  
; ..\EAS\BSW\Dem\Dem.c	  8914      for(i = 0U; i < DEM_CFG_DTC_NUM_OF_FFREC(DtcId); i++)
	mov	d9,#0
.L2702:
	j	.L657
.L658:

; ..\EAS\BSW\Dem\Dem.c	  8915      {
; ..\EAS\BSW\Dem\Dem.c	  8916          RecIdx = (DEM_CFG_DTC_FFREC_ARRAY(DtcId)[i]);
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d8,#3
	ld.hu	d0,[a15]0
	sha	d0,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]16
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_FFRecNumClassTable)
	lea	a15,[a15]@los(Dem_FFRecNumClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]4
.L5165:
	addsc.a	a15,a15,d9,#0
	ld.bu	d11,[a15]
.L2704:

; ..\EAS\BSW\Dem\Dem.c	  8917  
; ..\EAS\BSW\Dem\Dem.c	  8918          if(*SrcBufferPtr != DEM_DATA_INVALID_U8)
	ld.bu	d0,[a13]
.L5166:
	mov	d15,#255
.L5167:
	jeq	d15,d0,.L659
.L5168:

; ..\EAS\BSW\Dem\Dem.c	  8919          {
; ..\EAS\BSW\Dem\Dem.c	  8920              /*+ RecNum(one byte) + RecordNumberOfIdentifiers(one byte)*/
; ..\EAS\BSW\Dem\Dem.c	  8921              Bsw_MemCpy(DestBuffer, SrcBufferPtr, 2U);
	mov	d4,#2
	mov.aa	a4,a12
.L2705:
	mov.aa	a5,a13
.L2707:
	call	Bsw_MemCpy
.L2706:

; ..\EAS\BSW\Dem\Dem.c	  8922              DestBuffer += 2U;
	add.a	a12,#2
.L5169:

; ..\EAS\BSW\Dem\Dem.c	  8923              SrcBufferPtr += 2U;
	add.a	a13,#2
.L5170:

; ..\EAS\BSW\Dem\Dem.c	  8924  
; ..\EAS\BSW\Dem\Dem.c	  8925              for(j = 0U; j < DEM_CFG_NUMDID_OF_FFRECNUM(RecIdx); j++)
	mov	d10,#0
.L2708:
	j	.L660
.L661:

; ..\EAS\BSW\Dem\Dem.c	  8926              {
; ..\EAS\BSW\Dem\Dem.c	  8927                  /*Did(two bytes)*/
; ..\EAS\BSW\Dem\Dem.c	  8928                  Bsw_MemCpy(DestBuffer, SrcBufferPtr, 2U);
	mov	d4,#2
	mov.aa	a4,a12
.L2710:
	mov.aa	a5,a13
.L2712:
	call	Bsw_MemCpy
.L2711:

; ..\EAS\BSW\Dem\Dem.c	  8929                  DestBuffer += 2U;
	add.a	a12,#2
.L5171:

; ..\EAS\BSW\Dem\Dem.c	  8930                  SrcBufferPtr += 2U;
	add.a	a13,#2
.L5172:

; ..\EAS\BSW\Dem\Dem.c	  8931  
; ..\EAS\BSW\Dem\Dem.c	  8932                  DidIdx = (DEM_CFG_DIDARRAY_OF_FFRECNUM(RecIdx)[j]);
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d11,#3
	ld.a	a15,[a15]4
.L5173:
	addsc.a	a15,a15,d10,#0
	ld.bu	d12,[a15]
.L2713:

; ..\EAS\BSW\Dem\Dem.c	  8933                  for(k = 0U; k < DEM_CFG_NUMDATA_OF_DID(DidIdx); k++)
	mov	d13,#0
.L2714:
	j	.L662
.L663:

; ..\EAS\BSW\Dem\Dem.c	  8934                  {
; ..\EAS\BSW\Dem\Dem.c	  8935                      DataIdx = (DEM_CFG_DATAARRAY_OF_DID(DidIdx)[k]);
	mul	d15,d12,#12
	movh.a	a15,#@his(Dem_DidClassTable)
	lea	a15,[a15]@los(Dem_DidClassTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]4
.L5174:
	addsc.a	a15,a15,d13,#0
	ld.bu	d14,[a15]
.L2716:

; ..\EAS\BSW\Dem\Dem.c	  8936                      if(DEM_CFG_DATA_IN_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d14,#3
	ld.w	d15,[a15]
.L5175:
	jeq	d15,#0,.L664
.L5176:

; ..\EAS\BSW\Dem\Dem.c	  8937                      {
; ..\EAS\BSW\Dem\Dem.c	  8938                          DataSize = DEM_CFG_DATA_IN_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d14,#3
	ld.a	a15,[a15]
	ld.bu	d15,[a15]
.L2717:

; ..\EAS\BSW\Dem\Dem.c	  8939                          Bsw_MemCpy(DestBuffer, SrcBufferPtr, DataSize);
	mov.aa	a4,a12
.L2718:
	mov.aa	a5,a13
.L2720:
	mov	d4,d15
.L2721:
	call	Bsw_MemCpy
.L2719:

; ..\EAS\BSW\Dem\Dem.c	  8940                          DestBuffer += DataSize;
	addsc.a	a12,a12,d15,#0
.L5177:

; ..\EAS\BSW\Dem\Dem.c	  8941                          SrcBufferPtr += DataSize;
	addsc.a	a13,a13,d15,#0
.L664:

; ..\EAS\BSW\Dem\Dem.c	  8942                      }
; ..\EAS\BSW\Dem\Dem.c	  8943  
; ..\EAS\BSW\Dem\Dem.c	  8944                      if(DEM_CFG_DATA_CS_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d14,#3
	ld.w	d15,[a15]4
.L5178:
	jeq	d15,#0,.L665
.L5179:

; ..\EAS\BSW\Dem\Dem.c	  8945                      {
; ..\EAS\BSW\Dem\Dem.c	  8946                          DataSize = DEM_CFG_DATA_CS_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d14,#3
	ld.a	a15,[a15]4
	ld.bu	d15,[a15]
.L2722:

; ..\EAS\BSW\Dem\Dem.c	  8947                          Bsw_MemCpy(DestBuffer, SrcBufferPtr, DataSize);
	mov.aa	a4,a12
.L2723:
	mov.aa	a5,a13
.L2725:
	mov	d4,d15
.L2726:
	call	Bsw_MemCpy
.L2724:

; ..\EAS\BSW\Dem\Dem.c	  8948                          DestBuffer += DataSize;
	addsc.a	a12,a12,d15,#0
.L5180:

; ..\EAS\BSW\Dem\Dem.c	  8949                          SrcBufferPtr += DataSize;
	addsc.a	a13,a13,d15,#0
.L665:
	add	d13,#1
.L2715:
	extr.u	d13,d13,#0,#8
.L662:
	mul	d15,d12,#12
	movh.a	a15,#@his(Dem_DidClassTable)
	lea	a15,[a15]@los(Dem_DidClassTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L5181:
	jlt.u	d13,d15,.L663
.L5182:
	add	d10,#1
.L2709:
	extr.u	d10,d10,#0,#8
.L660:
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d11,#3
	ld.bu	d15,[a15]3
.L5183:
	jlt.u	d10,d15,.L661
.L5184:
	j	.L666
.L659:

; ..\EAS\BSW\Dem\Dem.c	  8950                      }
; ..\EAS\BSW\Dem\Dem.c	  8951                  }
; ..\EAS\BSW\Dem\Dem.c	  8952              }
; ..\EAS\BSW\Dem\Dem.c	  8953          }
; ..\EAS\BSW\Dem\Dem.c	  8954          else
; ..\EAS\BSW\Dem\Dem.c	  8955          {
; ..\EAS\BSW\Dem\Dem.c	  8956              /*+ RecNum(one byte) + RecordNumberOfIdentifiers(one byte)*/
; ..\EAS\BSW\Dem\Dem.c	  8957              SrcBufferPtr += 2U;
	add.a	a13,#2
.L5185:

; ..\EAS\BSW\Dem\Dem.c	  8958  
; ..\EAS\BSW\Dem\Dem.c	  8959              for(j = 0U; j < DEM_CFG_NUMDID_OF_FFRECNUM(RecIdx); j++)
	mov	d0,#0
.L2727:
	j	.L667
.L668:

; ..\EAS\BSW\Dem\Dem.c	  8960              {
; ..\EAS\BSW\Dem\Dem.c	  8961                  /*Did(two bytes)*/
; ..\EAS\BSW\Dem\Dem.c	  8962                  SrcBufferPtr += 2U;
	add.a	a13,#2
.L5186:

; ..\EAS\BSW\Dem\Dem.c	  8963  
; ..\EAS\BSW\Dem\Dem.c	  8964                  DidIdx = (DEM_CFG_DIDARRAY_OF_FFRECNUM(RecIdx)[j]);
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d11,#3
	ld.a	a15,[a15]4
.L5187:
	addsc.a	a15,a15,d0,#0
	ld.bu	d1,[a15]
.L2729:

; ..\EAS\BSW\Dem\Dem.c	  8965                  for(k = 0U; k < DEM_CFG_NUMDATA_OF_DID(DidIdx); k++)
	mov	d2,#0
.L2730:
	j	.L669
.L670:

; ..\EAS\BSW\Dem\Dem.c	  8966                  {
; ..\EAS\BSW\Dem\Dem.c	  8967                      DataIdx = (DEM_CFG_DATAARRAY_OF_DID(DidIdx)[k]);
	mul	d15,d1,#12
	movh.a	a15,#@his(Dem_DidClassTable)
	lea	a15,[a15]@los(Dem_DidClassTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]4
.L5188:
	addsc.a	a15,a15,d2,#0
	ld.bu	d15,[a15]
.L2732:

; ..\EAS\BSW\Dem\Dem.c	  8968                      if(DEM_CFG_DATA_IN_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.w	d3,[a15]
.L5189:
	jeq	d3,#0,.L671
.L5190:

; ..\EAS\BSW\Dem\Dem.c	  8969                      {
; ..\EAS\BSW\Dem\Dem.c	  8970                          DataSize = DEM_CFG_DATA_IN_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]
	ld.bu	d3,[a15]
.L2734:

; ..\EAS\BSW\Dem\Dem.c	  8971                          SrcBufferPtr += DataSize;
	addsc.a	a13,a13,d3,#0
.L671:

; ..\EAS\BSW\Dem\Dem.c	  8972                      }
; ..\EAS\BSW\Dem\Dem.c	  8973  
; ..\EAS\BSW\Dem\Dem.c	  8974                      if(DEM_CFG_DATA_CS_DATA(DataIdx) != NULL_PTR)
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.w	d3,[a15]4
.L5191:
	jeq	d3,#0,.L672
.L5192:

; ..\EAS\BSW\Dem\Dem.c	  8975                      {
; ..\EAS\BSW\Dem\Dem.c	  8976                          DataSize = DEM_CFG_DATA_CS_DATA_SIZE(DataIdx);
	movh.a	a15,#@his(Dem_DataElementClassTable)
	lea	a15,[a15]@los(Dem_DataElementClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]4
	ld.bu	d15,[a15]
.L2733:

; ..\EAS\BSW\Dem\Dem.c	  8977                          SrcBufferPtr += DataSize;
	addsc.a	a13,a13,d15,#0
.L672:
	add	d2,#1
.L2731:
	extr.u	d2,d2,#0,#8
.L669:
	mul	d15,d1,#12
	movh.a	a15,#@his(Dem_DidClassTable)
	lea	a15,[a15]@los(Dem_DidClassTable)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
.L5193:
	jlt.u	d2,d15,.L670
.L5194:
	add	d0,#1
.L2728:
	extr.u	d0,d0,#0,#8
.L667:
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d11,#3
	ld.bu	d15,[a15]3
.L5195:
	jlt.u	d0,d15,.L668
.L666:
	add	d9,#1
.L2703:
	extr.u	d9,d9,#0,#8
.L657:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d8,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]16
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_FFRecNumClassTable)
	lea	a15,[a15]@los(Dem_FFRecNumClassTable)
	addsc.a	a15,a15,d15,#3
	ld.bu	d15,[a15]
.L5196:
	jlt.u	d9,d15,.L658
.L5197:

; ..\EAS\BSW\Dem\Dem.c	  8978                      }
; ..\EAS\BSW\Dem\Dem.c	  8979                  }
; ..\EAS\BSW\Dem\Dem.c	  8980              }
; ..\EAS\BSW\Dem\Dem.c	  8981          }
; ..\EAS\BSW\Dem\Dem.c	  8982      }
; ..\EAS\BSW\Dem\Dem.c	  8983  }
	ret
.L2111:
	
__DemInternal_GetAllFFData_function_end:
	.size	DemInternal_GetAllFFData,__DemInternal_GetAllFFData_function_end-DemInternal_GetAllFFData
.L1537:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmGetTranslationType',code,cluster('Dem_DcmGetTranslationType')
	.sect	'.text.Dem.Dem_DcmGetTranslationType'
	.align	2
	
	.global	Dem_DcmGetTranslationType

; ..\EAS\BSW\Dem\Dem.c	  8984  #endif
; ..\EAS\BSW\Dem\Dem.c	  8985  
; ..\EAS\BSW\Dem\Dem.c	  8986  /*******************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8987  *   Dem_Dcm Api definition
; ..\EAS\BSW\Dem\Dem.c	  8988  *******************************************************************************/
; ..\EAS\BSW\Dem\Dem.c	  8989  
; ..\EAS\BSW\Dem\Dem.c	  8990  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  8991  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  8992  * Function Name: Dem_DcmGetTranslationType
; ..\EAS\BSW\Dem\Dem.c	  8993  *
; ..\EAS\BSW\Dem\Dem.c	  8994  * Description: Gets the supported DTC formats of the ECU. The supported formats are
; ..\EAS\BSW\Dem\Dem.c	  8995  *                  configured via DemTypeOfDTCSupported.
; ..\EAS\BSW\Dem\Dem.c	  8996  *
; ..\EAS\BSW\Dem\Dem.c	  8997  * Inputs: None
; ..\EAS\BSW\Dem\Dem.c	  8998  *
; ..\EAS\BSW\Dem\Dem.c	  8999  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  9000  *
; ..\EAS\BSW\Dem\Dem.c	  9001  * Return: Dem_DTCTranslationFormatType: Returns the configured DTC translation format.
; ..\EAS\BSW\Dem\Dem.c	  9002  *                         A combination of different DTC formats is not possible.
; ..\EAS\BSW\Dem\Dem.c	  9003  *
; ..\EAS\BSW\Dem\Dem.c	  9004  * Limitations: Synchronous
; ..\EAS\BSW\Dem\Dem.c	  9005  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9006  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  9007  FUNC(Dem_DTCTranslationFormatType, DEM_CODE) Dem_DcmGetTranslationType
; Function Dem_DcmGetTranslationType
.L1029:
Dem_DcmGetTranslationType:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  9008  (
; ..\EAS\BSW\Dem\Dem.c	  9009      void
; ..\EAS\BSW\Dem\Dem.c	  9010  )
; ..\EAS\BSW\Dem\Dem.c	  9011  {
; ..\EAS\BSW\Dem\Dem.c	  9012      /*SWS_Dem_00231*/
; ..\EAS\BSW\Dem\Dem.c	  9013      return DEM_CFG_TYPE_OF_DTC_SUPPORTED;
	mov	d2,#1
.L3492:

; ..\EAS\BSW\Dem\Dem.c	  9014  }
	ret
.L1745:
	
__Dem_DcmGetTranslationType_function_end:
	.size	Dem_DcmGetTranslationType,__Dem_DcmGetTranslationType_function_end-Dem_DcmGetTranslationType
.L1247:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmGetDTCStatusAvailabilityMask',code,cluster('Dem_DcmGetDTCStatusAvailabilityMask')
	.sect	'.text.Dem.Dem_DcmGetDTCStatusAvailabilityMask'
	.align	2
	
	.global	Dem_DcmGetDTCStatusAvailabilityMask

; ..\EAS\BSW\Dem\Dem.c	  9015  
; ..\EAS\BSW\Dem\Dem.c	  9016  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  9017  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9018  * Function Name: Dem_DcmGetDTCStatusAvailabilityMask
; ..\EAS\BSW\Dem\Dem.c	  9019  *
; ..\EAS\BSW\Dem\Dem.c	  9020  * Description: Gets the DTC Status availability mask.
; ..\EAS\BSW\Dem\Dem.c	  9021  *
; ..\EAS\BSW\Dem\Dem.c	  9022  * Inputs: None
; ..\EAS\BSW\Dem\Dem.c	  9023  *
; ..\EAS\BSW\Dem\Dem.c	  9024  * Outputs: DTCStatusMask: The value DTCStatusMask indicates the supported DTC status bits
; ..\EAS\BSW\Dem\Dem.c	  9025  *                                     from the Dem. All supported information is indicated by setting the
; ..\EAS\BSW\Dem\Dem.c	  9026  *                                     corresponding status bit to 1. See ISO14229-1.
; ..\EAS\BSW\Dem\Dem.c	  9027  *
; ..\EAS\BSW\Dem\Dem.c	  9028  * Return: Std_ReturnType: E_OK: get of DTC status mask was successful
; ..\EAS\BSW\Dem\Dem.c	  9029  *                                    E_NOT_OK: get of DTC status mask failed
; ..\EAS\BSW\Dem\Dem.c	  9030  *
; ..\EAS\BSW\Dem\Dem.c	  9031  * Limitations: Synchronous
; ..\EAS\BSW\Dem\Dem.c	  9032  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9033  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  9034  FUNC(Std_ReturnType, DEM_CODE) Dem_DcmGetDTCStatusAvailabilityMask
; Function Dem_DcmGetDTCStatusAvailabilityMask
.L1031:
Dem_DcmGetDTCStatusAvailabilityMask:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  9035  (
; ..\EAS\BSW\Dem\Dem.c	  9036      P2VAR(Dem_UdsStatusByteType, AUTOMATIC, DEM_APPL_DATA) DTCStatusMask
; ..\EAS\BSW\Dem\Dem.c	  9037  )
; ..\EAS\BSW\Dem\Dem.c	  9038  {
; ..\EAS\BSW\Dem\Dem.c	  9039      Std_ReturnType Result = E_OK;
	mov	d2,#0
.L2735:

; ..\EAS\BSW\Dem\Dem.c	  9040  
; ..\EAS\BSW\Dem\Dem.c	  9041      if(DTCStatusMask == NULL_PTR)
	jnz.a	a4,.L674
.L3497:

; ..\EAS\BSW\Dem\Dem.c	  9042      {
; ..\EAS\BSW\Dem\Dem.c	  9043          DEM_DET_REPORT_ERROR(DEM_DCMGETDTCSTATUSAVAILABILITYMASK_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  9044          Result = E_NOT_OK;
	mov	d2,#1
.L3498:

; ..\EAS\BSW\Dem\Dem.c	  9045      }
; ..\EAS\BSW\Dem\Dem.c	  9046      else
; ..\EAS\BSW\Dem\Dem.c	  9047      {
; ..\EAS\BSW\Dem\Dem.c	  9048          /*SWS_Dem_00060*/
; ..\EAS\BSW\Dem\Dem.c	  9049          *DTCStatusMask = DEM_CFG_DTCSTATUSAVAILABILITYMASK;
; ..\EAS\BSW\Dem\Dem.c	  9050      }
; ..\EAS\BSW\Dem\Dem.c	  9051      return Result;
; ..\EAS\BSW\Dem\Dem.c	  9052  }
	ret
.L674:
	mov	d15,#255
.L3499:
	st.b	[a4],d15
.L3500:
	ret
.L1746:
	
__Dem_DcmGetDTCStatusAvailabilityMask_function_end:
	.size	Dem_DcmGetDTCStatusAvailabilityMask,__Dem_DcmGetDTCStatusAvailabilityMask_function_end-Dem_DcmGetDTCStatusAvailabilityMask
.L1252:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmGetStatusOfDTC',code,cluster('Dem_DcmGetStatusOfDTC')
	.sect	'.text.Dem.Dem_DcmGetStatusOfDTC'
	.align	2
	
	.global	Dem_DcmGetStatusOfDTC

; ..\EAS\BSW\Dem\Dem.c	  9053  
; ..\EAS\BSW\Dem\Dem.c	  9054  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  9055  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9056  * Function Name: Dem_DcmGetStatusOfDTC
; ..\EAS\BSW\Dem\Dem.c	  9057  *
; ..\EAS\BSW\Dem\Dem.c	  9058  * Description: Gets the status of a DTC. The DTCs of OBD Events Suppression shall be
; ..\EAS\BSW\Dem\Dem.c	  9059  *                  reported as DEM_STATUS_WRONG_DTC.
; ..\EAS\BSW\Dem\Dem.c	  9060  *
; ..\EAS\BSW\Dem\Dem.c	  9061  * Inputs: DTC: Diagnostic Trouble Code in UDS format.
; ..\EAS\BSW\Dem\Dem.c	  9062  *            DTCOrigin: If the Dem supports more than one event memory this parameter is used
; ..\EAS\BSW\Dem\Dem.c	  9063  *                           to select the source memory the DTCs shall be read from.
; ..\EAS\BSW\Dem\Dem.c	  9064  *
; ..\EAS\BSW\Dem\Dem.c	  9065  * Outputs: DTCStatus: This parameter receives the status information of the requested DTC.
; ..\EAS\BSW\Dem\Dem.c	  9066  *                              If the return value of the function call is other than DEM_STATUS_OK
; ..\EAS\BSW\Dem\Dem.c	  9067  *                              this parameter does not contain valid data. 0x00...0xFF match
; ..\EAS\BSW\Dem\Dem.c	  9068  *                              DTCStatusMask as defined in ISO14229-1
; ..\EAS\BSW\Dem\Dem.c	  9069  *
; ..\EAS\BSW\Dem\Dem.c	  9070  * Return: Dem_ReturnGetStatusOfDTCType: Status of the operation
; ..\EAS\BSW\Dem\Dem.c	  9071  *
; ..\EAS\BSW\Dem\Dem.c	  9072  * Limitations: Synchronous
; ..\EAS\BSW\Dem\Dem.c	  9073  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9074  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  9075  FUNC(Dem_ReturnGetStatusOfDTCType, DEM_CODE) Dem_DcmGetStatusOfDTC
; Function Dem_DcmGetStatusOfDTC
.L1033:
Dem_DcmGetStatusOfDTC:	.type	func
	sub.a	a10,#8
.L2736:
	mov	d15,d5
.L2739:
	mov.aa	a15,a4
.L2741:

; ..\EAS\BSW\Dem\Dem.c	  9076  (
; ..\EAS\BSW\Dem\Dem.c	  9077      uint32 DTC,
; ..\EAS\BSW\Dem\Dem.c	  9078      Dem_DTCOriginType DTCOrigin,
; ..\EAS\BSW\Dem\Dem.c	  9079      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) DTCStatus
; ..\EAS\BSW\Dem\Dem.c	  9080  )
; ..\EAS\BSW\Dem\Dem.c	  9081  {
; ..\EAS\BSW\Dem\Dem.c	  9082      Dem_ReturnGetStatusOfDTCType Result = DEM_STATUS_OK;
	mov	d8,#0
.L2742:

; ..\EAS\BSW\Dem\Dem.c	  9083      uint16 DtcId;
; ..\EAS\BSW\Dem\Dem.c	  9084  #if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)
; ..\EAS\BSW\Dem\Dem.c	  9085      uint8 Index;
; ..\EAS\BSW\Dem\Dem.c	  9086      Dem_EventIdType EventId;
; ..\EAS\BSW\Dem\Dem.c	  9087  #endif
; ..\EAS\BSW\Dem\Dem.c	  9088  
; ..\EAS\BSW\Dem\Dem.c	  9089      if(Dem_State != DEM_NORMAL)
	movh.a	a2,#@his(Dem_State)
	ld.bu	d0,[a2]@los(Dem_State)
.L3505:
	jeq	d0,#2,.L677
.L3506:

; ..\EAS\BSW\Dem\Dem.c	  9090      {
; ..\EAS\BSW\Dem\Dem.c	  9091          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  9092          DEM_DET_REPORT_ERROR(DEM_DCMGETSTATUSOFDTC_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  9093          Result = DEM_STATUS_FAILED;
	mov	d8,#3
.L3507:
	j	.L678
.L677:

; ..\EAS\BSW\Dem\Dem.c	  9094      }
; ..\EAS\BSW\Dem\Dem.c	  9095      else if((DTC == (Dem_UdsDTCType)0) || (DTC > DEM_DTC_GROUP_ALL))
	jeq	d4,#0,.L679
.L3508:
	mov.u	d0,#65535
	addih	d0,d0,#255
.L3509:
	jlt.u	d0,d4,.L680
.L3510:

; ..\EAS\BSW\Dem\Dem.c	  9096      {
; ..\EAS\BSW\Dem\Dem.c	  9097          DEM_DET_REPORT_ERROR(DEM_DCMGETSTATUSOFDTC_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  9098          Result = DEM_STATUS_WRONG_DTC;
; ..\EAS\BSW\Dem\Dem.c	  9099      }
; ..\EAS\BSW\Dem\Dem.c	  9100      else if((DTCOrigin != DEM_DTC_ORIGIN_PRIMARY_MEMORY) \ 
	jeq	d15,#1,.L681
.L3511:

; ..\EAS\BSW\Dem\Dem.c	  9101          && (DTCOrigin != DEM_DTC_ORIGIN_PERMANENT_MEMORY))
	jne	d15,#3,.L682
.L681:

; ..\EAS\BSW\Dem\Dem.c	  9102      {
; ..\EAS\BSW\Dem\Dem.c	  9103          DEM_DET_REPORT_ERROR(DEM_DCMGETSTATUSOFDTC_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	  9104          /*SWS_Dem_00171*/
; ..\EAS\BSW\Dem\Dem.c	  9105          Result = DEM_STATUS_WRONG_DTCORIGIN;
; ..\EAS\BSW\Dem\Dem.c	  9106      }
; ..\EAS\BSW\Dem\Dem.c	  9107      else if(E_OK != DemInternal_CheckDtcValid(DTC, &DtcId))
	mov.aa	a4,a10
.L2738:
	call	DemInternal_CheckDtcValid
.L2737:
	jeq	d2,#0,.L683
.L680:
.L679:

; ..\EAS\BSW\Dem\Dem.c	  9108      {
; ..\EAS\BSW\Dem\Dem.c	  9109          /*SWS_Dem_00172*/
; ..\EAS\BSW\Dem\Dem.c	  9110          Result = DEM_STATUS_WRONG_DTC;
	mov	d8,#1
.L3512:
	j	.L684
.L683:

; ..\EAS\BSW\Dem\Dem.c	  9111      }
; ..\EAS\BSW\Dem\Dem.c	  9112      else
; ..\EAS\BSW\Dem\Dem.c	  9113      {
; ..\EAS\BSW\Dem\Dem.c	  9114          /*SWS_Dem_00059*/
; ..\EAS\BSW\Dem\Dem.c	  9115          if(DTCOrigin == DEM_DTC_ORIGIN_PRIMARY_MEMORY)
	jne	d15,#1,.L685
.L3513:

; ..\EAS\BSW\Dem\Dem.c	  9116          {
; ..\EAS\BSW\Dem\Dem.c	  9117              *DTCStatus = ((DEM_DTC_STATUS(DtcId)) & (DEM_CFG_DTCSTATUSAVAILABILITYMASK));
	ld.hu	d15,[a10]0
.L2740:
	mul	d15,d15,#6
	movh.a	a2,#@his(Dem_StorageMem)
	lea	a2,[a2]@los(Dem_StorageMem)
	addsc.a	a2,a2,d15,#0
	ld.bu	d15,[a2]1864
.L3514:
	st.b	[a15],d15
.L3515:
	j	.L686
.L685:
.L682:

; ..\EAS\BSW\Dem\Dem.c	  9118          }
; ..\EAS\BSW\Dem\Dem.c	  9119  #if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)
; ..\EAS\BSW\Dem\Dem.c	  9120          else if(DTCOrigin == DEM_DTC_ORIGIN_PERMANENT_MEMORY)
; ..\EAS\BSW\Dem\Dem.c	  9121          {
; ..\EAS\BSW\Dem\Dem.c	  9122              for(Index = 0; Index < DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT; Index++)
; ..\EAS\BSW\Dem\Dem.c	  9123              {
; ..\EAS\BSW\Dem\Dem.c	  9124                  EventId = DEM_PERMANENT_DATAENTRY_EVENTID(Index);
; ..\EAS\BSW\Dem\Dem.c	  9125  
; ..\EAS\BSW\Dem\Dem.c	  9126                  if((EventId != DEM_EVENT_ID_INVALID) \ 
; ..\EAS\BSW\Dem\Dem.c	  9127                      && (DtcId == DEM_CFG_EVENT_DTCREF(EventId)))
; ..\EAS\BSW\Dem\Dem.c	  9128                  {
; ..\EAS\BSW\Dem\Dem.c	  9129                      *DTCStatus = ((DEM_DTC_STATUS(DtcId)) & (DEM_CFG_DTCSTATUSAVAILABILITYMASK));
; ..\EAS\BSW\Dem\Dem.c	  9130                      break;
; ..\EAS\BSW\Dem\Dem.c	  9131                  }
; ..\EAS\BSW\Dem\Dem.c	  9132              }
; ..\EAS\BSW\Dem\Dem.c	  9133  
; ..\EAS\BSW\Dem\Dem.c	  9134              if(Index == DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT)
; ..\EAS\BSW\Dem\Dem.c	  9135              {
; ..\EAS\BSW\Dem\Dem.c	  9136                  Result = DEM_STATUS_FAILED;
; ..\EAS\BSW\Dem\Dem.c	  9137              }
; ..\EAS\BSW\Dem\Dem.c	  9138          }
; ..\EAS\BSW\Dem\Dem.c	  9139  #endif
; ..\EAS\BSW\Dem\Dem.c	  9140          else
; ..\EAS\BSW\Dem\Dem.c	  9141          {
; ..\EAS\BSW\Dem\Dem.c	  9142              Result = DEM_STATUS_WRONG_DTCORIGIN;
	mov	d8,#2
.L686:
.L684:
.L678:

; ..\EAS\BSW\Dem\Dem.c	  9143          }
; ..\EAS\BSW\Dem\Dem.c	  9144      }
; ..\EAS\BSW\Dem\Dem.c	  9145      return Result;
	mov	d2,d8
.L2743:

; ..\EAS\BSW\Dem\Dem.c	  9146  }
	ret
.L1749:
	
__Dem_DcmGetStatusOfDTC_function_end:
	.size	Dem_DcmGetStatusOfDTC,__Dem_DcmGetStatusOfDTC_function_end-Dem_DcmGetStatusOfDTC
.L1257:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmGetSeverityOfDTC',code,cluster('Dem_DcmGetSeverityOfDTC')
	.sect	'.text.Dem.Dem_DcmGetSeverityOfDTC'
	.align	2
	
	.global	Dem_DcmGetSeverityOfDTC

; ..\EAS\BSW\Dem\Dem.c	  9147  
; ..\EAS\BSW\Dem\Dem.c	  9148  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  9149  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9150  * Function Name: Dem_DcmGetSeverityOfDTC
; ..\EAS\BSW\Dem\Dem.c	  9151  *
; ..\EAS\BSW\Dem\Dem.c	  9152  * Description: Gets the severity of the requested DTC.
; ..\EAS\BSW\Dem\Dem.c	  9153  *
; ..\EAS\BSW\Dem\Dem.c	  9154  * Inputs: DTC: Diagnostic Trouble Code in UDS format.
; ..\EAS\BSW\Dem\Dem.c	  9155  *
; ..\EAS\BSW\Dem\Dem.c	  9156  * Outputs: DTCSeverity: This parameter contains the DTCSeverity according to ISO 14229-1.
; ..\EAS\BSW\Dem\Dem.c	  9157  *
; ..\EAS\BSW\Dem\Dem.c	  9158  * Return: Dem_ReturnGetSeverityOfDTCType: Status of the operation
; ..\EAS\BSW\Dem\Dem.c	  9159  *
; ..\EAS\BSW\Dem\Dem.c	  9160  * Limitations: Synchronous
; ..\EAS\BSW\Dem\Dem.c	  9161  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9162  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  9163  FUNC(Dem_ReturnGetSeverityOfDTCType, DEM_CODE) Dem_DcmGetSeverityOfDTC
; Function Dem_DcmGetSeverityOfDTC
.L1035:
Dem_DcmGetSeverityOfDTC:	.type	func
	sub.a	a10,#8
.L2744:
	mov.aa	a12,a4
.L2747:

; ..\EAS\BSW\Dem\Dem.c	  9164  (
; ..\EAS\BSW\Dem\Dem.c	  9165      uint32 DTC,
; ..\EAS\BSW\Dem\Dem.c	  9166      P2VAR(Dem_DTCSeverityType, AUTOMATIC, DEM_APPL_DATA) DTCSeverity
; ..\EAS\BSW\Dem\Dem.c	  9167  )
; ..\EAS\BSW\Dem\Dem.c	  9168  {
; ..\EAS\BSW\Dem\Dem.c	  9169      Dem_ReturnGetSeverityOfDTCType Result = DEM_GET_SEVERITYOFDTC_OK;
	mov	d8,#0
.L2748:

; ..\EAS\BSW\Dem\Dem.c	  9170      uint16 DtcId;
; ..\EAS\BSW\Dem\Dem.c	  9171  
; ..\EAS\BSW\Dem\Dem.c	  9172      if(DTCSeverity == NULL_PTR)
	jnz.a	a12,.L688
.L3520:

; ..\EAS\BSW\Dem\Dem.c	  9173      {
; ..\EAS\BSW\Dem\Dem.c	  9174          DEM_DET_REPORT_ERROR(DEM_DCMGETSEVERITYOFDTC_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  9175          Result = DEM_GET_SEVERITYOFDTC_NOSEVERITY;
	mov	d8,#2
.L3521:
	j	.L689
.L688:

; ..\EAS\BSW\Dem\Dem.c	  9176      }
; ..\EAS\BSW\Dem\Dem.c	  9177      else if(E_OK != DemInternal_CheckDtcValid(DTC, &DtcId))
	mov.aa	a4,a10
.L2746:
	call	DemInternal_CheckDtcValid
.L2745:
	jeq	d2,#0,.L690
.L3522:

; ..\EAS\BSW\Dem\Dem.c	  9178      {
; ..\EAS\BSW\Dem\Dem.c	  9179          /*SWS_Dem_00172*/
; ..\EAS\BSW\Dem\Dem.c	  9180          Result = DEM_GET_SEVERITYOFDTC_WRONG_DTC;
	mov	d8,#1
.L3523:
	j	.L691
.L690:

; ..\EAS\BSW\Dem\Dem.c	  9181      }
; ..\EAS\BSW\Dem\Dem.c	  9182      else
; ..\EAS\BSW\Dem\Dem.c	  9183      {
; ..\EAS\BSW\Dem\Dem.c	  9184          *DTCSeverity = DEM_CFG_DTC_SEVERITY(DtcId);
	ld.hu	d15,[a10]0
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.bu	d15,[a15]3
.L3524:
	st.b	[a12],d15
.L691:
.L689:

; ..\EAS\BSW\Dem\Dem.c	  9185      }
; ..\EAS\BSW\Dem\Dem.c	  9186      return Result;
	mov	d2,d8
.L2749:

; ..\EAS\BSW\Dem\Dem.c	  9187  }
	ret
.L1755:
	
__Dem_DcmGetSeverityOfDTC_function_end:
	.size	Dem_DcmGetSeverityOfDTC,__Dem_DcmGetSeverityOfDTC_function_end-Dem_DcmGetSeverityOfDTC
.L1262:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmGetFunctionalUnitOfDTC',code,cluster('Dem_DcmGetFunctionalUnitOfDTC')
	.sect	'.text.Dem.Dem_DcmGetFunctionalUnitOfDTC'
	.align	2
	
	.global	Dem_DcmGetFunctionalUnitOfDTC

; ..\EAS\BSW\Dem\Dem.c	  9188  
; ..\EAS\BSW\Dem\Dem.c	  9189  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  9190  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9191  * Function Name: Dem_DcmGetFunctionalUnitOfDTC
; ..\EAS\BSW\Dem\Dem.c	  9192  *
; ..\EAS\BSW\Dem\Dem.c	  9193  * Description: Gets the functional unit of the requested DTC.
; ..\EAS\BSW\Dem\Dem.c	  9194  *
; ..\EAS\BSW\Dem\Dem.c	  9195  * Inputs: DTC: Diagnostic Trouble Code in UDS format.
; ..\EAS\BSW\Dem\Dem.c	  9196  *
; ..\EAS\BSW\Dem\Dem.c	  9197  * Outputs: DTCFunctionalUnit: Functional unit value of this DTC
; ..\EAS\BSW\Dem\Dem.c	  9198  *
; ..\EAS\BSW\Dem\Dem.c	  9199  * Return: Dem_ReturnGetFunctionalUnitOfDTCType: Status of the operation
; ..\EAS\BSW\Dem\Dem.c	  9200  *
; ..\EAS\BSW\Dem\Dem.c	  9201  * Limitations: Synchronous
; ..\EAS\BSW\Dem\Dem.c	  9202  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9203  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  9204  FUNC(Dem_ReturnGetFunctionalUnitOfDTCType, DEM_CODE) Dem_DcmGetFunctionalUnitOfDTC
; Function Dem_DcmGetFunctionalUnitOfDTC
.L1037:
Dem_DcmGetFunctionalUnitOfDTC:	.type	func
	sub.a	a10,#8
.L2750:
	mov.aa	a12,a4
.L2753:

; ..\EAS\BSW\Dem\Dem.c	  9205  (
; ..\EAS\BSW\Dem\Dem.c	  9206      uint32 DTC,
; ..\EAS\BSW\Dem\Dem.c	  9207      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) DTCFunctionalUnit
; ..\EAS\BSW\Dem\Dem.c	  9208  )
; ..\EAS\BSW\Dem\Dem.c	  9209  {
; ..\EAS\BSW\Dem\Dem.c	  9210      Dem_ReturnGetFunctionalUnitOfDTCType Result = DEM_GET_FUNCTIONALUNITOFDTC_OK;
	mov	d8,#0
.L2754:

; ..\EAS\BSW\Dem\Dem.c	  9211      uint16 DtcId;
; ..\EAS\BSW\Dem\Dem.c	  9212  
; ..\EAS\BSW\Dem\Dem.c	  9213      if(DTCFunctionalUnit == NULL_PTR)
	jz.a	a12,.L693
.L3529:

; ..\EAS\BSW\Dem\Dem.c	  9214      {
; ..\EAS\BSW\Dem\Dem.c	  9215          DEM_DET_REPORT_ERROR(DEM_DCMGETFUNCTIONALUNITOFDTC_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  9216          /*SWS_Dem_00172*/
; ..\EAS\BSW\Dem\Dem.c	  9217          Result = DEM_GET_FUNCTIONALUNITOFDTC_WRONG_DTC;
; ..\EAS\BSW\Dem\Dem.c	  9218      }
; ..\EAS\BSW\Dem\Dem.c	  9219      else if(E_OK != DemInternal_CheckDtcValid(DTC, &DtcId))
	mov.aa	a4,a10
.L2752:
	call	DemInternal_CheckDtcValid
.L2751:
	jeq	d2,#0,.L694
.L693:

; ..\EAS\BSW\Dem\Dem.c	  9220      {
; ..\EAS\BSW\Dem\Dem.c	  9221          /*SWS_Dem_00172*/
; ..\EAS\BSW\Dem\Dem.c	  9222          Result = DEM_GET_FUNCTIONALUNITOFDTC_WRONG_DTC;
	mov	d8,#1
.L3530:
	j	.L695
.L694:

; ..\EAS\BSW\Dem\Dem.c	  9223      }
; ..\EAS\BSW\Dem\Dem.c	  9224      else
; ..\EAS\BSW\Dem\Dem.c	  9225      {
; ..\EAS\BSW\Dem\Dem.c	  9226          *DTCFunctionalUnit = DEM_CFG_DTC_FNCUNIT(DtcId);
	ld.hu	d15,[a10]0
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.bu	d15,[a15]2
.L3531:
	st.b	[a12],d15
.L695:

; ..\EAS\BSW\Dem\Dem.c	  9227      }
; ..\EAS\BSW\Dem\Dem.c	  9228      return Result;
	mov	d2,d8
.L2755:

; ..\EAS\BSW\Dem\Dem.c	  9229  }
	ret
.L1761:
	
__Dem_DcmGetFunctionalUnitOfDTC_function_end:
	.size	Dem_DcmGetFunctionalUnitOfDTC,__Dem_DcmGetFunctionalUnitOfDTC_function_end-Dem_DcmGetFunctionalUnitOfDTC
.L1267:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmSetDTCFilter',code,cluster('Dem_DcmSetDTCFilter')
	.sect	'.text.Dem.Dem_DcmSetDTCFilter'
	.align	2
	
	.global	Dem_DcmSetDTCFilter

; ..\EAS\BSW\Dem\Dem.c	  9230  
; ..\EAS\BSW\Dem\Dem.c	  9231  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  9232  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9233  * Function Name: Dem_DcmSetDTCFilter
; ..\EAS\BSW\Dem\Dem.c	  9234  *
; ..\EAS\BSW\Dem\Dem.c	  9235  * Description: Sets the DTC Filter.
; ..\EAS\BSW\Dem\Dem.c	  9236  *
; ..\EAS\BSW\Dem\Dem.c	  9237  * Inputs: DTCStatusMask: Status-byte mask for DTC status-byte filtering
; ..\EAS\BSW\Dem\Dem.c	  9238  *         DTCKind: Defines the functional group of DTCs to be reported
; ..\EAS\BSW\Dem\Dem.c	  9239  *         DTCFormat: Defines the output-format of the requested DTC values for the sub-sequent API calls.
; ..\EAS\BSW\Dem\Dem.c	  9240  *         DTCOrigin: If the Dem supports more than one event memory this parameter is used
; ..\EAS\BSW\Dem\Dem.c	  9241  *                    to select the source memory the DTCs shall be read from.
; ..\EAS\BSW\Dem\Dem.c	  9242  *         FilterWithSeverity: This flag defines whether severity information shall be used for filtering.
; ..\EAS\BSW\Dem\Dem.c	  9243  *         DTCSeverityMask: This parameter contains the DTCSeverityMask according to ISO14229-1
; ..\EAS\BSW\Dem\Dem.c	  9244  *         FilterForFaultDetectionCounter: This flag defines whether the fault detection counter
; ..\EAS\BSW\Dem\Dem.c	  9245  *                                         information shall be used for filtering.
; ..\EAS\BSW\Dem\Dem.c	  9246  *
; ..\EAS\BSW\Dem\Dem.c	  9247  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  9248  *
; ..\EAS\BSW\Dem\Dem.c	  9249  * Return: Dem_ReturnSetFilterType: Status of the operation to (re-)set a DTC filter.
; ..\EAS\BSW\Dem\Dem.c	  9250  *
; ..\EAS\BSW\Dem\Dem.c	  9251  * Limitations: Synchronous & Non Reentrant
; ..\EAS\BSW\Dem\Dem.c	  9252  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9253  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  9254  FUNC(Dem_ReturnSetFilterType, DEM_CODE) Dem_DcmSetDTCFilter
; Function Dem_DcmSetDTCFilter
.L1039:
Dem_DcmSetDTCFilter:	.type	func
	mov	d15,d6
.L2757:
	ld.bu	d3,[a10]
.L2758:
	ld.bu	d6,[a10]4
.L2756:
	ld.bu	d0,[a10]8
.L2759:

; ..\EAS\BSW\Dem\Dem.c	  9255  (
; ..\EAS\BSW\Dem\Dem.c	  9256      Dem_UdsStatusByteType DTCStatusMask,
; ..\EAS\BSW\Dem\Dem.c	  9257      Dem_DTCKindType DTCKind,
; ..\EAS\BSW\Dem\Dem.c	  9258      Dem_DTCFormatType DTCFormat,
; ..\EAS\BSW\Dem\Dem.c	  9259      Dem_DTCOriginType DTCOrigin,
; ..\EAS\BSW\Dem\Dem.c	  9260      boolean FilterWithSeverity,
; ..\EAS\BSW\Dem\Dem.c	  9261      Dem_DTCSeverityType DTCSeverityMask,
; ..\EAS\BSW\Dem\Dem.c	  9262      boolean FilterForFaultDetectionCounter
; ..\EAS\BSW\Dem\Dem.c	  9263  )
; ..\EAS\BSW\Dem\Dem.c	  9264  {
; ..\EAS\BSW\Dem\Dem.c	  9265      Dem_ReturnSetFilterType Result = DEM_WRONG_FILTER;
	mov	d2,#1
.L2761:

; ..\EAS\BSW\Dem\Dem.c	  9266      uint16 DtcId;
; ..\EAS\BSW\Dem\Dem.c	  9267      uint8 StatusFilterMask;
; ..\EAS\BSW\Dem\Dem.c	  9268  #if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)
; ..\EAS\BSW\Dem\Dem.c	  9269      uint8 Index;
; ..\EAS\BSW\Dem\Dem.c	  9270  #endif
; ..\EAS\BSW\Dem\Dem.c	  9271  
; ..\EAS\BSW\Dem\Dem.c	  9272      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d1,[a15]@los(Dem_State)
.L3536:
	jne	d1,#2,.L697
.L3537:

; ..\EAS\BSW\Dem\Dem.c	  9273      {
; ..\EAS\BSW\Dem\Dem.c	  9274          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  9275          DEM_DET_REPORT_ERROR(DEM_DCMSETDTCFILTER_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  9276      }
; ..\EAS\BSW\Dem\Dem.c	  9277      else if((DTCKind != DEM_DTC_KIND_ALL_DTCS) \ 
	jeq	d5,#1,.L698
.L3538:

; ..\EAS\BSW\Dem\Dem.c	  9278          && (DTCKind != DEM_DTC_KIND_EMISSION_REL_DTCS))
	jne	d5,#2,.L699
.L698:

; ..\EAS\BSW\Dem\Dem.c	  9279      {
; ..\EAS\BSW\Dem\Dem.c	  9280          /*SWS_Dem_01065*/
; ..\EAS\BSW\Dem\Dem.c	  9281          DEM_DET_REPORT_ERROR(DEM_DCMSETDTCFILTER_APIID, DEM_E_WRONG_CONFIGURATION);
; ..\EAS\BSW\Dem\Dem.c	  9282      }
; ..\EAS\BSW\Dem\Dem.c	  9283      else if((DTCFormat != DEM_DTC_FORMAT_UDS) \ 
	jeq	d15,#1,.L700
.L3539:

; ..\EAS\BSW\Dem\Dem.c	  9284          && (DTCFormat != DEM_DTC_FORMAT_OBD) \ 
	jeq	d15,#0,.L701
.L3540:

; ..\EAS\BSW\Dem\Dem.c	  9285          && (DTCFormat != DEM_DTC_FORMAT_J1939))
	jne	d15,#2,.L702
.L701:
.L700:

; ..\EAS\BSW\Dem\Dem.c	  9286      {
; ..\EAS\BSW\Dem\Dem.c	  9287          /*SWS_Dem_01066*/
; ..\EAS\BSW\Dem\Dem.c	  9288          DEM_DET_REPORT_ERROR(DEM_DCMSETDTCFILTER_APIID, DEM_E_WRONG_CONFIGURATION);
; ..\EAS\BSW\Dem\Dem.c	  9289      }
; ..\EAS\BSW\Dem\Dem.c	  9290  
; ..\EAS\BSW\Dem\Dem.c	  9291      else if((DTCOrigin != DEM_DTC_ORIGIN_PRIMARY_MEMORY) \ 
	jeq	d7,#1,.L703
.L3541:

; ..\EAS\BSW\Dem\Dem.c	  9292          && (DTCOrigin != DEM_DTC_ORIGIN_PERMANENT_MEMORY))
	jne	d7,#3,.L704
.L703:

; ..\EAS\BSW\Dem\Dem.c	  9293      {
; ..\EAS\BSW\Dem\Dem.c	  9294          /*SWS_Dem_01067*/
; ..\EAS\BSW\Dem\Dem.c	  9295          DEM_DET_REPORT_ERROR(DEM_DCMSETDTCFILTER_APIID, DEM_E_WRONG_CONFIGURATION);
; ..\EAS\BSW\Dem\Dem.c	  9296      }
; ..\EAS\BSW\Dem\Dem.c	  9297      else
; ..\EAS\BSW\Dem\Dem.c	  9298      {
; ..\EAS\BSW\Dem\Dem.c	  9299          /*SWS_Dem_00057*//*SWS_Dem_00649*/
; ..\EAS\BSW\Dem\Dem.c	  9300          Dem_DcmFilterInfo.DTCStatusMask = DTCStatusMask;
	movh.a	a15,#@his(Dem_DcmFilterInfo+1)
.L3542:
	st.b	[a15]@los(Dem_DcmFilterInfo+1),d4
.L3543:

; ..\EAS\BSW\Dem\Dem.c	  9301          Dem_DcmFilterInfo.DTCKind = DTCKind;
	movh.a	a15,#@his(Dem_DcmFilterInfo+2)
.L3544:
	st.b	[a15]@los(Dem_DcmFilterInfo+2),d5
.L3545:

; ..\EAS\BSW\Dem\Dem.c	  9302          Dem_DcmFilterInfo.DTCFormat = DTCFormat;
	movh.a	a15,#@his(Dem_DcmFilterInfo+3)
.L3546:
	st.b	[a15]@los(Dem_DcmFilterInfo+3),d15
.L3547:

; ..\EAS\BSW\Dem\Dem.c	  9303          Dem_DcmFilterInfo.DTCOrigin = DTCOrigin;
	movh.a	a15,#@his(Dem_DcmFilterInfo+4)
.L3548:
	st.b	[a15]@los(Dem_DcmFilterInfo+4),d7
.L3549:

; ..\EAS\BSW\Dem\Dem.c	  9304          Dem_DcmFilterInfo.FilterWithSeverity = FilterWithSeverity;
	movh.a	a15,#@his(Dem_DcmFilterInfo+5)
.L3550:
	st.b	[a15]@los(Dem_DcmFilterInfo+5),d3
.L3551:

; ..\EAS\BSW\Dem\Dem.c	  9305          Dem_DcmFilterInfo.DTCSeverityMask = DTCSeverityMask;
	movh.a	a15,#@his(Dem_DcmFilterInfo+7)
.L3552:
	st.b	[a15]@los(Dem_DcmFilterInfo+7),d6
.L3553:

; ..\EAS\BSW\Dem\Dem.c	  9306          /*If fault detection counter information is filter criteria, only those DTCs with a
; ..\EAS\BSW\Dem\Dem.c	  9307          fault detection counter value between 1 and 0x7E shall be reported.*/
; ..\EAS\BSW\Dem\Dem.c	  9308          /*But for geely, FDC value between -128 and 127 shall be reported.*/
; ..\EAS\BSW\Dem\Dem.c	  9309          Dem_DcmFilterInfo.FilterForFDC = FilterForFaultDetectionCounter;
	movh.a	a15,#@his(Dem_DcmFilterInfo+6)
.L3554:
	st.b	[a15]@los(Dem_DcmFilterInfo+6),d0
.L3555:

; ..\EAS\BSW\Dem\Dem.c	  9310          Dem_DcmFilterInfo.NumberOfFilteredDTC = 0;
	movh.a	a15,#@his(Dem_DcmFilterInfo+240)
.L3556:
	mov	d0,#0
.L2760:
	st.h	[a15]@los(Dem_DcmFilterInfo+240),d0
.L3557:

; ..\EAS\BSW\Dem\Dem.c	  9311          Dem_DcmFilterInfo.NextFilteredDTCIndex = 0;
	movh.a	a15,#@his(Dem_DcmFilterInfo+242)
.L3558:
	st.h	[a15]@los(Dem_DcmFilterInfo+242),d0
.L3559:

; ..\EAS\BSW\Dem\Dem.c	  9312          /*SWS_Dem_00657*//*SWS_Dem_01058*/
; ..\EAS\BSW\Dem\Dem.c	  9313          StatusFilterMask = (DTCStatusMask & DEM_CFG_DTCSTATUSAVAILABILITYMASK);
; ..\EAS\BSW\Dem\Dem.c	  9314  
; ..\EAS\BSW\Dem\Dem.c	  9315          if(DTCOrigin == DEM_DTC_ORIGIN_PRIMARY_MEMORY)
	jne	d7,#1,.L705
.L3560:

; ..\EAS\BSW\Dem\Dem.c	  9316          {
; ..\EAS\BSW\Dem\Dem.c	  9317              for(DtcId = 0; DtcId < DEM_NUM_OF_DTC; DtcId++)
; ..\EAS\BSW\Dem\Dem.c	  9318              {
; ..\EAS\BSW\Dem\Dem.c	  9319                  if(((FilterWithSeverity == FALSE) || ((DEM_CFG_DTC_SEVERITY(DtcId) & DTCSeverityMask) != 0)) \ 
; ..\EAS\BSW\Dem\Dem.c	  9320                      && ((DTCStatusMask == 0) || ((DEM_DTC_STATUS(DtcId) & StatusFilterMask) != 0)))
; ..\EAS\BSW\Dem\Dem.c	  9321                  {
; ..\EAS\BSW\Dem\Dem.c	  9322  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  9323                      if(((DTCKind == DEM_DTC_KIND_ALL_DTCS) && (DEM_CFG_DTC_VALUE(DtcId) != 0)) \ 
; ..\EAS\BSW\Dem\Dem.c	  9324                          || ((DTCKind == DEM_DTC_KIND_EMISSION_REL_DTCS) && DEM_DTC_IS_OBD(DtcId)))
; ..\EAS\BSW\Dem\Dem.c	  9325  #else
; ..\EAS\BSW\Dem\Dem.c	  9326                      if((DTCKind == DEM_DTC_KIND_ALL_DTCS) && (DEM_CFG_DTC_VALUE(DtcId) != 0))
; ..\EAS\BSW\Dem\Dem.c	  9327  #endif
; ..\EAS\BSW\Dem\Dem.c	  9328                      {
; ..\EAS\BSW\Dem\Dem.c	  9329                          /*DTCStatusMask 0x00: Autosar-specific value to deactivate the status-byte filtering
; ..\EAS\BSW\Dem\Dem.c	  9330                          (different meaning than in ISO 14229-1) to report all supported DTCs (used for
; ..\EAS\BSW\Dem\Dem.c	  9331                          service 0x19 subfunctions 0x0A/0x15)*/
; ..\EAS\BSW\Dem\Dem.c	  9332                          Dem_DcmFilterInfo.FilteredDTCIndexTable[Dem_DcmFilterInfo.NumberOfFilteredDTC] = DtcId;
	movh.a	a2,#@his(Dem_DcmFilterInfo+240)
.L3561:
	mov	d1,#116
.L3562:
	j	.L706
.L707:
	jeq	d3,#0,.L708
.L3563:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d0,#3
	ld.bu	d15,[a15]3
.L3564:
	and	d2,d15,d6
.L3565:
	jeq	d2,#0,.L709
.L708:
	jeq	d4,#0,.L710
.L3566:
	mul	d15,d0,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d2,[a15]1864
.L3567:
	and	d2,d4
.L3568:
	jeq	d2,#0,.L711
.L710:
	jne	d5,#1,.L712
.L3569:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d0,#3
	ld.w	d15,[a15]4
.L3570:
	jeq	d15,#0,.L713
.L3571:
	ld.hu	d15,[a2]@los(Dem_DcmFilterInfo+240)
.L3572:
	movh.a	a15,#@his(Dem_DcmFilterInfo)
	lea	a15,[a15]@los(Dem_DcmFilterInfo)
.L3573:
	addsc.a	a15,a15,d15,#1
.L3574:
	st.h	[a15]8,d0
.L3575:

; ..\EAS\BSW\Dem\Dem.c	  9333                          Dem_DcmFilterInfo.NumberOfFilteredDTC++;
	ld.hu	d15,[a2]@los(Dem_DcmFilterInfo+240)
.L3576:
	add	d15,#1
	st.h	[a2]@los(Dem_DcmFilterInfo+240),d15
.L713:
.L712:
.L711:
.L709:
	add	d0,#1
.L706:
	jlt.u	d0,d1,.L707
.L705:

; ..\EAS\BSW\Dem\Dem.c	  9334                      }
; ..\EAS\BSW\Dem\Dem.c	  9335                  }
; ..\EAS\BSW\Dem\Dem.c	  9336              }/*for(DtcId = 0; DtcId < DEM_NUM_OF_DTC; DtcId++)*/
; ..\EAS\BSW\Dem\Dem.c	  9337          }
; ..\EAS\BSW\Dem\Dem.c	  9338  #if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)
; ..\EAS\BSW\Dem\Dem.c	  9339          else
; ..\EAS\BSW\Dem\Dem.c	  9340          {
; ..\EAS\BSW\Dem\Dem.c	  9341              /*Permanent memory entry, only has emission related DTCs*/
; ..\EAS\BSW\Dem\Dem.c	  9342              for(Index = 0; Index < DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT; Index++)
; ..\EAS\BSW\Dem\Dem.c	  9343              {
; ..\EAS\BSW\Dem\Dem.c	  9344                  if(DEM_PERMANENT_DATAENTRY_EVENTID(Index) != DEM_EVENT_ID_INVALID)
; ..\EAS\BSW\Dem\Dem.c	  9345                  {
; ..\EAS\BSW\Dem\Dem.c	  9346                      DtcId = DEM_CFG_EVENT_DTCREF(DEM_PERMANENT_DATAENTRY_EVENTID(Index));
; ..\EAS\BSW\Dem\Dem.c	  9347  
; ..\EAS\BSW\Dem\Dem.c	  9348                      if(((FilterWithSeverity == FALSE) || ((DEM_CFG_DTC_SEVERITY(DtcId) & DTCSeverityMask) != 0)) \ 
; ..\EAS\BSW\Dem\Dem.c	  9349                          && ((DTCStatusMask == 0) || ((DEM_DTC_STATUS(DtcId) & StatusFilterMask) != 0)))
; ..\EAS\BSW\Dem\Dem.c	  9350                      {
; ..\EAS\BSW\Dem\Dem.c	  9351                          Dem_DcmFilterInfo.FilteredDTCIndexTable[Dem_DcmFilterInfo.NumberOfFilteredDTC] = DtcId;
; ..\EAS\BSW\Dem\Dem.c	  9352                          Dem_DcmFilterInfo.NumberOfFilteredDTC++;
; ..\EAS\BSW\Dem\Dem.c	  9353                      }
; ..\EAS\BSW\Dem\Dem.c	  9354                  }
; ..\EAS\BSW\Dem\Dem.c	  9355              }/*for(Index = 0; Index < DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT; Index++)*/
; ..\EAS\BSW\Dem\Dem.c	  9356          }
; ..\EAS\BSW\Dem\Dem.c	  9357  #endif
; ..\EAS\BSW\Dem\Dem.c	  9358          Dem_DcmFilterInfo.FilteredValidFlag = TRUE;
	movh.a	a15,#@his(Dem_DcmFilterInfo)
.L3577:
	mov	d15,#1
.L3578:
	st.b	[a15]@los(Dem_DcmFilterInfo),d15
.L3579:

; ..\EAS\BSW\Dem\Dem.c	  9359  
; ..\EAS\BSW\Dem\Dem.c	  9360          Result = DEM_FILTER_ACCEPTED;
	mov	d2,#0
.L704:
.L702:
.L699:
.L697:

; ..\EAS\BSW\Dem\Dem.c	  9361      }
; ..\EAS\BSW\Dem\Dem.c	  9362      return Result;
; ..\EAS\BSW\Dem\Dem.c	  9363  }
	ret
.L1766:
	
__Dem_DcmSetDTCFilter_function_end:
	.size	Dem_DcmSetDTCFilter,__Dem_DcmSetDTCFilter_function_end-Dem_DcmSetDTCFilter
.L1272:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmGetNumberOfFilteredDTC',code,cluster('Dem_DcmGetNumberOfFilteredDTC')
	.sect	'.text.Dem.Dem_DcmGetNumberOfFilteredDTC'
	.align	2
	
	.global	Dem_DcmGetNumberOfFilteredDTC

; ..\EAS\BSW\Dem\Dem.c	  9364  
; ..\EAS\BSW\Dem\Dem.c	  9365  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  9366  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9367  * Function Name: Dem_DcmGetNumberOfFilteredDTC
; ..\EAS\BSW\Dem\Dem.c	  9368  *
; ..\EAS\BSW\Dem\Dem.c	  9369  * Description: Gets the number of a filtered DTC.
; ..\EAS\BSW\Dem\Dem.c	  9370  *
; ..\EAS\BSW\Dem\Dem.c	  9371  * Inputs: None
; ..\EAS\BSW\Dem\Dem.c	  9372  *
; ..\EAS\BSW\Dem\Dem.c	  9373  * Outputs: NumberOfFilteredDTC: The number of DTCs matching the defined status mask.
; ..\EAS\BSW\Dem\Dem.c	  9374  *
; ..\EAS\BSW\Dem\Dem.c	  9375  * Return: Dem_ReturnGetNumberOfFilteredDTCType: Status of the operation to retrieve a
; ..\EAS\BSW\Dem\Dem.c	  9376  *                                                                       number of DTC from the Dem
; ..\EAS\BSW\Dem\Dem.c	  9377  *
; ..\EAS\BSW\Dem\Dem.c	  9378  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  9379  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9380  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  9381  FUNC(Dem_ReturnGetNumberOfFilteredDTCType, DEM_CODE) Dem_DcmGetNumberOfFilteredDTC
; Function Dem_DcmGetNumberOfFilteredDTC
.L1041:
Dem_DcmGetNumberOfFilteredDTC:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  9382  (
; ..\EAS\BSW\Dem\Dem.c	  9383      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) NumberOfFilteredDTC
; ..\EAS\BSW\Dem\Dem.c	  9384  )
; ..\EAS\BSW\Dem\Dem.c	  9385  {
; ..\EAS\BSW\Dem\Dem.c	  9386      Dem_ReturnGetNumberOfFilteredDTCType Result = DEM_NUMBER_OK;
	mov	d2,#0
.L2762:

; ..\EAS\BSW\Dem\Dem.c	  9387  
; ..\EAS\BSW\Dem\Dem.c	  9388      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3584:
	jne	d15,#2,.L715
.L3585:

; ..\EAS\BSW\Dem\Dem.c	  9389      {
; ..\EAS\BSW\Dem\Dem.c	  9390          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  9391          DEM_DET_REPORT_ERROR(DEM_DCMGETNUMBEROFFILTEREDDTC_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  9392          Result = DEM_NUMBER_FAILED;
; ..\EAS\BSW\Dem\Dem.c	  9393      }
; ..\EAS\BSW\Dem\Dem.c	  9394      else if(NumberOfFilteredDTC == NULL_PTR)
	jz.a	a4,.L716
.L3586:

; ..\EAS\BSW\Dem\Dem.c	  9395      {
; ..\EAS\BSW\Dem\Dem.c	  9396          DEM_DET_REPORT_ERROR(DEM_DCMGETNUMBEROFFILTEREDDTC_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  9397          Result = DEM_NUMBER_FAILED;
; ..\EAS\BSW\Dem\Dem.c	  9398      }
; ..\EAS\BSW\Dem\Dem.c	  9399      else if(Dem_DcmFilterInfo.FilteredValidFlag != TRUE)
	movh.a	a15,#@his(Dem_DcmFilterInfo)
.L3587:
	ld.bu	d15,[a15]@los(Dem_DcmFilterInfo)
.L3588:
	jeq	d15,#1,.L717
.L716:
.L715:

; ..\EAS\BSW\Dem\Dem.c	  9400      {
; ..\EAS\BSW\Dem\Dem.c	  9401          Result = DEM_NUMBER_FAILED;
	mov	d2,#1
.L3589:

; ..\EAS\BSW\Dem\Dem.c	  9402      }
; ..\EAS\BSW\Dem\Dem.c	  9403      else
; ..\EAS\BSW\Dem\Dem.c	  9404      {
; ..\EAS\BSW\Dem\Dem.c	  9405          /*SWS_Dem_00061*/
; ..\EAS\BSW\Dem\Dem.c	  9406          *NumberOfFilteredDTC = Dem_DcmFilterInfo.NumberOfFilteredDTC;
; ..\EAS\BSW\Dem\Dem.c	  9407      }
; ..\EAS\BSW\Dem\Dem.c	  9408      return Result;
; ..\EAS\BSW\Dem\Dem.c	  9409  }
	ret
.L717:
	movh.a	a15,#@his(Dem_DcmFilterInfo+240)
.L3590:
	ld.hu	d15,[a15]@los(Dem_DcmFilterInfo+240)
.L3591:
	st.h	[a4],d15
.L3592:
	ret
.L1777:
	
__Dem_DcmGetNumberOfFilteredDTC_function_end:
	.size	Dem_DcmGetNumberOfFilteredDTC,__Dem_DcmGetNumberOfFilteredDTC_function_end-Dem_DcmGetNumberOfFilteredDTC
.L1277:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmGetNextFilteredDTC',code,cluster('Dem_DcmGetNextFilteredDTC')
	.sect	'.text.Dem.Dem_DcmGetNextFilteredDTC'
	.align	2
	
	.global	Dem_DcmGetNextFilteredDTC

; ..\EAS\BSW\Dem\Dem.c	  9410  
; ..\EAS\BSW\Dem\Dem.c	  9411  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  9412  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9413  * Function Name: Dem_DcmGetNextFilteredDTC
; ..\EAS\BSW\Dem\Dem.c	  9414  *
; ..\EAS\BSW\Dem\Dem.c	  9415  * Description: Gets the next filtered DTC matching the filter criteria. For UDS services, the
; ..\EAS\BSW\Dem\Dem.c	  9416  *                  interface has an asynchronous behavior, because a large number of DTCs has to
; ..\EAS\BSW\Dem\Dem.c	  9417  *                  be processed.
; ..\EAS\BSW\Dem\Dem.c	  9418  *
; ..\EAS\BSW\Dem\Dem.c	  9419  * Inputs: None
; ..\EAS\BSW\Dem\Dem.c	  9420  *
; ..\EAS\BSW\Dem\Dem.c	  9421  * Outputs: DTC: Receives the DTC value in respective format of the filter returned by this function.
; ..\EAS\BSW\Dem\Dem.c	  9422  *              DTCStatus: This parameter receives the status information of the requested DTC.
; ..\EAS\BSW\Dem\Dem.c	  9423  *
; ..\EAS\BSW\Dem\Dem.c	  9424  * Return: Dem_ReturnGetNextFilteredElementType: Status of the operation to retrieve a
; ..\EAS\BSW\Dem\Dem.c	  9425  *                                                                       DTC from the Dem
; ..\EAS\BSW\Dem\Dem.c	  9426  *
; ..\EAS\BSW\Dem\Dem.c	  9427  * Limitations: Synchronous
; ..\EAS\BSW\Dem\Dem.c	  9428  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9429  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  9430  FUNC(Dem_ReturnGetNextFilteredElementType, DEM_CODE) Dem_DcmGetNextFilteredDTC
; Function Dem_DcmGetNextFilteredDTC
.L1043:
Dem_DcmGetNextFilteredDTC:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  9431  (
; ..\EAS\BSW\Dem\Dem.c	  9432      P2VAR(uint32, AUTOMATIC, DEM_APPL_DATA) DTC,
; ..\EAS\BSW\Dem\Dem.c	  9433      P2VAR(Dem_UdsStatusByteType, AUTOMATIC, DEM_APPL_DATA) DTCStatus
; ..\EAS\BSW\Dem\Dem.c	  9434  )
; ..\EAS\BSW\Dem\Dem.c	  9435  {
; ..\EAS\BSW\Dem\Dem.c	  9436      /*SWS_Dem_00653*/
; ..\EAS\BSW\Dem\Dem.c	  9437      Dem_ReturnGetNextFilteredElementType Result = DEM_FILTERED_OK;
	mov	d2,#0
.L2763:

; ..\EAS\BSW\Dem\Dem.c	  9438      uint16 DtcId;
; ..\EAS\BSW\Dem\Dem.c	  9439  
; ..\EAS\BSW\Dem\Dem.c	  9440      if((DTC == NULL_PTR) || (DTCStatus == NULL_PTR))
	jz.a	a4,.L720
.L3597:
	jnz.a	a5,.L721
.L720:

; ..\EAS\BSW\Dem\Dem.c	  9441      {
; ..\EAS\BSW\Dem\Dem.c	  9442          DEM_DET_REPORT_ERROR(DEM_DCMGETNEXTFILTEREDDTC_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  9443          Result = DEM_FILTERED_BUFFER_TOO_SMALL;
	mov	d2,#3
.L3598:

; ..\EAS\BSW\Dem\Dem.c	  9444      }
; ..\EAS\BSW\Dem\Dem.c	  9445      else if(Dem_DcmFilterInfo.FilteredValidFlag != TRUE)
; ..\EAS\BSW\Dem\Dem.c	  9446      {
; ..\EAS\BSW\Dem\Dem.c	  9447          Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
; ..\EAS\BSW\Dem\Dem.c	  9448      }
; ..\EAS\BSW\Dem\Dem.c	  9449      else if(Dem_DcmFilterInfo.NextFilteredDTCIndex >= Dem_DcmFilterInfo.NumberOfFilteredDTC)
; ..\EAS\BSW\Dem\Dem.c	  9450      {
; ..\EAS\BSW\Dem\Dem.c	  9451          Dem_DcmFilterInfo.FilteredValidFlag = FALSE;
; ..\EAS\BSW\Dem\Dem.c	  9452          Dem_DcmFilterInfo.NextFilteredDTCIndex = 0;
; ..\EAS\BSW\Dem\Dem.c	  9453          Dem_DcmFilterInfo.NumberOfFilteredDTC = 0;
; ..\EAS\BSW\Dem\Dem.c	  9454  
; ..\EAS\BSW\Dem\Dem.c	  9455          Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
; ..\EAS\BSW\Dem\Dem.c	  9456      }
; ..\EAS\BSW\Dem\Dem.c	  9457      else
; ..\EAS\BSW\Dem\Dem.c	  9458      {
; ..\EAS\BSW\Dem\Dem.c	  9459          /*SWS_Dem_00216*/
; ..\EAS\BSW\Dem\Dem.c	  9460          DtcId = Dem_DcmFilterInfo.FilteredDTCIndexTable[Dem_DcmFilterInfo.NextFilteredDTCIndex];
; ..\EAS\BSW\Dem\Dem.c	  9461          *DTC = DEM_CFG_DTC_VALUE(DtcId);
; ..\EAS\BSW\Dem\Dem.c	  9462  
; ..\EAS\BSW\Dem\Dem.c	  9463  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  9464          if((Dem_DcmFilterInfo.DTCFormat == DEM_DTC_FORMAT_OBD) \ 
; ..\EAS\BSW\Dem\Dem.c	  9465              && (DEM_CFG_DTC_OBDDTCREF(DtcId) != NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	  9466          {
; ..\EAS\BSW\Dem\Dem.c	  9467              *DTC = DEM_CFG_DTC_OBD_VALUE(DtcId);
; ..\EAS\BSW\Dem\Dem.c	  9468          }
; ..\EAS\BSW\Dem\Dem.c	  9469  #endif
; ..\EAS\BSW\Dem\Dem.c	  9470  #if(DEM_J1939_SUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  9471          if((Dem_DcmFilterInfo.DTCFormat == DEM_DTC_FORMAT_J1939) \ 
; ..\EAS\BSW\Dem\Dem.c	  9472              && (DEM_CFG_DTC_OBDDTCREF(DtcId) != NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	  9473          {
; ..\EAS\BSW\Dem\Dem.c	  9474              *DTC = DEM_CFG_DTC_J1939_VALUE(DtcId);
; ..\EAS\BSW\Dem\Dem.c	  9475          }
; ..\EAS\BSW\Dem\Dem.c	  9476  #endif
; ..\EAS\BSW\Dem\Dem.c	  9477  
; ..\EAS\BSW\Dem\Dem.c	  9478          *DTCStatus = ((DEM_DTC_STATUS(DtcId)) & (DEM_CFG_DTCSTATUSAVAILABILITYMASK));
; ..\EAS\BSW\Dem\Dem.c	  9479          Dem_DcmFilterInfo.NextFilteredDTCIndex++;
; ..\EAS\BSW\Dem\Dem.c	  9480      }
; ..\EAS\BSW\Dem\Dem.c	  9481      return Result;
; ..\EAS\BSW\Dem\Dem.c	  9482  }
	ret
.L721:
	movh.a	a15,#@his(Dem_DcmFilterInfo)
.L3599:
	ld.bu	d15,[a15]@los(Dem_DcmFilterInfo)
.L3600:
	jne	d15,#1,.L723
.L3601:
	movh.a	a2,#@his(Dem_DcmFilterInfo+242)
.L3602:
	ld.hu	d15,[a2]@los(Dem_DcmFilterInfo+242)
.L3603:
	movh.a	a6,#@his(Dem_DcmFilterInfo+240)
.L3604:
	ld.hu	d0,[a6]@los(Dem_DcmFilterInfo+240)
.L3605:
	jlt.u	d15,d0,.L724
.L3606:
	mov	d15,#0
.L3607:
	st.b	[a15]@los(Dem_DcmFilterInfo),d15
.L3608:
	st.h	[a2]@los(Dem_DcmFilterInfo+242),d15
.L3609:
	st.h	[a6]@los(Dem_DcmFilterInfo+240),d15
.L723:
	mov	d2,#1
.L3610:
	ret
.L724:
	ld.hu	d15,[a2]@los(Dem_DcmFilterInfo+242)
.L3611:
	lea	a15,[a15]@los(Dem_DcmFilterInfo)
.L3612:
	addsc.a	a15,a15,d15,#1
	ld.hu	d15,[a15]8
.L2764:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.w	d0,[a15]4
.L3613:
	st.w	[a4],d0
.L3614:
	mul	d15,d15,#6
.L2765:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]1864
.L3615:
	st.b	[a5],d15
.L3616:
	ld.hu	d15,[a2]@los(Dem_DcmFilterInfo+242)
.L3617:
	add	d15,#1
	st.h	[a2]@los(Dem_DcmFilterInfo+242),d15
.L3618:
	ret
.L1780:
	
__Dem_DcmGetNextFilteredDTC_function_end:
	.size	Dem_DcmGetNextFilteredDTC,__Dem_DcmGetNextFilteredDTC_function_end-Dem_DcmGetNextFilteredDTC
.L1282:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmGetNextFilteredDTCAndFDC',code,cluster('Dem_DcmGetNextFilteredDTCAndFDC')
	.sect	'.text.Dem.Dem_DcmGetNextFilteredDTCAndFDC'
	.align	2
	
	.global	Dem_DcmGetNextFilteredDTCAndFDC

; ..\EAS\BSW\Dem\Dem.c	  9483  
; ..\EAS\BSW\Dem\Dem.c	  9484  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  9485  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9486  * Function Name: Dem_DcmGetNextFilteredDTCAndFDC
; ..\EAS\BSW\Dem\Dem.c	  9487  *
; ..\EAS\BSW\Dem\Dem.c	  9488  * Description: Gets the next filtered DTC and its associated Fault Detection Counter (FDC)
; ..\EAS\BSW\Dem\Dem.c	  9489  *                  matching the filter criteria.
; ..\EAS\BSW\Dem\Dem.c	  9490  *
; ..\EAS\BSW\Dem\Dem.c	  9491  * Inputs: None
; ..\EAS\BSW\Dem\Dem.c	  9492  *
; ..\EAS\BSW\Dem\Dem.c	  9493  * Outputs: DTC: Receives the DTC value in respective format of the filter returned by this function.
; ..\EAS\BSW\Dem\Dem.c	  9494  *              DTCFaultDetectionCounter: This parameter receives the Fault Detection Counter
; ..\EAS\BSW\Dem\Dem.c	  9495  *                                                    information of the requested DTC
; ..\EAS\BSW\Dem\Dem.c	  9496  *
; ..\EAS\BSW\Dem\Dem.c	  9497  * Return: Dem_ReturnGetNextFilteredElementType: Status of the operation to retrieve a
; ..\EAS\BSW\Dem\Dem.c	  9498  *                                                                       DTC from the Dem
; ..\EAS\BSW\Dem\Dem.c	  9499  *
; ..\EAS\BSW\Dem\Dem.c	  9500  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  9501  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9502  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  9503  FUNC(Dem_ReturnGetNextFilteredElementType, DEM_CODE) Dem_DcmGetNextFilteredDTCAndFDC
; Function Dem_DcmGetNextFilteredDTCAndFDC
.L1045:
Dem_DcmGetNextFilteredDTCAndFDC:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  9504  (
; ..\EAS\BSW\Dem\Dem.c	  9505      P2VAR(uint32, AUTOMATIC, DEM_APPL_DATA) DTC,
; ..\EAS\BSW\Dem\Dem.c	  9506      P2VAR(sint8, AUTOMATIC, DEM_APPL_DATA) DTCFaultDetectionCounter
; ..\EAS\BSW\Dem\Dem.c	  9507  )
; ..\EAS\BSW\Dem\Dem.c	  9508  {
; ..\EAS\BSW\Dem\Dem.c	  9509      Dem_ReturnGetNextFilteredElementType Result = DEM_FILTERED_OK;
	mov	d8,#0
.L2768:

; ..\EAS\BSW\Dem\Dem.c	  9510      uint16 DtcId;
; ..\EAS\BSW\Dem\Dem.c	  9511      Std_ReturnType ret = E_OK;
; ..\EAS\BSW\Dem\Dem.c	  9512  
; ..\EAS\BSW\Dem\Dem.c	  9513      if((DTC == NULL_PTR) || (DTCFaultDetectionCounter == NULL_PTR))
	jz.a	a4,.L727
.L3623:
	jz.a	a5,.L728
.L3624:

; ..\EAS\BSW\Dem\Dem.c	  9514      {
; ..\EAS\BSW\Dem\Dem.c	  9515          DEM_DET_REPORT_ERROR(DEM_DCMGETNEXTFILTEREDDTCANDFDC_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  9516          Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
; ..\EAS\BSW\Dem\Dem.c	  9517      }
; ..\EAS\BSW\Dem\Dem.c	  9518      else if((Dem_DcmFilterInfo.FilteredValidFlag != TRUE) || (Dem_DcmFilterInfo.FilterForFDC != TRUE))
	movh.a	a15,#@his(Dem_DcmFilterInfo)
.L3625:
	ld.bu	d15,[a15]@los(Dem_DcmFilterInfo)
.L3626:
	jne	d15,#1,.L729
.L3627:
	movh.a	a2,#@his(Dem_DcmFilterInfo+6)
.L3628:
	ld.bu	d15,[a2]@los(Dem_DcmFilterInfo+6)
.L3629:
	jne	d15,#1,.L730
.L3630:

; ..\EAS\BSW\Dem\Dem.c	  9519      {
; ..\EAS\BSW\Dem\Dem.c	  9520          /*SWS_Dem_00518*/
; ..\EAS\BSW\Dem\Dem.c	  9521          DEM_DET_REPORT_ERROR(DEM_DCMGETNEXTFILTEREDDTCANDFDC_APIID, DEM_E_WRONG_CONDITION);
; ..\EAS\BSW\Dem\Dem.c	  9522          Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
; ..\EAS\BSW\Dem\Dem.c	  9523      }
; ..\EAS\BSW\Dem\Dem.c	  9524      else if(Dem_DcmFilterInfo.NextFilteredDTCIndex >= Dem_DcmFilterInfo.NumberOfFilteredDTC)
	movh.a	a6,#@his(Dem_DcmFilterInfo+242)
.L3631:
	ld.hu	d15,[a6]@los(Dem_DcmFilterInfo+242)
.L3632:
	movh.a	a7,#@his(Dem_DcmFilterInfo+240)
.L3633:
	ld.hu	d0,[a7]@los(Dem_DcmFilterInfo+240)
.L3634:
	jlt.u	d15,d0,.L731
.L3635:

; ..\EAS\BSW\Dem\Dem.c	  9525      {
; ..\EAS\BSW\Dem\Dem.c	  9526          Dem_DcmFilterInfo.FilteredValidFlag = FALSE;
	mov	d15,d8
.L2769:
	st.b	[a15]@los(Dem_DcmFilterInfo),d15
.L3636:

; ..\EAS\BSW\Dem\Dem.c	  9527          Dem_DcmFilterInfo.FilterForFDC = FALSE;
	st.b	[a2]@los(Dem_DcmFilterInfo+6),d15
.L3637:

; ..\EAS\BSW\Dem\Dem.c	  9528          Dem_DcmFilterInfo.NextFilteredDTCIndex = 0;
	st.h	[a6]@los(Dem_DcmFilterInfo+242),d15
.L3638:

; ..\EAS\BSW\Dem\Dem.c	  9529          Dem_DcmFilterInfo.NumberOfFilteredDTC = 0;
	st.h	[a7]@los(Dem_DcmFilterInfo+240),d15
.L730:
.L729:
.L728:
.L727:

; ..\EAS\BSW\Dem\Dem.c	  9530  
; ..\EAS\BSW\Dem\Dem.c	  9531          Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
	mov	d8,#1
.L3639:
	j	.L732
.L731:

; ..\EAS\BSW\Dem\Dem.c	  9532      }
; ..\EAS\BSW\Dem\Dem.c	  9533      else
; ..\EAS\BSW\Dem\Dem.c	  9534      {
; ..\EAS\BSW\Dem\Dem.c	  9535          /*SWS_Dem_00228*/
; ..\EAS\BSW\Dem\Dem.c	  9536          DtcId = Dem_DcmFilterInfo.FilteredDTCIndexTable[Dem_DcmFilterInfo.NextFilteredDTCIndex];
	mov.aa	a15,a6
.L3640:
	ld.hu	d15,[a15]@los(Dem_DcmFilterInfo+242)
.L3641:
	movh.a	a15,#@his(Dem_DcmFilterInfo)
	lea	a15,[a15]@los(Dem_DcmFilterInfo)
.L3642:
	addsc.a	a15,a15,d15,#1
	ld.hu	d2,[a15]8
.L2770:

; ..\EAS\BSW\Dem\Dem.c	  9537          *DTC = DEM_CFG_DTC_VALUE(DtcId);
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d2,#3
	ld.w	d15,[a15]4
.L3643:
	st.w	[a4],d15
.L3644:

; ..\EAS\BSW\Dem\Dem.c	  9538  
; ..\EAS\BSW\Dem\Dem.c	  9539  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  9540          if((Dem_DcmFilterInfo.DTCFormat == DEM_DTC_FORMAT_OBD) \ 
; ..\EAS\BSW\Dem\Dem.c	  9541              && (DEM_CFG_DTC_OBDDTCREF(DtcId) != NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	  9542          {
; ..\EAS\BSW\Dem\Dem.c	  9543              *DTC = DEM_CFG_DTC_OBD_VALUE(DtcId);
; ..\EAS\BSW\Dem\Dem.c	  9544          }
; ..\EAS\BSW\Dem\Dem.c	  9545  #endif
; ..\EAS\BSW\Dem\Dem.c	  9546  #if(DEM_J1939_SUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  9547          if((Dem_DcmFilterInfo.DTCFormat == DEM_DTC_FORMAT_J1939) \ 
; ..\EAS\BSW\Dem\Dem.c	  9548              && (DEM_CFG_DTC_OBDDTCREF(DtcId) != NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	  9549          {
; ..\EAS\BSW\Dem\Dem.c	  9550              *DTC = DEM_CFG_DTC_J1939_VALUE(DtcId);
; ..\EAS\BSW\Dem\Dem.c	  9551          }
; ..\EAS\BSW\Dem\Dem.c	  9552  #endif
; ..\EAS\BSW\Dem\Dem.c	  9553  
; ..\EAS\BSW\Dem\Dem.c	  9554          if(DEM_CFG_EVENT_GET_FDC_FNC(DtcId) != NULL_PTR)
	mul	d0,d2,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.w	d15,[a15]28
.L3645:
	jeq	d15,#0,.L733
.L3646:

; ..\EAS\BSW\Dem\Dem.c	  9555          {
; ..\EAS\BSW\Dem\Dem.c	  9556              /*SWS_Dem_00513*/
; ..\EAS\BSW\Dem\Dem.c	  9557              ret = (DEM_CFG_EVENT_GET_FDC_FNC(DtcId))(DTCFaultDetectionCounter);
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]28
.L3647:
	mov.aa	a4,a5
.L2766:
	calli	a15
.L2767:

; ..\EAS\BSW\Dem\Dem.c	  9558              if(ret != E_OK)
	jeq	d2,#0,.L734
.L3648:
	j	.L735
.L733:

; ..\EAS\BSW\Dem\Dem.c	  9559              {
; ..\EAS\BSW\Dem\Dem.c	  9560                  Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
; ..\EAS\BSW\Dem\Dem.c	  9561              }
; ..\EAS\BSW\Dem\Dem.c	  9562          }
; ..\EAS\BSW\Dem\Dem.c	  9563  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  9564          else if(DEM_CFG_EVENT_DBC(DtcId) != NULL_PTR)
	mul	d0,d2,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.w	d15,[a15]20
.L3649:
	jeq	d15,#0,.L736
.L3650:

; ..\EAS\BSW\Dem\Dem.c	  9565          {
; ..\EAS\BSW\Dem\Dem.c	  9566              /*SWS_Dem_00415*/
; ..\EAS\BSW\Dem\Dem.c	  9567              if(DEM_EVENT_DBC(DtcId) >= 0)
	sha	d15,d2,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.h	d1,[a15]10
.L3651:
	jlt	d1,#0,.L737
.L3652:

; ..\EAS\BSW\Dem\Dem.c	  9568              {
; ..\EAS\BSW\Dem\Dem.c	  9569                  *DTCFaultDetectionCounter = DEM_EVENT_DBC_F_FDC(DtcId);
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.h	d15,[a15]10
	mul	d1,d15,#127
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]20
	ld.h	d15,[a15]8
	div	e0,d1,d15
.L3653:
	st.b	[a5],d0
.L3654:
	j	.L738
.L737:

; ..\EAS\BSW\Dem\Dem.c	  9570              }
; ..\EAS\BSW\Dem\Dem.c	  9571              else
; ..\EAS\BSW\Dem\Dem.c	  9572              {
; ..\EAS\BSW\Dem\Dem.c	  9573                  *DTCFaultDetectionCounter = DEM_EVENT_DBC_P_FDC(DtcId);
	sha	d15,d2,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.h	d15,[a15]10
	sha	d0,d15,#7
	mul	d15,d2,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]20
	ld.h	d15,[a15]6
	rsub	d15,#0
	div	e0,d0,d15
.L3655:
	st.b	[a5],d0
.L3656:
	j	.L739
.L736:

; ..\EAS\BSW\Dem\Dem.c	  9574              }
; ..\EAS\BSW\Dem\Dem.c	  9575          }
; ..\EAS\BSW\Dem\Dem.c	  9576  #endif
; ..\EAS\BSW\Dem\Dem.c	  9577  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  9578          else if(DEM_CFG_EVENT_DBT(DtcId) != NULL_PTR)
	mul	d15,d2,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]24
.L3657:
	jeq	d15,#0,.L740
.L3658:

; ..\EAS\BSW\Dem\Dem.c	  9579          {
; ..\EAS\BSW\Dem\Dem.c	  9580              if((DEM_EVENT_TIMERDIRECTION(DtcId) == DEM_EVENT_STATUS_FAILED) \ 
	sha	d15,d2,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]16
.L3659:
	jeq	d0,#1,.L741
.L3660:

; ..\EAS\BSW\Dem\Dem.c	  9581                      || (DEM_EVENT_TIMERDIRECTION(DtcId) == DEM_EVENT_STATUS_PREFAILED))
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]16
.L3661:
	jne	d15,#3,.L742
.L741:

; ..\EAS\BSW\Dem\Dem.c	  9582              {
; ..\EAS\BSW\Dem\Dem.c	  9583                  *DTCFaultDetectionCounter = DEM_EVENT_DBT_F_FDC(DtcId);
	sha	d15,d2,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]12
	mul	d0,d15,#127
	mul	d15,d2,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]24
	ld.w	d15,[a15]6
	mov	d1,#5
	div.u	e2,d15,d1
.L2771:
	div.u	e0,d0,d2
.L3662:
	st.b	[a5],d0
.L3663:
	j	.L743
.L742:

; ..\EAS\BSW\Dem\Dem.c	  9584              }
; ..\EAS\BSW\Dem\Dem.c	  9585              else if((DEM_EVENT_TIMERDIRECTION(DtcId) == DEM_EVENT_STATUS_PASSED) \ 
	sha	d15,d2,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d0,[a15]16
.L3664:
	jeq	d0,#0,.L744
.L3665:

; ..\EAS\BSW\Dem\Dem.c	  9586                      || (DEM_EVENT_TIMERDIRECTION(DtcId) == DEM_EVENT_STATUS_PREPASSED))
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]16
.L3666:
	jne	d15,#2,.L745
.L744:

; ..\EAS\BSW\Dem\Dem.c	  9587              {
; ..\EAS\BSW\Dem\Dem.c	  9588                  *DTCFaultDetectionCounter = DEM_EVENT_DBT_P_FDC(DtcId);
	sha	d15,d2,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]12
	sha	d0,d15,#7
	mul	d15,d2,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]24
	ld.w	d15,[a15]2
	mov	d1,#5
	div.u	e2,d15,d1
.L2772:
	rsub	d2,#0
	div	e0,d0,d2
.L3667:
	st.b	[a5],d0
.L3668:
	j	.L746
.L745:

; ..\EAS\BSW\Dem\Dem.c	  9589              }
; ..\EAS\BSW\Dem\Dem.c	  9590              else
; ..\EAS\BSW\Dem\Dem.c	  9591              {
; ..\EAS\BSW\Dem\Dem.c	  9592                  *DTCFaultDetectionCounter = 0;
	mov	d15,#0
.L3669:
	st.b	[a5],d15
.L3670:
	j	.L747
.L740:
.L735:

; ..\EAS\BSW\Dem\Dem.c	  9593              }
; ..\EAS\BSW\Dem\Dem.c	  9594          }
; ..\EAS\BSW\Dem\Dem.c	  9595  #endif
; ..\EAS\BSW\Dem\Dem.c	  9596          else
; ..\EAS\BSW\Dem\Dem.c	  9597          {
; ..\EAS\BSW\Dem\Dem.c	  9598              Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
	mov	d8,#1
.L747:
.L746:
.L743:
.L739:
.L738:
.L734:

; ..\EAS\BSW\Dem\Dem.c	  9599          }
; ..\EAS\BSW\Dem\Dem.c	  9600  
; ..\EAS\BSW\Dem\Dem.c	  9601          Dem_DcmFilterInfo.NextFilteredDTCIndex++;
	movh.a	a15,#@his(Dem_DcmFilterInfo+242)
.L3671:
	ld.hu	d15,[a15]@los(Dem_DcmFilterInfo+242)
.L3672:
	add	d15,#1
	st.h	[a15]@los(Dem_DcmFilterInfo+242),d15
.L732:

; ..\EAS\BSW\Dem\Dem.c	  9602      }
; ..\EAS\BSW\Dem\Dem.c	  9603      return Result;
	mov	d2,d8
.L2773:

; ..\EAS\BSW\Dem\Dem.c	  9604  }
	ret
.L1785:
	
__Dem_DcmGetNextFilteredDTCAndFDC_function_end:
	.size	Dem_DcmGetNextFilteredDTCAndFDC,__Dem_DcmGetNextFilteredDTCAndFDC_function_end-Dem_DcmGetNextFilteredDTCAndFDC
.L1287:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmGetNextFilteredDTCAndSeverity',code,cluster('Dem_DcmGetNextFilteredDTCAndSeverity')
	.sect	'.text.Dem.Dem_DcmGetNextFilteredDTCAndSeverity'
	.align	2
	
	.global	Dem_DcmGetNextFilteredDTCAndSeverity

; ..\EAS\BSW\Dem\Dem.c	  9605  
; ..\EAS\BSW\Dem\Dem.c	  9606  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  9607  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9608  * Function Name: Dem_DcmGetNextFilteredDTCAndSeverity
; ..\EAS\BSW\Dem\Dem.c	  9609  *
; ..\EAS\BSW\Dem\Dem.c	  9610  * Description: Gets the next filtered DTC and its associated Severity matching the filter criteria.
; ..\EAS\BSW\Dem\Dem.c	  9611  *
; ..\EAS\BSW\Dem\Dem.c	  9612  * Inputs: None
; ..\EAS\BSW\Dem\Dem.c	  9613  *
; ..\EAS\BSW\Dem\Dem.c	  9614  * Outputs: DTC: Receives the DTC value in respective format of the filter returned by this function.
; ..\EAS\BSW\Dem\Dem.c	  9615  *              DTCStatus: This parameter receives the status information of the requested DTC.
; ..\EAS\BSW\Dem\Dem.c	  9616  *              DTCSeverity: Receives the severity value returned by the function.
; ..\EAS\BSW\Dem\Dem.c	  9617  *              DTCFunctionalUnit: Receives the functional unit value returned by the function.
; ..\EAS\BSW\Dem\Dem.c	  9618  *
; ..\EAS\BSW\Dem\Dem.c	  9619  * Return: Dem_ReturnGetNextFilteredElementType: Status of the operation to retrieve a
; ..\EAS\BSW\Dem\Dem.c	  9620  *                                                                       DTC from the Dem
; ..\EAS\BSW\Dem\Dem.c	  9621  *
; ..\EAS\BSW\Dem\Dem.c	  9622  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  9623  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9624  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  9625  FUNC(Dem_ReturnGetNextFilteredElementType, DEM_CODE) Dem_DcmGetNextFilteredDTCAndSeverity
; Function Dem_DcmGetNextFilteredDTCAndSeverity
.L1047:
Dem_DcmGetNextFilteredDTCAndSeverity:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  9626  (
; ..\EAS\BSW\Dem\Dem.c	  9627      P2VAR(uint32, AUTOMATIC, DEM_APPL_DATA) DTC,
; ..\EAS\BSW\Dem\Dem.c	  9628      P2VAR(Dem_UdsStatusByteType, AUTOMATIC, DEM_APPL_DATA) DTCStatus,
; ..\EAS\BSW\Dem\Dem.c	  9629      P2VAR(Dem_DTCSeverityType, AUTOMATIC, DEM_APPL_DATA) DTCSeverity,
; ..\EAS\BSW\Dem\Dem.c	  9630      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) DTCFunctionalUnit
; ..\EAS\BSW\Dem\Dem.c	  9631  )
; ..\EAS\BSW\Dem\Dem.c	  9632  {
; ..\EAS\BSW\Dem\Dem.c	  9633      Dem_ReturnGetNextFilteredElementType Result = DEM_FILTERED_OK;
	mov	d2,#0
.L2774:

; ..\EAS\BSW\Dem\Dem.c	  9634      uint16 DtcId;
; ..\EAS\BSW\Dem\Dem.c	  9635  
; ..\EAS\BSW\Dem\Dem.c	  9636      if((DTC == NULL_PTR) || (DTCStatus == NULL_PTR) \ 
	jz.a	a4,.L749
.L3677:
	jz.a	a5,.L750
.L3678:

; ..\EAS\BSW\Dem\Dem.c	  9637              || (DTCSeverity == NULL_PTR) || (DTCFunctionalUnit == NULL_PTR))
	jz.a	a6,.L751
.L3679:
	jz.a	a7,.L752
.L3680:

; ..\EAS\BSW\Dem\Dem.c	  9638      {
; ..\EAS\BSW\Dem\Dem.c	  9639          DEM_DET_REPORT_ERROR(DEM_DCMGETNEXTFILTEREDDTCANDSEVERITY_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  9640          Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
; ..\EAS\BSW\Dem\Dem.c	  9641      }
; ..\EAS\BSW\Dem\Dem.c	  9642      else if(Dem_DcmFilterInfo.FilteredValidFlag != TRUE)
	movh.a	a15,#@his(Dem_DcmFilterInfo)
.L3681:
	ld.bu	d15,[a15]@los(Dem_DcmFilterInfo)
.L3682:
	jne	d15,#1,.L753
.L3683:

; ..\EAS\BSW\Dem\Dem.c	  9643      {
; ..\EAS\BSW\Dem\Dem.c	  9644          Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
; ..\EAS\BSW\Dem\Dem.c	  9645      }
; ..\EAS\BSW\Dem\Dem.c	  9646      else if(Dem_DcmFilterInfo.NextFilteredDTCIndex >= Dem_DcmFilterInfo.NumberOfFilteredDTC)
	movh.a	a2,#@his(Dem_DcmFilterInfo+242)
.L3684:
	ld.hu	d15,[a2]@los(Dem_DcmFilterInfo+242)
.L3685:
	movh.a	a12,#@his(Dem_DcmFilterInfo+240)
.L3686:
	ld.hu	d0,[a12]@los(Dem_DcmFilterInfo+240)
.L3687:
	jlt.u	d15,d0,.L754
.L3688:

; ..\EAS\BSW\Dem\Dem.c	  9647      {
; ..\EAS\BSW\Dem\Dem.c	  9648          Dem_DcmFilterInfo.FilteredValidFlag = FALSE;
	st.b	[a15]@los(Dem_DcmFilterInfo),d2
.L3689:

; ..\EAS\BSW\Dem\Dem.c	  9649          Dem_DcmFilterInfo.NextFilteredDTCIndex = 0;
	st.h	[a2]@los(Dem_DcmFilterInfo+242),d2
.L3690:

; ..\EAS\BSW\Dem\Dem.c	  9650          Dem_DcmFilterInfo.NumberOfFilteredDTC = 0;
	st.h	[a12]@los(Dem_DcmFilterInfo+240),d2
.L753:
.L752:
.L751:
.L750:
.L749:

; ..\EAS\BSW\Dem\Dem.c	  9651  
; ..\EAS\BSW\Dem\Dem.c	  9652          Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
	mov	d2,#1
.L3691:

; ..\EAS\BSW\Dem\Dem.c	  9653      }
; ..\EAS\BSW\Dem\Dem.c	  9654      else
; ..\EAS\BSW\Dem\Dem.c	  9655      {
; ..\EAS\BSW\Dem\Dem.c	  9656          /*SWS_Dem_00287*/
; ..\EAS\BSW\Dem\Dem.c	  9657          DtcId = Dem_DcmFilterInfo.FilteredDTCIndexTable[Dem_DcmFilterInfo.NextFilteredDTCIndex];
; ..\EAS\BSW\Dem\Dem.c	  9658          *DTC = DEM_CFG_DTC_VALUE(DtcId);
; ..\EAS\BSW\Dem\Dem.c	  9659  
; ..\EAS\BSW\Dem\Dem.c	  9660  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  9661          if((Dem_DcmFilterInfo.DTCFormat == DEM_DTC_FORMAT_OBD) \ 
; ..\EAS\BSW\Dem\Dem.c	  9662              && (DEM_CFG_DTC_OBDDTCREF(DtcId) != NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	  9663          {
; ..\EAS\BSW\Dem\Dem.c	  9664              *DTC = DEM_CFG_DTC_OBD_VALUE(DtcId);
; ..\EAS\BSW\Dem\Dem.c	  9665          }
; ..\EAS\BSW\Dem\Dem.c	  9666  #endif
; ..\EAS\BSW\Dem\Dem.c	  9667  #if(DEM_J1939_SUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  9668          if((Dem_DcmFilterInfo.DTCFormat == DEM_DTC_FORMAT_J1939) \ 
; ..\EAS\BSW\Dem\Dem.c	  9669              && (DEM_CFG_DTC_OBDDTCREF(DtcId) != NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	  9670          {
; ..\EAS\BSW\Dem\Dem.c	  9671              *DTC = DEM_CFG_DTC_J1939_VALUE(DtcId);
; ..\EAS\BSW\Dem\Dem.c	  9672          }
; ..\EAS\BSW\Dem\Dem.c	  9673  #endif
; ..\EAS\BSW\Dem\Dem.c	  9674          *DTCStatus = ((DEM_DTC_STATUS(DtcId)) & (DEM_CFG_DTCSTATUSAVAILABILITYMASK));
; ..\EAS\BSW\Dem\Dem.c	  9675          *DTCSeverity = DEM_CFG_DTC_SEVERITY(DtcId);
; ..\EAS\BSW\Dem\Dem.c	  9676          *DTCFunctionalUnit = DEM_CFG_DTC_FNCUNIT(DtcId);
; ..\EAS\BSW\Dem\Dem.c	  9677          Dem_DcmFilterInfo.NextFilteredDTCIndex++;
; ..\EAS\BSW\Dem\Dem.c	  9678      }
; ..\EAS\BSW\Dem\Dem.c	  9679      return Result;
; ..\EAS\BSW\Dem\Dem.c	  9680  }
	ret
.L754:
	ld.hu	d15,[a2]@los(Dem_DcmFilterInfo+242)
.L3692:
	lea	a15,[a15]@los(Dem_DcmFilterInfo)
.L3693:
	addsc.a	a15,a15,d15,#1
	ld.hu	d15,[a15]8
.L2775:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.w	d0,[a15]4
.L3694:
	st.w	[a4],d0
.L3695:
	mul	d0,d15,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
	ld.bu	d0,[a15]1864
.L3696:
	st.b	[a5],d0
.L3697:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.bu	d0,[a15]3
.L3698:
	st.b	[a6],d0
.L3699:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.bu	d15,[a15]2
.L2776:
	st.b	[a7],d15
.L3700:
	ld.hu	d15,[a2]@los(Dem_DcmFilterInfo+242)
.L3701:
	add	d15,#1
	st.h	[a2]@los(Dem_DcmFilterInfo+242),d15
.L3702:
	ret
.L1791:
	
__Dem_DcmGetNextFilteredDTCAndSeverity_function_end:
	.size	Dem_DcmGetNextFilteredDTCAndSeverity,__Dem_DcmGetNextFilteredDTCAndSeverity_function_end-Dem_DcmGetNextFilteredDTCAndSeverity
.L1292:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmSetFreezeFrameRecordFilter',code,cluster('Dem_DcmSetFreezeFrameRecordFilter')
	.sect	'.text.Dem.Dem_DcmSetFreezeFrameRecordFilter'
	.align	2
	
	.global	Dem_DcmSetFreezeFrameRecordFilter

; ..\EAS\BSW\Dem\Dem.c	  9681  
; ..\EAS\BSW\Dem\Dem.c	  9682  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  9683  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9684  * Function Name: Dem_DcmSetFreezeFrameRecordFilter
; ..\EAS\BSW\Dem\Dem.c	  9685  *
; ..\EAS\BSW\Dem\Dem.c	  9686  * Description: Sets a freeze frame record filter.
; ..\EAS\BSW\Dem\Dem.c	  9687  *
; ..\EAS\BSW\Dem\Dem.c	  9688  * Inputs: DTCFormat: Defines the output-format of the requested DTC values for the sub-sequent API calls.
; ..\EAS\BSW\Dem\Dem.c	  9689  *
; ..\EAS\BSW\Dem\Dem.c	  9690  * Outputs: NumberOfFilteredRecords: Number of freeze frame records currently stored in the event memory.
; ..\EAS\BSW\Dem\Dem.c	  9691  *
; ..\EAS\BSW\Dem\Dem.c	  9692  * Return: Dem_ReturnSetFilterType: Status of the operation to (re-)set a freeze frame record filter.
; ..\EAS\BSW\Dem\Dem.c	  9693  *
; ..\EAS\BSW\Dem\Dem.c	  9694  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  9695  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9696  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  9697  FUNC(Dem_ReturnSetFilterType, DEM_CODE) Dem_DcmSetFreezeFrameRecordFilter
; Function Dem_DcmSetFreezeFrameRecordFilter
.L1049:
Dem_DcmSetFreezeFrameRecordFilter:	.type	func
	sub.a	a10,#8
.L2777:
	mov.aa	a12,a4
.L2778:

; ..\EAS\BSW\Dem\Dem.c	  9698  (
; ..\EAS\BSW\Dem\Dem.c	  9699      Dem_DTCFormatType DTCFormat,
; ..\EAS\BSW\Dem\Dem.c	  9700      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) NumberOfFilteredRecords
; ..\EAS\BSW\Dem\Dem.c	  9701  )
; ..\EAS\BSW\Dem\Dem.c	  9702  {
; ..\EAS\BSW\Dem\Dem.c	  9703      /*SWS_Dem_00595*//*SWS_Dem_00650*/
; ..\EAS\BSW\Dem\Dem.c	  9704      Dem_ReturnSetFilterType Result = DEM_FILTER_ACCEPTED;
	mov	d10,#0
.L2779:

; ..\EAS\BSW\Dem\Dem.c	  9705  #if(DEM_NUM_OF_FFRECCLASS > 0)
; ..\EAS\BSW\Dem\Dem.c	  9706      uint16 i;
; ..\EAS\BSW\Dem\Dem.c	  9707      uint8 j;
; ..\EAS\BSW\Dem\Dem.c	  9708      uint32 DTC;
; ..\EAS\BSW\Dem\Dem.c	  9709      uint8 RecordNumber;
; ..\EAS\BSW\Dem\Dem.c	  9710      uint16 SizeOfFreezeFrame = 0;
	mov	d15,d10
.L2780:
	st.h	[a10],d15
.L3707:

; ..\EAS\BSW\Dem\Dem.c	  9711      uint16 FFDataOffset = 0;
	st.h	[a10]2,d15
.L3708:

; ..\EAS\BSW\Dem\Dem.c	  9712  #endif
; ..\EAS\BSW\Dem\Dem.c	  9713  
; ..\EAS\BSW\Dem\Dem.c	  9714      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L2781:
	jne	d15,#2,.L757
.L3709:

; ..\EAS\BSW\Dem\Dem.c	  9715      {
; ..\EAS\BSW\Dem\Dem.c	  9716          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  9717          DEM_DET_REPORT_ERROR(DEM_DCMSETFREEZEFRAMERECORDFILTER_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  9718          Result = DEM_WRONG_FILTER;
; ..\EAS\BSW\Dem\Dem.c	  9719      }
; ..\EAS\BSW\Dem\Dem.c	  9720      else if((DTCFormat != DEM_DTC_FORMAT_UDS) \ 
	jeq	d4,#1,.L758
.L3710:

; ..\EAS\BSW\Dem\Dem.c	  9721          && (DTCFormat != DEM_DTC_FORMAT_OBD))
	jne	d4,#0,.L759
.L758:

; ..\EAS\BSW\Dem\Dem.c	  9722      {
; ..\EAS\BSW\Dem\Dem.c	  9723          DEM_DET_REPORT_ERROR(DEM_DCMSETFREEZEFRAMERECORDFILTER_APIID, DEM_E_WRONG_CONFIGURATION);
; ..\EAS\BSW\Dem\Dem.c	  9724          Result = DEM_WRONG_FILTER;
; ..\EAS\BSW\Dem\Dem.c	  9725      }
; ..\EAS\BSW\Dem\Dem.c	  9726      else if(NumberOfFilteredRecords == NULL_PTR)
	jnz.a	a12,.L760
.L759:
.L757:

; ..\EAS\BSW\Dem\Dem.c	  9727      {
; ..\EAS\BSW\Dem\Dem.c	  9728          DEM_DET_REPORT_ERROR(DEM_DCMSETFREEZEFRAMERECORDFILTER_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  9729          Result = DEM_WRONG_FILTER;
	mov	d10,#1
.L3711:
	j	.L761
.L760:

; ..\EAS\BSW\Dem\Dem.c	  9730      }
; ..\EAS\BSW\Dem\Dem.c	  9731      else
; ..\EAS\BSW\Dem\Dem.c	  9732      {
; ..\EAS\BSW\Dem\Dem.c	  9733  #if(DEM_NUM_OF_FFRECCLASS > 0)
; ..\EAS\BSW\Dem\Dem.c	  9734          *NumberOfFilteredRecords = 0;
	mov	d8,#0
.L2782:
	st.h	[a12],d8
.L3712:

; ..\EAS\BSW\Dem\Dem.c	  9735          Dem_NumFFRecOfDTC = 0;
	movh.a	a15,#@his(Dem_NumFFRecOfDTC)
.L3713:
	st.b	[a15]@los(Dem_NumFFRecOfDTC),d8
.L3714:

; ..\EAS\BSW\Dem\Dem.c	  9736          Dem_DcmFilterInfo.DTCFormat = DTCFormat;
	movh.a	a15,#@his(Dem_DcmFilterInfo+3)
.L3715:
	st.b	[a15]@los(Dem_DcmFilterInfo+3),d4
.L3716:

; ..\EAS\BSW\Dem\Dem.c	  9737          Dem_DcmFilterInfo.NumberOfFilteredDTC = 0;
	movh.a	a15,#@his(Dem_DcmFilterInfo+240)
.L3717:
	st.h	[a15]@los(Dem_DcmFilterInfo+240),d8
.L3718:

; ..\EAS\BSW\Dem\Dem.c	  9738          Dem_DcmFilterInfo.NextFilteredDTCIndex = 0;
	movh.a	a15,#@his(Dem_DcmFilterInfo+242)
.L3719:
	st.h	[a15]@los(Dem_DcmFilterInfo+242),d8
.L3720:

; ..\EAS\BSW\Dem\Dem.c	  9739          /*SWS_Dem_00210*/
; ..\EAS\BSW\Dem\Dem.c	  9740          for(i = 0; i < DEM_NUM_OF_DTC; i++)
; ..\EAS\BSW\Dem\Dem.c	  9741          {
; ..\EAS\BSW\Dem\Dem.c	  9742              if((DEM_CFG_DTC_VALUE(i) != 0) && (DEM_DTC_DATAENTRYREF(i) != DEM_DATA_INVALID_U16) \ 
	mov.u	d9,#65535
.L3721:

; ..\EAS\BSW\Dem\Dem.c	  9743                  && (DEM_CFG_DTC_FFRECNUMCLASSREF(i) != NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	  9744              {
; ..\EAS\BSW\Dem\Dem.c	  9745                  Dem_DcmFilterInfo.FilteredDTCIndexTable[Dem_DcmFilterInfo.NumberOfFilteredDTC] = i;
	movh.a	a13,#@his(Dem_DcmFilterInfo+240)
.L3722:
	mov	d11,#116
.L3723:
	j	.L762
.L763:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d8,#3
	ld.w	d15,[a15]4
.L3724:
	jeq	d15,#0,.L764
.L3725:
	mul	d15,d8,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d0,[a15]1868
.L3726:
	jeq	d0,d9,.L765
.L3727:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d8,#3
	ld.hu	d0,[a15]0
	sha	d0,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d0,#0
	ld.w	d15,[a15]16
.L3728:
	jeq	d15,#0,.L766
.L3729:
	ld.hu	d15,[a13]@los(Dem_DcmFilterInfo+240)
.L3730:
	movh.a	a15,#@his(Dem_DcmFilterInfo)
	lea	a15,[a15]@los(Dem_DcmFilterInfo)
.L3731:
	addsc.a	a15,a15,d15,#1
.L3732:
	st.h	[a15]8,d8
.L3733:

; ..\EAS\BSW\Dem\Dem.c	  9746                  Dem_DcmFilterInfo.NumberOfFilteredDTC++;
	ld.hu	d15,[a13]@los(Dem_DcmFilterInfo+240)
.L3734:
	add	d15,#1
	st.h	[a13]@los(Dem_DcmFilterInfo+240),d15
.L3735:

; ..\EAS\BSW\Dem\Dem.c	  9747                  for(j = 0; j < DEM_CFG_DTC_NUM_OF_FFREC(i); j++)
	mov	d12,#0
.L2783:
	j	.L767
.L768:

; ..\EAS\BSW\Dem\Dem.c	  9748                  {
; ..\EAS\BSW\Dem\Dem.c	  9749                      DTC = DEM_CFG_DTC_VALUE(i);
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d8,#3
	ld.w	d4,[a15]4
.L2785:

; ..\EAS\BSW\Dem\Dem.c	  9750                      RecordNumber = DEM_CFG_DTC_FFRECNUM((DEM_CFG_DTC_FFREC_ARRAY(i)[j]));
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d8,#3
	ld.hu	d0,[a15]0
	sha	d0,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]16
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_FFRecNumClassTable)
	lea	a15,[a15]@los(Dem_FFRecNumClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]4
	addsc.a	a15,a15,d12,#0
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d15,#3
	ld.bu	d6,[a15]
.L2787:

; ..\EAS\BSW\Dem\Dem.c	  9751                      (void)DemInternal_GetSizeOfFFData(DTC, DEM_DTC_ORIGIN_PRIMARY_MEMORY, \ 
	mov	d5,#1
.L3736:

; ..\EAS\BSW\Dem\Dem.c	  9752                                                        RecordNumber, &SizeOfFreezeFrame, &FFDataOffset);
	mov.aa	a4,a10
.L3737:
	lea	a5,[a10]2
	call	DemInternal_GetSizeOfFFData
.L2786:

; ..\EAS\BSW\Dem\Dem.c	  9753                      if(SizeOfFreezeFrame != 0)
	ld.hu	d15,[a10]0
.L3738:
	jeq	d15,#0,.L769
.L3739:

; ..\EAS\BSW\Dem\Dem.c	  9754                      {
; ..\EAS\BSW\Dem\Dem.c	  9755                          (*NumberOfFilteredRecords)++;
	ld.hu	d15,[a12]0
.L3740:
	add	d15,#1
	st.h	[a12],d15
.L769:
	add	d12,#1
.L2784:
	extr.u	d12,d12,#0,#8
.L767:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d8,#3
	ld.hu	d15,[a15]0
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]16
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_FFRecNumClassTable)
	lea	a15,[a15]@los(Dem_FFRecNumClassTable)
	addsc.a	a15,a15,d15,#3
	ld.bu	d15,[a15]
.L3741:
	jlt.u	d12,d15,.L768
.L766:
.L765:
.L764:
	add	d8,#1
.L762:
	jlt.u	d8,d11,.L763
.L3742:

; ..\EAS\BSW\Dem\Dem.c	  9756                      }
; ..\EAS\BSW\Dem\Dem.c	  9757                  }
; ..\EAS\BSW\Dem\Dem.c	  9758              }
; ..\EAS\BSW\Dem\Dem.c	  9759          }
; ..\EAS\BSW\Dem\Dem.c	  9760          Dem_DcmFilterInfo.FilteredValidFlag = TRUE;
	movh.a	a15,#@his(Dem_DcmFilterInfo)
.L3743:
	mov	d15,#1
.L3744:
	st.b	[a15]@los(Dem_DcmFilterInfo),d15
.L761:

; ..\EAS\BSW\Dem\Dem.c	  9761  #else
; ..\EAS\BSW\Dem\Dem.c	  9762          Result = DEM_WRONG_FILTER;
; ..\EAS\BSW\Dem\Dem.c	  9763  #endif
; ..\EAS\BSW\Dem\Dem.c	  9764      }
; ..\EAS\BSW\Dem\Dem.c	  9765      return Result;
	mov	d2,d10
.L2788:

; ..\EAS\BSW\Dem\Dem.c	  9766  }
	ret
.L1798:
	
__Dem_DcmSetFreezeFrameRecordFilter_function_end:
	.size	Dem_DcmSetFreezeFrameRecordFilter,__Dem_DcmSetFreezeFrameRecordFilter_function_end-Dem_DcmSetFreezeFrameRecordFilter
.L1297:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmGetNextFilteredRecord',code,cluster('Dem_DcmGetNextFilteredRecord')
	.sect	'.text.Dem.Dem_DcmGetNextFilteredRecord'
	.align	2
	
	.global	Dem_DcmGetNextFilteredRecord

; ..\EAS\BSW\Dem\Dem.c	  9767  
; ..\EAS\BSW\Dem\Dem.c	  9768  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  9769  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9770  * Function Name: Dem_DcmGetNextFilteredRecord
; ..\EAS\BSW\Dem\Dem.c	  9771  *
; ..\EAS\BSW\Dem\Dem.c	  9772  * Description: Gets the next freeze frame record number and its associated DTC stored in the event memory.
; ..\EAS\BSW\Dem\Dem.c	  9773  *
; ..\EAS\BSW\Dem\Dem.c	  9774  * Inputs: None
; ..\EAS\BSW\Dem\Dem.c	  9775  *
; ..\EAS\BSW\Dem\Dem.c	  9776  * Outputs: DTC: Receives the DTC value in respective format of the filter returned by this function.
; ..\EAS\BSW\Dem\Dem.c	  9777  *              RecordNumber: Freeze frame record number of the reported DTC(relative addressing).
; ..\EAS\BSW\Dem\Dem.c	  9778  *
; ..\EAS\BSW\Dem\Dem.c	  9779  * Return: Dem_ReturnGetNextFilteredElementType: Status of the operation to retrieve a DTC and
; ..\EAS\BSW\Dem\Dem.c	  9780  *                           its associated snapshot record number from the Dem.
; ..\EAS\BSW\Dem\Dem.c	  9781  *
; ..\EAS\BSW\Dem\Dem.c	  9782  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  9783  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9784  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  9785  FUNC(Dem_ReturnGetNextFilteredElementType, DEM_CODE) Dem_DcmGetNextFilteredRecord
; Function Dem_DcmGetNextFilteredRecord
.L1051:
Dem_DcmGetNextFilteredRecord:	.type	func
	sub.a	a10,#8
.L2789:
	mov.aa	a12,a4
.L2791:
	mov.aa	a13,a5
.L2792:

; ..\EAS\BSW\Dem\Dem.c	  9786  (
; ..\EAS\BSW\Dem\Dem.c	  9787      P2VAR(uint32, AUTOMATIC, DEM_APPL_DATA) DTC,
; ..\EAS\BSW\Dem\Dem.c	  9788      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) RecordNumber
; ..\EAS\BSW\Dem\Dem.c	  9789  )
; ..\EAS\BSW\Dem\Dem.c	  9790  {
; ..\EAS\BSW\Dem\Dem.c	  9791      /*SWS_Dem_00225*/
; ..\EAS\BSW\Dem\Dem.c	  9792      Dem_ReturnGetNextFilteredElementType Result = DEM_FILTERED_OK;
	mov	d8,#0
.L2793:

; ..\EAS\BSW\Dem\Dem.c	  9793  #if(DEM_NUM_OF_FFRECCLASS > 0)
; ..\EAS\BSW\Dem\Dem.c	  9794      uint16 DtcId;
; ..\EAS\BSW\Dem\Dem.c	  9795      uint16 SizeOfFreezeFrame = 0;
	st.h	[a10],d8
.L3749:

; ..\EAS\BSW\Dem\Dem.c	  9796      uint16 FFDataOffset = 0;
	st.h	[a10]2,d8
.L3750:

; ..\EAS\BSW\Dem\Dem.c	  9797  #endif
; ..\EAS\BSW\Dem\Dem.c	  9798      if((DTC == NULL_PTR) || (RecordNumber == NULL_PTR))
	jz.a	a12,.L771
.L3751:
	jz.a	a13,.L772
.L3752:

; ..\EAS\BSW\Dem\Dem.c	  9799      {
; ..\EAS\BSW\Dem\Dem.c	  9800          DEM_DET_REPORT_ERROR(DEM_DCMGETNEXTFILTEREDRECORD_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  9801          Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
; ..\EAS\BSW\Dem\Dem.c	  9802      }
; ..\EAS\BSW\Dem\Dem.c	  9803      else if(Dem_DcmFilterInfo.FilteredValidFlag != TRUE)
	movh.a	a15,#@his(Dem_DcmFilterInfo)
.L3753:
	ld.bu	d15,[a15]@los(Dem_DcmFilterInfo)
.L3754:
	jne	d15,#1,.L773
.L3755:

; ..\EAS\BSW\Dem\Dem.c	  9804      {
; ..\EAS\BSW\Dem\Dem.c	  9805          Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
; ..\EAS\BSW\Dem\Dem.c	  9806      }
; ..\EAS\BSW\Dem\Dem.c	  9807      else if(Dem_DcmFilterInfo.NextFilteredDTCIndex >= Dem_DcmFilterInfo.NumberOfFilteredDTC)
	movh.a	a2,#@his(Dem_DcmFilterInfo+242)
.L3756:
	ld.hu	d0,[a2]@los(Dem_DcmFilterInfo+242)
.L3757:
	movh.a	a4,#@his(Dem_DcmFilterInfo+240)
.L2790:
	ld.hu	d1,[a4]@los(Dem_DcmFilterInfo+240)
.L3758:
	jlt.u	d0,d1,.L776
.L3759:

; ..\EAS\BSW\Dem\Dem.c	  9808      {
; ..\EAS\BSW\Dem\Dem.c	  9809          Dem_DcmFilterInfo.FilteredValidFlag = FALSE;
	st.b	[a15]@los(Dem_DcmFilterInfo),d8
.L3760:

; ..\EAS\BSW\Dem\Dem.c	  9810          Dem_DcmFilterInfo.NextFilteredDTCIndex = 0;
	st.h	[a2]@los(Dem_DcmFilterInfo+242),d8
.L3761:

; ..\EAS\BSW\Dem\Dem.c	  9811          Dem_DcmFilterInfo.NumberOfFilteredDTC = 0;
	st.h	[a4]@los(Dem_DcmFilterInfo+240),d8
.L773:
.L772:
.L771:

; ..\EAS\BSW\Dem\Dem.c	  9812  
; ..\EAS\BSW\Dem\Dem.c	  9813          Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
	mov	d8,#1
.L3762:
	j	.L775

; ..\EAS\BSW\Dem\Dem.c	  9814      }
; ..\EAS\BSW\Dem\Dem.c	  9815      else
; ..\EAS\BSW\Dem\Dem.c	  9816      {
; ..\EAS\BSW\Dem\Dem.c	  9817  #if(DEM_NUM_OF_FFRECCLASS > 0)
; ..\EAS\BSW\Dem\Dem.c	  9818          for(; (Dem_DcmFilterInfo.NextFilteredDTCIndex < Dem_DcmFilterInfo.NumberOfFilteredDTC);)
.L777:

; ..\EAS\BSW\Dem\Dem.c	  9819          {
; ..\EAS\BSW\Dem\Dem.c	  9820              DtcId = Dem_DcmFilterInfo.FilteredDTCIndexTable[Dem_DcmFilterInfo.NextFilteredDTCIndex];
	movh.a	a2,#@his(Dem_DcmFilterInfo+242)
.L3763:
	ld.hu	d15,[a2]@los(Dem_DcmFilterInfo+242)
.L3764:
	movh.a	a15,#@his(Dem_DcmFilterInfo)
	lea	a15,[a15]@los(Dem_DcmFilterInfo)
.L3765:
	addsc.a	a15,a15,d15,#1
	ld.hu	d0,[a15]8
.L2794:

; ..\EAS\BSW\Dem\Dem.c	  9821              if(Dem_NumFFRecOfDTC >= DEM_CFG_DTC_NUM_OF_FFREC(DtcId))
	movh.a	a4,#@his(Dem_NumFFRecOfDTC)
	ld.bu	d1,[a4]@los(Dem_NumFFRecOfDTC)
.L3766:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d0,#3
	ld.hu	d0,[a15]0
.L2795:
	sha	d0,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d0,#0
	ld.a	a15,[a15]16
	ld.bu	d0,[a15]
	movh.a	a15,#@his(Dem_FFRecNumClassTable)
	lea	a15,[a15]@los(Dem_FFRecNumClassTable)
	addsc.a	a15,a15,d0,#3
	ld.bu	d0,[a15]
.L3767:
	jlt.u	d1,d0,.L778
.L3768:

; ..\EAS\BSW\Dem\Dem.c	  9822              {
; ..\EAS\BSW\Dem\Dem.c	  9823                  Dem_DcmFilterInfo.NextFilteredDTCIndex++;
	add	d15,#1
	st.h	[a2]@los(Dem_DcmFilterInfo+242),d15
.L3769:

; ..\EAS\BSW\Dem\Dem.c	  9824                  Dem_NumFFRecOfDTC = 0;
	mov	d15,#0
.L3770:
	st.b	[a4]@los(Dem_NumFFRecOfDTC),d15
.L778:

; ..\EAS\BSW\Dem\Dem.c	  9825              }
; ..\EAS\BSW\Dem\Dem.c	  9826  
; ..\EAS\BSW\Dem\Dem.c	  9827              if(Dem_DcmFilterInfo.NextFilteredDTCIndex < Dem_DcmFilterInfo.NumberOfFilteredDTC)
	movh.a	a15,#@his(Dem_DcmFilterInfo+242)
.L3771:
	ld.hu	d15,[a15]@los(Dem_DcmFilterInfo+242)
.L3772:
	movh.a	a15,#@his(Dem_DcmFilterInfo+240)
.L3773:
	ld.hu	d0,[a15]@los(Dem_DcmFilterInfo+240)
.L3774:
	jge.u	d15,d0,.L779
.L3775:

; ..\EAS\BSW\Dem\Dem.c	  9828              {
; ..\EAS\BSW\Dem\Dem.c	  9829                  DtcId = Dem_DcmFilterInfo.FilteredDTCIndexTable[Dem_DcmFilterInfo.NextFilteredDTCIndex];
	movh.a	a15,#@his(Dem_DcmFilterInfo)
	lea	a15,[a15]@los(Dem_DcmFilterInfo)
.L3776:
	addsc.a	a15,a15,d15,#1
	ld.hu	d15,[a15]8
.L2796:

; ..\EAS\BSW\Dem\Dem.c	  9830                  *DTC = DEM_CFG_DTC_VALUE(DtcId);
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.w	d0,[a15]4
.L3777:
	st.w	[a12],d0
.L3778:

; ..\EAS\BSW\Dem\Dem.c	  9831  
; ..\EAS\BSW\Dem\Dem.c	  9832  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	  9833                  if((Dem_DcmFilterInfo.DTCFormat == DEM_DTC_FORMAT_OBD) \ 
; ..\EAS\BSW\Dem\Dem.c	  9834                      && (DEM_CFG_DTC_OBDDTCREF(DtcId) != NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	  9835                  {
; ..\EAS\BSW\Dem\Dem.c	  9836                      *DTC = DEM_CFG_DTC_OBD_VALUE(DtcId);
; ..\EAS\BSW\Dem\Dem.c	  9837                  }
; ..\EAS\BSW\Dem\Dem.c	  9838  #endif
; ..\EAS\BSW\Dem\Dem.c	  9839  #if(DEM_J1939_SUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	  9840                  if((Dem_DcmFilterInfo.DTCFormat == DEM_DTC_FORMAT_J1939) \ 
; ..\EAS\BSW\Dem\Dem.c	  9841                      && (DEM_CFG_DTC_OBDDTCREF(DtcId) != NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	  9842                  {
; ..\EAS\BSW\Dem\Dem.c	  9843                      *DTC = DEM_CFG_DTC_J1939_VALUE(DtcId);
; ..\EAS\BSW\Dem\Dem.c	  9844                  }
; ..\EAS\BSW\Dem\Dem.c	  9845  #endif
; ..\EAS\BSW\Dem\Dem.c	  9846                  *RecordNumber = DEM_CFG_DTC_FFRECNUM(DEM_CFG_DTC_FFREC_ARRAY(DtcId)[Dem_NumFFRecOfDTC]);
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.hu	d15,[a15]0
.L2797:
	sha	d15,#5
	movh.a	a15,#@his(Dem_DTCAttributesTable)
	lea	a15,[a15]@los(Dem_DTCAttributesTable)
	addsc.a	a15,a15,d15,#0
	ld.a	a15,[a15]16
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_FFRecNumClassTable)
	lea	a15,[a15]@los(Dem_FFRecNumClassTable)
	addsc.a	a15,a15,d15,#3
	ld.a	a15,[a15]4
	mov.aa	a2,a4
	ld.bu	d15,[a2]@los(Dem_NumFFRecOfDTC)
	addsc.a	a15,a15,d15,#0
	ld.bu	d15,[a15]
	movh.a	a15,#@his(Dem_FFRecClassTable)
	lea	a15,[a15]@los(Dem_FFRecClassTable)
	addsc.a	a15,a15,d15,#3
	ld.bu	d6,[a15]
.L3779:
	st.b	[a13],d6
.L3780:

; ..\EAS\BSW\Dem\Dem.c	  9847                  (void)DemInternal_GetSizeOfFFData(*DTC, DEM_DTC_ORIGIN_PRIMARY_MEMORY, \ 
	ld.w	d4,[a12]
.L3781:
	mov	d5,#1
.L3782:

; ..\EAS\BSW\Dem\Dem.c	  9848                                                    *RecordNumber, &SizeOfFreezeFrame, &FFDataOffset);
	mov.aa	a4,a10
.L3783:
	lea	a5,[a10]2
	call	DemInternal_GetSizeOfFFData
.L3784:

; ..\EAS\BSW\Dem\Dem.c	  9849                  Dem_NumFFRecOfDTC++;
	movh.a	a15,#@his(Dem_NumFFRecOfDTC)
	ld.bu	d15,[a15]@los(Dem_NumFFRecOfDTC)
.L3785:
	add	d15,#1
	st.b	[a15]@los(Dem_NumFFRecOfDTC),d15
.L3786:

; ..\EAS\BSW\Dem\Dem.c	  9850  
; ..\EAS\BSW\Dem\Dem.c	  9851                  if(SizeOfFreezeFrame != 0)
	ld.hu	d15,[a10]0
.L3787:
	jeq	d15,#0,.L780
.L3788:

; ..\EAS\BSW\Dem\Dem.c	  9852                  {
; ..\EAS\BSW\Dem\Dem.c	  9853                      break;
	j	.L781
.L779:

; ..\EAS\BSW\Dem\Dem.c	  9854                  }
; ..\EAS\BSW\Dem\Dem.c	  9855              }
; ..\EAS\BSW\Dem\Dem.c	  9856              else
; ..\EAS\BSW\Dem\Dem.c	  9857              {
; ..\EAS\BSW\Dem\Dem.c	  9858                  Dem_DcmFilterInfo.FilteredValidFlag = FALSE;
	movh.a	a15,#@his(Dem_DcmFilterInfo)
.L3789:
	mov	d15,#0
.L3790:
	st.b	[a15]@los(Dem_DcmFilterInfo),d15
.L3791:

; ..\EAS\BSW\Dem\Dem.c	  9859                  Dem_DcmFilterInfo.NextFilteredDTCIndex = 0;
	movh.a	a15,#@his(Dem_DcmFilterInfo+242)
.L3792:
	st.h	[a15]@los(Dem_DcmFilterInfo+242),d15
.L3793:

; ..\EAS\BSW\Dem\Dem.c	  9860                  Dem_DcmFilterInfo.NumberOfFilteredDTC = 0;
	movh.a	a15,#@his(Dem_DcmFilterInfo+240)
.L3794:
	st.h	[a15]@los(Dem_DcmFilterInfo+240),d15
.L3795:

; ..\EAS\BSW\Dem\Dem.c	  9861  
; ..\EAS\BSW\Dem\Dem.c	  9862                  Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
	mov	d8,#1
.L780:
.L776:
	movh.a	a15,#@his(Dem_DcmFilterInfo+242)
.L3796:
	ld.hu	d15,[a15]@los(Dem_DcmFilterInfo+242)
.L3797:
	movh.a	a15,#@his(Dem_DcmFilterInfo+240)
.L3798:
	ld.hu	d0,[a15]@los(Dem_DcmFilterInfo+240)
.L3799:
	jlt.u	d15,d0,.L777

; ..\EAS\BSW\Dem\Dem.c	  9863              }
; ..\EAS\BSW\Dem\Dem.c	  9864          }
; ..\EAS\BSW\Dem\Dem.c	  9865  #else
; ..\EAS\BSW\Dem\Dem.c	  9866          Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
; ..\EAS\BSW\Dem\Dem.c	  9867  #endif
; ..\EAS\BSW\Dem\Dem.c	  9868      }
.L781:
.L775:

; ..\EAS\BSW\Dem\Dem.c	  9869      return Result;
	mov	d2,d8
.L2798:

; ..\EAS\BSW\Dem\Dem.c	  9870  }
	ret
.L1808:
	
__Dem_DcmGetNextFilteredRecord_function_end:
	.size	Dem_DcmGetNextFilteredRecord,__Dem_DcmGetNextFilteredRecord_function_end-Dem_DcmGetNextFilteredRecord
.L1302:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmGetDTCByOccurrenceTime',code,cluster('Dem_DcmGetDTCByOccurrenceTime')
	.sect	'.text.Dem.Dem_DcmGetDTCByOccurrenceTime'
	.align	2
	
	.global	Dem_DcmGetDTCByOccurrenceTime

; ..\EAS\BSW\Dem\Dem.c	  9871  
; ..\EAS\BSW\Dem\Dem.c	  9872  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  9873  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9874  * Function Name: Dem_DcmGetDTCByOccurrenceTime
; ..\EAS\BSW\Dem\Dem.c	  9875  *
; ..\EAS\BSW\Dem\Dem.c	  9876  * Description: Gets the DTC by occurrence time. There is no explicit parameter for the DTC-origin
; ..\EAS\BSW\Dem\Dem.c	  9877  *                  as the origin always is DEM_DTC_ORIGIN_PRIMARY_MEMORY.
; ..\EAS\BSW\Dem\Dem.c	  9878  *
; ..\EAS\BSW\Dem\Dem.c	  9879  * Inputs: DTCRequest: This parameter defines the request type of the DTC.
; ..\EAS\BSW\Dem\Dem.c	  9880  *
; ..\EAS\BSW\Dem\Dem.c	  9881  * Outputs: DTC: Receives the DTC value in respective format of the filter returned by this function.
; ..\EAS\BSW\Dem\Dem.c	  9882  *
; ..\EAS\BSW\Dem\Dem.c	  9883  * Return: Dem_ReturnGetDTCByOccurrenceTimeType: Status of the operation.
; ..\EAS\BSW\Dem\Dem.c	  9884  *
; ..\EAS\BSW\Dem\Dem.c	  9885  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  9886  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9887  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  9888  FUNC(Dem_ReturnGetDTCByOccurrenceTimeType, DEM_CODE) Dem_DcmGetDTCByOccurrenceTime
; Function Dem_DcmGetDTCByOccurrenceTime
.L1053:
Dem_DcmGetDTCByOccurrenceTime:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  9889  (
; ..\EAS\BSW\Dem\Dem.c	  9890      Dem_DTCRequestType DTCRequest,
; ..\EAS\BSW\Dem\Dem.c	  9891      P2VAR(uint32, AUTOMATIC, DEM_APPL_DATA) DTC
; ..\EAS\BSW\Dem\Dem.c	  9892  )
; ..\EAS\BSW\Dem\Dem.c	  9893  {
; ..\EAS\BSW\Dem\Dem.c	  9894      Dem_ReturnGetDTCByOccurrenceTimeType Result = DEM_OCCURR_OK;
	mov	d2,#0
.L2799:

; ..\EAS\BSW\Dem\Dem.c	  9895      uint16 EventId = DEM_DATA_INVALID_U16;
	mov.u	d0,#65535
.L2800:

; ..\EAS\BSW\Dem\Dem.c	  9896  
; ..\EAS\BSW\Dem\Dem.c	  9897      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3804:
	jne	d15,#2,.L783
.L3805:

; ..\EAS\BSW\Dem\Dem.c	  9898      {
; ..\EAS\BSW\Dem\Dem.c	  9899          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	  9900          DEM_DET_REPORT_ERROR(DEM_DCMGETDTCBYOCCURRENCETIME_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	  9901          Result = DEM_OCCURR_NOT_AVAILABLE;
; ..\EAS\BSW\Dem\Dem.c	  9902      }
; ..\EAS\BSW\Dem\Dem.c	  9903      else if(DTC == NULL_PTR)
	jz.a	a4,.L784
.L3806:

; ..\EAS\BSW\Dem\Dem.c	  9904      {
; ..\EAS\BSW\Dem\Dem.c	  9905          DEM_DET_REPORT_ERROR(DEM_DCMGETDTCBYOCCURRENCETIME_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	  9906          Result = DEM_OCCURR_NOT_AVAILABLE;
; ..\EAS\BSW\Dem\Dem.c	  9907      }
; ..\EAS\BSW\Dem\Dem.c	  9908      else
; ..\EAS\BSW\Dem\Dem.c	  9909      {
; ..\EAS\BSW\Dem\Dem.c	  9910          /*SWS_Dem_00219*/
; ..\EAS\BSW\Dem\Dem.c	  9911          switch(DTCRequest)
; ..\EAS\BSW\Dem\Dem.c	  9912          {
; ..\EAS\BSW\Dem\Dem.c	  9913              case DEM_FIRST_FAILED_DTC:
	jeq	d4,#1,.L785
.L3807:

; ..\EAS\BSW\Dem\Dem.c	  9914                  EventId = DEM_EVENT_FIRST_FAILED;
; ..\EAS\BSW\Dem\Dem.c	  9915                  break;
; ..\EAS\BSW\Dem\Dem.c	  9916  
; ..\EAS\BSW\Dem\Dem.c	  9917              case DEM_MOST_RECENT_FAILED_DTC:
	jeq	d4,#2,.L786
.L3808:

; ..\EAS\BSW\Dem\Dem.c	  9918                  EventId = DEM_EVENT_RECENT_FAILED;
; ..\EAS\BSW\Dem\Dem.c	  9919                  break;
; ..\EAS\BSW\Dem\Dem.c	  9920  
; ..\EAS\BSW\Dem\Dem.c	  9921              case DEM_FIRST_DET_CONFIRMED_DTC:
	jeq	d4,#3,.L787
.L3809:

; ..\EAS\BSW\Dem\Dem.c	  9922                  EventId = DEM_EVENT_FIRST_CONFIRMED;
; ..\EAS\BSW\Dem\Dem.c	  9923                  break;
; ..\EAS\BSW\Dem\Dem.c	  9924  
; ..\EAS\BSW\Dem\Dem.c	  9925              case DEM_MOST_REC_DET_CONFIRMED_DTC:
	jeq	d4,#4,.L788
.L3810:
	j	.L789
.L785:
	movh.a	a15,#@his(Dem_StorageMem)
	ld.hu	d0,[a15]@los(Dem_StorageMem)
.L3811:
	j	.L790
.L786:
	movh.a	a15,#@his(Dem_StorageMem+4)
	ld.hu	d0,[a15]@los(Dem_StorageMem+4)
.L3812:
	j	.L791
.L787:
	movh.a	a15,#@his(Dem_StorageMem+2)
	ld.hu	d0,[a15]@los(Dem_StorageMem+2)
.L3813:
	j	.L792
.L788:

; ..\EAS\BSW\Dem\Dem.c	  9926                  EventId = DEM_EVENT_RECENT_CONFIRMED;
	movh.a	a15,#@his(Dem_StorageMem+6)
	ld.hu	d0,[a15]@los(Dem_StorageMem+6)

; ..\EAS\BSW\Dem\Dem.c	  9927                  break;
; ..\EAS\BSW\Dem\Dem.c	  9928  
; ..\EAS\BSW\Dem\Dem.c	  9929              default:
; ..\EAS\BSW\Dem\Dem.c	  9930                  break;
; ..\EAS\BSW\Dem\Dem.c	  9931          }
; ..\EAS\BSW\Dem\Dem.c	  9932  
; ..\EAS\BSW\Dem\Dem.c	  9933          if(EventId < DEM_NUM_OF_EVENT)
.L792:
.L791:
.L790:
.L789:
	mov	d15,#116
.L3814:
	jge.u	d0,d15,.L793
.L3815:

; ..\EAS\BSW\Dem\Dem.c	  9934          {
; ..\EAS\BSW\Dem\Dem.c	  9935              *DTC = DEM_CFG_DTC_VALUE(DEM_CFG_EVENT_DTCREF(EventId));
	mul	d15,d0,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]4
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d15,#3
	ld.w	d15,[a15]4
.L3816:
	st.w	[a4],d15
.L3817:

; ..\EAS\BSW\Dem\Dem.c	  9936          }
; ..\EAS\BSW\Dem\Dem.c	  9937          else
; ..\EAS\BSW\Dem\Dem.c	  9938          {
; ..\EAS\BSW\Dem\Dem.c	  9939              /*SWS_Dem_00221*/
; ..\EAS\BSW\Dem\Dem.c	  9940              Result = DEM_OCCURR_NOT_AVAILABLE;
; ..\EAS\BSW\Dem\Dem.c	  9941          }
; ..\EAS\BSW\Dem\Dem.c	  9942      }
; ..\EAS\BSW\Dem\Dem.c	  9943      return Result;
; ..\EAS\BSW\Dem\Dem.c	  9944  }
	ret
.L793:
.L784:
.L783:
	mov	d2,#1
.L3818:
	ret
.L1815:
	
__Dem_DcmGetDTCByOccurrenceTime_function_end:
	.size	Dem_DcmGetDTCByOccurrenceTime,__Dem_DcmGetDTCByOccurrenceTime_function_end-Dem_DcmGetDTCByOccurrenceTime
.L1307:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmControlDTCStatusChangedNotification',code,cluster('Dem_DcmControlDTCStatusChangedNotification')
	.sect	'.text.Dem.Dem_DcmControlDTCStatusChangedNotification'
	.align	2
	
	.global	Dem_DcmControlDTCStatusChangedNotification

; ..\EAS\BSW\Dem\Dem.c	  9945  
; ..\EAS\BSW\Dem\Dem.c	  9946  #if(DEM_CFG_TRIGGER_DCM_REPORTS == STD_OFF)
; ..\EAS\BSW\Dem\Dem.c	  9947  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  9948  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9949  * Function Name: Dem_DcmControlDTCStatusChangedNotification
; ..\EAS\BSW\Dem\Dem.c	  9950  *
; ..\EAS\BSW\Dem\Dem.c	  9951  * Description: Controls the triggering of Dcm_DemTriggerOnDTCStatus.
; ..\EAS\BSW\Dem\Dem.c	  9952  *
; ..\EAS\BSW\Dem\Dem.c	  9953  * Inputs: TriggerNotification: This parameter specifies whether the triggering of the notification
; ..\EAS\BSW\Dem\Dem.c	  9954  *                                       shall be enabled (TRUE) or disabled (FALSE).
; ..\EAS\BSW\Dem\Dem.c	  9955  *
; ..\EAS\BSW\Dem\Dem.c	  9956  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  9957  *
; ..\EAS\BSW\Dem\Dem.c	  9958  * Return: None
; ..\EAS\BSW\Dem\Dem.c	  9959  *
; ..\EAS\BSW\Dem\Dem.c	  9960  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	  9961  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9962  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  9963  FUNC(void, DEM_CODE) Dem_DcmControlDTCStatusChangedNotification
; Function Dem_DcmControlDTCStatusChangedNotification
.L1055:
Dem_DcmControlDTCStatusChangedNotification:	.type	func

; ..\EAS\BSW\Dem\Dem.c	  9964  (
; ..\EAS\BSW\Dem\Dem.c	  9965      boolean TriggerNotification
; ..\EAS\BSW\Dem\Dem.c	  9966  )
; ..\EAS\BSW\Dem\Dem.c	  9967  {
; ..\EAS\BSW\Dem\Dem.c	  9968      /*SWS_Dem_00827*/
; ..\EAS\BSW\Dem\Dem.c	  9969  
; ..\EAS\BSW\Dem\Dem.c	  9970  }
	ret
.L2122:
	
__Dem_DcmControlDTCStatusChangedNotification_function_end:
	.size	Dem_DcmControlDTCStatusChangedNotification,__Dem_DcmControlDTCStatusChangedNotification_function_end-Dem_DcmControlDTCStatusChangedNotification
.L1542:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmDisableDTCRecordUpdate',code,cluster('Dem_DcmDisableDTCRecordUpdate')
	.sect	'.text.Dem.Dem_DcmDisableDTCRecordUpdate'
	.align	2
	
	.global	Dem_DcmDisableDTCRecordUpdate

; ..\EAS\BSW\Dem\Dem.c	  9971  #endif
; ..\EAS\BSW\Dem\Dem.c	  9972  
; ..\EAS\BSW\Dem\Dem.c	  9973  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	  9974  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9975  * Function Name: Dem_DcmDisableDTCRecordUpdate
; ..\EAS\BSW\Dem\Dem.c	  9976  *
; ..\EAS\BSW\Dem\Dem.c	  9977  * Description: Disables the event memory update of a specific DTC (only one at one time).
; ..\EAS\BSW\Dem\Dem.c	  9978  *
; ..\EAS\BSW\Dem\Dem.c	  9979  * Inputs: DTC: Selects the DTC in UDS format, for which DTC record update shall be disabled.
; ..\EAS\BSW\Dem\Dem.c	  9980  *            DTCOrigin: If the Dem supports more than one event memory, this parameter is used
; ..\EAS\BSW\Dem\Dem.c	  9981  *                           to select the source memory for which DTC record update shall be disabled.
; ..\EAS\BSW\Dem\Dem.c	  9982  *
; ..\EAS\BSW\Dem\Dem.c	  9983  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	  9984  *
; ..\EAS\BSW\Dem\Dem.c	  9985  * Return: Dem_ReturnDisableDTCRecordUpdateType: Status of the operation to disable the
; ..\EAS\BSW\Dem\Dem.c	  9986  *                            event memory update of a specific DTC.
; ..\EAS\BSW\Dem\Dem.c	  9987  *
; ..\EAS\BSW\Dem\Dem.c	  9988  * Limitations: Synchronous
; ..\EAS\BSW\Dem\Dem.c	  9989  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	  9990  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	  9991  FUNC(Dem_ReturnDisableDTCRecordUpdateType, DEM_CODE) Dem_DcmDisableDTCRecordUpdate
; Function Dem_DcmDisableDTCRecordUpdate
.L1057:
Dem_DcmDisableDTCRecordUpdate:	.type	func
	sub.a	a10,#8
.L2801:

; ..\EAS\BSW\Dem\Dem.c	  9992  (
; ..\EAS\BSW\Dem\Dem.c	  9993      uint32 DTC,
; ..\EAS\BSW\Dem\Dem.c	  9994      Dem_DTCOriginType DTCOrigin
; ..\EAS\BSW\Dem\Dem.c	  9995  )
; ..\EAS\BSW\Dem\Dem.c	  9996  {
; ..\EAS\BSW\Dem\Dem.c	  9997      Dem_ReturnDisableDTCRecordUpdateType Result = DEM_DISABLE_DTCRECUP_OK;
	mov	d8,#0
.L2803:

; ..\EAS\BSW\Dem\Dem.c	  9998      uint16 DtcId;
; ..\EAS\BSW\Dem\Dem.c	  9999  
; ..\EAS\BSW\Dem\Dem.c	 10000      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3823:
	jne	d15,#2,.L796
.L3824:

; ..\EAS\BSW\Dem\Dem.c	 10001      {
; ..\EAS\BSW\Dem\Dem.c	 10002          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	 10003          DEM_DET_REPORT_ERROR(DEM_DCMDISABLEDTCRECORDUPDATE_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	 10004      }
; ..\EAS\BSW\Dem\Dem.c	 10005      else if(DEM_DTC_ORIGIN_PRIMARY_MEMORY != DTCOrigin)
	jeq	d5,#1,.L797
.L3825:

; ..\EAS\BSW\Dem\Dem.c	 10006      {
; ..\EAS\BSW\Dem\Dem.c	 10007          /*SWS_Dem_00171*/
; ..\EAS\BSW\Dem\Dem.c	 10008          Result = DEM_DISABLE_DTCRECUP_WRONG_DTCORIGIN;
	mov	d8,#2
.L3826:
	j	.L798
.L797:

; ..\EAS\BSW\Dem\Dem.c	 10009      }
; ..\EAS\BSW\Dem\Dem.c	 10010      else if(E_OK != DemInternal_CheckDtcValid(DTC, &DtcId))
	mov.aa	a4,a10
	call	DemInternal_CheckDtcValid
.L2802:
	jeq	d2,#0,.L799
.L3827:

; ..\EAS\BSW\Dem\Dem.c	 10011      {
; ..\EAS\BSW\Dem\Dem.c	 10012          /*SWS_Dem_00172*/
; ..\EAS\BSW\Dem\Dem.c	 10013          Result = DEM_DISABLE_DTCRECUP_WRONG_DTC;
	mov	d8,#1
.L3828:
	j	.L800
.L799:

; ..\EAS\BSW\Dem\Dem.c	 10014      }
; ..\EAS\BSW\Dem\Dem.c	 10015      else
; ..\EAS\BSW\Dem\Dem.c	 10016      {
; ..\EAS\BSW\Dem\Dem.c	 10017          SchM_Enter_Dem_DEM_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\Dem\Dem.c	 10018          /*SWS_Dem_00270*/
; ..\EAS\BSW\Dem\Dem.c	 10019          Dem_DtcUpDateState[DtcId] = FALSE;
	ld.hu	d15,[a10]0
.L3829:
	movh.a	a15,#@his(Dem_DtcUpDateState)
	lea	a15,[a15]@los(Dem_DtcUpDateState)
.L3830:
	addsc.a	a15,a15,d15,#0
.L3831:
	mov	d15,#0
.L3832:
	st.b	[a15],d15
.L800:
.L798:
.L796:

; ..\EAS\BSW\Dem\Dem.c	 10020          SchM_Exit_Dem_DEM_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\Dem\Dem.c	 10021      }
; ..\EAS\BSW\Dem\Dem.c	 10022      return Result;
	mov	d2,d8
.L2804:

; ..\EAS\BSW\Dem\Dem.c	 10023  }
	ret
.L1820:
	
__Dem_DcmDisableDTCRecordUpdate_function_end:
	.size	Dem_DcmDisableDTCRecordUpdate,__Dem_DcmDisableDTCRecordUpdate_function_end-Dem_DcmDisableDTCRecordUpdate
.L1312:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmEnableDTCRecordUpdate',code,cluster('Dem_DcmEnableDTCRecordUpdate')
	.sect	'.text.Dem.Dem_DcmEnableDTCRecordUpdate'
	.align	2
	
	.global	Dem_DcmEnableDTCRecordUpdate

; ..\EAS\BSW\Dem\Dem.c	 10024  
; ..\EAS\BSW\Dem\Dem.c	 10025  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 10026  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10027  * Function Name: Dem_DcmEnableDTCRecordUpdate
; ..\EAS\BSW\Dem\Dem.c	 10028  *
; ..\EAS\BSW\Dem\Dem.c	 10029  * Description: Enables the event memory update of the DTC disabled by
; ..\EAS\BSW\Dem\Dem.c	 10030  *                  Dem_DcmDisableDTCRecordUpdate() before.
; ..\EAS\BSW\Dem\Dem.c	 10031  *
; ..\EAS\BSW\Dem\Dem.c	 10032  * Inputs: None
; ..\EAS\BSW\Dem\Dem.c	 10033  *
; ..\EAS\BSW\Dem\Dem.c	 10034  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	 10035  *
; ..\EAS\BSW\Dem\Dem.c	 10036  * Return: Std_ReturnType: Always E_OK is returned.
; ..\EAS\BSW\Dem\Dem.c	 10037  *
; ..\EAS\BSW\Dem\Dem.c	 10038  * Limitations: Synchronous
; ..\EAS\BSW\Dem\Dem.c	 10039  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10040  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 10041  FUNC(Std_ReturnType, DEM_CODE) Dem_DcmEnableDTCRecordUpdate
; Function Dem_DcmEnableDTCRecordUpdate
.L1059:
Dem_DcmEnableDTCRecordUpdate:	.type	func

; ..\EAS\BSW\Dem\Dem.c	 10042  (
; ..\EAS\BSW\Dem\Dem.c	 10043      void
; ..\EAS\BSW\Dem\Dem.c	 10044  )
; ..\EAS\BSW\Dem\Dem.c	 10045  {
; ..\EAS\BSW\Dem\Dem.c	 10046      uint16 i;
; ..\EAS\BSW\Dem\Dem.c	 10047      if(Dem_State != DEM_NORMAL)
	movh.a	a15,#@his(Dem_State)
	ld.bu	d15,[a15]@los(Dem_State)
.L3837:
	jne	d15,#2,.L802
.L3838:

; ..\EAS\BSW\Dem\Dem.c	 10048      {
; ..\EAS\BSW\Dem\Dem.c	 10049          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	 10050          DEM_DET_REPORT_ERROR(DEM_DCMENABLEDTCRECORDUPDATE_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	 10051      }
; ..\EAS\BSW\Dem\Dem.c	 10052      else
; ..\EAS\BSW\Dem\Dem.c	 10053      {
; ..\EAS\BSW\Dem\Dem.c	 10054          SchM_Enter_Dem_DEM_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\Dem\Dem.c	 10055  
; ..\EAS\BSW\Dem\Dem.c	 10056          for(i = 0; i < DEM_NUM_OF_DTC; i++)
	mov	d15,#0
.L2805:

; ..\EAS\BSW\Dem\Dem.c	 10057          {
; ..\EAS\BSW\Dem\Dem.c	 10058              /*SWS_Dem_00271*/
; ..\EAS\BSW\Dem\Dem.c	 10059              Dem_DtcUpDateState[i] = TRUE;
	mov	d0,#1
.L3839:
	mov	d1,#116
.L3840:
	j	.L803
.L804:
	movh.a	a15,#@his(Dem_DtcUpDateState)
	lea	a15,[a15]@los(Dem_DtcUpDateState)
.L3841:
	addsc.a	a15,a15,d15,#0
.L3842:
	st.b	[a15],d0
.L3843:
	add	d15,#1
.L803:
	jlt.u	d15,d1,.L804
.L802:

; ..\EAS\BSW\Dem\Dem.c	 10060          }
; ..\EAS\BSW\Dem\Dem.c	 10061  
; ..\EAS\BSW\Dem\Dem.c	 10062          SchM_Exit_Dem_DEM_EXCLUSIVE_AREA_0();
; ..\EAS\BSW\Dem\Dem.c	 10063      }
; ..\EAS\BSW\Dem\Dem.c	 10064  
; ..\EAS\BSW\Dem\Dem.c	 10065      return E_OK;
	mov	d2,#0
.L3844:

; ..\EAS\BSW\Dem\Dem.c	 10066  }
	ret
.L1825:
	
__Dem_DcmEnableDTCRecordUpdate_function_end:
	.size	Dem_DcmEnableDTCRecordUpdate,__Dem_DcmEnableDTCRecordUpdate_function_end-Dem_DcmEnableDTCRecordUpdate
.L1317:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmGetFreezeFrameDataByDTC',code,cluster('Dem_DcmGetFreezeFrameDataByDTC')
	.sect	'.text.Dem.Dem_DcmGetFreezeFrameDataByDTC'
	.align	2
	
	.global	Dem_DcmGetFreezeFrameDataByDTC

; ..\EAS\BSW\Dem\Dem.c	 10067  
; ..\EAS\BSW\Dem\Dem.c	 10068  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 10069  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10070  * Function Name: Dem_DcmGetFreezeFrameDataByDTC
; ..\EAS\BSW\Dem\Dem.c	 10071  *
; ..\EAS\BSW\Dem\Dem.c	 10072  * Description: Gets freeze frame data by DTC. The function stores the data in the provided DestBuffer.
; ..\EAS\BSW\Dem\Dem.c	 10073  *
; ..\EAS\BSW\Dem\Dem.c	 10074  * Inputs: DTC: Diagnostic Trouble Code in UDS format.
; ..\EAS\BSW\Dem\Dem.c	 10075  *            DTCOrigin: If the Dem supports more than one event memory,this parameter is used
; ..\EAS\BSW\Dem\Dem.c	 10076  *                           to select the source memory the DTCs shall be read from.
; ..\EAS\BSW\Dem\Dem.c	 10077  *            RecordNumber: This parameter is a unique identifier for a freeze frame record as defined
; ..\EAS\BSW\Dem\Dem.c	 10078  *                                 in ISO 15031-5 and ISO 14229-1. This record number is unique per DTC
; ..\EAS\BSW\Dem\Dem.c	 10079  *                                 (relative addressing). The value 0xFF is not allowed. The value 0x00 indicates
; ..\EAS\BSW\Dem\Dem.c	 10080  *                                 the DTC-specific OBD freeze frame.
; ..\EAS\BSW\Dem\Dem.c	 10081  *            BufSize: When the function is called this parameter contains the maximum number of
; ..\EAS\BSW\Dem\Dem.c	 10082  *                        data bytes that can be written to the buffer.
; ..\EAS\BSW\Dem\Dem.c	 10083  *
; ..\EAS\BSW\Dem\Dem.c	 10084  * Outputs: BufSize: The function returns the actual number of written data bytes in this parameter.
; ..\EAS\BSW\Dem\Dem.c	 10085  *              DestBuffer: This parameter contains a byte pointer that points to the buffer, to which
; ..\EAS\BSW\Dem\Dem.c	 10086  *                              the freeze frame data record shall be written to. The format is: {RecordNumber,
; ..\EAS\BSW\Dem\Dem.c	 10087  *                              NumOfDIDs, DID[1], data[1], ..., DID[N], data[N]}
; ..\EAS\BSW\Dem\Dem.c	 10088  *
; ..\EAS\BSW\Dem\Dem.c	 10089  * Return: Dem_ReturnGetFreezeFrameDataByDTCType:Status of the operation to retrieve
; ..\EAS\BSW\Dem\Dem.c	 10090  *                                                                          freeze frame data by DTC.
; ..\EAS\BSW\Dem\Dem.c	 10091  *
; ..\EAS\BSW\Dem\Dem.c	 10092  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	 10093  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10094  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 10095  FUNC(Dem_ReturnGetFreezeFrameDataByDTCType, DEM_CODE) Dem_DcmGetFreezeFrameDataByDTC
; Function Dem_DcmGetFreezeFrameDataByDTC
.L1061:
Dem_DcmGetFreezeFrameDataByDTC:	.type	func
	sub.a	a10,#8
.L2806:
	mov	e8,d5,d4
	mov	d10,d6
.L2809:
	mov.aa	a12,a4
.L2810:
	mov.aa	a15,a5
.L2811:

; ..\EAS\BSW\Dem\Dem.c	 10096  (
; ..\EAS\BSW\Dem\Dem.c	 10097      uint32 DTC,
; ..\EAS\BSW\Dem\Dem.c	 10098      Dem_DTCOriginType DTCOrigin,
; ..\EAS\BSW\Dem\Dem.c	 10099      uint8 RecordNumber,
; ..\EAS\BSW\Dem\Dem.c	 10100      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) DestBuffer,
; ..\EAS\BSW\Dem\Dem.c	 10101      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) BufSize
; ..\EAS\BSW\Dem\Dem.c	 10102  )
; ..\EAS\BSW\Dem\Dem.c	 10103  {
; ..\EAS\BSW\Dem\Dem.c	 10104      Dem_ReturnGetFreezeFrameDataByDTCType Result = DEM_GET_FFDATABYDTC_OK;
	mov	d12,#0
.L2813:

; ..\EAS\BSW\Dem\Dem.c	 10105      Dem_ReturnGetSizeOfDataByDTCType ret = DEM_GETSIZEBYDTC_OK;
; ..\EAS\BSW\Dem\Dem.c	 10106      uint16 FFDataOffset;
; ..\EAS\BSW\Dem\Dem.c	 10107      uint16 DtcId;
; ..\EAS\BSW\Dem\Dem.c	 10108      uint32 Size;
; ..\EAS\BSW\Dem\Dem.c	 10109  #if(DEM_MAX_FFSIZE_OF_DTC > 0U)
; ..\EAS\BSW\Dem\Dem.c	 10110      uint8 *DestBufferPtr;
; ..\EAS\BSW\Dem\Dem.c	 10111  #endif
; ..\EAS\BSW\Dem\Dem.c	 10112      if(DestBuffer == NULL_PTR)
	jnz.a	a12,.L806
.L3849:

; ..\EAS\BSW\Dem\Dem.c	 10113      {
; ..\EAS\BSW\Dem\Dem.c	 10114          Result = DEM_GET_FFDATABYDTC_WRONG_BUFFERSIZE;
	mov	d12,#4
.L3850:
	j	.L807
.L806:

; ..\EAS\BSW\Dem\Dem.c	 10115      }
; ..\EAS\BSW\Dem\Dem.c	 10116      else if(E_OK != DemInternal_CheckDtcValid(DTC, &DtcId))
	lea	a4,[a10]2
.L2808:
	call	DemInternal_CheckDtcValid
.L2807:
	jne	d2,#0,.L808
.L3851:

; ..\EAS\BSW\Dem\Dem.c	 10117      {
; ..\EAS\BSW\Dem\Dem.c	 10118          /*SWS_Dem_00172*/
; ..\EAS\BSW\Dem\Dem.c	 10119          Result = DEM_GET_FFDATABYDTC_WRONG_DTC;
; ..\EAS\BSW\Dem\Dem.c	 10120      }
; ..\EAS\BSW\Dem\Dem.c	 10121      else
; ..\EAS\BSW\Dem\Dem.c	 10122      {
; ..\EAS\BSW\Dem\Dem.c	 10123          Size = (uint32)(*BufSize);
	ld.hu	d11,[a15]0
.L2814:

; ..\EAS\BSW\Dem\Dem.c	 10124          ret = DemInternal_GetSizeOfFFData(DTC, DTCOrigin, RecordNumber, BufSize, &FFDataOffset);
	mov.aa	a5,a10
.L2815:
	mov	e4,d9,d8
.L2816:
	mov	d6,d10
.L2817:
	mov.aa	a4,a15
.L2819:
	call	DemInternal_GetSizeOfFFData
.L2818:

; ..\EAS\BSW\Dem\Dem.c	 10125          if(ret == DEM_GETSIZEBYDTC_WRONG_DTC)
	jne	d2,#1,.L809
.L808:

; ..\EAS\BSW\Dem\Dem.c	 10126          {
; ..\EAS\BSW\Dem\Dem.c	 10127              /*SWS_Dem_00172*/
; ..\EAS\BSW\Dem\Dem.c	 10128              Result = DEM_GET_FFDATABYDTC_WRONG_DTC;
	mov	d12,#1
.L3852:
	j	.L810
.L809:

; ..\EAS\BSW\Dem\Dem.c	 10129          }
; ..\EAS\BSW\Dem\Dem.c	 10130          else if(ret == DEM_GETSIZEBYDTC_WRONG_DTCORIGIN)
	jne	d2,#2,.L811
.L3853:

; ..\EAS\BSW\Dem\Dem.c	 10131          {
; ..\EAS\BSW\Dem\Dem.c	 10132              /*SWS_Dem_00171*/
; ..\EAS\BSW\Dem\Dem.c	 10133              Result = DEM_GET_FFDATABYDTC_WRONG_DTCORIGIN;
	mov	d12,#2
.L3854:
	j	.L812
.L811:

; ..\EAS\BSW\Dem\Dem.c	 10134          }
; ..\EAS\BSW\Dem\Dem.c	 10135          else if(ret == DEM_GETSIZEBYDTC_WRONG_RECNUM)
	jne	d2,#3,.L813
.L3855:

; ..\EAS\BSW\Dem\Dem.c	 10136          {
; ..\EAS\BSW\Dem\Dem.c	 10137              Result = DEM_GET_FFDATABYDTC_WRONG_RECORDNUMBER;
	mov	d12,#3
.L3856:
	j	.L814
.L813:

; ..\EAS\BSW\Dem\Dem.c	 10138          }
; ..\EAS\BSW\Dem\Dem.c	 10139          else if(ret == DEM_GETSIZEBYDTC_PENDING)
	jne	d2,#4,.L815
.L3857:

; ..\EAS\BSW\Dem\Dem.c	 10140          {
; ..\EAS\BSW\Dem\Dem.c	 10141              Result = DEM_GET_FFDATABYDTC_PENDING;
	mov	d12,#5
.L815:
.L814:
.L812:
.L810:
.L807:

; ..\EAS\BSW\Dem\Dem.c	 10142          }
; ..\EAS\BSW\Dem\Dem.c	 10143          else/*(ret == DEM_GETSIZEBYDTC_OK)*/
; ..\EAS\BSW\Dem\Dem.c	 10144          {
; ..\EAS\BSW\Dem\Dem.c	 10145              /*Result = DEM_GET_FFDATABYDTC_OK;*/
; ..\EAS\BSW\Dem\Dem.c	 10146          }
; ..\EAS\BSW\Dem\Dem.c	 10147      }
; ..\EAS\BSW\Dem\Dem.c	 10148  
; ..\EAS\BSW\Dem\Dem.c	 10149      if(Result == DEM_GET_FFDATABYDTC_OK)
	jne	d12,#0,.L816
.L3858:

; ..\EAS\BSW\Dem\Dem.c	 10150      {
; ..\EAS\BSW\Dem\Dem.c	 10151          if(Size >= (uint32)(*BufSize))
	ld.hu	d4,[a15]0
.L2820:
	jlt.u	d11,d4,.L817
.L2821:

; ..\EAS\BSW\Dem\Dem.c	 10152          {
; ..\EAS\BSW\Dem\Dem.c	 10153              Size = (uint32)(*BufSize);
; ..\EAS\BSW\Dem\Dem.c	 10154  #if(DEM_MAX_FFSIZE_OF_DTC > 0U)
; ..\EAS\BSW\Dem\Dem.c	 10155              /*SWS_Dem_00071*/
; ..\EAS\BSW\Dem\Dem.c	 10156              if(RecordNumber == 0xFFU)
	mov	d15,#255
.L3859:
	jne	d15,d10,.L818
.L3860:

; ..\EAS\BSW\Dem\Dem.c	 10157              {
; ..\EAS\BSW\Dem\Dem.c	 10158                  DestBufferPtr = DestBuffer;
; ..\EAS\BSW\Dem\Dem.c	 10159                  DemInternal_GetAllFFData(DtcId, DestBufferPtr);
	ld.hu	d4,[a10]2
.L3861:
	mov.aa	a4,a12
.L2822:
	call	DemInternal_GetAllFFData
.L2823:
	j	.L819
.L818:

; ..\EAS\BSW\Dem\Dem.c	 10160              }
; ..\EAS\BSW\Dem\Dem.c	 10161              else
; ..\EAS\BSW\Dem\Dem.c	 10162              {
; ..\EAS\BSW\Dem\Dem.c	 10163                  Bsw_MemCpy(DestBuffer, (DEM_PRIMARY_FFDATA_PTR((DEM_DTC_DATAENTRYREF(DtcId))) + FFDataOffset), Size);
	ld.hu	d0,[a10]2
	mul	d15,d0,#6
	movh.a	a15,#@his(Dem_StorageMem)
.L2812:
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]1868
	mul	d15,d15,#56
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L3862:
	ld.hu	d15,[a10]0
.L3863:
	addsc.a	a15,a15,d15,#0
	lea	a5,[a15]2565
.L3864:
	mov.aa	a4,a12
.L2824:
	call	Bsw_MemCpy
.L2825:
	j	.L820
.L817:

; ..\EAS\BSW\Dem\Dem.c	 10164              }
; ..\EAS\BSW\Dem\Dem.c	 10165  #endif
; ..\EAS\BSW\Dem\Dem.c	 10166          }
; ..\EAS\BSW\Dem\Dem.c	 10167          else
; ..\EAS\BSW\Dem\Dem.c	 10168          {
; ..\EAS\BSW\Dem\Dem.c	 10169              Result = DEM_GET_FFDATABYDTC_WRONG_BUFFERSIZE;
	mov	d12,#4
.L820:
.L819:
.L816:

; ..\EAS\BSW\Dem\Dem.c	 10170          }
; ..\EAS\BSW\Dem\Dem.c	 10171      }
; ..\EAS\BSW\Dem\Dem.c	 10172      else
; ..\EAS\BSW\Dem\Dem.c	 10173      {
; ..\EAS\BSW\Dem\Dem.c	 10174          /*Result != DEM_RECORD_OK*/
; ..\EAS\BSW\Dem\Dem.c	 10175      }
; ..\EAS\BSW\Dem\Dem.c	 10176      return Result;
	mov	d2,d12
.L2826:

; ..\EAS\BSW\Dem\Dem.c	 10177  }
	ret
.L1827:
	
__Dem_DcmGetFreezeFrameDataByDTC_function_end:
	.size	Dem_DcmGetFreezeFrameDataByDTC,__Dem_DcmGetFreezeFrameDataByDTC_function_end-Dem_DcmGetFreezeFrameDataByDTC
.L1322:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmGetSizeOfFreezeFrameByDTC',code,cluster('Dem_DcmGetSizeOfFreezeFrameByDTC')
	.sect	'.text.Dem.Dem_DcmGetSizeOfFreezeFrameByDTC'
	.align	2
	
	.global	Dem_DcmGetSizeOfFreezeFrameByDTC

; ..\EAS\BSW\Dem\Dem.c	 10178  
; ..\EAS\BSW\Dem\Dem.c	 10179  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 10180  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10181  * Function Name: Dem_DcmGetSizeOfFreezeFrameByDTC
; ..\EAS\BSW\Dem\Dem.c	 10182  *
; ..\EAS\BSW\Dem\Dem.c	 10183  * Description: Gets the size of freeze frame data by DTC.
; ..\EAS\BSW\Dem\Dem.c	 10184  *
; ..\EAS\BSW\Dem\Dem.c	 10185  * Inputs: DTC: Diagnostic Trouble Code in UDS format.
; ..\EAS\BSW\Dem\Dem.c	 10186  *            DTCOrigin: If the Dem supports more than one event memory,this parameter is used
; ..\EAS\BSW\Dem\Dem.c	 10187  *                           to select the source memory the DTCs shall be read from.
; ..\EAS\BSW\Dem\Dem.c	 10188  *            RecordNumber: This parameter is a unique identifier for a freeze frame record as defined
; ..\EAS\BSW\Dem\Dem.c	 10189  *                                 in ISO 15031-5 and ISO 14229-1. This record number is unique per DTC
; ..\EAS\BSW\Dem\Dem.c	 10190  *                                 (relative addressing). The value 0xFF is explicitly allowed to request the
; ..\EAS\BSW\Dem\Dem.c	 10191  *                                 overall size.
; ..\EAS\BSW\Dem\Dem.c	 10192  *
; ..\EAS\BSW\Dem\Dem.c	 10193  * Outputs: SizeOfFreezeFrame: Number of bytes in the requested freeze frame record.
; ..\EAS\BSW\Dem\Dem.c	 10194  *
; ..\EAS\BSW\Dem\Dem.c	 10195  * Return: Dem_ReturnGetSizeOfDataByDTCType:Status of the operation to retrieve the size of
; ..\EAS\BSW\Dem\Dem.c	 10196  *                                                                 freeze frame data.
; ..\EAS\BSW\Dem\Dem.c	 10197  *
; ..\EAS\BSW\Dem\Dem.c	 10198  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	 10199  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10200  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 10201  FUNC(Dem_ReturnGetSizeOfDataByDTCType, DEM_CODE) Dem_DcmGetSizeOfFreezeFrameByDTC
; Function Dem_DcmGetSizeOfFreezeFrameByDTC
.L1063:
Dem_DcmGetSizeOfFreezeFrameByDTC:	.type	func
	sub.a	a10,#8
.L2827:

; ..\EAS\BSW\Dem\Dem.c	 10202  (
; ..\EAS\BSW\Dem\Dem.c	 10203      uint32 DTC,
; ..\EAS\BSW\Dem\Dem.c	 10204      Dem_DTCOriginType DTCOrigin,
; ..\EAS\BSW\Dem\Dem.c	 10205      uint8 RecordNumber,
; ..\EAS\BSW\Dem\Dem.c	 10206      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) SizeOfFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	 10207  )
; ..\EAS\BSW\Dem\Dem.c	 10208  {
; ..\EAS\BSW\Dem\Dem.c	 10209      Dem_ReturnGetSizeOfDataByDTCType Result = DEM_GETSIZEBYDTC_OK;
; ..\EAS\BSW\Dem\Dem.c	 10210      uint16 FFDataOffset;
; ..\EAS\BSW\Dem\Dem.c	 10211      /*SWS_Dem_00074*/
; ..\EAS\BSW\Dem\Dem.c	 10212      Result = DemInternal_GetSizeOfFFData(DTC, DTCOrigin, RecordNumber, SizeOfFreezeFrame, &FFDataOffset);
	mov.aa	a5,a10
	j	DemInternal_GetSizeOfFFData
.L1839:
	
__Dem_DcmGetSizeOfFreezeFrameByDTC_function_end:
	.size	Dem_DcmGetSizeOfFreezeFrameByDTC,__Dem_DcmGetSizeOfFreezeFrameByDTC_function_end-Dem_DcmGetSizeOfFreezeFrameByDTC
.L1327:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmGetExtendedDataRecordByDTC',code,cluster('Dem_DcmGetExtendedDataRecordByDTC')
	.sect	'.text.Dem.Dem_DcmGetExtendedDataRecordByDTC'
	.align	2
	
	.global	Dem_DcmGetExtendedDataRecordByDTC

; ..\EAS\BSW\Dem\Dem.c	 10213  
; ..\EAS\BSW\Dem\Dem.c	 10214      return Result;
; ..\EAS\BSW\Dem\Dem.c	 10215  }
; ..\EAS\BSW\Dem\Dem.c	 10216  
; ..\EAS\BSW\Dem\Dem.c	 10217  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 10218  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10219  * Function Name: Dem_DcmGetExtendedDataRecordByDTC
; ..\EAS\BSW\Dem\Dem.c	 10220  *
; ..\EAS\BSW\Dem\Dem.c	 10221  * Description: Gets extended data by DTC. The function stores the data in the
; ..\EAS\BSW\Dem\Dem.c	 10222  *              provided DestBuffer.
; ..\EAS\BSW\Dem\Dem.c	 10223  *
; ..\EAS\BSW\Dem\Dem.c	 10224  * Inputs: DTC: Diagnostic Trouble Code in UDS format.
; ..\EAS\BSW\Dem\Dem.c	 10225  *         DTCOrigin: If the Dem supports more than one event memory,this parameter is used
; ..\EAS\BSW\Dem\Dem.c	 10226  *                    to select the source memory the DTCs shall be read from.
; ..\EAS\BSW\Dem\Dem.c	 10227  *         ExtendedDataNumber: Identification/Number of requested extended data record.
; ..\EAS\BSW\Dem\Dem.c	 10228  *                             The values 0xFE and 0xFF are not allowed.
; ..\EAS\BSW\Dem\Dem.c	 10229  *         BufSize: When the function is called this parameter contains the maximum number of
; ..\EAS\BSW\Dem\Dem.c	 10230  *                  data bytes that can be written to the buffer.
; ..\EAS\BSW\Dem\Dem.c	 10231  *
; ..\EAS\BSW\Dem\Dem.c	 10232  * Outputs: BufSize: The function returns the actual number of written data bytes in this parameter.
; ..\EAS\BSW\Dem\Dem.c	 10233  *          DestBuffer: This parameter contains a byte pointer that points to the buffer, to which
; ..\EAS\BSW\Dem\Dem.c	 10234  *                      the extended data record shall be written to. The format is raw
; ..\EAS\BSW\Dem\Dem.c	 10235  *                      hexadecimal values and contains no header-information.
; ..\EAS\BSW\Dem\Dem.c	 10236  *
; ..\EAS\BSW\Dem\Dem.c	 10237  * Return: Dem_ReturnGetExtendedDataRecordByDTCType:Status of the operation to retrieve
; ..\EAS\BSW\Dem\Dem.c	 10238  *         extended data by DTC.
; ..\EAS\BSW\Dem\Dem.c	 10239  *
; ..\EAS\BSW\Dem\Dem.c	 10240  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	 10241  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10242  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 10243  FUNC(Dem_ReturnGetExtendedDataRecordByDTCType, DEM_CODE) Dem_DcmGetExtendedDataRecordByDTC
; Function Dem_DcmGetExtendedDataRecordByDTC
.L1065:
Dem_DcmGetExtendedDataRecordByDTC:	.type	func
	sub.a	a10,#8
.L2828:
	mov	e8,d5,d4
	mov	d10,d6
.L2831:
	mov.aa	a12,a4
.L2832:
	mov.aa	a15,a5
.L2833:

; ..\EAS\BSW\Dem\Dem.c	 10244  (
; ..\EAS\BSW\Dem\Dem.c	 10245      uint32 DTC,
; ..\EAS\BSW\Dem\Dem.c	 10246      Dem_DTCOriginType DTCOrigin,
; ..\EAS\BSW\Dem\Dem.c	 10247      uint8 ExtendedDataNumber,
; ..\EAS\BSW\Dem\Dem.c	 10248      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) DestBuffer,
; ..\EAS\BSW\Dem\Dem.c	 10249      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) BufSize
; ..\EAS\BSW\Dem\Dem.c	 10250  )
; ..\EAS\BSW\Dem\Dem.c	 10251  {
; ..\EAS\BSW\Dem\Dem.c	 10252      Dem_ReturnGetExtendedDataRecordByDTCType Result = DEM_RECORD_OK;
	mov	d12,#0
.L2835:

; ..\EAS\BSW\Dem\Dem.c	 10253      Dem_ReturnGetSizeOfDataByDTCType ret = DEM_GETSIZEBYDTC_OK;
; ..\EAS\BSW\Dem\Dem.c	 10254      uint16 ExtDataOffset;
; ..\EAS\BSW\Dem\Dem.c	 10255      uint16 DtcId;
; ..\EAS\BSW\Dem\Dem.c	 10256      uint32 Size;
; ..\EAS\BSW\Dem\Dem.c	 10257  #if(DEM_MAX_EXTSIZE_OF_DTC > 0U)
; ..\EAS\BSW\Dem\Dem.c	 10258      uint8 *DestBufferPtr;
; ..\EAS\BSW\Dem\Dem.c	 10259  #endif
; ..\EAS\BSW\Dem\Dem.c	 10260      if(DestBuffer == NULL_PTR)
	jnz.a	a12,.L823
.L3873:

; ..\EAS\BSW\Dem\Dem.c	 10261      {
; ..\EAS\BSW\Dem\Dem.c	 10262          Result = DEM_RECORD_WRONG_BUFFERSIZE;
	mov	d12,#4
.L3874:
	j	.L824
.L823:

; ..\EAS\BSW\Dem\Dem.c	 10263      }
; ..\EAS\BSW\Dem\Dem.c	 10264      else if(E_OK != DemInternal_CheckDtcValid(DTC, &DtcId))
	lea	a4,[a10]2
.L2830:
	call	DemInternal_CheckDtcValid
.L2829:
	jne	d2,#0,.L825
.L3875:

; ..\EAS\BSW\Dem\Dem.c	 10265      {
; ..\EAS\BSW\Dem\Dem.c	 10266          /*SWS_Dem_00172*/
; ..\EAS\BSW\Dem\Dem.c	 10267          Result = DEM_RECORD_WRONG_DTC;
; ..\EAS\BSW\Dem\Dem.c	 10268      }
; ..\EAS\BSW\Dem\Dem.c	 10269      else
; ..\EAS\BSW\Dem\Dem.c	 10270      {
; ..\EAS\BSW\Dem\Dem.c	 10271          Size = (uint32)(*BufSize);
	ld.hu	d11,[a15]0
.L2836:

; ..\EAS\BSW\Dem\Dem.c	 10272  
; ..\EAS\BSW\Dem\Dem.c	 10273          ret = DemInternal_GetSizeOfExtendedData(DTC, DTCOrigin, ExtendedDataNumber, BufSize, &ExtDataOffset);
	mov.aa	a5,a10
.L2837:
	mov	e4,d9,d8
.L2838:
	mov	d6,d10
.L2839:
	mov.aa	a4,a15
.L2841:
	call	DemInternal_GetSizeOfExtendedData
.L2840:

; ..\EAS\BSW\Dem\Dem.c	 10274          if(ret == DEM_GETSIZEBYDTC_WRONG_DTC)
	jne	d2,#1,.L826
.L825:

; ..\EAS\BSW\Dem\Dem.c	 10275          {
; ..\EAS\BSW\Dem\Dem.c	 10276              /*SWS_Dem_00172*/
; ..\EAS\BSW\Dem\Dem.c	 10277              Result = DEM_RECORD_WRONG_DTC;
	mov	d12,#1
.L3876:
	j	.L827
.L826:

; ..\EAS\BSW\Dem\Dem.c	 10278          }
; ..\EAS\BSW\Dem\Dem.c	 10279          else if(ret == DEM_GETSIZEBYDTC_WRONG_DTCORIGIN)
	jne	d2,#2,.L828
.L3877:

; ..\EAS\BSW\Dem\Dem.c	 10280          {
; ..\EAS\BSW\Dem\Dem.c	 10281              /*SWS_Dem_00171*/
; ..\EAS\BSW\Dem\Dem.c	 10282              Result = DEM_RECORD_WRONG_DTCORIGIN;
	mov	d12,#2
.L3878:
	j	.L829
.L828:

; ..\EAS\BSW\Dem\Dem.c	 10283          }
; ..\EAS\BSW\Dem\Dem.c	 10284          else if(ret == DEM_GETSIZEBYDTC_WRONG_RECNUM)
	jne	d2,#3,.L830
.L3879:

; ..\EAS\BSW\Dem\Dem.c	 10285          {
; ..\EAS\BSW\Dem\Dem.c	 10286              Result = DEM_RECORD_WRONG_NUMBER;
	mov	d12,#3
.L3880:
	j	.L831
.L830:

; ..\EAS\BSW\Dem\Dem.c	 10287          }
; ..\EAS\BSW\Dem\Dem.c	 10288          else if(ret == DEM_GETSIZEBYDTC_PENDING)
	jne	d2,#4,.L832
.L3881:

; ..\EAS\BSW\Dem\Dem.c	 10289          {
; ..\EAS\BSW\Dem\Dem.c	 10290              Result = DEM_RECORD_PENDING;
	mov	d12,#5
.L832:
.L831:
.L829:
.L827:
.L824:

; ..\EAS\BSW\Dem\Dem.c	 10291          }
; ..\EAS\BSW\Dem\Dem.c	 10292          else/*(ret == DEM_GETSIZEBYDTC_OK)*/
; ..\EAS\BSW\Dem\Dem.c	 10293          {
; ..\EAS\BSW\Dem\Dem.c	 10294              /*Result = DEM_RECORD_OK;*/
; ..\EAS\BSW\Dem\Dem.c	 10295          }
; ..\EAS\BSW\Dem\Dem.c	 10296      }
; ..\EAS\BSW\Dem\Dem.c	 10297  
; ..\EAS\BSW\Dem\Dem.c	 10298      if(Result == DEM_RECORD_OK)
	jne	d12,#0,.L833
.L3882:

; ..\EAS\BSW\Dem\Dem.c	 10299      {
; ..\EAS\BSW\Dem\Dem.c	 10300          if(Size >= (uint32)(*BufSize))
	ld.hu	d4,[a15]0
.L2842:
	jlt.u	d11,d4,.L834
.L2843:

; ..\EAS\BSW\Dem\Dem.c	 10301          {
; ..\EAS\BSW\Dem\Dem.c	 10302              Size = (uint32)(*BufSize);
; ..\EAS\BSW\Dem\Dem.c	 10303  #if(DEM_MAX_EXTSIZE_OF_DTC > 0U)
; ..\EAS\BSW\Dem\Dem.c	 10304              /*SWS_Dem_00075*/
; ..\EAS\BSW\Dem\Dem.c	 10305              if(ExtendedDataNumber == 0xFFU)
	mov	d15,#255
.L3883:
	jne	d15,d10,.L835
.L3884:

; ..\EAS\BSW\Dem\Dem.c	 10306              {
; ..\EAS\BSW\Dem\Dem.c	 10307                  DestBufferPtr = DestBuffer;
; ..\EAS\BSW\Dem\Dem.c	 10308                  DemInternal_GetAllExtendedData(DtcId, DestBufferPtr);
	ld.hu	d4,[a10]2
.L3885:
	mov.aa	a4,a12
.L2844:
	call	DemInternal_GetAllExtendedData
.L2845:
	j	.L836
.L835:

; ..\EAS\BSW\Dem\Dem.c	 10309              }
; ..\EAS\BSW\Dem\Dem.c	 10310              else
; ..\EAS\BSW\Dem\Dem.c	 10311              {
; ..\EAS\BSW\Dem\Dem.c	 10312                  Bsw_MemCpy(DestBuffer, (DEM_PRIMARY_EXTDATA_PTR(DEM_DTC_DATAENTRYREF(DtcId)) + ExtDataOffset), Size);
	ld.hu	d0,[a10]2
	mul	d15,d0,#6
	movh.a	a15,#@his(Dem_StorageMem)
.L2834:
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
	ld.hu	d15,[a15]1868
	mul	d15,d15,#56
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L3886:
	ld.hu	d15,[a10]0
.L3887:
	addsc.a	a15,a15,d15,#0
	lea	a5,[a15]2611
.L3888:
	mov.aa	a4,a12
.L2846:
	call	Bsw_MemCpy
.L2847:
	j	.L837
.L834:

; ..\EAS\BSW\Dem\Dem.c	 10313              }
; ..\EAS\BSW\Dem\Dem.c	 10314  #endif
; ..\EAS\BSW\Dem\Dem.c	 10315          }
; ..\EAS\BSW\Dem\Dem.c	 10316          else
; ..\EAS\BSW\Dem\Dem.c	 10317          {
; ..\EAS\BSW\Dem\Dem.c	 10318              Result = DEM_RECORD_WRONG_BUFFERSIZE;
	mov	d12,#4
.L837:
.L836:
.L833:

; ..\EAS\BSW\Dem\Dem.c	 10319          }
; ..\EAS\BSW\Dem\Dem.c	 10320      }
; ..\EAS\BSW\Dem\Dem.c	 10321      else
; ..\EAS\BSW\Dem\Dem.c	 10322      {
; ..\EAS\BSW\Dem\Dem.c	 10323          /*Result != DEM_RECORD_OK*/
; ..\EAS\BSW\Dem\Dem.c	 10324      }
; ..\EAS\BSW\Dem\Dem.c	 10325      return Result;
	mov	d2,d12
.L2848:

; ..\EAS\BSW\Dem\Dem.c	 10326  }
	ret
.L1846:
	
__Dem_DcmGetExtendedDataRecordByDTC_function_end:
	.size	Dem_DcmGetExtendedDataRecordByDTC,__Dem_DcmGetExtendedDataRecordByDTC_function_end-Dem_DcmGetExtendedDataRecordByDTC
.L1332:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmGetSizeOfExtendedDataRecordByDTC',code,cluster('Dem_DcmGetSizeOfExtendedDataRecordByDTC')
	.sect	'.text.Dem.Dem_DcmGetSizeOfExtendedDataRecordByDTC'
	.align	2
	
	.global	Dem_DcmGetSizeOfExtendedDataRecordByDTC

; ..\EAS\BSW\Dem\Dem.c	 10327  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 10328  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10329  * Function Name: Dem_DcmGetSizeOfExtendedDataRecordByDTC
; ..\EAS\BSW\Dem\Dem.c	 10330  *
; ..\EAS\BSW\Dem\Dem.c	 10331  * Description: Gets the size of extended data by DTC.
; ..\EAS\BSW\Dem\Dem.c	 10332  *
; ..\EAS\BSW\Dem\Dem.c	 10333  * Inputs: DTC: Diagnostic Trouble Code in UDS format.
; ..\EAS\BSW\Dem\Dem.c	 10334  *         DTCOrigin: If the Dem supports more than one event memory,this parameter
; ..\EAS\BSW\Dem\Dem.c	 10335  *                    is used to select the source memory the DTCs shall be read from.
; ..\EAS\BSW\Dem\Dem.c	 10336  *         ExtendedDataNumber: Identification/Number of requested extended data record.
; ..\EAS\BSW\Dem\Dem.c	 10337  *                             Additionally the values 0xFE and 0xFF are explicitly
; ..\EAS\BSW\Dem\Dem.c	 10338  *                             allowed to request the overall size of all OBD records
; ..\EAS\BSW\Dem\Dem.c	 10339  *                             / all records.
; ..\EAS\BSW\Dem\Dem.c	 10340  *
; ..\EAS\BSW\Dem\Dem.c	 10341  * Outputs: SizeOfExtendedDataRecord: Size of the requested extended data record(s)
; ..\EAS\BSW\Dem\Dem.c	 10342  *                                    including record number size
; ..\EAS\BSW\Dem\Dem.c	 10343  *
; ..\EAS\BSW\Dem\Dem.c	 10344  * Return: Dem_ReturnGetSizeOfDataByDTCType: Status of the operation to retrieve
; ..\EAS\BSW\Dem\Dem.c	 10345  *                                           the size of extended data.
; ..\EAS\BSW\Dem\Dem.c	 10346  *
; ..\EAS\BSW\Dem\Dem.c	 10347  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	 10348  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10349  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 10350  FUNC(Dem_ReturnGetSizeOfDataByDTCType, DEM_CODE) Dem_DcmGetSizeOfExtendedDataRecordByDTC
; Function Dem_DcmGetSizeOfExtendedDataRecordByDTC
.L1067:
Dem_DcmGetSizeOfExtendedDataRecordByDTC:	.type	func
	sub.a	a10,#8
.L2849:

; ..\EAS\BSW\Dem\Dem.c	 10351  (
; ..\EAS\BSW\Dem\Dem.c	 10352      uint32 DTC,
; ..\EAS\BSW\Dem\Dem.c	 10353      Dem_DTCOriginType DTCOrigin,
; ..\EAS\BSW\Dem\Dem.c	 10354      uint8 ExtendedDataNumber,
; ..\EAS\BSW\Dem\Dem.c	 10355      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) SizeOfExtendedDataRecord
; ..\EAS\BSW\Dem\Dem.c	 10356  )
; ..\EAS\BSW\Dem\Dem.c	 10357  {
; ..\EAS\BSW\Dem\Dem.c	 10358      Dem_ReturnGetSizeOfDataByDTCType Result = DEM_GETSIZEBYDTC_OK;
; ..\EAS\BSW\Dem\Dem.c	 10359      uint16 ExtDataOffset;
; ..\EAS\BSW\Dem\Dem.c	 10360      /*SWS_Dem_00076*/
; ..\EAS\BSW\Dem\Dem.c	 10361      Result = DemInternal_GetSizeOfExtendedData(DTC, DTCOrigin, ExtendedDataNumber, \ 
; ..\EAS\BSW\Dem\Dem.c	 10362                                                 SizeOfExtendedDataRecord, &ExtDataOffset);
	mov.aa	a5,a10
	j	DemInternal_GetSizeOfExtendedData
.L1858:
	
__Dem_DcmGetSizeOfExtendedDataRecordByDTC_function_end:
	.size	Dem_DcmGetSizeOfExtendedDataRecordByDTC,__Dem_DcmGetSizeOfExtendedDataRecordByDTC_function_end-Dem_DcmGetSizeOfExtendedDataRecordByDTC
.L1337:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmCheckClearParameter',code,cluster('Dem_DcmCheckClearParameter')
	.sect	'.text.Dem.Dem_DcmCheckClearParameter'
	.align	2
	
	.global	Dem_DcmCheckClearParameter

; ..\EAS\BSW\Dem\Dem.c	 10363  
; ..\EAS\BSW\Dem\Dem.c	 10364      return Result;
; ..\EAS\BSW\Dem\Dem.c	 10365  }
; ..\EAS\BSW\Dem\Dem.c	 10366  
; ..\EAS\BSW\Dem\Dem.c	 10367  
; ..\EAS\BSW\Dem\Dem.c	 10368  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 10369  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10370  * Function Name: Dem_DcmCheckClearParameter
; ..\EAS\BSW\Dem\Dem.c	 10371  *
; ..\EAS\BSW\Dem\Dem.c	 10372  * Description: Performs a parameter check and gives the result which would also
; ..\EAS\BSW\Dem\Dem.c	 10373  *              be returned by calling clear with same parameters.
; ..\EAS\BSW\Dem\Dem.c	 10374  *
; ..\EAS\BSW\Dem\Dem.c	 10375  * Inputs: DTC: Defines the DTC in respective format, that shall be cleared from
; ..\EAS\BSW\Dem\Dem.c	 10376  *              the event memory. Either a single DTC or a DTC group may be passed.
; ..\EAS\BSW\Dem\Dem.c	 10377  *         DTCFormat: Defines the input-format of the provided DTC value.
; ..\EAS\BSW\Dem\Dem.c	 10378  *         DTCOrigin: This parameter is used to select the source memory the DTCs
; ..\EAS\BSW\Dem\Dem.c	 10379  *                    shall be cleared from.
; ..\EAS\BSW\Dem\Dem.c	 10380  *
; ..\EAS\BSW\Dem\Dem.c	 10381  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	 10382  *
; ..\EAS\BSW\Dem\Dem.c	 10383  * Return: Dem_ReturnClearDTCType
; ..\EAS\BSW\Dem\Dem.c	 10384  *
; ..\EAS\BSW\Dem\Dem.c	 10385  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	 10386  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10387  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 10388  FUNC(Dem_ReturnClearDTCType, DEM_CODE) Dem_DcmCheckClearParameter
; Function Dem_DcmCheckClearParameter
.L1069:
Dem_DcmCheckClearParameter:	.type	func

; ..\EAS\BSW\Dem\Dem.c	 10389  (
; ..\EAS\BSW\Dem\Dem.c	 10390      uint32 DTC,
; ..\EAS\BSW\Dem\Dem.c	 10391      Dem_DTCFormatType DTCFormat,
; ..\EAS\BSW\Dem\Dem.c	 10392      Dem_DTCOriginType DTCOrigin
; ..\EAS\BSW\Dem\Dem.c	 10393  )
; ..\EAS\BSW\Dem\Dem.c	 10394  {
; ..\EAS\BSW\Dem\Dem.c	 10395      Dem_ReturnClearDTCType Result = DEM_CLEAR_OK;
; ..\EAS\BSW\Dem\Dem.c	 10396      uint16 DtcIndex;
; ..\EAS\BSW\Dem\Dem.c	 10397  
; ..\EAS\BSW\Dem\Dem.c	 10398      if((DTC == (uint32)0) || (DTC > DEM_DTC_GROUP_ALL))
	jeq	d4,#0,.L840
.L3897:
	mov.u	d15,#65535
	addih	d15,d15,#255
.L3898:
	jge.u	d15,d4,.L841
.L840:

; ..\EAS\BSW\Dem\Dem.c	 10399      {
; ..\EAS\BSW\Dem\Dem.c	 10400          Result = DEM_CLEAR_WRONG_DTC;
	mov	d2,#1
.L2850:

; ..\EAS\BSW\Dem\Dem.c	 10401      }
; ..\EAS\BSW\Dem\Dem.c	 10402      else if((DTCFormat != DEM_DTC_FORMAT_OBD) \ 
; ..\EAS\BSW\Dem\Dem.c	 10403          && (DTCFormat != DEM_DTC_FORMAT_UDS) \ 
; ..\EAS\BSW\Dem\Dem.c	 10404          && (DTCFormat != DEM_DTC_FORMAT_J1939))
; ..\EAS\BSW\Dem\Dem.c	 10405      {
; ..\EAS\BSW\Dem\Dem.c	 10406          Result = DEM_CLEAR_FAILED;
; ..\EAS\BSW\Dem\Dem.c	 10407      }
; ..\EAS\BSW\Dem\Dem.c	 10408      else if(DTCOrigin != DEM_DTC_ORIGIN_PRIMARY_MEMORY)
; ..\EAS\BSW\Dem\Dem.c	 10409      {
; ..\EAS\BSW\Dem\Dem.c	 10410          Result = DEM_CLEAR_WRONG_DTCORIGIN;
; ..\EAS\BSW\Dem\Dem.c	 10411      }
; ..\EAS\BSW\Dem\Dem.c	 10412  #if(DEM_CFG_CLEARDTCLIMITATION == DEM_ONLY_CLEAR_ALL_DTCS)
; ..\EAS\BSW\Dem\Dem.c	 10413      else if(DTC != DEM_DTC_GROUP_ALL)
; ..\EAS\BSW\Dem\Dem.c	 10414      {
; ..\EAS\BSW\Dem\Dem.c	 10415          Result = DEM_CLEAR_WRONG_DTC;
; ..\EAS\BSW\Dem\Dem.c	 10416      }
; ..\EAS\BSW\Dem\Dem.c	 10417  #endif
; ..\EAS\BSW\Dem\Dem.c	 10418      else
; ..\EAS\BSW\Dem\Dem.c	 10419      {
; ..\EAS\BSW\Dem\Dem.c	 10420          Result = DEM_CLEAR_WRONG_DTC;
; ..\EAS\BSW\Dem\Dem.c	 10421  
; ..\EAS\BSW\Dem\Dem.c	 10422          for(DtcIndex = 0; DtcIndex < DEM_NUM_OF_DTC; DtcIndex++)
; ..\EAS\BSW\Dem\Dem.c	 10423          {
; ..\EAS\BSW\Dem\Dem.c	 10424              if(((DTCFormat == DEM_DTC_FORMAT_UDS) && (DTC == DEM_CFG_DTC_VALUE(DtcIndex)))
; ..\EAS\BSW\Dem\Dem.c	 10425  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	 10426                  || ((DTCFormat == DEM_DTC_FORMAT_OBD) && (DEM_CFG_DTC_OBDDTCREF(DtcIndex) != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	 10427                      && (DTC == DEM_CFG_DTC_OBD_VALUE(DtcIndex)))
; ..\EAS\BSW\Dem\Dem.c	 10428  #endif
; ..\EAS\BSW\Dem\Dem.c	 10429  #if(DEM_J1939_SUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	 10430                  || ((DTCFormat == DEM_DTC_FORMAT_J1939) && (DEM_CFG_DTC_OBDDTCREF(DtcIndex) != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	 10431                      && (DTC == DEM_CFG_DTC_J1939_VALUE(DtcIndex)))
; ..\EAS\BSW\Dem\Dem.c	 10432  #endif
; ..\EAS\BSW\Dem\Dem.c	 10433  					)
; ..\EAS\BSW\Dem\Dem.c	 10434              {
; ..\EAS\BSW\Dem\Dem.c	 10435                  Result = DEM_CLEAR_OK;
; ..\EAS\BSW\Dem\Dem.c	 10436                  break;
; ..\EAS\BSW\Dem\Dem.c	 10437              }
; ..\EAS\BSW\Dem\Dem.c	 10438          }
; ..\EAS\BSW\Dem\Dem.c	 10439  #if(DEM_NUM_OF_DTCGROUP > 0)
; ..\EAS\BSW\Dem\Dem.c	 10440          for(DtcIndex = 0; DtcIndex < DEM_NUM_OF_DTCGROUP; DtcIndex++)
; ..\EAS\BSW\Dem\Dem.c	 10441          {
; ..\EAS\BSW\Dem\Dem.c	 10442              if(DTC == DEM_CFG_DTC_GROUPVALUE(DtcIndex))
; ..\EAS\BSW\Dem\Dem.c	 10443              {
; ..\EAS\BSW\Dem\Dem.c	 10444                  Result = DEM_CLEAR_OK;
; ..\EAS\BSW\Dem\Dem.c	 10445                  break;
; ..\EAS\BSW\Dem\Dem.c	 10446              }
; ..\EAS\BSW\Dem\Dem.c	 10447          }
; ..\EAS\BSW\Dem\Dem.c	 10448  #endif
; ..\EAS\BSW\Dem\Dem.c	 10449      }
; ..\EAS\BSW\Dem\Dem.c	 10450      return Result;
; ..\EAS\BSW\Dem\Dem.c	 10451  }
	ret
.L841:
	jeq	d5,#0,.L843
.L3899:
	jeq	d5,#1,.L844
.L3900:
	jeq	d5,#2,.L845
.L3901:
	mov	d2,#3
.L2851:
	ret
.L845:
.L844:
.L843:
	jeq	d6,#1,.L847
.L3902:
	mov	d2,#2
.L2852:
	ret
.L847:
	mov	d2,#1
.L2853:
	mov	d0,#0
.L2854:
	mov	d1,#116
.L3903:
	j	.L849
.L850:
	jne	d5,#1,.L851
.L3904:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d0,#3
	ld.w	d15,[a15]4
.L3905:
	jne	d15,d4,.L852
.L3906:
	mov	d2,#0
.L3907:
	j	.L853
.L852:
.L851:
	add	d0,#1
.L849:
	jlt.u	d0,d1,.L850
.L853:
	mov	d15,#0
.L2855:
	j	.L854
.L855:
	movh.a	a15,#@his(Dem_GroupOfDTCTable)
	lea	a15,[a15]@los(Dem_GroupOfDTCTable)
	addsc.a	a15,a15,d15,#2
	ld.w	d0,[a15]
.L3908:
	jne	d4,d0,.L856
.L3909:
	mov	d2,#0
.L3910:
	ret
.L856:
	add	d15,#1
.L854:
	jeq	d15,#0,.L855
.L3911:
	ret
.L1865:
	
__Dem_DcmCheckClearParameter_function_end:
	.size	Dem_DcmCheckClearParameter,__Dem_DcmCheckClearParameter_function_end-Dem_DcmCheckClearParameter
.L1342:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmClearDTC',code,cluster('Dem_DcmClearDTC')
	.sect	'.text.Dem.Dem_DcmClearDTC'
	.align	2
	
	.global	Dem_DcmClearDTC

; ..\EAS\BSW\Dem\Dem.c	 10452  
; ..\EAS\BSW\Dem\Dem.c	 10453  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 10454  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10455  * Function Name: Dem_DcmClearDTC
; ..\EAS\BSW\Dem\Dem.c	 10456  *
; ..\EAS\BSW\Dem\Dem.c	 10457  * Description: Clears single DTCs, as well as groups of DTCs. This API is intended for the Dcm.
; ..\EAS\BSW\Dem\Dem.c	 10458  *                  It can only be used through the RTE (due to work-around described below
; ..\EAS\BSW\Dem\Dem.c	 10459  *                  SWS_Dem_00009), and therefore no declaration is exported via Dem_Dcm.h.
; ..\EAS\BSW\Dem\Dem.c	 10460  *
; ..\EAS\BSW\Dem\Dem.c	 10461  * Inputs: DTC: Defines the DTC in respective format, that shall be cleared from the event memory.
; ..\EAS\BSW\Dem\Dem.c	 10462  *                   If the DTC fits to a DTC group number, all DTCs of the group shall be cleared.
; ..\EAS\BSW\Dem\Dem.c	 10463  *            DTCFormat: Defines the input-format of the provided DTC value.
; ..\EAS\BSW\Dem\Dem.c	 10464  *            DTCOrigin: If the Dem supports more than one event memory this parameter is used to
; ..\EAS\BSW\Dem\Dem.c	 10465  *                            select the source memory the DTCs shall be read from.
; ..\EAS\BSW\Dem\Dem.c	 10466  *
; ..\EAS\BSW\Dem\Dem.c	 10467  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	 10468  *
; ..\EAS\BSW\Dem\Dem.c	 10469  * Return: Dem_ReturnClearDTCType
; ..\EAS\BSW\Dem\Dem.c	 10470  *
; ..\EAS\BSW\Dem\Dem.c	 10471  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	 10472  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10473  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 10474  FUNC(Dem_ReturnClearDTCType, DEM_CODE) Dem_DcmClearDTC
; Function Dem_DcmClearDTC
.L1071:
Dem_DcmClearDTC:	.type	func

; ..\EAS\BSW\Dem\Dem.c	 10475  (
; ..\EAS\BSW\Dem\Dem.c	 10476      uint32 DTC,
; ..\EAS\BSW\Dem\Dem.c	 10477      Dem_DTCFormatType DTCFormat,
; ..\EAS\BSW\Dem\Dem.c	 10478      Dem_DTCOriginType DTCOrigin
; ..\EAS\BSW\Dem\Dem.c	 10479  )
; ..\EAS\BSW\Dem\Dem.c	 10480  {
; ..\EAS\BSW\Dem\Dem.c	 10481      /*SWS_Dem_00009*/
; ..\EAS\BSW\Dem\Dem.c	 10482      Dem_ReturnClearDTCType Result = DEM_CLEAR_OK;
; ..\EAS\BSW\Dem\Dem.c	 10483      /*SWS_Dem_00077*/
; ..\EAS\BSW\Dem\Dem.c	 10484      Result = Dem_ClearDTC(DTC, DTCFormat, DTCOrigin);
	j	Dem_ClearDTC
.L1871:
	
__Dem_DcmClearDTC_function_end:
	.size	Dem_DcmClearDTC,__Dem_DcmClearDTC_function_end-Dem_DcmClearDTC
.L1347:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmDisableDTCSetting',code,cluster('Dem_DcmDisableDTCSetting')
	.sect	'.text.Dem.Dem_DcmDisableDTCSetting'
	.align	2
	
	.global	Dem_DcmDisableDTCSetting

; ..\EAS\BSW\Dem\Dem.c	 10485  
; ..\EAS\BSW\Dem\Dem.c	 10486      return Result;
; ..\EAS\BSW\Dem\Dem.c	 10487  }
; ..\EAS\BSW\Dem\Dem.c	 10488  
; ..\EAS\BSW\Dem\Dem.c	 10489  
; ..\EAS\BSW\Dem\Dem.c	 10490  
; ..\EAS\BSW\Dem\Dem.c	 10491  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 10492  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10493  * Function Name: Dem_DcmDisableDTCSetting
; ..\EAS\BSW\Dem\Dem.c	 10494  *
; ..\EAS\BSW\Dem\Dem.c	 10495  * Description: Disables the DTC setting for a DTC group.
; ..\EAS\BSW\Dem\Dem.c	 10496  *
; ..\EAS\BSW\Dem\Dem.c	 10497  * Inputs: DTCGroup: Defines the group of DTC that shall be disabled to store in event memory.
; ..\EAS\BSW\Dem\Dem.c	 10498  *            DTCKind: This parameter defines the requested DTC kind, either only OBD-relevant
; ..\EAS\BSW\Dem\Dem.c	 10499  *                          DTCs or all DTCs
; ..\EAS\BSW\Dem\Dem.c	 10500  *
; ..\EAS\BSW\Dem\Dem.c	 10501  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	 10502  *
; ..\EAS\BSW\Dem\Dem.c	 10503  * Return: Dem_ReturnControlDTCSettingType
; ..\EAS\BSW\Dem\Dem.c	 10504  *
; ..\EAS\BSW\Dem\Dem.c	 10505  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	 10506  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10507  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 10508  FUNC(Dem_ReturnControlDTCSettingType, DEM_CODE) Dem_DcmDisableDTCSetting
; Function Dem_DcmDisableDTCSetting
.L1073:
Dem_DcmDisableDTCSetting:	.type	func

; ..\EAS\BSW\Dem\Dem.c	 10509  (
; ..\EAS\BSW\Dem\Dem.c	 10510      uint32 DTCGroup,
; ..\EAS\BSW\Dem\Dem.c	 10511      Dem_DTCKindType DTCKind
; ..\EAS\BSW\Dem\Dem.c	 10512  )
; ..\EAS\BSW\Dem\Dem.c	 10513  {
; ..\EAS\BSW\Dem\Dem.c	 10514      /*SWS_Dem_00035*/
; ..\EAS\BSW\Dem\Dem.c	 10515      Dem_ReturnControlDTCSettingType Result = DEM_CONTROL_DTC_SETTING_OK;
	mov	d2,#0
.L2858:

; ..\EAS\BSW\Dem\Dem.c	 10516      uint16 i;
; ..\EAS\BSW\Dem\Dem.c	 10517  
; ..\EAS\BSW\Dem\Dem.c	 10518      if((DTCGroup == DEM_DTC_GROUP_ALL) && (DTCKind == DEM_DTC_KIND_ALL_DTCS))
	mov.u	d15,#65535
	addih	d15,d15,#255
.L3920:
	jne	d15,d4,.L860
.L3921:
	jne	d5,#1,.L861
.L3922:

; ..\EAS\BSW\Dem\Dem.c	 10519      {
; ..\EAS\BSW\Dem\Dem.c	 10520          for(i = 0; i < DEM_NUM_OF_DTC; i++)
	mov	e0,d2,d2
.L3923:

; ..\EAS\BSW\Dem\Dem.c	 10521          {
; ..\EAS\BSW\Dem\Dem.c	 10522              /*SWS_Dem_00079*/
; ..\EAS\BSW\Dem\Dem.c	 10523              Dem_EnableDtcSetting[i] = FALSE;
; ..\EAS\BSW\Dem\Dem.c	 10524  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	 10525              if((DEM_CFG_EVENT_DBC(i) != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	 10526                      && (DEM_CFG_EVENT_DBC_BEHAVIOR(i) == DEM_DEBOUNCE_RESET))
; ..\EAS\BSW\Dem\Dem.c	 10527              {
; ..\EAS\BSW\Dem\Dem.c	 10528                  /*SWS_Dem_00677*/
; ..\EAS\BSW\Dem\Dem.c	 10529                  DEM_EVENT_DBC(i) = 0;
; ..\EAS\BSW\Dem\Dem.c	 10530              }
; ..\EAS\BSW\Dem\Dem.c	 10531              else
; ..\EAS\BSW\Dem\Dem.c	 10532  #endif
; ..\EAS\BSW\Dem\Dem.c	 10533  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	 10534                  if((DEM_CFG_EVENT_DBT(i) != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	 10535                          && (DEM_CFG_EVENT_DBT_BAHAVIOR(i) == DEM_DEBOUNCE_RESET))
; ..\EAS\BSW\Dem\Dem.c	 10536                  {
; ..\EAS\BSW\Dem\Dem.c	 10537                      /*SWS_Dem_00677*/
; ..\EAS\BSW\Dem\Dem.c	 10538                      DEM_EVENT_DBT(i) = 0;
	mov	d3,d2
.L2860:

; ..\EAS\BSW\Dem\Dem.c	 10539                      DEM_EVENT_TIMERDIRECTION(i) = DEM_DATA_INVALID_U8;
	mov	d4,#255
.L2856:
	mov	d5,#116
.L2857:
	j	.L862
.L863:
	movh.a	a15,#@his(Dem_EnableDtcSetting)
	lea	a15,[a15]@los(Dem_EnableDtcSetting)
.L2861:
	addsc.a	a15,a15,d0,#0
.L2862:
	st.b	[a15],d1
.L2863:
	mul	d6,d0,#52
.L2864:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d6,#0
	ld.w	d15,[a15]20
.L3924:
	jeq	d15,#0,.L864
.L3925:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d6,#0
	ld.a	a15,[a15]20
	ld.bu	d15,[a15]
.L3926:
	jne	d15,#1,.L865
.L2865:
	sha	d15,d0,#4
.L2866:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L3927:
	st.h	[a15]10,d1
.L3928:
	j	.L866
.L865:
.L864:
	mul	d6,d0,#52
.L2867:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d6,#0
	ld.w	d15,[a15]24
.L3929:
	jeq	d15,#0,.L867
.L3930:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d6,#0
	ld.a	a15,[a15]24
	ld.bu	d15,[a15]
.L3931:
	jne	d15,#1,.L868
.L2868:
	sha	d15,d0,#4
.L2869:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L3932:
	st.w	[a15]12,d3
.L3933:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L3934:
	st.b	[a15]16,d4
.L868:
.L867:
.L866:
	add	d0,#1
.L862:
	jlt.u	d0,d5,.L863
.L2870:

; ..\EAS\BSW\Dem\Dem.c	 10540                  }
; ..\EAS\BSW\Dem\Dem.c	 10541                  else
; ..\EAS\BSW\Dem\Dem.c	 10542  #endif
; ..\EAS\BSW\Dem\Dem.c	 10543                  {
; ..\EAS\BSW\Dem\Dem.c	 10544                      /*do nothing*/
; ..\EAS\BSW\Dem\Dem.c	 10545                  }
; ..\EAS\BSW\Dem\Dem.c	 10546          }
; ..\EAS\BSW\Dem\Dem.c	 10547      }
; ..\EAS\BSW\Dem\Dem.c	 10548      else
; ..\EAS\BSW\Dem\Dem.c	 10549      {
; ..\EAS\BSW\Dem\Dem.c	 10550          Result = DEM_CONTROL_DTC_WRONG_DTCGROUP;
; ..\EAS\BSW\Dem\Dem.c	 10551  
; ..\EAS\BSW\Dem\Dem.c	 10552          for(i = 0; i < DEM_NUM_OF_DTC; i++)
; ..\EAS\BSW\Dem\Dem.c	 10553          {
; ..\EAS\BSW\Dem\Dem.c	 10554              if(DEM_CFG_DTC_VALUE(i) == DTCGroup)
; ..\EAS\BSW\Dem\Dem.c	 10555              {
; ..\EAS\BSW\Dem\Dem.c	 10556                  /*SWS_Dem_00079*/
; ..\EAS\BSW\Dem\Dem.c	 10557                  Dem_EnableDtcSetting[i] = FALSE;
; ..\EAS\BSW\Dem\Dem.c	 10558  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	 10559                  if((DEM_CFG_EVENT_DBC(i) != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	 10560                          && (DEM_CFG_EVENT_DBC_BEHAVIOR(i) == DEM_DEBOUNCE_RESET))
; ..\EAS\BSW\Dem\Dem.c	 10561                  {
; ..\EAS\BSW\Dem\Dem.c	 10562                      /*SWS_Dem_00677*/
; ..\EAS\BSW\Dem\Dem.c	 10563                      DEM_EVENT_DBC(i) = 0;
; ..\EAS\BSW\Dem\Dem.c	 10564                  }
; ..\EAS\BSW\Dem\Dem.c	 10565                  else
; ..\EAS\BSW\Dem\Dem.c	 10566  #endif
; ..\EAS\BSW\Dem\Dem.c	 10567  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	 10568                      if((DEM_CFG_EVENT_DBT(i) != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	 10569                              && (DEM_CFG_EVENT_DBT_BAHAVIOR(i) == DEM_DEBOUNCE_RESET))
; ..\EAS\BSW\Dem\Dem.c	 10570                      {
; ..\EAS\BSW\Dem\Dem.c	 10571                          /*SWS_Dem_00677*/
; ..\EAS\BSW\Dem\Dem.c	 10572                          DEM_EVENT_DBT(i) = 0;
; ..\EAS\BSW\Dem\Dem.c	 10573                          DEM_EVENT_TIMERDIRECTION(i) = DEM_DATA_INVALID_U8;
; ..\EAS\BSW\Dem\Dem.c	 10574                      }
; ..\EAS\BSW\Dem\Dem.c	 10575                      else
; ..\EAS\BSW\Dem\Dem.c	 10576  #endif
; ..\EAS\BSW\Dem\Dem.c	 10577                      {
; ..\EAS\BSW\Dem\Dem.c	 10578                          /*do nothing*/
; ..\EAS\BSW\Dem\Dem.c	 10579                      }
; ..\EAS\BSW\Dem\Dem.c	 10580                  Result = DEM_CONTROL_DTC_SETTING_OK;
; ..\EAS\BSW\Dem\Dem.c	 10581                  break;
; ..\EAS\BSW\Dem\Dem.c	 10582              }
; ..\EAS\BSW\Dem\Dem.c	 10583          }
; ..\EAS\BSW\Dem\Dem.c	 10584      }
; ..\EAS\BSW\Dem\Dem.c	 10585      return Result;
; ..\EAS\BSW\Dem\Dem.c	 10586  }
	ret
.L861:
.L860:
	mov	d2,#2
.L3935:
	mov	d0,#0
.L2871:
	mov	d1,#116
.L3936:
	j	.L870
.L871:
	movh.a	a15,#@his(Dem_DTCTable)
	lea	a15,[a15]@los(Dem_DTCTable)
	addsc.a	a15,a15,d0,#3
	ld.w	d15,[a15]4
.L3937:
	jne	d15,d4,.L872
.L3938:
	movh.a	a15,#@his(Dem_EnableDtcSetting)
	lea	a15,[a15]@los(Dem_EnableDtcSetting)
.L3939:
	addsc.a	a15,a15,d0,#0
.L3940:
	mov	d1,#0
.L3941:
	st.b	[a15],d1
.L3942:
	mul	d2,d0,#52
.L2859:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d2,#0
	ld.w	d15,[a15]20
.L3943:
	jeq	d15,#0,.L873
.L3944:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d2,#0
	ld.a	a15,[a15]20
	ld.bu	d15,[a15]
.L3945:
	jne	d15,#1,.L874
.L3946:
	sha	d0,#4
.L2872:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d0,#0
.L3947:
	st.h	[a15]10,d1
.L3948:
	j	.L875
.L874:
.L873:
	mul	d1,d0,#52
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d1,#0
	ld.w	d15,[a15]24
.L3949:
	jeq	d15,#0,.L876
.L3950:
	movh.a	a15,#@his(Dem_EventTable)
	lea	a15,[a15]@los(Dem_EventTable)
	addsc.a	a15,a15,d1,#0
	ld.a	a15,[a15]24
	ld.bu	d15,[a15]
.L3951:
	jne	d15,#1,.L877
.L3952:
	sha	d15,d0,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L3953:
	mov	d0,#0
.L2873:
	st.w	[a15]12,d0
.L3954:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L3955:
	mov	d15,#255
.L3956:
	st.b	[a15]16,d15
.L877:
.L876:
.L875:
	mov	d2,#0
.L2874:
	ret
.L872:
	add	d0,#1
.L870:
	jlt.u	d0,d1,.L871
.L3957:
	ret
.L1876:
	
__Dem_DcmDisableDTCSetting_function_end:
	.size	Dem_DcmDisableDTCSetting,__Dem_DcmDisableDTCSetting_function_end-Dem_DcmDisableDTCSetting
.L1352:
	; End of function
	
	.sdecl	'.text.Dem.Dem_DcmEnableDTCSetting',code,cluster('Dem_DcmEnableDTCSetting')
	.sect	'.text.Dem.Dem_DcmEnableDTCSetting'
	.align	2
	
	.global	Dem_DcmEnableDTCSetting

; ..\EAS\BSW\Dem\Dem.c	 10587  
; ..\EAS\BSW\Dem\Dem.c	 10588  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 10589  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10590  * Function Name: Dem_DcmEnableDTCSetting
; ..\EAS\BSW\Dem\Dem.c	 10591  *
; ..\EAS\BSW\Dem\Dem.c	 10592  * Description: Enables the DTC setting for a DTC group.This API is intended for
; ..\EAS\BSW\Dem\Dem.c	 10593  *              the Dcm. It can only be used through the RTE(due to work-around
; ..\EAS\BSW\Dem\Dem.c	 10594  *              described below SWS_Dem_00035), and therefore no declaration is
; ..\EAS\BSW\Dem\Dem.c	 10595  *              exported via Dem_Dcm.h.
; ..\EAS\BSW\Dem\Dem.c	 10596  *
; ..\EAS\BSW\Dem\Dem.c	 10597  * Inputs: DTCGroup: Defines the group of DTC that shall be enabled to store in
; ..\EAS\BSW\Dem\Dem.c	 10598  *                   event memory.
; ..\EAS\BSW\Dem\Dem.c	 10599  *         DTCKind: This parameter defines the requested DTC kind, either only
; ..\EAS\BSW\Dem\Dem.c	 10600  *                  OBD-relevant DTCs or all DTCs
; ..\EAS\BSW\Dem\Dem.c	 10601  *
; ..\EAS\BSW\Dem\Dem.c	 10602  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	 10603  *
; ..\EAS\BSW\Dem\Dem.c	 10604  * Return: Dem_ReturnControlDTCSettingType
; ..\EAS\BSW\Dem\Dem.c	 10605  *
; ..\EAS\BSW\Dem\Dem.c	 10606  * Limitations: None
; ..\EAS\BSW\Dem\Dem.c	 10607  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10608  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 10609  FUNC(Dem_ReturnControlDTCSettingType, DEM_CODE) Dem_DcmEnableDTCSetting
; Function Dem_DcmEnableDTCSetting
.L1075:
Dem_DcmEnableDTCSetting:	.type	func

; ..\EAS\BSW\Dem\Dem.c	 10610  (
; ..\EAS\BSW\Dem\Dem.c	 10611      uint32 DTCGroup,
; ..\EAS\BSW\Dem\Dem.c	 10612      Dem_DTCKindType DTCKind
; ..\EAS\BSW\Dem\Dem.c	 10613  )
; ..\EAS\BSW\Dem\Dem.c	 10614  {
; ..\EAS\BSW\Dem\Dem.c	 10615      /*SWS_Dem_00035*/
; ..\EAS\BSW\Dem\Dem.c	 10616      Dem_ReturnControlDTCSettingType Result = DEM_CONTROL_DTC_SETTING_OK;
	mov	d2,#0
.L2875:

; ..\EAS\BSW\Dem\Dem.c	 10617      uint16 i;
; ..\EAS\BSW\Dem\Dem.c	 10618  
; ..\EAS\BSW\Dem\Dem.c	 10619      if((DTCGroup == DEM_DTC_GROUP_ALL) && (DTCKind == DEM_DTC_KIND_ALL_DTCS))
	mov.u	d15,#65535
	addih	d15,d15,#255
.L3962:
	jne	d15,d4,.L880
.L3963:
	jne	d5,#1,.L881
.L3964:

; ..\EAS\BSW\Dem\Dem.c	 10620      {
; ..\EAS\BSW\Dem\Dem.c	 10621          for(i = 0; i < DEM_NUM_OF_DTC; i++)
	mov	d15,d2
.L2876:

; ..\EAS\BSW\Dem\Dem.c	 10622          {
; ..\EAS\BSW\Dem\Dem.c	 10623              /*SWS_Dem_00080*/
; ..\EAS\BSW\Dem\Dem.c	 10624              Dem_EnableDtcSetting[i] = TRUE;
	mov	d0,#1
.L3965:
	mov	d1,#116
.L3966:
	j	.L882
.L883:
	movh.a	a15,#@his(Dem_EnableDtcSetting)
	lea	a15,[a15]@los(Dem_EnableDtcSetting)
.L3967:
	addsc.a	a15,a15,d15,#0
.L3968:
	st.b	[a15],d0
.L3969:
	add	d15,#1
.L882:
	jlt.u	d15,d1,.L883
.L3970:

; ..\EAS\BSW\Dem\Dem.c	 10625          }
; ..\EAS\BSW\Dem\Dem.c	 10626      }
; ..\EAS\BSW\Dem\Dem.c	 10627      else
; ..\EAS\BSW\Dem\Dem.c	 10628      {
; ..\EAS\BSW\Dem\Dem.c	 10629          Result = DEM_CONTROL_DTC_WRONG_DTCGROUP;
; ..\EAS\BSW\Dem\Dem.c	 10630      }
; ..\EAS\BSW\Dem\Dem.c	 10631      return Result;
; ..\EAS\BSW\Dem\Dem.c	 10632  }
	ret
.L881:
.L880:
	mov	d2,#2
.L3971:
	ret
.L1881:
	
__Dem_DcmEnableDTCSetting_function_end:
	.size	Dem_DcmEnableDTCSetting,__Dem_DcmEnableDTCSetting_function_end-Dem_DcmEnableDTCSetting
.L1357:
	; End of function
	
	.sdecl	'.text.Dem.Dem_NvM_InitStorageMem',code,cluster('Dem_NvM_InitStorageMem')
	.sect	'.text.Dem.Dem_NvM_InitStorageMem'
	.align	2
	
	.global	Dem_NvM_InitStorageMem

; ..\EAS\BSW\Dem\Dem.c	 10633  
; ..\EAS\BSW\Dem\Dem.c	 10634  
; ..\EAS\BSW\Dem\Dem.c	 10635  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	 10636  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 10637  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10638  * Function Name: Dem_DcmGetInfoTypeValue08
; ..\EAS\BSW\Dem\Dem.c	 10639  *
; ..\EAS\BSW\Dem\Dem.c	 10640  * Description: Service is used for requesting IUMPR data according to Info-Type $08.
; ..\EAS\BSW\Dem\Dem.c	 10641  *
; ..\EAS\BSW\Dem\Dem.c	 10642  * Inputs: OpStatus: Only DCM_INITIAL will appear, because this API behaves synchronous.
; ..\EAS\BSW\Dem\Dem.c	 10643  *         Iumprdata08BufferSize: The maximum number of data bytes that can be
; ..\EAS\BSW\Dem\Dem.c	 10644  *                                written to the Iumprdata08 Buffer.
; ..\EAS\BSW\Dem\Dem.c	 10645  *
; ..\EAS\BSW\Dem\Dem.c	 10646  * Outputs: Iumprdata08BufferSize
; ..\EAS\BSW\Dem\Dem.c	 10647  *          Iumprdata08: Buffer containing the number of data elements (as defined
; ..\EAS\BSW\Dem\Dem.c	 10648  *                       in ISO-15031-5) and contents of InfoType $08. The buffer
; ..\EAS\BSW\Dem\Dem.c	 10649  *                       is provided by the Dcm.
; ..\EAS\BSW\Dem\Dem.c	 10650  *
; ..\EAS\BSW\Dem\Dem.c	 10651  * Return: Always E_OK is returned.
; ..\EAS\BSW\Dem\Dem.c	 10652  *
; ..\EAS\BSW\Dem\Dem.c	 10653  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	 10654  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 10655  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10656  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 10657  /*SWS_Dem_00316*//*SWS_Dem_00298*/
; ..\EAS\BSW\Dem\Dem.c	 10658  FUNC(Std_ReturnType, DEM_CODE) Dem_DcmGetInfoTypeValue08
; ..\EAS\BSW\Dem\Dem.c	 10659  (
; ..\EAS\BSW\Dem\Dem.c	 10660      Dcm_OpStatusType OpStatus,
; ..\EAS\BSW\Dem\Dem.c	 10661      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) Iumprdata08,
; ..\EAS\BSW\Dem\Dem.c	 10662      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) Iumprdata08BufferSize
; ..\EAS\BSW\Dem\Dem.c	 10663  )
; ..\EAS\BSW\Dem\Dem.c	 10664  {
; ..\EAS\BSW\Dem\Dem.c	 10665      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	 10666  #if(DEM_CFG_OBD_ENGINE_TYPE == DEM_IGNITION_SPARK)
; ..\EAS\BSW\Dem\Dem.c	 10667      Dem_RatioIdType RatioID;
; ..\EAS\BSW\Dem\Dem.c	 10668      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	 10669      uint16 TempBuff[DEM_OBD_INFO08_DATA_LENGTH/2];
; ..\EAS\BSW\Dem\Dem.c	 10670      uint32 CurrentRatio;
; ..\EAS\BSW\Dem\Dem.c	 10671      uint32 ExistRatio;
; ..\EAS\BSW\Dem\Dem.c	 10672  #endif
; ..\EAS\BSW\Dem\Dem.c	 10673  
; ..\EAS\BSW\Dem\Dem.c	 10674      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	 10675      {
; ..\EAS\BSW\Dem\Dem.c	 10676          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	 10677          DEM_DET_REPORT_ERROR(DEM_DCMGETINFOTYPEVALUE08_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	 10678      }
; ..\EAS\BSW\Dem\Dem.c	 10679      else if((Iumprdata08 == NULL_PTR) || (Iumprdata08BufferSize == NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	 10680      {
; ..\EAS\BSW\Dem\Dem.c	 10681          DEM_DET_REPORT_ERROR(DEM_DCMGETINFOTYPEVALUE08_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	 10682      }
; ..\EAS\BSW\Dem\Dem.c	 10683      else if(*Iumprdata08BufferSize < DEM_OBD_INFO08_DATA_LENGTH)
; ..\EAS\BSW\Dem\Dem.c	 10684      {
; ..\EAS\BSW\Dem\Dem.c	 10685          DEM_DET_REPORT_ERROR(DEM_DCMGETINFOTYPEVALUE08_APIID, DEM_E_PARAM_LENGTH);
; ..\EAS\BSW\Dem\Dem.c	 10686      }
; ..\EAS\BSW\Dem\Dem.c	 10687      else
; ..\EAS\BSW\Dem\Dem.c	 10688      {
; ..\EAS\BSW\Dem\Dem.c	 10689          /*SWS_Dem_00357*/
; ..\EAS\BSW\Dem\Dem.c	 10690  #if(DEM_NUM_OF_RATIO > 0)
; ..\EAS\BSW\Dem\Dem.c	 10691  #if(DEM_CFG_OBD_ENGINE_TYPE == DEM_IGNITION_SPARK)
; ..\EAS\BSW\Dem\Dem.c	 10692          for(i = 0; i < (DEM_OBD_INFO08_DATA_LENGTH/2); i++)
; ..\EAS\BSW\Dem\Dem.c	 10693          {
; ..\EAS\BSW\Dem\Dem.c	 10694              TempBuff[i] = DEM_DATA_INVALID_U16;
; ..\EAS\BSW\Dem\Dem.c	 10695          }
; ..\EAS\BSW\Dem\Dem.c	 10696          /*Numerator:OBD Monitoring Conditions Encountered Counts*/
; ..\EAS\BSW\Dem\Dem.c	 10697          TempBuff[0] = DEM_OBD_RATIO_GENDEN_CNT;
; ..\EAS\BSW\Dem\Dem.c	 10698          /*Denominator:Ignition Cycle Counter*/
; ..\EAS\BSW\Dem\Dem.c	 10699          TempBuff[1] = DEM_OBD_RATIO_IGN_CNT;
; ..\EAS\BSW\Dem\Dem.c	 10700  
; ..\EAS\BSW\Dem\Dem.c	 10701          for(RatioID = 0; RatioID < DEM_NUM_OF_RATIO; RatioID++)
; ..\EAS\BSW\Dem\Dem.c	 10702          {
; ..\EAS\BSW\Dem\Dem.c	 10703              i = DEM_CFG_RATIO_IUMPR(RatioID);
; ..\EAS\BSW\Dem\Dem.c	 10704  
; ..\EAS\BSW\Dem\Dem.c	 10705              if(TempBuff[i*2] == DEM_DATA_INVALID_U16)
; ..\EAS\BSW\Dem\Dem.c	 10706              {
; ..\EAS\BSW\Dem\Dem.c	 10707                  /*Numerator*/
; ..\EAS\BSW\Dem\Dem.c	 10708                  TempBuff[i*2] = DEM_OBD_RATIO_NUMERATOR(RatioID);
; ..\EAS\BSW\Dem\Dem.c	 10709                  /*Denominator*/
; ..\EAS\BSW\Dem\Dem.c	 10710                  TempBuff[i*2 + 1] = DEM_OBD_RATIO_DENOMINATOR(RatioID);
; ..\EAS\BSW\Dem\Dem.c	 10711              }
; ..\EAS\BSW\Dem\Dem.c	 10712              else
; ..\EAS\BSW\Dem\Dem.c	 10713              {
; ..\EAS\BSW\Dem\Dem.c	 10714                  /*If one IUMPR group has been referenced by several Ratios,
; ..\EAS\BSW\Dem\Dem.c	 10715                  the IUMPR group value should same to the minimum value of the Ratios.*/
; ..\EAS\BSW\Dem\Dem.c	 10716                  CurrentRatio = (DEM_OBD_RATIO_NUMERATOR(RatioID)*(TempBuff[i*2 + 1]));
; ..\EAS\BSW\Dem\Dem.c	 10717                  ExistRatio = ((TempBuff[i*2])*DEM_OBD_RATIO_DENOMINATOR(RatioID));
; ..\EAS\BSW\Dem\Dem.c	 10718  
; ..\EAS\BSW\Dem\Dem.c	 10719                  if((CurrentRatio < ExistRatio) \ 
; ..\EAS\BSW\Dem\Dem.c	 10720                      || ((CurrentRatio == ExistRatio) \ 
; ..\EAS\BSW\Dem\Dem.c	 10721                      && (DEM_OBD_RATIO_DENOMINATOR(RatioID) > (TempBuff[i*2 + 1]))))
; ..\EAS\BSW\Dem\Dem.c	 10722                  {
; ..\EAS\BSW\Dem\Dem.c	 10723                      /*Numerator*/
; ..\EAS\BSW\Dem\Dem.c	 10724                      TempBuff[i*2] = DEM_OBD_RATIO_NUMERATOR(RatioID);
; ..\EAS\BSW\Dem\Dem.c	 10725                      /*Denominator*/
; ..\EAS\BSW\Dem\Dem.c	 10726                      TempBuff[i*2 + 1] = DEM_OBD_RATIO_DENOMINATOR(RatioID);
; ..\EAS\BSW\Dem\Dem.c	 10727                  }
; ..\EAS\BSW\Dem\Dem.c	 10728              }
; ..\EAS\BSW\Dem\Dem.c	 10729          }
; ..\EAS\BSW\Dem\Dem.c	 10730  
; ..\EAS\BSW\Dem\Dem.c	 10731          for(i = 0; i < (DEM_OBD_INFO08_DATA_LENGTH/2); i++)
; ..\EAS\BSW\Dem\Dem.c	 10732          {
; ..\EAS\BSW\Dem\Dem.c	 10733              Iumprdata08[i*2] = (uint8)(TempBuff[i] >> 8);
; ..\EAS\BSW\Dem\Dem.c	 10734              Iumprdata08[i*2 + 1] = (uint8)(TempBuff[i]);
; ..\EAS\BSW\Dem\Dem.c	 10735          }
; ..\EAS\BSW\Dem\Dem.c	 10736          *Iumprdata08BufferSize = DEM_OBD_INFO08_DATA_LENGTH;
; ..\EAS\BSW\Dem\Dem.c	 10737  
; ..\EAS\BSW\Dem\Dem.c	 10738          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	 10739  #endif/*#if(DEM_CFG_OBD_ENGINE_TYPE == DEM_IGNITION_SPARK)*/
; ..\EAS\BSW\Dem\Dem.c	 10740  #endif/*#if(DEM_NUM_OF_RATIO > 0)*/
; ..\EAS\BSW\Dem\Dem.c	 10741      }
; ..\EAS\BSW\Dem\Dem.c	 10742      return Result;
; ..\EAS\BSW\Dem\Dem.c	 10743  }
; ..\EAS\BSW\Dem\Dem.c	 10744  
; ..\EAS\BSW\Dem\Dem.c	 10745  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 10746  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10747  * Function Name: Dem_DcmGetInfoTypeValue0B
; ..\EAS\BSW\Dem\Dem.c	 10748  *
; ..\EAS\BSW\Dem\Dem.c	 10749  * Description: Service is used for requesting IUMPR data according to Info-Type $0B.
; ..\EAS\BSW\Dem\Dem.c	 10750  *
; ..\EAS\BSW\Dem\Dem.c	 10751  * Inputs: OpStatus: Only DCM_INITIAL will appear, because this API behaves synchronous.
; ..\EAS\BSW\Dem\Dem.c	 10752  *         Iumprdata0BBufferSize: The maximum number of data bytes that can be
; ..\EAS\BSW\Dem\Dem.c	 10753  *                                written to the Iumprdata0B Buffer.
; ..\EAS\BSW\Dem\Dem.c	 10754  *
; ..\EAS\BSW\Dem\Dem.c	 10755  * Outputs: Iumprdata0BBufferSize
; ..\EAS\BSW\Dem\Dem.c	 10756  *          Iumprdata0B: Buffer containing the number of data elements (as defined
; ..\EAS\BSW\Dem\Dem.c	 10757  *                       in ISO-15031-5) and contents of InfoType $0B. The buffer
; ..\EAS\BSW\Dem\Dem.c	 10758  *                       is provided by the Dcm.
; ..\EAS\BSW\Dem\Dem.c	 10759  *
; ..\EAS\BSW\Dem\Dem.c	 10760  * Return: Always E_OK is returned.
; ..\EAS\BSW\Dem\Dem.c	 10761  *
; ..\EAS\BSW\Dem\Dem.c	 10762  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	 10763  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 10764  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10765  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 10766  /*SWS_Dem_00317*//*SWS_Dem_00298*/
; ..\EAS\BSW\Dem\Dem.c	 10767  FUNC(Std_ReturnType, DEM_CODE) Dem_DcmGetInfoTypeValue0B
; ..\EAS\BSW\Dem\Dem.c	 10768  (
; ..\EAS\BSW\Dem\Dem.c	 10769      Dcm_OpStatusType OpStatus,
; ..\EAS\BSW\Dem\Dem.c	 10770      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) Iumprdata0B,
; ..\EAS\BSW\Dem\Dem.c	 10771      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) Iumprdata0BBufferSize
; ..\EAS\BSW\Dem\Dem.c	 10772  )
; ..\EAS\BSW\Dem\Dem.c	 10773  {
; ..\EAS\BSW\Dem\Dem.c	 10774      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	 10775  #if(DEM_CFG_OBD_ENGINE_TYPE == DEM_IGNITION_COMPRESSION)
; ..\EAS\BSW\Dem\Dem.c	 10776      Dem_RatioIdType RatioID;
; ..\EAS\BSW\Dem\Dem.c	 10777      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	 10778      uint16 TempBuff[DEM_OBD_INFO0B_DATA_LENGTH/2];
; ..\EAS\BSW\Dem\Dem.c	 10779      uint32 CurrentRatio;
; ..\EAS\BSW\Dem\Dem.c	 10780      uint32 ExistRatio;
; ..\EAS\BSW\Dem\Dem.c	 10781  #endif
; ..\EAS\BSW\Dem\Dem.c	 10782  
; ..\EAS\BSW\Dem\Dem.c	 10783      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	 10784      {
; ..\EAS\BSW\Dem\Dem.c	 10785          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	 10786          DEM_DET_REPORT_ERROR(DEM_DCMGETINFOTYPEVALUE0B_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	 10787      }
; ..\EAS\BSW\Dem\Dem.c	 10788      else if((Iumprdata0B == NULL_PTR) || (Iumprdata0BBufferSize == NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	 10789      {
; ..\EAS\BSW\Dem\Dem.c	 10790          DEM_DET_REPORT_ERROR(DEM_DCMGETINFOTYPEVALUE0B_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	 10791      }
; ..\EAS\BSW\Dem\Dem.c	 10792      else if(*Iumprdata0BBufferSize < DEM_OBD_INFO0B_DATA_LENGTH)
; ..\EAS\BSW\Dem\Dem.c	 10793      {
; ..\EAS\BSW\Dem\Dem.c	 10794          DEM_DET_REPORT_ERROR(DEM_DCMGETINFOTYPEVALUE0B_APIID, DEM_E_PARAM_LENGTH);
; ..\EAS\BSW\Dem\Dem.c	 10795      }
; ..\EAS\BSW\Dem\Dem.c	 10796      else
; ..\EAS\BSW\Dem\Dem.c	 10797      {
; ..\EAS\BSW\Dem\Dem.c	 10798          /*SWS_Dem_00358*/
; ..\EAS\BSW\Dem\Dem.c	 10799  #if(DEM_NUM_OF_RATIO > 0)
; ..\EAS\BSW\Dem\Dem.c	 10800  #if(DEM_CFG_OBD_ENGINE_TYPE == DEM_IGNITION_COMPRESSION)
; ..\EAS\BSW\Dem\Dem.c	 10801          for(i = 0; i < (DEM_OBD_INFO0B_DATA_LENGTH/2); i++)
; ..\EAS\BSW\Dem\Dem.c	 10802          {
; ..\EAS\BSW\Dem\Dem.c	 10803              TempBuff[i] = DEM_DATA_INVALID_U16;
; ..\EAS\BSW\Dem\Dem.c	 10804          }
; ..\EAS\BSW\Dem\Dem.c	 10805          /*Numerator:OBD Monitoring Conditions Encountered Counts*/
; ..\EAS\BSW\Dem\Dem.c	 10806          TempBuff[0] = DEM_OBD_RATIO_GENDEN_CNT;
; ..\EAS\BSW\Dem\Dem.c	 10807          /*Denominator:Ignition Cycle Counter*/
; ..\EAS\BSW\Dem\Dem.c	 10808          TempBuff[1] = DEM_OBD_RATIO_IGN_CNT;
; ..\EAS\BSW\Dem\Dem.c	 10809  
; ..\EAS\BSW\Dem\Dem.c	 10810          for(RatioID = 0; RatioID < DEM_NUM_OF_RATIO; RatioID++)
; ..\EAS\BSW\Dem\Dem.c	 10811          {
; ..\EAS\BSW\Dem\Dem.c	 10812              i = DEM_CFG_RATIO_IUMPR(RatioID);
; ..\EAS\BSW\Dem\Dem.c	 10813  
; ..\EAS\BSW\Dem\Dem.c	 10814              if(TempBuff[i*2] == DEM_DATA_INVALID_U16)
; ..\EAS\BSW\Dem\Dem.c	 10815              {
; ..\EAS\BSW\Dem\Dem.c	 10816                  /*Numerator*/
; ..\EAS\BSW\Dem\Dem.c	 10817                  TempBuff[i*2] = DEM_OBD_RATIO_NUMERATOR(RatioID);
; ..\EAS\BSW\Dem\Dem.c	 10818                  /*Denominator*/
; ..\EAS\BSW\Dem\Dem.c	 10819                  TempBuff[i*2 + 1] = DEM_OBD_RATIO_DENOMINATOR(RatioID);
; ..\EAS\BSW\Dem\Dem.c	 10820              }
; ..\EAS\BSW\Dem\Dem.c	 10821              else
; ..\EAS\BSW\Dem\Dem.c	 10822              {
; ..\EAS\BSW\Dem\Dem.c	 10823                  /*If one IUMPR group has been referenced by several Ratios,
; ..\EAS\BSW\Dem\Dem.c	 10824                  the IUMPR group value should same to the minimum value of the Ratios.*/
; ..\EAS\BSW\Dem\Dem.c	 10825                  CurrentRatio = (DEM_OBD_RATIO_NUMERATOR(RatioID)*(TempBuff[i*2 + 1]));
; ..\EAS\BSW\Dem\Dem.c	 10826                  ExistRatio = ((TempBuff[i*2])*DEM_OBD_RATIO_DENOMINATOR(RatioID));
; ..\EAS\BSW\Dem\Dem.c	 10827  
; ..\EAS\BSW\Dem\Dem.c	 10828                  if((CurrentRatio < ExistRatio) \ 
; ..\EAS\BSW\Dem\Dem.c	 10829                      || ((CurrentRatio == ExistRatio) \ 
; ..\EAS\BSW\Dem\Dem.c	 10830                      && (DEM_OBD_RATIO_DENOMINATOR(RatioID) > (TempBuff[i*2 + 1]))))
; ..\EAS\BSW\Dem\Dem.c	 10831                  {
; ..\EAS\BSW\Dem\Dem.c	 10832                      /*Numerator*/
; ..\EAS\BSW\Dem\Dem.c	 10833                      TempBuff[i*2] = DEM_OBD_RATIO_NUMERATOR(RatioID);
; ..\EAS\BSW\Dem\Dem.c	 10834                      /*Denominator*/
; ..\EAS\BSW\Dem\Dem.c	 10835                      TempBuff[i*2 + 1] = DEM_OBD_RATIO_DENOMINATOR(RatioID);
; ..\EAS\BSW\Dem\Dem.c	 10836                  }
; ..\EAS\BSW\Dem\Dem.c	 10837              }
; ..\EAS\BSW\Dem\Dem.c	 10838          }
; ..\EAS\BSW\Dem\Dem.c	 10839  
; ..\EAS\BSW\Dem\Dem.c	 10840          for(i = 0; i < (DEM_OBD_INFO0B_DATA_LENGTH/2); i++)
; ..\EAS\BSW\Dem\Dem.c	 10841          {
; ..\EAS\BSW\Dem\Dem.c	 10842              Iumprdata0B[i*2] = (uint8)(TempBuff[i] >> 8);
; ..\EAS\BSW\Dem\Dem.c	 10843              Iumprdata0B[i*2 + 1] = (uint8)(TempBuff[i]);
; ..\EAS\BSW\Dem\Dem.c	 10844          }
; ..\EAS\BSW\Dem\Dem.c	 10845          *Iumprdata0BBufferSize = DEM_OBD_INFO0B_DATA_LENGTH;
; ..\EAS\BSW\Dem\Dem.c	 10846  
; ..\EAS\BSW\Dem\Dem.c	 10847          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	 10848  #endif/*#if(DEM_CFG_OBD_ENGINE_TYPE == DEM_IGNITION_COMPRESSION)*/
; ..\EAS\BSW\Dem\Dem.c	 10849  #endif/*#if(DEM_NUM_OF_RATIO > 0)*/
; ..\EAS\BSW\Dem\Dem.c	 10850      }
; ..\EAS\BSW\Dem\Dem.c	 10851      return Result;
; ..\EAS\BSW\Dem\Dem.c	 10852  }
; ..\EAS\BSW\Dem\Dem.c	 10853  
; ..\EAS\BSW\Dem\Dem.c	 10854  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 10855  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10856  * Function Name: Dem_DcmReadDataOfPID01
; ..\EAS\BSW\Dem\Dem.c	 10857  *
; ..\EAS\BSW\Dem\Dem.c	 10858  * Description: Service to report the value of PID $01 computed by the Dem.
; ..\EAS\BSW\Dem\Dem.c	 10859  *
; ..\EAS\BSW\Dem\Dem.c	 10860  * Inputs: None.
; ..\EAS\BSW\Dem\Dem.c	 10861  *
; ..\EAS\BSW\Dem\Dem.c	 10862  * Outputs: PID01value: Buffer containing the contents of PID $01 computed by the
; ..\EAS\BSW\Dem\Dem.c	 10863  *                      Dem.
; ..\EAS\BSW\Dem\Dem.c	 10864  *
; ..\EAS\BSW\Dem\Dem.c	 10865  * Return: Always E_OK is returned, as E_NOT_OK will never appear.
; ..\EAS\BSW\Dem\Dem.c	 10866  *
; ..\EAS\BSW\Dem\Dem.c	 10867  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	 10868  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 10869  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10870  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 10871  /*SWS_Dem_00318*/
; ..\EAS\BSW\Dem\Dem.c	 10872  FUNC(Std_ReturnType, DEM_CODE) Dem_DcmReadDataOfPID01
; ..\EAS\BSW\Dem\Dem.c	 10873  (
; ..\EAS\BSW\Dem\Dem.c	 10874      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) PID01value
; ..\EAS\BSW\Dem\Dem.c	 10875  )
; ..\EAS\BSW\Dem\Dem.c	 10876  {
; ..\EAS\BSW\Dem\Dem.c	 10877      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	 10878  
; ..\EAS\BSW\Dem\Dem.c	 10879      Result = Dem_ReadDataOfPID01(PID01value);
; ..\EAS\BSW\Dem\Dem.c	 10880  
; ..\EAS\BSW\Dem\Dem.c	 10881      return Result;
; ..\EAS\BSW\Dem\Dem.c	 10882  }
; ..\EAS\BSW\Dem\Dem.c	 10883  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 10884  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10885  * Function Name: Dem_DcmReadDataOfPID1C
; ..\EAS\BSW\Dem\Dem.c	 10886  *
; ..\EAS\BSW\Dem\Dem.c	 10887  * Description: Service to report the value of PID $1C computed by the Dem.
; ..\EAS\BSW\Dem\Dem.c	 10888  *
; ..\EAS\BSW\Dem\Dem.c	 10889  * Inputs: None.
; ..\EAS\BSW\Dem\Dem.c	 10890  *
; ..\EAS\BSW\Dem\Dem.c	 10891  * Outputs: PID1Cvalue: Buffer containing the contents of PID $1C computed by the
; ..\EAS\BSW\Dem\Dem.c	 10892  *                      Dem.
; ..\EAS\BSW\Dem\Dem.c	 10893  *
; ..\EAS\BSW\Dem\Dem.c	 10894  * Return: Always E_OK is returned, as E_NOT_OK will never appear.
; ..\EAS\BSW\Dem\Dem.c	 10895  *
; ..\EAS\BSW\Dem\Dem.c	 10896  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	 10897  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 10898  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10899  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 10900  /*SWS_Dem_00325*/
; ..\EAS\BSW\Dem\Dem.c	 10901  FUNC(Std_ReturnType, DEM_CODE) Dem_DcmReadDataOfPID1C
; ..\EAS\BSW\Dem\Dem.c	 10902  (
; ..\EAS\BSW\Dem\Dem.c	 10903      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) PID1Cvalue
; ..\EAS\BSW\Dem\Dem.c	 10904  )
; ..\EAS\BSW\Dem\Dem.c	 10905  {
; ..\EAS\BSW\Dem\Dem.c	 10906      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	 10907  
; ..\EAS\BSW\Dem\Dem.c	 10908      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	 10909      {
; ..\EAS\BSW\Dem\Dem.c	 10910          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	 10911          DEM_DET_REPORT_ERROR(DEM_DCMREADDATAOFPID1C_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	 10912      }
; ..\EAS\BSW\Dem\Dem.c	 10913      else if(PID1Cvalue == NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	 10914      {
; ..\EAS\BSW\Dem\Dem.c	 10915          DEM_DET_REPORT_ERROR(DEM_DCMREADDATAOFPID1C_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	 10916      }
; ..\EAS\BSW\Dem\Dem.c	 10917      else
; ..\EAS\BSW\Dem\Dem.c	 10918      {
; ..\EAS\BSW\Dem\Dem.c	 10919          /*Not implemented.*/
; ..\EAS\BSW\Dem\Dem.c	 10920          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	 10921      }
; ..\EAS\BSW\Dem\Dem.c	 10922      return Result;
; ..\EAS\BSW\Dem\Dem.c	 10923  }
; ..\EAS\BSW\Dem\Dem.c	 10924  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 10925  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10926  * Function Name: Dem_DcmReadDataOfPID21
; ..\EAS\BSW\Dem\Dem.c	 10927  *
; ..\EAS\BSW\Dem\Dem.c	 10928  * Description: Service to report the value of PID $21 computed by the Dem.
; ..\EAS\BSW\Dem\Dem.c	 10929  *
; ..\EAS\BSW\Dem\Dem.c	 10930  * Inputs: None.
; ..\EAS\BSW\Dem\Dem.c	 10931  *
; ..\EAS\BSW\Dem\Dem.c	 10932  * Outputs: PID21value: Buffer containing the contents of PID $21 computed by the
; ..\EAS\BSW\Dem\Dem.c	 10933  *                      Dem.
; ..\EAS\BSW\Dem\Dem.c	 10934  *
; ..\EAS\BSW\Dem\Dem.c	 10935  * Return: Always E_OK is returned, as E_NOT_OK will never appear.
; ..\EAS\BSW\Dem\Dem.c	 10936  *
; ..\EAS\BSW\Dem\Dem.c	 10937  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	 10938  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 10939  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10940  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 10941  /*SWS_Dem_00319*/
; ..\EAS\BSW\Dem\Dem.c	 10942  FUNC(Std_ReturnType, DEM_CODE) Dem_DcmReadDataOfPID21
; ..\EAS\BSW\Dem\Dem.c	 10943  (
; ..\EAS\BSW\Dem\Dem.c	 10944      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) PID21value
; ..\EAS\BSW\Dem\Dem.c	 10945  )
; ..\EAS\BSW\Dem\Dem.c	 10946  {
; ..\EAS\BSW\Dem\Dem.c	 10947      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	 10948  
; ..\EAS\BSW\Dem\Dem.c	 10949      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	 10950      {
; ..\EAS\BSW\Dem\Dem.c	 10951          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	 10952          DEM_DET_REPORT_ERROR(DEM_DCMREADDATAOFPID21_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	 10953      }
; ..\EAS\BSW\Dem\Dem.c	 10954      else if(PID21value == NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	 10955      {
; ..\EAS\BSW\Dem\Dem.c	 10956          DEM_DET_REPORT_ERROR(DEM_DCMREADDATAOFPID21_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	 10957      }
; ..\EAS\BSW\Dem\Dem.c	 10958      else
; ..\EAS\BSW\Dem\Dem.c	 10959      {
; ..\EAS\BSW\Dem\Dem.c	 10960          /*Not implemented.*/
; ..\EAS\BSW\Dem\Dem.c	 10961          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	 10962      }
; ..\EAS\BSW\Dem\Dem.c	 10963      return Result;
; ..\EAS\BSW\Dem\Dem.c	 10964  }
; ..\EAS\BSW\Dem\Dem.c	 10965  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 10966  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10967  * Function Name: Dem_DcmReadDataOfPID30
; ..\EAS\BSW\Dem\Dem.c	 10968  *
; ..\EAS\BSW\Dem\Dem.c	 10969  * Description: Service to report the value of PID $30 computed by the Dem.
; ..\EAS\BSW\Dem\Dem.c	 10970  *
; ..\EAS\BSW\Dem\Dem.c	 10971  * Inputs: None.
; ..\EAS\BSW\Dem\Dem.c	 10972  *
; ..\EAS\BSW\Dem\Dem.c	 10973  * Outputs: PID30value: Buffer containing the contents of PID $30 computed by the
; ..\EAS\BSW\Dem\Dem.c	 10974  *                      Dem.
; ..\EAS\BSW\Dem\Dem.c	 10975  *
; ..\EAS\BSW\Dem\Dem.c	 10976  * Return: Always E_OK is returned, as E_NOT_OK will never appear.
; ..\EAS\BSW\Dem\Dem.c	 10977  *
; ..\EAS\BSW\Dem\Dem.c	 10978  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	 10979  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 10980  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 10981  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 10982  /*SWS_Dem_00320*/
; ..\EAS\BSW\Dem\Dem.c	 10983  FUNC(Std_ReturnType, DEM_CODE) Dem_DcmReadDataOfPID30
; ..\EAS\BSW\Dem\Dem.c	 10984  (
; ..\EAS\BSW\Dem\Dem.c	 10985      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) PID30value
; ..\EAS\BSW\Dem\Dem.c	 10986  )
; ..\EAS\BSW\Dem\Dem.c	 10987  {
; ..\EAS\BSW\Dem\Dem.c	 10988      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	 10989  
; ..\EAS\BSW\Dem\Dem.c	 10990      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	 10991      {
; ..\EAS\BSW\Dem\Dem.c	 10992          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	 10993          DEM_DET_REPORT_ERROR(DEM_DCMREADDATAOFPID30_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	 10994      }
; ..\EAS\BSW\Dem\Dem.c	 10995      else if(PID30value == NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	 10996      {
; ..\EAS\BSW\Dem\Dem.c	 10997          DEM_DET_REPORT_ERROR(DEM_DCMREADDATAOFPID30_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	 10998      }
; ..\EAS\BSW\Dem\Dem.c	 10999      else
; ..\EAS\BSW\Dem\Dem.c	 11000      {
; ..\EAS\BSW\Dem\Dem.c	 11001          /*Not implemented.*/
; ..\EAS\BSW\Dem\Dem.c	 11002          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	 11003      }
; ..\EAS\BSW\Dem\Dem.c	 11004      return Result;
; ..\EAS\BSW\Dem\Dem.c	 11005  }
; ..\EAS\BSW\Dem\Dem.c	 11006  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 11007  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11008  * Function Name: Dem_DcmReadDataOfPID31
; ..\EAS\BSW\Dem\Dem.c	 11009  *
; ..\EAS\BSW\Dem\Dem.c	 11010  * Description: Service to report the value of PID $31 computed by the Dem.
; ..\EAS\BSW\Dem\Dem.c	 11011  *
; ..\EAS\BSW\Dem\Dem.c	 11012  * Inputs: None.
; ..\EAS\BSW\Dem\Dem.c	 11013  *
; ..\EAS\BSW\Dem\Dem.c	 11014  * Outputs: PID31value: Buffer containing the contents of PID $31 computed by the
; ..\EAS\BSW\Dem\Dem.c	 11015  *                      Dem.
; ..\EAS\BSW\Dem\Dem.c	 11016  *
; ..\EAS\BSW\Dem\Dem.c	 11017  * Return: Always E_OK is returned, as E_NOT_OK will never appear.
; ..\EAS\BSW\Dem\Dem.c	 11018  *
; ..\EAS\BSW\Dem\Dem.c	 11019  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	 11020  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 11021  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11022  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 11023  /*SWS_Dem_00321*/
; ..\EAS\BSW\Dem\Dem.c	 11024  FUNC(Std_ReturnType, DEM_CODE) Dem_DcmReadDataOfPID31
; ..\EAS\BSW\Dem\Dem.c	 11025  (
; ..\EAS\BSW\Dem\Dem.c	 11026      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) PID31value
; ..\EAS\BSW\Dem\Dem.c	 11027  )
; ..\EAS\BSW\Dem\Dem.c	 11028  {
; ..\EAS\BSW\Dem\Dem.c	 11029      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	 11030      uint32 Distance;
; ..\EAS\BSW\Dem\Dem.c	 11031  
; ..\EAS\BSW\Dem\Dem.c	 11032      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	 11033      {
; ..\EAS\BSW\Dem\Dem.c	 11034          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	 11035          DEM_DET_REPORT_ERROR(DEM_DCMREADDATAOFPID31_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	 11036      }
; ..\EAS\BSW\Dem\Dem.c	 11037      else if(PID31value == NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	 11038      {
; ..\EAS\BSW\Dem\Dem.c	 11039          DEM_DET_REPORT_ERROR(DEM_DCMREADDATAOFPID31_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	 11040      }
; ..\EAS\BSW\Dem\Dem.c	 11041      else
; ..\EAS\BSW\Dem\Dem.c	 11042      {
; ..\EAS\BSW\Dem\Dem.c	 11043          Distance = (uint32)(DEM_OBD_DISTANCE_SINCEDTCCLEARED/1000);
; ..\EAS\BSW\Dem\Dem.c	 11044          PID31value[0] = (uint8)(Distance >> 8);
; ..\EAS\BSW\Dem\Dem.c	 11045          PID31value[1] = (uint8)Distance;
; ..\EAS\BSW\Dem\Dem.c	 11046  
; ..\EAS\BSW\Dem\Dem.c	 11047          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	 11048      }
; ..\EAS\BSW\Dem\Dem.c	 11049      return Result;
; ..\EAS\BSW\Dem\Dem.c	 11050  }
; ..\EAS\BSW\Dem\Dem.c	 11051  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 11052  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11053  * Function Name: Dem_DcmReadDataOfPID41
; ..\EAS\BSW\Dem\Dem.c	 11054  *
; ..\EAS\BSW\Dem\Dem.c	 11055  * Description: Service to report the value of PID $41 computed by the Dem.
; ..\EAS\BSW\Dem\Dem.c	 11056  *
; ..\EAS\BSW\Dem\Dem.c	 11057  * Inputs: None.
; ..\EAS\BSW\Dem\Dem.c	 11058  *
; ..\EAS\BSW\Dem\Dem.c	 11059  * Outputs: PID41value: Buffer containing the contents of PID $41 computed by the
; ..\EAS\BSW\Dem\Dem.c	 11060  *                      Dem.
; ..\EAS\BSW\Dem\Dem.c	 11061  *
; ..\EAS\BSW\Dem\Dem.c	 11062  * Return: Always E_OK is returned, as E_NOT_OK will never appear.
; ..\EAS\BSW\Dem\Dem.c	 11063  *
; ..\EAS\BSW\Dem\Dem.c	 11064  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	 11065  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 11066  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11067  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 11068  /*SWS_Dem_00322*/
; ..\EAS\BSW\Dem\Dem.c	 11069  FUNC(Std_ReturnType, DEM_CODE) Dem_DcmReadDataOfPID41
; ..\EAS\BSW\Dem\Dem.c	 11070  (
; ..\EAS\BSW\Dem\Dem.c	 11071      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) PID41value
; ..\EAS\BSW\Dem\Dem.c	 11072  )
; ..\EAS\BSW\Dem\Dem.c	 11073  {
; ..\EAS\BSW\Dem\Dem.c	 11074      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	 11075  #if(DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)
; ..\EAS\BSW\Dem\Dem.c	 11076      Dem_EventIdType EventId;
; ..\EAS\BSW\Dem\Dem.c	 11077      uint16 DtcId;
; ..\EAS\BSW\Dem\Dem.c	 11078      Dem_UdsStatusByteType DtcStatus;
; ..\EAS\BSW\Dem\Dem.c	 11079      uint8 BytePos;
; ..\EAS\BSW\Dem\Dem.c	 11080      uint8 BitPos;
; ..\EAS\BSW\Dem\Dem.c	 11081  #endif
; ..\EAS\BSW\Dem\Dem.c	 11082  
; ..\EAS\BSW\Dem\Dem.c	 11083      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	 11084      {
; ..\EAS\BSW\Dem\Dem.c	 11085          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	 11086          DEM_DET_REPORT_ERROR(DEM_DCMREADDATAOFPID41_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	 11087      }
; ..\EAS\BSW\Dem\Dem.c	 11088      else if(PID41value == NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	 11089      {
; ..\EAS\BSW\Dem\Dem.c	 11090          DEM_DET_REPORT_ERROR(DEM_DCMREADDATAOFPID41_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	 11091      }
; ..\EAS\BSW\Dem\Dem.c	 11092      else
; ..\EAS\BSW\Dem\Dem.c	 11093      {
; ..\EAS\BSW\Dem\Dem.c	 11094  #if(DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)
; ..\EAS\BSW\Dem\Dem.c	 11095          PID41value[0] = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	 11096          PID41value[1] = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	 11097          PID41value[2] = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	 11098          PID41value[3] = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	 11099  
; ..\EAS\BSW\Dem\Dem.c	 11100          for(EventId = 0; EventId < DEM_NUM_OF_EVENT; EventId++)
; ..\EAS\BSW\Dem\Dem.c	 11101          {
; ..\EAS\BSW\Dem\Dem.c	 11102              DtcId = DEM_CFG_EVENT_DTCREF(EventId);
; ..\EAS\BSW\Dem\Dem.c	 11103              /*SWS_Dem_00355*/
; ..\EAS\BSW\Dem\Dem.c	 11104  #if((DEM_CONFIG_VARIANTS != STD_CONFIG_VARIANTS_POSTBUILD) \ 
; ..\EAS\BSW\Dem\Dem.c	 11105      && (DEM_CFG_AVAILABILITYSUPPORT == DEM_EVENT_AVAILABILITY))
; ..\EAS\BSW\Dem\Dem.c	 11106              if((Dem_EventAvailable[EventId] == TRUE) \ 
; ..\EAS\BSW\Dem\Dem.c	 11107                  && (DEM_CFG_DTC_OBDDTCREF(DtcId) != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	 11108                  && (DEM_CFG_DTC_OBD_READINESSGROUP(DtcId) != DEM_OBD_RDY_NONE))
; ..\EAS\BSW\Dem\Dem.c	 11109  #else
; ..\EAS\BSW\Dem\Dem.c	 11110              if((DEM_CFG_DTC_OBDDTCREF(DtcId) != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	 11111                  && (DEM_CFG_DTC_OBD_READINESSGROUP(DtcId) != DEM_OBD_RDY_NONE))
; ..\EAS\BSW\Dem\Dem.c	 11112  #endif
; ..\EAS\BSW\Dem\Dem.c	 11113              {
; ..\EAS\BSW\Dem\Dem.c	 11114                  BytePos = (DEM_CFG_DTC_OBD_READINESSGROUP(DtcId)/8);
; ..\EAS\BSW\Dem\Dem.c	 11115                  BitPos = (DEM_CFG_DTC_OBD_READINESSGROUP(DtcId)%8);
; ..\EAS\BSW\Dem\Dem.c	 11116                  /*SWS_Dem_00356*/
; ..\EAS\BSW\Dem\Dem.c	 11117                  if((DEM_OBD_READINESSGROUP_STATUS[BytePos] & ((uint8)0x01 << BitPos)) != (uint8)0)
; ..\EAS\BSW\Dem\Dem.c	 11118                  {
; ..\EAS\BSW\Dem\Dem.c	 11119                      /*Set value of monitors enable bit*/
; ..\EAS\BSW\Dem\Dem.c	 11120                      PID41value[BytePos + 1] |= ((uint8)0x01 << BitPos);
; ..\EAS\BSW\Dem\Dem.c	 11121  
; ..\EAS\BSW\Dem\Dem.c	 11122                      DtcStatus = DEM_DTC_STATUS(DtcId);
; ..\EAS\BSW\Dem\Dem.c	 11123                      /*Monitor status this driving cycle*/
; ..\EAS\BSW\Dem\Dem.c	 11124                      if(DEM_TEST_UDS_STATUS_TNCTOC(DtcStatus))
; ..\EAS\BSW\Dem\Dem.c	 11125                      {
; ..\EAS\BSW\Dem\Dem.c	 11126                          switch(BytePos)
; ..\EAS\BSW\Dem\Dem.c	 11127                          {
; ..\EAS\BSW\Dem\Dem.c	 11128                              /*Set value of monitors compleate bit
; ..\EAS\BSW\Dem\Dem.c	 11129                              0 = monitor complete this monitoring cycle (YES)
; ..\EAS\BSW\Dem\Dem.c	 11130                              0 = monitor not supported (N/A)
; ..\EAS\BSW\Dem\Dem.c	 11131                              1 = monitor not complete this monitoring cycle (NO)*/
; ..\EAS\BSW\Dem\Dem.c	 11132                              case 0:
; ..\EAS\BSW\Dem\Dem.c	 11133                                  PID41value[1] |= ((uint8)0x40 << BitPos);
; ..\EAS\BSW\Dem\Dem.c	 11134                              break;
; ..\EAS\BSW\Dem\Dem.c	 11135  
; ..\EAS\BSW\Dem\Dem.c	 11136                              default:
; ..\EAS\BSW\Dem\Dem.c	 11137                                  PID41value[3] |= ((uint8)0x01 << BitPos);
; ..\EAS\BSW\Dem\Dem.c	 11138                              break;
; ..\EAS\BSW\Dem\Dem.c	 11139                          }
; ..\EAS\BSW\Dem\Dem.c	 11140                      }
; ..\EAS\BSW\Dem\Dem.c	 11141                  }/*if((DEM_OBD_READINESSGROUP_STATUS[BytePos] & ((uint8)0x01 << BitPos)) != (uint8)0)*/
; ..\EAS\BSW\Dem\Dem.c	 11142              }
; ..\EAS\BSW\Dem\Dem.c	 11143          }/*for(EventId = 0; EventId < DEM_NUM_OF_EVENT; EventId++)*/
; ..\EAS\BSW\Dem\Dem.c	 11144  
; ..\EAS\BSW\Dem\Dem.c	 11145          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	 11146  #endif/*#if(DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)*/
; ..\EAS\BSW\Dem\Dem.c	 11147      }
; ..\EAS\BSW\Dem\Dem.c	 11148      return Result;
; ..\EAS\BSW\Dem\Dem.c	 11149  }
; ..\EAS\BSW\Dem\Dem.c	 11150  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 11151  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11152  * Function Name: Dem_DcmReadDataOfPID4D
; ..\EAS\BSW\Dem\Dem.c	 11153  *
; ..\EAS\BSW\Dem\Dem.c	 11154  * Description: Service to report the value of PID $4D computed by the Dem.
; ..\EAS\BSW\Dem\Dem.c	 11155  *
; ..\EAS\BSW\Dem\Dem.c	 11156  * Inputs: None.
; ..\EAS\BSW\Dem\Dem.c	 11157  *
; ..\EAS\BSW\Dem\Dem.c	 11158  * Outputs: PID4Dvalue: Buffer containing the contents of PID $4D computed by the
; ..\EAS\BSW\Dem\Dem.c	 11159  *                      Dem.
; ..\EAS\BSW\Dem\Dem.c	 11160  *
; ..\EAS\BSW\Dem\Dem.c	 11161  * Return: Always E_OK is returned, as E_NOT_OK will never appear.
; ..\EAS\BSW\Dem\Dem.c	 11162  *
; ..\EAS\BSW\Dem\Dem.c	 11163  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	 11164  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 11165  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11166  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 11167  /*SWS_Dem_00323*/
; ..\EAS\BSW\Dem\Dem.c	 11168  FUNC(Std_ReturnType, DEM_CODE) Dem_DcmReadDataOfPID4D
; ..\EAS\BSW\Dem\Dem.c	 11169  (
; ..\EAS\BSW\Dem\Dem.c	 11170      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) PID4Dvalue
; ..\EAS\BSW\Dem\Dem.c	 11171  )
; ..\EAS\BSW\Dem\Dem.c	 11172  {
; ..\EAS\BSW\Dem\Dem.c	 11173      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	 11174  
; ..\EAS\BSW\Dem\Dem.c	 11175      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	 11176      {
; ..\EAS\BSW\Dem\Dem.c	 11177          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	 11178          DEM_DET_REPORT_ERROR(DEM_DCMREADDATAOFPID4D_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	 11179      }
; ..\EAS\BSW\Dem\Dem.c	 11180      else if(PID4Dvalue == NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	 11181      {
; ..\EAS\BSW\Dem\Dem.c	 11182          DEM_DET_REPORT_ERROR(DEM_DCMREADDATAOFPID4D_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	 11183      }
; ..\EAS\BSW\Dem\Dem.c	 11184      else
; ..\EAS\BSW\Dem\Dem.c	 11185      {
; ..\EAS\BSW\Dem\Dem.c	 11186          /*Not implemented.*/
; ..\EAS\BSW\Dem\Dem.c	 11187          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	 11188      }
; ..\EAS\BSW\Dem\Dem.c	 11189      return Result;
; ..\EAS\BSW\Dem\Dem.c	 11190  }
; ..\EAS\BSW\Dem\Dem.c	 11191  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 11192  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11193  * Function Name: Dem_DcmReadDataOfPID4E
; ..\EAS\BSW\Dem\Dem.c	 11194  *
; ..\EAS\BSW\Dem\Dem.c	 11195  * Description: Service to report the value of PID $4E computed by the Dem.
; ..\EAS\BSW\Dem\Dem.c	 11196  *
; ..\EAS\BSW\Dem\Dem.c	 11197  * Inputs: None.
; ..\EAS\BSW\Dem\Dem.c	 11198  *
; ..\EAS\BSW\Dem\Dem.c	 11199  * Outputs: PID4Evalue: Buffer containing the contents of PID $4E computed by the
; ..\EAS\BSW\Dem\Dem.c	 11200  *                      Dem.
; ..\EAS\BSW\Dem\Dem.c	 11201  *
; ..\EAS\BSW\Dem\Dem.c	 11202  * Return: Always E_OK is returned, as E_NOT_OK will never appear.
; ..\EAS\BSW\Dem\Dem.c	 11203  *
; ..\EAS\BSW\Dem\Dem.c	 11204  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	 11205  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 11206  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11207  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 11208  /*SWS_Dem_00324*/
; ..\EAS\BSW\Dem\Dem.c	 11209  FUNC(Std_ReturnType, DEM_CODE) Dem_DcmReadDataOfPID4E
; ..\EAS\BSW\Dem\Dem.c	 11210  (
; ..\EAS\BSW\Dem\Dem.c	 11211      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) PID4Evalue
; ..\EAS\BSW\Dem\Dem.c	 11212  )
; ..\EAS\BSW\Dem\Dem.c	 11213  {
; ..\EAS\BSW\Dem\Dem.c	 11214      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	 11215  
; ..\EAS\BSW\Dem\Dem.c	 11216      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	 11217      {
; ..\EAS\BSW\Dem\Dem.c	 11218          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	 11219          DEM_DET_REPORT_ERROR(DEM_DCMREADDATAOFPID4E_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	 11220      }
; ..\EAS\BSW\Dem\Dem.c	 11221      else if(PID4Evalue == NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	 11222      {
; ..\EAS\BSW\Dem\Dem.c	 11223          DEM_DET_REPORT_ERROR(DEM_DCMREADDATAOFPID4E_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	 11224      }
; ..\EAS\BSW\Dem\Dem.c	 11225      else
; ..\EAS\BSW\Dem\Dem.c	 11226      {
; ..\EAS\BSW\Dem\Dem.c	 11227          /*Not implemented.*/
; ..\EAS\BSW\Dem\Dem.c	 11228          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	 11229      }
; ..\EAS\BSW\Dem\Dem.c	 11230      return Result;
; ..\EAS\BSW\Dem\Dem.c	 11231  }
; ..\EAS\BSW\Dem\Dem.c	 11232  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 11233  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11234  * Function Name: Dem_DcmReadDataOfPID91
; ..\EAS\BSW\Dem\Dem.c	 11235  *
; ..\EAS\BSW\Dem\Dem.c	 11236  * Description: Service to report the value of PID $91 computed by the Dem.
; ..\EAS\BSW\Dem\Dem.c	 11237  *
; ..\EAS\BSW\Dem\Dem.c	 11238  * Inputs: None.
; ..\EAS\BSW\Dem\Dem.c	 11239  *
; ..\EAS\BSW\Dem\Dem.c	 11240  * Outputs: PID91value: Buffer containing the contents of PID $91 computed by the
; ..\EAS\BSW\Dem\Dem.c	 11241  *                      Dem.
; ..\EAS\BSW\Dem\Dem.c	 11242  *
; ..\EAS\BSW\Dem\Dem.c	 11243  * Return: Always E_OK is returned, as E_NOT_OK will never appear.
; ..\EAS\BSW\Dem\Dem.c	 11244  *
; ..\EAS\BSW\Dem\Dem.c	 11245  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	 11246  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 11247  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11248  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 11249  /*SWS_Dem_01187*/
; ..\EAS\BSW\Dem\Dem.c	 11250  FUNC(Std_ReturnType, DEM_CODE) Dem_DcmReadDataOfPID91
; ..\EAS\BSW\Dem\Dem.c	 11251  (
; ..\EAS\BSW\Dem\Dem.c	 11252      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) PID91value
; ..\EAS\BSW\Dem\Dem.c	 11253  )
; ..\EAS\BSW\Dem\Dem.c	 11254  {
; ..\EAS\BSW\Dem\Dem.c	 11255      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	 11256  
; ..\EAS\BSW\Dem\Dem.c	 11257      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	 11258      {
; ..\EAS\BSW\Dem\Dem.c	 11259          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	 11260          DEM_DET_REPORT_ERROR(DEM_DCMREADDATAOFPID91_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	 11261      }
; ..\EAS\BSW\Dem\Dem.c	 11262      else if(PID91value == NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	 11263      {
; ..\EAS\BSW\Dem\Dem.c	 11264          DEM_DET_REPORT_ERROR(DEM_DCMREADDATAOFPID91_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	 11265      }
; ..\EAS\BSW\Dem\Dem.c	 11266      else
; ..\EAS\BSW\Dem\Dem.c	 11267      {
; ..\EAS\BSW\Dem\Dem.c	 11268          /*Not implemented.*/
; ..\EAS\BSW\Dem\Dem.c	 11269          Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	 11270      }
; ..\EAS\BSW\Dem\Dem.c	 11271      return Result;
; ..\EAS\BSW\Dem\Dem.c	 11272  }
; ..\EAS\BSW\Dem\Dem.c	 11273  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 11274  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11275  * Function Name: Dem_DcmReadDataOfOBDFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	 11276  *
; ..\EAS\BSW\Dem\Dem.c	 11277  * Description: Gets data element per PID and index of the most important freeze
; ..\EAS\BSW\Dem\Dem.c	 11278  *              frame being selected for the output of service $02.
; ..\EAS\BSW\Dem\Dem.c	 11279  *
; ..\EAS\BSW\Dem\Dem.c	 11280  * Inputs: PID: This parameter is an identifier for a PID as defined in ISO15031-5.
; ..\EAS\BSW\Dem\Dem.c	 11281  *         DataElementIndexOfPID: Data element index of this PID according to the
; ..\EAS\BSW\Dem\Dem.c	 11282  *                                Dcm configuration of service $02. It is zero-based
; ..\EAS\BSW\Dem\Dem.c	 11283  *                                and consecutive, and ordered by the data element
; ..\EAS\BSW\Dem\Dem.c	 11284  *                                positions.
; ..\EAS\BSW\Dem\Dem.c	 11285  *         DestBuffer: This parameter contains a byte pointer that points to the
; ..\EAS\BSW\Dem\Dem.c	 11286  *                     buffer, to which the data element of the PID shall be
; ..\EAS\BSW\Dem\Dem.c	 11287  *                     written to.
; ..\EAS\BSW\Dem\Dem.c	 11288  *         BufSize: When the function is called this parameter contains the maximum
; ..\EAS\BSW\Dem\Dem.c	 11289  *                  number of data bytes that can be written to the buffer.
; ..\EAS\BSW\Dem\Dem.c	 11290  *
; ..\EAS\BSW\Dem\Dem.c	 11291  * Outputs: DestBuffer
; ..\EAS\BSW\Dem\Dem.c	 11292  *          BufSize: The function returns the actual number of written data bytes
; ..\EAS\BSW\Dem\Dem.c	 11293  *                   in this parameter.
; ..\EAS\BSW\Dem\Dem.c	 11294  *
; ..\EAS\BSW\Dem\Dem.c	 11295  * Return: E_OK: Freeze frame data was successfully reported.
; ..\EAS\BSW\Dem\Dem.c	 11296  *         E_NOT_OK: Freeze frame data was not successfully reported.
; ..\EAS\BSW\Dem\Dem.c	 11297  *
; ..\EAS\BSW\Dem\Dem.c	 11298  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	 11299  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 11300  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11301  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 11302  /*SWS_Dem_00327*/
; ..\EAS\BSW\Dem\Dem.c	 11303  FUNC(Std_ReturnType, DEM_CODE) Dem_DcmReadDataOfOBDFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	 11304  (
; ..\EAS\BSW\Dem\Dem.c	 11305      uint8 PID,
; ..\EAS\BSW\Dem\Dem.c	 11306      uint8 DataElementIndexOfPID,
; ..\EAS\BSW\Dem\Dem.c	 11307      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) DestBuffer,
; ..\EAS\BSW\Dem\Dem.c	 11308      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) BufSize
; ..\EAS\BSW\Dem\Dem.c	 11309  )
; ..\EAS\BSW\Dem\Dem.c	 11310  {
; ..\EAS\BSW\Dem\Dem.c	 11311      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	 11312      uint8 PidIndex;
; ..\EAS\BSW\Dem\Dem.c	 11313      uint8 DataIndex;/*Data index of Pid*/
; ..\EAS\BSW\Dem\Dem.c	 11314      uint8 DataIndexOfDataClass;/*Data index of DataElementClass*/
; ..\EAS\BSW\Dem\Dem.c	 11315      uint8 *SrcDataPtr;
; ..\EAS\BSW\Dem\Dem.c	 11316  
; ..\EAS\BSW\Dem\Dem.c	 11317      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	 11318      {
; ..\EAS\BSW\Dem\Dem.c	 11319          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	 11320          DEM_DET_REPORT_ERROR(DEM_DCMREADDATAOFOBDFREEZEFRAME_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	 11321      }
; ..\EAS\BSW\Dem\Dem.c	 11322      else if((DestBuffer == NULL_PTR) || (BufSize == NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	 11323      {
; ..\EAS\BSW\Dem\Dem.c	 11324          DEM_DET_REPORT_ERROR(DEM_DCMREADDATAOFOBDFREEZEFRAME_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	 11325      }
; ..\EAS\BSW\Dem\Dem.c	 11326      else if(DEM_OBD_FF_EVENT == DEM_EVENT_ID_INVALID)
; ..\EAS\BSW\Dem\Dem.c	 11327      {
; ..\EAS\BSW\Dem\Dem.c	 11328          DEM_DET_REPORT_ERROR(DEM_DCMREADDATAOFOBDFREEZEFRAME_APIID, DEM_E_NODATAAVAILABLE);
; ..\EAS\BSW\Dem\Dem.c	 11329      }
; ..\EAS\BSW\Dem\Dem.c	 11330      else
; ..\EAS\BSW\Dem\Dem.c	 11331      {
; ..\EAS\BSW\Dem\Dem.c	 11332          SrcDataPtr = DEM_OBD_FF_DATA_BUF;
; ..\EAS\BSW\Dem\Dem.c	 11333  #if(DEM_CFG_OBD_NUM_OF_PID > 0)
; ..\EAS\BSW\Dem\Dem.c	 11334          /*SWS_Dem_00596*//*SWS_Dem_00597*/
; ..\EAS\BSW\Dem\Dem.c	 11335          for(PidIndex = 0; PidIndex < DEM_CFG_OBD_NUM_OF_PID; PidIndex++)
; ..\EAS\BSW\Dem\Dem.c	 11336          {
; ..\EAS\BSW\Dem\Dem.c	 11337              SrcDataPtr++;/*PID length: one byte*/
; ..\EAS\BSW\Dem\Dem.c	 11338  
; ..\EAS\BSW\Dem\Dem.c	 11339              if((DEM_CFG_PID_ID(PidIndex) == PID) \ 
; ..\EAS\BSW\Dem\Dem.c	 11340                  && (DataElementIndexOfPID < DEM_CFG_PID_NUM_OF_DATA(PidIndex)))
; ..\EAS\BSW\Dem\Dem.c	 11341              {
; ..\EAS\BSW\Dem\Dem.c	 11342                  DataIndexOfDataClass = DEM_CFG_PID_DATA_CLASS(PidIndex)[DataElementIndexOfPID];
; ..\EAS\BSW\Dem\Dem.c	 11343  
; ..\EAS\BSW\Dem\Dem.c	 11344                  if(*BufSize < DEM_CFG_DATA_CS_DATA_SIZE(DataIndexOfDataClass))
; ..\EAS\BSW\Dem\Dem.c	 11345                  {
; ..\EAS\BSW\Dem\Dem.c	 11346                      DEM_DET_REPORT_ERROR(DEM_DCMREADDATAOFOBDFREEZEFRAME_APIID, DEM_E_PARAM_LENGTH);
; ..\EAS\BSW\Dem\Dem.c	 11347                  }
; ..\EAS\BSW\Dem\Dem.c	 11348                  else
; ..\EAS\BSW\Dem\Dem.c	 11349                  {
; ..\EAS\BSW\Dem\Dem.c	 11350                      for(DataIndex = 0; DataIndex < DEM_CFG_PID_NUM_OF_DATA(PidIndex); DataIndex++)
; ..\EAS\BSW\Dem\Dem.c	 11351                      {
; ..\EAS\BSW\Dem\Dem.c	 11352                          DataIndexOfDataClass = DEM_CFG_PID_DATA_CLASS(PidIndex)[DataIndex];
; ..\EAS\BSW\Dem\Dem.c	 11353  
; ..\EAS\BSW\Dem\Dem.c	 11354                          if(DataIndex == DataElementIndexOfPID)
; ..\EAS\BSW\Dem\Dem.c	 11355                          {
; ..\EAS\BSW\Dem\Dem.c	 11356                              *BufSize = DEM_CFG_DATA_CS_DATA_SIZE(DataIndexOfDataClass);
; ..\EAS\BSW\Dem\Dem.c	 11357                              Bsw_MemCpy(DestBuffer, SrcDataPtr, (*BufSize));
; ..\EAS\BSW\Dem\Dem.c	 11358                          }
; ..\EAS\BSW\Dem\Dem.c	 11359                          else
; ..\EAS\BSW\Dem\Dem.c	 11360                          {
; ..\EAS\BSW\Dem\Dem.c	 11361                              SrcDataPtr += DEM_CFG_DATA_CS_DATA_SIZE(DataIndexOfDataClass);
; ..\EAS\BSW\Dem\Dem.c	 11362                          }
; ..\EAS\BSW\Dem\Dem.c	 11363                      }
; ..\EAS\BSW\Dem\Dem.c	 11364                      Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	 11365                  }
; ..\EAS\BSW\Dem\Dem.c	 11366                  break;
; ..\EAS\BSW\Dem\Dem.c	 11367              }
; ..\EAS\BSW\Dem\Dem.c	 11368              else
; ..\EAS\BSW\Dem\Dem.c	 11369              {
; ..\EAS\BSW\Dem\Dem.c	 11370                  for(DataIndex = 0; DataIndex < DEM_CFG_PID_NUM_OF_DATA(PidIndex); DataIndex++)
; ..\EAS\BSW\Dem\Dem.c	 11371                  {
; ..\EAS\BSW\Dem\Dem.c	 11372                      DataIndexOfDataClass = DEM_CFG_PID_DATA_CLASS(PidIndex)[DataIndex];
; ..\EAS\BSW\Dem\Dem.c	 11373                      SrcDataPtr += DEM_CFG_DATA_CS_DATA_SIZE(DataIndexOfDataClass);
; ..\EAS\BSW\Dem\Dem.c	 11374                  }
; ..\EAS\BSW\Dem\Dem.c	 11375              }
; ..\EAS\BSW\Dem\Dem.c	 11376          }
; ..\EAS\BSW\Dem\Dem.c	 11377  
; ..\EAS\BSW\Dem\Dem.c	 11378          if(PidIndex == DEM_CFG_OBD_NUM_OF_PID)
; ..\EAS\BSW\Dem\Dem.c	 11379          {
; ..\EAS\BSW\Dem\Dem.c	 11380              DEM_DET_REPORT_ERROR(DEM_DCMREADDATAOFOBDFREEZEFRAME_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	 11381          }
; ..\EAS\BSW\Dem\Dem.c	 11382  #endif
; ..\EAS\BSW\Dem\Dem.c	 11383      }
; ..\EAS\BSW\Dem\Dem.c	 11384      return Result;
; ..\EAS\BSW\Dem\Dem.c	 11385  }
; ..\EAS\BSW\Dem\Dem.c	 11386  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 11387  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11388  * Function Name: Dem_DcmGetDTCOfOBDFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	 11389  *
; ..\EAS\BSW\Dem\Dem.c	 11390  * Description: Gets DTC by freeze frame record number.
; ..\EAS\BSW\Dem\Dem.c	 11391  *
; ..\EAS\BSW\Dem\Dem.c	 11392  * Inputs: FrameNumber: Unique identifier for a freeze frame record as defined in
; ..\EAS\BSW\Dem\Dem.c	 11393  *                      ISO 15031-5. The value 0x00 indicates the complete OBD
; ..\EAS\BSW\Dem\Dem.c	 11394  *                      freeze frame. Other values are reserved for future
; ..\EAS\BSW\Dem\Dem.c	 11395  *                      functionality.
; ..\EAS\BSW\Dem\Dem.c	 11396  *         DTCFormat: Output format of the DTC value.
; ..\EAS\BSW\Dem\Dem.c	 11397  *
; ..\EAS\BSW\Dem\Dem.c	 11398  * Outputs: DTC: Diagnostic Trouble Code in ODB format.
; ..\EAS\BSW\Dem\Dem.c	 11399  *
; ..\EAS\BSW\Dem\Dem.c	 11400  * Return: E_OK: operation was successful
; ..\EAS\BSW\Dem\Dem.c	 11401  *         E_NOT_OK: no DTC available
; ..\EAS\BSW\Dem\Dem.c	 11402  *
; ..\EAS\BSW\Dem\Dem.c	 11403  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	 11404  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 11405  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11406  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 11407  /*SWS_Dem_00624*/
; ..\EAS\BSW\Dem\Dem.c	 11408  FUNC(Std_ReturnType, DEM_CODE) Dem_DcmGetDTCOfOBDFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	 11409  (
; ..\EAS\BSW\Dem\Dem.c	 11410      uint8 FrameNumber,
; ..\EAS\BSW\Dem\Dem.c	 11411      P2VAR(uint32, AUTOMATIC, DEM_APPL_DATA) DTC,
; ..\EAS\BSW\Dem\Dem.c	 11412      Dem_DTCFormatType DTCFormat
; ..\EAS\BSW\Dem\Dem.c	 11413  )
; ..\EAS\BSW\Dem\Dem.c	 11414  {
; ..\EAS\BSW\Dem\Dem.c	 11415      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	 11416  
; ..\EAS\BSW\Dem\Dem.c	 11417      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	 11418      {
; ..\EAS\BSW\Dem\Dem.c	 11419          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	 11420          DEM_DET_REPORT_ERROR(DEM_DCMGETDTCOFOBDFREEZEFRAME_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	 11421      }
; ..\EAS\BSW\Dem\Dem.c	 11422      else if(DTC == NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	 11423      {
; ..\EAS\BSW\Dem\Dem.c	 11424          DEM_DET_REPORT_ERROR(DEM_DCMGETDTCOFOBDFREEZEFRAME_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	 11425      }
; ..\EAS\BSW\Dem\Dem.c	 11426      else if(DTCFormat != DEM_DTC_FORMAT_OBD)
; ..\EAS\BSW\Dem\Dem.c	 11427      {
; ..\EAS\BSW\Dem\Dem.c	 11428          DEM_DET_REPORT_ERROR(DEM_DCMGETDTCOFOBDFREEZEFRAME_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	 11429      }
; ..\EAS\BSW\Dem\Dem.c	 11430      else
; ..\EAS\BSW\Dem\Dem.c	 11431      {
; ..\EAS\BSW\Dem\Dem.c	 11432          /*SWS_Dem_00291*/
; ..\EAS\BSW\Dem\Dem.c	 11433          if(FrameNumber == 0)
; ..\EAS\BSW\Dem\Dem.c	 11434          {
; ..\EAS\BSW\Dem\Dem.c	 11435              if(DEM_OBD_FF_EVENT != DEM_EVENT_ID_INVALID)
; ..\EAS\BSW\Dem\Dem.c	 11436              {
; ..\EAS\BSW\Dem\Dem.c	 11437                  /*SWS_Dem_00623*/
; ..\EAS\BSW\Dem\Dem.c	 11438                  *DTC = (uint32)DEM_CFG_DTC_OBD_VALUE(DEM_CFG_EVENT_DTCREF(DEM_OBD_FF_EVENT));
; ..\EAS\BSW\Dem\Dem.c	 11439                  Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	 11440              }
; ..\EAS\BSW\Dem\Dem.c	 11441          }
; ..\EAS\BSW\Dem\Dem.c	 11442      }
; ..\EAS\BSW\Dem\Dem.c	 11443      return Result;
; ..\EAS\BSW\Dem\Dem.c	 11444  }
; ..\EAS\BSW\Dem\Dem.c	 11445  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 11446  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11447  * Function Name: Dem_DcmGetAvailableOBDMIDs
; ..\EAS\BSW\Dem\Dem.c	 11448  *
; ..\EAS\BSW\Dem\Dem.c	 11449  * Description: Reports the value of a requested "availability-OBDMID" to the DCM
; ..\EAS\BSW\Dem\Dem.c	 11450  *              upon a Service $06 request.
; ..\EAS\BSW\Dem\Dem.c	 11451  *
; ..\EAS\BSW\Dem\Dem.c	 11452  * Inputs: Obdmid: Availablity OBDMID ($00,$20, $40...)
; ..\EAS\BSW\Dem\Dem.c	 11453  *
; ..\EAS\BSW\Dem\Dem.c	 11454  * Outputs: Obdmidvalue: Bit coded information on the support of OBDMIDs.
; ..\EAS\BSW\Dem\Dem.c	 11455  *
; ..\EAS\BSW\Dem\Dem.c	 11456  * Return: E_OK: Report of DTR result successful
; ..\EAS\BSW\Dem\Dem.c	 11457  *         E_NOT_OK: Report of DTR result failed
; ..\EAS\BSW\Dem\Dem.c	 11458  *
; ..\EAS\BSW\Dem\Dem.c	 11459  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	 11460  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 11461  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11462  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 11463  /*SWS_Dem_00766*/
; ..\EAS\BSW\Dem\Dem.c	 11464  FUNC(Std_ReturnType, DEM_CODE) Dem_DcmGetAvailableOBDMIDs
; ..\EAS\BSW\Dem\Dem.c	 11465  (
; ..\EAS\BSW\Dem\Dem.c	 11466      uint8 Obdmid,
; ..\EAS\BSW\Dem\Dem.c	 11467      P2VAR(uint32, AUTOMATIC, DEM_APPL_DATA) Obdmidvalue
; ..\EAS\BSW\Dem\Dem.c	 11468  )
; ..\EAS\BSW\Dem\Dem.c	 11469  {
; ..\EAS\BSW\Dem\Dem.c	 11470      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	 11471  
; ..\EAS\BSW\Dem\Dem.c	 11472      /*Not implemented.*/
; ..\EAS\BSW\Dem\Dem.c	 11473  
; ..\EAS\BSW\Dem\Dem.c	 11474      return Result;
; ..\EAS\BSW\Dem\Dem.c	 11475  }
; ..\EAS\BSW\Dem\Dem.c	 11476  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 11477  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11478  * Function Name: Dem_DcmGetNumTIDsOfOBDMID
; ..\EAS\BSW\Dem\Dem.c	 11479  *
; ..\EAS\BSW\Dem\Dem.c	 11480  * Description: Gets the number of TIDs per (functional) OBDMID.
; ..\EAS\BSW\Dem\Dem.c	 11481  *
; ..\EAS\BSW\Dem\Dem.c	 11482  * Inputs: Obdmid: OBDMID subject of the request to identify the number of
; ..\EAS\BSW\Dem\Dem.c	 11483  *                 assigned TIDs.
; ..\EAS\BSW\Dem\Dem.c	 11484  *
; ..\EAS\BSW\Dem\Dem.c	 11485  * Outputs: numberOfTIDs: Number of assigned TIDs for the requested OBDMID.
; ..\EAS\BSW\Dem\Dem.c	 11486  *
; ..\EAS\BSW\Dem\Dem.c	 11487  * Return: E_OK: get number of TIDs successful
; ..\EAS\BSW\Dem\Dem.c	 11488  *         E_NOT_OK: get number of TIDs failed
; ..\EAS\BSW\Dem\Dem.c	 11489  *
; ..\EAS\BSW\Dem\Dem.c	 11490  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	 11491  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 11492  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11493  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 11494  /*SWS_Dem_00767*/
; ..\EAS\BSW\Dem\Dem.c	 11495  FUNC(Std_ReturnType, DEM_CODE) Dem_DcmGetNumTIDsOfOBDMID
; ..\EAS\BSW\Dem\Dem.c	 11496  (
; ..\EAS\BSW\Dem\Dem.c	 11497      uint8 Obdmid,
; ..\EAS\BSW\Dem\Dem.c	 11498      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) numberOfTIDs
; ..\EAS\BSW\Dem\Dem.c	 11499  )
; ..\EAS\BSW\Dem\Dem.c	 11500  {
; ..\EAS\BSW\Dem\Dem.c	 11501      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	 11502  
; ..\EAS\BSW\Dem\Dem.c	 11503      /*Not implemented.*/
; ..\EAS\BSW\Dem\Dem.c	 11504  
; ..\EAS\BSW\Dem\Dem.c	 11505      return Result;
; ..\EAS\BSW\Dem\Dem.c	 11506  }
; ..\EAS\BSW\Dem\Dem.c	 11507  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 11508  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11509  * Function Name: Dem_DcmGetNumTIDsOfOBDMID
; ..\EAS\BSW\Dem\Dem.c	 11510  *
; ..\EAS\BSW\Dem\Dem.c	 11511  * Description: Reports a DTR data along with TID-value, UaSID, test result with
; ..\EAS\BSW\Dem\Dem.c	 11512  *              lower and upper limit.
; ..\EAS\BSW\Dem\Dem.c	 11513  *
; ..\EAS\BSW\Dem\Dem.c	 11514  * Inputs: Obdmid: Identification of a DTR element by assigned DTRId.
; ..\EAS\BSW\Dem\Dem.c	 11515  *         TIDindex: Index of the TID within the DEM. Runs from 0 to "numberOfTIDs"
; ..\EAS\BSW\Dem\Dem.c	 11516  *                   obtained in the call to Dem_DcmGetNumTIDsOfOBDMID().
; ..\EAS\BSW\Dem\Dem.c	 11517  *
; ..\EAS\BSW\Dem\Dem.c	 11518  * Outputs: TIDvalue: TID to be put on the tester reponse.
; ..\EAS\BSW\Dem\Dem.c	 11519  *          UaSID: UaSID to be put on the tester reponse.
; ..\EAS\BSW\Dem\Dem.c	 11520  *          Testvalue: Latest test result.
; ..\EAS\BSW\Dem\Dem.c	 11521  *          Lowlimvalue: Lower limit value associated to the latest test result.
; ..\EAS\BSW\Dem\Dem.c	 11522  *          Upplimvalue: Upper limit value associated to the latest test result.
; ..\EAS\BSW\Dem\Dem.c	 11523  *
; ..\EAS\BSW\Dem\Dem.c	 11524  * Return: E_OK: get number of TIDs successful
; ..\EAS\BSW\Dem\Dem.c	 11525  *         E_NOT_OK: get number of TIDs failed
; ..\EAS\BSW\Dem\Dem.c	 11526  *
; ..\EAS\BSW\Dem\Dem.c	 11527  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	 11528  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 11529  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11530  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 11531  /*SWS_Dem_00768*/
; ..\EAS\BSW\Dem\Dem.c	 11532  FUNC(Std_ReturnType, DEM_CODE) Dem_DcmGetDTRData
; ..\EAS\BSW\Dem\Dem.c	 11533  (
; ..\EAS\BSW\Dem\Dem.c	 11534      uint8 Obdmid,
; ..\EAS\BSW\Dem\Dem.c	 11535      uint8 TIDindex,
; ..\EAS\BSW\Dem\Dem.c	 11536      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) TIDvalue,
; ..\EAS\BSW\Dem\Dem.c	 11537      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) UaSID,
; ..\EAS\BSW\Dem\Dem.c	 11538      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) Testvalue,
; ..\EAS\BSW\Dem\Dem.c	 11539      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) Lowlimvalue,
; ..\EAS\BSW\Dem\Dem.c	 11540      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) Upplimvalue
; ..\EAS\BSW\Dem\Dem.c	 11541  )
; ..\EAS\BSW\Dem\Dem.c	 11542  {
; ..\EAS\BSW\Dem\Dem.c	 11543      Std_ReturnType Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	 11544  
; ..\EAS\BSW\Dem\Dem.c	 11545      /*Not implemented.*/
; ..\EAS\BSW\Dem\Dem.c	 11546  
; ..\EAS\BSW\Dem\Dem.c	 11547      return Result;
; ..\EAS\BSW\Dem\Dem.c	 11548  }
; ..\EAS\BSW\Dem\Dem.c	 11549  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 11550  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11551  * Function Name: Dem_DcmGetDTCSeverityAvailabilityMask
; ..\EAS\BSW\Dem\Dem.c	 11552  *
; ..\EAS\BSW\Dem\Dem.c	 11553  * Description: Gets the DTC Severity availability mask.
; ..\EAS\BSW\Dem\Dem.c	 11554  *
; ..\EAS\BSW\Dem\Dem.c	 11555  * Inputs: None.
; ..\EAS\BSW\Dem\Dem.c	 11556  *
; ..\EAS\BSW\Dem\Dem.c	 11557  * Outputs: DTCSeverityMask: The value DTCSeverityMask indicates the supported
; ..\EAS\BSW\Dem\Dem.c	 11558  *                           DTC severity bits from the Dem.
; ..\EAS\BSW\Dem\Dem.c	 11559  *
; ..\EAS\BSW\Dem\Dem.c	 11560  * Return: E_OK: get of DTC severity mask was successful
; ..\EAS\BSW\Dem\Dem.c	 11561  *         E_NOT_OK: get of DTC severity mask failed
; ..\EAS\BSW\Dem\Dem.c	 11562  *
; ..\EAS\BSW\Dem\Dem.c	 11563  * Limitations: This API will be available only if ({ecuc(Dem/DemGeneral.DemOBD-
; ..\EAS\BSW\Dem\Dem.c	 11564  *              Support)} != DEM_OBD_NO_OBD_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 11565  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11566  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 11567  /*SWS_Dem_01168*/
; ..\EAS\BSW\Dem\Dem.c	 11568  FUNC(Std_ReturnType, DEM_CODE) Dem_DcmGetDTCSeverityAvailabilityMask
; ..\EAS\BSW\Dem\Dem.c	 11569  (
; ..\EAS\BSW\Dem\Dem.c	 11570      P2VAR(Dem_DTCSeverityType, AUTOMATIC, DEM_APPL_DATA) DTCSeverityMask
; ..\EAS\BSW\Dem\Dem.c	 11571  )
; ..\EAS\BSW\Dem\Dem.c	 11572  {
; ..\EAS\BSW\Dem\Dem.c	 11573      Std_ReturnType Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	 11574      uint16 i;
; ..\EAS\BSW\Dem\Dem.c	 11575  
; ..\EAS\BSW\Dem\Dem.c	 11576      if(DTCSeverityMask == NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	 11577      {
; ..\EAS\BSW\Dem\Dem.c	 11578          DEM_DET_REPORT_ERROR(DEM_DCMGETDTCSEVERITYAVAILABILITYMASK_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	 11579          Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	 11580      }
; ..\EAS\BSW\Dem\Dem.c	 11581      else
; ..\EAS\BSW\Dem\Dem.c	 11582      {
; ..\EAS\BSW\Dem\Dem.c	 11583          *DTCSeverityMask = DEM_SEVERITY_NO_SEVERITY;
; ..\EAS\BSW\Dem\Dem.c	 11584          /*SWS_Dem_01181*//*SWS_Dem_01182*/
; ..\EAS\BSW\Dem\Dem.c	 11585          for(i = 0; i < DEM_NUM_OF_DTC; i++)
; ..\EAS\BSW\Dem\Dem.c	 11586          {
; ..\EAS\BSW\Dem\Dem.c	 11587              *DTCSeverityMask |= DEM_CFG_DTC_SEVERITY(i);
; ..\EAS\BSW\Dem\Dem.c	 11588  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	 11589              *DTCSeverityMask |= DEM_CFG_DTC_OBDDTCCLASS(i);
; ..\EAS\BSW\Dem\Dem.c	 11590  #endif
; ..\EAS\BSW\Dem\Dem.c	 11591          }
; ..\EAS\BSW\Dem\Dem.c	 11592      }
; ..\EAS\BSW\Dem\Dem.c	 11593      return Result;
; ..\EAS\BSW\Dem\Dem.c	 11594  }
; ..\EAS\BSW\Dem\Dem.c	 11595  #endif/*#if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))*/
; ..\EAS\BSW\Dem\Dem.c	 11596  
; ..\EAS\BSW\Dem\Dem.c	 11597  #define DEM_STOP_SEC_CODE
; ..\EAS\BSW\Dem\Dem.c	 11598  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	 11599  
; ..\EAS\BSW\Dem\Dem.c	 11600  
; ..\EAS\BSW\Dem\Dem.c	 11601  
; ..\EAS\BSW\Dem\Dem.c	 11602  /*******************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11603  *   Dem_NvM
; ..\EAS\BSW\Dem\Dem.c	 11604  *******************************************************************************/
; ..\EAS\BSW\Dem\Dem.c	 11605  #define DEM_START_SEC_CODE
; ..\EAS\BSW\Dem\Dem.c	 11606  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	 11607  
; ..\EAS\BSW\Dem\Dem.c	 11608  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 11609  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11610  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	 11611  *
; ..\EAS\BSW\Dem\Dem.c	 11612  * Description:
; ..\EAS\BSW\Dem\Dem.c	 11613  *
; ..\EAS\BSW\Dem\Dem.c	 11614  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	 11615  *
; ..\EAS\BSW\Dem\Dem.c	 11616  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	 11617  *
; ..\EAS\BSW\Dem\Dem.c	 11618  * Return:
; ..\EAS\BSW\Dem\Dem.c	 11619  *
; ..\EAS\BSW\Dem\Dem.c	 11620  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	 11621  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11622  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 11623  FUNC(Std_ReturnType, DEM_CODE) Dem_NvM_InitStorageMem
; Function Dem_NvM_InitStorageMem
.L1077:
Dem_NvM_InitStorageMem:	.type	func

; ..\EAS\BSW\Dem\Dem.c	 11624  (
; ..\EAS\BSW\Dem\Dem.c	 11625      void
; ..\EAS\BSW\Dem\Dem.c	 11626  )
; ..\EAS\BSW\Dem\Dem.c	 11627  {
; ..\EAS\BSW\Dem\Dem.c	 11628      uint16 i;
; ..\EAS\BSW\Dem\Dem.c	 11629  
; ..\EAS\BSW\Dem\Dem.c	 11630      DEM_EVENT_FIRST_FAILED = DEM_DATA_INVALID_U16;
	movh.a	a15,#@his(Dem_StorageMem)
.L3976:
	mov.u	d15,#65535
.L3977:
	st.h	[a15]@los(Dem_StorageMem),d15
.L3978:

; ..\EAS\BSW\Dem\Dem.c	 11631      DEM_EVENT_RECENT_FAILED = DEM_DATA_INVALID_U16;
	movh.a	a15,#@his(Dem_StorageMem+4)
.L3979:
	st.h	[a15]@los(Dem_StorageMem+4),d15
.L3980:

; ..\EAS\BSW\Dem\Dem.c	 11632      DEM_EVENT_FIRST_CONFIRMED = DEM_DATA_INVALID_U16;
	movh.a	a15,#@his(Dem_StorageMem+2)
.L3981:
	st.h	[a15]@los(Dem_StorageMem+2),d15
.L3982:

; ..\EAS\BSW\Dem\Dem.c	 11633      DEM_EVENT_RECENT_CONFIRMED = DEM_DATA_INVALID_U16;
	movh.a	a15,#@his(Dem_StorageMem+6)
.L3983:
	st.h	[a15]@los(Dem_StorageMem+6),d15
.L3984:

; ..\EAS\BSW\Dem\Dem.c	 11634  
; ..\EAS\BSW\Dem\Dem.c	 11635      for(i = 0; i < DEM_NUM_OF_EVENT; i++)
	mov	d0,#0
.L2877:

; ..\EAS\BSW\Dem\Dem.c	 11636      {
; ..\EAS\BSW\Dem\Dem.c	 11637          DEM_EVENT_FCC(i) = DEM_DATA_CLEAR;
	mov	d1,d0
.L2879:

; ..\EAS\BSW\Dem\Dem.c	 11638  #if(DEM_NUM_OF_INDICATOR > 0)
; ..\EAS\BSW\Dem\Dem.c	 11639          DEM_EVENT_IFCC(i) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	 11640          DEM_EVENT_IHCC(i) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	 11641  #endif
; ..\EAS\BSW\Dem\Dem.c	 11642          DEM_EVENT_OCCCTR(i) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	 11643  #if(DEM_CFG_DEBOUNCECOUNTERBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	 11644          DEM_EVENT_DBC(i) = 0;
; ..\EAS\BSW\Dem\Dem.c	 11645  #endif
; ..\EAS\BSW\Dem\Dem.c	 11646  #if(DEM_CFG_DEBOUNCETIMEBASEDSUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	 11647          DEM_EVENT_DBT(i) = 0;
; ..\EAS\BSW\Dem\Dem.c	 11648          DEM_EVENT_TIMERDIRECTION(i) = DEM_DATA_INVALID_U8;
	mov	d2,#255
.L3985:
	mov	d3,#116
.L3986:
	j	.L886
.L887:
	sha	d15,d0,#4
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L2880:
	st.b	[a15]8,d1
.L2881:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L2882:
	st.b	[a15]9,d1
.L2883:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L2884:
	st.h	[a15]10,d1
.L2885:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L2886:
	st.w	[a15]12,d1
.L2887:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L3987:
	st.b	[a15]16,d2
.L3988:

; ..\EAS\BSW\Dem\Dem.c	 11649  #endif
; ..\EAS\BSW\Dem\Dem.c	 11650          DEM_EVENT_MAXFDCDCC(i) = 0;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L2888:
	st.b	[a15]17,d1
.L2889:

; ..\EAS\BSW\Dem\Dem.c	 11651          DEM_EVENT_MAXFDCSLC(i) = 0;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L2890:
	st.b	[a15]18,d1
.L2891:

; ..\EAS\BSW\Dem\Dem.c	 11652          DEM_EVENT_CSLF(i) = DEM_DATA_CLEAR;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L2892:
	st.b	[a15]19,d1
.L2893:

; ..\EAS\BSW\Dem\Dem.c	 11653          DEM_EVENT_CSFF(i) = DEM_DATA_CLEAR;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L2894:
	st.b	[a15]20,d1
.L2895:

; ..\EAS\BSW\Dem\Dem.c	 11654          DEM_EVENT_FCSLC(i) = DEM_DATA_CLEAR;
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L2896:
	st.b	[a15]21,d1
.L2897:
	add	d0,#1
.L886:
	jlt.u	d0,d3,.L887
.L3989:

; ..\EAS\BSW\Dem\Dem.c	 11655  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	 11656          DEM_EVENT_OBD_PCSLF(i) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	 11657  #endif
; ..\EAS\BSW\Dem\Dem.c	 11658  #if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)
; ..\EAS\BSW\Dem\Dem.c	 11659          DEM_EVENT_OBD_CLEAR_FLAG(i) = FALSE;
; ..\EAS\BSW\Dem\Dem.c	 11660  #endif
; ..\EAS\BSW\Dem\Dem.c	 11661  #if(STD_ON == DEM_CMA_PLATFORM_ENABLED)
; ..\EAS\BSW\Dem\Dem.c	 11662          DEM_EVENT_CMA_PCSLF(i) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	 11663          DEM_EVENT_CMA_STATUS(i) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	 11664  #endif
; ..\EAS\BSW\Dem\Dem.c	 11665      }
; ..\EAS\BSW\Dem\Dem.c	 11666  
; ..\EAS\BSW\Dem\Dem.c	 11667      for(i = 0; i < DEM_NUM_OF_DTC; i++)
	mov	d0,#0
.L3990:

; ..\EAS\BSW\Dem\Dem.c	 11668      {
; ..\EAS\BSW\Dem\Dem.c	 11669          DEM_DTC_STATUS(i) = DEM_STATUS_RESET;
	mov	d1,#80
.L3991:

; ..\EAS\BSW\Dem\Dem.c	 11670          DEM_DTC_LASTSTATUS(i) = DEM_STATUS_RESET;
; ..\EAS\BSW\Dem\Dem.c	 11671          DEM_DTC_AGINGCNT(i) = DEM_DATA_CLEAR;
	mov	d2,d0
.L2898:

; ..\EAS\BSW\Dem\Dem.c	 11672          DEM_DTC_AGEDCNT(i) = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	 11673          DEM_DTC_DATAENTRYREF(i) = DEM_DATA_INVALID_U16;
	mov.u	d3,#65535
.L3992:
	mov	d4,#116
.L3993:
	j	.L888
.L889:
	mul	d15,d0,#6
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L3994:
	st.b	[a15]1864,d1
.L3995:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L3996:
	st.b	[a15]1865,d1
.L3997:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L2899:
	st.b	[a15]1866,d2
.L2900:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L2901:
	st.b	[a15]1867,d2
.L2902:
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L3998:
	st.h	[a15]1868,d3
.L3999:
	add	d0,#1
.L888:
	jlt.u	d0,d4,.L889
.L4000:

; ..\EAS\BSW\Dem\Dem.c	 11674      }
; ..\EAS\BSW\Dem\Dem.c	 11675  
; ..\EAS\BSW\Dem\Dem.c	 11676      DEM_PRIMARY_DATAENTRY_USEDNUM = DEM_DATA_CLEAR;
	movh.a	a15,#@his(Dem_StorageMem+2560)
.L4001:
	mov	d8,#0
.L2878:
	st.h	[a15]@los(Dem_StorageMem+2560),d8
.L4002:

; ..\EAS\BSW\Dem\Dem.c	 11677  
; ..\EAS\BSW\Dem\Dem.c	 11678      for(i = 0; i < DEM_CFG_MAXNUMBEREVENTENTRY_PRIMARY; i++)
; ..\EAS\BSW\Dem\Dem.c	 11679      {
; ..\EAS\BSW\Dem\Dem.c	 11680          DEM_PRIMARY_DATAENTRY_USED(i) = FALSE;
	mov	d9,d8
.L2903:
	mov	d10,#121
.L4003:
	j	.L890
.L891:
	mul	d15,d8,#56
	movh.a	a15,#@his(Dem_StorageMem)
	lea	a15,[a15]@los(Dem_StorageMem)
	addsc.a	a15,a15,d15,#0
.L2904:
	st.b	[a15]2564,d9
.L2905:

; ..\EAS\BSW\Dem\Dem.c	 11681          DemInternal_ClearOneMemoryEntry(i);
	mov	d4,d8
.L2906:
	call	DemInternal_ClearOneMemoryEntry
.L2907:
	add	d8,#1
.L890:
	jlt.u	d8,d10,.L891
.L4004:

; ..\EAS\BSW\Dem\Dem.c	 11682      }
; ..\EAS\BSW\Dem\Dem.c	 11683  
; ..\EAS\BSW\Dem\Dem.c	 11684  #if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)
; ..\EAS\BSW\Dem\Dem.c	 11685      DEM_PERMANENT_DATAENTRY_USEDNUM = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	 11686  
; ..\EAS\BSW\Dem\Dem.c	 11687      for(i = 0; i < DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT; i++)
; ..\EAS\BSW\Dem\Dem.c	 11688      {
; ..\EAS\BSW\Dem\Dem.c	 11689          DEM_PERMANENT_DATAENTRY_EVENTID(i) = DEM_EVENT_ID_INVALID;
; ..\EAS\BSW\Dem\Dem.c	 11690      }
; ..\EAS\BSW\Dem\Dem.c	 11691  #endif/*#if(DEM_CFG_MAXNUMBEREVENTENTRY_PERMANENT > 0)*/
; ..\EAS\BSW\Dem\Dem.c	 11692  
; ..\EAS\BSW\Dem\Dem.c	 11693  #if(DEM_NUM_OF_INDICATOR > 0)
; ..\EAS\BSW\Dem\Dem.c	 11694      for(i = 0; i < DEM_NUM_OF_BYTE_RECORD_INDICATOR_STATE; i++)
; ..\EAS\BSW\Dem\Dem.c	 11695      {
; ..\EAS\BSW\Dem\Dem.c	 11696          DEM_INDICATOR_STATUS(i) = DEM_INDICATOR_OFF;
; ..\EAS\BSW\Dem\Dem.c	 11697      }
; ..\EAS\BSW\Dem\Dem.c	 11698  #endif
; ..\EAS\BSW\Dem\Dem.c	 11699  
; ..\EAS\BSW\Dem\Dem.c	 11700  #if((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))
; ..\EAS\BSW\Dem\Dem.c	 11701      DemInternal_InitOBDData();
; ..\EAS\BSW\Dem\Dem.c	 11702  #endif
; ..\EAS\BSW\Dem\Dem.c	 11703  
; ..\EAS\BSW\Dem\Dem.c	 11704      return E_OK;
	mov	d2,#0
.L4005:

; ..\EAS\BSW\Dem\Dem.c	 11705  }
	ret
.L1886:
	
__Dem_NvM_InitStorageMem_function_end:
	.size	Dem_NvM_InitStorageMem,__Dem_NvM_InitStorageMem_function_end-Dem_NvM_InitStorageMem
.L1362:
	; End of function
	
	.sdecl	'.text.Dem.Dem_NvM_JobResultInd',code,cluster('Dem_NvM_JobResultInd')
	.sect	'.text.Dem.Dem_NvM_JobResultInd'
	.align	2
	
	.global	Dem_NvM_JobResultInd

; ..\EAS\BSW\Dem\Dem.c	 11706  
; ..\EAS\BSW\Dem\Dem.c	 11707  #if(STD_ON == DEM_NVM_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 11708  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 11709  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11710  * Function Name:
; ..\EAS\BSW\Dem\Dem.c	 11711  *
; ..\EAS\BSW\Dem\Dem.c	 11712  * Description:
; ..\EAS\BSW\Dem\Dem.c	 11713  *
; ..\EAS\BSW\Dem\Dem.c	 11714  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	 11715  *
; ..\EAS\BSW\Dem\Dem.c	 11716  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	 11717  *
; ..\EAS\BSW\Dem\Dem.c	 11718  * Return:
; ..\EAS\BSW\Dem\Dem.c	 11719  *
; ..\EAS\BSW\Dem\Dem.c	 11720  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	 11721  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11722  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 11723  FUNC(Std_ReturnType, DEM_CODE) Dem_NvM_JobResultInd
; Function Dem_NvM_JobResultInd
.L1079:
Dem_NvM_JobResultInd:	.type	func

; ..\EAS\BSW\Dem\Dem.c	 11724  (
; ..\EAS\BSW\Dem\Dem.c	 11725      uint8 ServiceId,
; ..\EAS\BSW\Dem\Dem.c	 11726      NvM_RequestResultType JobResult
; ..\EAS\BSW\Dem\Dem.c	 11727  )
; ..\EAS\BSW\Dem\Dem.c	 11728  {
; ..\EAS\BSW\Dem\Dem.c	 11729      Std_ReturnType Result = E_NOT_OK;
	mov	d2,#1
.L2908:

; ..\EAS\BSW\Dem\Dem.c	 11730  
; ..\EAS\BSW\Dem\Dem.c	 11731      if(((ServiceId == NVM_JOB_READ) || (ServiceId == NVM_JOB_READALL)) \ 
	jeq	d4,#6,.L893
.L4010:
	mov	d15,#12
.L4011:
	jne	d15,d4,.L894
.L893:

; ..\EAS\BSW\Dem\Dem.c	 11732              && (JobResult != NVM_REQ_OK))
	jeq	d5,#0,.L895
.L4012:

; ..\EAS\BSW\Dem\Dem.c	 11733      {
; ..\EAS\BSW\Dem\Dem.c	 11734          Result = Dem_NvM_InitStorageMem();
	j	Dem_NvM_InitStorageMem
.L895:
.L894:

; ..\EAS\BSW\Dem\Dem.c	 11735      }
; ..\EAS\BSW\Dem\Dem.c	 11736      return Result;
; ..\EAS\BSW\Dem\Dem.c	 11737  }
	ret
.L1888:
	
__Dem_NvM_JobResultInd_function_end:
	.size	Dem_NvM_JobResultInd,__Dem_NvM_JobResultInd_function_end-Dem_NvM_JobResultInd
.L1367:
	; End of function
	
	.sdecl	'.text.Dem.Dem_J1939DcmFirstDTCwithLampStatus',code,cluster('Dem_J1939DcmFirstDTCwithLampStatus')
	.sect	'.text.Dem.Dem_J1939DcmFirstDTCwithLampStatus'
	.align	2
	
	.global	Dem_J1939DcmFirstDTCwithLampStatus

; ..\EAS\BSW\Dem\Dem.c	 11738  #endif
; ..\EAS\BSW\Dem\Dem.c	 11739  
; ..\EAS\BSW\Dem\Dem.c	 11740  #define DEM_STOP_SEC_CODE
; ..\EAS\BSW\Dem\Dem.c	 11741  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	 11742  
; ..\EAS\BSW\Dem\Dem.c	 11743  
; ..\EAS\BSW\Dem\Dem.c	 11744  
; ..\EAS\BSW\Dem\Dem.c	 11745  /*******************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11746  *   Dem_J1939Dcm
; ..\EAS\BSW\Dem\Dem.c	 11747  *******************************************************************************/
; ..\EAS\BSW\Dem\Dem.c	 11748  #define DEM_START_SEC_CODE
; ..\EAS\BSW\Dem\Dem.c	 11749  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	 11750  /*******************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11751  * Access DTCs and Status Information
; ..\EAS\BSW\Dem\Dem.c	 11752  *******************************************************************************/
; ..\EAS\BSW\Dem\Dem.c	 11753  
; ..\EAS\BSW\Dem\Dem.c	 11754  #if(STD_ON == DEM_CFG_J1939READING_DTC_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 11755  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 11756  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11757  * Function Name: Dem_J1939DcmSetDTCFilter
; ..\EAS\BSW\Dem\Dem.c	 11758  *
; ..\EAS\BSW\Dem\Dem.c	 11759  * Description: The function sets the DTC filter for a specific node and returns
; ..\EAS\BSW\Dem\Dem.c	 11760  *              the composite lamp status of the filtered DTCs.
; ..\EAS\BSW\Dem\Dem.c	 11761  *
; ..\EAS\BSW\Dem\Dem.c	 11762  * Inputs: DTCStatusFilter,DTCKind,node
; ..\EAS\BSW\Dem\Dem.c	 11763  *
; ..\EAS\BSW\Dem\Dem.c	 11764  * Outputs: LampStatus
; ..\EAS\BSW\Dem\Dem.c	 11765  *
; ..\EAS\BSW\Dem\Dem.c	 11766  * Return: Dem_ReturnSetFilterType
; ..\EAS\BSW\Dem\Dem.c	 11767  *
; ..\EAS\BSW\Dem\Dem.c	 11768  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	 11769  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11770  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 11771  /*SWS_Dem_00970*/
; ..\EAS\BSW\Dem\Dem.c	 11772  FUNC(Dem_ReturnSetFilterType, DEM_CODE) Dem_J1939DcmSetDTCFilter
; ..\EAS\BSW\Dem\Dem.c	 11773  (
; ..\EAS\BSW\Dem\Dem.c	 11774      Dem_J1939DcmDTCStatusFilterType DTCStatusFilter,
; ..\EAS\BSW\Dem\Dem.c	 11775      Dem_DTCKindType DTCKind,
; ..\EAS\BSW\Dem\Dem.c	 11776      uint8 node,
; ..\EAS\BSW\Dem\Dem.c	 11777      P2VAR(Dem_J1939DcmLampStatusType, AUTOMATIC, DEM_APPL_DATA) LampStatus
; ..\EAS\BSW\Dem\Dem.c	 11778  )
; ..\EAS\BSW\Dem\Dem.c	 11779  {
; ..\EAS\BSW\Dem\Dem.c	 11780      Dem_ReturnSetFilterType Result = DEM_FILTER_ACCEPTED;
; ..\EAS\BSW\Dem\Dem.c	 11781      uint16 i;
; ..\EAS\BSW\Dem\Dem.c	 11782      uint8 j;
; ..\EAS\BSW\Dem\Dem.c	 11783      Dem_UdsStatusByteType DTCStatus;
; ..\EAS\BSW\Dem\Dem.c	 11784  #if(DEM_NUM_OF_INDICATOR > 0)
; ..\EAS\BSW\Dem\Dem.c	 11785      Dem_IndicatorStatusType IndicatorStatus;
; ..\EAS\BSW\Dem\Dem.c	 11786  #endif
; ..\EAS\BSW\Dem\Dem.c	 11787  
; ..\EAS\BSW\Dem\Dem.c	 11788      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	 11789      {
; ..\EAS\BSW\Dem\Dem.c	 11790          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	 11791          DEM_DET_REPORT_ERROR(DEM_J1939DCMSETDTCFILTER_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	 11792          Result = DEM_WRONG_FILTER;
; ..\EAS\BSW\Dem\Dem.c	 11793      }
; ..\EAS\BSW\Dem\Dem.c	 11794      else if(DTCStatusFilter > DEM_J1939DTC_CURRENTLY_ACTIVE)
; ..\EAS\BSW\Dem\Dem.c	 11795      {
; ..\EAS\BSW\Dem\Dem.c	 11796          DEM_DET_REPORT_ERROR(DEM_J1939DCMSETDTCFILTER_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	 11797          Result = DEM_WRONG_FILTER;
; ..\EAS\BSW\Dem\Dem.c	 11798      }
; ..\EAS\BSW\Dem\Dem.c	 11799      else if(DTCKind != DEM_DTC_KIND_ALL_DTCS)
; ..\EAS\BSW\Dem\Dem.c	 11800      {
; ..\EAS\BSW\Dem\Dem.c	 11801          /*Only support DM01 and DM02*/
; ..\EAS\BSW\Dem\Dem.c	 11802          DEM_DET_REPORT_ERROR(DEM_J1939DCMSETDTCFILTER_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	 11803          Result = DEM_WRONG_FILTER;
; ..\EAS\BSW\Dem\Dem.c	 11804      }
; ..\EAS\BSW\Dem\Dem.c	 11805      else
; ..\EAS\BSW\Dem\Dem.c	 11806      {
; ..\EAS\BSW\Dem\Dem.c	 11807          /*SWS_Dem_00855*//*SWS_Dem_00856*/
; ..\EAS\BSW\Dem\Dem.c	 11808          Dem_J1939DcmFilterInfo.DTCStatusFilter = DTCStatusFilter;
; ..\EAS\BSW\Dem\Dem.c	 11809          Dem_J1939DcmFilterInfo.DTCKind = DTCKind;
; ..\EAS\BSW\Dem\Dem.c	 11810          Dem_J1939DcmFilterInfo.node = node;
; ..\EAS\BSW\Dem\Dem.c	 11811          Dem_J1939DcmFilterInfo.NumberOfFilteredDTC = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	 11812          Dem_J1939DcmFilterInfo.NextFilteredDTCIndex = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	 11813          Dem_J1939DcmFilterInfo.FreezeFrameKind = DEM_DATA_INVALID_U8;
; ..\EAS\BSW\Dem\Dem.c	 11814  #if(((DEM_CFG_OBD_SUPPORT == DEM_OBD_MASTER_ECU)||(DEM_CFG_OBD_SUPPORT == DEM_OBD_PRIMARY_ECU))||(DEM_J1939_SUPPORT == STD_ON))
; ..\EAS\BSW\Dem\Dem.c	 11815          /*Only support DM01 and DM02*/
; ..\EAS\BSW\Dem\Dem.c	 11816          for(i = 0; i < DEM_NUM_OF_DTC; i++)
; ..\EAS\BSW\Dem\Dem.c	 11817          {
; ..\EAS\BSW\Dem\Dem.c	 11818              if((DEM_CFG_DTC_J1939NODE_REF(i) != NULL_PTR) && \ 
; ..\EAS\BSW\Dem\Dem.c	 11819                  (DEM_CFG_DTC_OBDDTCREF(i) != NULL_PTR) && (DEM_CFG_DTC_J1939_VALUE(i) != (uint32)0))
; ..\EAS\BSW\Dem\Dem.c	 11820              {
; ..\EAS\BSW\Dem\Dem.c	 11821                  for(j = 0; j < DEM_CFG_DTC_J1939NODE_NUM(i); j++)
; ..\EAS\BSW\Dem\Dem.c	 11822                  {
; ..\EAS\BSW\Dem\Dem.c	 11823                      if((DEM_CFG_DTC_J1939NODE_ARRAY(i)[j]) == node)
; ..\EAS\BSW\Dem\Dem.c	 11824                      {
; ..\EAS\BSW\Dem\Dem.c	 11825                          DTCStatus = DEM_DTC_STATUS(i);
; ..\EAS\BSW\Dem\Dem.c	 11826                          if((DTCStatusFilter == DEM_J1939DTC_ACTIVE) \ 
; ..\EAS\BSW\Dem\Dem.c	 11827                                  && (DEM_TEST_UDS_STATUS_TF(DTCStatus)) \ 
; ..\EAS\BSW\Dem\Dem.c	 11828                                  && (DEM_TEST_UDS_STATUS_CDTC(DTCStatus)))
; ..\EAS\BSW\Dem\Dem.c	 11829                          {
; ..\EAS\BSW\Dem\Dem.c	 11830                              /*Request by DM01*/
; ..\EAS\BSW\Dem\Dem.c	 11831                              Dem_J1939DcmFilterInfo.FilteredDTCIndexTable[Dem_J1939DcmFilterInfo.NumberOfFilteredDTC] = i;
; ..\EAS\BSW\Dem\Dem.c	 11832                              Dem_J1939DcmFilterInfo.NumberOfFilteredDTC++;
; ..\EAS\BSW\Dem\Dem.c	 11833                          }
; ..\EAS\BSW\Dem\Dem.c	 11834                          else if((DTCStatusFilter == DEM_J1939DTC_PREVIOUSLY_ACTIVE) \ 
; ..\EAS\BSW\Dem\Dem.c	 11835                                  && (!DEM_TEST_UDS_STATUS_TF(DTCStatus)) \ 
; ..\EAS\BSW\Dem\Dem.c	 11836                                  && (DEM_TEST_UDS_STATUS_CDTC(DTCStatus)))
; ..\EAS\BSW\Dem\Dem.c	 11837                          {
; ..\EAS\BSW\Dem\Dem.c	 11838                              /*Request by DM02*/
; ..\EAS\BSW\Dem\Dem.c	 11839                              Dem_J1939DcmFilterInfo.FilteredDTCIndexTable[Dem_J1939DcmFilterInfo.NumberOfFilteredDTC] = i;
; ..\EAS\BSW\Dem\Dem.c	 11840                              Dem_J1939DcmFilterInfo.NumberOfFilteredDTC++;
; ..\EAS\BSW\Dem\Dem.c	 11841                          }
; ..\EAS\BSW\Dem\Dem.c	 11842                          else
; ..\EAS\BSW\Dem\Dem.c	 11843                          {
; ..\EAS\BSW\Dem\Dem.c	 11844                              /*do nothing*/
; ..\EAS\BSW\Dem\Dem.c	 11845                          }
; ..\EAS\BSW\Dem\Dem.c	 11846                          break;
; ..\EAS\BSW\Dem\Dem.c	 11847                      }
; ..\EAS\BSW\Dem\Dem.c	 11848                  }
; ..\EAS\BSW\Dem\Dem.c	 11849              }
; ..\EAS\BSW\Dem\Dem.c	 11850          }
; ..\EAS\BSW\Dem\Dem.c	 11851  #endif
; ..\EAS\BSW\Dem\Dem.c	 11852          /*SWS_Dem_00857*/
; ..\EAS\BSW\Dem\Dem.c	 11853  #if(DEM_NUM_OF_INDICATOR > 0)
; ..\EAS\BSW\Dem\Dem.c	 11854          *LampStatus = DEM_J1939_MIL_OFF;
; ..\EAS\BSW\Dem\Dem.c	 11855          /*Returns a composite lamp status of MIL.*/
; ..\EAS\BSW\Dem\Dem.c	 11856          if(DEM_CFG_MILINDICATORREF < DEM_NUM_OF_INDICATOR)
; ..\EAS\BSW\Dem\Dem.c	 11857          {
; ..\EAS\BSW\Dem\Dem.c	 11858              DemInternal_GetIndicatorStatus(DEM_CFG_MILINDICATORREF, &IndicatorStatus);
; ..\EAS\BSW\Dem\Dem.c	 11859  
; ..\EAS\BSW\Dem\Dem.c	 11860              if(IndicatorStatus != DEM_INDICATOR_OFF)
; ..\EAS\BSW\Dem\Dem.c	 11861              {
; ..\EAS\BSW\Dem\Dem.c	 11862                  /*SWS_Dem_00858 MIL status should be ON*/
; ..\EAS\BSW\Dem\Dem.c	 11863                  *LampStatus |= DEM_J1939_MIL_ON;
; ..\EAS\BSW\Dem\Dem.c	 11864              }
; ..\EAS\BSW\Dem\Dem.c	 11865  
; ..\EAS\BSW\Dem\Dem.c	 11866              if(IndicatorStatus == DEM_INDICATOR_SLOW_FLASH)
; ..\EAS\BSW\Dem\Dem.c	 11867              {
; ..\EAS\BSW\Dem\Dem.c	 11868                  /*SWS_Dem_00860 Flash MIL status should be SlowFlash, no need change*/
; ..\EAS\BSW\Dem\Dem.c	 11869              }
; ..\EAS\BSW\Dem\Dem.c	 11870              else if(IndicatorStatus == DEM_INDICATOR_FAST_FLASH)
; ..\EAS\BSW\Dem\Dem.c	 11871              {
; ..\EAS\BSW\Dem\Dem.c	 11872                  /*SWS_Dem_00861 Flash MIL status should be FastFlash.*/
; ..\EAS\BSW\Dem\Dem.c	 11873                  *LampStatus |= DEM_J1939_FMIL_FF;
; ..\EAS\BSW\Dem\Dem.c	 11874              }
; ..\EAS\BSW\Dem\Dem.c	 11875              else
; ..\EAS\BSW\Dem\Dem.c	 11876              {
; ..\EAS\BSW\Dem\Dem.c	 11877                  /*SWS_Dem_00859 Flash MIL status should be Unavailable/DoNotFlash.*/
; ..\EAS\BSW\Dem\Dem.c	 11878                  *LampStatus |= DEM_J1939_FMIL_UNAVAILABLE;
; ..\EAS\BSW\Dem\Dem.c	 11879              }
; ..\EAS\BSW\Dem\Dem.c	 11880          }
; ..\EAS\BSW\Dem\Dem.c	 11881          else
; ..\EAS\BSW\Dem\Dem.c	 11882          {
; ..\EAS\BSW\Dem\Dem.c	 11883              /*MIL is unavailable*/
; ..\EAS\BSW\Dem\Dem.c	 11884              *LampStatus |= DEM_J1939_MIL_UNAVAILABLE;
; ..\EAS\BSW\Dem\Dem.c	 11885              *LampStatus |= DEM_J1939_FMIL_UNAVAILABLE;
; ..\EAS\BSW\Dem\Dem.c	 11886          }
; ..\EAS\BSW\Dem\Dem.c	 11887  
; ..\EAS\BSW\Dem\Dem.c	 11888          /*Returns a composite lamp status of Red Stop lamp.*/
; ..\EAS\BSW\Dem\Dem.c	 11889          if(DEM_CFG_RED_LAMP_REF < DEM_NUM_OF_INDICATOR)
; ..\EAS\BSW\Dem\Dem.c	 11890          {
; ..\EAS\BSW\Dem\Dem.c	 11891              DemInternal_GetIndicatorStatus(DEM_CFG_RED_LAMP_REF, &IndicatorStatus);
; ..\EAS\BSW\Dem\Dem.c	 11892  
; ..\EAS\BSW\Dem\Dem.c	 11893              if(IndicatorStatus != DEM_INDICATOR_OFF)
; ..\EAS\BSW\Dem\Dem.c	 11894              {
; ..\EAS\BSW\Dem\Dem.c	 11895                  /*SWS_Dem_00862 Red Stop lamp status should be ON*/
; ..\EAS\BSW\Dem\Dem.c	 11896                  *LampStatus |= DEM_J1939_RSL_ON;
; ..\EAS\BSW\Dem\Dem.c	 11897              }
; ..\EAS\BSW\Dem\Dem.c	 11898  
; ..\EAS\BSW\Dem\Dem.c	 11899              if(IndicatorStatus == DEM_INDICATOR_SLOW_FLASH)
; ..\EAS\BSW\Dem\Dem.c	 11900              {
; ..\EAS\BSW\Dem\Dem.c	 11901                  /*SWS_Dem_00864 Flash Red Stop lamp status should be SlowFlash, no need change*/
; ..\EAS\BSW\Dem\Dem.c	 11902              }
; ..\EAS\BSW\Dem\Dem.c	 11903              else if(IndicatorStatus == DEM_INDICATOR_FAST_FLASH)
; ..\EAS\BSW\Dem\Dem.c	 11904              {
; ..\EAS\BSW\Dem\Dem.c	 11905                  /*SWS_Dem_00865 Flash Red Stop lamp status should be FastFlash.*/
; ..\EAS\BSW\Dem\Dem.c	 11906                  *LampStatus |= DEM_J1939_FRSL_FF;
; ..\EAS\BSW\Dem\Dem.c	 11907              }
; ..\EAS\BSW\Dem\Dem.c	 11908              else
; ..\EAS\BSW\Dem\Dem.c	 11909              {
; ..\EAS\BSW\Dem\Dem.c	 11910                  /*SWS_Dem_00863 Flash Red Stop lamp status should be Unavailable/DoNotFlash.*/
; ..\EAS\BSW\Dem\Dem.c	 11911                  *LampStatus |= DEM_J1939_FRSL_UNAVAILABLE;
; ..\EAS\BSW\Dem\Dem.c	 11912              }
; ..\EAS\BSW\Dem\Dem.c	 11913          }
; ..\EAS\BSW\Dem\Dem.c	 11914          else
; ..\EAS\BSW\Dem\Dem.c	 11915          {
; ..\EAS\BSW\Dem\Dem.c	 11916              /*Red Stop lamp is unavailable*/
; ..\EAS\BSW\Dem\Dem.c	 11917              *LampStatus |= DEM_J1939_RSL_UNAVAILABLE;
; ..\EAS\BSW\Dem\Dem.c	 11918              *LampStatus |= DEM_J1939_FRSL_UNAVAILABLE;
; ..\EAS\BSW\Dem\Dem.c	 11919          }
; ..\EAS\BSW\Dem\Dem.c	 11920  
; ..\EAS\BSW\Dem\Dem.c	 11921          /*Returns a composite lamp status of Amber Warning lamp.*/
; ..\EAS\BSW\Dem\Dem.c	 11922          if(DEM_CFG_AMBER_LAMP_REF < DEM_NUM_OF_INDICATOR)
; ..\EAS\BSW\Dem\Dem.c	 11923          {
; ..\EAS\BSW\Dem\Dem.c	 11924              DemInternal_GetIndicatorStatus(DEM_CFG_AMBER_LAMP_REF, &IndicatorStatus);
; ..\EAS\BSW\Dem\Dem.c	 11925  
; ..\EAS\BSW\Dem\Dem.c	 11926              if(IndicatorStatus != DEM_INDICATOR_OFF)
; ..\EAS\BSW\Dem\Dem.c	 11927              {
; ..\EAS\BSW\Dem\Dem.c	 11928                  /*SWS_Dem_00866 Amber Warning lamp status should be ON*/
; ..\EAS\BSW\Dem\Dem.c	 11929                  *LampStatus |= DEM_J1939_AWL_ON;
; ..\EAS\BSW\Dem\Dem.c	 11930              }
; ..\EAS\BSW\Dem\Dem.c	 11931  
; ..\EAS\BSW\Dem\Dem.c	 11932              if(IndicatorStatus == DEM_INDICATOR_SLOW_FLASH)
; ..\EAS\BSW\Dem\Dem.c	 11933              {
; ..\EAS\BSW\Dem\Dem.c	 11934                  /*SWS_Dem_00868 Flash Amber Warning lamp status should be SlowFlash, no need change*/
; ..\EAS\BSW\Dem\Dem.c	 11935              }
; ..\EAS\BSW\Dem\Dem.c	 11936              else if(IndicatorStatus == DEM_INDICATOR_FAST_FLASH)
; ..\EAS\BSW\Dem\Dem.c	 11937              {
; ..\EAS\BSW\Dem\Dem.c	 11938                  /*SWS_Dem_00869 Flash Amber Warning lamp status should be FastFlash.*/
; ..\EAS\BSW\Dem\Dem.c	 11939                  *LampStatus |= DEM_J1939_FAWL_FF;
; ..\EAS\BSW\Dem\Dem.c	 11940              }
; ..\EAS\BSW\Dem\Dem.c	 11941              else
; ..\EAS\BSW\Dem\Dem.c	 11942              {
; ..\EAS\BSW\Dem\Dem.c	 11943                  /*SWS_Dem_00867 Flash Amber Warning lamp status should be Unavailable/DoNotFlash.*/
; ..\EAS\BSW\Dem\Dem.c	 11944                  *LampStatus |= DEM_J1939_FAWL_UNAVAILABLE;
; ..\EAS\BSW\Dem\Dem.c	 11945              }
; ..\EAS\BSW\Dem\Dem.c	 11946          }
; ..\EAS\BSW\Dem\Dem.c	 11947          else
; ..\EAS\BSW\Dem\Dem.c	 11948          {
; ..\EAS\BSW\Dem\Dem.c	 11949              /*Amber Warning lamp is unavailable*/
; ..\EAS\BSW\Dem\Dem.c	 11950              *LampStatus |= DEM_J1939_AWL_UNAVAILABLE;
; ..\EAS\BSW\Dem\Dem.c	 11951              *LampStatus |= DEM_J1939_FAWL_UNAVAILABLE;
; ..\EAS\BSW\Dem\Dem.c	 11952          }
; ..\EAS\BSW\Dem\Dem.c	 11953  
; ..\EAS\BSW\Dem\Dem.c	 11954          /*Returns a composite lamp status of Protect lamp.*/
; ..\EAS\BSW\Dem\Dem.c	 11955          if(DEM_CFG_PROTECT_LAMP_REF < DEM_NUM_OF_INDICATOR)
; ..\EAS\BSW\Dem\Dem.c	 11956          {
; ..\EAS\BSW\Dem\Dem.c	 11957              DemInternal_GetIndicatorStatus(DEM_CFG_PROTECT_LAMP_REF, &IndicatorStatus);
; ..\EAS\BSW\Dem\Dem.c	 11958  
; ..\EAS\BSW\Dem\Dem.c	 11959              if(IndicatorStatus != DEM_INDICATOR_OFF)
; ..\EAS\BSW\Dem\Dem.c	 11960              {
; ..\EAS\BSW\Dem\Dem.c	 11961                  /*SWS_Dem_00870 Protect lamp status should be ON*/
; ..\EAS\BSW\Dem\Dem.c	 11962                  *LampStatus |= DEM_J1939_PL_ON;
; ..\EAS\BSW\Dem\Dem.c	 11963              }
; ..\EAS\BSW\Dem\Dem.c	 11964  
; ..\EAS\BSW\Dem\Dem.c	 11965              if(IndicatorStatus == DEM_INDICATOR_SLOW_FLASH)
; ..\EAS\BSW\Dem\Dem.c	 11966              {
; ..\EAS\BSW\Dem\Dem.c	 11967                  /*SWS_Dem_00872 Flash Protect lamp status should be SlowFlash, no need change*/
; ..\EAS\BSW\Dem\Dem.c	 11968              }
; ..\EAS\BSW\Dem\Dem.c	 11969              else if(IndicatorStatus == DEM_INDICATOR_FAST_FLASH)
; ..\EAS\BSW\Dem\Dem.c	 11970              {
; ..\EAS\BSW\Dem\Dem.c	 11971                  /*SWS_Dem_00873 Flash Protect lamp status should be FastFlash.*/
; ..\EAS\BSW\Dem\Dem.c	 11972                  *LampStatus |= DEM_J1939_FPL_FF;
; ..\EAS\BSW\Dem\Dem.c	 11973              }
; ..\EAS\BSW\Dem\Dem.c	 11974              else
; ..\EAS\BSW\Dem\Dem.c	 11975              {
; ..\EAS\BSW\Dem\Dem.c	 11976                  /*SWS_Dem_00871 Flash Protect lamp status should be Unavailable/DoNotFlash.*/
; ..\EAS\BSW\Dem\Dem.c	 11977                  *LampStatus |= DEM_J1939_FPL_UNAVAILABLE;
; ..\EAS\BSW\Dem\Dem.c	 11978              }
; ..\EAS\BSW\Dem\Dem.c	 11979          }
; ..\EAS\BSW\Dem\Dem.c	 11980          else
; ..\EAS\BSW\Dem\Dem.c	 11981          {
; ..\EAS\BSW\Dem\Dem.c	 11982              /*Protect lamp is unavailable*/
; ..\EAS\BSW\Dem\Dem.c	 11983              *LampStatus |= DEM_J1939_PL_UNAVAILABLE;
; ..\EAS\BSW\Dem\Dem.c	 11984              *LampStatus |= DEM_J1939_FPL_UNAVAILABLE;
; ..\EAS\BSW\Dem\Dem.c	 11985          }
; ..\EAS\BSW\Dem\Dem.c	 11986  #else
; ..\EAS\BSW\Dem\Dem.c	 11987          *LampStatus = DEM_J1939_LAMP_UNAVAILABLE;
; ..\EAS\BSW\Dem\Dem.c	 11988  #endif
; ..\EAS\BSW\Dem\Dem.c	 11989  
; ..\EAS\BSW\Dem\Dem.c	 11990          Dem_J1939DcmFilterInfo.FilteredValidFlag = TRUE;
; ..\EAS\BSW\Dem\Dem.c	 11991      }
; ..\EAS\BSW\Dem\Dem.c	 11992      return Result;
; ..\EAS\BSW\Dem\Dem.c	 11993  }
; ..\EAS\BSW\Dem\Dem.c	 11994  
; ..\EAS\BSW\Dem\Dem.c	 11995  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 11996  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 11997  * Function Name: Dem_J1939DcmGetNumberOfFilteredDTC
; ..\EAS\BSW\Dem\Dem.c	 11998  *
; ..\EAS\BSW\Dem\Dem.c	 11999  * Description: Gets the number of currently filtered DTCs set by the function
; ..\EAS\BSW\Dem\Dem.c	 12000  *              Dem_J1939DcmSetDTCFilter.
; ..\EAS\BSW\Dem\Dem.c	 12001  *
; ..\EAS\BSW\Dem\Dem.c	 12002  * Inputs: None
; ..\EAS\BSW\Dem\Dem.c	 12003  *
; ..\EAS\BSW\Dem\Dem.c	 12004  * Outputs: NumberOfFilteredDTC
; ..\EAS\BSW\Dem\Dem.c	 12005  *
; ..\EAS\BSW\Dem\Dem.c	 12006  * Return: Dem_ReturnGetNumberOfFilteredDTCType
; ..\EAS\BSW\Dem\Dem.c	 12007  *
; ..\EAS\BSW\Dem\Dem.c	 12008  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	 12009  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12010  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 12011  /*SWS_Dem_00972*/
; ..\EAS\BSW\Dem\Dem.c	 12012  FUNC(Dem_ReturnGetNumberOfFilteredDTCType, DEM_CODE) Dem_J1939DcmGetNumberOfFilteredDTC
; ..\EAS\BSW\Dem\Dem.c	 12013  (
; ..\EAS\BSW\Dem\Dem.c	 12014      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) NumberOfFilteredDTC
; ..\EAS\BSW\Dem\Dem.c	 12015  )
; ..\EAS\BSW\Dem\Dem.c	 12016  {
; ..\EAS\BSW\Dem\Dem.c	 12017      Dem_ReturnGetNumberOfFilteredDTCType Result = DEM_NUMBER_OK;
; ..\EAS\BSW\Dem\Dem.c	 12018  
; ..\EAS\BSW\Dem\Dem.c	 12019      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	 12020      {
; ..\EAS\BSW\Dem\Dem.c	 12021          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	 12022          DEM_DET_REPORT_ERROR(DEM_J1939DCMGETNUMBEROFFILTEREDDTC_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	 12023          Result = DEM_NUMBER_FAILED;
; ..\EAS\BSW\Dem\Dem.c	 12024      }
; ..\EAS\BSW\Dem\Dem.c	 12025      else if(NumberOfFilteredDTC == NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	 12026      {
; ..\EAS\BSW\Dem\Dem.c	 12027          DEM_DET_REPORT_ERROR(DEM_J1939DCMGETNUMBEROFFILTEREDDTC_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	 12028          Result = DEM_NUMBER_FAILED;
; ..\EAS\BSW\Dem\Dem.c	 12029      }
; ..\EAS\BSW\Dem\Dem.c	 12030      else if(Dem_J1939DcmFilterInfo.FilteredValidFlag != TRUE)
; ..\EAS\BSW\Dem\Dem.c	 12031      {
; ..\EAS\BSW\Dem\Dem.c	 12032          Result = DEM_NUMBER_FAILED;
; ..\EAS\BSW\Dem\Dem.c	 12033      }
; ..\EAS\BSW\Dem\Dem.c	 12034      else
; ..\EAS\BSW\Dem\Dem.c	 12035      {
; ..\EAS\BSW\Dem\Dem.c	 12036          /*SWS_Dem_00874*/
; ..\EAS\BSW\Dem\Dem.c	 12037          *NumberOfFilteredDTC = Dem_J1939DcmFilterInfo.NumberOfFilteredDTC;
; ..\EAS\BSW\Dem\Dem.c	 12038      }
; ..\EAS\BSW\Dem\Dem.c	 12039      return Result;
; ..\EAS\BSW\Dem\Dem.c	 12040  }
; ..\EAS\BSW\Dem\Dem.c	 12041  
; ..\EAS\BSW\Dem\Dem.c	 12042  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 12043  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12044  * Function Name: Dem_J1939DcmGetNextFilteredDTC
; ..\EAS\BSW\Dem\Dem.c	 12045  *
; ..\EAS\BSW\Dem\Dem.c	 12046  * Description: Gets the next filtered J1939 DTC.
; ..\EAS\BSW\Dem\Dem.c	 12047  *
; ..\EAS\BSW\Dem\Dem.c	 12048  * Inputs: None
; ..\EAS\BSW\Dem\Dem.c	 12049  *
; ..\EAS\BSW\Dem\Dem.c	 12050  * Outputs: J1939DTC,OccurenceCounter
; ..\EAS\BSW\Dem\Dem.c	 12051  *
; ..\EAS\BSW\Dem\Dem.c	 12052  * Return: Dem_ReturnGetNextFilteredElementType
; ..\EAS\BSW\Dem\Dem.c	 12053  *
; ..\EAS\BSW\Dem\Dem.c	 12054  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	 12055  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12056  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 12057  /*SWS_Dem_00973*/
; ..\EAS\BSW\Dem\Dem.c	 12058  FUNC(Dem_ReturnGetNextFilteredElementType, DEM_CODE) Dem_J1939DcmGetNextFilteredDTC
; ..\EAS\BSW\Dem\Dem.c	 12059  (
; ..\EAS\BSW\Dem\Dem.c	 12060      P2VAR(uint32, AUTOMATIC, DEM_APPL_DATA) J1939DTC,
; ..\EAS\BSW\Dem\Dem.c	 12061      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) OccurenceCounter
; ..\EAS\BSW\Dem\Dem.c	 12062  )
; ..\EAS\BSW\Dem\Dem.c	 12063  {
; ..\EAS\BSW\Dem\Dem.c	 12064      Dem_ReturnGetNextFilteredElementType Result = DEM_FILTERED_OK;
; ..\EAS\BSW\Dem\Dem.c	 12065      uint16 DtcId;
; ..\EAS\BSW\Dem\Dem.c	 12066      uint16 EventId;
; ..\EAS\BSW\Dem\Dem.c	 12067  
; ..\EAS\BSW\Dem\Dem.c	 12068      if((J1939DTC == NULL_PTR) || (OccurenceCounter == NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	 12069      {
; ..\EAS\BSW\Dem\Dem.c	 12070          DEM_DET_REPORT_ERROR(DEM_J1939DCMGETNEXTFILTEREDDTC_APIID, DEM_E_PARAM_POINTER);
; ..\EAS\BSW\Dem\Dem.c	 12071          Result = DEM_FILTERED_BUFFER_TOO_SMALL;
; ..\EAS\BSW\Dem\Dem.c	 12072      }
; ..\EAS\BSW\Dem\Dem.c	 12073      else if(Dem_J1939DcmFilterInfo.FilteredValidFlag != TRUE)
; ..\EAS\BSW\Dem\Dem.c	 12074      {
; ..\EAS\BSW\Dem\Dem.c	 12075          Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
; ..\EAS\BSW\Dem\Dem.c	 12076      }
; ..\EAS\BSW\Dem\Dem.c	 12077      else if(Dem_J1939DcmFilterInfo.NextFilteredDTCIndex >= Dem_J1939DcmFilterInfo.NumberOfFilteredDTC)
; ..\EAS\BSW\Dem\Dem.c	 12078      {
; ..\EAS\BSW\Dem\Dem.c	 12079          /*SWS_Dem_00875*/
; ..\EAS\BSW\Dem\Dem.c	 12080          Dem_J1939DcmFilterInfo.FilteredValidFlag = FALSE;
; ..\EAS\BSW\Dem\Dem.c	 12081          Dem_J1939DcmFilterInfo.NextFilteredDTCIndex = 0;
; ..\EAS\BSW\Dem\Dem.c	 12082          Dem_J1939DcmFilterInfo.NumberOfFilteredDTC = 0;
; ..\EAS\BSW\Dem\Dem.c	 12083  
; ..\EAS\BSW\Dem\Dem.c	 12084          Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
; ..\EAS\BSW\Dem\Dem.c	 12085      }
; ..\EAS\BSW\Dem\Dem.c	 12086      else
; ..\EAS\BSW\Dem\Dem.c	 12087      {
; ..\EAS\BSW\Dem\Dem.c	 12088  #if(DEM_J1939_SUPPORT == STD_ON)
; ..\EAS\BSW\Dem\Dem.c	 12089          /*SWS_Dem_00875*//*SWS_Dem_00877*/
; ..\EAS\BSW\Dem\Dem.c	 12090          DtcId = Dem_J1939DcmFilterInfo.FilteredDTCIndexTable[Dem_J1939DcmFilterInfo.NextFilteredDTCIndex];
; ..\EAS\BSW\Dem\Dem.c	 12091          *J1939DTC = DEM_CFG_DTC_J1939_VALUE(DtcId);
; ..\EAS\BSW\Dem\Dem.c	 12092          for(EventId = 0; EventId < DEM_NUM_OF_EVENT; EventId++)
; ..\EAS\BSW\Dem\Dem.c	 12093          {
; ..\EAS\BSW\Dem\Dem.c	 12094              if(DEM_CFG_EVENT_DTCREF(EventId) == DtcId)
; ..\EAS\BSW\Dem\Dem.c	 12095              {
; ..\EAS\BSW\Dem\Dem.c	 12096                  *OccurenceCounter = DEM_EVENT_OCCCTR(EventId);
; ..\EAS\BSW\Dem\Dem.c	 12097                  break;
; ..\EAS\BSW\Dem\Dem.c	 12098              }
; ..\EAS\BSW\Dem\Dem.c	 12099          }
; ..\EAS\BSW\Dem\Dem.c	 12100  
; ..\EAS\BSW\Dem\Dem.c	 12101          if(*OccurenceCounter > (uint8)0x7F)
; ..\EAS\BSW\Dem\Dem.c	 12102          {
; ..\EAS\BSW\Dem\Dem.c	 12103              *OccurenceCounter = (uint8)0x7F;
; ..\EAS\BSW\Dem\Dem.c	 12104          }
; ..\EAS\BSW\Dem\Dem.c	 12105          Dem_J1939DcmFilterInfo.NextFilteredDTCIndex++;
; ..\EAS\BSW\Dem\Dem.c	 12106  #else
; ..\EAS\BSW\Dem\Dem.c	 12107          Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
; ..\EAS\BSW\Dem\Dem.c	 12108  #endif
; ..\EAS\BSW\Dem\Dem.c	 12109      }
; ..\EAS\BSW\Dem\Dem.c	 12110      return Result;
; ..\EAS\BSW\Dem\Dem.c	 12111  }
; ..\EAS\BSW\Dem\Dem.c	 12112  
; ..\EAS\BSW\Dem\Dem.c	 12113  #endif
; ..\EAS\BSW\Dem\Dem.c	 12114  
; ..\EAS\BSW\Dem\Dem.c	 12115  
; ..\EAS\BSW\Dem\Dem.c	 12116  #if(STD_OFF == DEM_CFG_J1939DM31_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 12117  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 12118  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12119  * Function Name: Dem_J1939DcmFirstDTCwithLampStatus
; ..\EAS\BSW\Dem\Dem.c	 12120  *
; ..\EAS\BSW\Dem\Dem.c	 12121  * Description: The function sets the filter to the first applicable DTC for the
; ..\EAS\BSW\Dem\Dem.c	 12122  *              DM31 response for a specific node.
; ..\EAS\BSW\Dem\Dem.c	 12123  *
; ..\EAS\BSW\Dem\Dem.c	 12124  * Inputs: node
; ..\EAS\BSW\Dem\Dem.c	 12125  *
; ..\EAS\BSW\Dem\Dem.c	 12126  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	 12127  *
; ..\EAS\BSW\Dem\Dem.c	 12128  * Return: None
; ..\EAS\BSW\Dem\Dem.c	 12129  *
; ..\EAS\BSW\Dem\Dem.c	 12130  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	 12131  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12132  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 12133  /*SWS_Dem_00974*/
; ..\EAS\BSW\Dem\Dem.c	 12134  FUNC(void, DEM_CODE) Dem_J1939DcmFirstDTCwithLampStatus
; Function Dem_J1939DcmFirstDTCwithLampStatus
.L1081:
Dem_J1939DcmFirstDTCwithLampStatus:	.type	func

; ..\EAS\BSW\Dem\Dem.c	 12135  (
; ..\EAS\BSW\Dem\Dem.c	 12136      uint8 node
; ..\EAS\BSW\Dem\Dem.c	 12137  )
; ..\EAS\BSW\Dem\Dem.c	 12138  {
; ..\EAS\BSW\Dem\Dem.c	 12139  }
	ret
.L2124:
	
__Dem_J1939DcmFirstDTCwithLampStatus_function_end:
	.size	Dem_J1939DcmFirstDTCwithLampStatus,__Dem_J1939DcmFirstDTCwithLampStatus_function_end-Dem_J1939DcmFirstDTCwithLampStatus
.L1547:
	; End of function
	
	.sdecl	'.text.Dem.Dem_J1939DcmGetNextDTCwithLampStatus',code,cluster('Dem_J1939DcmGetNextDTCwithLampStatus')
	.sect	'.text.Dem.Dem_J1939DcmGetNextDTCwithLampStatus'
	.align	2
	
	.global	Dem_J1939DcmGetNextDTCwithLampStatus

; ..\EAS\BSW\Dem\Dem.c	 12140  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 12141  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12142  * Function Name: Dem_J1939DcmGetNextDTCwithLampStatus
; ..\EAS\BSW\Dem\Dem.c	 12143  *
; ..\EAS\BSW\Dem\Dem.c	 12144  * Description: Gets the next filtered J1939 DTC for DM31 including current
; ..\EAS\BSW\Dem\Dem.c	 12145  *              LampStatus.
; ..\EAS\BSW\Dem\Dem.c	 12146  *
; ..\EAS\BSW\Dem\Dem.c	 12147  * Inputs: None
; ..\EAS\BSW\Dem\Dem.c	 12148  *
; ..\EAS\BSW\Dem\Dem.c	 12149  * Outputs: LampStatus,J1939DTC,OccurenceCounter
; ..\EAS\BSW\Dem\Dem.c	 12150  *
; ..\EAS\BSW\Dem\Dem.c	 12151  * Return: Dem_ReturnGetNextFilteredElementType
; ..\EAS\BSW\Dem\Dem.c	 12152  *
; ..\EAS\BSW\Dem\Dem.c	 12153  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	 12154  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12155  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 12156  /*SWS_Dem_00975*/
; ..\EAS\BSW\Dem\Dem.c	 12157  FUNC(Dem_ReturnGetNextFilteredElementType, DEM_CODE) Dem_J1939DcmGetNextDTCwithLampStatus
; Function Dem_J1939DcmGetNextDTCwithLampStatus
.L1083:
Dem_J1939DcmGetNextDTCwithLampStatus:	.type	func

; ..\EAS\BSW\Dem\Dem.c	 12158  (
; ..\EAS\BSW\Dem\Dem.c	 12159      P2VAR(Dem_J1939DcmLampStatusType, AUTOMATIC, DEM_APPL_DATA) LampStatus,
; ..\EAS\BSW\Dem\Dem.c	 12160      P2VAR(uint32, AUTOMATIC, DEM_APPL_DATA) J1939DTC,
; ..\EAS\BSW\Dem\Dem.c	 12161      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) OccurenceCounter
; ..\EAS\BSW\Dem\Dem.c	 12162  )
; ..\EAS\BSW\Dem\Dem.c	 12163  {
; ..\EAS\BSW\Dem\Dem.c	 12164      Dem_ReturnGetNextFilteredElementType Result = DEM_FILTERED_OK;
	mov	d2,#0
.L2909:

; ..\EAS\BSW\Dem\Dem.c	 12165  
; ..\EAS\BSW\Dem\Dem.c	 12166      return Result;
; ..\EAS\BSW\Dem\Dem.c	 12167  }
	ret
.L2126:
	
__Dem_J1939DcmGetNextDTCwithLampStatus_function_end:
	.size	Dem_J1939DcmGetNextDTCwithLampStatus,__Dem_J1939DcmGetNextDTCwithLampStatus_function_end-Dem_J1939DcmGetNextDTCwithLampStatus
.L1552:
	; End of function
	
	.sdecl	'.bss.Dem.Dem_StorageMem',data,cluster('Dem_StorageMem')
	.sect	'.bss.Dem.Dem_StorageMem'
	.global	Dem_StorageMem
	.align	4
Dem_StorageMem:	.type	object
	.size	Dem_StorageMem,9344
	.space	9344
	.sdecl	'.data.Dem.Dem_State',data,cluster('Dem_State')
	.sect	'.data.Dem.Dem_State'
Dem_State:	.type	object
	.size	Dem_State,1
	.space	1
	.sdecl	'.data.Dem.Dem_ClearDTCState',data,cluster('Dem_ClearDTCState')
	.sect	'.data.Dem.Dem_ClearDTCState'
Dem_ClearDTCState:	.type	object
	.size	Dem_ClearDTCState,1
	.space	1
	.sdecl	'.bss.Dem.Dem_OpCycReq',data,cluster('Dem_OpCycReq')
	.sect	'.bss.Dem.Dem_OpCycReq'
Dem_OpCycReq:	.type	object
	.size	Dem_OpCycReq,1
	.space	1
	.sdecl	'.bss.Dem.Dem_OpCycState',data,cluster('Dem_OpCycState')
	.sect	'.bss.Dem.Dem_OpCycState'
Dem_OpCycState:	.type	object
	.size	Dem_OpCycState,1
	.space	1
	.sdecl	'.bss.Dem.Dem_EventEnCondition',data,cluster('Dem_EventEnCondition')
	.sect	'.bss.Dem.Dem_EventEnCondition'
Dem_EventEnCondition:	.type	object
	.size	Dem_EventEnCondition,5
	.space	5
	.sdecl	'.bss.Dem.Dem_EnableDtcSetting',data,cluster('Dem_EnableDtcSetting')
	.sect	'.bss.Dem.Dem_EnableDtcSetting'
Dem_EnableDtcSetting:	.type	object
	.size	Dem_EnableDtcSetting,116
	.space	116
	.sdecl	'.bss.Dem.Dem_DtcUpDateState',data,cluster('Dem_DtcUpDateState')
	.sect	'.bss.Dem.Dem_DtcUpDateState'
Dem_DtcUpDateState:	.type	object
	.size	Dem_DtcUpDateState,116
	.space	116
	.sdecl	'.bss.Dem.Dem_DataCaptureFlag',data,cluster('Dem_DataCaptureFlag')
	.sect	'.bss.Dem.Dem_DataCaptureFlag'
Dem_DataCaptureFlag:	.type	object
	.size	Dem_DataCaptureFlag,116
	.space	116
	.sdecl	'.bss.Dem.Dem_DataCaptureTrigger',data,cluster('Dem_DataCaptureTrigger')
	.sect	'.bss.Dem.Dem_DataCaptureTrigger'
Dem_DataCaptureTrigger:	.type	object
	.size	Dem_DataCaptureTrigger,116
	.space	116
	.sdecl	'.bss.Dem.Dem_EventDBTFreezeFlag',data,cluster('Dem_EventDBTFreezeFlag')
	.sect	'.bss.Dem.Dem_EventDBTFreezeFlag'
Dem_EventDBTFreezeFlag:	.type	object
	.size	Dem_EventDBTFreezeFlag,116
	.space	116
	.sdecl	'.bss.Dem.Dem_DTC_FirstFdcThreshold',data,cluster('Dem_DTC_FirstFdcThreshold')
	.sect	'.bss.Dem.Dem_DTC_FirstFdcThreshold'
Dem_DTC_FirstFdcThreshold:	.type	object
	.size	Dem_DTC_FirstFdcThreshold,116
	.space	116
	.sdecl	'.bss.Dem.Dem_CapturePosition',data,cluster('Dem_CapturePosition')
	.sect	'.bss.Dem.Dem_CapturePosition'
	.align	2
Dem_CapturePosition:	.type	object
	.size	Dem_CapturePosition,2
	.space	2
	.sdecl	'.bss.Dem.Dem_DcmFilterInfo',data,cluster('Dem_DcmFilterInfo')
	.sect	'.bss.Dem.Dem_DcmFilterInfo'
	.align	4
Dem_DcmFilterInfo:	.type	object
	.size	Dem_DcmFilterInfo,244
	.space	244
	.sdecl	'.bss.Dem.Dem_NumFFRecOfDTC',data,cluster('Dem_NumFFRecOfDTC')
	.sect	'.bss.Dem.Dem_NumFFRecOfDTC'
Dem_NumFFRecOfDTC:	.type	object
	.size	Dem_NumFFRecOfDTC,1
	.space	1
	.sdecl	'.bss.Dem.Dem_BswErrorQueue',data,cluster('Dem_BswErrorQueue')
	.sect	'.bss.Dem.Dem_BswErrorQueue'
	.align	2
Dem_BswErrorQueue:	.type	object
	.size	Dem_BswErrorQueue,16
	.space	16
	.sdecl	'.bss.Dem.Dem_BswErrorStatus',data,cluster('Dem_BswErrorStatus')
	.sect	'.bss.Dem.Dem_BswErrorStatus'
Dem_BswErrorStatus:	.type	object
	.size	Dem_BswErrorStatus,8
	.space	8
	.sdecl	'.bss.Dem.Dem_ClearDTC_DTC',data,cluster('Dem_ClearDTC_DTC')
	.sect	'.bss.Dem.Dem_ClearDTC_DTC'
	.align	2
Dem_ClearDTC_DTC:	.type	object
	.size	Dem_ClearDTC_DTC,4
	.space	4
	.sdecl	'.bss.Dem.Dem_ClearDTC_Index',data,cluster('Dem_ClearDTC_Index')
	.sect	'.bss.Dem.Dem_ClearDTC_Index'
	.align	2
Dem_ClearDTC_Index:	.type	object
	.size	Dem_ClearDTC_Index,2
	.space	2
	.sdecl	'.bss.Dem.Dem_ClearDTC_DTCFormat',data,cluster('Dem_ClearDTC_DTCFormat')
	.sect	'.bss.Dem.Dem_ClearDTC_DTCFormat'
Dem_ClearDTC_DTCFormat:	.type	object
	.size	Dem_ClearDTC_DTCFormat,1
	.space	1
	.sdecl	'.bss.Dem.Dem_ClearDTC_DTCOrigin',data,cluster('Dem_ClearDTC_DTCOrigin')
	.sect	'.bss.Dem.Dem_ClearDTC_DTCOrigin'
Dem_ClearDTC_DTCOrigin:	.type	object
	.size	Dem_ClearDTC_DTCOrigin,1
	.space	1
	.calls	'DemInternal_CheckStorageMem','Dem_NvM_InitStorageMem'
	.calls	'DemInternal_SetEventPass','DemInternal_SetCaptureQueue'
	.calls	'DemInternal_SetEventFail','DemInternal_SetCaptureQueue'
	.calls	'DemInternal_SetEventStatus','DemInternal_SetEventFail'
	.calls	'DemInternal_SetEventStatus','DemInternal_SetCaptureQueue'
	.calls	'DemInternal_SetEventStatus','DemInternal_SetEventPass'
	.calls	'DemInternal_SetEventStatus','__INDIRECT__'
	.calls	'DemInternal_SetEventStatus','FiM_DemTriggerOnEventStatus'
	.calls	'DemInternal_GetUsableMemoryEntry','DemInternal_SearchFreeEntry'
	.calls	'DemInternal_GetUsableMemoryEntry','DemInternal_SearchEntryForDisplacement'
	.calls	'DemInternal_GetEventInternalData','Dem_GetFaultDetectionCounter'
	.calls	'DemInternal_StorageDataElement','DemInternal_GetEventInternalData'
	.calls	'DemInternal_StorageDataElement','__INDIRECT__'
	.calls	'DemInternal_GetDtcInternalData','DemInternal_GetEventInternalData'
	.calls	'DemInternal_CaptureData','DemInternal_GetCaptureQueue'
	.calls	'DemInternal_CaptureData','DemInternal_ClrCaptureQueue'
	.calls	'DemInternal_CaptureData','DemInternal_GetUsableMemoryEntry'
	.calls	'DemInternal_CaptureData','DemInternal_UpdateFFData'
	.calls	'DemInternal_CaptureData','DemInternal_UpdateExtData'
	.calls	'DemInternal_CaptureData','__INDIRECT__'
	.calls	'DemInternal_UpdateFFData','DemInternal_StorageDataElement'
	.calls	'DemInternal_UpdateExtData','DemInternal_StorageDataElement'
	.calls	'DemInternal_CycleStartProcess','__INDIRECT__'
	.calls	'DemInternal_CycleStartProcess','FiM_DemTriggerOnEventStatus'
	.calls	'DemInternal_CycleEndProcess','DemInternal_GetCaptureQueue'
	.calls	'DemInternal_CycleEndProcess','DemInternal_CaptureData'
	.calls	'DemInternal_CycleEndProcess','DemInternal_ClearOneEvent'
	.calls	'DemInternal_CycleEndProcess','DemInternal_ClearOneMemoryEntry'
	.calls	'DemInternal_CycleEndProcess','__INDIRECT__'
	.calls	'DemInternal_CycleEndProcess','FiM_DemTriggerOnEventStatus'
	.calls	'DemInternal_MainFnc_OperationCycle','DemInternal_CycleEndProcess'
	.calls	'DemInternal_MainFnc_OperationCycle','DemInternal_CycleStartProcess'
	.calls	'DemInternal_MainFnc_BswErrorHandle','DemInternal_SetEventStatus'
	.calls	'DemInternal_MainFnc_DebounceTimer','DemInternal_SetEventStatus'
	.calls	'DemInternal_MainFnc_CaptureData','DemInternal_GetCaptureQueue'
	.calls	'DemInternal_MainFnc_CaptureData','DemInternal_CaptureData'
	.calls	'DemInternal_MainFnc_ClearDTC','DemInternal_ClearOneDTCGroup'
	.calls	'DemInternal_ClearOneDTC','__INDIRECT__'
	.calls	'DemInternal_ClearOneDTC','DemInternal_ClearOneEvent'
	.calls	'DemInternal_ClearOneDTC','DemInternal_ClearOneMemoryEntry'
	.calls	'DemInternal_ClearOneDTC','FiM_DemTriggerOnEventStatus'
	.calls	'DemInternal_ClearOneDTCGroup','DemInternal_ClearOneDTC'
	.calls	'DemInternal_GetEventFreezeFrameDataEx','DemInternal_GetDtcInternalData'
	.calls	'DemInternal_GetEventFreezeFrameDataEx','Bsw_MemCpy'
	.calls	'DemInternal_GetEventExtendedDataRecordEx','DemInternal_GetDtcInternalData'
	.calls	'DemInternal_GetEventExtendedDataRecordEx','Bsw_MemCpy'
	.calls	'Dem_Init','DemInternal_CheckStorageMem'
	.calls	'Dem_Init','DemInternal_ClrCaptureQueue'
	.calls	'Dem_Init','FiM_DemInit'
	.calls	'Dem_Shutdown','DemInternal_CycleEndProcess'
	.calls	'Dem_SetEventStatus','DemInternal_SetEventStatus'
	.calls	'Dem_ResetEventStatus','__INDIRECT__'
	.calls	'Dem_ResetEventStatus','FiM_DemTriggerOnEventStatus'
	.calls	'Dem_SetAgingCycleState','Dem_SetOperationCycleState'
	.calls	'Dem_GetFaultDetectionCounter','__INDIRECT__'
	.calls	'Dem_GetEventFreezeFrameData','DemInternal_GetEventFreezeFrameDataEx'
	.calls	'Dem_GetEventFreezeFrameDataEx','DemInternal_GetEventFreezeFrameDataEx'
	.calls	'Dem_GetEventExtendedDataRecord','DemInternal_GetEventExtendedDataRecordEx'
	.calls	'Dem_GetEventExtendedDataRecordEx','DemInternal_GetEventExtendedDataRecordEx'
	.calls	'Dem_ClearDTC','DemInternal_ClearOneDTC'
	.calls	'Dem_MainFunction','DemInternal_MainFnc_OperationCycle'
	.calls	'Dem_MainFunction','DemInternal_MainFnc_BswErrorHandle'
	.calls	'Dem_MainFunction','DemInternal_MainFnc_DebounceTimer'
	.calls	'Dem_MainFunction','DemInternal_MainFnc_CaptureData'
	.calls	'Dem_MainFunction','DemInternal_MainFnc_ClearDTC'
	.calls	'Dem_GetEventInternalData','DemInternal_GetEventInternalData'
	.calls	'DemInternal_GetSizeOfExtendedData','DemInternal_CheckDtcValid'
	.calls	'DemInternal_GetSizeOfExtendedData','DemInternal_GetDtcInternalData'
	.calls	'DemInternal_GetAllExtendedData','Bsw_MemCpy'
	.calls	'DemInternal_GetSizeOfFFData','DemInternal_CheckDtcValid'
	.calls	'DemInternal_GetSizeOfFFData','DemInternal_GetDtcInternalData'
	.calls	'DemInternal_GetAllFFData','Bsw_MemCpy'
	.calls	'Dem_DcmGetStatusOfDTC','DemInternal_CheckDtcValid'
	.calls	'Dem_DcmGetSeverityOfDTC','DemInternal_CheckDtcValid'
	.calls	'Dem_DcmGetFunctionalUnitOfDTC','DemInternal_CheckDtcValid'
	.calls	'Dem_DcmGetNextFilteredDTCAndFDC','__INDIRECT__'
	.calls	'Dem_DcmSetFreezeFrameRecordFilter','DemInternal_GetSizeOfFFData'
	.calls	'Dem_DcmGetNextFilteredRecord','DemInternal_GetSizeOfFFData'
	.calls	'Dem_DcmDisableDTCRecordUpdate','DemInternal_CheckDtcValid'
	.calls	'Dem_DcmGetFreezeFrameDataByDTC','DemInternal_CheckDtcValid'
	.calls	'Dem_DcmGetFreezeFrameDataByDTC','DemInternal_GetSizeOfFFData'
	.calls	'Dem_DcmGetFreezeFrameDataByDTC','DemInternal_GetAllFFData'
	.calls	'Dem_DcmGetFreezeFrameDataByDTC','Bsw_MemCpy'
	.calls	'Dem_DcmGetSizeOfFreezeFrameByDTC','DemInternal_GetSizeOfFFData'
	.calls	'Dem_DcmGetExtendedDataRecordByDTC','DemInternal_CheckDtcValid'
	.calls	'Dem_DcmGetExtendedDataRecordByDTC','DemInternal_GetSizeOfExtendedData'
	.calls	'Dem_DcmGetExtendedDataRecordByDTC','DemInternal_GetAllExtendedData'
	.calls	'Dem_DcmGetExtendedDataRecordByDTC','Bsw_MemCpy'
	.calls	'Dem_DcmGetSizeOfExtendedDataRecordByDTC','DemInternal_GetSizeOfExtendedData'
	.calls	'Dem_DcmClearDTC','Dem_ClearDTC'
	.calls	'Dem_NvM_InitStorageMem','DemInternal_ClearOneMemoryEntry'
	.calls	'Dem_NvM_JobResultInd','Dem_NvM_InitStorageMem'
	.calls	'DemInternal_CheckStorageMem','',0
	.calls	'DemInternal_SetCaptureQueue','',0
	.calls	'DemInternal_ClrCaptureQueue','',0
	.calls	'DemInternal_GetCaptureQueue','',0
	.calls	'DemInternal_SetEventPass','',0
	.calls	'DemInternal_SetEventFail','',0
	.calls	'DemInternal_SetEventStatus','',0
	.calls	'DemInternal_GetUsableMemoryEntry','',0
	.calls	'DemInternal_SearchFreeEntry','',0
	.calls	'DemInternal_ClearOneMemoryEntry','',0
	.calls	'DemInternal_SearchEntryForDisplacement','',0
	.calls	'DemInternal_GetEventInternalData','',8
	.calls	'DemInternal_StorageDataElement','',0
	.calls	'DemInternal_GetDtcInternalData','',0
	.calls	'DemInternal_CaptureData','',8
	.calls	'DemInternal_UpdateFFData','',8
	.calls	'DemInternal_UpdateExtData','',8
	.calls	'DemInternal_CycleStartProcess','',0
	.calls	'DemInternal_CycleEndProcess','',8
	.calls	'DemInternal_MainFnc_OperationCycle','',0
	.calls	'DemInternal_MainFnc_BswErrorHandle','',0
	.calls	'DemInternal_MainFnc_DebounceTimer','',0
	.calls	'DemInternal_MainFnc_CaptureData','',0
	.calls	'DemInternal_MainFnc_ClearDTC','',0
	.calls	'DemInternal_ClearOneDTC','',8
	.calls	'DemInternal_ClearOneEvent','',0
	.calls	'DemInternal_ClearOneDTCGroup','',0
	.calls	'DemInternal_GetEventFreezeFrameDataEx','',16
	.calls	'DemInternal_GetEventExtendedDataRecordEx','',8
	.calls	'Dem_GetVersionInfo','',0
	.calls	'Dem_PreInit','',0
	.calls	'Dem_Init','',0
	.calls	'Dem_Shutdown','',0
	.calls	'Dem_ReportErrorStatus','',0
	.calls	'Dem_SetEventStatus','',0
	.calls	'Dem_ResetEventDebounceStatus','',0
	.calls	'Dem_ResetEventStatus','',0
	.calls	'Dem_SetOperationCycleState','',0
	.calls	'Dem_GetOperationCycleState','',0
	.calls	'Dem_SetAgingCycleState','',0
	.calls	'Dem_SetWIRStatus','',0
	.calls	'Dem_GetComponentFailed','',0
	.calls	'Dem_GetEventStatus','',0
	.calls	'Dem_GetEventFailed','',0
	.calls	'Dem_GetEventTested','',0
	.calls	'Dem_GetDebouncingOfEvent','',0
	.calls	'Dem_GetDTCOfEvent','',0
	.calls	'Dem_SetEnableCondition','',0
	.calls	'Dem_GetFaultDetectionCounter','',0
	.calls	'Dem_GetIndicatorStatus','',0
	.calls	'Dem_GetEventFreezeFrameData','',8
	.calls	'Dem_GetEventFreezeFrameDataEx','',0
	.calls	'Dem_GetEventExtendedDataRecord','',8
	.calls	'Dem_GetEventExtendedDataRecordEx','',0
	.calls	'Dem_GetEventMemoryOverflow','',0
	.calls	'Dem_GetNumberOfEventMemoryEntries','',0
	.calls	'Dem_SetComponentAvailable','',0
	.calls	'Dem_ClearDTC','',0
	.calls	'Dem_MainFunction','',0
	.calls	'Dem_GetEventInternalData','',0
	.calls	'DemInternal_CheckDtcValid','',0
	.calls	'DemInternal_GetSizeOfExtendedData','',16
	.calls	'DemInternal_GetAllExtendedData','',0
	.calls	'DemInternal_GetSizeOfFFData','',24
	.calls	'DemInternal_GetAllFFData','',0
	.calls	'Dem_DcmGetTranslationType','',0
	.calls	'Dem_DcmGetDTCStatusAvailabilityMask','',0
	.calls	'Dem_DcmGetStatusOfDTC','',8
	.calls	'Dem_DcmGetSeverityOfDTC','',8
	.calls	'Dem_DcmGetFunctionalUnitOfDTC','',8
	.calls	'Dem_DcmSetDTCFilter','',0
	.calls	'Dem_DcmGetNumberOfFilteredDTC','',0
	.calls	'Dem_DcmGetNextFilteredDTC','',0
	.calls	'Dem_DcmGetNextFilteredDTCAndFDC','',0
	.calls	'Dem_DcmGetNextFilteredDTCAndSeverity','',0
	.calls	'Dem_DcmSetFreezeFrameRecordFilter','',8
	.calls	'Dem_DcmGetNextFilteredRecord','',8
	.calls	'Dem_DcmGetDTCByOccurrenceTime','',0
	.calls	'Dem_DcmControlDTCStatusChangedNotification','',0
	.calls	'Dem_DcmDisableDTCRecordUpdate','',8
	.calls	'Dem_DcmEnableDTCRecordUpdate','',0
	.calls	'Dem_DcmGetFreezeFrameDataByDTC','',8
	.calls	'Dem_DcmGetSizeOfFreezeFrameByDTC','',8
	.calls	'Dem_DcmGetExtendedDataRecordByDTC','',8
	.calls	'Dem_DcmGetSizeOfExtendedDataRecordByDTC','',8
	.calls	'Dem_DcmCheckClearParameter','',0
	.calls	'Dem_DcmClearDTC','',0
	.calls	'Dem_DcmDisableDTCSetting','',0
	.calls	'Dem_DcmEnableDTCSetting','',0
	.calls	'Dem_NvM_InitStorageMem','',0
	.calls	'Dem_NvM_JobResultInd','',0
	.calls	'Dem_J1939DcmFirstDTCwithLampStatus','',0
	.extern	Dem_OperationCycleTable
	.extern	Dem_EnConditionTable
	.extern	Dem_GroupOfDTCTable
	.extern	Dem_FFRecNumClassTable
	.extern	Dem_FFRecClassTable
	.extern	Dem_DidClassTable
	.extern	Dem_DataElementClassTable
	.extern	Dem_ExtDataClassTable
	.extern	Dem_ExtDataRecClassTable
	.extern	Dem_DtcStatusChangedNotificationArray
	.extern	Dem_EventTable
	.extern	Dem_DTCTable
	.extern	Dem_DTCAttributesTable
	.extern	FiM_DemTriggerOnEventStatus
	.extern	FiM_DemInit
	.extern	Bsw_MemCpy
	.extern	__INDIRECT__
	.calls	'Dem_J1939DcmGetNextDTCwithLampStatus','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L1085:
	.word	122572
	.half	3
	.word	.L1086
	.byte	4
.L1084:
	.byte	1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1087
.L1606:
	.byte	2
	.byte	'unsigned char',0,1,8,2
	.byte	'unsigned int',0,4,7,3
	.byte	'OsIntc_InISR2',0,3,1,227,1,31,1,1,4
	.byte	'CoreID',0,1,229,1,16
	.word	144
	.byte	4
	.byte	'ISRID',0,1,230,1,13
	.word	144
	.byte	4
	.byte	'val',0,1,231,1,15
	.word	161
	.byte	4
	.byte	'fcx',0,1,232,1,15
	.word	161
	.byte	5,0,6
	.word	177
	.byte	7
	.word	199
	.byte	7
	.word	215
	.byte	7
	.word	230
	.byte	7
	.word	243
	.byte	5,0
.L1599:
	.byte	2
	.byte	'unsigned short int',0,2,7,8,2,116,9,8,9
	.byte	'vendorID',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'moduleID',0
	.word	285
	.byte	2,2,35,2,9
	.byte	'sw_major_version',0
	.word	144
	.byte	1,2,35,4,9
	.byte	'sw_minor_version',0
	.word	144
	.byte	1,2,35,5,9
	.byte	'sw_patch_version',0
	.word	144
	.byte	1,2,35,6,0
.L1596:
	.byte	10
	.word	307
	.byte	8,3,49,9,2,9
	.byte	'CfgId',0
	.word	285
	.byte	2,2,35,0,0,11
	.word	432
.L1602:
	.byte	10
	.word	453
.L1633:
	.byte	10
	.word	144
.L1645:
	.byte	10
	.word	144
.L1650:
	.byte	10
	.word	144
.L1665:
	.byte	10
	.word	144
.L1732:
	.byte	2
	.byte	'unsigned long int',0,4,7
.L1671:
	.byte	10
	.word	483
.L1919:
	.byte	2
	.byte	'char',0,1,6
.L1682:
	.byte	10
	.word	509
.L1687:
	.byte	10
	.word	144
.L1695:
	.byte	10
	.word	144
.L1704:
	.byte	10
	.word	285
.L1741:
	.byte	12,3,167,6,9,1,13
	.byte	'DEM_AGINGCTR_DOWNCNT',0,0,13
	.byte	'DEM_AGINGCTR_UPCNT',0,1,13
	.byte	'DEM_CURRENT_FDC',0,2,13
	.byte	'DEM_CYCLES_SINCE_FIRST_FAILED',0,3,13
	.byte	'DEM_CYCLES_SINCE_LAST_FAILED',0,4,13
	.byte	'DEM_FAILED_CYCLES',0,5,13
	.byte	'DEM_MAX_FDC_DURING_CURRENT_CYCLE',0,6,13
	.byte	'DEM_MAX_FDC_SINCE_LAST_CLEAR',0,7,13
	.byte	'DEM_OCCCTR',0,8,13
	.byte	'DEM_OVFLIND',0,9,13
	.byte	'DEM_SIGNIFICANCE',0,10,13
	.byte	'DEM_OBD_PASSED_CYCLES_SINCE_LAST_FAILED',0,14,13
	.byte	'DEM_AGED_COUNTER',0,15,0
.L1757:
	.byte	10
	.word	144
	.byte	14
	.byte	'FiM_DemTriggerOnEventStatus',0,4,87,28,1,1,1,1,4
	.byte	'EventId',0,4,89,18
	.word	285
	.byte	4
	.byte	'EventStatusByteOld',0,4,90,24
	.word	144
	.byte	4
	.byte	'EventStatusByteNew',0,4,91,24
	.word	144
	.byte	0,15
	.byte	'FiM_DemInit',0,4,105,28,1,1,1,1,11
	.word	527
	.byte	11
	.word	144
	.byte	10
	.word	999
	.byte	11
	.word	1004
	.byte	11
	.word	483
	.byte	14
	.byte	'Bsw_MemCpy',0,5,57,29,1,1,1,1,4
	.byte	'dest',0,5,59,49
	.word	994
	.byte	4
	.byte	'src',0,5,60,51
	.word	1009
	.byte	4
	.byte	'size',0,5,61,18
	.word	1014
	.byte	0
.L1903:
	.byte	10
	.word	144
.L1925:
	.byte	10
	.word	144
.L1949:
	.byte	10
	.word	527
.L2127:
	.byte	10
	.word	285
	.byte	16
	.byte	'__INDIRECT__',0,6,1,1,1,1,1,17,1,10
	.word	1117
	.byte	18
	.byte	'__codeptr',0,6,1,1
	.word	1119
	.byte	18
	.byte	'boolean',0,7,102,29
	.word	144
	.byte	18
	.byte	'uint8',0,7,106,29
	.word	144
	.byte	18
	.byte	'uint16',0,7,110,29
	.word	285
	.byte	18
	.byte	'uint32',0,7,114,29
	.word	483
	.byte	2
	.byte	'unsigned long long int',0,8,7,18
	.byte	'uint64',0,7,119,29
	.word	1202
	.byte	18
	.byte	'sint8',0,7,123,29
	.word	509
	.byte	2
	.byte	'short int',0,2,5,18
	.byte	'sint16',0,7,127,29
	.word	1257
	.byte	2
	.byte	'long int',0,4,5,18
	.byte	'sint32',0,7,132,1,29
	.word	1285
	.byte	2
	.byte	'long long int',0,8,5,18
	.byte	'sint64',0,7,139,1,29
	.word	1313
	.byte	2
	.byte	'float',0,4,4,18
	.byte	'float32',0,7,168,1,29
	.word	1346
	.byte	18
	.byte	'StatusType',0,2,70,25
	.word	144
	.byte	18
	.byte	'Std_ReturnType',0,2,109,16
	.word	144
	.byte	18
	.byte	'Std_VersionInfoType',0,2,123,2
	.word	307
	.byte	18
	.byte	'Dcm_SecLevelType',0,8,45,15
	.word	144
	.byte	18
	.byte	'Dcm_SesCtrlType',0,8,50,15
	.word	144
	.byte	18
	.byte	'Dcm_ProtocolType',0,8,54,15
	.word	144
	.byte	18
	.byte	'Dem_DTCFormatType',0,8,167,1,15
	.word	144
	.byte	18
	.byte	'Dem_EventIdType',0,8,175,1,16
	.word	285
	.byte	18
	.byte	'Dem_EventStatusType',0,8,178,1,15
	.word	144
	.byte	18
	.byte	'Dem_DebouncingStateType',0,8,185,1,15
	.word	144
	.byte	18
	.byte	'Dem_DebounceResetStatusType',0,8,198,1,15
	.word	144
	.byte	18
	.byte	'Dem_UdsStatusByteType',0,8,202,1,15
	.word	144
	.byte	18
	.byte	'Dem_OperationCycleStateType',0,8,212,1,15
	.word	144
	.byte	18
	.byte	'Dem_IndicatorStatusType',0,8,216,1,15
	.word	144
	.byte	18
	.byte	'Dem_DTCKindType',0,8,226,1,15
	.word	144
	.byte	18
	.byte	'Dem_DTCOriginType',0,8,230,1,15
	.word	144
	.byte	18
	.byte	'ABSActive_IDT',0,8,151,3,15
	.word	144
	.byte	18
	.byte	'ABSFailed_IDT',0,8,152,3,15
	.word	144
	.byte	18
	.byte	'ABS_EBDFailed_IDT',0,8,153,3,15
	.word	144
	.byte	18
	.byte	'ABS_FLWheelDirection_IDT',0,8,154,3,15
	.word	144
	.byte	18
	.byte	'ABS_FLWheelSpeedInvalid_IDT',0,8,155,3,15
	.word	144
	.byte	18
	.byte	'ABS_FLWheelSpeedKPH_IDT',0,8,156,3,16
	.word	285
	.byte	18
	.byte	'ABS_FLWheelSpeedRCSts_IDT',0,8,157,3,15
	.word	144
	.byte	18
	.byte	'ABS_FLWheelSpeedRC_IDT',0,8,158,3,16
	.word	285
	.byte	18
	.byte	'ABS_FRWheelDirection_IDT',0,8,159,3,15
	.word	144
	.byte	18
	.byte	'ABS_FRWheelSpeedInvalid_IDT',0,8,160,3,15
	.word	144
	.byte	18
	.byte	'ABS_FRWheelSpeedKPH_IDT',0,8,161,3,16
	.word	285
	.byte	18
	.byte	'ABS_FRWheelSpeedRCSts_IDT',0,8,162,3,15
	.word	144
	.byte	18
	.byte	'ABS_FRWheelSpeedRC_IDT',0,8,163,3,16
	.word	285
	.byte	18
	.byte	'ABS_FWSpeMCUKPH_AliveCounter_IDT',0,8,164,3,15
	.word	144
	.byte	18
	.byte	'ABS_FWSpeMCUKPH_CheckSum_IDT',0,8,165,3,15
	.word	144
	.byte	18
	.byte	'ABS_HAZActive_IDT',0,8,166,3,15
	.word	144
	.byte	18
	.byte	'ABS_LowBrakeFluid_IDT',0,8,167,3,15
	.word	144
	.byte	18
	.byte	'ABS_RLWheelDirection_IDT',0,8,168,3,15
	.word	144
	.byte	18
	.byte	'ABS_RLWheelSpeedInvalid_IDT',0,8,169,3,15
	.word	144
	.byte	18
	.byte	'ABS_RLWheelSpeedKPH_IDT',0,8,170,3,16
	.word	285
	.byte	18
	.byte	'ABS_RLWheelSpeedRCSts_IDT',0,8,171,3,15
	.word	144
	.byte	18
	.byte	'ABS_RLWheelSpeedRC_IDT',0,8,172,3,16
	.word	285
	.byte	18
	.byte	'ABS_RRWheelDirection_IDT',0,8,173,3,15
	.word	144
	.byte	18
	.byte	'ABS_RRWheelSpeedInvalid_IDT',0,8,174,3,15
	.word	144
	.byte	18
	.byte	'ABS_RRWheelSpeedKPH_IDT',0,8,175,3,16
	.word	285
	.byte	18
	.byte	'ABS_RRWheelSpeedRCSts_IDT',0,8,176,3,15
	.word	144
	.byte	18
	.byte	'ABS_RRWheelSpeedRC_IDT',0,8,177,3,16
	.word	285
	.byte	18
	.byte	'ABS_RWSpeMCUKPH_AliveCounter_IDT',0,8,178,3,15
	.word	144
	.byte	18
	.byte	'ABS_RWSpeMCUKPH_CheckSum_IDT',0,8,179,3,15
	.word	144
	.byte	18
	.byte	'ABS_Status_AliveCounter_IDT',0,8,180,3,15
	.word	144
	.byte	18
	.byte	'ABS_Status_CheckSum_IDT',0,8,181,3,15
	.word	144
	.byte	18
	.byte	'ABS_VehicleSpeedInvalid_IDT',0,8,182,3,15
	.word	144
	.byte	18
	.byte	'ABS_VehicleSpeed_IDT',0,8,183,3,16
	.word	285
	.byte	18
	.byte	'ABS_WheelSpeMCURC_AliveCounter_IDT',0,8,184,3,15
	.word	144
	.byte	18
	.byte	'ABS_WheelSpeMCURC_CheckSum_IDT',0,8,185,3,15
	.word	144
	.byte	18
	.byte	'ACC_ObjDispSts_IDT',0,8,197,3,15
	.word	144
	.byte	8,8,198,3,9,36,9
	.byte	'ADAS_ACC_SpdUnit',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'ADAS_ACC_TargetSpeed',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'ADAS_ACC_OperatingSts',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'ADAS_ACC_TimeGapLevel',0
	.word	144
	.byte	1,2,35,3,9
	.byte	'ADAS_ACC_DistanceLevel',0
	.word	144
	.byte	1,2,35,4,9
	.byte	'ADAS_ACC_ObjDispSts',0
	.word	144
	.byte	1,2,35,5,9
	.byte	'ADAS_ACC_TakeOverReq',0
	.word	144
	.byte	1,2,35,6,9
	.byte	'ADAS_AccelerationReq',0
	.word	1346
	.byte	4,2,35,8,9
	.byte	'ADAS_MaxSoftAcceleration',0
	.word	1346
	.byte	4,2,35,12,9
	.byte	'ADAS_MinSoftAcceleration',0
	.word	1346
	.byte	4,2,35,16,9
	.byte	'ADAS_IBS_StopReq',0
	.word	144
	.byte	1,2,35,20,9
	.byte	'ADAS_IBS_CarStarting',0
	.word	144
	.byte	1,2,35,21,9
	.byte	'ADAS_ACC_BrakePreferred',0
	.word	144
	.byte	1,2,35,22,9
	.byte	'ADAS_IBS_MinBreakReq',0
	.word	144
	.byte	1,2,35,23,9
	.byte	'ADAS_VLCShutDownReq',0
	.word	144
	.byte	1,2,35,24,9
	.byte	'ADAS_VLCModeReq',0
	.word	144
	.byte	1,2,35,25,9
	.byte	'ACC_AdtUpperJerkLimit',0
	.word	1346
	.byte	4,2,35,26,9
	.byte	'ACC_AdtLowerJerkLimit',0
	.word	1346
	.byte	4,2,35,30,9
	.byte	'ACC_TxtInfoForDriver',0
	.word	144
	.byte	1,2,35,34,9
	.byte	'ACC_DriveoffReq',0
	.word	144
	.byte	1,2,35,35,0,18
	.byte	'ACC_Output',0,8,220,3,3
	.word	3044
	.byte	18
	.byte	'ACC_TakeOverReq_IDT',0,8,222,3,15
	.word	144
	.byte	18
	.byte	'ACU_AirbagWarningStatus_IDT',0,8,224,3,15
	.word	144
	.byte	18
	.byte	'ACU_AliveCounter_IDT',0,8,225,3,15
	.word	144
	.byte	18
	.byte	'ACU_CheckSum_IDT',0,8,226,3,15
	.word	144
	.byte	18
	.byte	'ACU_CoDAirbagStatus_IDT',0,8,227,3,15
	.word	144
	.byte	18
	.byte	'ACU_CoDSeatOccupSensorStat_IDT',0,8,228,3,15
	.word	144
	.byte	18
	.byte	'ACU_CoDSeatbeltBucklestatus_IDT',0,8,229,3,15
	.word	144
	.byte	18
	.byte	'ACU_CoDSeatbletPTighten_IDT',0,8,230,3,15
	.word	144
	.byte	18
	.byte	'ACU_CrashFrontOutputSts_IDT',0,8,231,3,15
	.word	144
	.byte	18
	.byte	'ACU_CrashLeftOutputSts_IDT',0,8,232,3,15
	.word	144
	.byte	18
	.byte	'ACU_CrashRearOutputSts_IDT',0,8,233,3,15
	.word	144
	.byte	18
	.byte	'ACU_CrashRightOutputSts_IDT',0,8,234,3,15
	.word	144
	.byte	18
	.byte	'ACU_CrashSts_IDT',0,8,235,3,15
	.word	144
	.byte	18
	.byte	'ACU_DAirbagStatus_IDT',0,8,236,3,15
	.word	144
	.byte	18
	.byte	'ACU_DSeatOccupSensorStat_IDT',0,8,237,3,15
	.word	144
	.byte	18
	.byte	'ACU_DSeatbeltBucklestatus_IDT',0,8,238,3,15
	.word	144
	.byte	18
	.byte	'ACU_DSeatbletPTighten_IDT',0,8,239,3,15
	.word	144
	.byte	18
	.byte	'ACU_LCABsts_IDT',0,8,240,3,15
	.word	144
	.byte	18
	.byte	'ACU_LPSeatOccupSensorStat_IDT',0,8,241,3,15
	.word	144
	.byte	18
	.byte	'ACU_LPSeatbeltBucklestatus_IDT',0,8,242,3,15
	.word	144
	.byte	18
	.byte	'ACU_LSABsts_IDT',0,8,243,3,15
	.word	144
	.byte	18
	.byte	'ACU_MPSeatOccupSensorStat_IDT',0,8,244,3,15
	.word	144
	.byte	18
	.byte	'ACU_MPSeatbeltBucklestatus_IDT',0,8,245,3,15
	.word	144
	.byte	18
	.byte	'ACU_RCABsts_IDT',0,8,246,3,15
	.word	144
	.byte	18
	.byte	'ACU_RPSeatOccupSensorStat_IDT',0,8,247,3,15
	.word	144
	.byte	18
	.byte	'ACU_RPSeatbeltBucklestatus_IDT',0,8,248,3,15
	.word	144
	.byte	18
	.byte	'ACU_RSABsts_IDT',0,8,249,3,15
	.word	144
	.byte	18
	.byte	'ADAS_01_Checksum_IDT',0,8,250,3,15
	.word	144
	.byte	18
	.byte	'ADAS_01_RollingCounter_IDT',0,8,251,3,15
	.word	144
	.byte	18
	.byte	'ADAS_02_Checksum_IDT',0,8,252,3,15
	.word	144
	.byte	18
	.byte	'ADAS_02_RollingCounter_IDT',0,8,253,3,15
	.word	144
	.byte	18
	.byte	'ADAS_03_Checksum_IDT',0,8,254,3,15
	.word	144
	.byte	18
	.byte	'ADAS_03_RollingCounter_IDT',0,8,255,3,15
	.word	144
	.byte	18
	.byte	'ADAS_ACC_DistanceLevel_IDT',0,8,129,4,15
	.word	144
	.byte	18
	.byte	'ADAS_ACC_OperatingSts_IDT',0,8,131,4,15
	.word	144
	.byte	18
	.byte	'ADAS_ACC_SpdUnit_IDT',0,8,132,4,15
	.word	144
	.byte	18
	.byte	'ADAS_ACC_TargetSpeed_IDT',0,8,134,4,15
	.word	144
	.byte	18
	.byte	'ADAS_ACC_TimeGapLevel_IDT',0,8,135,4,15
	.word	144
	.byte	18
	.byte	'ADAS_AEB_TgtDecel_ReqValue_IDT',0,8,139,4,16
	.word	285
	.byte	18
	.byte	'ADAS_AccelerationReq_IDT',0,8,159,4,16
	.word	285
	.byte	8,8,160,4,9,20,9
	.byte	'ADAS_AEB_TgtDecel_ReqValue',0
	.word	1346
	.byte	4,2,35,0,9
	.byte	'ADAS_AEB_AbpReq',0
	.word	144
	.byte	1,2,35,4,9
	.byte	'ADAS_IBS_EBAReq',0
	.word	144
	.byte	1,2,35,5,9
	.byte	'AEB_AWB_Level',0
	.word	144
	.byte	1,2,35,6,9
	.byte	'AEB_ABA_Req',0
	.word	144
	.byte	1,2,35,7,9
	.byte	'AEB_VehHldReq',0
	.word	144
	.byte	1,2,35,8,9
	.byte	'AEB_TgtDecel_Req',0
	.word	144
	.byte	1,2,35,9,9
	.byte	'AEB_AWB_Req',0
	.word	144
	.byte	1,2,35,10,9
	.byte	'ADAS_AEB_AbaLevel',0
	.word	144
	.byte	1,2,35,11,9
	.byte	'ADAS_AEB_FuncSWResp',0
	.word	144
	.byte	1,2,35,12,9
	.byte	'AEB_FuncSts',0
	.word	144
	.byte	1,2,35,13,9
	.byte	'AEB_VehActive',0
	.word	144
	.byte	1,2,35,14,9
	.byte	'AEB_VRUActive',0
	.word	144
	.byte	1,2,35,15,9
	.byte	'AEB_ErrorSts',0
	.word	144
	.byte	1,2,35,16,9
	.byte	'AEB_FCW_SnvtyResp',0
	.word	144
	.byte	1,2,35,17,9
	.byte	'AEB_FCW_Warning',0
	.word	144
	.byte	1,2,35,18,0,18
	.byte	'AEB_OutPut',0,8,178,4,3
	.word	5035
	.byte	8,8,180,4,9,24,9
	.byte	'ADAS_LSS_AssidFormResp',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'ADAS_LSS_AngCmdReqPortnValue',0
	.word	1346
	.byte	4,2,35,2,9
	.byte	'ADAS_EPS_TargetSteeringAngle',0
	.word	1346
	.byte	4,2,35,6,9
	.byte	'ADAS_EPS_Vibration_Req',0
	.word	144
	.byte	1,2,35,10,9
	.byte	'ADAS_LSS_VoiceWarn',0
	.word	144
	.byte	1,2,35,11,9
	.byte	'ADAS_LSS_HandsoffWarn',0
	.word	144
	.byte	1,2,35,12,9
	.byte	'ADAS_LSS_FuncResp',0
	.word	144
	.byte	1,2,35,13,9
	.byte	'ADAS_EPS_AngReqSts',0
	.word	144
	.byte	1,2,35,14,9
	.byte	'ADAS_LSS_LeLineTrackingSts',0
	.word	144
	.byte	1,2,35,15,9
	.byte	'ADAS_LSS_RiLineTrackingSts',0
	.word	144
	.byte	1,2,35,16,9
	.byte	'ADAS_LSS_Available',0
	.word	144
	.byte	1,2,35,17,9
	.byte	'ADAS_LSS_FunSts',0
	.word	144
	.byte	1,2,35,18,9
	.byte	'ADAS_LSS_ErrSts',0
	.word	144
	.byte	1,2,35,19,9
	.byte	'ADAS_LSS_WarnFromResp',0
	.word	144
	.byte	1,2,35,20,9
	.byte	'FC_CalibrationSts',0
	.word	144
	.byte	1,2,35,21,9
	.byte	'FC_BlockageSts',0
	.word	144
	.byte	1,2,35,22,0,18
	.byte	'LSS_Output',0,8,198,4,3
	.word	5459
	.byte	8,8,200,4,9,12,9
	.byte	'ADAS_TSR_SWSts',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'TSR_SLWSwtResp',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'ADAS_TSR_OperationSts',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'ADAS_TSR_SpeedLimit',0
	.word	144
	.byte	1,2,35,3,9
	.byte	'TSR_TrafSign',0
	.word	144
	.byte	1,2,35,4,9
	.byte	'TSR_SpdAssistInfoDisp',0
	.word	144
	.byte	1,2,35,5,9
	.byte	'TSR_Warning_offset',0
	.word	144
	.byte	1,2,35,6,9
	.byte	'TSR_SLWVisualWarn',0
	.word	144
	.byte	1,2,35,7,9
	.byte	'TSR_SLWVoiceWarn',0
	.word	144
	.byte	1,2,35,8,0,18
	.byte	'TSR_Output',0,8,211,4,3
	.word	5972
	.byte	18
	.byte	'ADAS_EPS_AngReqSts_IDT',0,8,223,4,15
	.word	144
	.byte	18
	.byte	'ADAS_EPS_TargetSteeringAngle_IDT',0,8,224,4,16
	.word	285
	.byte	18
	.byte	'ADAS_EPS_Vibration_Req_IDT',0,8,225,4,15
	.word	144
	.byte	18
	.byte	'ADAS_LSS_AngCmdReqPortnValue_IDT',0,8,235,4,16
	.word	285
	.byte	18
	.byte	'ADAS_LSS_AssidFormResp_IDT',0,8,236,4,15
	.word	144
	.byte	18
	.byte	'ADAS_LSS_FuncResp_IDT',0,8,240,4,15
	.word	144
	.byte	18
	.byte	'ADAS_LSS_HandsoffWarn_IDT',0,8,241,4,15
	.word	144
	.byte	18
	.byte	'ADAS_LSS_LeLineTrackingSts_IDT',0,8,242,4,15
	.word	144
	.byte	18
	.byte	'ADAS_LSS_RiLineTrackingSts_IDT',0,8,243,4,15
	.word	144
	.byte	18
	.byte	'ADAS_LSS_VoiceWarn_IDT',0,8,244,4,15
	.word	144
	.byte	18
	.byte	'ADAS_MaxSoftAcceleration_IDT',0,8,247,4,16
	.word	285
	.byte	18
	.byte	'ADAS_MinSoftAcceleration_IDT',0,8,248,4,16
	.word	285
	.byte	19,16
	.word	144
	.byte	20,15,0,18
	.byte	'serial_number_16',0,8,170,5,15
	.word	6683
	.byte	8,8,171,5,9,84,9
	.byte	'time_stamp',0
	.word	1202
	.byte	8,2,35,0,9
	.byte	'frame_index',0
	.word	483
	.byte	4,2,35,8,9
	.byte	'p0_x',0
	.word	1346
	.byte	4,2,35,12,9
	.byte	'p0_y',0
	.word	1346
	.byte	4,2,35,16,9
	.byte	'p1_x',0
	.word	1346
	.byte	4,2,35,20,9
	.byte	'p1_y',0
	.word	1346
	.byte	4,2,35,24,9
	.byte	'p2_x',0
	.word	1346
	.byte	4,2,35,28,9
	.byte	'p2_y',0
	.word	1346
	.byte	4,2,35,32,9
	.byte	'p3_x',0
	.word	1346
	.byte	4,2,35,36,9
	.byte	'p3_y',0
	.word	1346
	.byte	4,2,35,40,9
	.byte	'width',0
	.word	1346
	.byte	4,2,35,44,9
	.byte	'depth',0
	.word	1346
	.byte	4,2,35,48,9
	.byte	'direction',0
	.word	144
	.byte	1,2,35,52,9
	.byte	'slot_type',0
	.word	144
	.byte	1,2,35,53,9
	.byte	'slot_status',0
	.word	144
	.byte	1,2,35,54,9
	.byte	'slot_detection_type',0
	.word	144
	.byte	1,2,35,55,9
	.byte	'slot_occupied',0
	.word	144
	.byte	1,2,35,56,9
	.byte	'quality',0
	.word	144
	.byte	1,2,35,57,9
	.byte	'angle',0
	.word	1346
	.byte	4,2,35,58,9
	.byte	'lane_width',0
	.word	1346
	.byte	4,2,35,62,9
	.byte	'tracking_id',0
	.word	144
	.byte	1,2,35,66,9
	.byte	'serial_number',0
	.word	6692
	.byte	16,2,35,67,0,18
	.byte	'ParkingSlot',0,8,195,5,3
	.word	6718
	.byte	19,16
	.word	144
	.byte	20,15,0,8,8,197,5,9,88,9
	.byte	'replan_counter',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'planning_slot',0
	.word	6718
	.byte	84,2,35,4,0,18
	.byte	'PlanningSlotLocked',0,8,201,5,3
	.word	7145
	.byte	8,8,203,5,9,40,9
	.byte	'x',0
	.word	1346
	.byte	4,2,35,0,9
	.byte	'y',0
	.word	1346
	.byte	4,2,35,4,9
	.byte	'heading',0
	.word	1346
	.byte	4,2,35,8,9
	.byte	'arc_length_to_end',0
	.word	1346
	.byte	4,2,35,12,9
	.byte	'curve',0
	.word	1346
	.byte	4,2,35,16,9
	.byte	'steering_angle',0
	.word	1346
	.byte	4,2,35,20,9
	.byte	'maxvel',0
	.word	1346
	.byte	4,2,35,24,9
	.byte	'acc',0
	.word	1346
	.byte	4,2,35,28,9
	.byte	'speed',0
	.word	1346
	.byte	4,2,35,32,9
	.byte	'time_to_end',0
	.word	1346
	.byte	4,2,35,36,0,18
	.byte	'TrajectoryPoint',0,8,215,5,3
	.word	7227
	.byte	8,8,217,5,9,112,9
	.byte	'replan_counter',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'trajectory_id',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'trajectory_point_id',0
	.word	483
	.byte	4,2,35,2,9
	.byte	'cur_vehicle_brake',0
	.word	1346
	.byte	4,2,35,6,9
	.byte	'exp_vehicle_brake',0
	.word	1346
	.byte	4,2,35,10,9
	.byte	'cur_vehicle_throttle',0
	.word	1346
	.byte	4,2,35,14,9
	.byte	'exp_vehicle_throttle',0
	.word	1346
	.byte	4,2,35,18,9
	.byte	'cur_vehicle_lon_acc',0
	.word	1346
	.byte	4,2,35,22,9
	.byte	'exp_vehicle_lon_acc',0
	.word	1346
	.byte	4,2,35,26,9
	.byte	'cur_vehicle_gear',0
	.word	144
	.byte	1,2,35,30,9
	.byte	'exp_vehicle_gear',0
	.word	144
	.byte	1,2,35,31,9
	.byte	'exp_point',0
	.word	7227
	.byte	40,2,35,32,9
	.byte	'cur_point',0
	.word	7227
	.byte	40,2,35,72,0,18
	.byte	'TrackingPointsDebug',0,8,232,5,3
	.word	7429
	.byte	8,8,234,5,9,4,9
	.byte	'tracking_error_status',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'cur_trajectory_finish',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'points_to_end',0
	.word	144
	.byte	1,2,35,2,0,18
	.byte	'TrackingState',0,8,239,5,3
	.word	7803
	.byte	19,240,7
	.word	6718
	.byte	20,11,0,18
	.byte	'slot_set_12',0,8,241,5,21
	.word	7918
	.byte	8,8,242,5,9,136,8,9
	.byte	'time_stamp',0
	.word	1202
	.byte	8,2,35,0,9
	.byte	'time_stamp_slot',0
	.word	1202
	.byte	8,2,35,8,9
	.byte	'frame_index',0
	.word	483
	.byte	4,2,35,16,9
	.byte	'slot_cnt',0
	.word	144
	.byte	1,2,35,20,9
	.byte	'slot_set',0
	.word	7928
	.byte	240,7,2,35,24,0,18
	.byte	'ParkingSlotSet',0,8,249,5,3
	.word	7949
	.byte	19,240,7
	.word	6718
	.byte	20,11,0,18
	.byte	'APA_EPS_TargetSteeringAngle_IDT',0,8,136,6,16
	.word	285
	.byte	18
	.byte	'APA_WCB_BrakeControlReq_IDT',0,8,154,6,15
	.word	144
	.byte	18
	.byte	'ARS_CFGSTATE_CRC16_Checksum_IDT',0,8,147,7,16
	.word	285
	.byte	18
	.byte	'ARS_CFGSTATE_Mode_IDT',0,8,148,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFGSTATE_MsgCounter_IDT',0,8,149,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFGSTATE_SensorID_CFGflag_IDT',0,8,150,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFGSTATE_SensorID_IDT',0,8,151,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFGSTATE_VehParCoverDamping_IDT',0,8,152,7,16
	.word	285
	.byte	18
	.byte	'ARS_CFGSTATE_VehParLatPos_IDT',0,8,153,7,16
	.word	285
	.byte	18
	.byte	'ARS_CFGSTATE_VehParLongPos_IDT',0,8,154,7,16
	.word	285
	.byte	18
	.byte	'ARS_CFGSTATE_VehParSteeringRatio_IDT',0,8,155,7,16
	.word	285
	.byte	18
	.byte	'ARS_CFGSTATE_VehParVertPos_IDT',0,8,156,7,16
	.word	285
	.byte	18
	.byte	'ARS_CFGSTATE_VehParWheelBase_IDT',0,8,157,7,16
	.word	285
	.byte	18
	.byte	'ARS_CFGSTATE_VehParYawAngle_IDT',0,8,158,7,16
	.word	285
	.byte	18
	.byte	'ARS_CFGST_TmeSynEnFl_IDT',0,8,159,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFGST_VehParStrRatio_CFGfl_IDT',0,8,160,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFGST_VehPrAxLdDistr0_IDT',0,8,161,7,16
	.word	285
	.byte	18
	.byte	'ARS_CFGST_VehPrAxLdDstr_CFGfl_IDT',0,8,162,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFGST_VehPrCntrGrvHght_CFGfl_IDT',0,8,163,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFGST_VehPrCntrOfGrvHght_IDT',0,8,164,7,16
	.word	285
	.byte	18
	.byte	'ARS_CFGST_VehPrCvrDmp_CFGfl_IDT',0,8,165,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFGST_VehPrLatPos_CFGfl_IDT',0,8,166,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFGST_VehPrLngPosCoG_CFGfl_IDT',0,8,167,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFGST_VehPrLngPosCoG_IDT',0,8,168,7,16
	.word	285
	.byte	18
	.byte	'ARS_CFGST_VehPrLngPos_CFGfl_IDT',0,8,169,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFGST_VehPrSnsrOri_CFGfl_IDT',0,8,170,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFGST_VehPrSnsrOri_IDT',0,8,171,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFGST_VehPrTrWdFrnt_CFGfl_IDT',0,8,172,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFGST_VehPrTrWdRear_CFGfl_IDT',0,8,173,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFGST_VehPrTrkWdthFrnt_IDT',0,8,174,7,16
	.word	285
	.byte	18
	.byte	'ARS_CFGST_VehPrTrkWdthRear_IDT',0,8,175,7,16
	.word	285
	.byte	18
	.byte	'ARS_CFGST_VehPrVehWght_CFGfl_IDT',0,8,176,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFGST_VehPrVehWght_IDT',0,8,177,7,16
	.word	285
	.byte	18
	.byte	'ARS_CFGST_VehPrVrtPos_CFGfl_IDT',0,8,178,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFGST_VehPrWhlBs_CFGfl_IDT',0,8,179,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFGST_VehPrYwAng_CFGfl_IDT',0,8,180,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFG_ProtoclFlag_P_IDT',0,8,181,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFG_VParPitchAngle_CFGflag_IDT',0,8,182,7,15
	.word	144
	.byte	18
	.byte	'ARS_CFG_VParPitchAngle_IDT',0,8,183,7,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_00_IDT',0,8,184,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_01_IDT',0,8,185,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_02_IDT',0,8,186,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_03_IDT',0,8,187,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_04_IDT',0,8,188,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_05_IDT',0,8,189,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_06_IDT',0,8,190,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_07_IDT',0,8,191,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_08_IDT',0,8,192,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_09_IDT',0,8,193,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_10_IDT',0,8,194,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_11_IDT',0,8,195,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_12_IDT',0,8,196,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_13_IDT',0,8,197,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_14_IDT',0,8,198,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_15_IDT',0,8,199,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_16_IDT',0,8,200,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_17_IDT',0,8,201,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_18_IDT',0,8,202,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_19_IDT',0,8,203,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_20_IDT',0,8,204,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_21_IDT',0,8,205,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_22_IDT',0,8,206,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_23_IDT',0,8,207,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_24_IDT',0,8,208,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_25_IDT',0,8,209,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_26_IDT',0,8,210,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_27_IDT',0,8,211,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_28_IDT',0,8,212,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_29_IDT',0,8,213,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_30_IDT',0,8,214,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_31_IDT',0,8,215,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_32_IDT',0,8,216,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_33_IDT',0,8,217,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_34_IDT',0,8,218,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_35_IDT',0,8,219,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_36_IDT',0,8,220,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_37_IDT',0,8,221,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_38_IDT',0,8,222,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_39_IDT',0,8,223,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_40_IDT',0,8,224,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_41_IDT',0,8,225,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_42_IDT',0,8,226,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_43_IDT',0,8,227,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_44_IDT',0,8,228,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_45_IDT',0,8,229,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_46_IDT',0,8,230,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_47_IDT',0,8,231,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_48_IDT',0,8,232,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_49_IDT',0,8,233,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_50_IDT',0,8,234,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_51_IDT',0,8,235,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_52_IDT',0,8,236,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_53_IDT',0,8,237,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_54_IDT',0,8,238,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_55_IDT',0,8,239,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_56_IDT',0,8,240,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_57_IDT',0,8,241,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_58_IDT',0,8,242,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsXStd_Obj_59_IDT',0,8,243,7,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_00_IDT',0,8,244,7,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_01_IDT',0,8,245,7,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_02_IDT',0,8,246,7,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_03_IDT',0,8,247,7,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_04_IDT',0,8,248,7,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_05_IDT',0,8,249,7,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_06_IDT',0,8,250,7,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_07_IDT',0,8,251,7,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_08_IDT',0,8,252,7,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_09_IDT',0,8,253,7,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_10_IDT',0,8,254,7,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_11_IDT',0,8,255,7,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_12_IDT',0,8,128,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_13_IDT',0,8,129,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_14_IDT',0,8,130,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_15_IDT',0,8,131,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_16_IDT',0,8,132,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_17_IDT',0,8,133,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_18_IDT',0,8,134,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_19_IDT',0,8,135,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_20_IDT',0,8,136,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_21_IDT',0,8,137,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_22_IDT',0,8,138,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_23_IDT',0,8,139,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_24_IDT',0,8,140,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_25_IDT',0,8,141,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_26_IDT',0,8,142,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_27_IDT',0,8,143,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_28_IDT',0,8,144,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_29_IDT',0,8,145,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_30_IDT',0,8,146,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_31_IDT',0,8,147,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_32_IDT',0,8,148,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_33_IDT',0,8,149,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_34_IDT',0,8,150,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_35_IDT',0,8,151,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_36_IDT',0,8,152,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_37_IDT',0,8,153,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_38_IDT',0,8,154,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_39_IDT',0,8,155,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_40_IDT',0,8,156,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_41_IDT',0,8,157,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_42_IDT',0,8,158,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_43_IDT',0,8,159,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_44_IDT',0,8,160,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_45_IDT',0,8,161,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_46_IDT',0,8,162,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_47_IDT',0,8,163,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_48_IDT',0,8,164,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_49_IDT',0,8,165,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_50_IDT',0,8,166,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_51_IDT',0,8,167,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_52_IDT',0,8,168,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_53_IDT',0,8,169,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_54_IDT',0,8,170,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_55_IDT',0,8,171,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_56_IDT',0,8,172,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_57_IDT',0,8,173,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_58_IDT',0,8,174,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsX_Obj_59_IDT',0,8,175,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_00_IDT',0,8,176,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_01_IDT',0,8,177,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_02_IDT',0,8,178,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_03_IDT',0,8,179,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_04_IDT',0,8,180,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_05_IDT',0,8,181,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_06_IDT',0,8,182,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_07_IDT',0,8,183,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_08_IDT',0,8,184,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_09_IDT',0,8,185,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_10_IDT',0,8,186,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_11_IDT',0,8,187,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_12_IDT',0,8,188,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_13_IDT',0,8,189,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_14_IDT',0,8,190,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_15_IDT',0,8,191,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_16_IDT',0,8,192,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_17_IDT',0,8,193,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_18_IDT',0,8,194,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_19_IDT',0,8,195,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_20_IDT',0,8,196,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_21_IDT',0,8,197,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_22_IDT',0,8,198,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_23_IDT',0,8,199,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_24_IDT',0,8,200,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_25_IDT',0,8,201,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_26_IDT',0,8,202,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_27_IDT',0,8,203,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_28_IDT',0,8,204,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_29_IDT',0,8,205,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_30_IDT',0,8,206,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_31_IDT',0,8,207,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_32_IDT',0,8,208,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_33_IDT',0,8,209,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_34_IDT',0,8,210,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_35_IDT',0,8,211,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_36_IDT',0,8,212,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_37_IDT',0,8,213,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_38_IDT',0,8,214,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_39_IDT',0,8,215,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_40_IDT',0,8,216,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_41_IDT',0,8,217,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_42_IDT',0,8,218,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_43_IDT',0,8,219,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_44_IDT',0,8,220,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_45_IDT',0,8,221,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_46_IDT',0,8,222,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_47_IDT',0,8,223,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_48_IDT',0,8,224,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_49_IDT',0,8,225,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_50_IDT',0,8,226,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_51_IDT',0,8,227,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_52_IDT',0,8,228,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_53_IDT',0,8,229,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_54_IDT',0,8,230,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_55_IDT',0,8,231,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_56_IDT',0,8,232,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_57_IDT',0,8,233,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_58_IDT',0,8,234,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsYStd_Obj_59_IDT',0,8,235,8,15
	.word	144
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_00_IDT',0,8,236,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_01_IDT',0,8,237,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_02_IDT',0,8,238,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_03_IDT',0,8,239,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_04_IDT',0,8,240,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_05_IDT',0,8,241,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_06_IDT',0,8,242,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_07_IDT',0,8,243,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_08_IDT',0,8,244,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_09_IDT',0,8,245,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_10_IDT',0,8,246,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_11_IDT',0,8,247,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_12_IDT',0,8,248,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_13_IDT',0,8,249,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_14_IDT',0,8,250,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_15_IDT',0,8,251,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_16_IDT',0,8,252,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_17_IDT',0,8,253,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_18_IDT',0,8,254,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_19_IDT',0,8,255,8,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_20_IDT',0,8,128,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_21_IDT',0,8,129,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_22_IDT',0,8,130,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_23_IDT',0,8,131,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_24_IDT',0,8,132,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_25_IDT',0,8,133,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_26_IDT',0,8,134,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_27_IDT',0,8,135,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_28_IDT',0,8,136,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_29_IDT',0,8,137,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_30_IDT',0,8,138,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_31_IDT',0,8,139,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_32_IDT',0,8,140,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_33_IDT',0,8,141,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_34_IDT',0,8,142,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_35_IDT',0,8,143,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_36_IDT',0,8,144,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_37_IDT',0,8,145,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_38_IDT',0,8,146,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_39_IDT',0,8,147,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_40_IDT',0,8,148,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_41_IDT',0,8,149,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_42_IDT',0,8,150,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_43_IDT',0,8,151,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_44_IDT',0,8,152,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_45_IDT',0,8,153,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_46_IDT',0,8,154,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_47_IDT',0,8,155,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_48_IDT',0,8,156,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_49_IDT',0,8,157,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_50_IDT',0,8,158,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_51_IDT',0,8,159,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_52_IDT',0,8,160,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_53_IDT',0,8,161,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_54_IDT',0,8,162,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_55_IDT',0,8,163,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_56_IDT',0,8,164,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_57_IDT',0,8,165,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_58_IDT',0,8,166,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_AabsY_Obj_59_IDT',0,8,167,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Header_IDT',0,8,168,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_00_01_IDT',0,8,169,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_02_03_IDT',0,8,170,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_04_05_IDT',0,8,171,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_06_07_IDT',0,8,172,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_08_09_IDT',0,8,173,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_10_11_IDT',0,8,174,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_12_13_IDT',0,8,175,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_14_15_IDT',0,8,176,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_16_17_IDT',0,8,177,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_18_19_IDT',0,8,178,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_20_21_IDT',0,8,179,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_22_23_IDT',0,8,180,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_24_25_IDT',0,8,181,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_26_27_IDT',0,8,182,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_28_29_IDT',0,8,183,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_30_31_IDT',0,8,184,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_32_33_IDT',0,8,185,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_34_35_IDT',0,8,186,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_36_37_IDT',0,8,187,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_38_39_IDT',0,8,188,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_40_41_IDT',0,8,189,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_42_43_IDT',0,8,190,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_44_45_IDT',0,8,191,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_46_47_IDT',0,8,192,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_48_49_IDT',0,8,193,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_50_51_IDT',0,8,194,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_52_53_IDT',0,8,195,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_54_55_IDT',0,8,196,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_56_57_IDT',0,8,197,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_CRC16_Checksum_Obj_58_59_IDT',0,8,198,9,16
	.word	285
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_00_IDT',0,8,199,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_01_IDT',0,8,200,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_02_IDT',0,8,201,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_03_IDT',0,8,202,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_04_IDT',0,8,203,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_05_IDT',0,8,204,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_06_IDT',0,8,205,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_07_IDT',0,8,206,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_08_IDT',0,8,207,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_09_IDT',0,8,208,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_10_IDT',0,8,209,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_11_IDT',0,8,210,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_12_IDT',0,8,211,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_13_IDT',0,8,212,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_14_IDT',0,8,213,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_15_IDT',0,8,214,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_16_IDT',0,8,215,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_17_IDT',0,8,216,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_18_IDT',0,8,217,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_19_IDT',0,8,218,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_20_IDT',0,8,219,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_21_IDT',0,8,220,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_22_IDT',0,8,221,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_23_IDT',0,8,222,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_24_IDT',0,8,223,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_25_IDT',0,8,224,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_26_IDT',0,8,225,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_27_IDT',0,8,226,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_28_IDT',0,8,227,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_29_IDT',0,8,228,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_30_IDT',0,8,229,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_31_IDT',0,8,230,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_32_IDT',0,8,231,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_33_IDT',0,8,232,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_34_IDT',0,8,233,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_35_IDT',0,8,234,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_36_IDT',0,8,235,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_37_IDT',0,8,236,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_38_IDT',0,8,237,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_39_IDT',0,8,238,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_40_IDT',0,8,239,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_41_IDT',0,8,240,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_42_IDT',0,8,241,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_43_IDT',0,8,242,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_44_IDT',0,8,243,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_45_IDT',0,8,244,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_46_IDT',0,8,245,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_47_IDT',0,8,246,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_48_IDT',0,8,247,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_49_IDT',0,8,248,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_50_IDT',0,8,249,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_51_IDT',0,8,250,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_52_IDT',0,8,251,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_53_IDT',0,8,252,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_54_IDT',0,8,253,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_55_IDT',0,8,254,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_56_IDT',0,8,255,9,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_57_IDT',0,8,128,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_58_IDT',0,8,129,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ClassConf_Obj_59_IDT',0,8,130,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_00_IDT',0,8,131,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_01_IDT',0,8,132,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_02_IDT',0,8,133,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_03_IDT',0,8,134,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_04_IDT',0,8,135,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_05_IDT',0,8,136,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_06_IDT',0,8,137,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_07_IDT',0,8,138,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_08_IDT',0,8,139,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_09_IDT',0,8,140,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_10_IDT',0,8,141,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_11_IDT',0,8,142,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_12_IDT',0,8,143,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_13_IDT',0,8,144,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_14_IDT',0,8,145,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_15_IDT',0,8,146,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_16_IDT',0,8,147,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_17_IDT',0,8,148,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_18_IDT',0,8,149,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_19_IDT',0,8,150,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_20_IDT',0,8,151,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_21_IDT',0,8,152,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_22_IDT',0,8,153,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_23_IDT',0,8,154,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_24_IDT',0,8,155,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_25_IDT',0,8,156,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_26_IDT',0,8,157,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_27_IDT',0,8,158,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_28_IDT',0,8,159,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_29_IDT',0,8,160,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_30_IDT',0,8,161,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_31_IDT',0,8,162,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_32_IDT',0,8,163,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_33_IDT',0,8,164,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_34_IDT',0,8,165,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_35_IDT',0,8,166,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_36_IDT',0,8,167,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_37_IDT',0,8,168,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_38_IDT',0,8,169,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_39_IDT',0,8,170,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_40_IDT',0,8,171,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_41_IDT',0,8,172,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_42_IDT',0,8,173,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_43_IDT',0,8,174,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_44_IDT',0,8,175,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_45_IDT',0,8,176,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_46_IDT',0,8,177,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_47_IDT',0,8,178,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_48_IDT',0,8,179,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_49_IDT',0,8,180,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_50_IDT',0,8,181,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_51_IDT',0,8,182,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_52_IDT',0,8,183,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_53_IDT',0,8,184,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_54_IDT',0,8,185,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_55_IDT',0,8,186,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_56_IDT',0,8,187,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_57_IDT',0,8,188,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_58_IDT',0,8,189,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Classification_Obj_59_IDT',0,8,190,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_CycleCounter_IDT',0,8,191,10,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_00_IDT',0,8,192,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_01_IDT',0,8,193,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_02_IDT',0,8,194,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_03_IDT',0,8,195,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_04_IDT',0,8,196,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_05_IDT',0,8,197,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_06_IDT',0,8,198,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_07_IDT',0,8,199,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_08_IDT',0,8,200,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_09_IDT',0,8,201,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_10_IDT',0,8,202,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_11_IDT',0,8,203,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_12_IDT',0,8,204,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_13_IDT',0,8,205,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_14_IDT',0,8,206,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_15_IDT',0,8,207,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_16_IDT',0,8,208,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_17_IDT',0,8,209,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_18_IDT',0,8,210,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_19_IDT',0,8,211,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_20_IDT',0,8,212,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_21_IDT',0,8,213,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_22_IDT',0,8,214,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_23_IDT',0,8,215,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_24_IDT',0,8,216,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_25_IDT',0,8,217,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_26_IDT',0,8,218,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_27_IDT',0,8,219,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_28_IDT',0,8,220,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_29_IDT',0,8,221,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_30_IDT',0,8,222,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_31_IDT',0,8,223,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_32_IDT',0,8,224,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_33_IDT',0,8,225,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_34_IDT',0,8,226,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_35_IDT',0,8,227,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_36_IDT',0,8,228,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_37_IDT',0,8,229,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_38_IDT',0,8,230,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_39_IDT',0,8,231,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_40_IDT',0,8,232,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_41_IDT',0,8,233,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_42_IDT',0,8,234,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_43_IDT',0,8,235,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_44_IDT',0,8,236,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_45_IDT',0,8,237,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_46_IDT',0,8,238,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_47_IDT',0,8,239,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_48_IDT',0,8,240,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_49_IDT',0,8,241,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_50_IDT',0,8,242,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_51_IDT',0,8,243,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_52_IDT',0,8,244,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_53_IDT',0,8,245,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_54_IDT',0,8,246,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_55_IDT',0,8,247,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_56_IDT',0,8,248,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_57_IDT',0,8,249,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_58_IDT',0,8,250,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistXStd_Obj_59_IDT',0,8,251,10,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistX_Obj_00_IDT',0,8,252,10,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_01_IDT',0,8,253,10,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_02_IDT',0,8,254,10,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_03_IDT',0,8,255,10,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_04_IDT',0,8,128,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_05_IDT',0,8,129,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_06_IDT',0,8,130,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_07_IDT',0,8,131,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_08_IDT',0,8,132,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_09_IDT',0,8,133,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_10_IDT',0,8,134,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_11_IDT',0,8,135,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_12_IDT',0,8,136,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_13_IDT',0,8,137,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_14_IDT',0,8,138,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_15_IDT',0,8,139,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_16_IDT',0,8,140,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_17_IDT',0,8,141,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_18_IDT',0,8,142,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_19_IDT',0,8,143,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_20_IDT',0,8,144,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_21_IDT',0,8,145,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_22_IDT',0,8,146,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_23_IDT',0,8,147,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_24_IDT',0,8,148,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_25_IDT',0,8,149,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_26_IDT',0,8,150,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_27_IDT',0,8,151,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_28_IDT',0,8,152,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_29_IDT',0,8,153,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_30_IDT',0,8,154,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_31_IDT',0,8,155,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_32_IDT',0,8,156,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_33_IDT',0,8,157,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_34_IDT',0,8,158,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_35_IDT',0,8,159,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_36_IDT',0,8,160,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_37_IDT',0,8,161,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_38_IDT',0,8,162,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_39_IDT',0,8,163,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_40_IDT',0,8,164,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_41_IDT',0,8,165,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_42_IDT',0,8,166,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_43_IDT',0,8,167,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_44_IDT',0,8,168,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_45_IDT',0,8,169,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_46_IDT',0,8,170,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_47_IDT',0,8,171,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_48_IDT',0,8,172,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_49_IDT',0,8,173,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_50_IDT',0,8,174,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_51_IDT',0,8,175,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_52_IDT',0,8,176,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_53_IDT',0,8,177,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_54_IDT',0,8,178,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_55_IDT',0,8,179,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_56_IDT',0,8,180,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_57_IDT',0,8,181,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_58_IDT',0,8,182,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistX_Obj_59_IDT',0,8,183,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_00_IDT',0,8,184,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_01_IDT',0,8,185,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_02_IDT',0,8,186,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_03_IDT',0,8,187,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_04_IDT',0,8,188,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_05_IDT',0,8,189,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_06_IDT',0,8,190,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_07_IDT',0,8,191,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_08_IDT',0,8,192,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_09_IDT',0,8,193,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_10_IDT',0,8,194,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_11_IDT',0,8,195,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_12_IDT',0,8,196,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_13_IDT',0,8,197,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_14_IDT',0,8,198,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_15_IDT',0,8,199,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_16_IDT',0,8,200,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_17_IDT',0,8,201,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_18_IDT',0,8,202,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_19_IDT',0,8,203,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_20_IDT',0,8,204,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_21_IDT',0,8,205,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_22_IDT',0,8,206,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_23_IDT',0,8,207,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_24_IDT',0,8,208,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_25_IDT',0,8,209,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_26_IDT',0,8,210,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_27_IDT',0,8,211,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_28_IDT',0,8,212,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_29_IDT',0,8,213,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_30_IDT',0,8,214,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_31_IDT',0,8,215,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_32_IDT',0,8,216,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_33_IDT',0,8,217,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_34_IDT',0,8,218,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_35_IDT',0,8,219,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_36_IDT',0,8,220,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_37_IDT',0,8,221,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_38_IDT',0,8,222,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_39_IDT',0,8,223,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_40_IDT',0,8,224,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_41_IDT',0,8,225,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_42_IDT',0,8,226,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_43_IDT',0,8,227,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_44_IDT',0,8,228,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_45_IDT',0,8,229,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_46_IDT',0,8,230,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_47_IDT',0,8,231,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_48_IDT',0,8,232,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_49_IDT',0,8,233,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_50_IDT',0,8,234,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_51_IDT',0,8,235,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_52_IDT',0,8,236,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_53_IDT',0,8,237,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_54_IDT',0,8,238,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_55_IDT',0,8,239,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_56_IDT',0,8,240,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_57_IDT',0,8,241,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_58_IDT',0,8,242,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistYStd_Obj_59_IDT',0,8,243,11,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DistY_Obj_00_IDT',0,8,244,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_01_IDT',0,8,245,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_02_IDT',0,8,246,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_03_IDT',0,8,247,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_04_IDT',0,8,248,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_05_IDT',0,8,249,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_06_IDT',0,8,250,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_07_IDT',0,8,251,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_08_IDT',0,8,252,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_09_IDT',0,8,253,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_10_IDT',0,8,254,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_11_IDT',0,8,255,11,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_12_IDT',0,8,128,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_13_IDT',0,8,129,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_14_IDT',0,8,130,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_15_IDT',0,8,131,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_16_IDT',0,8,132,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_17_IDT',0,8,133,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_18_IDT',0,8,134,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_19_IDT',0,8,135,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_20_IDT',0,8,136,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_21_IDT',0,8,137,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_22_IDT',0,8,138,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_23_IDT',0,8,139,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_24_IDT',0,8,140,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_25_IDT',0,8,141,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_26_IDT',0,8,142,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_27_IDT',0,8,143,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_28_IDT',0,8,144,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_29_IDT',0,8,145,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_30_IDT',0,8,146,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_31_IDT',0,8,147,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_32_IDT',0,8,148,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_33_IDT',0,8,149,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_34_IDT',0,8,150,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_35_IDT',0,8,151,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_36_IDT',0,8,152,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_37_IDT',0,8,153,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_38_IDT',0,8,154,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_39_IDT',0,8,155,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_40_IDT',0,8,156,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_41_IDT',0,8,157,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_42_IDT',0,8,158,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_43_IDT',0,8,159,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_44_IDT',0,8,160,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_45_IDT',0,8,161,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_46_IDT',0,8,162,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_47_IDT',0,8,163,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_48_IDT',0,8,164,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_49_IDT',0,8,165,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_50_IDT',0,8,166,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_51_IDT',0,8,167,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_52_IDT',0,8,168,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_53_IDT',0,8,169,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_54_IDT',0,8,170,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_55_IDT',0,8,171,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_56_IDT',0,8,172,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_57_IDT',0,8,173,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_58_IDT',0,8,174,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DistY_Obj_59_IDT',0,8,175,12,16
	.word	285
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_00_IDT',0,8,176,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_01_IDT',0,8,177,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_02_IDT',0,8,178,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_03_IDT',0,8,179,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_04_IDT',0,8,180,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_05_IDT',0,8,181,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_06_IDT',0,8,182,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_07_IDT',0,8,183,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_08_IDT',0,8,184,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_09_IDT',0,8,185,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_10_IDT',0,8,186,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_11_IDT',0,8,187,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_12_IDT',0,8,188,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_13_IDT',0,8,189,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_14_IDT',0,8,190,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_15_IDT',0,8,191,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_16_IDT',0,8,192,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_17_IDT',0,8,193,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_18_IDT',0,8,194,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_19_IDT',0,8,195,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_20_IDT',0,8,196,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_21_IDT',0,8,197,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_22_IDT',0,8,198,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_23_IDT',0,8,199,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_24_IDT',0,8,200,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_25_IDT',0,8,201,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_26_IDT',0,8,202,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_27_IDT',0,8,203,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_28_IDT',0,8,204,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_29_IDT',0,8,205,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_30_IDT',0,8,206,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_31_IDT',0,8,207,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_32_IDT',0,8,208,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_33_IDT',0,8,209,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_34_IDT',0,8,210,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_35_IDT',0,8,211,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_36_IDT',0,8,212,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_37_IDT',0,8,213,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_38_IDT',0,8,214,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_39_IDT',0,8,215,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_40_IDT',0,8,216,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_41_IDT',0,8,217,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_42_IDT',0,8,218,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_43_IDT',0,8,219,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_44_IDT',0,8,220,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_45_IDT',0,8,221,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_46_IDT',0,8,222,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_47_IDT',0,8,223,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_48_IDT',0,8,224,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_49_IDT',0,8,225,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_50_IDT',0,8,226,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_51_IDT',0,8,227,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_52_IDT',0,8,228,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_53_IDT',0,8,229,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_54_IDT',0,8,230,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_55_IDT',0,8,231,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_56_IDT',0,8,232,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_57_IDT',0,8,233,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_58_IDT',0,8,234,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynConf_Obj_59_IDT',0,8,235,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_00_IDT',0,8,236,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_01_IDT',0,8,237,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_02_IDT',0,8,238,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_03_IDT',0,8,239,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_04_IDT',0,8,240,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_05_IDT',0,8,241,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_06_IDT',0,8,242,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_07_IDT',0,8,243,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_08_IDT',0,8,244,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_09_IDT',0,8,245,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_10_IDT',0,8,246,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_11_IDT',0,8,247,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_12_IDT',0,8,248,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_13_IDT',0,8,249,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_14_IDT',0,8,250,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_15_IDT',0,8,251,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_16_IDT',0,8,252,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_17_IDT',0,8,253,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_18_IDT',0,8,254,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_19_IDT',0,8,255,12,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_20_IDT',0,8,128,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_21_IDT',0,8,129,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_22_IDT',0,8,130,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_23_IDT',0,8,131,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_24_IDT',0,8,132,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_25_IDT',0,8,133,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_26_IDT',0,8,134,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_27_IDT',0,8,135,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_28_IDT',0,8,136,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_29_IDT',0,8,137,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_30_IDT',0,8,138,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_31_IDT',0,8,139,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_32_IDT',0,8,140,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_33_IDT',0,8,141,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_34_IDT',0,8,142,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_35_IDT',0,8,143,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_36_IDT',0,8,144,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_37_IDT',0,8,145,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_38_IDT',0,8,146,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_39_IDT',0,8,147,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_40_IDT',0,8,148,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_41_IDT',0,8,149,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_42_IDT',0,8,150,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_43_IDT',0,8,151,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_44_IDT',0,8,152,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_45_IDT',0,8,153,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_46_IDT',0,8,154,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_47_IDT',0,8,155,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_48_IDT',0,8,156,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_49_IDT',0,8,157,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_50_IDT',0,8,158,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_51_IDT',0,8,159,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_52_IDT',0,8,160,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_53_IDT',0,8,161,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_54_IDT',0,8,162,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_55_IDT',0,8,163,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_56_IDT',0,8,164,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_57_IDT',0,8,165,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_58_IDT',0,8,166,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_DynProp_Obj_59_IDT',0,8,167,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_EgoAcceleration_IDT',0,8,168,13,16
	.word	285
	.byte	18
	.byte	'ARS_OD_EgoCurvature_IDT',0,8,169,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_EgoVelocityStd_IDT',0,8,170,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_EgoVelocity_IDT',0,8,171,13,16
	.word	285
	.byte	18
	.byte	'ARS_OD_EgoYawRate_IDT',0,8,172,13,16
	.word	285
	.byte	18
	.byte	'ARS_OD_ExtendedCycleFlag_IDT',0,8,173,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_00_IDT',0,8,174,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_01_IDT',0,8,175,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_02_IDT',0,8,176,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_03_IDT',0,8,177,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_04_IDT',0,8,178,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_05_IDT',0,8,179,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_06_IDT',0,8,180,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_07_IDT',0,8,181,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_08_IDT',0,8,182,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_09_IDT',0,8,183,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_10_IDT',0,8,184,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_11_IDT',0,8,185,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_12_IDT',0,8,186,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_13_IDT',0,8,187,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_14_IDT',0,8,188,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_15_IDT',0,8,189,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_16_IDT',0,8,190,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_17_IDT',0,8,191,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_18_IDT',0,8,192,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_19_IDT',0,8,193,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_20_IDT',0,8,194,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_21_IDT',0,8,195,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_22_IDT',0,8,196,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_23_IDT',0,8,197,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_24_IDT',0,8,198,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_25_IDT',0,8,199,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_26_IDT',0,8,200,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_27_IDT',0,8,201,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_28_IDT',0,8,202,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_29_IDT',0,8,203,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_30_IDT',0,8,204,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_31_IDT',0,8,205,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_32_IDT',0,8,206,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_33_IDT',0,8,207,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_34_IDT',0,8,208,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_35_IDT',0,8,209,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_36_IDT',0,8,210,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_37_IDT',0,8,211,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_38_IDT',0,8,212,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_39_IDT',0,8,213,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_40_IDT',0,8,214,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_41_IDT',0,8,215,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_42_IDT',0,8,216,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_43_IDT',0,8,217,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_44_IDT',0,8,218,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_45_IDT',0,8,219,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_46_IDT',0,8,220,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_47_IDT',0,8,221,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_48_IDT',0,8,222,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_49_IDT',0,8,223,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_50_IDT',0,8,224,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_51_IDT',0,8,225,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_52_IDT',0,8,226,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_53_IDT',0,8,227,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_54_IDT',0,8,228,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_55_IDT',0,8,229,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_56_IDT',0,8,230,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_57_IDT',0,8,231,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_58_IDT',0,8,232,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ID_59_IDT',0,8,233,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Latency_IDT',0,8,234,13,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Length_Obj_00_IDT',0,8,235,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_01_IDT',0,8,236,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_02_IDT',0,8,237,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_03_IDT',0,8,238,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_04_IDT',0,8,239,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_05_IDT',0,8,240,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_06_IDT',0,8,241,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_07_IDT',0,8,242,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_08_IDT',0,8,243,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_09_IDT',0,8,244,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_10_IDT',0,8,245,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_11_IDT',0,8,246,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_12_IDT',0,8,247,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_13_IDT',0,8,248,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_14_IDT',0,8,249,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_15_IDT',0,8,250,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_16_IDT',0,8,251,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_17_IDT',0,8,252,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_18_IDT',0,8,253,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_19_IDT',0,8,254,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_20_IDT',0,8,255,13,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_21_IDT',0,8,128,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_22_IDT',0,8,129,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_23_IDT',0,8,130,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_24_IDT',0,8,131,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_25_IDT',0,8,132,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_26_IDT',0,8,133,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_27_IDT',0,8,134,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_28_IDT',0,8,135,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_29_IDT',0,8,136,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_30_IDT',0,8,137,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_31_IDT',0,8,138,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_32_IDT',0,8,139,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_33_IDT',0,8,140,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_34_IDT',0,8,141,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_35_IDT',0,8,142,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_36_IDT',0,8,143,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_37_IDT',0,8,144,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_38_IDT',0,8,145,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_39_IDT',0,8,146,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_40_IDT',0,8,147,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_41_IDT',0,8,148,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_42_IDT',0,8,149,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_43_IDT',0,8,150,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_44_IDT',0,8,151,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_45_IDT',0,8,152,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_46_IDT',0,8,153,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_47_IDT',0,8,154,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_48_IDT',0,8,155,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_49_IDT',0,8,156,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_50_IDT',0,8,157,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_51_IDT',0,8,158,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_52_IDT',0,8,159,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_53_IDT',0,8,160,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_54_IDT',0,8,161,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_55_IDT',0,8,162,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_56_IDT',0,8,163,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_57_IDT',0,8,164,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_58_IDT',0,8,165,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Length_Obj_59_IDT',0,8,166,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_00_IDT',0,8,167,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_01_IDT',0,8,168,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_02_IDT',0,8,169,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_03_IDT',0,8,170,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_04_IDT',0,8,171,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_05_IDT',0,8,172,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_06_IDT',0,8,173,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_07_IDT',0,8,174,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_08_IDT',0,8,175,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_09_IDT',0,8,176,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_10_IDT',0,8,177,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_11_IDT',0,8,178,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_12_IDT',0,8,179,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_13_IDT',0,8,180,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_14_IDT',0,8,181,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_15_IDT',0,8,182,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_16_IDT',0,8,183,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_17_IDT',0,8,184,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_18_IDT',0,8,185,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_19_IDT',0,8,186,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_20_IDT',0,8,187,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_21_IDT',0,8,188,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_22_IDT',0,8,189,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_23_IDT',0,8,190,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_24_IDT',0,8,191,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_25_IDT',0,8,192,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_26_IDT',0,8,193,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_27_IDT',0,8,194,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_28_IDT',0,8,195,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_29_IDT',0,8,196,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_30_IDT',0,8,197,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_31_IDT',0,8,198,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_32_IDT',0,8,199,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_33_IDT',0,8,200,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_34_IDT',0,8,201,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_35_IDT',0,8,202,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_36_IDT',0,8,203,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_37_IDT',0,8,204,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_38_IDT',0,8,205,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_39_IDT',0,8,206,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_40_IDT',0,8,207,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_41_IDT',0,8,208,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_42_IDT',0,8,209,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_43_IDT',0,8,210,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_44_IDT',0,8,211,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_45_IDT',0,8,212,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_46_IDT',0,8,213,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_47_IDT',0,8,214,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_48_IDT',0,8,215,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_49_IDT',0,8,216,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_50_IDT',0,8,217,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_51_IDT',0,8,218,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_52_IDT',0,8,219,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_53_IDT',0,8,220,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_54_IDT',0,8,221,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_55_IDT',0,8,222,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_56_IDT',0,8,223,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_57_IDT',0,8,224,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_58_IDT',0,8,225,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_LifeCycle_Obj_59_IDT',0,8,226,14,16
	.word	285
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_00_IDT',0,8,227,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_01_IDT',0,8,228,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_02_IDT',0,8,229,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_03_IDT',0,8,230,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_04_IDT',0,8,231,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_05_IDT',0,8,232,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_06_IDT',0,8,233,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_07_IDT',0,8,234,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_08_IDT',0,8,235,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_09_IDT',0,8,236,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_10_IDT',0,8,237,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_11_IDT',0,8,238,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_12_IDT',0,8,239,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_13_IDT',0,8,240,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_14_IDT',0,8,241,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_15_IDT',0,8,242,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_16_IDT',0,8,243,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_17_IDT',0,8,244,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_18_IDT',0,8,245,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_19_IDT',0,8,246,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_20_IDT',0,8,247,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_21_IDT',0,8,248,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_22_IDT',0,8,249,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_23_IDT',0,8,250,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_24_IDT',0,8,251,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_25_IDT',0,8,252,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_26_IDT',0,8,253,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_27_IDT',0,8,254,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_28_IDT',0,8,255,14,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_29_IDT',0,8,128,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_30_IDT',0,8,129,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_31_IDT',0,8,130,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_32_IDT',0,8,131,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_33_IDT',0,8,132,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_34_IDT',0,8,133,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_35_IDT',0,8,134,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_36_IDT',0,8,135,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_37_IDT',0,8,136,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_38_IDT',0,8,137,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_39_IDT',0,8,138,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_40_IDT',0,8,139,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_41_IDT',0,8,140,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_42_IDT',0,8,141,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_43_IDT',0,8,142,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_44_IDT',0,8,143,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_45_IDT',0,8,144,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_46_IDT',0,8,145,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_47_IDT',0,8,146,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_48_IDT',0,8,147,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_49_IDT',0,8,148,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_50_IDT',0,8,149,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_51_IDT',0,8,150,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_52_IDT',0,8,151,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_53_IDT',0,8,152,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_54_IDT',0,8,153,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_55_IDT',0,8,154,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_56_IDT',0,8,155,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_57_IDT',0,8,156,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_58_IDT',0,8,157,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MaintenanceState_Obj_59_IDT',0,8,158,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MeasCounter_IDT',0,8,159,15,16
	.word	285
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_00_IDT',0,8,160,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_01_IDT',0,8,161,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_02_IDT',0,8,162,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_03_IDT',0,8,163,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_04_IDT',0,8,164,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_05_IDT',0,8,165,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_06_IDT',0,8,166,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_07_IDT',0,8,167,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_08_IDT',0,8,168,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_09_IDT',0,8,169,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_10_IDT',0,8,170,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_11_IDT',0,8,171,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_12_IDT',0,8,172,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_13_IDT',0,8,173,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_14_IDT',0,8,174,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_15_IDT',0,8,175,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_16_IDT',0,8,176,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_17_IDT',0,8,177,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_18_IDT',0,8,178,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_19_IDT',0,8,179,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_20_IDT',0,8,180,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_21_IDT',0,8,181,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_22_IDT',0,8,182,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_23_IDT',0,8,183,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_24_IDT',0,8,184,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_25_IDT',0,8,185,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_26_IDT',0,8,186,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_27_IDT',0,8,187,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_28_IDT',0,8,188,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_29_IDT',0,8,189,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_30_IDT',0,8,190,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_31_IDT',0,8,191,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_32_IDT',0,8,192,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_33_IDT',0,8,193,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_34_IDT',0,8,194,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_35_IDT',0,8,195,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_36_IDT',0,8,196,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_37_IDT',0,8,197,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_38_IDT',0,8,198,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_39_IDT',0,8,199,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_40_IDT',0,8,200,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_41_IDT',0,8,201,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_42_IDT',0,8,202,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_43_IDT',0,8,203,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_44_IDT',0,8,204,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_45_IDT',0,8,205,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_46_IDT',0,8,206,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_47_IDT',0,8,207,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_48_IDT',0,8,208,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_49_IDT',0,8,209,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_50_IDT',0,8,210,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_51_IDT',0,8,211,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_52_IDT',0,8,212,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_53_IDT',0,8,213,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_54_IDT',0,8,214,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_55_IDT',0,8,215,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_56_IDT',0,8,216,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_57_IDT',0,8,217,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_58_IDT',0,8,218,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MicroDopplerFlag_59_IDT',0,8,219,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_00_IDT',0,8,220,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_01_IDT',0,8,221,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_02_IDT',0,8,222,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_03_IDT',0,8,223,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_04_IDT',0,8,224,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_05_IDT',0,8,225,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_06_IDT',0,8,226,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_07_IDT',0,8,227,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_08_IDT',0,8,228,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_09_IDT',0,8,229,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_10_IDT',0,8,230,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_11_IDT',0,8,231,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_12_IDT',0,8,232,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_13_IDT',0,8,233,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_14_IDT',0,8,234,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_15_IDT',0,8,235,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_16_IDT',0,8,236,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_17_IDT',0,8,237,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_18_IDT',0,8,238,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_19_IDT',0,8,239,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_20_IDT',0,8,240,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_21_IDT',0,8,241,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_22_IDT',0,8,242,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_23_IDT',0,8,243,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_24_IDT',0,8,244,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_25_IDT',0,8,245,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_26_IDT',0,8,246,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_27_IDT',0,8,247,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_28_IDT',0,8,248,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_29_IDT',0,8,249,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_30_IDT',0,8,250,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_31_IDT',0,8,251,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_32_IDT',0,8,252,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_33_IDT',0,8,253,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_34_IDT',0,8,254,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_35_IDT',0,8,255,15,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_36_IDT',0,8,128,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_37_IDT',0,8,129,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_38_IDT',0,8,130,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_39_IDT',0,8,131,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_40_IDT',0,8,132,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_41_IDT',0,8,133,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_42_IDT',0,8,134,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_43_IDT',0,8,135,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_44_IDT',0,8,136,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_45_IDT',0,8,137,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_46_IDT',0,8,138,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_47_IDT',0,8,139,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_48_IDT',0,8,140,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_49_IDT',0,8,141,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_50_IDT',0,8,142,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_51_IDT',0,8,143,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_52_IDT',0,8,144,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_53_IDT',0,8,145,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_54_IDT',0,8,146,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_55_IDT',0,8,147,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_56_IDT',0,8,148,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_57_IDT',0,8,149,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_58_IDT',0,8,150,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MirrorProb_Obj_59_IDT',0,8,151,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Header_IDT',0,8,152,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_00_01_IDT',0,8,153,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_02_03_IDT',0,8,154,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_04_05_IDT',0,8,155,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_06_07_IDT',0,8,156,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_08_09_IDT',0,8,157,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_10_11_IDT',0,8,158,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_12_13_IDT',0,8,159,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_14_15_IDT',0,8,160,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_16_17_IDT',0,8,161,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_18_19_IDT',0,8,162,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_20_21_IDT',0,8,163,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_22_23_IDT',0,8,164,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_24_25_IDT',0,8,165,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_26_27_IDT',0,8,166,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_28_29_IDT',0,8,167,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_30_31_IDT',0,8,168,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_32_33_IDT',0,8,169,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_34_35_IDT',0,8,170,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_36_37_IDT',0,8,171,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_38_39_IDT',0,8,172,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_40_41_IDT',0,8,173,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_42_43_IDT',0,8,174,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_44_45_IDT',0,8,175,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_46_47_IDT',0,8,176,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_48_49_IDT',0,8,177,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_50_51_IDT',0,8,178,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_52_53_IDT',0,8,179,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_54_55_IDT',0,8,180,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_56_57_IDT',0,8,181,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_MsgCounter_Obj_58_59_IDT',0,8,182,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_NumOfObjects_IDT',0,8,183,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_00_IDT',0,8,184,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_01_IDT',0,8,185,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_02_IDT',0,8,186,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_03_IDT',0,8,187,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_04_IDT',0,8,188,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_05_IDT',0,8,189,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_06_IDT',0,8,190,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_07_IDT',0,8,191,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_08_IDT',0,8,192,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_09_IDT',0,8,193,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_10_IDT',0,8,194,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_11_IDT',0,8,195,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_12_IDT',0,8,196,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_13_IDT',0,8,197,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_14_IDT',0,8,198,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_15_IDT',0,8,199,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_16_IDT',0,8,200,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_17_IDT',0,8,201,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_18_IDT',0,8,202,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_19_IDT',0,8,203,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_20_IDT',0,8,204,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_21_IDT',0,8,205,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_22_IDT',0,8,206,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_23_IDT',0,8,207,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_24_IDT',0,8,208,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_25_IDT',0,8,209,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_26_IDT',0,8,210,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_27_IDT',0,8,211,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_28_IDT',0,8,212,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_29_IDT',0,8,213,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_30_IDT',0,8,214,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_31_IDT',0,8,215,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_32_IDT',0,8,216,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_33_IDT',0,8,217,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_34_IDT',0,8,218,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_35_IDT',0,8,219,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_36_IDT',0,8,220,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_37_IDT',0,8,221,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_38_IDT',0,8,222,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_39_IDT',0,8,223,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_40_IDT',0,8,224,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_41_IDT',0,8,225,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_42_IDT',0,8,226,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_43_IDT',0,8,227,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_44_IDT',0,8,228,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_45_IDT',0,8,229,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_46_IDT',0,8,230,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_47_IDT',0,8,231,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_48_IDT',0,8,232,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_49_IDT',0,8,233,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_50_IDT',0,8,234,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_51_IDT',0,8,235,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_52_IDT',0,8,236,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_53_IDT',0,8,237,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_54_IDT',0,8,238,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_55_IDT',0,8,239,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_56_IDT',0,8,240,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_57_IDT',0,8,241,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_58_IDT',0,8,242,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ObstacleProb_Obj_59_IDT',0,8,243,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_00_IDT',0,8,244,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_01_IDT',0,8,245,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_02_IDT',0,8,246,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_03_IDT',0,8,247,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_04_IDT',0,8,248,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_05_IDT',0,8,249,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_06_IDT',0,8,250,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_07_IDT',0,8,251,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_08_IDT',0,8,252,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_09_IDT',0,8,253,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_10_IDT',0,8,254,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_11_IDT',0,8,255,16,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_12_IDT',0,8,128,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_13_IDT',0,8,129,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_14_IDT',0,8,130,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_15_IDT',0,8,131,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_16_IDT',0,8,132,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_17_IDT',0,8,133,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_18_IDT',0,8,134,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_19_IDT',0,8,135,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_20_IDT',0,8,136,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_21_IDT',0,8,137,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_22_IDT',0,8,138,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_23_IDT',0,8,139,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_24_IDT',0,8,140,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_25_IDT',0,8,141,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_26_IDT',0,8,142,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_27_IDT',0,8,143,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_28_IDT',0,8,144,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_29_IDT',0,8,145,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_30_IDT',0,8,146,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_31_IDT',0,8,147,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_32_IDT',0,8,148,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_33_IDT',0,8,149,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_34_IDT',0,8,150,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_35_IDT',0,8,151,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_36_IDT',0,8,152,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_37_IDT',0,8,153,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_38_IDT',0,8,154,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_39_IDT',0,8,155,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_40_IDT',0,8,156,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_41_IDT',0,8,157,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_42_IDT',0,8,158,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_43_IDT',0,8,159,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_44_IDT',0,8,160,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_45_IDT',0,8,161,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_46_IDT',0,8,162,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_47_IDT',0,8,163,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_48_IDT',0,8,164,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_49_IDT',0,8,165,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_50_IDT',0,8,166,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_51_IDT',0,8,167,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_52_IDT',0,8,168,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_53_IDT',0,8,169,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_54_IDT',0,8,170,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_55_IDT',0,8,171,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_56_IDT',0,8,172,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_57_IDT',0,8,173,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_58_IDT',0,8,174,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_OrientationStd_Obj_59_IDT',0,8,175,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_00_IDT',0,8,176,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_01_IDT',0,8,177,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_02_IDT',0,8,178,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_03_IDT',0,8,179,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_04_IDT',0,8,180,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_05_IDT',0,8,181,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_06_IDT',0,8,182,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_07_IDT',0,8,183,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_08_IDT',0,8,184,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_09_IDT',0,8,185,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_10_IDT',0,8,186,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_11_IDT',0,8,187,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_12_IDT',0,8,188,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_13_IDT',0,8,189,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_14_IDT',0,8,190,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_15_IDT',0,8,191,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_16_IDT',0,8,192,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_17_IDT',0,8,193,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_18_IDT',0,8,194,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_19_IDT',0,8,195,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_20_IDT',0,8,196,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_21_IDT',0,8,197,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_22_IDT',0,8,198,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_23_IDT',0,8,199,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_24_IDT',0,8,200,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_25_IDT',0,8,201,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_26_IDT',0,8,202,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_27_IDT',0,8,203,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_28_IDT',0,8,204,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_29_IDT',0,8,205,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_30_IDT',0,8,206,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_31_IDT',0,8,207,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_32_IDT',0,8,208,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_33_IDT',0,8,209,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_34_IDT',0,8,210,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_35_IDT',0,8,211,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_36_IDT',0,8,212,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_37_IDT',0,8,213,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_38_IDT',0,8,214,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_39_IDT',0,8,215,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_40_IDT',0,8,216,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_41_IDT',0,8,217,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_42_IDT',0,8,218,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_43_IDT',0,8,219,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_44_IDT',0,8,220,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_45_IDT',0,8,221,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_46_IDT',0,8,222,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_47_IDT',0,8,223,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_48_IDT',0,8,224,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_49_IDT',0,8,225,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_50_IDT',0,8,226,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_51_IDT',0,8,227,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_52_IDT',0,8,228,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_53_IDT',0,8,229,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_54_IDT',0,8,230,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_55_IDT',0,8,231,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_56_IDT',0,8,232,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_57_IDT',0,8,233,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_58_IDT',0,8,234,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Orientation_Obj_59_IDT',0,8,235,17,16
	.word	285
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_00_IDT',0,8,236,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_01_IDT',0,8,237,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_02_IDT',0,8,238,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_03_IDT',0,8,239,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_04_IDT',0,8,240,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_05_IDT',0,8,241,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_06_IDT',0,8,242,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_07_IDT',0,8,243,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_08_IDT',0,8,244,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_09_IDT',0,8,245,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_10_IDT',0,8,246,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_11_IDT',0,8,247,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_12_IDT',0,8,248,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_13_IDT',0,8,249,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_14_IDT',0,8,250,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_15_IDT',0,8,251,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_16_IDT',0,8,252,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_17_IDT',0,8,253,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_18_IDT',0,8,254,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_19_IDT',0,8,255,17,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_20_IDT',0,8,128,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_21_IDT',0,8,129,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_22_IDT',0,8,130,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_23_IDT',0,8,131,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_24_IDT',0,8,132,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_25_IDT',0,8,133,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_26_IDT',0,8,134,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_27_IDT',0,8,135,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_28_IDT',0,8,136,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_29_IDT',0,8,137,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_30_IDT',0,8,138,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_31_IDT',0,8,139,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_32_IDT',0,8,140,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_33_IDT',0,8,141,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_34_IDT',0,8,142,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_35_IDT',0,8,143,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_36_IDT',0,8,144,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_37_IDT',0,8,145,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_38_IDT',0,8,146,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_39_IDT',0,8,147,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_40_IDT',0,8,148,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_41_IDT',0,8,149,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_42_IDT',0,8,150,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_43_IDT',0,8,151,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_44_IDT',0,8,152,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_45_IDT',0,8,153,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_46_IDT',0,8,154,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_47_IDT',0,8,155,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_48_IDT',0,8,156,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_49_IDT',0,8,157,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_50_IDT',0,8,158,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_51_IDT',0,8,159,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_52_IDT',0,8,160,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_53_IDT',0,8,161,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_54_IDT',0,8,162,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_55_IDT',0,8,163,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_56_IDT',0,8,164,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_57_IDT',0,8,165,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_58_IDT',0,8,166,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_ProbOfExist_Obj_59_IDT',0,8,167,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RCS_Obj_00_IDT',0,8,168,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_01_IDT',0,8,169,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_02_IDT',0,8,170,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_03_IDT',0,8,171,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_04_IDT',0,8,172,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_05_IDT',0,8,173,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_06_IDT',0,8,174,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_07_IDT',0,8,175,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_08_IDT',0,8,176,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_09_IDT',0,8,177,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_10_IDT',0,8,178,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_11_IDT',0,8,179,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_12_IDT',0,8,180,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_13_IDT',0,8,181,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_14_IDT',0,8,182,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_15_IDT',0,8,183,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_16_IDT',0,8,184,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_17_IDT',0,8,185,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_18_IDT',0,8,186,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_19_IDT',0,8,187,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_20_IDT',0,8,188,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_21_IDT',0,8,189,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_22_IDT',0,8,190,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_23_IDT',0,8,191,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_24_IDT',0,8,192,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_25_IDT',0,8,193,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_26_IDT',0,8,194,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_27_IDT',0,8,195,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_28_IDT',0,8,196,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_29_IDT',0,8,197,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_30_IDT',0,8,198,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_31_IDT',0,8,199,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_32_IDT',0,8,200,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_33_IDT',0,8,201,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_34_IDT',0,8,202,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_35_IDT',0,8,203,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_36_IDT',0,8,204,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_37_IDT',0,8,205,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_38_IDT',0,8,206,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_39_IDT',0,8,207,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_40_IDT',0,8,208,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_41_IDT',0,8,209,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_42_IDT',0,8,210,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_43_IDT',0,8,211,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_44_IDT',0,8,212,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_45_IDT',0,8,213,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_46_IDT',0,8,214,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_47_IDT',0,8,215,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_48_IDT',0,8,216,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_49_IDT',0,8,217,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_50_IDT',0,8,218,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_51_IDT',0,8,219,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_52_IDT',0,8,220,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_53_IDT',0,8,221,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_54_IDT',0,8,222,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_55_IDT',0,8,223,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_56_IDT',0,8,224,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_57_IDT',0,8,225,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_58_IDT',0,8,226,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RCS_Obj_59_IDT',0,8,227,18,16
	.word	285
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_00_IDT',0,8,228,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_01_IDT',0,8,229,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_02_IDT',0,8,230,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_03_IDT',0,8,231,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_04_IDT',0,8,232,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_05_IDT',0,8,233,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_06_IDT',0,8,234,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_07_IDT',0,8,235,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_08_IDT',0,8,236,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_09_IDT',0,8,237,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_10_IDT',0,8,238,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_11_IDT',0,8,239,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_12_IDT',0,8,240,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_13_IDT',0,8,241,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_14_IDT',0,8,242,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_15_IDT',0,8,243,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_16_IDT',0,8,244,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_17_IDT',0,8,245,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_18_IDT',0,8,246,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_19_IDT',0,8,247,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_20_IDT',0,8,248,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_21_IDT',0,8,249,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_22_IDT',0,8,250,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_23_IDT',0,8,251,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_24_IDT',0,8,252,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_25_IDT',0,8,253,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_26_IDT',0,8,254,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_27_IDT',0,8,255,18,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_28_IDT',0,8,128,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_29_IDT',0,8,129,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_30_IDT',0,8,130,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_31_IDT',0,8,131,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_32_IDT',0,8,132,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_33_IDT',0,8,133,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_34_IDT',0,8,134,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_35_IDT',0,8,135,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_36_IDT',0,8,136,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_37_IDT',0,8,137,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_38_IDT',0,8,138,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_39_IDT',0,8,139,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_40_IDT',0,8,140,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_41_IDT',0,8,141,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_42_IDT',0,8,142,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_43_IDT',0,8,143,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_44_IDT',0,8,144,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_45_IDT',0,8,145,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_46_IDT',0,8,146,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_47_IDT',0,8,147,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_48_IDT',0,8,148,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_49_IDT',0,8,149,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_50_IDT',0,8,150,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_51_IDT',0,8,151,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_52_IDT',0,8,152,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_53_IDT',0,8,153,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_54_IDT',0,8,154,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_55_IDT',0,8,155,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_56_IDT',0,8,156,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_57_IDT',0,8,157,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_58_IDT',0,8,158,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_RefPoint_Obj_59_IDT',0,8,159,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_TaskValidFlag_IDT',0,8,160,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_TimeStampGlobNanoSec_IDT',0,8,161,19,16
	.word	483
	.byte	18
	.byte	'ARS_OD_TimeStampGlobSec_IDT',0,8,162,19,16
	.word	483
	.byte	18
	.byte	'ARS_OD_TimeStampLocal_IDT',0,8,163,19,16
	.word	483
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_00_IDT',0,8,164,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_01_IDT',0,8,165,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_02_IDT',0,8,166,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_03_IDT',0,8,167,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_04_IDT',0,8,168,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_05_IDT',0,8,169,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_06_IDT',0,8,170,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_07_IDT',0,8,171,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_08_IDT',0,8,172,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_09_IDT',0,8,173,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_10_IDT',0,8,174,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_11_IDT',0,8,175,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_12_IDT',0,8,176,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_13_IDT',0,8,177,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_14_IDT',0,8,178,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_15_IDT',0,8,179,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_16_IDT',0,8,180,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_17_IDT',0,8,181,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_18_IDT',0,8,182,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_19_IDT',0,8,183,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_20_IDT',0,8,184,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_21_IDT',0,8,185,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_22_IDT',0,8,186,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_23_IDT',0,8,187,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_24_IDT',0,8,188,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_25_IDT',0,8,189,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_26_IDT',0,8,190,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_27_IDT',0,8,191,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_28_IDT',0,8,192,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_29_IDT',0,8,193,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_30_IDT',0,8,194,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_31_IDT',0,8,195,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_32_IDT',0,8,196,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_33_IDT',0,8,197,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_34_IDT',0,8,198,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_35_IDT',0,8,199,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_36_IDT',0,8,200,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_37_IDT',0,8,201,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_38_IDT',0,8,202,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_39_IDT',0,8,203,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_40_IDT',0,8,204,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_41_IDT',0,8,205,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_42_IDT',0,8,206,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_43_IDT',0,8,207,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_44_IDT',0,8,208,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_45_IDT',0,8,209,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_46_IDT',0,8,210,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_47_IDT',0,8,211,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_48_IDT',0,8,212,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_49_IDT',0,8,213,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_50_IDT',0,8,214,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_51_IDT',0,8,215,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_52_IDT',0,8,216,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_53_IDT',0,8,217,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_54_IDT',0,8,218,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_55_IDT',0,8,219,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_56_IDT',0,8,220,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_57_IDT',0,8,221,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_58_IDT',0,8,222,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsXStd_Obj_59_IDT',0,8,223,19,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_00_IDT',0,8,224,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_01_IDT',0,8,225,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_02_IDT',0,8,226,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_03_IDT',0,8,227,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_04_IDT',0,8,228,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_05_IDT',0,8,229,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_06_IDT',0,8,230,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_07_IDT',0,8,231,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_08_IDT',0,8,232,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_09_IDT',0,8,233,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_10_IDT',0,8,234,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_11_IDT',0,8,235,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_12_IDT',0,8,236,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_13_IDT',0,8,237,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_14_IDT',0,8,238,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_15_IDT',0,8,239,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_16_IDT',0,8,240,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_17_IDT',0,8,241,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_18_IDT',0,8,242,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_19_IDT',0,8,243,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_20_IDT',0,8,244,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_21_IDT',0,8,245,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_22_IDT',0,8,246,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_23_IDT',0,8,247,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_24_IDT',0,8,248,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_25_IDT',0,8,249,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_26_IDT',0,8,250,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_27_IDT',0,8,251,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_28_IDT',0,8,252,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_29_IDT',0,8,253,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_30_IDT',0,8,254,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_31_IDT',0,8,255,19,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_32_IDT',0,8,128,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_33_IDT',0,8,129,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_34_IDT',0,8,130,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_35_IDT',0,8,131,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_36_IDT',0,8,132,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_37_IDT',0,8,133,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_38_IDT',0,8,134,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_39_IDT',0,8,135,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_40_IDT',0,8,136,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_41_IDT',0,8,137,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_42_IDT',0,8,138,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_43_IDT',0,8,139,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_44_IDT',0,8,140,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_45_IDT',0,8,141,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_46_IDT',0,8,142,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_47_IDT',0,8,143,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_48_IDT',0,8,144,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_49_IDT',0,8,145,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_50_IDT',0,8,146,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_51_IDT',0,8,147,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_52_IDT',0,8,148,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_53_IDT',0,8,149,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_54_IDT',0,8,150,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_55_IDT',0,8,151,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_56_IDT',0,8,152,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_57_IDT',0,8,153,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_58_IDT',0,8,154,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsX_Obj_59_IDT',0,8,155,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_00_IDT',0,8,156,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_01_IDT',0,8,157,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_02_IDT',0,8,158,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_03_IDT',0,8,159,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_04_IDT',0,8,160,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_05_IDT',0,8,161,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_06_IDT',0,8,162,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_07_IDT',0,8,163,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_08_IDT',0,8,164,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_09_IDT',0,8,165,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_10_IDT',0,8,166,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_11_IDT',0,8,167,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_12_IDT',0,8,168,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_13_IDT',0,8,169,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_14_IDT',0,8,170,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_15_IDT',0,8,171,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_16_IDT',0,8,172,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_17_IDT',0,8,173,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_18_IDT',0,8,174,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_19_IDT',0,8,175,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_20_IDT',0,8,176,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_21_IDT',0,8,177,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_22_IDT',0,8,178,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_23_IDT',0,8,179,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_24_IDT',0,8,180,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_25_IDT',0,8,181,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_26_IDT',0,8,182,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_27_IDT',0,8,183,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_28_IDT',0,8,184,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_29_IDT',0,8,185,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_30_IDT',0,8,186,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_31_IDT',0,8,187,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_32_IDT',0,8,188,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_33_IDT',0,8,189,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_34_IDT',0,8,190,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_35_IDT',0,8,191,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_36_IDT',0,8,192,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_37_IDT',0,8,193,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_38_IDT',0,8,194,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_39_IDT',0,8,195,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_40_IDT',0,8,196,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_41_IDT',0,8,197,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_42_IDT',0,8,198,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_43_IDT',0,8,199,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_44_IDT',0,8,200,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_45_IDT',0,8,201,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_46_IDT',0,8,202,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_47_IDT',0,8,203,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_48_IDT',0,8,204,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_49_IDT',0,8,205,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_50_IDT',0,8,206,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_51_IDT',0,8,207,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_52_IDT',0,8,208,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_53_IDT',0,8,209,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_54_IDT',0,8,210,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_55_IDT',0,8,211,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_56_IDT',0,8,212,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_57_IDT',0,8,213,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_58_IDT',0,8,214,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsYStd_Obj_59_IDT',0,8,215,20,15
	.word	144
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_00_IDT',0,8,216,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_01_IDT',0,8,217,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_02_IDT',0,8,218,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_03_IDT',0,8,219,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_04_IDT',0,8,220,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_05_IDT',0,8,221,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_06_IDT',0,8,222,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_07_IDT',0,8,223,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_08_IDT',0,8,224,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_09_IDT',0,8,225,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_10_IDT',0,8,226,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_11_IDT',0,8,227,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_12_IDT',0,8,228,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_13_IDT',0,8,229,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_14_IDT',0,8,230,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_15_IDT',0,8,231,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_16_IDT',0,8,232,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_17_IDT',0,8,233,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_18_IDT',0,8,234,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_19_IDT',0,8,235,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_20_IDT',0,8,236,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_21_IDT',0,8,237,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_22_IDT',0,8,238,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_23_IDT',0,8,239,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_24_IDT',0,8,240,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_25_IDT',0,8,241,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_26_IDT',0,8,242,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_27_IDT',0,8,243,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_28_IDT',0,8,244,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_29_IDT',0,8,245,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_30_IDT',0,8,246,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_31_IDT',0,8,247,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_32_IDT',0,8,248,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_33_IDT',0,8,249,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_34_IDT',0,8,250,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_35_IDT',0,8,251,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_36_IDT',0,8,252,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_37_IDT',0,8,253,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_38_IDT',0,8,254,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_39_IDT',0,8,255,20,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_40_IDT',0,8,128,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_41_IDT',0,8,129,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_42_IDT',0,8,130,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_43_IDT',0,8,131,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_44_IDT',0,8,132,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_45_IDT',0,8,133,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_46_IDT',0,8,134,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_47_IDT',0,8,135,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_48_IDT',0,8,136,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_49_IDT',0,8,137,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_50_IDT',0,8,138,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_51_IDT',0,8,139,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_52_IDT',0,8,140,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_53_IDT',0,8,141,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_54_IDT',0,8,142,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_55_IDT',0,8,143,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_56_IDT',0,8,144,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_57_IDT',0,8,145,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_58_IDT',0,8,146,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_VabsY_Obj_59_IDT',0,8,147,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_Width_Obj_00_IDT',0,8,148,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_01_IDT',0,8,149,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_02_IDT',0,8,150,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_03_IDT',0,8,151,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_04_IDT',0,8,152,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_05_IDT',0,8,153,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_06_IDT',0,8,154,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_07_IDT',0,8,155,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_08_IDT',0,8,156,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_09_IDT',0,8,157,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_10_IDT',0,8,158,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_11_IDT',0,8,159,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_12_IDT',0,8,160,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_13_IDT',0,8,161,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_14_IDT',0,8,162,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_15_IDT',0,8,163,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_16_IDT',0,8,164,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_17_IDT',0,8,165,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_18_IDT',0,8,166,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_19_IDT',0,8,167,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_20_IDT',0,8,168,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_21_IDT',0,8,169,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_22_IDT',0,8,170,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_23_IDT',0,8,171,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_24_IDT',0,8,172,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_25_IDT',0,8,173,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_26_IDT',0,8,174,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_27_IDT',0,8,175,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_28_IDT',0,8,176,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_29_IDT',0,8,177,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_30_IDT',0,8,178,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_31_IDT',0,8,179,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_32_IDT',0,8,180,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_33_IDT',0,8,181,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_34_IDT',0,8,182,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_35_IDT',0,8,183,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_36_IDT',0,8,184,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_37_IDT',0,8,185,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_38_IDT',0,8,186,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_39_IDT',0,8,187,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_40_IDT',0,8,188,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_41_IDT',0,8,189,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_42_IDT',0,8,190,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_43_IDT',0,8,191,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_44_IDT',0,8,192,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_45_IDT',0,8,193,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_46_IDT',0,8,194,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_47_IDT',0,8,195,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_48_IDT',0,8,196,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_49_IDT',0,8,197,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_50_IDT',0,8,198,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_51_IDT',0,8,199,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_52_IDT',0,8,200,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_53_IDT',0,8,201,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_54_IDT',0,8,202,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_55_IDT',0,8,203,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_56_IDT',0,8,204,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_57_IDT',0,8,205,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_58_IDT',0,8,206,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_Width_Obj_59_IDT',0,8,207,21,15
	.word	144
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_00_IDT',0,8,208,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_01_IDT',0,8,209,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_02_IDT',0,8,210,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_03_IDT',0,8,211,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_04_IDT',0,8,212,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_05_IDT',0,8,213,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_06_IDT',0,8,214,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_07_IDT',0,8,215,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_08_IDT',0,8,216,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_09_IDT',0,8,217,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_10_IDT',0,8,218,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_11_IDT',0,8,219,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_12_IDT',0,8,220,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_13_IDT',0,8,221,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_14_IDT',0,8,222,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_15_IDT',0,8,223,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_16_IDT',0,8,224,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_17_IDT',0,8,225,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_18_IDT',0,8,226,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_19_IDT',0,8,227,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_20_IDT',0,8,228,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_21_IDT',0,8,229,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_22_IDT',0,8,230,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_23_IDT',0,8,231,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_24_IDT',0,8,232,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_25_IDT',0,8,233,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_26_IDT',0,8,234,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_27_IDT',0,8,235,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_28_IDT',0,8,236,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_29_IDT',0,8,237,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_30_IDT',0,8,238,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_31_IDT',0,8,239,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_32_IDT',0,8,240,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_33_IDT',0,8,241,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_34_IDT',0,8,242,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_35_IDT',0,8,243,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_36_IDT',0,8,244,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_37_IDT',0,8,245,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_38_IDT',0,8,246,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_39_IDT',0,8,247,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_40_IDT',0,8,248,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_41_IDT',0,8,249,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_42_IDT',0,8,250,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_43_IDT',0,8,251,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_44_IDT',0,8,252,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_45_IDT',0,8,253,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_46_IDT',0,8,254,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_47_IDT',0,8,255,21,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_48_IDT',0,8,128,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_49_IDT',0,8,129,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_50_IDT',0,8,130,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_51_IDT',0,8,131,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_52_IDT',0,8,132,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_53_IDT',0,8,133,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_54_IDT',0,8,134,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_55_IDT',0,8,135,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_56_IDT',0,8,136,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_57_IDT',0,8,137,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_58_IDT',0,8,138,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbsStd_Obj_59_IDT',0,8,139,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_00_IDT',0,8,140,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_01_IDT',0,8,141,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_02_IDT',0,8,142,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_03_IDT',0,8,143,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_04_IDT',0,8,144,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_05_IDT',0,8,145,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_06_IDT',0,8,146,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_07_IDT',0,8,147,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_08_IDT',0,8,148,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_09_IDT',0,8,149,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_10_IDT',0,8,150,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_11_IDT',0,8,151,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_12_IDT',0,8,152,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_13_IDT',0,8,153,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_14_IDT',0,8,154,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_15_IDT',0,8,155,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_16_IDT',0,8,156,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_17_IDT',0,8,157,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_18_IDT',0,8,158,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_19_IDT',0,8,159,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_20_IDT',0,8,160,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_21_IDT',0,8,161,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_22_IDT',0,8,162,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_23_IDT',0,8,163,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_24_IDT',0,8,164,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_25_IDT',0,8,165,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_26_IDT',0,8,166,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_27_IDT',0,8,167,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_28_IDT',0,8,168,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_29_IDT',0,8,169,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_30_IDT',0,8,170,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_31_IDT',0,8,171,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_32_IDT',0,8,172,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_33_IDT',0,8,173,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_34_IDT',0,8,174,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_35_IDT',0,8,175,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_36_IDT',0,8,176,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_37_IDT',0,8,177,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_38_IDT',0,8,178,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_39_IDT',0,8,179,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_40_IDT',0,8,180,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_41_IDT',0,8,181,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_42_IDT',0,8,182,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_43_IDT',0,8,183,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_44_IDT',0,8,184,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_45_IDT',0,8,185,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_46_IDT',0,8,186,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_47_IDT',0,8,187,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_48_IDT',0,8,188,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_49_IDT',0,8,189,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_50_IDT',0,8,190,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_51_IDT',0,8,191,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_52_IDT',0,8,192,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_53_IDT',0,8,193,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_54_IDT',0,8,194,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_55_IDT',0,8,195,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_56_IDT',0,8,196,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_57_IDT',0,8,197,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_58_IDT',0,8,198,22,16
	.word	285
	.byte	18
	.byte	'ARS_OD_YawRateAbs_Obj_59_IDT',0,8,199,22,16
	.word	285
	.byte	18
	.byte	'ARS_SP_CRC16_Checksum_IDT',0,8,201,22,16
	.word	285
	.byte	18
	.byte	'ARS_SP_ErrStateGroup_1_IDT',0,8,204,22,15
	.word	144
	.byte	18
	.byte	'ARS_SP_ErrStateGroup_2_IDT',0,8,205,22,15
	.word	144
	.byte	18
	.byte	'ARS_SP_ErrStateGroup_3_IDT',0,8,206,22,15
	.word	144
	.byte	18
	.byte	'ARS_SP_MsgCounter_IDT',0,8,208,22,15
	.word	144
	.byte	18
	.byte	'ARS_TSYNC_CRC16_Checksum_IDT',0,8,213,22,16
	.word	285
	.byte	18
	.byte	'ARS_TSYNC_LastTimeLeap_IDT',0,8,214,22,16
	.word	285
	.byte	18
	.byte	'ARS_TSYNC_MaxTimeLeap_IDT',0,8,215,22,16
	.word	285
	.byte	18
	.byte	'ARS_TSYNC_MsgCounter_IDT',0,8,216,22,15
	.word	144
	.byte	18
	.byte	'ARS_TSYNC_TimeStampGlobNSec_IDT',0,8,217,22,16
	.word	483
	.byte	18
	.byte	'ARS_TSYNC_TimeStampGlobSec_IDT',0,8,218,22,16
	.word	483
	.byte	8,8,219,22,9,20,9
	.byte	'distance',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'type',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'width',0
	.word	285
	.byte	2,2,35,4,9
	.byte	'peak',0
	.word	144
	.byte	1,2,35,6,9
	.byte	'counter',0
	.word	144
	.byte	1,2,35,7,9
	.byte	'time_stamp',0
	.word	1202
	.byte	8,2,35,8,9
	.byte	'reserve',0
	.word	144
	.byte	1,2,35,16,0,18
	.byte	'ApaDistT',0,8,228,22,3
	.word	80459
	.byte	8,8,230,22,9,80,9
	.byte	'ARS_OD_ID',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'ARS_OD_DistX_Obj',0
	.word	1346
	.byte	4,2,35,2,9
	.byte	'ARS_OD_DistY_Obj',0
	.word	1346
	.byte	4,2,35,6,9
	.byte	'ARS_OD_VabsX_Obj',0
	.word	1346
	.byte	4,2,35,10,9
	.byte	'ARS_OD_VabsY_Obj',0
	.word	1346
	.byte	4,2,35,14,9
	.byte	'ARS_OD_AabsX_Obj',0
	.word	1346
	.byte	4,2,35,18,9
	.byte	'ARS_OD_AabsY_Obj',0
	.word	1346
	.byte	4,2,35,22,9
	.byte	'ARS_OD_DistXStd_Obj',0
	.word	144
	.byte	1,2,35,26,9
	.byte	'ARS_OD_DistYStd_Obj',0
	.word	144
	.byte	1,2,35,27,9
	.byte	'ARS_OD_VabsXStd_Obj',0
	.word	144
	.byte	1,2,35,28,9
	.byte	'ARS_OD_VabsYStd_Obj',0
	.word	144
	.byte	1,2,35,29,9
	.byte	'ARS_OD_AabsXStd_Obj',0
	.word	144
	.byte	1,2,35,30,9
	.byte	'ARS_OD_AabsYStd_Obj',0
	.word	144
	.byte	1,2,35,31,9
	.byte	'ARS_OD_RCS_Obj',0
	.word	1346
	.byte	4,2,35,32,9
	.byte	'ARS_OD_Length_Obj',0
	.word	1346
	.byte	4,2,35,36,9
	.byte	'ARS_OD_Width_Obj',0
	.word	1346
	.byte	4,2,35,40,9
	.byte	'ARS_OD_Orientation_Obj',0
	.word	1346
	.byte	4,2,35,44,9
	.byte	'ARS_OD_OrientationStd_Obj',0
	.word	1346
	.byte	4,2,35,48,9
	.byte	'ARS_OD_YawRateAbs_Obj',0
	.word	1346
	.byte	4,2,35,52,9
	.byte	'ARS_OD_YawRateAbsStd_Obj',0
	.word	1346
	.byte	4,2,35,56,9
	.byte	'ARS_OD_RefPoint',0
	.word	144
	.byte	1,2,35,60,9
	.byte	'ARS_OD_Classification_Obj',0
	.word	144
	.byte	1,2,35,61,9
	.byte	'ARS_OD_ClassConf_Obj',0
	.word	144
	.byte	1,2,35,62,9
	.byte	'ARS_OD_DynProp_Obj',0
	.word	144
	.byte	1,2,35,63,9
	.byte	'ARS_OD_DynConf_Obj',0
	.word	144
	.byte	1,2,35,64,9
	.byte	'ARS_OD_ProbOfExist_Obj',0
	.word	144
	.byte	1,2,35,65,9
	.byte	'ARS_OD_MirrorProb_Obj',0
	.word	144
	.byte	1,2,35,66,9
	.byte	'ARS_OD_ObstacleProb_Obj',0
	.word	144
	.byte	1,2,35,67,9
	.byte	'ARS_OD_MaintenanceState_Obj',0
	.word	144
	.byte	1,2,35,68,9
	.byte	'ARS_OD_LifeCycle_Obj',0
	.word	285
	.byte	2,2,35,70,9
	.byte	'ARS_OD_MicroDopplerFlag',0
	.word	144
	.byte	1,2,35,72,9
	.byte	'DistHeight_Obj',0
	.word	1346
	.byte	4,2,35,74,0,18
	.byte	'ArsObjectInfo',0,8,136,23,3
	.word	80599
	.byte	19,192,37
	.word	80599
	.byte	20,59,0,18
	.byte	'ArsObjectInfo_60',0,8,138,23,23
	.word	81553
	.byte	8,8,139,23,9,20,9
	.byte	'gear_status',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'gear_enable',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'driver_override',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'can_time',0
	.word	1202
	.byte	8,2,35,4,9
	.byte	'system_time',0
	.word	1202
	.byte	8,2,35,12,0,18
	.byte	'AutoGearInfo',0,8,146,23,3
	.word	81589
	.byte	18
	.byte	'BAS_CtrlActv_IDT',0,8,148,23,15
	.word	144
	.byte	18
	.byte	'BAS_FlgFlt_IDT',0,8,149,23,15
	.word	144
	.byte	18
	.byte	'BCM_AmbeLightZone1Sts_IDT',0,8,151,23,15
	.word	144
	.byte	18
	.byte	'BCM_AmbeLightZone2Sts_IDT',0,8,152,23,15
	.word	144
	.byte	18
	.byte	'BCM_BrakeLightSts_IDT',0,8,154,23,15
	.word	144
	.byte	18
	.byte	'BCM_DayRunningLampSts_IDT',0,8,157,23,15
	.word	144
	.byte	18
	.byte	'BCM_FFogLampSWSts_IDT',0,8,163,23,15
	.word	144
	.byte	18
	.byte	'BCM_Fr_domelampSts_IDT',0,8,168,23,15
	.word	144
	.byte	18
	.byte	'BCM_FrontFogLampLightSts_IDT',0,8,169,23,15
	.word	144
	.byte	18
	.byte	'BCM_HeadLight_adjustSts_IDT',0,8,174,23,15
	.word	144
	.byte	18
	.byte	'BCM_HighBeamSWSts_IDT',0,8,175,23,15
	.word	144
	.byte	18
	.byte	'BCM_HighBeamSts_IDT',0,8,176,23,15
	.word	144
	.byte	18
	.byte	'BCM_LicensePlateLightSts_IDT',0,8,177,23,15
	.word	144
	.byte	18
	.byte	'BCM_LowBeamSWSts_IDT',0,8,178,23,15
	.word	144
	.byte	18
	.byte	'BCM_LowBeamSts_IDT',0,8,179,23,15
	.word	144
	.byte	18
	.byte	'BCM_PosLmpSts_IDT',0,8,180,23,15
	.word	144
	.byte	18
	.byte	'BCM_RFogLampSWSts_IDT',0,8,181,23,15
	.word	144
	.byte	18
	.byte	'BCM_RMarkerLightSts_IDT',0,8,184,23,15
	.word	144
	.byte	18
	.byte	'BCM_RearFogLampLightSts_IDT',0,8,187,23,15
	.word	144
	.byte	18
	.byte	'BCM_ReverseLightSts_IDT',0,8,194,23,15
	.word	144
	.byte	18
	.byte	'BCM_Rr_domelampSts_IDT',0,8,195,23,15
	.word	144
	.byte	18
	.byte	'BCM_STAT_HazardWarn_IDT',0,8,196,23,15
	.word	144
	.byte	18
	.byte	'BCM_STAT_Horn_IDT',0,8,197,23,15
	.word	144
	.byte	18
	.byte	'BCM_STAT_InteriorLight_IDT',0,8,198,23,15
	.word	144
	.byte	18
	.byte	'BCM_STAT_SwLightBrightness_IDT',0,8,199,23,15
	.word	144
	.byte	18
	.byte	'BCM_Tail_MicroSW_IDT',0,8,201,23,15
	.word	144
	.byte	18
	.byte	'BCM_TurnIndicatorSts_IDT',0,8,203,23,15
	.word	144
	.byte	18
	.byte	'BCM_TurnLightSWSts_IDT',0,8,204,23,15
	.word	144
	.byte	18
	.byte	'BCM_TurnLight_FaultSts_IDT',0,8,205,23,15
	.word	144
	.byte	18
	.byte	'BCM_WPC_Off_Req_IDT',0,8,206,23,15
	.word	144
	.byte	8,8,213,23,9,36,9
	.byte	'turn_light_status',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'brake_light_status',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'high_beam',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'low_beam',0
	.word	144
	.byte	1,2,35,3,9
	.byte	'wiper',0
	.word	144
	.byte	1,2,35,4,9
	.byte	'door_driver',0
	.word	144
	.byte	1,2,35,5,9
	.byte	'door_passenger',0
	.word	144
	.byte	1,2,35,6,9
	.byte	'door_left_rear',0
	.word	144
	.byte	1,2,35,7,9
	.byte	'door_right_rear',0
	.word	144
	.byte	1,2,35,8,9
	.byte	'hood',0
	.word	144
	.byte	1,2,35,9,9
	.byte	'trunk',0
	.word	144
	.byte	1,2,35,10,9
	.byte	'passenger_detect',0
	.word	144
	.byte	1,2,35,11,9
	.byte	'driver_seat_belt',0
	.word	144
	.byte	1,2,35,12,9
	.byte	'passenger_seat_belt',0
	.word	144
	.byte	1,2,35,13,9
	.byte	'temperature',0
	.word	1346
	.byte	4,2,35,14,9
	.byte	'can_time',0
	.word	1202
	.byte	8,2,35,20,9
	.byte	'system_time',0
	.word	1202
	.byte	8,2,35,28,0,18
	.byte	'BodyInfo',0,8,232,23,3
	.word	82694
	.byte	8,8,234,23,9,16,9
	.byte	'x',0
	.word	1346
	.byte	4,2,35,0,9
	.byte	'y',0
	.word	1346
	.byte	4,2,35,4,9
	.byte	'width',0
	.word	1346
	.byte	4,2,35,8,9
	.byte	'height',0
	.word	1346
	.byte	4,2,35,12,0,18
	.byte	'BoxRect',0,8,240,23,3
	.word	83090
	.byte	8,8,242,23,9,12,9
	.byte	'brake_enable',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'brake_prefill',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'brake_system_mode',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'brake_command',0
	.word	1346
	.byte	4,2,35,4,9
	.byte	'dec_to_stop_flag',0
	.word	144
	.byte	1,2,35,8,9
	.byte	'brake_control_mode',0
	.word	144
	.byte	1,2,35,9,0,18
	.byte	'BrakeCommand',0,8,250,23,3
	.word	83167
	.byte	8,8,252,23,9,32,9
	.byte	'braking_status',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'brake_pedal_output',0
	.word	1346
	.byte	4,2,35,2,9
	.byte	'master_cylinder_pressure',0
	.word	1346
	.byte	4,2,35,6,9
	.byte	'brake_control_available',0
	.word	144
	.byte	1,2,35,10,9
	.byte	'brake_error',0
	.word	144
	.byte	1,2,35,11,9
	.byte	'brake_enable',0
	.word	144
	.byte	1,2,35,12,9
	.byte	'driver_override',0
	.word	144
	.byte	1,2,35,13,9
	.byte	'abs_enable',0
	.word	144
	.byte	1,2,35,14,9
	.byte	'abs_active',0
	.word	144
	.byte	1,2,35,15,9
	.byte	'can_time',0
	.word	1202
	.byte	8,2,35,16,9
	.byte	'system_time',0
	.word	1202
	.byte	8,2,35,24,0,18
	.byte	'BrakeInfo',0,8,137,24,3
	.word	83345
	.byte	8,8,155,24,9,28,9
	.byte	'calib_status',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'yaw',0
	.word	1346
	.byte	4,2,35,2,9
	.byte	'pitch',0
	.word	1346
	.byte	4,2,35,6,9
	.byte	'roll',0
	.word	1346
	.byte	4,2,35,10,9
	.byte	'camera_x',0
	.word	1346
	.byte	4,2,35,14,9
	.byte	'camera_y',0
	.word	1346
	.byte	4,2,35,18,9
	.byte	'camera_z',0
	.word	1346
	.byte	4,2,35,22,0,18
	.byte	'Camera_Calib_Results',0,8,164,24,3
	.word	83637
	.byte	8,8,166,24,9,4,9
	.byte	'sensor_ID',0
	.word	483
	.byte	4,2,35,0,0,18
	.byte	'Camera_Intrinsic_Params',0,8,169,24,3
	.word	83792
	.byte	8,8,171,24,9,12,9
	.byte	'steer_enable',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'steer_system_mode',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'steer_clear',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'steering_command',0
	.word	1346
	.byte	4,2,35,4,9
	.byte	'steering_speed_command',0
	.word	1346
	.byte	4,2,35,8,0,18
	.byte	'SteerCommand',0,8,178,24,3
	.word	83851
	.byte	8,8,180,24,9,12,9
	.byte	'throttle_enable',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'throttle_ignore',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'throttle_system_mode',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'throttle_command',0
	.word	1346
	.byte	4,2,35,4,9
	.byte	'target_acce',0
	.word	1346
	.byte	4,2,35,8,0,18
	.byte	'ThrottleCommand',0,8,187,24,3
	.word	84008
	.byte	8,8,189,24,9,4,9
	.byte	'gear_enable',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'gear_ignore',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'gear_clear',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'gear_command',0
	.word	144
	.byte	1,2,35,3,0,18
	.byte	'GearCommand',0,8,195,24,3
	.word	84167
	.byte	8,8,197,24,9,2,9
	.byte	'epb_enable',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'epb_command',0
	.word	144
	.byte	1,2,35,1,0,18
	.byte	'EPBCommand',0,8,201,24,3
	.word	84279
	.byte	8,8,231,24,9,32,9
	.byte	'steering_angle',0
	.word	1346
	.byte	4,2,35,0,9
	.byte	'steering_enable',0
	.word	144
	.byte	1,2,35,4,9
	.byte	'steering_column_torque',0
	.word	1346
	.byte	4,2,35,6,9
	.byte	'driver_override',0
	.word	144
	.byte	1,2,35,10,9
	.byte	'steering_control_available',0
	.word	144
	.byte	1,2,35,11,9
	.byte	'steering_angle_speed',0
	.word	1346
	.byte	4,2,35,12,9
	.byte	'can_time',0
	.word	1202
	.byte	8,2,35,16,9
	.byte	'system_time',0
	.word	1202
	.byte	8,2,35,24,0,18
	.byte	'SteeringInfo',0,8,241,24,3
	.word	84347
	.byte	8,8,243,24,9,72,9
	.byte	'wheel_speed_rear_right',0
	.word	1346
	.byte	4,2,35,0,9
	.byte	'wheel_speed_rear_left',0
	.word	1346
	.byte	4,2,35,4,9
	.byte	'wheel_speed_front_right',0
	.word	1346
	.byte	4,2,35,8,9
	.byte	'wheel_speed_front_left',0
	.word	1346
	.byte	4,2,35,12,9
	.byte	'wheel_speed_rear_right_dir',0
	.word	144
	.byte	1,2,35,16,9
	.byte	'wheel_speed_rear_left_dir',0
	.word	144
	.byte	1,2,35,17,9
	.byte	'wheel_speed_front_right_dir',0
	.word	144
	.byte	1,2,35,18,9
	.byte	'wheel_speed_front_left_dir',0
	.word	144
	.byte	1,2,35,19,9
	.byte	'wheel_position_rear_right',0
	.word	1257
	.byte	2,2,35,20,9
	.byte	'wheel_position_rear_left',0
	.word	1257
	.byte	2,2,35,22,9
	.byte	'wheel_position_front_right',0
	.word	1257
	.byte	2,2,35,24,9
	.byte	'wheel_position_front_left',0
	.word	1257
	.byte	2,2,35,26,9
	.byte	'vehicle_speed',0
	.word	1346
	.byte	4,2,35,28,9
	.byte	'vehicle_stand_still',0
	.word	144
	.byte	1,2,35,32,9
	.byte	'longitude_acce',0
	.word	1346
	.byte	4,2,35,34,9
	.byte	'longitude_acce_valid',0
	.word	144
	.byte	1,2,35,38,9
	.byte	'lateral_acce',0
	.word	1346
	.byte	4,2,35,40,9
	.byte	'lateral_acce_valid',0
	.word	144
	.byte	1,2,35,44,9
	.byte	'roll_rate',0
	.word	1346
	.byte	4,2,35,46,9
	.byte	'yaw_rate',0
	.word	1346
	.byte	4,2,35,50,9
	.byte	'can_time',0
	.word	1202
	.byte	8,2,35,56,9
	.byte	'system_time',0
	.word	1202
	.byte	8,2,35,64,0,18
	.byte	'VehicleSpeedInfo',0,8,139,25,3
	.word	84587
	.byte	8,8,141,25,9,32,9
	.byte	'throttle_pedal_output',0
	.word	1346
	.byte	4,2,35,0,9
	.byte	'torque_output_fr',0
	.word	1346
	.byte	4,2,35,4,9
	.byte	'torque_output_rr',0
	.word	1346
	.byte	4,2,35,8,9
	.byte	'throttle_enable',0
	.word	144
	.byte	1,2,35,12,9
	.byte	'driver_override',0
	.word	144
	.byte	1,2,35,13,9
	.byte	'throttle_error',0
	.word	144
	.byte	1,2,35,14,9
	.byte	'throttle_control_available',0
	.word	144
	.byte	1,2,35,15,9
	.byte	'can_time',0
	.word	1202
	.byte	8,2,35,16,9
	.byte	'system_time',0
	.word	1202
	.byte	8,2,35,24,0,18
	.byte	'ThrottleInfo',0,8,152,25,3
	.word	85264
	.byte	8,8,154,25,9,20,9
	.byte	'epb_status',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'driver_override',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'epb_enable',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'can_time',0
	.word	1202
	.byte	8,2,35,4,9
	.byte	'system_time',0
	.word	1202
	.byte	8,2,35,12,0,18
	.byte	'EPBInfo',0,8,161,25,3
	.word	85525
	.byte	8,8,175,25,9,12,9
	.byte	'front_left_pressure',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'front_right_pressure',0
	.word	285
	.byte	2,2,35,2,9
	.byte	'rear_left_pressure',0
	.word	285
	.byte	2,2,35,4,9
	.byte	'rear_right_pressure',0
	.word	285
	.byte	2,2,35,6,9
	.byte	'front_left_pressure_alarm',0
	.word	144
	.byte	1,2,35,8,9
	.byte	'front_right_pressure_alarm',0
	.word	144
	.byte	1,2,35,9,9
	.byte	'rear_left_pressure_alarm',0
	.word	144
	.byte	1,2,35,10,9
	.byte	'rear_right_pressure_alarm',0
	.word	144
	.byte	1,2,35,11,0,18
	.byte	'TirePressureInfo',0,8,185,25,3
	.word	85653
	.byte	8,8,195,25,9,24,9
	.byte	'x',0
	.word	1346
	.byte	4,2,35,0,9
	.byte	'y',0
	.word	1346
	.byte	4,2,35,4,9
	.byte	'class_type',0
	.word	144
	.byte	1,2,35,8,9
	.byte	'edge',0
	.word	144
	.byte	1,2,35,9,9
	.byte	'id',0
	.word	285
	.byte	2,2,35,10,9
	.byte	'vehicle_x',0
	.word	1346
	.byte	4,2,35,12,9
	.byte	'vehicle_y',0
	.word	1346
	.byte	4,2,35,16,9
	.byte	'vehicle_heading',0
	.word	1346
	.byte	4,2,35,20,0,18
	.byte	'Cc_Point2f',0,8,205,25,3
	.word	85942
	.byte	18
	.byte	'CheckSum_0x106_IDT',0,8,207,25,15
	.word	144
	.byte	18
	.byte	'CheckSum_0x109_IDT',0,8,208,25,15
	.word	144
	.byte	18
	.byte	'CheckSum_0x17F_IDT',0,8,209,25,15
	.word	144
	.byte	18
	.byte	'CheckSum_0x3F1_IDT',0,8,210,25,15
	.word	144
	.byte	18
	.byte	'CheckSum_0x3F5_IDT',0,8,211,25,15
	.word	144
	.byte	18
	.byte	'CheckSum_0x3F7_IDT',0,8,212,25,15
	.word	144
	.byte	18
	.byte	'CheckSum_1F8_IDT',0,8,213,25,15
	.word	144
	.byte	18
	.byte	'Checksum_0x132_IDT',0,8,214,25,15
	.word	144
	.byte	18
	.byte	'Checksum_0x17E_IDT',0,8,215,25,15
	.word	144
	.byte	18
	.byte	'Checksum_230_IDT',0,8,217,25,15
	.word	144
	.byte	8,8,237,25,9,20,9
	.byte	'time_stamp',0
	.word	1202
	.byte	8,2,35,0,9
	.byte	'x',0
	.word	1346
	.byte	4,2,35,8,9
	.byte	'y',0
	.word	1346
	.byte	4,2,35,12,9
	.byte	'heading',0
	.word	1346
	.byte	4,2,35,16,0,18
	.byte	'LocationPoint',0,8,243,25,3
	.word	86376
	.byte	19,160,6
	.word	1346
	.byte	20,199,1,0,18
	.byte	'rt_Array_float32_200',0,8,245,25,17
	.word	86465
	.byte	8,8,246,25,9,196,37,9
	.byte	'x',0
	.word	86476
	.byte	160,6,2,35,0,9
	.byte	'y',0
	.word	86476
	.byte	160,6,3,35,160,6,9
	.byte	'heading',0
	.word	86476
	.byte	160,6,3,35,192,12,9
	.byte	'curve',0
	.word	86476
	.byte	160,6,3,35,224,18,9
	.byte	'acc',0
	.word	86476
	.byte	160,6,3,35,128,25,9
	.byte	'speed',0
	.word	86476
	.byte	160,6,3,35,160,31,9
	.byte	'gear',0
	.word	144
	.byte	1,3,35,192,37,9
	.byte	'points_cnt',0
	.word	144
	.byte	1,3,35,193,37,0,18
	.byte	'Trajectory',0,8,128,26,3
	.word	86506
	.byte	19,160,6
	.word	1346
	.byte	20,199,1,0,18
	.byte	'DistHeight_Obj_00_IDT',0,8,142,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_01_IDT',0,8,143,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_02_IDT',0,8,144,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_03_IDT',0,8,145,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_04_IDT',0,8,146,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_05_IDT',0,8,147,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_06_IDT',0,8,148,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_07_IDT',0,8,149,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_08_IDT',0,8,150,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_09_IDT',0,8,151,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_10_IDT',0,8,152,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_11_IDT',0,8,153,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_12_IDT',0,8,154,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_13_IDT',0,8,155,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_14_IDT',0,8,156,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_15_IDT',0,8,157,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_16_IDT',0,8,158,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_17_IDT',0,8,159,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_18_IDT',0,8,160,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_19_IDT',0,8,161,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_20_IDT',0,8,162,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_21_IDT',0,8,163,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_22_IDT',0,8,164,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_23_IDT',0,8,165,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_24_IDT',0,8,166,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_25_IDT',0,8,167,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_26_IDT',0,8,168,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_27_IDT',0,8,169,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_28_IDT',0,8,170,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_29_IDT',0,8,171,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_30_IDT',0,8,172,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_31_IDT',0,8,173,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_32_IDT',0,8,174,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_33_IDT',0,8,175,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_34_IDT',0,8,176,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_35_IDT',0,8,177,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_36_IDT',0,8,178,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_37_IDT',0,8,179,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_38_IDT',0,8,180,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_39_IDT',0,8,181,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_40_IDT',0,8,182,26,15
	.word	144
	.byte	18
	.byte	'DistHeight_Obj_41_IDT',0,8,183,26,15
	.word	144
	.byte	18
	.byte	'EPB_AVHFeedbackSts_IDT',0,8,188,26,15
	.word	144
	.byte	18
	.byte	'EPB_AVHStatIndReqV_IDT',0,8,189,26,15
	.word	144
	.byte	18
	.byte	'EPB_AVHStatIndReq_IDT',0,8,190,26,15
	.word	144
	.byte	18
	.byte	'EPB_AVHWrnIndReqV_IDT',0,8,191,26,15
	.word	144
	.byte	18
	.byte	'EPB_AVHWrnIndReq_IDT',0,8,192,26,15
	.word	144
	.byte	18
	.byte	'EPB_Sts_IDT',0,8,193,26,15
	.word	144
	.byte	18
	.byte	'EPB_SysBrkLtsReq_IDT',0,8,194,26,15
	.word	144
	.byte	18
	.byte	'EPB_SysDspMsgReqV_IDT',0,8,195,26,15
	.word	144
	.byte	18
	.byte	'EPB_SysDspMsgReq_IDT',0,8,196,26,15
	.word	144
	.byte	18
	.byte	'EPB_SysStatIndReqV_IDT',0,8,197,26,15
	.word	144
	.byte	18
	.byte	'EPB_SysStatIndReq_IDT',0,8,198,26,15
	.word	144
	.byte	18
	.byte	'EPB_SysWrnIndReqV_IDT',0,8,199,26,15
	.word	144
	.byte	18
	.byte	'EPB_SysWrnIndReq_IDT',0,8,200,26,15
	.word	144
	.byte	18
	.byte	'EPS_ADAS_CtrlAbortFeedback_IDT',0,8,201,26,15
	.word	144
	.byte	18
	.byte	'EPS_ADAS_ModActv_IDT',0,8,202,26,15
	.word	144
	.byte	18
	.byte	'EPS_ADAS_ModAvail_IDT',0,8,203,26,15
	.word	144
	.byte	18
	.byte	'EPS_DrStrTorqV_IDT',0,8,207,26,15
	.word	144
	.byte	18
	.byte	'EPS_DrStrTorqVal_IDT',0,8,208,26,15
	.word	144
	.byte	18
	.byte	'EPS_LKARespTorq_IDT',0,8,209,26,16
	.word	285
	.byte	18
	.byte	'EPS_SterFltMod_IDT',0,8,212,26,15
	.word	144
	.byte	18
	.byte	'EPS_SterModV_IDT',0,8,213,26,15
	.word	144
	.byte	18
	.byte	'EPS_SterMod_IDT',0,8,214,26,15
	.word	144
	.byte	18
	.byte	'ESC_EscCtrlActv_IDT',0,8,215,26,15
	.word	144
	.byte	18
	.byte	'ESC_EscDisableSts_IDT',0,8,216,26,15
	.word	144
	.byte	18
	.byte	'ESC_EscFlgFlt_IDT',0,8,217,26,15
	.word	144
	.byte	18
	.byte	'ESC_HBAFlgFlt_IDT',0,8,218,26,15
	.word	144
	.byte	18
	.byte	'ESC_HSA_Control_Status_IDT',0,8,219,26,15
	.word	144
	.byte	18
	.byte	'ESC_HSA_Status_Fault_IDT',0,8,220,26,15
	.word	144
	.byte	18
	.byte	'ESC_HbaCtrlActv_IDT',0,8,221,26,15
	.word	144
	.byte	18
	.byte	'ESC_MasterCylinderPressureV_IDT',0,8,226,26,15
	.word	144
	.byte	18
	.byte	'ESC_MasterCylinderPressure_IDT',0,8,227,26,16
	.word	285
	.byte	18
	.byte	'ESC_SlopeGradeAngle_IDT',0,8,228,26,15
	.word	144
	.byte	18
	.byte	'ESC_TcsCtrlActv_IDT',0,8,229,26,15
	.word	144
	.byte	18
	.byte	'ESC_TcsDisableSts_IDT',0,8,230,26,15
	.word	144
	.byte	18
	.byte	'ESC_TcsFlgFlt_IDT',0,8,231,26,15
	.word	144
	.byte	18
	.byte	'Float',0,8,242,26,17
	.word	1346
	.byte	19,128,75
	.word	85942
	.byte	20,143,3,0,18
	.byte	'vehicle_points_400',0,8,243,26,20
	.word	89064
	.byte	8,8,244,26,9,136,75,9
	.byte	'point_num',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'closed_contour',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'vehicle_points',0
	.word	89075
	.byte	128,75,2,35,4,9
	.byte	'color_type',0
	.word	144
	.byte	1,3,35,132,75,9
	.byte	'class_type',0
	.word	144
	.byte	1,3,35,133,75,0,18
	.byte	'FreespaceInfo',0,8,251,26,3
	.word	89103
	.byte	19,128,75
	.word	85942
	.byte	20,143,3,0,8,8,134,27,9,36,9
	.byte	'ARS_OD_TimeStampGlobSec',0
	.word	1202
	.byte	8,2,35,0,9
	.byte	'ARS_OD_TimeStampGlobNanoSec',0
	.word	1202
	.byte	8,2,35,8,9
	.byte	'ARS_OD_TimeStampLocal',0
	.word	1202
	.byte	8,2,35,16,9
	.byte	'ARS_OD_Latency',0
	.word	285
	.byte	2,2,35,24,9
	.byte	'ARS_OD_MeasCounter',0
	.word	285
	.byte	2,2,35,26,9
	.byte	'ARS_OD_CycleCounter',0
	.word	144
	.byte	1,2,35,28,9
	.byte	'ARS_OD_NumOfObjects',0
	.word	144
	.byte	1,2,35,29,9
	.byte	'ARS_OD_TaskValidFlag',0
	.word	144
	.byte	1,2,35,30,9
	.byte	'ARS_OD_ExtendedCycleFlag',0
	.word	144
	.byte	1,2,35,31,9
	.byte	'ARS_OD_MsgCounter_Header',0
	.word	144
	.byte	1,2,35,32,9
	.byte	'ARS_OD_CRC16_Checksum_Header',0
	.word	285
	.byte	2,2,35,34,0,18
	.byte	'RadarHeader',0,8,147,27,3
	.word	89255
	.byte	8,8,142,28,9,40,9
	.byte	'time_stamp',0
	.word	1202
	.byte	8,2,35,0,9
	.byte	'time_stamp_can',0
	.word	1202
	.byte	8,2,35,8,9
	.byte	'x',0
	.word	1346
	.byte	4,2,35,16,9
	.byte	'y',0
	.word	1346
	.byte	4,2,35,20,9
	.byte	'z',0
	.word	1346
	.byte	4,2,35,24,9
	.byte	'heading',0
	.word	1346
	.byte	4,2,35,28,9
	.byte	'pitch',0
	.word	1346
	.byte	4,2,35,32,9
	.byte	'roll',0
	.word	1346
	.byte	4,2,35,36,0,18
	.byte	'GlobalPoseEstimation',0,8,152,28,3
	.word	89630
	.byte	19,224,3
	.word	89630
	.byte	20,11,0,18
	.byte	'global_pose_10',0,8,154,28,30
	.word	89790
	.byte	18
	.byte	'IBS_ESCOFF_StsFB_IDT',0,8,174,28,15
	.word	144
	.byte	18
	.byte	'IPC_IPCTotalOdometerV_IDT',0,8,192,28,15
	.word	144
	.byte	18
	.byte	'IPC_IPCTotalOdometer_IDT',0,8,193,28,16
	.word	483
	.byte	18
	.byte	'IPC_Remain_Maintenance_IDT',0,8,194,28,16
	.word	285
	.byte	18
	.byte	'MFS_ACC_CruiseCancel_IDT',0,8,196,28,15
	.word	144
	.byte	18
	.byte	'MFS_ACC_CruiseGapSet_IDT',0,8,197,28,15
	.word	144
	.byte	18
	.byte	'MFS_ACC_CruiseOn_Off_IDT',0,8,198,28,15
	.word	144
	.byte	18
	.byte	'MFS_ACC_CruiseSpdDecrease_IDT',0,8,199,28,15
	.word	144
	.byte	18
	.byte	'MFS_ACC_CruiseSpdIncrease_IDT',0,8,200,28,15
	.word	144
	.byte	18
	.byte	'MFS_L1_Central_Control_IDT',0,8,201,28,15
	.word	144
	.byte	18
	.byte	'MFS_L1_DownControl_IDT',0,8,202,28,15
	.word	144
	.byte	18
	.byte	'MFS_L1_Failure_IDT',0,8,203,28,15
	.word	144
	.byte	18
	.byte	'MFS_L1_LeftControl_IDT',0,8,204,28,15
	.word	144
	.byte	18
	.byte	'MFS_L1_RightControl_IDT',0,8,205,28,15
	.word	144
	.byte	18
	.byte	'MFS_L1_UpControl_IDT',0,8,206,28,15
	.word	144
	.byte	18
	.byte	'MFS_L2_Failure_IDT',0,8,207,28,15
	.word	144
	.byte	8,8,239,28,9,52,9
	.byte	'distance_x',0
	.word	1346
	.byte	4,2,35,0,9
	.byte	'distance_y',0
	.word	1346
	.byte	4,2,35,4,9
	.byte	'tracking_id',0
	.word	285
	.byte	2,2,35,8,9
	.byte	'class_id',0
	.word	144
	.byte	1,2,35,10,9
	.byte	'angle_view',0
	.word	144
	.byte	1,2,35,11,9
	.byte	'confidence',0
	.word	144
	.byte	1,2,35,12,9
	.byte	'width',0
	.word	1346
	.byte	4,2,35,14,9
	.byte	'height',0
	.word	1346
	.byte	4,2,35,18,9
	.byte	'length',0
	.word	1346
	.byte	4,2,35,22,9
	.byte	'yaw',0
	.word	1346
	.byte	4,2,35,26,9
	.byte	'relative_velocity_x',0
	.word	1346
	.byte	4,2,35,30,9
	.byte	'relative_velocity_y',0
	.word	1346
	.byte	4,2,35,34,9
	.byte	'relative_acceleration_x',0
	.word	1346
	.byte	4,2,35,38,9
	.byte	'relative_acceleration_y',0
	.word	1346
	.byte	4,2,35,42,9
	.byte	'motion_status',0
	.word	144
	.byte	1,2,35,46,9
	.byte	'valid_status',0
	.word	285
	.byte	2,2,35,48,9
	.byte	'target_source',0
	.word	144
	.byte	1,2,35,50,0,18
	.byte	'ObjectInfo',0,8,130,29,3
	.word	90358
	.byte	19,128,26
	.word	90358
	.byte	20,63,0,18
	.byte	'object_set_64',0,8,132,29,20
	.word	90756
	.byte	18
	.byte	'PEPS_IGN1RelaySts_IDT',0,8,142,29,15
	.word	144
	.byte	18
	.byte	'PEPS_IGN1RelayValidity_IDT',0,8,143,29,15
	.word	144
	.byte	18
	.byte	'PEPS_Learning_Status_IDT',0,8,144,29,15
	.word	144
	.byte	18
	.byte	'PEPS_Message_Sts_AliveCounter_IDT',0,8,145,29,15
	.word	144
	.byte	18
	.byte	'PEPS_Message_Sts_CheckSum_IDT',0,8,146,29,15
	.word	144
	.byte	18
	.byte	'PEPS_PowerModeValidity_IDT',0,8,147,29,15
	.word	144
	.byte	18
	.byte	'PEPS_PowerMode_IDT',0,8,148,29,15
	.word	144
	.byte	18
	.byte	'PEPS_RemoteControlSt_IDT',0,8,149,29,15
	.word	144
	.byte	8,8,157,29,9,12,9
	.byte	'flc_info',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'flm_info',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'frm_info',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'frc_info',0
	.word	144
	.byte	1,2,35,3,9
	.byte	'rlc_info',0
	.word	144
	.byte	1,2,35,4,9
	.byte	'rlm_info',0
	.word	144
	.byte	1,2,35,5,9
	.byte	'rrm_info',0
	.word	144
	.byte	1,2,35,6,9
	.byte	'rrc_info',0
	.word	144
	.byte	1,2,35,7,9
	.byte	'fls_info',0
	.word	144
	.byte	1,2,35,8,9
	.byte	'frs_info',0
	.word	144
	.byte	1,2,35,9,9
	.byte	'rls_info',0
	.word	144
	.byte	1,2,35,10,9
	.byte	'rrs_info',0
	.word	144
	.byte	1,2,35,11,0,18
	.byte	'PdcAlertInfo',0,8,171,29,3
	.word	91070
	.byte	8,8,173,29,9,24,9
	.byte	'flc_distance',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'flm_distance',0
	.word	285
	.byte	2,2,35,2,9
	.byte	'frm_distance',0
	.word	285
	.byte	2,2,35,4,9
	.byte	'frc_distance',0
	.word	285
	.byte	2,2,35,6,9
	.byte	'rlc_distance',0
	.word	285
	.byte	2,2,35,8,9
	.byte	'rlm_distance',0
	.word	285
	.byte	2,2,35,10,9
	.byte	'rrm_distance',0
	.word	285
	.byte	2,2,35,12,9
	.byte	'rrc_distance',0
	.word	285
	.byte	2,2,35,14,9
	.byte	'fls_distance',0
	.word	285
	.byte	2,2,35,16,9
	.byte	'frs_distance',0
	.word	285
	.byte	2,2,35,18,9
	.byte	'rls_distance',0
	.word	285
	.byte	2,2,35,20,9
	.byte	'rrs_distance',0
	.word	285
	.byte	2,2,35,22,0,18
	.byte	'PdcDistInfo',0,8,187,29,3
	.word	91315
	.byte	8,8,189,29,9,40,9
	.byte	'flc_distance_left',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'flc_distance_right',0
	.word	285
	.byte	2,2,35,2,9
	.byte	'flm_distance_left',0
	.word	285
	.byte	2,2,35,4,9
	.byte	'flm_distance_right',0
	.word	285
	.byte	2,2,35,6,9
	.byte	'frm_distance_left',0
	.word	285
	.byte	2,2,35,8,9
	.byte	'frm_distance_right',0
	.word	285
	.byte	2,2,35,10,9
	.byte	'frc_distance_left',0
	.word	285
	.byte	2,2,35,12,9
	.byte	'frc_distance_right',0
	.word	285
	.byte	2,2,35,14,9
	.byte	'rlc_distance_left',0
	.word	285
	.byte	2,2,35,16,9
	.byte	'rlc_distance_right',0
	.word	285
	.byte	2,2,35,18,9
	.byte	'rlm_distance_left',0
	.word	285
	.byte	2,2,35,20,9
	.byte	'rlm_distance_right',0
	.word	285
	.byte	2,2,35,22,9
	.byte	'rrm_distance_left',0
	.word	285
	.byte	2,2,35,24,9
	.byte	'rrm_distance_right',0
	.word	285
	.byte	2,2,35,26,9
	.byte	'rrc_distance_left',0
	.word	285
	.byte	2,2,35,28,9
	.byte	'rrc_distance_right',0
	.word	285
	.byte	2,2,35,30,9
	.byte	'fls_distance',0
	.word	285
	.byte	2,2,35,32,9
	.byte	'frs_distance',0
	.word	285
	.byte	2,2,35,34,9
	.byte	'rls_distance',0
	.word	285
	.byte	2,2,35,36,9
	.byte	'rrs_distance',0
	.word	285
	.byte	2,2,35,38,0,18
	.byte	'PdcDistInfoAvm',0,8,211,29,3
	.word	91607
	.byte	8,8,213,29,9,4,9
	.byte	'ls_info',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'rs_info',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'ls_distance',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'rs_distance',0
	.word	144
	.byte	1,2,35,3,0,18
	.byte	'PdcSideInfo',0,8,219,29,3
	.word	92166
	.byte	19,12
	.word	92166
	.byte	20,2,0,18
	.byte	'PdcSideInfo_3',0,8,221,29,21
	.word	92270
	.byte	8,8,235,29,9,24,9
	.byte	'camera_position',0
	.word	1285
	.byte	4,2,35,0,9
	.byte	'timestamp',0
	.word	1313
	.byte	8,2,35,4,9
	.byte	'blockage_status',0
	.word	509
	.byte	1,2,35,12,9
	.byte	'weather_status',0
	.word	509
	.byte	1,2,35,13,9
	.byte	'illumination_status',0
	.word	509
	.byte	1,2,35,14,9
	.byte	'image_limited_status',0
	.word	509
	.byte	1,2,35,15,9
	.byte	'out_of_focus',0
	.word	144
	.byte	1,2,35,16,9
	.byte	'impacted_technologies',0
	.word	1285
	.byte	4,2,35,18,0,18
	.byte	'PerceptionFailsafe',0,8,245,29,3
	.word	92302
	.byte	19,160,2
	.word	92302
	.byte	20,11,0,18
	.byte	'PerceptionFailsafe_12',0,8,247,29,28
	.word	92542
	.byte	8,8,248,29,9,84,9
	.byte	'track_id',0
	.word	1285
	.byte	4,2,35,0,9
	.byte	'age',0
	.word	1285
	.byte	4,2,35,4,9
	.byte	'exist_probability',0
	.word	1346
	.byte	4,2,35,8,9
	.byte	'quality',0
	.word	144
	.byte	1,2,35,12,9
	.byte	'prediction_type',0
	.word	1313
	.byte	8,2,35,16,9
	.byte	'prediction_source',0
	.word	1313
	.byte	8,2,35,24,9
	.byte	'color',0
	.word	144
	.byte	1,2,35,32,9
	.byte	'color_confidence',0
	.word	1346
	.byte	4,2,35,34,9
	.byte	'lanemark_type',0
	.word	144
	.byte	1,2,35,38,9
	.byte	'lanemark_type_confidence',0
	.word	1346
	.byte	4,2,35,40,9
	.byte	'dlm_type',0
	.word	144
	.byte	1,2,35,44,9
	.byte	'role',0
	.word	144
	.byte	1,2,35,45,9
	.byte	'marker_width',0
	.word	1346
	.byte	4,2,35,46,9
	.byte	'marker_width_std',0
	.word	1346
	.byte	4,2,35,50,9
	.byte	'line_c3',0
	.word	1346
	.byte	4,2,35,54,9
	.byte	'line_c2',0
	.word	1346
	.byte	4,2,35,58,9
	.byte	'line_c1',0
	.word	1346
	.byte	4,2,35,62,9
	.byte	'line_c0',0
	.word	1346
	.byte	4,2,35,66,9
	.byte	'view_range_start',0
	.word	1346
	.byte	4,2,35,70,9
	.byte	'view_range_end',0
	.word	1346
	.byte	4,2,35,74,9
	.byte	'measured_view_range_end',0
	.word	1346
	.byte	4,2,35,78,9
	.byte	'camera_position',0
	.word	144
	.byte	1,2,35,82,9
	.byte	'is_valid',0
	.word	144
	.byte	1,2,35,83,0,18
	.byte	'PerceptionLaneAdjacent',0,8,145,30,3
	.word	92583
	.byte	19,208,2
	.word	92583
	.byte	20,3,0,18
	.byte	'PerceptionLaneAdjacent_4',0,8,147,30,32
	.word	93121
	.byte	8,8,148,30,9,132,1,9
	.byte	'timestamp',0
	.word	1313
	.byte	8,2,35,0,9
	.byte	'track_id',0
	.word	1285
	.byte	4,2,35,8,9
	.byte	'age',0
	.word	1285
	.byte	4,2,35,12,9
	.byte	'exist_probability',0
	.word	1346
	.byte	4,2,35,16,9
	.byte	'quality',0
	.word	144
	.byte	1,2,35,20,9
	.byte	'prediction_source',0
	.word	1313
	.byte	8,2,35,24,9
	.byte	'prediction_type',0
	.word	1313
	.byte	8,2,35,32,9
	.byte	'color',0
	.word	144
	.byte	1,2,35,40,9
	.byte	'color_confidence',0
	.word	1346
	.byte	4,2,35,42,9
	.byte	'lanemark_type',0
	.word	144
	.byte	1,2,35,46,9
	.byte	'lanemark_type_confidence',0
	.word	1346
	.byte	4,2,35,48,9
	.byte	'dlm_type',0
	.word	144
	.byte	1,2,35,52,9
	.byte	'decel_type',0
	.word	144
	.byte	1,2,35,53,9
	.byte	'side',0
	.word	144
	.byte	1,2,35,54,9
	.byte	'crossing',0
	.word	144
	.byte	1,2,35,55,9
	.byte	'marker_width',0
	.word	1346
	.byte	4,2,35,56,9
	.byte	'marker_width_std',0
	.word	1346
	.byte	4,2,35,60,9
	.byte	'dash_average_length',0
	.word	1346
	.byte	4,2,35,64,9
	.byte	'dash_average_gap',0
	.word	1346
	.byte	4,2,35,68,9
	.byte	'is_multi_clothoid',0
	.word	144
	.byte	1,2,35,72,9
	.byte	'first_line_c0',0
	.word	1346
	.byte	4,2,35,74,9
	.byte	'first_line_c1',0
	.word	1346
	.byte	4,2,35,78,9
	.byte	'first_line_c2',0
	.word	1346
	.byte	4,2,35,82,9
	.byte	'first_line_c3',0
	.word	1346
	.byte	4,2,35,86,9
	.byte	'first_view_range_start',0
	.word	1346
	.byte	4,2,35,90,9
	.byte	'first_view_range_end',0
	.word	1346
	.byte	4,2,35,94,9
	.byte	'first_measured_view_range_end',0
	.word	1346
	.byte	4,2,35,98,9
	.byte	'second_line_c0',0
	.word	1346
	.byte	4,2,35,102,9
	.byte	'second_line_c1',0
	.word	1346
	.byte	4,2,35,106,9
	.byte	'second_line_c2',0
	.word	1346
	.byte	4,2,35,110,9
	.byte	'second_line_c3',0
	.word	1346
	.byte	4,2,35,114,9
	.byte	'second_view_range_start',0
	.word	1346
	.byte	4,2,35,118,9
	.byte	'second_view_range_end',0
	.word	1346
	.byte	4,2,35,122,9
	.byte	'second_measured_view_range_end',0
	.word	1346
	.byte	4,2,35,126,9
	.byte	'camera_position',0
	.word	144
	.byte	1,3,35,130,1,9
	.byte	'is_valid',0
	.word	144
	.byte	1,3,35,131,1,0,18
	.byte	'PerceptionLaneHost',0,8,186,30,3
	.word	93165
	.byte	19,136,2
	.word	93165
	.byte	20,1,0,18
	.byte	'PerceptionLaneHost_2',0,8,188,30,28
	.word	94083
	.byte	8,8,189,30,9,216,1,9
	.byte	'timestamp',0
	.word	1202
	.byte	8,2,35,0,9
	.byte	'frame_index',0
	.word	1202
	.byte	8,2,35,8,9
	.byte	'camera_position',0
	.word	509
	.byte	1,2,35,16,9
	.byte	'id',0
	.word	144
	.byte	1,2,35,17,9
	.byte	'class',0
	.word	509
	.byte	1,2,35,18,9
	.byte	'subclass',0
	.word	509
	.byte	1,2,35,19,9
	.byte	'confidence',0
	.word	1346
	.byte	4,2,35,20,9
	.byte	'bbox',0
	.word	83090
	.byte	16,2,35,24,9
	.byte	'length',0
	.word	1346
	.byte	4,2,35,40,9
	.byte	'length_std',0
	.word	1346
	.byte	4,2,35,44,9
	.byte	'width',0
	.word	1346
	.byte	4,2,35,48,9
	.byte	'width_std',0
	.word	1346
	.byte	4,2,35,52,9
	.byte	'height',0
	.word	1346
	.byte	4,2,35,56,9
	.byte	'height_std',0
	.word	1346
	.byte	4,2,35,60,9
	.byte	'age_count',0
	.word	509
	.byte	1,2,35,64,9
	.byte	'age_seconds',0
	.word	1346
	.byte	4,2,35,66,9
	.byte	'visibility_side',0
	.word	509
	.byte	1,2,35,70,9
	.byte	'heading',0
	.word	1346
	.byte	4,2,35,72,9
	.byte	'heading_std',0
	.word	1346
	.byte	4,2,35,76,9
	.byte	'inverse_ttc',0
	.word	1346
	.byte	4,2,35,80,9
	.byte	'inverse_ttc_std',0
	.word	1346
	.byte	4,2,35,84,9
	.byte	'angle_left',0
	.word	1346
	.byte	4,2,35,88,9
	.byte	'angle_right',0
	.word	1346
	.byte	4,2,35,92,9
	.byte	'angle_side',0
	.word	1346
	.byte	4,2,35,96,9
	.byte	'angle_rate',0
	.word	1346
	.byte	4,2,35,100,9
	.byte	'top_out_of_image',0
	.word	509
	.byte	1,2,35,104,9
	.byte	'bottom_out_of_image',0
	.word	509
	.byte	1,2,35,105,9
	.byte	'left_out_of_image',0
	.word	509
	.byte	1,2,35,106,9
	.byte	'right_out_of_image',0
	.word	509
	.byte	1,2,35,107,9
	.byte	'brake_light',0
	.word	509
	.byte	1,2,35,108,9
	.byte	'turn_indicator_left',0
	.word	509
	.byte	1,2,35,109,9
	.byte	'turn_indicator_right',0
	.word	509
	.byte	1,2,35,110,9
	.byte	'measuring_status_0',0
	.word	509
	.byte	1,2,35,111,9
	.byte	'measuring_status_1',0
	.word	509
	.byte	1,2,35,112,9
	.byte	'measuring_status_2',0
	.word	509
	.byte	1,2,35,113,9
	.byte	'motion_orientation',0
	.word	509
	.byte	1,2,35,114,9
	.byte	'motion_category',0
	.word	509
	.byte	1,2,35,115,9
	.byte	'motion_status',0
	.word	509
	.byte	1,2,35,116,9
	.byte	'cutin_cutout',0
	.word	509
	.byte	1,2,35,117,9
	.byte	'lat_distance',0
	.word	1346
	.byte	4,2,35,118,9
	.byte	'lat_distance_std',0
	.word	1346
	.byte	4,2,35,122,9
	.byte	'long_distance',0
	.word	1346
	.byte	4,2,35,126,9
	.byte	'long_distance_std',0
	.word	1346
	.byte	4,3,35,130,1,9
	.byte	'relative_lat_velocity',0
	.word	1346
	.byte	4,3,35,134,1,9
	.byte	'relative_lat_velocity_std',0
	.word	1346
	.byte	4,3,35,138,1,9
	.byte	'relative_long_velocity',0
	.word	1346
	.byte	4,3,35,142,1,9
	.byte	'relative_long_velocity_std',0
	.word	1346
	.byte	4,3,35,146,1,9
	.byte	'abs_lat_velocity',0
	.word	1346
	.byte	4,3,35,150,1,9
	.byte	'abs_lat_velocity_std',0
	.word	1346
	.byte	4,3,35,154,1,9
	.byte	'abs_long_velocity',0
	.word	1346
	.byte	4,3,35,158,1,9
	.byte	'abs_long_velocity_std',0
	.word	1346
	.byte	4,3,35,162,1,9
	.byte	'relative_lat_acc',0
	.word	1346
	.byte	4,3,35,166,1,9
	.byte	'relative_lat_acc_std',0
	.word	1346
	.byte	4,3,35,170,1,9
	.byte	'relative_long_acc',0
	.word	1346
	.byte	4,3,35,174,1,9
	.byte	'relative_long_acc_std',0
	.word	1346
	.byte	4,3,35,178,1,9
	.byte	'abs_lat_acc',0
	.word	1346
	.byte	4,3,35,182,1,9
	.byte	'abs_lat_acc_std',0
	.word	1346
	.byte	4,3,35,186,1,9
	.byte	'abs_long_acc',0
	.word	1346
	.byte	4,3,35,190,1,9
	.byte	'abs_long_acc_std',0
	.word	1346
	.byte	4,3,35,194,1,9
	.byte	'abs_speed',0
	.word	1346
	.byte	4,3,35,198,1,9
	.byte	'abs_speed_std',0
	.word	1346
	.byte	4,3,35,202,1,9
	.byte	'abs_acceleration',0
	.word	1346
	.byte	4,3,35,206,1,9
	.byte	'abs_acceleration_std',0
	.word	1346
	.byte	4,3,35,210,1,0,18
	.byte	'PerceptionOutObject',0,8,254,30,3
	.word	94123
	.byte	19,128,54
	.word	94123
	.byte	20,31,0,18
	.byte	'PerceptionOutObject_32',0,8,128,31,29
	.word	95685
	.byte	8,8,129,31,9,44,9
	.byte	'exist_probability',0
	.word	1346
	.byte	4,2,35,0,9
	.byte	'height',0
	.word	1346
	.byte	4,2,35,4,9
	.byte	'height_std',0
	.word	1346
	.byte	4,2,35,8,9
	.byte	'line_c3',0
	.word	1346
	.byte	4,2,35,12,9
	.byte	'line_c2',0
	.word	1346
	.byte	4,2,35,16,9
	.byte	'line_c1',0
	.word	1346
	.byte	4,2,35,20,9
	.byte	'line_c0',0
	.word	1346
	.byte	4,2,35,24,9
	.byte	'view_range_start',0
	.word	1346
	.byte	4,2,35,28,9
	.byte	'view_range_end',0
	.word	1346
	.byte	4,2,35,32,9
	.byte	'measured_view_range_end',0
	.word	1346
	.byte	4,2,35,36,9
	.byte	'camera_position',0
	.word	144
	.byte	1,2,35,40,0,18
	.byte	'PerceptionRoadEdge',0,8,142,31,3
	.word	95727
	.byte	19,88
	.word	95727
	.byte	20,1,0,18
	.byte	'PerceptionRoadEdge_2',0,8,144,31,28
	.word	96001
	.byte	8,8,145,31,9,44,9
	.byte	'bbox',0
	.word	83090
	.byte	16,2,35,0,9
	.byte	'height',0
	.word	1346
	.byte	4,2,35,16,9
	.byte	'width',0
	.word	1346
	.byte	4,2,35,20,9
	.byte	'lat_distance',0
	.word	1346
	.byte	4,2,35,24,9
	.byte	'lat_distance_std',0
	.word	1346
	.byte	4,2,35,28,9
	.byte	'long_distance',0
	.word	1346
	.byte	4,2,35,32,9
	.byte	'long_distance_std',0
	.word	1346
	.byte	4,2,35,36,9
	.byte	'relevance',0
	.word	144
	.byte	1,2,35,40,0,18
	.byte	'PerceptionTrafficSign',0,8,155,31,3
	.word	96040
	.byte	8,8,157,31,9,6,9
	.byte	'sign',0
	.word	1285
	.byte	4,2,35,0,9
	.byte	'type',0
	.word	144
	.byte	1,2,35,4,0,18
	.byte	'TrafficSignType',0,8,161,31,3
	.word	96240
	.byte	19,144,1
	.word	96240
	.byte	20,23,0,18
	.byte	'TrafficSignType_24',0,8,163,31,25
	.word	96300
	.byte	8,8,164,31,9,200,1,9
	.byte	'sign',0
	.word	96240
	.byte	6,2,35,0,9
	.byte	'derived_signs',0
	.word	96310
	.byte	144,1,2,35,6,9
	.byte	'bbox',0
	.word	83090
	.byte	16,3,35,152,1,9
	.byte	'lat_distance',0
	.word	1346
	.byte	4,3,35,168,1,9
	.byte	'long_distance',0
	.word	1346
	.byte	4,3,35,172,1,9
	.byte	'panel_width',0
	.word	1346
	.byte	4,3,35,176,1,9
	.byte	'panel_height',0
	.word	1346
	.byte	4,3,35,180,1,9
	.byte	'height',0
	.word	1346
	.byte	4,3,35,184,1,9
	.byte	'speed_limit',0
	.word	1346
	.byte	4,3,35,188,1,9
	.byte	'height_limit',0
	.word	1346
	.byte	4,3,35,192,1,9
	.byte	'weight_limit',0
	.word	1346
	.byte	4,3,35,196,1,0,18
	.byte	'PerceptionTrafficSignStatus',0,8,177,31,3
	.word	96338
	.byte	19,144,1
	.word	96240
	.byte	20,23,0,19,128,25
	.word	96338
	.byte	20,15,0,18
	.byte	'PerceptionTrafficSignStatus_16',0,8,179,31,37
	.word	96623
	.byte	19,192,5
	.word	96040
	.byte	20,15,0,18
	.byte	'PerceptionTrafficSign_16',0,8,180,31,31
	.word	96673
	.byte	18
	.byte	'RollingCounter_0x106_IDT',0,8,206,31,15
	.word	144
	.byte	18
	.byte	'RollingCounter_0x109_IDT',0,8,207,31,15
	.word	144
	.byte	18
	.byte	'RollingCounter_0x132_IDT',0,8,208,31,15
	.word	144
	.byte	18
	.byte	'RollingCounter_0x17F_IDT',0,8,209,31,15
	.word	144
	.byte	18
	.byte	'RollingCounter_0x3F1_IDT',0,8,211,31,15
	.word	144
	.byte	18
	.byte	'RollingCounter_0x3F5_IDT',0,8,212,31,15
	.word	144
	.byte	18
	.byte	'RollingCounter_0x3F7_IDT',0,8,213,31,15
	.word	144
	.byte	18
	.byte	'RollingCounter_1F8_IDT',0,8,214,31,15
	.word	144
	.byte	18
	.byte	'RollingCounter_230_IDT',0,8,215,31,15
	.word	144
	.byte	18
	.byte	'Rolling_counter_0x17E_IDT',0,8,216,31,15
	.word	144
	.byte	18
	.byte	'SAS_Calibrated_IDT',0,8,217,31,15
	.word	144
	.byte	18
	.byte	'SAS_SASFailure_IDT',0,8,218,31,15
	.word	144
	.byte	18
	.byte	'SAS_SASStsSnsr_IDT',0,8,219,31,15
	.word	144
	.byte	18
	.byte	'SAS_SteerWheelAngle_IDT',0,8,221,31,16
	.word	285
	.byte	18
	.byte	'SAS_SteerWhlRotSpdStatus_IDT',0,8,223,31,15
	.word	144
	.byte	18
	.byte	'SAS_SteerWhlRotSpd_IDT',0,8,224,31,16
	.word	285
	.byte	18
	.byte	'SAS_SteeringAngleValid_IDT',0,8,225,31,15
	.word	144
	.byte	18
	.byte	'STAT_Central_LockSts_IDT',0,8,226,31,15
	.word	144
	.byte	18
	.byte	'WCBS_Trailermode_Feedback_IDT',0,8,167,33,15
	.word	144
	.byte	18
	.byte	'VCU_ModeGearSts_IDT',0,8,128,34,15
	.word	144
	.byte	18
	.byte	'VCU_Warning_IMMO_Fail_IDT',0,8,129,34,15
	.word	144
	.byte	18
	.byte	'VCU_Ready_IDT',0,8,130,34,15
	.word	144
	.byte	18
	.byte	'VCU_RegencyLevInd_IDT',0,8,131,34,15
	.word	144
	.byte	18
	.byte	'VCU_Ctrl_AliveCounter_IDT',0,8,132,34,15
	.word	144
	.byte	18
	.byte	'VCU_LimpHomeSts_IDT',0,8,133,34,15
	.word	144
	.byte	18
	.byte	'VCU_Ctrl_CheckSum_IDT',0,8,134,34,15
	.word	144
	.byte	18
	.byte	'VCU_StsAccPedalFault_IDT',0,8,146,34,15
	.word	144
	.byte	18
	.byte	'VCU_StsSysFault_IDT',0,8,147,34,15
	.word	144
	.byte	18
	.byte	'VCU_AccPedalPosition_IDT',0,8,148,34,15
	.word	144
	.byte	18
	.byte	'VCU_AccPedal_Active_IDT',0,8,149,34,15
	.word	144
	.byte	18
	.byte	'VCU_StsEpt_AliveCounter_IDT',0,8,150,34,15
	.word	144
	.byte	18
	.byte	'VCU_StsEpt_CheckSum_IDT',0,8,151,34,15
	.word	144
	.byte	19,24
	.word	285
	.byte	20,11,0,18
	.byte	'distance_12',0,8,221,51,16
	.word	97763
	.byte	8,8,222,51,9,32,9
	.byte	'distance',0
	.word	97772
	.byte	24,2,35,0,9
	.byte	'time_stamp',0
	.word	1202
	.byte	8,2,35,24,0,18
	.byte	'UpaDistT',0,8,226,51,3
	.word	97793
	.byte	19,24
	.word	285
	.byte	20,11,0,19,24
	.word	1285
	.byte	20,5,0,18
	.byte	'x_6',0,8,228,51,16
	.word	97865
	.byte	18
	.byte	'y_6',0,8,229,51,16
	.word	97865
	.byte	19,6
	.word	144
	.byte	20,5,0,18
	.byte	'type_6',0,8,230,51,15
	.word	97900
	.byte	8,8,231,51,9,64,9
	.byte	'x',0
	.word	97874
	.byte	24,2,35,0,9
	.byte	'y',0
	.word	97887
	.byte	24,2,35,24,9
	.byte	'type',0
	.word	97909
	.byte	6,2,35,48,9
	.byte	'time_stamp',0
	.word	1202
	.byte	8,2,35,56,0,18
	.byte	'UpaObjectInfo',0,8,237,51,3
	.word	97925
	.byte	19,24
	.word	1285
	.byte	20,5,0,19,24
	.word	1285
	.byte	20,5,0,19,6
	.word	144
	.byte	20,5,0,19,192,1
	.word	97925
	.byte	20,2,0,18
	.byte	'upa_object_3',0,8,239,51,23
	.word	98038
	.byte	8,8,240,51,9,192,1,9
	.byte	'upa_object',0
	.word	98048
	.byte	192,1,2,35,0,0,18
	.byte	'UpaObjsT',0,8,243,51,3
	.word	98070
	.byte	19,192,1
	.word	97925
	.byte	20,2,0,19,80
	.word	80459
	.byte	20,3,0,18
	.byte	'apa_dist_info_4',0,8,251,51,18
	.word	98127
	.byte	19,128,3
	.word	98070
	.byte	20,1,0,18
	.byte	'upa_objs_2',0,8,252,51,18
	.word	98161
	.byte	19,64
	.word	97793
	.byte	20,1,0,18
	.byte	'upa_dist_2',0,8,253,51,18
	.word	98191
	.byte	18
	.byte	'min_distance_12',0,8,254,51,16
	.word	97763
	.byte	18
	.byte	'ring_time_uint16_array_12',0,8,136,52,16
	.word	97763
	.byte	19,56
	.word	144
	.byte	20,55,0,18
	.byte	'reserved_data_uint8_array_56',0,8,137,52,15
	.word	98280
	.byte	19,20
	.word	285
	.byte	20,9,0,18
	.byte	'distance_10',0,8,164,52,16
	.word	98327
	.byte	18
	.byte	'width_10',0,8,165,52,16
	.word	98327
	.byte	19,10
	.word	144
	.byte	20,9,0,18
	.byte	'peak_10',0,8,166,52,15
	.word	98375
	.byte	8,8,167,52,9,68,9
	.byte	'echo_num',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'distance',0
	.word	98336
	.byte	20,2,35,2,9
	.byte	'width',0
	.word	98357
	.byte	20,2,35,22,9
	.byte	'peak',0
	.word	98384
	.byte	10,2,35,42,9
	.byte	'ring_time',0
	.word	285
	.byte	2,2,35,52,9
	.byte	'valid_fram',0
	.word	144
	.byte	1,2,35,54,9
	.byte	'confidence',0
	.word	144
	.byte	1,2,35,55,9
	.byte	'status_work',0
	.word	144
	.byte	1,2,35,56,9
	.byte	'counter',0
	.word	144
	.byte	1,2,35,57,9
	.byte	'system_time',0
	.word	1202
	.byte	8,2,35,60,0,18
	.byte	'UssRawData',0,8,179,52,3
	.word	98401
	.byte	19,20
	.word	285
	.byte	20,9,0,19,20
	.word	285
	.byte	20,9,0,19,10
	.word	144
	.byte	20,9,0,19,176,6
	.word	98401
	.byte	20,11,0,18
	.byte	'sensor_info_12',0,8,181,52,20
	.word	98638
	.byte	8,8,189,52,9,12,9
	.byte	'diagnosis_info',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'remind_info',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'counter',0
	.word	144
	.byte	1,2,35,3,9
	.byte	'system_time',0
	.word	1202
	.byte	8,2,35,4,0,18
	.byte	'UssStatus',0,8,195,52,3
	.word	98672
	.byte	19,144,1
	.word	98672
	.byte	20,11,0,18
	.byte	'sensor_status_12',0,8,197,52,19
	.word	98781
	.byte	18
	.byte	'PduIdType',0,9,37,21
	.word	144
	.byte	18
	.byte	'PduLengthType',0,9,41,22
	.word	285
	.byte	18
	.byte	'unsigned_int',0,10,75,22
	.word	161
	.byte	18
	.byte	'SduDataPtrType',0,11,189,1,40
	.word	527
	.byte	12,11,204,1,9,1,13
	.byte	'TP_DATACONF',0,0,13
	.byte	'TP_DATARETRY',0,1,13
	.byte	'TP_CONFPENDING',0,2,0,18
	.byte	'TpDataStateType',0,11,216,1,3
	.word	98902
	.byte	18
	.byte	'Os_uint8',0,12,45,29
	.word	144
	.byte	18
	.byte	'Os_uint16',0,12,46,29
	.word	285
	.byte	18
	.byte	'Os_uint32',0,12,47,29
	.word	161
	.byte	18
	.byte	'Os_boolean',0,12,55,29
	.word	144
	.byte	18
	.byte	'Os_AddrType',0,12,60,20
	.word	161
	.byte	18
	.byte	'Os_TpTickType',0,13,40,19
	.word	161
	.byte	18
	.byte	'Os_SysTickType',0,13,41,19
	.word	161
	.byte	18
	.byte	'Os_Pl_SpinlockType',0,13,44,19
	.word	161
	.byte	12,13,47,9,1,13
	.byte	'ACCESSMODE_USER_0',0,0,13
	.byte	'ACCESSMODE_USER_1',0,1,13
	.byte	'ACCESSMODE_PRIVILEGED',0,2,0,18
	.byte	'Os_Pl_AccessModeType',0,13,52,3
	.word	99144
	.byte	18
	.byte	'ApplicationType',0,14,49,18
	.word	144
	.byte	12,14,53,9,1,13
	.byte	'APPLICATION_ACCESSIBLE',0,0,13
	.byte	'APPLICATION_RESTARTING',0,1,13
	.byte	'APPLICATION_TERMINATED',0,2,0,18
	.byte	'ApplicationStateType',0,14,58,3
	.word	99267
	.byte	18
	.byte	'ISRType',0,14,108,18
	.word	144
	.byte	12,14,136,1,9,1,13
	.byte	'SCHEDULETABLE_STOPPED',0,0,13
	.byte	'SCHEDULETABLE_NEXT',0,1,13
	.byte	'SCHEDULETABLE_WAITING',0,2,13
	.byte	'SCHEDULETABLE_RUNNING',0,3,13
	.byte	'SCHEDULETABLE_RUNNING_AND_SYNCHRONOUS',0,4,0,18
	.byte	'ScheduleTableStatusType',0,14,143,1,3
	.word	99393
	.byte	18
	.byte	'CounterType',0,14,152,1,19
	.word	144
	.byte	18
	.byte	'CoreIdType',0,14,179,1,18
	.word	144
	.byte	18
	.byte	'TaskType',0,15,55,18
	.word	144
	.byte	12,15,72,9,1,13
	.byte	'OS_TASK_SUSPENDED',0,0,13
	.byte	'OS_TASK_NEW',0,1,13
	.byte	'OS_TASK_READY',0,2,13
	.byte	'OS_TASK_RUNNING',0,3,13
	.byte	'OS_TASK_WAITING',0,4,13
	.byte	'OS_TASK_WAITING_TO_READY',0,5,0,18
	.byte	'TaskStateType',0,15,80,3
	.word	99624
	.byte	18
	.byte	'TickType',0,15,87,19
	.word	161
	.byte	8,15,89,9,12,9
	.byte	'maxallowedvalue',0
	.word	161
	.byte	4,2,35,0,9
	.byte	'ticksperbase',0
	.word	161
	.byte	4,2,35,4,9
	.byte	'mincycle',0
	.word	161
	.byte	4,2,35,8,0,18
	.byte	'AlarmBaseType',0,15,94,3
	.word	99782
	.byte	18
	.byte	'AlarmType',0,15,97,18
	.word	144
	.byte	18
	.byte	'EventMaskType',0,15,112,19
	.word	161
	.byte	18
	.byte	'OSServiceIdType',0,15,120,19
	.word	285
	.byte	18
	.byte	'ResourceType',0,15,126,18
	.word	144
	.byte	21
	.byte	'_Os_SRC_SRCR_Bits',0,16,151,1,16,4,22
	.byte	'SRPN',0,1
	.word	144
	.byte	8,0,2,35,0,22
	.byte	'reserved_8',0,1
	.word	144
	.byte	2,6,2,35,1,22
	.byte	'SRE',0,1
	.word	144
	.byte	1,5,2,35,1,22
	.byte	'TOS',0,1
	.word	144
	.byte	3,2,2,35,1,22
	.byte	'reserved_14',0,1
	.word	144
	.byte	2,0,2,35,1,22
	.byte	'ECC',0,1
	.word	144
	.byte	5,3,2,35,2,22
	.byte	'reserved_21',0,1
	.word	144
	.byte	3,0,2,35,2,22
	.byte	'SRR',0,1
	.word	144
	.byte	1,7,2,35,3,22
	.byte	'CLRR',0,1
	.word	144
	.byte	1,6,2,35,3,22
	.byte	'SETR',0,1
	.word	144
	.byte	1,5,2,35,3,22
	.byte	'IOV',0,1
	.word	144
	.byte	1,4,2,35,3,22
	.byte	'IOVCLR',0,1
	.word	144
	.byte	1,3,2,35,3,22
	.byte	'SWS',0,1
	.word	144
	.byte	1,2,2,35,3,22
	.byte	'SWSCLR',0,1
	.word	144
	.byte	1,1,2,35,3,22
	.byte	'reserved_31',0,1
	.word	144
	.byte	1,0,2,35,3,0,18
	.byte	'Os_SRC_SRCR_Bits',0,16,172,1,3
	.word	99960
	.byte	18
	.byte	'Os_PrioType',0,17,178,1,19
	.word	285
	.byte	12,17,241,1,9,1,13
	.byte	'OS_ISR_SUSPENDED',0,0,13
	.byte	'OS_ISR_READY',0,1,13
	.byte	'OS_ISR_RUNNING',0,2,0,18
	.byte	'ISRStateType',0,17,246,1,3
	.word	100297
	.byte	8,17,166,2,9,4,9
	.byte	'Os_Q_front',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'Os_Q_rear',0
	.word	285
	.byte	2,2,35,2,0,18
	.byte	'Os_TaskQueueCtlType',0,17,170,2,3
	.word	100377
	.byte	18
	.byte	'Os_ApplicationMaskType',0,17,208,2,19
	.word	161
	.byte	12,17,245,2,9,1,13
	.byte	'OS_TP_NONE',0,0,13
	.byte	'OS_TP_EXECBUDGET',0,1,13
	.byte	'OS_TP_RESOURCELOCK',0,2,13
	.byte	'OS_TP_ISRLOCK',0,3,13
	.byte	'OS_TP_FRAMECHECK',0,4,0,18
	.byte	'Os_TpMonitorType',0,17,252,2,3
	.word	100484
	.byte	23,1,1,10
	.word	100605
	.byte	18
	.byte	'Os_TaskFuncType',0,17,136,3,16
	.word	100608
	.byte	10
	.word	100377
	.byte	11
	.word	100638
	.byte	10
	.word	144
	.byte	11
	.word	100648
	.byte	8,17,200,3,9,12,9
	.byte	'Q_Ctl_Ptr',0
	.word	100643
	.byte	4,2,35,0,9
	.byte	'Q_Size',0
	.word	285
	.byte	2,2,35,4,9
	.byte	'Q_Buf',0
	.word	100653
	.byte	4,2,35,8,0,18
	.byte	'Os_TaskQueCfgType',0,17,210,3,3
	.word	100658
	.byte	10
	.word	161
	.byte	11
	.word	100742
	.byte	11
	.word	100742
	.byte	8,17,216,3,9,12,9
	.byte	'p_table_line',0
	.word	100747
	.byte	4,2,35,0,9
	.byte	'p_table',0
	.word	100752
	.byte	4,2,35,4,9
	.byte	'p_table_size',0
	.word	144
	.byte	1,2,35,8,0,18
	.byte	'Os_TaskPriReadyTblCfgType',0,17,221,3,3
	.word	100757
	.byte	24
	.byte	'void',0,10
	.word	100860
	.byte	25,1,1,26
	.word	100866
	.byte	0,10
	.word	100871
	.byte	18
	.byte	'Os_TrustedFunctionPtrType',0,17,210,4,16
	.word	100880
	.byte	8,17,221,4,9,4,9
	.byte	'ObjId',0
	.word	161
	.byte	4,2,35,0,0,18
	.byte	'Os_CounterTreeQueEleType',0,17,228,4,3
	.word	100920
	.byte	12,17,252,4,9,1,13
	.byte	'OS_ALARM_TASK',0,0,13
	.byte	'OS_ALARM_EVENT',0,1,13
	.byte	'OS_ALARM_CALLBACK',0,2,13
	.byte	'OS_ALARM_INCREMENTCOUNTER',0,3,0,18
	.byte	'Os_AlarmActionType',0,17,130,5,3
	.word	100976
	.byte	12,17,239,5,9,1,13
	.byte	'OS_RES_TASK_ONLY',0,0,13
	.byte	'OS_RES_ISR_ONLY',0,1,13
	.byte	'OS_RES_SHARE',0,2,0,18
	.byte	'Os_ResAccessype',0,17,244,5,3
	.word	101092
	.byte	12,17,139,6,9,1,13
	.byte	'OS_LOCK_NOTHING',0,0,13
	.byte	'OS_LOCK_ALL_INTERRUPTS',0,1,13
	.byte	'OS_LOCK_CAT2_INTERRUPTS',0,2,13
	.byte	'OS_LOCK_WITH_RES_SCHEDULER',0,3,0,18
	.byte	'Os_SpinlockMethodType',0,17,145,6,3
	.word	101176
	.byte	18
	.byte	'NvM_RequestResultType',0,18,153,1,16
	.word	144
	.byte	18
	.byte	'NvM_BlockIdType',0,18,155,1,16
	.word	285
	.byte	12,18,158,1,9,1,13
	.byte	'NVM_BLOCK_NATIVE',0,0,13
	.byte	'NVM_BLOCK_REDUNDANT',0,1,13
	.byte	'NVM_BLOCK_DATASET',0,2,0,18
	.byte	'NvM_BlockManagementType',0,18,163,1,3
	.word	101368
	.byte	8,18,204,2,9,1,22
	.byte	'NvValid',0,1
	.word	144
	.byte	1,7,2,35,0,22
	.byte	'NvChanged',0,1
	.word	144
	.byte	1,6,2,35,0,22
	.byte	'res1',0,1
	.word	144
	.byte	1,5,2,35,0,22
	.byte	'res2',0,1
	.word	144
	.byte	1,4,2,35,0,22
	.byte	'lossRedundant',0,1
	.word	144
	.byte	1,3,2,35,0,22
	.byte	'unused',0,1
	.word	144
	.byte	3,0,2,35,0,0,18
	.byte	'NvM_AttriStruct_Type',0,18,226,2,3
	.word	101469
	.byte	27,18,229,2,9,1,9
	.byte	'AttriByte',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'A',0
	.word	101469
	.byte	1,2,35,0,0,18
	.byte	'NvM_Attri_Type',0,18,233,2,3
	.word	101621
	.byte	18
	.byte	'Dem_ComponentIdType',0,3,46,16
	.word	285
	.byte	18
	.byte	'Dem_ConfigType',0,3,52,3
	.word	432
	.byte	18
	.byte	'Dem_DTCRequestType',0,3,56,15
	.word	144
	.byte	18
	.byte	'Dem_DTCTranslationFormatType',0,3,67,15
	.word	144
	.byte	18
	.byte	'Dem_DTCSeverityType',0,3,80,15
	.word	144
	.byte	18
	.byte	'Dem_J1939DcmSetFreezeFrameFilterType',0,3,140,1,15
	.word	144
	.byte	18
	.byte	'Dem_J1939DcmLampStatusType',0,3,148,1,16
	.word	285
	.byte	18
	.byte	'Dem_ReturnGetStatusOfDTCType',0,3,145,2,15
	.word	144
	.byte	18
	.byte	'Dem_ReturnGetSeverityOfDTCType',0,3,153,2,15
	.word	144
	.byte	18
	.byte	'Dem_ReturnGetFunctionalUnitOfDTCType',0,3,160,2,15
	.word	144
	.byte	18
	.byte	'Dem_ReturnSetFilterType',0,3,165,2,15
	.word	144
	.byte	18
	.byte	'Dem_ReturnGetNumberOfFilteredDTCType',0,3,170,2,15
	.word	144
	.byte	18
	.byte	'Dem_ReturnGetNextFilteredElementType',0,3,176,2,15
	.word	144
	.byte	18
	.byte	'Dem_ReturnGetDTCByOccurrenceTimeType',0,3,183,2,15
	.word	144
	.byte	18
	.byte	'Dem_ReturnDisableDTCRecordUpdateType',0,3,188,2,15
	.word	144
	.byte	18
	.byte	'Dem_ReturnGetFreezeFrameDataByDTCType',0,3,195,2,15
	.word	144
	.byte	18
	.byte	'Dem_ReturnGetExtendedDataRecordByDTCType',0,3,204,2,15
	.word	144
	.byte	18
	.byte	'Dem_ReturnGetSizeOfDataByDTCType',0,3,213,2,15
	.word	144
	.byte	18
	.byte	'Dem_ReturnClearDTCType',0,3,221,2,15
	.word	144
	.byte	18
	.byte	'Dem_ReturnControlDTCSettingType',0,3,231,2,15
	.word	144
	.byte	18
	.byte	'Dem_EventMemoryEntryStorageTriggerType',0,3,158,3,15
	.word	144
	.byte	18
	.byte	'Dem_OperationCycleType',0,3,207,3,15
	.word	144
	.byte	8,3,217,3,9,4,9
	.byte	'DemOperationCycleAutomaticEnd',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'DemOperationCycleAutostart',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'DemOperationCycleId',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'DemOperationCycleType',0
	.word	144
	.byte	1,2,35,3,0,18
	.byte	'Dem_OperationCycleInfoType',0,3,231,3,3
	.word	102540
	.byte	8,3,236,3,9,2,9
	.byte	'DemEnableConditionId',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'DemEnableConditionStatus',0
	.word	144
	.byte	1,2,35,1,0,18
	.byte	'Dem_EnableConditionType',0,3,242,3,3
	.word	102718
	.byte	8,3,246,3,9,8,9
	.byte	'Number',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'DemEnableConditionRef',0
	.word	1004
	.byte	4,2,35,4,0,18
	.byte	'Dem_EnableConditionGroupType',0,3,251,3,3
	.word	102822
	.byte	18
	.byte	'Dem_DTCGroupType',0,3,158,4,16
	.word	483
	.byte	18
	.byte	'Dem_UdsDTCType',0,3,200,4,16
	.word	483
	.byte	28
	.word	144
	.byte	1,1,26
	.word	483
	.byte	26
	.word	144
	.byte	26
	.word	144
	.byte	0,10
	.word	102964
	.byte	18
	.byte	'Dem_DTCStatusChangedNotificationType',0,3,205,4,9
	.word	102987
	.byte	8,3,140,6,9,8,9
	.byte	'DemDTCAttributesRef',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'DemDTCFunctionalUnit',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'DemDTCSeverity',0
	.word	144
	.byte	1,2,35,3,9
	.byte	'DemDtcValue',0
	.word	483
	.byte	4,2,35,4,0,18
	.byte	'Dem_DTCInfoType',0,3,158,6,3
	.word	103038
	.byte	12,3,160,6,9,1,13
	.byte	'DEM_EVENT_SIGNIFICANCE_OCCURRENCE',0,0,13
	.byte	'DEM_EVENT_SIGNIFICANCE_FAULT',0,1,0,18
	.byte	'Dem_DTCSignificanceType',0,3,164,6,3
	.word	103174
	.byte	18
	.byte	'Dem_InternalDataElementType',0,3,187,6,3
	.word	537
	.byte	10
	.word	144
	.byte	28
	.word	144
	.byte	1,1,26
	.word	103318
	.byte	0,10
	.word	103323
	.byte	18
	.byte	'Dem_DataElementReadFncType',0,3,190,6,9
	.word	103336
	.byte	8,3,196,6,9,2,9
	.byte	'DemDataElementDataSize',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'DemInternalDataElement',0
	.word	537
	.byte	1,2,35,1,0,18
	.byte	'Dem_InternalDataElementClassType',0,3,202,6,3
	.word	103377
	.byte	8,3,205,6,9,12,9
	.byte	'DemDataElementDataSize',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'DemDataElementReadFnc',0
	.word	103341
	.byte	4,2,35,4,9
	.byte	'DemDataElementUsePort',0
	.word	144
	.byte	1,2,35,8,0,18
	.byte	'Dem_ExternalCSDataElementClassType',0,3,213,6,3
	.word	103490
	.byte	10
	.word	103323
	.byte	11
	.word	103377
	.byte	10
	.word	103640
	.byte	11
	.word	103490
	.byte	10
	.word	103650
	.byte	8,3,217,6,9,8,9
	.byte	'DemInternalDataElementClass',0
	.word	103645
	.byte	4,2,35,0,9
	.byte	'DemExternalCSDataElementClass',0
	.word	103655
	.byte	4,2,35,4,0,18
	.byte	'Dem_DataElementClassType',0,3,223,6,3
	.word	103660
	.byte	8,3,250,6,9,8,9
	.byte	'Number',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'DemJ1939NmNodeRef',0
	.word	1004
	.byte	4,2,35,4,0,18
	.byte	'Dem_J1939NodeType',0,3,255,6,3
	.word	103777
	.byte	18
	.byte	'Dem_PriorityType',0,3,130,7,16
	.word	285
	.byte	11
	.word	103777
	.byte	10
	.word	103880
	.byte	8,3,136,7,9,32,9
	.byte	'DemAgingAllowed',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'DemAgingCycleCounterThreshold',0
	.word	285
	.byte	2,2,35,2,9
	.byte	'DemAgingCycleCounterThresholdForTFSLC',0
	.word	285
	.byte	2,2,35,4,9
	.byte	'DemAgingCycleRef',0
	.word	144
	.byte	1,2,35,6,9
	.byte	'DemDTCPriority',0
	.word	285
	.byte	2,2,35,8,9
	.byte	'DemDTCSignificance',0
	.word	103174
	.byte	1,2,35,10,9
	.byte	'DemEventMemoryEntryFdcThresholdStorageValue',0
	.word	144
	.byte	1,2,35,11,9
	.byte	'DemExtendedDataClassRef',0
	.word	1004
	.byte	4,2,35,12,9
	.byte	'DemFreezeFrameRecNumClassRef',0
	.word	1004
	.byte	4,2,35,16,9
	.byte	'DemImmediateNvStorage',0
	.word	144
	.byte	1,2,35,20,9
	.byte	'DemJ1939DTC_J1939NodeRef',0
	.word	103885
	.byte	4,2,35,24,9
	.byte	'DemMemoryDestinationRef',0
	.word	144
	.byte	1,2,35,28,0,18
	.byte	'Dem_DTCAttributesType',0,3,180,7,3
	.word	103890
	.byte	12,3,183,7,9,1,13
	.byte	'DEM_EVENT_KIND_BSW',0,0,13
	.byte	'DEM_EVENT_KIND_SWC',0,1,0,18
	.byte	'Dem_EventKindType',0,3,187,7,3
	.word	104339
	.byte	12,3,189,7,9,1,13
	.byte	'DEM_REPORT_AFTER_INIT',0,1,13
	.byte	'DEM_REPORT_BEFORE_INIT',0,2,0,18
	.byte	'Dem_ReportBehaviorType',0,3,193,7,3
	.word	104415
	.byte	12,3,195,7,9,1,13
	.byte	'DEM_DEBOUNCE_FREEZE',0,0,13
	.byte	'DEM_DEBOUNCE_RESET',0,1,0,18
	.byte	'Dem_DebounceBehaviorType',0,3,199,7,3
	.word	104503
	.byte	8,3,204,7,9,20,9
	.byte	'DemDebounceBehavior',0
	.word	104503
	.byte	1,2,35,0,9
	.byte	'DemDebounceCounterDecrementStepSize',0
	.word	285
	.byte	2,2,35,2,9
	.byte	'DemDebounceCounterIncrementStepSize',0
	.word	285
	.byte	2,2,35,4,9
	.byte	'DemDebounceCounterPassedThreshold',0
	.word	1257
	.byte	2,2,35,6,9
	.byte	'DemDebounceCounterFailedThreshold',0
	.word	1257
	.byte	2,2,35,8,9
	.byte	'DemDebounceCounterJumpDown',0
	.word	144
	.byte	1,2,35,10,9
	.byte	'DemDebounceCounterJumpUp',0
	.word	144
	.byte	1,2,35,11,9
	.byte	'DemDebounceCounterJumpDownValue',0
	.word	1257
	.byte	2,2,35,12,9
	.byte	'DemDebounceCounterJumpUpValue',0
	.word	1257
	.byte	2,2,35,14,9
	.byte	'DemDebounceCounterStorage',0
	.word	144
	.byte	1,2,35,16,0,18
	.byte	'Dem_DebounceCounterBasedClassType',0,3,226,7,3
	.word	104587
	.byte	8,3,232,7,9,12,9
	.byte	'DemDebounceBehavior',0
	.word	104503
	.byte	1,2,35,0,9
	.byte	'DemDebounceTimePassedThreshold',0
	.word	483
	.byte	4,2,35,2,9
	.byte	'DemDebounceTimeFailedThreshold',0
	.word	483
	.byte	4,2,35,6,0,18
	.byte	'Dem_DebounceTimeBaseClassType',0,3,240,7,3
	.word	105027
	.byte	10
	.word	509
	.byte	28
	.word	144
	.byte	1,1,26
	.word	105182
	.byte	0,10
	.word	105187
	.byte	18
	.byte	'Dem_CallbackGetFDCFncType',0,3,243,7,9
	.word	105200
	.byte	11
	.word	104587
	.byte	10
	.word	105240
	.byte	11
	.word	105027
	.byte	10
	.word	105250
	.byte	11
	.word	105205
	.byte	8,3,250,7,9,12,9
	.byte	'DemDebounceCounterBasedClassRef',0
	.word	105245
	.byte	4,2,35,0,9
	.byte	'DemDebounceTimeBaseRef',0
	.word	105255
	.byte	4,2,35,4,9
	.byte	'DemCallbackGetFDCFnc',0
	.word	105260
	.byte	4,2,35,8,0,18
	.byte	'Dem_DebounceAlgorithmClassType',0,3,135,8,3
	.word	105265
	.byte	10
	.word	105187
	.byte	18
	.byte	'Dem_CallbackClearEventAllowedFncType',0,3,138,8,9
	.word	103336
	.byte	12,3,143,8,9,1,13
	.byte	'DEM_NO_STATUS_BYTE_CHANGE',0,0,13
	.byte	'DEM_ONLY_THIS_CYCLE_AND_READINESS',0,1,0,18
	.byte	'Dem_ClearEventAllowedBehaviorType',0,3,147,8,3
	.word	105466
	.byte	8,3,149,8,9,8,9
	.byte	'DemCallbackClearEventAllowedFnc',0
	.word	105420
	.byte	4,2,35,0,9
	.byte	'DemClearEventAllowedBehavior',0
	.word	105466
	.byte	1,2,35,4,0,18
	.byte	'Dem_CallbackClearEventAllowedType',0,3,155,8,3
	.word	105580
	.byte	10
	.word	103323
	.byte	29
	.word	144
	.byte	1,1,10
	.word	105714
	.byte	18
	.byte	'Dem_CallbackEventDataChangedFncType',0,3,158,8,9
	.word	105721
	.byte	28
	.word	144
	.byte	1,1,26
	.word	144
	.byte	26
	.word	144
	.byte	0,10
	.word	105771
	.byte	18
	.byte	'Dem_CallbackEventStatusChangedFncType',0,3,164,8,9
	.word	105789
	.byte	28
	.word	144
	.byte	1,1,26
	.word	144
	.byte	0,10
	.word	105841
	.byte	18
	.byte	'Dem_DemCallbackInitMForEFncType',0,3,171,8,9
	.word	105854
	.byte	11
	.word	102822
	.byte	10
	.word	105900
	.byte	8,3,215,8,9,52,9
	.byte	'DemComponentClassRef',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'DemComponentPriority',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'DemDTCRef',0
	.word	285
	.byte	2,2,35,4,9
	.byte	'DemEnableConditionGroupRef',0
	.word	105905
	.byte	4,2,35,8,9
	.byte	'DemEventFailureCycleCounterThreshold',0
	.word	144
	.byte	1,2,35,12,9
	.byte	'DemEventId',0
	.word	285
	.byte	2,2,35,14,9
	.byte	'DemEventKind',0
	.word	104339
	.byte	1,2,35,16,9
	.byte	'DemFFPrestorageSupported',0
	.word	144
	.byte	1,2,35,17,9
	.byte	'DemOperationCycleRef',0
	.word	144
	.byte	1,2,35,18,9
	.byte	'DemReportBehavior',0
	.word	104415
	.byte	1,2,35,19,9
	.byte	'DemDebounceAlgorithmClass',0
	.word	105265
	.byte	12,2,35,20,9
	.byte	'DemCallbackClearEventAllowed',0
	.word	105580
	.byte	8,2,35,32,9
	.byte	'DemCallbackEventDataChangedFnc',0
	.word	105726
	.byte	4,2,35,40,9
	.byte	'DemCallbackEventStatusChangedFnc',0
	.word	105794
	.byte	4,2,35,44,9
	.byte	'DemCallbackInitMForEFnc',0
	.word	105859
	.byte	4,2,35,48,0,18
	.byte	'Dem_EventParameterType',0,3,140,9,3
	.word	105910
	.byte	10
	.word	105714
	.byte	10
	.word	105771
	.byte	10
	.word	105841
	.byte	8,3,145,9,9,12,9
	.byte	'Number',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'DemDidDataElementClassRef',0
	.word	1004
	.byte	4,2,35,4,9
	.byte	'DemDidIdentifier',0
	.word	285
	.byte	2,2,35,8,0,18
	.byte	'Dem_DidClassType',0,3,152,9,3
	.word	106446
	.byte	12,3,154,9,9,1,13
	.byte	'DEM_UPDATE_RECORD_NO',0,0,13
	.byte	'DEM_UPDATE_RECORD_YES',0,1,0,18
	.byte	'Dem_RecordUpdateType',0,3,158,9,3
	.word	106556
	.byte	8,3,162,9,9,8,9
	.byte	'DemFreezeFrameRecordNumber',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'DemFreezeFrameRecordTrigger',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'DemFreezeFrameRecordUpdate',0
	.word	106556
	.byte	1,2,35,2,9
	.byte	'Number',0
	.word	144
	.byte	1,2,35,3,9
	.byte	'DemDidClassRef',0
	.word	1004
	.byte	4,2,35,4,0,18
	.byte	'Dem_FreezeFrameRecordClassType',0,3,177,9,3
	.word	106640
	.byte	8,3,181,9,9,8,9
	.byte	'Number',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'DemFreezeFrameRecordClassRef',0
	.word	1004
	.byte	4,2,35,4,0,18
	.byte	'Dem_FreezeFrameRecNumClassType',0,3,186,9,3
	.word	106836
	.byte	8,3,190,9,9,8,9
	.byte	'Number',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'DemExtendedDataRecordClassRef',0
	.word	1004
	.byte	4,2,35,4,0,18
	.byte	'Dem_ExtendedDataClassType',0,3,195,9,3
	.word	106937
	.byte	8,3,199,9,9,12,9
	.byte	'Number',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'DemDataElementClassRef',0
	.word	1004
	.byte	4,2,35,4,9
	.byte	'DemExtendedDataRecordNumber',0
	.word	144
	.byte	1,2,35,8,9
	.byte	'DemExtendedDataRecordTrigger',0
	.word	144
	.byte	1,2,35,9,9
	.byte	'DemExtendedDataRecordUpdate',0
	.word	106556
	.byte	1,2,35,10,0,18
	.byte	'Dem_ExtendedDataRecordClassType',0,3,210,9,3
	.word	107034
	.byte	8,3,216,9,9,8,9
	.byte	'FirstFailedEvent',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'FirstConfirmedEvent',0
	.word	285
	.byte	2,2,35,2,9
	.byte	'MostRecentFailedEvent',0
	.word	285
	.byte	2,2,35,4,9
	.byte	'MostRecentConfirmedEvent',0
	.word	285
	.byte	2,2,35,6,0,18
	.byte	'Dem_EventHeadType',0,3,226,9,3
	.word	107242
	.byte	8,3,228,9,9,16,9
	.byte	'EventFaultConfCnt',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'EventOccurrence',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'EventDebounceCnt',0
	.word	1257
	.byte	2,2,35,2,9
	.byte	'EventDebounceTimer',0
	.word	483
	.byte	4,2,35,4,9
	.byte	'TimerDirection',0
	.word	144
	.byte	1,2,35,8,9
	.byte	'EventMaxFdcDuringCurrentCycle',0
	.word	509
	.byte	1,2,35,9,9
	.byte	'EventMaxFdcSinceLastClear',0
	.word	509
	.byte	1,2,35,10,9
	.byte	'EventCyclesSinceLastFailed',0
	.word	144
	.byte	1,2,35,11,9
	.byte	'EventCyclesSinceFirstFailed',0
	.word	144
	.byte	1,2,35,12,9
	.byte	'EventFailedCyclesSinceLastCleared',0
	.word	144
	.byte	1,2,35,13,0,18
	.byte	'Dem_EventEntryType',0,3,148,10,3
	.word	107396
	.byte	8,3,150,10,9,6,9
	.byte	'DtcStatus',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'DtcLastStatus',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'DtcAgingCounter',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'DtcAgedCounter',0
	.word	144
	.byte	1,2,35,3,9
	.byte	'DataEntryRef',0
	.word	285
	.byte	2,2,35,4,0,18
	.byte	'Dem_DTCEntryType',0,3,164,10,3
	.word	107751
	.byte	19,46
	.word	144
	.byte	20,45,0,19,8
	.word	144
	.byte	20,7,0,8,3,166,10,9,56,9
	.byte	'Used',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'FreezeFrameData',0
	.word	107897
	.byte	46,2,35,1,9
	.byte	'ExtendedData',0
	.word	107906
	.byte	8,2,35,47,0,18
	.byte	'Dem_DTCDataEntryType',0,3,182,10,3
	.word	107915
	.byte	19,192,14
	.word	107396
	.byte	20,115,0,19,184,5
	.word	107751
	.byte	20,115,0,19,248,52
	.word	107915
	.byte	20,120,0
.L2132:
	.byte	8,3,218,10,9,128,73,9
	.byte	'EventHead',0
	.word	107242
	.byte	8,2,35,0,9
	.byte	'EventEntry',0
	.word	108013
	.byte	192,14,2,35,8,9
	.byte	'DtcEntry',0
	.word	108023
	.byte	184,5,3,35,200,14,9
	.byte	'PrimaryDataEntryUsedNum',0
	.word	285
	.byte	2,3,35,128,20,9
	.byte	'PrimaryDataEntry',0
	.word	108033
	.byte	248,52,3,35,132,20,9
	.byte	'DemCrcValue',0
	.word	483
	.byte	4,3,35,252,72,0,18
	.byte	'Dem_StorageMemType',0,3,244,10,3
	.word	108043
	.byte	18
	.byte	'Dcm_SecRefType',0,19,67,16
	.word	285
	.byte	18
	.byte	'Dcm_SesRefType',0,19,68,16
	.word	285
	.byte	12,19,142,1,9,1,13
	.byte	'DCM_USE_BLOCK_ID',0,0,13
	.byte	'DCM_USE_DATA_ASYNCH_CLIENT_SERVER',0,1,13
	.byte	'DCM_USE_DATA_ASYNCH_CLIENT_SERVER_ERROR',0,2,13
	.byte	'DCM_USE_DATA_ASYNCH_FNC',0,3,13
	.byte	'DCM_USE_DATA_ASYNCH_FNC_ERROR',0,4,13
	.byte	'DCM_USE_DATA_SENDER_RECEIVER',0,5,13
	.byte	'DCM_USE_DATA_SENDER_RECEIVER_AS_SERVICE',0,6,13
	.byte	'DCM_USE_DATA_SYNCH_CLIENT_SERVER',0,7,13
	.byte	'DCM_USE_DATA_SYNCH_FNC',0,8,13
	.byte	'DCM_USE_ECU_SIGNAL',0,9,0,18
	.byte	'Dcm_DspDataUsePortType',0,19,154,1,3
	.word	108269
	.byte	18
	.byte	'Dcm_MsgItemType',0,19,192,1,15
	.word	144
	.byte	10
	.word	144
	.byte	18
	.byte	'Dcm_MsgType',0,19,194,1,57
	.word	108642
	.byte	18
	.byte	'Dcm_MsgLenType',0,19,196,1,16
	.word	483
	.byte	18
	.byte	'Dcm_BitType',0,19,200,1,15
	.word	144
	.byte	8,19,201,1,9,1,22
	.byte	'reqType',0,1
	.word	144
	.byte	1,7,2,35,0,22
	.byte	'suppressPosResponse',0,1
	.word	144
	.byte	1,6,2,35,0,0,18
	.byte	'Dcm_MsgAddInfoType',0,19,209,1,3
	.word	108713
	.byte	12,19,212,1,9,1,13
	.byte	'DCM_PHYSICAL_TYPE',0,0,13
	.byte	'DCM_FUNCTIONAL_TYPE',0,1,0,18
	.byte	'Dcm_RequestAddrseeType',0,19,216,1,3
	.word	108798
	.byte	18
	.byte	'Dcm_IdContextType',0,19,224,1,15
	.word	144
	.byte	8,19,226,1,9,28,9
	.byte	'reqData',0
	.word	108647
	.byte	4,2,35,0,9
	.byte	'reqDataLen',0
	.word	483
	.byte	4,2,35,4,9
	.byte	'resData',0
	.word	108647
	.byte	4,2,35,8,9
	.byte	'resDataLen',0
	.word	483
	.byte	4,2,35,12,9
	.byte	'CopyDataIndex',0
	.word	483
	.byte	4,2,35,16,9
	.byte	'msgAddInfo',0
	.word	108713
	.byte	1,2,35,20,9
	.byte	'resMaxDataLen',0
	.word	483
	.byte	4,2,35,22,9
	.byte	'idContext',0
	.word	144
	.byte	1,2,35,26,9
	.byte	'RxPduId',0
	.word	144
	.byte	1,2,35,27,0,10
	.word	108906
	.byte	28
	.word	144
	.byte	1,1,26
	.word	144
	.byte	26
	.word	109089
	.byte	26
	.word	103318
	.byte	0,10
	.word	109094
	.byte	18
	.byte	'EcucFunctionServiceFncDef',0,19,248,1,9
	.word	109117
	.byte	10
	.word	144
	.byte	8,19,128,2,9,12,9
	.byte	'DcmDsdSubServiceId',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'DcmDsdSubServiceUsed',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'DcmDsdSubServiceSupportAddress',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'DcmDsdSubServiceSecurityLevelRef',0
	.word	285
	.byte	2,2,35,4,9
	.byte	'DcmDsdSubServiceSessionLevelRef',0
	.word	285
	.byte	2,2,35,6,9
	.byte	'DcmDsdSubServiceFnc',0
	.word	109122
	.byte	4,2,35,8,0,18
	.byte	'Dcm_DsdSubServiceType',0,19,145,2,3
	.word	109162
	.byte	10
	.word	109094
	.byte	11
	.word	109162
	.byte	10
	.word	109415
	.byte	8,19,148,2,9,24,9
	.byte	'DcmDsdSidTabServiceId',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'DcmDsdServiceUsed',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'DcmDsdServiceSupportAddress',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'DcmDsdServiceMinLength',0
	.word	285
	.byte	2,2,35,4,9
	.byte	'DcmDsdSidTabFnc',0
	.word	109122
	.byte	4,2,35,8,9
	.byte	'DcmDsdSidTabSubfuncAvail',0
	.word	144
	.byte	1,2,35,12,9
	.byte	'DcmDsdSidTabSecurityLevelRef',0
	.word	285
	.byte	2,2,35,14,9
	.byte	'DcmDsdSidTabSessionLevelRef',0
	.word	285
	.byte	2,2,35,16,9
	.byte	'NumOfSubService',0
	.word	144
	.byte	1,2,35,18,9
	.byte	'DcmDsdSubService',0
	.word	109420
	.byte	4,2,35,20,0,18
	.byte	'Dcm_DsdServiceType',0,19,173,2,3
	.word	109425
	.byte	11
	.word	109425
	.byte	10
	.word	109772
	.byte	8,19,176,2,9,8,9
	.byte	'DcmDsdSidTabId',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'NumOfService',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'DcmDsdService',0
	.word	109777
	.byte	4,2,35,4,0,18
	.byte	'Dcm_DsdServiceTableType',0,19,183,2,3
	.word	109782
	.byte	8,19,192,2,9,8,9
	.byte	'DcmDslBufferSize',0
	.word	483
	.byte	4,2,35,0,9
	.byte	'DataPtr',0
	.word	527
	.byte	4,2,35,4,0,18
	.byte	'Dcm_DslBufferType',0,19,197,2,3
	.word	109891
	.byte	12,19,209,2,9,1,13
	.byte	'DCM_TYPE1',0,0,13
	.byte	'DCM_TYPE2',0,1,0,18
	.byte	'Dcm_DslProtocolTransType',0,19,213,2,3
	.word	109968
	.byte	8,19,217,2,9,6,9
	.byte	'DcmDslProtocolRxAddrType',0
	.word	108798
	.byte	1,2,35,0,9
	.byte	'DcmDslProtocolRxPduId',0
	.word	285
	.byte	2,2,35,2,9
	.byte	'DcmDslProtocolRxPduRef',0
	.word	144
	.byte	1,2,35,4,0,18
	.byte	'Dcm_DslProtocolRxType',0,19,225,2,3
	.word	110033
	.byte	8,19,228,2,9,4,9
	.byte	'DcmDslTxConfirmationPduId',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'DcmDslProtocolTxPduRef',0
	.word	144
	.byte	1,2,35,2,0,18
	.byte	'Dcm_DslProtocolTxType',0,19,234,2,3
	.word	110168
	.byte	8,19,238,2,9,4,9
	.byte	'DcmDslPeriodicTxConfirmationPduId',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'DcmDslPeriodicTxPduRef',0
	.word	144
	.byte	1,2,35,2,0,18
	.byte	'Dcm_DslPeriodicConnectionType',0,19,244,2,3
	.word	110273
	.byte	11
	.word	110273
	.byte	10
	.word	110394
	.byte	8,19,248,2,9,8,9
	.byte	'NumOfPeriodicConnection',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'DcmDslPeriodicConnection',0
	.word	110399
	.byte	4,2,35,4,0,18
	.byte	'Dcm_DslPeriodicTransmissionType',0,19,252,2,3
	.word	110404
	.byte	11
	.word	110033
	.byte	10
	.word	110519
	.byte	11
	.word	110168
	.byte	10
	.word	110529
	.byte	8,19,255,2,9,16,9
	.byte	'DcmDslProtocolRxTesterSourceAddr',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'DcmDslProtocolComMChannelRef',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'NumOfRxPdu',0
	.word	285
	.byte	2,2,35,4,9
	.byte	'DcmDslProtocolRx',0
	.word	110524
	.byte	4,2,35,8,9
	.byte	'DcmDslProtocolTx',0
	.word	110534
	.byte	4,2,35,12,0,18
	.byte	'Dcm_DslMainConnectionType',0,19,140,3,3
	.word	110539
	.byte	11
	.word	110539
	.byte	10
	.word	110733
	.byte	11
	.word	110404
	.byte	10
	.word	110743
	.byte	8,19,143,3,9,8,9
	.byte	'DcmDslMainConnection',0
	.word	110738
	.byte	4,2,35,0,9
	.byte	'DcmDslPeriodicTransmission',0
	.word	110748
	.byte	4,2,35,4,0,18
	.byte	'Dcm_DslConnectionType',0,19,148,3,3
	.word	110753
	.byte	12,19,187,3,9,1,13
	.byte	'DCM_OPAQUE',0,0,13
	.byte	'DCM_BIG_ENDIAN',0,1,13
	.byte	'DCM_LITTLE_ENDIAN',0,2,0,18
	.byte	'Dcm_DataEndiannessType',0,19,192,3,3
	.word	110857
	.byte	12,19,194,3,9,1,13
	.byte	'DCM_BOOLEAN',0,0,13
	.byte	'DCM_SINT16',0,1,13
	.byte	'DCM_SINT16_N',0,2,13
	.byte	'DCM_SINT32',0,3,13
	.byte	'DCM_SINT32_N',0,4,13
	.byte	'DCM_SINT8',0,5,13
	.byte	'DCM_SINT8_N',0,6,13
	.byte	'DCM_UINT16',0,7,13
	.byte	'DCM_UINT16_N',0,8,13
	.byte	'DCM_UINT32',0,9,13
	.byte	'DCM_UINT32_N',0,10,13
	.byte	'DCM_UINT8',0,11,13
	.byte	'DCM_UINT8_DYN',0,12,13
	.byte	'DCM_UINT8_N',0,13,13
	.byte	'DCM_VARIABLE_LENGTH',0,14,0,18
	.byte	'Dcm_DataType',0,19,211,3,3
	.word	110946
	.byte	12,19,251,3,9,1,13
	.byte	'DCM_NO_BOOT',0,0,13
	.byte	'DCM_OEM_BOOT',0,1,13
	.byte	'DCM_OEM_BOOT_RESPAPP',0,2,13
	.byte	'DCM_SYS_BOOT',0,3,13
	.byte	'DCM_SYS_BOOT_RESPAPP',0,4,0,18
	.byte	'Dcm_DspSessionForBootType',0,19,130,4,3
	.word	111191
	.byte	8,19,133,4,9,8,9
	.byte	'DcmDspSessionBoot',0
	.word	111191
	.byte	1,2,35,0,9
	.byte	'DcmDspSessionLevel',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'DcmDspSessionMask',0
	.word	285
	.byte	2,2,35,2,9
	.byte	'DcmDspSessionP2ServerMax',0
	.word	285
	.byte	2,2,35,4,9
	.byte	'DcmDspSessionP2StarServerMax',0
	.word	285
	.byte	2,2,35,6,0,18
	.byte	'Dcm_DspSessionRowType',0,19,144,4,3
	.word	111323
	.byte	12,19,165,5,9,1,13
	.byte	'DCM_USE_ASYNCH_CLIENT_SERVER',0,0,13
	.byte	'DCM_USE_ASYNCH_FNC',0,1,0,18
	.byte	'Dcm_DspSecurityUsePortType',0,19,169,5,3
	.word	111515
	.byte	11
	.word	144
	.byte	10
	.word	111610
	.byte	28
	.word	144
	.byte	1,1,26
	.word	111615
	.byte	26
	.word	144
	.byte	26
	.word	103318
	.byte	26
	.word	103318
	.byte	0,10
	.word	111620
	.byte	18
	.byte	'EcucFncGetSeedDefA',0,19,174,5,9
	.word	111648
	.byte	28
	.word	144
	.byte	1,1,26
	.word	144
	.byte	26
	.word	103318
	.byte	26
	.word	103318
	.byte	0,10
	.word	111681
	.byte	18
	.byte	'EcucFncGetSeedDefB',0,19,182,5,9
	.word	111704
	.byte	28
	.word	144
	.byte	1,1,26
	.word	103318
	.byte	26
	.word	144
	.byte	26
	.word	103318
	.byte	0,10
	.word	111737
	.byte	18
	.byte	'EcucFncCompareKeyDef',0,19,189,5,9
	.word	111760
	.byte	28
	.word	144
	.byte	1,1,26
	.word	144
	.byte	26
	.word	103318
	.byte	0,10
	.word	111795
	.byte	18
	.byte	'EcucFncGetAttemptCounterDef',0,19,197,5,9
	.word	111813
	.byte	18
	.byte	'EcucFncSetAttemptCounterDef',0,19,203,5,9
	.word	105789
	.byte	8,19,209,5,9,44,9
	.byte	'DcmDspSecurityADRSize',0
	.word	483
	.byte	4,2,35,0,9
	.byte	'DcmDspSecurityAttemptCounterEnabled',0
	.word	144
	.byte	1,2,35,4,9
	.byte	'DcmDspSecurityCompareKeyFnc',0
	.word	111765
	.byte	4,2,35,8,9
	.byte	'DcmDspSecurityDelayTime',0
	.word	483
	.byte	4,2,35,12,9
	.byte	'DcmDspSecurityDelayTimeOnBoot',0
	.word	483
	.byte	4,2,35,16,9
	.byte	'DcmDspSecurityGetAttemptCounterFnc',0
	.word	111818
	.byte	4,2,35,20,9
	.byte	'DcmDspSecurityGetSeedFncIndex',0
	.word	144
	.byte	1,2,35,24,9
	.byte	'DcmDspSecurityKeySize',0
	.word	483
	.byte	4,2,35,26,9
	.byte	'DcmDspSecurityLevel',0
	.word	144
	.byte	1,2,35,30,9
	.byte	'DcmDspSecurityNumAttDelay',0
	.word	144
	.byte	1,2,35,31,9
	.byte	'DcmDspSecuritySeedSize',0
	.word	483
	.byte	4,2,35,32,9
	.byte	'DcmDspSecuritySetAttemptCounterFnc',0
	.word	111855
	.byte	4,2,35,36,9
	.byte	'DcmDspSecurityUsePort',0
	.word	111515
	.byte	1,2,35,40,9
	.byte	'DcmDspSecurityMask',0
	.word	285
	.byte	2,2,35,42,0,18
	.byte	'Dcm_DspSecurityRowType',0,19,239,5,3
	.word	111892
	.byte	10
	.word	111737
	.byte	10
	.word	111795
	.byte	10
	.word	105771
	.byte	18
	.byte	'EcucSwitchFncCommunicationControl',0,19,152,6,9
	.word	105854
	.byte	8,19,157,6,9,8,9
	.byte	'DcmDspComControlAllChannelUsed',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'DcmDspAllComMChannelRef',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'SwitchCommunicationControlAllChannelFnc',0
	.word	112444
	.byte	4,2,35,4,0,18
	.byte	'Dcm_DspComControlAllChannelType',0,19,164,6,3
	.word	112487
	.byte	10
	.word	105841
	.byte	8,19,174,6,9,8,9
	.byte	'DcmDspComControlSpecificChannelUsed',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'DcmDspSubnetNumber',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'DcmDspComMChannelRef',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'SwitchCommunicationControlSpecificChannelFnc',0
	.word	112444
	.byte	4,2,35,4,0,18
	.byte	'Dcm_DspComControlSpecificChannelType',0,19,183,6,3
	.word	112662
	.byte	8,19,186,6,9,8,9
	.byte	'DcmDspComControlSubNodeId',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'DcmDspComControlSubNodeUsed',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'DcmDspComControlSubNodeComMChannelRef',0
	.word	144
	.byte	1,2,35,3,9
	.byte	'SwitchCommunicationControlSubNodeFnc',0
	.word	112444
	.byte	4,2,35,4,0,18
	.byte	'Dcm_DspComControlSubNodeType',0,19,195,6,3
	.word	112872
	.byte	18
	.byte	'EcucFncRoutineRequestResultDefA',0,19,167,7,9
	.word	111704
	.byte	10
	.word	285
	.byte	28
	.word	144
	.byte	1,1,26
	.word	144
	.byte	26
	.word	103318
	.byte	26
	.word	113123
	.byte	26
	.word	103318
	.byte	0,10
	.word	113128
	.byte	18
	.byte	'EcucFncRoutineRequestResultDefB',0,19,174,7,9
	.word	113156
	.byte	28
	.word	144
	.byte	1,1,26
	.word	103318
	.byte	26
	.word	144
	.byte	26
	.word	103318
	.byte	26
	.word	103318
	.byte	0,10
	.word	113202
	.byte	18
	.byte	'EcucFncRoutineStartStopDefA',0,19,184,7,9
	.word	113230
	.byte	28
	.word	144
	.byte	1,1,26
	.word	103318
	.byte	26
	.word	144
	.byte	26
	.word	103318
	.byte	26
	.word	113123
	.byte	26
	.word	103318
	.byte	0,10
	.word	113272
	.byte	18
	.byte	'EcucFncRoutineStartStopDefB',0,19,193,7,9
	.word	113305
	.byte	28
	.word	144
	.byte	1,1,26
	.word	103318
	.byte	26
	.word	144
	.byte	26
	.word	103318
	.byte	26
	.word	285
	.byte	26
	.word	103318
	.byte	0,10
	.word	113347
	.byte	18
	.byte	'EcucFncRoutineStartStopDefC',0,19,203,7,9
	.word	113380
	.byte	18
	.byte	'EcucFncRoutineStartStopDefD',0,19,213,7,9
	.word	113305
	.byte	8,19,222,7,9,12,9
	.byte	'DcmDspRoutineSignalEndianness',0
	.word	110857
	.byte	1,2,35,0,9
	.byte	'DcmDspRoutineSignalLength',0
	.word	483
	.byte	4,2,35,2,9
	.byte	'DcmDspRoutineSignalPos',0
	.word	483
	.byte	4,2,35,6,9
	.byte	'DcmDspRoutineSignalType',0
	.word	110946
	.byte	1,2,35,10,0,18
	.byte	'Dcm_DspRoutineSignalType',0,19,240,7,3
	.word	113459
	.byte	8,19,243,7,9,6,9
	.byte	'DcmDspCommonAuthorizationSupportAddress',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'DcmDspCommonAuthorizationSecurityLevelRef',0
	.word	285
	.byte	2,2,35,2,9
	.byte	'DcmDspCommonAuthorizationSessionRef',0
	.word	285
	.byte	2,2,35,4,0,18
	.byte	'Dcm_DspCommonAuthorizationType',0,19,254,7,3
	.word	113639
	.byte	11
	.word	113639
	.byte	10
	.word	113831
	.byte	8,19,129,8,9,20,9
	.byte	'DcmDspRequestRoutineResultsFncIndex',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'DcmDspRequestRoutineResultsCommonAuthorizationRef',0
	.word	113836
	.byte	4,2,35,4,9
	.byte	'DcmDspRequestRoutineResultsOut',0
	.word	113459
	.byte	12,2,35,8,0,18
	.byte	'Dcm_DspRequestRoutineResultsType',0,19,141,8,3
	.word	113841
	.byte	8,19,144,8,9,32,9
	.byte	'DcmDspStopRoutineFncIndex',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'DcmDspStopRoutineCommonAuthorizationRef',0
	.word	113836
	.byte	4,2,35,4,9
	.byte	'DcmDspStopRoutineIn',0
	.word	113459
	.byte	12,2,35,8,9
	.byte	'DcmDspStopRoutineOut',0
	.word	113459
	.byte	12,2,35,20,0,18
	.byte	'Dcm_DspStopRoutineType',0,19,157,8,3
	.word	114034
	.byte	8,19,160,8,9,32,9
	.byte	'DcmDspStartRoutineFncIndex',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'DcmDspStartRoutineCommonAuthorizationRef',0
	.word	113836
	.byte	4,2,35,4,9
	.byte	'DcmDspStartRoutineIn',0
	.word	113459
	.byte	12,2,35,8,9
	.byte	'DcmDspStartRoutineOut',0
	.word	113459
	.byte	12,2,35,20,0,18
	.byte	'Dcm_DspStartRoutineType',0,19,173,8,3
	.word	114216
	.byte	11
	.word	114216
	.byte	10
	.word	114403
	.byte	11
	.word	114034
	.byte	10
	.word	114413
	.byte	11
	.word	113841
	.byte	10
	.word	114423
	.byte	8,19,175,8,9,16,9
	.byte	'DcmDspRoutineIdentifier',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'DcmDspRoutineUsePort',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'DcmDspRoutineUsed',0
	.word	144
	.byte	1,2,35,3,9
	.byte	'DcmDspStartRoutine',0
	.word	114408
	.byte	4,2,35,4,9
	.byte	'DcmDspStopRoutine',0
	.word	114418
	.byte	4,2,35,8,9
	.byte	'DcmDspRequestRoutineResults',0
	.word	114428
	.byte	4,2,35,12,0,18
	.byte	'Dcm_DspRoutineIdInfoType',0,19,188,8,3
	.word	114433
	.byte	12,19,238,8,9,1,13
	.byte	'DCM_CONTROLMASK_EXTERNAL',0,0,13
	.byte	'DCM_CONTROLMASK_INTERNAL',0,1,13
	.byte	'DCM_CONTROLMASK_NO',0,2,0,18
	.byte	'Dcm_DspDidControlMaskType',0,19,243,8,3
	.word	114656
	.byte	8,19,246,8,9,1,9
	.byte	'DcmDspDidControlMaskBitPosition',0
	.word	144
	.byte	1,2,35,0,0,18
	.byte	'Dcm_DspDidControlEnableMaskType',0,19,250,8,3
	.word	114773
	.byte	8,19,153,9,9,6,9
	.byte	'DcmDspDidReadSupportAddress',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'DcmDspDidReadSecurityLevelRef',0
	.word	285
	.byte	2,2,35,2,9
	.byte	'DcmDspDidReadSessionRef',0
	.word	285
	.byte	2,2,35,4,0,18
	.byte	'Dcm_DspDidReadType',0,19,164,9,3
	.word	114862
	.byte	8,19,167,9,9,6,9
	.byte	'DcmDspDidWriteSupportAddress',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'DcmDspDidWriteSecurityLevelRef',0
	.word	285
	.byte	2,2,35,2,9
	.byte	'DcmDspDidWriteSessionRef',0
	.word	285
	.byte	2,2,35,4,0,18
	.byte	'Dcm_DspDidWriteType',0,19,178,9,3
	.word	115006
	.byte	11
	.word	114862
	.byte	10
	.word	115154
	.byte	11
	.word	115006
	.byte	10
	.word	115164
	.byte	8,19,184,9,9,8,9
	.byte	'DcmDspDidRead',0
	.word	115159
	.byte	4,2,35,0,9
	.byte	'DcmDspDidWrite',0
	.word	115169
	.byte	4,2,35,4,0,18
	.byte	'Dcm_DspDidInfoType',0,19,203,9,3
	.word	115174
	.byte	18
	.byte	'EcucFncDataServicesConditionCheckReadDefA',0,19,216,9,9
	.word	111813
	.byte	18
	.byte	'EcucFncDataServicesConditionCheckReadDefB',0,19,222,9,9
	.word	103336
	.byte	18
	.byte	'EcucFncDataServicesReadDataDefA',0,19,240,9,9
	.word	111813
	.byte	18
	.byte	'EcucFncDataServicesReadDataDefB',0,19,246,9,9
	.word	111704
	.byte	18
	.byte	'EcucFncDataServicesReadDataDefC',0,19,253,9,9
	.word	103336
	.byte	28
	.word	144
	.byte	1,1,26
	.word	144
	.byte	26
	.word	113123
	.byte	0,10
	.word	115481
	.byte	18
	.byte	'EcucFncDataServicesReadDataLengthDefA',0,19,133,10,9
	.word	115499
	.byte	28
	.word	144
	.byte	1,1,26
	.word	113123
	.byte	0,10
	.word	115551
	.byte	18
	.byte	'EcucFncDataServicesReadDataLengthDefB',0,19,140,10,9
	.word	115564
	.byte	18
	.byte	'EcucFncDataServicesWriteDataDefA',0,19,148,10,9
	.word	111760
	.byte	28
	.word	144
	.byte	1,1,26
	.word	103318
	.byte	26
	.word	285
	.byte	26
	.word	144
	.byte	26
	.word	103318
	.byte	0,10
	.word	115658
	.byte	18
	.byte	'EcucFncDataServicesWriteDataDefB',0,19,157,10,9
	.word	115686
	.byte	28
	.word	144
	.byte	1,1,26
	.word	103318
	.byte	26
	.word	103318
	.byte	0,10
	.word	115733
	.byte	18
	.byte	'EcucFncDataServicesWriteDataDefC',0,19,166,10,9
	.word	115751
	.byte	28
	.word	144
	.byte	1,1,26
	.word	103318
	.byte	26
	.word	285
	.byte	26
	.word	103318
	.byte	0,10
	.word	115798
	.byte	18
	.byte	'EcucFncDataServicesWriteDataDefD',0,19,173,10,9
	.word	115821
	.byte	8,19,165,11,9,20,9
	.byte	'DcmDspDataEndianness',0
	.word	110857
	.byte	1,2,35,0,9
	.byte	'DcmDspDataConditionCheckReadFncIndex',0
	.word	285
	.byte	2,2,35,2,9
	.byte	'DcmDspDataConditionCheckReadFncUsed',0
	.word	144
	.byte	1,2,35,4,9
	.byte	'DcmDspDataReadDataLengthFncIndex',0
	.word	285
	.byte	2,2,35,6,9
	.byte	'DcmDspDataReadFncIndex',0
	.word	285
	.byte	2,2,35,8,9
	.byte	'DcmDspDataSize',0
	.word	285
	.byte	2,2,35,10,9
	.byte	'DcmDspDataType',0
	.word	110946
	.byte	1,2,35,12,9
	.byte	'DcmDspDataUsePort',0
	.word	108269
	.byte	1,2,35,13,9
	.byte	'DcmDspDataWriteFncIndex',0
	.word	285
	.byte	2,2,35,14,9
	.byte	'DcmDspDataBlockIdRef',0
	.word	285
	.byte	2,2,35,16,0,18
	.byte	'Dcm_DspDataTableType',0,19,220,11,3
	.word	115868
	.byte	8,19,139,12,9,4,9
	.byte	'DcmDspDidDataPos',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'DcmDspDidDataRef',0
	.word	285
	.byte	2,2,35,2,0,18
	.byte	'Dcm_DspDidSignalType',0,19,145,12,3
	.word	116238
	.byte	11
	.word	116238
	.byte	10
	.word	116327
	.byte	8,19,149,12,9,20,9
	.byte	'DcmDspDidIdentifier',0
	.word	285
	.byte	2,2,35,0,9
	.byte	'DcmDspDidUsed',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'DcmDspDidInfoRef',0
	.word	115174
	.byte	8,2,35,4,9
	.byte	'NumOfDidSignal',0
	.word	285
	.byte	2,2,35,12,9
	.byte	'DcmDspDidSignal',0
	.word	116332
	.byte	4,2,35,16,0,18
	.byte	'Dcm_DspDidTableType',0,19,168,12,3
	.word	116337
	.byte	19,4
	.word	102540
	.byte	20,0,0,11
	.word	116500
	.byte	30
	.byte	'Dem_OperationCycleTable',0,20,41,52
	.word	116509
	.byte	1,1,19,10
	.word	102718
	.byte	20,4,0,11
	.word	116548
	.byte	30
	.byte	'Dem_EnConditionTable',0,20,44,49
	.word	116557
	.byte	1,1,19,4
	.word	483
	.byte	20,0,0,11
	.word	116593
	.byte	30
	.byte	'Dem_GroupOfDTCTable',0,20,60,42
	.word	116602
	.byte	1,1,19,8
	.word	106836
	.byte	20,0,0,11
	.word	116637
	.byte	30
	.byte	'Dem_FFRecNumClassTable',0,20,70,56
	.word	116646
	.byte	1,1,19,16
	.word	106640
	.byte	20,1,0,11
	.word	116684
	.byte	30
	.byte	'Dem_FFRecClassTable',0,20,73,56
	.word	116693
	.byte	1,1,19,60
	.word	106446
	.byte	20,4,0,11
	.word	116728
	.byte	30
	.byte	'Dem_DidClassTable',0,20,76,42
	.word	116737
	.byte	1,1,19,72
	.word	103660
	.byte	20,8,0,11
	.word	116770
	.byte	30
	.byte	'Dem_DataElementClassTable',0,20,79,50
	.word	116779
	.byte	1,1,19,8
	.word	106937
	.byte	20,0,0,11
	.word	116820
	.byte	30
	.byte	'Dem_ExtDataClassTable',0,20,82,51
	.word	116829
	.byte	1,1,19,48
	.word	107034
	.byte	20,3,0,11
	.word	116866
	.byte	30
	.byte	'Dem_ExtDataRecClassTable',0,20,85,57
	.word	116875
	.byte	1,1,19,4
	.word	102992
	.byte	20,0,0,11
	.word	116915
	.byte	30
	.byte	'Dem_DtcStatusChangedNotificationArray',0,20,88,62
	.word	116924
	.byte	1,1,10
	.word	102964
	.byte	19,144,47
	.word	105910
	.byte	20,115,0,11
	.word	116982
	.byte	30
	.byte	'Dem_EventTable',0,20,95,48
	.word	116992
	.byte	1,1,19,160,7
	.word	103038
	.byte	20,115,0,11
	.word	117022
	.byte	30
	.byte	'Dem_DTCTable',0,20,98,41
	.word	117032
	.byte	1,1,19,96
	.word	103890
	.byte	20,2,0,11
	.word	117060
	.byte	30
	.byte	'Dem_DTCAttributesTable',0,20,101,47
	.word	117069
	.byte	1,1,12,21,45,9,1,13
	.byte	'MEMIF_JOB_OK',0,0,13
	.byte	'MEMIF_JOB_FAILED',0,1,13
	.byte	'MEMIF_JOB_PENDING',0,2,13
	.byte	'MEMIF_JOB_CANCELED',0,3,13
	.byte	'MEMIF_BLOCK_INCONSISTENT',0,4,13
	.byte	'MEMIF_BLOCK_INVALID',0,5,0,18
	.byte	'MemIf_JobResultType',0,21,53,3
	.word	117107
	.byte	12,21,55,9,1,13
	.byte	'MEMIF_MODE_SLOW',0,0,13
	.byte	'MEMIF_MODE_FAST',0,1,0,18
	.byte	'MemIf_ModeType',0,21,59,3
	.word	117265
	.byte	18
	.byte	'Fls_17_Dmu_LengthType',0,22,238,5,16
	.word	483
	.byte	8,22,241,5,9,1,22
	.byte	'Reserved1',0,1
	.word	144
	.byte	1,7,2,35,0,22
	.byte	'Write',0,1
	.word	144
	.byte	1,6,2,35,0,22
	.byte	'Erase',0,1
	.word	144
	.byte	1,5,2,35,0,22
	.byte	'Read',0,1
	.word	144
	.byte	1,4,2,35,0,22
	.byte	'Compare',0,1
	.word	144
	.byte	1,3,2,35,0,22
	.byte	'Reserved2',0,1
	.word	144
	.byte	3,0,2,35,0,0,18
	.byte	'Fls_17_Dmu_JobStartType',0,22,254,5,3
	.word	117361
	.byte	18
	.byte	'Fls_17_Dmu_Job_Type',0,22,132,6,15
	.word	144
	.byte	8,22,146,6,9,44,9
	.byte	'FlsReadAddress',0
	.word	483
	.byte	4,2,35,0,9
	.byte	'FlsWriteAddress',0
	.word	483
	.byte	4,2,35,4,9
	.byte	'FlsEraseAddress',0
	.word	483
	.byte	4,2,35,8,9
	.byte	'FlsReadLength',0
	.word	483
	.byte	4,2,35,12,9
	.byte	'FlsWriteLength',0
	.word	483
	.byte	4,2,35,16,9
	.byte	'FlsReadBufferPtr',0
	.word	527
	.byte	4,2,35,20,9
	.byte	'FlsWriteBufferPtr',0
	.word	1004
	.byte	4,2,35,24,9
	.byte	'FlsJobResult',0
	.word	117107
	.byte	1,2,35,28,9
	.byte	'FlsMode',0
	.word	117265
	.byte	1,2,35,29,9
	.byte	'NotifCaller',0
	.word	144
	.byte	1,2,35,30,9
	.byte	'JobStarted',0
	.word	117361
	.byte	1,2,35,31,9
	.byte	'FlsEraseNumSectors',0
	.word	285
	.byte	2,2,35,32,9
	.byte	'FlsEraseNumSecPerCmd',0
	.word	144
	.byte	1,2,35,34,9
	.byte	'FlsJobType',0
	.word	144
	.byte	1,2,35,35,9
	.byte	'FlsPver',0
	.word	144
	.byte	1,2,35,36,9
	.byte	'FlsEver',0
	.word	144
	.byte	1,2,35,37,9
	.byte	'FlsTimeoutErr',0
	.word	144
	.byte	1,2,35,38,9
	.byte	'FlsEccErrorPageAddress',0
	.word	483
	.byte	4,2,35,40,0,18
	.byte	'Fls_17_Dmu_StateType',0,22,204,6,3
	.word	117541
	.byte	18
	.byte	'Fls_17_Dmu_NotifFunctionPtrType',0,22,210,6,16
	.word	100608
	.byte	18
	.byte	'Fee_PageType',0,23,169,1,17
	.word	285
	.byte	12,23,188,1,9,1,13
	.byte	'FEE_QS_PROG_STATE_ERASE_STARTED',0,0,13
	.byte	'FEE_QS_PROG_STATE_DESTROY',0,1,13
	.byte	'FEE_QS_PROG_STATE_ERASE_COMPLETE',0,2,13
	.byte	'FEE_QS_PROG_STATE_WRITE_COMPLETE',0,3,13
	.byte	'FEE_QS_PROG_STATE_WRITE_STARTED',0,4,13
	.byte	'FEE_QS_START_ERASE',0,5,13
	.byte	'FEE_QS_START_BCC_WRITE',0,6,13
	.byte	'FEE_QS_START_BLOCK_WRITE',0,7,13
	.byte	'FEE_QS_ERASE_COMPLETE',0,8,13
	.byte	'FEE_QS_DIRTY_ERASE',0,9,13
	.byte	'FEE_QS_WRITE_COMPLETE',0,10,13
	.byte	'FEE_QS_DIRTY_WRITE',0,11,13
	.byte	'FEE_QS_ERASE_STARTED',0,12,13
	.byte	'FEE_QS_WRITE_STARTED',0,13,13
	.byte	'FEE_QS_DESTROY',0,14,13
	.byte	'FEE_QS_INVALID',0,25,0,18
	.byte	'Fee_QsBlock_StateType',0,23,206,1,3
	.word	118062
	.byte	18
	.byte	'Fee_NotifFunctionPtrType',0,23,211,1,16
	.word	100608
	.byte	8,23,215,1,9,8,22
	.byte	'CycleCountLimit',0,4
	.word	161
	.byte	24,8,2,35,0,22
	.byte	'FeeImmediateData',0,1
	.word	144
	.byte	8,0,2,35,3,22
	.byte	'BlockNumber',0,2
	.word	285
	.byte	16,0,2,35,4,22
	.byte	'Size',0,2
	.word	285
	.byte	16,0,2,35,6,0,18
	.byte	'Fee_BlockType',0,23,231,1,3
	.word	118543
	.byte	8,23,239,1,9,1,22
	.byte	'Valid',0,1
	.word	144
	.byte	1,7,2,35,0,22
	.byte	'Consistent',0,1
	.word	144
	.byte	1,6,2,35,0,22
	.byte	'Copied',0,1
	.word	144
	.byte	1,5,2,35,0,22
	.byte	'PrevCopyValid',0,1
	.word	144
	.byte	1,4,2,35,0,22
	.byte	'PrevCopyConsistent',0,1
	.word	144
	.byte	1,3,2,35,0,22
	.byte	'PrevCopyCopied',0,1
	.word	144
	.byte	1,2,2,35,0,0,18
	.byte	'Fee_CacheStatusType',0,23,131,2,3
	.word	118667
	.byte	8,23,134,2,9,24,9
	.byte	'Address',0
	.word	483
	.byte	4,2,35,0,9
	.byte	'BlockSize',0
	.word	483
	.byte	4,2,35,4,9
	.byte	'BlockNumber',0
	.word	285
	.byte	2,2,35,8,9
	.byte	'Status',0
	.word	118667
	.byte	1,2,35,10,9
	.byte	'PrevCopyAddress',0
	.word	483
	.byte	4,2,35,12,9
	.byte	'PrevBlkSize',0
	.word	483
	.byte	4,2,35,16,9
	.byte	'Blkcylcnt',0
	.word	285
	.byte	2,2,35,20,0,18
	.byte	'Fee_CacheType',0,23,151,2,3
	.word	118841
	.byte	8,23,158,2,9,16,9
	.byte	'DataBufferPtr',0
	.word	527
	.byte	4,2,35,0,9
	.byte	'DataWriteBufferPtr',0
	.word	1004
	.byte	4,2,35,4,9
	.byte	'BlockNumber',0
	.word	285
	.byte	2,2,35,8,9
	.byte	'BlockOffset',0
	.word	285
	.byte	2,2,35,10,9
	.byte	'Length',0
	.word	285
	.byte	2,2,35,12,0,18
	.byte	'Fee_PendReqBufType',0,23,172,2,3
	.word	119009
	.byte	8,23,181,2,10,1,22
	.byte	'FeeBlkModified',0,1
	.word	144
	.byte	1,7,2,35,0,22
	.byte	'FeeStartInitGC',0,1
	.word	144
	.byte	1,6,2,35,0,22
	.byte	'FeeCurrSector',0,1
	.word	144
	.byte	1,5,2,35,0,22
	.byte	'FeeBlkInvalidStatus',0,1
	.word	144
	.byte	1,4,2,35,0,22
	.byte	'FeeWriteInvldQSeraseAPICalled',0,1
	.word	144
	.byte	1,3,2,35,0,22
	.byte	'unused',0,1
	.word	144
	.byte	2,1,2,35,0,0,18
	.byte	'Fee_StatusFlagsType',0,23,205,2,3
	.word	119153
	.byte	8,23,213,2,10,1,22
	.byte	'Dirty',0,1
	.word	144
	.byte	1,7,2,35,0,22
	.byte	'Used',0,1
	.word	144
	.byte	1,6,2,35,0,22
	.byte	'unused',0,1
	.word	144
	.byte	6,0,2,35,0,0,18
	.byte	'Fee_SectorStatusType',0,23,220,2,3
	.word	119356
	.byte	19,8
	.word	483
	.byte	20,1,0,19,12
	.word	483
	.byte	20,2,0,8,23,226,2,9,40,9
	.byte	'StateCount',0
	.word	483
	.byte	4,2,35,0,9
	.byte	'UnerasableWLAddr',0
	.word	119444
	.byte	8,2,35,4,9
	.byte	'NonZeroWLAddr',0
	.word	119453
	.byte	12,2,35,12,9
	.byte	'NonZeroWLCount',0
	.word	483
	.byte	4,2,35,24,9
	.byte	'StatePageAddr',0
	.word	483
	.byte	4,2,35,28,9
	.byte	'NextFreeWLAddr',0
	.word	483
	.byte	4,2,35,32,9
	.byte	'UnerasableWLCount',0
	.word	144
	.byte	1,2,35,36,9
	.byte	'State',0
	.word	144
	.byte	1,2,35,37,9
	.byte	'Status',0
	.word	119356
	.byte	1,2,35,38,0,18
	.byte	'Fee_SectorInfoType',0,23,130,3,3
	.word	119462
	.byte	8,23,133,3,9,12,9
	.byte	'Addr',0
	.word	483
	.byte	4,2,35,0,9
	.byte	'PageCount',0
	.word	285
	.byte	2,2,35,4,9
	.byte	'BlockNumber',0
	.word	285
	.byte	2,2,35,6,9
	.byte	'Status',0
	.word	118667
	.byte	1,2,35,8,0,18
	.byte	'Fee_LastWrittenBlkInfoType',0,23,143,3,3
	.word	119695
	.byte	8,23,146,3,9,12,9
	.byte	'Addr',0
	.word	483
	.byte	4,2,35,0,9
	.byte	'PageCount',0
	.word	285
	.byte	2,2,35,4,9
	.byte	'BlockNumber',0
	.word	285
	.byte	2,2,35,6,9
	.byte	'Consistent',0
	.word	144
	.byte	1,2,35,8,0,18
	.byte	'Fee_GcBlkInfoType',0,23,156,3,3
	.word	119808
	.byte	19,80
	.word	119462
	.byte	20,1,0,19,136,5
	.word	118841
	.byte	20,26,0,19,128,1
	.word	483
	.byte	20,31,0,19,128,4
	.word	144
	.byte	20,255,3,0,8,23,171,3,9,236,19,9
	.byte	'FeeSectorInfo',0
	.word	119916
	.byte	80,2,35,0,9
	.byte	'FeeBlockInfo',0
	.word	119925
	.byte	136,5,2,35,80,9
	.byte	'FeeLastWrittenBlkInfo',0
	.word	119695
	.byte	12,3,35,216,5,9
	.byte	'FeeGcCurrBlkInfo',0
	.word	119808
	.byte	12,3,35,228,5,9
	.byte	'FeePendReqInfo',0
	.word	119009
	.byte	16,3,35,240,5,9
	.byte	'FeeGcLWBGcSrcAddr',0
	.word	119935
	.byte	128,1,3,35,128,6,9
	.byte	'FeeTempArray',0
	.word	119444
	.byte	8,3,35,128,7,9
	.byte	'FeeStateCount',0
	.word	483
	.byte	4,3,35,136,7,9
	.byte	'FeeReadWriteBuffer',0
	.word	119945
	.byte	128,4,3,35,140,7,9
	.byte	'FeeGcReadWriteBuffer',0
	.word	119945
	.byte	128,4,3,35,140,11,9
	.byte	'FeeLastWrittenBlkBuffer',0
	.word	119945
	.byte	128,4,3,35,140,15,9
	.byte	'FeeGcDestAddr',0
	.word	483
	.byte	4,3,35,140,19,9
	.byte	'FeeGcSrcAddr',0
	.word	483
	.byte	4,3,35,144,19,9
	.byte	'FeeNextFreePageAddr',0
	.word	483
	.byte	4,3,35,148,19,9
	.byte	'FeeWriteAffectedAddr',0
	.word	483
	.byte	4,3,35,152,19,9
	.byte	'FeeBlockStartAddr',0
	.word	483
	.byte	4,3,35,156,19,9
	.byte	'FeeCurrSectSrcAddr',0
	.word	483
	.byte	4,3,35,160,19,9
	.byte	'FeeUnErasableWLAddrTemp',0
	.word	119444
	.byte	8,3,35,164,19,9
	.byte	'FeeUserReadDestPtr',0
	.word	527
	.byte	4,3,35,172,19,9
	.byte	'FeeJobResult',0
	.word	117107
	.byte	1,3,35,176,19,9
	.byte	'FeeLastWriteSize',0
	.word	483
	.byte	4,3,35,178,19,9
	.byte	'FeeLastReadSize',0
	.word	483
	.byte	4,3,35,182,19,9
	.byte	'FeeComparedLen',0
	.word	285
	.byte	2,3,35,186,19,9
	.byte	'FeeReadLen',0
	.word	285
	.byte	2,3,35,188,19,9
	.byte	'FeeBlkPageCount',0
	.word	285
	.byte	2,3,35,190,19,9
	.byte	'FeeUserWriteBytesCount',0
	.word	285
	.byte	2,3,35,192,19,9
	.byte	'FeeCurrReqBlockNum',0
	.word	285
	.byte	2,3,35,194,19,9
	.byte	'FeeIntrCurrReqPageCount',0
	.word	285
	.byte	2,3,35,196,19,9
	.byte	'FeeGCCopyIndex',0
	.word	285
	.byte	2,3,35,198,19,9
	.byte	'FeeGCUnconfigBlkCopyIndex',0
	.word	285
	.byte	2,3,35,200,19,9
	.byte	'FeeUnConfigBlockCount',0
	.word	285
	.byte	2,3,35,202,19,9
	.byte	'FeeGcPrevBlockNumber',0
	.word	285
	.byte	2,3,35,204,19,9
	.byte	'FeeGcFirstBlkNumInWL',0
	.word	285
	.byte	2,3,35,206,19,9
	.byte	'FeeStatusFlags',0
	.word	119153
	.byte	1,3,35,208,19,9
	.byte	'FeeLastWrittenBlockDirty',0
	.word	144
	.byte	1,3,35,209,19,9
	.byte	'FeePendReqStatus',0
	.word	144
	.byte	1,3,35,210,19,9
	.byte	'FeeGcState',0
	.word	144
	.byte	1,3,35,211,19,9
	.byte	'FeeGcResumeState',0
	.word	144
	.byte	1,3,35,212,19,9
	.byte	'FeeGcBlkIndexInWL',0
	.word	144
	.byte	1,3,35,213,19,9
	.byte	'FeeInitGCState',0
	.word	144
	.byte	1,3,35,214,19,9
	.byte	'FeePrepDFLASHState',0
	.word	144
	.byte	1,3,35,215,19,9
	.byte	'FeeCacheState',0
	.word	144
	.byte	1,3,35,216,19,9
	.byte	'FeeRepairStep',0
	.word	144
	.byte	1,3,35,217,19,9
	.byte	'FeeWLAffectedType',0
	.word	144
	.byte	1,3,35,218,19,9
	.byte	'FeeIntrJob',0
	.word	144
	.byte	1,3,35,219,19,9
	.byte	'FeeIntrJobStatus',0
	.word	144
	.byte	1,3,35,220,19,9
	.byte	'FeeUserJobStatus',0
	.word	144
	.byte	1,3,35,221,19,9
	.byte	'FeeIntrJobResult',0
	.word	144
	.byte	1,3,35,222,19,9
	.byte	'FeeUserJobResult',0
	.word	144
	.byte	1,3,35,223,19,9
	.byte	'FeeMainJob',0
	.word	144
	.byte	1,3,35,224,19,9
	.byte	'FeeUserJobFailCount',0
	.word	144
	.byte	1,3,35,225,19,9
	.byte	'FeeIntrJobFailCount',0
	.word	144
	.byte	1,3,35,226,19,9
	.byte	'FeeUncfgBlksExceeded',0
	.word	144
	.byte	1,3,35,227,19,9
	.byte	'FeeUnErasableWLCountTemp',0
	.word	144
	.byte	1,3,35,228,19,9
	.byte	'FeeSectorCount',0
	.word	144
	.byte	1,3,35,229,19,9
	.byte	'FeeDisableGCStart',0
	.word	144
	.byte	1,3,35,230,19,9
	.byte	'FeeGCImmBlkWrite',0
	.word	144
	.byte	1,3,35,231,19,9
	.byte	'FeeEraseVerErr',0
	.word	144
	.byte	1,3,35,232,19,9
	.byte	'FeeProgVerErr',0
	.word	144
	.byte	1,3,35,233,19,9
	.byte	'FeeSetModeReqPend',0
	.word	144
	.byte	1,3,35,234,19,9
	.byte	'FeeChangeReqMode',0
	.word	117265
	.byte	1,3,35,235,19,0,18
	.byte	'Fee_StateDataType',0,23,178,5,3
	.word	119956
	.byte	8,23,182,5,9,1,22
	.byte	'FeeUnconfigBlock',0,1
	.word	144
	.byte	1,7,2,35,0,22
	.byte	'FeeGcRestartPoint',0,1
	.word	144
	.byte	1,6,2,35,0,22
	.byte	'FeeUseEraseSuspend',0,1
	.word	144
	.byte	1,5,2,35,0,22
	.byte	'unused',0,1
	.word	144
	.byte	5,0,2,35,0,0,18
	.byte	'Fee_GCConfigType',0,23,199,5,3
	.word	121674
	.byte	18
	.byte	'FiM_FunctionIdType',0,24,56,19
	.word	285
	.byte	18
	.byte	'FiM_InhibitionMaskType',0,24,57,18
	.word	144
	.byte	12,24,73,9,1,13
	.byte	'FIM_EVENT_OCCURED',0,0,13
	.byte	'FIM_EVENT_NOT_OCCURED',0,1,13
	.byte	'FIM_EVENT_NOT_CARED',0,2,0,18
	.byte	'FiM_EventStatusType',0,24,78,2
	.word	121870
	.byte	11
	.word	285
	.byte	11
	.word	285
	.byte	11
	.word	285
	.byte	10
	.word	121980
	.byte	11
	.word	144
	.byte	10
	.word	121990
	.byte	10
	.word	121870
	.byte	8,24,79,9,16,9
	.byte	'EventId',0
	.word	121970
	.byte	2,2,35,0,9
	.byte	'FunctionNum',0
	.word	121975
	.byte	2,2,35,2,9
	.byte	'FunctionIdPtr',0
	.word	121985
	.byte	4,2,35,4,9
	.byte	'InhibitionMaskPtr',0
	.word	121995
	.byte	4,2,35,8,9
	.byte	'EventNotOccuredFlag',0
	.word	122000
	.byte	4,2,35,12,0,18
	.byte	'FiM_EventCfgType',0,24,86,2
	.word	122005
	.byte	18
	.byte	'Dem_StateType',0,6,142,1,15
	.word	144
	.byte	18
	.byte	'Dem_MemIdType',0,6,147,1,15
	.word	144
	.byte	19,232,1
	.word	285
	.byte	20,115,0
.L2137:
	.byte	8,6,134,5,9,244,1,9
	.byte	'FilteredValidFlag',0
	.word	144
	.byte	1,2,35,0,9
	.byte	'DTCStatusMask',0
	.word	144
	.byte	1,2,35,1,9
	.byte	'DTCKind',0
	.word	144
	.byte	1,2,35,2,9
	.byte	'DTCFormat',0
	.word	144
	.byte	1,2,35,3,9
	.byte	'DTCOrigin',0
	.word	144
	.byte	1,2,35,4,9
	.byte	'FilterWithSeverity',0
	.word	144
	.byte	1,2,35,5,9
	.byte	'FilterForFDC',0
	.word	144
	.byte	1,2,35,6,9
	.byte	'DTCSeverityMask',0
	.word	144
	.byte	1,2,35,7,9
	.byte	'FilteredDTCIndexTable',0
	.word	122199
	.byte	232,1,2,35,8,9
	.byte	'NumberOfFilteredDTC',0
	.word	285
	.byte	2,3,35,240,1,9
	.byte	'NextFilteredDTCIndex',0
	.word	285
	.byte	2,3,35,242,1,0,18
	.byte	'Dem_DcmFilterInfoType',0,6,147,5,3
	.word	122209
.L2133:
	.byte	19,1
	.word	144
	.byte	20,0,0
.L2134:
	.byte	19,5
	.word	144
	.byte	20,4,0
.L2135:
	.byte	19,116
	.word	144
	.byte	20,115,0
.L2136:
	.byte	19,116
	.word	144
	.byte	20,115,0
.L2138:
	.byte	19,16
	.word	285
	.byte	20,7,0
.L2139:
	.byte	19,8
	.word	144
	.byte	20,7,0,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L1086:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,36,0,3,8,11,15,62,15,0,0,3,46,1,3,8,32,13,58,15,59,15
	.byte	57,15,54,15,39,12,0,0,4,5,0,3,8,58,15,59,15,57,15,73,19,0,0,5,11,0,0,0,6,46,1,49,19,0,0,7,5,0,49,19,0
	.byte	0,8,19,1,58,15,59,15,57,15,11,15,0,0,9,13,0,3,8,73,19,11,15,56,9,0,0,10,15,0,73,19,0,0,11,38,0,73,19,0
	.byte	0,12,4,1,58,15,59,15,57,15,11,15,0,0,13,40,0,3,8,28,13,0,0,14,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63
	.byte	12,60,12,0,0,15,46,0,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,16,46,0,3,8,58,15,59,15,57,15,54
	.byte	15,63,12,60,12,0,0,17,21,0,54,15,0,0,18,22,0,3,8,58,15,59,15,57,15,73,19,0,0,19,1,1,11,15,73,19,0,0,20
	.byte	33,0,47,15,0,0,21,19,1,3,8,58,15,59,15,57,15,11,15,0,0,22,13,0,3,8,11,15,73,19,13,15,12,15,56,9,0,0,23
	.byte	21,0,54,15,39,12,0,0,24,59,0,3,8,0,0,25,21,1,54,15,39,12,0,0,26,5,0,73,19,0,0,27,23,1,58,15,59,15,57,15
	.byte	11,15,0,0,28,21,1,73,19,54,15,39,12,0,0,29,21,0,73,19,54,15,39,12,0,0,30,52,0,3,8,58,15,59,15,57,15,73
	.byte	19,63,12,60,12,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L1087:
	.word	.L2911-.L2910
.L2910:
	.half	3
	.word	.L2913-.L2912
.L2912:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FiM',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Common',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc',0,0
	.byte	'Os_Pl_Inl.h',0,1,0,0
	.byte	'Std_Types.h',0,2,0,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem_Types.h',0,0,0,0
	.byte	'FiM.h',0,3,0,0
	.byte	'Bsw_Common.h',0,4,0,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0
	.byte	'Platform_Types.h',0,2,0,0
	.byte	'Rte_Type.h',0,5,0,0
	.byte	'ComStack_Types_Cfg.h',0,6,0,0
	.byte	'Mcal_Compiler.h',0,7,0,0
	.byte	'ComStack_Types.h',0,8,0,0
	.byte	'Os_BasicTypes.h',0,1,0,0
	.byte	'Os_Pl_Types.h',0,1,0,0
	.byte	'Os_AsrTypes.h',0,9,0,0
	.byte	'Os_OsekTypes.h',0,9,0,0
	.byte	'Os_Pl_HwDef.h',0,1,0,0
	.byte	'Os_Types.h',0,9,0,0
	.byte	'NvM_Types.h',0,10,0,0
	.byte	'Dcm_Types.h',0,11,0,0
	.byte	'Dem_Lcfg.h',0,6,0,0
	.byte	'MemIf_Types.h',0,12,0,0
	.byte	'Fls_17_Dmu.h',0,13,0,0
	.byte	'Fee.h',0,14,0,0
	.byte	'FiM_Types.h',0,3,0,0,0
.L2913:
.L2911:
	.sdecl	'.debug_info',debug,cluster('Dem_GetVersionInfo')
	.sect	'.debug_info'
.L1088:
	.word	224
	.half	3
	.word	.L1089
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1091,.L1090
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_GetVersionInfo',0,1,188,37,22,1,1,1
	.word	.L957,.L1595,.L956
	.byte	4
	.byte	'versionInfo',0,1,190,37,58
	.word	.L1596,.L1597
	.byte	5
	.word	.L957,.L1595
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_GetVersionInfo')
	.sect	'.debug_abbrev'
.L1089:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_GetVersionInfo')
	.sect	'.debug_line'
.L1090:
	.word	.L2915-.L2914
.L2914:
	.half	3
	.word	.L2917-.L2916
.L2916:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L2917:
	.byte	5,8,7,0,5,2
	.word	.L957
	.byte	3,192,37,1,5,5,9
	.half	.L2918-.L957
	.byte	1,5,33,7,9
	.half	.L2919-.L2918
	.byte	3,6,1,5,31,9
	.half	.L2920-.L2919
	.byte	1,5,33,9
	.half	.L2921-.L2920
	.byte	3,1,1,5,31,9
	.half	.L2922-.L2921
	.byte	1,5,41,9
	.half	.L2923-.L2922
	.byte	3,2,1,5,39,9
	.half	.L2924-.L2923
	.byte	1,5,41,9
	.half	.L2925-.L2924
	.byte	3,1,1,5,39,9
	.half	.L2926-.L2925
	.byte	1,5,41,9
	.half	.L2927-.L2926
	.byte	3,1,1,5,39,9
	.half	.L2928-.L2927
	.byte	1,5,1,9
	.half	.L335-.L2928
	.byte	3,2,1,7,9
	.half	.L1092-.L335
	.byte	0,1,1
.L2915:
	.sdecl	'.debug_ranges',debug,cluster('Dem_GetVersionInfo')
	.sect	'.debug_ranges'
.L1091:
	.word	-1,.L957,0,.L1092-.L957,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_PreInit')
	.sect	'.debug_info'
.L1093:
	.word	208
	.half	3
	.word	.L1094
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1096,.L1095
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_PreInit',0,1,225,37,22,1,1,1
	.word	.L959,.L1598,.L958
	.byte	4
	.word	.L959,.L1598
	.byte	5
	.byte	'i',0,1,230,37,12
	.word	.L1599,.L1600
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_PreInit')
	.sect	'.debug_abbrev'
.L1094:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_PreInit')
	.sect	'.debug_line'
.L1095:
	.word	.L2930-.L2929
.L2929:
	.half	3
	.word	.L2932-.L2931
.L2931:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L2932:
	.byte	5,11,7,0,5,2
	.word	.L959
	.byte	3,232,37,1,5,32,9
	.half	.L2459-.L959
	.byte	3,2,1,5,33,9
	.half	.L2933-.L2459
	.byte	3,1,1,5,46,9
	.half	.L2934-.L2933
	.byte	3,125,1,5,9,9
	.half	.L337-.L2934
	.byte	3,2,1,5,26,9
	.half	.L2935-.L337
	.byte	1,5,30,9
	.half	.L2936-.L2935
	.byte	1,5,9,9
	.half	.L2937-.L2936
	.byte	3,1,1,5,27,9
	.half	.L2938-.L2937
	.byte	1,5,31,9
	.half	.L2939-.L2938
	.byte	1,5,49,9
	.half	.L2940-.L2939
	.byte	3,125,1,5,46,9
	.half	.L336-.L2940
	.byte	1,5,11,7,9
	.half	.L2941-.L336
	.byte	3,23,1,5,28,9
	.half	.L2460-.L2941
	.byte	3,4,1,5,39,9
	.half	.L2462-.L2460
	.byte	3,4,1,5,20,9
	.half	.L2942-.L2462
	.byte	3,120,1,5,36,9
	.half	.L2943-.L2942
	.byte	1,5,9,9
	.half	.L339-.L2943
	.byte	3,4,1,5,26,9
	.half	.L2463-.L339
	.byte	1,5,9,9
	.half	.L2464-.L2463
	.byte	3,3,1,5,26,9
	.half	.L2465-.L2464
	.byte	1,5,9,9
	.half	.L2466-.L2465
	.byte	3,1,1,5,37,9
	.half	.L2944-.L2466
	.byte	1,5,9,9
	.half	.L2945-.L2944
	.byte	3,1,1,5,31,9
	.half	.L2946-.L2945
	.byte	1,5,35,9
	.half	.L2467-.L2946
	.byte	1,5,39,9
	.half	.L2468-.L2467
	.byte	3,119,1,5,36,9
	.half	.L338-.L2468
	.byte	1,5,11,7,9
	.half	.L2947-.L338
	.byte	3,14,1,5,43,9
	.half	.L2461-.L2947
	.byte	1,5,13,9
	.half	.L341-.L2461
	.byte	3,4,1,5,33,9
	.half	.L2948-.L341
	.byte	1,5,12,9
	.half	.L2949-.L2948
	.byte	3,126,1,5,43,9
	.half	.L2950-.L2949
	.byte	1,5,37,9
	.half	.L2951-.L2950
	.byte	3,2,1,5,46,9
	.half	.L2952-.L2951
	.byte	3,124,1,5,43,9
	.half	.L340-.L2952
	.byte	1,5,5,7,9
	.half	.L2953-.L340
	.byte	3,27,1,5,1,9
	.half	.L2954-.L2953
	.byte	3,1,1,7,9
	.half	.L1097-.L2954
	.byte	0,1,1
.L2930:
	.sdecl	'.debug_ranges',debug,cluster('Dem_PreInit')
	.sect	'.debug_ranges'
.L1096:
	.word	-1,.L959,0,.L1097-.L959,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_Init')
	.sect	'.debug_info'
.L1098:
	.word	228
	.half	3
	.word	.L1099
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1101,.L1100
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_Init',0,1,187,38,22,1,1,1
	.word	.L961,.L1601,.L960
	.byte	4
	.byte	'ConfigPtr',0,1,189,38,55
	.word	.L1602,.L1603
	.byte	5
	.word	.L961,.L1601
	.byte	6
	.byte	'i',0,1,192,38,12
	.word	.L1599,.L1604
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_Init')
	.sect	'.debug_abbrev'
.L1099:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_Init')
	.sect	'.debug_line'
.L1100:
	.word	.L2956-.L2955
.L2955:
	.half	3
	.word	.L2958-.L2957
.L2957:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L2958:
	.byte	5,36,7,0,5,2
	.word	.L961
	.byte	3,205,38,1,5,15,9
	.half	.L2470-.L961
	.byte	3,2,1,5,39,9
	.half	.L2471-.L2470
	.byte	3,3,1,5,24,9
	.half	.L2959-.L2471
	.byte	3,125,1,5,38,9
	.half	.L2960-.L2959
	.byte	1,5,13,9
	.half	.L343-.L2960
	.byte	3,3,1,5,33,9
	.half	.L2961-.L343
	.byte	1,5,37,9
	.half	.L2962-.L2961
	.byte	1,5,13,9
	.half	.L2963-.L2962
	.byte	3,2,1,5,31,9
	.half	.L2964-.L2963
	.byte	1,5,35,9
	.half	.L2965-.L2964
	.byte	1,5,41,9
	.half	.L2966-.L2965
	.byte	3,123,1,5,38,9
	.half	.L342-.L2966
	.byte	1,5,15,7,9
	.half	.L2967-.L342
	.byte	3,7,1,5,24,9
	.half	.L2472-.L2967
	.byte	1,5,40,9
	.half	.L2968-.L2472
	.byte	1,5,41,9
	.half	.L345-.L2968
	.byte	3,3,1,5,43,9
	.half	.L2475-.L345
	.byte	3,125,1,5,40,9
	.half	.L344-.L2475
	.byte	1,5,9,7,9
	.half	.L2969-.L344
	.byte	3,5,1,5,31,9
	.half	.L2970-.L2969
	.byte	1,5,29,9
	.half	.L2473-.L2970
	.byte	1,5,9,9
	.half	.L2971-.L2473
	.byte	3,2,1,5,45,9
	.half	.L2972-.L2971
	.byte	1,5,33,9
	.half	.L2973-.L2972
	.byte	3,7,1,5,42,9
	.half	.L2974-.L2973
	.byte	3,126,1,5,13,9
	.half	.L347-.L2974
	.byte	3,2,1,5,31,9
	.half	.L2975-.L347
	.byte	1,5,17,9
	.half	.L2976-.L2975
	.byte	3,3,1,5,16,9
	.half	.L2977-.L2976
	.byte	3,126,1,5,43,9
	.half	.L2978-.L2977
	.byte	1,5,33,9
	.half	.L2979-.L2978
	.byte	3,2,1,5,45,9
	.half	.L2980-.L2979
	.byte	3,123,1,5,42,9
	.half	.L346-.L2980
	.byte	1,5,20,7,9
	.half	.L2981-.L346
	.byte	3,18,1,5,9,9
	.half	.L2982-.L2981
	.byte	3,3,1,5,1,9
	.half	.L2983-.L2982
	.byte	3,4,1,7,9
	.half	.L1102-.L2983
	.byte	0,1,1
.L2956:
	.sdecl	'.debug_ranges',debug,cluster('Dem_Init')
	.sect	'.debug_ranges'
.L1101:
	.word	-1,.L961,0,.L1102-.L961,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_Shutdown')
	.sect	'.debug_info'
.L1103:
	.word	209
	.half	3
	.word	.L1104
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1106,.L1105
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_Shutdown',0,1,141,39,22,1,1,1
	.word	.L963,.L1605,.L962
	.byte	4
	.word	.L963,.L1605
	.byte	5
	.byte	'i',0,1,146,39,11
	.word	.L1606,.L1607
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_Shutdown')
	.sect	'.debug_abbrev'
.L1104:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_Shutdown')
	.sect	'.debug_line'
.L1105:
	.word	.L2985-.L2984
.L2984:
	.half	3
	.word	.L2987-.L2986
.L2986:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L2987:
	.byte	5,8,7,0,5,2
	.word	.L963
	.byte	3,149,39,1,5,5,9
	.half	.L2988-.L963
	.byte	1,5,15,7,9
	.half	.L2989-.L2988
	.byte	3,2,1,5,31,9
	.half	.L2477-.L2989
	.byte	3,3,1,5,37,9
	.half	.L2478-.L2477
	.byte	3,3,1,5,42,9
	.half	.L2990-.L2478
	.byte	3,122,1,5,13,9
	.half	.L350-.L2990
	.byte	3,3,1,5,29,9
	.half	.L2479-.L350
	.byte	1,5,16,9
	.half	.L2480-.L2479
	.byte	3,1,1,5,30,9
	.half	.L2991-.L2480
	.byte	1,5,13,9
	.half	.L2992-.L2991
	.byte	1,5,17,7,9
	.half	.L2993-.L2992
	.byte	3,2,1,5,35,9
	.half	.L2994-.L2993
	.byte	1,5,45,9
	.half	.L2995-.L2994
	.byte	3,1,1,9
	.half	.L351-.L2995
	.byte	3,121,1,5,42,9
	.half	.L349-.L351
	.byte	1,5,9,7,9
	.half	.L2996-.L349
	.byte	3,11,1,5,1,9
	.half	.L348-.L2996
	.byte	3,3,1,7,9
	.half	.L1107-.L348
	.byte	0,1,1
.L2985:
	.sdecl	'.debug_ranges',debug,cluster('Dem_Shutdown')
	.sect	'.debug_ranges'
.L1106:
	.word	-1,.L963,0,.L1107-.L963,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_ReportErrorStatus')
	.sect	'.debug_info'
.L1108:
	.word	281
	.half	3
	.word	.L1109
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1111,.L1110
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_ReportErrorStatus',0,1,187,39,22,1,1,1
	.word	.L965,.L1608,.L964
	.byte	4
	.byte	'EventId',0,1,189,39,21
	.word	.L1599,.L1609
	.byte	4
	.byte	'EventStatus',0,1,190,39,25
	.word	.L1606,.L1610
	.byte	5
	.word	.L965,.L1608
	.byte	6
	.byte	'ret',0,1,195,39,20
	.word	.L1606,.L1611
	.byte	6
	.byte	'i',0,1,197,39,11
	.word	.L1606,.L1612
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_ReportErrorStatus')
	.sect	'.debug_abbrev'
.L1109:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_ReportErrorStatus')
	.sect	'.debug_line'
.L1110:
	.word	.L2998-.L2997
.L2997:
	.half	3
	.word	.L3000-.L2999
.L2999:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3000:
	.byte	5,24,7,0,5,2
	.word	.L965
	.byte	3,194,39,1,5,8,9
	.half	.L2482-.L965
	.byte	3,4,1,5,5,9
	.half	.L3001-.L2482
	.byte	1,5,24,7,9
	.half	.L3002-.L3001
	.byte	3,5,1,5,10,9
	.half	.L3003-.L3002
	.byte	1,5,13,7,9
	.half	.L3004-.L3003
	.byte	3,4,1,5,10,9
	.half	.L3005-.L3004
	.byte	1,5,13,7,9
	.half	.L3006-.L3005
	.byte	3,4,1,5,17,7,9
	.half	.L3007-.L3006
	.byte	3,1,1,5,52,9
	.half	.L3008-.L3007
	.byte	1,5,14,7,9
	.half	.L355-.L3008
	.byte	3,5,1,5,13,9
	.half	.L3009-.L355
	.byte	1,5,17,7,9
	.half	.L3010-.L3009
	.byte	3,1,1,5,44,9
	.half	.L3011-.L3010
	.byte	1,5,17,7,9
	.half	.L3012-.L3011
	.byte	3,1,1,5,52,9
	.half	.L3013-.L3012
	.byte	1,5,14,7,9
	.half	.L357-.L3013
	.byte	3,13,1,5,30,7,9
	.half	.L3014-.L357
	.byte	3,1,1,5,17,7,9
	.half	.L360-.L3014
	.byte	3,1,1,5,52,9
	.half	.L3015-.L360
	.byte	1,5,12,7,9
	.half	.L361-.L3015
	.byte	3,8,1,5,9,9
	.half	.L3016-.L361
	.byte	1,5,19,7,9
	.half	.L3017-.L3016
	.byte	3,2,1,5,57,9
	.half	.L2483-.L3017
	.byte	1,5,42,9
	.half	.L365-.L2483
	.byte	3,2,1,5,71,9
	.half	.L3018-.L365
	.byte	1,5,20,9
	.half	.L3019-.L3018
	.byte	1,5,40,9
	.half	.L3020-.L3019
	.byte	1,5,17,9
	.half	.L3021-.L3020
	.byte	1,5,25,7,9
	.half	.L3022-.L3021
	.byte	3,2,1,5,21,9
	.half	.L3023-.L3022
	.byte	3,1,1,5,60,9
	.half	.L366-.L3023
	.byte	3,123,1,5,28,9
	.half	.L364-.L366
	.byte	1,5,57,9
	.half	.L3024-.L364
	.byte	1,5,9,7,9
	.half	.L363-.L3024
	.byte	3,9,1,5,19,7,9
	.half	.L3025-.L363
	.byte	3,4,1,5,44,9
	.half	.L2485-.L3025
	.byte	3,2,1,5,54,9
	.half	.L3026-.L2485
	.byte	3,126,1,5,20,9
	.half	.L370-.L3026
	.byte	3,2,1,5,37,9
	.half	.L3027-.L370
	.byte	1,5,17,9
	.half	.L3028-.L3027
	.byte	1,5,21,7,9
	.half	.L3029-.L3028
	.byte	3,2,1,5,38,9
	.half	.L3030-.L3029
	.byte	1,5,42,9
	.half	.L3031-.L3030
	.byte	1,5,21,9
	.half	.L3032-.L3031
	.byte	3,1,1,5,39,9
	.half	.L3033-.L3032
	.byte	1,5,43,9
	.half	.L3034-.L3033
	.byte	1,5,1,9
	.half	.L352-.L3034
	.byte	3,7,1,5,57,7,9
	.half	.L371-.L352
	.byte	3,116,1,5,54,9
	.half	.L369-.L371
	.byte	1,5,1,7,9
	.half	.L3035-.L369
	.byte	3,12,1,7,9
	.half	.L1112-.L3035
	.byte	0,1,1
.L2998:
	.sdecl	'.debug_ranges',debug,cluster('Dem_ReportErrorStatus')
	.sect	'.debug_ranges'
.L1111:
	.word	-1,.L965,0,.L1112-.L965,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_SetEventStatus')
	.sect	'.debug_info'
.L1113:
	.word	285
	.half	3
	.word	.L1114
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1116,.L1115
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_SetEventStatus',0,1,254,40,32
	.word	.L1606
	.byte	1,1,1
	.word	.L967,.L1613,.L966
	.byte	4
	.byte	'EventId',0,1,128,41,21
	.word	.L1599,.L1614
	.byte	4
	.byte	'EventStatus',0,1,129,41,25
	.word	.L1606,.L1615
	.byte	5
	.word	.L967,.L1613
	.byte	6
	.byte	'Result',0,1,132,41,20
	.word	.L1606,.L1616
	.byte	6
	.byte	'i',0,1,134,41,11
	.word	.L1606,.L1617
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_SetEventStatus')
	.sect	'.debug_abbrev'
.L1114:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_SetEventStatus')
	.sect	'.debug_line'
.L1115:
	.word	.L3037-.L3036
.L3036:
	.half	3
	.word	.L3039-.L3038
.L3038:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3039:
	.byte	5,27,7,0,5,2
	.word	.L967
	.byte	3,131,41,1,5,8,9
	.half	.L2486-.L967
	.byte	3,5,1,5,5,9
	.half	.L3040-.L2486
	.byte	1,5,24,7,9
	.half	.L3041-.L3040
	.byte	3,5,1,5,10,9
	.half	.L3042-.L3041
	.byte	1,5,13,7,9
	.half	.L3043-.L3042
	.byte	3,4,1,5,10,9
	.half	.L3044-.L3043
	.byte	1,5,14,7,9
	.half	.L3045-.L3044
	.byte	3,11,1,5,30,7,9
	.half	.L3046-.L3045
	.byte	3,1,1,5,17,7,9
	.half	.L376-.L3046
	.byte	3,1,1,5,52,9
	.half	.L3047-.L376
	.byte	1,5,16,7,9
	.half	.L377-.L3047
	.byte	3,6,1,5,12,9
	.half	.L3048-.L377
	.byte	3,4,1,5,9,9
	.half	.L3049-.L3048
	.byte	1,5,19,7,9
	.half	.L3050-.L3049
	.byte	3,2,1,5,57,9
	.half	.L2487-.L3050
	.byte	1,5,42,9
	.half	.L381-.L2487
	.byte	3,2,1,5,71,9
	.half	.L3051-.L381
	.byte	1,5,20,9
	.half	.L3052-.L3051
	.byte	1,5,40,9
	.half	.L3053-.L3052
	.byte	1,5,17,9
	.half	.L3054-.L3053
	.byte	1,5,28,7,9
	.half	.L3055-.L3054
	.byte	3,2,1,5,21,9
	.half	.L3056-.L3055
	.byte	3,1,1,5,60,9
	.half	.L382-.L3056
	.byte	3,123,1,5,28,9
	.half	.L380-.L382
	.byte	1,5,57,9
	.half	.L3057-.L380
	.byte	1,5,9,7,9
	.half	.L379-.L3057
	.byte	3,9,1,5,49,7,9
	.half	.L3058-.L379
	.byte	3,3,1,5,5,9
	.half	.L373-.L3058
	.byte	3,3,1,5,1,9
	.half	.L2489-.L373
	.byte	3,1,1,7,9
	.half	.L1117-.L2489
	.byte	0,1,1
.L3037:
	.sdecl	'.debug_ranges',debug,cluster('Dem_SetEventStatus')
	.sect	'.debug_ranges'
.L1116:
	.word	-1,.L967,0,.L1117-.L967,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_ResetEventDebounceStatus')
	.sect	'.debug_info'
.L1118:
	.word	288
	.half	3
	.word	.L1119
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1121,.L1120
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_ResetEventDebounceStatus',0,1,210,41,32
	.word	.L1606
	.byte	1,1,1
	.word	.L969,.L1618,.L968
	.byte	4
	.byte	'EventId',0,1,212,41,21
	.word	.L1599,.L1619
	.byte	4
	.byte	'DebounceResetStatus',0,1,213,41,33
	.word	.L1606,.L1620
	.byte	5
	.word	.L969,.L1618
	.byte	6
	.byte	'Result',0,1,216,41,20
	.word	.L1606,.L1621
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_ResetEventDebounceStatus')
	.sect	'.debug_abbrev'
.L1119:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_ResetEventDebounceStatus')
	.sect	'.debug_line'
.L1120:
	.word	.L3060-.L3059
.L3059:
	.half	3
	.word	.L3062-.L3061
.L3061:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3062:
	.byte	5,27,7,0,5,2
	.word	.L969
	.byte	3,215,41,1,5,8,9
	.half	.L2490-.L969
	.byte	3,2,1,5,5,9
	.half	.L3063-.L2490
	.byte	1,5,13,7,9
	.half	.L3064-.L3063
	.byte	3,7,1,5,43,7,9
	.half	.L3065-.L3064
	.byte	1,5,78,9
	.half	.L3066-.L3065
	.byte	1,5,9,7,9
	.half	.L387-.L3066
	.byte	3,17,1,5,13,7,9
	.half	.L3067-.L387
	.byte	3,4,1,5,35,9
	.half	.L3068-.L3067
	.byte	1,5,47,9
	.half	.L3069-.L3068
	.byte	1,5,45,9
	.half	.L3070-.L3069
	.byte	1,5,1,9
	.half	.L3071-.L3070
	.byte	3,21,1,5,14,7,9
	.half	.L389-.L3071
	.byte	3,110,1,5,13,7,9
	.half	.L3072-.L389
	.byte	3,4,1,5,38,9
	.half	.L3073-.L3072
	.byte	1,5,36,9
	.half	.L2491-.L3073
	.byte	1,5,13,9
	.half	.L3074-.L2491
	.byte	3,3,1,5,36,9
	.half	.L3075-.L3074
	.byte	1,5,13,9
	.half	.L3076-.L3075
	.byte	3,1,1,5,49,9
	.half	.L3077-.L3076
	.byte	1,5,47,9
	.half	.L3078-.L3077
	.byte	1,5,13,9
	.half	.L3079-.L3078
	.byte	3,1,1,5,35,9
	.half	.L3080-.L3079
	.byte	1,5,45,9
	.half	.L3081-.L3080
	.byte	1,5,1,9
	.half	.L3082-.L3081
	.byte	3,9,1,5,20,7,9
	.half	.L386-.L3082
	.byte	3,124,1,5,1,9
	.half	.L3083-.L386
	.byte	3,4,1,7,9
	.half	.L1122-.L3083
	.byte	0,1,1
.L3060:
	.sdecl	'.debug_ranges',debug,cluster('Dem_ResetEventDebounceStatus')
	.sect	'.debug_ranges'
.L1121:
	.word	-1,.L969,0,.L1122-.L969,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_ResetEventStatus')
	.sect	'.debug_info'
.L1123:
	.word	303
	.half	3
	.word	.L1124
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1126,.L1125
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_ResetEventStatus',0,1,159,42,32
	.word	.L1606
	.byte	1,1,1
	.word	.L971,.L1622,.L970
	.byte	4
	.byte	'EventId',0,1,161,42,21
	.word	.L1599,.L1623
	.byte	5
	.word	.L971,.L1622
	.byte	6
	.byte	'Result',0,1,164,42,20
	.word	.L1606,.L1624
	.byte	6
	.byte	'EventOldStatus',0,1,165,42,11
	.word	.L1606,.L1625
	.byte	6
	.byte	'EventNewStatus',0,1,166,42,11
	.word	.L1606,.L1626
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_ResetEventStatus')
	.sect	'.debug_abbrev'
.L1124:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_ResetEventStatus')
	.sect	'.debug_line'
.L1125:
	.word	.L3085-.L3084
.L3084:
	.half	3
	.word	.L3087-.L3086
.L3086:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3087:
	.byte	5,32,7,0,5,2
	.word	.L971
	.byte	3,158,42,1,5,27,9
	.half	.L2493-.L971
	.byte	3,5,1,5,8,9
	.half	.L2494-.L2493
	.byte	3,4,1,5,5,9
	.half	.L3088-.L2494
	.byte	1,5,24,7,9
	.half	.L3089-.L3088
	.byte	3,6,1,5,10,9
	.half	.L3090-.L3089
	.byte	1,5,13,7,9
	.half	.L3091-.L3090
	.byte	3,13,1,5,33,9
	.half	.L3092-.L3091
	.byte	1,5,10,9
	.half	.L3093-.L3092
	.byte	1,5,26,7,9
	.half	.L3094-.L3093
	.byte	3,8,1,5,9,9
	.half	.L2495-.L3094
	.byte	3,2,1,5,30,7,9
	.half	.L3095-.L2495
	.byte	3,3,1,5,13,9
	.half	.L2496-.L3095
	.byte	3,2,1,5,59,9
	.half	.L3096-.L2496
	.byte	1,5,13,9
	.half	.L3097-.L3096
	.byte	3,2,1,5,23,7,9
	.half	.L3098-.L3097
	.byte	3,2,1,5,57,9
	.half	.L3099-.L3098
	.byte	1,5,123,9
	.half	.L2492-.L3099
	.byte	1,5,20,9
	.half	.L2498-.L2492
	.byte	3,1,1,5,32,9
	.half	.L3100-.L2498
	.byte	1,5,17,9
	.half	.L3101-.L3100
	.byte	1,5,27,7,9
	.half	.L3102-.L3101
	.byte	3,3,1,5,88,9
	.half	.L3103-.L3102
	.byte	1,5,70,9
	.half	.L399-.L3103
	.byte	3,3,1,5,13,9
	.half	.L398-.L399
	.byte	3,5,1,5,38,9
	.half	.L3104-.L398
	.byte	1,5,36,9
	.half	.L3105-.L3104
	.byte	1,5,13,9
	.half	.L3106-.L3105
	.byte	3,3,1,5,36,9
	.half	.L3107-.L3106
	.byte	1,5,13,9
	.half	.L3108-.L3107
	.byte	3,1,1,5,49,9
	.half	.L3109-.L3108
	.byte	1,5,47,9
	.half	.L3110-.L3109
	.byte	1,5,13,9
	.half	.L3111-.L3110
	.byte	3,1,1,5,35,9
	.half	.L3112-.L3111
	.byte	1,5,45,9
	.half	.L3113-.L3112
	.byte	1,5,39,9
	.half	.L3114-.L3113
	.byte	3,123,1,5,20,9
	.half	.L394-.L3114
	.byte	3,10,1,5,5,9
	.half	.L400-.L394
	.byte	3,3,1,5,1,9
	.half	.L2501-.L400
	.byte	3,1,1,7,9
	.half	.L1127-.L2501
	.byte	0,1,1
.L3085:
	.sdecl	'.debug_ranges',debug,cluster('Dem_ResetEventStatus')
	.sect	'.debug_ranges'
.L1126:
	.word	-1,.L971,0,.L1127-.L971,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_SetOperationCycleState')
	.sect	'.debug_info'
.L1128:
	.word	286
	.half	3
	.word	.L1129
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1131,.L1130
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_SetOperationCycleState',0,1,193,43,32
	.word	.L1606
	.byte	1,1,1
	.word	.L973,.L1627,.L972
	.byte	4
	.byte	'OperationCycleId',0,1,195,43,11
	.word	.L1606,.L1628
	.byte	4
	.byte	'CycleState',0,1,196,43,33
	.word	.L1606,.L1629
	.byte	5
	.word	.L973,.L1627
	.byte	6
	.byte	'Result',0,1,200,43,20
	.word	.L1606,.L1630
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_SetOperationCycleState')
	.sect	'.debug_abbrev'
.L1129:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_SetOperationCycleState')
	.sect	'.debug_line'
.L1130:
	.word	.L3116-.L3115
.L3115:
	.half	3
	.word	.L3118-.L3117
.L3117:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3118:
	.byte	5,27,7,0,5,2
	.word	.L973
	.byte	3,199,43,1,5,8,9
	.half	.L2502-.L973
	.byte	3,2,1,5,5,9
	.half	.L3119-.L2502
	.byte	1,5,10,7,9
	.half	.L3120-.L3119
	.byte	3,5,1,5,13,7,9
	.half	.L3121-.L3120
	.byte	3,4,1,5,66,7,9
	.half	.L3122-.L3121
	.byte	1,5,9,7,9
	.half	.L404-.L3122
	.byte	3,6,1,5,40,9
	.half	.L3123-.L404
	.byte	1,5,16,9
	.half	.L3124-.L3123
	.byte	3,1,1,5,1,9
	.half	.L402-.L3124
	.byte	3,3,1,7,9
	.half	.L1132-.L402
	.byte	0,1,1
.L3116:
	.sdecl	'.debug_ranges',debug,cluster('Dem_SetOperationCycleState')
	.sect	'.debug_ranges'
.L1131:
	.word	-1,.L973,0,.L1132-.L973,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_GetOperationCycleState')
	.sect	'.debug_info'
.L1133:
	.word	286
	.half	3
	.word	.L1134
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1136,.L1135
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_GetOperationCycleState',0,1,242,43,32
	.word	.L1606
	.byte	1,1,1
	.word	.L975,.L1631,.L974
	.byte	4
	.byte	'OperationCycleId',0,1,244,43,11
	.word	.L1606,.L1632
	.byte	4
	.byte	'CycleState',0,1,245,43,66
	.word	.L1633,.L1634
	.byte	5
	.word	.L975,.L1631
	.byte	6
	.byte	'Result',0,1,248,43,20
	.word	.L1606,.L1635
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_GetOperationCycleState')
	.sect	'.debug_abbrev'
.L1134:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_GetOperationCycleState')
	.sect	'.debug_line'
.L1135:
	.word	.L3126-.L3125
.L3125:
	.half	3
	.word	.L3128-.L3127
.L3127:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3128:
	.byte	5,27,7,0,5,2
	.word	.L975
	.byte	3,247,43,1,5,8,9
	.half	.L2503-.L975
	.byte	3,2,1,5,5,9
	.half	.L3129-.L2503
	.byte	1,5,10,7,9
	.half	.L3130-.L3129
	.byte	3,5,1,7,9
	.half	.L3131-.L3130
	.byte	3,4,1,5,23,7,9
	.half	.L3132-.L3131
	.byte	3,6,1,5,37,9
	.half	.L3133-.L3132
	.byte	1,5,21,9
	.half	.L3134-.L3133
	.byte	1,5,16,9
	.half	.L3135-.L3134
	.byte	3,1,1,5,1,9
	.half	.L407-.L3135
	.byte	3,3,1,7,9
	.half	.L1137-.L407
	.byte	0,1,1
.L3126:
	.sdecl	'.debug_ranges',debug,cluster('Dem_GetOperationCycleState')
	.sect	'.debug_ranges'
.L1136:
	.word	-1,.L975,0,.L1137-.L975,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_SetAgingCycleState')
	.sect	'.debug_info'
.L1138:
	.word	258
	.half	3
	.word	.L1139
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1141,.L1140
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_SetAgingCycleState',0,1,161,44,32
	.word	.L1606
	.byte	1,1,1
	.word	.L977,.L1636,.L976
	.byte	4
	.byte	'OperationCycleId',0,1,163,44,11
	.word	.L1606,.L1637
	.byte	5
	.word	.L977,.L1636
	.byte	6
	.byte	'Result',0,1,166,44,20
	.word	.L1606,.L1638
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_SetAgingCycleState')
	.sect	'.debug_abbrev'
.L1139:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_SetAgingCycleState')
	.sect	'.debug_line'
.L1140:
	.word	.L3137-.L3136
.L3136:
	.half	3
	.word	.L3139-.L3138
.L3138:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3139:
	.byte	5,59,7,0,5,2
	.word	.L977
	.byte	3,167,44,1,5,1,9
	.half	.L1142-.L977
	.byte	3,3,0,1,1
.L3137:
	.sdecl	'.debug_ranges',debug,cluster('Dem_SetAgingCycleState')
	.sect	'.debug_ranges'
.L1141:
	.word	-1,.L977,0,.L1142-.L977,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_SetWIRStatus')
	.sect	'.debug_info'
.L1143:
	.word	266
	.half	3
	.word	.L1144
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1146,.L1145
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_SetWIRStatus',0,1,197,44,32
	.word	.L1606
	.byte	1,1,1
	.word	.L979,.L1639,.L978
	.byte	4
	.byte	'EventId',0,1,199,44,21
	.word	.L1599,.L1640
	.byte	4
	.byte	'WIRStatus',0,1,200,44,13
	.word	.L1606,.L1641
	.byte	5
	.word	.L979,.L1639
	.byte	6
	.byte	'Result',0,1,203,44,20
	.word	.L1606,.L1642
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_SetWIRStatus')
	.sect	'.debug_abbrev'
.L1144:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_SetWIRStatus')
	.sect	'.debug_line'
.L1145:
	.word	.L3141-.L3140
.L3140:
	.half	3
	.word	.L3143-.L3142
.L3142:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3143:
	.byte	5,27,7,0,5,2
	.word	.L979
	.byte	3,202,44,1,5,1,9
	.half	.L2504-.L979
	.byte	3,217,0,1,7,9
	.half	.L1147-.L2504
	.byte	0,1,1
.L3141:
	.sdecl	'.debug_ranges',debug,cluster('Dem_SetWIRStatus')
	.sect	'.debug_ranges'
.L1146:
	.word	-1,.L979,0,.L1147-.L979,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_GetComponentFailed')
	.sect	'.debug_info'
.L1148:
	.word	282
	.half	3
	.word	.L1149
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1151,.L1150
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_GetComponentFailed',0,1,183,45,32
	.word	.L1606
	.byte	1,1,1
	.word	.L981,.L1643,.L980
	.byte	4
	.byte	'ComponentId',0,1,185,45,25
	.word	.L1599,.L1644
	.byte	4
	.byte	'ComponentFailed',0,1,186,45,46
	.word	.L1645,.L1646
	.byte	5
	.word	.L981,.L1643
	.byte	6
	.byte	'Result',0,1,189,45,20
	.word	.L1606,.L1647
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_GetComponentFailed')
	.sect	'.debug_abbrev'
.L1149:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_GetComponentFailed')
	.sect	'.debug_line'
.L1150:
	.word	.L3145-.L3144
.L3144:
	.half	3
	.word	.L3147-.L3146
.L3146:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3147:
	.byte	5,27,7,0,5,2
	.word	.L981
	.byte	3,188,45,1,5,1,9
	.half	.L2505-.L981
	.byte	3,4,1,7,9
	.half	.L1152-.L2505
	.byte	0,1,1
.L3145:
	.sdecl	'.debug_ranges',debug,cluster('Dem_GetComponentFailed')
	.sect	'.debug_ranges'
.L1151:
	.word	-1,.L981,0,.L1152-.L981,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_GetEventStatus')
	.sect	'.debug_info'
.L1153:
	.word	274
	.half	3
	.word	.L1154
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1156,.L1155
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_GetEventStatus',0,1,214,45,32
	.word	.L1606
	.byte	1,1,1
	.word	.L983,.L1648,.L982
	.byte	4
	.byte	'EventId',0,1,216,45,21
	.word	.L1599,.L1649
	.byte	4
	.byte	'EventStatusByte',0,1,217,45,60
	.word	.L1650,.L1651
	.byte	5
	.word	.L983,.L1648
	.byte	6
	.byte	'Result',0,1,220,45,20
	.word	.L1606,.L1652
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_GetEventStatus')
	.sect	'.debug_abbrev'
.L1154:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_GetEventStatus')
	.sect	'.debug_line'
.L1155:
	.word	.L3149-.L3148
.L3148:
	.half	3
	.word	.L3151-.L3150
.L3150:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3151:
	.byte	5,27,7,0,5,2
	.word	.L983
	.byte	3,219,45,1,5,8,9
	.half	.L2506-.L983
	.byte	3,2,1,5,5,9
	.half	.L3152-.L2506
	.byte	1,5,10,7,9
	.half	.L3153-.L3152
	.byte	3,5,1,5,24,7,9
	.half	.L3154-.L3153
	.byte	3,4,1,5,10,9
	.half	.L3155-.L3154
	.byte	1,5,28,7,9
	.half	.L3156-.L3155
	.byte	3,14,1,5,26,9
	.half	.L3157-.L3156
	.byte	3,1,1,5,16,9
	.half	.L3158-.L3157
	.byte	3,1,1,5,1,9
	.half	.L414-.L3158
	.byte	3,3,1,7,9
	.half	.L1157-.L414
	.byte	0,1,1
.L3149:
	.sdecl	'.debug_ranges',debug,cluster('Dem_GetEventStatus')
	.sect	'.debug_ranges'
.L1156:
	.word	-1,.L983,0,.L1157-.L983,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_GetEventFailed')
	.sect	'.debug_info'
.L1158:
	.word	290
	.half	3
	.word	.L1159
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1161,.L1160
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_GetEventFailed',0,1,141,46,32
	.word	.L1606
	.byte	1,1,1
	.word	.L985,.L1653,.L984
	.byte	4
	.byte	'EventId',0,1,143,46,21
	.word	.L1599,.L1654
	.byte	4
	.byte	'EventFailed',0,1,144,46,46
	.word	.L1645,.L1655
	.byte	5
	.word	.L985,.L1653
	.byte	6
	.byte	'Result',0,1,148,46,20
	.word	.L1606,.L1656
	.byte	6
	.byte	'Status',0,1,149,46,27
	.word	.L1606,.L1657
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_GetEventFailed')
	.sect	'.debug_abbrev'
.L1159:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_GetEventFailed')
	.sect	'.debug_line'
.L1160:
	.word	.L3160-.L3159
.L3159:
	.half	3
	.word	.L3162-.L3161
.L3161:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3162:
	.byte	5,27,7,0,5,2
	.word	.L985
	.byte	3,147,46,1,5,8,9
	.half	.L2507-.L985
	.byte	3,3,1,5,5,9
	.half	.L3163-.L2507
	.byte	1,5,10,7,9
	.half	.L3164-.L3163
	.byte	3,5,1,5,24,7,9
	.half	.L3165-.L3164
	.byte	3,4,1,5,10,9
	.half	.L3166-.L3165
	.byte	1,5,18,7,9
	.half	.L3167-.L3166
	.byte	3,13,1,5,12,9
	.half	.L2508-.L3167
	.byte	3,2,1,5,50,7,9
	.half	.L3168-.L2508
	.byte	1,5,26,7,9
	.half	.L3169-.L3168
	.byte	3,2,1,5,32,9
	.half	.L3170-.L3169
	.byte	1,5,28,9
	.half	.L421-.L3170
	.byte	3,4,1,5,26,9
	.half	.L2509-.L421
	.byte	1,5,16,9
	.half	.L423-.L2509
	.byte	3,2,1,5,1,9
	.half	.L418-.L423
	.byte	3,3,1,7,9
	.half	.L1162-.L418
	.byte	0,1,1
.L3160:
	.sdecl	'.debug_ranges',debug,cluster('Dem_GetEventFailed')
	.sect	'.debug_ranges'
.L1161:
	.word	-1,.L985,0,.L1162-.L985,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_GetEventTested')
	.sect	'.debug_info'
.L1163:
	.word	290
	.half	3
	.word	.L1164
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1166,.L1165
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_GetEventTested',0,1,205,46,32
	.word	.L1606
	.byte	1,1,1
	.word	.L987,.L1658,.L986
	.byte	4
	.byte	'EventId',0,1,207,46,21
	.word	.L1599,.L1659
	.byte	4
	.byte	'EventTested',0,1,208,46,46
	.word	.L1645,.L1660
	.byte	5
	.word	.L987,.L1658
	.byte	6
	.byte	'Result',0,1,212,46,20
	.word	.L1606,.L1661
	.byte	6
	.byte	'Status',0,1,213,46,27
	.word	.L1606,.L1662
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_GetEventTested')
	.sect	'.debug_abbrev'
.L1164:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_GetEventTested')
	.sect	'.debug_line'
.L1165:
	.word	.L3172-.L3171
.L3171:
	.half	3
	.word	.L3174-.L3173
.L3173:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3174:
	.byte	5,27,7,0,5,2
	.word	.L987
	.byte	3,211,46,1,5,8,9
	.half	.L2510-.L987
	.byte	3,3,1,5,5,9
	.half	.L3175-.L2510
	.byte	1,5,10,7,9
	.half	.L3176-.L3175
	.byte	3,5,1,5,24,7,9
	.half	.L3177-.L3176
	.byte	3,4,1,5,10,9
	.half	.L3178-.L3177
	.byte	1,5,18,7,9
	.half	.L3179-.L3178
	.byte	3,13,1,5,12,9
	.half	.L2511-.L3179
	.byte	3,2,1,5,26,9
	.half	.L3180-.L2511
	.byte	3,2,1,5,16,9
	.half	.L3181-.L3180
	.byte	3,6,1,5,1,9
	.half	.L425-.L3181
	.byte	3,3,1,7,9
	.half	.L1167-.L425
	.byte	0,1,1
.L3172:
	.sdecl	'.debug_ranges',debug,cluster('Dem_GetEventTested')
	.sect	'.debug_ranges'
.L1166:
	.word	-1,.L987,0,.L1167-.L987,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_GetDebouncingOfEvent')
	.sect	'.debug_info'
.L1168:
	.word	280
	.half	3
	.word	.L1169
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1171,.L1170
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_GetDebouncingOfEvent',0,1,142,47,32
	.word	.L1606
	.byte	1,1,1
	.word	.L989,.L1663,.L988
	.byte	4
	.byte	'EventId',0,1,144,47,21
	.word	.L1599,.L1664
	.byte	4
	.byte	'DebouncingState',0,1,145,47,62
	.word	.L1665,.L1666
	.byte	5
	.word	.L989,.L1663
	.byte	6
	.byte	'Result',0,1,148,47,20
	.word	.L1606,.L1667
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_GetDebouncingOfEvent')
	.sect	'.debug_abbrev'
.L1169:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_GetDebouncingOfEvent')
	.sect	'.debug_line'
.L1170:
	.word	.L3183-.L3182
.L3182:
	.half	3
	.word	.L3185-.L3184
.L3184:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3185:
	.byte	5,27,7,0,5,2
	.word	.L989
	.byte	3,147,47,1,5,8,9
	.half	.L2513-.L989
	.byte	3,2,1,5,5,9
	.half	.L3186-.L2513
	.byte	1,5,10,7,9
	.half	.L3187-.L3186
	.byte	3,6,1,5,24,7,9
	.half	.L3188-.L3187
	.byte	3,5,1,5,10,9
	.half	.L3189-.L3188
	.byte	1,5,12,7,9
	.half	.L3190-.L3189
	.byte	3,17,1,5,9,9
	.half	.L3191-.L3190
	.byte	1,5,17,7,9
	.half	.L3192-.L3191
	.byte	3,2,1,5,16,9
	.half	.L3193-.L3192
	.byte	1,5,25,7,9
	.half	.L3194-.L3193
	.byte	3,1,1,5,50,9
	.half	.L3195-.L3194
	.byte	1,5,48,9
	.half	.L3196-.L3195
	.byte	1,5,36,7,9
	.half	.L3197-.L3196
	.byte	3,2,1,5,34,9
	.half	.L3198-.L3197
	.byte	1,5,61,9
	.half	.L3199-.L3198
	.byte	1,5,22,9
	.half	.L433-.L3199
	.byte	3,2,1,5,21,9
	.half	.L3200-.L433
	.byte	1,5,25,7,9
	.half	.L3201-.L3200
	.byte	3,1,1,5,50,9
	.half	.L3202-.L3201
	.byte	1,5,48,9
	.half	.L3203-.L3202
	.byte	1,5,36,7,9
	.half	.L3204-.L3203
	.byte	3,2,1,5,34,9
	.half	.L3205-.L3204
	.byte	1,5,58,9
	.half	.L3206-.L3205
	.byte	1,5,21,9
	.half	.L436-.L3206
	.byte	3,2,1,5,47,9
	.half	.L3207-.L436
	.byte	1,5,18,9
	.half	.L3208-.L3207
	.byte	1,5,36,7,9
	.half	.L3209-.L3208
	.byte	3,2,1,5,34,9
	.half	.L3210-.L3209
	.byte	1,5,53,9
	.half	.L3211-.L3210
	.byte	1,5,21,9
	.half	.L439-.L3211
	.byte	3,2,1,5,47,9
	.half	.L3212-.L439
	.byte	1,5,18,9
	.half	.L3213-.L3212
	.byte	1,5,20,7,9
	.half	.L3214-.L3213
	.byte	3,2,1,5,75,9
	.half	.L3215-.L3214
	.byte	1,5,17,9
	.half	.L3216-.L3215
	.byte	1,5,40,7,9
	.half	.L3217-.L3216
	.byte	3,2,1,5,38,9
	.half	.L3218-.L3217
	.byte	1,5,61,9
	.half	.L3219-.L3218
	.byte	1,5,40,9
	.half	.L442-.L3219
	.byte	3,4,1,5,38,9
	.half	.L3220-.L442
	.byte	1,5,17,9
	.half	.L3221-.L3220
	.byte	3,126,1,5,24,9
	.half	.L441-.L3221
	.byte	3,7,1,5,12,9
	.half	.L432-.L441
	.byte	3,6,1,5,9,9
	.half	.L3222-.L432
	.byte	1,5,16,7,9
	.half	.L3223-.L3222
	.byte	3,2,1,5,13,9
	.half	.L3224-.L3223
	.byte	1,5,36,7,9
	.half	.L3225-.L3224
	.byte	3,2,1,5,34,9
	.half	.L3226-.L3225
	.byte	1,5,1,9
	.half	.L445-.L3226
	.byte	3,29,1,5,21,7,9
	.half	.L446-.L445
	.byte	3,101,1,5,18,9
	.half	.L3227-.L446
	.byte	1,5,36,7,9
	.half	.L3228-.L3227
	.byte	3,2,1,5,34,9
	.half	.L3229-.L3228
	.byte	1,5,1,9
	.half	.L3230-.L3229
	.byte	3,25,1,5,21,7,9
	.half	.L448-.L3230
	.byte	3,105,1,5,18,9
	.half	.L3231-.L448
	.byte	1,5,36,7,9
	.half	.L3232-.L3231
	.byte	3,2,1,5,34,9
	.half	.L3233-.L3232
	.byte	1,5,1,9
	.half	.L3234-.L3233
	.byte	3,21,1,5,21,7,9
	.half	.L450-.L3234
	.byte	3,109,1,5,18,9
	.half	.L3235-.L450
	.byte	1,5,20,7,9
	.half	.L3236-.L3235
	.byte	3,2,1,5,75,9
	.half	.L3237-.L3236
	.byte	1,5,17,9
	.half	.L3238-.L3237
	.byte	1,5,40,7,9
	.half	.L3239-.L3238
	.byte	3,2,1,5,38,9
	.half	.L3240-.L3239
	.byte	1,5,1,9
	.half	.L3241-.L3240
	.byte	3,15,1,5,40,7,9
	.half	.L453-.L3241
	.byte	3,117,1,5,38,9
	.half	.L3242-.L453
	.byte	1,5,1,9
	.half	.L3243-.L3242
	.byte	3,11,1,5,24,7,9
	.half	.L429-.L3243
	.byte	3,122,1,5,1,9
	.half	.L3244-.L429
	.byte	3,6,1,7,9
	.half	.L1172-.L3244
	.byte	0,1,1
.L3183:
	.sdecl	'.debug_ranges',debug,cluster('Dem_GetDebouncingOfEvent')
	.sect	'.debug_ranges'
.L1171:
	.word	-1,.L989,0,.L1172-.L989,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_GetDTCOfEvent')
	.sect	'.debug_info'
.L1173:
	.word	291
	.half	3
	.word	.L1174
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1176,.L1175
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_GetDTCOfEvent',0,1,141,48,32
	.word	.L1606
	.byte	1,1,1
	.word	.L991,.L1668,.L990
	.byte	4
	.byte	'EventId',0,1,143,48,21
	.word	.L1599,.L1669
	.byte	4
	.byte	'DTCFormat',0,1,144,48,23
	.word	.L1606,.L1670
	.byte	4
	.byte	'DTCOfEvent',0,1,145,48,45
	.word	.L1671,.L1672
	.byte	5
	.word	.L991,.L1668
	.byte	6
	.byte	'Result',0,1,148,48,20
	.word	.L1606,.L1673
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_GetDTCOfEvent')
	.sect	'.debug_abbrev'
.L1174:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_GetDTCOfEvent')
	.sect	'.debug_line'
.L1175:
	.word	.L3246-.L3245
.L3245:
	.half	3
	.word	.L3248-.L3247
.L3247:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3248:
	.byte	5,27,7,0,5,2
	.word	.L991
	.byte	3,147,48,1,5,19,9
	.half	.L2514-.L991
	.byte	3,2,1,5,5,9
	.half	.L3249-.L2514
	.byte	1,5,9,7,9
	.half	.L3250-.L3249
	.byte	3,15,1,5,16,7,9
	.half	.L3251-.L3250
	.byte	3,2,1,5,13,9
	.half	.L3252-.L3251
	.byte	1,5,31,7,9
	.half	.L3253-.L3252
	.byte	3,2,1,5,29,9
	.half	.L3254-.L3253
	.byte	1,5,1,9
	.half	.L459-.L3254
	.byte	3,29,1,5,20,7,9
	.half	.L457-.L459
	.byte	3,124,1,5,1,9
	.half	.L3255-.L457
	.byte	3,4,1,7,9
	.half	.L1177-.L3255
	.byte	0,1,1
.L3246:
	.sdecl	'.debug_ranges',debug,cluster('Dem_GetDTCOfEvent')
	.sect	'.debug_ranges'
.L1176:
	.word	-1,.L991,0,.L1177-.L991,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_SetEnableCondition')
	.sect	'.debug_info'
.L1178:
	.word	327
	.half	3
	.word	.L1179
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1181,.L1180
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_SetEnableCondition',0,1,220,48,32
	.word	.L1606
	.byte	1,1,1
	.word	.L993,.L1674,.L992
	.byte	4
	.byte	'EnableConditionID',0,1,222,48,11
	.word	.L1606,.L1675
	.byte	4
	.byte	'ConditionFulfilled',0,1,223,48,13
	.word	.L1606,.L1676
	.byte	5
	.word	.L993,.L1674
	.byte	6
	.byte	'Result',0,1,227,48,20
	.word	.L1606,.L1677
	.byte	6
	.byte	'EventId',0,1,228,48,21
	.word	.L1599,.L1678
	.byte	6
	.byte	'i',0,1,229,48,11
	.word	.L1606,.L1679
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_SetEnableCondition')
	.sect	'.debug_abbrev'
.L1179:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_SetEnableCondition')
	.sect	'.debug_line'
.L1180:
	.word	.L3257-.L3256
.L3256:
	.half	3
	.word	.L3259-.L3258
.L3258:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3259:
	.byte	5,32,7,0,5,2
	.word	.L993
	.byte	3,219,48,1,5,27,9
	.half	.L2516-.L993
	.byte	3,7,1,5,8,9
	.half	.L2517-.L2516
	.byte	3,4,1,5,5,9
	.half	.L3260-.L2517
	.byte	1,5,10,7,9
	.half	.L3261-.L3260
	.byte	3,6,1,5,16,7,9
	.half	.L462-.L3261
	.byte	3,3,1,5,26,9
	.half	.L3262-.L462
	.byte	1,5,9,9
	.half	.L463-.L3262
	.byte	3,4,1,5,13,7,9
	.half	.L3263-.L463
	.byte	3,2,1,5,33,9
	.half	.L3264-.L3263
	.byte	1,5,55,9
	.half	.L3265-.L3264
	.byte	1,5,53,9
	.half	.L3266-.L3265
	.byte	1,5,59,9
	.half	.L3267-.L3266
	.byte	1,5,13,9
	.half	.L465-.L3267
	.byte	3,4,1,5,33,9
	.half	.L3268-.L465
	.byte	1,5,55,9
	.half	.L3269-.L3268
	.byte	1,5,53,9
	.half	.L2518-.L3269
	.byte	1,5,58,9
	.half	.L3270-.L2518
	.byte	3,15,1,5,69,9
	.half	.L2515-.L3270
	.byte	3,8,1,5,40,9
	.half	.L3271-.L2515
	.byte	3,107,1,5,56,9
	.half	.L3272-.L3271
	.byte	1,5,20,9
	.half	.L468-.L3272
	.byte	3,2,1,5,17,9
	.half	.L3273-.L468
	.byte	1,5,27,7,9
	.half	.L3274-.L3273
	.byte	3,2,1,5,65,9
	.half	.L2519-.L3274
	.byte	1,5,29,9
	.half	.L471-.L2519
	.byte	3,2,1,5,58,9
	.half	.L3275-.L471
	.byte	1,5,25,9
	.half	.L3276-.L3275
	.byte	1,5,33,7,9
	.half	.L3277-.L3276
	.byte	3,4,1,5,32,9
	.half	.L3278-.L3277
	.byte	1,5,37,7,9
	.half	.L3279-.L3278
	.byte	3,1,1,5,73,9
	.half	.L3280-.L3279
	.byte	1,5,33,7,9
	.half	.L3281-.L3280
	.byte	3,2,1,5,56,9
	.half	.L3282-.L3281
	.byte	1,5,33,9
	.half	.L473-.L3282
	.byte	3,4,1,5,32,9
	.half	.L3283-.L473
	.byte	1,5,37,7,9
	.half	.L3284-.L3283
	.byte	3,1,1,5,73,9
	.half	.L3285-.L3284
	.byte	1,5,33,7,9
	.half	.L3286-.L3285
	.byte	3,2,1,5,56,9
	.half	.L3287-.L3286
	.byte	1,5,33,9
	.half	.L3288-.L3287
	.byte	3,1,1,5,67,9
	.half	.L3289-.L3288
	.byte	1,5,29,9
	.half	.L3290-.L3289
	.byte	3,3,1,5,68,9
	.half	.L472-.L3290
	.byte	3,108,1,5,36,9
	.half	.L470-.L472
	.byte	1,5,65,9
	.half	.L3291-.L470
	.byte	1,7,9
	.half	.L469-.L3291
	.byte	3,124,1,5,56,9
	.half	.L467-.L469
	.byte	1,5,5,7,9
	.half	.L464-.L467
	.byte	3,32,1,5,1,9
	.half	.L2522-.L464
	.byte	3,1,1,7,9
	.half	.L1182-.L2522
	.byte	0,1,1
.L3257:
	.sdecl	'.debug_ranges',debug,cluster('Dem_SetEnableCondition')
	.sect	'.debug_ranges'
.L1181:
	.word	-1,.L993,0,.L1182-.L993,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_GetFaultDetectionCounter')
	.sect	'.debug_info'
.L1183:
	.word	290
	.half	3
	.word	.L1184
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1186,.L1185
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_GetFaultDetectionCounter',0,1,238,49,32
	.word	.L1606
	.byte	1,1,1
	.word	.L995,.L1680,.L994
	.byte	4
	.byte	'EventId',0,1,240,49,21
	.word	.L1599,.L1681
	.byte	4
	.byte	'FaultDetectionCounter',0,1,241,49,44
	.word	.L1682,.L1683
	.byte	5
	.word	.L995,.L1680
	.byte	6
	.byte	'Result',0,1,244,49,20
	.word	.L1606,.L1684
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_GetFaultDetectionCounter')
	.sect	'.debug_abbrev'
.L1184:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_GetFaultDetectionCounter')
	.sect	'.debug_line'
.L1185:
	.word	.L3293-.L3292
.L3292:
	.half	3
	.word	.L3295-.L3294
.L3294:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3295:
	.byte	5,27,7,0,5,2
	.word	.L995
	.byte	3,243,49,1,5,8,9
	.half	.L2524-.L995
	.byte	3,2,1,5,5,9
	.half	.L3296-.L2524
	.byte	1,5,24,7,9
	.half	.L3297-.L3296
	.byte	3,6,1,5,10,9
	.half	.L3298-.L3297
	.byte	1,7,9
	.half	.L3299-.L3298
	.byte	3,5,1,5,16,7,9
	.half	.L479-.L3299
	.byte	3,3,1,5,1,9
	.half	.L3300-.L479
	.byte	3,59,1,5,12,7,9
	.half	.L481-.L3300
	.byte	3,83,1,5,9,9
	.half	.L3301-.L481
	.byte	1,5,16,7,9
	.half	.L3302-.L3301
	.byte	3,2,1,5,13,9
	.half	.L3303-.L3302
	.byte	1,5,42,7,9
	.half	.L3304-.L3303
	.byte	3,2,1,5,40,9
	.half	.L3305-.L3304
	.byte	1,5,1,9
	.half	.L3306-.L3305
	.byte	3,41,1,5,42,7,9
	.half	.L484-.L3306
	.byte	3,91,1,5,40,9
	.half	.L3307-.L484
	.byte	1,5,1,9
	.half	.L3308-.L3307
	.byte	3,37,1,5,12,7,9
	.half	.L483-.L3308
	.byte	3,97,1,5,9,9
	.half	.L3309-.L483
	.byte	1,5,17,7,9
	.half	.L3310-.L3309
	.byte	3,2,1,5,16,9
	.half	.L3311-.L3310
	.byte	1,5,25,7,9
	.half	.L3312-.L3311
	.byte	3,1,1,5,59,9
	.half	.L3313-.L3312
	.byte	1,5,42,7,9
	.half	.L488-.L3313
	.byte	3,2,1,5,40,9
	.half	.L3314-.L488
	.byte	1,5,1,9
	.half	.L3315-.L3314
	.byte	3,26,1,5,22,7,9
	.half	.L489-.L3315
	.byte	3,104,1,5,21,9
	.half	.L3316-.L489
	.byte	1,5,25,7,9
	.half	.L3317-.L3316
	.byte	3,1,1,5,59,9
	.half	.L3318-.L3317
	.byte	1,5,42,7,9
	.half	.L491-.L3318
	.byte	3,2,1,5,40,9
	.half	.L3319-.L491
	.byte	1,5,1,9
	.half	.L3320-.L3319
	.byte	3,21,1,5,42,7,9
	.half	.L492-.L3320
	.byte	3,111,1,5,40,9
	.half	.L3321-.L492
	.byte	1,5,1,9
	.half	.L3322-.L3321
	.byte	3,17,1,5,12,7,9
	.half	.L487-.L3322
	.byte	3,116,1,5,9,9
	.half	.L3323-.L487
	.byte	1,5,22,7,9
	.half	.L3324-.L3323
	.byte	3,3,1,5,57,9
	.half	.L3325-.L3324
	.byte	1,5,20,7,9
	.half	.L495-.L3325
	.byte	3,5,1,5,1,9
	.half	.L3326-.L495
	.byte	3,4,1,7,9
	.half	.L1187-.L3326
	.byte	0,1,1
.L3293:
	.sdecl	'.debug_ranges',debug,cluster('Dem_GetFaultDetectionCounter')
	.sect	'.debug_ranges'
.L1186:
	.word	-1,.L995,0,.L1187-.L995,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_GetIndicatorStatus')
	.sect	'.debug_info'
.L1188:
	.word	282
	.half	3
	.word	.L1189
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1191,.L1190
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_GetIndicatorStatus',0,1,209,50,32
	.word	.L1606
	.byte	1,1,1
	.word	.L997,.L1685,.L996
	.byte	4
	.byte	'IndicatorId',0,1,211,50,11
	.word	.L1606,.L1686
	.byte	4
	.byte	'IndicatorStatus',0,1,212,50,62
	.word	.L1687,.L1688
	.byte	5
	.word	.L997,.L1685
	.byte	6
	.byte	'Result',0,1,216,50,20
	.word	.L1606,.L1689
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_GetIndicatorStatus')
	.sect	'.debug_abbrev'
.L1189:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_GetIndicatorStatus')
	.sect	'.debug_line'
.L1190:
	.word	.L3328-.L3327
.L3327:
	.half	3
	.word	.L3330-.L3329
.L3329:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3330:
	.byte	5,27,7,0,5,2
	.word	.L997
	.byte	3,215,50,1,5,1,9
	.half	.L2526-.L997
	.byte	3,23,1,7,9
	.half	.L1192-.L2526
	.byte	0,1,1
.L3328:
	.sdecl	'.debug_ranges',debug,cluster('Dem_GetIndicatorStatus')
	.sect	'.debug_ranges'
.L1191:
	.word	-1,.L997,0,.L1192-.L997,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_GetEventFreezeFrameData')
	.sect	'.debug_info'
.L1193:
	.word	377
	.half	3
	.word	.L1194
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1196,.L1195
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_GetEventFreezeFrameData',0,1,146,51,32
	.word	.L1606
	.byte	1,1,1
	.word	.L999,.L1690,.L998
	.byte	4
	.byte	'EventId',0,1,148,51,21
	.word	.L1599,.L1691
	.byte	4
	.byte	'RecordNumber',0,1,149,51,11
	.word	.L1606,.L1692
	.byte	4
	.byte	'ReportTotalRecord',0,1,150,51,13
	.word	.L1606,.L1693
	.byte	4
	.byte	'DataId',0,1,151,51,12
	.word	.L1599,.L1694
	.byte	4
	.byte	'DestBuffer',0,1,152,51,44
	.word	.L1695,.L1696
	.byte	5
	.word	.L999,.L1690
	.byte	6
	.byte	'Result',0,1,155,51,20
	.word	.L1606,.L1697
	.byte	6
	.byte	'DataSize',0,1,156,51,12
	.word	.L1599,.L1698
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_GetEventFreezeFrameData')
	.sect	'.debug_abbrev'
.L1194:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_GetEventFreezeFrameData')
	.sect	'.debug_line'
.L1195:
	.word	.L3332-.L3331
.L3331:
	.half	3
	.word	.L3334-.L3333
.L3333:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3334:
	.byte	5,32,7,0,5,2
	.word	.L999
	.byte	3,145,51,1,5,27,9
	.half	.L2527-.L999
	.byte	3,9,1,5,23,9
	.half	.L2529-.L2527
	.byte	3,1,1,5,21,9
	.half	.L3335-.L2529
	.byte	1,5,8,9
	.half	.L3336-.L3335
	.byte	3,2,1,5,5,9
	.half	.L3337-.L3336
	.byte	1,5,24,7,9
	.half	.L3338-.L3337
	.byte	3,5,1,5,10,9
	.half	.L3339-.L3338
	.byte	1,7,9
	.half	.L3340-.L3339
	.byte	3,4,1,5,13,7,9
	.half	.L3341-.L3340
	.byte	3,11,1,5,68,9
	.half	.L3342-.L3341
	.byte	1,5,10,9
	.half	.L3343-.L3342
	.byte	1,5,100,7,9
	.half	.L3344-.L3343
	.byte	3,6,1,5,1,9
	.half	.L499-.L3344
	.byte	3,3,1,7,9
	.half	.L1197-.L499
	.byte	0,1,1
.L3332:
	.sdecl	'.debug_ranges',debug,cluster('Dem_GetEventFreezeFrameData')
	.sect	'.debug_ranges'
.L1196:
	.word	-1,.L999,0,.L1197-.L999,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_GetEventFreezeFrameDataEx')
	.sect	'.debug_info'
.L1198:
	.word	347
	.half	3
	.word	.L1199
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1201,.L1200
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_GetEventFreezeFrameDataEx',0,1,225,51,32
	.word	.L1606
	.byte	1,1,1
	.word	.L1001,.L1699,.L1000
	.byte	4
	.byte	'EventId',0,1,227,51,21
	.word	.L1599,.L1700
	.byte	4
	.byte	'RecordNumber',0,1,228,51,11
	.word	.L1606,.L1701
	.byte	4
	.byte	'DataId',0,1,229,51,12
	.word	.L1599,.L1702
	.byte	4
	.byte	'DestBuffer',0,1,230,51,12
	.word	.L1695,.L1703
	.byte	4
	.byte	'BufSize',0,1,231,51,45
	.word	.L1704,.L1705
	.byte	5
	.word	.L1001,.L1699
	.byte	6
	.byte	'Result',0,1,235,51,20
	.word	.L1606,.L1706
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_GetEventFreezeFrameDataEx')
	.sect	'.debug_abbrev'
.L1199:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_GetEventFreezeFrameDataEx')
	.sect	'.debug_line'
.L1200:
	.word	.L3346-.L3345
.L3345:
	.half	3
	.word	.L3348-.L3347
.L3347:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3348:
	.byte	5,27,7,0,5,2
	.word	.L1001
	.byte	3,234,51,1,5,8,9
	.half	.L2530-.L1001
	.byte	3,2,1,5,5,9
	.half	.L3349-.L2530
	.byte	1,5,24,7,9
	.half	.L3350-.L3349
	.byte	3,5,1,5,10,9
	.half	.L3351-.L3350
	.byte	1,5,13,7,9
	.half	.L3352-.L3351
	.byte	3,4,1,5,50,7,9
	.half	.L3353-.L3352
	.byte	1,5,67,7,9
	.half	.L3354-.L3353
	.byte	1,5,76,9
	.half	.L3355-.L3354
	.byte	1,5,13,7,9
	.half	.L3356-.L3355
	.byte	3,11,1,5,68,9
	.half	.L3357-.L3356
	.byte	1,5,10,9
	.half	.L3358-.L3357
	.byte	1,5,99,7,9
	.half	.L3359-.L3358
	.byte	3,6,1,5,1,7,9
	.half	.L504-.L3359
	.byte	3,3,1,7,9
	.half	.L1202-.L504
	.byte	0,1,1
.L3346:
	.sdecl	'.debug_ranges',debug,cluster('Dem_GetEventFreezeFrameDataEx')
	.sect	'.debug_ranges'
.L1201:
	.word	-1,.L1001,0,.L1202-.L1001,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_GetEventExtendedDataRecord')
	.sect	'.debug_info'
.L1203:
	.word	329
	.half	3
	.word	.L1204
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1206,.L1205
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_GetEventExtendedDataRecord',0,1,164,52,32
	.word	.L1606
	.byte	1,1,1
	.word	.L1003,.L1707,.L1002
	.byte	4
	.byte	'EventId',0,1,166,52,21
	.word	.L1599,.L1708
	.byte	4
	.byte	'RecordNumber',0,1,167,52,11
	.word	.L1606,.L1709
	.byte	4
	.byte	'DestBuffer',0,1,168,52,44
	.word	.L1695,.L1710
	.byte	5
	.word	.L1003,.L1707
	.byte	6
	.byte	'Result',0,1,171,52,20
	.word	.L1606,.L1711
	.byte	6
	.byte	'DataSize',0,1,172,52,12
	.word	.L1599,.L1712
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_GetEventExtendedDataRecord')
	.sect	'.debug_abbrev'
.L1204:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_GetEventExtendedDataRecord')
	.sect	'.debug_line'
.L1205:
	.word	.L3361-.L3360
.L3360:
	.half	3
	.word	.L3363-.L3362
.L3362:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3363:
	.byte	5,32,7,0,5,2
	.word	.L1003
	.byte	3,163,52,1,5,27,9
	.half	.L2531-.L1003
	.byte	3,7,1,5,23,9
	.half	.L2532-.L2531
	.byte	3,1,1,5,21,9
	.half	.L3364-.L2532
	.byte	1,5,8,9
	.half	.L3365-.L3364
	.byte	3,2,1,5,5,9
	.half	.L3366-.L3365
	.byte	1,5,24,7,9
	.half	.L3367-.L3366
	.byte	3,5,1,5,10,9
	.half	.L3368-.L3367
	.byte	1,7,9
	.half	.L3369-.L3368
	.byte	3,4,1,5,13,7,9
	.half	.L3370-.L3369
	.byte	3,11,1,5,68,9
	.half	.L3371-.L3370
	.byte	1,5,10,9
	.half	.L3372-.L3371
	.byte	1,5,95,7,9
	.half	.L3373-.L3372
	.byte	3,6,1,5,1,9
	.half	.L511-.L3373
	.byte	3,3,1,7,9
	.half	.L1207-.L511
	.byte	0,1,1
.L3361:
	.sdecl	'.debug_ranges',debug,cluster('Dem_GetEventExtendedDataRecord')
	.sect	'.debug_ranges'
.L1206:
	.word	-1,.L1003,0,.L1207-.L1003,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_GetEventExtendedDataRecordEx')
	.sect	'.debug_info'
.L1208:
	.word	330
	.half	3
	.word	.L1209
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1211,.L1210
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_GetEventExtendedDataRecordEx',0,1,235,52,32
	.word	.L1606
	.byte	1,1,1
	.word	.L1005,.L1713,.L1004
	.byte	4
	.byte	'EventId',0,1,237,52,21
	.word	.L1599,.L1714
	.byte	4
	.byte	'RecordNumber',0,1,238,52,11
	.word	.L1606,.L1715
	.byte	4
	.byte	'DestBuffer',0,1,239,52,44
	.word	.L1695,.L1716
	.byte	4
	.byte	'BufSize',0,1,240,52,45
	.word	.L1704,.L1717
	.byte	5
	.word	.L1005,.L1713
	.byte	6
	.byte	'Result',0,1,244,52,20
	.word	.L1606,.L1718
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_GetEventExtendedDataRecordEx')
	.sect	'.debug_abbrev'
.L1209:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_GetEventExtendedDataRecordEx')
	.sect	'.debug_line'
.L1210:
	.word	.L3375-.L3374
.L3374:
	.half	3
	.word	.L3377-.L3376
.L3376:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3377:
	.byte	5,27,7,0,5,2
	.word	.L1005
	.byte	3,243,52,1,5,8,9
	.half	.L2533-.L1005
	.byte	3,2,1,5,5,9
	.half	.L3378-.L2533
	.byte	1,5,24,7,9
	.half	.L3379-.L3378
	.byte	3,5,1,5,10,9
	.half	.L3380-.L3379
	.byte	1,5,13,7,9
	.half	.L3381-.L3380
	.byte	3,4,1,5,50,7,9
	.half	.L3382-.L3381
	.byte	1,5,67,7,9
	.half	.L3383-.L3382
	.byte	1,5,76,9
	.half	.L3384-.L3383
	.byte	1,5,13,7,9
	.half	.L3385-.L3384
	.byte	3,11,1,5,68,9
	.half	.L3386-.L3385
	.byte	1,5,10,9
	.half	.L3387-.L3386
	.byte	1,5,94,7,9
	.half	.L3388-.L3387
	.byte	3,6,1,5,1,7,9
	.half	.L516-.L3388
	.byte	3,3,1,7,9
	.half	.L1212-.L516
	.byte	0,1,1
.L3375:
	.sdecl	'.debug_ranges',debug,cluster('Dem_GetEventExtendedDataRecordEx')
	.sect	'.debug_ranges'
.L1211:
	.word	-1,.L1005,0,.L1212-.L1005,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_GetEventMemoryOverflow')
	.sect	'.debug_info'
.L1213:
	.word	287
	.half	3
	.word	.L1214
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1216,.L1215
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_GetEventMemoryOverflow',0,1,170,53,32
	.word	.L1606
	.byte	1,1,1
	.word	.L1007,.L1719,.L1006
	.byte	4
	.byte	'DTCOrigin',0,1,172,53,23
	.word	.L1606,.L1720
	.byte	4
	.byte	'OverflowIndication',0,1,173,53,46
	.word	.L1645,.L1721
	.byte	5
	.word	.L1007,.L1719
	.byte	6
	.byte	'Result',0,1,177,53,20
	.word	.L1606,.L1722
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_GetEventMemoryOverflow')
	.sect	'.debug_abbrev'
.L1214:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_GetEventMemoryOverflow')
	.sect	'.debug_line'
.L1215:
	.word	.L3390-.L3389
.L3389:
	.half	3
	.word	.L3392-.L3391
.L3391:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3392:
	.byte	5,27,7,0,5,2
	.word	.L1007
	.byte	3,176,53,1,5,8,9
	.half	.L2534-.L1007
	.byte	3,2,1,5,5,9
	.half	.L3393-.L2534
	.byte	1,5,10,7,9
	.half	.L3394-.L3393
	.byte	3,6,1,5,9,7,9
	.half	.L3395-.L3394
	.byte	3,7,1,5,16,7,9
	.half	.L3396-.L3395
	.byte	3,2,1,5,48,9
	.half	.L3397-.L3396
	.byte	1,5,13,9
	.half	.L3398-.L3397
	.byte	1,5,37,7,9
	.half	.L3399-.L3398
	.byte	3,2,1,5,1,9
	.half	.L3400-.L3399
	.byte	3,26,1,5,39,7,9
	.half	.L526-.L3400
	.byte	3,106,1,5,37,9
	.half	.L3401-.L526
	.byte	1,5,1,9
	.half	.L3402-.L3401
	.byte	3,22,1,5,20,7,9
	.half	.L523-.L3402
	.byte	3,124,1,5,1,9
	.half	.L3403-.L523
	.byte	3,4,1,7,9
	.half	.L1217-.L3403
	.byte	0,1,1
.L3390:
	.sdecl	'.debug_ranges',debug,cluster('Dem_GetEventMemoryOverflow')
	.sect	'.debug_ranges'
.L1216:
	.word	-1,.L1007,0,.L1217-.L1007,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_GetNumberOfEventMemoryEntries')
	.sect	'.debug_info'
.L1218:
	.word	302
	.half	3
	.word	.L1219
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1221,.L1220
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_GetNumberOfEventMemoryEntries',0,1,244,53,32
	.word	.L1606
	.byte	1,1,1
	.word	.L1009,.L1723,.L1008
	.byte	4
	.byte	'DTCOrigin',0,1,246,53,23
	.word	.L1606,.L1724
	.byte	4
	.byte	'NumberOfEventMemoryEntries',0,1,247,53,45
	.word	.L1704,.L1725
	.byte	5
	.word	.L1009,.L1723
	.byte	6
	.byte	'Result',0,1,251,53,20
	.word	.L1606,.L1726
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_GetNumberOfEventMemoryEntries')
	.sect	'.debug_abbrev'
.L1219:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_GetNumberOfEventMemoryEntries')
	.sect	'.debug_line'
.L1220:
	.word	.L3405-.L3404
.L3404:
	.half	3
	.word	.L3407-.L3406
.L3406:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3407:
	.byte	5,27,7,0,5,2
	.word	.L1009
	.byte	3,250,53,1,5,8,9
	.half	.L2535-.L1009
	.byte	3,2,1,5,5,9
	.half	.L3408-.L2535
	.byte	1,5,10,7,9
	.half	.L3409-.L3408
	.byte	3,6,1,5,9,7,9
	.half	.L3410-.L3409
	.byte	3,7,1,5,43,7,9
	.half	.L3411-.L3410
	.byte	3,2,1,5,41,9
	.half	.L3412-.L3411
	.byte	1,5,1,9
	.half	.L3413-.L3412
	.byte	3,14,1,5,20,7,9
	.half	.L530-.L3413
	.byte	3,124,1,5,1,9
	.half	.L3414-.L530
	.byte	3,4,1,7,9
	.half	.L1222-.L3414
	.byte	0,1,1
.L3405:
	.sdecl	'.debug_ranges',debug,cluster('Dem_GetNumberOfEventMemoryEntries')
	.sect	'.debug_ranges'
.L1221:
	.word	-1,.L1009,0,.L1222-.L1009,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_SetComponentAvailable')
	.sect	'.debug_info'
.L1223:
	.word	285
	.half	3
	.word	.L1224
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1226,.L1225
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_SetComponentAvailable',0,1,173,54,32
	.word	.L1606
	.byte	1,1,1
	.word	.L1011,.L1727,.L1010
	.byte	4
	.byte	'ComponentId',0,1,175,54,25
	.word	.L1599,.L1728
	.byte	4
	.byte	'AvailableStatus',0,1,176,54,13
	.word	.L1606,.L1729
	.byte	5
	.word	.L1011,.L1727
	.byte	6
	.byte	'Result',0,1,179,54,20
	.word	.L1606,.L1730
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_SetComponentAvailable')
	.sect	'.debug_abbrev'
.L1224:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_SetComponentAvailable')
	.sect	'.debug_line'
.L1225:
	.word	.L3416-.L3415
.L3415:
	.half	3
	.word	.L3418-.L3417
.L3417:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3418:
	.byte	5,27,7,0,5,2
	.word	.L1011
	.byte	3,178,54,1,5,1,9
	.half	.L2536-.L1011
	.byte	3,6,1,7,9
	.half	.L1227-.L2536
	.byte	0,1,1
.L3416:
	.sdecl	'.debug_ranges',debug,cluster('Dem_SetComponentAvailable')
	.sect	'.debug_ranges'
.L1226:
	.word	-1,.L1011,0,.L1227-.L1011,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_ClearDTC')
	.sect	'.debug_info'
.L1228:
	.word	303
	.half	3
	.word	.L1229
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1231,.L1230
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_ClearDTC',0,1,244,54,40
	.word	.L1606
	.byte	1,1,1
	.word	.L1013,.L1731,.L1012
	.byte	4
	.byte	'DTC',0,1,246,54,12
	.word	.L1732,.L1733
	.byte	4
	.byte	'DTCFormat',0,1,247,54,23
	.word	.L1606,.L1734
	.byte	4
	.byte	'DTCOrigin',0,1,248,54,23
	.word	.L1606,.L1735
	.byte	5
	.word	.L1013,.L1731
	.byte	6
	.byte	'Result',0,1,252,54,28
	.word	.L1606,.L1736
	.byte	6
	.byte	'DtcIndex',0,1,254,54,12
	.word	.L1599,.L1737
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_ClearDTC')
	.sect	'.debug_abbrev'
.L1229:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_ClearDTC')
	.sect	'.debug_line'
.L1230:
	.word	.L3420-.L3419
.L3419:
	.half	3
	.word	.L3422-.L3421
.L3421:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3422:
	.byte	5,35,7,0,5,2
	.word	.L1013
	.byte	3,251,54,1,5,8,9
	.half	.L2539-.L1013
	.byte	3,5,1,5,5,9
	.half	.L3423-.L2539
	.byte	1,5,13,7,9
	.half	.L3424-.L3423
	.byte	3,6,1,5,10,9
	.half	.L3425-.L3424
	.byte	1,5,12,7,9
	.half	.L3426-.L3425
	.byte	3,2,1,5,41,7,9
	.half	.L3427-.L3426
	.byte	1,5,39,9
	.half	.L3428-.L3427
	.byte	1,5,20,7,9
	.half	.L538-.L3428
	.byte	3,3,1,5,1,9
	.half	.L3429-.L538
	.byte	3,238,0,1,5,17,7,9
	.half	.L539-.L3429
	.byte	3,148,127,1,5,27,7,9
	.half	.L3430-.L539
	.byte	3,1,1,7,9
	.half	.L3431-.L3430
	.byte	3,1,1,5,20,7,9
	.half	.L536-.L3431
	.byte	3,3,1,5,1,9
	.half	.L3432-.L536
	.byte	3,231,0,1,5,14,7,9
	.half	.L541-.L3432
	.byte	3,155,127,1,5,20,7,9
	.half	.L3433-.L541
	.byte	3,3,1,5,1,9
	.half	.L3434-.L3433
	.byte	3,226,0,1,5,13,7,9
	.half	.L545-.L3434
	.byte	3,170,127,1,5,30,9
	.half	.L3435-.L545
	.byte	1,5,13,9
	.half	.L3436-.L3435
	.byte	3,1,1,5,36,9
	.half	.L3437-.L3436
	.byte	1,5,13,9
	.half	.L3438-.L3437
	.byte	3,1,1,5,36,9
	.half	.L3439-.L3438
	.byte	1,5,13,9
	.half	.L3440-.L3439
	.byte	3,1,1,5,34,9
	.half	.L3441-.L3440
	.byte	1,5,32,9
	.half	.L2540-.L3441
	.byte	1,5,61,9
	.half	.L3442-.L2540
	.byte	3,4,1,5,27,9
	.half	.L548-.L3442
	.byte	3,2,1,5,17,9
	.half	.L3443-.L548
	.byte	1,5,21,7,9
	.half	.L3444-.L3443
	.byte	3,3,1,5,41,9
	.half	.L3445-.L3444
	.byte	1,5,39,9
	.half	.L2541-.L3445
	.byte	1,5,28,9
	.half	.L3446-.L2541
	.byte	3,1,1,5,21,9
	.half	.L3447-.L3446
	.byte	3,1,1,5,71,9
	.half	.L549-.L3447
	.byte	3,121,1,5,61,9
	.half	.L547-.L549
	.byte	1,5,13,7,9
	.half	.L550-.L547
	.byte	3,12,1,5,24,7,9
	.half	.L3448-.L550
	.byte	3,3,1,5,30,9
	.half	.L3449-.L3448
	.byte	3,1,1,5,46,9
	.half	.L2542-.L3449
	.byte	1,5,60,9
	.half	.L3450-.L2542
	.byte	1,5,25,9
	.half	.L553-.L3450
	.byte	3,2,1,5,70,7,9
	.half	.L3451-.L553
	.byte	1,5,67,9
	.half	.L3452-.L3451
	.byte	1,5,49,7,9
	.half	.L3453-.L3452
	.byte	3,12,1,5,25,9
	.half	.L2538-.L3453
	.byte	3,9,1,5,70,9
	.half	.L554-.L2538
	.byte	3,105,1,5,60,9
	.half	.L552-.L554
	.byte	1,5,1,7,9
	.half	.L551-.L552
	.byte	3,63,1,5,13,7,9
	.half	.L537-.L551
	.byte	3,100,1,5,12,9
	.half	.L3454-.L537
	.byte	1,5,42,7,9
	.half	.L3455-.L3454
	.byte	1,5,65,9
	.half	.L3456-.L3455
	.byte	1,5,83,7,9
	.half	.L3457-.L3456
	.byte	1,5,106,9
	.half	.L3458-.L3457
	.byte	1,5,20,7,9
	.half	.L558-.L3458
	.byte	3,3,1,5,1,9
	.half	.L3459-.L558
	.byte	3,25,1,5,16,7,9
	.half	.L560-.L3459
	.byte	3,107,1,5,13,9
	.half	.L3460-.L560
	.byte	1,5,37,7,9
	.half	.L3461-.L3460
	.byte	3,2,1,5,35,9
	.half	.L3462-.L3461
	.byte	1,5,24,9
	.half	.L556-.L3462
	.byte	3,2,1,5,1,9
	.half	.L2543-.L556
	.byte	3,17,1,5,21,7,9
	.half	.L562-.L2543
	.byte	3,113,1,5,18,9
	.half	.L3463-.L562
	.byte	1,5,37,7,9
	.half	.L3464-.L3463
	.byte	3,2,1,5,35,9
	.half	.L3465-.L3464
	.byte	1,5,24,9
	.half	.L3466-.L3465
	.byte	3,2,1,5,1,9
	.half	.L3467-.L3466
	.byte	3,11,1,5,24,7,9
	.half	.L564-.L3467
	.byte	3,122,1,5,1,9
	.half	.L3468-.L564
	.byte	3,6,1,7,9
	.half	.L1232-.L3468
	.byte	0,1,1
.L3420:
	.sdecl	'.debug_ranges',debug,cluster('Dem_ClearDTC')
	.sect	'.debug_ranges'
.L1231:
	.word	-1,.L1013,0,.L1232-.L1013,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_MainFunction')
	.sect	'.debug_info'
.L1233:
	.word	197
	.half	3
	.word	.L1234
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1236,.L1235
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_MainFunction',0,1,139,56,22,1,1,1
	.word	.L1015,.L1738,.L1014
	.byte	4
	.word	.L1015,.L1738
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_MainFunction')
	.sect	'.debug_abbrev'
.L1234:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_MainFunction')
	.sect	'.debug_line'
.L1235:
	.word	.L3470-.L3469
.L3469:
	.half	3
	.word	.L3472-.L3471
.L3471:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3472:
	.byte	5,8,7,0,5,2
	.word	.L1015
	.byte	3,144,56,1,5,5,9
	.half	.L3473-.L1015
	.byte	1,5,43,7,9
	.half	.L3474-.L3473
	.byte	3,2,1,9
	.half	.L3475-.L3474
	.byte	3,1,1,5,42,9
	.half	.L3476-.L3475
	.byte	3,2,1,5,40,9
	.half	.L3477-.L3476
	.byte	3,3,1,5,37,9
	.half	.L3478-.L3477
	.byte	3,2,1,5,1,7,9
	.half	.L567-.L3478
	.byte	3,6,1,7,9
	.half	.L1237-.L567
	.byte	0,1,1
.L3470:
	.sdecl	'.debug_ranges',debug,cluster('Dem_MainFunction')
	.sect	'.debug_ranges'
.L1236:
	.word	-1,.L1015,0,.L1237-.L1015,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_GetEventInternalData')
	.sect	'.debug_info'
.L1238:
	.word	296
	.half	3
	.word	.L1239
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1241,.L1240
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_GetEventInternalData',0,1,179,56,32
	.word	.L1606
	.byte	1,1,1
	.word	.L1017,.L1739,.L1016
	.byte	4
	.byte	'EventId',0,1,181,56,21
	.word	.L1599,.L1740
	.byte	4
	.byte	'DataType',0,1,182,56,33
	.word	.L1741,.L1742
	.byte	4
	.byte	'DataValue',0,1,183,56,44
	.word	.L1695,.L1743
	.byte	5
	.word	.L1017,.L1739
	.byte	6
	.byte	'Result',0,1,186,56,20
	.word	.L1606,.L1744
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_GetEventInternalData')
	.sect	'.debug_abbrev'
.L1239:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_GetEventInternalData')
	.sect	'.debug_line'
.L1240:
	.word	.L3480-.L3479
.L3479:
	.half	3
	.word	.L3482-.L3481
.L3481:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3482:
	.byte	5,32,7,0,5,2
	.word	.L1017
	.byte	3,178,56,1,5,27,9
	.half	.L2545-.L1017
	.byte	3,7,1,5,8,9
	.half	.L2546-.L2545
	.byte	3,2,1,5,5,9
	.half	.L3483-.L2546
	.byte	1,5,24,7,9
	.half	.L3484-.L3483
	.byte	3,4,1,5,10,9
	.half	.L3485-.L3484
	.byte	1,5,64,7,9
	.half	.L3486-.L3485
	.byte	3,13,1,5,20,9
	.half	.L2544-.L3486
	.byte	1,5,16,9
	.half	.L3487-.L2544
	.byte	3,1,1,5,1,9
	.half	.L568-.L3487
	.byte	3,4,1,7,9
	.half	.L1242-.L568
	.byte	0,1,1
.L3480:
	.sdecl	'.debug_ranges',debug,cluster('Dem_GetEventInternalData')
	.sect	'.debug_ranges'
.L1241:
	.word	-1,.L1017,0,.L1242-.L1017,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmGetTranslationType')
	.sect	'.debug_info'
.L1243:
	.word	210
	.half	3
	.word	.L1244
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1246,.L1245
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmGetTranslationType',0,1,175,70,46
	.word	.L1606
	.byte	1,1,1
	.word	.L1029,.L1745,.L1028
	.byte	4
	.word	.L1029,.L1745
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmGetTranslationType')
	.sect	'.debug_abbrev'
.L1244:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmGetTranslationType')
	.sect	'.debug_line'
.L1245:
	.word	.L3489-.L3488
.L3488:
	.half	3
	.word	.L3491-.L3490
.L3490:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3491:
	.byte	5,12,7,0,5,2
	.word	.L1029
	.byte	3,180,198,0,1,5,1,9
	.half	.L3492-.L1029
	.byte	3,1,1,7,9
	.half	.L1247-.L3492
	.byte	0,1,1
.L3489:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmGetTranslationType')
	.sect	'.debug_ranges'
.L1246:
	.word	-1,.L1029,0,.L1247-.L1029,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmGetDTCStatusAvailabilityMask')
	.sect	'.debug_info'
.L1248:
	.word	268
	.half	3
	.word	.L1249
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1251,.L1250
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmGetDTCStatusAvailabilityMask',0,1,202,70,32
	.word	.L1606
	.byte	1,1,1
	.word	.L1031,.L1746,.L1030
	.byte	4
	.byte	'DTCStatusMask',0,1,204,70,60
	.word	.L1650,.L1747
	.byte	5
	.word	.L1031,.L1746
	.byte	6
	.byte	'Result',0,1,207,70,20
	.word	.L1606,.L1748
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmGetDTCStatusAvailabilityMask')
	.sect	'.debug_abbrev'
.L1249:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmGetDTCStatusAvailabilityMask')
	.sect	'.debug_line'
.L1250:
	.word	.L3494-.L3493
.L3493:
	.half	3
	.word	.L3496-.L3495
.L3495:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3496:
	.byte	5,27,7,0,5,2
	.word	.L1031
	.byte	3,206,198,0,1,5,5,9
	.half	.L2735-.L1031
	.byte	3,2,1,5,16,7,9
	.half	.L3497-.L2735
	.byte	3,3,1,5,1,9
	.half	.L3498-.L3497
	.byte	3,8,1,5,26,7,9
	.half	.L674-.L3498
	.byte	3,125,1,5,24,9
	.half	.L3499-.L674
	.byte	1,5,1,9
	.half	.L3500-.L3499
	.byte	3,3,1,7,9
	.half	.L1252-.L3500
	.byte	0,1,1
.L3494:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmGetDTCStatusAvailabilityMask')
	.sect	'.debug_ranges'
.L1251:
	.word	-1,.L1031,0,.L1252-.L1031,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmGetStatusOfDTC')
	.sect	'.debug_info'
.L1253:
	.word	309
	.half	3
	.word	.L1254
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1256,.L1255
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmGetStatusOfDTC',0,1,243,70,46
	.word	.L1606
	.byte	1,1,1
	.word	.L1033,.L1749,.L1032
	.byte	4
	.byte	'DTC',0,1,245,70,12
	.word	.L1732,.L1750
	.byte	4
	.byte	'DTCOrigin',0,1,246,70,23
	.word	.L1606,.L1751
	.byte	4
	.byte	'DTCStatus',0,1,247,70,44
	.word	.L1695,.L1752
	.byte	5
	.word	.L1033,.L1749
	.byte	6
	.byte	'Result',0,1,250,70,34
	.word	.L1606,.L1753
	.byte	6
	.byte	'DtcId',0,1,251,70,12
	.word	.L1599,.L1754
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmGetStatusOfDTC')
	.sect	'.debug_abbrev'
.L1254:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmGetStatusOfDTC')
	.sect	'.debug_line'
.L1255:
	.word	.L3502-.L3501
.L3501:
	.half	3
	.word	.L3504-.L3503
.L3503:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3504:
	.byte	5,46,7,0,5,2
	.word	.L1033
	.byte	3,242,198,0,1,5,41,9
	.half	.L2741-.L1033
	.byte	3,7,1,5,8,9
	.half	.L2742-.L2741
	.byte	3,7,1,5,5,9
	.half	.L3505-.L2742
	.byte	1,5,16,7,9
	.half	.L3506-.L3505
	.byte	3,4,1,5,35,9
	.half	.L3507-.L3506
	.byte	1,5,13,9
	.half	.L677-.L3507
	.byte	3,2,1,5,50,7,9
	.half	.L3508-.L677
	.byte	1,5,48,9
	.half	.L3509-.L3508
	.byte	1,5,13,7,9
	.half	.L3510-.L3509
	.byte	3,5,1,5,23,7,9
	.half	.L3511-.L3510
	.byte	3,1,1,5,53,7,9
	.half	.L681-.L3511
	.byte	3,6,1,5,10,9
	.half	.L2737-.L681
	.byte	1,5,16,7,9
	.half	.L679-.L2737
	.byte	3,3,1,5,38,9
	.half	.L3512-.L679
	.byte	1,5,9,9
	.half	.L683-.L3512
	.byte	3,5,1,5,28,7,9
	.half	.L3513-.L683
	.byte	3,2,1,5,24,9
	.half	.L3514-.L3513
	.byte	1,5,89,9
	.half	.L3515-.L3514
	.byte	1,5,20,9
	.half	.L682-.L3515
	.byte	3,25,1,5,5,9
	.half	.L678-.L682
	.byte	3,3,1,5,1,9
	.half	.L2743-.L678
	.byte	3,1,1,7,9
	.half	.L1257-.L2743
	.byte	0,1,1
.L3502:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmGetStatusOfDTC')
	.sect	'.debug_ranges'
.L1256:
	.word	-1,.L1033,0,.L1257-.L1033,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmGetSeverityOfDTC')
	.sect	'.debug_info'
.L1258:
	.word	290
	.half	3
	.word	.L1259
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1261,.L1260
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmGetSeverityOfDTC',0,1,203,71,48
	.word	.L1606
	.byte	1,1,1
	.word	.L1035,.L1755,.L1034
	.byte	4
	.byte	'DTC',0,1,205,71,12
	.word	.L1732,.L1756
	.byte	4
	.byte	'DTCSeverity',0,1,206,71,58
	.word	.L1757,.L1758
	.byte	5
	.word	.L1035,.L1755
	.byte	6
	.byte	'Result',0,1,209,71,36
	.word	.L1606,.L1759
	.byte	6
	.byte	'DtcId',0,1,210,71,12
	.word	.L1599,.L1760
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmGetSeverityOfDTC')
	.sect	'.debug_abbrev'
.L1259:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmGetSeverityOfDTC')
	.sect	'.debug_line'
.L1260:
	.word	.L3517-.L3516
.L3516:
	.half	3
	.word	.L3519-.L3518
.L3518:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3519:
	.byte	5,48,7,0,5,2
	.word	.L1035
	.byte	3,202,199,0,1,5,43,9
	.half	.L2747-.L1035
	.byte	3,6,1,5,5,9
	.half	.L2748-.L2747
	.byte	3,3,1,5,16,7,9
	.half	.L3520-.L2748
	.byte	3,3,1,5,50,9
	.half	.L3521-.L3520
	.byte	1,5,53,9
	.half	.L688-.L3521
	.byte	3,2,1,5,10,9
	.half	.L2745-.L688
	.byte	1,5,16,7,9
	.half	.L3522-.L2745
	.byte	3,3,1,5,49,9
	.half	.L3523-.L3522
	.byte	1,5,24,9
	.half	.L690-.L3523
	.byte	3,4,1,5,22,9
	.half	.L3524-.L690
	.byte	1,5,5,9
	.half	.L689-.L3524
	.byte	3,2,1,5,1,9
	.half	.L2749-.L689
	.byte	3,1,1,7,9
	.half	.L1262-.L2749
	.byte	0,1,1
.L3517:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmGetSeverityOfDTC')
	.sect	'.debug_ranges'
.L1261:
	.word	-1,.L1035,0,.L1262-.L1035,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmGetFunctionalUnitOfDTC')
	.sect	'.debug_info'
.L1263:
	.word	302
	.half	3
	.word	.L1264
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1266,.L1265
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmGetFunctionalUnitOfDTC',0,1,244,71,54
	.word	.L1606
	.byte	1,1,1
	.word	.L1037,.L1761,.L1036
	.byte	4
	.byte	'DTC',0,1,246,71,12
	.word	.L1732,.L1762
	.byte	4
	.byte	'DTCFunctionalUnit',0,1,247,71,44
	.word	.L1695,.L1763
	.byte	5
	.word	.L1037,.L1761
	.byte	6
	.byte	'Result',0,1,250,71,42
	.word	.L1606,.L1764
	.byte	6
	.byte	'DtcId',0,1,251,71,12
	.word	.L1599,.L1765
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmGetFunctionalUnitOfDTC')
	.sect	'.debug_abbrev'
.L1264:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmGetFunctionalUnitOfDTC')
	.sect	'.debug_line'
.L1265:
	.word	.L3526-.L3525
.L3525:
	.half	3
	.word	.L3528-.L3527
.L3527:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3528:
	.byte	5,54,7,0,5,2
	.word	.L1037
	.byte	3,243,199,0,1,5,49,9
	.half	.L2753-.L1037
	.byte	3,6,1,5,5,9
	.half	.L2754-.L2753
	.byte	3,3,1,5,53,7,9
	.half	.L3529-.L2754
	.byte	3,6,1,5,10,9
	.half	.L2751-.L3529
	.byte	1,5,16,7,9
	.half	.L693-.L2751
	.byte	3,3,1,5,55,9
	.half	.L3530-.L693
	.byte	1,5,30,9
	.half	.L694-.L3530
	.byte	3,4,1,5,28,9
	.half	.L3531-.L694
	.byte	1,5,5,9
	.half	.L695-.L3531
	.byte	3,2,1,5,1,9
	.half	.L2755-.L695
	.byte	3,1,1,7,9
	.half	.L1267-.L2755
	.byte	0,1,1
.L3526:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmGetFunctionalUnitOfDTC')
	.sect	'.debug_ranges'
.L1266:
	.word	-1,.L1037,0,.L1267-.L1037,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmSetDTCFilter')
	.sect	'.debug_info'
.L1268:
	.word	473
	.half	3
	.word	.L1269
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1271,.L1270
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmSetDTCFilter',0,1,166,72,41
	.word	.L1606
	.byte	1,1,1
	.word	.L1039,.L1766,.L1038
	.byte	4
	.byte	'DTCStatusMask',0,1,168,72,27
	.word	.L1606,.L1767
	.byte	4
	.byte	'DTCKind',0,1,169,72,21
	.word	.L1606,.L1768
	.byte	4
	.byte	'DTCFormat',0,1,170,72,23
	.word	.L1606,.L1769
	.byte	4
	.byte	'DTCOrigin',0,1,171,72,23
	.word	.L1606,.L1770
	.byte	4
	.byte	'FilterWithSeverity',0,1,172,72,13
	.word	.L1606,.L1771
	.byte	4
	.byte	'DTCSeverityMask',0,1,173,72,25
	.word	.L1606,.L1772
	.byte	4
	.byte	'FilterForFaultDetectionCounter',0,1,174,72,13
	.word	.L1606,.L1773
	.byte	5
	.word	.L1039,.L1766
	.byte	6
	.byte	'Result',0,1,177,72,29
	.word	.L1606,.L1774
	.byte	6
	.byte	'DtcId',0,1,178,72,12
	.word	.L1599,.L1775
	.byte	6
	.byte	'StatusFilterMask',0,1,179,72,11
	.word	.L1606,.L1776
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmSetDTCFilter')
	.sect	'.debug_abbrev'
.L1269:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmSetDTCFilter')
	.sect	'.debug_line'
.L1270:
	.word	.L3533-.L3532
.L3532:
	.half	3
	.word	.L3535-.L3534
.L3534:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3535:
	.byte	5,41,7,0,5,2
	.word	.L1039
	.byte	3,165,200,0,1,5,36,9
	.half	.L2759-.L1039
	.byte	3,11,1,5,8,9
	.half	.L2761-.L2759
	.byte	3,7,1,5,5,9
	.half	.L3536-.L2761
	.byte	1,5,13,7,9
	.half	.L3537-.L3536
	.byte	3,5,1,5,21,7,9
	.half	.L3538-.L3537
	.byte	3,1,1,5,13,7,9
	.half	.L698-.L3538
	.byte	3,5,1,5,23,7,9
	.half	.L3539-.L698
	.byte	3,1,1,7,9
	.half	.L3540-.L3539
	.byte	3,1,1,5,13,7,9
	.half	.L700-.L3540
	.byte	3,6,1,5,23,7,9
	.half	.L3541-.L700
	.byte	3,1,1,5,9,7,9
	.half	.L703-.L3541
	.byte	3,8,1,5,41,9
	.half	.L3542-.L703
	.byte	1,5,9,9
	.half	.L3543-.L3542
	.byte	3,1,1,5,35,9
	.half	.L3544-.L3543
	.byte	1,5,9,9
	.half	.L3545-.L3544
	.byte	3,1,1,5,37,9
	.half	.L3546-.L3545
	.byte	1,5,9,9
	.half	.L3547-.L3546
	.byte	3,1,1,5,37,9
	.half	.L3548-.L3547
	.byte	1,5,9,9
	.half	.L3549-.L3548
	.byte	3,1,1,5,46,9
	.half	.L3550-.L3549
	.byte	1,5,9,9
	.half	.L3551-.L3550
	.byte	3,1,1,5,43,9
	.half	.L3552-.L3551
	.byte	1,5,9,9
	.half	.L3553-.L3552
	.byte	3,4,1,5,40,9
	.half	.L3554-.L3553
	.byte	1,5,9,9
	.half	.L3555-.L3554
	.byte	3,1,1,5,49,9
	.half	.L3556-.L3555
	.byte	1,5,47,9
	.half	.L2760-.L3556
	.byte	1,5,9,9
	.half	.L3557-.L2760
	.byte	3,1,1,5,48,9
	.half	.L3558-.L3557
	.byte	1,5,9,9
	.half	.L3559-.L3558
	.byte	3,4,1,5,65,7,9
	.half	.L3560-.L3559
	.byte	3,17,1,5,36,9
	.half	.L3561-.L3560
	.byte	3,113,1,5,50,9
	.half	.L3562-.L3561
	.byte	1,5,21,9
	.half	.L707-.L3562
	.byte	3,2,1,5,56,7,9
	.half	.L3563-.L707
	.byte	1,5,84,9
	.half	.L3564-.L3563
	.byte	1,5,103,9
	.half	.L3565-.L3564
	.byte	1,5,25,7,9
	.half	.L708-.L3565
	.byte	3,1,1,5,51,7,9
	.half	.L3566-.L708
	.byte	1,5,73,9
	.half	.L3567-.L3566
	.byte	1,5,93,9
	.half	.L3568-.L3567
	.byte	1,5,24,7,9
	.half	.L710-.L3568
	.byte	3,6,1,5,63,7,9
	.half	.L3569-.L710
	.byte	1,5,88,9
	.half	.L3570-.L3569
	.byte	1,5,82,7,9
	.half	.L3571-.L3570
	.byte	3,6,1,5,25,9
	.half	.L3572-.L3571
	.byte	1,5,64,9
	.half	.L3573-.L3572
	.byte	1,5,104,9
	.half	.L3574-.L3573
	.byte	1,5,42,9
	.half	.L3575-.L3574
	.byte	3,1,1,5,62,9
	.half	.L3576-.L3575
	.byte	1,5,57,9
	.half	.L709-.L3576
	.byte	3,112,1,5,50,9
	.half	.L706-.L709
	.byte	1,5,9,7,9
	.half	.L705-.L706
	.byte	3,41,1,5,47,9
	.half	.L3577-.L705
	.byte	1,5,45,9
	.half	.L3578-.L3577
	.byte	1,5,16,9
	.half	.L3579-.L3578
	.byte	3,2,1,5,1,9
	.half	.L697-.L3579
	.byte	3,3,1,7,9
	.half	.L1272-.L697
	.byte	0,1,1
.L3533:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmSetDTCFilter')
	.sect	'.debug_ranges'
.L1271:
	.word	-1,.L1039,0,.L1272-.L1039,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmGetNumberOfFilteredDTC')
	.sect	'.debug_info'
.L1273:
	.word	268
	.half	3
	.word	.L1274
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1276,.L1275
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmGetNumberOfFilteredDTC',0,1,165,73,54
	.word	.L1606
	.byte	1,1,1
	.word	.L1041,.L1777,.L1040
	.byte	4
	.byte	'NumberOfFilteredDTC',0,1,167,73,45
	.word	.L1704,.L1778
	.byte	5
	.word	.L1041,.L1777
	.byte	6
	.byte	'Result',0,1,170,73,42
	.word	.L1606,.L1779
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmGetNumberOfFilteredDTC')
	.sect	'.debug_abbrev'
.L1274:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmGetNumberOfFilteredDTC')
	.sect	'.debug_line'
.L1275:
	.word	.L3581-.L3580
.L3580:
	.half	3
	.word	.L3583-.L3582
.L3582:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3583:
	.byte	5,49,7,0,5,2
	.word	.L1041
	.byte	3,169,201,0,1,5,8,9
	.half	.L2762-.L1041
	.byte	3,2,1,5,5,9
	.half	.L3584-.L2762
	.byte	1,5,10,7,9
	.half	.L3585-.L3584
	.byte	3,6,1,5,13,7,9
	.half	.L3586-.L3585
	.byte	3,5,1,5,30,9
	.half	.L3587-.L3586
	.byte	1,5,10,9
	.half	.L3588-.L3587
	.byte	1,5,16,7,9
	.half	.L715-.L3588
	.byte	3,2,1,5,1,9
	.half	.L3589-.L715
	.byte	3,8,1,5,32,7,9
	.half	.L717-.L3589
	.byte	3,125,1,5,49,9
	.half	.L3590-.L717
	.byte	1,5,30,9
	.half	.L3591-.L3590
	.byte	1,5,1,9
	.half	.L3592-.L3591
	.byte	3,3,1,7,9
	.half	.L1277-.L3592
	.byte	0,1,1
.L3581:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmGetNumberOfFilteredDTC')
	.sect	'.debug_ranges'
.L1276:
	.word	-1,.L1041,0,.L1277-.L1041,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmGetNextFilteredDTC')
	.sect	'.debug_info'
.L1278:
	.word	290
	.half	3
	.word	.L1279
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1281,.L1280
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmGetNextFilteredDTC',0,1,214,73,54
	.word	.L1606
	.byte	1,1,1
	.word	.L1043,.L1780,.L1042
	.byte	4
	.byte	'DTC',0,1,216,73,45
	.word	.L1671,.L1781
	.byte	4
	.byte	'DTCStatus',0,1,217,73,60
	.word	.L1650,.L1782
	.byte	5
	.word	.L1043,.L1780
	.byte	6
	.byte	'Result',0,1,221,73,42
	.word	.L1606,.L1783
	.byte	6
	.byte	'DtcId',0,1,222,73,12
	.word	.L1599,.L1784
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmGetNextFilteredDTC')
	.sect	'.debug_abbrev'
.L1279:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmGetNextFilteredDTC')
	.sect	'.debug_line'
.L1280:
	.word	.L3594-.L3593
.L3593:
	.half	3
	.word	.L3596-.L3595
.L3595:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3596:
	.byte	5,49,7,0,5,2
	.word	.L1043
	.byte	3,220,201,0,1,5,8,9
	.half	.L2763-.L1043
	.byte	3,3,1,5,40,7,9
	.half	.L3597-.L2763
	.byte	1,5,16,7,9
	.half	.L720-.L3597
	.byte	3,3,1,5,1,9
	.half	.L3598-.L720
	.byte	3,39,1,5,13,7,9
	.half	.L721-.L3598
	.byte	3,91,1,5,30,9
	.half	.L3599-.L721
	.byte	1,5,10,9
	.half	.L3600-.L3599
	.byte	1,5,13,7,9
	.half	.L3601-.L3600
	.byte	3,4,1,5,30,9
	.half	.L3602-.L3601
	.byte	1,5,55,9
	.half	.L3603-.L3602
	.byte	1,5,72,9
	.half	.L3604-.L3603
	.byte	1,5,10,9
	.half	.L3605-.L3604
	.byte	1,5,47,7,9
	.half	.L3606-.L3605
	.byte	3,2,1,5,45,9
	.half	.L3607-.L3606
	.byte	1,5,48,9
	.half	.L3608-.L3607
	.byte	3,1,1,5,47,9
	.half	.L3609-.L3608
	.byte	3,1,1,5,16,9
	.half	.L723-.L3609
	.byte	3,2,1,5,1,9
	.half	.L3610-.L723
	.byte	3,27,1,5,74,7,9
	.half	.L724-.L3610
	.byte	3,106,1,5,17,9
	.half	.L3611-.L724
	.byte	1,5,56,9
	.half	.L3612-.L3611
	.byte	1,5,16,9
	.half	.L2764-.L3612
	.byte	3,1,1,5,14,9
	.half	.L3613-.L2764
	.byte	1,5,24,9
	.half	.L3614-.L3613
	.byte	3,17,1,5,20,9
	.half	.L3615-.L3614
	.byte	1,5,26,9
	.half	.L3616-.L3615
	.byte	3,1,1,5,47,9
	.half	.L3617-.L3616
	.byte	1,5,1,9
	.half	.L3618-.L3617
	.byte	3,3,1,7,9
	.half	.L1282-.L3618
	.byte	0,1,1
.L3594:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmGetNextFilteredDTC')
	.sect	'.debug_ranges'
.L1281:
	.word	-1,.L1043,0,.L1282-.L1043,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmGetNextFilteredDTCAndFDC')
	.sect	'.debug_info'
.L1283:
	.word	328
	.half	3
	.word	.L1284
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1286,.L1285
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmGetNextFilteredDTCAndFDC',0,1,159,74,54
	.word	.L1606
	.byte	1,1,1
	.word	.L1045,.L1785,.L1044
	.byte	4
	.byte	'DTC',0,1,161,74,45
	.word	.L1671,.L1786
	.byte	4
	.byte	'DTCFaultDetectionCounter',0,1,162,74,44
	.word	.L1682,.L1787
	.byte	5
	.word	.L1045,.L1785
	.byte	6
	.byte	'Result',0,1,165,74,42
	.word	.L1606,.L1788
	.byte	6
	.byte	'DtcId',0,1,166,74,12
	.word	.L1599,.L1789
	.byte	6
	.byte	'ret',0,1,167,74,20
	.word	.L1606,.L1790
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmGetNextFilteredDTCAndFDC')
	.sect	'.debug_abbrev'
.L1284:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmGetNextFilteredDTCAndFDC')
	.sect	'.debug_line'
.L1285:
	.word	.L3620-.L3619
.L3619:
	.half	3
	.word	.L3622-.L3621
.L3621:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3622:
	.byte	5,49,7,0,5,2
	.word	.L1045
	.byte	3,164,202,0,1,5,8,9
	.half	.L2768-.L1045
	.byte	3,4,1,5,55,7,9
	.half	.L3623-.L2768
	.byte	1,5,14,7,9
	.half	.L3624-.L3623
	.byte	3,5,1,5,31,9
	.half	.L3625-.L3624
	.byte	1,5,13,9
	.half	.L3626-.L3625
	.byte	1,5,63,7,9
	.half	.L3627-.L3626
	.byte	1,5,80,9
	.half	.L3628-.L3627
	.byte	1,5,94,9
	.half	.L3629-.L3628
	.byte	1,5,13,7,9
	.half	.L3630-.L3629
	.byte	3,6,1,5,30,9
	.half	.L3631-.L3630
	.byte	1,5,55,9
	.half	.L3632-.L3631
	.byte	1,5,72,9
	.half	.L3633-.L3632
	.byte	1,5,10,9
	.half	.L3634-.L3633
	.byte	1,5,47,7,9
	.half	.L3635-.L3634
	.byte	3,2,1,5,45,9
	.half	.L2769-.L3635
	.byte	1,5,40,9
	.half	.L3636-.L2769
	.byte	3,1,1,5,48,9
	.half	.L3637-.L3636
	.byte	3,1,1,5,47,9
	.half	.L3638-.L3637
	.byte	3,1,1,5,16,9
	.half	.L727-.L3638
	.byte	3,2,1,5,52,9
	.half	.L3639-.L727
	.byte	3,123,1,5,57,9
	.half	.L731-.L3639
	.byte	3,10,1,5,74,9
	.half	.L3640-.L731
	.byte	1,5,17,9
	.half	.L3641-.L3640
	.byte	1,5,56,9
	.half	.L3642-.L3641
	.byte	1,5,16,9
	.half	.L2770-.L3642
	.byte	3,1,1,5,14,9
	.half	.L3643-.L2770
	.byte	1,5,12,9
	.half	.L3644-.L3643
	.byte	3,17,1,5,9,9
	.half	.L3645-.L3644
	.byte	1,5,20,7,9
	.half	.L3646-.L3645
	.byte	3,3,1,5,54,9
	.half	.L3647-.L3646
	.byte	1,5,13,9
	.half	.L2767-.L3647
	.byte	3,1,1,7,9
	.half	.L3648-.L2767
	.byte	1,5,17,9
	.half	.L733-.L3648
	.byte	3,6,1,5,14,9
	.half	.L3649-.L733
	.byte	1,5,16,7,9
	.half	.L3650-.L3649
	.byte	3,3,1,5,13,9
	.half	.L3651-.L3650
	.byte	1,5,45,7,9
	.half	.L3652-.L3651
	.byte	3,2,1,5,43,9
	.half	.L3653-.L3652
	.byte	1,5,71,9
	.half	.L3654-.L3653
	.byte	1,5,45,9
	.half	.L737-.L3654
	.byte	3,4,1,5,43,9
	.half	.L3655-.L737
	.byte	1,5,13,9
	.half	.L3656-.L3655
	.byte	3,126,1,5,17,9
	.half	.L736-.L3656
	.byte	3,7,1,5,14,9
	.half	.L3657-.L736
	.byte	1,5,17,7,9
	.half	.L3658-.L3657
	.byte	3,2,1,5,16,9
	.half	.L3659-.L3658
	.byte	1,5,25,7,9
	.half	.L3660-.L3659
	.byte	3,1,1,5,57,9
	.half	.L3661-.L3660
	.byte	1,5,45,7,9
	.half	.L741-.L3661
	.byte	3,2,1,5,43,9
	.half	.L3662-.L741
	.byte	1,5,71,9
	.half	.L3663-.L3662
	.byte	1,5,22,9
	.half	.L742-.L3663
	.byte	3,2,1,5,21,9
	.half	.L3664-.L742
	.byte	1,5,25,7,9
	.half	.L3665-.L3664
	.byte	3,1,1,5,57,9
	.half	.L3666-.L3665
	.byte	1,5,45,7,9
	.half	.L744-.L3666
	.byte	3,2,1,5,43,9
	.half	.L3667-.L744
	.byte	1,5,71,9
	.half	.L3668-.L3667
	.byte	1,5,45,9
	.half	.L745-.L3668
	.byte	3,4,1,5,43,9
	.half	.L3669-.L745
	.byte	1,5,13,9
	.half	.L3670-.L3669
	.byte	3,121,1,5,20,9
	.half	.L735-.L3670
	.byte	3,13,1,5,9,9
	.half	.L734-.L735
	.byte	3,3,1,5,26,9
	.half	.L3671-.L734
	.byte	1,5,47,9
	.half	.L3672-.L3671
	.byte	1,5,5,9
	.half	.L732-.L3672
	.byte	3,2,1,5,1,9
	.half	.L2773-.L732
	.byte	3,1,1,7,9
	.half	.L1287-.L2773
	.byte	0,1,1
.L3620:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmGetNextFilteredDTCAndFDC')
	.sect	'.debug_ranges'
.L1286:
	.word	-1,.L1045,0,.L1287-.L1045,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmGetNextFilteredDTCAndSeverity')
	.sect	'.debug_info'
.L1288:
	.word	357
	.half	3
	.word	.L1289
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1291,.L1290
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmGetNextFilteredDTCAndSeverity',0,1,153,75,54
	.word	.L1606
	.byte	1,1,1
	.word	.L1047,.L1791,.L1046
	.byte	4
	.byte	'DTC',0,1,155,75,45
	.word	.L1671,.L1792
	.byte	4
	.byte	'DTCStatus',0,1,156,75,60
	.word	.L1650,.L1793
	.byte	4
	.byte	'DTCSeverity',0,1,157,75,58
	.word	.L1757,.L1794
	.byte	4
	.byte	'DTCFunctionalUnit',0,1,158,75,44
	.word	.L1695,.L1795
	.byte	5
	.word	.L1047,.L1791
	.byte	6
	.byte	'Result',0,1,161,75,42
	.word	.L1606,.L1796
	.byte	6
	.byte	'DtcId',0,1,162,75,12
	.word	.L1599,.L1797
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmGetNextFilteredDTCAndSeverity')
	.sect	'.debug_abbrev'
.L1289:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmGetNextFilteredDTCAndSeverity')
	.sect	'.debug_line'
.L1290:
	.word	.L3674-.L3673
.L3673:
	.half	3
	.word	.L3676-.L3675
.L3675:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3676:
	.byte	5,49,7,0,5,2
	.word	.L1047
	.byte	3,160,203,0,1,5,8,9
	.half	.L2774-.L1047
	.byte	3,3,1,5,40,7,9
	.half	.L3677-.L2774
	.byte	1,5,29,7,9
	.half	.L3678-.L3677
	.byte	3,1,1,5,64,7,9
	.half	.L3679-.L3678
	.byte	1,5,13,7,9
	.half	.L3680-.L3679
	.byte	3,5,1,5,30,9
	.half	.L3681-.L3680
	.byte	1,5,10,9
	.half	.L3682-.L3681
	.byte	1,5,13,7,9
	.half	.L3683-.L3682
	.byte	3,4,1,5,30,9
	.half	.L3684-.L3683
	.byte	1,5,55,9
	.half	.L3685-.L3684
	.byte	1,5,72,9
	.half	.L3686-.L3685
	.byte	1,5,10,9
	.half	.L3687-.L3686
	.byte	1,5,45,7,9
	.half	.L3688-.L3687
	.byte	3,2,1,5,48,9
	.half	.L3689-.L3688
	.byte	3,1,1,5,47,9
	.half	.L3690-.L3689
	.byte	3,1,1,5,16,9
	.half	.L749-.L3690
	.byte	3,2,1,5,1,9
	.half	.L3691-.L749
	.byte	3,28,1,5,74,7,9
	.half	.L754-.L3691
	.byte	3,105,1,5,17,9
	.half	.L3692-.L754
	.byte	1,5,56,9
	.half	.L3693-.L3692
	.byte	1,5,16,9
	.half	.L2775-.L3693
	.byte	3,1,1,5,14,9
	.half	.L3694-.L2775
	.byte	1,5,24,9
	.half	.L3695-.L3694
	.byte	3,16,1,5,20,9
	.half	.L3696-.L3695
	.byte	1,5,24,9
	.half	.L3697-.L3696
	.byte	3,1,1,5,22,9
	.half	.L3698-.L3697
	.byte	1,5,30,9
	.half	.L3699-.L3698
	.byte	3,1,1,5,28,9
	.half	.L2776-.L3699
	.byte	1,5,26,9
	.half	.L3700-.L2776
	.byte	3,1,1,5,47,9
	.half	.L3701-.L3700
	.byte	1,5,1,9
	.half	.L3702-.L3701
	.byte	3,3,1,7,9
	.half	.L1292-.L3702
	.byte	0,1,1
.L3674:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmGetNextFilteredDTCAndSeverity')
	.sect	'.debug_ranges'
.L1291:
	.word	-1,.L1047,0,.L1292-.L1047,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmSetFreezeFrameRecordFilter')
	.sect	'.debug_info'
.L1293:
	.word	429
	.half	3
	.word	.L1294
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1296,.L1295
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmSetFreezeFrameRecordFilter',0,1,225,75,41
	.word	.L1606
	.byte	1,1,1
	.word	.L1049,.L1798,.L1048
	.byte	4
	.byte	'DTCFormat',0,1,227,75,23
	.word	.L1606,.L1799
	.byte	4
	.byte	'NumberOfFilteredRecords',0,1,228,75,45
	.word	.L1704,.L1800
	.byte	5
	.word	.L1049,.L1798
	.byte	6
	.byte	'Result',0,1,232,75,29
	.word	.L1606,.L1801
	.byte	6
	.byte	'i',0,1,234,75,12
	.word	.L1599,.L1802
	.byte	6
	.byte	'j',0,1,235,75,11
	.word	.L1606,.L1803
	.byte	6
	.byte	'DTC',0,1,236,75,12
	.word	.L1732,.L1804
	.byte	6
	.byte	'RecordNumber',0,1,237,75,11
	.word	.L1606,.L1805
	.byte	6
	.byte	'SizeOfFreezeFrame',0,1,238,75,12
	.word	.L1599,.L1806
	.byte	6
	.byte	'FFDataOffset',0,1,239,75,12
	.word	.L1599,.L1807
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmSetFreezeFrameRecordFilter')
	.sect	'.debug_abbrev'
.L1294:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmSetFreezeFrameRecordFilter')
	.sect	'.debug_line'
.L1295:
	.word	.L3704-.L3703
.L3703:
	.half	3
	.word	.L3706-.L3705
.L3705:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3706:
	.byte	5,41,7,0,5,2
	.word	.L1049
	.byte	3,224,203,0,1,5,36,9
	.half	.L2778-.L1049
	.byte	3,7,1,5,32,9
	.half	.L2779-.L2778
	.byte	3,6,1,5,30,9
	.half	.L2780-.L2779
	.byte	1,5,25,9
	.half	.L3707-.L2780
	.byte	3,1,1,5,8,9
	.half	.L3708-.L3707
	.byte	3,3,1,5,5,9
	.half	.L2781-.L3708
	.byte	1,5,13,7,9
	.half	.L3709-.L2781
	.byte	3,6,1,5,23,7,9
	.half	.L3710-.L3709
	.byte	3,1,1,5,10,7,9
	.half	.L758-.L3710
	.byte	3,5,1,5,16,7,9
	.half	.L757-.L758
	.byte	3,3,1,5,34,9
	.half	.L3711-.L757
	.byte	1,5,36,9
	.half	.L760-.L3711
	.byte	3,5,1,5,34,9
	.half	.L2782-.L760
	.byte	1,5,9,9
	.half	.L3712-.L2782
	.byte	3,1,1,5,27,9
	.half	.L3713-.L3712
	.byte	1,5,9,9
	.half	.L3714-.L3713
	.byte	3,1,1,5,37,9
	.half	.L3715-.L3714
	.byte	1,5,9,9
	.half	.L3716-.L3715
	.byte	3,1,1,5,47,9
	.half	.L3717-.L3716
	.byte	1,5,9,9
	.half	.L3718-.L3717
	.byte	3,1,1,5,48,9
	.half	.L3719-.L3718
	.byte	1,5,75,9
	.half	.L3720-.L3719
	.byte	3,4,1,5,57,9
	.half	.L3721-.L3720
	.byte	3,3,1,5,24,9
	.half	.L3722-.L3721
	.byte	3,123,1,5,38,9
	.half	.L3723-.L3722
	.byte	1,5,17,9
	.half	.L763-.L3723
	.byte	3,2,1,5,16,9
	.half	.L3724-.L763
	.byte	1,5,48,7,9
	.half	.L3725-.L3724
	.byte	1,5,72,9
	.half	.L3726-.L3725
	.byte	1,5,21,7,9
	.half	.L3727-.L3726
	.byte	3,1,1,5,53,9
	.half	.L3728-.L3727
	.byte	1,5,74,7,9
	.half	.L3729-.L3728
	.byte	3,2,1,5,17,9
	.half	.L3730-.L3729
	.byte	1,5,56,9
	.half	.L3731-.L3730
	.byte	1,5,96,9
	.half	.L3732-.L3731
	.byte	1,5,34,9
	.half	.L3733-.L3732
	.byte	3,1,1,5,54,9
	.half	.L3734-.L3733
	.byte	1,5,23,9
	.half	.L3735-.L3734
	.byte	3,1,1,5,59,9
	.half	.L2783-.L3735
	.byte	1,5,27,9
	.half	.L768-.L2783
	.byte	3,2,1,5,36,9
	.half	.L2785-.L768
	.byte	3,1,1,5,60,9
	.half	.L2787-.L2785
	.byte	3,1,1,5,70,9
	.half	.L3736-.L2787
	.byte	3,1,1,5,90,9
	.half	.L3737-.L3736
	.byte	1,5,24,9
	.half	.L2786-.L3737
	.byte	3,1,1,5,21,9
	.half	.L3738-.L2786
	.byte	1,5,27,7,9
	.half	.L3739-.L3738
	.byte	3,2,1,5,51,9
	.half	.L3740-.L3739
	.byte	1,5,62,9
	.half	.L769-.L3740
	.byte	3,120,1,5,32,9
	.half	.L767-.L769
	.byte	1,5,59,9
	.half	.L3741-.L767
	.byte	1,5,41,7,9
	.half	.L764-.L3741
	.byte	3,121,1,5,38,9
	.half	.L762-.L764
	.byte	1,5,9,7,9
	.half	.L3742-.L762
	.byte	3,20,1,5,47,9
	.half	.L3743-.L3742
	.byte	1,5,45,9
	.half	.L3744-.L3743
	.byte	1,5,5,9
	.half	.L761-.L3744
	.byte	3,5,1,5,1,9
	.half	.L2788-.L761
	.byte	3,1,1,7,9
	.half	.L1297-.L2788
	.byte	0,1,1
.L3704:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmSetFreezeFrameRecordFilter')
	.sect	'.debug_ranges'
.L1296:
	.word	-1,.L1049,0,.L1297-.L1049,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmGetNextFilteredRecord')
	.sect	'.debug_info'
.L1298:
	.word	353
	.half	3
	.word	.L1299
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1301,.L1300
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmGetNextFilteredRecord',0,1,185,76,54
	.word	.L1606
	.byte	1,1,1
	.word	.L1051,.L1808,.L1050
	.byte	4
	.byte	'DTC',0,1,187,76,45
	.word	.L1671,.L1809
	.byte	4
	.byte	'RecordNumber',0,1,188,76,44
	.word	.L1695,.L1810
	.byte	5
	.word	.L1051,.L1808
	.byte	6
	.byte	'Result',0,1,192,76,42
	.word	.L1606,.L1811
	.byte	6
	.byte	'DtcId',0,1,194,76,12
	.word	.L1599,.L1812
	.byte	6
	.byte	'SizeOfFreezeFrame',0,1,195,76,12
	.word	.L1599,.L1813
	.byte	6
	.byte	'FFDataOffset',0,1,196,76,12
	.word	.L1599,.L1814
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmGetNextFilteredRecord')
	.sect	'.debug_abbrev'
.L1299:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmGetNextFilteredRecord')
	.sect	'.debug_line'
.L1300:
	.word	.L3746-.L3745
.L3745:
	.half	3
	.word	.L3748-.L3747
.L3747:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3748:
	.byte	5,54,7,0,5,2
	.word	.L1051
	.byte	3,184,204,0,1,5,49,9
	.half	.L2792-.L1051
	.byte	3,7,1,5,30,9
	.half	.L2793-.L2792
	.byte	3,3,1,5,25,9
	.half	.L3749-.L2793
	.byte	3,1,1,5,8,9
	.half	.L3750-.L3749
	.byte	3,2,1,5,43,7,9
	.half	.L3751-.L3750
	.byte	1,5,13,7,9
	.half	.L3752-.L3751
	.byte	3,5,1,5,30,9
	.half	.L3753-.L3752
	.byte	1,5,10,9
	.half	.L3754-.L3753
	.byte	1,5,13,7,9
	.half	.L3755-.L3754
	.byte	3,4,1,5,30,9
	.half	.L3756-.L3755
	.byte	1,5,55,9
	.half	.L3757-.L3756
	.byte	1,5,72,9
	.half	.L2790-.L3757
	.byte	1,5,10,9
	.half	.L3758-.L2790
	.byte	1,5,45,7,9
	.half	.L3759-.L3758
	.byte	3,2,1,5,48,9
	.half	.L3760-.L3759
	.byte	3,1,1,5,47,9
	.half	.L3761-.L3760
	.byte	3,1,1,5,16,9
	.half	.L771-.L3761
	.byte	3,2,1,5,52,9
	.half	.L3762-.L771
	.byte	3,124,1,5,61,9
	.half	.L777-.L3762
	.byte	3,11,1,5,78,9
	.half	.L3763-.L777
	.byte	1,5,21,9
	.half	.L3764-.L3763
	.byte	1,5,60,9
	.half	.L3765-.L3764
	.byte	1,5,16,9
	.half	.L2794-.L3765
	.byte	3,1,1,5,37,9
	.half	.L3766-.L2794
	.byte	1,5,13,9
	.half	.L3767-.L3766
	.byte	1,5,55,7,9
	.half	.L3768-.L3767
	.byte	3,2,1,5,37,9
	.half	.L3769-.L3768
	.byte	3,1,1,5,35,9
	.half	.L3770-.L3769
	.byte	1,5,16,9
	.half	.L778-.L3770
	.byte	3,3,1,5,33,9
	.half	.L3771-.L778
	.byte	1,5,57,9
	.half	.L3772-.L3771
	.byte	1,5,74,9
	.half	.L3773-.L3772
	.byte	1,5,13,9
	.half	.L3774-.L3773
	.byte	1,5,25,7,9
	.half	.L3775-.L3774
	.byte	3,2,1,5,64,9
	.half	.L3776-.L3775
	.byte	1,5,24,9
	.half	.L2796-.L3776
	.byte	3,1,1,5,22,9
	.half	.L3777-.L2796
	.byte	1,5,33,9
	.half	.L3778-.L3777
	.byte	3,16,1,5,31,9
	.half	.L3779-.L3778
	.byte	1,5,51,9
	.half	.L3780-.L3779
	.byte	3,1,1,5,57,9
	.half	.L3781-.L3780
	.byte	1,5,67,9
	.half	.L3782-.L3781
	.byte	3,1,1,5,87,9
	.half	.L3783-.L3782
	.byte	1,5,17,9
	.half	.L3784-.L3783
	.byte	3,1,1,5,34,9
	.half	.L3785-.L3784
	.byte	1,5,20,9
	.half	.L3786-.L3785
	.byte	3,2,1,5,17,9
	.half	.L3787-.L3786
	.byte	1,5,21,7,9
	.half	.L3788-.L3787
	.byte	3,2,1,5,17,9
	.half	.L779-.L3788
	.byte	3,5,1,5,55,9
	.half	.L3789-.L779
	.byte	1,5,53,9
	.half	.L3790-.L3789
	.byte	1,5,17,9
	.half	.L3791-.L3790
	.byte	3,1,1,5,56,9
	.half	.L3792-.L3791
	.byte	1,5,17,9
	.half	.L3793-.L3792
	.byte	3,1,1,5,55,9
	.half	.L3794-.L3793
	.byte	1,5,24,9
	.half	.L3795-.L3794
	.byte	3,2,1,5,16,9
	.half	.L776-.L3795
	.byte	3,84,1,5,33,9
	.half	.L3796-.L776
	.byte	1,5,57,9
	.half	.L3797-.L3796
	.byte	1,5,74,9
	.half	.L3798-.L3797
	.byte	1,5,95,9
	.half	.L3799-.L3798
	.byte	1,5,5,7,9
	.half	.L775-.L3799
	.byte	3,51,1,5,1,9
	.half	.L2798-.L775
	.byte	3,1,1,7,9
	.half	.L1302-.L2798
	.byte	0,1,1
.L3746:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmGetNextFilteredRecord')
	.sect	'.debug_ranges'
.L1301:
	.word	-1,.L1051,0,.L1302-.L1051,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmGetDTCByOccurrenceTime')
	.sect	'.debug_info'
.L1303:
	.word	297
	.half	3
	.word	.L1304
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1306,.L1305
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmGetDTCByOccurrenceTime',0,1,160,77,54
	.word	.L1606
	.byte	1,1,1
	.word	.L1053,.L1815,.L1052
	.byte	4
	.byte	'DTCRequest',0,1,162,77,24
	.word	.L1606,.L1816
	.byte	4
	.byte	'DTC',0,1,163,77,45
	.word	.L1671,.L1817
	.byte	5
	.word	.L1053,.L1815
	.byte	6
	.byte	'Result',0,1,166,77,42
	.word	.L1606,.L1818
	.byte	6
	.byte	'EventId',0,1,167,77,12
	.word	.L1599,.L1819
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmGetDTCByOccurrenceTime')
	.sect	'.debug_abbrev'
.L1304:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmGetDTCByOccurrenceTime')
	.sect	'.debug_line'
.L1305:
	.word	.L3801-.L3800
.L3800:
	.half	3
	.word	.L3803-.L3802
.L3802:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3803:
	.byte	5,49,7,0,5,2
	.word	.L1053
	.byte	3,165,205,0,1,5,20,9
	.half	.L2799-.L1053
	.byte	3,1,1,5,8,9
	.half	.L2800-.L2799
	.byte	3,2,1,5,5,9
	.half	.L3804-.L2800
	.byte	1,5,10,7,9
	.half	.L3805-.L3804
	.byte	3,6,1,5,18,7,9
	.half	.L3806-.L3805
	.byte	3,10,1,7,9
	.half	.L3807-.L3806
	.byte	3,4,1,7,9
	.half	.L3808-.L3807
	.byte	3,4,1,7,9
	.half	.L3809-.L3808
	.byte	3,4,1,7,9
	.half	.L3810-.L3809
	.byte	1,5,27,9
	.half	.L785-.L3810
	.byte	3,117,1,5,17,9
	.half	.L3811-.L785
	.byte	3,1,1,5,27,9
	.half	.L786-.L3811
	.byte	3,3,1,5,17,9
	.half	.L3812-.L786
	.byte	3,1,1,5,27,9
	.half	.L787-.L3812
	.byte	3,3,1,5,17,9
	.half	.L3813-.L787
	.byte	3,1,1,5,27,9
	.half	.L788-.L3813
	.byte	3,3,1,5,22,9
	.half	.L789-.L788
	.byte	3,7,1,5,9,9
	.half	.L3814-.L789
	.byte	1,5,20,7,9
	.half	.L3815-.L3814
	.byte	3,2,1,5,18,9
	.half	.L3816-.L3815
	.byte	1,5,1,9
	.half	.L3817-.L3816
	.byte	3,9,1,5,20,7,9
	.half	.L783-.L3817
	.byte	3,124,1,5,1,9
	.half	.L3818-.L783
	.byte	3,4,1,7,9
	.half	.L1307-.L3818
	.byte	0,1,1
.L3801:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmGetDTCByOccurrenceTime')
	.sect	'.debug_ranges'
.L1306:
	.word	-1,.L1053,0,.L1307-.L1053,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmDisableDTCRecordUpdate')
	.sect	'.debug_info'
.L1308:
	.word	294
	.half	3
	.word	.L1309
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1311,.L1310
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmDisableDTCRecordUpdate',0,1,135,78,54
	.word	.L1606
	.byte	1,1,1
	.word	.L1057,.L1820,.L1056
	.byte	4
	.byte	'DTC',0,1,137,78,12
	.word	.L1732,.L1821
	.byte	4
	.byte	'DTCOrigin',0,1,138,78,23
	.word	.L1606,.L1822
	.byte	5
	.word	.L1057,.L1820
	.byte	6
	.byte	'Result',0,1,141,78,42
	.word	.L1606,.L1823
	.byte	6
	.byte	'DtcId',0,1,142,78,12
	.word	.L1599,.L1824
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmDisableDTCRecordUpdate')
	.sect	'.debug_abbrev'
.L1309:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmDisableDTCRecordUpdate')
	.sect	'.debug_line'
.L1310:
	.word	.L3820-.L3819
.L3819:
	.half	3
	.word	.L3822-.L3821
.L3821:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3822:
	.byte	5,54,7,0,5,2
	.word	.L1057
	.byte	3,134,206,0,1,5,49,9
	.half	.L2801-.L1057
	.byte	3,6,1,5,8,9
	.half	.L2803-.L2801
	.byte	3,3,1,5,5,9
	.half	.L3823-.L2803
	.byte	1,5,10,7,9
	.half	.L3824-.L3823
	.byte	3,5,1,5,16,7,9
	.half	.L3825-.L3824
	.byte	3,3,1,5,54,9
	.half	.L3826-.L3825
	.byte	1,5,53,9
	.half	.L797-.L3826
	.byte	3,2,1,5,10,9
	.half	.L2802-.L797
	.byte	1,5,16,7,9
	.half	.L3827-.L2802
	.byte	3,3,1,5,48,9
	.half	.L3828-.L3827
	.byte	1,5,28,9
	.half	.L799-.L3828
	.byte	3,6,1,5,9,9
	.half	.L3829-.L799
	.byte	1,5,27,9
	.half	.L3830-.L3829
	.byte	1,5,37,9
	.half	.L3831-.L3830
	.byte	1,5,35,9
	.half	.L3832-.L3831
	.byte	1,5,5,9
	.half	.L796-.L3832
	.byte	3,3,1,5,1,9
	.half	.L2804-.L796
	.byte	3,1,1,7,9
	.half	.L1312-.L2804
	.byte	0,1,1
.L3820:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmDisableDTCRecordUpdate')
	.sect	'.debug_ranges'
.L1311:
	.word	-1,.L1057,0,.L1312-.L1057,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmEnableDTCRecordUpdate')
	.sect	'.debug_info'
.L1313:
	.word	229
	.half	3
	.word	.L1314
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1316,.L1315
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmEnableDTCRecordUpdate',0,1,185,78,32
	.word	.L1606
	.byte	1,1,1
	.word	.L1059,.L1825,.L1058
	.byte	4
	.word	.L1059,.L1825
	.byte	5
	.byte	'i',0,1,190,78,12
	.word	.L1599,.L1826
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmEnableDTCRecordUpdate')
	.sect	'.debug_abbrev'
.L1314:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmEnableDTCRecordUpdate')
	.sect	'.debug_line'
.L1315:
	.word	.L3834-.L3833
.L3833:
	.half	3
	.word	.L3836-.L3835
.L3835:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3836:
	.byte	5,8,7,0,5,2
	.word	.L1059
	.byte	3,190,206,0,1,5,5,9
	.half	.L3837-.L1059
	.byte	1,5,15,7,9
	.half	.L3838-.L3837
	.byte	3,9,1,5,37,9
	.half	.L2805-.L3838
	.byte	3,3,1,5,24,9
	.half	.L3839-.L2805
	.byte	3,125,1,5,38,9
	.half	.L3840-.L3839
	.byte	1,5,13,9
	.half	.L804-.L3840
	.byte	3,3,1,5,31,9
	.half	.L3841-.L804
	.byte	1,5,35,9
	.half	.L3842-.L3841
	.byte	1,5,41,9
	.half	.L3843-.L3842
	.byte	3,125,1,5,38,9
	.half	.L803-.L3843
	.byte	1,5,12,7,9
	.half	.L802-.L803
	.byte	3,9,1,5,1,9
	.half	.L3844-.L802
	.byte	3,1,1,7,9
	.half	.L1317-.L3844
	.byte	0,1,1
.L3834:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmEnableDTCRecordUpdate')
	.sect	'.debug_ranges'
.L1316:
	.word	-1,.L1059,0,.L1317-.L1059,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmGetFreezeFrameDataByDTC')
	.sect	'.debug_info'
.L1318:
	.word	454
	.half	3
	.word	.L1319
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1321,.L1320
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmGetFreezeFrameDataByDTC',0,1,239,78,55
	.word	.L1606
	.byte	1,1,1
	.word	.L1061,.L1827,.L1060
	.byte	4
	.byte	'DTC',0,1,241,78,12
	.word	.L1732,.L1828
	.byte	4
	.byte	'DTCOrigin',0,1,242,78,23
	.word	.L1606,.L1829
	.byte	4
	.byte	'RecordNumber',0,1,243,78,11
	.word	.L1606,.L1830
	.byte	4
	.byte	'DestBuffer',0,1,244,78,44
	.word	.L1695,.L1831
	.byte	4
	.byte	'BufSize',0,1,245,78,45
	.word	.L1704,.L1832
	.byte	5
	.word	.L1061,.L1827
	.byte	6
	.byte	'Result',0,1,248,78,43
	.word	.L1606,.L1833
	.byte	6
	.byte	'ret',0,1,249,78,38
	.word	.L1606,.L1834
	.byte	6
	.byte	'FFDataOffset',0,1,250,78,12
	.word	.L1599,.L1835
	.byte	6
	.byte	'DtcId',0,1,251,78,12
	.word	.L1599,.L1836
	.byte	6
	.byte	'Size',0,1,252,78,12
	.word	.L1732,.L1837
	.byte	6
	.byte	'DestBufferPtr',0,1,254,78,12
	.word	.L1695,.L1838
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmGetFreezeFrameDataByDTC')
	.sect	'.debug_abbrev'
.L1319:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmGetFreezeFrameDataByDTC')
	.sect	'.debug_line'
.L1320:
	.word	.L3846-.L3845
.L3845:
	.half	3
	.word	.L3848-.L3847
.L3847:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3848:
	.byte	5,55,7,0,5,2
	.word	.L1061
	.byte	3,238,206,0,1,5,50,9
	.half	.L2811-.L1061
	.byte	3,9,1,5,5,9
	.half	.L2813-.L2811
	.byte	3,8,1,5,16,7,9
	.half	.L3849-.L2813
	.byte	3,2,1,5,54,9
	.half	.L3850-.L3849
	.byte	1,5,53,9
	.half	.L806-.L3850
	.byte	3,2,1,5,10,9
	.half	.L2807-.L806
	.byte	1,5,25,7,9
	.half	.L3851-.L2807
	.byte	3,7,1,5,83,9
	.half	.L2814-.L3851
	.byte	3,1,1,5,9,9
	.half	.L2818-.L2814
	.byte	3,1,1,5,20,7,9
	.half	.L808-.L2818
	.byte	3,3,1,5,51,9
	.half	.L3852-.L808
	.byte	1,5,14,9
	.half	.L809-.L3852
	.byte	3,2,1,5,20,7,9
	.half	.L3853-.L809
	.byte	3,3,1,5,57,9
	.half	.L3854-.L3853
	.byte	1,5,14,9
	.half	.L811-.L3854
	.byte	3,2,1,5,20,7,9
	.half	.L3855-.L811
	.byte	3,2,1,5,60,9
	.half	.L3856-.L3855
	.byte	1,5,14,9
	.half	.L813-.L3856
	.byte	3,2,1,5,20,7,9
	.half	.L3857-.L813
	.byte	3,2,1,5,5,9
	.half	.L807-.L3857
	.byte	3,8,1,5,29,7,9
	.half	.L3858-.L807
	.byte	3,2,1,5,9,9
	.half	.L2820-.L3858
	.byte	1,5,32,7,9
	.half	.L2821-.L2820
	.byte	3,5,1,5,13,9
	.half	.L3859-.L2821
	.byte	1,5,42,7,9
	.half	.L3860-.L3859
	.byte	3,3,1,5,49,9
	.half	.L3861-.L3860
	.byte	1,5,43,9
	.half	.L2823-.L3861
	.byte	3,127,1,5,41,9
	.half	.L818-.L2823
	.byte	3,5,1,5,97,9
	.half	.L3862-.L818
	.byte	1,5,95,9
	.half	.L3863-.L3862
	.byte	1,5,112,9
	.half	.L3864-.L3863
	.byte	1,5,13,9
	.half	.L2825-.L3864
	.byte	3,126,1,5,20,9
	.half	.L817-.L2825
	.byte	3,8,1,5,5,9
	.half	.L816-.L817
	.byte	3,7,1,5,1,9
	.half	.L2826-.L816
	.byte	3,1,1,7,9
	.half	.L1322-.L2826
	.byte	0,1,1
.L3846:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmGetFreezeFrameDataByDTC')
	.sect	'.debug_ranges'
.L1321:
	.word	-1,.L1061,0,.L1322-.L1061,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmGetSizeOfFreezeFrameByDTC')
	.sect	'.debug_info'
.L1323:
	.word	361
	.half	3
	.word	.L1324
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1326,.L1325
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmGetSizeOfFreezeFrameByDTC',0,1,217,79,50
	.word	.L1606
	.byte	1,1,1
	.word	.L1063,.L1839,.L1062
	.byte	4
	.byte	'DTC',0,1,219,79,12
	.word	.L1732,.L1840
	.byte	4
	.byte	'DTCOrigin',0,1,220,79,23
	.word	.L1606,.L1841
	.byte	4
	.byte	'RecordNumber',0,1,221,79,11
	.word	.L1606,.L1842
	.byte	4
	.byte	'SizeOfFreezeFrame',0,1,222,79,45
	.word	.L1704,.L1843
	.byte	5
	.word	.L1063,.L1839
	.byte	6
	.byte	'Result',0,1,225,79,38
	.word	.L1606,.L1844
	.byte	6
	.byte	'FFDataOffset',0,1,226,79,12
	.word	.L1599,.L1845
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmGetSizeOfFreezeFrameByDTC')
	.sect	'.debug_abbrev'
.L1324:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmGetSizeOfFreezeFrameByDTC')
	.sect	'.debug_line'
.L1325:
	.word	.L3866-.L3865
.L3865:
	.half	3
	.word	.L3868-.L3867
.L3867:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3868:
	.byte	5,50,7,0,5,2
	.word	.L1063
	.byte	3,216,207,0,1,5,92,9
	.half	.L2827-.L1063
	.byte	3,11,1,5,1,9
	.half	.L1327-.L2827
	.byte	3,3,0,1,1
.L3866:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmGetSizeOfFreezeFrameByDTC')
	.sect	'.debug_ranges'
.L1326:
	.word	-1,.L1063,0,.L1327-.L1063,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmGetExtendedDataRecordByDTC')
	.sect	'.debug_info'
.L1328:
	.word	464
	.half	3
	.word	.L1329
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1331,.L1330
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmGetExtendedDataRecordByDTC',0,1,131,80,58
	.word	.L1606
	.byte	1,1,1
	.word	.L1065,.L1846,.L1064
	.byte	4
	.byte	'DTC',0,1,133,80,12
	.word	.L1732,.L1847
	.byte	4
	.byte	'DTCOrigin',0,1,134,80,23
	.word	.L1606,.L1848
	.byte	4
	.byte	'ExtendedDataNumber',0,1,135,80,11
	.word	.L1606,.L1849
	.byte	4
	.byte	'DestBuffer',0,1,136,80,44
	.word	.L1695,.L1850
	.byte	4
	.byte	'BufSize',0,1,137,80,45
	.word	.L1704,.L1851
	.byte	5
	.word	.L1065,.L1846
	.byte	6
	.byte	'Result',0,1,140,80,46
	.word	.L1606,.L1852
	.byte	6
	.byte	'ret',0,1,141,80,38
	.word	.L1606,.L1853
	.byte	6
	.byte	'ExtDataOffset',0,1,142,80,12
	.word	.L1599,.L1854
	.byte	6
	.byte	'DtcId',0,1,143,80,12
	.word	.L1599,.L1855
	.byte	6
	.byte	'Size',0,1,144,80,12
	.word	.L1732,.L1856
	.byte	6
	.byte	'DestBufferPtr',0,1,146,80,12
	.word	.L1695,.L1857
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmGetExtendedDataRecordByDTC')
	.sect	'.debug_abbrev'
.L1329:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmGetExtendedDataRecordByDTC')
	.sect	'.debug_line'
.L1330:
	.word	.L3870-.L3869
.L3869:
	.half	3
	.word	.L3872-.L3871
.L3871:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3872:
	.byte	5,58,7,0,5,2
	.word	.L1065
	.byte	3,130,208,0,1,5,53,9
	.half	.L2833-.L1065
	.byte	3,9,1,5,5,9
	.half	.L2835-.L2833
	.byte	3,8,1,5,16,7,9
	.half	.L3873-.L2835
	.byte	3,2,1,5,45,9
	.half	.L3874-.L3873
	.byte	1,5,53,9
	.half	.L823-.L3874
	.byte	3,2,1,5,10,9
	.half	.L2829-.L823
	.byte	1,5,25,7,9
	.half	.L3875-.L2829
	.byte	3,7,1,5,95,9
	.half	.L2836-.L3875
	.byte	3,2,1,5,9,9
	.half	.L2840-.L2836
	.byte	3,1,1,5,20,7,9
	.half	.L825-.L2840
	.byte	3,3,1,5,42,9
	.half	.L3876-.L825
	.byte	1,5,14,9
	.half	.L826-.L3876
	.byte	3,2,1,5,20,7,9
	.half	.L3877-.L826
	.byte	3,3,1,5,48,9
	.half	.L3878-.L3877
	.byte	1,5,14,9
	.half	.L828-.L3878
	.byte	3,2,1,5,20,7,9
	.half	.L3879-.L828
	.byte	3,2,1,5,45,9
	.half	.L3880-.L3879
	.byte	1,5,14,9
	.half	.L830-.L3880
	.byte	3,2,1,5,20,7,9
	.half	.L3881-.L830
	.byte	3,2,1,5,5,9
	.half	.L824-.L3881
	.byte	3,8,1,5,29,7,9
	.half	.L3882-.L824
	.byte	3,2,1,5,9,9
	.half	.L2842-.L3882
	.byte	1,5,38,7,9
	.half	.L2843-.L2842
	.byte	3,5,1,5,13,9
	.half	.L3883-.L2843
	.byte	1,5,48,7,9
	.half	.L3884-.L3883
	.byte	3,3,1,5,55,9
	.half	.L3885-.L3884
	.byte	1,5,43,9
	.half	.L2845-.L3885
	.byte	3,127,1,5,41,9
	.half	.L835-.L2845
	.byte	3,5,1,5,96,9
	.half	.L3886-.L835
	.byte	1,5,94,9
	.half	.L3887-.L3886
	.byte	1,5,112,9
	.half	.L3888-.L3887
	.byte	1,5,13,9
	.half	.L2847-.L3888
	.byte	3,126,1,5,20,9
	.half	.L834-.L2847
	.byte	3,8,1,5,5,9
	.half	.L833-.L834
	.byte	3,7,1,5,1,9
	.half	.L2848-.L833
	.byte	3,1,1,7,9
	.half	.L1332-.L2848
	.byte	0,1,1
.L3870:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmGetExtendedDataRecordByDTC')
	.sect	'.debug_ranges'
.L1331:
	.word	-1,.L1065,0,.L1332-.L1065,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmGetSizeOfExtendedDataRecordByDTC')
	.sect	'.debug_info'
.L1333:
	.word	382
	.half	3
	.word	.L1334
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1336,.L1335
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmGetSizeOfExtendedDataRecordByDTC',0,1,238,80,50
	.word	.L1606
	.byte	1,1,1
	.word	.L1067,.L1858,.L1066
	.byte	4
	.byte	'DTC',0,1,240,80,12
	.word	.L1732,.L1859
	.byte	4
	.byte	'DTCOrigin',0,1,241,80,23
	.word	.L1606,.L1860
	.byte	4
	.byte	'ExtendedDataNumber',0,1,242,80,11
	.word	.L1606,.L1861
	.byte	4
	.byte	'SizeOfExtendedDataRecord',0,1,243,80,45
	.word	.L1704,.L1862
	.byte	5
	.word	.L1067,.L1858
	.byte	6
	.byte	'Result',0,1,246,80,38
	.word	.L1606,.L1863
	.byte	6
	.byte	'ExtDataOffset',0,1,247,80,12
	.word	.L1599,.L1864
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmGetSizeOfExtendedDataRecordByDTC')
	.sect	'.debug_abbrev'
.L1334:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmGetSizeOfExtendedDataRecordByDTC')
	.sect	'.debug_line'
.L1335:
	.word	.L3890-.L3889
.L3889:
	.half	3
	.word	.L3892-.L3891
.L3891:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3892:
	.byte	5,50,7,0,5,2
	.word	.L1067
	.byte	3,237,208,0,1,5,75,9
	.half	.L2849-.L1067
	.byte	3,12,1,5,1,9
	.half	.L1337-.L2849
	.byte	3,3,0,1,1
.L3890:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmGetSizeOfExtendedDataRecordByDTC')
	.sect	'.debug_ranges'
.L1336:
	.word	-1,.L1067,0,.L1337-.L1067,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmCheckClearParameter')
	.sect	'.debug_info'
.L1338:
	.word	317
	.half	3
	.word	.L1339
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1341,.L1340
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmCheckClearParameter',0,1,148,81,40
	.word	.L1606
	.byte	1,1,1
	.word	.L1069,.L1865,.L1068
	.byte	4
	.byte	'DTC',0,1,150,81,12
	.word	.L1732,.L1866
	.byte	4
	.byte	'DTCFormat',0,1,151,81,23
	.word	.L1606,.L1867
	.byte	4
	.byte	'DTCOrigin',0,1,152,81,23
	.word	.L1606,.L1868
	.byte	5
	.word	.L1069,.L1865
	.byte	6
	.byte	'Result',0,1,155,81,28
	.word	.L1606,.L1869
	.byte	6
	.byte	'DtcIndex',0,1,156,81,12
	.word	.L1599,.L1870
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmCheckClearParameter')
	.sect	'.debug_abbrev'
.L1339:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmCheckClearParameter')
	.sect	'.debug_line'
.L1340:
	.word	.L3894-.L3893
.L3893:
	.half	3
	.word	.L3896-.L3895
.L3895:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3896:
	.byte	5,8,7,0,5,2
	.word	.L1069
	.byte	3,157,209,0,1,5,37,7,9
	.half	.L3897-.L1069
	.byte	1,5,35,9
	.half	.L3898-.L3897
	.byte	1,5,16,7,9
	.half	.L840-.L3898
	.byte	3,2,1,5,1,9
	.half	.L2850-.L840
	.byte	3,51,1,5,13,7,9
	.half	.L841-.L2850
	.byte	3,79,1,5,23,7,9
	.half	.L3899-.L841
	.byte	3,1,1,7,9
	.half	.L3900-.L3899
	.byte	3,1,1,5,16,7,9
	.half	.L3901-.L3900
	.byte	3,2,1,5,1,9
	.half	.L2851-.L3901
	.byte	3,45,1,5,10,7,9
	.half	.L843-.L2851
	.byte	3,85,1,5,16,7,9
	.half	.L3902-.L843
	.byte	3,2,1,5,1,9
	.half	.L2852-.L3902
	.byte	3,41,1,5,16,7,9
	.half	.L847-.L2852
	.byte	3,97,1,5,22,9
	.half	.L2853-.L847
	.byte	3,2,1,5,38,9
	.half	.L2854-.L2853
	.byte	1,5,52,9
	.half	.L3903-.L2854
	.byte	1,5,17,9
	.half	.L850-.L3903
	.byte	3,2,1,5,62,7,9
	.half	.L3904-.L850
	.byte	1,5,59,9
	.half	.L3905-.L3904
	.byte	1,5,24,7,9
	.half	.L3906-.L3905
	.byte	3,11,1,5,17,9
	.half	.L3907-.L3906
	.byte	3,1,1,5,62,9
	.half	.L851-.L3907
	.byte	3,114,1,5,52,9
	.half	.L849-.L851
	.byte	1,5,22,7,9
	.half	.L853-.L849
	.byte	3,18,1,5,57,9
	.half	.L2855-.L853
	.byte	1,5,23,9
	.half	.L855-.L2855
	.byte	3,2,1,5,13,9
	.half	.L3908-.L855
	.byte	1,5,24,7,9
	.half	.L3909-.L3908
	.byte	3,2,1,5,1,9
	.half	.L3910-.L3909
	.byte	3,7,1,5,67,7,9
	.half	.L856-.L3910
	.byte	3,117,1,5,57,9
	.half	.L854-.L856
	.byte	1,5,1,7,9
	.half	.L3911-.L854
	.byte	3,11,1,7,9
	.half	.L1342-.L3911
	.byte	0,1,1
.L3894:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmCheckClearParameter')
	.sect	'.debug_ranges'
.L1341:
	.word	-1,.L1069,0,.L1342-.L1069,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmClearDTC')
	.sect	'.debug_info'
.L1343:
	.word	284
	.half	3
	.word	.L1344
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1346,.L1345
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmClearDTC',0,1,234,81,40
	.word	.L1606
	.byte	1,1,1
	.word	.L1071,.L1871,.L1070
	.byte	4
	.byte	'DTC',0,1,236,81,12
	.word	.L1732,.L1872
	.byte	4
	.byte	'DTCFormat',0,1,237,81,23
	.word	.L1606,.L1873
	.byte	4
	.byte	'DTCOrigin',0,1,238,81,23
	.word	.L1606,.L1874
	.byte	5
	.word	.L1071,.L1871
	.byte	6
	.byte	'Result',0,1,242,81,28
	.word	.L1606,.L1875
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmClearDTC')
	.sect	'.debug_abbrev'
.L1344:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmClearDTC')
	.sect	'.debug_line'
.L1345:
	.word	.L3913-.L3912
.L3912:
	.half	3
	.word	.L3915-.L3914
.L3914:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3915:
	.byte	5,43,7,0,5,2
	.word	.L1071
	.byte	3,243,209,0,1,5,1,7,9
	.half	.L1347-.L1071
	.byte	3,3,0,1,1
.L3913:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmClearDTC')
	.sect	'.debug_ranges'
.L1346:
	.word	-1,.L1071,0,.L1347-.L1071,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmDisableDTCSetting')
	.sect	'.debug_info'
.L1348:
	.word	288
	.half	3
	.word	.L1349
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1351,.L1350
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmDisableDTCSetting',0,1,140,82,49
	.word	.L1606
	.byte	1,1,1
	.word	.L1073,.L1876,.L1072
	.byte	4
	.byte	'DTCGroup',0,1,142,82,12
	.word	.L1732,.L1877
	.byte	4
	.byte	'DTCKind',0,1,143,82,21
	.word	.L1606,.L1878
	.byte	5
	.word	.L1073,.L1876
	.byte	6
	.byte	'Result',0,1,147,82,37
	.word	.L1606,.L1879
	.byte	6
	.byte	'i',0,1,148,82,12
	.word	.L1599,.L1880
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmDisableDTCSetting')
	.sect	'.debug_abbrev'
.L1349:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmDisableDTCSetting')
	.sect	'.debug_line'
.L1350:
	.word	.L3917-.L3916
.L3916:
	.half	3
	.word	.L3919-.L3918
.L3918:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3919:
	.byte	5,44,7,0,5,2
	.word	.L1073
	.byte	3,146,210,0,1,5,21,9
	.half	.L2858-.L1073
	.byte	3,3,1,5,8,9
	.half	.L3920-.L2858
	.byte	1,5,52,7,9
	.half	.L3921-.L3920
	.byte	1,5,15,7,9
	.half	.L3922-.L3921
	.byte	3,2,1,5,40,9
	.half	.L3923-.L3922
	.byte	3,18,1,5,51,9
	.half	.L2860-.L3923
	.byte	3,1,1,5,24,9
	.half	.L2856-.L2860
	.byte	3,109,1,5,38,9
	.half	.L2857-.L2856
	.byte	1,5,13,9
	.half	.L863-.L2857
	.byte	3,3,1,5,33,9
	.half	.L2861-.L863
	.byte	1,5,37,9
	.half	.L2862-.L2861
	.byte	1,5,17,9
	.half	.L2863-.L2862
	.byte	3,2,1,5,16,9
	.half	.L3924-.L2863
	.byte	1,5,25,7,9
	.half	.L3925-.L3924
	.byte	3,1,1,5,55,9
	.half	.L3926-.L3925
	.byte	1,5,17,7,9
	.half	.L2865-.L3926
	.byte	3,3,1,5,34,9
	.half	.L3927-.L2865
	.byte	1,5,37,9
	.half	.L3928-.L3927
	.byte	1,5,21,9
	.half	.L864-.L3928
	.byte	3,5,1,5,20,9
	.half	.L3929-.L864
	.byte	1,5,29,7,9
	.half	.L3930-.L3929
	.byte	3,1,1,5,59,9
	.half	.L3931-.L3930
	.byte	1,5,21,7,9
	.half	.L2868-.L3931
	.byte	3,3,1,5,38,9
	.half	.L3932-.L2868
	.byte	1,5,21,9
	.half	.L3933-.L3932
	.byte	3,1,1,5,49,9
	.half	.L3934-.L3933
	.byte	1,5,41,9
	.half	.L866-.L3934
	.byte	3,109,1,5,38,9
	.half	.L862-.L866
	.byte	1,5,1,7,9
	.half	.L2870-.L862
	.byte	3,194,0,1,5,16,7,9
	.half	.L860-.L2870
	.byte	3,92,1,5,15,9
	.half	.L3935-.L860
	.byte	3,2,1,5,24,9
	.half	.L2871-.L3935
	.byte	1,5,38,9
	.half	.L3936-.L2871
	.byte	1,5,16,9
	.half	.L871-.L3936
	.byte	3,2,1,5,13,9
	.half	.L3937-.L871
	.byte	1,5,17,7,9
	.half	.L3938-.L3937
	.byte	3,3,1,5,37,9
	.half	.L3939-.L3938
	.byte	1,5,43,9
	.half	.L3940-.L3939
	.byte	1,5,41,9
	.half	.L3941-.L3940
	.byte	1,5,21,9
	.half	.L3942-.L3941
	.byte	3,2,1,5,20,9
	.half	.L3943-.L3942
	.byte	1,5,29,7,9
	.half	.L3944-.L3943
	.byte	3,1,1,5,59,9
	.half	.L3945-.L3944
	.byte	1,5,21,7,9
	.half	.L3946-.L3945
	.byte	3,3,1,5,38,9
	.half	.L3947-.L3946
	.byte	1,5,41,9
	.half	.L3948-.L3947
	.byte	1,5,25,9
	.half	.L873-.L3948
	.byte	3,5,1,5,24,9
	.half	.L3949-.L873
	.byte	1,5,33,7,9
	.half	.L3950-.L3949
	.byte	3,1,1,5,63,9
	.half	.L3951-.L3950
	.byte	1,5,25,7,9
	.half	.L3952-.L3951
	.byte	3,3,1,5,44,9
	.half	.L3953-.L3952
	.byte	1,5,42,9
	.half	.L2873-.L3953
	.byte	1,5,25,9
	.half	.L3954-.L2873
	.byte	3,1,1,5,55,9
	.half	.L3955-.L3954
	.byte	1,5,53,9
	.half	.L3956-.L3955
	.byte	1,5,24,9
	.half	.L875-.L3956
	.byte	3,7,1,5,1,9
	.half	.L2874-.L875
	.byte	3,6,1,5,41,7,9
	.half	.L872-.L2874
	.byte	3,94,1,5,38,9
	.half	.L870-.L872
	.byte	1,5,1,7,9
	.half	.L3957-.L870
	.byte	3,34,1,7,9
	.half	.L1352-.L3957
	.byte	0,1,1
.L3917:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmDisableDTCSetting')
	.sect	'.debug_ranges'
.L1351:
	.word	-1,.L1073,0,.L1352-.L1073,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmEnableDTCSetting')
	.sect	'.debug_info'
.L1353:
	.word	287
	.half	3
	.word	.L1354
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1356,.L1355
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmEnableDTCSetting',0,1,241,82,49
	.word	.L1606
	.byte	1,1,1
	.word	.L1075,.L1881,.L1074
	.byte	4
	.byte	'DTCGroup',0,1,243,82,12
	.word	.L1732,.L1882
	.byte	4
	.byte	'DTCKind',0,1,244,82,21
	.word	.L1606,.L1883
	.byte	5
	.word	.L1075,.L1881
	.byte	6
	.byte	'Result',0,1,248,82,37
	.word	.L1606,.L1884
	.byte	6
	.byte	'i',0,1,249,82,12
	.word	.L1599,.L1885
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmEnableDTCSetting')
	.sect	'.debug_abbrev'
.L1354:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmEnableDTCSetting')
	.sect	'.debug_line'
.L1355:
	.word	.L3959-.L3958
.L3958:
	.half	3
	.word	.L3961-.L3960
.L3960:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3961:
	.byte	5,44,7,0,5,2
	.word	.L1075
	.byte	3,247,210,0,1,5,21,9
	.half	.L2875-.L1075
	.byte	3,3,1,5,8,9
	.half	.L3962-.L2875
	.byte	1,5,52,7,9
	.half	.L3963-.L3962
	.byte	1,5,15,7,9
	.half	.L3964-.L3963
	.byte	3,2,1,5,39,9
	.half	.L2876-.L3964
	.byte	3,3,1,5,24,9
	.half	.L3965-.L2876
	.byte	3,125,1,5,38,9
	.half	.L3966-.L3965
	.byte	1,5,13,9
	.half	.L883-.L3966
	.byte	3,3,1,5,33,9
	.half	.L3967-.L883
	.byte	1,5,37,9
	.half	.L3968-.L3967
	.byte	1,5,41,9
	.half	.L3969-.L3968
	.byte	3,125,1,5,38,9
	.half	.L882-.L3969
	.byte	1,5,1,7,9
	.half	.L3970-.L882
	.byte	3,11,1,5,16,7,9
	.half	.L880-.L3970
	.byte	3,125,1,5,1,9
	.half	.L3971-.L880
	.byte	3,3,1,7,9
	.half	.L1357-.L3971
	.byte	0,1,1
.L3959:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmEnableDTCSetting')
	.sect	'.debug_ranges'
.L1356:
	.word	-1,.L1075,0,.L1357-.L1075,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_NvM_InitStorageMem')
	.sect	'.debug_info'
.L1358:
	.word	223
	.half	3
	.word	.L1359
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1361,.L1360
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_NvM_InitStorageMem',0,1,231,90,32
	.word	.L1606
	.byte	1,1,1
	.word	.L1077,.L1886,.L1076
	.byte	4
	.word	.L1077,.L1886
	.byte	5
	.byte	'i',0,1,236,90,12
	.word	.L1599,.L1887
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_NvM_InitStorageMem')
	.sect	'.debug_abbrev'
.L1359:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_NvM_InitStorageMem')
	.sect	'.debug_line'
.L1360:
	.word	.L3973-.L3972
.L3972:
	.half	3
	.word	.L3975-.L3974
.L3974:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L3975:
	.byte	5,5,7,0,5,2
	.word	.L1077
	.byte	3,237,218,0,1,5,30,9
	.half	.L3976-.L1077
	.byte	1,5,28,9
	.half	.L3977-.L3976
	.byte	1,5,5,9
	.half	.L3978-.L3977
	.byte	3,1,1,5,29,9
	.half	.L3979-.L3978
	.byte	1,5,5,9
	.half	.L3980-.L3979
	.byte	3,1,1,5,31,9
	.half	.L3981-.L3980
	.byte	1,5,5,9
	.half	.L3982-.L3981
	.byte	3,1,1,5,32,9
	.half	.L3983-.L3982
	.byte	1,5,11,9
	.half	.L3984-.L3983
	.byte	3,2,1,5,28,9
	.half	.L2877-.L3984
	.byte	3,2,1,5,39,9
	.half	.L2879-.L2877
	.byte	3,11,1,5,20,9
	.half	.L3985-.L2879
	.byte	3,115,1,5,36,9
	.half	.L3986-.L3985
	.byte	1,5,9,9
	.half	.L887-.L3986
	.byte	3,2,1,5,26,9
	.half	.L2880-.L887
	.byte	1,5,9,9
	.half	.L2881-.L2880
	.byte	3,5,1,5,29,9
	.half	.L2882-.L2881
	.byte	1,5,9,9
	.half	.L2883-.L2882
	.byte	3,2,1,5,26,9
	.half	.L2884-.L2883
	.byte	1,5,9,9
	.half	.L2885-.L2884
	.byte	3,3,1,5,26,9
	.half	.L2886-.L2885
	.byte	1,5,9,9
	.half	.L2887-.L2886
	.byte	3,1,1,5,37,9
	.half	.L3987-.L2887
	.byte	1,5,9,9
	.half	.L3988-.L3987
	.byte	3,2,1,5,32,9
	.half	.L2888-.L3988
	.byte	1,5,9,9
	.half	.L2889-.L2888
	.byte	3,1,1,5,32,9
	.half	.L2890-.L2889
	.byte	1,5,9,9
	.half	.L2891-.L2890
	.byte	3,1,1,5,27,9
	.half	.L2892-.L2891
	.byte	1,5,9,9
	.half	.L2893-.L2892
	.byte	3,1,1,5,27,9
	.half	.L2894-.L2893
	.byte	1,5,9,9
	.half	.L2895-.L2894
	.byte	3,1,1,5,28,9
	.half	.L2896-.L2895
	.byte	1,5,39,9
	.half	.L2897-.L2896
	.byte	3,109,1,5,36,9
	.half	.L886-.L2897
	.byte	1,5,11,7,9
	.half	.L3989-.L886
	.byte	3,32,1,5,29,9
	.half	.L3990-.L3989
	.byte	3,2,1,5,31,9
	.half	.L3991-.L3990
	.byte	3,2,1,5,35,9
	.half	.L2898-.L3991
	.byte	3,2,1,5,20,9
	.half	.L3992-.L2898
	.byte	3,122,1,5,34,9
	.half	.L3993-.L3992
	.byte	1,5,9,9
	.half	.L889-.L3993
	.byte	3,2,1,5,27,9
	.half	.L3994-.L889
	.byte	1,5,9,9
	.half	.L3995-.L3994
	.byte	3,1,1,5,31,9
	.half	.L3996-.L3995
	.byte	1,5,9,9
	.half	.L3997-.L3996
	.byte	3,1,1,5,29,9
	.half	.L2899-.L3997
	.byte	1,5,9,9
	.half	.L2900-.L2899
	.byte	3,1,1,5,28,9
	.half	.L2901-.L2900
	.byte	1,5,9,9
	.half	.L2902-.L2901
	.byte	3,1,1,5,33,9
	.half	.L3998-.L2902
	.byte	1,5,37,9
	.half	.L3999-.L3998
	.byte	3,122,1,5,34,9
	.half	.L888-.L3999
	.byte	1,5,5,7,9
	.half	.L4000-.L888
	.byte	3,9,1,5,37,9
	.half	.L4001-.L4000
	.byte	1,5,35,9
	.half	.L2878-.L4001
	.byte	1,5,41,9
	.half	.L4002-.L2878
	.byte	3,4,1,5,20,9
	.half	.L2903-.L4002
	.byte	3,126,1,5,55,9
	.half	.L4003-.L2903
	.byte	1,5,9,9
	.half	.L891-.L4003
	.byte	3,2,1,5,39,9
	.half	.L2904-.L891
	.byte	1,5,41,9
	.half	.L2905-.L2904
	.byte	3,1,1,5,58,9
	.half	.L2907-.L2905
	.byte	3,125,1,5,55,9
	.half	.L890-.L2907
	.byte	1,5,12,7,9
	.half	.L4004-.L890
	.byte	3,26,1,5,1,9
	.half	.L4005-.L4004
	.byte	3,1,1,7,9
	.half	.L1362-.L4005
	.byte	0,1,1
.L3973:
	.sdecl	'.debug_ranges',debug,cluster('Dem_NvM_InitStorageMem')
	.sect	'.debug_ranges'
.L1361:
	.word	-1,.L1077,0,.L1362-.L1077,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_NvM_JobResultInd')
	.sect	'.debug_info'
.L1363:
	.word	272
	.half	3
	.word	.L1364
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1366,.L1365
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_NvM_JobResultInd',0,1,203,91,32
	.word	.L1606
	.byte	1,1,1
	.word	.L1079,.L1888,.L1078
	.byte	4
	.byte	'ServiceId',0,1,205,91,11
	.word	.L1606,.L1889
	.byte	4
	.byte	'JobResult',0,1,206,91,27
	.word	.L1606,.L1890
	.byte	5
	.word	.L1079,.L1888
	.byte	6
	.byte	'Result',0,1,209,91,20
	.word	.L1606,.L1891
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_NvM_JobResultInd')
	.sect	'.debug_abbrev'
.L1364:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_NvM_JobResultInd')
	.sect	'.debug_line'
.L1365:
	.word	.L4007-.L4006
.L4006:
	.half	3
	.word	.L4009-.L4008
.L4008:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4009:
	.byte	5,27,7,0,5,2
	.word	.L1079
	.byte	3,208,219,0,1,5,9,9
	.half	.L2908-.L1079
	.byte	3,2,1,5,54,7,9
	.half	.L4010-.L2908
	.byte	1,5,51,9
	.half	.L4011-.L4010
	.byte	1,5,27,7,9
	.half	.L893-.L4011
	.byte	3,1,1,5,40,7,9
	.half	.L4012-.L893
	.byte	3,2,1,5,1,7,9
	.half	.L894-.L4012
	.byte	3,3,1,7,9
	.half	.L1367-.L894
	.byte	0,1,1
.L4007:
	.sdecl	'.debug_ranges',debug,cluster('Dem_NvM_JobResultInd')
	.sect	'.debug_ranges'
.L1366:
	.word	-1,.L1079,0,.L1367-.L1079,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_CheckStorageMem')
	.sect	'.debug_info'
.L1368:
	.word	255
	.half	3
	.word	.L1369
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1371,.L1370
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_CheckStorageMem',0,1,226,8,22,1,1
	.word	.L899,.L1892,.L898
	.byte	4
	.word	.L899,.L1892
	.byte	5
	.byte	'i',0,1,231,8,12
	.word	.L1599,.L1893
	.byte	5
	.byte	'j',0,1,233,8,12
	.word	.L1599,.L1894
	.byte	5
	.byte	'ret',0,1,235,8,20
	.word	.L1606,.L1895
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_CheckStorageMem')
	.sect	'.debug_abbrev'
.L1369:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_CheckStorageMem')
	.sect	'.debug_line'
.L1370:
	.word	.L4014-.L4013
.L4013:
	.half	3
	.word	.L4016-.L4015
.L4015:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4016:
	.byte	5,24,7,0,5,2
	.word	.L899
	.byte	3,234,8,1,5,10,9
	.half	.L2140-.L899
	.byte	3,2,1,5,36,9
	.half	.L4017-.L2140
	.byte	1,5,9,9
	.half	.L4018-.L4017
	.byte	1,5,88,7,9
	.half	.L4019-.L4018
	.byte	1,5,85,9
	.half	.L4020-.L4019
	.byte	1,5,14,7,9
	.half	.L2-.L4020
	.byte	3,1,1,5,41,9
	.half	.L4021-.L2
	.byte	1,5,13,9
	.half	.L4022-.L4021
	.byte	1,5,94,7,9
	.half	.L4023-.L4022
	.byte	1,5,91,9
	.half	.L4024-.L4023
	.byte	1,5,14,7,9
	.half	.L4-.L4024
	.byte	3,1,1,5,43,9
	.half	.L4025-.L4
	.byte	1,5,13,9
	.half	.L4026-.L4025
	.byte	1,5,98,7,9
	.half	.L4027-.L4026
	.byte	1,5,95,9
	.half	.L4028-.L4027
	.byte	1,5,14,7,9
	.half	.L6-.L4028
	.byte	3,1,1,5,44,9
	.half	.L4029-.L6
	.byte	1,5,13,9
	.half	.L4030-.L4029
	.byte	1,5,100,7,9
	.half	.L4031-.L4030
	.byte	1,5,97,9
	.half	.L4032-.L4031
	.byte	1,5,13,7,9
	.half	.L3-.L4032
	.byte	3,2,1,5,8,9
	.half	.L8-.L3
	.byte	3,3,1,5,26,7,9
	.half	.L4033-.L8
	.byte	1,5,58,9
	.half	.L4034-.L4033
	.byte	1,5,56,9
	.half	.L4035-.L4034
	.byte	1,5,13,7,9
	.half	.L4036-.L4035
	.byte	3,2,1,5,8,9
	.half	.L10-.L4036
	.byte	3,3,1,5,26,7,9
	.half	.L4037-.L10
	.byte	1,5,56,9
	.half	.L4038-.L4037
	.byte	1,5,15,7,9
	.half	.L4039-.L4038
	.byte	3,2,1,5,54,9
	.half	.L2141-.L4039
	.byte	3,5,1,5,28,9
	.half	.L4040-.L2141
	.byte	3,126,1,5,59,9
	.half	.L4041-.L4040
	.byte	3,15,1,5,24,9
	.half	.L4042-.L4041
	.byte	3,110,1,5,59,9
	.half	.L4043-.L4042
	.byte	1,5,19,9
	.half	.L15-.L4043
	.byte	3,3,1,5,21,9
	.half	.L2142-.L15
	.byte	3,2,1,5,49,9
	.half	.L4044-.L2142
	.byte	3,126,1,5,21,9
	.half	.L17-.L4044
	.byte	3,2,1,5,47,9
	.half	.L4045-.L17
	.byte	1,5,17,9
	.half	.L4046-.L4045
	.byte	1,5,25,7,9
	.half	.L4047-.L4046
	.byte	3,2,1,5,21,9
	.half	.L4048-.L4047
	.byte	3,1,1,5,52,9
	.half	.L18-.L4048
	.byte	3,123,1,5,49,9
	.half	.L16-.L18
	.byte	1,5,13,7,9
	.half	.L19-.L16
	.byte	3,11,1,5,23,7,9
	.half	.L4049-.L19
	.byte	3,2,1,5,25,9
	.half	.L4050-.L4049
	.byte	3,2,1,5,54,9
	.half	.L4051-.L4050
	.byte	3,126,1,5,25,9
	.half	.L22-.L4051
	.byte	3,2,1,5,52,9
	.half	.L4052-.L22
	.byte	1,5,21,9
	.half	.L4053-.L4052
	.byte	1,5,29,7,9
	.half	.L4054-.L4053
	.byte	3,2,1,5,25,9
	.half	.L4055-.L4054
	.byte	3,1,1,5,57,9
	.half	.L23-.L4055
	.byte	3,123,1,5,54,9
	.half	.L21-.L23
	.byte	1,5,13,7,9
	.half	.L20-.L21
	.byte	3,10,1,5,62,7,9
	.half	.L4056-.L20
	.byte	3,102,1,5,59,9
	.half	.L14-.L4056
	.byte	1,5,5,7,9
	.half	.L12-.L14
	.byte	3,52,1,5,15,7,9
	.half	.L4057-.L12
	.byte	3,2,1,5,71,9
	.half	.L2143-.L4057
	.byte	3,8,1,5,70,9
	.half	.L4058-.L2143
	.byte	3,1,1,5,32,9
	.half	.L4059-.L4058
	.byte	3,119,1,5,48,9
	.half	.L4060-.L4059
	.byte	1,5,17,9
	.half	.L28-.L4060
	.byte	3,2,1,5,42,9
	.half	.L4061-.L28
	.byte	1,5,16,9
	.half	.L4062-.L4061
	.byte	1,5,21,7,9
	.half	.L4063-.L4062
	.byte	3,1,1,5,41,9
	.half	.L4064-.L4063
	.byte	1,5,39,9
	.half	.L4065-.L4064
	.byte	1,5,22,7,9
	.half	.L4066-.L4065
	.byte	3,5,1,5,21,9
	.half	.L4067-.L4066
	.byte	1,7,9
	.half	.L4068-.L4067
	.byte	3,1,1,5,67,9
	.half	.L4069-.L4068
	.byte	1,5,21,7,9
	.half	.L29-.L4069
	.byte	3,2,1,5,17,9
	.half	.L4070-.L29
	.byte	3,1,1,5,51,9
	.half	.L31-.L4070
	.byte	3,116,1,5,48,9
	.half	.L27-.L31
	.byte	1,5,5,7,9
	.half	.L26-.L27
	.byte	3,21,1,5,37,7,9
	.half	.L4071-.L26
	.byte	3,3,1,5,1,7,9
	.half	.L34-.L4071
	.byte	3,2,1,7,9
	.half	.L1372-.L34
	.byte	0,1,1
.L4014:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_CheckStorageMem')
	.sect	'.debug_ranges'
.L1371:
	.word	-1,.L899,0,.L1372-.L899,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_SetCaptureQueue')
	.sect	'.debug_info'
.L1373:
	.word	249
	.half	3
	.word	.L1374
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1376,.L1375
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_SetCaptureQueue',0,1,221,9,29,1,1
	.word	.L901,.L1896,.L900
	.byte	4
	.byte	'EventId',0,1,223,9,12
	.word	.L1599,.L1897
	.byte	4
	.byte	'Trigger',0,1,224,9,44
	.word	.L1606,.L1898
	.byte	5
	.word	.L901,.L1896
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_SetCaptureQueue')
	.sect	'.debug_abbrev'
.L1374:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_SetCaptureQueue')
	.sect	'.debug_line'
.L1375:
	.word	.L4073-.L4072
.L4072:
	.half	3
	.word	.L4075-.L4074
.L4074:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4075:
	.byte	5,5,7,0,5,2
	.word	.L901
	.byte	3,226,9,1,5,24,9
	.half	.L4076-.L901
	.byte	1,5,36,9
	.half	.L4077-.L4076
	.byte	1,5,34,9
	.half	.L4078-.L4077
	.byte	1,5,5,9
	.half	.L4079-.L4078
	.byte	3,1,1,5,27,9
	.half	.L4080-.L4079
	.byte	1,5,5,9
	.half	.L4081-.L4080
	.byte	1,5,27,9
	.half	.L4082-.L4081
	.byte	1,5,37,9
	.half	.L4083-.L4082
	.byte	1,5,1,9
	.half	.L4084-.L4083
	.byte	3,1,1,7,9
	.half	.L1377-.L4084
	.byte	0,1,1
.L4073:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_SetCaptureQueue')
	.sect	'.debug_ranges'
.L1376:
	.word	-1,.L901,0,.L1377-.L901,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_ClrCaptureQueue')
	.sect	'.debug_info'
.L1378:
	.word	228
	.half	3
	.word	.L1379
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1381,.L1380
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_ClrCaptureQueue',0,1,246,9,29,1,1
	.word	.L903,.L1899,.L902
	.byte	4
	.byte	'EventId',0,1,248,9,12
	.word	.L1599,.L1900
	.byte	5
	.word	.L903,.L1899
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_ClrCaptureQueue')
	.sect	'.debug_abbrev'
.L1379:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_ClrCaptureQueue')
	.sect	'.debug_line'
.L1380:
	.word	.L4086-.L4085
.L4085:
	.half	3
	.word	.L4088-.L4087
.L4087:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4088:
	.byte	5,5,7,0,5,2
	.word	.L903
	.byte	3,250,9,1,5,24,9
	.half	.L4089-.L903
	.byte	1,5,36,9
	.half	.L4090-.L4089
	.byte	1,5,34,9
	.half	.L4091-.L4090
	.byte	1,5,5,9
	.half	.L4092-.L4091
	.byte	3,1,1,5,27,9
	.half	.L4093-.L4092
	.byte	1,5,37,9
	.half	.L4094-.L4093
	.byte	1,5,1,9
	.half	.L4095-.L4094
	.byte	3,1,1,7,9
	.half	.L1382-.L4095
	.byte	0,1,1
.L4086:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_ClrCaptureQueue')
	.sect	'.debug_ranges'
.L1381:
	.word	-1,.L903,0,.L1382-.L903,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_GetCaptureQueue')
	.sect	'.debug_info'
.L1383:
	.word	271
	.half	3
	.word	.L1384
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1386,.L1385
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_GetCaptureQueue',0,1,142,10,32
	.word	.L1606
	.byte	1,1
	.word	.L905,.L1901,.L904
	.byte	4
	.byte	'EventId',0,1,144,10,12
	.word	.L1599,.L1902
	.byte	4
	.byte	'Trigger',0,1,145,10,45
	.word	.L1903,.L1904
	.byte	5
	.word	.L905,.L1901
	.byte	6
	.byte	'ret',0,1,148,10,13
	.word	.L1606,.L1905
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_GetCaptureQueue')
	.sect	'.debug_abbrev'
.L1384:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_GetCaptureQueue')
	.sect	'.debug_line'
.L1385:
	.word	.L4097-.L4096
.L4096:
	.half	3
	.word	.L4099-.L4098
.L4098:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4099:
	.byte	5,8,7,0,5,2
	.word	.L905
	.byte	3,149,10,1,5,27,9
	.half	.L4100-.L905
	.byte	1,5,37,9
	.half	.L4101-.L4100
	.byte	1,5,5,9
	.half	.L2144-.L4101
	.byte	3,5,1,5,20,7,9
	.half	.L4102-.L2144
	.byte	3,2,1,5,42,9
	.half	.L4103-.L4102
	.byte	1,5,18,9
	.half	.L4104-.L4103
	.byte	1,5,1,9
	.half	.L35-.L4104
	.byte	3,4,1,7,9
	.half	.L1387-.L35
	.byte	0,1,1
.L4097:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_GetCaptureQueue')
	.sect	'.debug_ranges'
.L1386:
	.word	-1,.L905,0,.L1387-.L905,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_SetEventPass')
	.sect	'.debug_info'
.L1388:
	.word	286
	.half	3
	.word	.L1389
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1391,.L1390
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_SetEventPass',0,1,178,10,46
	.word	.L1606
	.byte	1,1
	.word	.L907,.L1906,.L906
	.byte	4
	.byte	'EventId',0,1,180,10,21
	.word	.L1599,.L1907
	.byte	5
	.word	.L907,.L1906
	.byte	6
	.byte	'EventNewStatus',0,1,183,10,27
	.word	.L1606,.L1908
	.byte	6
	.byte	'EventOldStatus',0,1,184,10,27
	.word	.L1606,.L1909
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_SetEventPass')
	.sect	'.debug_abbrev'
.L1389:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_SetEventPass')
	.sect	'.debug_line'
.L1390:
	.word	.L4106-.L4105
.L4105:
	.half	3
	.word	.L4108-.L4107
.L4107:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4108:
	.byte	5,22,7,0,5,2
	.word	.L907
	.byte	3,188,10,1,9
	.half	.L2145-.L907
	.byte	3,1,1,9
	.half	.L2147-.L2145
	.byte	3,3,1,5,8,9
	.half	.L2146-.L2147
	.byte	3,22,1,5,5,9
	.half	.L4109-.L2146
	.byte	1,5,9,7,9
	.half	.L4110-.L4109
	.byte	3,2,1,5,34,9
	.half	.L4111-.L4110
	.byte	1,5,32,9
	.half	.L4112-.L4111
	.byte	1,5,8,9
	.half	.L37-.L4112
	.byte	3,5,1,5,5,9
	.half	.L4113-.L37
	.byte	1,5,9,7,9
	.half	.L4114-.L4113
	.byte	3,2,1,5,34,9
	.half	.L4115-.L4114
	.byte	1,5,32,9
	.half	.L4116-.L4115
	.byte	1,5,9,9
	.half	.L4117-.L4116
	.byte	3,1,1,5,45,9
	.half	.L4118-.L4117
	.byte	1,5,43,9
	.half	.L4119-.L4118
	.byte	1,5,9,9
	.half	.L4120-.L4119
	.byte	3,1,1,5,31,9
	.half	.L4121-.L4120
	.byte	1,5,41,9
	.half	.L4122-.L4121
	.byte	1,5,8,9
	.half	.L38-.L4122
	.byte	3,5,1,5,54,7,9
	.half	.L4123-.L38
	.byte	1,5,46,7,9
	.half	.L4124-.L4123
	.byte	3,4,1,5,5,9
	.half	.L39-.L4124
	.byte	3,7,1,5,1,9
	.half	.L2148-.L39
	.byte	3,1,1,7,9
	.half	.L1392-.L2148
	.byte	0,1,1
.L4106:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_SetEventPass')
	.sect	'.debug_ranges'
.L1391:
	.word	-1,.L907,0,.L1392-.L907,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_SetEventFail')
	.sect	'.debug_info'
.L1393:
	.word	286
	.half	3
	.word	.L1394
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1396,.L1395
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_SetEventFail',0,1,132,11,46
	.word	.L1606
	.byte	1,1
	.word	.L909,.L1910,.L908
	.byte	4
	.byte	'EventId',0,1,134,11,21
	.word	.L1599,.L1911
	.byte	5
	.word	.L909,.L1910
	.byte	6
	.byte	'EventOldStatus',0,1,137,11,27
	.word	.L1606,.L1912
	.byte	6
	.byte	'EventNewStatus',0,1,138,11,27
	.word	.L1606,.L1913
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_SetEventFail')
	.sect	'.debug_abbrev'
.L1394:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_SetEventFail')
	.sect	'.debug_line'
.L1395:
	.word	.L4126-.L4125
.L4125:
	.half	3
	.word	.L4128-.L4127
.L4127:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4128:
	.byte	5,46,7,0,5,2
	.word	.L909
	.byte	3,131,11,1,5,8,9
	.half	.L2150-.L909
	.byte	3,17,1,5,34,9
	.half	.L4129-.L2150
	.byte	1,5,5,9
	.half	.L4130-.L4129
	.byte	1,5,32,7,9
	.half	.L4131-.L4130
	.byte	3,2,1,5,22,9
	.half	.L42-.L4131
	.byte	3,3,1,9
	.half	.L2151-.L42
	.byte	3,1,1,9
	.half	.L4132-.L2151
	.byte	3,9,1,9
	.half	.L4133-.L4132
	.byte	3,2,1,9
	.half	.L4134-.L4133
	.byte	3,2,1,5,8,9
	.half	.L2152-.L4134
	.byte	3,16,1,5,5,9
	.half	.L4135-.L2152
	.byte	1,5,9,7,9
	.half	.L4136-.L4135
	.byte	3,2,1,5,34,9
	.half	.L4137-.L4136
	.byte	1,5,32,9
	.half	.L4138-.L4137
	.byte	1,5,8,9
	.half	.L43-.L4138
	.byte	3,5,1,5,5,9
	.half	.L4139-.L43
	.byte	1,5,9,7,9
	.half	.L4140-.L4139
	.byte	3,2,1,5,34,9
	.half	.L4141-.L4140
	.byte	1,5,32,9
	.half	.L4142-.L4141
	.byte	1,5,9,9
	.half	.L4143-.L4142
	.byte	3,1,1,5,45,9
	.half	.L4144-.L4143
	.byte	1,5,43,9
	.half	.L4145-.L4144
	.byte	1,5,9,9
	.half	.L4146-.L4145
	.byte	3,1,1,5,31,9
	.half	.L4147-.L4146
	.byte	1,5,43,9
	.half	.L4148-.L4147
	.byte	1,5,41,9
	.half	.L4149-.L4148
	.byte	1,5,5,9
	.half	.L44-.L4149
	.byte	3,4,1,5,36,9
	.half	.L4150-.L44
	.byte	1,5,34,9
	.half	.L4151-.L4150
	.byte	1,5,5,9
	.half	.L4152-.L4151
	.byte	3,2,1,5,34,9
	.half	.L4153-.L4152
	.byte	1,5,5,9
	.half	.L4154-.L4153
	.byte	3,2,1,5,55,9
	.half	.L4155-.L4154
	.byte	1,5,53,9
	.half	.L4156-.L4155
	.byte	1,5,9,9
	.half	.L4157-.L4156
	.byte	3,2,1,5,12,7,9
	.half	.L4158-.L4157
	.byte	3,2,1,5,37,9
	.half	.L4159-.L4158
	.byte	1,5,9,9
	.half	.L4160-.L4159
	.byte	1,5,13,7,9
	.half	.L4161-.L4160
	.byte	3,2,1,5,35,9
	.half	.L4162-.L4161
	.byte	1,5,16,9
	.half	.L4163-.L4162
	.byte	3,1,1,5,42,9
	.half	.L4164-.L4163
	.byte	1,5,13,9
	.half	.L4165-.L4164
	.byte	1,5,34,7,9
	.half	.L4166-.L4165
	.byte	3,6,1,5,20,9
	.half	.L4167-.L4166
	.byte	3,1,1,5,49,9
	.half	.L4168-.L4167
	.byte	1,5,17,9
	.half	.L4169-.L4168
	.byte	1,5,47,7,9
	.half	.L4170-.L4169
	.byte	3,2,1,5,21,9
	.half	.L48-.L4170
	.byte	3,3,1,7,9
	.half	.L4171-.L48
	.byte	3,2,1,5,48,9
	.half	.L4172-.L4171
	.byte	1,5,5,9
	.half	.L45-.L4172
	.byte	3,7,1,5,31,9
	.half	.L4173-.L45
	.byte	1,5,29,9
	.half	.L4174-.L4173
	.byte	1,5,9,9
	.half	.L4175-.L4174
	.byte	3,2,1,7,9
	.half	.L4176-.L4175
	.byte	3,3,1,5,33,9
	.half	.L4177-.L4176
	.byte	1,5,12,9
	.half	.L4178-.L4177
	.byte	3,10,1,5,67,9
	.half	.L4179-.L4178
	.byte	1,5,9,9
	.half	.L4180-.L4179
	.byte	1,5,16,7,9
	.half	.L4181-.L4180
	.byte	3,8,1,5,44,9
	.half	.L4182-.L4181
	.byte	1,5,13,9
	.half	.L4183-.L4182
	.byte	1,5,17,7,9
	.half	.L4184-.L4183
	.byte	3,2,1,5,42,9
	.half	.L4185-.L4184
	.byte	1,5,9,9
	.half	.L50-.L4185
	.byte	3,5,1,7,9
	.half	.L4186-.L50
	.byte	3,3,1,5,35,9
	.half	.L4187-.L4186
	.byte	1,5,33,9
	.half	.L4188-.L4187
	.byte	1,5,9,9
	.half	.L4189-.L4188
	.byte	3,2,1,5,34,9
	.half	.L4190-.L4189
	.byte	1,5,13,9
	.half	.L53-.L4190
	.byte	3,29,1,5,50,7,9
	.half	.L4191-.L53
	.byte	3,3,1,9
	.half	.L2149-.L4191
	.byte	3,2,1,5,13,9
	.half	.L2154-.L2149
	.byte	3,2,1,5,54,7,9
	.half	.L4192-.L2154
	.byte	3,2,1,5,12,9
	.half	.L54-.L4192
	.byte	3,4,1,5,60,7,9
	.half	.L4193-.L54
	.byte	1,5,50,7,9
	.half	.L4194-.L4193
	.byte	3,3,1,5,5,9
	.half	.L56-.L4194
	.byte	3,18,1,5,1,9
	.half	.L2157-.L56
	.byte	3,1,1,7,9
	.half	.L1397-.L2157
	.byte	0,1,1
.L4126:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_SetEventFail')
	.sect	'.debug_ranges'
.L1396:
	.word	-1,.L909,0,.L1397-.L909,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_SetEventStatus')
	.sect	'.debug_info'
.L1398:
	.word	388
	.half	3
	.word	.L1399
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1401,.L1400
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_SetEventStatus',0,1,219,12,29,1,1
	.word	.L911,.L1914,.L910
	.byte	4
	.byte	'EventId',0,1,221,12,21
	.word	.L1599,.L1915
	.byte	4
	.byte	'EventStatus',0,1,222,12,25
	.word	.L1606,.L1916
	.byte	5
	.word	.L911,.L1914
	.byte	6
	.byte	'EventOldStatus',0,1,225,12,27
	.word	.L1606,.L1917
	.byte	6
	.byte	'EventNewStatus',0,1,226,12,27
	.word	.L1606,.L1918
	.byte	6
	.byte	'EventOldFdc',0,1,231,12,11
	.word	.L1919,.L1920
	.byte	6
	.byte	'EventNewFdc',0,1,232,12,11
	.word	.L1919,.L1921
	.byte	6
	.byte	'EventCurrentFDC',0,1,233,12,11
	.word	.L1919,.L1922
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_SetEventStatus')
	.sect	'.debug_abbrev'
.L1399:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_SetEventStatus')
	.sect	'.debug_line'
.L1400:
	.word	.L4196-.L4195
.L4195:
	.half	3
	.word	.L4198-.L4197
.L4197:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4198:
	.byte	5,29,7,0,5,2
	.word	.L911
	.byte	3,218,12,1,5,24,9
	.half	.L2159-.L911
	.byte	3,18,1,5,9,9
	.half	.L4199-.L2159
	.byte	1,5,23,9
	.half	.L4200-.L4199
	.byte	1,5,8,9
	.half	.L4201-.L4200
	.byte	1,5,13,7,9
	.half	.L4202-.L4201
	.byte	3,1,1,5,33,9
	.half	.L4203-.L4202
	.byte	1,5,43,9
	.half	.L4204-.L4203
	.byte	1,5,26,7,9
	.half	.L4205-.L4204
	.byte	3,2,1,9
	.half	.L2160-.L4205
	.byte	3,1,1,5,9,9
	.half	.L2161-.L2160
	.byte	3,2,1,5,55,7,9
	.half	.L4206-.L2161
	.byte	3,2,1,5,28,9
	.half	.L2158-.L4206
	.byte	1,5,63,9
	.half	.L2162-.L2158
	.byte	1,5,14,9
	.half	.L61-.L2162
	.byte	3,2,1,5,16,7,9
	.half	.L4207-.L61
	.byte	3,3,1,5,13,9
	.half	.L4208-.L4207
	.byte	1,5,31,7,9
	.half	.L4209-.L4208
	.byte	3,2,1,5,21,9
	.half	.L2164-.L4209
	.byte	3,2,1,5,46,9
	.half	.L4210-.L2164
	.byte	1,5,20,9
	.half	.L4211-.L4210
	.byte	1,5,29,7,9
	.half	.L4212-.L4211
	.byte	3,1,1,5,63,9
	.half	.L4213-.L4212
	.byte	1,5,21,7,9
	.half	.L4214-.L4213
	.byte	3,3,1,5,46,9
	.half	.L4215-.L4214
	.byte	1,5,44,9
	.half	.L4216-.L4215
	.byte	1,5,21,9
	.half	.L65-.L4216
	.byte	3,3,1,5,64,9
	.half	.L4217-.L65
	.byte	1,5,62,9
	.half	.L4218-.L4217
	.byte	1,5,23,9
	.half	.L4219-.L4218
	.byte	3,1,1,5,17,9
	.half	.L4220-.L4219
	.byte	3,127,1,5,21,7,9
	.half	.L4221-.L4220
	.byte	3,4,1,5,47,9
	.half	.L4222-.L4221
	.byte	1,5,44,9
	.half	.L4223-.L4222
	.byte	1,5,88,9
	.half	.L4224-.L4223
	.byte	1,5,63,9
	.half	.L67-.L4224
	.byte	3,4,1,5,36,9
	.half	.L2163-.L67
	.byte	1,5,31,9
	.half	.L68-.L2163
	.byte	3,3,1,5,42,9
	.half	.L2166-.L68
	.byte	3,2,1,5,35,9
	.half	.L4225-.L2166
	.byte	1,5,20,9
	.half	.L4226-.L4225
	.byte	1,5,51,7,9
	.half	.L4227-.L4226
	.byte	3,1,1,5,44,9
	.half	.L4228-.L4227
	.byte	1,5,41,9
	.half	.L4229-.L4228
	.byte	1,5,59,7,9
	.half	.L4230-.L4229
	.byte	3,11,1,5,33,9
	.half	.L4231-.L4230
	.byte	1,5,58,9
	.half	.L4232-.L4231
	.byte	1,5,21,9
	.half	.L4233-.L4232
	.byte	1,5,51,7,9
	.half	.L4234-.L4233
	.byte	3,2,1,5,25,9
	.half	.L4235-.L4234
	.byte	1,5,50,9
	.half	.L4236-.L4235
	.byte	1,5,84,9
	.half	.L4237-.L4236
	.byte	1,5,82,9
	.half	.L4238-.L4237
	.byte	1,5,62,9
	.half	.L4239-.L4238
	.byte	3,2,1,5,35,9
	.half	.L69-.L4239
	.byte	3,4,1,5,38,9
	.half	.L2168-.L69
	.byte	3,2,1,5,17,9
	.half	.L4240-.L2168
	.byte	1,5,21,7,9
	.half	.L4241-.L4240
	.byte	3,2,1,5,50,9
	.half	.L4242-.L4241
	.byte	1,5,38,9
	.half	.L72-.L4242
	.byte	3,3,1,5,17,9
	.half	.L4243-.L72
	.byte	1,5,21,7,9
	.half	.L4244-.L4243
	.byte	3,2,1,5,50,9
	.half	.L4245-.L4244
	.byte	1,5,16,9
	.half	.L64-.L4245
	.byte	3,6,1,5,13,9
	.half	.L4246-.L64
	.byte	1,5,21,7,9
	.half	.L4247-.L4246
	.byte	3,3,1,5,20,9
	.half	.L4248-.L4247
	.byte	1,5,29,7,9
	.half	.L4249-.L4248
	.byte	3,1,1,5,63,9
	.half	.L4250-.L4249
	.byte	1,5,21,7,9
	.half	.L4251-.L4250
	.byte	3,2,1,5,57,9
	.half	.L4252-.L4251
	.byte	1,5,13,9
	.half	.L4253-.L4252
	.byte	3,122,1,5,14,9
	.half	.L63-.L4253
	.byte	3,14,1,5,55,7,9
	.half	.L4254-.L63
	.byte	3,2,1,5,28,9
	.half	.L2165-.L4254
	.byte	1,5,63,9
	.half	.L2169-.L2165
	.byte	1,5,14,9
	.half	.L78-.L2169
	.byte	3,2,1,5,16,7,9
	.half	.L4255-.L78
	.byte	3,3,1,5,13,9
	.half	.L4256-.L4255
	.byte	1,5,21,7,9
	.half	.L4257-.L4256
	.byte	3,2,1,5,46,9
	.half	.L4258-.L4257
	.byte	1,5,20,9
	.half	.L4259-.L4258
	.byte	1,5,29,7,9
	.half	.L4260-.L4259
	.byte	3,1,1,5,65,9
	.half	.L4261-.L4260
	.byte	1,5,21,7,9
	.half	.L4262-.L4261
	.byte	3,3,1,5,46,9
	.half	.L4263-.L4262
	.byte	1,5,44,9
	.half	.L4264-.L4263
	.byte	1,5,21,9
	.half	.L82-.L4264
	.byte	3,3,1,5,46,9
	.half	.L4265-.L82
	.byte	1,5,44,9
	.half	.L4266-.L4265
	.byte	1,5,27,9
	.half	.L4267-.L4266
	.byte	3,1,1,5,17,9
	.half	.L4268-.L4267
	.byte	3,127,1,5,21,7,9
	.half	.L4269-.L4268
	.byte	3,4,1,5,47,9
	.half	.L4270-.L4269
	.byte	1,5,44,9
	.half	.L4271-.L4270
	.byte	1,5,88,9
	.half	.L4272-.L4271
	.byte	1,5,63,9
	.half	.L84-.L4272
	.byte	3,4,1,5,36,9
	.half	.L2170-.L84
	.byte	1,5,16,9
	.half	.L81-.L2170
	.byte	3,6,1,5,13,9
	.half	.L4273-.L81
	.byte	1,5,21,7,9
	.half	.L4274-.L4273
	.byte	3,3,1,5,20,9
	.half	.L4275-.L4274
	.byte	1,5,29,7,9
	.half	.L4276-.L4275
	.byte	3,1,1,5,63,9
	.half	.L4277-.L4276
	.byte	1,5,21,7,9
	.half	.L4278-.L4277
	.byte	3,2,1,5,57,9
	.half	.L4279-.L4278
	.byte	1,5,55,9
	.half	.L77-.L4279
	.byte	1,5,21,9
	.half	.L4280-.L77
	.byte	3,1,1,5,46,9
	.half	.L4281-.L4280
	.byte	1,5,44,9
	.half	.L4282-.L4281
	.byte	1,5,17,9
	.half	.L75-.L4282
	.byte	3,3,1,5,39,9
	.half	.L4283-.L75
	.byte	1,5,51,9
	.half	.L4284-.L4283
	.byte	1,5,49,9
	.half	.L4285-.L4284
	.byte	1,5,13,9
	.half	.L4286-.L4285
	.byte	3,118,1,5,14,9
	.half	.L80-.L4286
	.byte	3,14,1,5,51,7,9
	.half	.L4287-.L80
	.byte	3,2,1,5,25,9
	.half	.L4288-.L4287
	.byte	1,5,50,9
	.half	.L4289-.L4288
	.byte	1,5,13,9
	.half	.L4290-.L4289
	.byte	1,5,43,7,9
	.half	.L4291-.L4290
	.byte	3,2,1,5,17,9
	.half	.L4292-.L4291
	.byte	1,5,42,9
	.half	.L4293-.L4292
	.byte	1,5,76,9
	.half	.L4294-.L4293
	.byte	1,5,74,9
	.half	.L4295-.L4294
	.byte	1,5,54,9
	.half	.L4296-.L4295
	.byte	3,2,1,5,9,9
	.half	.L62-.L4296
	.byte	3,8,1,5,55,9
	.half	.L4297-.L62
	.byte	1,5,9,9
	.half	.L4298-.L4297
	.byte	3,6,1,5,19,7,9
	.half	.L4299-.L4298
	.byte	3,3,1,5,53,9
	.half	.L4300-.L4299
	.byte	1,5,119,9
	.half	.L4301-.L4300
	.byte	1,5,16,9
	.half	.L2172-.L4301
	.byte	3,2,1,5,28,9
	.half	.L4302-.L2172
	.byte	1,5,13,9
	.half	.L4303-.L4302
	.byte	1,5,23,7,9
	.half	.L4304-.L4303
	.byte	3,3,1,5,84,9
	.half	.L4305-.L4304
	.byte	1,5,66,9
	.half	.L93-.L4305
	.byte	3,3,1,5,1,9
	.half	.L59-.L93
	.byte	3,5,1,7,9
	.half	.L1402-.L59
	.byte	0,1,1
.L4196:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_SetEventStatus')
	.sect	'.debug_ranges'
.L1401:
	.word	-1,.L911,0,.L1402-.L911,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_GetUsableMemoryEntry')
	.sect	'.debug_info'
.L1403:
	.word	283
	.half	3
	.word	.L1404
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1406,.L1405
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_GetUsableMemoryEntry',0,1,164,14,39
	.word	.L1606
	.byte	1,1
	.word	.L913,.L1923,.L912
	.byte	4
	.byte	'DtcId',0,1,166,14,12
	.word	.L1599,.L1924
	.byte	4
	.byte	'MemoryEntryId',0,1,167,14,52
	.word	.L1925,.L1926
	.byte	5
	.word	.L913,.L1923
	.byte	6
	.byte	'Result',0,1,171,14,20
	.word	.L1606,.L1927
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_GetUsableMemoryEntry')
	.sect	'.debug_abbrev'
.L1404:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_GetUsableMemoryEntry')
	.sect	'.debug_line'
.L1405:
	.word	.L4307-.L4306
.L4306:
	.half	3
	.word	.L4309-.L4308
.L4308:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4309:
	.byte	5,39,7,0,5,2
	.word	.L913
	.byte	3,163,14,1,5,42,9
	.half	.L2177-.L913
	.byte	3,10,1,5,5,9
	.half	.L2175-.L2177
	.byte	3,2,1,5,64,7,9
	.half	.L4310-.L2175
	.byte	3,3,1,5,1,9
	.half	.L94-.L4310
	.byte	3,4,1,7,9
	.half	.L1407-.L94
	.byte	0,1,1
.L4307:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_GetUsableMemoryEntry')
	.sect	'.debug_ranges'
.L1406:
	.word	-1,.L913,0,.L1407-.L913,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_SearchFreeEntry')
	.sect	'.debug_info'
.L1408:
	.word	281
	.half	3
	.word	.L1409
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1411,.L1410
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_SearchFreeEntry',0,1,199,14,39
	.word	.L1606
	.byte	1,1
	.word	.L915,.L1928,.L914
	.byte	4
	.byte	'MemoryEntryId',0,1,201,14,52
	.word	.L1925,.L1929
	.byte	5
	.word	.L915,.L1928
	.byte	6
	.byte	'Result',0,1,204,14,20
	.word	.L1606,.L1930
	.byte	6
	.byte	'MemIndex',0,1,205,14,19
	.word	.L1606,.L1931
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_SearchFreeEntry')
	.sect	'.debug_abbrev'
.L1409:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_SearchFreeEntry')
	.sect	'.debug_line'
.L1410:
	.word	.L4312-.L4311
.L4311:
	.half	3
	.word	.L4314-.L4313
.L4313:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4314:
	.byte	5,27,7,0,5,2
	.word	.L915
	.byte	3,203,14,1,5,8,9
	.half	.L2180-.L915
	.byte	3,3,1,5,40,9
	.half	.L4315-.L2180
	.byte	1,5,5,9
	.half	.L4316-.L4315
	.byte	1,5,22,7,9
	.half	.L4317-.L4316
	.byte	3,2,1,5,38,9
	.half	.L2181-.L4317
	.byte	1,5,73,9
	.half	.L4318-.L2181
	.byte	1,5,16,9
	.half	.L98-.L4318
	.byte	3,2,1,5,13,9
	.half	.L4319-.L98
	.byte	1,5,17,7,9
	.half	.L4320-.L4319
	.byte	3,2,1,5,56,9
	.half	.L4321-.L4320
	.byte	1,5,54,9
	.half	.L4322-.L4321
	.byte	1,5,32,9
	.half	.L4323-.L4322
	.byte	3,1,1,5,17,9
	.half	.L4324-.L4323
	.byte	3,1,1,5,46,9
	.half	.L4325-.L4324
	.byte	1,5,24,9
	.half	.L4326-.L4325
	.byte	3,1,1,5,1,9
	.half	.L96-.L4326
	.byte	3,7,1,5,83,7,9
	.half	.L99-.L96
	.byte	3,114,1,5,73,9
	.half	.L97-.L99
	.byte	1,5,1,7,9
	.half	.L4327-.L97
	.byte	3,14,1,7,9
	.half	.L1412-.L4327
	.byte	0,1,1
.L4312:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_SearchFreeEntry')
	.sect	'.debug_ranges'
.L1411:
	.word	-1,.L915,0,.L1412-.L915,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_ClearOneMemoryEntry')
	.sect	'.debug_info'
.L1413:
	.word	262
	.half	3
	.word	.L1414
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1416,.L1415
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_ClearOneMemoryEntry',0,1,239,14,29,1,1
	.word	.L917,.L1932,.L916
	.byte	4
	.byte	'MemoryEntryId',0,1,241,14,19
	.word	.L1606,.L1933
	.byte	5
	.word	.L917,.L1932
	.byte	6
	.byte	'DataIndex',0,1,245,14,12
	.word	.L1599,.L1934
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_ClearOneMemoryEntry')
	.sect	'.debug_abbrev'
.L1414:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_ClearOneMemoryEntry')
	.sect	'.debug_line'
.L1415:
	.word	.L4329-.L4328
.L4328:
	.half	3
	.word	.L4331-.L4330
.L4330:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4331:
	.byte	5,19,7,0,5,2
	.word	.L917
	.byte	3,248,14,1,5,9,9
	.half	.L2182-.L917
	.byte	3,2,1,5,60,9
	.half	.L4332-.L2182
	.byte	1,5,36,9
	.half	.L4333-.L4332
	.byte	3,126,1,5,57,9
	.half	.L4334-.L4333
	.byte	1,5,9,9
	.half	.L103-.L4334
	.byte	3,2,1,5,46,9
	.half	.L4335-.L103
	.byte	1,5,58,9
	.half	.L4336-.L4335
	.byte	1,5,68,9
	.half	.L4337-.L4336
	.byte	3,126,1,5,57,9
	.half	.L102-.L4337
	.byte	1,5,19,7,9
	.half	.L4338-.L102
	.byte	3,21,1,5,9,9
	.half	.L2183-.L4338
	.byte	3,2,1,5,58,9
	.half	.L4339-.L2183
	.byte	3,126,1,5,9,9
	.half	.L105-.L4339
	.byte	3,2,1,5,47,9
	.half	.L4340-.L105
	.byte	1,5,59,9
	.half	.L4341-.L4340
	.byte	1,5,69,9
	.half	.L4342-.L4341
	.byte	3,126,1,5,58,9
	.half	.L104-.L4342
	.byte	1,5,1,7,9
	.half	.L4343-.L104
	.byte	3,5,1,7,9
	.half	.L1417-.L4343
	.byte	0,1,1
.L4329:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_ClearOneMemoryEntry')
	.sect	'.debug_ranges'
.L1416:
	.word	-1,.L917,0,.L1417-.L917,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_SearchEntryForDisplacement')
	.sect	'.debug_info'
.L1418:
	.word	312
	.half	3
	.word	.L1419
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1421,.L1420
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_SearchEntryForDisplacement',0,1,164,15,39
	.word	.L1606
	.byte	1,1
	.word	.L919,.L1935,.L918
	.byte	4
	.byte	'DtcId',0,1,166,15,12
	.word	.L1599,.L1936
	.byte	4
	.byte	'MemoryEntryId',0,1,167,15,52
	.word	.L1925,.L1937
	.byte	5
	.word	.L919,.L1935
	.byte	6
	.byte	'Result',0,1,171,15,20
	.word	.L1606,.L1938
	.byte	6
	.byte	'DtcStatus',0,1,173,15,27
	.word	.L1606,.L1939
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_SearchEntryForDisplacement')
	.sect	'.debug_abbrev'
.L1419:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_SearchEntryForDisplacement')
	.sect	'.debug_line'
.L1420:
	.word	.L4345-.L4344
.L4344:
	.half	3
	.word	.L4347-.L4346
.L4346:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4347:
	.byte	5,27,7,0,5,2
	.word	.L919
	.byte	3,170,15,1,5,21,9
	.half	.L2184-.L919
	.byte	3,244,0,1,5,9,9
	.half	.L2185-.L2184
	.byte	3,3,1,5,31,9
	.half	.L4348-.L2185
	.byte	1,5,1,9
	.half	.L4349-.L4348
	.byte	3,5,1,7,9
	.half	.L1422-.L4349
	.byte	0,1,1
.L4345:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_SearchEntryForDisplacement')
	.sect	'.debug_ranges'
.L1421:
	.word	-1,.L919,0,.L1422-.L919,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_GetEventInternalData')
	.sect	'.debug_info'
.L1423:
	.word	314
	.half	3
	.word	.L1424
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1426,.L1425
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_GetEventInternalData',0,1,192,17,30
	.word	.L1606
	.byte	1,1
	.word	.L921,.L1940,.L920
	.byte	4
	.byte	'EventId',0,1,194,17,12
	.word	.L1599,.L1941
	.byte	4
	.byte	'DataType',0,1,195,17,33
	.word	.L1741,.L1942
	.byte	5
	.word	.L921,.L1940
	.byte	6
	.byte	'Data',0,1,198,17,11
	.word	.L1606,.L1943
	.byte	6
	.byte	'DtcId',0,1,199,17,12
	.word	.L1599,.L1944
	.byte	6
	.byte	'ret',0,1,200,17,20
	.word	.L1606,.L1945
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_GetEventInternalData')
	.sect	'.debug_abbrev'
.L1424:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_GetEventInternalData')
	.sect	'.debug_line'
.L1425:
	.word	.L4351-.L4350
.L4350:
	.half	3
	.word	.L4353-.L4352
.L4352:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4353:
	.byte	5,30,7,0,5,2
	.word	.L921
	.byte	3,191,17,1,5,20,9
	.half	.L2186-.L921
	.byte	3,7,1,5,5,9
	.half	.L2188-.L2186
	.byte	3,3,1,5,12,7,9
	.half	.L4354-.L2188
	.byte	3,3,1,5,9,9
	.half	.L4355-.L4354
	.byte	1,5,20,7,9
	.half	.L4356-.L4355
	.byte	3,2,1,5,64,9
	.half	.L4357-.L4356
	.byte	1,5,62,9
	.half	.L4358-.L4357
	.byte	1,5,18,9
	.half	.L4359-.L4358
	.byte	1,5,87,9
	.half	.L4360-.L4359
	.byte	1,5,10,9
	.half	.L107-.L4360
	.byte	3,8,1,5,12,7,9
	.half	.L4361-.L107
	.byte	3,3,1,5,9,9
	.half	.L4362-.L4361
	.byte	1,5,20,7,9
	.half	.L4363-.L4362
	.byte	3,2,1,5,43,9
	.half	.L4364-.L4363
	.byte	1,5,25,9
	.half	.L110-.L4364
	.byte	3,8,1,5,10,9
	.half	.L4365-.L110
	.byte	1,5,16,7,9
	.half	.L4366-.L4365
	.byte	3,3,1,5,38,9
	.half	.L4367-.L4366
	.byte	1,5,10,9
	.half	.L113-.L4367
	.byte	3,2,1,5,62,7,9
	.half	.L4368-.L113
	.byte	3,4,1,5,53,9
	.half	.L4369-.L4368
	.byte	1,5,9,9
	.half	.L2187-.L4369
	.byte	3,1,1,5,20,7,9
	.half	.L108-.L2187
	.byte	3,2,1,5,9,9
	.half	.L4370-.L108
	.byte	3,126,1,5,10,9
	.half	.L115-.L4370
	.byte	3,5,1,5,16,7,9
	.half	.L4371-.L115
	.byte	3,3,1,5,39,9
	.half	.L4372-.L4371
	.byte	1,5,10,9
	.half	.L118-.L4372
	.byte	3,2,1,5,16,7,9
	.half	.L4373-.L118
	.byte	3,3,1,5,39,9
	.half	.L4374-.L4373
	.byte	1,5,10,9
	.half	.L120-.L4374
	.byte	3,2,1,5,16,7,9
	.half	.L4375-.L120
	.byte	3,3,1,5,40,9
	.half	.L4376-.L4375
	.byte	1,5,10,9
	.half	.L122-.L4376
	.byte	3,2,1,5,16,7,9
	.half	.L4377-.L122
	.byte	3,3,1,5,14,9
	.half	.L4378-.L4377
	.byte	1,5,44,9
	.half	.L4379-.L4378
	.byte	1,5,10,9
	.half	.L124-.L4379
	.byte	3,2,1,5,16,7,9
	.half	.L4380-.L124
	.byte	3,3,1,5,14,9
	.half	.L4381-.L4380
	.byte	1,5,44,9
	.half	.L4382-.L4381
	.byte	1,5,25,9
	.half	.L126-.L4382
	.byte	3,2,1,5,10,9
	.half	.L4383-.L126
	.byte	1,5,16,7,9
	.half	.L4384-.L4383
	.byte	3,3,1,5,41,9
	.half	.L4385-.L4384
	.byte	1,5,25,9
	.half	.L128-.L4385
	.byte	3,22,1,5,10,9
	.half	.L4386-.L128
	.byte	1,5,12,7,9
	.half	.L4387-.L4386
	.byte	3,3,1,5,44,9
	.half	.L2189-.L4387
	.byte	1,5,9,9
	.half	.L4388-.L2189
	.byte	1,5,20,7,9
	.half	.L111-.L4388
	.byte	3,2,1,5,25,9
	.half	.L4389-.L111
	.byte	1,5,20,9
	.half	.L131-.L4389
	.byte	3,4,1,5,9,9
	.half	.L4390-.L131
	.byte	3,126,1,5,16,9
	.half	.L130-.L4390
	.byte	3,8,1,5,14,9
	.half	.L133-.L130
	.byte	1,5,12,9
	.half	.L109-.L133
	.byte	3,3,1,5,1,9
	.half	.L4391-.L109
	.byte	3,1,1,7,9
	.half	.L1427-.L4391
	.byte	0,1,1
.L4351:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_GetEventInternalData')
	.sect	'.debug_ranges'
.L1426:
	.word	-1,.L921,0,.L1427-.L921,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_StorageDataElement')
	.sect	'.debug_info'
.L1428:
	.word	334
	.half	3
	.word	.L1429
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1431,.L1430
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_StorageDataElement',0,1,203,18,29,1,1
	.word	.L923,.L1946,.L922
	.byte	4
	.byte	'EventId',0,1,205,18,12
	.word	.L1599,.L1947
	.byte	4
	.byte	'DataIdx',0,1,206,18,12
	.word	.L1599,.L1948
	.byte	4
	.byte	'DataBufferPtr',0,1,207,18,46
	.word	.L1949,.L1950
	.byte	5
	.word	.L923,.L1946
	.byte	6
	.byte	'DataSize',0,1,211,18,11
	.word	.L1606,.L1951
	.byte	6
	.byte	'i',0,1,212,18,11
	.word	.L1606,.L1952
	.byte	6
	.byte	'ret',0,1,213,18,20
	.word	.L1606,.L1953
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_StorageDataElement')
	.sect	'.debug_abbrev'
.L1429:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_StorageDataElement')
	.sect	'.debug_line'
.L1430:
	.word	.L4393-.L4392
.L4392:
	.half	3
	.word	.L4395-.L4394
.L4394:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4395:
	.byte	5,29,7,0,5,2
	.word	.L923
	.byte	3,202,18,1,5,8,9
	.half	.L2200-.L923
	.byte	3,12,1,5,5,9
	.half	.L4396-.L2200
	.byte	1,5,20,7,9
	.half	.L4397-.L4396
	.byte	3,2,1,5,10,9
	.half	.L2201-.L4397
	.byte	3,2,1,5,69,9
	.half	.L4398-.L2201
	.byte	1,5,25,9
	.half	.L2196-.L4398
	.byte	1,5,11,9
	.half	.L4399-.L2196
	.byte	3,2,1,5,26,9
	.half	.L4400-.L4399
	.byte	1,5,8,9
	.half	.L135-.L4400
	.byte	3,3,1,5,5,9
	.half	.L4401-.L135
	.byte	1,5,20,7,9
	.half	.L4402-.L4401
	.byte	3,2,1,5,17,9
	.half	.L2202-.L4402
	.byte	3,2,1,5,57,9
	.half	.L4403-.L2202
	.byte	1,5,9,9
	.half	.L2203-.L4403
	.byte	3,2,1,5,19,7,9
	.half	.L4404-.L2203
	.byte	3,2,1,5,43,9
	.half	.L2199-.L4404
	.byte	3,2,1,5,36,9
	.half	.L4405-.L2199
	.byte	3,126,1,5,20,9
	.half	.L139-.L4405
	.byte	3,2,1,5,36,9
	.half	.L4406-.L139
	.byte	1,5,41,9
	.half	.L4407-.L4406
	.byte	1,5,39,9
	.half	.L4408-.L4407
	.byte	3,126,1,5,36,9
	.half	.L138-.L4408
	.byte	1,5,11,7,9
	.half	.L137-.L138
	.byte	3,7,1,5,26,9
	.half	.L4409-.L137
	.byte	1,5,1,9
	.half	.L136-.L4409
	.byte	3,3,1,7,9
	.half	.L1432-.L136
	.byte	0,1,1
.L4393:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_StorageDataElement')
	.sect	'.debug_ranges'
.L1431:
	.word	-1,.L923,0,.L1432-.L923,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_GetDtcInternalData')
	.sect	'.debug_info'
.L1433:
	.word	294
	.half	3
	.word	.L1434
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1436,.L1435
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_GetDtcInternalData',0,1,132,19,30
	.word	.L1606
	.byte	1,1
	.word	.L925,.L1954,.L924
	.byte	4
	.byte	'DtcId',0,1,134,19,12
	.word	.L1599,.L1955
	.byte	4
	.byte	'DataIdx',0,1,135,19,12
	.word	.L1599,.L1956
	.byte	5
	.word	.L925,.L1954
	.byte	6
	.byte	'Data',0,1,138,19,11
	.word	.L1606,.L1957
	.byte	6
	.byte	'EventId',0,1,140,19,12
	.word	.L1599,.L1958
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_GetDtcInternalData')
	.sect	'.debug_abbrev'
.L1434:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_GetDtcInternalData')
	.sect	'.debug_line'
.L1435:
	.word	.L4411-.L4410
.L4410:
	.half	3
	.word	.L4413-.L4412
.L4412:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4413:
	.byte	5,16,7,0,5,2
	.word	.L925
	.byte	3,137,19,1,5,17,9
	.half	.L2207-.L925
	.byte	3,4,1,5,40,9
	.half	.L2208-.L2207
	.byte	1,5,56,9
	.half	.L4414-.L2208
	.byte	1,5,21,9
	.half	.L141-.L4414
	.byte	3,2,1,5,9,9
	.half	.L4415-.L141
	.byte	1,5,62,7,9
	.half	.L4416-.L4415
	.byte	3,2,1,5,65,9
	.half	.L142-.L4416
	.byte	3,124,1,5,56,9
	.half	.L140-.L142
	.byte	1,5,1,7,9
	.half	.L4417-.L140
	.byte	3,10,1,7,9
	.half	.L1437-.L4417
	.byte	0,1,1
.L4411:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_GetDtcInternalData')
	.sect	'.debug_ranges'
.L1436:
	.word	-1,.L925,0,.L1437-.L925,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_CaptureData')
	.sect	'.debug_info'
.L1438:
	.word	352
	.half	3
	.word	.L1439
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1441,.L1440
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_CaptureData',0,1,168,19,29,1,1
	.word	.L927,.L1959,.L926
	.byte	4
	.byte	'EventId',0,1,170,19,12
	.word	.L1599,.L1960
	.byte	5
	.word	.L927,.L1959
	.byte	6
	.byte	'MemEntryId',0,1,173,19,19
	.word	.L1606,.L1961
	.byte	6
	.byte	'DtcId',0,1,174,19,12
	.word	.L1599,.L1962
	.byte	6
	.byte	'Trigger',0,1,176,19,44
	.word	.L1606,.L1963
	.byte	6
	.byte	'ExtDataChangedFlag',0,1,177,19,13
	.word	.L1606,.L1964
	.byte	6
	.byte	'FFDataChangedFlag',0,1,178,19,10
	.word	.L1606,.L1965
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_CaptureData')
	.sect	'.debug_abbrev'
.L1439:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_CaptureData')
	.sect	'.debug_line'
.L1440:
	.word	.L4419-.L4418
.L4418:
	.half	3
	.word	.L4421-.L4420
.L4420:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4421:
	.byte	5,29,7,0,5,2
	.word	.L927
	.byte	3,167,19,1,5,32,9
	.half	.L2211-.L927
	.byte	3,9,1,5,28,9
	.half	.L2212-.L2211
	.byte	3,1,1,5,43,9
	.half	.L2214-.L2212
	.byte	3,2,1,5,33,9
	.half	.L2210-.L2214
	.byte	3,1,1,5,13,9
	.half	.L2217-.L2210
	.byte	3,1,1,5,9,9
	.half	.L2218-.L2217
	.byte	3,6,1,5,40,9
	.half	.L4422-.L2218
	.byte	1,5,8,9
	.half	.L4423-.L4422
	.byte	1,5,13,7,9
	.half	.L4424-.L4423
	.byte	3,1,1,5,24,9
	.half	.L4425-.L4424
	.byte	1,5,21,9
	.half	.L4426-.L4425
	.byte	1,5,61,7,9
	.half	.L4427-.L4426
	.byte	3,2,1,5,9,9
	.half	.L2220-.L4427
	.byte	1,5,13,7,9
	.half	.L4428-.L2220
	.byte	3,3,1,5,41,9
	.half	.L4429-.L4428
	.byte	1,5,39,9
	.half	.L4430-.L4429
	.byte	1,5,13,9
	.half	.L4431-.L4430
	.byte	3,2,1,5,43,9
	.half	.L4432-.L4431
	.byte	1,5,41,9
	.half	.L4433-.L4432
	.byte	1,5,42,9
	.half	.L4434-.L4433
	.byte	3,126,1,5,13,9
	.half	.L147-.L4434
	.byte	3,6,1,5,38,9
	.half	.L4435-.L147
	.byte	1,5,36,9
	.half	.L4436-.L4435
	.byte	1,5,13,9
	.half	.L4437-.L4436
	.byte	3,1,1,5,39,9
	.half	.L4438-.L4437
	.byte	1,5,13,9
	.half	.L4439-.L4438
	.byte	3,1,1,5,42,9
	.half	.L4440-.L4439
	.byte	1,5,13,9
	.half	.L4441-.L4440
	.byte	3,1,1,5,42,9
	.half	.L4442-.L4441
	.byte	1,5,13,9
	.half	.L4443-.L4442
	.byte	3,1,1,5,37,9
	.half	.L4444-.L4443
	.byte	1,5,13,9
	.half	.L4445-.L4444
	.byte	3,1,1,5,37,9
	.half	.L4446-.L4445
	.byte	1,5,13,9
	.half	.L4447-.L4446
	.byte	3,1,1,5,38,9
	.half	.L4448-.L4447
	.byte	1,5,8,9
	.half	.L145-.L4448
	.byte	3,11,1,5,39,9
	.half	.L4449-.L145
	.byte	1,5,5,9
	.half	.L4450-.L4449
	.byte	1,5,12,7,9
	.half	.L4451-.L4450
	.byte	3,5,1,5,30,9
	.half	.L4452-.L4451
	.byte	1,5,9,9
	.half	.L4453-.L4452
	.byte	1,5,67,7,9
	.half	.L4454-.L4453
	.byte	3,5,1,5,31,9
	.half	.L2215-.L4454
	.byte	1,5,69,9
	.half	.L2222-.L2215
	.byte	3,5,1,5,32,9
	.half	.L2213-.L2222
	.byte	1,5,8,9
	.half	.L149-.L2213
	.byte	3,9,1,5,59,7,9
	.half	.L4455-.L149
	.byte	1,5,12,7,9
	.half	.L151-.L4455
	.byte	3,3,1,5,9,9
	.half	.L4456-.L151
	.byte	1,5,21,7,9
	.half	.L4457-.L4456
	.byte	3,2,1,5,62,9
	.half	.L4458-.L4457
	.byte	1,5,1,7,9
	.half	.L152-.L4458
	.byte	3,3,1,7,9
	.half	.L1442-.L152
	.byte	0,1,1
.L4419:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_CaptureData')
	.sect	'.debug_ranges'
.L1441:
	.word	-1,.L927,0,.L1442-.L927,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_UpdateFFData')
	.sect	'.debug_info'
.L1443:
	.word	493
	.half	3
	.word	.L1444
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1446,.L1445
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_UpdateFFData',0,1,140,20,32
	.word	.L1606
	.byte	1,1
	.word	.L929,.L1966,.L928
	.byte	4
	.byte	'EventId',0,1,142,20,12
	.word	.L1599,.L1967
	.byte	4
	.byte	'Trigger',0,1,143,20,44
	.word	.L1606,.L1968
	.byte	5
	.word	.L929,.L1966
	.byte	6
	.byte	'DataChangedFlag',0,1,146,20,13
	.word	.L1606,.L1969
	.byte	6
	.byte	'RecIdx',0,1,147,20,11
	.word	.L1606,.L1970
	.byte	6
	.byte	'i',0,1,148,20,11
	.word	.L1606,.L1971
	.byte	6
	.byte	'j',0,1,149,20,11
	.word	.L1606,.L1972
	.byte	6
	.byte	'DataIdx',0,1,150,20,11
	.word	.L1606,.L1973
	.byte	6
	.byte	'DataBufferPtr',0,1,151,20,12
	.word	.L1695,.L1974
	.byte	6
	.byte	'RecNum',0,1,152,20,11
	.word	.L1606,.L1975
	.byte	6
	.byte	'DidIdx',0,1,153,20,11
	.word	.L1606,.L1976
	.byte	6
	.byte	'DID',0,1,154,20,12
	.word	.L1599,.L1977
	.byte	6
	.byte	'k',0,1,155,20,11
	.word	.L1606,.L1978
	.byte	6
	.byte	'DtcId',0,1,157,20,12
	.word	.L1599,.L1979
	.byte	6
	.byte	'MemEntryId',0,1,158,20,19
	.word	.L1606,.L1980
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_UpdateFFData')
	.sect	'.debug_abbrev'
.L1444:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_UpdateFFData')
	.sect	'.debug_line'
.L1445:
	.word	.L4460-.L4459
.L4459:
	.half	3
	.word	.L4462-.L4461
.L4461:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4462:
	.byte	5,32,7,0,5,2
	.word	.L929
	.byte	3,139,20,1,5,29,9
	.half	.L2226-.L929
	.byte	3,6,1,5,20,9
	.half	.L2227-.L2226
	.byte	3,11,1,5,32,9
	.half	.L2228-.L2227
	.byte	3,1,1,5,8,9
	.half	.L2229-.L2228
	.byte	3,2,1,5,5,9
	.half	.L4463-.L2229
	.byte	1,5,25,7,9
	.half	.L4464-.L4463
	.byte	3,2,1,5,15,9
	.half	.L2230-.L4464
	.byte	3,3,1,5,55,9
	.half	.L2232-.L2230
	.byte	1,5,23,9
	.half	.L156-.L2232
	.byte	3,2,1,5,53,9
	.half	.L4465-.L156
	.byte	1,5,22,9
	.half	.L2234-.L4465
	.byte	3,3,1,5,18,9
	.half	.L2235-.L2234
	.byte	3,6,1,5,17,9
	.half	.L4466-.L2235
	.byte	1,5,22,7,9
	.half	.L4467-.L4466
	.byte	3,1,1,5,21,9
	.half	.L4468-.L4467
	.byte	1,5,25,7,9
	.half	.L4469-.L4468
	.byte	3,1,1,5,43,9
	.half	.L4470-.L4469
	.byte	1,5,40,9
	.half	.L4471-.L4470
	.byte	1,5,23,7,9
	.half	.L157-.L4471
	.byte	3,1,1,5,57,9
	.half	.L4472-.L157
	.byte	1,5,67,9
	.half	.L4473-.L4472
	.byte	1,5,33,7,9
	.half	.L4474-.L4473
	.byte	3,2,1,5,40,9
	.half	.L4475-.L4474
	.byte	3,3,1,5,38,9
	.half	.L2237-.L4475
	.byte	1,5,31,9
	.half	.L4476-.L2237
	.byte	3,1,1,5,23,9
	.half	.L4477-.L4476
	.byte	3,2,1,5,66,9
	.half	.L2238-.L4477
	.byte	1,5,31,9
	.half	.L162-.L2238
	.byte	3,2,1,5,67,9
	.half	.L4478-.L162
	.byte	1,5,27,9
	.half	.L2240-.L4478
	.byte	3,1,1,5,51,9
	.half	.L2241-.L2240
	.byte	3,2,1,5,42,9
	.half	.L4479-.L2241
	.byte	3,1,1,5,35,9
	.half	.L4480-.L4479
	.byte	3,1,1,5,27,9
	.half	.L4481-.L4480
	.byte	3,2,1,5,66,9
	.half	.L2242-.L4481
	.byte	1,5,36,9
	.half	.L164-.L2242
	.byte	3,2,1,5,68,9
	.half	.L4482-.L164
	.byte	1,5,75,9
	.half	.L2244-.L4482
	.byte	3,2,1,5,69,9
	.half	.L2247-.L2244
	.byte	3,124,1,5,36,9
	.half	.L163-.L2247
	.byte	1,5,66,9
	.half	.L4483-.L163
	.byte	1,5,69,7,9
	.half	.L4484-.L4483
	.byte	3,119,1,5,32,9
	.half	.L161-.L4484
	.byte	1,5,66,9
	.half	.L4485-.L161
	.byte	1,7,9
	.half	.L4486-.L4485
	.byte	1,5,31,9
	.half	.L158-.L4486
	.byte	3,20,1,5,23,9
	.half	.L4487-.L158
	.byte	3,2,1,5,66,9
	.half	.L2248-.L4487
	.byte	1,5,31,9
	.half	.L167-.L2248
	.byte	3,2,1,5,67,9
	.half	.L4488-.L167
	.byte	1,5,35,9
	.half	.L2250-.L4488
	.byte	3,2,1,5,27,9
	.half	.L4489-.L2250
	.byte	3,2,1,5,66,9
	.half	.L2251-.L4489
	.byte	1,5,36,9
	.half	.L169-.L2251
	.byte	3,2,1,5,68,9
	.half	.L4490-.L169
	.byte	1,5,28,9
	.half	.L2253-.L4490
	.byte	3,2,1,5,25,9
	.half	.L4491-.L2253
	.byte	1,5,46,7,9
	.half	.L4492-.L4491
	.byte	3,2,1,5,43,9
	.half	.L4493-.L4492
	.byte	1,5,28,9
	.half	.L170-.L4493
	.byte	3,3,1,5,25,9
	.half	.L4494-.L170
	.byte	1,5,46,7,9
	.half	.L4495-.L4494
	.byte	3,2,1,5,43,9
	.half	.L2254-.L4495
	.byte	1,5,69,9
	.half	.L171-.L2254
	.byte	3,117,1,5,36,9
	.half	.L168-.L171
	.byte	1,5,66,9
	.half	.L4496-.L168
	.byte	1,5,69,7,9
	.half	.L4497-.L4496
	.byte	3,122,1,5,32,9
	.half	.L166-.L4497
	.byte	1,5,66,9
	.half	.L4498-.L166
	.byte	1,5,58,7,9
	.half	.L165-.L4498
	.byte	3,84,1,5,24,9
	.half	.L155-.L165
	.byte	1,5,55,9
	.half	.L4499-.L155
	.byte	1,5,5,7,9
	.half	.L154-.L4499
	.byte	3,224,0,1,5,1,9
	.half	.L2255-.L154
	.byte	3,1,1,7,9
	.half	.L1447-.L2255
	.byte	0,1,1
.L4460:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_UpdateFFData')
	.sect	'.debug_ranges'
.L1446:
	.word	-1,.L929,0,.L1447-.L929,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_UpdateExtData')
	.sect	'.debug_info'
.L1448:
	.word	422
	.half	3
	.word	.L1449
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1451,.L1450
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_UpdateExtData',0,1,153,21,32
	.word	.L1606
	.byte	1,1
	.word	.L931,.L1981,.L930
	.byte	4
	.byte	'EventId',0,1,155,21,12
	.word	.L1599,.L1982
	.byte	4
	.byte	'Trigger',0,1,156,21,44
	.word	.L1606,.L1983
	.byte	5
	.word	.L931,.L1981
	.byte	6
	.byte	'DataChangedFlag',0,1,159,21,13
	.word	.L1606,.L1984
	.byte	6
	.byte	'RecIdx',0,1,160,21,11
	.word	.L1606,.L1985
	.byte	6
	.byte	'i',0,1,161,21,11
	.word	.L1606,.L1986
	.byte	6
	.byte	'j',0,1,162,21,11
	.word	.L1606,.L1987
	.byte	6
	.byte	'DataIdx',0,1,163,21,11
	.word	.L1606,.L1988
	.byte	6
	.byte	'DataBufferPtr',0,1,164,21,12
	.word	.L1695,.L1989
	.byte	6
	.byte	'DtcId',0,1,165,21,12
	.word	.L1599,.L1990
	.byte	6
	.byte	'MemEntryId',0,1,166,21,19
	.word	.L1606,.L1991
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_UpdateExtData')
	.sect	'.debug_abbrev'
.L1449:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_UpdateExtData')
	.sect	'.debug_line'
.L1450:
	.word	.L4501-.L4500
.L4500:
	.half	3
	.word	.L4503-.L4502
.L4502:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4503:
	.byte	5,32,7,0,5,2
	.word	.L931
	.byte	3,152,21,1,5,29,9
	.half	.L4504-.L931
	.byte	3,6,1,5,20,9
	.half	.L2257-.L4504
	.byte	3,6,1,5,32,9
	.half	.L2259-.L2257
	.byte	3,1,1,5,8,9
	.half	.L2260-.L2259
	.byte	3,2,1,5,5,9
	.half	.L4505-.L2260
	.byte	1,5,25,7,9
	.half	.L4506-.L4505
	.byte	3,2,1,5,15,9
	.half	.L2261-.L4506
	.byte	3,2,1,5,43,9
	.half	.L2263-.L2261
	.byte	3,9,1,5,56,9
	.half	.L4507-.L2263
	.byte	3,119,1,5,23,9
	.half	.L175-.L4507
	.byte	3,2,1,5,54,9
	.half	.L4508-.L175
	.byte	1,5,18,9
	.half	.L2265-.L4508
	.byte	3,5,1,5,17,9
	.half	.L4509-.L2265
	.byte	1,5,22,7,9
	.half	.L4510-.L4509
	.byte	3,1,1,5,21,9
	.half	.L4511-.L4510
	.byte	1,5,25,7,9
	.half	.L4512-.L4511
	.byte	3,1,1,5,40,9
	.half	.L4513-.L4512
	.byte	1,5,23,7,9
	.half	.L176-.L4513
	.byte	3,1,1,5,58,9
	.half	.L2266-.L176
	.byte	1,5,68,9
	.half	.L2267-.L2266
	.byte	1,5,33,7,9
	.half	.L4514-.L2267
	.byte	3,2,1,5,34,9
	.half	.L4515-.L4514
	.byte	3,2,1,5,32,9
	.half	.L4516-.L4515
	.byte	1,5,23,9
	.half	.L4517-.L4516
	.byte	3,3,1,5,68,9
	.half	.L2268-.L4517
	.byte	1,5,32,9
	.half	.L181-.L2268
	.byte	3,2,1,5,70,9
	.half	.L4518-.L181
	.byte	1,5,71,9
	.half	.L2270-.L4518
	.byte	3,2,1,9
	.half	.L2273-.L2270
	.byte	3,124,1,5,32,9
	.half	.L180-.L2273
	.byte	1,5,68,9
	.half	.L4519-.L180
	.byte	1,7,9
	.half	.L4520-.L4519
	.byte	1,5,31,9
	.half	.L177-.L4520
	.byte	3,10,1,5,23,9
	.half	.L4521-.L177
	.byte	3,2,1,5,68,9
	.half	.L2274-.L4521
	.byte	1,5,32,9
	.half	.L184-.L2274
	.byte	3,2,1,5,70,9
	.half	.L4522-.L184
	.byte	1,5,24,9
	.half	.L2276-.L4522
	.byte	3,2,1,5,21,9
	.half	.L4523-.L2276
	.byte	1,5,42,7,9
	.half	.L4524-.L4523
	.byte	3,2,1,5,39,9
	.half	.L4525-.L4524
	.byte	1,5,24,9
	.half	.L185-.L4525
	.byte	3,3,1,5,21,9
	.half	.L4526-.L185
	.byte	1,5,42,7,9
	.half	.L4527-.L4526
	.byte	3,2,1,5,39,9
	.half	.L2277-.L4527
	.byte	1,5,71,9
	.half	.L186-.L2277
	.byte	3,117,1,5,32,9
	.half	.L183-.L186
	.byte	1,5,68,9
	.half	.L4528-.L183
	.byte	1,5,59,7,9
	.half	.L182-.L4528
	.byte	3,99,1,5,24,9
	.half	.L174-.L182
	.byte	1,5,56,9
	.half	.L4529-.L174
	.byte	1,5,2,7,9
	.half	.L173-.L4529
	.byte	3,47,1,5,1,9
	.half	.L2278-.L173
	.byte	3,1,1,7,9
	.half	.L1452-.L2278
	.byte	0,1,1
.L4501:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_UpdateExtData')
	.sect	'.debug_ranges'
.L1451:
	.word	-1,.L931,0,.L1452-.L931,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_CycleStartProcess')
	.sect	'.debug_info'
.L1453:
	.word	336
	.half	3
	.word	.L1454
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1456,.L1455
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_CycleStartProcess',0,1,238,21,29,1,1
	.word	.L933,.L1992,.L932
	.byte	4
	.byte	'OperationCycleId',0,1,240,21,11
	.word	.L1606,.L1993
	.byte	5
	.word	.L933,.L1992
	.byte	6
	.byte	'EventId',0,1,243,21,12
	.word	.L1599,.L1994
	.byte	6
	.byte	'DtcId',0,1,244,21,12
	.word	.L1599,.L1995
	.byte	6
	.byte	'EventOldStatus',0,1,245,21,27
	.word	.L1606,.L1996
	.byte	6
	.byte	'EventNewStatus',0,1,246,21,27
	.word	.L1606,.L1997
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_CycleStartProcess')
	.sect	'.debug_abbrev'
.L1454:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_CycleStartProcess')
	.sect	'.debug_line'
.L1455:
	.word	.L4531-.L4530
.L4530:
	.half	3
	.word	.L4533-.L4532
.L4532:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4533:
	.byte	5,29,7,0,5,2
	.word	.L933
	.byte	3,237,21,1,5,17,9
	.half	.L2279-.L933
	.byte	3,19,1,5,72,9
	.half	.L2280-.L2279
	.byte	3,7,1,5,49,9
	.half	.L4534-.L2280
	.byte	3,11,1,5,23,9
	.half	.L4535-.L4534
	.byte	3,36,1,5,20,9
	.half	.L4536-.L4535
	.byte	3,1,1,5,32,9
	.half	.L4537-.L4536
	.byte	3,73,1,5,48,9
	.half	.L4538-.L4537
	.byte	1,5,32,9
	.half	.L189-.L4538
	.byte	3,2,1,5,9,9
	.half	.L4539-.L189
	.byte	1,5,21,7,9
	.half	.L4540-.L4539
	.byte	3,2,1,5,30,9
	.half	.L2281-.L4540
	.byte	3,1,1,9
	.half	.L2283-.L2281
	.byte	3,1,1,5,39,9
	.half	.L2284-.L2283
	.byte	3,1,1,5,13,9
	.half	.L4541-.L2284
	.byte	1,5,38,9
	.half	.L4542-.L4541
	.byte	1,5,70,9
	.half	.L4543-.L4542
	.byte	1,5,17,9
	.half	.L4544-.L4543
	.byte	3,3,1,5,16,9
	.half	.L4545-.L4544
	.byte	1,5,61,7,9
	.half	.L4546-.L4545
	.byte	1,5,96,9
	.half	.L4547-.L4546
	.byte	1,5,17,7,9
	.half	.L4548-.L4547
	.byte	3,3,1,5,40,9
	.half	.L4549-.L4548
	.byte	1,5,13,9
	.half	.L191-.L4549
	.byte	3,4,1,5,36,9
	.half	.L4550-.L191
	.byte	1,5,13,9
	.half	.L4551-.L4550
	.byte	3,1,1,5,47,9
	.half	.L4552-.L4551
	.byte	1,5,13,9
	.half	.L4553-.L4552
	.byte	3,1,1,5,35,9
	.half	.L4554-.L4553
	.byte	1,5,45,9
	.half	.L4555-.L4554
	.byte	1,5,13,9
	.half	.L4556-.L4555
	.byte	3,17,1,5,42,9
	.half	.L4557-.L4556
	.byte	1,5,30,9
	.half	.L4558-.L4557
	.byte	3,3,1,9
	.half	.L2286-.L4558
	.byte	3,6,1,5,13,9
	.half	.L2285-.L2286
	.byte	3,3,1,5,39,9
	.half	.L4559-.L2285
	.byte	1,5,13,9
	.half	.L4560-.L4559
	.byte	3,1,1,5,35,9
	.half	.L4561-.L4560
	.byte	1,5,13,9
	.half	.L4562-.L4561
	.byte	3,2,1,5,23,7,9
	.half	.L4563-.L4562
	.byte	3,3,1,5,57,9
	.half	.L4564-.L4563
	.byte	1,5,99,9
	.half	.L4565-.L4564
	.byte	1,5,32,9
	.half	.L2282-.L4565
	.byte	3,1,1,5,17,9
	.half	.L4566-.L2282
	.byte	1,5,27,7,9
	.half	.L4567-.L4566
	.byte	3,3,1,5,88,9
	.half	.L4568-.L4567
	.byte	1,5,70,9
	.half	.L194-.L4568
	.byte	3,3,1,5,16,9
	.half	.L193-.L194
	.byte	3,4,1,5,13,9
	.half	.L2287-.L193
	.byte	1,5,17,7,9
	.half	.L4569-.L2287
	.byte	3,2,1,5,54,9
	.half	.L4570-.L4569
	.byte	1,5,57,9
	.half	.L190-.L4570
	.byte	3,189,127,1,5,48,9
	.half	.L188-.L190
	.byte	1,5,1,7,9
	.half	.L4571-.L188
	.byte	3,242,0,1,7,9
	.half	.L1457-.L4571
	.byte	0,1,1
.L4531:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_CycleStartProcess')
	.sect	'.debug_ranges'
.L1456:
	.word	-1,.L933,0,.L1457-.L933,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_CycleEndProcess')
	.sect	'.debug_info'
.L1458:
	.word	358
	.half	3
	.word	.L1459
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1461,.L1460
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_CycleEndProcess',0,1,132,23,29,1,1
	.word	.L935,.L1998,.L934
	.byte	4
	.byte	'OperationCycleId',0,1,134,23,11
	.word	.L1606,.L1999
	.byte	5
	.word	.L935,.L1998
	.byte	6
	.byte	'EventId',0,1,137,23,12
	.word	.L1599,.L2000
	.byte	6
	.byte	'DtcId',0,1,138,23,12
	.word	.L1599,.L2001
	.byte	6
	.byte	'DtcOldStatus',0,1,139,23,27
	.word	.L1606,.L2002
	.byte	6
	.byte	'DtcNewStatus',0,1,140,23,27
	.word	.L1606,.L2003
	.byte	6
	.byte	'EventCurStatus',0,1,141,23,27
	.word	.L1606,.L2004
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_CycleEndProcess')
	.sect	'.debug_abbrev'
.L1459:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_CycleEndProcess')
	.sect	'.debug_line'
.L1460:
	.word	.L4573-.L4572
.L4572:
	.half	3
	.word	.L4575-.L4574
.L4574:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4575:
	.byte	5,29,7,0,5,2
	.word	.L935
	.byte	3,131,23,1,5,17,9
	.half	.L2292-.L935
	.byte	3,11,1,5,72,9
	.half	.L2293-.L2292
	.byte	3,6,1,5,46,9
	.half	.L4576-.L2293
	.byte	3,4,1,9
	.half	.L4577-.L4576
	.byte	3,5,1,5,48,9
	.half	.L4578-.L4577
	.byte	3,113,1,5,32,9
	.half	.L197-.L4578
	.byte	3,2,1,5,9,9
	.half	.L4579-.L197
	.byte	1,5,30,7,9
	.half	.L4580-.L4579
	.byte	3,2,1,5,17,9
	.half	.L2294-.L4580
	.byte	3,2,1,5,16,9
	.half	.L4581-.L2294
	.byte	1,5,25,7,9
	.half	.L4582-.L4581
	.byte	3,1,1,5,20,7,9
	.half	.L4583-.L4582
	.byte	3,3,1,5,17,9
	.half	.L4584-.L4583
	.byte	1,5,21,7,9
	.half	.L4585-.L4584
	.byte	3,2,1,5,44,9
	.half	.L4586-.L4585
	.byte	1,5,20,9
	.half	.L201-.L4586
	.byte	3,3,1,5,17,9
	.half	.L4587-.L201
	.byte	1,5,21,7,9
	.half	.L4588-.L4587
	.byte	3,2,1,5,44,9
	.half	.L4589-.L4588
	.byte	1,5,20,9
	.half	.L202-.L4589
	.byte	3,4,1,5,25,7,9
	.half	.L4590-.L202
	.byte	3,1,1,5,52,9
	.half	.L4591-.L4590
	.byte	1,5,50,9
	.half	.L2295-.L4591
	.byte	1,5,21,7,9
	.half	.L4592-.L2295
	.byte	3,2,1,5,45,9
	.half	.L4593-.L4592
	.byte	1,5,61,9
	.half	.L199-.L4593
	.byte	3,15,1,5,13,9
	.half	.L2297-.L199
	.byte	1,5,41,7,9
	.half	.L4594-.L2297
	.byte	3,2,1,5,17,9
	.half	.L198-.L4594
	.byte	3,11,1,5,24,9
	.half	.L2301-.L198
	.byte	3,1,1,9
	.half	.L2302-.L2301
	.byte	3,1,1,5,32,9
	.half	.L2303-.L2302
	.byte	3,3,1,5,9,9
	.half	.L4595-.L2303
	.byte	1,5,18,7,9
	.half	.L4596-.L4595
	.byte	3,14,1,5,22,7,9
	.half	.L4597-.L4596
	.byte	3,1,1,5,17,7,9
	.half	.L4598-.L4597
	.byte	3,6,1,5,36,7,9
	.half	.L4599-.L4598
	.byte	3,2,1,5,21,9
	.half	.L4600-.L4599
	.byte	3,2,1,5,46,9
	.half	.L4601-.L4600
	.byte	1,5,44,9
	.half	.L4602-.L4601
	.byte	1,5,13,9
	.half	.L206-.L4602
	.byte	3,12,1,5,44,9
	.half	.L4603-.L206
	.byte	1,5,12,9
	.half	.L4604-.L4603
	.byte	1,5,37,7,9
	.half	.L4605-.L4604
	.byte	3,1,1,5,34,9
	.half	.L2305-.L4605
	.byte	1,5,17,7,9
	.half	.L4606-.L2305
	.byte	3,1,1,5,50,9
	.half	.L2307-.L4606
	.byte	1,5,18,7,9
	.half	.L4607-.L2307
	.byte	3,4,1,5,22,7,9
	.half	.L4608-.L4607
	.byte	3,1,1,5,17,7,9
	.half	.L4609-.L4608
	.byte	3,6,1,5,40,9
	.half	.L4610-.L4609
	.byte	1,5,16,9
	.half	.L213-.L4610
	.byte	3,7,1,5,43,9
	.half	.L4611-.L213
	.byte	1,5,13,9
	.half	.L4612-.L4611
	.byte	1,5,52,7,9
	.half	.L4613-.L4612
	.byte	3,3,1,5,32,9
	.half	.L2313-.L4613
	.byte	3,3,1,5,17,9
	.half	.L4614-.L2313
	.byte	3,5,1,5,43,9
	.half	.L4615-.L4614
	.byte	1,5,41,9
	.half	.L4616-.L4615
	.byte	1,5,20,9
	.half	.L4617-.L4616
	.byte	3,1,1,5,45,9
	.half	.L4618-.L4617
	.byte	1,5,17,9
	.half	.L4619-.L4618
	.byte	1,5,21,7,9
	.half	.L4620-.L4619
	.byte	3,2,1,5,43,9
	.half	.L4621-.L4620
	.byte	1,5,17,9
	.half	.L216-.L4621
	.byte	3,3,1,5,46,9
	.half	.L4622-.L216
	.byte	1,5,50,9
	.half	.L4623-.L4622
	.byte	3,1,1,5,17,9
	.half	.L4624-.L4623
	.byte	3,1,1,5,75,9
	.half	.L4625-.L4624
	.byte	1,5,73,9
	.half	.L4626-.L4625
	.byte	1,5,17,9
	.half	.L4627-.L4626
	.byte	3,1,1,5,47,9
	.half	.L4628-.L4627
	.byte	1,5,45,9
	.half	.L4629-.L4628
	.byte	1,5,13,9
	.half	.L215-.L4629
	.byte	3,8,1,5,23,7,9
	.half	.L4630-.L215
	.byte	3,3,1,5,57,9
	.half	.L4631-.L4630
	.byte	1,5,97,9
	.half	.L4632-.L4631
	.byte	1,5,20,9
	.half	.L2323-.L4632
	.byte	3,1,1,5,32,9
	.half	.L4633-.L2323
	.byte	1,5,17,9
	.half	.L4634-.L4633
	.byte	1,5,27,7,9
	.half	.L4635-.L4634
	.byte	3,3,1,5,86,9
	.half	.L4636-.L4635
	.byte	1,5,68,9
	.half	.L218-.L4636
	.byte	3,3,1,5,9,9
	.half	.L210-.L218
	.byte	3,9,1,5,35,9
	.half	.L4637-.L210
	.byte	1,5,9,9
	.half	.L4638-.L4637
	.byte	3,1,1,5,31,9
	.half	.L4639-.L4638
	.byte	1,5,57,9
	.half	.L4640-.L4639
	.byte	3,222,126,1,5,32,9
	.half	.L196-.L4640
	.byte	1,5,48,9
	.half	.L4641-.L196
	.byte	1,5,1,7,9
	.half	.L4642-.L4641
	.byte	3,164,1,1,7,9
	.half	.L1462-.L4642
	.byte	0,1,1
.L4573:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_CycleEndProcess')
	.sect	'.debug_ranges'
.L1461:
	.word	-1,.L935,0,.L1462-.L935,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_MainFnc_OperationCycle')
	.sect	'.debug_info'
.L1463:
	.word	230
	.half	3
	.word	.L1464
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1466,.L1465
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_MainFnc_OperationCycle',0,1,196,24,29,1,1
	.word	.L937,.L2005,.L936
	.byte	4
	.word	.L937,.L2005
	.byte	5
	.byte	'i',0,1,201,24,11
	.word	.L1606,.L2006
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_MainFnc_OperationCycle')
	.sect	'.debug_abbrev'
.L1464:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_MainFnc_OperationCycle')
	.sect	'.debug_line'
.L1465:
	.word	.L4644-.L4643
.L4643:
	.half	3
	.word	.L4646-.L4645
.L4645:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4646:
	.byte	5,11,7,0,5,2
	.word	.L937
	.byte	3,202,24,1,5,31,9
	.half	.L2328-.L937
	.byte	3,5,1,5,33,9
	.half	.L2329-.L2328
	.byte	3,1,1,5,31,9
	.half	.L4647-.L2329
	.byte	3,6,1,5,33,9
	.half	.L2330-.L4647
	.byte	3,1,1,5,31,9
	.half	.L4648-.L2330
	.byte	3,7,1,5,33,9
	.half	.L2331-.L4648
	.byte	3,1,1,5,38,9
	.half	.L4649-.L2331
	.byte	3,107,1,5,13,9
	.half	.L220-.L4649
	.byte	3,2,1,5,25,9
	.half	.L4650-.L220
	.byte	1,5,12,9
	.half	.L4651-.L4650
	.byte	1,5,21,7,9
	.half	.L4652-.L4651
	.byte	3,1,1,5,35,9
	.half	.L4653-.L4652
	.byte	1,5,39,9
	.half	.L4654-.L4653
	.byte	1,5,13,7,9
	.half	.L4655-.L4654
	.byte	3,2,1,5,29,9
	.half	.L2332-.L4655
	.byte	1,5,13,9
	.half	.L2333-.L2332
	.byte	3,1,1,5,31,9
	.half	.L4656-.L2333
	.byte	1,5,45,9
	.half	.L4657-.L4656
	.byte	3,127,1,5,18,9
	.half	.L221-.L4657
	.byte	3,4,1,5,30,9
	.half	.L4658-.L221
	.byte	1,5,17,9
	.half	.L4659-.L4658
	.byte	1,5,21,7,9
	.half	.L4660-.L4659
	.byte	3,1,1,5,35,9
	.half	.L4661-.L4660
	.byte	1,5,39,9
	.half	.L4662-.L4661
	.byte	1,5,13,7,9
	.half	.L4663-.L4662
	.byte	3,2,1,5,29,9
	.half	.L2334-.L4663
	.byte	1,5,13,9
	.half	.L2335-.L2334
	.byte	3,1,1,5,31,9
	.half	.L4664-.L2335
	.byte	1,5,41,9
	.half	.L4665-.L4664
	.byte	3,1,1,5,45,9
	.half	.L2337-.L4665
	.byte	3,126,1,5,18,9
	.half	.L224-.L2337
	.byte	3,4,1,5,30,9
	.half	.L4666-.L224
	.byte	1,5,17,9
	.half	.L4667-.L4666
	.byte	1,5,21,7,9
	.half	.L4668-.L4667
	.byte	3,1,1,5,35,9
	.half	.L4669-.L4668
	.byte	1,5,39,9
	.half	.L4670-.L4669
	.byte	1,5,13,7,9
	.half	.L4671-.L4670
	.byte	3,3,1,5,29,9
	.half	.L2338-.L4671
	.byte	1,5,13,9
	.half	.L2339-.L2338
	.byte	3,1,1,5,31,9
	.half	.L4672-.L2339
	.byte	1,5,41,9
	.half	.L4673-.L4672
	.byte	3,1,1,5,43,9
	.half	.L223-.L4673
	.byte	3,1,1,5,41,9
	.half	.L226-.L223
	.byte	3,105,1,5,38,9
	.half	.L219-.L226
	.byte	1,5,1,7,9
	.half	.L4674-.L219
	.byte	3,30,1,7,9
	.half	.L1467-.L4674
	.byte	0,1,1
.L4644:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_MainFnc_OperationCycle')
	.sect	'.debug_ranges'
.L1466:
	.word	-1,.L937,0,.L1467-.L937,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_MainFnc_BswErrorHandle')
	.sect	'.debug_info'
.L1468:
	.word	230
	.half	3
	.word	.L1469
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1471,.L1470
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_MainFnc_BswErrorHandle',0,1,250,24,29,1,1
	.word	.L939,.L2007,.L938
	.byte	4
	.word	.L939,.L2007
	.byte	5
	.byte	'i',0,1,255,24,11
	.word	.L1606,.L2008
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_MainFnc_BswErrorHandle')
	.sect	'.debug_abbrev'
.L1469:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_MainFnc_BswErrorHandle')
	.sect	'.debug_line'
.L1470:
	.word	.L4676-.L4675
.L4675:
	.half	3
	.word	.L4678-.L4677
.L4677:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4678:
	.byte	5,11,7,0,5,2
	.word	.L939
	.byte	3,128,25,1,5,36,9
	.half	.L2342-.L939
	.byte	3,2,1,9
	.half	.L4679-.L2342
	.byte	3,3,1,5,46,9
	.half	.L4680-.L4679
	.byte	3,123,1,5,12,9
	.half	.L230-.L4680
	.byte	3,2,1,5,29,9
	.half	.L4681-.L230
	.byte	1,5,9,9
	.half	.L4682-.L4681
	.byte	1,5,40,7,9
	.half	.L4683-.L4682
	.byte	3,2,1,5,57,9
	.half	.L4684-.L4683
	.byte	1,5,62,9
	.half	.L4685-.L4684
	.byte	1,5,80,9
	.half	.L4686-.L4685
	.byte	1,5,13,9
	.half	.L4687-.L4686
	.byte	3,1,1,5,30,9
	.half	.L4688-.L4687
	.byte	1,5,34,9
	.half	.L4689-.L4688
	.byte	1,5,49,9
	.half	.L231-.L4689
	.byte	3,123,1,5,46,9
	.half	.L229-.L231
	.byte	1,5,1,7,9
	.half	.L4690-.L229
	.byte	3,9,1,7,9
	.half	.L1472-.L4690
	.byte	0,1,1
.L4676:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_MainFnc_BswErrorHandle')
	.sect	'.debug_ranges'
.L1471:
	.word	-1,.L939,0,.L1472-.L939,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_MainFnc_DebounceTimer')
	.sect	'.debug_info'
.L1473:
	.word	275
	.half	3
	.word	.L1474
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1476,.L1475
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_MainFnc_DebounceTimer',0,1,156,25,29,1,1
	.word	.L941,.L2009,.L940
	.byte	4
	.word	.L941,.L2009
	.byte	5
	.byte	'EventId',0,1,161,25,21
	.word	.L1599,.L2010
	.byte	5
	.byte	'i',0,1,162,25,11
	.word	.L1606,.L2011
	.byte	5
	.byte	'DbtStopFlag',0,1,164,25,13
	.word	.L1606,.L2012
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_MainFnc_DebounceTimer')
	.sect	'.debug_abbrev'
.L1474:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_MainFnc_DebounceTimer')
	.sect	'.debug_line'
.L1475:
	.word	.L4692-.L4691
.L4691:
	.half	3
	.word	.L4694-.L4693
.L4693:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4694:
	.byte	5,17,7,0,5,2
	.word	.L941
	.byte	3,166,25,1,5,47,9
	.half	.L2343-.L941
	.byte	3,34,1,9
	.half	.L4695-.L2343
	.byte	3,5,1,5,32,9
	.half	.L4696-.L4695
	.byte	3,89,1,5,48,9
	.half	.L4697-.L4696
	.byte	1,5,21,9
	.half	.L233-.L4697
	.byte	3,3,1,5,12,9
	.half	.L2344-.L233
	.byte	3,2,1,5,9,9
	.half	.L4698-.L2344
	.byte	1,5,19,7,9
	.half	.L4699-.L4698
	.byte	3,2,1,5,57,9
	.half	.L2345-.L4699
	.byte	1,5,42,9
	.half	.L236-.L2345
	.byte	3,2,1,5,71,9
	.half	.L4700-.L236
	.byte	1,5,20,9
	.half	.L4701-.L4700
	.byte	1,5,40,9
	.half	.L4702-.L4701
	.byte	1,5,17,9
	.half	.L4703-.L4702
	.byte	1,5,33,7,9
	.half	.L4704-.L4703
	.byte	3,2,1,5,21,9
	.half	.L4705-.L4704
	.byte	3,1,1,5,60,9
	.half	.L237-.L4705
	.byte	3,123,1,5,28,9
	.half	.L235-.L237
	.byte	1,5,57,9
	.half	.L4706-.L235
	.byte	1,5,13,7,9
	.half	.L234-.L4706
	.byte	3,10,1,5,12,9
	.half	.L4707-.L234
	.byte	1,5,18,7,9
	.half	.L4708-.L4707
	.byte	3,1,1,5,17,9
	.half	.L4709-.L4708
	.byte	1,5,21,7,9
	.half	.L4710-.L4709
	.byte	3,1,1,5,55,9
	.half	.L4711-.L4710
	.byte	1,5,17,7,9
	.half	.L240-.L4711
	.byte	3,1,1,5,39,9
	.half	.L4712-.L240
	.byte	1,5,49,9
	.half	.L4713-.L4712
	.byte	1,5,17,7,9
	.half	.L4714-.L4713
	.byte	3,1,1,5,37,9
	.half	.L4715-.L4714
	.byte	1,5,47,9
	.half	.L4716-.L4715
	.byte	1,5,29,7,9
	.half	.L4717-.L4716
	.byte	3,1,1,5,14,7,9
	.half	.L4718-.L4717
	.byte	3,9,1,5,37,9
	.half	.L4719-.L4718
	.byte	1,5,17,9
	.half	.L4720-.L4719
	.byte	3,2,1,5,16,9
	.half	.L4721-.L4720
	.byte	1,5,21,7,9
	.half	.L4722-.L4721
	.byte	3,1,1,5,47,9
	.half	.L4723-.L4722
	.byte	1,5,44,9
	.half	.L4724-.L4723
	.byte	1,5,53,7,9
	.half	.L4725-.L4724
	.byte	3,2,1,5,77,9
	.half	.L4726-.L4725
	.byte	1,5,22,9
	.half	.L245-.L4726
	.byte	3,2,1,5,21,9
	.half	.L4727-.L245
	.byte	1,7,9
	.half	.L4728-.L4727
	.byte	3,1,1,5,47,9
	.half	.L4729-.L4728
	.byte	1,5,44,9
	.half	.L4730-.L4729
	.byte	1,5,53,7,9
	.half	.L4731-.L4730
	.byte	3,2,1,5,57,9
	.half	.L239-.L4731
	.byte	3,87,1,5,48,9
	.half	.L232-.L239
	.byte	1,5,1,7,9
	.half	.L4732-.L232
	.byte	3,49,1,7,9
	.half	.L1477-.L4732
	.byte	0,1,1
.L4692:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_MainFnc_DebounceTimer')
	.sect	'.debug_ranges'
.L1476:
	.word	-1,.L941,0,.L1477-.L941,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_MainFnc_CaptureData')
	.sect	'.debug_info'
.L1478:
	.word	248
	.half	3
	.word	.L1479
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1481,.L1480
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_MainFnc_CaptureData',0,1,234,25,29,1,1
	.word	.L943,.L2013,.L942
	.byte	4
	.word	.L943,.L2013
	.byte	5
	.byte	'EventId',0,1,239,25,12
	.word	.L1599,.L2014
	.byte	5
	.byte	'i',0,1,240,25,12
	.word	.L1599,.L2015
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_MainFnc_CaptureData')
	.sect	'.debug_abbrev'
.L1479:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_MainFnc_CaptureData')
	.sect	'.debug_line'
.L1480:
	.word	.L4734-.L4733
.L4733:
	.half	3
	.word	.L4736-.L4735
.L4735:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4736:
	.byte	5,14,7,0,5,2
	.word	.L943
	.byte	3,239,25,1,5,19,9
	.half	.L2348-.L943
	.byte	3,2,1,5,41,9
	.half	.L2349-.L2348
	.byte	3,11,1,5,50,9
	.half	.L4737-.L2349
	.byte	3,117,1,5,64,9
	.half	.L4738-.L4737
	.byte	1,5,49,9
	.half	.L251-.L4738
	.byte	3,2,1,5,9,9
	.half	.L2351-.L251
	.byte	1,5,14,7,9
	.half	.L4739-.L2351
	.byte	3,2,1,5,37,9
	.half	.L4740-.L4739
	.byte	3,3,1,5,9,9
	.half	.L252-.L4740
	.byte	3,4,1,5,13,7,9
	.half	.L4741-.L252
	.byte	3,3,1,5,35,9
	.half	.L4742-.L4741
	.byte	1,5,33,9
	.half	.L4743-.L4742
	.byte	1,5,1,9
	.half	.L4744-.L4743
	.byte	3,14,1,5,14,7,9
	.half	.L253-.L4744
	.byte	3,117,1,5,13,7,9
	.half	.L4745-.L253
	.byte	3,3,1,5,33,9
	.half	.L4746-.L4745
	.byte	1,5,1,9
	.half	.L4747-.L4746
	.byte	3,8,1,5,73,7,9
	.half	.L255-.L4747
	.byte	3,100,1,5,64,9
	.half	.L250-.L255
	.byte	1,5,1,7,9
	.half	.L4748-.L250
	.byte	3,28,1,7,9
	.half	.L1482-.L4748
	.byte	0,1,1
.L4734:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_MainFnc_CaptureData')
	.sect	'.debug_ranges'
.L1481:
	.word	-1,.L943,0,.L1482-.L943,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_MainFnc_ClearDTC')
	.sect	'.debug_info'
.L1483:
	.word	208
	.half	3
	.word	.L1484
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1486,.L1485
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_MainFnc_ClearDTC',0,1,160,26,29,1,1
	.word	.L945,.L2016,.L944
	.byte	4
	.word	.L945,.L2016
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_MainFnc_ClearDTC')
	.sect	'.debug_abbrev'
.L1484:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_MainFnc_ClearDTC')
	.sect	'.debug_line'
.L1485:
	.word	.L4750-.L4749
.L4749:
	.half	3
	.word	.L4752-.L4751
.L4751:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4752:
	.byte	5,8,7,0,5,2
	.word	.L945
	.byte	3,169,26,1,5,5,9
	.half	.L4753-.L945
	.byte	1,5,37,7,9
	.half	.L4754-.L4753
	.byte	3,2,1,5,1,7,9
	.half	.L257-.L4754
	.byte	3,43,1,7,9
	.half	.L1487-.L257
	.byte	0,1,1
.L4750:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_MainFnc_ClearDTC')
	.sect	'.debug_ranges'
.L1486:
	.word	-1,.L945,0,.L1487-.L945,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_ClearOneDTC')
	.sect	'.debug_info'
.L1488:
	.word	333
	.half	3
	.word	.L1489
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1491,.L1490
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_ClearOneDTC',0,1,232,26,29,1,1
	.word	.L947,.L2017,.L946
	.byte	4
	.byte	'DtcId',0,1,234,26,12
	.word	.L1599,.L2018
	.byte	5
	.word	.L947,.L2017
	.byte	6
	.byte	'ret',0,1,237,26,20
	.word	.L1606,.L2019
	.byte	6
	.byte	'OldStatus',0,1,238,26,27
	.word	.L1606,.L2020
	.byte	6
	.byte	'NewStatus',0,1,239,26,27
	.word	.L1606,.L2021
	.byte	6
	.byte	'EventId',0,1,240,26,12
	.word	.L1599,.L2022
	.byte	6
	.byte	'ClearAllowed',0,1,241,26,13
	.word	.L1606,.L2023
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_ClearOneDTC')
	.sect	'.debug_abbrev'
.L1489:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_ClearOneDTC')
	.sect	'.debug_line'
.L1490:
	.word	.L4756-.L4755
.L4755:
	.half	3
	.word	.L4758-.L4757
.L4757:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4758:
	.byte	5,29,7,0,5,2
	.word	.L947
	.byte	3,231,26,1,5,24,9
	.half	.L2354-.L947
	.byte	3,5,1,5,28,9
	.half	.L2355-.L2354
	.byte	3,4,1,5,26,9
	.half	.L4759-.L2355
	.byte	1,5,17,9
	.half	.L4760-.L4759
	.byte	3,2,1,5,33,9
	.half	.L2357-.L4760
	.byte	1,5,49,9
	.half	.L4761-.L2357
	.byte	1,5,12,9
	.half	.L259-.L4761
	.byte	3,6,1,5,9,9
	.half	.L4762-.L259
	.byte	1,5,58,7,9
	.half	.L4763-.L4762
	.byte	3,122,1,5,49,9
	.half	.L258-.L4763
	.byte	1,5,8,7,9
	.half	.L260-.L258
	.byte	3,13,1,5,5,9
	.half	.L4764-.L260
	.byte	1,5,15,7,9
	.half	.L4765-.L4764
	.byte	3,3,1,5,60,9
	.half	.L4766-.L4765
	.byte	1,5,17,9
	.half	.L261-.L4766
	.byte	3,3,1,5,9,9
	.half	.L2358-.L261
	.byte	3,3,1,5,8,9
	.half	.L4767-.L2358
	.byte	1,5,39,7,9
	.half	.L4768-.L4767
	.byte	1,5,9,7,9
	.half	.L262-.L4768
	.byte	3,2,1,5,34,9
	.half	.L4769-.L262
	.byte	1,5,44,9
	.half	.L4770-.L4769
	.byte	1,5,42,9
	.half	.L4771-.L4770
	.byte	1,5,44,9
	.half	.L4772-.L4771
	.byte	3,3,1,5,9,9
	.half	.L2356-.L4772
	.byte	3,7,1,5,33,9
	.half	.L4773-.L2356
	.byte	1,5,31,9
	.half	.L4774-.L4773
	.byte	1,5,9,9
	.half	.L4775-.L4774
	.byte	3,1,1,5,35,9
	.half	.L4776-.L4775
	.byte	1,5,9,9
	.half	.L4777-.L4776
	.byte	3,1,1,5,35,9
	.half	.L4778-.L4777
	.byte	1,5,33,9
	.half	.L4779-.L4778
	.byte	1,5,9,9
	.half	.L4780-.L4779
	.byte	3,1,1,5,32,9
	.half	.L4781-.L4780
	.byte	1,5,12,9
	.half	.L4782-.L4781
	.byte	3,3,1,5,43,9
	.half	.L4783-.L4782
	.byte	1,5,9,9
	.half	.L4784-.L4783
	.byte	1,5,13,7,9
	.half	.L4785-.L4784
	.byte	3,3,1,5,42,9
	.half	.L4786-.L4785
	.byte	1,5,46,9
	.half	.L4787-.L4786
	.byte	3,1,1,5,13,9
	.half	.L4788-.L4787
	.byte	3,1,1,5,71,9
	.half	.L4789-.L4788
	.byte	1,5,69,9
	.half	.L4790-.L4789
	.byte	1,5,13,9
	.half	.L4791-.L4790
	.byte	3,1,1,5,43,9
	.half	.L4792-.L4791
	.byte	1,5,41,9
	.half	.L4793-.L4792
	.byte	1,5,9,9
	.half	.L4794-.L4793
	.byte	3,122,1,5,12,9
	.half	.L263-.L4794
	.byte	3,12,1,5,9,9
	.half	.L4795-.L263
	.byte	1,5,13,7,9
	.half	.L4796-.L4795
	.byte	3,2,1,5,38,9
	.half	.L4797-.L4796
	.byte	1,5,48,9
	.half	.L4798-.L4797
	.byte	1,5,46,9
	.half	.L4799-.L4798
	.byte	1,5,25,9
	.half	.L4800-.L4799
	.byte	3,8,1,5,13,9
	.half	.L2360-.L4800
	.byte	3,1,1,5,35,9
	.half	.L4801-.L2360
	.byte	1,5,17,9
	.half	.L264-.L4801
	.byte	3,5,1,5,5,9
	.half	.L2361-.L264
	.byte	3,2,1,5,15,7,9
	.half	.L4802-.L2361
	.byte	3,2,1,5,49,9
	.half	.L4803-.L4802
	.byte	1,5,86,9
	.half	.L4804-.L4803
	.byte	1,5,12,9
	.half	.L2363-.L4804
	.byte	3,1,1,5,24,9
	.half	.L4805-.L2363
	.byte	1,5,9,9
	.half	.L4806-.L4805
	.byte	1,5,19,7,9
	.half	.L4807-.L4806
	.byte	3,3,1,5,75,9
	.half	.L4808-.L4807
	.byte	1,5,57,9
	.half	.L268-.L4808
	.byte	3,3,1,5,8,9
	.half	.L267-.L268
	.byte	3,4,1,5,5,9
	.half	.L4809-.L267
	.byte	1,5,9,7,9
	.half	.L4810-.L4809
	.byte	3,2,1,5,46,9
	.half	.L4811-.L4810
	.byte	1,5,1,9
	.half	.L269-.L4811
	.byte	3,3,1,7,9
	.half	.L1492-.L269
	.byte	0,1,1
.L4756:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_ClearOneDTC')
	.sect	'.debug_ranges'
.L1491:
	.word	-1,.L947,0,.L1492-.L947,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_ClearOneEvent')
	.sect	'.debug_info'
.L1493:
	.word	245
	.half	3
	.word	.L1494
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1496,.L1495
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_ClearOneEvent',0,1,222,27,29,1,1
	.word	.L949,.L2024,.L948
	.byte	4
	.byte	'EventId',0,1,224,27,21
	.word	.L1599,.L2025
	.byte	4
	.byte	'Aging',0,1,225,27,13
	.word	.L1606,.L2026
	.byte	5
	.word	.L949,.L2024
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_ClearOneEvent')
	.sect	'.debug_abbrev'
.L1494:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_ClearOneEvent')
	.sect	'.debug_line'
.L1495:
	.word	.L4813-.L4812
.L4812:
	.half	3
	.word	.L4815-.L4814
.L4814:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4815:
	.byte	5,5,7,0,5,2
	.word	.L949
	.byte	3,233,27,1,5,30,9
	.half	.L4816-.L949
	.byte	1,5,28,9
	.half	.L4817-.L4816
	.byte	1,5,5,9
	.half	.L4818-.L4817
	.byte	3,1,1,5,31,9
	.half	.L4819-.L4818
	.byte	1,5,5,9
	.half	.L4820-.L4819
	.byte	3,3,1,5,28,9
	.half	.L4821-.L4820
	.byte	1,5,5,9
	.half	.L4822-.L4821
	.byte	3,4,1,5,28,9
	.half	.L4823-.L4822
	.byte	1,5,5,9
	.half	.L4824-.L4823
	.byte	3,1,1,5,41,9
	.half	.L4825-.L4824
	.byte	1,5,39,9
	.half	.L4826-.L4825
	.byte	1,5,5,9
	.half	.L4827-.L4826
	.byte	3,1,1,5,27,9
	.half	.L4828-.L4827
	.byte	1,5,37,9
	.half	.L4829-.L4828
	.byte	1,5,5,9
	.half	.L4830-.L4829
	.byte	3,2,1,5,34,9
	.half	.L4831-.L4830
	.byte	1,5,5,9
	.half	.L4832-.L4831
	.byte	3,2,1,5,34,9
	.half	.L4833-.L4832
	.byte	1,5,5,9
	.half	.L4834-.L4833
	.byte	3,1,1,5,29,9
	.half	.L4835-.L4834
	.byte	1,5,5,9
	.half	.L4836-.L4835
	.byte	3,1,1,5,29,9
	.half	.L4837-.L4836
	.byte	1,5,5,9
	.half	.L4838-.L4837
	.byte	3,1,1,5,30,9
	.half	.L4839-.L4838
	.byte	1,5,1,9
	.half	.L4840-.L4839
	.byte	3,53,1,7,9
	.half	.L1497-.L4840
	.byte	0,1,1
.L4813:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_ClearOneEvent')
	.sect	'.debug_ranges'
.L1496:
	.word	-1,.L949,0,.L1497-.L949,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_ClearOneDTCGroup')
	.sect	'.debug_info'
.L1498:
	.word	265
	.half	3
	.word	.L1499
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1501,.L1500
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_ClearOneDTCGroup',0,1,192,28,29,1,1
	.word	.L951,.L2027,.L950
	.byte	4
	.word	.L951,.L2027
	.byte	5
	.byte	'DtcIndex',0,1,197,28,12
	.word	.L1599,.L2028
	.byte	5
	.byte	'MaxIndexCurrentCycle',0,1,198,28,12
	.word	.L1599,.L2029
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_ClearOneDTCGroup')
	.sect	'.debug_abbrev'
.L1499:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_ClearOneDTCGroup')
	.sect	'.debug_line'
.L1500:
	.word	.L4842-.L4841
.L4841:
	.half	3
	.word	.L4844-.L4843
.L4843:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4844:
	.byte	5,57,7,0,5,2
	.word	.L951
	.byte	3,205,28,1,5,28,9
	.half	.L4845-.L951
	.byte	1,5,9,9
	.half	.L4846-.L4845
	.byte	1,5,56,7,9
	.half	.L4847-.L4846
	.byte	3,2,1,5,82,9
	.half	.L2366-.L4847
	.byte	1,5,34,9
	.half	.L270-.L2366
	.byte	3,4,1,5,12,9
	.half	.L271-.L270
	.byte	3,4,1,5,14,9
	.half	.L4848-.L271
	.byte	3,5,1,9
	.half	.L4849-.L4848
	.byte	3,126,1,9
	.half	.L4850-.L4849
	.byte	3,1,1,9
	.half	.L4851-.L4850
	.byte	3,2,1,9
	.half	.L4852-.L4851
	.byte	3,124,1,5,28,9
	.half	.L273-.L4852
	.byte	3,5,1,5,41,9
	.half	.L2367-.L273
	.byte	3,2,1,5,20,9
	.half	.L4853-.L2367
	.byte	1,5,26,9
	.half	.L4854-.L4853
	.byte	3,4,1,5,25,9
	.half	.L4855-.L4854
	.byte	3,1,1,5,48,9
	.half	.L4856-.L4855
	.byte	3,4,1,5,26,9
	.half	.L4857-.L4856
	.byte	1,5,25,9
	.half	.L4858-.L4857
	.byte	3,1,1,5,79,9
	.half	.L4859-.L4858
	.byte	3,116,1,5,41,9
	.half	.L279-.L4859
	.byte	3,2,1,5,17,9
	.half	.L4860-.L279
	.byte	1,5,25,7,9
	.half	.L4861-.L4860
	.byte	3,4,1,5,55,7,9
	.half	.L4862-.L4861
	.byte	3,1,1,5,52,9
	.half	.L4863-.L4862
	.byte	1,5,48,7,9
	.half	.L281-.L4863
	.byte	3,4,1,5,25,9
	.half	.L4864-.L281
	.byte	1,5,52,7,9
	.half	.L4865-.L4864
	.byte	3,1,1,5,49,9
	.half	.L4866-.L4865
	.byte	1,5,54,7,9
	.half	.L283-.L4866
	.byte	3,4,1,5,26,9
	.half	.L4867-.L283
	.byte	1,5,25,9
	.half	.L4868-.L4867
	.byte	1,5,53,7,9
	.half	.L4869-.L4868
	.byte	3,1,1,5,25,9
	.half	.L4870-.L4869
	.byte	1,5,50,9
	.half	.L4871-.L4870
	.byte	1,5,55,7,9
	.half	.L285-.L4871
	.byte	3,4,1,5,26,9
	.half	.L4872-.L285
	.byte	1,5,25,9
	.half	.L4873-.L4872
	.byte	1,5,51,7,9
	.half	.L4874-.L4873
	.byte	3,1,1,5,25,9
	.half	.L4875-.L4874
	.byte	1,5,48,9
	.half	.L4876-.L4875
	.byte	1,5,45,7,9
	.half	.L280-.L4876
	.byte	3,2,1,5,89,9
	.half	.L287-.L280
	.byte	3,104,1,5,79,9
	.half	.L278-.L287
	.byte	1,5,40,7,9
	.half	.L4877-.L278
	.byte	3,32,1,5,13,9
	.half	.L4878-.L4877
	.byte	1,5,17,7,9
	.half	.L4879-.L4878
	.byte	3,3,1,5,37,9
	.half	.L4880-.L4879
	.byte	1,5,35,9
	.half	.L4881-.L4880
	.byte	1,5,13,9
	.half	.L289-.L4881
	.byte	3,6,1,5,32,9
	.half	.L4882-.L289
	.byte	1,5,1,9
	.half	.L4883-.L4882
	.byte	3,11,1,5,13,7,9
	.half	.L277-.L4883
	.byte	3,125,1,5,33,9
	.half	.L4884-.L277
	.byte	1,5,31,9
	.half	.L4885-.L4884
	.byte	1,5,1,9
	.half	.L4886-.L4885
	.byte	3,3,1,7,9
	.half	.L1502-.L4886
	.byte	0,1,1
.L4842:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_ClearOneDTCGroup')
	.sect	'.debug_ranges'
.L1501:
	.word	-1,.L951,0,.L1502-.L951,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_GetEventFreezeFrameDataEx')
	.sect	'.debug_info'
.L1503:
	.word	549
	.half	3
	.word	.L1504
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1506,.L1505
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_GetEventFreezeFrameDataEx',0,1,164,29,39
	.word	.L1606
	.byte	1,1
	.word	.L953,.L2030,.L952
	.byte	4
	.byte	'EventId',0,1,166,29,21
	.word	.L1599,.L2031
	.byte	4
	.byte	'RecordNumber',0,1,167,29,11
	.word	.L1606,.L2032
	.byte	4
	.byte	'DataId',0,1,168,29,12
	.word	.L1599,.L2033
	.byte	4
	.byte	'DestBuffer',0,1,169,29,12
	.word	.L1695,.L2034
	.byte	4
	.byte	'BufSize',0,1,170,29,45
	.word	.L1704,.L2035
	.byte	5
	.word	.L953,.L2030
	.byte	6
	.byte	'Result',0,1,173,29,20
	.word	.L1606,.L2036
	.byte	6
	.byte	'DtcId',0,1,175,29,12
	.word	.L1599,.L2037
	.byte	6
	.byte	'MemEntryId',0,1,176,29,12
	.word	.L1599,.L2038
	.byte	6
	.byte	'SrcDataPtr',0,1,177,29,12
	.word	.L1695,.L2039
	.byte	6
	.byte	'i',0,1,178,29,11
	.word	.L1606,.L2040
	.byte	6
	.byte	'j',0,1,179,29,11
	.word	.L1606,.L2041
	.byte	6
	.byte	'k',0,1,180,29,11
	.word	.L1606,.L2042
	.byte	6
	.byte	'RecIdx',0,1,181,29,11
	.word	.L1606,.L2043
	.byte	6
	.byte	'DidIdx',0,1,182,29,11
	.word	.L1606,.L2044
	.byte	6
	.byte	'DataIdx',0,1,183,29,11
	.word	.L1606,.L2045
	.byte	6
	.byte	'DataSize',0,1,185,29,12
	.word	.L1599,.L2046
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_GetEventFreezeFrameDataEx')
	.sect	'.debug_abbrev'
.L1504:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_GetEventFreezeFrameDataEx')
	.sect	'.debug_line'
.L1505:
	.word	.L4888-.L4887
.L4887:
	.half	3
	.word	.L4890-.L4889
.L4889:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4890:
	.byte	5,39,7,0,5,2
	.word	.L953
	.byte	3,163,29,1,5,27,9
	.half	.L2374-.L953
	.byte	3,9,1,5,13,9
	.half	.L2376-.L2374
	.byte	3,17,1,5,8,9
	.half	.L2377-.L2376
	.byte	3,2,1,5,5,9
	.half	.L4891-.L2377
	.byte	1,5,22,7,9
	.half	.L4892-.L4891
	.byte	3,2,1,9
	.half	.L2378-.L4892
	.byte	3,1,1,5,15,9
	.half	.L2379-.L2378
	.byte	3,2,1,5,55,9
	.half	.L2380-.L2379
	.byte	1,5,23,9
	.half	.L293-.L2380
	.byte	3,2,1,5,53,9
	.half	.L4893-.L293
	.byte	1,5,26,9
	.half	.L2381-.L4893
	.byte	3,2,1,5,13,9
	.half	.L4894-.L2381
	.byte	1,5,28,9
	.half	.L4895-.L4894
	.byte	3,3,1,5,23,9
	.half	.L4896-.L4895
	.byte	3,2,1,5,66,9
	.half	.L2384-.L4896
	.byte	1,5,32,9
	.half	.L296-.L2384
	.byte	3,3,1,5,31,9
	.half	.L4897-.L296
	.byte	3,2,1,5,67,9
	.half	.L4898-.L4897
	.byte	1,5,34,9
	.half	.L2385-.L4898
	.byte	3,1,1,5,21,9
	.half	.L4899-.L2385
	.byte	1,5,31,9
	.half	.L4900-.L4899
	.byte	3,2,1,5,70,9
	.half	.L2382-.L4900
	.byte	1,5,40,9
	.half	.L299-.L2382
	.byte	3,2,1,5,72,9
	.half	.L4901-.L299
	.byte	1,5,32,9
	.half	.L2388-.L4901
	.byte	3,1,1,5,29,9
	.half	.L4902-.L2388
	.byte	1,5,85,7,9
	.half	.L4903-.L4902
	.byte	3,3,1,5,45,9
	.half	.L4904-.L4903
	.byte	1,9
	.half	.L4905-.L4904
	.byte	3,1,1,5,42,9
	.half	.L4906-.L4905
	.byte	1,5,32,9
	.half	.L300-.L4906
	.byte	3,3,1,5,29,9
	.half	.L4907-.L300
	.byte	1,5,45,7,9
	.half	.L4908-.L4907
	.byte	3,2,1,5,42,9
	.half	.L4909-.L4908
	.byte	1,5,73,9
	.half	.L301-.L4909
	.byte	3,116,1,5,40,9
	.half	.L298-.L301
	.byte	1,5,70,9
	.half	.L4910-.L298
	.byte	1,5,28,7,9
	.half	.L4911-.L4910
	.byte	3,16,1,5,25,9
	.half	.L2389-.L4911
	.byte	1,5,64,7,9
	.half	.L2390-.L2389
	.byte	3,2,1,5,38,9
	.half	.L2392-.L2390
	.byte	3,1,1,5,73,9
	.half	.L2395-.L2392
	.byte	3,127,1,5,36,9
	.half	.L302-.L2395
	.byte	3,5,1,5,25,9
	.half	.L4912-.L302
	.byte	3,2,1,5,31,9
	.half	.L297-.L4912
	.byte	3,4,1,5,70,9
	.half	.L2398-.L297
	.byte	1,5,40,9
	.half	.L306-.L2398
	.byte	3,2,1,5,72,9
	.half	.L4913-.L306
	.byte	1,5,32,9
	.half	.L2400-.L4913
	.byte	3,1,1,5,29,9
	.half	.L4914-.L2400
	.byte	1,5,85,7,9
	.half	.L4915-.L4914
	.byte	3,3,1,5,45,9
	.half	.L4916-.L4915
	.byte	1,5,47,9
	.half	.L4917-.L4916
	.byte	3,1,1,5,44,9
	.half	.L4918-.L4917
	.byte	1,5,32,9
	.half	.L307-.L4918
	.byte	3,3,1,5,29,9
	.half	.L4919-.L307
	.byte	1,5,47,7,9
	.half	.L4920-.L4919
	.byte	3,2,1,5,44,9
	.half	.L4921-.L4920
	.byte	1,5,73,9
	.half	.L308-.L4921
	.byte	3,116,1,5,40,9
	.half	.L305-.L308
	.byte	1,5,70,9
	.half	.L4922-.L305
	.byte	1,5,69,7,9
	.half	.L4923-.L4922
	.byte	3,91,1,5,32,9
	.half	.L295-.L4923
	.byte	1,5,66,9
	.half	.L4924-.L295
	.byte	1,5,17,7,9
	.half	.L4925-.L4924
	.byte	3,54,1,5,28,9
	.half	.L294-.L4925
	.byte	3,5,1,5,23,9
	.half	.L4926-.L294
	.byte	3,2,1,5,66,9
	.half	.L2402-.L4926
	.byte	1,5,32,9
	.half	.L311-.L2402
	.byte	3,3,1,5,31,9
	.half	.L4927-.L311
	.byte	3,2,1,5,67,9
	.half	.L4928-.L4927
	.byte	1,5,27,9
	.half	.L2404-.L4928
	.byte	3,1,1,5,66,9
	.half	.L2405-.L2404
	.byte	1,5,36,9
	.half	.L313-.L2405
	.byte	3,2,1,5,68,9
	.half	.L4929-.L313
	.byte	1,5,28,9
	.half	.L2409-.L4929
	.byte	3,1,1,5,25,9
	.half	.L2408-.L2409
	.byte	1,5,81,7,9
	.half	.L4930-.L2408
	.byte	3,3,1,5,41,9
	.half	.L2411-.L4930
	.byte	1,5,43,9
	.half	.L4931-.L2411
	.byte	3,1,1,5,40,9
	.half	.L2414-.L4931
	.byte	1,5,28,9
	.half	.L314-.L2414
	.byte	3,3,1,5,25,9
	.half	.L2416-.L314
	.byte	1,5,43,7,9
	.half	.L4932-.L2416
	.byte	3,2,1,5,40,9
	.half	.L2418-.L4932
	.byte	1,5,69,9
	.half	.L315-.L2418
	.byte	3,116,1,5,36,9
	.half	.L312-.L315
	.byte	1,5,66,9
	.half	.L4933-.L312
	.byte	1,5,69,7,9
	.half	.L4934-.L4933
	.byte	3,122,1,5,32,9
	.half	.L310-.L4934
	.byte	1,5,66,9
	.half	.L4935-.L310
	.byte	1,5,58,7,9
	.half	.L4936-.L4935
	.byte	3,186,127,1,5,24,9
	.half	.L292-.L4936
	.byte	1,5,55,9
	.half	.L4937-.L292
	.byte	1,5,5,7,9
	.half	.L291-.L4937
	.byte	3,225,0,1,5,16,7,9
	.half	.L2419-.L291
	.byte	3,2,1,5,5,9
	.half	.L316-.L2419
	.byte	3,2,1,5,1,9
	.half	.L2421-.L316
	.byte	3,1,1,7,9
	.half	.L1507-.L2421
	.byte	0,1,1
.L4888:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_GetEventFreezeFrameDataEx')
	.sect	'.debug_ranges'
.L1506:
	.word	-1,.L953,0,.L1507-.L953,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_GetEventExtendedDataRecordEx')
	.sect	'.debug_info'
.L1508:
	.word	497
	.half	3
	.word	.L1509
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1511,.L1510
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_GetEventExtendedDataRecordEx',0,1,188,30,39
	.word	.L1606
	.byte	1,1
	.word	.L955,.L2047,.L954
	.byte	4
	.byte	'EventId',0,1,190,30,21
	.word	.L1599,.L2048
	.byte	4
	.byte	'RecordNumber',0,1,191,30,11
	.word	.L1606,.L2049
	.byte	4
	.byte	'DestBuffer',0,1,192,30,44
	.word	.L1695,.L2050
	.byte	4
	.byte	'BufSize',0,1,193,30,45
	.word	.L1704,.L2051
	.byte	5
	.word	.L955,.L2047
	.byte	6
	.byte	'Result',0,1,196,30,20
	.word	.L1606,.L2052
	.byte	6
	.byte	'DtcId',0,1,198,30,12
	.word	.L1599,.L2053
	.byte	6
	.byte	'MemEntryId',0,1,199,30,12
	.word	.L1599,.L2054
	.byte	6
	.byte	'SrcDataPtr',0,1,200,30,12
	.word	.L1695,.L2055
	.byte	6
	.byte	'i',0,1,201,30,11
	.word	.L1606,.L2056
	.byte	6
	.byte	'j',0,1,202,30,11
	.word	.L1606,.L2057
	.byte	6
	.byte	'RecIdx',0,1,203,30,11
	.word	.L1606,.L2058
	.byte	6
	.byte	'DataIdx',0,1,204,30,11
	.word	.L1606,.L2059
	.byte	6
	.byte	'DataSize',0,1,206,30,12
	.word	.L1599,.L2060
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_GetEventExtendedDataRecordEx')
	.sect	'.debug_abbrev'
.L1509:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_GetEventExtendedDataRecordEx')
	.sect	'.debug_line'
.L1510:
	.word	.L4939-.L4938
.L4938:
	.half	3
	.word	.L4941-.L4940
.L4940:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4941:
	.byte	5,39,7,0,5,2
	.word	.L955
	.byte	3,187,30,1,5,27,9
	.half	.L2426-.L955
	.byte	3,8,1,5,21,9
	.half	.L2427-.L2426
	.byte	3,10,1,5,13,9
	.half	.L2428-.L2427
	.byte	3,5,1,5,8,9
	.half	.L2430-.L2428
	.byte	3,2,1,5,5,9
	.half	.L4942-.L2430
	.byte	1,5,22,7,9
	.half	.L4943-.L4942
	.byte	3,2,1,9
	.half	.L2431-.L4943
	.byte	3,1,1,5,15,9
	.half	.L2433-.L2431
	.byte	3,2,1,5,56,9
	.half	.L2434-.L2433
	.byte	1,5,23,9
	.half	.L320-.L2434
	.byte	3,2,1,5,54,9
	.half	.L4944-.L320
	.byte	1,5,26,9
	.half	.L2435-.L4944
	.byte	3,2,1,5,13,9
	.half	.L4945-.L2435
	.byte	1,5,28,7,9
	.half	.L4946-.L4945
	.byte	3,3,1,5,23,9
	.half	.L4947-.L4946
	.byte	3,2,1,5,68,9
	.half	.L2424-.L4947
	.byte	1,5,32,9
	.half	.L323-.L2424
	.byte	3,2,1,5,70,9
	.half	.L4948-.L323
	.byte	1,5,24,9
	.half	.L2437-.L4948
	.byte	3,1,1,5,21,9
	.half	.L4949-.L2437
	.byte	1,5,77,7,9
	.half	.L4950-.L4949
	.byte	3,3,1,5,37,9
	.half	.L4951-.L4950
	.byte	1,9
	.half	.L4952-.L4951
	.byte	3,1,1,5,34,9
	.half	.L4953-.L4952
	.byte	1,5,24,9
	.half	.L324-.L4953
	.byte	3,3,1,5,21,9
	.half	.L4954-.L324
	.byte	1,5,37,7,9
	.half	.L4955-.L4954
	.byte	3,2,1,5,34,9
	.half	.L4956-.L4955
	.byte	1,5,71,9
	.half	.L325-.L4956
	.byte	3,116,1,5,32,9
	.half	.L322-.L325
	.byte	1,5,68,9
	.half	.L4957-.L322
	.byte	1,5,20,7,9
	.half	.L4958-.L4957
	.byte	3,16,1,5,17,9
	.half	.L4959-.L4958
	.byte	1,5,56,7,9
	.half	.L4960-.L4959
	.byte	3,2,1,5,30,9
	.half	.L2440-.L4960
	.byte	3,1,1,5,65,9
	.half	.L4961-.L2440
	.byte	3,127,1,5,28,9
	.half	.L326-.L4961
	.byte	3,5,1,5,17,9
	.half	.L4962-.L326
	.byte	3,2,1,5,28,9
	.half	.L321-.L4962
	.byte	3,5,1,5,23,9
	.half	.L4963-.L321
	.byte	3,2,1,5,68,9
	.half	.L2444-.L4963
	.byte	1,5,32,9
	.half	.L330-.L2444
	.byte	3,2,1,5,70,9
	.half	.L4964-.L330
	.byte	1,5,24,9
	.half	.L2448-.L4964
	.byte	3,1,1,5,21,9
	.half	.L2447-.L2448
	.byte	1,5,77,7,9
	.half	.L4965-.L2447
	.byte	3,3,1,5,37,9
	.half	.L2450-.L4965
	.byte	1,5,39,9
	.half	.L4966-.L2450
	.byte	3,1,1,5,36,9
	.half	.L2453-.L4966
	.byte	1,5,24,9
	.half	.L331-.L2453
	.byte	3,3,1,5,21,9
	.half	.L2455-.L331
	.byte	1,5,39,7,9
	.half	.L4967-.L2455
	.byte	3,2,1,5,36,9
	.half	.L2457-.L4967
	.byte	1,5,71,9
	.half	.L332-.L2457
	.byte	3,116,1,5,32,9
	.half	.L329-.L332
	.byte	1,5,68,9
	.half	.L4968-.L329
	.byte	1,5,59,7,9
	.half	.L4969-.L4968
	.byte	3,87,1,5,24,9
	.half	.L319-.L4969
	.byte	1,5,56,9
	.half	.L4970-.L319
	.byte	1,5,5,7,9
	.half	.L318-.L4970
	.byte	3,61,1,5,16,7,9
	.half	.L4971-.L318
	.byte	3,2,1,5,5,9
	.half	.L333-.L4971
	.byte	3,2,1,5,1,9
	.half	.L2458-.L333
	.byte	3,1,1,7,9
	.half	.L1512-.L2458
	.byte	0,1,1
.L4939:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_GetEventExtendedDataRecordEx')
	.sect	'.debug_ranges'
.L1511:
	.word	-1,.L955,0,.L1512-.L955,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_CheckDtcValid')
	.sect	'.debug_info'
.L1513:
	.word	281
	.half	3
	.word	.L1514
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1516,.L1515
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_CheckDtcValid',0,1,210,65,39
	.word	.L1606
	.byte	1,1
	.word	.L1019,.L2061,.L1018
	.byte	4
	.byte	'DTC',0,1,212,65,20
	.word	.L1732,.L2062
	.byte	4
	.byte	'DtcId',0,1,213,65,45
	.word	.L1704,.L2063
	.byte	5
	.word	.L1019,.L2061
	.byte	6
	.byte	'Result',0,1,216,65,20
	.word	.L1606,.L2064
	.byte	6
	.byte	'i',0,1,217,65,12
	.word	.L1599,.L2065
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_CheckDtcValid')
	.sect	'.debug_abbrev'
.L1514:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_CheckDtcValid')
	.sect	'.debug_line'
.L1515:
	.word	.L4973-.L4972
.L4972:
	.half	3
	.word	.L4975-.L4974
.L4974:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4975:
	.byte	5,27,7,0,5,2
	.word	.L1019
	.byte	3,215,193,0,1,5,11,9
	.half	.L2547-.L1019
	.byte	3,3,1,5,20,9
	.half	.L2548-.L2547
	.byte	1,5,34,9
	.half	.L4976-.L2548
	.byte	1,5,19,9
	.half	.L572-.L4976
	.byte	3,2,1,5,9,9
	.half	.L4977-.L572
	.byte	1,5,20,7,9
	.half	.L4978-.L4977
	.byte	3,2,1,9
	.half	.L4979-.L4978
	.byte	3,1,1,5,1,9
	.half	.L4980-.L4979
	.byte	3,5,1,5,37,7,9
	.half	.L573-.L4980
	.byte	3,118,1,5,34,9
	.half	.L571-.L573
	.byte	1,5,1,7,9
	.half	.L4981-.L571
	.byte	3,10,1,7,9
	.half	.L1517-.L4981
	.byte	0,1,1
.L4973:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_CheckDtcValid')
	.sect	'.debug_ranges'
.L1516:
	.word	-1,.L1019,0,.L1517-.L1019,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_GetSizeOfExtendedData')
	.sect	'.debug_info'
.L1518:
	.word	595
	.half	3
	.word	.L1519
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1521,.L1520
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_GetSizeOfExtendedData',0,1,246,65,57
	.word	.L1606
	.byte	1,1
	.word	.L1021,.L2066,.L1020
	.byte	4
	.byte	'DTC',0,1,248,65,12
	.word	.L1732,.L2067
	.byte	4
	.byte	'DTCOrigin',0,1,249,65,23
	.word	.L1606,.L2068
	.byte	4
	.byte	'ExtendedDataNumber',0,1,250,65,11
	.word	.L1606,.L2069
	.byte	4
	.byte	'SizeOfExtendedDataRecord',0,1,251,65,45
	.word	.L1704,.L2070
	.byte	4
	.byte	'ExtendedDataOffset',0,1,252,65,45
	.word	.L1704,.L2071
	.byte	5
	.word	.L1021,.L2066
	.byte	6
	.byte	'Result',0,1,255,65,38
	.word	.L1606,.L2072
	.byte	6
	.byte	'DtcId',0,1,128,66,12
	.word	.L1599,.L2073
	.byte	6
	.byte	'i',0,1,130,66,11
	.word	.L1606,.L2074
	.byte	6
	.byte	'j',0,1,131,66,11
	.word	.L1606,.L2075
	.byte	6
	.byte	'RecIdx',0,1,132,66,11
	.word	.L1606,.L2076
	.byte	6
	.byte	'DataIdx',0,1,133,66,11
	.word	.L1606,.L2077
	.byte	6
	.byte	'RecNum',0,1,134,66,11
	.word	.L1606,.L2078
	.byte	6
	.byte	'DataSize',0,1,135,66,11
	.word	.L1606,.L2079
	.byte	6
	.byte	'DataBufferPtr',0,1,136,66,12
	.word	.L1695,.L2080
	.byte	6
	.byte	'RecDataSize',0,1,137,66,12
	.word	.L1599,.L2081
	.byte	6
	.byte	'InvalidDataLength',0,1,138,66,12
	.word	.L1599,.L2082
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_GetSizeOfExtendedData')
	.sect	'.debug_abbrev'
.L1519:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_GetSizeOfExtendedData')
	.sect	'.debug_line'
.L1520:
	.word	.L4983-.L4982
.L4982:
	.half	3
	.word	.L4985-.L4984
.L4984:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L4985:
	.byte	5,57,7,0,5,2
	.word	.L1021
	.byte	3,245,193,0,1,5,45,9
	.half	.L2555-.L1021
	.byte	3,9,1,5,5,9
	.half	.L2557-.L2555
	.byte	3,13,1,5,10,7,9
	.half	.L4986-.L2557
	.byte	3,4,1,5,16,7,9
	.half	.L4987-.L4986
	.byte	3,3,1,5,50,9
	.half	.L4988-.L4987
	.byte	1,5,13,9
	.half	.L577-.L4988
	.byte	3,2,1,5,77,9
	.half	.L4989-.L577
	.byte	1,5,96,9
	.half	.L4990-.L4989
	.byte	1,5,53,7,9
	.half	.L4991-.L4990
	.byte	3,4,1,5,10,9
	.half	.L2550-.L4991
	.byte	1,5,16,7,9
	.half	.L4992-.L2550
	.byte	3,3,1,5,44,9
	.half	.L2559-.L4992
	.byte	1,5,13,9
	.half	.L581-.L2559
	.byte	3,3,1,5,10,9
	.half	.L4993-.L581
	.byte	1,5,13,7,9
	.half	.L4994-.L4993
	.byte	3,5,1,5,44,9
	.half	.L4995-.L4994
	.byte	1,5,10,9
	.half	.L4996-.L4995
	.byte	1,5,37,7,9
	.half	.L4997-.L4996
	.byte	3,2,1,5,35,9
	.half	.L2560-.L4997
	.byte	1,5,16,9
	.half	.L4998-.L2560
	.byte	3,1,1,5,57,9
	.half	.L4999-.L4998
	.byte	3,2,1,5,23,9
	.half	.L586-.L4999
	.byte	3,2,1,5,54,9
	.half	.L5000-.L586
	.byte	1,5,22,9
	.half	.L2563-.L5000
	.byte	3,1,1,5,13,9
	.half	.L2565-.L2563
	.byte	3,1,1,5,24,9
	.half	.L5001-.L2565
	.byte	3,2,1,5,17,9
	.half	.L5002-.L5001
	.byte	3,1,1,5,60,9
	.half	.L587-.L5002
	.byte	3,121,1,5,25,9
	.half	.L585-.L587
	.byte	1,5,57,9
	.half	.L5003-.L585
	.byte	1,5,34,7,9
	.half	.L588-.L5003
	.byte	3,11,1,5,9,9
	.half	.L5004-.L588
	.byte	1,5,20,9
	.half	.L5005-.L5004
	.byte	3,2,1,5,9,9
	.half	.L2569-.L5005
	.byte	3,126,1,5,37,9
	.half	.L584-.L2569
	.byte	3,10,1,5,35,9
	.half	.L2570-.L584
	.byte	1,5,29,9
	.half	.L5006-.L2570
	.byte	3,1,1,5,25,9
	.half	.L5007-.L5006
	.byte	3,2,1,5,15,9
	.half	.L2572-.L5007
	.byte	3,2,1,5,64,9
	.half	.L2573-.L2572
	.byte	3,56,1,5,57,9
	.half	.L5008-.L2573
	.byte	3,72,1,5,23,9
	.half	.L592-.L5008
	.byte	3,2,1,5,54,9
	.half	.L5009-.L592
	.byte	1,5,22,9
	.half	.L2575-.L5009
	.byte	3,1,1,5,13,9
	.half	.L2576-.L2575
	.byte	3,1,1,5,39,9
	.half	.L5010-.L2576
	.byte	3,2,1,5,36,9
	.half	.L2579-.L5010
	.byte	1,5,20,9
	.half	.L5011-.L2579
	.byte	1,5,64,9
	.half	.L2577-.L5011
	.byte	1,5,17,9
	.half	.L5012-.L2577
	.byte	1,5,23,7,9
	.half	.L5013-.L5012
	.byte	3,3,1,5,48,9
	.half	.L5014-.L5013
	.byte	1,5,27,9
	.half	.L5015-.L5014
	.byte	3,2,1,5,73,9
	.half	.L2580-.L5015
	.byte	1,5,36,9
	.half	.L596-.L2580
	.byte	3,2,1,5,74,9
	.half	.L5016-.L596
	.byte	1,5,28,9
	.half	.L2582-.L5016
	.byte	3,1,1,5,25,9
	.half	.L5017-.L2582
	.byte	1,5,40,7,9
	.half	.L5018-.L5017
	.byte	3,2,1,5,48,9
	.half	.L2583-.L5018
	.byte	3,2,1,5,45,9
	.half	.L5019-.L2583
	.byte	1,5,72,9
	.half	.L5020-.L5019
	.byte	1,5,69,9
	.half	.L5021-.L5020
	.byte	1,5,68,9
	.half	.L5022-.L5021
	.byte	3,1,1,5,75,9
	.half	.L5023-.L5022
	.byte	1,5,100,9
	.half	.L2585-.L5023
	.byte	3,127,1,5,30,9
	.half	.L5024-.L2585
	.byte	3,2,1,5,55,9
	.half	.L5025-.L5024
	.byte	1,5,28,9
	.half	.L597-.L5025
	.byte	3,3,1,5,25,9
	.half	.L5026-.L597
	.byte	1,5,40,7,9
	.half	.L5027-.L5026
	.byte	3,2,1,5,30,9
	.half	.L2586-.L5027
	.byte	3,1,1,5,55,9
	.half	.L5028-.L2586
	.byte	1,5,76,9
	.half	.L598-.L5028
	.byte	3,113,1,5,37,9
	.half	.L595-.L598
	.byte	1,5,73,9
	.half	.L5029-.L595
	.byte	1,5,17,7,9
	.half	.L5030-.L5029
	.byte	3,19,1,5,29,9
	.half	.L593-.L5030
	.byte	3,5,1,5,23,9
	.half	.L2587-.L593
	.byte	3,2,1,5,69,9
	.half	.L2589-.L2587
	.byte	1,5,32,9
	.half	.L601-.L2589
	.byte	3,2,1,5,70,9
	.half	.L5031-.L601
	.byte	1,5,24,9
	.half	.L2591-.L5031
	.byte	3,1,1,5,21,9
	.half	.L5032-.L2591
	.byte	1,5,36,7,9
	.half	.L5033-.L5032
	.byte	3,2,1,5,44,9
	.half	.L2594-.L5033
	.byte	3,2,1,5,41,9
	.half	.L2593-.L2594
	.byte	1,5,65,9
	.half	.L5034-.L2593
	.byte	1,5,64,9
	.half	.L5035-.L5034
	.byte	3,1,1,5,71,9
	.half	.L5036-.L5035
	.byte	1,5,80,9
	.half	.L2596-.L5036
	.byte	3,127,1,5,37,9
	.half	.L5037-.L2596
	.byte	3,2,1,5,24,9
	.half	.L602-.L5037
	.byte	3,3,1,5,21,9
	.half	.L5038-.L602
	.byte	1,5,36,7,9
	.half	.L5039-.L5038
	.byte	3,2,1,5,37,9
	.half	.L2599-.L5039
	.byte	3,1,1,5,72,9
	.half	.L603-.L2599
	.byte	3,113,1,5,33,9
	.half	.L600-.L603
	.byte	1,5,69,9
	.half	.L5040-.L600
	.byte	1,5,39,7,9
	.half	.L5041-.L5040
	.byte	3,19,1,5,36,9
	.half	.L5042-.L5041
	.byte	1,5,20,9
	.half	.L5043-.L5042
	.byte	1,5,17,9
	.half	.L5044-.L5043
	.byte	1,5,39,7,9
	.half	.L5045-.L5044
	.byte	3,2,1,5,19,9
	.half	.L604-.L5045
	.byte	3,2,1,5,39,9
	.half	.L5046-.L604
	.byte	1,5,60,9
	.half	.L5047-.L5046
	.byte	3,68,1,5,25,9
	.half	.L591-.L5047
	.byte	1,5,57,9
	.half	.L5048-.L591
	.byte	1,5,34,7,9
	.half	.L594-.L5048
	.byte	3,63,1,5,9,9
	.half	.L5049-.L594
	.byte	1,5,42,9
	.half	.L5050-.L5049
	.byte	3,2,1,5,62,9
	.half	.L2601-.L5050
	.byte	1,5,39,9
	.half	.L5051-.L2601
	.byte	1,5,82,9
	.half	.L5052-.L5051
	.byte	1,5,22,9
	.half	.L605-.L5052
	.byte	3,2,1,5,14,9
	.half	.L5053-.L605
	.byte	1,5,20,7,9
	.half	.L576-.L5053
	.byte	3,2,1,5,5,9
	.half	.L589-.L576
	.byte	3,10,1,5,1,9
	.half	.L2603-.L589
	.byte	3,1,1,7,9
	.half	.L1522-.L2603
	.byte	0,1,1
.L4983:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_GetSizeOfExtendedData')
	.sect	'.debug_ranges'
.L1521:
	.word	-1,.L1021,0,.L1522-.L1021,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_GetAllExtendedData')
	.sect	'.debug_info'
.L1523:
	.word	373
	.half	3
	.word	.L1524
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1526,.L1525
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_GetAllExtendedData',0,1,165,67,29,1,1
	.word	.L1023,.L2083,.L1022
	.byte	4
	.byte	'DtcId',0,1,167,67,12
	.word	.L1732,.L2084
	.byte	4
	.byte	'DestBuffer',0,1,168,67,44
	.word	.L1695,.L2085
	.byte	5
	.word	.L1023,.L2083
	.byte	6
	.byte	'i',0,1,171,67,11
	.word	.L1606,.L2086
	.byte	6
	.byte	'j',0,1,172,67,11
	.word	.L1606,.L2087
	.byte	6
	.byte	'RecIdx',0,1,173,67,11
	.word	.L1606,.L2088
	.byte	6
	.byte	'DataIdx',0,1,174,67,11
	.word	.L1606,.L2089
	.byte	6
	.byte	'DataSize',0,1,175,67,11
	.word	.L1606,.L2090
	.byte	6
	.byte	'SrcBufferPtr',0,1,176,67,12
	.word	.L1695,.L2091
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_GetAllExtendedData')
	.sect	'.debug_abbrev'
.L1524:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_GetAllExtendedData')
	.sect	'.debug_line'
.L1525:
	.word	.L5055-.L5054
.L5054:
	.half	3
	.word	.L5057-.L5056
.L5056:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L5057:
	.byte	5,29,7,0,5,2
	.word	.L1023
	.byte	3,164,195,0,1,5,27,9
	.half	.L2605-.L1023
	.byte	3,11,1,5,11,9
	.half	.L2606-.L2605
	.byte	3,2,1,5,29,9
	.half	.L2607-.L2606
	.byte	3,4,1,5,53,9
	.half	.L5058-.L2607
	.byte	3,124,1,5,19,9
	.half	.L610-.L5058
	.byte	3,2,1,5,50,9
	.half	.L5059-.L610
	.byte	1,5,12,9
	.half	.L2609-.L5059
	.byte	3,2,1,5,9,9
	.half	.L5060-.L2609
	.byte	1,5,50,7,9
	.half	.L5061-.L5060
	.byte	3,3,1,5,23,9
	.half	.L2611-.L5061
	.byte	3,1,1,5,25,9
	.half	.L5062-.L2611
	.byte	3,1,1,5,19,9
	.half	.L5063-.L5062
	.byte	3,2,1,5,65,9
	.half	.L2613-.L5063
	.byte	1,5,28,9
	.half	.L613-.L2613
	.byte	3,2,1,5,66,9
	.half	.L5064-.L613
	.byte	1,5,20,9
	.half	.L2615-.L5064
	.byte	3,1,1,5,17,9
	.half	.L5065-.L2615
	.byte	1,5,32,7,9
	.half	.L5066-.L5065
	.byte	3,2,1,5,58,9
	.half	.L2616-.L5066
	.byte	3,1,1,5,32,9
	.half	.L2618-.L2616
	.byte	3,1,1,5,34,9
	.half	.L5067-.L2618
	.byte	3,1,1,5,20,9
	.half	.L614-.L5067
	.byte	3,3,1,5,17,9
	.half	.L5068-.L614
	.byte	1,5,32,7,9
	.half	.L5069-.L5068
	.byte	3,2,1,5,58,9
	.half	.L2621-.L5069
	.byte	3,1,1,5,32,9
	.half	.L2623-.L2621
	.byte	3,1,1,5,34,9
	.half	.L5070-.L2623
	.byte	3,1,1,5,68,9
	.half	.L615-.L5070
	.byte	3,112,1,5,29,9
	.half	.L612-.L615
	.byte	1,5,65,9
	.half	.L5071-.L612
	.byte	1,7,9
	.half	.L5072-.L5071
	.byte	1,5,25,9
	.half	.L611-.L5072
	.byte	3,23,1,5,19,9
	.half	.L5073-.L611
	.byte	3,2,1,5,65,9
	.half	.L2626-.L5073
	.byte	1,5,28,9
	.half	.L618-.L2626
	.byte	3,2,1,5,66,9
	.half	.L5074-.L618
	.byte	1,5,20,9
	.half	.L2628-.L5074
	.byte	3,1,1,5,17,9
	.half	.L5075-.L2628
	.byte	1,5,32,7,9
	.half	.L5076-.L5075
	.byte	3,2,1,5,34,9
	.half	.L2630-.L5076
	.byte	3,1,1,5,20,9
	.half	.L619-.L2630
	.byte	3,3,1,5,17,9
	.half	.L5077-.L619
	.byte	1,5,32,7,9
	.half	.L5078-.L5077
	.byte	3,2,1,5,34,9
	.half	.L2629-.L5078
	.byte	3,1,1,5,68,9
	.half	.L620-.L2629
	.byte	3,116,1,5,29,9
	.half	.L617-.L620
	.byte	1,5,65,9
	.half	.L5079-.L617
	.byte	1,5,56,7,9
	.half	.L616-.L5079
	.byte	3,92,1,5,21,9
	.half	.L609-.L616
	.byte	1,5,53,9
	.half	.L5080-.L609
	.byte	1,5,1,7,9
	.half	.L5081-.L5080
	.byte	3,53,1,7,9
	.half	.L1527-.L5081
	.byte	0,1,1
.L5055:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_GetAllExtendedData')
	.sect	'.debug_ranges'
.L1526:
	.word	-1,.L1023,0,.L1527-.L1023,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_GetSizeOfFFData')
	.sect	'.debug_info'
.L1528:
	.word	605
	.half	3
	.word	.L1529
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1531,.L1530
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_GetSizeOfFFData',0,1,249,67,57
	.word	.L1606
	.byte	1,1
	.word	.L1025,.L2092,.L1024
	.byte	4
	.byte	'DTC',0,1,251,67,12
	.word	.L1732,.L2093
	.byte	4
	.byte	'DTCOrigin',0,1,252,67,23
	.word	.L1606,.L2094
	.byte	4
	.byte	'RecordNumber',0,1,253,67,11
	.word	.L1606,.L2095
	.byte	4
	.byte	'SizeOfFreezeFrame',0,1,254,67,45
	.word	.L1704,.L2096
	.byte	4
	.byte	'FFDataOffset',0,1,255,67,45
	.word	.L1704,.L2097
	.byte	5
	.word	.L1025,.L2092
	.byte	6
	.byte	'Result',0,1,130,68,38
	.word	.L1606,.L2098
	.byte	6
	.byte	'DtcId',0,1,131,68,12
	.word	.L1599,.L2099
	.byte	6
	.byte	'i',0,1,133,68,11
	.word	.L1606,.L2100
	.byte	6
	.byte	'j',0,1,134,68,11
	.word	.L1606,.L2101
	.byte	6
	.byte	'k',0,1,135,68,11
	.word	.L1606,.L2102
	.byte	6
	.byte	'RecIdx',0,1,136,68,11
	.word	.L1606,.L2103
	.byte	6
	.byte	'DidIdx',0,1,137,68,11
	.word	.L1606,.L2104
	.byte	6
	.byte	'DataIdx',0,1,138,68,11
	.word	.L1606,.L2105
	.byte	6
	.byte	'RecNum',0,1,139,68,11
	.word	.L1606,.L2106
	.byte	6
	.byte	'DataSize',0,1,140,68,11
	.word	.L1606,.L2107
	.byte	6
	.byte	'DataBufferPtr',0,1,141,68,12
	.word	.L1695,.L2108
	.byte	6
	.byte	'RecDataSize',0,1,142,68,12
	.word	.L1599,.L2109
	.byte	6
	.byte	'InvalidDataLength',0,1,143,68,12
	.word	.L1599,.L2110
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_GetSizeOfFFData')
	.sect	'.debug_abbrev'
.L1529:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_GetSizeOfFFData')
	.sect	'.debug_line'
.L1530:
	.word	.L5083-.L5082
.L5082:
	.half	3
	.word	.L5085-.L5084
.L5084:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L5085:
	.byte	5,57,7,0,5,2
	.word	.L1025
	.byte	3,248,195,0,1,5,45,9
	.half	.L2637-.L1025
	.byte	3,9,1,5,5,9
	.half	.L2639-.L2637
	.byte	3,15,1,5,10,7,9
	.half	.L5086-.L2639
	.byte	3,4,1,5,16,7,9
	.half	.L5087-.L5086
	.byte	3,3,1,5,50,9
	.half	.L5088-.L5087
	.byte	1,5,10,9
	.half	.L622-.L5088
	.byte	3,2,1,5,53,9
	.half	.L5089-.L622
	.byte	3,4,1,5,10,9
	.half	.L2632-.L5089
	.byte	1,5,16,7,9
	.half	.L5090-.L2632
	.byte	3,3,1,5,44,9
	.half	.L2640-.L5090
	.byte	1,5,13,9
	.half	.L625-.L2640
	.byte	3,3,1,5,10,9
	.half	.L5091-.L625
	.byte	1,5,13,7,9
	.half	.L5092-.L5091
	.byte	3,5,1,5,44,9
	.half	.L5093-.L5092
	.byte	1,5,10,9
	.half	.L5094-.L5093
	.byte	1,5,30,7,9
	.half	.L5095-.L5094
	.byte	3,2,1,5,28,9
	.half	.L2642-.L5095
	.byte	1,5,16,9
	.half	.L5096-.L2642
	.byte	3,1,1,5,56,9
	.half	.L5097-.L5096
	.byte	3,2,1,5,23,9
	.half	.L630-.L5097
	.byte	3,2,1,5,53,9
	.half	.L5098-.L630
	.byte	1,5,22,9
	.half	.L2645-.L5098
	.byte	3,2,1,5,13,9
	.half	.L2647-.L2645
	.byte	3,4,1,5,24,9
	.half	.L5099-.L2647
	.byte	3,2,1,5,17,9
	.half	.L5100-.L5099
	.byte	3,1,1,5,59,9
	.half	.L631-.L5100
	.byte	3,117,1,5,25,9
	.half	.L629-.L631
	.byte	1,5,56,9
	.half	.L5101-.L629
	.byte	1,5,28,7,9
	.half	.L632-.L5101
	.byte	3,15,1,5,9,9
	.half	.L5102-.L632
	.byte	1,5,20,9
	.half	.L5103-.L5102
	.byte	3,2,1,5,9,9
	.half	.L2650-.L5103
	.byte	3,126,1,5,30,9
	.half	.L628-.L2650
	.byte	3,10,1,5,28,9
	.half	.L2653-.L628
	.byte	1,5,23,9
	.half	.L5104-.L2653
	.byte	3,1,1,5,25,9
	.half	.L5105-.L5104
	.byte	3,2,1,5,15,9
	.half	.L2654-.L5105
	.byte	3,2,1,5,56,9
	.half	.L2655-.L2654
	.byte	1,5,23,9
	.half	.L636-.L2655
	.byte	3,2,1,5,53,9
	.half	.L5106-.L636
	.byte	1,5,22,9
	.half	.L2659-.L5106
	.byte	3,3,1,5,13,9
	.half	.L2660-.L2659
	.byte	3,5,1,5,39,9
	.half	.L5107-.L2660
	.byte	3,2,1,5,36,9
	.half	.L2662-.L5107
	.byte	1,5,20,9
	.half	.L5108-.L2662
	.byte	1,5,58,9
	.half	.L2661-.L5108
	.byte	1,5,17,9
	.half	.L5109-.L2661
	.byte	1,5,22,7,9
	.half	.L5110-.L5109
	.byte	3,3,1,5,40,9
	.half	.L5111-.L5110
	.byte	1,5,27,9
	.half	.L5112-.L5111
	.byte	3,2,1,5,71,9
	.half	.L2663-.L5112
	.byte	1,5,26,9
	.half	.L640-.L2663
	.byte	3,3,1,5,44,9
	.half	.L5113-.L640
	.byte	1,5,35,9
	.half	.L5114-.L5113
	.byte	3,2,1,5,71,9
	.half	.L5115-.L5114
	.byte	1,5,31,9
	.half	.L2665-.L5115
	.byte	3,1,1,5,71,9
	.half	.L2666-.L2665
	.byte	1,5,40,9
	.half	.L642-.L2666
	.byte	3,2,1,5,72,9
	.half	.L5116-.L642
	.byte	1,5,32,9
	.half	.L2668-.L5116
	.byte	3,1,1,5,29,9
	.half	.L5117-.L2668
	.byte	1,5,44,7,9
	.half	.L5118-.L5117
	.byte	3,2,1,5,52,9
	.half	.L2669-.L5118
	.byte	3,2,1,5,49,9
	.half	.L5119-.L2669
	.byte	1,5,70,9
	.half	.L5120-.L5119
	.byte	1,5,67,9
	.half	.L5121-.L5120
	.byte	1,5,72,9
	.half	.L5122-.L5121
	.byte	3,1,1,5,79,9
	.half	.L5123-.L5122
	.byte	1,5,91,9
	.half	.L2671-.L5123
	.byte	3,127,1,5,34,9
	.half	.L5124-.L2671
	.byte	3,2,1,5,52,9
	.half	.L5125-.L5124
	.byte	1,5,32,9
	.half	.L643-.L5125
	.byte	3,3,1,5,29,9
	.half	.L5126-.L643
	.byte	1,5,44,7,9
	.half	.L5127-.L5126
	.byte	3,2,1,5,34,9
	.half	.L2672-.L5127
	.byte	3,1,1,5,52,9
	.half	.L5128-.L2672
	.byte	1,5,74,9
	.half	.L644-.L5128
	.byte	3,113,1,5,41,9
	.half	.L641-.L644
	.byte	1,5,71,9
	.half	.L5129-.L641
	.byte	1,5,74,7,9
	.half	.L5130-.L5129
	.byte	3,122,1,5,37,9
	.half	.L639-.L5130
	.byte	1,5,71,9
	.half	.L5131-.L639
	.byte	1,5,17,7,9
	.half	.L5132-.L5131
	.byte	3,26,1,5,29,9
	.half	.L637-.L5132
	.byte	3,5,1,5,23,9
	.half	.L2673-.L637
	.byte	3,2,1,5,67,9
	.half	.L2675-.L2673
	.byte	1,5,33,9
	.half	.L647-.L2675
	.byte	3,3,1,5,31,9
	.half	.L5133-.L647
	.byte	3,2,1,5,67,9
	.half	.L5134-.L5133
	.byte	1,5,27,9
	.half	.L2677-.L5134
	.byte	3,1,1,5,67,9
	.half	.L2678-.L2677
	.byte	1,5,36,9
	.half	.L649-.L2678
	.byte	3,2,1,5,68,9
	.half	.L5135-.L649
	.byte	1,5,28,9
	.half	.L2680-.L5135
	.byte	3,1,1,5,25,9
	.half	.L5136-.L2680
	.byte	1,5,40,7,9
	.half	.L5137-.L5136
	.byte	3,2,1,5,48,9
	.half	.L2681-.L5137
	.byte	3,2,1,5,45,9
	.half	.L5138-.L2681
	.byte	1,5,63,9
	.half	.L5139-.L5138
	.byte	1,5,68,9
	.half	.L5140-.L5139
	.byte	3,1,1,5,75,9
	.half	.L5141-.L5140
	.byte	1,5,78,9
	.half	.L2684-.L5141
	.byte	3,127,1,5,41,9
	.half	.L5142-.L2684
	.byte	3,2,1,5,28,9
	.half	.L650-.L5142
	.byte	3,3,1,5,25,9
	.half	.L5143-.L650
	.byte	1,5,40,7,9
	.half	.L5144-.L5143
	.byte	3,2,1,5,41,9
	.half	.L2685-.L5144
	.byte	3,1,1,5,70,9
	.half	.L651-.L2685
	.byte	3,113,1,5,37,9
	.half	.L648-.L651
	.byte	1,5,67,9
	.half	.L5145-.L648
	.byte	1,5,70,7,9
	.half	.L5146-.L5145
	.byte	3,122,1,5,33,9
	.half	.L646-.L5146
	.byte	1,5,67,9
	.half	.L5147-.L646
	.byte	1,5,39,7,9
	.half	.L5148-.L5147
	.byte	3,26,1,5,36,9
	.half	.L5149-.L5148
	.byte	1,5,20,9
	.half	.L5150-.L5149
	.byte	1,5,58,9
	.half	.L5151-.L5150
	.byte	1,5,17,9
	.half	.L5152-.L5151
	.byte	1,5,39,7,9
	.half	.L5153-.L5152
	.byte	3,2,1,5,19,9
	.half	.L652-.L5153
	.byte	3,2,1,5,33,9
	.half	.L5154-.L652
	.byte	1,5,59,9
	.half	.L5155-.L5154
	.byte	3,176,127,1,5,25,9
	.half	.L2691-.L5155
	.byte	1,5,56,9
	.half	.L5156-.L2691
	.byte	1,5,28,9
	.half	.L638-.L5156
	.byte	3,212,0,1,5,9,9
	.half	.L5157-.L638
	.byte	1,5,35,9
	.half	.L5158-.L5157
	.byte	3,2,1,5,49,9
	.half	.L2694-.L5158
	.byte	1,5,32,9
	.half	.L5159-.L2694
	.byte	1,5,69,9
	.half	.L5160-.L5159
	.byte	1,5,22,9
	.half	.L653-.L5160
	.byte	3,2,1,5,14,9
	.half	.L2696-.L653
	.byte	1,5,20,9
	.half	.L621-.L2696
	.byte	3,2,1,5,5,9
	.half	.L633-.L621
	.byte	3,10,1,5,1,9
	.half	.L2698-.L633
	.byte	3,1,1,7,9
	.half	.L1532-.L2698
	.byte	0,1,1
.L5083:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_GetSizeOfFFData')
	.sect	'.debug_ranges'
.L1531:
	.word	-1,.L1025,0,.L1532-.L1025,0,0
	.sdecl	'.debug_info',debug,cluster('DemInternal_GetAllFFData')
	.sect	'.debug_info'
.L1533:
	.word	402
	.half	3
	.word	.L1534
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1536,.L1535
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'DemInternal_GetAllFFData',0,1,195,69,29,1,1
	.word	.L1027,.L2111,.L1026
	.byte	4
	.byte	'DtcId',0,1,197,69,12
	.word	.L1732,.L2112
	.byte	4
	.byte	'DestBuffer',0,1,198,69,44
	.word	.L1695,.L2113
	.byte	5
	.word	.L1027,.L2111
	.byte	6
	.byte	'i',0,1,201,69,11
	.word	.L1606,.L2114
	.byte	6
	.byte	'j',0,1,202,69,11
	.word	.L1606,.L2115
	.byte	6
	.byte	'k',0,1,203,69,11
	.word	.L1606,.L2116
	.byte	6
	.byte	'RecIdx',0,1,204,69,11
	.word	.L1606,.L2117
	.byte	6
	.byte	'DidIdx',0,1,205,69,11
	.word	.L1606,.L2118
	.byte	6
	.byte	'DataIdx',0,1,206,69,11
	.word	.L1606,.L2119
	.byte	6
	.byte	'DataSize',0,1,207,69,11
	.word	.L1606,.L2120
	.byte	6
	.byte	'SrcBufferPtr',0,1,208,69,12
	.word	.L1695,.L2121
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('DemInternal_GetAllFFData')
	.sect	'.debug_abbrev'
.L1534:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('DemInternal_GetAllFFData')
	.sect	'.debug_line'
.L1535:
	.word	.L5162-.L5161
.L5161:
	.half	3
	.word	.L5164-.L5163
.L5163:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L5164:
	.byte	5,29,7,0,5,2
	.word	.L1027
	.byte	3,194,197,0,1,5,27,9
	.half	.L2700-.L1027
	.byte	3,13,1,5,11,9
	.half	.L2701-.L2700
	.byte	3,2,1,5,52,9
	.half	.L2702-.L2701
	.byte	1,5,19,9
	.half	.L658-.L2702
	.byte	3,2,1,5,49,9
	.half	.L5165-.L658
	.byte	1,5,12,9
	.half	.L2704-.L5165
	.byte	3,2,1,5,29,9
	.half	.L5166-.L2704
	.byte	1,5,9,9
	.half	.L5167-.L5166
	.byte	1,5,50,7,9
	.half	.L5168-.L5167
	.byte	3,3,1,5,24,9
	.half	.L2706-.L5168
	.byte	3,1,1,5,26,9
	.half	.L5169-.L2706
	.byte	3,1,1,5,19,9
	.half	.L5170-.L5169
	.byte	3,2,1,5,63,9
	.half	.L2708-.L5170
	.byte	1,5,54,9
	.half	.L661-.L2708
	.byte	3,3,1,5,28,9
	.half	.L2711-.L661
	.byte	3,1,1,5,30,9
	.half	.L5171-.L2711
	.byte	3,1,1,5,27,9
	.half	.L5172-.L5171
	.byte	3,2,1,5,63,9
	.half	.L5173-.L5172
	.byte	1,5,23,9
	.half	.L2713-.L5173
	.byte	3,1,1,5,63,9
	.half	.L2714-.L2713
	.byte	1,5,32,9
	.half	.L663-.L2714
	.byte	3,2,1,5,64,9
	.half	.L5174-.L663
	.byte	1,5,24,9
	.half	.L2716-.L5174
	.byte	3,1,1,5,21,9
	.half	.L5175-.L2716
	.byte	1,5,36,7,9
	.half	.L5176-.L5175
	.byte	3,2,1,5,62,9
	.half	.L2717-.L5176
	.byte	3,1,1,5,36,9
	.half	.L2719-.L2717
	.byte	3,1,1,5,38,9
	.half	.L5177-.L2719
	.byte	3,1,1,5,24,9
	.half	.L664-.L5177
	.byte	3,3,1,5,21,9
	.half	.L5178-.L664
	.byte	1,5,36,7,9
	.half	.L5179-.L5178
	.byte	3,2,1,5,62,9
	.half	.L2722-.L5179
	.byte	3,1,1,5,36,9
	.half	.L2724-.L2722
	.byte	3,1,1,5,38,9
	.half	.L5180-.L2724
	.byte	3,1,1,5,66,9
	.half	.L665-.L5180
	.byte	3,112,1,5,33,9
	.half	.L662-.L665
	.byte	1,5,63,9
	.half	.L5181-.L662
	.byte	1,5,66,7,9
	.half	.L5182-.L5181
	.byte	3,120,1,5,29,9
	.half	.L660-.L5182
	.byte	1,5,63,9
	.half	.L5183-.L660
	.byte	1,7,9
	.half	.L5184-.L5183
	.byte	1,5,26,9
	.half	.L659-.L5184
	.byte	3,32,1,5,19,9
	.half	.L5185-.L659
	.byte	3,2,1,5,63,9
	.half	.L2727-.L5185
	.byte	1,5,30,9
	.half	.L668-.L2727
	.byte	3,3,1,5,27,9
	.half	.L5186-.L668
	.byte	3,2,1,5,63,9
	.half	.L5187-.L5186
	.byte	1,5,23,9
	.half	.L2729-.L5187
	.byte	3,1,1,5,63,9
	.half	.L2730-.L2729
	.byte	1,5,32,9
	.half	.L670-.L2730
	.byte	3,2,1,5,64,9
	.half	.L5188-.L670
	.byte	1,5,24,9
	.half	.L2732-.L5188
	.byte	3,1,1,5,21,9
	.half	.L5189-.L2732
	.byte	1,5,36,7,9
	.half	.L5190-.L5189
	.byte	3,2,1,5,38,9
	.half	.L2734-.L5190
	.byte	3,1,1,5,24,9
	.half	.L671-.L2734
	.byte	3,3,1,5,21,9
	.half	.L5191-.L671
	.byte	1,5,36,7,9
	.half	.L5192-.L5191
	.byte	3,2,1,5,38,9
	.half	.L2733-.L5192
	.byte	3,1,1,5,66,9
	.half	.L672-.L2733
	.byte	3,116,1,5,33,9
	.half	.L669-.L672
	.byte	1,5,63,9
	.half	.L5193-.L669
	.byte	1,5,66,7,9
	.half	.L5194-.L5193
	.byte	3,122,1,5,29,9
	.half	.L667-.L5194
	.byte	1,5,63,9
	.half	.L5195-.L667
	.byte	1,5,55,7,9
	.half	.L666-.L5195
	.byte	3,83,1,5,21,9
	.half	.L657-.L666
	.byte	1,5,52,9
	.half	.L5196-.L657
	.byte	1,5,1,7,9
	.half	.L5197-.L5196
	.byte	3,197,0,1,7,9
	.half	.L1537-.L5197
	.byte	0,1,1
.L5162:
	.sdecl	'.debug_ranges',debug,cluster('DemInternal_GetAllFFData')
	.sect	'.debug_ranges'
.L1536:
	.word	-1,.L1027,0,.L1537-.L1027,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmControlDTCStatusChangedNotification')
	.sect	'.debug_info'
.L1538:
	.word	256
	.half	3
	.word	.L1539
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1541,.L1540
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmControlDTCStatusChangedNotification',0,1,235,77,22,1,1,1
	.word	.L1055,.L2122,.L1054
	.byte	4
	.byte	'TriggerNotification',0,1,237,77,13
	.word	.L1606,.L2123
	.byte	5
	.word	.L1055,.L2122
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmControlDTCStatusChangedNotification')
	.sect	'.debug_abbrev'
.L1539:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_DcmControlDTCStatusChangedNotification')
	.sect	'.debug_line'
.L1540:
	.word	.L5199-.L5198
.L5198:
	.half	3
	.word	.L5201-.L5200
.L5200:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L5201:
	.byte	5,1,7,0,5,2
	.word	.L1055
	.byte	3,241,205,0,1,7,9
	.half	.L1542-.L1055
	.byte	0,1,1
.L5199:
	.sdecl	'.debug_ranges',debug,cluster('Dem_DcmControlDTCStatusChangedNotification')
	.sect	'.debug_ranges'
.L1541:
	.word	-1,.L1055,0,.L1542-.L1055,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_J1939DcmFirstDTCwithLampStatus')
	.sect	'.debug_info'
.L1543:
	.word	233
	.half	3
	.word	.L1544
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1546,.L1545
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_J1939DcmFirstDTCwithLampStatus',0,1,230,94,22,1,1,1
	.word	.L1081,.L2124,.L1080
	.byte	4
	.byte	'node',0,1,232,94,11
	.word	.L1606,.L2125
	.byte	5
	.word	.L1081,.L2124
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_J1939DcmFirstDTCwithLampStatus')
	.sect	'.debug_abbrev'
.L1544:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_J1939DcmFirstDTCwithLampStatus')
	.sect	'.debug_line'
.L1545:
	.word	.L5203-.L5202
.L5202:
	.half	3
	.word	.L5205-.L5204
.L5204:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L5205:
	.byte	5,1,7,0,5,2
	.word	.L1081
	.byte	3,234,222,0,1,7,9
	.half	.L1547-.L1081
	.byte	0,1,1
.L5203:
	.sdecl	'.debug_ranges',debug,cluster('Dem_J1939DcmFirstDTCwithLampStatus')
	.sect	'.debug_ranges'
.L1546:
	.word	-1,.L1081,0,.L1547-.L1081,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_J1939DcmGetNextDTCwithLampStatus')
	.sect	'.debug_info'
.L1548:
	.word	318
	.half	3
	.word	.L1549
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L1551,.L1550
	.byte	2
	.word	.L1084
	.byte	3
	.byte	'Dem_J1939DcmGetNextDTCwithLampStatus',0,1,253,94,54
	.word	.L1606
	.byte	1,1,1
	.word	.L1083,.L2126,.L1082
	.byte	4
	.byte	'LampStatus',0,1,255,94,65
	.word	.L2127,.L2128
	.byte	4
	.byte	'J1939DTC',0,1,128,95,45
	.word	.L1671,.L2129
	.byte	4
	.byte	'OccurenceCounter',0,1,129,95,44
	.word	.L1695,.L2130
	.byte	5
	.word	.L1083,.L2126
	.byte	6
	.byte	'Result',0,1,132,95,42
	.word	.L1606,.L2131
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_J1939DcmGetNextDTCwithLampStatus')
	.sect	'.debug_abbrev'
.L1549:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('Dem_J1939DcmGetNextDTCwithLampStatus')
	.sect	'.debug_line'
.L1550:
	.word	.L5207-.L5206
.L5206:
	.half	3
	.word	.L5209-.L5208
.L5208:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0,0,0,0,0
.L5209:
	.byte	5,49,7,0,5,2
	.word	.L1083
	.byte	3,131,223,0,1,5,1,9
	.half	.L2909-.L1083
	.byte	3,3,1,7,9
	.half	.L1552-.L2909
	.byte	0,1,1
.L5207:
	.sdecl	'.debug_ranges',debug,cluster('Dem_J1939DcmGetNextDTCwithLampStatus')
	.sect	'.debug_ranges'
.L1551:
	.word	-1,.L1083,0,.L1552-.L1083,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_StorageMem')
	.sect	'.debug_info'
.L1553:
	.word	173
	.half	3
	.word	.L1554
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1084
	.byte	3
	.byte	'Dem_StorageMem',0,6,170,5,41
	.word	.L2132
	.byte	1,5,3
	.word	Dem_StorageMem
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_StorageMem')
	.sect	'.debug_abbrev'
.L1554:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,63,12,2,9
	.byte	0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_State')
	.sect	'.debug_info'
.L1555:
	.word	167
	.half	3
	.word	.L1556
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1084
	.byte	3
	.byte	'Dem_State',0,6,178,5,41
	.word	.L1606
	.byte	5,3
	.word	Dem_State
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_State')
	.sect	'.debug_abbrev'
.L1556:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_ClearDTCState')
	.sect	'.debug_info'
.L1557:
	.word	175
	.half	3
	.word	.L1558
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1084
	.byte	3
	.byte	'Dem_ClearDTCState',0,6,179,5,33
	.word	.L1606
	.byte	5,3
	.word	Dem_ClearDTCState
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_ClearDTCState')
	.sect	'.debug_abbrev'
.L1558:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_OpCycReq')
	.sect	'.debug_info'
.L1559:
	.word	170
	.half	3
	.word	.L1560
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1084
	.byte	3
	.byte	'Dem_OpCycReq',0,6,187,5,57
	.word	.L2133
	.byte	5,3
	.word	Dem_OpCycReq
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_OpCycReq')
	.sect	'.debug_abbrev'
.L1560:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_OpCycState')
	.sect	'.debug_info'
.L1561:
	.word	172
	.half	3
	.word	.L1562
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1084
	.byte	3
	.byte	'Dem_OpCycState',0,6,188,5,57
	.word	.L2133
	.byte	5,3
	.word	Dem_OpCycState
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_OpCycState')
	.sect	'.debug_abbrev'
.L1562:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_EventEnCondition')
	.sect	'.debug_info'
.L1563:
	.word	178
	.half	3
	.word	.L1564
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1084
	.byte	3
	.byte	'Dem_EventEnCondition',0,6,192,5,37
	.word	.L2134
	.byte	5,3
	.word	Dem_EventEnCondition
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_EventEnCondition')
	.sect	'.debug_abbrev'
.L1564:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_EnableDtcSetting')
	.sect	'.debug_info'
.L1565:
	.word	178
	.half	3
	.word	.L1566
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1084
	.byte	3
	.byte	'Dem_EnableDtcSetting',0,6,203,5,37
	.word	.L2135
	.byte	5,3
	.word	Dem_EnableDtcSetting
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_EnableDtcSetting')
	.sect	'.debug_abbrev'
.L1566:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DtcUpDateState')
	.sect	'.debug_info'
.L1567:
	.word	176
	.half	3
	.word	.L1568
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1084
	.byte	3
	.byte	'Dem_DtcUpDateState',0,6,204,5,37
	.word	.L2135
	.byte	5,3
	.word	Dem_DtcUpDateState
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DtcUpDateState')
	.sect	'.debug_abbrev'
.L1568:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DataCaptureFlag')
	.sect	'.debug_info'
.L1569:
	.word	177
	.half	3
	.word	.L1570
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1084
	.byte	3
	.byte	'Dem_DataCaptureFlag',0,6,206,5,37
	.word	.L2135
	.byte	5,3
	.word	Dem_DataCaptureFlag
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DataCaptureFlag')
	.sect	'.debug_abbrev'
.L1570:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DataCaptureTrigger')
	.sect	'.debug_info'
.L1571:
	.word	180
	.half	3
	.word	.L1572
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1084
	.byte	3
	.byte	'Dem_DataCaptureTrigger',0,6,207,5,68
	.word	.L2136
	.byte	5,3
	.word	Dem_DataCaptureTrigger
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DataCaptureTrigger')
	.sect	'.debug_abbrev'
.L1572:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_EventDBTFreezeFlag')
	.sect	'.debug_info'
.L1573:
	.word	180
	.half	3
	.word	.L1574
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1084
	.byte	3
	.byte	'Dem_EventDBTFreezeFlag',0,6,210,5,37
	.word	.L2135
	.byte	5,3
	.word	Dem_EventDBTFreezeFlag
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_EventDBTFreezeFlag')
	.sect	'.debug_abbrev'
.L1574:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DTC_FirstFdcThreshold')
	.sect	'.debug_info'
.L1575:
	.word	183
	.half	3
	.word	.L1576
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1084
	.byte	3
	.byte	'Dem_DTC_FirstFdcThreshold',0,6,214,5,37
	.word	.L2135
	.byte	5,3
	.word	Dem_DTC_FirstFdcThreshold
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DTC_FirstFdcThreshold')
	.sect	'.debug_abbrev'
.L1576:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_CapturePosition')
	.sect	'.debug_info'
.L1577:
	.word	177
	.half	3
	.word	.L1578
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1084
	.byte	3
	.byte	'Dem_CapturePosition',0,6,224,5,36
	.word	.L1599
	.byte	5,3
	.word	Dem_CapturePosition
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_CapturePosition')
	.sect	'.debug_abbrev'
.L1578:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_DcmFilterInfo')
	.sect	'.debug_info'
.L1579:
	.word	175
	.half	3
	.word	.L1580
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1084
	.byte	3
	.byte	'Dem_DcmFilterInfo',0,6,237,5,51
	.word	.L2137
	.byte	5,3
	.word	Dem_DcmFilterInfo
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_DcmFilterInfo')
	.sect	'.debug_abbrev'
.L1580:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_NumFFRecOfDTC')
	.sect	'.debug_info'
.L1581:
	.word	175
	.half	3
	.word	.L1582
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1084
	.byte	3
	.byte	'Dem_NumFFRecOfDTC',0,6,250,5,35
	.word	.L1606
	.byte	5,3
	.word	Dem_NumFFRecOfDTC
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_NumFFRecOfDTC')
	.sect	'.debug_abbrev'
.L1582:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_BswErrorQueue')
	.sect	'.debug_info'
.L1583:
	.word	175
	.half	3
	.word	.L1584
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1084
	.byte	3
	.byte	'Dem_BswErrorQueue',0,6,131,6,45
	.word	.L2138
	.byte	5,3
	.word	Dem_BswErrorQueue
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_BswErrorQueue')
	.sect	'.debug_abbrev'
.L1584:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_BswErrorStatus')
	.sect	'.debug_info'
.L1585:
	.word	176
	.half	3
	.word	.L1586
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1084
	.byte	3
	.byte	'Dem_BswErrorStatus',0,6,136,6,49
	.word	.L2139
	.byte	5,3
	.word	Dem_BswErrorStatus
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_BswErrorStatus')
	.sect	'.debug_abbrev'
.L1586:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_ClearDTC_DTC')
	.sect	'.debug_info'
.L1587:
	.word	174
	.half	3
	.word	.L1588
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1084
	.byte	3
	.byte	'Dem_ClearDTC_DTC',0,6,144,6,36
	.word	.L1732
	.byte	5,3
	.word	Dem_ClearDTC_DTC
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_ClearDTC_DTC')
	.sect	'.debug_abbrev'
.L1588:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_ClearDTC_Index')
	.sect	'.debug_info'
.L1589:
	.word	176
	.half	3
	.word	.L1590
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1084
	.byte	3
	.byte	'Dem_ClearDTC_Index',0,6,150,6,36
	.word	.L1599
	.byte	5,3
	.word	Dem_ClearDTC_Index
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_ClearDTC_Index')
	.sect	'.debug_abbrev'
.L1590:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_ClearDTC_DTCFormat')
	.sect	'.debug_info'
.L1591:
	.word	180
	.half	3
	.word	.L1592
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1084
	.byte	3
	.byte	'Dem_ClearDTC_DTCFormat',0,6,156,6,47
	.word	.L1606
	.byte	5,3
	.word	Dem_ClearDTC_DTCFormat
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_ClearDTC_DTCFormat')
	.sect	'.debug_abbrev'
.L1592:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('Dem_ClearDTC_DTCOrigin')
	.sect	'.debug_info'
.L1593:
	.word	180
	.half	3
	.word	.L1594
	.byte	4,1
	.byte	'..\\EAS\\BSW\\Dem\\Dem.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L1084
	.byte	3
	.byte	'Dem_ClearDTC_DTCOrigin',0,6,157,6,47
	.word	.L1606
	.byte	5,3
	.word	Dem_ClearDTC_DTCOrigin
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('Dem_ClearDTC_DTCOrigin')
	.sect	'.debug_abbrev'
.L1594:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_CaptureData')
	.sect	'.debug_loc'
.L926:
	.word	-1,.L927,0,.L2209-.L927
	.half	2
	.byte	138,0
	.word	.L2209-.L927,.L153-.L927
	.half	2
	.byte	138,8
	.word	.L153-.L927,.L153-.L927
	.half	2
	.byte	138,0
	.word	.L153-.L927,.L1959-.L927
	.half	2
	.byte	138,8
	.word	.L1959-.L927,.L1959-.L927
	.half	2
	.byte	138,0
	.word	0,0
.L1962:
	.word	-1,.L927,.L2218-.L927,.L1959-.L927
	.half	1
	.byte	91
	.word	.L2219-.L927,.L2220-.L927
	.half	1
	.byte	84
	.word	0,0
.L1960:
	.word	-1,.L927,0,.L2210-.L927
	.half	1
	.byte	84
	.word	.L2211-.L927,.L1959-.L927
	.half	1
	.byte	88
	.word	.L2216-.L927,.L2217-.L927
	.half	1
	.byte	84
	.word	.L2221-.L927,.L2215-.L927
	.half	1
	.byte	84
	.word	.L2223-.L927,.L2213-.L927
	.half	1
	.byte	84
	.word	0,0
.L1964:
	.word	-1,.L927,.L2212-.L927,.L2213-.L927
	.half	1
	.byte	89
	.word	.L2213-.L927,.L149-.L927
	.half	1
	.byte	82
	.word	.L149-.L927,.L1959-.L927
	.half	1
	.byte	89
	.word	0,0
.L1965:
	.word	-1,.L927,.L2214-.L927,.L2215-.L927
	.half	1
	.byte	90
	.word	.L2215-.L927,.L2213-.L927
	.half	1
	.byte	82
	.word	.L2222-.L927,.L1959-.L927
	.half	1
	.byte	90
	.word	0,0
.L1961:
	.word	-1,.L927,0,.L1959-.L927
	.half	2
	.byte	145,120
	.word	0,0
.L1963:
	.word	-1,.L927,0,.L1959-.L927
	.half	2
	.byte	145,121
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_CheckDtcValid')
	.sect	'.debug_loc'
.L2062:
	.word	-1,.L1019,0,.L2061-.L1019
	.half	1
	.byte	84
	.word	0,0
.L1018:
	.word	-1,.L1019,0,.L2061-.L1019
	.half	2
	.byte	138,0
	.word	0,0
.L2063:
	.word	-1,.L1019,0,.L2061-.L1019
	.half	1
	.byte	100
	.word	0,0
.L2064:
	.word	-1,.L1019,.L2547-.L1019,.L2061-.L1019
	.half	1
	.byte	82
	.word	0,0
.L2065:
	.word	-1,.L1019,.L2548-.L1019,.L2061-.L1019
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_CheckStorageMem')
	.sect	'.debug_loc'
.L898:
	.word	-1,.L899,0,.L1892-.L899
	.half	2
	.byte	138,0
	.word	0,0
.L1893:
	.word	-1,.L899,.L2141-.L899,.L12-.L899
	.half	5
	.byte	144,32,157,32,0
	.word	.L2143-.L899,.L26-.L899
	.half	1
	.byte	83
	.word	0,0
.L1894:
	.word	-1,.L899,.L2142-.L899,.L20-.L899
	.half	1
	.byte	86
	.word	0,0
.L1895:
	.word	-1,.L899,.L2140-.L899,.L1892-.L899
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_ClearOneDTC')
	.sect	'.debug_loc'
.L2023:
	.word	-1,.L947,0,.L2017-.L947
	.half	2
	.byte	145,120
	.word	0,0
.L946:
	.word	-1,.L947,0,.L2353-.L947
	.half	2
	.byte	138,0
	.word	.L2353-.L947,.L269-.L947
	.half	2
	.byte	138,8
	.word	.L269-.L947,.L269-.L947
	.half	2
	.byte	138,0
	.word	.L269-.L947,.L2017-.L947
	.half	2
	.byte	138,8
	.word	.L2017-.L947,.L2017-.L947
	.half	2
	.byte	138,0
	.word	0,0
.L2018:
	.word	-1,.L947,0,.L261-.L947
	.half	1
	.byte	84
	.word	.L2354-.L947,.L2017-.L947
	.half	1
	.byte	88
	.word	0,0
.L2022:
	.word	-1,.L947,.L2357-.L947,.L2017-.L947
	.half	1
	.byte	89
	.word	.L2359-.L947,.L2356-.L947
	.half	1
	.byte	84
	.word	0,0
.L2021:
	.word	-1,.L947,.L2360-.L947,.L264-.L947
	.half	1
	.byte	95
	.word	.L2361-.L947,.L2017-.L947
	.half	1
	.byte	91
	.word	.L2364-.L947,.L2363-.L947
	.half	1
	.byte	86
	.word	.L2365-.L947,.L267-.L947
	.half	1
	.byte	86
	.word	0,0
.L2020:
	.word	-1,.L947,.L2358-.L947,.L2017-.L947
	.half	1
	.byte	90
	.word	.L2362-.L947,.L2363-.L947
	.half	1
	.byte	85
	.word	0,0
.L2019:
	.word	-1,.L947,.L2355-.L947,.L2356-.L947
	.half	1
	.byte	82
	.word	.L263-.L947,.L264-.L947
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_ClearOneDTCGroup')
	.sect	'.debug_loc'
.L950:
	.word	-1,.L951,0,.L2027-.L951
	.half	2
	.byte	138,0
	.word	0,0
.L2028:
	.word	-1,.L951,.L2367-.L951,.L2368-.L951
	.half	1
	.byte	89
	.word	.L2369-.L951,.L287-.L951
	.half	1
	.byte	84
	.word	.L278-.L951,.L277-.L951
	.half	1
	.byte	89
	.word	0,0
.L2029:
	.word	-1,.L951,.L2366-.L951,.L270-.L951
	.half	1
	.byte	88
	.word	.L271-.L951,.L2027-.L951
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_ClearOneEvent')
	.sect	'.debug_loc'
.L2026:
	.word	-1,.L949,0,.L2024-.L949
	.half	1
	.byte	85
	.word	0,0
.L948:
	.word	-1,.L949,0,.L2024-.L949
	.half	2
	.byte	138,0
	.word	0,0
.L2025:
	.word	-1,.L949,0,.L2024-.L949
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_ClearOneMemoryEntry')
	.sect	'.debug_loc'
.L1934:
	.word	-1,.L917,.L2182-.L917,.L2183-.L917
	.half	1
	.byte	95
	.word	.L2183-.L917,.L1932-.L917
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L916:
	.word	-1,.L917,0,.L1932-.L917
	.half	2
	.byte	138,0
	.word	0,0
.L1933:
	.word	-1,.L917,0,.L1932-.L917
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_ClrCaptureQueue')
	.sect	'.debug_loc'
.L902:
	.word	-1,.L903,0,.L1899-.L903
	.half	2
	.byte	138,0
	.word	0,0
.L1900:
	.word	-1,.L903,0,.L1899-.L903
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_CycleEndProcess')
	.sect	'.debug_loc'
.L934:
	.word	-1,.L935,0,.L2291-.L935
	.half	2
	.byte	138,0
	.word	.L2291-.L935,.L1998-.L935
	.half	2
	.byte	138,8
	.word	.L1998-.L935,.L1998-.L935
	.half	2
	.byte	138,0
	.word	0,0
.L2001:
	.word	-1,.L935,.L2299-.L935,.L2300-.L935
	.half	1
	.byte	95
	.word	.L2301-.L935,.L196-.L935
	.half	2
	.byte	145,120
	.word	.L2304-.L935,.L2305-.L935
	.half	1
	.byte	95
	.word	.L2306-.L935,.L2307-.L935
	.half	1
	.byte	95
	.word	.L2308-.L935,.L2309-.L935
	.half	1
	.byte	95
	.word	.L2310-.L935,.L2311-.L935
	.half	1
	.byte	95
	.word	.L2314-.L935,.L2315-.L935
	.half	1
	.byte	95
	.word	.L2316-.L935,.L2317-.L935
	.half	1
	.byte	95
	.word	.L2318-.L935,.L2319-.L935
	.half	1
	.byte	95
	.word	.L2320-.L935,.L2321-.L935
	.half	1
	.byte	95
	.word	.L2326-.L935,.L2327-.L935
	.half	1
	.byte	95
	.word	0,0
.L2003:
	.word	-1,.L935,.L2303-.L935,.L196-.L935
	.half	1
	.byte	94
	.word	.L2324-.L935,.L2323-.L935
	.half	1
	.byte	86
	.word	.L2325-.L935,.L210-.L935
	.half	1
	.byte	86
	.word	0,0
.L2002:
	.word	-1,.L935,.L2302-.L935,.L196-.L935
	.half	1
	.byte	93
	.word	.L2322-.L935,.L2323-.L935
	.half	1
	.byte	85
	.word	0,0
.L2004:
	.word	-1,.L935,.L2294-.L935,.L2295-.L935
	.half	1
	.byte	81
	.word	0,0
.L2000:
	.word	-1,.L935,.L2293-.L935,.L1998-.L935
	.half	1
	.byte	89
	.word	.L2296-.L935,.L2297-.L935
	.half	1
	.byte	84
	.word	.L2298-.L935,.L198-.L935
	.half	1
	.byte	84
	.word	.L2312-.L935,.L2313-.L935
	.half	1
	.byte	84
	.word	0,0
.L1999:
	.word	-1,.L935,0,.L197-.L935
	.half	1
	.byte	84
	.word	.L2292-.L935,.L1998-.L935
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_CycleStartProcess')
	.sect	'.debug_loc'
.L932:
	.word	-1,.L933,0,.L1992-.L933
	.half	2
	.byte	138,0
	.word	0,0
.L1995:
	.word	-1,.L933,.L2281-.L933,.L2282-.L933
	.half	1
	.byte	82
	.word	0,0
.L1994:
	.word	-1,.L933,.L2280-.L933,.L1992-.L933
	.half	1
	.byte	89
	.word	0,0
.L1997:
	.word	-1,.L933,.L2284-.L933,.L2285-.L933
	.half	5
	.byte	144,32,157,32,0
	.word	.L2286-.L933,.L2287-.L933
	.half	1
	.byte	95
	.word	.L2289-.L933,.L2282-.L933
	.half	1
	.byte	86
	.word	.L2290-.L933,.L193-.L933
	.half	1
	.byte	86
	.word	0,0
.L1996:
	.word	-1,.L933,.L2283-.L933,.L190-.L933
	.half	1
	.byte	94
	.word	.L2288-.L933,.L2282-.L933
	.half	1
	.byte	85
	.word	0,0
.L1993:
	.word	-1,.L933,0,.L189-.L933
	.half	1
	.byte	84
	.word	.L2279-.L933,.L1992-.L933
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_GetAllExtendedData')
	.sect	'.debug_loc'
.L2089:
	.word	-1,.L1023,.L2615-.L1023,.L612-.L1023
	.half	1
	.byte	94
	.word	.L2628-.L1023,.L2629-.L1023
	.half	1
	.byte	95
	.word	0,0
.L2090:
	.word	-1,.L1023,.L2616-.L1023,.L614-.L1023
	.half	1
	.byte	91
	.word	.L2620-.L1023,.L2618-.L1023
	.half	1
	.byte	84
	.word	.L2621-.L1023,.L615-.L1023
	.half	1
	.byte	95
	.word	.L2625-.L1023,.L2623-.L1023
	.half	1
	.byte	84
	.word	.L2630-.L1023,.L619-.L1023
	.half	1
	.byte	81
	.word	.L2629-.L1023,.L620-.L1023
	.half	1
	.byte	95
	.word	0,0
.L1022:
	.word	-1,.L1023,0,.L2083-.L1023
	.half	2
	.byte	138,0
	.word	0,0
.L2085:
	.word	-1,.L1023,0,.L610-.L1023
	.half	1
	.byte	100
	.word	.L2605-.L1023,.L2083-.L1023
	.half	1
	.byte	108
	.word	.L2610-.L1023,.L2611-.L1023
	.half	1
	.byte	100
	.word	.L2617-.L1023,.L2618-.L1023
	.half	1
	.byte	100
	.word	.L2622-.L1023,.L2623-.L1023
	.half	1
	.byte	100
	.word	0,0
.L2084:
	.word	-1,.L1023,0,.L610-.L1023
	.half	1
	.byte	84
	.word	.L2604-.L1023,.L2083-.L1023
	.half	1
	.byte	88
	.word	0,0
.L2088:
	.word	-1,.L1023,.L2609-.L1023,.L609-.L1023
	.half	1
	.byte	92
	.word	0,0
.L2091:
	.word	-1,.L1023,.L2606-.L1023,.L2083-.L1023
	.half	1
	.byte	109
	.word	.L2612-.L1023,.L2611-.L1023
	.half	1
	.byte	101
	.word	.L2619-.L1023,.L2618-.L1023
	.half	1
	.byte	101
	.word	.L2624-.L1023,.L2623-.L1023
	.half	1
	.byte	101
	.word	0,0
.L2086:
	.word	-1,.L1023,.L2607-.L1023,.L2608-.L1023
	.half	1
	.byte	89
	.word	.L609-.L1023,.L2083-.L1023
	.half	1
	.byte	89
	.word	0,0
.L2087:
	.word	-1,.L1023,.L2613-.L1023,.L2614-.L1023
	.half	1
	.byte	93
	.word	.L612-.L1023,.L611-.L1023
	.half	1
	.byte	93
	.word	.L2626-.L1023,.L2627-.L1023
	.half	5
	.byte	144,32,157,32,0
	.word	.L617-.L1023,.L616-.L1023
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_GetAllFFData')
	.sect	'.debug_loc'
.L2119:
	.word	-1,.L1027,.L2716-.L1027,.L662-.L1027
	.half	1
	.byte	94
	.word	.L2732-.L1027,.L2733-.L1027
	.half	1
	.byte	95
	.word	0,0
.L2120:
	.word	-1,.L1027,.L2717-.L1027,.L664-.L1027
	.half	1
	.byte	95
	.word	.L2721-.L1027,.L2719-.L1027
	.half	1
	.byte	84
	.word	.L2722-.L1027,.L665-.L1027
	.half	1
	.byte	95
	.word	.L2726-.L1027,.L2724-.L1027
	.half	1
	.byte	84
	.word	.L2734-.L1027,.L671-.L1027
	.half	1
	.byte	83
	.word	.L2733-.L1027,.L672-.L1027
	.half	1
	.byte	95
	.word	0,0
.L1026:
	.word	-1,.L1027,0,.L2111-.L1027
	.half	2
	.byte	138,0
	.word	0,0
.L2113:
	.word	-1,.L1027,0,.L658-.L1027
	.half	1
	.byte	100
	.word	.L2700-.L1027,.L2111-.L1027
	.half	1
	.byte	108
	.word	.L2705-.L1027,.L2706-.L1027
	.half	1
	.byte	100
	.word	.L2710-.L1027,.L2711-.L1027
	.half	1
	.byte	100
	.word	.L2718-.L1027,.L2719-.L1027
	.half	1
	.byte	100
	.word	.L2723-.L1027,.L2724-.L1027
	.half	1
	.byte	100
	.word	0,0
.L2118:
	.word	-1,.L1027,.L2713-.L1027,.L660-.L1027
	.half	1
	.byte	92
	.word	.L2729-.L1027,.L667-.L1027
	.half	1
	.byte	81
	.word	0,0
.L2112:
	.word	-1,.L1027,0,.L658-.L1027
	.half	1
	.byte	84
	.word	.L2699-.L1027,.L2111-.L1027
	.half	1
	.byte	88
	.word	0,0
.L2117:
	.word	-1,.L1027,.L2704-.L1027,.L657-.L1027
	.half	1
	.byte	91
	.word	0,0
.L2121:
	.word	-1,.L1027,.L2701-.L1027,.L2111-.L1027
	.half	1
	.byte	109
	.word	.L2707-.L1027,.L2706-.L1027
	.half	1
	.byte	101
	.word	.L2712-.L1027,.L2711-.L1027
	.half	1
	.byte	101
	.word	.L2720-.L1027,.L2719-.L1027
	.half	1
	.byte	101
	.word	.L2725-.L1027,.L2724-.L1027
	.half	1
	.byte	101
	.word	0,0
.L2114:
	.word	-1,.L1027,.L2702-.L1027,.L2703-.L1027
	.half	1
	.byte	89
	.word	.L657-.L1027,.L2111-.L1027
	.half	1
	.byte	89
	.word	0,0
.L2115:
	.word	-1,.L1027,.L2708-.L1027,.L2709-.L1027
	.half	1
	.byte	90
	.word	.L660-.L1027,.L659-.L1027
	.half	1
	.byte	90
	.word	.L2727-.L1027,.L2728-.L1027
	.half	5
	.byte	144,32,157,32,0
	.word	.L667-.L1027,.L666-.L1027
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2116:
	.word	-1,.L1027,.L2714-.L1027,.L2715-.L1027
	.half	1
	.byte	93
	.word	.L662-.L1027,.L660-.L1027
	.half	1
	.byte	93
	.word	.L2730-.L1027,.L2731-.L1027
	.half	1
	.byte	82
	.word	.L669-.L1027,.L667-.L1027
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_GetCaptureQueue')
	.sect	'.debug_loc'
.L904:
	.word	-1,.L905,0,.L1901-.L905
	.half	2
	.byte	138,0
	.word	0,0
.L1902:
	.word	-1,.L905,0,.L1901-.L905
	.half	1
	.byte	84
	.word	0,0
.L1904:
	.word	-1,.L905,0,.L1901-.L905
	.half	1
	.byte	100
	.word	0,0
.L1905:
	.word	-1,.L905,.L2144-.L905,.L1901-.L905
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_GetDtcInternalData')
	.sect	'.debug_loc'
.L1957:
	.word	-1,.L925,.L2207-.L925,.L1954-.L925
	.half	1
	.byte	82
	.word	0,0
.L1956:
	.word	-1,.L925,0,.L2205-.L925
	.half	1
	.byte	85
	.word	.L142-.L925,.L1954-.L925
	.half	1
	.byte	85
	.word	0,0
.L924:
	.word	-1,.L925,0,.L1954-.L925
	.half	2
	.byte	138,0
	.word	0,0
.L1955:
	.word	-1,.L925,0,.L2206-.L925
	.half	1
	.byte	84
	.word	.L142-.L925,.L1954-.L925
	.half	1
	.byte	84
	.word	0,0
.L1958:
	.word	-1,.L925,.L2208-.L925,.L1954-.L925
	.half	5
	.byte	144,32,157,32,0
	.word	.L2206-.L925,.L142-.L925
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_GetEventExtendedDataRecordEx')
	.sect	'.debug_loc'
.L2051:
	.word	-1,.L955,0,.L320-.L955
	.half	1
	.byte	101
	.word	.L2426-.L955,.L2047-.L955
	.half	1
	.byte	109
	.word	0,0
.L2059:
	.word	-1,.L955,.L2437-.L955,.L322-.L955
	.half	1
	.byte	92
	.word	.L2446-.L955,.L2447-.L955
	.half	1
	.byte	95
	.word	.L2448-.L955,.L329-.L955
	.half	2
	.byte	145,120
	.word	.L2451-.L955,.L2450-.L955
	.half	1
	.byte	85
	.word	.L2452-.L955,.L2453-.L955
	.half	1
	.byte	95
	.word	.L2454-.L955,.L2455-.L955
	.half	1
	.byte	95
	.word	.L2456-.L955,.L2457-.L955
	.half	1
	.byte	95
	.word	0,0
.L2060:
	.word	-1,.L955,.L2428-.L955,.L2429-.L955
	.half	1
	.byte	90
	.word	.L324-.L955,.L2438-.L955
	.half	1
	.byte	90
	.word	.L325-.L955,.L2047-.L955
	.half	1
	.byte	90
	.word	.L2442-.L955,.L2440-.L955
	.half	1
	.byte	84
	.word	0,0
.L954:
	.word	-1,.L955,0,.L2422-.L955
	.half	2
	.byte	138,0
	.word	.L2422-.L955,.L2047-.L955
	.half	2
	.byte	138,8
	.word	.L2047-.L955,.L2047-.L955
	.half	2
	.byte	138,0
	.word	0,0
.L2050:
	.word	-1,.L955,0,.L320-.L955
	.half	1
	.byte	100
	.word	.L2425-.L955,.L2047-.L955
	.half	1
	.byte	108
	.word	.L2439-.L955,.L2440-.L955
	.half	1
	.byte	100
	.word	0,0
.L2053:
	.word	-1,.L955,.L2430-.L955,.L2047-.L955
	.half	1
	.byte	91
	.word	.L2449-.L955,.L2450-.L955
	.half	1
	.byte	84
	.word	0,0
.L2048:
	.word	-1,.L955,0,.L320-.L955
	.half	1
	.byte	84
	.word	0,0
.L2054:
	.word	-1,.L955,.L2431-.L955,.L2432-.L955
	.half	1
	.byte	95
	.word	0,0
.L2058:
	.word	-1,.L955,.L2435-.L955,.L319-.L955
	.half	1
	.byte	93
	.word	0,0
.L2049:
	.word	-1,.L955,0,.L320-.L955
	.half	1
	.byte	85
	.word	.L2423-.L955,.L2424-.L955
	.half	1
	.byte	88
	.word	.L321-.L955,.L318-.L955
	.half	1
	.byte	88
	.word	0,0
.L2052:
	.word	-1,.L955,.L2427-.L955,.L2047-.L955
	.half	1
	.byte	89
	.word	.L2458-.L955,.L2047-.L955
	.half	1
	.byte	82
	.word	0,0
.L2055:
	.word	-1,.L955,.L2433-.L955,.L318-.L955
	.half	1
	.byte	110
	.word	.L2441-.L955,.L2440-.L955
	.half	1
	.byte	101
	.word	0,0
.L2056:
	.word	-1,.L955,.L2434-.L955,.L323-.L955
	.half	1
	.byte	92
	.word	.L321-.L955,.L2443-.L955
	.half	1
	.byte	92
	.word	.L319-.L955,.L318-.L955
	.half	1
	.byte	92
	.word	0,0
.L2057:
	.word	-1,.L955,.L2424-.L955,.L2436-.L955
	.half	1
	.byte	88
	.word	.L322-.L955,.L321-.L955
	.half	1
	.byte	88
	.word	.L2444-.L955,.L2445-.L955
	.half	1
	.byte	94
	.word	.L329-.L955,.L319-.L955
	.half	1
	.byte	94
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_GetEventFreezeFrameDataEx')
	.sect	'.debug_loc'
.L2035:
	.word	-1,.L953,0,.L293-.L953
	.half	1
	.byte	101
	.word	.L2374-.L953,.L2030-.L953
	.half	1
	.byte	109
	.word	0,0
.L2033:
	.word	-1,.L953,0,.L293-.L953
	.half	1
	.byte	86
	.word	.L2372-.L953,.L2030-.L953
	.half	2
	.byte	145,120
	.word	.L2386-.L953,.L299-.L953
	.half	1
	.byte	95
	.word	.L297-.L953,.L306-.L953
	.half	1
	.byte	95
	.word	0,0
.L2045:
	.word	-1,.L953,.L2388-.L953,.L298-.L953
	.half	1
	.byte	92
	.word	.L2400-.L953,.L305-.L953
	.half	1
	.byte	94
	.word	.L2407-.L953,.L2408-.L953
	.half	1
	.byte	95
	.word	.L2409-.L953,.L312-.L953
	.half	2
	.byte	145,112
	.word	.L2412-.L953,.L2411-.L953
	.half	1
	.byte	85
	.word	.L2413-.L953,.L2414-.L953
	.half	1
	.byte	95
	.word	.L2415-.L953,.L2416-.L953
	.half	1
	.byte	95
	.word	.L2417-.L953,.L2418-.L953
	.half	1
	.byte	95
	.word	0,0
.L2046:
	.word	0,0
.L952:
	.word	-1,.L953,0,.L2370-.L953
	.half	2
	.byte	138,0
	.word	.L2370-.L953,.L2030-.L953
	.half	2
	.byte	138,16
	.word	.L2030-.L953,.L2030-.L953
	.half	2
	.byte	138,0
	.word	0,0
.L2034:
	.word	-1,.L953,0,.L293-.L953
	.half	1
	.byte	100
	.word	.L2373-.L953,.L2030-.L953
	.half	1
	.byte	108
	.word	.L2391-.L953,.L2392-.L953
	.half	1
	.byte	100
	.word	0,0
.L2044:
	.word	-1,.L953,.L2385-.L953,.L295-.L953
	.half	1
	.byte	90
	.word	.L2404-.L953,.L310-.L953
	.half	1
	.byte	93
	.word	0,0
.L2037:
	.word	-1,.L953,.L2377-.L953,.L2030-.L953
	.half	1
	.byte	89
	.word	.L2410-.L953,.L2411-.L953
	.half	1
	.byte	84
	.word	0,0
.L2031:
	.word	-1,.L953,0,.L293-.L953
	.half	1
	.byte	84
	.word	0,0
.L2038:
	.word	-1,.L953,.L2378-.L953,.L293-.L953
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2043:
	.word	-1,.L953,.L2381-.L953,.L2382-.L953
	.half	1
	.byte	91
	.word	.L297-.L953,.L292-.L953
	.half	1
	.byte	91
	.word	0,0
.L2032:
	.word	-1,.L953,0,.L293-.L953
	.half	1
	.byte	85
	.word	.L2371-.L953,.L2030-.L953
	.half	2
	.byte	145,116
	.word	.L2383-.L953,.L296-.L953
	.half	1
	.byte	95
	.word	.L294-.L953,.L311-.L953
	.half	1
	.byte	95
	.word	0,0
.L2036:
	.word	-1,.L953,.L2375-.L953,.L293-.L953
	.half	1
	.byte	88
	.word	.L2376-.L953,.L2030-.L953
	.half	2
	.byte	145,124
	.word	.L2380-.L953,.L296-.L953
	.half	1
	.byte	90
	.word	.L2389-.L953,.L2390-.L953
	.half	1
	.byte	88
	.word	.L2393-.L953,.L2394-.L953
	.half	1
	.byte	88
	.word	.L2394-.L953,.L2392-.L953
	.half	1
	.byte	84
	.word	.L2392-.L953,.L2395-.L953
	.half	1
	.byte	88
	.word	.L2396-.L953,.L297-.L953
	.half	1
	.byte	95
	.word	.L294-.L953,.L2401-.L953
	.half	1
	.byte	90
	.word	.L292-.L953,.L291-.L953
	.half	1
	.byte	90
	.word	.L291-.L953,.L2419-.L953
	.half	1
	.byte	88
	.word	.L2420-.L953,.L316-.L953
	.half	1
	.byte	95
	.word	.L2421-.L953,.L2030-.L953
	.half	1
	.byte	82
	.word	0,0
.L2039:
	.word	-1,.L953,.L2379-.L953,.L291-.L953
	.half	1
	.byte	110
	.word	.L2393-.L953,.L2392-.L953
	.half	1
	.byte	101
	.word	0,0
.L2040:
	.word	0,0
.L2041:
	.word	-1,.L953,.L2384-.L953,.L299-.L953
	.half	1
	.byte	92
	.word	.L297-.L953,.L2397-.L953
	.half	1
	.byte	92
	.word	.L295-.L953,.L294-.L953
	.half	1
	.byte	92
	.word	.L2402-.L953,.L2403-.L953
	.half	1
	.byte	92
	.word	.L310-.L953,.L292-.L953
	.half	1
	.byte	92
	.word	0,0
.L2042:
	.word	-1,.L953,.L2382-.L953,.L2387-.L953
	.half	1
	.byte	91
	.word	.L298-.L953,.L297-.L953
	.half	1
	.byte	91
	.word	.L2398-.L953,.L2399-.L953
	.half	1
	.byte	93
	.word	.L305-.L953,.L295-.L953
	.half	1
	.byte	93
	.word	.L2405-.L953,.L2406-.L953
	.half	1
	.byte	94
	.word	.L312-.L953,.L310-.L953
	.half	1
	.byte	94
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_GetEventInternalData')
	.sect	'.debug_loc'
.L1943:
	.word	-1,.L921,0,.L1940-.L921
	.half	2
	.byte	145,120
	.word	0,0
.L1942:
	.word	-1,.L921,0,.L2187-.L921
	.half	1
	.byte	85
	.word	.L115-.L921,.L133-.L921
	.half	1
	.byte	85
	.word	0,0
.L920:
	.word	-1,.L921,0,.L2186-.L921
	.half	2
	.byte	138,0
	.word	.L2186-.L921,.L1940-.L921
	.half	2
	.byte	138,8
	.word	.L1940-.L921,.L1940-.L921
	.half	2
	.byte	138,0
	.word	0,0
.L1944:
	.word	-1,.L921,.L2188-.L921,.L2187-.L921
	.half	5
	.byte	144,32,157,32,0
	.word	.L115-.L921,.L2189-.L921
	.half	5
	.byte	144,32,157,32,0
	.word	.L130-.L921,.L133-.L921
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1941:
	.word	-1,.L921,0,.L2187-.L921
	.half	1
	.byte	84
	.word	.L115-.L921,.L2190-.L921
	.half	1
	.byte	84
	.word	.L118-.L921,.L2191-.L921
	.half	1
	.byte	84
	.word	.L120-.L921,.L2192-.L921
	.half	1
	.byte	84
	.word	.L122-.L921,.L2193-.L921
	.half	1
	.byte	84
	.word	.L124-.L921,.L2194-.L921
	.half	1
	.byte	84
	.word	.L126-.L921,.L2195-.L921
	.half	1
	.byte	84
	.word	.L128-.L921,.L133-.L921
	.half	1
	.byte	84
	.word	0,0
.L1945:
	.word	-1,.L921,.L2187-.L921,.L108-.L921
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_GetSizeOfExtendedData')
	.sect	'.debug_loc'
.L2067:
	.word	-1,.L1021,0,.L2550-.L1021
	.half	1
	.byte	84
	.word	0,0
.L2068:
	.word	-1,.L1021,0,.L2550-.L1021
	.half	1
	.byte	85
	.word	0,0
.L2080:
	.word	-1,.L1021,.L2572-.L1021,.L576-.L1021
	.half	1
	.byte	110
	.word	0,0
.L2077:
	.word	-1,.L1021,.L2582-.L1021,.L595-.L1021
	.half	1
	.byte	92
	.word	.L2584-.L1021,.L2585-.L1021
	.half	1
	.byte	85
	.word	.L2591-.L1021,.L600-.L1021
	.half	1
	.byte	94
	.word	.L2595-.L1021,.L2596-.L1021
	.half	1
	.byte	85
	.word	0,0
.L2079:
	.word	-1,.L1021,.L2583-.L1021,.L597-.L1021
	.half	1
	.byte	93
	.word	.L2586-.L1021,.L598-.L1021
	.half	5
	.byte	144,32,157,32,0
	.word	.L2592-.L1021,.L2593-.L1021
	.half	1
	.byte	95
	.word	.L2594-.L1021,.L602-.L1021
	.half	2
	.byte	145,116
	.word	.L2597-.L1021,.L602-.L1021
	.half	1
	.byte	95
	.word	.L2599-.L1021,.L603-.L1021
	.half	1
	.byte	95
	.word	0,0
.L1020:
	.word	-1,.L1021,0,.L2549-.L1021
	.half	2
	.byte	138,0
	.word	.L2549-.L1021,.L2066-.L1021
	.half	2
	.byte	138,16
	.word	.L2066-.L1021,.L2066-.L1021
	.half	2
	.byte	138,0
	.word	0,0
.L2073:
	.word	-1,.L1021,0,.L2066-.L1021
	.half	2
	.byte	145,112
	.word	0,0
.L2069:
	.word	-1,.L1021,0,.L2551-.L1021
	.half	1
	.byte	86
	.word	.L2553-.L1021,.L2066-.L1021
	.half	2
	.byte	145,120
	.word	.L2551-.L1021,.L2558-.L1021
	.half	1
	.byte	95
	.word	.L2566-.L1021,.L2567-.L1021
	.half	1
	.byte	95
	.word	.L587-.L1021,.L585-.L1021
	.half	1
	.byte	95
	.word	.L2568-.L1021,.L584-.L1021
	.half	5
	.byte	144,32,157,32,0
	.word	.L2578-.L1021,.L2579-.L1021
	.half	1
	.byte	95
	.word	.L593-.L1021,.L601-.L1021
	.half	1
	.byte	95
	.word	.L2600-.L1021,.L2601-.L1021
	.half	1
	.byte	95
	.word	.L605-.L1021,.L2602-.L1021
	.half	1
	.byte	95
	.word	0,0
.L2071:
	.word	-1,.L1021,0,.L2550-.L1021
	.half	1
	.byte	101
	.word	.L2555-.L1021,.L2066-.L1021
	.half	1
	.byte	109
	.word	0,0
.L2082:
	.word	-1,.L1021,.L2570-.L1021,.L2571-.L1021
	.half	1
	.byte	88
	.word	.L604-.L1021,.L576-.L1021
	.half	1
	.byte	88
	.word	0,0
.L2081:
	.word	-1,.L1021,.L2587-.L1021,.L2588-.L1021
	.half	1
	.byte	92
	.word	.L602-.L1021,.L2598-.L1021
	.half	1
	.byte	92
	.word	.L603-.L1021,.L591-.L1021
	.half	1
	.byte	92
	.word	0,0
.L2076:
	.word	-1,.L1021,.L2563-.L1021,.L2564-.L1021
	.half	1
	.byte	95
	.word	.L2575-.L1021,.L591-.L1021
	.half	1
	.byte	91
	.word	0,0
.L2078:
	.word	-1,.L1021,.L2565-.L1021,.L585-.L1021
	.half	1
	.byte	81
	.word	.L2576-.L1021,.L2577-.L1021
	.half	5
	.byte	144,32,157,32,0
	.word	.L593-.L1021,.L601-.L1021
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2072:
	.word	-1,.L1021,.L2556-.L1021,.L2551-.L1021
	.half	1
	.byte	95
	.word	.L2557-.L1021,.L2066-.L1021
	.half	2
	.byte	145,124
	.word	.L2559-.L1021,.L581-.L1021
	.half	1
	.byte	95
	.word	.L2562-.L1021,.L586-.L1021
	.half	1
	.byte	95
	.word	.L2567-.L1021,.L587-.L1021
	.half	1
	.byte	95
	.word	.L2569-.L1021,.L584-.L1021
	.half	1
	.byte	95
	.word	.L590-.L1021,.L589-.L1021
	.half	1
	.byte	95
	.word	.L2603-.L1021,.L2066-.L1021
	.half	1
	.byte	82
	.word	0,0
.L2070:
	.word	-1,.L1021,0,.L2552-.L1021
	.half	1
	.byte	100
	.word	.L2554-.L1021,.L2066-.L1021
	.half	1
	.byte	108
	.word	0,0
.L2074:
	.word	-1,.L1021,.L2560-.L1021,.L2561-.L1021
	.half	5
	.byte	144,32,157,32,0
	.word	.L585-.L1021,.L2568-.L1021
	.half	5
	.byte	144,32,157,32,0
	.word	.L2573-.L1021,.L2574-.L1021
	.half	1
	.byte	89
	.word	.L591-.L1021,.L576-.L1021
	.half	1
	.byte	89
	.word	0,0
.L2075:
	.word	-1,.L1021,.L2580-.L1021,.L2581-.L1021
	.half	1
	.byte	90
	.word	.L595-.L1021,.L593-.L1021
	.half	1
	.byte	90
	.word	.L2589-.L1021,.L2590-.L1021
	.half	1
	.byte	93
	.word	.L600-.L1021,.L591-.L1021
	.half	1
	.byte	93
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_GetSizeOfFFData')
	.sect	'.debug_loc'
.L2093:
	.word	-1,.L1025,0,.L2632-.L1025
	.half	1
	.byte	84
	.word	0,0
.L2094:
	.word	-1,.L1025,0,.L2632-.L1025
	.half	1
	.byte	85
	.word	0,0
.L2108:
	.word	-1,.L1025,.L2654-.L1025,.L621-.L1025
	.half	1
	.byte	110
	.word	0,0
.L2105:
	.word	-1,.L1025,.L2668-.L1025,.L641-.L1025
	.half	1
	.byte	92
	.word	.L2670-.L1025,.L2671-.L1025
	.half	1
	.byte	85
	.word	.L2680-.L1025,.L648-.L1025
	.half	1
	.byte	94
	.word	.L2683-.L1025,.L2684-.L1025
	.half	1
	.byte	85
	.word	0,0
.L2107:
	.word	-1,.L1025,.L2669-.L1025,.L643-.L1025
	.half	1
	.byte	93
	.word	.L2672-.L1025,.L644-.L1025
	.half	5
	.byte	144,32,157,32,0
	.word	.L2681-.L1025,.L2682-.L1025
	.half	1
	.byte	89
	.word	.L2685-.L1025,.L651-.L1025
	.half	1
	.byte	95
	.word	0,0
.L1024:
	.word	-1,.L1025,0,.L2631-.L1025
	.half	2
	.byte	138,0
	.word	.L2631-.L1025,.L2092-.L1025
	.half	2
	.byte	138,24
	.word	.L2092-.L1025,.L2092-.L1025
	.half	2
	.byte	138,0
	.word	0,0
.L2104:
	.word	-1,.L1025,.L2665-.L1025,.L639-.L1025
	.half	1
	.byte	90
	.word	.L2677-.L1025,.L646-.L1025
	.half	1
	.byte	91
	.word	0,0
.L2099:
	.word	-1,.L1025,0,.L2092-.L1025
	.half	2
	.byte	145,104
	.word	0,0
.L2097:
	.word	-1,.L1025,0,.L2632-.L1025
	.half	1
	.byte	101
	.word	.L2637-.L1025,.L2092-.L1025
	.half	1
	.byte	109
	.word	0,0
.L2110:
	.word	-1,.L1025,.L2651-.L1025,.L2652-.L1025
	.half	1
	.byte	95
	.word	.L2653-.L1025,.L621-.L1025
	.half	2
	.byte	145,112
	.word	.L2655-.L1025,.L636-.L1025
	.half	1
	.byte	95
	.word	.L2686-.L1025,.L2687-.L1025
	.half	1
	.byte	95
	.word	.L2688-.L1025,.L652-.L1025
	.half	1
	.byte	95
	.word	.L2695-.L1025,.L653-.L1025
	.half	1
	.byte	95
	.word	0,0
.L2109:
	.word	-1,.L1025,.L2673-.L1025,.L2674-.L1025
	.half	1
	.byte	90
	.word	.L651-.L1025,.L635-.L1025
	.half	1
	.byte	90
	.word	0,0
.L2103:
	.word	-1,.L1025,.L2645-.L1025,.L2646-.L1025
	.half	1
	.byte	95
	.word	.L2659-.L1025,.L635-.L1025
	.half	1
	.byte	88
	.word	0,0
.L2106:
	.word	-1,.L1025,.L2647-.L1025,.L629-.L1025
	.half	1
	.byte	81
	.word	.L2660-.L1025,.L2661-.L1025
	.half	5
	.byte	144,32,157,32,0
	.word	.L637-.L1025,.L647-.L1025
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2095:
	.word	-1,.L1025,0,.L2633-.L1025
	.half	1
	.byte	86
	.word	.L2635-.L1025,.L2092-.L1025
	.half	2
	.byte	145,116
	.word	.L2633-.L1025,.L2640-.L1025
	.half	1
	.byte	95
	.word	.L625-.L1025,.L2641-.L1025
	.half	1
	.byte	95
	.word	.L2646-.L1025,.L2648-.L1025
	.half	1
	.byte	95
	.word	.L631-.L1025,.L629-.L1025
	.half	1
	.byte	95
	.word	.L2649-.L1025,.L628-.L1025
	.half	5
	.byte	144,32,157,32,0
	.word	.L2658-.L1025,.L2662-.L1025
	.half	1
	.byte	95
	.word	.L637-.L1025,.L647-.L1025
	.half	1
	.byte	95
	.word	.L2693-.L1025,.L2694-.L1025
	.half	5
	.byte	144,32,157,32,0
	.word	.L653-.L1025,.L2696-.L1025
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L2098:
	.word	-1,.L1025,.L2638-.L1025,.L2633-.L1025
	.half	1
	.byte	95
	.word	.L2639-.L1025,.L2092-.L1025
	.half	2
	.byte	145,120
	.word	.L2640-.L1025,.L625-.L1025
	.half	1
	.byte	95
	.word	.L2644-.L1025,.L630-.L1025
	.half	1
	.byte	95
	.word	.L2648-.L1025,.L631-.L1025
	.half	1
	.byte	95
	.word	.L2650-.L1025,.L628-.L1025
	.half	1
	.byte	95
	.word	.L634-.L1025,.L633-.L1025
	.half	1
	.byte	95
	.word	.L2698-.L1025,.L2092-.L1025
	.half	1
	.byte	82
	.word	0,0
.L2096:
	.word	-1,.L1025,0,.L2634-.L1025
	.half	1
	.byte	100
	.word	.L2636-.L1025,.L2092-.L1025
	.half	1
	.byte	108
	.word	0,0
.L2100:
	.word	-1,.L1025,.L2642-.L1025,.L2643-.L1025
	.half	5
	.byte	144,32,157,32,0
	.word	.L629-.L1025,.L2649-.L1025
	.half	5
	.byte	144,32,157,32,0
	.word	.L636-.L1025,.L635-.L1025
	.half	2
	.byte	145,108
	.word	.L636-.L1025,.L2656-.L1025
	.half	1
	.byte	95
	.word	.L2657-.L1025,.L2658-.L1025
	.half	1
	.byte	95
	.word	.L2689-.L1025,.L2690-.L1025
	.half	1
	.byte	95
	.word	.L635-.L1025,.L2691-.L1025
	.half	1
	.byte	95
	.word	.L2691-.L1025,.L621-.L1025
	.half	2
	.byte	145,108
	.word	.L2692-.L1025,.L638-.L1025
	.half	1
	.byte	95
	.word	.L2697-.L1025,.L621-.L1025
	.half	1
	.byte	95
	.word	0,0
.L2101:
	.word	-1,.L1025,.L2663-.L1025,.L2664-.L1025
	.half	1
	.byte	89
	.word	.L639-.L1025,.L637-.L1025
	.half	1
	.byte	89
	.word	.L2675-.L1025,.L2676-.L1025
	.half	1
	.byte	92
	.word	.L646-.L1025,.L635-.L1025
	.half	1
	.byte	92
	.word	0,0
.L2102:
	.word	-1,.L1025,.L2666-.L1025,.L2667-.L1025
	.half	1
	.byte	91
	.word	.L641-.L1025,.L639-.L1025
	.half	1
	.byte	91
	.word	.L2678-.L1025,.L2679-.L1025
	.half	1
	.byte	93
	.word	.L648-.L1025,.L646-.L1025
	.half	1
	.byte	93
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_GetUsableMemoryEntry')
	.sect	'.debug_loc'
.L912:
	.word	-1,.L913,0,.L1923-.L913
	.half	2
	.byte	138,0
	.word	0,0
.L1924:
	.word	-1,.L913,0,.L2175-.L913
	.half	1
	.byte	84
	.word	.L2176-.L913,.L1923-.L913
	.half	1
	.byte	95
	.word	.L2178-.L913,.L94-.L913
	.half	1
	.byte	84
	.word	0,0
.L1926:
	.word	-1,.L913,0,.L2175-.L913
	.half	1
	.byte	100
	.word	.L2177-.L913,.L1923-.L913
	.half	1
	.byte	111
	.word	.L2179-.L913,.L94-.L913
	.half	1
	.byte	100
	.word	0,0
.L1927:
	.word	-1,.L913,.L2175-.L913,.L1923-.L913
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_MainFnc_BswErrorHandle')
	.sect	'.debug_loc'
.L938:
	.word	-1,.L939,0,.L2007-.L939
	.half	2
	.byte	138,0
	.word	0,0
.L2008:
	.word	-1,.L939,.L2342-.L939,.L2007-.L939
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_MainFnc_CaptureData')
	.sect	'.debug_loc'
.L942:
	.word	-1,.L943,0,.L2013-.L943
	.half	2
	.byte	138,0
	.word	0,0
.L2014:
	.word	-1,.L943,.L2349-.L943,.L2013-.L943
	.half	1
	.byte	89
	.word	.L2350-.L943,.L2351-.L943
	.half	1
	.byte	84
	.word	.L2352-.L943,.L252-.L943
	.half	1
	.byte	84
	.word	0,0
.L2015:
	.word	-1,.L943,.L2348-.L943,.L2013-.L943
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_MainFnc_ClearDTC')
	.sect	'.debug_loc'
.L944:
	.word	-1,.L945,0,.L2016-.L945
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_MainFnc_DebounceTimer')
	.sect	'.debug_loc'
.L2012:
	.word	-1,.L941,.L2344-.L941,.L239-.L941
	.half	1
	.byte	82
	.word	0,0
.L940:
	.word	-1,.L941,0,.L2009-.L941
	.half	2
	.byte	138,0
	.word	0,0
.L2010:
	.word	-1,.L941,.L2343-.L941,.L2009-.L941
	.half	1
	.byte	88
	.word	.L2347-.L941,.L239-.L941
	.half	1
	.byte	84
	.word	0,0
.L2011:
	.word	-1,.L941,.L2345-.L941,.L2346-.L941
	.half	5
	.byte	144,32,157,32,0
	.word	.L235-.L941,.L234-.L941
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_MainFnc_OperationCycle')
	.sect	'.debug_loc'
.L936:
	.word	-1,.L937,0,.L2005-.L937
	.half	2
	.byte	138,0
	.word	0,0
.L2006:
	.word	-1,.L937,.L2328-.L937,.L2005-.L937
	.half	1
	.byte	88
	.word	.L2329-.L937,.L2330-.L937
	.half	1
	.byte	89
	.word	.L2330-.L937,.L2331-.L937
	.half	1
	.byte	91
	.word	.L2331-.L937,.L220-.L937
	.half	1
	.byte	93
	.word	.L2332-.L937,.L2333-.L937
	.half	1
	.byte	89
	.word	.L2334-.L937,.L2335-.L937
	.half	1
	.byte	91
	.word	.L2336-.L937,.L2337-.L937
	.half	1
	.byte	84
	.word	.L2338-.L937,.L2339-.L937
	.half	1
	.byte	93
	.word	.L2340-.L937,.L223-.L937
	.half	1
	.byte	84
	.word	.L2341-.L937,.L226-.L937
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_SearchEntryForDisplacement')
	.sect	'.debug_loc'
.L918:
	.word	-1,.L919,0,.L1935-.L919
	.half	2
	.byte	138,0
	.word	0,0
.L1936:
	.word	-1,.L919,0,.L1935-.L919
	.half	1
	.byte	84
	.word	0,0
.L1939:
	.word	-1,.L919,.L2185-.L919,.L1935-.L919
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1937:
	.word	-1,.L919,0,.L1935-.L919
	.half	1
	.byte	100
	.word	0,0
.L1938:
	.word	-1,.L919,.L2184-.L919,.L1935-.L919
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_SearchFreeEntry')
	.sect	'.debug_loc'
.L914:
	.word	-1,.L915,0,.L1928-.L915
	.half	2
	.byte	138,0
	.word	0,0
.L1931:
	.word	-1,.L915,.L2181-.L915,.L96-.L915
	.half	5
	.byte	144,32,157,32,0
	.word	.L99-.L915,.L1928-.L915
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1929:
	.word	-1,.L915,0,.L1928-.L915
	.half	1
	.byte	100
	.word	0,0
.L1930:
	.word	-1,.L915,.L2180-.L915,.L1928-.L915
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_SetCaptureQueue')
	.sect	'.debug_loc'
.L900:
	.word	-1,.L901,0,.L1896-.L901
	.half	2
	.byte	138,0
	.word	0,0
.L1897:
	.word	-1,.L901,0,.L1896-.L901
	.half	1
	.byte	84
	.word	0,0
.L1898:
	.word	-1,.L901,0,.L1896-.L901
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_SetEventFail')
	.sect	'.debug_loc'
.L908:
	.word	-1,.L909,0,.L1910-.L909
	.half	2
	.byte	138,0
	.word	0,0
.L1911:
	.word	-1,.L909,0,.L2149-.L909
	.half	1
	.byte	84
	.word	.L2150-.L909,.L1910-.L909
	.half	1
	.byte	88
	.word	.L2153-.L909,.L2154-.L909
	.half	1
	.byte	84
	.word	.L2155-.L909,.L54-.L909
	.half	1
	.byte	84
	.word	.L2156-.L909,.L56-.L909
	.half	1
	.byte	84
	.word	0,0
.L1913:
	.word	-1,.L909,.L2152-.L909,.L1910-.L909
	.half	1
	.byte	90
	.word	.L2157-.L909,.L1910-.L909
	.half	1
	.byte	82
	.word	0,0
.L1912:
	.word	-1,.L909,.L2151-.L909,.L1910-.L909
	.half	1
	.byte	89
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_SetEventPass')
	.sect	'.debug_loc'
.L906:
	.word	-1,.L907,0,.L1906-.L907
	.half	2
	.byte	138,0
	.word	0,0
.L1907:
	.word	-1,.L907,0,.L39-.L907
	.half	1
	.byte	84
	.word	0,0
.L1908:
	.word	-1,.L907,.L2145-.L907,.L2146-.L907
	.half	1
	.byte	95
	.word	.L2146-.L907,.L1906-.L907
	.half	1
	.byte	88
	.word	.L2148-.L907,.L1906-.L907
	.half	1
	.byte	82
	.word	0,0
.L1909:
	.word	-1,.L907,.L2147-.L907,.L39-.L907
	.half	1
	.byte	81
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_SetEventStatus')
	.sect	'.debug_loc'
.L910:
	.word	-1,.L911,0,.L1914-.L911
	.half	2
	.byte	138,0
	.word	0,0
.L1922:
	.word	-1,.L911,.L2168-.L911,.L64-.L911
	.half	1
	.byte	81
	.word	0,0
.L1915:
	.word	-1,.L911,0,.L2158-.L911
	.half	1
	.byte	84
	.word	.L2159-.L911,.L1914-.L911
	.half	1
	.byte	88
	.word	.L61-.L911,.L2163-.L911
	.half	1
	.byte	84
	.word	.L2167-.L911,.L69-.L911
	.half	1
	.byte	84
	.word	.L63-.L911,.L2165-.L911
	.half	1
	.byte	84
	.word	.L78-.L911,.L2170-.L911
	.half	1
	.byte	84
	.word	.L80-.L911,.L62-.L911
	.half	1
	.byte	84
	.word	0,0
.L1921:
	.word	-1,.L911,.L2166-.L911,.L69-.L911
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1918:
	.word	-1,.L911,.L2161-.L911,.L2158-.L911
	.half	1
	.byte	90
	.word	.L2158-.L911,.L61-.L911
	.half	1
	.byte	82
	.word	.L2162-.L911,.L2163-.L911
	.half	1
	.byte	90
	.word	.L2163-.L911,.L68-.L911
	.half	1
	.byte	82
	.word	.L68-.L911,.L2165-.L911
	.half	1
	.byte	90
	.word	.L2165-.L911,.L78-.L911
	.half	1
	.byte	82
	.word	.L2169-.L911,.L2170-.L911
	.half	1
	.byte	90
	.word	.L2170-.L911,.L81-.L911
	.half	1
	.byte	82
	.word	.L81-.L911,.L59-.L911
	.half	1
	.byte	90
	.word	.L2173-.L911,.L2172-.L911
	.half	1
	.byte	86
	.word	.L2174-.L911,.L59-.L911
	.half	1
	.byte	86
	.word	0,0
.L1920:
	.word	-1,.L911,.L2164-.L911,.L64-.L911
	.half	1
	.byte	91
	.word	0,0
.L1917:
	.word	-1,.L911,.L2160-.L911,.L59-.L911
	.half	1
	.byte	89
	.word	.L2171-.L911,.L2172-.L911
	.half	1
	.byte	85
	.word	0,0
.L1916:
	.word	-1,.L911,0,.L2158-.L911
	.half	1
	.byte	85
	.word	.L61-.L911,.L2163-.L911
	.half	1
	.byte	85
	.word	.L63-.L911,.L2165-.L911
	.half	1
	.byte	85
	.word	.L78-.L911,.L2170-.L911
	.half	1
	.byte	85
	.word	.L80-.L911,.L62-.L911
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_StorageDataElement')
	.sect	'.debug_loc'
.L1950:
	.word	-1,.L923,0,.L2196-.L923
	.half	1
	.byte	100
	.word	.L2200-.L923,.L1946-.L923
	.half	1
	.byte	108
	.word	0,0
.L1948:
	.word	-1,.L923,0,.L2197-.L923
	.half	1
	.byte	85
	.word	.L2198-.L923,.L2199-.L923
	.half	1
	.byte	95
	.word	0,0
.L1951:
	.word	-1,.L923,.L2201-.L923,.L135-.L923
	.half	1
	.byte	88
	.word	.L2202-.L923,.L136-.L923
	.half	1
	.byte	88
	.word	0,0
.L922:
	.word	-1,.L923,0,.L1946-.L923
	.half	2
	.byte	138,0
	.word	0,0
.L1947:
	.word	-1,.L923,0,.L2196-.L923
	.half	1
	.byte	84
	.word	0,0
.L1952:
	.word	-1,.L923,.L2199-.L923,.L2204-.L923
	.half	1
	.byte	95
	.word	.L138-.L923,.L137-.L923
	.half	1
	.byte	95
	.word	0,0
.L1953:
	.word	-1,.L923,.L2203-.L923,.L136-.L923
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_UpdateExtData')
	.sect	'.debug_loc'
.L1989:
	.word	-1,.L931,.L2261-.L931,.L2262-.L931
	.half	1
	.byte	98
	.word	.L2273-.L931,.L173-.L931
	.half	1
	.byte	98
	.word	0,0
.L1984:
	.word	-1,.L931,.L2257-.L931,.L1981-.L931
	.half	1
	.byte	90
	.word	.L2278-.L931,.L1981-.L931
	.half	1
	.byte	82
	.word	0,0
.L1988:
	.word	-1,.L931,.L2270-.L931,.L2262-.L931
	.half	1
	.byte	85
	.word	.L2276-.L931,.L2277-.L931
	.half	1
	.byte	95
	.word	0,0
.L930:
	.word	-1,.L931,0,.L2256-.L931
	.half	2
	.byte	138,0
	.word	.L2256-.L931,.L1981-.L931
	.half	2
	.byte	138,8
	.word	.L1981-.L931,.L1981-.L931
	.half	2
	.byte	138,0
	.word	0,0
.L1990:
	.word	-1,.L931,.L2259-.L931,.L1981-.L931
	.half	1
	.byte	91
	.word	0,0
.L1982:
	.word	-1,.L931,0,.L175-.L931
	.half	1
	.byte	84
	.word	.L2257-.L931,.L2258-.L931
	.half	1
	.byte	88
	.word	.L2271-.L931,.L2272-.L931
	.half	1
	.byte	88
	.word	.L2272-.L931,.L2262-.L931
	.half	1
	.byte	84
	.word	0,0
.L1991:
	.word	-1,.L931,.L2260-.L931,.L175-.L931
	.half	1
	.byte	81
	.word	0,0
.L1985:
	.word	-1,.L931,.L2265-.L931,.L174-.L931
	.half	1
	.byte	94
	.word	0,0
.L1983:
	.word	-1,.L931,0,.L175-.L931
	.half	1
	.byte	85
	.word	.L2266-.L931,.L2267-.L931
	.half	1
	.byte	89
	.word	0,0
.L1986:
	.word	-1,.L931,.L2263-.L931,.L2264-.L931
	.half	1
	.byte	92
	.word	.L174-.L931,.L173-.L931
	.half	1
	.byte	92
	.word	0,0
.L1987:
	.word	-1,.L931,.L2268-.L931,.L2269-.L931
	.half	1
	.byte	95
	.word	.L180-.L931,.L177-.L931
	.half	1
	.byte	95
	.word	.L2274-.L931,.L2275-.L931
	.half	5
	.byte	144,32,157,32,0
	.word	.L183-.L931,.L182-.L931
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('DemInternal_UpdateFFData')
	.sect	'.debug_loc'
.L1977:
	.word	-1,.L929,.L2241-.L929,.L2242-.L929
	.half	1
	.byte	95
	.word	0,0
.L1974:
	.word	-1,.L929,.L2230-.L929,.L2231-.L929
	.half	1
	.byte	100
	.word	.L2247-.L929,.L154-.L929
	.half	1
	.byte	100
	.word	0,0
.L1969:
	.word	-1,.L929,.L2227-.L929,.L1966-.L929
	.half	1
	.byte	89
	.word	.L2255-.L929,.L1966-.L929
	.half	1
	.byte	82
	.word	0,0
.L1973:
	.word	-1,.L929,.L2244-.L929,.L2245-.L929
	.half	1
	.byte	85
	.word	.L2253-.L929,.L2254-.L929
	.half	1
	.byte	95
	.word	0,0
.L928:
	.word	-1,.L929,0,.L2224-.L929
	.half	2
	.byte	138,0
	.word	.L2224-.L929,.L1966-.L929
	.half	2
	.byte	138,8
	.word	.L1966-.L929,.L1966-.L929
	.half	2
	.byte	138,0
	.word	0,0
.L1976:
	.word	-1,.L929,.L2240-.L929,.L161-.L929
	.half	1
	.byte	94
	.word	.L2250-.L929,.L166-.L929
	.half	1
	.byte	83
	.word	0,0
.L1979:
	.word	-1,.L929,.L2228-.L929,.L1966-.L929
	.half	1
	.byte	90
	.word	0,0
.L1967:
	.word	-1,.L929,0,.L156-.L929
	.half	1
	.byte	84
	.word	.L2225-.L929,.L1966-.L929
	.half	1
	.byte	88
	.word	.L2246-.L929,.L2245-.L929
	.half	1
	.byte	84
	.word	0,0
.L1980:
	.word	-1,.L929,.L2229-.L929,.L156-.L929
	.half	1
	.byte	81
	.word	0,0
.L1970:
	.word	-1,.L929,.L2234-.L929,.L155-.L929
	.half	1
	.byte	92
	.word	0,0
.L1975:
	.word	-1,.L929,.L2235-.L929,.L162-.L929
	.half	5
	.byte	144,32,157,32,0
	.word	.L158-.L929,.L167-.L929
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1968:
	.word	-1,.L929,0,.L156-.L929
	.half	1
	.byte	85
	.word	.L2226-.L929,.L1966-.L929
	.half	2
	.byte	145,124
	.word	.L2236-.L929,.L2237-.L929
	.half	1
	.byte	95
	.word	0,0
.L1971:
	.word	-1,.L929,.L2232-.L929,.L2233-.L929
	.half	1
	.byte	91
	.word	.L155-.L929,.L154-.L929
	.half	1
	.byte	91
	.word	0,0
.L1972:
	.word	-1,.L929,.L2238-.L929,.L2239-.L929
	.half	1
	.byte	93
	.word	.L161-.L929,.L158-.L929
	.half	1
	.byte	93
	.word	.L2248-.L929,.L2249-.L929
	.half	1
	.byte	82
	.word	.L166-.L929,.L165-.L929
	.half	1
	.byte	82
	.word	0,0
.L1978:
	.word	-1,.L929,.L2242-.L929,.L2243-.L929
	.half	1
	.byte	95
	.word	.L163-.L929,.L161-.L929
	.half	1
	.byte	95
	.word	.L2251-.L929,.L2252-.L929
	.half	5
	.byte	144,32,157,32,0
	.word	.L168-.L929,.L166-.L929
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_ClearDTC')
	.sect	'.debug_loc'
.L1733:
	.word	-1,.L1013,0,.L2537-.L1013
	.half	1
	.byte	84
	.word	.L554-.L1013,.L556-.L1013
	.half	1
	.byte	84
	.word	.L562-.L1013,.L1731-.L1013
	.half	1
	.byte	84
	.word	0,0
.L1734:
	.word	-1,.L1013,0,.L2538-.L1013
	.half	1
	.byte	85
	.word	.L554-.L1013,.L556-.L1013
	.half	1
	.byte	85
	.word	.L562-.L1013,.L1731-.L1013
	.half	1
	.byte	85
	.word	0,0
.L1735:
	.word	-1,.L1013,0,.L2538-.L1013
	.half	1
	.byte	86
	.word	.L554-.L1013,.L556-.L1013
	.half	1
	.byte	86
	.word	.L562-.L1013,.L1731-.L1013
	.half	1
	.byte	86
	.word	0,0
.L1012:
	.word	-1,.L1013,0,.L1731-.L1013
	.half	2
	.byte	138,0
	.word	0,0
.L1737:
	.word	-1,.L1013,.L2540-.L1013,.L2541-.L1013
	.half	1
	.byte	95
	.word	.L549-.L1013,.L550-.L1013
	.half	1
	.byte	95
	.word	.L2542-.L1013,.L2538-.L1013
	.half	5
	.byte	144,32,157,32,0
	.word	.L2537-.L1013,.L2538-.L1013
	.half	1
	.byte	84
	.word	.L554-.L1013,.L551-.L1013
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1736:
	.word	-1,.L1013,.L2539-.L1013,.L2538-.L1013
	.half	1
	.byte	82
	.word	.L554-.L1013,.L556-.L1013
	.half	1
	.byte	82
	.word	.L2543-.L1013,.L1731-.L1013
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmCheckClearParameter')
	.sect	'.debug_loc'
.L1866:
	.word	-1,.L1069,0,.L1865-.L1069
	.half	1
	.byte	84
	.word	0,0
.L1867:
	.word	-1,.L1069,0,.L1865-.L1069
	.half	1
	.byte	85
	.word	0,0
.L1868:
	.word	-1,.L1069,0,.L1865-.L1069
	.half	1
	.byte	86
	.word	0,0
.L1068:
	.word	-1,.L1069,0,.L1865-.L1069
	.half	2
	.byte	138,0
	.word	0,0
.L1870:
	.word	-1,.L1069,.L2854-.L1069,.L2855-.L1069
	.half	5
	.byte	144,32,157,32,0
	.word	.L2855-.L1069,.L1865-.L1069
	.half	1
	.byte	95
	.word	0,0
.L1869:
	.word	-1,.L1069,.L2850-.L1069,.L841-.L1069
	.half	1
	.byte	82
	.word	.L2851-.L1069,.L843-.L1069
	.half	1
	.byte	82
	.word	.L2852-.L1069,.L847-.L1069
	.half	1
	.byte	82
	.word	.L2853-.L1069,.L1865-.L1069
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmClearDTC')
	.sect	'.debug_loc'
.L1872:
	.word	-1,.L1071,0,.L1871-.L1071
	.half	1
	.byte	84
	.word	0,0
.L1873:
	.word	-1,.L1071,0,.L1871-.L1071
	.half	1
	.byte	85
	.word	0,0
.L1874:
	.word	-1,.L1071,0,.L1871-.L1071
	.half	1
	.byte	86
	.word	0,0
.L1070:
	.word	-1,.L1071,0,.L1871-.L1071
	.half	2
	.byte	138,0
	.word	0,0
.L1875:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmControlDTCStatusChangedNotification')
	.sect	'.debug_loc'
.L1054:
	.word	-1,.L1055,0,.L2122-.L1055
	.half	2
	.byte	138,0
	.word	0,0
.L2123:
	.word	-1,.L1055,0,.L2122-.L1055
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmDisableDTCRecordUpdate')
	.sect	'.debug_loc'
.L1821:
	.word	-1,.L1057,0,.L2802-.L1057
	.half	1
	.byte	84
	.word	0,0
.L1822:
	.word	-1,.L1057,0,.L2802-.L1057
	.half	1
	.byte	85
	.word	0,0
.L1056:
	.word	-1,.L1057,0,.L2801-.L1057
	.half	2
	.byte	138,0
	.word	.L2801-.L1057,.L1820-.L1057
	.half	2
	.byte	138,8
	.word	.L1820-.L1057,.L1820-.L1057
	.half	2
	.byte	138,0
	.word	0,0
.L1824:
	.word	-1,.L1057,0,.L1820-.L1057
	.half	2
	.byte	145,120
	.word	0,0
.L1823:
	.word	-1,.L1057,.L2803-.L1057,.L1820-.L1057
	.half	1
	.byte	88
	.word	.L2804-.L1057,.L1820-.L1057
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmDisableDTCSetting')
	.sect	'.debug_loc'
.L1877:
	.word	-1,.L1073,0,.L2856-.L1073
	.half	1
	.byte	84
	.word	.L860-.L1073,.L1876-.L1073
	.half	1
	.byte	84
	.word	0,0
.L1878:
	.word	-1,.L1073,0,.L2857-.L1073
	.half	1
	.byte	85
	.word	.L860-.L1073,.L1876-.L1073
	.half	1
	.byte	85
	.word	0,0
.L1072:
	.word	-1,.L1073,0,.L1876-.L1073
	.half	2
	.byte	138,0
	.word	0,0
.L1879:
	.word	-1,.L1073,.L2858-.L1073,.L2859-.L1073
	.half	1
	.byte	82
	.word	.L2860-.L1073,.L860-.L1073
	.half	1
	.byte	83
	.word	.L2874-.L1073,.L1876-.L1073
	.half	1
	.byte	82
	.word	0,0
.L1880:
	.word	-1,.L1073,.L2861-.L1073,.L2862-.L1073
	.half	5
	.byte	144,32,157,32,0
	.word	.L2863-.L1073,.L2864-.L1073
	.half	5
	.byte	144,32,157,32,0
	.word	.L2865-.L1073,.L2866-.L1073
	.half	5
	.byte	144,32,157,32,0
	.word	.L864-.L1073,.L2867-.L1073
	.half	5
	.byte	144,32,157,32,0
	.word	.L2868-.L1073,.L2869-.L1073
	.half	5
	.byte	144,32,157,32,0
	.word	.L866-.L1073,.L2870-.L1073
	.half	5
	.byte	144,32,157,32,0
	.word	.L2871-.L1073,.L2872-.L1073
	.half	5
	.byte	144,32,157,32,0
	.word	.L873-.L1073,.L2873-.L1073
	.half	5
	.byte	144,32,157,32,0
	.word	.L872-.L1073,.L1876-.L1073
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmEnableDTCRecordUpdate')
	.sect	'.debug_loc'
.L1058:
	.word	-1,.L1059,0,.L1825-.L1059
	.half	2
	.byte	138,0
	.word	0,0
.L1826:
	.word	-1,.L1059,.L2805-.L1059,.L802-.L1059
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmEnableDTCSetting')
	.sect	'.debug_loc'
.L1882:
	.word	-1,.L1075,0,.L1881-.L1075
	.half	1
	.byte	84
	.word	0,0
.L1883:
	.word	-1,.L1075,0,.L1881-.L1075
	.half	1
	.byte	85
	.word	0,0
.L1074:
	.word	-1,.L1075,0,.L1881-.L1075
	.half	2
	.byte	138,0
	.word	0,0
.L1884:
	.word	-1,.L1075,.L2875-.L1075,.L1881-.L1075
	.half	1
	.byte	82
	.word	0,0
.L1885:
	.word	-1,.L1075,.L2876-.L1075,.L880-.L1075
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmGetDTCByOccurrenceTime')
	.sect	'.debug_loc'
.L1817:
	.word	-1,.L1053,0,.L1815-.L1053
	.half	1
	.byte	100
	.word	0,0
.L1816:
	.word	-1,.L1053,0,.L1815-.L1053
	.half	1
	.byte	84
	.word	0,0
.L1052:
	.word	-1,.L1053,0,.L1815-.L1053
	.half	2
	.byte	138,0
	.word	0,0
.L1819:
	.word	-1,.L1053,.L2800-.L1053,.L1815-.L1053
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1818:
	.word	-1,.L1053,.L2799-.L1053,.L1815-.L1053
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmGetDTCStatusAvailabilityMask')
	.sect	'.debug_loc'
.L1747:
	.word	-1,.L1031,0,.L1746-.L1031
	.half	1
	.byte	100
	.word	0,0
.L1030:
	.word	-1,.L1031,0,.L1746-.L1031
	.half	2
	.byte	138,0
	.word	0,0
.L1748:
	.word	-1,.L1031,.L2735-.L1031,.L1746-.L1031
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmGetExtendedDataRecordByDTC')
	.sect	'.debug_loc'
.L1851:
	.word	-1,.L1065,0,.L2829-.L1065
	.half	1
	.byte	101
	.word	.L2833-.L1065,.L2834-.L1065
	.half	1
	.byte	111
	.word	.L2841-.L1065,.L2840-.L1065
	.half	1
	.byte	100
	.word	.L834-.L1065,.L833-.L1065
	.half	1
	.byte	111
	.word	0,0
.L1847:
	.word	-1,.L1065,0,.L2829-.L1065
	.half	1
	.byte	84
	.word	.L2837-.L1065,.L2838-.L1065
	.half	1
	.byte	88
	.word	0,0
.L1848:
	.word	-1,.L1065,0,.L2829-.L1065
	.half	1
	.byte	85
	.word	.L2837-.L1065,.L2838-.L1065
	.half	1
	.byte	89
	.word	0,0
.L1064:
	.word	-1,.L1065,0,.L2828-.L1065
	.half	2
	.byte	138,0
	.word	.L2828-.L1065,.L1846-.L1065
	.half	2
	.byte	138,8
	.word	.L1846-.L1065,.L1846-.L1065
	.half	2
	.byte	138,0
	.word	0,0
.L1850:
	.word	-1,.L1065,0,.L2830-.L1065
	.half	1
	.byte	100
	.word	.L2832-.L1065,.L1846-.L1065
	.half	1
	.byte	108
	.word	.L2844-.L1065,.L2845-.L1065
	.half	1
	.byte	100
	.word	.L2846-.L1065,.L2847-.L1065
	.half	1
	.byte	100
	.word	0,0
.L1857:
	.word	0,0
.L1855:
	.word	-1,.L1065,0,.L1846-.L1065
	.half	2
	.byte	145,122
	.word	0,0
.L1854:
	.word	-1,.L1065,0,.L1846-.L1065
	.half	2
	.byte	145,120
	.word	0,0
.L1849:
	.word	-1,.L1065,0,.L2829-.L1065
	.half	1
	.byte	86
	.word	.L2831-.L1065,.L1846-.L1065
	.half	1
	.byte	90
	.word	.L2839-.L1065,.L2840-.L1065
	.half	1
	.byte	86
	.word	0,0
.L1852:
	.word	-1,.L1065,.L2835-.L1065,.L1846-.L1065
	.half	1
	.byte	92
	.word	.L2848-.L1065,.L1846-.L1065
	.half	1
	.byte	82
	.word	0,0
.L1856:
	.word	-1,.L1065,.L2836-.L1065,.L825-.L1065
	.half	1
	.byte	91
	.word	.L826-.L1065,.L824-.L1065
	.half	1
	.byte	91
	.word	.L2842-.L1065,.L2843-.L1065
	.half	1
	.byte	91
	.word	.L2846-.L1065,.L2847-.L1065
	.half	1
	.byte	84
	.word	0,0
.L1853:
	.word	-1,.L1065,.L2840-.L1065,.L825-.L1065
	.half	1
	.byte	82
	.word	.L826-.L1065,.L824-.L1065
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmGetFreezeFrameDataByDTC')
	.sect	'.debug_loc'
.L1832:
	.word	-1,.L1061,0,.L2807-.L1061
	.half	1
	.byte	101
	.word	.L2811-.L1061,.L2812-.L1061
	.half	1
	.byte	111
	.word	.L2819-.L1061,.L2818-.L1061
	.half	1
	.byte	100
	.word	.L817-.L1061,.L816-.L1061
	.half	1
	.byte	111
	.word	0,0
.L1828:
	.word	-1,.L1061,0,.L2807-.L1061
	.half	1
	.byte	84
	.word	.L2815-.L1061,.L2816-.L1061
	.half	1
	.byte	88
	.word	0,0
.L1829:
	.word	-1,.L1061,0,.L2807-.L1061
	.half	1
	.byte	85
	.word	.L2815-.L1061,.L2816-.L1061
	.half	1
	.byte	89
	.word	0,0
.L1060:
	.word	-1,.L1061,0,.L2806-.L1061
	.half	2
	.byte	138,0
	.word	.L2806-.L1061,.L1827-.L1061
	.half	2
	.byte	138,8
	.word	.L1827-.L1061,.L1827-.L1061
	.half	2
	.byte	138,0
	.word	0,0
.L1831:
	.word	-1,.L1061,0,.L2808-.L1061
	.half	1
	.byte	100
	.word	.L2810-.L1061,.L1827-.L1061
	.half	1
	.byte	108
	.word	.L2822-.L1061,.L2823-.L1061
	.half	1
	.byte	100
	.word	.L2824-.L1061,.L2825-.L1061
	.half	1
	.byte	100
	.word	0,0
.L1838:
	.word	0,0
.L1836:
	.word	-1,.L1061,0,.L1827-.L1061
	.half	2
	.byte	145,122
	.word	0,0
.L1835:
	.word	-1,.L1061,0,.L1827-.L1061
	.half	2
	.byte	145,120
	.word	0,0
.L1830:
	.word	-1,.L1061,0,.L2807-.L1061
	.half	1
	.byte	86
	.word	.L2809-.L1061,.L1827-.L1061
	.half	1
	.byte	90
	.word	.L2817-.L1061,.L2818-.L1061
	.half	1
	.byte	86
	.word	0,0
.L1833:
	.word	-1,.L1061,.L2813-.L1061,.L1827-.L1061
	.half	1
	.byte	92
	.word	.L2826-.L1061,.L1827-.L1061
	.half	1
	.byte	82
	.word	0,0
.L1837:
	.word	-1,.L1061,.L2814-.L1061,.L808-.L1061
	.half	1
	.byte	91
	.word	.L809-.L1061,.L807-.L1061
	.half	1
	.byte	91
	.word	.L2820-.L1061,.L2821-.L1061
	.half	1
	.byte	91
	.word	.L2824-.L1061,.L2825-.L1061
	.half	1
	.byte	84
	.word	0,0
.L1834:
	.word	-1,.L1061,.L2818-.L1061,.L808-.L1061
	.half	1
	.byte	82
	.word	.L809-.L1061,.L807-.L1061
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmGetFunctionalUnitOfDTC')
	.sect	'.debug_loc'
.L1762:
	.word	-1,.L1037,0,.L2751-.L1037
	.half	1
	.byte	84
	.word	0,0
.L1763:
	.word	-1,.L1037,0,.L2752-.L1037
	.half	1
	.byte	100
	.word	.L2753-.L1037,.L1761-.L1037
	.half	1
	.byte	108
	.word	0,0
.L1036:
	.word	-1,.L1037,0,.L2750-.L1037
	.half	2
	.byte	138,0
	.word	.L2750-.L1037,.L1761-.L1037
	.half	2
	.byte	138,8
	.word	.L1761-.L1037,.L1761-.L1037
	.half	2
	.byte	138,0
	.word	0,0
.L1765:
	.word	-1,.L1037,0,.L1761-.L1037
	.half	2
	.byte	145,120
	.word	0,0
.L1764:
	.word	-1,.L1037,.L2754-.L1037,.L1761-.L1037
	.half	1
	.byte	88
	.word	.L2755-.L1037,.L1761-.L1037
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmGetNextFilteredDTC')
	.sect	'.debug_loc'
.L1781:
	.word	-1,.L1043,0,.L1780-.L1043
	.half	1
	.byte	100
	.word	0,0
.L1782:
	.word	-1,.L1043,0,.L1780-.L1043
	.half	1
	.byte	101
	.word	0,0
.L1042:
	.word	-1,.L1043,0,.L1780-.L1043
	.half	2
	.byte	138,0
	.word	0,0
.L1784:
	.word	-1,.L1043,.L2764-.L1043,.L2765-.L1043
	.half	1
	.byte	95
	.word	0,0
.L1783:
	.word	-1,.L1043,.L2763-.L1043,.L1780-.L1043
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmGetNextFilteredDTCAndFDC')
	.sect	'.debug_loc'
.L1786:
	.word	-1,.L1045,0,.L2766-.L1045
	.half	1
	.byte	100
	.word	.L733-.L1045,.L735-.L1045
	.half	1
	.byte	100
	.word	0,0
.L1787:
	.word	-1,.L1045,0,.L2767-.L1045
	.half	1
	.byte	101
	.word	.L2766-.L1045,.L2767-.L1045
	.half	1
	.byte	100
	.word	.L733-.L1045,.L735-.L1045
	.half	1
	.byte	101
	.word	0,0
.L1044:
	.word	-1,.L1045,0,.L1785-.L1045
	.half	2
	.byte	138,0
	.word	0,0
.L1789:
	.word	-1,.L1045,.L2770-.L1045,.L2767-.L1045
	.half	1
	.byte	82
	.word	.L733-.L1045,.L2771-.L1045
	.half	1
	.byte	82
	.word	.L742-.L1045,.L2772-.L1045
	.half	1
	.byte	82
	.word	.L745-.L1045,.L735-.L1045
	.half	1
	.byte	82
	.word	0,0
.L1788:
	.word	-1,.L1045,.L2768-.L1045,.L1785-.L1045
	.half	1
	.byte	88
	.word	.L2769-.L1045,.L727-.L1045
	.half	1
	.byte	95
	.word	.L2773-.L1045,.L1785-.L1045
	.half	1
	.byte	82
	.word	0,0
.L1790:
	.word	-1,.L1045,.L2767-.L1045,.L733-.L1045
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmGetNextFilteredDTCAndSeverity')
	.sect	'.debug_loc'
.L1792:
	.word	-1,.L1047,0,.L1791-.L1047
	.half	1
	.byte	100
	.word	0,0
.L1795:
	.word	-1,.L1047,0,.L1791-.L1047
	.half	1
	.byte	103
	.word	0,0
.L1794:
	.word	-1,.L1047,0,.L1791-.L1047
	.half	1
	.byte	102
	.word	0,0
.L1793:
	.word	-1,.L1047,0,.L1791-.L1047
	.half	1
	.byte	101
	.word	0,0
.L1046:
	.word	-1,.L1047,0,.L1791-.L1047
	.half	2
	.byte	138,0
	.word	0,0
.L1797:
	.word	-1,.L1047,.L2775-.L1047,.L2776-.L1047
	.half	1
	.byte	95
	.word	0,0
.L1796:
	.word	-1,.L1047,.L2774-.L1047,.L1791-.L1047
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmGetNextFilteredRecord')
	.sect	'.debug_loc'
.L1809:
	.word	-1,.L1051,0,.L2790-.L1051
	.half	1
	.byte	100
	.word	.L2791-.L1051,.L1808-.L1051
	.half	1
	.byte	108
	.word	0,0
.L1050:
	.word	-1,.L1051,0,.L2789-.L1051
	.half	2
	.byte	138,0
	.word	.L2789-.L1051,.L1808-.L1051
	.half	2
	.byte	138,8
	.word	.L1808-.L1051,.L1808-.L1051
	.half	2
	.byte	138,0
	.word	0,0
.L1812:
	.word	-1,.L1051,.L2794-.L1051,.L2795-.L1051
	.half	5
	.byte	144,32,157,32,0
	.word	.L2796-.L1051,.L2797-.L1051
	.half	1
	.byte	95
	.word	0,0
.L1814:
	.word	-1,.L1051,0,.L1808-.L1051
	.half	2
	.byte	145,122
	.word	0,0
.L1810:
	.word	-1,.L1051,0,.L777-.L1051
	.half	1
	.byte	101
	.word	.L2792-.L1051,.L1808-.L1051
	.half	1
	.byte	109
	.word	0,0
.L1811:
	.word	-1,.L1051,.L2793-.L1051,.L1808-.L1051
	.half	1
	.byte	88
	.word	.L2798-.L1051,.L1808-.L1051
	.half	1
	.byte	82
	.word	0,0
.L1813:
	.word	-1,.L1051,0,.L1808-.L1051
	.half	2
	.byte	145,120
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmGetNumberOfFilteredDTC')
	.sect	'.debug_loc'
.L1040:
	.word	-1,.L1041,0,.L1777-.L1041
	.half	2
	.byte	138,0
	.word	0,0
.L1778:
	.word	-1,.L1041,0,.L1777-.L1041
	.half	1
	.byte	100
	.word	0,0
.L1779:
	.word	-1,.L1041,.L2762-.L1041,.L1777-.L1041
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmGetSeverityOfDTC')
	.sect	'.debug_loc'
.L1756:
	.word	-1,.L1035,0,.L2745-.L1035
	.half	1
	.byte	84
	.word	0,0
.L1758:
	.word	-1,.L1035,0,.L2746-.L1035
	.half	1
	.byte	100
	.word	.L2747-.L1035,.L1755-.L1035
	.half	1
	.byte	108
	.word	0,0
.L1034:
	.word	-1,.L1035,0,.L2744-.L1035
	.half	2
	.byte	138,0
	.word	.L2744-.L1035,.L1755-.L1035
	.half	2
	.byte	138,8
	.word	.L1755-.L1035,.L1755-.L1035
	.half	2
	.byte	138,0
	.word	0,0
.L1760:
	.word	-1,.L1035,0,.L1755-.L1035
	.half	2
	.byte	145,120
	.word	0,0
.L1759:
	.word	-1,.L1035,.L2748-.L1035,.L1755-.L1035
	.half	1
	.byte	88
	.word	.L2749-.L1035,.L1755-.L1035
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmGetSizeOfExtendedDataRecordByDTC')
	.sect	'.debug_loc'
.L1859:
	.word	-1,.L1067,0,.L1858-.L1067
	.half	1
	.byte	84
	.word	0,0
.L1860:
	.word	-1,.L1067,0,.L1858-.L1067
	.half	1
	.byte	85
	.word	0,0
.L1066:
	.word	-1,.L1067,0,.L2849-.L1067
	.half	2
	.byte	138,0
	.word	.L2849-.L1067,.L1858-.L1067
	.half	2
	.byte	138,8
	.word	.L1858-.L1067,.L1858-.L1067
	.half	2
	.byte	138,0
	.word	0,0
.L1864:
	.word	-1,.L1067,0,.L1858-.L1067
	.half	2
	.byte	145,120
	.word	0,0
.L1861:
	.word	-1,.L1067,0,.L1858-.L1067
	.half	1
	.byte	86
	.word	0,0
.L1863:
	.word	0,0
.L1862:
	.word	-1,.L1067,0,.L1858-.L1067
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmGetSizeOfFreezeFrameByDTC')
	.sect	'.debug_loc'
.L1840:
	.word	-1,.L1063,0,.L1839-.L1063
	.half	1
	.byte	84
	.word	0,0
.L1841:
	.word	-1,.L1063,0,.L1839-.L1063
	.half	1
	.byte	85
	.word	0,0
.L1062:
	.word	-1,.L1063,0,.L2827-.L1063
	.half	2
	.byte	138,0
	.word	.L2827-.L1063,.L1839-.L1063
	.half	2
	.byte	138,8
	.word	.L1839-.L1063,.L1839-.L1063
	.half	2
	.byte	138,0
	.word	0,0
.L1845:
	.word	-1,.L1063,0,.L1839-.L1063
	.half	2
	.byte	145,120
	.word	0,0
.L1842:
	.word	-1,.L1063,0,.L1839-.L1063
	.half	1
	.byte	86
	.word	0,0
.L1844:
	.word	0,0
.L1843:
	.word	-1,.L1063,0,.L1839-.L1063
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmGetStatusOfDTC')
	.sect	'.debug_loc'
.L1750:
	.word	-1,.L1033,0,.L2737-.L1033
	.half	1
	.byte	84
	.word	0,0
.L1751:
	.word	-1,.L1033,0,.L2737-.L1033
	.half	1
	.byte	85
	.word	.L2739-.L1033,.L2740-.L1033
	.half	1
	.byte	95
	.word	.L682-.L1033,.L678-.L1033
	.half	1
	.byte	95
	.word	0,0
.L1752:
	.word	-1,.L1033,0,.L2738-.L1033
	.half	1
	.byte	100
	.word	.L2741-.L1033,.L1749-.L1033
	.half	1
	.byte	111
	.word	0,0
.L1032:
	.word	-1,.L1033,0,.L2736-.L1033
	.half	2
	.byte	138,0
	.word	.L2736-.L1033,.L1749-.L1033
	.half	2
	.byte	138,8
	.word	.L1749-.L1033,.L1749-.L1033
	.half	2
	.byte	138,0
	.word	0,0
.L1754:
	.word	-1,.L1033,0,.L1749-.L1033
	.half	2
	.byte	145,120
	.word	0,0
.L1753:
	.word	-1,.L1033,.L2742-.L1033,.L1749-.L1033
	.half	1
	.byte	88
	.word	.L2743-.L1033,.L1749-.L1033
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmGetTranslationType')
	.sect	'.debug_loc'
.L1028:
	.word	-1,.L1029,0,.L1745-.L1029
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmSetDTCFilter')
	.sect	'.debug_loc'
.L1769:
	.word	-1,.L1039,0,.L2756-.L1039
	.half	1
	.byte	86
	.word	.L2757-.L1039,.L707-.L1039
	.half	1
	.byte	95
	.word	0,0
.L1768:
	.word	-1,.L1039,0,.L1766-.L1039
	.half	1
	.byte	85
	.word	0,0
.L1770:
	.word	-1,.L1039,0,.L1766-.L1039
	.half	1
	.byte	87
	.word	0,0
.L1772:
	.word	-1,.L1039,0,.L1766-.L1039
	.half	2
	.byte	145,4
	.word	.L2756-.L1039,.L1766-.L1039
	.half	1
	.byte	86
	.word	0,0
.L1767:
	.word	-1,.L1039,0,.L1766-.L1039
	.half	1
	.byte	84
	.word	0,0
.L1038:
	.word	-1,.L1039,0,.L1766-.L1039
	.half	2
	.byte	138,0
	.word	0,0
.L1775:
	.word	-1,.L1039,.L2760-.L1039,.L697-.L1039
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1773:
	.word	-1,.L1039,0,.L1766-.L1039
	.half	2
	.byte	145,8
	.word	.L2759-.L1039,.L2760-.L1039
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L1771:
	.word	-1,.L1039,0,.L1766-.L1039
	.half	2
	.byte	145,0
	.word	.L2758-.L1039,.L1766-.L1039
	.half	1
	.byte	83
	.word	0,0
.L1774:
	.word	-1,.L1039,.L2761-.L1039,.L707-.L1039
	.half	1
	.byte	82
	.word	.L697-.L1039,.L1766-.L1039
	.half	1
	.byte	82
	.word	0,0
.L1776:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_DcmSetFreezeFrameRecordFilter')
	.sect	'.debug_loc'
.L1804:
	.word	-1,.L1049,.L2785-.L1049,.L2786-.L1049
	.half	1
	.byte	84
	.word	0,0
.L1799:
	.word	-1,.L1049,0,.L763-.L1049
	.half	1
	.byte	84
	.word	0,0
.L1048:
	.word	-1,.L1049,0,.L2777-.L1049
	.half	2
	.byte	138,0
	.word	.L2777-.L1049,.L1798-.L1049
	.half	2
	.byte	138,8
	.word	.L1798-.L1049,.L1798-.L1049
	.half	2
	.byte	138,0
	.word	0,0
.L1807:
	.word	-1,.L1049,0,.L1798-.L1049
	.half	2
	.byte	145,122
	.word	0,0
.L1800:
	.word	-1,.L1049,0,.L763-.L1049
	.half	1
	.byte	100
	.word	.L2778-.L1049,.L1798-.L1049
	.half	1
	.byte	108
	.word	0,0
.L1805:
	.word	-1,.L1049,.L2787-.L1049,.L2786-.L1049
	.half	1
	.byte	86
	.word	0,0
.L1801:
	.word	-1,.L1049,.L2779-.L1049,.L1798-.L1049
	.half	1
	.byte	90
	.word	.L2780-.L1049,.L2781-.L1049
	.half	1
	.byte	95
	.word	.L2788-.L1049,.L1798-.L1049
	.half	1
	.byte	82
	.word	0,0
.L1806:
	.word	-1,.L1049,0,.L1798-.L1049
	.half	2
	.byte	145,120
	.word	0,0
.L1802:
	.word	-1,.L1049,.L2782-.L1049,.L761-.L1049
	.half	1
	.byte	88
	.word	0,0
.L1803:
	.word	-1,.L1049,.L2783-.L1049,.L2784-.L1049
	.half	1
	.byte	92
	.word	.L767-.L1049,.L764-.L1049
	.half	1
	.byte	92
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_GetComponentFailed')
	.sect	'.debug_loc'
.L1646:
	.word	-1,.L981,0,.L1643-.L981
	.half	1
	.byte	100
	.word	0,0
.L1644:
	.word	-1,.L981,0,.L1643-.L981
	.half	1
	.byte	84
	.word	0,0
.L980:
	.word	-1,.L981,0,.L1643-.L981
	.half	2
	.byte	138,0
	.word	0,0
.L1647:
	.word	-1,.L981,.L2505-.L981,.L1643-.L981
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_GetDTCOfEvent')
	.sect	'.debug_loc'
.L1670:
	.word	-1,.L991,0,.L1668-.L991
	.half	1
	.byte	85
	.word	0,0
.L1672:
	.word	-1,.L991,0,.L1668-.L991
	.half	1
	.byte	100
	.word	0,0
.L990:
	.word	-1,.L991,0,.L1668-.L991
	.half	2
	.byte	138,0
	.word	0,0
.L1669:
	.word	-1,.L991,0,.L1668-.L991
	.half	1
	.byte	84
	.word	0,0
.L1673:
	.word	-1,.L991,.L2514-.L991,.L1668-.L991
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_GetDebouncingOfEvent')
	.sect	'.debug_loc'
.L1666:
	.word	-1,.L989,0,.L1663-.L989
	.half	1
	.byte	100
	.word	0,0
.L988:
	.word	-1,.L989,0,.L1663-.L989
	.half	2
	.byte	138,0
	.word	0,0
.L1664:
	.word	-1,.L989,0,.L1663-.L989
	.half	1
	.byte	84
	.word	0,0
.L1667:
	.word	-1,.L989,.L2513-.L989,.L1663-.L989
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_GetEventExtendedDataRecord')
	.sect	'.debug_loc'
.L1712:
	.word	-1,.L1003,0,.L1707-.L1003
	.half	2
	.byte	145,120
	.word	0,0
.L1002:
	.word	-1,.L1003,0,.L2531-.L1003
	.half	2
	.byte	138,0
	.word	.L2531-.L1003,.L514-.L1003
	.half	2
	.byte	138,8
	.word	.L514-.L1003,.L514-.L1003
	.half	2
	.byte	138,0
	.word	.L514-.L1003,.L1707-.L1003
	.half	2
	.byte	138,8
	.word	.L1707-.L1003,.L1707-.L1003
	.half	2
	.byte	138,0
	.word	0,0
.L1710:
	.word	-1,.L1003,0,.L1707-.L1003
	.half	1
	.byte	100
	.word	0,0
.L1708:
	.word	-1,.L1003,0,.L1707-.L1003
	.half	1
	.byte	84
	.word	0,0
.L1709:
	.word	-1,.L1003,0,.L1707-.L1003
	.half	1
	.byte	85
	.word	0,0
.L1711:
	.word	-1,.L1003,.L2532-.L1003,.L1707-.L1003
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_GetEventExtendedDataRecordEx')
	.sect	'.debug_loc'
.L1717:
	.word	-1,.L1005,0,.L1713-.L1005
	.half	1
	.byte	101
	.word	0,0
.L1004:
	.word	-1,.L1005,0,.L1713-.L1005
	.half	2
	.byte	138,0
	.word	0,0
.L1716:
	.word	-1,.L1005,0,.L1713-.L1005
	.half	1
	.byte	100
	.word	0,0
.L1714:
	.word	-1,.L1005,0,.L1713-.L1005
	.half	1
	.byte	84
	.word	0,0
.L1715:
	.word	-1,.L1005,0,.L1713-.L1005
	.half	1
	.byte	85
	.word	0,0
.L1718:
	.word	-1,.L1005,.L2533-.L1005,.L1713-.L1005
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_GetEventFailed')
	.sect	'.debug_loc'
.L984:
	.word	-1,.L985,0,.L1653-.L985
	.half	2
	.byte	138,0
	.word	0,0
.L1655:
	.word	-1,.L985,0,.L1653-.L985
	.half	1
	.byte	100
	.word	0,0
.L1654:
	.word	-1,.L985,0,.L1653-.L985
	.half	1
	.byte	84
	.word	0,0
.L1656:
	.word	-1,.L985,.L2507-.L985,.L1653-.L985
	.half	1
	.byte	82
	.word	0,0
.L1657:
	.word	-1,.L985,.L2508-.L985,.L2509-.L985
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_GetEventFreezeFrameData')
	.sect	'.debug_loc'
.L1694:
	.word	-1,.L999,0,.L1690-.L999
	.half	1
	.byte	87
	.word	.L2528-.L999,.L499-.L999
	.half	1
	.byte	86
	.word	0,0
.L1698:
	.word	-1,.L999,0,.L1690-.L999
	.half	2
	.byte	145,120
	.word	0,0
.L998:
	.word	-1,.L999,0,.L2527-.L999
	.half	2
	.byte	138,0
	.word	.L2527-.L999,.L502-.L999
	.half	2
	.byte	138,8
	.word	.L502-.L999,.L502-.L999
	.half	2
	.byte	138,0
	.word	.L502-.L999,.L1690-.L999
	.half	2
	.byte	138,8
	.word	.L1690-.L999,.L1690-.L999
	.half	2
	.byte	138,0
	.word	0,0
.L1696:
	.word	-1,.L999,0,.L1690-.L999
	.half	1
	.byte	100
	.word	0,0
.L1691:
	.word	-1,.L999,0,.L1690-.L999
	.half	1
	.byte	84
	.word	0,0
.L1692:
	.word	-1,.L999,0,.L1690-.L999
	.half	1
	.byte	85
	.word	0,0
.L1693:
	.word	-1,.L999,0,.L2528-.L999
	.half	1
	.byte	86
	.word	.L499-.L999,.L1690-.L999
	.half	1
	.byte	86
	.word	0,0
.L1697:
	.word	-1,.L999,.L2529-.L999,.L1690-.L999
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_GetEventFreezeFrameDataEx')
	.sect	'.debug_loc'
.L1705:
	.word	-1,.L1001,0,.L1699-.L1001
	.half	1
	.byte	101
	.word	0,0
.L1702:
	.word	-1,.L1001,0,.L1699-.L1001
	.half	1
	.byte	86
	.word	0,0
.L1000:
	.word	-1,.L1001,0,.L1699-.L1001
	.half	2
	.byte	138,0
	.word	0,0
.L1703:
	.word	-1,.L1001,0,.L1699-.L1001
	.half	1
	.byte	100
	.word	0,0
.L1700:
	.word	-1,.L1001,0,.L1699-.L1001
	.half	1
	.byte	84
	.word	0,0
.L1701:
	.word	-1,.L1001,0,.L1699-.L1001
	.half	1
	.byte	85
	.word	0,0
.L1706:
	.word	-1,.L1001,.L2530-.L1001,.L1699-.L1001
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_GetEventInternalData')
	.sect	'.debug_loc'
.L1742:
	.word	-1,.L1017,0,.L2544-.L1017
	.half	1
	.byte	85
	.word	0,0
.L1743:
	.word	-1,.L1017,0,.L2544-.L1017
	.half	1
	.byte	100
	.word	.L2545-.L1017,.L1739-.L1017
	.half	1
	.byte	111
	.word	0,0
.L1016:
	.word	-1,.L1017,0,.L1739-.L1017
	.half	2
	.byte	138,0
	.word	0,0
.L1740:
	.word	-1,.L1017,0,.L2544-.L1017
	.half	1
	.byte	84
	.word	0,0
.L1744:
	.word	-1,.L1017,.L2546-.L1017,.L2544-.L1017
	.half	1
	.byte	82
	.word	.L568-.L1017,.L1739-.L1017
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_GetEventMemoryOverflow')
	.sect	'.debug_loc'
.L1720:
	.word	-1,.L1007,0,.L1719-.L1007
	.half	1
	.byte	84
	.word	0,0
.L1006:
	.word	-1,.L1007,0,.L1719-.L1007
	.half	2
	.byte	138,0
	.word	0,0
.L1721:
	.word	-1,.L1007,0,.L1719-.L1007
	.half	1
	.byte	100
	.word	0,0
.L1722:
	.word	-1,.L1007,.L2534-.L1007,.L1719-.L1007
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_GetEventStatus')
	.sect	'.debug_loc'
.L982:
	.word	-1,.L983,0,.L1648-.L983
	.half	2
	.byte	138,0
	.word	0,0
.L1649:
	.word	-1,.L983,0,.L1648-.L983
	.half	1
	.byte	84
	.word	0,0
.L1651:
	.word	-1,.L983,0,.L1648-.L983
	.half	1
	.byte	100
	.word	0,0
.L1652:
	.word	-1,.L983,.L2506-.L983,.L1648-.L983
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_GetEventTested')
	.sect	'.debug_loc'
.L986:
	.word	-1,.L987,0,.L1658-.L987
	.half	2
	.byte	138,0
	.word	0,0
.L1659:
	.word	-1,.L987,0,.L1658-.L987
	.half	1
	.byte	84
	.word	0,0
.L1660:
	.word	-1,.L987,0,.L1658-.L987
	.half	1
	.byte	100
	.word	0,0
.L1661:
	.word	-1,.L987,.L2510-.L987,.L1658-.L987
	.half	1
	.byte	82
	.word	0,0
.L1662:
	.word	-1,.L987,.L2511-.L987,.L2512-.L987
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_GetFaultDetectionCounter')
	.sect	'.debug_loc'
.L994:
	.word	-1,.L995,0,.L1680-.L995
	.half	2
	.byte	138,0
	.word	0,0
.L1681:
	.word	-1,.L995,0,.L2523-.L995
	.half	1
	.byte	84
	.word	.L489-.L995,.L2525-.L995
	.half	1
	.byte	84
	.word	.L492-.L995,.L1680-.L995
	.half	1
	.byte	84
	.word	0,0
.L1683:
	.word	-1,.L995,0,.L1680-.L995
	.half	1
	.byte	100
	.word	0,0
.L1684:
	.word	-1,.L995,.L2524-.L995,.L1680-.L995
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_GetIndicatorStatus')
	.sect	'.debug_loc'
.L996:
	.word	-1,.L997,0,.L1685-.L997
	.half	2
	.byte	138,0
	.word	0,0
.L1686:
	.word	-1,.L997,0,.L1685-.L997
	.half	1
	.byte	84
	.word	0,0
.L1688:
	.word	-1,.L997,0,.L1685-.L997
	.half	1
	.byte	100
	.word	0,0
.L1689:
	.word	-1,.L997,.L2526-.L997,.L1685-.L997
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_GetNumberOfEventMemoryEntries')
	.sect	'.debug_loc'
.L1724:
	.word	-1,.L1009,0,.L1723-.L1009
	.half	1
	.byte	84
	.word	0,0
.L1008:
	.word	-1,.L1009,0,.L1723-.L1009
	.half	2
	.byte	138,0
	.word	0,0
.L1725:
	.word	-1,.L1009,0,.L1723-.L1009
	.half	1
	.byte	100
	.word	0,0
.L1726:
	.word	-1,.L1009,.L2535-.L1009,.L1723-.L1009
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_GetOperationCycleState')
	.sect	'.debug_loc'
.L1634:
	.word	-1,.L975,0,.L1631-.L975
	.half	1
	.byte	100
	.word	0,0
.L974:
	.word	-1,.L975,0,.L1631-.L975
	.half	2
	.byte	138,0
	.word	0,0
.L1632:
	.word	-1,.L975,0,.L1631-.L975
	.half	1
	.byte	84
	.word	0,0
.L1635:
	.word	-1,.L975,.L2503-.L975,.L1631-.L975
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_GetVersionInfo')
	.sect	'.debug_loc'
.L956:
	.word	-1,.L957,0,.L1595-.L957
	.half	2
	.byte	138,0
	.word	0,0
.L1597:
	.word	-1,.L957,0,.L1595-.L957
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_Init')
	.sect	'.debug_loc'
.L1603:
	.word	-1,.L961,0,.L2470-.L961
	.half	1
	.byte	100
	.word	0,0
.L960:
	.word	-1,.L961,0,.L1601-.L961
	.half	2
	.byte	138,0
	.word	0,0
.L1604:
	.word	-1,.L961,.L2471-.L961,.L2472-.L961
	.half	1
	.byte	95
	.word	.L2472-.L961,.L2473-.L961
	.half	1
	.byte	88
	.word	.L2474-.L961,.L2475-.L961
	.half	1
	.byte	84
	.word	.L2473-.L961,.L2476-.L961
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_J1939DcmFirstDTCwithLampStatus')
	.sect	'.debug_loc'
.L1080:
	.word	-1,.L1081,0,.L2124-.L1081
	.half	2
	.byte	138,0
	.word	0,0
.L2125:
	.word	-1,.L1081,0,.L2124-.L1081
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_J1939DcmGetNextDTCwithLampStatus')
	.sect	'.debug_loc'
.L1082:
	.word	-1,.L1083,0,.L2126-.L1083
	.half	2
	.byte	138,0
	.word	0,0
.L2129:
	.word	-1,.L1083,0,.L2126-.L1083
	.half	1
	.byte	101
	.word	0,0
.L2128:
	.word	-1,.L1083,0,.L2126-.L1083
	.half	1
	.byte	100
	.word	0,0
.L2130:
	.word	-1,.L1083,0,.L2126-.L1083
	.half	1
	.byte	102
	.word	0,0
.L2131:
	.word	-1,.L1083,.L2909-.L1083,.L2126-.L1083
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_MainFunction')
	.sect	'.debug_loc'
.L1014:
	.word	-1,.L1015,0,.L1738-.L1015
	.half	2
	.byte	138,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_NvM_InitStorageMem')
	.sect	'.debug_loc'
.L1076:
	.word	-1,.L1077,0,.L1886-.L1077
	.half	2
	.byte	138,0
	.word	0,0
.L1887:
	.word	-1,.L1077,.L2877-.L1077,.L2878-.L1077
	.half	5
	.byte	144,32,157,32,0
	.word	.L2879-.L1077,.L887-.L1077
	.half	1
	.byte	81
	.word	.L2880-.L1077,.L2881-.L1077
	.half	1
	.byte	81
	.word	.L2882-.L1077,.L2883-.L1077
	.half	1
	.byte	81
	.word	.L2884-.L1077,.L2885-.L1077
	.half	1
	.byte	81
	.word	.L2886-.L1077,.L2887-.L1077
	.half	1
	.byte	81
	.word	.L2888-.L1077,.L2889-.L1077
	.half	1
	.byte	81
	.word	.L2890-.L1077,.L2891-.L1077
	.half	1
	.byte	81
	.word	.L2892-.L1077,.L2893-.L1077
	.half	1
	.byte	81
	.word	.L2894-.L1077,.L2895-.L1077
	.half	1
	.byte	81
	.word	.L2896-.L1077,.L2897-.L1077
	.half	1
	.byte	81
	.word	.L2898-.L1077,.L889-.L1077
	.half	1
	.byte	82
	.word	.L2899-.L1077,.L2900-.L1077
	.half	1
	.byte	82
	.word	.L2901-.L1077,.L2902-.L1077
	.half	1
	.byte	82
	.word	.L2878-.L1077,.L1886-.L1077
	.half	1
	.byte	88
	.word	.L2903-.L1077,.L891-.L1077
	.half	1
	.byte	89
	.word	.L2904-.L1077,.L2905-.L1077
	.half	1
	.byte	89
	.word	.L2906-.L1077,.L2907-.L1077
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_NvM_JobResultInd')
	.sect	'.debug_loc'
.L1078:
	.word	-1,.L1079,0,.L1888-.L1079
	.half	2
	.byte	138,0
	.word	0,0
.L1890:
	.word	-1,.L1079,0,.L1888-.L1079
	.half	1
	.byte	85
	.word	0,0
.L1891:
	.word	-1,.L1079,.L2908-.L1079,.L1888-.L1079
	.half	1
	.byte	82
	.word	0,0
.L1889:
	.word	-1,.L1079,0,.L1888-.L1079
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_PreInit')
	.sect	'.debug_loc'
.L958:
	.word	-1,.L959,0,.L1598-.L959
	.half	2
	.byte	138,0
	.word	0,0
.L1600:
	.word	-1,.L959,.L2459-.L959,.L2460-.L959
	.half	1
	.byte	95
	.word	.L2460-.L959,.L2461-.L959
	.half	5
	.byte	144,32,157,32,0
	.word	.L2462-.L959,.L339-.L959
	.half	1
	.byte	81
	.word	.L2463-.L959,.L2464-.L959
	.half	1
	.byte	81
	.word	.L2465-.L959,.L2466-.L959
	.half	1
	.byte	81
	.word	.L2467-.L959,.L2468-.L959
	.half	1
	.byte	81
	.word	.L2461-.L959,.L2469-.L959
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_ReportErrorStatus')
	.sect	'.debug_loc'
.L964:
	.word	-1,.L965,0,.L1608-.L965
	.half	2
	.byte	138,0
	.word	0,0
.L1609:
	.word	-1,.L965,0,.L1608-.L965
	.half	1
	.byte	84
	.word	0,0
.L1610:
	.word	-1,.L965,0,.L1608-.L965
	.half	1
	.byte	85
	.word	0,0
.L1612:
	.word	-1,.L965,.L2483-.L965,.L2484-.L965
	.half	5
	.byte	144,32,157,32,0
	.word	.L364-.L965,.L363-.L965
	.half	5
	.byte	144,32,157,32,0
	.word	.L2485-.L965,.L352-.L965
	.half	1
	.byte	95
	.word	.L371-.L965,.L1608-.L965
	.half	1
	.byte	95
	.word	0,0
.L1611:
	.word	-1,.L965,.L2482-.L965,.L1608-.L965
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_ResetEventDebounceStatus')
	.sect	'.debug_loc'
.L1620:
	.word	-1,.L969,0,.L1618-.L969
	.half	1
	.byte	85
	.word	0,0
.L968:
	.word	-1,.L969,0,.L1618-.L969
	.half	2
	.byte	138,0
	.word	0,0
.L1619:
	.word	-1,.L969,0,.L1618-.L969
	.half	1
	.byte	84
	.word	0,0
.L1621:
	.word	-1,.L969,.L2490-.L969,.L1618-.L969
	.half	1
	.byte	82
	.word	.L2491-.L969,.L386-.L969
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_ResetEventStatus')
	.sect	'.debug_loc'
.L970:
	.word	-1,.L971,0,.L1622-.L971
	.half	2
	.byte	138,0
	.word	0,0
.L1623:
	.word	-1,.L971,0,.L2492-.L971
	.half	1
	.byte	84
	.word	.L2493-.L971,.L1622-.L971
	.half	1
	.byte	88
	.word	.L394-.L971,.L400-.L971
	.half	1
	.byte	84
	.word	0,0
.L1626:
	.word	-1,.L971,.L2496-.L971,.L394-.L971
	.half	1
	.byte	91
	.word	.L2499-.L971,.L2498-.L971
	.half	1
	.byte	86
	.word	.L2500-.L971,.L398-.L971
	.half	1
	.byte	86
	.word	0,0
.L1625:
	.word	-1,.L971,.L2495-.L971,.L394-.L971
	.half	1
	.byte	90
	.word	.L2497-.L971,.L2498-.L971
	.half	1
	.byte	85
	.word	0,0
.L1624:
	.word	-1,.L971,.L2494-.L971,.L1622-.L971
	.half	1
	.byte	89
	.word	.L2501-.L971,.L1622-.L971
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_SetAgingCycleState')
	.sect	'.debug_loc'
.L976:
	.word	-1,.L977,0,.L1636-.L977
	.half	2
	.byte	138,0
	.word	0,0
.L1637:
	.word	-1,.L977,0,.L1636-.L977
	.half	1
	.byte	84
	.word	0,0
.L1638:
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_SetComponentAvailable')
	.sect	'.debug_loc'
.L1729:
	.word	-1,.L1011,0,.L1727-.L1011
	.half	1
	.byte	85
	.word	0,0
.L1728:
	.word	-1,.L1011,0,.L1727-.L1011
	.half	1
	.byte	84
	.word	0,0
.L1010:
	.word	-1,.L1011,0,.L1727-.L1011
	.half	2
	.byte	138,0
	.word	0,0
.L1730:
	.word	-1,.L1011,.L2536-.L1011,.L1727-.L1011
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_SetEnableCondition')
	.sect	'.debug_loc'
.L1676:
	.word	-1,.L993,0,.L2515-.L993
	.half	1
	.byte	85
	.word	0,0
.L992:
	.word	-1,.L993,0,.L1674-.L993
	.half	2
	.byte	138,0
	.word	0,0
.L1675:
	.word	-1,.L993,0,.L2515-.L993
	.half	1
	.byte	84
	.word	.L2516-.L993,.L1674-.L993
	.half	1
	.byte	86
	.word	0,0
.L1678:
	.word	-1,.L993,.L2518-.L993,.L464-.L993
	.half	1
	.byte	83
	.word	0,0
.L1677:
	.word	-1,.L993,.L2517-.L993,.L1674-.L993
	.half	1
	.byte	87
	.word	.L2522-.L993,.L1674-.L993
	.half	1
	.byte	82
	.word	0,0
.L1679:
	.word	-1,.L993,.L2519-.L993,.L2520-.L993
	.half	5
	.byte	144,32,157,32,0
	.word	.L472-.L993,.L2521-.L993
	.half	5
	.byte	144,32,157,32,0
	.word	.L470-.L993,.L469-.L993
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_SetEventStatus')
	.sect	'.debug_loc'
.L966:
	.word	-1,.L967,0,.L1613-.L967
	.half	2
	.byte	138,0
	.word	0,0
.L1614:
	.word	-1,.L967,0,.L373-.L967
	.half	1
	.byte	84
	.word	0,0
.L1615:
	.word	-1,.L967,0,.L373-.L967
	.half	1
	.byte	85
	.word	0,0
.L1616:
	.word	-1,.L967,.L2486-.L967,.L1613-.L967
	.half	1
	.byte	88
	.word	.L2489-.L967,.L1613-.L967
	.half	1
	.byte	82
	.word	0,0
.L1617:
	.word	-1,.L967,.L2487-.L967,.L2488-.L967
	.half	5
	.byte	144,32,157,32,0
	.word	.L380-.L967,.L379-.L967
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_SetOperationCycleState')
	.sect	'.debug_loc'
.L1629:
	.word	-1,.L973,0,.L1627-.L973
	.half	1
	.byte	85
	.word	0,0
.L972:
	.word	-1,.L973,0,.L1627-.L973
	.half	2
	.byte	138,0
	.word	0,0
.L1628:
	.word	-1,.L973,0,.L1627-.L973
	.half	1
	.byte	84
	.word	0,0
.L1630:
	.word	-1,.L973,.L2502-.L973,.L1627-.L973
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_SetWIRStatus')
	.sect	'.debug_loc'
.L978:
	.word	-1,.L979,0,.L1639-.L979
	.half	2
	.byte	138,0
	.word	0,0
.L1640:
	.word	-1,.L979,0,.L1639-.L979
	.half	1
	.byte	84
	.word	0,0
.L1642:
	.word	-1,.L979,.L2504-.L979,.L1639-.L979
	.half	1
	.byte	82
	.word	0,0
.L1641:
	.word	-1,.L979,0,.L1639-.L979
	.half	1
	.byte	85
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('Dem_Shutdown')
	.sect	'.debug_loc'
.L962:
	.word	-1,.L963,0,.L1605-.L963
	.half	2
	.byte	138,0
	.word	0,0
.L1607:
	.word	-1,.L963,.L2477-.L963,.L348-.L963
	.half	1
	.byte	88
	.word	.L2478-.L963,.L350-.L963
	.half	1
	.byte	89
	.word	.L2479-.L963,.L2480-.L963
	.half	1
	.byte	89
	.word	.L2481-.L963,.L351-.L963
	.half	1
	.byte	84
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L5210:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('DemInternal_CheckStorageMem')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L899,.L1892-.L899
	.sdecl	'.debug_frame',debug,cluster('DemInternal_SetCaptureQueue')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L901,.L1896-.L901
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('DemInternal_ClrCaptureQueue')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L903,.L1899-.L903
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('DemInternal_GetCaptureQueue')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L905,.L1901-.L905
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('DemInternal_SetEventPass')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L907,.L1906-.L907
	.sdecl	'.debug_frame',debug,cluster('DemInternal_SetEventFail')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L909,.L1910-.L909
	.sdecl	'.debug_frame',debug,cluster('DemInternal_SetEventStatus')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L911,.L1914-.L911
	.sdecl	'.debug_frame',debug,cluster('DemInternal_GetUsableMemoryEntry')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L913,.L1923-.L913
	.sdecl	'.debug_frame',debug,cluster('DemInternal_SearchFreeEntry')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L915,.L1928-.L915
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('DemInternal_ClearOneMemoryEntry')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L917,.L1932-.L917
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('DemInternal_SearchEntryForDisplacement')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L919,.L1935-.L919
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('DemInternal_GetEventInternalData')
	.sect	'.debug_frame'
	.word	36
	.word	.L5210,.L921,.L1940-.L921
	.byte	4
	.word	(.L2186-.L921)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L1940-.L2186)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('DemInternal_StorageDataElement')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L923,.L1946-.L923
	.sdecl	'.debug_frame',debug,cluster('DemInternal_GetDtcInternalData')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L925,.L1954-.L925
	.sdecl	'.debug_frame',debug,cluster('DemInternal_CaptureData')
	.sect	'.debug_frame'
	.word	52
	.word	.L5210,.L927,.L1959-.L927
	.byte	4
	.word	(.L2209-.L927)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L153-.L2209)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L1959-.L153)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('DemInternal_UpdateFFData')
	.sect	'.debug_frame'
	.word	36
	.word	.L5210,.L929,.L1966-.L929
	.byte	4
	.word	(.L2224-.L929)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L1966-.L2224)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('DemInternal_UpdateExtData')
	.sect	'.debug_frame'
	.word	36
	.word	.L5210,.L931,.L1981-.L931
	.byte	4
	.word	(.L2256-.L931)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L1981-.L2256)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('DemInternal_CycleStartProcess')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L933,.L1992-.L933
	.sdecl	'.debug_frame',debug,cluster('DemInternal_CycleEndProcess')
	.sect	'.debug_frame'
	.word	36
	.word	.L5210,.L935,.L1998-.L935
	.byte	4
	.word	(.L2291-.L935)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L1998-.L2291)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('DemInternal_MainFnc_OperationCycle')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L937,.L2005-.L937
	.sdecl	'.debug_frame',debug,cluster('DemInternal_MainFnc_BswErrorHandle')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L939,.L2007-.L939
	.sdecl	'.debug_frame',debug,cluster('DemInternal_MainFnc_DebounceTimer')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L941,.L2009-.L941
	.sdecl	'.debug_frame',debug,cluster('DemInternal_MainFnc_CaptureData')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L943,.L2013-.L943
	.sdecl	'.debug_frame',debug,cluster('DemInternal_MainFnc_ClearDTC')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L945,.L2016-.L945
	.sdecl	'.debug_frame',debug,cluster('DemInternal_ClearOneDTC')
	.sect	'.debug_frame'
	.word	52
	.word	.L5210,.L947,.L2017-.L947
	.byte	4
	.word	(.L2353-.L947)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L269-.L2353)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L2017-.L269)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('DemInternal_ClearOneEvent')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L949,.L2024-.L949
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('DemInternal_ClearOneDTCGroup')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L951,.L2027-.L951
	.sdecl	'.debug_frame',debug,cluster('DemInternal_GetEventFreezeFrameDataEx')
	.sect	'.debug_frame'
	.word	36
	.word	.L5210,.L953,.L2030-.L953
	.byte	4
	.word	(.L2370-.L953)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L2030-.L2370)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('DemInternal_GetEventExtendedDataRecordEx')
	.sect	'.debug_frame'
	.word	36
	.word	.L5210,.L955,.L2047-.L955
	.byte	4
	.word	(.L2422-.L955)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L2047-.L2422)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_GetVersionInfo')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L957,.L1595-.L957
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_PreInit')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L959,.L1598-.L959
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_Init')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L961,.L1601-.L961
	.sdecl	'.debug_frame',debug,cluster('Dem_Shutdown')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L963,.L1605-.L963
	.sdecl	'.debug_frame',debug,cluster('Dem_ReportErrorStatus')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L965,.L1608-.L965
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dem_SetEventStatus')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L967,.L1613-.L967
	.sdecl	'.debug_frame',debug,cluster('Dem_ResetEventDebounceStatus')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L969,.L1618-.L969
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dem_ResetEventStatus')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L971,.L1622-.L971
	.sdecl	'.debug_frame',debug,cluster('Dem_SetOperationCycleState')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L973,.L1627-.L973
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dem_GetOperationCycleState')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L975,.L1631-.L975
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_SetAgingCycleState')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L977,.L1636-.L977
	.sdecl	'.debug_frame',debug,cluster('Dem_SetWIRStatus')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L979,.L1639-.L979
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dem_GetComponentFailed')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L981,.L1643-.L981
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dem_GetEventStatus')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L983,.L1648-.L983
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_GetEventFailed')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L985,.L1653-.L985
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_GetEventTested')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L987,.L1658-.L987
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_GetDebouncingOfEvent')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L989,.L1663-.L989
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_GetDTCOfEvent')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L991,.L1668-.L991
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_SetEnableCondition')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L993,.L1674-.L993
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dem_GetFaultDetectionCounter')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L995,.L1680-.L995
	.sdecl	'.debug_frame',debug,cluster('Dem_GetIndicatorStatus')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L997,.L1685-.L997
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dem_GetEventFreezeFrameData')
	.sect	'.debug_frame'
	.word	52
	.word	.L5210,.L999,.L1690-.L999
	.byte	4
	.word	(.L2527-.L999)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L502-.L2527)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L1690-.L502)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('Dem_GetEventFreezeFrameDataEx')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L1001,.L1699-.L1001
	.sdecl	'.debug_frame',debug,cluster('Dem_GetEventExtendedDataRecord')
	.sect	'.debug_frame'
	.word	52
	.word	.L5210,.L1003,.L1707-.L1003
	.byte	4
	.word	(.L2531-.L1003)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L514-.L2531)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L1707-.L514)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('Dem_GetEventExtendedDataRecordEx')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L1005,.L1713-.L1005
	.sdecl	'.debug_frame',debug,cluster('Dem_GetEventMemoryOverflow')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L1007,.L1719-.L1007
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_GetNumberOfEventMemoryEntries')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L1009,.L1723-.L1009
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_SetComponentAvailable')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L1011,.L1727-.L1011
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dem_ClearDTC')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L1013,.L1731-.L1013
	.sdecl	'.debug_frame',debug,cluster('Dem_MainFunction')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L1015,.L1738-.L1015
	.sdecl	'.debug_frame',debug,cluster('Dem_GetEventInternalData')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L1017,.L1739-.L1017
	.sdecl	'.debug_frame',debug,cluster('DemInternal_CheckDtcValid')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L1019,.L2061-.L1019
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('DemInternal_GetSizeOfExtendedData')
	.sect	'.debug_frame'
	.word	36
	.word	.L5210,.L1021,.L2066-.L1021
	.byte	4
	.word	(.L2549-.L1021)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L2066-.L2549)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('DemInternal_GetAllExtendedData')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L1023,.L2083-.L1023
	.sdecl	'.debug_frame',debug,cluster('DemInternal_GetSizeOfFFData')
	.sect	'.debug_frame'
	.word	36
	.word	.L5210,.L1025,.L2092-.L1025
	.byte	4
	.word	(.L2631-.L1025)/2
	.byte	19,24,22,26,3,19,138,24,4
	.word	(.L2092-.L2631)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('DemInternal_GetAllFFData')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L1027,.L2111-.L1027
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmGetTranslationType')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L1029,.L1745-.L1029
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmGetDTCStatusAvailabilityMask')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L1031,.L1746-.L1031
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmGetStatusOfDTC')
	.sect	'.debug_frame'
	.word	36
	.word	.L5210,.L1033,.L1749-.L1033
	.byte	4
	.word	(.L2736-.L1033)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L1749-.L2736)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmGetSeverityOfDTC')
	.sect	'.debug_frame'
	.word	36
	.word	.L5210,.L1035,.L1755-.L1035
	.byte	4
	.word	(.L2744-.L1035)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L1755-.L2744)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmGetFunctionalUnitOfDTC')
	.sect	'.debug_frame'
	.word	36
	.word	.L5210,.L1037,.L1761-.L1037
	.byte	4
	.word	(.L2750-.L1037)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L1761-.L2750)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmSetDTCFilter')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L1039,.L1766-.L1039
	.byte	8,19,8,20,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmGetNumberOfFilteredDTC')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L1041,.L1777-.L1041
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmGetNextFilteredDTC')
	.sect	'.debug_frame'
	.word	16
	.word	.L5210,.L1043,.L1780-.L1043
	.byte	8,19,8,23
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmGetNextFilteredDTCAndFDC')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L1045,.L1785-.L1045
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmGetNextFilteredDTCAndSeverity')
	.sect	'.debug_frame'
	.word	16
	.word	.L5210,.L1047,.L1791-.L1047
	.byte	8,19,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmSetFreezeFrameRecordFilter')
	.sect	'.debug_frame'
	.word	36
	.word	.L5210,.L1049,.L1798-.L1049
	.byte	4
	.word	(.L2777-.L1049)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L1798-.L2777)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmGetNextFilteredRecord')
	.sect	'.debug_frame'
	.word	36
	.word	.L5210,.L1051,.L1808-.L1051
	.byte	4
	.word	(.L2789-.L1051)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L1808-.L2789)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmGetDTCByOccurrenceTime')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L1053,.L1815-.L1053
	.byte	8,18,8,19,8,21,8,22,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmControlDTCStatusChangedNotification')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L1055,.L2122-.L1055
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmDisableDTCRecordUpdate')
	.sect	'.debug_frame'
	.word	36
	.word	.L5210,.L1057,.L1820-.L1057
	.byte	4
	.word	(.L2801-.L1057)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L1820-.L2801)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmEnableDTCRecordUpdate')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L1059,.L1825-.L1059
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmGetFreezeFrameDataByDTC')
	.sect	'.debug_frame'
	.word	36
	.word	.L5210,.L1061,.L1827-.L1061
	.byte	4
	.word	(.L2806-.L1061)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L1827-.L2806)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmGetSizeOfFreezeFrameByDTC')
	.sect	'.debug_frame'
	.word	36
	.word	.L5210,.L1063,.L1839-.L1063
	.byte	4
	.word	(.L2827-.L1063)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L1839-.L2827)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmGetExtendedDataRecordByDTC')
	.sect	'.debug_frame'
	.word	36
	.word	.L5210,.L1065,.L1846-.L1065
	.byte	4
	.word	(.L2828-.L1065)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L1846-.L2828)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmGetSizeOfExtendedDataRecordByDTC')
	.sect	'.debug_frame'
	.word	36
	.word	.L5210,.L1067,.L1858-.L1067
	.byte	4
	.word	(.L2849-.L1067)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L1858-.L2849)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmCheckClearParameter')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L1069,.L1865-.L1069
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmClearDTC')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L1071,.L1871-.L1071
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmDisableDTCSetting')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L1073,.L1876-.L1073
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dem_DcmEnableDTCSetting')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L1075,.L1881-.L1075
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dem_NvM_InitStorageMem')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L1077,.L1886-.L1077
	.sdecl	'.debug_frame',debug,cluster('Dem_NvM_JobResultInd')
	.sect	'.debug_frame'
	.word	12
	.word	.L5210,.L1079,.L1888-.L1079
	.sdecl	'.debug_frame',debug,cluster('Dem_J1939DcmFirstDTCwithLampStatus')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L1081,.L2124-.L1081
	.byte	8,18,8,19,8,20,8,21,8,22,8,23
	.sdecl	'.debug_frame',debug,cluster('Dem_J1939DcmGetNextDTCwithLampStatus')
	.sect	'.debug_frame'
	.word	24
	.word	.L5210,.L1083,.L2126-.L1083
	.byte	8,18,8,19,8,20,8,21,8,22,8,23

; ..\EAS\BSW\Dem\Dem.c	 12168  #endif
; ..\EAS\BSW\Dem\Dem.c	 12169  /*******************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12170  * DTC storage
; ..\EAS\BSW\Dem\Dem.c	 12171  *******************************************************************************/
; ..\EAS\BSW\Dem\Dem.c	 12172  #if(STD_ON == DEM_CFG_J1939CLEAR_DTC_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 12173  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 12174  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12175  * Function Name: Dem_J1939DcmClearDTC
; ..\EAS\BSW\Dem\Dem.c	 12176  *
; ..\EAS\BSW\Dem\Dem.c	 12177  * Description: Clears active DTCs as well as previously active DTCs.
; ..\EAS\BSW\Dem\Dem.c	 12178  *
; ..\EAS\BSW\Dem\Dem.c	 12179  * Inputs: DTCTypeFilter,node
; ..\EAS\BSW\Dem\Dem.c	 12180  *
; ..\EAS\BSW\Dem\Dem.c	 12181  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	 12182  *
; ..\EAS\BSW\Dem\Dem.c	 12183  * Return: Dem_ReturnClearDTCType
; ..\EAS\BSW\Dem\Dem.c	 12184  *
; ..\EAS\BSW\Dem\Dem.c	 12185  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	 12186  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12187  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 12188  /*SWS_Dem_00976*/
; ..\EAS\BSW\Dem\Dem.c	 12189  FUNC(Dem_ReturnClearDTCType, DEM_CODE) Dem_J1939DcmClearDTC
; ..\EAS\BSW\Dem\Dem.c	 12190  (
; ..\EAS\BSW\Dem\Dem.c	 12191      Dem_J1939DcmSetClearFilterType DTCTypeFilter,
; ..\EAS\BSW\Dem\Dem.c	 12192      uint8 node
; ..\EAS\BSW\Dem\Dem.c	 12193  )
; ..\EAS\BSW\Dem\Dem.c	 12194  {
; ..\EAS\BSW\Dem\Dem.c	 12195      Dem_ReturnClearDTCType Result = DEM_CLEAR_OK;
; ..\EAS\BSW\Dem\Dem.c	 12196      uint16 i;
; ..\EAS\BSW\Dem\Dem.c	 12197      uint8 j;
; ..\EAS\BSW\Dem\Dem.c	 12198      Dem_UdsStatusByteType DTCStatus;
; ..\EAS\BSW\Dem\Dem.c	 12199  
; ..\EAS\BSW\Dem\Dem.c	 12200      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	 12201      {
; ..\EAS\BSW\Dem\Dem.c	 12202          DEM_DET_REPORT_ERROR(DEM_J1939DCMCLEARDTC_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	 12203          Result = DEM_CLEAR_FAILED;
; ..\EAS\BSW\Dem\Dem.c	 12204      }
; ..\EAS\BSW\Dem\Dem.c	 12205      else if(DTCTypeFilter > DEM_J1939DTC_CLEAR_PREVIOUSLY_ACTIVE)
; ..\EAS\BSW\Dem\Dem.c	 12206      {
; ..\EAS\BSW\Dem\Dem.c	 12207          DEM_DET_REPORT_ERROR(DEM_J1939DCMCLEARDTC_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	 12208          Result = DEM_CLEAR_FAILED;
; ..\EAS\BSW\Dem\Dem.c	 12209      }
; ..\EAS\BSW\Dem\Dem.c	 12210      /*SWS_Dem_01042*/
; ..\EAS\BSW\Dem\Dem.c	 12211      else if(Dem_ClearDTCState == DEM_IN_CLEAR_DTC_IDLE)
; ..\EAS\BSW\Dem\Dem.c	 12212      {
; ..\EAS\BSW\Dem\Dem.c	 12213  #if(DEM_CFG_CLEARDTCBEHAIOR != DEM_CLRRESP_VOLATILE)
; ..\EAS\BSW\Dem\Dem.c	 12214          Dem_ClearDTC_DTC = 0;
; ..\EAS\BSW\Dem\Dem.c	 12215          Dem_ClearDTC_DTCFormat = DEM_DTC_FORMAT_J1939;
; ..\EAS\BSW\Dem\Dem.c	 12216          Dem_ClearDTC_DTCOrigin = DEM_DTC_ORIGIN_PRIMARY_MEMORY;
; ..\EAS\BSW\Dem\Dem.c	 12217  #endif
; ..\EAS\BSW\Dem\Dem.c	 12218          /*SWS_Dem_00878*/
; ..\EAS\BSW\Dem\Dem.c	 12219          for(i = 0; i < DEM_NUM_OF_DTC; i++)
; ..\EAS\BSW\Dem\Dem.c	 12220          {
; ..\EAS\BSW\Dem\Dem.c	 12221              if(DEM_CFG_DTC_J1939NODE_REF(i) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	 12222              {
; ..\EAS\BSW\Dem\Dem.c	 12223                  for(j = 0; j < DEM_CFG_DTC_J1939NODE_NUM(i); j++)
; ..\EAS\BSW\Dem\Dem.c	 12224                  {
; ..\EAS\BSW\Dem\Dem.c	 12225                      if((DEM_CFG_DTC_J1939NODE_ARRAY(i)[j]) == node)
; ..\EAS\BSW\Dem\Dem.c	 12226                      {
; ..\EAS\BSW\Dem\Dem.c	 12227                          DTCStatus = DEM_DTC_STATUS(i);
; ..\EAS\BSW\Dem\Dem.c	 12228                          if(DTCTypeFilter == DEM_J1939DTC_CLEAR_ALL)
; ..\EAS\BSW\Dem\Dem.c	 12229                          {
; ..\EAS\BSW\Dem\Dem.c	 12230                              /*SWS_Dem_00879*/
; ..\EAS\BSW\Dem\Dem.c	 12231                              /*Clear RAM info of one DTC*/
; ..\EAS\BSW\Dem\Dem.c	 12232                              DemInternal_ClearOneDTC(i);
; ..\EAS\BSW\Dem\Dem.c	 12233                          }
; ..\EAS\BSW\Dem\Dem.c	 12234                          else if((!DEM_TEST_UDS_STATUS_TF(DTCStatus)) && (DEM_TEST_UDS_STATUS_CDTC(DTCStatus)))
; ..\EAS\BSW\Dem\Dem.c	 12235                          {
; ..\EAS\BSW\Dem\Dem.c	 12236                              /*SWS_Dem_00879*/
; ..\EAS\BSW\Dem\Dem.c	 12237                              /*Clear RAM info of one DTC*/
; ..\EAS\BSW\Dem\Dem.c	 12238                              DemInternal_ClearOneDTC(i);
; ..\EAS\BSW\Dem\Dem.c	 12239                          }
; ..\EAS\BSW\Dem\Dem.c	 12240                          else
; ..\EAS\BSW\Dem\Dem.c	 12241                          {
; ..\EAS\BSW\Dem\Dem.c	 12242                              /*do nothing*/
; ..\EAS\BSW\Dem\Dem.c	 12243                          }
; ..\EAS\BSW\Dem\Dem.c	 12244                          break;
; ..\EAS\BSW\Dem\Dem.c	 12245                      }
; ..\EAS\BSW\Dem\Dem.c	 12246                  }
; ..\EAS\BSW\Dem\Dem.c	 12247              }
; ..\EAS\BSW\Dem\Dem.c	 12248          }
; ..\EAS\BSW\Dem\Dem.c	 12249  
; ..\EAS\BSW\Dem\Dem.c	 12250  #if(DEM_CFG_CLEARDTCBEHAIOR == DEM_CLRRESP_VOLATILE)
; ..\EAS\BSW\Dem\Dem.c	 12251          /*SWS_Dem_00570*/
; ..\EAS\BSW\Dem\Dem.c	 12252          Result = DEM_CLEAR_OK;
; ..\EAS\BSW\Dem\Dem.c	 12253  #else
; ..\EAS\BSW\Dem\Dem.c	 12254          Dem_ClearDTCState = DEM_IN_CLEAR_EVENT_MEM;
; ..\EAS\BSW\Dem\Dem.c	 12255          Result = DEM_CLEAR_PENDING;
; ..\EAS\BSW\Dem\Dem.c	 12256  #endif/*(DEM_CFG_CLEARDTCBEHAIOR == DEM_CLRRESP_VOLATILE)*/
; ..\EAS\BSW\Dem\Dem.c	 12257  
; ..\EAS\BSW\Dem\Dem.c	 12258      }
; ..\EAS\BSW\Dem\Dem.c	 12259  #if(DEM_CFG_CLEARDTCBEHAIOR != DEM_CLRRESP_VOLATILE)
; ..\EAS\BSW\Dem\Dem.c	 12260      else if((Dem_ClearDTC_DTC != 0) || (Dem_ClearDTC_DTCFormat != DEM_DTC_FORMAT_J1939) \ 
; ..\EAS\BSW\Dem\Dem.c	 12261          || (Dem_ClearDTC_DTCOrigin != DEM_DTC_ORIGIN_PRIMARY_MEMORY))
; ..\EAS\BSW\Dem\Dem.c	 12262      {
; ..\EAS\BSW\Dem\Dem.c	 12263          Result = DEM_CLEAR_BUSY;
; ..\EAS\BSW\Dem\Dem.c	 12264      }
; ..\EAS\BSW\Dem\Dem.c	 12265  #endif/*(DEM_CFG_CLEARDTCBEHAIOR == DEM_CLRRESP_VOLATILE)*/
; ..\EAS\BSW\Dem\Dem.c	 12266      else
; ..\EAS\BSW\Dem\Dem.c	 12267      {
; ..\EAS\BSW\Dem\Dem.c	 12268          if(Dem_ClearDTCState == DEM_IN_CLEAR_DTC_OK)
; ..\EAS\BSW\Dem\Dem.c	 12269          {
; ..\EAS\BSW\Dem\Dem.c	 12270              Dem_ClearDTCState = DEM_IN_CLEAR_DTC_IDLE;
; ..\EAS\BSW\Dem\Dem.c	 12271              Result = DEM_CLEAR_OK;
; ..\EAS\BSW\Dem\Dem.c	 12272          }
; ..\EAS\BSW\Dem\Dem.c	 12273          else if(Dem_ClearDTCState == DEM_IN_CLEAR_DTC_ERR)
; ..\EAS\BSW\Dem\Dem.c	 12274          {
; ..\EAS\BSW\Dem\Dem.c	 12275              Dem_ClearDTCState = DEM_IN_CLEAR_DTC_IDLE;
; ..\EAS\BSW\Dem\Dem.c	 12276              Result = DEM_CLEAR_MEMORY_ERROR;
; ..\EAS\BSW\Dem\Dem.c	 12277          }
; ..\EAS\BSW\Dem\Dem.c	 12278          else
; ..\EAS\BSW\Dem\Dem.c	 12279          {
; ..\EAS\BSW\Dem\Dem.c	 12280              Result = DEM_CLEAR_PENDING;
; ..\EAS\BSW\Dem\Dem.c	 12281          }
; ..\EAS\BSW\Dem\Dem.c	 12282      }
; ..\EAS\BSW\Dem\Dem.c	 12283      return Result;
; ..\EAS\BSW\Dem\Dem.c	 12284  }
; ..\EAS\BSW\Dem\Dem.c	 12285  #endif
; ..\EAS\BSW\Dem\Dem.c	 12286  
; ..\EAS\BSW\Dem\Dem.c	 12287  #if((STD_ON == DEM_CFG_J1939EX_FF_SUPPORT)||(STD_ON == DEM_CFG_J1939_FF_SUPPORT))
; ..\EAS\BSW\Dem\Dem.c	 12288  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 12289  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12290  * Function Name: Dem_J1939DcmSetFreezeFrameFilter
; ..\EAS\BSW\Dem\Dem.c	 12291  *
; ..\EAS\BSW\Dem\Dem.c	 12292  * Description: The function sets the FreezeFrame filter for a specific node.
; ..\EAS\BSW\Dem\Dem.c	 12293  *
; ..\EAS\BSW\Dem\Dem.c	 12294  * Inputs: FreezeFrameKind,node
; ..\EAS\BSW\Dem\Dem.c	 12295  *
; ..\EAS\BSW\Dem\Dem.c	 12296  * Outputs: None
; ..\EAS\BSW\Dem\Dem.c	 12297  *
; ..\EAS\BSW\Dem\Dem.c	 12298  * Return: Dem_ReturnSetFilterType
; ..\EAS\BSW\Dem\Dem.c	 12299  *
; ..\EAS\BSW\Dem\Dem.c	 12300  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	 12301  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12302  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 12303  /*SWS_Dem_00977*/
; ..\EAS\BSW\Dem\Dem.c	 12304  FUNC(Dem_ReturnSetFilterType, DEM_CODE) Dem_J1939DcmSetFreezeFrameFilter
; ..\EAS\BSW\Dem\Dem.c	 12305  (
; ..\EAS\BSW\Dem\Dem.c	 12306      Dem_J1939DcmSetFreezeFrameFilterType FreezeFrameKind,
; ..\EAS\BSW\Dem\Dem.c	 12307      uint8 node
; ..\EAS\BSW\Dem\Dem.c	 12308  )
; ..\EAS\BSW\Dem\Dem.c	 12309  {
; ..\EAS\BSW\Dem\Dem.c	 12310      Dem_ReturnSetFilterType Result = DEM_WRONG_FILTER;
; ..\EAS\BSW\Dem\Dem.c	 12311      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	 12312      {
; ..\EAS\BSW\Dem\Dem.c	 12313          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	 12314          DEM_DET_REPORT_ERROR(DEM_J1939DCMSETFREEZEFRAMEFILTER_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	 12315          
; ..\EAS\BSW\Dem\Dem.c	 12316      }
; ..\EAS\BSW\Dem\Dem.c	 12317      else if((FreezeFrameKind != DEM_J1939DCM_FREEZEFRAME)\ 
; ..\EAS\BSW\Dem\Dem.c	 12318          && (FreezeFrameKind != DEM_J1939DCM_EXPANDED_FREEZEFRAME))
; ..\EAS\BSW\Dem\Dem.c	 12319      {
; ..\EAS\BSW\Dem\Dem.c	 12320          DEM_DET_REPORT_ERROR(DEM_J1939DCMSETFREEZEFRAMEFILTER_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	 12321          
; ..\EAS\BSW\Dem\Dem.c	 12322      }
; ..\EAS\BSW\Dem\Dem.c	 12323      else
; ..\EAS\BSW\Dem\Dem.c	 12324      {
; ..\EAS\BSW\Dem\Dem.c	 12325          /*SWS_Dem_00899*/       
; ..\EAS\BSW\Dem\Dem.c	 12326          Dem_J1939DcmFilterInfo.node = node;
; ..\EAS\BSW\Dem\Dem.c	 12327          Dem_J1939DcmFilterInfo.NumberOfFilteredDTC = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	 12328          Dem_J1939DcmFilterInfo.NextFilteredDTCIndex = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	 12329          Dem_J1939DcmFilterInfo.FreezeFrameKind = FreezeFrameKind;
; ..\EAS\BSW\Dem\Dem.c	 12330          Dem_J1939DcmFilterInfo.FilteredValidFlag = TRUE;
; ..\EAS\BSW\Dem\Dem.c	 12331          Result = DEM_FILTER_ACCEPTED;
; ..\EAS\BSW\Dem\Dem.c	 12332  
; ..\EAS\BSW\Dem\Dem.c	 12333      }
; ..\EAS\BSW\Dem\Dem.c	 12334      return Result;
; ..\EAS\BSW\Dem\Dem.c	 12335  }
; ..\EAS\BSW\Dem\Dem.c	 12336  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 12337  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12338  * Function Name: Dem_J1939DcmGetNextFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	 12339  *
; ..\EAS\BSW\Dem\Dem.c	 12340  * Description: Gets next freeze frame data. The function stores the data in
; ..\EAS\BSW\Dem\Dem.c	 12341  *              the provided DestBuffer.
; ..\EAS\BSW\Dem\Dem.c	 12342  *
; ..\EAS\BSW\Dem\Dem.c	 12343  * Inputs: DestBuffer,BufSize
; ..\EAS\BSW\Dem\Dem.c	 12344  *
; ..\EAS\BSW\Dem\Dem.c	 12345  * Outputs: J1939DTC,OccurenceCounter,DestBuffer,BufSize
; ..\EAS\BSW\Dem\Dem.c	 12346  *
; ..\EAS\BSW\Dem\Dem.c	 12347  * Return: Dem_ReturnGetNextFilteredElementType
; ..\EAS\BSW\Dem\Dem.c	 12348  *
; ..\EAS\BSW\Dem\Dem.c	 12349  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	 12350  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12351  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 12352  /*SWS_Dem_00978*/
; ..\EAS\BSW\Dem\Dem.c	 12353  FUNC(Dem_ReturnGetNextFilteredElementType, DEM_CODE) Dem_J1939DcmGetNextFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	 12354  (
; ..\EAS\BSW\Dem\Dem.c	 12355      P2VAR(uint32, AUTOMATIC, DEM_APPL_DATA) J1939DTC,
; ..\EAS\BSW\Dem\Dem.c	 12356      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) OccurenceCounter,
; ..\EAS\BSW\Dem\Dem.c	 12357      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) DestBuffer,
; ..\EAS\BSW\Dem\Dem.c	 12358      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) BufSize
; ..\EAS\BSW\Dem\Dem.c	 12359  )
; ..\EAS\BSW\Dem\Dem.c	 12360  {
; ..\EAS\BSW\Dem\Dem.c	 12361      uint16 i;
; ..\EAS\BSW\Dem\Dem.c	 12362      uint8 j;
; ..\EAS\BSW\Dem\Dem.c	 12363      uint16 FFDataSize = 0;
; ..\EAS\BSW\Dem\Dem.c	 12364      Dem_ReturnGetNextFilteredElementType Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
; ..\EAS\BSW\Dem\Dem.c	 12365      Std_ReturnType ret = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	 12366      if(Dem_State != DEM_NORMAL)
; ..\EAS\BSW\Dem\Dem.c	 12367      {
; ..\EAS\BSW\Dem\Dem.c	 12368          /*SWS_Dem_01112*//*SWS_Dem_00124*/
; ..\EAS\BSW\Dem\Dem.c	 12369          DEM_DET_REPORT_ERROR(DEM_J1939DCMGETNEXTFREEZEFRAME_APIID, DEM_E_UNINIT);
; ..\EAS\BSW\Dem\Dem.c	 12370      }
; ..\EAS\BSW\Dem\Dem.c	 12371      else if((J1939DTC == NULL_PTR)\ 
; ..\EAS\BSW\Dem\Dem.c	 12372          || (OccurenceCounter == NULL_PTR)\ 
; ..\EAS\BSW\Dem\Dem.c	 12373          || (DestBuffer == NULL_PTR)\ 
; ..\EAS\BSW\Dem\Dem.c	 12374          || (BufSize == NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	 12375      {
; ..\EAS\BSW\Dem\Dem.c	 12376          DEM_DET_REPORT_ERROR(DEM_J1939DCMGETNEXTFREEZEFRAME_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	 12377      }
; ..\EAS\BSW\Dem\Dem.c	 12378      else if(Dem_J1939DcmFilterInfo.FilteredValidFlag == FALSE)
; ..\EAS\BSW\Dem\Dem.c	 12379      {
; ..\EAS\BSW\Dem\Dem.c	 12380          DEM_DET_REPORT_ERROR(DEM_J1939DCMGETNEXTFREEZEFRAME_APIID, DEM_E_PARAM_DATA);
; ..\EAS\BSW\Dem\Dem.c	 12381      }
; ..\EAS\BSW\Dem\Dem.c	 12382      else
; ..\EAS\BSW\Dem\Dem.c	 12383      {
; ..\EAS\BSW\Dem\Dem.c	 12384          for(i = Dem_J1939DcmFilterInfo.NextFilteredDTCIndex; i < DEM_NUM_OF_DTC; i++)
; ..\EAS\BSW\Dem\Dem.c	 12385          {
; ..\EAS\BSW\Dem\Dem.c	 12386  
; ..\EAS\BSW\Dem\Dem.c	 12387              if((DEM_CFG_DTC_OBDDTCREF(i) != NULL_PTR) && (DEM_CFG_DTC_J1939_VALUE(i) != (uint32)0) && (DEM_CFG_DTC_J1939NODE_REF(i) != NULL_PTR))
; ..\EAS\BSW\Dem\Dem.c	 12388              {
; ..\EAS\BSW\Dem\Dem.c	 12389                  for(j = 0; j < DEM_CFG_DTC_J1939NODE_NUM(i); j++)
; ..\EAS\BSW\Dem\Dem.c	 12390                  {
; ..\EAS\BSW\Dem\Dem.c	 12391                      if((DEM_CFG_DTC_J1939NODE_ARRAY(i)[j]) == Dem_J1939DcmFilterInfo.node)
; ..\EAS\BSW\Dem\Dem.c	 12392                      {
; ..\EAS\BSW\Dem\Dem.c	 12393                          if((Dem_J1939DcmFilterInfo.FreezeFrameKind ==  DEM_J1939DCM_FREEZEFRAME) \ 
; ..\EAS\BSW\Dem\Dem.c	 12394                                  && (DEM_CFG_J1939DTC_FFRECNUMCLASSREF(i) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	 12395                                  && (DEM_DTC_DATAENTRYREF(i) != DEM_DATA_INVALID_U16))
; ..\EAS\BSW\Dem\Dem.c	 12396                          {
; ..\EAS\BSW\Dem\Dem.c	 12397                              ret = DemInternal_J1939GetSizeOfFreezeFrame(i, &FFDataSize, DEM_J1939DCM_FREEZEFRAME);
; ..\EAS\BSW\Dem\Dem.c	 12398                              if((*BufSize >= FFDataSize) && (ret == E_OK))
; ..\EAS\BSW\Dem\Dem.c	 12399                              {
; ..\EAS\BSW\Dem\Dem.c	 12400                                  *BufSize = FFDataSize;
; ..\EAS\BSW\Dem\Dem.c	 12401                                  DemInternal_J1939GetDataOfFreezeFrame(i, DestBuffer, DEM_J1939DCM_FREEZEFRAME);
; ..\EAS\BSW\Dem\Dem.c	 12402                                  *J1939DTC = DEM_CFG_DTC_J1939_VALUE(i);  
; ..\EAS\BSW\Dem\Dem.c	 12403                                  DemInternal_J1939GetOccurrenceCounter(i, OccurenceCounter);
; ..\EAS\BSW\Dem\Dem.c	 12404                                  Dem_J1939DcmFilterInfo.NextFilteredDTCIndex = (i+1);
; ..\EAS\BSW\Dem\Dem.c	 12405                                  Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	 12406                                  break;     
; ..\EAS\BSW\Dem\Dem.c	 12407                              }
; ..\EAS\BSW\Dem\Dem.c	 12408                              else if((*BufSize < FFDataSize) && (ret == E_OK))
; ..\EAS\BSW\Dem\Dem.c	 12409                              {
; ..\EAS\BSW\Dem\Dem.c	 12410                                  Result = DEM_FILTERED_BUFFER_TOO_SMALL;
; ..\EAS\BSW\Dem\Dem.c	 12411                                  break;
; ..\EAS\BSW\Dem\Dem.c	 12412                              }
; ..\EAS\BSW\Dem\Dem.c	 12413                              else
; ..\EAS\BSW\Dem\Dem.c	 12414                              {
; ..\EAS\BSW\Dem\Dem.c	 12415                                  Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
; ..\EAS\BSW\Dem\Dem.c	 12416                                  break;
; ..\EAS\BSW\Dem\Dem.c	 12417                              } 
; ..\EAS\BSW\Dem\Dem.c	 12418                          }
; ..\EAS\BSW\Dem\Dem.c	 12419                          else if((Dem_J1939DcmFilterInfo.FreezeFrameKind == DEM_J1939DCM_EXPANDED_FREEZEFRAME) \ 
; ..\EAS\BSW\Dem\Dem.c	 12420                                  && (DEM_CFG_1939DTC_EXPFFRECNUMCLASSREF(i) != NULL_PTR) \ 
; ..\EAS\BSW\Dem\Dem.c	 12421                                  && (DEM_DTC_DATAENTRYREF(i) != DEM_DATA_INVALID_U16))
; ..\EAS\BSW\Dem\Dem.c	 12422                          {
; ..\EAS\BSW\Dem\Dem.c	 12423                              ret = DemInternal_J1939GetSizeOfFreezeFrame(i, &FFDataSize, DEM_J1939DCM_EXPANDED_FREEZEFRAME);
; ..\EAS\BSW\Dem\Dem.c	 12424                              if((*BufSize >= FFDataSize) && (ret == E_OK))
; ..\EAS\BSW\Dem\Dem.c	 12425                              {
; ..\EAS\BSW\Dem\Dem.c	 12426                                  *BufSize = FFDataSize;
; ..\EAS\BSW\Dem\Dem.c	 12427                                  DemInternal_J1939GetDataOfFreezeFrame(i,DestBuffer, DEM_J1939DCM_EXPANDED_FREEZEFRAME);
; ..\EAS\BSW\Dem\Dem.c	 12428                                  *J1939DTC = DEM_CFG_DTC_J1939_VALUE(i);  
; ..\EAS\BSW\Dem\Dem.c	 12429                                  DemInternal_J1939GetOccurrenceCounter(i, OccurenceCounter);
; ..\EAS\BSW\Dem\Dem.c	 12430                                  Dem_J1939DcmFilterInfo.NextFilteredDTCIndex = (i+1);
; ..\EAS\BSW\Dem\Dem.c	 12431                                  Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	 12432                                  break;     
; ..\EAS\BSW\Dem\Dem.c	 12433                              }
; ..\EAS\BSW\Dem\Dem.c	 12434                              else if((*BufSize < FFDataSize) && (ret == E_OK))
; ..\EAS\BSW\Dem\Dem.c	 12435                              {
; ..\EAS\BSW\Dem\Dem.c	 12436                                  Result = DEM_FILTERED_BUFFER_TOO_SMALL;
; ..\EAS\BSW\Dem\Dem.c	 12437                                  break;
; ..\EAS\BSW\Dem\Dem.c	 12438                              }
; ..\EAS\BSW\Dem\Dem.c	 12439                              else
; ..\EAS\BSW\Dem\Dem.c	 12440                              {
; ..\EAS\BSW\Dem\Dem.c	 12441                                  Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
; ..\EAS\BSW\Dem\Dem.c	 12442                                  break;
; ..\EAS\BSW\Dem\Dem.c	 12443                              } 
; ..\EAS\BSW\Dem\Dem.c	 12444                          }
; ..\EAS\BSW\Dem\Dem.c	 12445                          else
; ..\EAS\BSW\Dem\Dem.c	 12446                          {
; ..\EAS\BSW\Dem\Dem.c	 12447                              /*do nothing*/
; ..\EAS\BSW\Dem\Dem.c	 12448                          }
; ..\EAS\BSW\Dem\Dem.c	 12449                      }
; ..\EAS\BSW\Dem\Dem.c	 12450                  }
; ..\EAS\BSW\Dem\Dem.c	 12451                    
; ..\EAS\BSW\Dem\Dem.c	 12452              }
; ..\EAS\BSW\Dem\Dem.c	 12453              
; ..\EAS\BSW\Dem\Dem.c	 12454              if(Result == E_OK)
; ..\EAS\BSW\Dem\Dem.c	 12455              {
; ..\EAS\BSW\Dem\Dem.c	 12456                  break;
; ..\EAS\BSW\Dem\Dem.c	 12457              }
; ..\EAS\BSW\Dem\Dem.c	 12458              else if(Result == DEM_FILTERED_BUFFER_TOO_SMALL) 
; ..\EAS\BSW\Dem\Dem.c	 12459              {
; ..\EAS\BSW\Dem\Dem.c	 12460                  break;
; ..\EAS\BSW\Dem\Dem.c	 12461              }
; ..\EAS\BSW\Dem\Dem.c	 12462              else
; ..\EAS\BSW\Dem\Dem.c	 12463              {
; ..\EAS\BSW\Dem\Dem.c	 12464  
; ..\EAS\BSW\Dem\Dem.c	 12465              }
; ..\EAS\BSW\Dem\Dem.c	 12466          }
; ..\EAS\BSW\Dem\Dem.c	 12467          if(i >= DEM_NUM_OF_DTC)
; ..\EAS\BSW\Dem\Dem.c	 12468          {
; ..\EAS\BSW\Dem\Dem.c	 12469              Dem_J1939DcmFilterInfo.NextFilteredDTCIndex = DEM_DATA_CLEAR;
; ..\EAS\BSW\Dem\Dem.c	 12470              Result = DEM_FILTERED_NO_MATCHING_ELEMENT;
; ..\EAS\BSW\Dem\Dem.c	 12471          }
; ..\EAS\BSW\Dem\Dem.c	 12472      }
; ..\EAS\BSW\Dem\Dem.c	 12473      return Result;
; ..\EAS\BSW\Dem\Dem.c	 12474      
; ..\EAS\BSW\Dem\Dem.c	 12475  }
; ..\EAS\BSW\Dem\Dem.c	 12476  
; ..\EAS\BSW\Dem\Dem.c	 12477  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 12478  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12479  * Function Name: DemInternal_J1939GetSizeOfFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	 12480  *
; ..\EAS\BSW\Dem\Dem.c	 12481  * Description:
; ..\EAS\BSW\Dem\Dem.c	 12482  *
; ..\EAS\BSW\Dem\Dem.c	 12483  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	 12484  *
; ..\EAS\BSW\Dem\Dem.c	 12485  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	 12486  *
; ..\EAS\BSW\Dem\Dem.c	 12487  * Return:
; ..\EAS\BSW\Dem\Dem.c	 12488  *
; ..\EAS\BSW\Dem\Dem.c	 12489  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	 12490  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12491  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 12492  STATIC FUNC(Std_ReturnType, DEM_CODE) DemInternal_J1939GetSizeOfFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	 12493  (
; ..\EAS\BSW\Dem\Dem.c	 12494      uint16 DtcId,
; ..\EAS\BSW\Dem\Dem.c	 12495      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) SizeOfFreezeFrame,
; ..\EAS\BSW\Dem\Dem.c	 12496      Dem_J1939DcmSetFreezeFrameFilterType FreezeFrameKind
; ..\EAS\BSW\Dem\Dem.c	 12497  )
; ..\EAS\BSW\Dem\Dem.c	 12498  {
; ..\EAS\BSW\Dem\Dem.c	 12499      Std_ReturnType Result = E_OK;
; ..\EAS\BSW\Dem\Dem.c	 12500  #if((DEM_MAX_J1939FFSIZE_OF_DTC > 0) || (DEM_MAX_J1939EXPFFSIZE_OF_DTC > 0))
; ..\EAS\BSW\Dem\Dem.c	 12501      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	 12502      uint16 SPNIndex;
; ..\EAS\BSW\Dem\Dem.c	 12503      uint16 DataIdx;
; ..\EAS\BSW\Dem\Dem.c	 12504      uint8 DataSize;
; ..\EAS\BSW\Dem\Dem.c	 12505      uint8 *DataBufferPtr;
; ..\EAS\BSW\Dem\Dem.c	 12506      uint16 FFDataOffset = 0;
; ..\EAS\BSW\Dem\Dem.c	 12507  
; ..\EAS\BSW\Dem\Dem.c	 12508      *SizeOfFreezeFrame = 0U;
; ..\EAS\BSW\Dem\Dem.c	 12509  #if(DEM_MAX_J1939FFSIZE_OF_DTC > 0)
; ..\EAS\BSW\Dem\Dem.c	 12510      if(FreezeFrameKind == DEM_J1939DCM_FREEZEFRAME)
; ..\EAS\BSW\Dem\Dem.c	 12511      {
; ..\EAS\BSW\Dem\Dem.c	 12512          DataBufferPtr = DEM_PRIMARY_J1939DTC_FFDATA_PTR(DEM_DTC_DATAENTRYREF(DtcId));
; ..\EAS\BSW\Dem\Dem.c	 12513      }
; ..\EAS\BSW\Dem\Dem.c	 12514  #endif
; ..\EAS\BSW\Dem\Dem.c	 12515  #if(DEM_MAX_J1939EXPFFSIZE_OF_DTC > 0)
; ..\EAS\BSW\Dem\Dem.c	 12516      if(FreezeFrameKind == DEM_J1939DCM_EXPANDED_FREEZEFRAME)
; ..\EAS\BSW\Dem\Dem.c	 12517      {
; ..\EAS\BSW\Dem\Dem.c	 12518          DataBufferPtr = DEM_PRIMARY_J1939DTC_EXPFFDATA_PTR(DEM_DTC_DATAENTRYREF(DtcId));
; ..\EAS\BSW\Dem\Dem.c	 12519      }
; ..\EAS\BSW\Dem\Dem.c	 12520  #endif
; ..\EAS\BSW\Dem\Dem.c	 12521      
; ..\EAS\BSW\Dem\Dem.c	 12522      for(i = 0U; i < DEM_CFG_J1939DTC_NUM_OF_FFSPNC(DtcId); i++)
; ..\EAS\BSW\Dem\Dem.c	 12523      {   
; ..\EAS\BSW\Dem\Dem.c	 12524          SPNIndex = DEM_CFG_J1939DTC_FFSPNC_ARRAY(DtcId)[i];
; ..\EAS\BSW\Dem\Dem.c	 12525          DataIdx = DEM_CFG_DATAARRAY_OF_FFSPN(SPNIndex);
; ..\EAS\BSW\Dem\Dem.c	 12526          if(DEM_CFG_DATA_IN_DATA(DataIdx) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	 12527          {
; ..\EAS\BSW\Dem\Dem.c	 12528              DataSize = DEM_CFG_DATA_IN_DATA_SIZE(DataIdx);
; ..\EAS\BSW\Dem\Dem.c	 12529              /*SWS_Dem_00817*/
; ..\EAS\BSW\Dem\Dem.c	 12530              *SizeOfFreezeFrame += (uint16)DataSize;
; ..\EAS\BSW\Dem\Dem.c	 12531          }
; ..\EAS\BSW\Dem\Dem.c	 12532  
; ..\EAS\BSW\Dem\Dem.c	 12533          if(DEM_CFG_DATA_CS_DATA(DataIdx) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	 12534          {
; ..\EAS\BSW\Dem\Dem.c	 12535              DataSize = DEM_CFG_DATA_CS_DATA_SIZE(DataIdx);
; ..\EAS\BSW\Dem\Dem.c	 12536              *SizeOfFreezeFrame += (uint16)DataSize;
; ..\EAS\BSW\Dem\Dem.c	 12537          }
; ..\EAS\BSW\Dem\Dem.c	 12538          FFDataOffset += (*SizeOfFreezeFrame);     
; ..\EAS\BSW\Dem\Dem.c	 12539      }
; ..\EAS\BSW\Dem\Dem.c	 12540  
; ..\EAS\BSW\Dem\Dem.c	 12541  #else
; ..\EAS\BSW\Dem\Dem.c	 12542      Result = E_NOT_OK;
; ..\EAS\BSW\Dem\Dem.c	 12543  #endif
; ..\EAS\BSW\Dem\Dem.c	 12544  
; ..\EAS\BSW\Dem\Dem.c	 12545      return Result;
; ..\EAS\BSW\Dem\Dem.c	 12546  }
; ..\EAS\BSW\Dem\Dem.c	 12547  
; ..\EAS\BSW\Dem\Dem.c	 12548  
; ..\EAS\BSW\Dem\Dem.c	 12549  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 12550  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12551  * Function Name:DemInternal_J1939GetOccurrenceCounter
; ..\EAS\BSW\Dem\Dem.c	 12552  *
; ..\EAS\BSW\Dem\Dem.c	 12553  * Description:
; ..\EAS\BSW\Dem\Dem.c	 12554  *
; ..\EAS\BSW\Dem\Dem.c	 12555  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	 12556  *
; ..\EAS\BSW\Dem\Dem.c	 12557  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	 12558  *
; ..\EAS\BSW\Dem\Dem.c	 12559  * Return:
; ..\EAS\BSW\Dem\Dem.c	 12560  *
; ..\EAS\BSW\Dem\Dem.c	 12561  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	 12562  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12563  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 12564  STATIC FUNC(void, DEM_CODE) DemInternal_J1939GetOccurrenceCounter
; ..\EAS\BSW\Dem\Dem.c	 12565  (
; ..\EAS\BSW\Dem\Dem.c	 12566      uint16 DtcId,
; ..\EAS\BSW\Dem\Dem.c	 12567      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) OccurenceCounter
; ..\EAS\BSW\Dem\Dem.c	 12568  )
; ..\EAS\BSW\Dem\Dem.c	 12569  {
; ..\EAS\BSW\Dem\Dem.c	 12570      Dem_EventIdType EventId;
; ..\EAS\BSW\Dem\Dem.c	 12571      for(EventId = 0; EventId < DEM_NUM_OF_EVENT; EventId++)
; ..\EAS\BSW\Dem\Dem.c	 12572      {
; ..\EAS\BSW\Dem\Dem.c	 12573          if(DEM_CFG_EVENT_DTCREF(EventId) == DtcId)
; ..\EAS\BSW\Dem\Dem.c	 12574          {
; ..\EAS\BSW\Dem\Dem.c	 12575              *OccurenceCounter = DEM_EVENT_OCCCTR(EventId);
; ..\EAS\BSW\Dem\Dem.c	 12576              break;
; ..\EAS\BSW\Dem\Dem.c	 12577          }
; ..\EAS\BSW\Dem\Dem.c	 12578      }
; ..\EAS\BSW\Dem\Dem.c	 12579      if(*OccurenceCounter >= (uint8)0x7F)
; ..\EAS\BSW\Dem\Dem.c	 12580      {
; ..\EAS\BSW\Dem\Dem.c	 12581          *OccurenceCounter = (uint8)0x7E;
; ..\EAS\BSW\Dem\Dem.c	 12582      }
; ..\EAS\BSW\Dem\Dem.c	 12583  }
; ..\EAS\BSW\Dem\Dem.c	 12584  
; ..\EAS\BSW\Dem\Dem.c	 12585  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 12586  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12587  * Function Name:DemInternal_J1939GetDataOfFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	 12588  *
; ..\EAS\BSW\Dem\Dem.c	 12589  * Description:
; ..\EAS\BSW\Dem\Dem.c	 12590  *
; ..\EAS\BSW\Dem\Dem.c	 12591  * Inputs:
; ..\EAS\BSW\Dem\Dem.c	 12592  *
; ..\EAS\BSW\Dem\Dem.c	 12593  * Outputs:
; ..\EAS\BSW\Dem\Dem.c	 12594  *
; ..\EAS\BSW\Dem\Dem.c	 12595  * Return:
; ..\EAS\BSW\Dem\Dem.c	 12596  *
; ..\EAS\BSW\Dem\Dem.c	 12597  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	 12598  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12599  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 12600  STATIC FUNC(void, DEM_CODE) DemInternal_J1939GetDataOfFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	 12601  (
; ..\EAS\BSW\Dem\Dem.c	 12602      uint16 DtcId,
; ..\EAS\BSW\Dem\Dem.c	 12603      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) DestBuffer,
; ..\EAS\BSW\Dem\Dem.c	 12604      Dem_J1939DcmSetFreezeFrameFilterType FreezeFrameKind
; ..\EAS\BSW\Dem\Dem.c	 12605  )
; ..\EAS\BSW\Dem\Dem.c	 12606  {
; ..\EAS\BSW\Dem\Dem.c	 12607  #if((DEM_MAX_J1939FFSIZE_OF_DTC > 0) || (DEM_MAX_J1939EXPFFSIZE_OF_DTC > 0))
; ..\EAS\BSW\Dem\Dem.c	 12608      uint8 i;
; ..\EAS\BSW\Dem\Dem.c	 12609      uint8 DataIdx;
; ..\EAS\BSW\Dem\Dem.c	 12610      uint8 DataSize;
; ..\EAS\BSW\Dem\Dem.c	 12611      uint8 *SrcBufferPtr;
; ..\EAS\BSW\Dem\Dem.c	 12612      uint16 SPNIndex;
; ..\EAS\BSW\Dem\Dem.c	 12613  #if(DEM_MAX_J1939FFSIZE_OF_DTC > 0)
; ..\EAS\BSW\Dem\Dem.c	 12614      if(FreezeFrameKind == DEM_J1939DCM_FREEZEFRAME)
; ..\EAS\BSW\Dem\Dem.c	 12615      {
; ..\EAS\BSW\Dem\Dem.c	 12616          SrcBufferPtr = DEM_PRIMARY_J1939DTC_FFDATA_PTR(DEM_DTC_DATAENTRYREF(DtcId));
; ..\EAS\BSW\Dem\Dem.c	 12617      }
; ..\EAS\BSW\Dem\Dem.c	 12618  #endif
; ..\EAS\BSW\Dem\Dem.c	 12619  #if(DEM_MAX_J1939EXPFFSIZE_OF_DTC > 0)
; ..\EAS\BSW\Dem\Dem.c	 12620      if(FreezeFrameKind == DEM_J1939DCM_EXPANDED_FREEZEFRAME)
; ..\EAS\BSW\Dem\Dem.c	 12621      {
; ..\EAS\BSW\Dem\Dem.c	 12622          SrcBufferPtr = DEM_PRIMARY_J1939DTC_EXPFFDATA_PTR(DEM_DTC_DATAENTRYREF(DtcId));
; ..\EAS\BSW\Dem\Dem.c	 12623      }
; ..\EAS\BSW\Dem\Dem.c	 12624  #endif
; ..\EAS\BSW\Dem\Dem.c	 12625      for(i = 0U; i < DEM_CFG_J1939DTC_NUM_OF_FFSPNC(DtcId); i++)
; ..\EAS\BSW\Dem\Dem.c	 12626      {
; ..\EAS\BSW\Dem\Dem.c	 12627          SPNIndex = DEM_CFG_J1939DTC_FFSPNC_ARRAY(DtcId)[i];
; ..\EAS\BSW\Dem\Dem.c	 12628          DataIdx = DEM_CFG_DATAARRAY_OF_FFSPN(SPNIndex);
; ..\EAS\BSW\Dem\Dem.c	 12629          if(DEM_CFG_DATA_IN_DATA(DataIdx) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	 12630          {
; ..\EAS\BSW\Dem\Dem.c	 12631              DataSize = DEM_CFG_DATA_IN_DATA_SIZE(DataIdx);
; ..\EAS\BSW\Dem\Dem.c	 12632              Bsw_MemCpy(DestBuffer, SrcBufferPtr, DataSize);
; ..\EAS\BSW\Dem\Dem.c	 12633              DestBuffer += DataSize;
; ..\EAS\BSW\Dem\Dem.c	 12634              SrcBufferPtr += DataSize;
; ..\EAS\BSW\Dem\Dem.c	 12635          }
; ..\EAS\BSW\Dem\Dem.c	 12636          if(DEM_CFG_DATA_CS_DATA(DataIdx) != NULL_PTR)
; ..\EAS\BSW\Dem\Dem.c	 12637          {
; ..\EAS\BSW\Dem\Dem.c	 12638              DataSize = DEM_CFG_DATA_CS_DATA_SIZE(DataIdx);
; ..\EAS\BSW\Dem\Dem.c	 12639              Bsw_MemCpy(DestBuffer, SrcBufferPtr, DataSize);
; ..\EAS\BSW\Dem\Dem.c	 12640              DestBuffer += DataSize;
; ..\EAS\BSW\Dem\Dem.c	 12641              SrcBufferPtr += DataSize;
; ..\EAS\BSW\Dem\Dem.c	 12642          }    
; ..\EAS\BSW\Dem\Dem.c	 12643      }
; ..\EAS\BSW\Dem\Dem.c	 12644  #endif
; ..\EAS\BSW\Dem\Dem.c	 12645  }
; ..\EAS\BSW\Dem\Dem.c	 12646  
; ..\EAS\BSW\Dem\Dem.c	 12647  #endif
; ..\EAS\BSW\Dem\Dem.c	 12648  
; ..\EAS\BSW\Dem\Dem.c	 12649  #if(STD_ON == DEM_CFG_J1939EX_FF_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 12650  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 12651  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12652  * Function Name: Dem_J1939DcmGetNextSPNInFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	 12653  *
; ..\EAS\BSW\Dem\Dem.c	 12654  * Description: Gets next SPN.
; ..\EAS\BSW\Dem\Dem.c	 12655  *
; ..\EAS\BSW\Dem\Dem.c	 12656  * Inputs: None
; ..\EAS\BSW\Dem\Dem.c	 12657  *
; ..\EAS\BSW\Dem\Dem.c	 12658  * Outputs: SPNSupported,SPNDataLength
; ..\EAS\BSW\Dem\Dem.c	 12659  *
; ..\EAS\BSW\Dem\Dem.c	 12660  * Return: Dem_ReturnGetNextFilteredElementType
; ..\EAS\BSW\Dem\Dem.c	 12661  *
; ..\EAS\BSW\Dem\Dem.c	 12662  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	 12663  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12664  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 12665  /*SWS_Dem_00979*/
; ..\EAS\BSW\Dem\Dem.c	 12666  FUNC(Dem_ReturnGetNextFilteredElementType, DEM_CODE) Dem_J1939DcmGetNextSPNInFreezeFrame
; ..\EAS\BSW\Dem\Dem.c	 12667  (
; ..\EAS\BSW\Dem\Dem.c	 12668      P2VAR(uint32, AUTOMATIC, DEM_APPL_DATA) SPNSupported,
; ..\EAS\BSW\Dem\Dem.c	 12669      P2VAR(uint8, AUTOMATIC, DEM_APPL_DATA) SPNDataLength
; ..\EAS\BSW\Dem\Dem.c	 12670  )
; ..\EAS\BSW\Dem\Dem.c	 12671  {
; ..\EAS\BSW\Dem\Dem.c	 12672  }
; ..\EAS\BSW\Dem\Dem.c	 12673  #endif
; ..\EAS\BSW\Dem\Dem.c	 12674  /*******************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12675  * Reporting
; ..\EAS\BSW\Dem\Dem.c	 12676  *******************************************************************************/
; ..\EAS\BSW\Dem\Dem.c	 12677  #if(STD_ON == DEM_CFG_J1939_RATIO_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 12678  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 12679  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12680  * Function Name: Dem_J1939DcmSetRatioFilter
; ..\EAS\BSW\Dem\Dem.c	 12681  *
; ..\EAS\BSW\Dem\Dem.c	 12682  * Description: The function sets the Ratio filter for a specific node and
; ..\EAS\BSW\Dem\Dem.c	 12683  *              returns the corresponding Ignition Cycle Counter and General
; ..\EAS\BSW\Dem\Dem.c	 12684  *              Denominator.
; ..\EAS\BSW\Dem\Dem.c	 12685  *
; ..\EAS\BSW\Dem\Dem.c	 12686  * Inputs: node
; ..\EAS\BSW\Dem\Dem.c	 12687  *
; ..\EAS\BSW\Dem\Dem.c	 12688  * Outputs: IgnitionCycleCounter,OBDMonitoringConditionsEncountered
; ..\EAS\BSW\Dem\Dem.c	 12689  *
; ..\EAS\BSW\Dem\Dem.c	 12690  * Return: Dem_ReturnSetFilterType
; ..\EAS\BSW\Dem\Dem.c	 12691  *
; ..\EAS\BSW\Dem\Dem.c	 12692  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	 12693  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12694  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 12695  /*SWS_Dem_00980*/
; ..\EAS\BSW\Dem\Dem.c	 12696  FUNC(Dem_ReturnSetFilterType, DEM_CODE) Dem_J1939DcmSetRatioFilter
; ..\EAS\BSW\Dem\Dem.c	 12697  (
; ..\EAS\BSW\Dem\Dem.c	 12698      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) IgnitionCycleCounter,
; ..\EAS\BSW\Dem\Dem.c	 12699      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) OBDMonitoringConditionsEncountered,
; ..\EAS\BSW\Dem\Dem.c	 12700      uint8 node
; ..\EAS\BSW\Dem\Dem.c	 12701  )
; ..\EAS\BSW\Dem\Dem.c	 12702  {
; ..\EAS\BSW\Dem\Dem.c	 12703  }
; ..\EAS\BSW\Dem\Dem.c	 12704  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 12705  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12706  * Function Name: Dem_J1939DcmGetNextFilteredRatio
; ..\EAS\BSW\Dem\Dem.c	 12707  *
; ..\EAS\BSW\Dem\Dem.c	 12708  * Description: Gets the next filtered Ratio.
; ..\EAS\BSW\Dem\Dem.c	 12709  *
; ..\EAS\BSW\Dem\Dem.c	 12710  * Inputs: None
; ..\EAS\BSW\Dem\Dem.c	 12711  *
; ..\EAS\BSW\Dem\Dem.c	 12712  * Outputs: SPN,Numerator,Denominator
; ..\EAS\BSW\Dem\Dem.c	 12713  *
; ..\EAS\BSW\Dem\Dem.c	 12714  * Return: Dem_ReturnGetNextFilteredElementType
; ..\EAS\BSW\Dem\Dem.c	 12715  *
; ..\EAS\BSW\Dem\Dem.c	 12716  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	 12717  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12718  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 12719  /*SWS_Dem_00981*/
; ..\EAS\BSW\Dem\Dem.c	 12720  FUNC(Dem_ReturnGetNextFilteredElementType, DEM_CODE) Dem_J1939DcmGetNextFilteredRatio
; ..\EAS\BSW\Dem\Dem.c	 12721  (
; ..\EAS\BSW\Dem\Dem.c	 12722      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) SPN,
; ..\EAS\BSW\Dem\Dem.c	 12723      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) Numerator,
; ..\EAS\BSW\Dem\Dem.c	 12724      P2VAR(uint16, AUTOMATIC, DEM_APPL_DATA) Denominator
; ..\EAS\BSW\Dem\Dem.c	 12725  )
; ..\EAS\BSW\Dem\Dem.c	 12726  {
; ..\EAS\BSW\Dem\Dem.c	 12727  }
; ..\EAS\BSW\Dem\Dem.c	 12728  #endif
; ..\EAS\BSW\Dem\Dem.c	 12729  
; ..\EAS\BSW\Dem\Dem.c	 12730  #if(STD_ON == DEM_CFG_J1939READINESS_1_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 12731  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 12732  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12733  * Function Name: Dem_J1939DcmReadDiagnosticReadiness1
; ..\EAS\BSW\Dem\Dem.c	 12734  *
; ..\EAS\BSW\Dem\Dem.c	 12735  * Description: Service to report the value of Diagnostic Readiness 1
; ..\EAS\BSW\Dem\Dem.c	 12736  *              (DM05) computed by the Dem.
; ..\EAS\BSW\Dem\Dem.c	 12737  *
; ..\EAS\BSW\Dem\Dem.c	 12738  * Inputs: node
; ..\EAS\BSW\Dem\Dem.c	 12739  *
; ..\EAS\BSW\Dem\Dem.c	 12740  * Outputs: DataValue
; ..\EAS\BSW\Dem\Dem.c	 12741  *
; ..\EAS\BSW\Dem\Dem.c	 12742  * Return: Std_ReturnType
; ..\EAS\BSW\Dem\Dem.c	 12743  *
; ..\EAS\BSW\Dem\Dem.c	 12744  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	 12745  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12746  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 12747  /*SWS_Dem_00982*/
; ..\EAS\BSW\Dem\Dem.c	 12748  FUNC(Std_ReturnType, DEM_CODE) Dem_J1939DcmReadDiagnosticReadiness1
; ..\EAS\BSW\Dem\Dem.c	 12749  (
; ..\EAS\BSW\Dem\Dem.c	 12750      P2VAR(Dem_J1939DcmDiagnosticReadiness1Type, AUTOMATIC, DEM_APPL_DATA) DataValue,
; ..\EAS\BSW\Dem\Dem.c	 12751      uint8 node
; ..\EAS\BSW\Dem\Dem.c	 12752  )
; ..\EAS\BSW\Dem\Dem.c	 12753  {
; ..\EAS\BSW\Dem\Dem.c	 12754  }
; ..\EAS\BSW\Dem\Dem.c	 12755  #endif
; ..\EAS\BSW\Dem\Dem.c	 12756  
; ..\EAS\BSW\Dem\Dem.c	 12757  #if(STD_ON == DEM_CFG_J1939READINESS_2_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 12758  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 12759  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12760  * Function Name: Dem_J1939DcmReadDiagnosticReadiness2
; ..\EAS\BSW\Dem\Dem.c	 12761  *
; ..\EAS\BSW\Dem\Dem.c	 12762  * Description: Service to report the value of Diagnostic Readiness 2
; ..\EAS\BSW\Dem\Dem.c	 12763  *              (DM21) computed by the Dem.
; ..\EAS\BSW\Dem\Dem.c	 12764  *
; ..\EAS\BSW\Dem\Dem.c	 12765  * Inputs: node
; ..\EAS\BSW\Dem\Dem.c	 12766  *
; ..\EAS\BSW\Dem\Dem.c	 12767  * Outputs: DataValue
; ..\EAS\BSW\Dem\Dem.c	 12768  *
; ..\EAS\BSW\Dem\Dem.c	 12769  * Return: Std_ReturnType
; ..\EAS\BSW\Dem\Dem.c	 12770  *
; ..\EAS\BSW\Dem\Dem.c	 12771  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	 12772  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12773  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 12774  /*SWS_Dem_00983*/
; ..\EAS\BSW\Dem\Dem.c	 12775  FUNC(Std_ReturnType, DEM_CODE) Dem_J1939DcmReadDiagnosticReadiness2
; ..\EAS\BSW\Dem\Dem.c	 12776  (
; ..\EAS\BSW\Dem\Dem.c	 12777      P2VAR(Dem_J1939DcmDiagnosticReadiness2Type, AUTOMATIC, DEM_APPL_DATA) DataValue,
; ..\EAS\BSW\Dem\Dem.c	 12778      uint8 node
; ..\EAS\BSW\Dem\Dem.c	 12779  )
; ..\EAS\BSW\Dem\Dem.c	 12780  {
; ..\EAS\BSW\Dem\Dem.c	 12781  }
; ..\EAS\BSW\Dem\Dem.c	 12782  #endif
; ..\EAS\BSW\Dem\Dem.c	 12783  
; ..\EAS\BSW\Dem\Dem.c	 12784  #if(STD_ON == DEM_CFG_J1939READINESS_3_SUPPORT)
; ..\EAS\BSW\Dem\Dem.c	 12785  /* BEGIN_FUNCTION_HDR
; ..\EAS\BSW\Dem\Dem.c	 12786  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12787  * Function Name: Dem_J1939DcmReadDiagnosticReadiness3
; ..\EAS\BSW\Dem\Dem.c	 12788  *
; ..\EAS\BSW\Dem\Dem.c	 12789  * Description: Service to report the value of Diagnostic Readiness 3
; ..\EAS\BSW\Dem\Dem.c	 12790  *              (DM26) computed by the Dem.
; ..\EAS\BSW\Dem\Dem.c	 12791  *
; ..\EAS\BSW\Dem\Dem.c	 12792  * Inputs: node
; ..\EAS\BSW\Dem\Dem.c	 12793  *
; ..\EAS\BSW\Dem\Dem.c	 12794  * Outputs: DataValue
; ..\EAS\BSW\Dem\Dem.c	 12795  *
; ..\EAS\BSW\Dem\Dem.c	 12796  * Return: Std_ReturnType
; ..\EAS\BSW\Dem\Dem.c	 12797  *
; ..\EAS\BSW\Dem\Dem.c	 12798  * Limitations:
; ..\EAS\BSW\Dem\Dem.c	 12799  ********************************************************************************
; ..\EAS\BSW\Dem\Dem.c	 12800  END_FUNCTION_HDR*/
; ..\EAS\BSW\Dem\Dem.c	 12801  /*SWS_Dem_00770*/
; ..\EAS\BSW\Dem\Dem.c	 12802  FUNC(Std_ReturnType, DEM_CODE) Dem_J1939DcmReadDiagnosticReadiness3
; ..\EAS\BSW\Dem\Dem.c	 12803  (
; ..\EAS\BSW\Dem\Dem.c	 12804      P2VAR(Dem_J1939DcmDiagnosticReadiness3Type, AUTOMATIC, DEM_APPL_DATA) DataValue,
; ..\EAS\BSW\Dem\Dem.c	 12805      uint8 node
; ..\EAS\BSW\Dem\Dem.c	 12806  )
; ..\EAS\BSW\Dem\Dem.c	 12807  {
; ..\EAS\BSW\Dem\Dem.c	 12808  }
; ..\EAS\BSW\Dem\Dem.c	 12809  #endif
; ..\EAS\BSW\Dem\Dem.c	 12810  
; ..\EAS\BSW\Dem\Dem.c	 12811  #define DEM_STOP_SEC_CODE
; ..\EAS\BSW\Dem\Dem.c	 12812  #include "MemMap.h"
; ..\EAS\BSW\Dem\Dem.c	 12813  
; ..\EAS\BSW\Dem\Dem.c	 12814  
; ..\EAS\BSW\Dem\Dem.c	 12815  

	; Module end
