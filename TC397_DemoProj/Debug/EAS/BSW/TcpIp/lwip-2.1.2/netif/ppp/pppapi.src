	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 09003395"
	.compiler_invocation	"ctc -f cc33152a --dep-file=EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\.pppapi.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --fp-model=+float -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Lib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\App_Func -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\demo -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Adc_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Gtm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\AscLin_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Can_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\EthV2_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Stm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Main -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\APP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\BswM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanSm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Com -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\ComM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Common -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Crc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Det -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\DoIP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EcuM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Eth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthSM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTrcv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FiM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FlsTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Nm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\PduR -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\RamTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\StbM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\arpa -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\net -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\sys -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\stdc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\apps -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\priv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\UdpNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Cal -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Daq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pag -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pgm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Std -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\XcpOnEth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Library\\Vfx_ComE2E -g2 --make-target=EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\pppapi.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O1 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\pppapi.src ..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\pppapi.c"
	.compiler_name		"ctc"
	;source	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\pppapi.c'

	
$TC162
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	4549
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\pppapi.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L5
	.byte	2,1,3
	.word	170
	.byte	4
	.byte	'__codeptr',0,1,1,1
	.word	172
	.byte	5
	.byte	'unsigned char',0,1,8,4
	.byte	'boolean',0,2,102,29
	.word	195
	.byte	4
	.byte	'uint8',0,2,106,29
	.word	195
	.byte	5
	.byte	'unsigned short int',0,2,7,4
	.byte	'uint16',0,2,110,29
	.word	242
	.byte	5
	.byte	'unsigned long int',0,4,7,4
	.byte	'uint32',0,2,114,29
	.word	279
	.byte	4
	.byte	'Std_ReturnType',0,3,109,16
	.word	195
	.byte	4
	.byte	'PduIdType',0,4,37,21
	.word	195
	.byte	4
	.byte	'PduLengthType',0,4,41,22
	.word	242
	.byte	6,5,101,9,1,7
	.byte	'BUFREQ_OK',0,0,7
	.byte	'BUFREQ_E_NOT_OK',0,1,7
	.byte	'BUFREQ_E_BUSY',0,2,7
	.byte	'BUFREQ_E_OVFL',0,3,0,4
	.byte	'BufReq_ReturnType',0,5,107,3
	.word	378
	.byte	3
	.word	195
	.byte	4
	.byte	'SduDataPtrType',0,5,189,1,40
	.word	472
	.byte	6,5,204,1,9,1,7
	.byte	'TP_DATACONF',0,0,7
	.byte	'TP_DATARETRY',0,1,7
	.byte	'TP_CONFPENDING',0,2,0,4
	.byte	'TpDataStateType',0,5,216,1,3
	.word	501
	.byte	4
	.byte	'TcpIp_SocketIdType',0,6,50,16
	.word	195
	.byte	8,4
	.word	279
	.byte	9,0,0,10,6,52,9,4,11
	.byte	'Addr',0
	.word	606
	.byte	4,2,35,0,0,4
	.byte	'TcpIp_IpAddressType',0,6,55,3
	.word	615
	.byte	4
	.byte	'TcpIp_DomainType',0,6,61,16
	.word	242
	.byte	10,6,68,9,8,11
	.byte	'Domain',0
	.word	242
	.byte	2,2,35,0,11
	.byte	'Port',0
	.word	242
	.byte	2,2,35,2,11
	.byte	'Addr',0
	.word	606
	.byte	4,2,35,4,0,4
	.byte	'TcpIp_SockAddrInetType',0,6,73,3
	.word	688
	.byte	4
	.byte	'TcpIp_AddressType',0,7,128,1,15
	.word	195
	.byte	4
	.byte	'TcpIp_CtrlIdType',0,7,142,1,15
	.word	195
	.byte	4
	.byte	'TcpIp_IpAddrStateType',0,7,144,1,15
	.word	195
	.byte	4
	.byte	'TcpIp_LocalAddrAssignmentConfigType',0,7,149,1,15
	.word	195
	.byte	4
	.byte	'TcpIp_StaticAddrIdType',0,7,151,1,15
	.word	195
	.byte	10,7,152,1,9,12,11
	.byte	'State',0
	.word	195
	.byte	1,2,35,0,11
	.byte	'Netmask',0
	.word	195
	.byte	1,2,35,1,11
	.byte	'Domain',0
	.word	242
	.byte	2,2,35,2,11
	.byte	'IpAddr',0
	.word	615
	.byte	4,2,35,4,11
	.byte	'DefaultRouter',0
	.word	615
	.byte	4,2,35,8,0,4
	.byte	'TcpIp_StaticIpAddrType',0,7,162,1,3
	.word	930
	.byte	4
	.byte	'TcpIp_LocalAddrIdType',0,7,173,1,15
	.word	195
	.byte	8,3
	.word	195
	.byte	9,2,0,10,7,231,1,9,8,11
	.byte	'CtrlId',0
	.word	195
	.byte	1,2,35,0,11
	.byte	'Address',0
	.word	195
	.byte	1,2,35,1,11
	.byte	'Domain',0
	.word	242
	.byte	2,2,35,2,11
	.byte	'StaticAddrId',0
	.word	195
	.byte	1,2,35,4,11
	.byte	'Assignments',0
	.word	1087
	.byte	3,2,35,5,0,4
	.byte	'TcpIp_LocalAddrConfigType',0,7,243,1,3
	.word	1096
	.byte	10,7,245,1,9,4,11
	.byte	'ArpConfigId',0
	.word	195
	.byte	1,2,35,0,11
	.byte	'DHCPConfigId',0
	.word	195
	.byte	1,2,35,1,11
	.byte	'AutoIpInitTimeout',0
	.word	242
	.byte	2,2,35,2,0,4
	.byte	'TcpIp_IpV4CtrlConfigType',0,7,130,2,3
	.word	1230
	.byte	10,7,133,2,9,8,11
	.byte	'CtrlIdx',0
	.word	195
	.byte	1,2,35,0,11
	.byte	'FramePrio',0
	.word	195
	.byte	1,2,35,1,11
	.byte	'UnicastAddrId',0
	.word	195
	.byte	1,2,35,2,11
	.byte	'UnicastAddrLimit',0
	.word	195
	.byte	1,2,35,3,11
	.byte	'MulticastAddrId',0
	.word	195
	.byte	1,2,35,4,11
	.byte	'LocalAddrLimit',0
	.word	195
	.byte	1,2,35,5,11
	.byte	'IpV4CtrlId',0
	.word	195
	.byte	1,2,35,6,11
	.byte	'IpV6CtrlId',0
	.word	195
	.byte	1,2,35,7,0,4
	.byte	'TcpIp_NetIfCtrlConfigType',0,7,148,2,3
	.word	1341
	.byte	4
	.byte	'SoAd_RoutingGroupIdType',0,8,43,15
	.word	195
	.byte	4
	.byte	'SoAd_SoConIdType',0,8,44,15
	.word	195
	.byte	4
	.byte	'SoAd_SoConGroupIdType',0,8,45,15
	.word	195
	.byte	4
	.byte	'SoAd_PduRouteIdType',0,8,46,15
	.word	195
	.byte	4
	.byte	'SoAd_PduRouteDestIdType',0,8,47,15
	.word	195
	.byte	4
	.byte	'SoAd_SocketRouteIdType',0,8,48,15
	.word	195
	.byte	4
	.byte	'SoAd_IfTxUnconfirmedType',0,8,49,16
	.word	242
	.byte	4
	.byte	'SoAd_IfTxTimerType',0,8,51,16
	.word	242
	.byte	8,1
	.word	195
	.byte	9,0,0,10,8,53,9,2,11
	.byte	'Mask',0
	.word	1795
	.byte	1,2,35,0,11
	.byte	'RoutingState',0
	.word	1795
	.byte	1,2,35,1,0,4
	.byte	'SoAd_RoutingGroupCtrlType',0,8,57,3
	.word	1804
	.byte	6,8,63,9,1,7
	.byte	'SOAD_UL_DOIP',0,0,7
	.byte	'SOAD_UL_UDPNM',0,1,7
	.byte	'SOAD_UL_PDUR',0,2,7
	.byte	'SOAD_UL_XCP',0,3,7
	.byte	'SOAD_UL_MAX',0,4,0,4
	.byte	'SoAd_ULIndexType',0,8,71,3
	.word	1880
	.byte	4
	.byte	'SoAd_RemoteAddressType',0,9,113,32
	.word	688
	.byte	6,9,115,9,1,7
	.byte	'SOAD_SOCON_UNINIT',0,0,7
	.byte	'SOAD_SOCON_OFFLINE',0,1,7
	.byte	'SOAD_SOCON_RECONN',0,2,7
	.byte	'SOAD_SOCON_ONLINE',0,3,0,4
	.byte	'SoAd_SoConModeType',0,9,121,3
	.word	2016
	.byte	12
	.word	195
	.byte	3
	.word	2130
	.byte	12
	.word	195
	.byte	3
	.word	2140
	.byte	12
	.word	195
	.byte	3
	.word	2150
	.byte	12
	.word	1880
	.byte	3
	.word	2160
	.byte	10,9,129,1,9,36,11
	.byte	'IfBufferLength',0
	.word	242
	.byte	2,2,35,0,11
	.byte	'IfBufferOffset',0
	.word	242
	.byte	2,2,35,2,11
	.byte	'TpBufferLength',0
	.word	242
	.byte	2,2,35,4,11
	.byte	'TpBufferOffset',0
	.word	242
	.byte	2,2,35,6,11
	.byte	'PduRouteNum',0
	.word	195
	.byte	1,2,35,8,11
	.byte	'SocketRouteNum',0
	.word	195
	.byte	1,2,35,9,11
	.byte	'PduRouteDestNum',0
	.word	195
	.byte	1,2,35,10,11
	.byte	'RemoteAddrState',0
	.word	195
	.byte	1,2,35,11,11
	.byte	'RemoteAddr',0
	.word	688
	.byte	8,2,35,12,11
	.byte	'PduRouteDestList',0
	.word	2135
	.byte	4,2,35,20,11
	.byte	'PduRouteList',0
	.word	2145
	.byte	4,2,35,24,11
	.byte	'SocketRouteList',0
	.word	2155
	.byte	4,2,35,28,11
	.byte	'SoConModeChgList',0
	.word	2165
	.byte	4,2,35,32,0,4
	.byte	'SoAd_SocketConnectionType',0,9,146,1,3
	.word	2170
	.byte	10,9,148,1,9,16,11
	.byte	'CtrlFlag',0
	.word	195
	.byte	1,2,35,0,11
	.byte	'KeepAliveProbesMax',0
	.word	242
	.byte	2,2,35,2,11
	.byte	'KeepAliveInterval',0
	.word	279
	.byte	4,2,35,4,11
	.byte	'KeepAliveTime',0
	.word	279
	.byte	4,2,35,8,11
	.byte	'TxQuota',0
	.word	279
	.byte	4,2,35,12,0,4
	.byte	'SoAd_TcpProtocolType',0,9,155,1,3
	.word	2522
	.byte	10,9,157,1,9,12,11
	.byte	'CtrlFlag',0
	.word	195
	.byte	1,2,35,0,11
	.byte	'nPduTxBufferMin',0
	.word	242
	.byte	2,2,35,2,11
	.byte	'TriggerTimeout',0
	.word	242
	.byte	2,2,35,4,11
	.byte	'AliveSupervisionTimeout',0
	.word	279
	.byte	4,2,35,6,0,4
	.byte	'SoAd_UdpProtocolType',0,9,163,1,3
	.word	2672
	.byte	12
	.word	2522
	.byte	3
	.word	2809
	.byte	12
	.word	2672
	.byte	3
	.word	2819
	.byte	10,9,165,1,9,24,11
	.byte	'GroupId',0
	.word	195
	.byte	1,2,35,0,11
	.byte	'CtrlFlag',0
	.word	195
	.byte	1,2,35,1,11
	.byte	'FramePriority',0
	.word	195
	.byte	1,2,35,2,11
	.byte	'SoConNum',0
	.word	195
	.byte	1,2,35,3,11
	.byte	'SoConId',0
	.word	195
	.byte	1,2,35,4,11
	.byte	'IpAddrAssignChgNum',0
	.word	195
	.byte	1,2,35,5,11
	.byte	'LocalAddrId',0
	.word	195
	.byte	1,2,35,6,11
	.byte	'LocalPort',0
	.word	242
	.byte	2,2,35,8,11
	.byte	'IpAddrAssignChgList',0
	.word	2165
	.byte	4,2,35,12,11
	.byte	'TcpProtocolPtr',0
	.word	2814
	.byte	4,2,35,16,11
	.byte	'UdpProtocolPtr',0
	.word	2824
	.byte	4,2,35,20,0,4
	.byte	'SoAd_SocketConnectionGroupType',0,9,178,1,3
	.word	2829
	.byte	12
	.word	195
	.byte	3
	.word	3114
	.byte	10,9,180,1,9,12,11
	.byte	'CtrlFlag',0
	.word	195
	.byte	1,2,35,0,11
	.byte	'PduRouteDestNum',0
	.word	195
	.byte	1,2,35,1,11
	.byte	'SocketRouteDestNum',0
	.word	195
	.byte	1,2,35,2,11
	.byte	'PduRouteDestList',0
	.word	3119
	.byte	4,2,35,4,11
	.byte	'SocketRouteDestList',0
	.word	3119
	.byte	4,2,35,8,0,4
	.byte	'SoAd_RoutingGroupType',0,9,187,1,3
	.word	3124
	.byte	10,9,189,1,9,6,11
	.byte	'ULType',0
	.word	195
	.byte	1,2,35,0,11
	.byte	'ULIndex',0
	.word	1880
	.byte	1,2,35,1,11
	.byte	'CtrlFlag',0
	.word	195
	.byte	1,2,35,2,11
	.byte	'RouteDestNum',0
	.word	195
	.byte	1,2,35,3,11
	.byte	'RouteDestId',0
	.word	195
	.byte	1,2,35,4,11
	.byte	'TxPduId',0
	.word	195
	.byte	1,2,35,5,0,4
	.byte	'SoAd_PduRouteType',0,9,204,1,3
	.word	3288
	.byte	3
	.word	1804
	.byte	10,9,206,1,9,20,11
	.byte	'TxPduHeaderId',0
	.word	279
	.byte	4,2,35,0,11
	.byte	'SoConNum',0
	.word	195
	.byte	1,2,35,4,11
	.byte	'SoConId',0
	.word	195
	.byte	1,2,35,5,11
	.byte	'PduRouteId',0
	.word	195
	.byte	1,2,35,6,11
	.byte	'UdpTriggerMode',0
	.word	195
	.byte	1,2,35,7,11
	.byte	'UdpTriggerTimeout',0
	.word	242
	.byte	2,2,35,8,11
	.byte	'RoutingCtrlList',0
	.word	3433
	.byte	4,2,35,12,11
	.byte	'IfTriggerList',0
	.word	472
	.byte	4,2,35,16,0,4
	.byte	'SoAd_PduRouteDestType',0,9,217,1,3
	.word	3438
	.byte	10,9,219,1,9,16,11
	.byte	'RxPduHeaderId',0
	.word	279
	.byte	4,2,35,0,11
	.byte	'ULType',0
	.word	195
	.byte	1,2,35,4,11
	.byte	'ULIndex',0
	.word	1880
	.byte	1,2,35,5,11
	.byte	'SoConNum',0
	.word	195
	.byte	1,2,35,6,11
	.byte	'SoConId',0
	.word	195
	.byte	1,2,35,7,11
	.byte	'RxPduId',0
	.word	195
	.byte	1,2,35,8,11
	.byte	'RoutingCtrlList',0
	.word	3433
	.byte	4,2,35,12,0,4
	.byte	'SoAd_SocketRouteType',0,9,236,1,3
	.word	3653
	.byte	12
	.word	3438
	.byte	3
	.word	3823
	.byte	10,9,155,2,9,24,11
	.byte	'State',0
	.word	195
	.byte	1,2,35,0,11
	.byte	'Timer',0
	.word	242
	.byte	2,2,35,2,11
	.byte	'BufferLength',0
	.word	242
	.byte	2,2,35,4,11
	.byte	'BufferOffset',0
	.word	242
	.byte	2,2,35,6,11
	.byte	'UdpTxBuffer',0
	.word	472
	.byte	4,2,35,8,11
	.byte	'TotalTxLength',0
	.word	242
	.byte	2,2,35,12,11
	.byte	'UsedTxLength',0
	.word	242
	.byte	2,2,35,14,11
	.byte	'IfTxDataBuffer',0
	.word	3119
	.byte	4,2,35,16,11
	.byte	'PduRouteDestPtr',0
	.word	3828
	.byte	4,2,35,20,0,4
	.byte	'SoAd_TxSessionType',0,9,177,2,3
	.word	3833
	.byte	12
	.word	3653
	.byte	3
	.word	4057
	.byte	10,9,180,2,9,8,11
	.byte	'PduLength',0
	.word	242
	.byte	2,2,35,0,11
	.byte	'RemainLength',0
	.word	242
	.byte	2,2,35,2,11
	.byte	'SocketRoutePtr',0
	.word	4062
	.byte	4,2,35,4,0,4
	.byte	'SoAd_RxPduInfoType',0,9,185,2,3
	.word	4067
	.byte	10,9,187,2,9,12,11
	.byte	'TotalLength',0
	.word	242
	.byte	2,2,35,0,11
	.byte	'In',0
	.word	242
	.byte	2,2,35,2,11
	.byte	'Out',0
	.word	242
	.byte	2,2,35,4,11
	.byte	'BufferPtr',0
	.word	472
	.byte	4,2,35,8,0,4
	.byte	'SoAd_RxFifoType',0,9,193,2,3
	.word	4167
	.byte	10,9,195,2,9,8,11
	.byte	'TotalLength',0
	.word	242
	.byte	2,2,35,0,11
	.byte	'UsedLength',0
	.word	242
	.byte	2,2,35,2,11
	.byte	'BufferPtr',0
	.word	472
	.byte	4,2,35,4,0,4
	.byte	'SoAd_RxBufferType',0,9,200,2,3
	.word	4264
	.byte	8,8
	.word	195
	.byte	9,7,0,10,9,202,2,9,48,11
	.byte	'State',0
	.word	195
	.byte	1,2,35,0,11
	.byte	'ValidHeaderLen',0
	.word	195
	.byte	1,2,35,1,11
	.byte	'PduHeader',0
	.word	4358
	.byte	8,2,35,2,11
	.byte	'RxPduInfo',0
	.word	4067
	.byte	8,2,35,12,11
	.byte	'ProcessPduInfo',0
	.word	4067
	.byte	8,2,35,20,11
	.byte	'IfBuffer',0
	.word	4264
	.byte	8,2,35,28,11
	.byte	'TpBuffer',0
	.word	4167
	.byte	12,2,35,36,0,4
	.byte	'SoAd_RxSessionType',0,9,216,2,3
	.word	4367
	.byte	4
	.byte	'u8_t',0,10,61,25
	.word	195
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,0,0,3,15,0,73,19,0,0,4,22,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,5,36,0,3,8,11,15,62,15,0,0,6,4,1,58,15,59,15,57,15,11,15,0,0,7,40,0,3,8,28,13,0,0,8,1
	.byte	1,11,15,73,19,0,0,9,33,0,47,15,0,0,10,19,1,58,15,59,15,57,15,11,15,0,0,11,13,0,3,8,73,19,11,15,56,9,0
	.byte	0,12,38,0,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L7-.L6
.L6:
	.half	3
	.word	.L9-.L8
.L8:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch',0,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\pppapi.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Std_Types.h',0,1,0,0
	.byte	'ComStack_Types_Cfg.h',0,2,0,0
	.byte	'ComStack_Types.h',0,3,0,0
	.byte	'TcpIp_GeneratedTypes.h',0,2,0,0
	.byte	'TcpIp_Types.h',0,4,0,0
	.byte	'SoAd_GeneratedTypes.h',0,2,0,0
	.byte	'SoAd_Types.h',0,5,0,0
	.byte	'cc.h',0,6,0,0,0
.L9:
.L7:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	     1  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	     2   * @file
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	     3   * Point To Point Protocol Sequential API module
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	     4   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	     5   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	     6  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	     7  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	     8   * Redistribution and use in source and binary forms, with or without modification,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	     9   * are permitted provided that the following conditions are met:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    10   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    11   * 1. Redistributions of source code must retain the above copyright notice,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    12   *    this list of conditions and the following disclaimer.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    13   * 2. Redistributions in binary form must reproduce the above copyright notice,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    14   *    this list of conditions and the following disclaimer in the documentation
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    15   *    and/or other materials provided with the distribution.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    16   * 3. The name of the author may not be used to endorse or promote products
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    17   *    derived from this software without specific prior written permission.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    18   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    19   * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    20   * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    21   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    22   * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    23   * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    24   * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    25   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    26   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    27   * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    28   * OF SUCH DAMAGE.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    29   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    30   * This file is part of the lwIP TCP/IP stack.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    31   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    32   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    33  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    34  #include "netif/ppp/ppp_opts.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    35  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    36  #if LWIP_PPP_API /* don't build if not configured for use in lwipopts.h */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    37  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    38  #include "netif/ppp/pppapi.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    39  #include "lwip/priv/tcpip_priv.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    40  #include "netif/ppp/pppoe.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    41  #include "netif/ppp/pppol2tp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    42  #include "netif/ppp/pppos.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    43  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    44  #if LWIP_MPU_COMPATIBLE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    45  LWIP_MEMPOOL_DECLARE(PPPAPI_MSG, MEMP_NUM_PPP_API_MSG, sizeof(struct pppapi_msg), "PPPAPI_MSG")
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    46  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    47  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    48  #define PPPAPI_VAR_REF(name)               API_VAR_REF(name)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    49  #define PPPAPI_VAR_DECLARE(name)           API_VAR_DECLARE(struct pppapi_msg, name)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    50  #define PPPAPI_VAR_ALLOC(name)             API_VAR_ALLOC_POOL(struct pppapi_msg, PPPAPI_MSG, name, ERR_MEM)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    51  #define PPPAPI_VAR_ALLOC_RETURN_NULL(name) API_VAR_ALLOC_POOL(struct pppapi_msg, PPPAPI_MSG, name, NULL)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    52  #define PPPAPI_VAR_FREE(name)              API_VAR_FREE_POOL(PPPAPI_MSG, name)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    53  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    54  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    55   * Call ppp_set_default() inside the tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    56   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    57  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    58  pppapi_do_ppp_set_default(struct tcpip_api_call_data *m)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    59  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    60    /* cast through void* to silence alignment warnings. 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    61     * We know it works because the structs have been instantiated as struct pppapi_msg */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    62    struct pppapi_msg *msg = (struct pppapi_msg *)(void*)m;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    63    
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    64    ppp_set_default(msg->msg.ppp);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    65    return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    66  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    67  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    68  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    69   * Call ppp_set_default() in a thread-safe way by running that function inside the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    70   * tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    71   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    72  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    73  pppapi_set_default(ppp_pcb *pcb)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    74  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    75    err_t err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    76    PPPAPI_VAR_DECLARE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    77    PPPAPI_VAR_ALLOC(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    78  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    79    PPPAPI_VAR_REF(msg).msg.ppp = pcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    80    err = tcpip_api_call(pppapi_do_ppp_set_default, &PPPAPI_VAR_REF(msg).call);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    81    PPPAPI_VAR_FREE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    82    return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    83  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    84  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    85  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    86  #if PPP_NOTIFY_PHASE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    87  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    88   * Call ppp_set_notify_phase_callback() inside the tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    89   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    90  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    91  pppapi_do_ppp_set_notify_phase_callback(struct tcpip_api_call_data *m)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    92  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    93    /* cast through void* to silence alignment warnings. 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    94     * We know it works because the structs have been instantiated as struct pppapi_msg */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    95     struct pppapi_msg *msg = (struct pppapi_msg *)(void*)m;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    96  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    97    ppp_set_notify_phase_callback(msg->msg.ppp, msg->msg.msg.setnotifyphasecb.notify_phase_cb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    98    return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	    99  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   100  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   101  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   102   * Call ppp_set_notify_phase_callback() in a thread-safe way by running that function inside the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   103   * tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   104   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   105  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   106  pppapi_set_notify_phase_callback(ppp_pcb *pcb, ppp_notify_phase_cb_fn notify_phase_cb)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   107  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   108    err_t err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   109    PPPAPI_VAR_DECLARE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   110    PPPAPI_VAR_ALLOC(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   111  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   112    PPPAPI_VAR_REF(msg).msg.ppp = pcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   113    PPPAPI_VAR_REF(msg).msg.msg.setnotifyphasecb.notify_phase_cb = notify_phase_cb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   114    err = tcpip_api_call(pppapi_do_ppp_set_notify_phase_callback, &PPPAPI_VAR_REF(msg).call);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   115    PPPAPI_VAR_FREE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   116    return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   117  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   118  #endif /* PPP_NOTIFY_PHASE */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   119  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   120  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   121  #if PPPOS_SUPPORT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   122  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   123   * Call pppos_create() inside the tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   124   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   125  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   126  pppapi_do_pppos_create(struct tcpip_api_call_data *m)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   127  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   128    /* cast through void* to silence alignment warnings. 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   129     * We know it works because the structs have been instantiated as struct pppapi_msg */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   130    struct pppapi_msg *msg = (struct pppapi_msg *)(void*)m;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   131  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   132    msg->msg.ppp = pppos_create(msg->msg.msg.serialcreate.pppif, msg->msg.msg.serialcreate.output_cb,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   133      msg->msg.msg.serialcreate.link_status_cb, msg->msg.msg.serialcreate.ctx_cb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   134    return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   135  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   136  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   137  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   138   * Call pppos_create() in a thread-safe way by running that function inside the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   139   * tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   140   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   141  ppp_pcb*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   142  pppapi_pppos_create(struct netif *pppif, pppos_output_cb_fn output_cb,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   143                 ppp_link_status_cb_fn link_status_cb, void *ctx_cb)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   144  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   145    ppp_pcb* result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   146    PPPAPI_VAR_DECLARE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   147    PPPAPI_VAR_ALLOC_RETURN_NULL(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   148  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   149    PPPAPI_VAR_REF(msg).msg.ppp = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   150    PPPAPI_VAR_REF(msg).msg.msg.serialcreate.pppif = pppif;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   151    PPPAPI_VAR_REF(msg).msg.msg.serialcreate.output_cb = output_cb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   152    PPPAPI_VAR_REF(msg).msg.msg.serialcreate.link_status_cb = link_status_cb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   153    PPPAPI_VAR_REF(msg).msg.msg.serialcreate.ctx_cb = ctx_cb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   154    tcpip_api_call(pppapi_do_pppos_create, &PPPAPI_VAR_REF(msg).call);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   155    result = PPPAPI_VAR_REF(msg).msg.ppp;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   156    PPPAPI_VAR_FREE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   157    return result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   158  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   159  #endif /* PPPOS_SUPPORT */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   160  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   161  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   162  #if PPPOE_SUPPORT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   163  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   164   * Call pppoe_create() inside the tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   165   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   166  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   167  pppapi_do_pppoe_create(struct tcpip_api_call_data *m)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   168  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   169    /* cast through void* to silence alignment warnings. 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   170     * We know it works because the structs have been instantiated as struct pppapi_msg */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   171    struct pppapi_msg *msg = (struct pppapi_msg *)(void*)m;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   172  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   173    msg->msg.ppp = pppoe_create(msg->msg.msg.ethernetcreate.pppif, msg->msg.msg.ethernetcreate.ethif,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   174      msg->msg.msg.ethernetcreate.service_name, msg->msg.msg.ethernetcreate.concentrator_name,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   175      msg->msg.msg.ethernetcreate.link_status_cb, msg->msg.msg.ethernetcreate.ctx_cb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   176    return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   177  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   178  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   179  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   180   * Call pppoe_create() in a thread-safe way by running that function inside the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   181   * tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   182   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   183  ppp_pcb*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   184  pppapi_pppoe_create(struct netif *pppif, struct netif *ethif, const char *service_name,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   185                              const char *concentrator_name, ppp_link_status_cb_fn link_status_cb,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   186                              void *ctx_cb)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   187  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   188    ppp_pcb* result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   189    PPPAPI_VAR_DECLARE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   190    PPPAPI_VAR_ALLOC_RETURN_NULL(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   191  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   192    PPPAPI_VAR_REF(msg).msg.ppp = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   193    PPPAPI_VAR_REF(msg).msg.msg.ethernetcreate.pppif = pppif;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   194    PPPAPI_VAR_REF(msg).msg.msg.ethernetcreate.ethif = ethif;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   195    PPPAPI_VAR_REF(msg).msg.msg.ethernetcreate.service_name = service_name;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   196    PPPAPI_VAR_REF(msg).msg.msg.ethernetcreate.concentrator_name = concentrator_name;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   197    PPPAPI_VAR_REF(msg).msg.msg.ethernetcreate.link_status_cb = link_status_cb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   198    PPPAPI_VAR_REF(msg).msg.msg.ethernetcreate.ctx_cb = ctx_cb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   199    tcpip_api_call(pppapi_do_pppoe_create, &PPPAPI_VAR_REF(msg).call);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   200    result = PPPAPI_VAR_REF(msg).msg.ppp;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   201    PPPAPI_VAR_FREE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   202    return result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   203  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   204  #endif /* PPPOE_SUPPORT */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   205  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   206  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   207  #if PPPOL2TP_SUPPORT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   208  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   209   * Call pppol2tp_create() inside the tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   210   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   211  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   212  pppapi_do_pppol2tp_create(struct tcpip_api_call_data *m)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   213  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   214    /* cast through void* to silence alignment warnings. 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   215     * We know it works because the structs have been instantiated as struct pppapi_msg */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   216    struct pppapi_msg *msg = (struct pppapi_msg *)(void*)m;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   217  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   218    msg->msg.ppp = pppol2tp_create(msg->msg.msg.l2tpcreate.pppif,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   219      msg->msg.msg.l2tpcreate.netif, API_EXPR_REF(msg->msg.msg.l2tpcreate.ipaddr), msg->msg.msg.l2tpcreate.port,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   220  #if PPPOL2TP_AUTH_SUPPORT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   221      msg->msg.msg.l2tpcreate.secret,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   222      msg->msg.msg.l2tpcreate.secret_len,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   223  #else /* PPPOL2TP_AUTH_SUPPORT */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   224      NULL,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   225      0,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   226  #endif /* PPPOL2TP_AUTH_SUPPORT */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   227      msg->msg.msg.l2tpcreate.link_status_cb, msg->msg.msg.l2tpcreate.ctx_cb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   228    return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   229  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   230  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   231  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   232   * Call pppol2tp_create() in a thread-safe way by running that function inside the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   233   * tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   234   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   235  ppp_pcb*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   236  pppapi_pppol2tp_create(struct netif *pppif, struct netif *netif, ip_addr_t *ipaddr, u16_t port,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   237                          const u8_t *secret, u8_t secret_len,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   238                          ppp_link_status_cb_fn link_status_cb, void *ctx_cb)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   239  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   240    ppp_pcb* result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   241    PPPAPI_VAR_DECLARE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   242    PPPAPI_VAR_ALLOC_RETURN_NULL(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   243  #if !PPPOL2TP_AUTH_SUPPORT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   244    LWIP_UNUSED_ARG(secret);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   245    LWIP_UNUSED_ARG(secret_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   246  #endif /* !PPPOL2TP_AUTH_SUPPORT */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   247  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   248    PPPAPI_VAR_REF(msg).msg.ppp = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   249    PPPAPI_VAR_REF(msg).msg.msg.l2tpcreate.pppif = pppif;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   250    PPPAPI_VAR_REF(msg).msg.msg.l2tpcreate.netif = netif;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   251    PPPAPI_VAR_REF(msg).msg.msg.l2tpcreate.ipaddr = PPPAPI_VAR_REF(ipaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   252    PPPAPI_VAR_REF(msg).msg.msg.l2tpcreate.port = port;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   253  #if PPPOL2TP_AUTH_SUPPORT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   254    PPPAPI_VAR_REF(msg).msg.msg.l2tpcreate.secret = secret;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   255    PPPAPI_VAR_REF(msg).msg.msg.l2tpcreate.secret_len = secret_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   256  #endif /* PPPOL2TP_AUTH_SUPPORT */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   257    PPPAPI_VAR_REF(msg).msg.msg.l2tpcreate.link_status_cb = link_status_cb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   258    PPPAPI_VAR_REF(msg).msg.msg.l2tpcreate.ctx_cb = ctx_cb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   259    tcpip_api_call(pppapi_do_pppol2tp_create, &PPPAPI_VAR_REF(msg).call);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   260    result = PPPAPI_VAR_REF(msg).msg.ppp;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   261    PPPAPI_VAR_FREE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   262    return result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   263  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   264  #endif /* PPPOL2TP_SUPPORT */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   265  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   266  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   267  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   268   * Call ppp_connect() inside the tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   269   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   270  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   271  pppapi_do_ppp_connect(struct tcpip_api_call_data *m)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   272  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   273    /* cast through void* to silence alignment warnings. 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   274     * We know it works because the structs have been instantiated as struct pppapi_msg */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   275    struct pppapi_msg *msg = (struct pppapi_msg *)(void*)m;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   276  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   277    return ppp_connect(msg->msg.ppp, msg->msg.msg.connect.holdoff);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   278  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   279  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   280  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   281   * Call ppp_connect() in a thread-safe way by running that function inside the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   282   * tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   283   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   284  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   285  pppapi_connect(ppp_pcb *pcb, u16_t holdoff)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   286  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   287    err_t err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   288    PPPAPI_VAR_DECLARE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   289    PPPAPI_VAR_ALLOC(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   290  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   291    PPPAPI_VAR_REF(msg).msg.ppp = pcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   292    PPPAPI_VAR_REF(msg).msg.msg.connect.holdoff = holdoff;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   293    err = tcpip_api_call(pppapi_do_ppp_connect, &PPPAPI_VAR_REF(msg).call);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   294    PPPAPI_VAR_FREE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   295    return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   296  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   297  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   298  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   299  #if PPP_SERVER
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   300  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   301   * Call ppp_listen() inside the tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   302   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   303  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   304  pppapi_do_ppp_listen(struct tcpip_api_call_data *m)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   305  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   306    /* cast through void* to silence alignment warnings. 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   307     * We know it works because the structs have been instantiated as struct pppapi_msg */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   308    struct pppapi_msg *msg = (struct pppapi_msg *)(void*)m;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   309  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   310    return ppp_listen(msg->msg.ppp);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   311  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   312  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   313  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   314   * Call ppp_listen() in a thread-safe way by running that function inside the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   315   * tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   316   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   317  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   318  pppapi_listen(ppp_pcb *pcb)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   319  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   320    err_t err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   321    PPPAPI_VAR_DECLARE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   322    PPPAPI_VAR_ALLOC(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   323  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   324    PPPAPI_VAR_REF(msg).msg.ppp = pcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   325    err = tcpip_api_call(pppapi_do_ppp_listen, &PPPAPI_VAR_REF(msg).call);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   326    PPPAPI_VAR_FREE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   327    return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   328  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   329  #endif /* PPP_SERVER */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   330  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   331  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   332  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   333   * Call ppp_close() inside the tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   334   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   335  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   336  pppapi_do_ppp_close(struct tcpip_api_call_data *m)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   337  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   338    /* cast through void* to silence alignment warnings. 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   339     * We know it works because the structs have been instantiated as struct pppapi_msg */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   340    struct pppapi_msg *msg = (struct pppapi_msg *)(void*)m;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   341  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   342    return ppp_close(msg->msg.ppp, msg->msg.msg.close.nocarrier);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   343  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   344  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   345  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   346   * Call ppp_close() in a thread-safe way by running that function inside the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   347   * tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   348   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   349  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   350  pppapi_close(ppp_pcb *pcb, u8_t nocarrier)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   351  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   352    err_t err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   353    PPPAPI_VAR_DECLARE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   354    PPPAPI_VAR_ALLOC(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   355  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   356    PPPAPI_VAR_REF(msg).msg.ppp = pcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   357    PPPAPI_VAR_REF(msg).msg.msg.close.nocarrier = nocarrier;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   358    err = tcpip_api_call(pppapi_do_ppp_close, &PPPAPI_VAR_REF(msg).call);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   359    PPPAPI_VAR_FREE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   360    return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   361  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   362  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   363  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   364  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   365   * Call ppp_free() inside the tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   366   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   367  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   368  pppapi_do_ppp_free(struct tcpip_api_call_data *m)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   369  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   370    /* cast through void* to silence alignment warnings. 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   371     * We know it works because the structs have been instantiated as struct pppapi_msg */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   372    struct pppapi_msg *msg = (struct pppapi_msg *)(void*)m;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   373  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   374    return ppp_free(msg->msg.ppp);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   375  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   376  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   377  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   378   * Call ppp_free() in a thread-safe way by running that function inside the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   379   * tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   380   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   381  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   382  pppapi_free(ppp_pcb *pcb)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   383  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   384    err_t err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   385    PPPAPI_VAR_DECLARE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   386    PPPAPI_VAR_ALLOC(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   387  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   388    PPPAPI_VAR_REF(msg).msg.ppp = pcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   389    err = tcpip_api_call(pppapi_do_ppp_free, &PPPAPI_VAR_REF(msg).call);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   390    PPPAPI_VAR_FREE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   391    return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   392  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   393  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   394  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   395  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   396   * Call ppp_ioctl() inside the tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   397   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   398  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   399  pppapi_do_ppp_ioctl(struct tcpip_api_call_data *m)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   400  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   401    /* cast through void* to silence alignment warnings. 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   402     * We know it works because the structs have been instantiated as struct pppapi_msg */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   403    struct pppapi_msg *msg = (struct pppapi_msg *)(void*)m;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   404  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   405    return ppp_ioctl(msg->msg.ppp, msg->msg.msg.ioctl.cmd, msg->msg.msg.ioctl.arg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   406  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   407  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   408  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   409   * Call ppp_ioctl() in a thread-safe way by running that function inside the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   410   * tcpip_thread context.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   411   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   412  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   413  pppapi_ioctl(ppp_pcb *pcb, u8_t cmd, void *arg)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   414  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   415    err_t err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   416    PPPAPI_VAR_DECLARE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   417    PPPAPI_VAR_ALLOC(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   418  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   419    PPPAPI_VAR_REF(msg).msg.ppp = pcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   420    PPPAPI_VAR_REF(msg).msg.msg.ioctl.cmd = cmd;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   421    PPPAPI_VAR_REF(msg).msg.msg.ioctl.arg = arg;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   422    err = tcpip_api_call(pppapi_do_ppp_ioctl, &PPPAPI_VAR_REF(msg).call);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   423    PPPAPI_VAR_FREE(msg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   424    return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   425  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   426  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppapi.c	   427  #endif /* LWIP_PPP_API */

	; Module end
