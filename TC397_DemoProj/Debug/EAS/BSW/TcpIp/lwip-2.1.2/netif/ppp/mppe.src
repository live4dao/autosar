	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 09003395"
	.compiler_invocation	"ctc -f cc4996a --dep-file=EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\.mppe.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --fp-model=+float -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Lib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\App_Func -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\demo -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Adc_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Gtm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\AscLin_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Can_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\EthV2_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Stm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Main -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\APP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\BswM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanSm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Com -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\ComM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Common -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Crc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Det -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\DoIP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EcuM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Eth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthSM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTrcv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FiM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FlsTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Nm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\PduR -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\RamTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\StbM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\arpa -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\net -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\sys -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\stdc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\apps -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\priv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\UdpNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Cal -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Daq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pag -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pgm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Std -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\XcpOnEth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Library\\Vfx_ComE2E -g2 --make-target=EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\mppe.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O1 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\mppe.src ..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\mppe.c"
	.compiler_name		"ctc"
	;source	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\mppe.c'

	
$TC162
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	4547
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\mppe.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L5
	.byte	2,1,3
	.word	168
	.byte	4
	.byte	'__codeptr',0,1,1,1
	.word	170
	.byte	5
	.byte	'unsigned char',0,1,8,4
	.byte	'boolean',0,2,102,29
	.word	193
	.byte	4
	.byte	'uint8',0,2,106,29
	.word	193
	.byte	5
	.byte	'unsigned short int',0,2,7,4
	.byte	'uint16',0,2,110,29
	.word	240
	.byte	5
	.byte	'unsigned long int',0,4,7,4
	.byte	'uint32',0,2,114,29
	.word	277
	.byte	4
	.byte	'Std_ReturnType',0,3,109,16
	.word	193
	.byte	4
	.byte	'PduIdType',0,4,37,21
	.word	193
	.byte	4
	.byte	'PduLengthType',0,4,41,22
	.word	240
	.byte	6,5,101,9,1,7
	.byte	'BUFREQ_OK',0,0,7
	.byte	'BUFREQ_E_NOT_OK',0,1,7
	.byte	'BUFREQ_E_BUSY',0,2,7
	.byte	'BUFREQ_E_OVFL',0,3,0,4
	.byte	'BufReq_ReturnType',0,5,107,3
	.word	376
	.byte	3
	.word	193
	.byte	4
	.byte	'SduDataPtrType',0,5,189,1,40
	.word	470
	.byte	6,5,204,1,9,1,7
	.byte	'TP_DATACONF',0,0,7
	.byte	'TP_DATARETRY',0,1,7
	.byte	'TP_CONFPENDING',0,2,0,4
	.byte	'TpDataStateType',0,5,216,1,3
	.word	499
	.byte	4
	.byte	'TcpIp_SocketIdType',0,6,50,16
	.word	193
	.byte	8,4
	.word	277
	.byte	9,0,0,10,6,52,9,4,11
	.byte	'Addr',0
	.word	604
	.byte	4,2,35,0,0,4
	.byte	'TcpIp_IpAddressType',0,6,55,3
	.word	613
	.byte	4
	.byte	'TcpIp_DomainType',0,6,61,16
	.word	240
	.byte	10,6,68,9,8,11
	.byte	'Domain',0
	.word	240
	.byte	2,2,35,0,11
	.byte	'Port',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'Addr',0
	.word	604
	.byte	4,2,35,4,0,4
	.byte	'TcpIp_SockAddrInetType',0,6,73,3
	.word	686
	.byte	4
	.byte	'TcpIp_AddressType',0,7,128,1,15
	.word	193
	.byte	4
	.byte	'TcpIp_CtrlIdType',0,7,142,1,15
	.word	193
	.byte	4
	.byte	'TcpIp_IpAddrStateType',0,7,144,1,15
	.word	193
	.byte	4
	.byte	'TcpIp_LocalAddrAssignmentConfigType',0,7,149,1,15
	.word	193
	.byte	4
	.byte	'TcpIp_StaticAddrIdType',0,7,151,1,15
	.word	193
	.byte	10,7,152,1,9,12,11
	.byte	'State',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'Netmask',0
	.word	193
	.byte	1,2,35,1,11
	.byte	'Domain',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'IpAddr',0
	.word	613
	.byte	4,2,35,4,11
	.byte	'DefaultRouter',0
	.word	613
	.byte	4,2,35,8,0,4
	.byte	'TcpIp_StaticIpAddrType',0,7,162,1,3
	.word	928
	.byte	4
	.byte	'TcpIp_LocalAddrIdType',0,7,173,1,15
	.word	193
	.byte	8,3
	.word	193
	.byte	9,2,0,10,7,231,1,9,8,11
	.byte	'CtrlId',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'Address',0
	.word	193
	.byte	1,2,35,1,11
	.byte	'Domain',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'StaticAddrId',0
	.word	193
	.byte	1,2,35,4,11
	.byte	'Assignments',0
	.word	1085
	.byte	3,2,35,5,0,4
	.byte	'TcpIp_LocalAddrConfigType',0,7,243,1,3
	.word	1094
	.byte	10,7,245,1,9,4,11
	.byte	'ArpConfigId',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'DHCPConfigId',0
	.word	193
	.byte	1,2,35,1,11
	.byte	'AutoIpInitTimeout',0
	.word	240
	.byte	2,2,35,2,0,4
	.byte	'TcpIp_IpV4CtrlConfigType',0,7,130,2,3
	.word	1228
	.byte	10,7,133,2,9,8,11
	.byte	'CtrlIdx',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'FramePrio',0
	.word	193
	.byte	1,2,35,1,11
	.byte	'UnicastAddrId',0
	.word	193
	.byte	1,2,35,2,11
	.byte	'UnicastAddrLimit',0
	.word	193
	.byte	1,2,35,3,11
	.byte	'MulticastAddrId',0
	.word	193
	.byte	1,2,35,4,11
	.byte	'LocalAddrLimit',0
	.word	193
	.byte	1,2,35,5,11
	.byte	'IpV4CtrlId',0
	.word	193
	.byte	1,2,35,6,11
	.byte	'IpV6CtrlId',0
	.word	193
	.byte	1,2,35,7,0,4
	.byte	'TcpIp_NetIfCtrlConfigType',0,7,148,2,3
	.word	1339
	.byte	4
	.byte	'SoAd_RoutingGroupIdType',0,8,43,15
	.word	193
	.byte	4
	.byte	'SoAd_SoConIdType',0,8,44,15
	.word	193
	.byte	4
	.byte	'SoAd_SoConGroupIdType',0,8,45,15
	.word	193
	.byte	4
	.byte	'SoAd_PduRouteIdType',0,8,46,15
	.word	193
	.byte	4
	.byte	'SoAd_PduRouteDestIdType',0,8,47,15
	.word	193
	.byte	4
	.byte	'SoAd_SocketRouteIdType',0,8,48,15
	.word	193
	.byte	4
	.byte	'SoAd_IfTxUnconfirmedType',0,8,49,16
	.word	240
	.byte	4
	.byte	'SoAd_IfTxTimerType',0,8,51,16
	.word	240
	.byte	8,1
	.word	193
	.byte	9,0,0,10,8,53,9,2,11
	.byte	'Mask',0
	.word	1793
	.byte	1,2,35,0,11
	.byte	'RoutingState',0
	.word	1793
	.byte	1,2,35,1,0,4
	.byte	'SoAd_RoutingGroupCtrlType',0,8,57,3
	.word	1802
	.byte	6,8,63,9,1,7
	.byte	'SOAD_UL_DOIP',0,0,7
	.byte	'SOAD_UL_UDPNM',0,1,7
	.byte	'SOAD_UL_PDUR',0,2,7
	.byte	'SOAD_UL_XCP',0,3,7
	.byte	'SOAD_UL_MAX',0,4,0,4
	.byte	'SoAd_ULIndexType',0,8,71,3
	.word	1878
	.byte	4
	.byte	'SoAd_RemoteAddressType',0,9,113,32
	.word	686
	.byte	6,9,115,9,1,7
	.byte	'SOAD_SOCON_UNINIT',0,0,7
	.byte	'SOAD_SOCON_OFFLINE',0,1,7
	.byte	'SOAD_SOCON_RECONN',0,2,7
	.byte	'SOAD_SOCON_ONLINE',0,3,0,4
	.byte	'SoAd_SoConModeType',0,9,121,3
	.word	2014
	.byte	12
	.word	193
	.byte	3
	.word	2128
	.byte	12
	.word	193
	.byte	3
	.word	2138
	.byte	12
	.word	193
	.byte	3
	.word	2148
	.byte	12
	.word	1878
	.byte	3
	.word	2158
	.byte	10,9,129,1,9,36,11
	.byte	'IfBufferLength',0
	.word	240
	.byte	2,2,35,0,11
	.byte	'IfBufferOffset',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'TpBufferLength',0
	.word	240
	.byte	2,2,35,4,11
	.byte	'TpBufferOffset',0
	.word	240
	.byte	2,2,35,6,11
	.byte	'PduRouteNum',0
	.word	193
	.byte	1,2,35,8,11
	.byte	'SocketRouteNum',0
	.word	193
	.byte	1,2,35,9,11
	.byte	'PduRouteDestNum',0
	.word	193
	.byte	1,2,35,10,11
	.byte	'RemoteAddrState',0
	.word	193
	.byte	1,2,35,11,11
	.byte	'RemoteAddr',0
	.word	686
	.byte	8,2,35,12,11
	.byte	'PduRouteDestList',0
	.word	2133
	.byte	4,2,35,20,11
	.byte	'PduRouteList',0
	.word	2143
	.byte	4,2,35,24,11
	.byte	'SocketRouteList',0
	.word	2153
	.byte	4,2,35,28,11
	.byte	'SoConModeChgList',0
	.word	2163
	.byte	4,2,35,32,0,4
	.byte	'SoAd_SocketConnectionType',0,9,146,1,3
	.word	2168
	.byte	10,9,148,1,9,16,11
	.byte	'CtrlFlag',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'KeepAliveProbesMax',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'KeepAliveInterval',0
	.word	277
	.byte	4,2,35,4,11
	.byte	'KeepAliveTime',0
	.word	277
	.byte	4,2,35,8,11
	.byte	'TxQuota',0
	.word	277
	.byte	4,2,35,12,0,4
	.byte	'SoAd_TcpProtocolType',0,9,155,1,3
	.word	2520
	.byte	10,9,157,1,9,12,11
	.byte	'CtrlFlag',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'nPduTxBufferMin',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'TriggerTimeout',0
	.word	240
	.byte	2,2,35,4,11
	.byte	'AliveSupervisionTimeout',0
	.word	277
	.byte	4,2,35,6,0,4
	.byte	'SoAd_UdpProtocolType',0,9,163,1,3
	.word	2670
	.byte	12
	.word	2520
	.byte	3
	.word	2807
	.byte	12
	.word	2670
	.byte	3
	.word	2817
	.byte	10,9,165,1,9,24,11
	.byte	'GroupId',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'CtrlFlag',0
	.word	193
	.byte	1,2,35,1,11
	.byte	'FramePriority',0
	.word	193
	.byte	1,2,35,2,11
	.byte	'SoConNum',0
	.word	193
	.byte	1,2,35,3,11
	.byte	'SoConId',0
	.word	193
	.byte	1,2,35,4,11
	.byte	'IpAddrAssignChgNum',0
	.word	193
	.byte	1,2,35,5,11
	.byte	'LocalAddrId',0
	.word	193
	.byte	1,2,35,6,11
	.byte	'LocalPort',0
	.word	240
	.byte	2,2,35,8,11
	.byte	'IpAddrAssignChgList',0
	.word	2163
	.byte	4,2,35,12,11
	.byte	'TcpProtocolPtr',0
	.word	2812
	.byte	4,2,35,16,11
	.byte	'UdpProtocolPtr',0
	.word	2822
	.byte	4,2,35,20,0,4
	.byte	'SoAd_SocketConnectionGroupType',0,9,178,1,3
	.word	2827
	.byte	12
	.word	193
	.byte	3
	.word	3112
	.byte	10,9,180,1,9,12,11
	.byte	'CtrlFlag',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'PduRouteDestNum',0
	.word	193
	.byte	1,2,35,1,11
	.byte	'SocketRouteDestNum',0
	.word	193
	.byte	1,2,35,2,11
	.byte	'PduRouteDestList',0
	.word	3117
	.byte	4,2,35,4,11
	.byte	'SocketRouteDestList',0
	.word	3117
	.byte	4,2,35,8,0,4
	.byte	'SoAd_RoutingGroupType',0,9,187,1,3
	.word	3122
	.byte	10,9,189,1,9,6,11
	.byte	'ULType',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'ULIndex',0
	.word	1878
	.byte	1,2,35,1,11
	.byte	'CtrlFlag',0
	.word	193
	.byte	1,2,35,2,11
	.byte	'RouteDestNum',0
	.word	193
	.byte	1,2,35,3,11
	.byte	'RouteDestId',0
	.word	193
	.byte	1,2,35,4,11
	.byte	'TxPduId',0
	.word	193
	.byte	1,2,35,5,0,4
	.byte	'SoAd_PduRouteType',0,9,204,1,3
	.word	3286
	.byte	3
	.word	1802
	.byte	10,9,206,1,9,20,11
	.byte	'TxPduHeaderId',0
	.word	277
	.byte	4,2,35,0,11
	.byte	'SoConNum',0
	.word	193
	.byte	1,2,35,4,11
	.byte	'SoConId',0
	.word	193
	.byte	1,2,35,5,11
	.byte	'PduRouteId',0
	.word	193
	.byte	1,2,35,6,11
	.byte	'UdpTriggerMode',0
	.word	193
	.byte	1,2,35,7,11
	.byte	'UdpTriggerTimeout',0
	.word	240
	.byte	2,2,35,8,11
	.byte	'RoutingCtrlList',0
	.word	3431
	.byte	4,2,35,12,11
	.byte	'IfTriggerList',0
	.word	470
	.byte	4,2,35,16,0,4
	.byte	'SoAd_PduRouteDestType',0,9,217,1,3
	.word	3436
	.byte	10,9,219,1,9,16,11
	.byte	'RxPduHeaderId',0
	.word	277
	.byte	4,2,35,0,11
	.byte	'ULType',0
	.word	193
	.byte	1,2,35,4,11
	.byte	'ULIndex',0
	.word	1878
	.byte	1,2,35,5,11
	.byte	'SoConNum',0
	.word	193
	.byte	1,2,35,6,11
	.byte	'SoConId',0
	.word	193
	.byte	1,2,35,7,11
	.byte	'RxPduId',0
	.word	193
	.byte	1,2,35,8,11
	.byte	'RoutingCtrlList',0
	.word	3431
	.byte	4,2,35,12,0,4
	.byte	'SoAd_SocketRouteType',0,9,236,1,3
	.word	3651
	.byte	12
	.word	3436
	.byte	3
	.word	3821
	.byte	10,9,155,2,9,24,11
	.byte	'State',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'Timer',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'BufferLength',0
	.word	240
	.byte	2,2,35,4,11
	.byte	'BufferOffset',0
	.word	240
	.byte	2,2,35,6,11
	.byte	'UdpTxBuffer',0
	.word	470
	.byte	4,2,35,8,11
	.byte	'TotalTxLength',0
	.word	240
	.byte	2,2,35,12,11
	.byte	'UsedTxLength',0
	.word	240
	.byte	2,2,35,14,11
	.byte	'IfTxDataBuffer',0
	.word	3117
	.byte	4,2,35,16,11
	.byte	'PduRouteDestPtr',0
	.word	3826
	.byte	4,2,35,20,0,4
	.byte	'SoAd_TxSessionType',0,9,177,2,3
	.word	3831
	.byte	12
	.word	3651
	.byte	3
	.word	4055
	.byte	10,9,180,2,9,8,11
	.byte	'PduLength',0
	.word	240
	.byte	2,2,35,0,11
	.byte	'RemainLength',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'SocketRoutePtr',0
	.word	4060
	.byte	4,2,35,4,0,4
	.byte	'SoAd_RxPduInfoType',0,9,185,2,3
	.word	4065
	.byte	10,9,187,2,9,12,11
	.byte	'TotalLength',0
	.word	240
	.byte	2,2,35,0,11
	.byte	'In',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'Out',0
	.word	240
	.byte	2,2,35,4,11
	.byte	'BufferPtr',0
	.word	470
	.byte	4,2,35,8,0,4
	.byte	'SoAd_RxFifoType',0,9,193,2,3
	.word	4165
	.byte	10,9,195,2,9,8,11
	.byte	'TotalLength',0
	.word	240
	.byte	2,2,35,0,11
	.byte	'UsedLength',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'BufferPtr',0
	.word	470
	.byte	4,2,35,4,0,4
	.byte	'SoAd_RxBufferType',0,9,200,2,3
	.word	4262
	.byte	8,8
	.word	193
	.byte	9,7,0,10,9,202,2,9,48,11
	.byte	'State',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'ValidHeaderLen',0
	.word	193
	.byte	1,2,35,1,11
	.byte	'PduHeader',0
	.word	4356
	.byte	8,2,35,2,11
	.byte	'RxPduInfo',0
	.word	4065
	.byte	8,2,35,12,11
	.byte	'ProcessPduInfo',0
	.word	4065
	.byte	8,2,35,20,11
	.byte	'IfBuffer',0
	.word	4262
	.byte	8,2,35,28,11
	.byte	'TpBuffer',0
	.word	4165
	.byte	12,2,35,36,0,4
	.byte	'SoAd_RxSessionType',0,9,216,2,3
	.word	4365
	.byte	4
	.byte	'u8_t',0,10,61,25
	.word	193
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,0,0,3,15,0,73,19,0,0,4,22,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,5,36,0,3,8,11,15,62,15,0,0,6,4,1,58,15,59,15,57,15,11,15,0,0,7,40,0,3,8,28,13,0,0,8,1
	.byte	1,11,15,73,19,0,0,9,33,0,47,15,0,0,10,19,1,58,15,59,15,57,15,11,15,0,0,11,13,0,3,8,73,19,11,15,56,9,0
	.byte	0,12,38,0,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L7-.L6
.L6:
	.half	3
	.word	.L9-.L8
.L8:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch',0,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\mppe.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Std_Types.h',0,1,0,0
	.byte	'ComStack_Types_Cfg.h',0,2,0,0
	.byte	'ComStack_Types.h',0,3,0,0
	.byte	'TcpIp_GeneratedTypes.h',0,2,0,0
	.byte	'TcpIp_Types.h',0,4,0,0
	.byte	'SoAd_GeneratedTypes.h',0,2,0,0
	.byte	'SoAd_Types.h',0,5,0,0
	.byte	'cc.h',0,6,0,0,0
.L9:
.L7:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	     1  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	     2   * mppe.c - interface MPPE to the PPP code.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	     3   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	     4   * By Frank Cusack <fcusack@fcusack.com>.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	     5   * Copyright (c) 2002,2003,2004 Google, Inc.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	     6   * All rights reserved.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	     7   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	     8   * License:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	     9   * Permission to use, copy, modify, and distribute this software and its
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    10   * documentation is hereby granted, provided that the above copyright
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    11   * notice appears in all copies.  This software is provided without any
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    12   * warranty, express or implied.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    13   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    14   * Changelog:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    15   *      08/12/05 - Matt Domsch <Matt_Domsch@dell.com>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    16   *                 Only need extra skb padding on transmit, not receive.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    17   *      06/18/04 - Matt Domsch <Matt_Domsch@dell.com>, Oleg Makarenko <mole@quadra.ru>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    18   *                 Use Linux kernel 2.6 arc4 and sha1 routines rather than
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    19   *                 providing our own.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    20   *      2/15/04 - TS: added #include <version.h> and testing for Kernel
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    21   *                    version before using
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    22   *                    MOD_DEC_USAGE_COUNT/MOD_INC_USAGE_COUNT which are
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    23   *                    deprecated in 2.6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    24   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    25  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    26  #include "netif/ppp/ppp_opts.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    27  #if PPP_SUPPORT && MPPE_SUPPORT  /* don't build if not configured for use in lwipopts.h */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    28  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    29  #include <string.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    30  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    31  #include "lwip/err.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    32  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    33  #include "netif/ppp/ppp_impl.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    34  #include "netif/ppp/ccp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    35  #include "netif/ppp/mppe.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    36  #include "netif/ppp/pppdebug.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    37  #include "netif/ppp/pppcrypt.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    38  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    39  #define SHA1_SIGNATURE_SIZE 20
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    40  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    41  /* ppp_mppe_state.bits definitions */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    42  #define MPPE_BIT_A	0x80	/* Encryption table were (re)inititalized */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    43  #define MPPE_BIT_B	0x40	/* MPPC only (not implemented) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    44  #define MPPE_BIT_C	0x20	/* MPPC only (not implemented) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    45  #define MPPE_BIT_D	0x10	/* This is an encrypted frame */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    46  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    47  #define MPPE_BIT_FLUSHED	MPPE_BIT_A
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    48  #define MPPE_BIT_ENCRYPTED	MPPE_BIT_D
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    49  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    50  #define MPPE_BITS(p) ((p)[0] & 0xf0)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    51  #define MPPE_CCOUNT(p) ((((p)[0] & 0x0f) << 8) + (p)[1])
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    52  #define MPPE_CCOUNT_SPACE 0x1000	/* The size of the ccount space */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    53  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    54  #define MPPE_OVHD	2	/* MPPE overhead/packet */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    55  #define SANITY_MAX	1600	/* Max bogon factor we will tolerate */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    56  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    57  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    58   * Perform the MPPE rekey algorithm, from RFC 3078, sec. 7.3.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    59   * Well, not what's written there, but rather what they meant.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    60   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    61  static void mppe_rekey(ppp_mppe_state * state, int initial_key)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    62  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    63  	lwip_sha1_context sha1_ctx;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    64  	u8_t sha1_digest[SHA1_SIGNATURE_SIZE];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    65  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    66  	/*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    67  	 * Key Derivation, from RFC 3078, RFC 3079.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    68  	 * Equivalent to Get_Key() for MS-CHAP as described in RFC 3079.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    69  	 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    70  	lwip_sha1_init(&sha1_ctx);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    71  	lwip_sha1_starts(&sha1_ctx);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    72  	lwip_sha1_update(&sha1_ctx, state->master_key, state->keylen);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    73  	lwip_sha1_update(&sha1_ctx, mppe_sha1_pad1, SHA1_PAD_SIZE);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    74  	lwip_sha1_update(&sha1_ctx, state->session_key, state->keylen);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    75  	lwip_sha1_update(&sha1_ctx, mppe_sha1_pad2, SHA1_PAD_SIZE);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    76  	lwip_sha1_finish(&sha1_ctx, sha1_digest);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    77  	lwip_sha1_free(&sha1_ctx);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    78  	MEMCPY(state->session_key, sha1_digest, state->keylen);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    79  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    80  	if (!initial_key) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    81  		lwip_arc4_init(&state->arc4);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    82  		lwip_arc4_setup(&state->arc4, sha1_digest, state->keylen);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    83  		lwip_arc4_crypt(&state->arc4, state->session_key, state->keylen);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    84  		lwip_arc4_free(&state->arc4);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    85  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    86  	if (state->keylen == 8) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    87  		/* See RFC 3078 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    88  		state->session_key[0] = 0xd1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    89  		state->session_key[1] = 0x26;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    90  		state->session_key[2] = 0x9e;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    91  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    92  	lwip_arc4_init(&state->arc4);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    93  	lwip_arc4_setup(&state->arc4, state->session_key, state->keylen);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    94  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    95  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    96  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    97   * Set key, used by MSCHAP before mppe_init() is actually called by CCP so we
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    98   * don't have to keep multiple copies of keys.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	    99   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   100  void mppe_set_key(ppp_pcb *pcb, ppp_mppe_state *state, u8_t *key) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   101  	LWIP_UNUSED_ARG(pcb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   102  	MEMCPY(state->master_key, key, MPPE_MAX_KEY_LEN);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   103  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   104  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   105  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   106   * Initialize (de)compressor state.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   107   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   108  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   109  mppe_init(ppp_pcb *pcb, ppp_mppe_state *state, u8_t options)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   110  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   111  #if PPP_DEBUG
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   112  	const u8_t *debugstr = (const u8_t*)"mppe_comp_init";
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   113  	if (&pcb->mppe_decomp == state) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   114  	    debugstr = (const u8_t*)"mppe_decomp_init";
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   115  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   116  #endif /* PPP_DEBUG */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   117  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   118  	/* Save keys. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   119  	MEMCPY(state->session_key, state->master_key, sizeof(state->master_key));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   120  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   121  	if (options & MPPE_OPT_128)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   122  		state->keylen = 16;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   123  	else if (options & MPPE_OPT_40)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   124  		state->keylen = 8;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   125  	else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   126  		PPPDEBUG(LOG_DEBUG, ("%s[%d]: unknown key length\n", debugstr,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   127  			pcb->netif->num));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   128  		lcp_close(pcb, "MPPE required but peer negotiation failed");
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   129  		return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   130  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   131  	if (options & MPPE_OPT_STATEFUL)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   132  		state->stateful = 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   133  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   134  	/* Generate the initial session key. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   135  	mppe_rekey(state, 1);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   136  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   137  #if PPP_DEBUG
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   138  	{
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   139  		int i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   140  		char mkey[sizeof(state->master_key) * 2 + 1];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   141  		char skey[sizeof(state->session_key) * 2 + 1];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   142  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   143  		PPPDEBUG(LOG_DEBUG, ("%s[%d]: initialized with %d-bit %s mode\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   144  		       debugstr, pcb->netif->num, (state->keylen == 16) ? 128 : 40,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   145  		       (state->stateful) ? "stateful" : "stateless"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   146  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   147  		for (i = 0; i < (int)sizeof(state->master_key); i++)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   148  			sprintf(mkey + i * 2, "%02x", state->master_key[i]);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   149  		for (i = 0; i < (int)sizeof(state->session_key); i++)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   150  			sprintf(skey + i * 2, "%02x", state->session_key[i]);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   151  		PPPDEBUG(LOG_DEBUG,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   152  		       ("%s[%d]: keys: master: %s initial session: %s\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   153  		       debugstr, pcb->netif->num, mkey, skey));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   154  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   155  #endif /* PPP_DEBUG */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   156  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   157  	/*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   158  	 * Initialize the coherency count.  The initial value is not specified
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   159  	 * in RFC 3078, but we can make a reasonable assumption that it will
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   160  	 * start at 0.  Setting it to the max here makes the comp/decomp code
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   161  	 * do the right thing (determined through experiment).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   162  	 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   163  	state->ccount = MPPE_CCOUNT_SPACE - 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   164  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   165  	/*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   166  	 * Note that even though we have initialized the key table, we don't
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   167  	 * set the FLUSHED bit.  This is contrary to RFC 3078, sec. 3.1.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   168  	 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   169  	state->bits = MPPE_BIT_ENCRYPTED;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   170  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   171  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   172  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   173   * We received a CCP Reset-Request (actually, we are sending a Reset-Ack),
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   174   * tell the compressor to rekey.  Note that we MUST NOT rekey for
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   175   * every CCP Reset-Request; we only rekey on the next xmit packet.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   176   * We might get multiple CCP Reset-Requests if our CCP Reset-Ack is lost.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   177   * So, rekeying for every CCP Reset-Request is broken as the peer will not
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   178   * know how many times we've rekeyed.  (If we rekey and THEN get another
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   179   * CCP Reset-Request, we must rekey again.)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   180   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   181  void mppe_comp_reset(ppp_pcb *pcb, ppp_mppe_state *state)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   182  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   183  	LWIP_UNUSED_ARG(pcb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   184  	state->bits |= MPPE_BIT_FLUSHED;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   185  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   186  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   187  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   188   * Compress (encrypt) a packet.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   189   * It's strange to call this a compressor, since the output is always
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   190   * MPPE_OVHD + 2 bytes larger than the input.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   191   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   192  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   193  mppe_compress(ppp_pcb *pcb, ppp_mppe_state *state, struct pbuf **pb, u16_t protocol)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   194  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   195  	struct pbuf *n, *np;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   196  	u8_t *pl;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   197  	err_t err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   198  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   199  	LWIP_UNUSED_ARG(pcb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   200  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   201  	/* TCP stack requires that we don't change the packet payload, therefore we copy
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   202  	 * the whole packet before encryption.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   203  	 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   204  	np = pbuf_alloc(PBUF_RAW, MPPE_OVHD + sizeof(protocol) + (*pb)->tot_len, PBUF_RAM);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   205  	if (!np) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   206  		return ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   207  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   208  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   209  	/* Hide MPPE header + protocol */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   210  	pbuf_remove_header(np, MPPE_OVHD + sizeof(protocol));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   211  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   212  	if ((err = pbuf_copy(np, *pb)) != ERR_OK) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   213  		pbuf_free(np);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   214  		return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   215  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   216  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   217  	/* Reveal MPPE header + protocol */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   218  	pbuf_add_header(np, MPPE_OVHD + sizeof(protocol));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   219  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   220  	*pb = np;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   221  	pl = (u8_t*)np->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   222  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   223  	state->ccount = (state->ccount + 1) % MPPE_CCOUNT_SPACE;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   224  	PPPDEBUG(LOG_DEBUG, ("mppe_compress[%d]: ccount %d\n", pcb->netif->num, state->ccount));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   225  	/* FIXME: use PUT* macros */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   226  	pl[0] = state->ccount>>8;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   227  	pl[1] = state->ccount;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   228  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   229  	if (!state->stateful ||	/* stateless mode     */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   230  	    ((state->ccount & 0xff) == 0xff) ||	/* "flag" packet      */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   231  	    (state->bits & MPPE_BIT_FLUSHED)) {	/* CCP Reset-Request  */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   232  		/* We must rekey */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   233  		if (state->stateful) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   234  			PPPDEBUG(LOG_DEBUG, ("mppe_compress[%d]: rekeying\n", pcb->netif->num));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   235  		}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   236  		mppe_rekey(state, 0);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   237  		state->bits |= MPPE_BIT_FLUSHED;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   238  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   239  	pl[0] |= state->bits;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   240  	state->bits &= ~MPPE_BIT_FLUSHED;	/* reset for next xmit */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   241  	pl += MPPE_OVHD;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   242  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   243  	/* Add protocol */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   244  	/* FIXME: add PFC support */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   245  	pl[0] = protocol >> 8;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   246  	pl[1] = protocol;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   247  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   248  	/* Hide MPPE header */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   249  	pbuf_remove_header(np, MPPE_OVHD);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   250  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   251  	/* Encrypt packet */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   252  	for (n = np; n != NULL; n = n->next) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   253  		lwip_arc4_crypt(&state->arc4, (u8_t*)n->payload, n->len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   254  		if (n->tot_len == n->len) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   255  			break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   256  		}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   257  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   258  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   259  	/* Reveal MPPE header */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   260  	pbuf_add_header(np, MPPE_OVHD);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   261  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   262  	return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   263  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   264  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   265  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   266   * We received a CCP Reset-Ack.  Just ignore it.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   267   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   268  void mppe_decomp_reset(ppp_pcb *pcb, ppp_mppe_state *state)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   269  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   270  	LWIP_UNUSED_ARG(pcb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   271  	LWIP_UNUSED_ARG(state);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   272  	return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   273  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   274  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   275  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   276   * Decompress (decrypt) an MPPE packet.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   277   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   278  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   279  mppe_decompress(ppp_pcb *pcb, ppp_mppe_state *state, struct pbuf **pb)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   280  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   281  	struct pbuf *n0 = *pb, *n;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   282  	u8_t *pl;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   283  	u16_t ccount;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   284  	u8_t flushed;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   285  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   286  	/* MPPE Header */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   287  	if (n0->len < MPPE_OVHD) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   288  		PPPDEBUG(LOG_DEBUG,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   289  		       ("mppe_decompress[%d]: short pkt (%d)\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   290  		       pcb->netif->num, n0->len));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   291  		state->sanity_errors += 100;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   292  		goto sanity_error;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   293  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   294  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   295  	pl = (u8_t*)n0->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   296  	flushed = MPPE_BITS(pl) & MPPE_BIT_FLUSHED;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   297  	ccount = MPPE_CCOUNT(pl);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   298  	PPPDEBUG(LOG_DEBUG, ("mppe_decompress[%d]: ccount %d\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   299  	       pcb->netif->num, ccount));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   300  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   301  	/* sanity checks -- terminate with extreme prejudice */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   302  	if (!(MPPE_BITS(pl) & MPPE_BIT_ENCRYPTED)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   303  		PPPDEBUG(LOG_DEBUG,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   304  		       ("mppe_decompress[%d]: ENCRYPTED bit not set!\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   305  		       pcb->netif->num));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   306  		state->sanity_errors += 100;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   307  		goto sanity_error;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   308  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   309  	if (!state->stateful && !flushed) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   310  		PPPDEBUG(LOG_DEBUG, ("mppe_decompress[%d]: FLUSHED bit not set in "
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   311  		       "stateless mode!\n", pcb->netif->num));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   312  		state->sanity_errors += 100;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   313  		goto sanity_error;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   314  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   315  	if (state->stateful && ((ccount & 0xff) == 0xff) && !flushed) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   316  		PPPDEBUG(LOG_DEBUG, ("mppe_decompress[%d]: FLUSHED bit not set on "
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   317  		       "flag packet!\n", pcb->netif->num));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   318  		state->sanity_errors += 100;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   319  		goto sanity_error;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   320  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   321  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   322  	/*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   323  	 * Check the coherency count.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   324  	 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   325  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   326  	if (!state->stateful) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   327  		/* Discard late packet */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   328  		if ((ccount - state->ccount) % MPPE_CCOUNT_SPACE > MPPE_CCOUNT_SPACE / 2) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   329  			state->sanity_errors++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   330  			goto sanity_error;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   331  		}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   332  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   333  		/* RFC 3078, sec 8.1.  Rekey for every packet. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   334  		while (state->ccount != ccount) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   335  			mppe_rekey(state, 0);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   336  			state->ccount = (state->ccount + 1) % MPPE_CCOUNT_SPACE;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   337  		}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   338  	} else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   339  		/* RFC 3078, sec 8.2. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   340  		if (!state->discard) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   341  			/* normal state */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   342  			state->ccount = (state->ccount + 1) % MPPE_CCOUNT_SPACE;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   343  			if (ccount != state->ccount) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   344  				/*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   345  				 * (ccount > state->ccount)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   346  				 * Packet loss detected, enter the discard state.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   347  				 * Signal the peer to rekey (by sending a CCP Reset-Request).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   348  				 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   349  				state->discard = 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   350  				ccp_resetrequest(pcb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   351  				return ERR_BUF;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   352  			}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   353  		} else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   354  			/* discard state */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   355  			if (!flushed) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   356  				/* ccp.c will be silent (no additional CCP Reset-Requests). */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   357  				return ERR_BUF;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   358  			} else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   359  				/* Rekey for every missed "flag" packet. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   360  				while ((ccount & ~0xff) !=
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   361  				       (state->ccount & ~0xff)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   362  					mppe_rekey(state, 0);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   363  					state->ccount =
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   364  					    (state->ccount +
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   365  					     256) % MPPE_CCOUNT_SPACE;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   366  				}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   367  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   368  				/* reset */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   369  				state->discard = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   370  				state->ccount = ccount;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   371  				/*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   372  				 * Another problem with RFC 3078 here.  It implies that the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   373  				 * peer need not send a Reset-Ack packet.  But RFC 1962
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   374  				 * requires it.  Hopefully, M$ does send a Reset-Ack; even
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   375  				 * though it isn't required for MPPE synchronization, it is
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   376  				 * required to reset CCP state.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   377  				 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   378  			}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   379  		}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   380  		if (flushed)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   381  			mppe_rekey(state, 0);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   382  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   383  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   384  	/* Hide MPPE header */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   385  	pbuf_remove_header(n0, MPPE_OVHD);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   386  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   387  	/* Decrypt the packet. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   388  	for (n = n0; n != NULL; n = n->next) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   389  		lwip_arc4_crypt(&state->arc4, (u8_t*)n->payload, n->len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   390  		if (n->tot_len == n->len) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   391  			break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   392  		}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   393  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   394  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   395  	/* good packet credit */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   396  	state->sanity_errors >>= 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   397  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   398  	return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   399  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   400  sanity_error:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   401  	if (state->sanity_errors >= SANITY_MAX) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   402  		/*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   403  		 * Take LCP down if the peer is sending too many bogons.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   404  		 * We don't want to do this for a single or just a few
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   405  		 * instances since it could just be due to packet corruption.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   406  		 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   407  		lcp_close(pcb, "Too many MPPE errors");
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   408  	}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   409  	return ERR_BUF;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   410  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   411  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\mppe.c	   412  #endif /* PPP_SUPPORT && MPPE_SUPPORT */

	; Module end
