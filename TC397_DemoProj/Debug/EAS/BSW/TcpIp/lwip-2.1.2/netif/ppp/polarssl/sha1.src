	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 09003395"
	.compiler_invocation	"ctc -f cc26140a --dep-file=EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl\\.sha1.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --fp-model=+float -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Lib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\App_Func -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\demo -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Adc_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Gtm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\AscLin_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Can_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\EthV2_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Stm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Main -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\APP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\BswM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanSm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Com -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\ComM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Common -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Crc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Det -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\DoIP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EcuM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Eth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthSM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTrcv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FiM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FlsTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Nm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\PduR -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\RamTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\StbM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\arpa -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\net -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\sys -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\stdc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\apps -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\priv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\UdpNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Cal -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Daq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pag -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pgm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Std -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\XcpOnEth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Library\\Vfx_ComE2E -g2 --make-target=EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl\\sha1.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O1 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl\\sha1.src ..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl\\sha1.c"
	.compiler_name		"ctc"
	;source	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl\\sha1.c'

	
$TC162
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	4556
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl\\sha1.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L5
	.byte	2,1,3
	.word	177
	.byte	4
	.byte	'__codeptr',0,1,1,1
	.word	179
	.byte	5
	.byte	'unsigned char',0,1,8,4
	.byte	'boolean',0,2,102,29
	.word	202
	.byte	4
	.byte	'uint8',0,2,106,29
	.word	202
	.byte	5
	.byte	'unsigned short int',0,2,7,4
	.byte	'uint16',0,2,110,29
	.word	249
	.byte	5
	.byte	'unsigned long int',0,4,7,4
	.byte	'uint32',0,2,114,29
	.word	286
	.byte	4
	.byte	'Std_ReturnType',0,3,109,16
	.word	202
	.byte	4
	.byte	'PduIdType',0,4,37,21
	.word	202
	.byte	4
	.byte	'PduLengthType',0,4,41,22
	.word	249
	.byte	6,5,101,9,1,7
	.byte	'BUFREQ_OK',0,0,7
	.byte	'BUFREQ_E_NOT_OK',0,1,7
	.byte	'BUFREQ_E_BUSY',0,2,7
	.byte	'BUFREQ_E_OVFL',0,3,0,4
	.byte	'BufReq_ReturnType',0,5,107,3
	.word	385
	.byte	3
	.word	202
	.byte	4
	.byte	'SduDataPtrType',0,5,189,1,40
	.word	479
	.byte	6,5,204,1,9,1,7
	.byte	'TP_DATACONF',0,0,7
	.byte	'TP_DATARETRY',0,1,7
	.byte	'TP_CONFPENDING',0,2,0,4
	.byte	'TpDataStateType',0,5,216,1,3
	.word	508
	.byte	4
	.byte	'TcpIp_SocketIdType',0,6,50,16
	.word	202
	.byte	8,4
	.word	286
	.byte	9,0,0,10,6,52,9,4,11
	.byte	'Addr',0
	.word	613
	.byte	4,2,35,0,0,4
	.byte	'TcpIp_IpAddressType',0,6,55,3
	.word	622
	.byte	4
	.byte	'TcpIp_DomainType',0,6,61,16
	.word	249
	.byte	10,6,68,9,8,11
	.byte	'Domain',0
	.word	249
	.byte	2,2,35,0,11
	.byte	'Port',0
	.word	249
	.byte	2,2,35,2,11
	.byte	'Addr',0
	.word	613
	.byte	4,2,35,4,0,4
	.byte	'TcpIp_SockAddrInetType',0,6,73,3
	.word	695
	.byte	4
	.byte	'TcpIp_AddressType',0,7,128,1,15
	.word	202
	.byte	4
	.byte	'TcpIp_CtrlIdType',0,7,142,1,15
	.word	202
	.byte	4
	.byte	'TcpIp_IpAddrStateType',0,7,144,1,15
	.word	202
	.byte	4
	.byte	'TcpIp_LocalAddrAssignmentConfigType',0,7,149,1,15
	.word	202
	.byte	4
	.byte	'TcpIp_StaticAddrIdType',0,7,151,1,15
	.word	202
	.byte	10,7,152,1,9,12,11
	.byte	'State',0
	.word	202
	.byte	1,2,35,0,11
	.byte	'Netmask',0
	.word	202
	.byte	1,2,35,1,11
	.byte	'Domain',0
	.word	249
	.byte	2,2,35,2,11
	.byte	'IpAddr',0
	.word	622
	.byte	4,2,35,4,11
	.byte	'DefaultRouter',0
	.word	622
	.byte	4,2,35,8,0,4
	.byte	'TcpIp_StaticIpAddrType',0,7,162,1,3
	.word	937
	.byte	4
	.byte	'TcpIp_LocalAddrIdType',0,7,173,1,15
	.word	202
	.byte	8,3
	.word	202
	.byte	9,2,0,10,7,231,1,9,8,11
	.byte	'CtrlId',0
	.word	202
	.byte	1,2,35,0,11
	.byte	'Address',0
	.word	202
	.byte	1,2,35,1,11
	.byte	'Domain',0
	.word	249
	.byte	2,2,35,2,11
	.byte	'StaticAddrId',0
	.word	202
	.byte	1,2,35,4,11
	.byte	'Assignments',0
	.word	1094
	.byte	3,2,35,5,0,4
	.byte	'TcpIp_LocalAddrConfigType',0,7,243,1,3
	.word	1103
	.byte	10,7,245,1,9,4,11
	.byte	'ArpConfigId',0
	.word	202
	.byte	1,2,35,0,11
	.byte	'DHCPConfigId',0
	.word	202
	.byte	1,2,35,1,11
	.byte	'AutoIpInitTimeout',0
	.word	249
	.byte	2,2,35,2,0,4
	.byte	'TcpIp_IpV4CtrlConfigType',0,7,130,2,3
	.word	1237
	.byte	10,7,133,2,9,8,11
	.byte	'CtrlIdx',0
	.word	202
	.byte	1,2,35,0,11
	.byte	'FramePrio',0
	.word	202
	.byte	1,2,35,1,11
	.byte	'UnicastAddrId',0
	.word	202
	.byte	1,2,35,2,11
	.byte	'UnicastAddrLimit',0
	.word	202
	.byte	1,2,35,3,11
	.byte	'MulticastAddrId',0
	.word	202
	.byte	1,2,35,4,11
	.byte	'LocalAddrLimit',0
	.word	202
	.byte	1,2,35,5,11
	.byte	'IpV4CtrlId',0
	.word	202
	.byte	1,2,35,6,11
	.byte	'IpV6CtrlId',0
	.word	202
	.byte	1,2,35,7,0,4
	.byte	'TcpIp_NetIfCtrlConfigType',0,7,148,2,3
	.word	1348
	.byte	4
	.byte	'SoAd_RoutingGroupIdType',0,8,43,15
	.word	202
	.byte	4
	.byte	'SoAd_SoConIdType',0,8,44,15
	.word	202
	.byte	4
	.byte	'SoAd_SoConGroupIdType',0,8,45,15
	.word	202
	.byte	4
	.byte	'SoAd_PduRouteIdType',0,8,46,15
	.word	202
	.byte	4
	.byte	'SoAd_PduRouteDestIdType',0,8,47,15
	.word	202
	.byte	4
	.byte	'SoAd_SocketRouteIdType',0,8,48,15
	.word	202
	.byte	4
	.byte	'SoAd_IfTxUnconfirmedType',0,8,49,16
	.word	249
	.byte	4
	.byte	'SoAd_IfTxTimerType',0,8,51,16
	.word	249
	.byte	8,1
	.word	202
	.byte	9,0,0,10,8,53,9,2,11
	.byte	'Mask',0
	.word	1802
	.byte	1,2,35,0,11
	.byte	'RoutingState',0
	.word	1802
	.byte	1,2,35,1,0,4
	.byte	'SoAd_RoutingGroupCtrlType',0,8,57,3
	.word	1811
	.byte	6,8,63,9,1,7
	.byte	'SOAD_UL_DOIP',0,0,7
	.byte	'SOAD_UL_UDPNM',0,1,7
	.byte	'SOAD_UL_PDUR',0,2,7
	.byte	'SOAD_UL_XCP',0,3,7
	.byte	'SOAD_UL_MAX',0,4,0,4
	.byte	'SoAd_ULIndexType',0,8,71,3
	.word	1887
	.byte	4
	.byte	'SoAd_RemoteAddressType',0,9,113,32
	.word	695
	.byte	6,9,115,9,1,7
	.byte	'SOAD_SOCON_UNINIT',0,0,7
	.byte	'SOAD_SOCON_OFFLINE',0,1,7
	.byte	'SOAD_SOCON_RECONN',0,2,7
	.byte	'SOAD_SOCON_ONLINE',0,3,0,4
	.byte	'SoAd_SoConModeType',0,9,121,3
	.word	2023
	.byte	12
	.word	202
	.byte	3
	.word	2137
	.byte	12
	.word	202
	.byte	3
	.word	2147
	.byte	12
	.word	202
	.byte	3
	.word	2157
	.byte	12
	.word	1887
	.byte	3
	.word	2167
	.byte	10,9,129,1,9,36,11
	.byte	'IfBufferLength',0
	.word	249
	.byte	2,2,35,0,11
	.byte	'IfBufferOffset',0
	.word	249
	.byte	2,2,35,2,11
	.byte	'TpBufferLength',0
	.word	249
	.byte	2,2,35,4,11
	.byte	'TpBufferOffset',0
	.word	249
	.byte	2,2,35,6,11
	.byte	'PduRouteNum',0
	.word	202
	.byte	1,2,35,8,11
	.byte	'SocketRouteNum',0
	.word	202
	.byte	1,2,35,9,11
	.byte	'PduRouteDestNum',0
	.word	202
	.byte	1,2,35,10,11
	.byte	'RemoteAddrState',0
	.word	202
	.byte	1,2,35,11,11
	.byte	'RemoteAddr',0
	.word	695
	.byte	8,2,35,12,11
	.byte	'PduRouteDestList',0
	.word	2142
	.byte	4,2,35,20,11
	.byte	'PduRouteList',0
	.word	2152
	.byte	4,2,35,24,11
	.byte	'SocketRouteList',0
	.word	2162
	.byte	4,2,35,28,11
	.byte	'SoConModeChgList',0
	.word	2172
	.byte	4,2,35,32,0,4
	.byte	'SoAd_SocketConnectionType',0,9,146,1,3
	.word	2177
	.byte	10,9,148,1,9,16,11
	.byte	'CtrlFlag',0
	.word	202
	.byte	1,2,35,0,11
	.byte	'KeepAliveProbesMax',0
	.word	249
	.byte	2,2,35,2,11
	.byte	'KeepAliveInterval',0
	.word	286
	.byte	4,2,35,4,11
	.byte	'KeepAliveTime',0
	.word	286
	.byte	4,2,35,8,11
	.byte	'TxQuota',0
	.word	286
	.byte	4,2,35,12,0,4
	.byte	'SoAd_TcpProtocolType',0,9,155,1,3
	.word	2529
	.byte	10,9,157,1,9,12,11
	.byte	'CtrlFlag',0
	.word	202
	.byte	1,2,35,0,11
	.byte	'nPduTxBufferMin',0
	.word	249
	.byte	2,2,35,2,11
	.byte	'TriggerTimeout',0
	.word	249
	.byte	2,2,35,4,11
	.byte	'AliveSupervisionTimeout',0
	.word	286
	.byte	4,2,35,6,0,4
	.byte	'SoAd_UdpProtocolType',0,9,163,1,3
	.word	2679
	.byte	12
	.word	2529
	.byte	3
	.word	2816
	.byte	12
	.word	2679
	.byte	3
	.word	2826
	.byte	10,9,165,1,9,24,11
	.byte	'GroupId',0
	.word	202
	.byte	1,2,35,0,11
	.byte	'CtrlFlag',0
	.word	202
	.byte	1,2,35,1,11
	.byte	'FramePriority',0
	.word	202
	.byte	1,2,35,2,11
	.byte	'SoConNum',0
	.word	202
	.byte	1,2,35,3,11
	.byte	'SoConId',0
	.word	202
	.byte	1,2,35,4,11
	.byte	'IpAddrAssignChgNum',0
	.word	202
	.byte	1,2,35,5,11
	.byte	'LocalAddrId',0
	.word	202
	.byte	1,2,35,6,11
	.byte	'LocalPort',0
	.word	249
	.byte	2,2,35,8,11
	.byte	'IpAddrAssignChgList',0
	.word	2172
	.byte	4,2,35,12,11
	.byte	'TcpProtocolPtr',0
	.word	2821
	.byte	4,2,35,16,11
	.byte	'UdpProtocolPtr',0
	.word	2831
	.byte	4,2,35,20,0,4
	.byte	'SoAd_SocketConnectionGroupType',0,9,178,1,3
	.word	2836
	.byte	12
	.word	202
	.byte	3
	.word	3121
	.byte	10,9,180,1,9,12,11
	.byte	'CtrlFlag',0
	.word	202
	.byte	1,2,35,0,11
	.byte	'PduRouteDestNum',0
	.word	202
	.byte	1,2,35,1,11
	.byte	'SocketRouteDestNum',0
	.word	202
	.byte	1,2,35,2,11
	.byte	'PduRouteDestList',0
	.word	3126
	.byte	4,2,35,4,11
	.byte	'SocketRouteDestList',0
	.word	3126
	.byte	4,2,35,8,0,4
	.byte	'SoAd_RoutingGroupType',0,9,187,1,3
	.word	3131
	.byte	10,9,189,1,9,6,11
	.byte	'ULType',0
	.word	202
	.byte	1,2,35,0,11
	.byte	'ULIndex',0
	.word	1887
	.byte	1,2,35,1,11
	.byte	'CtrlFlag',0
	.word	202
	.byte	1,2,35,2,11
	.byte	'RouteDestNum',0
	.word	202
	.byte	1,2,35,3,11
	.byte	'RouteDestId',0
	.word	202
	.byte	1,2,35,4,11
	.byte	'TxPduId',0
	.word	202
	.byte	1,2,35,5,0,4
	.byte	'SoAd_PduRouteType',0,9,204,1,3
	.word	3295
	.byte	3
	.word	1811
	.byte	10,9,206,1,9,20,11
	.byte	'TxPduHeaderId',0
	.word	286
	.byte	4,2,35,0,11
	.byte	'SoConNum',0
	.word	202
	.byte	1,2,35,4,11
	.byte	'SoConId',0
	.word	202
	.byte	1,2,35,5,11
	.byte	'PduRouteId',0
	.word	202
	.byte	1,2,35,6,11
	.byte	'UdpTriggerMode',0
	.word	202
	.byte	1,2,35,7,11
	.byte	'UdpTriggerTimeout',0
	.word	249
	.byte	2,2,35,8,11
	.byte	'RoutingCtrlList',0
	.word	3440
	.byte	4,2,35,12,11
	.byte	'IfTriggerList',0
	.word	479
	.byte	4,2,35,16,0,4
	.byte	'SoAd_PduRouteDestType',0,9,217,1,3
	.word	3445
	.byte	10,9,219,1,9,16,11
	.byte	'RxPduHeaderId',0
	.word	286
	.byte	4,2,35,0,11
	.byte	'ULType',0
	.word	202
	.byte	1,2,35,4,11
	.byte	'ULIndex',0
	.word	1887
	.byte	1,2,35,5,11
	.byte	'SoConNum',0
	.word	202
	.byte	1,2,35,6,11
	.byte	'SoConId',0
	.word	202
	.byte	1,2,35,7,11
	.byte	'RxPduId',0
	.word	202
	.byte	1,2,35,8,11
	.byte	'RoutingCtrlList',0
	.word	3440
	.byte	4,2,35,12,0,4
	.byte	'SoAd_SocketRouteType',0,9,236,1,3
	.word	3660
	.byte	12
	.word	3445
	.byte	3
	.word	3830
	.byte	10,9,155,2,9,24,11
	.byte	'State',0
	.word	202
	.byte	1,2,35,0,11
	.byte	'Timer',0
	.word	249
	.byte	2,2,35,2,11
	.byte	'BufferLength',0
	.word	249
	.byte	2,2,35,4,11
	.byte	'BufferOffset',0
	.word	249
	.byte	2,2,35,6,11
	.byte	'UdpTxBuffer',0
	.word	479
	.byte	4,2,35,8,11
	.byte	'TotalTxLength',0
	.word	249
	.byte	2,2,35,12,11
	.byte	'UsedTxLength',0
	.word	249
	.byte	2,2,35,14,11
	.byte	'IfTxDataBuffer',0
	.word	3126
	.byte	4,2,35,16,11
	.byte	'PduRouteDestPtr',0
	.word	3835
	.byte	4,2,35,20,0,4
	.byte	'SoAd_TxSessionType',0,9,177,2,3
	.word	3840
	.byte	12
	.word	3660
	.byte	3
	.word	4064
	.byte	10,9,180,2,9,8,11
	.byte	'PduLength',0
	.word	249
	.byte	2,2,35,0,11
	.byte	'RemainLength',0
	.word	249
	.byte	2,2,35,2,11
	.byte	'SocketRoutePtr',0
	.word	4069
	.byte	4,2,35,4,0,4
	.byte	'SoAd_RxPduInfoType',0,9,185,2,3
	.word	4074
	.byte	10,9,187,2,9,12,11
	.byte	'TotalLength',0
	.word	249
	.byte	2,2,35,0,11
	.byte	'In',0
	.word	249
	.byte	2,2,35,2,11
	.byte	'Out',0
	.word	249
	.byte	2,2,35,4,11
	.byte	'BufferPtr',0
	.word	479
	.byte	4,2,35,8,0,4
	.byte	'SoAd_RxFifoType',0,9,193,2,3
	.word	4174
	.byte	10,9,195,2,9,8,11
	.byte	'TotalLength',0
	.word	249
	.byte	2,2,35,0,11
	.byte	'UsedLength',0
	.word	249
	.byte	2,2,35,2,11
	.byte	'BufferPtr',0
	.word	479
	.byte	4,2,35,4,0,4
	.byte	'SoAd_RxBufferType',0,9,200,2,3
	.word	4271
	.byte	8,8
	.word	202
	.byte	9,7,0,10,9,202,2,9,48,11
	.byte	'State',0
	.word	202
	.byte	1,2,35,0,11
	.byte	'ValidHeaderLen',0
	.word	202
	.byte	1,2,35,1,11
	.byte	'PduHeader',0
	.word	4365
	.byte	8,2,35,2,11
	.byte	'RxPduInfo',0
	.word	4074
	.byte	8,2,35,12,11
	.byte	'ProcessPduInfo',0
	.word	4074
	.byte	8,2,35,20,11
	.byte	'IfBuffer',0
	.word	4271
	.byte	8,2,35,28,11
	.byte	'TpBuffer',0
	.word	4174
	.byte	12,2,35,36,0,4
	.byte	'SoAd_RxSessionType',0,9,216,2,3
	.word	4374
	.byte	4
	.byte	'u8_t',0,10,61,25
	.word	202
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,0,0,3,15,0,73,19,0,0,4,22,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,5,36,0,3,8,11,15,62,15,0,0,6,4,1,58,15,59,15,57,15,11,15,0,0,7,40,0,3,8,28,13,0,0,8,1
	.byte	1,11,15,73,19,0,0,9,33,0,47,15,0,0,10,19,1,58,15,59,15,57,15,11,15,0,0,11,13,0,3,8,73,19,11,15,56,9,0
	.byte	0,12,38,0,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L7-.L6
.L6:
	.half	3
	.word	.L9-.L8
.L8:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch',0,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl\\sha1.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Std_Types.h',0,1,0,0
	.byte	'ComStack_Types_Cfg.h',0,2,0,0
	.byte	'ComStack_Types.h',0,3,0,0
	.byte	'TcpIp_GeneratedTypes.h',0,2,0,0
	.byte	'TcpIp_Types.h',0,4,0,0
	.byte	'SoAd_GeneratedTypes.h',0,2,0,0
	.byte	'SoAd_Types.h',0,5,0,0
	.byte	'cc.h',0,6,0,0,0
.L9:
.L7:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	     1  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	     2   *  FIPS-180-1 compliant SHA-1 implementation
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	     3   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	     4   *  Based on XySSL: Copyright (C) 2006-2008  Christophe Devine
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	     5   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	     6   *  Copyright (C) 2009  Paul Bakker <polarssl_maintainer at polarssl dot org>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	     7   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	     8   *  All rights reserved.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	     9   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    10   *  Redistribution and use in source and binary forms, with or without
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    11   *  modification, are permitted provided that the following conditions
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    12   *  are met:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    13   *  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    14   *    * Redistributions of source code must retain the above copyright
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    15   *      notice, this list of conditions and the following disclaimer.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    16   *    * Redistributions in binary form must reproduce the above copyright
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    17   *      notice, this list of conditions and the following disclaimer in the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    18   *      documentation and/or other materials provided with the distribution.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    19   *    * Neither the names of PolarSSL or XySSL nor the names of its contributors
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    20   *      may be used to endorse or promote products derived from this software
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    21   *      without specific prior written permission.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    22   *  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    23   *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    24   *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    25   *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    26   *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    27   *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    28   *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    29   *  TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    30   *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    31   *  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    32   *  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    33   *  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    34   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    35  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    36   *  The SHA-1 standard was published by NIST in 1993.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    37   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    38   *  http://www.itl.nist.gov/fipspubs/fip180-1.htm
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    39   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    40  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    41  #include "netif/ppp/ppp_opts.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    42  #if PPP_SUPPORT && LWIP_INCLUDED_POLARSSL_SHA1
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    43  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    44  #include "netif/ppp/polarssl/sha1.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    45  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    46  #include <string.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    47  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    48  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    49   * 32-bit integer manipulation macros (big endian)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    50   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    51  #ifndef GET_ULONG_BE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    52  #define GET_ULONG_BE(n,b,i)                             \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    53  {                                                       \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    54      (n) = ( (unsigned long) (b)[(i)    ] << 24 )        \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    55          | ( (unsigned long) (b)[(i) + 1] << 16 )        \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    56          | ( (unsigned long) (b)[(i) + 2] <<  8 )        \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    57          | ( (unsigned long) (b)[(i) + 3]       );       \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    58  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    59  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    60  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    61  #ifndef PUT_ULONG_BE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    62  #define PUT_ULONG_BE(n,b,i)                             \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    63  {                                                       \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    64      (b)[(i)    ] = (unsigned char) ( (n) >> 24 );       \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    65      (b)[(i) + 1] = (unsigned char) ( (n) >> 16 );       \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    66      (b)[(i) + 2] = (unsigned char) ( (n) >>  8 );       \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    67      (b)[(i) + 3] = (unsigned char) ( (n)       );       \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    68  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    69  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    70  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    71  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    72   * SHA-1 context setup
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    73   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    74  void sha1_starts( sha1_context *ctx )
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    75  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    76      ctx->total[0] = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    77      ctx->total[1] = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    78  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    79      ctx->state[0] = 0x67452301;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    80      ctx->state[1] = 0xEFCDAB89;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    81      ctx->state[2] = 0x98BADCFE;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    82      ctx->state[3] = 0x10325476;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    83      ctx->state[4] = 0xC3D2E1F0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    84  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    85  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    86  static void sha1_process( sha1_context *ctx, const unsigned char data[64] )
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    87  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    88      unsigned long temp, W[16], A, B, C, D, E;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    89  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    90      GET_ULONG_BE( W[ 0], data,  0 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    91      GET_ULONG_BE( W[ 1], data,  4 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    92      GET_ULONG_BE( W[ 2], data,  8 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    93      GET_ULONG_BE( W[ 3], data, 12 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    94      GET_ULONG_BE( W[ 4], data, 16 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    95      GET_ULONG_BE( W[ 5], data, 20 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    96      GET_ULONG_BE( W[ 6], data, 24 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    97      GET_ULONG_BE( W[ 7], data, 28 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    98      GET_ULONG_BE( W[ 8], data, 32 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	    99      GET_ULONG_BE( W[ 9], data, 36 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   100      GET_ULONG_BE( W[10], data, 40 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   101      GET_ULONG_BE( W[11], data, 44 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   102      GET_ULONG_BE( W[12], data, 48 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   103      GET_ULONG_BE( W[13], data, 52 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   104      GET_ULONG_BE( W[14], data, 56 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   105      GET_ULONG_BE( W[15], data, 60 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   106  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   107  #define S(x,n) ((x << n) | ((x & 0xFFFFFFFF) >> (32 - n)))
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   108  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   109  #define R(t)                                            \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   110  (                                                       \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   111      temp = W[(t -  3) & 0x0F] ^ W[(t - 8) & 0x0F] ^     \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   112             W[(t - 14) & 0x0F] ^ W[ t      & 0x0F],      \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   113      ( W[t & 0x0F] = S(temp,1) )                         \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   114  )
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   115  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   116  #define P(a,b,c,d,e,x)                                  \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   117  {                                                       \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   118      e += S(a,5) + F(b,c,d) + K + x; b = S(b,30);        \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   119  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   120  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   121      A = ctx->state[0];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   122      B = ctx->state[1];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   123      C = ctx->state[2];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   124      D = ctx->state[3];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   125      E = ctx->state[4];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   126  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   127  #define F(x,y,z) (z ^ (x & (y ^ z)))
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   128  #define K 0x5A827999
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   129  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   130      P( A, B, C, D, E, W[0]  );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   131      P( E, A, B, C, D, W[1]  );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   132      P( D, E, A, B, C, W[2]  );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   133      P( C, D, E, A, B, W[3]  );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   134      P( B, C, D, E, A, W[4]  );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   135      P( A, B, C, D, E, W[5]  );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   136      P( E, A, B, C, D, W[6]  );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   137      P( D, E, A, B, C, W[7]  );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   138      P( C, D, E, A, B, W[8]  );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   139      P( B, C, D, E, A, W[9]  );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   140      P( A, B, C, D, E, W[10] );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   141      P( E, A, B, C, D, W[11] );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   142      P( D, E, A, B, C, W[12] );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   143      P( C, D, E, A, B, W[13] );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   144      P( B, C, D, E, A, W[14] );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   145      P( A, B, C, D, E, W[15] );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   146      P( E, A, B, C, D, R(16) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   147      P( D, E, A, B, C, R(17) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   148      P( C, D, E, A, B, R(18) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   149      P( B, C, D, E, A, R(19) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   150  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   151  #undef K
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   152  #undef F
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   153  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   154  #define F(x,y,z) (x ^ y ^ z)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   155  #define K 0x6ED9EBA1
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   156  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   157      P( A, B, C, D, E, R(20) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   158      P( E, A, B, C, D, R(21) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   159      P( D, E, A, B, C, R(22) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   160      P( C, D, E, A, B, R(23) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   161      P( B, C, D, E, A, R(24) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   162      P( A, B, C, D, E, R(25) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   163      P( E, A, B, C, D, R(26) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   164      P( D, E, A, B, C, R(27) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   165      P( C, D, E, A, B, R(28) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   166      P( B, C, D, E, A, R(29) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   167      P( A, B, C, D, E, R(30) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   168      P( E, A, B, C, D, R(31) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   169      P( D, E, A, B, C, R(32) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   170      P( C, D, E, A, B, R(33) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   171      P( B, C, D, E, A, R(34) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   172      P( A, B, C, D, E, R(35) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   173      P( E, A, B, C, D, R(36) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   174      P( D, E, A, B, C, R(37) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   175      P( C, D, E, A, B, R(38) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   176      P( B, C, D, E, A, R(39) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   177  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   178  #undef K
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   179  #undef F
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   180  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   181  #define F(x,y,z) ((x & y) | (z & (x | y)))
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   182  #define K 0x8F1BBCDC
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   183  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   184      P( A, B, C, D, E, R(40) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   185      P( E, A, B, C, D, R(41) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   186      P( D, E, A, B, C, R(42) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   187      P( C, D, E, A, B, R(43) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   188      P( B, C, D, E, A, R(44) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   189      P( A, B, C, D, E, R(45) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   190      P( E, A, B, C, D, R(46) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   191      P( D, E, A, B, C, R(47) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   192      P( C, D, E, A, B, R(48) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   193      P( B, C, D, E, A, R(49) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   194      P( A, B, C, D, E, R(50) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   195      P( E, A, B, C, D, R(51) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   196      P( D, E, A, B, C, R(52) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   197      P( C, D, E, A, B, R(53) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   198      P( B, C, D, E, A, R(54) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   199      P( A, B, C, D, E, R(55) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   200      P( E, A, B, C, D, R(56) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   201      P( D, E, A, B, C, R(57) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   202      P( C, D, E, A, B, R(58) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   203      P( B, C, D, E, A, R(59) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   204  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   205  #undef K
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   206  #undef F
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   207  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   208  #define F(x,y,z) (x ^ y ^ z)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   209  #define K 0xCA62C1D6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   210  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   211      P( A, B, C, D, E, R(60) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   212      P( E, A, B, C, D, R(61) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   213      P( D, E, A, B, C, R(62) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   214      P( C, D, E, A, B, R(63) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   215      P( B, C, D, E, A, R(64) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   216      P( A, B, C, D, E, R(65) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   217      P( E, A, B, C, D, R(66) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   218      P( D, E, A, B, C, R(67) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   219      P( C, D, E, A, B, R(68) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   220      P( B, C, D, E, A, R(69) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   221      P( A, B, C, D, E, R(70) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   222      P( E, A, B, C, D, R(71) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   223      P( D, E, A, B, C, R(72) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   224      P( C, D, E, A, B, R(73) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   225      P( B, C, D, E, A, R(74) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   226      P( A, B, C, D, E, R(75) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   227      P( E, A, B, C, D, R(76) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   228      P( D, E, A, B, C, R(77) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   229      P( C, D, E, A, B, R(78) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   230      P( B, C, D, E, A, R(79) );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   231  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   232  #undef K
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   233  #undef F
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   234  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   235      ctx->state[0] += A;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   236      ctx->state[1] += B;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   237      ctx->state[2] += C;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   238      ctx->state[3] += D;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   239      ctx->state[4] += E;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   240  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   241  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   242  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   243   * SHA-1 process buffer
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   244   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   245  void sha1_update( sha1_context *ctx, const unsigned char *input, int ilen )
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   246  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   247      int fill;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   248      unsigned long left;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   249  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   250      if( ilen <= 0 )
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   251          return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   252  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   253      left = ctx->total[0] & 0x3F;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   254      fill = 64 - left;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   255  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   256      ctx->total[0] += ilen;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   257      ctx->total[0] &= 0xFFFFFFFF;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   258  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   259      if( ctx->total[0] < (unsigned long) ilen )
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   260          ctx->total[1]++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   261  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   262      if( left && ilen >= fill )
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   263      {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   264          MEMCPY( (void *) (ctx->buffer + left),
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   265                  input, fill );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   266          sha1_process( ctx, ctx->buffer );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   267          input += fill;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   268          ilen  -= fill;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   269          left = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   270      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   271  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   272      while( ilen >= 64 )
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   273      {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   274          sha1_process( ctx, input );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   275          input += 64;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   276          ilen  -= 64;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   277      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   278  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   279      if( ilen > 0 )
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   280      {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   281          MEMCPY( (void *) (ctx->buffer + left),
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   282                  input, ilen );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   283      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   284  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   285  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   286  static const unsigned char sha1_padding[64] =
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   287  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   288   0x80, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   289      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   290      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   291      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   292  };
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   293  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   294  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   295   * SHA-1 final digest
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   296   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   297  void sha1_finish( sha1_context *ctx, unsigned char output[20] )
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   298  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   299      unsigned long last, padn;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   300      unsigned long high, low;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   301      unsigned char msglen[8];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   302  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   303      high = ( ctx->total[0] >> 29 )
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   304           | ( ctx->total[1] <<  3 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   305      low  = ( ctx->total[0] <<  3 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   306  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   307      PUT_ULONG_BE( high, msglen, 0 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   308      PUT_ULONG_BE( low,  msglen, 4 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   309  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   310      last = ctx->total[0] & 0x3F;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   311      padn = ( last < 56 ) ? ( 56 - last ) : ( 120 - last );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   312  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   313      sha1_update( ctx, sha1_padding, padn );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   314      sha1_update( ctx, msglen, 8 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   315  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   316      PUT_ULONG_BE( ctx->state[0], output,  0 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   317      PUT_ULONG_BE( ctx->state[1], output,  4 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   318      PUT_ULONG_BE( ctx->state[2], output,  8 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   319      PUT_ULONG_BE( ctx->state[3], output, 12 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   320      PUT_ULONG_BE( ctx->state[4], output, 16 );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   321  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   322  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   323  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   324   * output = SHA-1( input buffer )
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   325   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   326  void sha1( unsigned char *input, int ilen, unsigned char output[20] )
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   327  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   328      sha1_context ctx;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   329  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   330      sha1_starts( &ctx );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   331      sha1_update( &ctx, input, ilen );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   332      sha1_finish( &ctx, output );
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   333  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   334  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\polarssl\sha1.c	   335  #endif /* PPP_SUPPORT && LWIP_INCLUDED_POLARSSL_SHA1 */

	; Module end
