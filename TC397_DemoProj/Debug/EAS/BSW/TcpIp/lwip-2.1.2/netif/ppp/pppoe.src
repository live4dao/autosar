	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 09003395"
	.compiler_invocation	"ctc -f cc32528a --dep-file=EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\.pppoe.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --fp-model=+float -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Lib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\App_Func -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\demo -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Adc_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Gtm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\AscLin_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Can_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\EthV2_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Stm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Main -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\APP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\BswM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanSm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Com -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\ComM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Common -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Crc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Det -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\DoIP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EcuM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Eth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthSM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTrcv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FiM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FlsTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Nm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\PduR -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\RamTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\StbM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\arpa -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\net -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\sys -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\stdc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\apps -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\priv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\UdpNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Cal -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Daq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pag -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pgm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Std -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\XcpOnEth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Library\\Vfx_ComE2E -g2 --make-target=EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\pppoe.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O1 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\pppoe.src ..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\pppoe.c"
	.compiler_name		"ctc"
	;source	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\pppoe.c'

	
$TC162
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	4548
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\pppoe.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L5
	.byte	2,1,3
	.word	169
	.byte	4
	.byte	'__codeptr',0,1,1,1
	.word	171
	.byte	5
	.byte	'unsigned char',0,1,8,4
	.byte	'boolean',0,2,102,29
	.word	194
	.byte	4
	.byte	'uint8',0,2,106,29
	.word	194
	.byte	5
	.byte	'unsigned short int',0,2,7,4
	.byte	'uint16',0,2,110,29
	.word	241
	.byte	5
	.byte	'unsigned long int',0,4,7,4
	.byte	'uint32',0,2,114,29
	.word	278
	.byte	4
	.byte	'Std_ReturnType',0,3,109,16
	.word	194
	.byte	4
	.byte	'PduIdType',0,4,37,21
	.word	194
	.byte	4
	.byte	'PduLengthType',0,4,41,22
	.word	241
	.byte	6,5,101,9,1,7
	.byte	'BUFREQ_OK',0,0,7
	.byte	'BUFREQ_E_NOT_OK',0,1,7
	.byte	'BUFREQ_E_BUSY',0,2,7
	.byte	'BUFREQ_E_OVFL',0,3,0,4
	.byte	'BufReq_ReturnType',0,5,107,3
	.word	377
	.byte	3
	.word	194
	.byte	4
	.byte	'SduDataPtrType',0,5,189,1,40
	.word	471
	.byte	6,5,204,1,9,1,7
	.byte	'TP_DATACONF',0,0,7
	.byte	'TP_DATARETRY',0,1,7
	.byte	'TP_CONFPENDING',0,2,0,4
	.byte	'TpDataStateType',0,5,216,1,3
	.word	500
	.byte	4
	.byte	'TcpIp_SocketIdType',0,6,50,16
	.word	194
	.byte	8,4
	.word	278
	.byte	9,0,0,10,6,52,9,4,11
	.byte	'Addr',0
	.word	605
	.byte	4,2,35,0,0,4
	.byte	'TcpIp_IpAddressType',0,6,55,3
	.word	614
	.byte	4
	.byte	'TcpIp_DomainType',0,6,61,16
	.word	241
	.byte	10,6,68,9,8,11
	.byte	'Domain',0
	.word	241
	.byte	2,2,35,0,11
	.byte	'Port',0
	.word	241
	.byte	2,2,35,2,11
	.byte	'Addr',0
	.word	605
	.byte	4,2,35,4,0,4
	.byte	'TcpIp_SockAddrInetType',0,6,73,3
	.word	687
	.byte	4
	.byte	'TcpIp_AddressType',0,7,128,1,15
	.word	194
	.byte	4
	.byte	'TcpIp_CtrlIdType',0,7,142,1,15
	.word	194
	.byte	4
	.byte	'TcpIp_IpAddrStateType',0,7,144,1,15
	.word	194
	.byte	4
	.byte	'TcpIp_LocalAddrAssignmentConfigType',0,7,149,1,15
	.word	194
	.byte	4
	.byte	'TcpIp_StaticAddrIdType',0,7,151,1,15
	.word	194
	.byte	10,7,152,1,9,12,11
	.byte	'State',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'Netmask',0
	.word	194
	.byte	1,2,35,1,11
	.byte	'Domain',0
	.word	241
	.byte	2,2,35,2,11
	.byte	'IpAddr',0
	.word	614
	.byte	4,2,35,4,11
	.byte	'DefaultRouter',0
	.word	614
	.byte	4,2,35,8,0,4
	.byte	'TcpIp_StaticIpAddrType',0,7,162,1,3
	.word	929
	.byte	4
	.byte	'TcpIp_LocalAddrIdType',0,7,173,1,15
	.word	194
	.byte	8,3
	.word	194
	.byte	9,2,0,10,7,231,1,9,8,11
	.byte	'CtrlId',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'Address',0
	.word	194
	.byte	1,2,35,1,11
	.byte	'Domain',0
	.word	241
	.byte	2,2,35,2,11
	.byte	'StaticAddrId',0
	.word	194
	.byte	1,2,35,4,11
	.byte	'Assignments',0
	.word	1086
	.byte	3,2,35,5,0,4
	.byte	'TcpIp_LocalAddrConfigType',0,7,243,1,3
	.word	1095
	.byte	10,7,245,1,9,4,11
	.byte	'ArpConfigId',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'DHCPConfigId',0
	.word	194
	.byte	1,2,35,1,11
	.byte	'AutoIpInitTimeout',0
	.word	241
	.byte	2,2,35,2,0,4
	.byte	'TcpIp_IpV4CtrlConfigType',0,7,130,2,3
	.word	1229
	.byte	10,7,133,2,9,8,11
	.byte	'CtrlIdx',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'FramePrio',0
	.word	194
	.byte	1,2,35,1,11
	.byte	'UnicastAddrId',0
	.word	194
	.byte	1,2,35,2,11
	.byte	'UnicastAddrLimit',0
	.word	194
	.byte	1,2,35,3,11
	.byte	'MulticastAddrId',0
	.word	194
	.byte	1,2,35,4,11
	.byte	'LocalAddrLimit',0
	.word	194
	.byte	1,2,35,5,11
	.byte	'IpV4CtrlId',0
	.word	194
	.byte	1,2,35,6,11
	.byte	'IpV6CtrlId',0
	.word	194
	.byte	1,2,35,7,0,4
	.byte	'TcpIp_NetIfCtrlConfigType',0,7,148,2,3
	.word	1340
	.byte	4
	.byte	'SoAd_RoutingGroupIdType',0,8,43,15
	.word	194
	.byte	4
	.byte	'SoAd_SoConIdType',0,8,44,15
	.word	194
	.byte	4
	.byte	'SoAd_SoConGroupIdType',0,8,45,15
	.word	194
	.byte	4
	.byte	'SoAd_PduRouteIdType',0,8,46,15
	.word	194
	.byte	4
	.byte	'SoAd_PduRouteDestIdType',0,8,47,15
	.word	194
	.byte	4
	.byte	'SoAd_SocketRouteIdType',0,8,48,15
	.word	194
	.byte	4
	.byte	'SoAd_IfTxUnconfirmedType',0,8,49,16
	.word	241
	.byte	4
	.byte	'SoAd_IfTxTimerType',0,8,51,16
	.word	241
	.byte	8,1
	.word	194
	.byte	9,0,0,10,8,53,9,2,11
	.byte	'Mask',0
	.word	1794
	.byte	1,2,35,0,11
	.byte	'RoutingState',0
	.word	1794
	.byte	1,2,35,1,0,4
	.byte	'SoAd_RoutingGroupCtrlType',0,8,57,3
	.word	1803
	.byte	6,8,63,9,1,7
	.byte	'SOAD_UL_DOIP',0,0,7
	.byte	'SOAD_UL_UDPNM',0,1,7
	.byte	'SOAD_UL_PDUR',0,2,7
	.byte	'SOAD_UL_XCP',0,3,7
	.byte	'SOAD_UL_MAX',0,4,0,4
	.byte	'SoAd_ULIndexType',0,8,71,3
	.word	1879
	.byte	4
	.byte	'SoAd_RemoteAddressType',0,9,113,32
	.word	687
	.byte	6,9,115,9,1,7
	.byte	'SOAD_SOCON_UNINIT',0,0,7
	.byte	'SOAD_SOCON_OFFLINE',0,1,7
	.byte	'SOAD_SOCON_RECONN',0,2,7
	.byte	'SOAD_SOCON_ONLINE',0,3,0,4
	.byte	'SoAd_SoConModeType',0,9,121,3
	.word	2015
	.byte	12
	.word	194
	.byte	3
	.word	2129
	.byte	12
	.word	194
	.byte	3
	.word	2139
	.byte	12
	.word	194
	.byte	3
	.word	2149
	.byte	12
	.word	1879
	.byte	3
	.word	2159
	.byte	10,9,129,1,9,36,11
	.byte	'IfBufferLength',0
	.word	241
	.byte	2,2,35,0,11
	.byte	'IfBufferOffset',0
	.word	241
	.byte	2,2,35,2,11
	.byte	'TpBufferLength',0
	.word	241
	.byte	2,2,35,4,11
	.byte	'TpBufferOffset',0
	.word	241
	.byte	2,2,35,6,11
	.byte	'PduRouteNum',0
	.word	194
	.byte	1,2,35,8,11
	.byte	'SocketRouteNum',0
	.word	194
	.byte	1,2,35,9,11
	.byte	'PduRouteDestNum',0
	.word	194
	.byte	1,2,35,10,11
	.byte	'RemoteAddrState',0
	.word	194
	.byte	1,2,35,11,11
	.byte	'RemoteAddr',0
	.word	687
	.byte	8,2,35,12,11
	.byte	'PduRouteDestList',0
	.word	2134
	.byte	4,2,35,20,11
	.byte	'PduRouteList',0
	.word	2144
	.byte	4,2,35,24,11
	.byte	'SocketRouteList',0
	.word	2154
	.byte	4,2,35,28,11
	.byte	'SoConModeChgList',0
	.word	2164
	.byte	4,2,35,32,0,4
	.byte	'SoAd_SocketConnectionType',0,9,146,1,3
	.word	2169
	.byte	10,9,148,1,9,16,11
	.byte	'CtrlFlag',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'KeepAliveProbesMax',0
	.word	241
	.byte	2,2,35,2,11
	.byte	'KeepAliveInterval',0
	.word	278
	.byte	4,2,35,4,11
	.byte	'KeepAliveTime',0
	.word	278
	.byte	4,2,35,8,11
	.byte	'TxQuota',0
	.word	278
	.byte	4,2,35,12,0,4
	.byte	'SoAd_TcpProtocolType',0,9,155,1,3
	.word	2521
	.byte	10,9,157,1,9,12,11
	.byte	'CtrlFlag',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'nPduTxBufferMin',0
	.word	241
	.byte	2,2,35,2,11
	.byte	'TriggerTimeout',0
	.word	241
	.byte	2,2,35,4,11
	.byte	'AliveSupervisionTimeout',0
	.word	278
	.byte	4,2,35,6,0,4
	.byte	'SoAd_UdpProtocolType',0,9,163,1,3
	.word	2671
	.byte	12
	.word	2521
	.byte	3
	.word	2808
	.byte	12
	.word	2671
	.byte	3
	.word	2818
	.byte	10,9,165,1,9,24,11
	.byte	'GroupId',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'CtrlFlag',0
	.word	194
	.byte	1,2,35,1,11
	.byte	'FramePriority',0
	.word	194
	.byte	1,2,35,2,11
	.byte	'SoConNum',0
	.word	194
	.byte	1,2,35,3,11
	.byte	'SoConId',0
	.word	194
	.byte	1,2,35,4,11
	.byte	'IpAddrAssignChgNum',0
	.word	194
	.byte	1,2,35,5,11
	.byte	'LocalAddrId',0
	.word	194
	.byte	1,2,35,6,11
	.byte	'LocalPort',0
	.word	241
	.byte	2,2,35,8,11
	.byte	'IpAddrAssignChgList',0
	.word	2164
	.byte	4,2,35,12,11
	.byte	'TcpProtocolPtr',0
	.word	2813
	.byte	4,2,35,16,11
	.byte	'UdpProtocolPtr',0
	.word	2823
	.byte	4,2,35,20,0,4
	.byte	'SoAd_SocketConnectionGroupType',0,9,178,1,3
	.word	2828
	.byte	12
	.word	194
	.byte	3
	.word	3113
	.byte	10,9,180,1,9,12,11
	.byte	'CtrlFlag',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'PduRouteDestNum',0
	.word	194
	.byte	1,2,35,1,11
	.byte	'SocketRouteDestNum',0
	.word	194
	.byte	1,2,35,2,11
	.byte	'PduRouteDestList',0
	.word	3118
	.byte	4,2,35,4,11
	.byte	'SocketRouteDestList',0
	.word	3118
	.byte	4,2,35,8,0,4
	.byte	'SoAd_RoutingGroupType',0,9,187,1,3
	.word	3123
	.byte	10,9,189,1,9,6,11
	.byte	'ULType',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'ULIndex',0
	.word	1879
	.byte	1,2,35,1,11
	.byte	'CtrlFlag',0
	.word	194
	.byte	1,2,35,2,11
	.byte	'RouteDestNum',0
	.word	194
	.byte	1,2,35,3,11
	.byte	'RouteDestId',0
	.word	194
	.byte	1,2,35,4,11
	.byte	'TxPduId',0
	.word	194
	.byte	1,2,35,5,0,4
	.byte	'SoAd_PduRouteType',0,9,204,1,3
	.word	3287
	.byte	3
	.word	1803
	.byte	10,9,206,1,9,20,11
	.byte	'TxPduHeaderId',0
	.word	278
	.byte	4,2,35,0,11
	.byte	'SoConNum',0
	.word	194
	.byte	1,2,35,4,11
	.byte	'SoConId',0
	.word	194
	.byte	1,2,35,5,11
	.byte	'PduRouteId',0
	.word	194
	.byte	1,2,35,6,11
	.byte	'UdpTriggerMode',0
	.word	194
	.byte	1,2,35,7,11
	.byte	'UdpTriggerTimeout',0
	.word	241
	.byte	2,2,35,8,11
	.byte	'RoutingCtrlList',0
	.word	3432
	.byte	4,2,35,12,11
	.byte	'IfTriggerList',0
	.word	471
	.byte	4,2,35,16,0,4
	.byte	'SoAd_PduRouteDestType',0,9,217,1,3
	.word	3437
	.byte	10,9,219,1,9,16,11
	.byte	'RxPduHeaderId',0
	.word	278
	.byte	4,2,35,0,11
	.byte	'ULType',0
	.word	194
	.byte	1,2,35,4,11
	.byte	'ULIndex',0
	.word	1879
	.byte	1,2,35,5,11
	.byte	'SoConNum',0
	.word	194
	.byte	1,2,35,6,11
	.byte	'SoConId',0
	.word	194
	.byte	1,2,35,7,11
	.byte	'RxPduId',0
	.word	194
	.byte	1,2,35,8,11
	.byte	'RoutingCtrlList',0
	.word	3432
	.byte	4,2,35,12,0,4
	.byte	'SoAd_SocketRouteType',0,9,236,1,3
	.word	3652
	.byte	12
	.word	3437
	.byte	3
	.word	3822
	.byte	10,9,155,2,9,24,11
	.byte	'State',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'Timer',0
	.word	241
	.byte	2,2,35,2,11
	.byte	'BufferLength',0
	.word	241
	.byte	2,2,35,4,11
	.byte	'BufferOffset',0
	.word	241
	.byte	2,2,35,6,11
	.byte	'UdpTxBuffer',0
	.word	471
	.byte	4,2,35,8,11
	.byte	'TotalTxLength',0
	.word	241
	.byte	2,2,35,12,11
	.byte	'UsedTxLength',0
	.word	241
	.byte	2,2,35,14,11
	.byte	'IfTxDataBuffer',0
	.word	3118
	.byte	4,2,35,16,11
	.byte	'PduRouteDestPtr',0
	.word	3827
	.byte	4,2,35,20,0,4
	.byte	'SoAd_TxSessionType',0,9,177,2,3
	.word	3832
	.byte	12
	.word	3652
	.byte	3
	.word	4056
	.byte	10,9,180,2,9,8,11
	.byte	'PduLength',0
	.word	241
	.byte	2,2,35,0,11
	.byte	'RemainLength',0
	.word	241
	.byte	2,2,35,2,11
	.byte	'SocketRoutePtr',0
	.word	4061
	.byte	4,2,35,4,0,4
	.byte	'SoAd_RxPduInfoType',0,9,185,2,3
	.word	4066
	.byte	10,9,187,2,9,12,11
	.byte	'TotalLength',0
	.word	241
	.byte	2,2,35,0,11
	.byte	'In',0
	.word	241
	.byte	2,2,35,2,11
	.byte	'Out',0
	.word	241
	.byte	2,2,35,4,11
	.byte	'BufferPtr',0
	.word	471
	.byte	4,2,35,8,0,4
	.byte	'SoAd_RxFifoType',0,9,193,2,3
	.word	4166
	.byte	10,9,195,2,9,8,11
	.byte	'TotalLength',0
	.word	241
	.byte	2,2,35,0,11
	.byte	'UsedLength',0
	.word	241
	.byte	2,2,35,2,11
	.byte	'BufferPtr',0
	.word	471
	.byte	4,2,35,4,0,4
	.byte	'SoAd_RxBufferType',0,9,200,2,3
	.word	4263
	.byte	8,8
	.word	194
	.byte	9,7,0,10,9,202,2,9,48,11
	.byte	'State',0
	.word	194
	.byte	1,2,35,0,11
	.byte	'ValidHeaderLen',0
	.word	194
	.byte	1,2,35,1,11
	.byte	'PduHeader',0
	.word	4357
	.byte	8,2,35,2,11
	.byte	'RxPduInfo',0
	.word	4066
	.byte	8,2,35,12,11
	.byte	'ProcessPduInfo',0
	.word	4066
	.byte	8,2,35,20,11
	.byte	'IfBuffer',0
	.word	4263
	.byte	8,2,35,28,11
	.byte	'TpBuffer',0
	.word	4166
	.byte	12,2,35,36,0,4
	.byte	'SoAd_RxSessionType',0,9,216,2,3
	.word	4366
	.byte	4
	.byte	'u8_t',0,10,61,25
	.word	194
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,0,0,3,15,0,73,19,0,0,4,22,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,5,36,0,3,8,11,15,62,15,0,0,6,4,1,58,15,59,15,57,15,11,15,0,0,7,40,0,3,8,28,13,0,0,8,1
	.byte	1,11,15,73,19,0,0,9,33,0,47,15,0,0,10,19,1,58,15,59,15,57,15,11,15,0,0,11,13,0,3,8,73,19,11,15,56,9,0
	.byte	0,12,38,0,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L7-.L6
.L6:
	.half	3
	.word	.L9-.L8
.L8:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch',0,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\pppoe.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Std_Types.h',0,1,0,0
	.byte	'ComStack_Types_Cfg.h',0,2,0,0
	.byte	'ComStack_Types.h',0,3,0,0
	.byte	'TcpIp_GeneratedTypes.h',0,2,0,0
	.byte	'TcpIp_Types.h',0,4,0,0
	.byte	'SoAd_GeneratedTypes.h',0,2,0,0
	.byte	'SoAd_Types.h',0,5,0,0
	.byte	'cc.h',0,6,0,0,0
.L9:
.L7:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	     1  /*****************************************************************************
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	     2  * pppoe.c - PPP Over Ethernet implementation for lwIP.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	     3  *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	     4  * Copyright (c) 2006 by Marc Boucher, Services Informatiques (MBSI) inc.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	     5  *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	     6  * The authors hereby grant permission to use, copy, modify, distribute,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	     7  * and license this software and its documentation for any purpose, provided
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	     8  * that existing copyright notices are retained in all copies and that this
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	     9  * notice and the following disclaimer are included verbatim in any 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    10  * distributions. No written agreement, license, or royalty fee is required
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    11  * for any of the authorized uses.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    12  *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    13  * THIS SOFTWARE IS PROVIDED BY THE CONTRIBUTORS *AS IS* AND ANY EXPRESS OR
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    14  * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    15  * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    16  * IN NO EVENT SHALL THE CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    17  * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    18  * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    19  * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    20  * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    21  * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    22  * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    23  *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    24  ******************************************************************************
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    25  * REVISION HISTORY
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    26  *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    27  * 06-01-01 Marc Boucher <marc@mbsi.ca>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    28  *   Ported to lwIP.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    29  *****************************************************************************/
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    30  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    31  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    32  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    33  /* based on NetBSD: if_pppoe.c,v 1.64 2006/01/31 23:50:15 martin Exp */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    34  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    35  /*-
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    36   * Copyright (c) 2002 The NetBSD Foundation, Inc.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    37   * All rights reserved.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    38   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    39   * This code is derived from software contributed to The NetBSD Foundation
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    40   * by Martin Husemann <martin@NetBSD.org>.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    41   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    42   * Redistribution and use in source and binary forms, with or without
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    43   * modification, are permitted provided that the following conditions
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    44   * are met:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    45   * 1. Redistributions of source code must retain the above copyright
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    46   *    notice, this list of conditions and the following disclaimer.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    47   * 2. Redistributions in binary form must reproduce the above copyright
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    48   *    notice, this list of conditions and the following disclaimer in the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    49   *    documentation and/or other materials provided with the distribution.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    50   * 3. All advertising materials mentioning features or use of this software
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    51   *    must display the following acknowledgement:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    52   *        This product includes software developed by the NetBSD
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    53   *        Foundation, Inc. and its contributors.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    54   * 4. Neither the name of The NetBSD Foundation nor the names of its
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    55   *    contributors may be used to endorse or promote products derived
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    56   *    from this software without specific prior written permission.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    57   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    58   * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    59   * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    60   * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    61   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    62   * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    63   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    64   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    65   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    66   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    67   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    68   * POSSIBILITY OF SUCH DAMAGE.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    69   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    70  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    71  #include "netif/ppp/ppp_opts.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    72  #if PPP_SUPPORT && PPPOE_SUPPORT /* don't build if not configured for use in lwipopts.h */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    73  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    74  #if 0 /* UNUSED */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    75  #include <string.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    76  #include <stdio.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    77  #endif /* UNUSED */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    78  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    79  #include "lwip/timeouts.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    80  #include "lwip/memp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    81  #include "lwip/stats.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    82  #include "lwip/snmp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    83  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    84  #include "netif/ethernet.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    85  #include "netif/ppp/ppp_impl.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    86  #include "netif/ppp/lcp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    87  #include "netif/ppp/ipcp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    88  #include "netif/ppp/pppoe.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    89  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    90  /* Memory pool */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    91  LWIP_MEMPOOL_DECLARE(PPPOE_IF, MEMP_NUM_PPPOE_INTERFACES, sizeof(struct pppoe_softc), "PPPOE_IF")
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    92  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    93  /* Add a 16 bit unsigned value to a buffer pointed to by PTR */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    94  #define PPPOE_ADD_16(PTR, VAL) \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    95      *(PTR)++ = (u8_t)((VAL) / 256);    \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    96      *(PTR)++ = (u8_t)((VAL) % 256)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    97  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    98  /* Add a complete PPPoE header to the buffer pointed to by PTR */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	    99  #define PPPOE_ADD_HEADER(PTR, CODE, SESS, LEN)  \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   100      *(PTR)++ = PPPOE_VERTYPE;  \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   101      *(PTR)++ = (CODE);         \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   102      PPPOE_ADD_16(PTR, SESS);   \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   103      PPPOE_ADD_16(PTR, LEN)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   104  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   105  #define PPPOE_DISC_TIMEOUT (5*1000)  /* base for quick timeout calculation */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   106  #define PPPOE_SLOW_RETRY   (60*1000) /* persistent retry interval */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   107  #define PPPOE_DISC_MAXPADI  4        /* retry PADI four times (quickly) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   108  #define PPPOE_DISC_MAXPADR  2        /* retry PADR twice */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   109  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   110  #ifdef PPPOE_SERVER
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   111  #error "PPPOE_SERVER is not yet supported under lwIP!"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   112  /* from if_spppsubr.c */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   113  #define IFF_PASSIVE IFF_LINK0 /* wait passively for connection */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   114  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   115  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   116  #define PPPOE_ERRORSTRING_LEN     64
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   117  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   118  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   119  /* callbacks called from PPP core */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   120  static err_t pppoe_write(ppp_pcb *ppp, void *ctx, struct pbuf *p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   121  static err_t pppoe_netif_output(ppp_pcb *ppp, void *ctx, struct pbuf *p, u_short protocol);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   122  static void pppoe_connect(ppp_pcb *ppp, void *ctx);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   123  static void pppoe_disconnect(ppp_pcb *ppp, void *ctx);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   124  static err_t pppoe_destroy(ppp_pcb *ppp, void *ctx);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   125  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   126  /* management routines */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   127  static void pppoe_abort_connect(struct pppoe_softc *);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   128  #if 0 /* UNUSED */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   129  static void pppoe_clear_softc(struct pppoe_softc *, const char *);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   130  #endif /* UNUSED */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   131  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   132  /* internal timeout handling */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   133  static void pppoe_timeout(void *);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   134  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   135  /* sending actual protocol controll packets */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   136  static err_t pppoe_send_padi(struct pppoe_softc *);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   137  static err_t pppoe_send_padr(struct pppoe_softc *);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   138  #ifdef PPPOE_SERVER
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   139  static err_t pppoe_send_pado(struct pppoe_softc *);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   140  static err_t pppoe_send_pads(struct pppoe_softc *);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   141  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   142  static err_t pppoe_send_padt(struct netif *, u_int, const u8_t *);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   143  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   144  /* internal helper functions */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   145  static err_t pppoe_xmit(struct pppoe_softc *sc, struct pbuf *pb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   146  static struct pppoe_softc* pppoe_find_softc_by_session(u_int session, struct netif *rcvif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   147  static struct pppoe_softc* pppoe_find_softc_by_hunique(u8_t *token, size_t len, struct netif *rcvif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   148  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   149  /** linked list of created pppoe interfaces */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   150  static struct pppoe_softc *pppoe_softc_list;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   151  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   152  /* Callbacks structure for PPP core */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   153  static const struct link_callbacks pppoe_callbacks = {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   154    pppoe_connect,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   155  #if PPP_SERVER
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   156    NULL,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   157  #endif /* PPP_SERVER */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   158    pppoe_disconnect,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   159    pppoe_destroy,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   160    pppoe_write,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   161    pppoe_netif_output,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   162    NULL,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   163    NULL
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   164  };
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   165  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   166  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   167   * Create a new PPP Over Ethernet (PPPoE) connection.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   168   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   169   * Return 0 on success, an error code on failure.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   170   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   171  ppp_pcb *pppoe_create(struct netif *pppif,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   172         struct netif *ethif,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   173         const char *service_name, const char *concentrator_name,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   174         ppp_link_status_cb_fn link_status_cb, void *ctx_cb)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   175  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   176    ppp_pcb *ppp;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   177    struct pppoe_softc *sc;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   178    LWIP_UNUSED_ARG(service_name);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   179    LWIP_UNUSED_ARG(concentrator_name);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   180    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   181  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   182    sc = (struct pppoe_softc *)LWIP_MEMPOOL_ALLOC(PPPOE_IF);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   183    if (sc == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   184      return NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   185    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   186  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   187    ppp = ppp_new(pppif, &pppoe_callbacks, sc, link_status_cb, ctx_cb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   188    if (ppp == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   189      LWIP_MEMPOOL_FREE(PPPOE_IF, sc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   190      return NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   191    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   192  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   193    memset(sc, 0, sizeof(struct pppoe_softc));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   194    sc->pcb = ppp;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   195    sc->sc_ethif = ethif;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   196    /* put the new interface at the head of the list */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   197    sc->next = pppoe_softc_list;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   198    pppoe_softc_list = sc;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   199    return ppp;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   200  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   201  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   202  /* Called by PPP core */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   203  static err_t pppoe_write(ppp_pcb *ppp, void *ctx, struct pbuf *p) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   204    struct pppoe_softc *sc = (struct pppoe_softc *)ctx;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   205    struct pbuf *ph; /* Ethernet + PPPoE header */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   206    err_t ret;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   207  #if MIB2_STATS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   208    u16_t tot_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   209  #else /* MIB2_STATS */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   210    LWIP_UNUSED_ARG(ppp);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   211  #endif /* MIB2_STATS */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   212  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   213    /* skip address & flags */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   214    pbuf_remove_header(p, 2);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   215  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   216    ph = pbuf_alloc(PBUF_LINK, (u16_t)(PPPOE_HEADERLEN), PBUF_RAM);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   217    if(!ph) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   218      LINK_STATS_INC(link.memerr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   219      LINK_STATS_INC(link.proterr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   220      MIB2_STATS_NETIF_INC(ppp->netif, ifoutdiscards);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   221      pbuf_free(p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   222      return ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   223    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   224  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   225    pbuf_remove_header(ph, PPPOE_HEADERLEN); /* hide PPPoE header */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   226    pbuf_cat(ph, p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   227  #if MIB2_STATS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   228    tot_len = ph->tot_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   229  #endif /* MIB2_STATS */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   230  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   231    ret = pppoe_xmit(sc, ph);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   232    if (ret != ERR_OK) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   233      LINK_STATS_INC(link.err);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   234      MIB2_STATS_NETIF_INC(ppp->netif, ifoutdiscards);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   235      return ret;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   236    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   237  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   238    MIB2_STATS_NETIF_ADD(ppp->netif, ifoutoctets, (u16_t)tot_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   239    MIB2_STATS_NETIF_INC(ppp->netif, ifoutucastpkts);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   240    LINK_STATS_INC(link.xmit);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   241    return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   242  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   243  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   244  /* Called by PPP core */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   245  static err_t pppoe_netif_output(ppp_pcb *ppp, void *ctx, struct pbuf *p, u_short protocol) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   246    struct pppoe_softc *sc = (struct pppoe_softc *)ctx;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   247    struct pbuf *pb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   248    u8_t *pl;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   249    err_t err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   250  #if MIB2_STATS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   251    u16_t tot_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   252  #else /* MIB2_STATS */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   253    LWIP_UNUSED_ARG(ppp);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   254  #endif /* MIB2_STATS */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   255  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   256    /* @todo: try to use pbuf_header() here! */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   257    pb = pbuf_alloc(PBUF_LINK, PPPOE_HEADERLEN + sizeof(protocol), PBUF_RAM);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   258    if(!pb) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   259      LINK_STATS_INC(link.memerr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   260      LINK_STATS_INC(link.proterr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   261      MIB2_STATS_NETIF_INC(ppp->netif, ifoutdiscards);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   262      return ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   263    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   264  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   265    pbuf_remove_header(pb, PPPOE_HEADERLEN);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   266  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   267    pl = (u8_t*)pb->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   268    PUTSHORT(protocol, pl);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   269  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   270    pbuf_chain(pb, p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   271  #if MIB2_STATS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   272    tot_len = pb->tot_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   273  #endif /* MIB2_STATS */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   274  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   275    if( (err = pppoe_xmit(sc, pb)) != ERR_OK) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   276      LINK_STATS_INC(link.err);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   277      MIB2_STATS_NETIF_INC(ppp->netif, ifoutdiscards);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   278      return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   279    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   280  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   281    MIB2_STATS_NETIF_ADD(ppp->netif, ifoutoctets, tot_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   282    MIB2_STATS_NETIF_INC(ppp->netif, ifoutucastpkts);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   283    LINK_STATS_INC(link.xmit);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   284    return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   285  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   286  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   287  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   288  pppoe_destroy(ppp_pcb *ppp, void *ctx)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   289  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   290    struct pppoe_softc *sc = (struct pppoe_softc *)ctx;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   291    struct pppoe_softc **copp, *freep;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   292    LWIP_UNUSED_ARG(ppp);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   293  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   294    sys_untimeout(pppoe_timeout, sc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   295  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   296    /* remove interface from list */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   297    for (copp = &pppoe_softc_list; (freep = *copp); copp = &freep->next) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   298      if (freep == sc) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   299         *copp = freep->next;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   300         break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   301      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   302    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   303  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   304  #ifdef PPPOE_TODO
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   305    if (sc->sc_concentrator_name) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   306      mem_free(sc->sc_concentrator_name);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   307    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   308    if (sc->sc_service_name) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   309      mem_free(sc->sc_service_name);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   310    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   311  #endif /* PPPOE_TODO */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   312    LWIP_MEMPOOL_FREE(PPPOE_IF, sc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   313  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   314    return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   315  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   316  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   317  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   318   * Find the interface handling the specified session.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   319   * Note: O(number of sessions open), this is a client-side only, mean
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   320   * and lean implementation, so number of open sessions typically should
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   321   * be 1.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   322   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   323  static struct pppoe_softc* pppoe_find_softc_by_session(u_int session, struct netif *rcvif) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   324    struct pppoe_softc *sc;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   325  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   326    for (sc = pppoe_softc_list; sc != NULL; sc = sc->next) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   327      if (sc->sc_state == PPPOE_STATE_SESSION
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   328          && sc->sc_session == session
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   329           && sc->sc_ethif == rcvif) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   330             return sc;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   331        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   332    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   333    return NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   334  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   335  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   336  /* Check host unique token passed and return appropriate softc pointer,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   337   * or NULL if token is bogus. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   338  static struct pppoe_softc* pppoe_find_softc_by_hunique(u8_t *token, size_t len, struct netif *rcvif) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   339    struct pppoe_softc *sc, *t;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   340  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   341    if (len != sizeof sc) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   342      return NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   343    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   344    MEMCPY(&t, token, len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   345  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   346    for (sc = pppoe_softc_list; sc != NULL; sc = sc->next) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   347      if (sc == t) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   348        break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   349      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   350    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   351  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   352    if (sc == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   353      PPPDEBUG(LOG_DEBUG, ("pppoe: alien host unique tag, no session found\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   354      return NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   355    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   356  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   357    /* should be safe to access *sc now */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   358    if (sc->sc_state < PPPOE_STATE_PADI_SENT || sc->sc_state >= PPPOE_STATE_SESSION) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   359      PPPDEBUG(LOG_DEBUG, ("%c%c%"U16_F": host unique tag found, but it belongs to a connection in state %d\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   360        sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num, sc->sc_state));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   361      return NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   362    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   363    if (sc->sc_ethif != rcvif) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   364      PPPDEBUG(LOG_DEBUG, ("%c%c%"U16_F": wrong interface, not accepting host unique\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   365        sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   366      return NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   367    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   368    return sc;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   369  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   370  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   371  /* analyze and handle a single received packet while not in session state */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   372  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   373  pppoe_disc_input(struct netif *netif, struct pbuf *pb)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   374  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   375    u16_t tag, len, off;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   376    u16_t session, plen;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   377    struct pppoe_softc *sc;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   378  #if PPP_DEBUG
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   379    const char *err_msg = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   380  #endif /* PPP_DEBUG */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   381    u8_t *ac_cookie;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   382    u16_t ac_cookie_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   383  #ifdef PPPOE_SERVER
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   384    u8_t *hunique;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   385    size_t hunique_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   386  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   387    struct pppoehdr *ph;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   388    struct pppoetag pt;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   389    int err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   390    struct eth_hdr *ethhdr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   391  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   392    /* don't do anything if there is not a single PPPoE instance */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   393    if (pppoe_softc_list == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   394      pbuf_free(pb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   395      return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   396    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   397  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   398    pb = pbuf_coalesce(pb, PBUF_RAW);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   399  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   400    ethhdr = (struct eth_hdr *)pb->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   401  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   402    ac_cookie = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   403    ac_cookie_len = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   404  #ifdef PPPOE_SERVER
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   405    hunique = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   406    hunique_len = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   407  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   408    session = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   409    off = sizeof(struct eth_hdr) + sizeof(struct pppoehdr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   410    if (pb->len < off) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   411      PPPDEBUG(LOG_DEBUG, ("pppoe: packet too short: %d\n", pb->len));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   412      goto done;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   413    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   414  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   415    ph = (struct pppoehdr *) (ethhdr + 1);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   416    if (ph->vertype != PPPOE_VERTYPE) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   417      PPPDEBUG(LOG_DEBUG, ("pppoe: unknown version/type packet: 0x%x\n", ph->vertype));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   418      goto done;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   419    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   420    session = lwip_ntohs(ph->session);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   421    plen = lwip_ntohs(ph->plen);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   422  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   423    if (plen > (pb->len - off)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   424      PPPDEBUG(LOG_DEBUG, ("pppoe: packet content does not fit: data available = %d, packet size = %u\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   425          pb->len - off, plen));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   426      goto done;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   427    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   428    if(pb->tot_len == pb->len) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   429      u16_t framelen = off + plen;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   430      if (framelen < pb->len) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   431        /* ignore trailing garbage */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   432        pb->tot_len = pb->len = framelen;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   433      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   434    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   435    tag = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   436    len = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   437    sc = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   438    while (off + sizeof(pt) <= pb->len) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   439      MEMCPY(&pt, (u8_t*)pb->payload + off, sizeof(pt));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   440      tag = lwip_ntohs(pt.tag);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   441      len = lwip_ntohs(pt.len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   442      if (off + sizeof(pt) + len > pb->len) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   443        PPPDEBUG(LOG_DEBUG, ("pppoe: tag 0x%x len 0x%x is too long\n", tag, len));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   444        goto done;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   445      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   446      switch (tag) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   447        case PPPOE_TAG_EOL:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   448          goto breakbreak;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   449        case PPPOE_TAG_SNAME:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   450          break;  /* ignored */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   451        case PPPOE_TAG_ACNAME:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   452          break;  /* ignored */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   453        case PPPOE_TAG_HUNIQUE:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   454          if (sc != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   455            break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   456          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   457  #ifdef PPPOE_SERVER
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   458          hunique = (u8_t*)pb->payload + off + sizeof(pt);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   459          hunique_len = len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   460  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   461          sc = pppoe_find_softc_by_hunique((u8_t*)pb->payload + off + sizeof(pt), len, netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   462          break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   463        case PPPOE_TAG_ACCOOKIE:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   464          if (ac_cookie == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   465            if (len > PPPOE_MAX_AC_COOKIE_LEN) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   466              PPPDEBUG(LOG_DEBUG, ("pppoe: AC cookie is too long: len = %d, max = %d\n", len, PPPOE_MAX_AC_COOKIE_LEN));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   467              goto done;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   468            }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   469            ac_cookie = (u8_t*)pb->payload + off + sizeof(pt);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   470            ac_cookie_len = len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   471          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   472          break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   473  #if PPP_DEBUG
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   474        case PPPOE_TAG_SNAME_ERR:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   475          err_msg = "SERVICE NAME ERROR";
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   476          break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   477        case PPPOE_TAG_ACSYS_ERR:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   478          err_msg = "AC SYSTEM ERROR";
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   479          break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   480        case PPPOE_TAG_GENERIC_ERR:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   481          err_msg = "GENERIC ERROR";
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   482          break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   483  #endif /* PPP_DEBUG */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   484        default:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   485          break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   486      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   487  #if PPP_DEBUG
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   488      if (err_msg != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   489        char error_tmp[PPPOE_ERRORSTRING_LEN];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   490        u16_t error_len = LWIP_MIN(len, sizeof(error_tmp)-1);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   491        strncpy(error_tmp, (char*)pb->payload + off + sizeof(pt), error_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   492        error_tmp[error_len] = '\0';
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   493        if (sc) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   494          PPPDEBUG(LOG_DEBUG, ("pppoe: %c%c%"U16_F": %s: %s\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num, err_msg, error_tmp));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   495        } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   496          PPPDEBUG(LOG_DEBUG, ("pppoe: %s: %s\n", err_msg, error_tmp));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   497        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   498      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   499  #endif /* PPP_DEBUG */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   500      off += sizeof(pt) + len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   501    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   502  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   503  breakbreak:;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   504    switch (ph->code) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   505      case PPPOE_CODE_PADI:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   506  #ifdef PPPOE_SERVER
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   507        /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   508         * got service name, concentrator name, and/or host unique.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   509         * ignore if we have no interfaces with IFF_PASSIVE|IFF_UP.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   510         */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   511        if (LIST_EMPTY(&pppoe_softc_list)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   512          goto done;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   513        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   514        LIST_FOREACH(sc, &pppoe_softc_list, sc_list) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   515          if (!(sc->sc_sppp.pp_if.if_flags & IFF_UP)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   516            continue;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   517          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   518          if (!(sc->sc_sppp.pp_if.if_flags & IFF_PASSIVE)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   519            continue;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   520          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   521          if (sc->sc_state == PPPOE_STATE_INITIAL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   522            break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   523          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   524        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   525        if (sc == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   526          /* PPPDEBUG(LOG_DEBUG, ("pppoe: free passive interface is not found\n")); */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   527          goto done;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   528        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   529        if (hunique) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   530          if (sc->sc_hunique) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   531            mem_free(sc->sc_hunique);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   532          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   533          sc->sc_hunique = mem_malloc(hunique_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   534          if (sc->sc_hunique == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   535            goto done;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   536          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   537          sc->sc_hunique_len = hunique_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   538          MEMCPY(sc->sc_hunique, hunique, hunique_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   539        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   540        MEMCPY(&sc->sc_dest, eh->ether_shost, sizeof sc->sc_dest);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   541        sc->sc_state = PPPOE_STATE_PADO_SENT;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   542        pppoe_send_pado(sc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   543        break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   544  #endif /* PPPOE_SERVER */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   545      case PPPOE_CODE_PADR:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   546  #ifdef PPPOE_SERVER
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   547        /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   548         * get sc from ac_cookie if IFF_PASSIVE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   549         */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   550        if (ac_cookie == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   551          /* be quiet if there is not a single pppoe instance */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   552          PPPDEBUG(LOG_DEBUG, ("pppoe: received PADR but not includes ac_cookie\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   553          goto done;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   554        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   555        sc = pppoe_find_softc_by_hunique(ac_cookie, ac_cookie_len, netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   556        if (sc == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   557          /* be quiet if there is not a single pppoe instance */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   558          if (!LIST_EMPTY(&pppoe_softc_list)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   559            PPPDEBUG(LOG_DEBUG, ("pppoe: received PADR but could not find request for it\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   560          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   561          goto done;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   562        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   563        if (sc->sc_state != PPPOE_STATE_PADO_SENT) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   564          PPPDEBUG(LOG_DEBUG, ("%c%c%"U16_F": received unexpected PADR\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   565          goto done;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   566        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   567        if (hunique) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   568          if (sc->sc_hunique) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   569            mem_free(sc->sc_hunique);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   570          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   571          sc->sc_hunique = mem_malloc(hunique_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   572          if (sc->sc_hunique == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   573            goto done;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   574          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   575          sc->sc_hunique_len = hunique_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   576          MEMCPY(sc->sc_hunique, hunique, hunique_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   577        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   578        pppoe_send_pads(sc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   579        sc->sc_state = PPPOE_STATE_SESSION;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   580        ppp_start(sc->pcb); /* notify upper layers */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   581        break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   582  #else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   583        /* ignore, we are no access concentrator */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   584        goto done;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   585  #endif /* PPPOE_SERVER */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   586      case PPPOE_CODE_PADO:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   587        if (sc == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   588          /* be quiet if there is not a single pppoe instance */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   589          if (pppoe_softc_list != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   590            PPPDEBUG(LOG_DEBUG, ("pppoe: received PADO but could not find request for it\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   591          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   592          goto done;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   593        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   594        if (sc->sc_state != PPPOE_STATE_PADI_SENT) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   595          PPPDEBUG(LOG_DEBUG, ("%c%c%"U16_F": received unexpected PADO\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   596          goto done;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   597        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   598        if (ac_cookie) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   599          sc->sc_ac_cookie_len = ac_cookie_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   600          MEMCPY(sc->sc_ac_cookie, ac_cookie, ac_cookie_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   601        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   602        MEMCPY(&sc->sc_dest, ethhdr->src.addr, sizeof(sc->sc_dest.addr));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   603        sys_untimeout(pppoe_timeout, sc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   604        sc->sc_padr_retried = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   605        sc->sc_state = PPPOE_STATE_PADR_SENT;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   606        if ((err = pppoe_send_padr(sc)) != 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   607          PPPDEBUG(LOG_DEBUG, ("pppoe: %c%c%"U16_F": failed to send PADR, error=%d\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num, err));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   608          LWIP_UNUSED_ARG(err); /* if PPPDEBUG is disabled */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   609        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   610        sys_timeout(PPPOE_DISC_TIMEOUT * (1 + sc->sc_padr_retried), pppoe_timeout, sc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   611        break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   612      case PPPOE_CODE_PADS:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   613        if (sc == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   614          goto done;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   615        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   616        sc->sc_session = session;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   617        sys_untimeout(pppoe_timeout, sc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   618        PPPDEBUG(LOG_DEBUG, ("pppoe: %c%c%"U16_F": session 0x%x connected\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num, session));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   619        sc->sc_state = PPPOE_STATE_SESSION;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   620        ppp_start(sc->pcb); /* notify upper layers */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   621        break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   622      case PPPOE_CODE_PADT:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   623        /* Don't disconnect here, we let the LCP Echo/Reply find the fact
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   624         * that PPP session is down. Asking the PPP stack to end the session
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   625         * require strict checking about the PPP phase to prevent endless
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   626         * disconnection loops.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   627         */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   628  #if 0 /* UNUSED */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   629        if (sc == NULL) { /* PADT frames are rarely sent with a hunique tag, this is actually almost always true */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   630          goto done;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   631        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   632        pppoe_clear_softc(sc, "received PADT");
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   633  #endif /* UNUSED */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   634        break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   635      default:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   636        if(sc) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   637          PPPDEBUG(LOG_DEBUG, ("%c%c%"U16_F": unknown code (0x%"X16_F") session = 0x%"X16_F"\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   638              sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   639              (u16_t)ph->code, session));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   640        } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   641          PPPDEBUG(LOG_DEBUG, ("pppoe: unknown code (0x%"X16_F") session = 0x%"X16_F"\n", (u16_t)ph->code, session));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   642        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   643        break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   644    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   645  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   646  done:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   647    pbuf_free(pb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   648    return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   649  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   650  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   651  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   652  pppoe_data_input(struct netif *netif, struct pbuf *pb)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   653  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   654    u16_t session, plen;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   655    struct pppoe_softc *sc;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   656    struct pppoehdr *ph;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   657  #ifdef PPPOE_TERM_UNKNOWN_SESSIONS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   658    u8_t shost[ETHER_ADDR_LEN];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   659  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   660  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   661  #ifdef PPPOE_TERM_UNKNOWN_SESSIONS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   662    MEMCPY(shost, ((struct eth_hdr *)pb->payload)->src.addr, sizeof(shost));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   663  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   664    if (pbuf_remove_header(pb, sizeof(struct eth_hdr)) != 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   665      /* bail out */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   666      PPPDEBUG(LOG_ERR, ("pppoe_data_input: pbuf_remove_header failed\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   667      LINK_STATS_INC(link.lenerr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   668      goto drop;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   669    } 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   670  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   671    if (pb->len < sizeof(*ph)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   672      PPPDEBUG(LOG_DEBUG, ("pppoe_data_input: could not get PPPoE header\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   673      goto drop;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   674    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   675    ph = (struct pppoehdr *)pb->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   676  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   677    if (ph->vertype != PPPOE_VERTYPE) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   678      PPPDEBUG(LOG_DEBUG, ("pppoe (data): unknown version/type packet: 0x%x\n", ph->vertype));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   679      goto drop;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   680    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   681    if (ph->code != 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   682      goto drop;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   683    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   684  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   685    session = lwip_ntohs(ph->session);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   686    sc = pppoe_find_softc_by_session(session, netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   687    if (sc == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   688  #ifdef PPPOE_TERM_UNKNOWN_SESSIONS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   689      PPPDEBUG(LOG_DEBUG, ("pppoe: input for unknown session 0x%x, sending PADT\n", session));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   690      pppoe_send_padt(netif, session, shost);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   691  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   692      goto drop;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   693    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   694  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   695    plen = lwip_ntohs(ph->plen);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   696  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   697    if (pbuf_remove_header(pb, PPPOE_HEADERLEN) != 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   698      /* bail out */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   699      PPPDEBUG(LOG_ERR, ("pppoe_data_input: pbuf_remove_header PPPOE_HEADERLEN failed\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   700      LINK_STATS_INC(link.lenerr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   701      goto drop;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   702    } 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   703  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   704    PPPDEBUG(LOG_DEBUG, ("pppoe_data_input: %c%c%"U16_F": pkthdr.len=%d, pppoe.len=%d\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   705          sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   706          pb->len, plen));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   707  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   708    if (pb->tot_len < plen) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   709      goto drop;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   710    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   711  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   712    /* Dispatch the packet thereby consuming it. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   713    ppp_input(sc->pcb, pb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   714    return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   715  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   716  drop:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   717    pbuf_free(pb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   718  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   719  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   720  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   721  pppoe_output(struct pppoe_softc *sc, struct pbuf *pb)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   722  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   723    struct eth_hdr *ethhdr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   724    u16_t etype;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   725    err_t res;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   726  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   727    /* make room for Ethernet header - should not fail */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   728    if (pbuf_add_header(pb, sizeof(struct eth_hdr)) != 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   729      /* bail out */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   730      PPPDEBUG(LOG_ERR, ("pppoe: %c%c%"U16_F": pppoe_output: could not allocate room for Ethernet header\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   731      LINK_STATS_INC(link.lenerr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   732      pbuf_free(pb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   733      return ERR_BUF;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   734    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   735    ethhdr = (struct eth_hdr *)pb->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   736    etype = sc->sc_state == PPPOE_STATE_SESSION ? ETHTYPE_PPPOE : ETHTYPE_PPPOEDISC;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   737    ethhdr->type = lwip_htons(etype);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   738    MEMCPY(&ethhdr->dest.addr, &sc->sc_dest.addr, sizeof(ethhdr->dest.addr));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   739    MEMCPY(&ethhdr->src.addr, &sc->sc_ethif->hwaddr, sizeof(ethhdr->src.addr));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   740  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   741    PPPDEBUG(LOG_DEBUG, ("pppoe: %c%c%"U16_F" (%x) state=%d, session=0x%x output -> %02"X16_F":%02"X16_F":%02"X16_F":%02"X16_F":%02"X16_F":%02"X16_F", len=%d\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   742        sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num, etype,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   743        sc->sc_state, sc->sc_session,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   744        sc->sc_dest.addr[0], sc->sc_dest.addr[1], sc->sc_dest.addr[2], sc->sc_dest.addr[3], sc->sc_dest.addr[4], sc->sc_dest.addr[5],
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   745        pb->tot_len));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   746  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   747    res = sc->sc_ethif->linkoutput(sc->sc_ethif, pb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   748  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   749    pbuf_free(pb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   750  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   751    return res;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   752  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   753  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   754  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   755  pppoe_send_padi(struct pppoe_softc *sc)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   756  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   757    struct pbuf *pb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   758    u8_t *p;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   759    int len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   760  #ifdef PPPOE_TODO
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   761    int l1 = 0, l2 = 0; /* XXX: gcc */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   762  #endif /* PPPOE_TODO */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   763  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   764    /* calculate length of frame (excluding ethernet header + pppoe header) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   765    len = 2 + 2 + 2 + 2 + sizeof sc;  /* service name tag is required, host unique is send too */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   766  #ifdef PPPOE_TODO
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   767    if (sc->sc_service_name != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   768      l1 = (int)strlen(sc->sc_service_name);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   769      len += l1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   770    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   771    if (sc->sc_concentrator_name != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   772      l2 = (int)strlen(sc->sc_concentrator_name);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   773      len += 2 + 2 + l2;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   774    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   775  #endif /* PPPOE_TODO */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   776    LWIP_ASSERT("sizeof(struct eth_hdr) + PPPOE_HEADERLEN + len <= 0xffff",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   777      sizeof(struct eth_hdr) + PPPOE_HEADERLEN + len <= 0xffff);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   778  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   779    /* allocate a buffer */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   780    pb = pbuf_alloc(PBUF_LINK, (u16_t)(PPPOE_HEADERLEN + len), PBUF_RAM);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   781    if (!pb) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   782      return ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   783    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   784    LWIP_ASSERT("pb->tot_len == pb->len", pb->tot_len == pb->len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   785  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   786    p = (u8_t*)pb->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   787    /* fill in pkt */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   788    PPPOE_ADD_HEADER(p, PPPOE_CODE_PADI, 0, (u16_t)len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   789    PPPOE_ADD_16(p, PPPOE_TAG_SNAME);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   790  #ifdef PPPOE_TODO
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   791    if (sc->sc_service_name != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   792      PPPOE_ADD_16(p, l1);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   793      MEMCPY(p, sc->sc_service_name, l1);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   794      p += l1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   795    } else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   796  #endif /* PPPOE_TODO */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   797    {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   798      PPPOE_ADD_16(p, 0);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   799    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   800  #ifdef PPPOE_TODO
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   801    if (sc->sc_concentrator_name != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   802      PPPOE_ADD_16(p, PPPOE_TAG_ACNAME);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   803      PPPOE_ADD_16(p, l2);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   804      MEMCPY(p, sc->sc_concentrator_name, l2);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   805      p += l2;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   806    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   807  #endif /* PPPOE_TODO */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   808    PPPOE_ADD_16(p, PPPOE_TAG_HUNIQUE);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   809    PPPOE_ADD_16(p, sizeof(sc));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   810    MEMCPY(p, &sc, sizeof sc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   811  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   812    /* send pkt */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   813    return pppoe_output(sc, pb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   814  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   815  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   816  static void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   817  pppoe_timeout(void *arg)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   818  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   819    u32_t retry_wait;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   820    int err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   821    struct pppoe_softc *sc = (struct pppoe_softc*)arg;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   822  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   823    PPPDEBUG(LOG_DEBUG, ("pppoe: %c%c%"U16_F": timeout\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   824  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   825    switch (sc->sc_state) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   826      case PPPOE_STATE_PADI_SENT:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   827        /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   828         * We have two basic ways of retrying:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   829         *  - Quick retry mode: try a few times in short sequence
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   830         *  - Slow retry mode: we already had a connection successfully
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   831         *    established and will try infinitely (without user
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   832         *    intervention)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   833         * We only enter slow retry mode if IFF_LINK1 (aka autodial)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   834         * is not set.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   835         */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   836        if (sc->sc_padi_retried < 0xff) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   837          sc->sc_padi_retried++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   838        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   839        if (!sc->pcb->settings.persist && sc->sc_padi_retried >= PPPOE_DISC_MAXPADI) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   840  #if 0
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   841          if ((sc->sc_sppp.pp_if.if_flags & IFF_LINK1) == 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   842            /* slow retry mode */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   843            retry_wait = PPPOE_SLOW_RETRY;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   844          } else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   845  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   846          {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   847            pppoe_abort_connect(sc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   848            return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   849          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   850        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   851        /* initialize for quick retry mode */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   852        retry_wait = LWIP_MIN(PPPOE_DISC_TIMEOUT * sc->sc_padi_retried, PPPOE_SLOW_RETRY);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   853        if ((err = pppoe_send_padi(sc)) != 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   854          sc->sc_padi_retried--;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   855          PPPDEBUG(LOG_DEBUG, ("pppoe: %c%c%"U16_F": failed to transmit PADI, error=%d\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num, err));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   856          LWIP_UNUSED_ARG(err); /* if PPPDEBUG is disabled */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   857        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   858        sys_timeout(retry_wait, pppoe_timeout, sc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   859        break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   860  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   861      case PPPOE_STATE_PADR_SENT:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   862        sc->sc_padr_retried++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   863        if (sc->sc_padr_retried >= PPPOE_DISC_MAXPADR) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   864          MEMCPY(&sc->sc_dest, ethbroadcast.addr, sizeof(sc->sc_dest));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   865          sc->sc_state = PPPOE_STATE_PADI_SENT;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   866          sc->sc_padr_retried = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   867          if ((err = pppoe_send_padi(sc)) != 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   868            PPPDEBUG(LOG_DEBUG, ("pppoe: %c%c%"U16_F": failed to send PADI, error=%d\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num, err));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   869            LWIP_UNUSED_ARG(err); /* if PPPDEBUG is disabled */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   870          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   871          sys_timeout(PPPOE_DISC_TIMEOUT * (1 + sc->sc_padi_retried), pppoe_timeout, sc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   872          return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   873        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   874        if ((err = pppoe_send_padr(sc)) != 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   875          sc->sc_padr_retried--;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   876          PPPDEBUG(LOG_DEBUG, ("pppoe: %c%c%"U16_F": failed to send PADR, error=%d\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num, err));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   877          LWIP_UNUSED_ARG(err); /* if PPPDEBUG is disabled */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   878        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   879        sys_timeout(PPPOE_DISC_TIMEOUT * (1 + sc->sc_padr_retried), pppoe_timeout, sc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   880        break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   881      default:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   882        return;  /* all done, work in peace */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   883    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   884  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   885  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   886  /* Start a connection (i.e. initiate discovery phase) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   887  static void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   888  pppoe_connect(ppp_pcb *ppp, void *ctx)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   889  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   890    err_t err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   891    struct pppoe_softc *sc = (struct pppoe_softc *)ctx;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   892    lcp_options *lcp_wo;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   893    lcp_options *lcp_ao;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   894  #if PPP_IPV4_SUPPORT && VJ_SUPPORT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   895    ipcp_options *ipcp_wo;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   896    ipcp_options *ipcp_ao;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   897  #endif /* PPP_IPV4_SUPPORT && VJ_SUPPORT */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   898  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   899    sc->sc_session = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   900    sc->sc_ac_cookie_len = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   901    sc->sc_padi_retried = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   902    sc->sc_padr_retried = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   903    /* changed to real address later */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   904    MEMCPY(&sc->sc_dest, ethbroadcast.addr, sizeof(sc->sc_dest));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   905  #ifdef PPPOE_SERVER
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   906    /* wait PADI if IFF_PASSIVE */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   907    if ((sc->sc_sppp.pp_if.if_flags & IFF_PASSIVE)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   908      return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   909    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   910  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   911  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   912    lcp_wo = &ppp->lcp_wantoptions;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   913    lcp_wo->mru = sc->sc_ethif->mtu-PPPOE_HEADERLEN-2; /* two byte PPP protocol discriminator, then IP data */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   914    lcp_wo->neg_asyncmap = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   915    lcp_wo->neg_pcompression = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   916    lcp_wo->neg_accompression = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   917    lcp_wo->passive = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   918    lcp_wo->silent = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   919  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   920    lcp_ao = &ppp->lcp_allowoptions;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   921    lcp_ao->mru = sc->sc_ethif->mtu-PPPOE_HEADERLEN-2; /* two byte PPP protocol discriminator, then IP data */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   922    lcp_ao->neg_asyncmap = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   923    lcp_ao->neg_pcompression = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   924    lcp_ao->neg_accompression = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   925  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   926  #if PPP_IPV4_SUPPORT && VJ_SUPPORT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   927    ipcp_wo = &ppp->ipcp_wantoptions;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   928    ipcp_wo->neg_vj = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   929    ipcp_wo->old_vj = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   930  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   931    ipcp_ao = &ppp->ipcp_allowoptions;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   932    ipcp_ao->neg_vj = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   933    ipcp_ao->old_vj = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   934  #endif /* PPP_IPV4_SUPPORT && VJ_SUPPORT */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   935  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   936    /* save state, in case we fail to send PADI */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   937    sc->sc_state = PPPOE_STATE_PADI_SENT;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   938    if ((err = pppoe_send_padi(sc)) != 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   939      PPPDEBUG(LOG_DEBUG, ("pppoe: %c%c%"U16_F": failed to send PADI, error=%d\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num, err));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   940    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   941    sys_timeout(PPPOE_DISC_TIMEOUT, pppoe_timeout, sc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   942  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   943  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   944  /* disconnect */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   945  static void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   946  pppoe_disconnect(ppp_pcb *ppp, void *ctx)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   947  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   948    struct pppoe_softc *sc = (struct pppoe_softc *)ctx;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   949  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   950    PPPDEBUG(LOG_DEBUG, ("pppoe: %c%c%"U16_F": disconnecting\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   951    if (sc->sc_state == PPPOE_STATE_SESSION) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   952      pppoe_send_padt(sc->sc_ethif, sc->sc_session, (const u8_t *)&sc->sc_dest);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   953    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   954  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   955    /* stop any timer, disconnect can be called while initiating is in progress */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   956    sys_untimeout(pppoe_timeout, sc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   957    sc->sc_state = PPPOE_STATE_INITIAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   958  #ifdef PPPOE_SERVER
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   959    if (sc->sc_hunique) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   960      mem_free(sc->sc_hunique);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   961      sc->sc_hunique = NULL; /* probably not necessary, if state is initial we shouldn't have to access hunique anyway  */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   962    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   963    sc->sc_hunique_len = 0; /* probably not necessary, if state is initial we shouldn't have to access hunique anyway  */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   964  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   965    ppp_link_end(ppp); /* notify upper layers */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   966    return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   967  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   968  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   969  /* Connection attempt aborted */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   970  static void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   971  pppoe_abort_connect(struct pppoe_softc *sc)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   972  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   973    PPPDEBUG(LOG_DEBUG, ("%c%c%"U16_F": could not establish connection\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   974    sc->sc_state = PPPOE_STATE_INITIAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   975    ppp_link_failed(sc->pcb); /* notify upper layers */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   976  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   977  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   978  /* Send a PADR packet */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   979  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   980  pppoe_send_padr(struct pppoe_softc *sc)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   981  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   982    struct pbuf *pb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   983    u8_t *p;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   984    size_t len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   985  #ifdef PPPOE_TODO
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   986    size_t l1 = 0; /* XXX: gcc */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   987  #endif /* PPPOE_TODO */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   988  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   989    len = 2 + 2 + 2 + 2 + sizeof(sc);    /* service name, host unique */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   990  #ifdef PPPOE_TODO
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   991    if (sc->sc_service_name != NULL) {    /* service name tag maybe empty */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   992      l1 = strlen(sc->sc_service_name);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   993      len += l1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   994    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   995  #endif /* PPPOE_TODO */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   996    if (sc->sc_ac_cookie_len > 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   997      len += 2 + 2 + sc->sc_ac_cookie_len;  /* AC cookie */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   998    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	   999    LWIP_ASSERT("sizeof(struct eth_hdr) + PPPOE_HEADERLEN + len <= 0xffff",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1000      sizeof(struct eth_hdr) + PPPOE_HEADERLEN + len <= 0xffff);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1001    pb = pbuf_alloc(PBUF_LINK, (u16_t)(PPPOE_HEADERLEN + len), PBUF_RAM);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1002    if (!pb) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1003      return ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1004    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1005    LWIP_ASSERT("pb->tot_len == pb->len", pb->tot_len == pb->len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1006    p = (u8_t*)pb->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1007    PPPOE_ADD_HEADER(p, PPPOE_CODE_PADR, 0, len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1008    PPPOE_ADD_16(p, PPPOE_TAG_SNAME);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1009  #ifdef PPPOE_TODO
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1010    if (sc->sc_service_name != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1011      PPPOE_ADD_16(p, l1);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1012      MEMCPY(p, sc->sc_service_name, l1);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1013      p += l1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1014    } else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1015  #endif /* PPPOE_TODO */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1016    {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1017      PPPOE_ADD_16(p, 0);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1018    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1019    if (sc->sc_ac_cookie_len > 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1020      PPPOE_ADD_16(p, PPPOE_TAG_ACCOOKIE);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1021      PPPOE_ADD_16(p, sc->sc_ac_cookie_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1022      MEMCPY(p, sc->sc_ac_cookie, sc->sc_ac_cookie_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1023      p += sc->sc_ac_cookie_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1024    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1025    PPPOE_ADD_16(p, PPPOE_TAG_HUNIQUE);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1026    PPPOE_ADD_16(p, sizeof(sc));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1027    MEMCPY(p, &sc, sizeof sc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1028  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1029    return pppoe_output(sc, pb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1030  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1031  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1032  /* send a PADT packet */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1033  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1034  pppoe_send_padt(struct netif *outgoing_if, u_int session, const u8_t *dest)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1035  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1036    struct pbuf *pb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1037    struct eth_hdr *ethhdr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1038    err_t res;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1039    u8_t *p;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1040  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1041    pb = pbuf_alloc(PBUF_LINK, (u16_t)(PPPOE_HEADERLEN), PBUF_RAM);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1042    if (!pb) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1043      return ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1044    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1045    LWIP_ASSERT("pb->tot_len == pb->len", pb->tot_len == pb->len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1046  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1047    if (pbuf_add_header(pb, sizeof(struct eth_hdr))) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1048      PPPDEBUG(LOG_ERR, ("pppoe: pppoe_send_padt: could not allocate room for PPPoE header\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1049      LINK_STATS_INC(link.lenerr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1050      pbuf_free(pb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1051      return ERR_BUF;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1052    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1053    ethhdr = (struct eth_hdr *)pb->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1054    ethhdr->type = PP_HTONS(ETHTYPE_PPPOEDISC);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1055    MEMCPY(&ethhdr->dest.addr, dest, sizeof(ethhdr->dest.addr));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1056    MEMCPY(&ethhdr->src.addr, &outgoing_if->hwaddr, sizeof(ethhdr->src.addr));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1057  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1058    p = (u8_t*)(ethhdr + 1);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1059    PPPOE_ADD_HEADER(p, PPPOE_CODE_PADT, session, 0);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1060  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1061    res = outgoing_if->linkoutput(outgoing_if, pb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1062  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1063    pbuf_free(pb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1064  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1065    return res;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1066  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1067  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1068  #ifdef PPPOE_SERVER
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1069  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1070  pppoe_send_pado(struct pppoe_softc *sc)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1071  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1072    struct pbuf *pb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1073    u8_t *p;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1074    size_t len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1075  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1076    /* calc length */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1077    len = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1078    /* include ac_cookie */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1079    len += 2 + 2 + sizeof(sc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1080    /* include hunique */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1081    len += 2 + 2 + sc->sc_hunique_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1082    pb = pbuf_alloc(PBUF_LINK, (u16_t)(PPPOE_HEADERLEN + len), PBUF_RAM);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1083    if (!pb) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1084      return ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1085    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1086    LWIP_ASSERT("pb->tot_len == pb->len", pb->tot_len == pb->len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1087    p = (u8_t*)pb->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1088    PPPOE_ADD_HEADER(p, PPPOE_CODE_PADO, 0, len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1089    PPPOE_ADD_16(p, PPPOE_TAG_ACCOOKIE);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1090    PPPOE_ADD_16(p, sizeof(sc));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1091    MEMCPY(p, &sc, sizeof(sc));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1092    p += sizeof(sc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1093    PPPOE_ADD_16(p, PPPOE_TAG_HUNIQUE);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1094    PPPOE_ADD_16(p, sc->sc_hunique_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1095    MEMCPY(p, sc->sc_hunique, sc->sc_hunique_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1096    return pppoe_output(sc, pb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1097  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1098  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1099  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1100  pppoe_send_pads(struct pppoe_softc *sc)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1101  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1102    struct pbuf *pb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1103    u8_t *p;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1104    size_t len, l1 = 0;  /* XXX: gcc */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1105  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1106    sc->sc_session = mono_time.tv_sec % 0xff + 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1107    /* calc length */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1108    len = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1109    /* include hunique */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1110    len += 2 + 2 + 2 + 2 + sc->sc_hunique_len;  /* service name, host unique*/
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1111    if (sc->sc_service_name != NULL) {    /* service name tag maybe empty */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1112      l1 = strlen(sc->sc_service_name);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1113      len += l1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1114    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1115    pb = pbuf_alloc(PBUF_LINK, (u16_t)(PPPOE_HEADERLEN + len), PBUF_RAM);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1116    if (!pb) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1117      return ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1118    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1119    LWIP_ASSERT("pb->tot_len == pb->len", pb->tot_len == pb->len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1120    p = (u8_t*)pb->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1121    PPPOE_ADD_HEADER(p, PPPOE_CODE_PADS, sc->sc_session, len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1122    PPPOE_ADD_16(p, PPPOE_TAG_SNAME);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1123    if (sc->sc_service_name != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1124      PPPOE_ADD_16(p, l1);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1125      MEMCPY(p, sc->sc_service_name, l1);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1126      p += l1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1127    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1128      PPPOE_ADD_16(p, 0);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1129    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1130    PPPOE_ADD_16(p, PPPOE_TAG_HUNIQUE);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1131    PPPOE_ADD_16(p, sc->sc_hunique_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1132    MEMCPY(p, sc->sc_hunique, sc->sc_hunique_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1133    return pppoe_output(sc, pb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1134  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1135  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1136  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1137  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1138  pppoe_xmit(struct pppoe_softc *sc, struct pbuf *pb)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1139  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1140    u8_t *p;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1141    size_t len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1142  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1143    len = pb->tot_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1144  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1145    /* make room for PPPoE header - should not fail */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1146    if (pbuf_add_header(pb, PPPOE_HEADERLEN) != 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1147      /* bail out */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1148      PPPDEBUG(LOG_ERR, ("pppoe: %c%c%"U16_F": pppoe_xmit: could not allocate room for PPPoE header\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1149      LINK_STATS_INC(link.lenerr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1150      pbuf_free(pb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1151      return ERR_BUF;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1152    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1153  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1154    p = (u8_t*)pb->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1155    PPPOE_ADD_HEADER(p, 0, sc->sc_session, len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1156  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1157    return pppoe_output(sc, pb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1158  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1159  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1160  #if 0 /*def PFIL_HOOKS*/
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1161  static int
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1162  pppoe_ifattach_hook(void *arg, struct pbuf **mp, struct netif *ifp, int dir)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1163  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1164    struct pppoe_softc *sc;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1165    int s;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1166  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1167    if (mp != (struct pbuf **)PFIL_IFNET_DETACH) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1168      return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1169    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1170  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1171    LIST_FOREACH(sc, &pppoe_softc_list, sc_list) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1172      if (sc->sc_ethif != ifp) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1173        continue;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1174      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1175      if (sc->sc_sppp.pp_if.if_flags & IFF_UP) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1176        sc->sc_sppp.pp_if.if_flags &= ~(IFF_UP|IFF_RUNNING);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1177        PPPDEBUG(LOG_DEBUG, ("%c%c%"U16_F": ethernet interface detached, going down\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1178            sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1179      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1180      sc->sc_ethif = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1181      pppoe_clear_softc(sc, "ethernet interface detached");
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1182    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1183  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1184    return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1185  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1186  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1187  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1188  #if 0 /* UNUSED */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1189  static void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1190  pppoe_clear_softc(struct pppoe_softc *sc, const char *message)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1191  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1192    LWIP_UNUSED_ARG(message);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1193  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1194    /* stop timer */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1195    sys_untimeout(pppoe_timeout, sc);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1196    PPPDEBUG(LOG_DEBUG, ("pppoe: %c%c%"U16_F": session 0x%x terminated, %s\n", sc->sc_ethif->name[0], sc->sc_ethif->name[1], sc->sc_ethif->num, sc->sc_session, message));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1197    sc->sc_state = PPPOE_STATE_INITIAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1198    ppp_link_end(sc->pcb);  /* notify upper layers - /!\ dangerous /!\ - see pppoe_disc_input() */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1199  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1200  #endif /* UNUSED */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\netif\ppp\pppoe.c	  1201  #endif /* PPP_SUPPORT && PPPOE_SUPPORT */

	; Module end
