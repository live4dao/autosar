	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 09003395"
	.compiler_invocation	"ctc -f cc27260a --dep-file=EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\.altcp.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --fp-model=+float -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Lib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\App_Func -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\demo -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Adc_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Gtm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\AscLin_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Can_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\EthV2_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Stm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Main -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\APP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\BswM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanSm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Com -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\ComM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Common -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Crc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Det -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\DoIP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EcuM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Eth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthSM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTrcv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FiM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FlsTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Nm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\PduR -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\RamTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\StbM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\arpa -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\net -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\sys -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\stdc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\apps -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\priv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\UdpNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Cal -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Daq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pag -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pgm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Std -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\XcpOnEth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Library\\Vfx_ComE2E -g2 --make-target=EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\altcp.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O1 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\altcp.src ..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\altcp.c"
	.compiler_name		"ctc"
	;source	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\altcp.c'

	
$TC162
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	4543
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\altcp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L5
	.byte	2,1,3
	.word	164
	.byte	4
	.byte	'__codeptr',0,1,1,1
	.word	166
	.byte	5
	.byte	'unsigned char',0,1,8,4
	.byte	'boolean',0,2,102,29
	.word	189
	.byte	4
	.byte	'uint8',0,2,106,29
	.word	189
	.byte	5
	.byte	'unsigned short int',0,2,7,4
	.byte	'uint16',0,2,110,29
	.word	236
	.byte	5
	.byte	'unsigned long int',0,4,7,4
	.byte	'uint32',0,2,114,29
	.word	273
	.byte	4
	.byte	'Std_ReturnType',0,3,109,16
	.word	189
	.byte	4
	.byte	'PduIdType',0,4,37,21
	.word	189
	.byte	4
	.byte	'PduLengthType',0,4,41,22
	.word	236
	.byte	6,5,101,9,1,7
	.byte	'BUFREQ_OK',0,0,7
	.byte	'BUFREQ_E_NOT_OK',0,1,7
	.byte	'BUFREQ_E_BUSY',0,2,7
	.byte	'BUFREQ_E_OVFL',0,3,0,4
	.byte	'BufReq_ReturnType',0,5,107,3
	.word	372
	.byte	3
	.word	189
	.byte	4
	.byte	'SduDataPtrType',0,5,189,1,40
	.word	466
	.byte	6,5,204,1,9,1,7
	.byte	'TP_DATACONF',0,0,7
	.byte	'TP_DATARETRY',0,1,7
	.byte	'TP_CONFPENDING',0,2,0,4
	.byte	'TpDataStateType',0,5,216,1,3
	.word	495
	.byte	4
	.byte	'TcpIp_SocketIdType',0,6,50,16
	.word	189
	.byte	8,4
	.word	273
	.byte	9,0,0,10,6,52,9,4,11
	.byte	'Addr',0
	.word	600
	.byte	4,2,35,0,0,4
	.byte	'TcpIp_IpAddressType',0,6,55,3
	.word	609
	.byte	4
	.byte	'TcpIp_DomainType',0,6,61,16
	.word	236
	.byte	10,6,68,9,8,11
	.byte	'Domain',0
	.word	236
	.byte	2,2,35,0,11
	.byte	'Port',0
	.word	236
	.byte	2,2,35,2,11
	.byte	'Addr',0
	.word	600
	.byte	4,2,35,4,0,4
	.byte	'TcpIp_SockAddrInetType',0,6,73,3
	.word	682
	.byte	4
	.byte	'TcpIp_AddressType',0,7,128,1,15
	.word	189
	.byte	4
	.byte	'TcpIp_CtrlIdType',0,7,142,1,15
	.word	189
	.byte	4
	.byte	'TcpIp_IpAddrStateType',0,7,144,1,15
	.word	189
	.byte	4
	.byte	'TcpIp_LocalAddrAssignmentConfigType',0,7,149,1,15
	.word	189
	.byte	4
	.byte	'TcpIp_StaticAddrIdType',0,7,151,1,15
	.word	189
	.byte	10,7,152,1,9,12,11
	.byte	'State',0
	.word	189
	.byte	1,2,35,0,11
	.byte	'Netmask',0
	.word	189
	.byte	1,2,35,1,11
	.byte	'Domain',0
	.word	236
	.byte	2,2,35,2,11
	.byte	'IpAddr',0
	.word	609
	.byte	4,2,35,4,11
	.byte	'DefaultRouter',0
	.word	609
	.byte	4,2,35,8,0,4
	.byte	'TcpIp_StaticIpAddrType',0,7,162,1,3
	.word	924
	.byte	4
	.byte	'TcpIp_LocalAddrIdType',0,7,173,1,15
	.word	189
	.byte	8,3
	.word	189
	.byte	9,2,0,10,7,231,1,9,8,11
	.byte	'CtrlId',0
	.word	189
	.byte	1,2,35,0,11
	.byte	'Address',0
	.word	189
	.byte	1,2,35,1,11
	.byte	'Domain',0
	.word	236
	.byte	2,2,35,2,11
	.byte	'StaticAddrId',0
	.word	189
	.byte	1,2,35,4,11
	.byte	'Assignments',0
	.word	1081
	.byte	3,2,35,5,0,4
	.byte	'TcpIp_LocalAddrConfigType',0,7,243,1,3
	.word	1090
	.byte	10,7,245,1,9,4,11
	.byte	'ArpConfigId',0
	.word	189
	.byte	1,2,35,0,11
	.byte	'DHCPConfigId',0
	.word	189
	.byte	1,2,35,1,11
	.byte	'AutoIpInitTimeout',0
	.word	236
	.byte	2,2,35,2,0,4
	.byte	'TcpIp_IpV4CtrlConfigType',0,7,130,2,3
	.word	1224
	.byte	10,7,133,2,9,8,11
	.byte	'CtrlIdx',0
	.word	189
	.byte	1,2,35,0,11
	.byte	'FramePrio',0
	.word	189
	.byte	1,2,35,1,11
	.byte	'UnicastAddrId',0
	.word	189
	.byte	1,2,35,2,11
	.byte	'UnicastAddrLimit',0
	.word	189
	.byte	1,2,35,3,11
	.byte	'MulticastAddrId',0
	.word	189
	.byte	1,2,35,4,11
	.byte	'LocalAddrLimit',0
	.word	189
	.byte	1,2,35,5,11
	.byte	'IpV4CtrlId',0
	.word	189
	.byte	1,2,35,6,11
	.byte	'IpV6CtrlId',0
	.word	189
	.byte	1,2,35,7,0,4
	.byte	'TcpIp_NetIfCtrlConfigType',0,7,148,2,3
	.word	1335
	.byte	4
	.byte	'SoAd_RoutingGroupIdType',0,8,43,15
	.word	189
	.byte	4
	.byte	'SoAd_SoConIdType',0,8,44,15
	.word	189
	.byte	4
	.byte	'SoAd_SoConGroupIdType',0,8,45,15
	.word	189
	.byte	4
	.byte	'SoAd_PduRouteIdType',0,8,46,15
	.word	189
	.byte	4
	.byte	'SoAd_PduRouteDestIdType',0,8,47,15
	.word	189
	.byte	4
	.byte	'SoAd_SocketRouteIdType',0,8,48,15
	.word	189
	.byte	4
	.byte	'SoAd_IfTxUnconfirmedType',0,8,49,16
	.word	236
	.byte	4
	.byte	'SoAd_IfTxTimerType',0,8,51,16
	.word	236
	.byte	8,1
	.word	189
	.byte	9,0,0,10,8,53,9,2,11
	.byte	'Mask',0
	.word	1789
	.byte	1,2,35,0,11
	.byte	'RoutingState',0
	.word	1789
	.byte	1,2,35,1,0,4
	.byte	'SoAd_RoutingGroupCtrlType',0,8,57,3
	.word	1798
	.byte	6,8,63,9,1,7
	.byte	'SOAD_UL_DOIP',0,0,7
	.byte	'SOAD_UL_UDPNM',0,1,7
	.byte	'SOAD_UL_PDUR',0,2,7
	.byte	'SOAD_UL_XCP',0,3,7
	.byte	'SOAD_UL_MAX',0,4,0,4
	.byte	'SoAd_ULIndexType',0,8,71,3
	.word	1874
	.byte	4
	.byte	'SoAd_RemoteAddressType',0,9,113,32
	.word	682
	.byte	6,9,115,9,1,7
	.byte	'SOAD_SOCON_UNINIT',0,0,7
	.byte	'SOAD_SOCON_OFFLINE',0,1,7
	.byte	'SOAD_SOCON_RECONN',0,2,7
	.byte	'SOAD_SOCON_ONLINE',0,3,0,4
	.byte	'SoAd_SoConModeType',0,9,121,3
	.word	2010
	.byte	12
	.word	189
	.byte	3
	.word	2124
	.byte	12
	.word	189
	.byte	3
	.word	2134
	.byte	12
	.word	189
	.byte	3
	.word	2144
	.byte	12
	.word	1874
	.byte	3
	.word	2154
	.byte	10,9,129,1,9,36,11
	.byte	'IfBufferLength',0
	.word	236
	.byte	2,2,35,0,11
	.byte	'IfBufferOffset',0
	.word	236
	.byte	2,2,35,2,11
	.byte	'TpBufferLength',0
	.word	236
	.byte	2,2,35,4,11
	.byte	'TpBufferOffset',0
	.word	236
	.byte	2,2,35,6,11
	.byte	'PduRouteNum',0
	.word	189
	.byte	1,2,35,8,11
	.byte	'SocketRouteNum',0
	.word	189
	.byte	1,2,35,9,11
	.byte	'PduRouteDestNum',0
	.word	189
	.byte	1,2,35,10,11
	.byte	'RemoteAddrState',0
	.word	189
	.byte	1,2,35,11,11
	.byte	'RemoteAddr',0
	.word	682
	.byte	8,2,35,12,11
	.byte	'PduRouteDestList',0
	.word	2129
	.byte	4,2,35,20,11
	.byte	'PduRouteList',0
	.word	2139
	.byte	4,2,35,24,11
	.byte	'SocketRouteList',0
	.word	2149
	.byte	4,2,35,28,11
	.byte	'SoConModeChgList',0
	.word	2159
	.byte	4,2,35,32,0,4
	.byte	'SoAd_SocketConnectionType',0,9,146,1,3
	.word	2164
	.byte	10,9,148,1,9,16,11
	.byte	'CtrlFlag',0
	.word	189
	.byte	1,2,35,0,11
	.byte	'KeepAliveProbesMax',0
	.word	236
	.byte	2,2,35,2,11
	.byte	'KeepAliveInterval',0
	.word	273
	.byte	4,2,35,4,11
	.byte	'KeepAliveTime',0
	.word	273
	.byte	4,2,35,8,11
	.byte	'TxQuota',0
	.word	273
	.byte	4,2,35,12,0,4
	.byte	'SoAd_TcpProtocolType',0,9,155,1,3
	.word	2516
	.byte	10,9,157,1,9,12,11
	.byte	'CtrlFlag',0
	.word	189
	.byte	1,2,35,0,11
	.byte	'nPduTxBufferMin',0
	.word	236
	.byte	2,2,35,2,11
	.byte	'TriggerTimeout',0
	.word	236
	.byte	2,2,35,4,11
	.byte	'AliveSupervisionTimeout',0
	.word	273
	.byte	4,2,35,6,0,4
	.byte	'SoAd_UdpProtocolType',0,9,163,1,3
	.word	2666
	.byte	12
	.word	2516
	.byte	3
	.word	2803
	.byte	12
	.word	2666
	.byte	3
	.word	2813
	.byte	10,9,165,1,9,24,11
	.byte	'GroupId',0
	.word	189
	.byte	1,2,35,0,11
	.byte	'CtrlFlag',0
	.word	189
	.byte	1,2,35,1,11
	.byte	'FramePriority',0
	.word	189
	.byte	1,2,35,2,11
	.byte	'SoConNum',0
	.word	189
	.byte	1,2,35,3,11
	.byte	'SoConId',0
	.word	189
	.byte	1,2,35,4,11
	.byte	'IpAddrAssignChgNum',0
	.word	189
	.byte	1,2,35,5,11
	.byte	'LocalAddrId',0
	.word	189
	.byte	1,2,35,6,11
	.byte	'LocalPort',0
	.word	236
	.byte	2,2,35,8,11
	.byte	'IpAddrAssignChgList',0
	.word	2159
	.byte	4,2,35,12,11
	.byte	'TcpProtocolPtr',0
	.word	2808
	.byte	4,2,35,16,11
	.byte	'UdpProtocolPtr',0
	.word	2818
	.byte	4,2,35,20,0,4
	.byte	'SoAd_SocketConnectionGroupType',0,9,178,1,3
	.word	2823
	.byte	12
	.word	189
	.byte	3
	.word	3108
	.byte	10,9,180,1,9,12,11
	.byte	'CtrlFlag',0
	.word	189
	.byte	1,2,35,0,11
	.byte	'PduRouteDestNum',0
	.word	189
	.byte	1,2,35,1,11
	.byte	'SocketRouteDestNum',0
	.word	189
	.byte	1,2,35,2,11
	.byte	'PduRouteDestList',0
	.word	3113
	.byte	4,2,35,4,11
	.byte	'SocketRouteDestList',0
	.word	3113
	.byte	4,2,35,8,0,4
	.byte	'SoAd_RoutingGroupType',0,9,187,1,3
	.word	3118
	.byte	10,9,189,1,9,6,11
	.byte	'ULType',0
	.word	189
	.byte	1,2,35,0,11
	.byte	'ULIndex',0
	.word	1874
	.byte	1,2,35,1,11
	.byte	'CtrlFlag',0
	.word	189
	.byte	1,2,35,2,11
	.byte	'RouteDestNum',0
	.word	189
	.byte	1,2,35,3,11
	.byte	'RouteDestId',0
	.word	189
	.byte	1,2,35,4,11
	.byte	'TxPduId',0
	.word	189
	.byte	1,2,35,5,0,4
	.byte	'SoAd_PduRouteType',0,9,204,1,3
	.word	3282
	.byte	3
	.word	1798
	.byte	10,9,206,1,9,20,11
	.byte	'TxPduHeaderId',0
	.word	273
	.byte	4,2,35,0,11
	.byte	'SoConNum',0
	.word	189
	.byte	1,2,35,4,11
	.byte	'SoConId',0
	.word	189
	.byte	1,2,35,5,11
	.byte	'PduRouteId',0
	.word	189
	.byte	1,2,35,6,11
	.byte	'UdpTriggerMode',0
	.word	189
	.byte	1,2,35,7,11
	.byte	'UdpTriggerTimeout',0
	.word	236
	.byte	2,2,35,8,11
	.byte	'RoutingCtrlList',0
	.word	3427
	.byte	4,2,35,12,11
	.byte	'IfTriggerList',0
	.word	466
	.byte	4,2,35,16,0,4
	.byte	'SoAd_PduRouteDestType',0,9,217,1,3
	.word	3432
	.byte	10,9,219,1,9,16,11
	.byte	'RxPduHeaderId',0
	.word	273
	.byte	4,2,35,0,11
	.byte	'ULType',0
	.word	189
	.byte	1,2,35,4,11
	.byte	'ULIndex',0
	.word	1874
	.byte	1,2,35,5,11
	.byte	'SoConNum',0
	.word	189
	.byte	1,2,35,6,11
	.byte	'SoConId',0
	.word	189
	.byte	1,2,35,7,11
	.byte	'RxPduId',0
	.word	189
	.byte	1,2,35,8,11
	.byte	'RoutingCtrlList',0
	.word	3427
	.byte	4,2,35,12,0,4
	.byte	'SoAd_SocketRouteType',0,9,236,1,3
	.word	3647
	.byte	12
	.word	3432
	.byte	3
	.word	3817
	.byte	10,9,155,2,9,24,11
	.byte	'State',0
	.word	189
	.byte	1,2,35,0,11
	.byte	'Timer',0
	.word	236
	.byte	2,2,35,2,11
	.byte	'BufferLength',0
	.word	236
	.byte	2,2,35,4,11
	.byte	'BufferOffset',0
	.word	236
	.byte	2,2,35,6,11
	.byte	'UdpTxBuffer',0
	.word	466
	.byte	4,2,35,8,11
	.byte	'TotalTxLength',0
	.word	236
	.byte	2,2,35,12,11
	.byte	'UsedTxLength',0
	.word	236
	.byte	2,2,35,14,11
	.byte	'IfTxDataBuffer',0
	.word	3113
	.byte	4,2,35,16,11
	.byte	'PduRouteDestPtr',0
	.word	3822
	.byte	4,2,35,20,0,4
	.byte	'SoAd_TxSessionType',0,9,177,2,3
	.word	3827
	.byte	12
	.word	3647
	.byte	3
	.word	4051
	.byte	10,9,180,2,9,8,11
	.byte	'PduLength',0
	.word	236
	.byte	2,2,35,0,11
	.byte	'RemainLength',0
	.word	236
	.byte	2,2,35,2,11
	.byte	'SocketRoutePtr',0
	.word	4056
	.byte	4,2,35,4,0,4
	.byte	'SoAd_RxPduInfoType',0,9,185,2,3
	.word	4061
	.byte	10,9,187,2,9,12,11
	.byte	'TotalLength',0
	.word	236
	.byte	2,2,35,0,11
	.byte	'In',0
	.word	236
	.byte	2,2,35,2,11
	.byte	'Out',0
	.word	236
	.byte	2,2,35,4,11
	.byte	'BufferPtr',0
	.word	466
	.byte	4,2,35,8,0,4
	.byte	'SoAd_RxFifoType',0,9,193,2,3
	.word	4161
	.byte	10,9,195,2,9,8,11
	.byte	'TotalLength',0
	.word	236
	.byte	2,2,35,0,11
	.byte	'UsedLength',0
	.word	236
	.byte	2,2,35,2,11
	.byte	'BufferPtr',0
	.word	466
	.byte	4,2,35,4,0,4
	.byte	'SoAd_RxBufferType',0,9,200,2,3
	.word	4258
	.byte	8,8
	.word	189
	.byte	9,7,0,10,9,202,2,9,48,11
	.byte	'State',0
	.word	189
	.byte	1,2,35,0,11
	.byte	'ValidHeaderLen',0
	.word	189
	.byte	1,2,35,1,11
	.byte	'PduHeader',0
	.word	4352
	.byte	8,2,35,2,11
	.byte	'RxPduInfo',0
	.word	4061
	.byte	8,2,35,12,11
	.byte	'ProcessPduInfo',0
	.word	4061
	.byte	8,2,35,20,11
	.byte	'IfBuffer',0
	.word	4258
	.byte	8,2,35,28,11
	.byte	'TpBuffer',0
	.word	4161
	.byte	12,2,35,36,0,4
	.byte	'SoAd_RxSessionType',0,9,216,2,3
	.word	4361
	.byte	4
	.byte	'u8_t',0,10,61,25
	.word	189
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,0,0,3,15,0,73,19,0,0,4,22,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,5,36,0,3,8,11,15,62,15,0,0,6,4,1,58,15,59,15,57,15,11,15,0,0,7,40,0,3,8,28,13,0,0,8,1
	.byte	1,11,15,73,19,0,0,9,33,0,47,15,0,0,10,19,1,58,15,59,15,57,15,11,15,0,0,11,13,0,3,8,73,19,11,15,56,9,0
	.byte	0,12,38,0,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L7-.L6
.L6:
	.half	3
	.word	.L9-.L8
.L8:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch',0,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\altcp.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Std_Types.h',0,1,0,0
	.byte	'ComStack_Types_Cfg.h',0,2,0,0
	.byte	'ComStack_Types.h',0,3,0,0
	.byte	'TcpIp_GeneratedTypes.h',0,2,0,0
	.byte	'TcpIp_Types.h',0,4,0,0
	.byte	'SoAd_GeneratedTypes.h',0,2,0,0
	.byte	'SoAd_Types.h',0,5,0,0
	.byte	'cc.h',0,6,0,0,0
.L9:
.L7:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	     1  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	     2   * @file
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	     3   * @defgroup altcp Application layered TCP Functions
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	     4   * @ingroup altcp_api
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	     5   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	     6   * This file contains the common functions for altcp to work.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	     7   * For more details see @ref altcp_api.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	     8   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	     9  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    10  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    11   * @defgroup altcp_api Application layered TCP Introduction
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    12   * @ingroup callbackstyle_api
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    13   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    14   * Overview
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    15   * --------
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    16   * altcp (application layered TCP connection API; to be used from TCPIP thread)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    17   * is an abstraction layer that prevents applications linking hard against the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    18   * @ref tcp.h functions while providing the same functionality. It is used to
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    19   * e.g. add SSL/TLS (see LWIP_ALTCP_TLS) or proxy-connect support to an application
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    20   * written for the tcp callback API without that application knowing the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    21   * protocol details.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    22   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    23   * * This interface mimics the tcp callback API to the application while preventing
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    24   *   direct linking (much like virtual functions).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    25   * * This way, an application can make use of other application layer protocols
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    26   *   on top of TCP without knowing the details (e.g. TLS, proxy connection).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    27   * * This is achieved by simply including "lwip/altcp.h" instead of "lwip/tcp.h",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    28   *   replacing "struct tcp_pcb" with "struct altcp_pcb" and prefixing all functions
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    29   *   with "altcp_" instead of "tcp_".
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    30   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    31   * With altcp support disabled (LWIP_ALTCP==0), applications written against the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    32   * altcp API can still be compiled but are directly linked against the tcp.h
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    33   * callback API and then cannot use layered protocols. To minimize code changes
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    34   * in this case, the use of altcp_allocators is strongly suggested.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    35   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    36   * Usage
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    37   * -----
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    38   * To make use of this API from an existing tcp raw API application:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    39   * * Include "lwip/altcp.h" instead of "lwip/tcp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    40   * * Replace "struct tcp_pcb" with "struct altcp_pcb"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    41   * * Prefix all called tcp API functions with "altcp_" instead of "tcp_" to link
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    42   *   against the altcp functions
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    43   * * @ref altcp_new (and @ref altcp_new_ip_type/@ref altcp_new_ip6) take
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    44   *   an @ref altcp_allocator_t as an argument, whereas the original tcp API
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    45   *   functions take no arguments.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    46   * * An @ref altcp_allocator_t allocator is an object that holds a pointer to an
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    47   *   allocator object and a corresponding state (e.g. for TLS, the corresponding
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    48   *   state may hold certificates or keys). This way, the application does not
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    49   *   even need to know if it uses TLS or pure TCP, this is handled at runtime
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    50   *   by passing a specific allocator.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    51   * * An application can alternatively bind hard to the altcp_tls API by calling
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    52   *   @ref altcp_tls_new or @ref altcp_tls_wrap.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    53   * * The TLS layer is not directly implemented by lwIP, but a port to mbedTLS is
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    54   *   provided.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    55   * * Another altcp layer is proxy-connect to use TLS behind a HTTP proxy (see
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    56   *   @ref altcp_proxyconnect.h)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    57   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    58   * altcp_allocator_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    59   * -----------------
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    60   * An altcp allocator is created by the application by combining an allocator
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    61   * callback function and a corresponding state, e.g.:\code{.c}
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    62   * static const unsigned char cert[] = {0x2D, ... (see mbedTLS doc for how to create this)};
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    63   * struct altcp_tls_config * conf = altcp_tls_create_config_client(cert, sizeof(cert));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    64   * altcp_allocator_t tls_allocator = {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    65   *   altcp_tls_alloc, conf
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    66   * };
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    67   * \endcode
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    68   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    69   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    70   * struct altcp_tls_config
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    71   * -----------------------
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    72   * The struct altcp_tls_config holds state that is needed to create new TLS client
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    73   * or server connections (e.g. certificates and private keys).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    74   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    75   * It is not defined by lwIP itself but by the TLS port (e.g. altcp_tls to mbedTLS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    76   * adaption). However, the parameters used to create it are defined in @ref
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    77   * altcp_tls.h (see @ref altcp_tls_create_config_server_privkey_cert for servers
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    78   * and @ref altcp_tls_create_config_client/@ref altcp_tls_create_config_client_2wayauth
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    79   * for clients).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    80   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    81   * For mbedTLS, ensure that certificates can be parsed by 'mbedtls_x509_crt_parse()' and
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    82   * private keys can be parsed by 'mbedtls_pk_parse_key()'.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    83   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    84  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    85  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    86   * Copyright (c) 2017 Simon Goldschmidt
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    87   * All rights reserved.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    88   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    89   * Redistribution and use in source and binary forms, with or without modification,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    90   * are permitted provided that the following conditions are met:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    91   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    92   * 1. Redistributions of source code must retain the above copyright notice,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    93   *    this list of conditions and the following disclaimer.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    94   * 2. Redistributions in binary form must reproduce the above copyright notice,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    95   *    this list of conditions and the following disclaimer in the documentation
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    96   *    and/or other materials provided with the distribution.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    97   * 3. The name of the author may not be used to endorse or promote products
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    98   *    derived from this software without specific prior written permission.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	    99   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   100   * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   101   * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   102   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   103   * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   104   * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   105   * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   106   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   107   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   108   * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   109   * OF SUCH DAMAGE.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   110   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   111   * This file is part of the lwIP TCP/IP stack.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   112   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   113   * Author: Simon Goldschmidt <goldsimon@gmx.de>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   114   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   115   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   116  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   117  #include "lwip/opt.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   118  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   119  #if LWIP_ALTCP /* don't build if not configured for use in lwipopts.h */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   120  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   121  #include "lwip/altcp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   122  #include "lwip/priv/altcp_priv.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   123  #include "lwip/altcp_tcp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   124  #include "lwip/tcp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   125  #include "lwip/mem.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   126  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   127  #include <string.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   128  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   129  extern const struct altcp_functions altcp_tcp_functions;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   130  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   131  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   132   * For altcp layer implementations only: allocate a new struct altcp_pcb from the pool
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   133   * and zero the memory
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   134   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   135  struct altcp_pcb *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   136  altcp_alloc(void)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   137  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   138    struct altcp_pcb *ret = (struct altcp_pcb *)memp_malloc(MEMP_ALTCP_PCB);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   139    if (ret != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   140      memset(ret, 0, sizeof(struct altcp_pcb));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   141    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   142    return ret;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   143  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   144  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   145  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   146   * For altcp layer implementations only: return a struct altcp_pcb to the pool
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   147   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   148  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   149  altcp_free(struct altcp_pcb *conn)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   150  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   151    if (conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   152      if (conn->fns && conn->fns->dealloc) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   153        conn->fns->dealloc(conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   154      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   155      memp_free(MEMP_ALTCP_PCB, conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   156    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   157  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   158  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   159  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   160   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   161   * altcp_new_ip6: @ref altcp_new for IPv6 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   162   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   163  struct altcp_pcb *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   164  altcp_new_ip6(altcp_allocator_t *allocator)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   165  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   166    return altcp_new_ip_type(allocator, IPADDR_TYPE_V6);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   167  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   168  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   169  /** 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   170   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   171   * altcp_new: @ref altcp_new for IPv4 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   172   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   173  struct altcp_pcb *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   174  altcp_new(altcp_allocator_t *allocator)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   175  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   176    return altcp_new_ip_type(allocator, IPADDR_TYPE_V4);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   177  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   178  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   179  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   180   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   181   * altcp_new_ip_type: called by applications to allocate a new pcb with the help of an
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   182   * allocator function.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   183   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   184   * @param allocator allocator function and argument
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   185   * @param ip_type IP version of the pcb (@ref lwip_ip_addr_type)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   186   * @return a new altcp_pcb or NULL on error
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   187   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   188  struct altcp_pcb *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   189  altcp_new_ip_type(altcp_allocator_t *allocator, u8_t ip_type)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   190  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   191    struct altcp_pcb *conn;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   192    if (allocator == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   193      /* no allocator given, create a simple TCP connection */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   194      return altcp_tcp_new_ip_type(ip_type);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   195    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   196    if (allocator->alloc == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   197      /* illegal allocator */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   198      return NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   199    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   200    conn = allocator->alloc(allocator->arg, ip_type);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   201    if (conn == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   202      /* allocation failed */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   203      return NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   204    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   205    return conn;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   206  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   207  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   208  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   209   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   210   * @see tcp_arg()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   211   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   212  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   213  altcp_arg(struct altcp_pcb *conn, void *arg)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   214  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   215    if (conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   216      conn->arg = arg;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   217    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   218  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   219  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   220  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   221   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   222   * @see tcp_accept()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   223   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   224  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   225  altcp_accept(struct altcp_pcb *conn, altcp_accept_fn accept)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   226  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   227    if (conn != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   228      conn->accept = accept;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   229    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   230  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   231  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   232  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   233   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   234   * @see tcp_recv()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   235   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   236  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   237  altcp_recv(struct altcp_pcb *conn, altcp_recv_fn recv)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   238  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   239    if (conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   240      conn->recv = recv;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   241    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   242  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   243  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   244  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   245   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   246   * @see tcp_sent()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   247   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   248  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   249  altcp_sent(struct altcp_pcb *conn, altcp_sent_fn sent)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   250  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   251    if (conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   252      conn->sent = sent;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   253    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   254  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   255  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   256  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   257   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   258   * @see tcp_poll()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   259   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   260  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   261  altcp_poll(struct altcp_pcb *conn, altcp_poll_fn poll, u8_t interval)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   262  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   263    if (conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   264      conn->poll = poll;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   265      conn->pollinterval = interval;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   266      if (conn->fns && conn->fns->set_poll) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   267        conn->fns->set_poll(conn, interval);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   268      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   269    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   270  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   271  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   272  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   273   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   274   * @see tcp_err()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   275   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   276  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   277  altcp_err(struct altcp_pcb *conn, altcp_err_fn err)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   278  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   279    if (conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   280      conn->err = err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   281    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   282  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   283  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   284  /* Generic functions calling the "virtual" ones */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   285  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   286  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   287   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   288   * @see tcp_recved()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   289   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   290  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   291  altcp_recved(struct altcp_pcb *conn, u16_t len)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   292  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   293    if (conn && conn->fns && conn->fns->recved) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   294      conn->fns->recved(conn, len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   295    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   296  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   297  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   298  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   299   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   300   * @see tcp_bind()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   301   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   302  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   303  altcp_bind(struct altcp_pcb *conn, const ip_addr_t *ipaddr, u16_t port)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   304  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   305    if (conn && conn->fns && conn->fns->bind) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   306      return conn->fns->bind(conn, ipaddr, port);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   307    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   308    return ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   309  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   310  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   311  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   312   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   313   * @see tcp_connect()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   314   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   315  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   316  altcp_connect(struct altcp_pcb *conn, const ip_addr_t *ipaddr, u16_t port, altcp_connected_fn connected)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   317  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   318    if (conn && conn->fns && conn->fns->connect) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   319      return conn->fns->connect(conn, ipaddr, port, connected);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   320    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   321    return ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   322  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   323  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   324  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   325   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   326   * @see tcp_listen_with_backlog_and_err()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   327   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   328  struct altcp_pcb *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   329  altcp_listen_with_backlog_and_err(struct altcp_pcb *conn, u8_t backlog, err_t *err)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   330  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   331    if (conn && conn->fns && conn->fns->listen) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   332      return conn->fns->listen(conn, backlog, err);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   333    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   334    return NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   335  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   336  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   337  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   338   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   339   * @see tcp_abort()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   340   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   341  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   342  altcp_abort(struct altcp_pcb *conn)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   343  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   344    if (conn && conn->fns && conn->fns->abort) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   345      conn->fns->abort(conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   346    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   347  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   348  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   349  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   350   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   351   * @see tcp_close()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   352   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   353  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   354  altcp_close(struct altcp_pcb *conn)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   355  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   356    if (conn && conn->fns && conn->fns->close) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   357      return conn->fns->close(conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   358    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   359    return ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   360  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   361  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   362  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   363   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   364   * @see tcp_shutdown()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   365   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   366  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   367  altcp_shutdown(struct altcp_pcb *conn, int shut_rx, int shut_tx)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   368  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   369    if (conn && conn->fns && conn->fns->shutdown) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   370      return conn->fns->shutdown(conn, shut_rx, shut_tx);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   371    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   372    return ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   373  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   374  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   375  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   376   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   377   * @see tcp_write()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   378   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   379  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   380  altcp_write(struct altcp_pcb *conn, const void *dataptr, u16_t len, u8_t apiflags)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   381  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   382    if (conn && conn->fns && conn->fns->write) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   383      return conn->fns->write(conn, dataptr, len, apiflags);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   384    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   385    return ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   386  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   387  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   388  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   389   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   390   * @see tcp_output()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   391   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   392  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   393  altcp_output(struct altcp_pcb *conn)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   394  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   395    if (conn && conn->fns && conn->fns->output) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   396      return conn->fns->output(conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   397    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   398    return ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   399  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   400  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   401  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   402   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   403   * @see tcp_mss()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   404   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   405  u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   406  altcp_mss(struct altcp_pcb *conn)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   407  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   408    if (conn && conn->fns && conn->fns->mss) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   409      return conn->fns->mss(conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   410    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   411    return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   412  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   413  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   414  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   415   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   416   * @see tcp_sndbuf()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   417   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   418  u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   419  altcp_sndbuf(struct altcp_pcb *conn)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   420  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   421    if (conn && conn->fns && conn->fns->sndbuf) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   422      return conn->fns->sndbuf(conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   423    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   424    return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   425  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   426  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   427  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   428   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   429   * @see tcp_sndqueuelen()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   430   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   431  u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   432  altcp_sndqueuelen(struct altcp_pcb *conn)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   433  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   434    if (conn && conn->fns && conn->fns->sndqueuelen) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   435      return conn->fns->sndqueuelen(conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   436    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   437    return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   438  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   439  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   440  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   441  altcp_nagle_disable(struct altcp_pcb *conn)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   442  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   443    if (conn && conn->fns && conn->fns->nagle_disable) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   444      conn->fns->nagle_disable(conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   445    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   446  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   447  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   448  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   449  altcp_nagle_enable(struct altcp_pcb *conn)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   450  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   451    if (conn && conn->fns && conn->fns->nagle_enable) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   452      conn->fns->nagle_enable(conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   453    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   454  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   455  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   456  int
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   457  altcp_nagle_disabled(struct altcp_pcb *conn)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   458  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   459    if (conn && conn->fns && conn->fns->nagle_disabled) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   460      return conn->fns->nagle_disabled(conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   461    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   462    return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   463  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   464  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   465  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   466   * @ingroup altcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   467   * @see tcp_setprio()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   468   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   469  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   470  altcp_setprio(struct altcp_pcb *conn, u8_t prio)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   471  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   472    if (conn && conn->fns && conn->fns->setprio) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   473      conn->fns->setprio(conn, prio);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   474    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   475  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   476  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   477  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   478  altcp_get_tcp_addrinfo(struct altcp_pcb *conn, int local, ip_addr_t *addr, u16_t *port)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   479  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   480    if (conn && conn->fns && conn->fns->addrinfo) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   481      return conn->fns->addrinfo(conn, local, addr, port);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   482    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   483    return ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   484  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   485  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   486  ip_addr_t *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   487  altcp_get_ip(struct altcp_pcb *conn, int local)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   488  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   489    if (conn && conn->fns && conn->fns->getip) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   490      return conn->fns->getip(conn, local);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   491    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   492    return NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   493  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   494  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   495  u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   496  altcp_get_port(struct altcp_pcb *conn, int local)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   497  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   498    if (conn && conn->fns && conn->fns->getport) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   499      return conn->fns->getport(conn, local);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   500    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   501    return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   502  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   503  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   504  #ifdef LWIP_DEBUG
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   505  enum tcp_state
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   506  altcp_dbg_get_tcp_state(struct altcp_pcb *conn)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   507  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   508    if (conn && conn->fns && conn->fns->dbg_get_tcp_state) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   509      return conn->fns->dbg_get_tcp_state(conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   510    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   511    return CLOSED;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   512  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   513  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   514  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   515  /* Default implementations for the "virtual" functions */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   516  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   517  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   518  altcp_default_set_poll(struct altcp_pcb *conn, u8_t interval)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   519  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   520    if (conn && conn->inner_conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   521      altcp_poll(conn->inner_conn, conn->poll, interval);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   522    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   523  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   524  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   525  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   526  altcp_default_recved(struct altcp_pcb *conn, u16_t len)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   527  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   528    if (conn && conn->inner_conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   529      altcp_recved(conn->inner_conn, len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   530    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   531  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   532  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   533  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   534  altcp_default_bind(struct altcp_pcb *conn, const ip_addr_t *ipaddr, u16_t port)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   535  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   536    if (conn && conn->inner_conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   537      return altcp_bind(conn->inner_conn, ipaddr, port);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   538    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   539    return ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   540  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   541  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   542  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   543  altcp_default_shutdown(struct altcp_pcb *conn, int shut_rx, int shut_tx)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   544  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   545    if (conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   546      if (shut_rx && shut_tx && conn->fns && conn->fns->close) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   547        /* default shutdown for both sides is close */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   548        return conn->fns->close(conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   549      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   550      if (conn->inner_conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   551        return altcp_shutdown(conn->inner_conn, shut_rx, shut_tx);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   552      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   553    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   554    return ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   555  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   556  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   557  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   558  altcp_default_write(struct altcp_pcb *conn, const void *dataptr, u16_t len, u8_t apiflags)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   559  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   560    if (conn && conn->inner_conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   561      return altcp_write(conn->inner_conn, dataptr, len, apiflags);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   562    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   563    return ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   564  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   565  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   566  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   567  altcp_default_output(struct altcp_pcb *conn)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   568  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   569    if (conn && conn->inner_conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   570      return altcp_output(conn->inner_conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   571    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   572    return ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   573  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   574  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   575  u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   576  altcp_default_mss(struct altcp_pcb *conn)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   577  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   578    if (conn && conn->inner_conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   579      return altcp_mss(conn->inner_conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   580    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   581    return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   582  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   583  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   584  u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   585  altcp_default_sndbuf(struct altcp_pcb *conn)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   586  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   587    if (conn && conn->inner_conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   588      return altcp_sndbuf(conn->inner_conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   589    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   590    return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   591  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   592  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   593  u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   594  altcp_default_sndqueuelen(struct altcp_pcb *conn)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   595  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   596    if (conn && conn->inner_conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   597      return altcp_sndqueuelen(conn->inner_conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   598    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   599    return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   600  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   601  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   602  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   603  altcp_default_nagle_disable(struct altcp_pcb *conn)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   604  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   605    if (conn && conn->inner_conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   606      altcp_nagle_disable(conn->inner_conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   607    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   608  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   609  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   610  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   611  altcp_default_nagle_enable(struct altcp_pcb *conn)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   612  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   613    if (conn && conn->inner_conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   614      altcp_nagle_enable(conn->inner_conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   615    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   616  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   617  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   618  int
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   619  altcp_default_nagle_disabled(struct altcp_pcb *conn)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   620  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   621    if (conn && conn->inner_conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   622      return altcp_nagle_disabled(conn->inner_conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   623    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   624    return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   625  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   626  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   627  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   628  altcp_default_setprio(struct altcp_pcb *conn, u8_t prio)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   629  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   630    if (conn && conn->inner_conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   631      altcp_setprio(conn->inner_conn, prio);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   632    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   633  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   634  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   635  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   636  altcp_default_dealloc(struct altcp_pcb *conn)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   637  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   638    LWIP_UNUSED_ARG(conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   639    /* nothing to do */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   640  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   641  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   642  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   643  altcp_default_get_tcp_addrinfo(struct altcp_pcb *conn, int local, ip_addr_t *addr, u16_t *port)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   644  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   645    if (conn && conn->inner_conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   646      return altcp_get_tcp_addrinfo(conn->inner_conn, local, addr, port);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   647    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   648    return ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   649  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   650  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   651  ip_addr_t *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   652  altcp_default_get_ip(struct altcp_pcb *conn, int local)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   653  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   654    if (conn && conn->inner_conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   655      return altcp_get_ip(conn->inner_conn, local);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   656    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   657    return NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   658  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   659  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   660  u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   661  altcp_default_get_port(struct altcp_pcb *conn, int local)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   662  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   663    if (conn && conn->inner_conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   664      return altcp_get_port(conn->inner_conn, local);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   665    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   666    return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   667  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   668  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   669  #ifdef LWIP_DEBUG
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   670  enum tcp_state
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   671  altcp_default_dbg_get_tcp_state(struct altcp_pcb *conn)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   672  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   673    if (conn && conn->inner_conn) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   674      return altcp_dbg_get_tcp_state(conn->inner_conn);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   675    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   676    return CLOSED;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   677  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   678  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   679  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   680  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\altcp.c	   681  #endif /* LWIP_ALTCP */

	; Module end
