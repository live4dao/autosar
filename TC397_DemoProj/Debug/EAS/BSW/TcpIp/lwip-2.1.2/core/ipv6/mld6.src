	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 09003395"
	.compiler_invocation	"ctc -f cc27084a --dep-file=EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6\\.mld6.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --fp-model=+float -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Lib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\App_Func -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\demo -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Adc_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Gtm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\AscLin_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Can_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\EthV2_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Stm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Main -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\APP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\BswM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanSm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Com -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\ComM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Common -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Crc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Det -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\DoIP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EcuM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Eth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthSM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTrcv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FiM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FlsTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Nm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\PduR -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\RamTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\StbM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\arpa -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\net -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\sys -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\stdc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\apps -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\priv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\UdpNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Cal -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Daq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pag -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pgm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Std -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\XcpOnEth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Library\\Vfx_ComE2E -g2 --make-target=EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6\\mld6.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O1 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6\\mld6.src ..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6\\mld6.c"
	.compiler_name		"ctc"
	;source	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6\\mld6.c'

	
$TC162
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	4547
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6\\mld6.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L5
	.byte	2,1,3
	.word	168
	.byte	4
	.byte	'__codeptr',0,1,1,1
	.word	170
	.byte	5
	.byte	'unsigned char',0,1,8,4
	.byte	'boolean',0,2,102,29
	.word	193
	.byte	4
	.byte	'uint8',0,2,106,29
	.word	193
	.byte	5
	.byte	'unsigned short int',0,2,7,4
	.byte	'uint16',0,2,110,29
	.word	240
	.byte	5
	.byte	'unsigned long int',0,4,7,4
	.byte	'uint32',0,2,114,29
	.word	277
	.byte	4
	.byte	'Std_ReturnType',0,3,109,16
	.word	193
	.byte	4
	.byte	'PduIdType',0,4,37,21
	.word	193
	.byte	4
	.byte	'PduLengthType',0,4,41,22
	.word	240
	.byte	6,5,101,9,1,7
	.byte	'BUFREQ_OK',0,0,7
	.byte	'BUFREQ_E_NOT_OK',0,1,7
	.byte	'BUFREQ_E_BUSY',0,2,7
	.byte	'BUFREQ_E_OVFL',0,3,0,4
	.byte	'BufReq_ReturnType',0,5,107,3
	.word	376
	.byte	3
	.word	193
	.byte	4
	.byte	'SduDataPtrType',0,5,189,1,40
	.word	470
	.byte	6,5,204,1,9,1,7
	.byte	'TP_DATACONF',0,0,7
	.byte	'TP_DATARETRY',0,1,7
	.byte	'TP_CONFPENDING',0,2,0,4
	.byte	'TpDataStateType',0,5,216,1,3
	.word	499
	.byte	4
	.byte	'TcpIp_SocketIdType',0,6,50,16
	.word	193
	.byte	8,4
	.word	277
	.byte	9,0,0,10,6,52,9,4,11
	.byte	'Addr',0
	.word	604
	.byte	4,2,35,0,0,4
	.byte	'TcpIp_IpAddressType',0,6,55,3
	.word	613
	.byte	4
	.byte	'TcpIp_DomainType',0,6,61,16
	.word	240
	.byte	10,6,68,9,8,11
	.byte	'Domain',0
	.word	240
	.byte	2,2,35,0,11
	.byte	'Port',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'Addr',0
	.word	604
	.byte	4,2,35,4,0,4
	.byte	'TcpIp_SockAddrInetType',0,6,73,3
	.word	686
	.byte	4
	.byte	'TcpIp_AddressType',0,7,128,1,15
	.word	193
	.byte	4
	.byte	'TcpIp_CtrlIdType',0,7,142,1,15
	.word	193
	.byte	4
	.byte	'TcpIp_IpAddrStateType',0,7,144,1,15
	.word	193
	.byte	4
	.byte	'TcpIp_LocalAddrAssignmentConfigType',0,7,149,1,15
	.word	193
	.byte	4
	.byte	'TcpIp_StaticAddrIdType',0,7,151,1,15
	.word	193
	.byte	10,7,152,1,9,12,11
	.byte	'State',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'Netmask',0
	.word	193
	.byte	1,2,35,1,11
	.byte	'Domain',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'IpAddr',0
	.word	613
	.byte	4,2,35,4,11
	.byte	'DefaultRouter',0
	.word	613
	.byte	4,2,35,8,0,4
	.byte	'TcpIp_StaticIpAddrType',0,7,162,1,3
	.word	928
	.byte	4
	.byte	'TcpIp_LocalAddrIdType',0,7,173,1,15
	.word	193
	.byte	8,3
	.word	193
	.byte	9,2,0,10,7,231,1,9,8,11
	.byte	'CtrlId',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'Address',0
	.word	193
	.byte	1,2,35,1,11
	.byte	'Domain',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'StaticAddrId',0
	.word	193
	.byte	1,2,35,4,11
	.byte	'Assignments',0
	.word	1085
	.byte	3,2,35,5,0,4
	.byte	'TcpIp_LocalAddrConfigType',0,7,243,1,3
	.word	1094
	.byte	10,7,245,1,9,4,11
	.byte	'ArpConfigId',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'DHCPConfigId',0
	.word	193
	.byte	1,2,35,1,11
	.byte	'AutoIpInitTimeout',0
	.word	240
	.byte	2,2,35,2,0,4
	.byte	'TcpIp_IpV4CtrlConfigType',0,7,130,2,3
	.word	1228
	.byte	10,7,133,2,9,8,11
	.byte	'CtrlIdx',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'FramePrio',0
	.word	193
	.byte	1,2,35,1,11
	.byte	'UnicastAddrId',0
	.word	193
	.byte	1,2,35,2,11
	.byte	'UnicastAddrLimit',0
	.word	193
	.byte	1,2,35,3,11
	.byte	'MulticastAddrId',0
	.word	193
	.byte	1,2,35,4,11
	.byte	'LocalAddrLimit',0
	.word	193
	.byte	1,2,35,5,11
	.byte	'IpV4CtrlId',0
	.word	193
	.byte	1,2,35,6,11
	.byte	'IpV6CtrlId',0
	.word	193
	.byte	1,2,35,7,0,4
	.byte	'TcpIp_NetIfCtrlConfigType',0,7,148,2,3
	.word	1339
	.byte	4
	.byte	'SoAd_RoutingGroupIdType',0,8,43,15
	.word	193
	.byte	4
	.byte	'SoAd_SoConIdType',0,8,44,15
	.word	193
	.byte	4
	.byte	'SoAd_SoConGroupIdType',0,8,45,15
	.word	193
	.byte	4
	.byte	'SoAd_PduRouteIdType',0,8,46,15
	.word	193
	.byte	4
	.byte	'SoAd_PduRouteDestIdType',0,8,47,15
	.word	193
	.byte	4
	.byte	'SoAd_SocketRouteIdType',0,8,48,15
	.word	193
	.byte	4
	.byte	'SoAd_IfTxUnconfirmedType',0,8,49,16
	.word	240
	.byte	4
	.byte	'SoAd_IfTxTimerType',0,8,51,16
	.word	240
	.byte	8,1
	.word	193
	.byte	9,0,0,10,8,53,9,2,11
	.byte	'Mask',0
	.word	1793
	.byte	1,2,35,0,11
	.byte	'RoutingState',0
	.word	1793
	.byte	1,2,35,1,0,4
	.byte	'SoAd_RoutingGroupCtrlType',0,8,57,3
	.word	1802
	.byte	6,8,63,9,1,7
	.byte	'SOAD_UL_DOIP',0,0,7
	.byte	'SOAD_UL_UDPNM',0,1,7
	.byte	'SOAD_UL_PDUR',0,2,7
	.byte	'SOAD_UL_XCP',0,3,7
	.byte	'SOAD_UL_MAX',0,4,0,4
	.byte	'SoAd_ULIndexType',0,8,71,3
	.word	1878
	.byte	4
	.byte	'SoAd_RemoteAddressType',0,9,113,32
	.word	686
	.byte	6,9,115,9,1,7
	.byte	'SOAD_SOCON_UNINIT',0,0,7
	.byte	'SOAD_SOCON_OFFLINE',0,1,7
	.byte	'SOAD_SOCON_RECONN',0,2,7
	.byte	'SOAD_SOCON_ONLINE',0,3,0,4
	.byte	'SoAd_SoConModeType',0,9,121,3
	.word	2014
	.byte	12
	.word	193
	.byte	3
	.word	2128
	.byte	12
	.word	193
	.byte	3
	.word	2138
	.byte	12
	.word	193
	.byte	3
	.word	2148
	.byte	12
	.word	1878
	.byte	3
	.word	2158
	.byte	10,9,129,1,9,36,11
	.byte	'IfBufferLength',0
	.word	240
	.byte	2,2,35,0,11
	.byte	'IfBufferOffset',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'TpBufferLength',0
	.word	240
	.byte	2,2,35,4,11
	.byte	'TpBufferOffset',0
	.word	240
	.byte	2,2,35,6,11
	.byte	'PduRouteNum',0
	.word	193
	.byte	1,2,35,8,11
	.byte	'SocketRouteNum',0
	.word	193
	.byte	1,2,35,9,11
	.byte	'PduRouteDestNum',0
	.word	193
	.byte	1,2,35,10,11
	.byte	'RemoteAddrState',0
	.word	193
	.byte	1,2,35,11,11
	.byte	'RemoteAddr',0
	.word	686
	.byte	8,2,35,12,11
	.byte	'PduRouteDestList',0
	.word	2133
	.byte	4,2,35,20,11
	.byte	'PduRouteList',0
	.word	2143
	.byte	4,2,35,24,11
	.byte	'SocketRouteList',0
	.word	2153
	.byte	4,2,35,28,11
	.byte	'SoConModeChgList',0
	.word	2163
	.byte	4,2,35,32,0,4
	.byte	'SoAd_SocketConnectionType',0,9,146,1,3
	.word	2168
	.byte	10,9,148,1,9,16,11
	.byte	'CtrlFlag',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'KeepAliveProbesMax',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'KeepAliveInterval',0
	.word	277
	.byte	4,2,35,4,11
	.byte	'KeepAliveTime',0
	.word	277
	.byte	4,2,35,8,11
	.byte	'TxQuota',0
	.word	277
	.byte	4,2,35,12,0,4
	.byte	'SoAd_TcpProtocolType',0,9,155,1,3
	.word	2520
	.byte	10,9,157,1,9,12,11
	.byte	'CtrlFlag',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'nPduTxBufferMin',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'TriggerTimeout',0
	.word	240
	.byte	2,2,35,4,11
	.byte	'AliveSupervisionTimeout',0
	.word	277
	.byte	4,2,35,6,0,4
	.byte	'SoAd_UdpProtocolType',0,9,163,1,3
	.word	2670
	.byte	12
	.word	2520
	.byte	3
	.word	2807
	.byte	12
	.word	2670
	.byte	3
	.word	2817
	.byte	10,9,165,1,9,24,11
	.byte	'GroupId',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'CtrlFlag',0
	.word	193
	.byte	1,2,35,1,11
	.byte	'FramePriority',0
	.word	193
	.byte	1,2,35,2,11
	.byte	'SoConNum',0
	.word	193
	.byte	1,2,35,3,11
	.byte	'SoConId',0
	.word	193
	.byte	1,2,35,4,11
	.byte	'IpAddrAssignChgNum',0
	.word	193
	.byte	1,2,35,5,11
	.byte	'LocalAddrId',0
	.word	193
	.byte	1,2,35,6,11
	.byte	'LocalPort',0
	.word	240
	.byte	2,2,35,8,11
	.byte	'IpAddrAssignChgList',0
	.word	2163
	.byte	4,2,35,12,11
	.byte	'TcpProtocolPtr',0
	.word	2812
	.byte	4,2,35,16,11
	.byte	'UdpProtocolPtr',0
	.word	2822
	.byte	4,2,35,20,0,4
	.byte	'SoAd_SocketConnectionGroupType',0,9,178,1,3
	.word	2827
	.byte	12
	.word	193
	.byte	3
	.word	3112
	.byte	10,9,180,1,9,12,11
	.byte	'CtrlFlag',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'PduRouteDestNum',0
	.word	193
	.byte	1,2,35,1,11
	.byte	'SocketRouteDestNum',0
	.word	193
	.byte	1,2,35,2,11
	.byte	'PduRouteDestList',0
	.word	3117
	.byte	4,2,35,4,11
	.byte	'SocketRouteDestList',0
	.word	3117
	.byte	4,2,35,8,0,4
	.byte	'SoAd_RoutingGroupType',0,9,187,1,3
	.word	3122
	.byte	10,9,189,1,9,6,11
	.byte	'ULType',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'ULIndex',0
	.word	1878
	.byte	1,2,35,1,11
	.byte	'CtrlFlag',0
	.word	193
	.byte	1,2,35,2,11
	.byte	'RouteDestNum',0
	.word	193
	.byte	1,2,35,3,11
	.byte	'RouteDestId',0
	.word	193
	.byte	1,2,35,4,11
	.byte	'TxPduId',0
	.word	193
	.byte	1,2,35,5,0,4
	.byte	'SoAd_PduRouteType',0,9,204,1,3
	.word	3286
	.byte	3
	.word	1802
	.byte	10,9,206,1,9,20,11
	.byte	'TxPduHeaderId',0
	.word	277
	.byte	4,2,35,0,11
	.byte	'SoConNum',0
	.word	193
	.byte	1,2,35,4,11
	.byte	'SoConId',0
	.word	193
	.byte	1,2,35,5,11
	.byte	'PduRouteId',0
	.word	193
	.byte	1,2,35,6,11
	.byte	'UdpTriggerMode',0
	.word	193
	.byte	1,2,35,7,11
	.byte	'UdpTriggerTimeout',0
	.word	240
	.byte	2,2,35,8,11
	.byte	'RoutingCtrlList',0
	.word	3431
	.byte	4,2,35,12,11
	.byte	'IfTriggerList',0
	.word	470
	.byte	4,2,35,16,0,4
	.byte	'SoAd_PduRouteDestType',0,9,217,1,3
	.word	3436
	.byte	10,9,219,1,9,16,11
	.byte	'RxPduHeaderId',0
	.word	277
	.byte	4,2,35,0,11
	.byte	'ULType',0
	.word	193
	.byte	1,2,35,4,11
	.byte	'ULIndex',0
	.word	1878
	.byte	1,2,35,5,11
	.byte	'SoConNum',0
	.word	193
	.byte	1,2,35,6,11
	.byte	'SoConId',0
	.word	193
	.byte	1,2,35,7,11
	.byte	'RxPduId',0
	.word	193
	.byte	1,2,35,8,11
	.byte	'RoutingCtrlList',0
	.word	3431
	.byte	4,2,35,12,0,4
	.byte	'SoAd_SocketRouteType',0,9,236,1,3
	.word	3651
	.byte	12
	.word	3436
	.byte	3
	.word	3821
	.byte	10,9,155,2,9,24,11
	.byte	'State',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'Timer',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'BufferLength',0
	.word	240
	.byte	2,2,35,4,11
	.byte	'BufferOffset',0
	.word	240
	.byte	2,2,35,6,11
	.byte	'UdpTxBuffer',0
	.word	470
	.byte	4,2,35,8,11
	.byte	'TotalTxLength',0
	.word	240
	.byte	2,2,35,12,11
	.byte	'UsedTxLength',0
	.word	240
	.byte	2,2,35,14,11
	.byte	'IfTxDataBuffer',0
	.word	3117
	.byte	4,2,35,16,11
	.byte	'PduRouteDestPtr',0
	.word	3826
	.byte	4,2,35,20,0,4
	.byte	'SoAd_TxSessionType',0,9,177,2,3
	.word	3831
	.byte	12
	.word	3651
	.byte	3
	.word	4055
	.byte	10,9,180,2,9,8,11
	.byte	'PduLength',0
	.word	240
	.byte	2,2,35,0,11
	.byte	'RemainLength',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'SocketRoutePtr',0
	.word	4060
	.byte	4,2,35,4,0,4
	.byte	'SoAd_RxPduInfoType',0,9,185,2,3
	.word	4065
	.byte	10,9,187,2,9,12,11
	.byte	'TotalLength',0
	.word	240
	.byte	2,2,35,0,11
	.byte	'In',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'Out',0
	.word	240
	.byte	2,2,35,4,11
	.byte	'BufferPtr',0
	.word	470
	.byte	4,2,35,8,0,4
	.byte	'SoAd_RxFifoType',0,9,193,2,3
	.word	4165
	.byte	10,9,195,2,9,8,11
	.byte	'TotalLength',0
	.word	240
	.byte	2,2,35,0,11
	.byte	'UsedLength',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'BufferPtr',0
	.word	470
	.byte	4,2,35,4,0,4
	.byte	'SoAd_RxBufferType',0,9,200,2,3
	.word	4262
	.byte	8,8
	.word	193
	.byte	9,7,0,10,9,202,2,9,48,11
	.byte	'State',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'ValidHeaderLen',0
	.word	193
	.byte	1,2,35,1,11
	.byte	'PduHeader',0
	.word	4356
	.byte	8,2,35,2,11
	.byte	'RxPduInfo',0
	.word	4065
	.byte	8,2,35,12,11
	.byte	'ProcessPduInfo',0
	.word	4065
	.byte	8,2,35,20,11
	.byte	'IfBuffer',0
	.word	4262
	.byte	8,2,35,28,11
	.byte	'TpBuffer',0
	.word	4165
	.byte	12,2,35,36,0,4
	.byte	'SoAd_RxSessionType',0,9,216,2,3
	.word	4365
	.byte	4
	.byte	'u8_t',0,10,61,25
	.word	193
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,0,0,3,15,0,73,19,0,0,4,22,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,5,36,0,3,8,11,15,62,15,0,0,6,4,1,58,15,59,15,57,15,11,15,0,0,7,40,0,3,8,28,13,0,0,8,1
	.byte	1,11,15,73,19,0,0,9,33,0,47,15,0,0,10,19,1,58,15,59,15,57,15,11,15,0,0,11,13,0,3,8,73,19,11,15,56,9,0
	.byte	0,12,38,0,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L7-.L6
.L6:
	.half	3
	.word	.L9-.L8
.L8:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch',0,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6\\mld6.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Std_Types.h',0,1,0,0
	.byte	'ComStack_Types_Cfg.h',0,2,0,0
	.byte	'ComStack_Types.h',0,3,0,0
	.byte	'TcpIp_GeneratedTypes.h',0,2,0,0
	.byte	'TcpIp_Types.h',0,4,0,0
	.byte	'SoAd_GeneratedTypes.h',0,2,0,0
	.byte	'SoAd_Types.h',0,5,0,0
	.byte	'cc.h',0,6,0,0,0
.L9:
.L7:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	     1  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	     2   * @file
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	     3   * Multicast listener discovery
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	     4   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	     5   * @defgroup mld6 MLD6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	     6   * @ingroup ip6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	     7   * Multicast listener discovery for IPv6. Aims to be compliant with RFC 2710.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	     8   * No support for MLDv2.\n
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	     9   * Note: The allnodes (ff01::1, ff02::1) group is assumed be received by your 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    10   * netif since it must always be received for correct IPv6 operation (e.g. SLAAC).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    11   * Ensure the netif filters are configured accordingly!\n
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    12   * The netif flags also need NETIF_FLAG_MLD6 flag set to enable MLD6 on a
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    13   * netif ("netif->flags |= NETIF_FLAG_MLD6;").\n
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    14   * To be called from TCPIP thread.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    15   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    16  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    17  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    18   * Copyright (c) 2010 Inico Technologies Ltd.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    19   * All rights reserved.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    20   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    21   * Redistribution and use in source and binary forms, with or without modification,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    22   * are permitted provided that the following conditions are met:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    23   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    24   * 1. Redistributions of source code must retain the above copyright notice,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    25   *    this list of conditions and the following disclaimer.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    26   * 2. Redistributions in binary form must reproduce the above copyright notice,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    27   *    this list of conditions and the following disclaimer in the documentation
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    28   *    and/or other materials provided with the distribution.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    29   * 3. The name of the author may not be used to endorse or promote products
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    30   *    derived from this software without specific prior written permission.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    31   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    32   * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    33   * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    34   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    35   * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    36   * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    37   * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    38   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    39   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    40   * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    41   * OF SUCH DAMAGE.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    42   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    43   * This file is part of the lwIP TCP/IP stack.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    44   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    45   * Author: Ivan Delamer <delamer@inicotech.com>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    46   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    47   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    48   * Please coordinate changes and requests with Ivan Delamer
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    49   * <delamer@inicotech.com>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    50   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    51  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    52  /* Based on igmp.c implementation of igmp v2 protocol */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    53  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    54  #include "lwip/opt.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    55  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    56  #if LWIP_IPV6 && LWIP_IPV6_MLD  /* don't build if not configured for use in lwipopts.h */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    57  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    58  #include "lwip/mld6.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    59  #include "lwip/prot/mld6.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    60  #include "lwip/icmp6.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    61  #include "lwip/ip6.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    62  #include "lwip/ip6_addr.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    63  #include "lwip/ip.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    64  #include "lwip/inet_chksum.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    65  #include "lwip/pbuf.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    66  #include "lwip/netif.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    67  #include "lwip/memp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    68  #include "lwip/stats.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    69  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    70  #include <string.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    71  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    72  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    73  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    74   * MLD constants
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    75   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    76  #define MLD6_HL                           1
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    77  #define MLD6_JOIN_DELAYING_MEMBER_TMR_MS  (500)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    78  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    79  #define MLD6_GROUP_NON_MEMBER             0
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    80  #define MLD6_GROUP_DELAYING_MEMBER        1
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    81  #define MLD6_GROUP_IDLE_MEMBER            2
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    82  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    83  /* Forward declarations. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    84  static struct mld_group *mld6_new_group(struct netif *ifp, const ip6_addr_t *addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    85  static err_t mld6_remove_group(struct netif *netif, struct mld_group *group);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    86  static void mld6_delayed_report(struct mld_group *group, u16_t maxresp);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    87  static void mld6_send(struct netif *netif, struct mld_group *group, u8_t type);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    88  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    89  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    90  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    91   * Stop MLD processing on interface
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    92   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    93   * @param netif network interface on which stop MLD processing
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    94   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    95  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    96  mld6_stop(struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    97  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    98    struct mld_group *group = netif_mld6_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	    99  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   100    netif_set_client_data(netif, LWIP_NETIF_CLIENT_DATA_INDEX_MLD6, NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   101  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   102    while (group != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   103      struct mld_group *next = group->next; /* avoid use-after-free below */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   104  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   105      /* disable the group at the MAC level */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   106      if (netif->mld_mac_filter != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   107        netif->mld_mac_filter(netif, &(group->group_address), NETIF_DEL_MAC_FILTER);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   108      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   109  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   110      /* free group */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   111      memp_free(MEMP_MLD6_GROUP, group);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   112  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   113      /* move to "next" */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   114      group = next;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   115    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   116    return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   117  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   118  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   119  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   120   * Report MLD memberships for this interface
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   121   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   122   * @param netif network interface on which report MLD memberships
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   123   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   124  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   125  mld6_report_groups(struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   126  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   127    struct mld_group *group = netif_mld6_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   128  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   129    while (group != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   130      mld6_delayed_report(group, MLD6_JOIN_DELAYING_MEMBER_TMR_MS);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   131      group = group->next;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   132    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   133  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   134  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   135  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   136   * Search for a group that is joined on a netif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   137   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   138   * @param ifp the network interface for which to look
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   139   * @param addr the group ipv6 address to search for
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   140   * @return a struct mld_group* if the group has been found,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   141   *         NULL if the group wasn't found.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   142   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   143  struct mld_group *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   144  mld6_lookfor_group(struct netif *ifp, const ip6_addr_t *addr)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   145  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   146    struct mld_group *group = netif_mld6_data(ifp);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   147  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   148    while (group != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   149      if (ip6_addr_cmp(&(group->group_address), addr)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   150        return group;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   151      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   152      group = group->next;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   153    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   154  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   155    return NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   156  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   157  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   158  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   159  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   160   * create a new group
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   161   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   162   * @param ifp the network interface for which to create
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   163   * @param addr the new group ipv6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   164   * @return a struct mld_group*,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   165   *         NULL on memory error.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   166   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   167  static struct mld_group *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   168  mld6_new_group(struct netif *ifp, const ip6_addr_t *addr)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   169  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   170    struct mld_group *group;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   171  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   172    group = (struct mld_group *)memp_malloc(MEMP_MLD6_GROUP);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   173    if (group != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   174      ip6_addr_set(&(group->group_address), addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   175      group->timer              = 0; /* Not running */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   176      group->group_state        = MLD6_GROUP_IDLE_MEMBER;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   177      group->last_reporter_flag = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   178      group->use                = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   179      group->next               = netif_mld6_data(ifp);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   180  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   181      netif_set_client_data(ifp, LWIP_NETIF_CLIENT_DATA_INDEX_MLD6, group);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   182    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   183  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   184    return group;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   185  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   186  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   187  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   188   * Remove a group from the mld_group_list, but do not free it yet
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   189   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   190   * @param group the group to remove
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   191   * @return ERR_OK if group was removed from the list, an err_t otherwise
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   192   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   193  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   194  mld6_remove_group(struct netif *netif, struct mld_group *group)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   195  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   196    err_t err = ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   197  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   198    /* Is it the first group? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   199    if (netif_mld6_data(netif) == group) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   200      netif_set_client_data(netif, LWIP_NETIF_CLIENT_DATA_INDEX_MLD6, group->next);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   201    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   202      /* look for group further down the list */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   203      struct mld_group *tmpGroup;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   204      for (tmpGroup = netif_mld6_data(netif); tmpGroup != NULL; tmpGroup = tmpGroup->next) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   205        if (tmpGroup->next == group) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   206          tmpGroup->next = group->next;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   207          break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   208        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   209      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   210      /* Group not find group */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   211      if (tmpGroup == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   212        err = ERR_ARG;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   213      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   214    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   215  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   216    return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   217  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   218  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   219  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   220  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   221   * Process an input MLD message. Called by icmp6_input.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   222   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   223   * @param p the mld packet, p->payload pointing to the icmpv6 header
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   224   * @param inp the netif on which this packet was received
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   225   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   226  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   227  mld6_input(struct pbuf *p, struct netif *inp)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   228  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   229    struct mld_header *mld_hdr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   230    struct mld_group *group;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   231  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   232    MLD6_STATS_INC(mld6.recv);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   233  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   234    /* Check that mld header fits in packet. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   235    if (p->len < sizeof(struct mld_header)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   236      /* @todo debug message */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   237      pbuf_free(p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   238      MLD6_STATS_INC(mld6.lenerr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   239      MLD6_STATS_INC(mld6.drop);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   240      return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   241    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   242  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   243    mld_hdr = (struct mld_header *)p->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   244  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   245    switch (mld_hdr->type) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   246    case ICMP6_TYPE_MLQ: /* Multicast listener query. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   247      /* Is it a general query? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   248      if (ip6_addr_isallnodes_linklocal(ip6_current_dest_addr()) &&
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   249          ip6_addr_isany(&(mld_hdr->multicast_address))) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   250        MLD6_STATS_INC(mld6.rx_general);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   251        /* Report all groups, except all nodes group, and if-local groups. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   252        group = netif_mld6_data(inp);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   253        while (group != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   254          if ((!(ip6_addr_ismulticast_iflocal(&(group->group_address)))) &&
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   255              (!(ip6_addr_isallnodes_linklocal(&(group->group_address))))) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   256            mld6_delayed_report(group, mld_hdr->max_resp_delay);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   257          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   258          group = group->next;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   259        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   260      } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   261        /* Have we joined this group?
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   262         * We use IP6 destination address to have a memory aligned copy.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   263         * mld_hdr->multicast_address should be the same. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   264        MLD6_STATS_INC(mld6.rx_group);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   265        group = mld6_lookfor_group(inp, ip6_current_dest_addr());
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   266        if (group != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   267          /* Schedule a report. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   268          mld6_delayed_report(group, mld_hdr->max_resp_delay);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   269        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   270      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   271      break; /* ICMP6_TYPE_MLQ */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   272    case ICMP6_TYPE_MLR: /* Multicast listener report. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   273      /* Have we joined this group?
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   274       * We use IP6 destination address to have a memory aligned copy.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   275       * mld_hdr->multicast_address should be the same. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   276      MLD6_STATS_INC(mld6.rx_report);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   277      group = mld6_lookfor_group(inp, ip6_current_dest_addr());
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   278      if (group != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   279        /* If we are waiting to report, cancel it. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   280        if (group->group_state == MLD6_GROUP_DELAYING_MEMBER) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   281          group->timer = 0; /* stopped */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   282          group->group_state = MLD6_GROUP_IDLE_MEMBER;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   283          group->last_reporter_flag = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   284        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   285      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   286      break; /* ICMP6_TYPE_MLR */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   287    case ICMP6_TYPE_MLD: /* Multicast listener done. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   288      /* Do nothing, router will query us. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   289      break; /* ICMP6_TYPE_MLD */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   290    default:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   291      MLD6_STATS_INC(mld6.proterr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   292      MLD6_STATS_INC(mld6.drop);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   293      break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   294    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   295  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   296    pbuf_free(p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   297  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   298  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   299  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   300   * @ingroup mld6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   301   * Join a group on one or all network interfaces.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   302   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   303   * If the group is to be joined on all interfaces, the given group address must
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   304   * not have a zone set (i.e., it must have its zone index set to IP6_NO_ZONE).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   305   * If the group is to be joined on one particular interface, the given group
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   306   * address may or may not have a zone set.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   307   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   308   * @param srcaddr ipv6 address (zoned) of the network interface which should
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   309   *                join a new group. If IP6_ADDR_ANY6, join on all netifs
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   310   * @param groupaddr the ipv6 address of the group to join (possibly but not
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   311   *                  necessarily zoned)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   312   * @return ERR_OK if group was joined on the netif(s), an err_t otherwise
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   313   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   314  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   315  mld6_joingroup(const ip6_addr_t *srcaddr, const ip6_addr_t *groupaddr)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   316  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   317    err_t         err = ERR_VAL; /* no matching interface */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   318    struct netif *netif;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   319  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   320    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   321  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   322    /* loop through netif's */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   323    NETIF_FOREACH(netif) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   324      /* Should we join this interface ? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   325      if (ip6_addr_isany(srcaddr) ||
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   326          netif_get_ip6_addr_match(netif, srcaddr) >= 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   327        err = mld6_joingroup_netif(netif, groupaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   328        if (err != ERR_OK) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   329          return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   330        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   331      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   332    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   333  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   334    return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   335  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   336  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   337  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   338   * @ingroup mld6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   339   * Join a group on a network interface.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   340   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   341   * @param netif the network interface which should join a new group.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   342   * @param groupaddr the ipv6 address of the group to join (possibly but not
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   343   *                  necessarily zoned)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   344   * @return ERR_OK if group was joined on the netif, an err_t otherwise
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   345   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   346  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   347  mld6_joingroup_netif(struct netif *netif, const ip6_addr_t *groupaddr)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   348  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   349    struct mld_group *group;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   350  #if LWIP_IPV6_SCOPES
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   351    ip6_addr_t ip6addr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   352  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   353    /* If the address has a particular scope but no zone set, use the netif to
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   354     * set one now. Within the mld6 module, all addresses are properly zoned. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   355    if (ip6_addr_lacks_zone(groupaddr, IP6_MULTICAST)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   356      ip6_addr_set(&ip6addr, groupaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   357      ip6_addr_assign_zone(&ip6addr, IP6_MULTICAST, netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   358      groupaddr = &ip6addr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   359    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   360    IP6_ADDR_ZONECHECK_NETIF(groupaddr, netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   361  #endif /* LWIP_IPV6_SCOPES */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   362  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   363    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   364  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   365    /* find group or create a new one if not found */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   366    group = mld6_lookfor_group(netif, groupaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   367  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   368    if (group == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   369      /* Joining a new group. Create a new group entry. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   370      group = mld6_new_group(netif, groupaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   371      if (group == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   372        return ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   373      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   374  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   375      /* Activate this address on the MAC layer. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   376      if (netif->mld_mac_filter != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   377        netif->mld_mac_filter(netif, groupaddr, NETIF_ADD_MAC_FILTER);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   378      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   379  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   380      /* Report our membership. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   381      MLD6_STATS_INC(mld6.tx_report);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   382      mld6_send(netif, group, ICMP6_TYPE_MLR);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   383      mld6_delayed_report(group, MLD6_JOIN_DELAYING_MEMBER_TMR_MS);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   384    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   385  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   386    /* Increment group use */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   387    group->use++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   388    return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   389  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   390  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   391  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   392   * @ingroup mld6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   393   * Leave a group on a network interface.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   394   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   395   * Zoning of address follows the same rules as @ref mld6_joingroup.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   396   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   397   * @param srcaddr ipv6 address (zoned) of the network interface which should
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   398   *                leave the group. If IP6_ADDR_ANY6, leave on all netifs
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   399   * @param groupaddr the ipv6 address of the group to leave (possibly, but not
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   400   *                  necessarily zoned)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   401   * @return ERR_OK if group was left on the netif(s), an err_t otherwise
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   402   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   403  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   404  mld6_leavegroup(const ip6_addr_t *srcaddr, const ip6_addr_t *groupaddr)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   405  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   406    err_t         err = ERR_VAL; /* no matching interface */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   407    struct netif *netif;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   408  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   409    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   410  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   411    /* loop through netif's */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   412    NETIF_FOREACH(netif) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   413      /* Should we leave this interface ? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   414      if (ip6_addr_isany(srcaddr) ||
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   415          netif_get_ip6_addr_match(netif, srcaddr) >= 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   416        err_t res = mld6_leavegroup_netif(netif, groupaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   417        if (err != ERR_OK) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   418          /* Store this result if we have not yet gotten a success */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   419          err = res;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   420        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   421      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   422    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   423  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   424    return err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   425  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   426  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   427  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   428   * @ingroup mld6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   429   * Leave a group on a network interface.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   430   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   431   * @param netif the network interface which should leave the group.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   432   * @param groupaddr the ipv6 address of the group to leave (possibly, but not
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   433   *                  necessarily zoned)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   434   * @return ERR_OK if group was left on the netif, an err_t otherwise
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   435   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   436  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   437  mld6_leavegroup_netif(struct netif *netif, const ip6_addr_t *groupaddr)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   438  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   439    struct mld_group *group;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   440  #if LWIP_IPV6_SCOPES
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   441    ip6_addr_t ip6addr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   442  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   443    if (ip6_addr_lacks_zone(groupaddr, IP6_MULTICAST)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   444      ip6_addr_set(&ip6addr, groupaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   445      ip6_addr_assign_zone(&ip6addr, IP6_MULTICAST, netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   446      groupaddr = &ip6addr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   447    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   448    IP6_ADDR_ZONECHECK_NETIF(groupaddr, netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   449  #endif /* LWIP_IPV6_SCOPES */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   450  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   451    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   452  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   453    /* find group */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   454    group = mld6_lookfor_group(netif, groupaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   455  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   456    if (group != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   457      /* Leave if there is no other use of the group */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   458      if (group->use <= 1) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   459        /* Remove the group from the list */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   460        mld6_remove_group(netif, group);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   461  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   462        /* If we are the last reporter for this group */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   463        if (group->last_reporter_flag) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   464          MLD6_STATS_INC(mld6.tx_leave);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   465          mld6_send(netif, group, ICMP6_TYPE_MLD);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   466        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   467  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   468        /* Disable the group at the MAC level */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   469        if (netif->mld_mac_filter != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   470          netif->mld_mac_filter(netif, groupaddr, NETIF_DEL_MAC_FILTER);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   471        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   472  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   473        /* free group struct */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   474        memp_free(MEMP_MLD6_GROUP, group);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   475      } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   476        /* Decrement group use */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   477        group->use--;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   478      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   479  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   480      /* Left group */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   481      return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   482    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   483  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   484    /* Group not found */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   485    return ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   486  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   487  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   488  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   489  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   490   * Periodic timer for mld processing. Must be called every
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   491   * MLD6_TMR_INTERVAL milliseconds (100).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   492   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   493   * When a delaying member expires, a membership report is sent.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   494   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   495  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   496  mld6_tmr(void)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   497  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   498    struct netif *netif;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   499  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   500    NETIF_FOREACH(netif) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   501      struct mld_group *group = netif_mld6_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   502  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   503      while (group != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   504        if (group->timer > 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   505          group->timer--;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   506          if (group->timer == 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   507            /* If the state is MLD6_GROUP_DELAYING_MEMBER then we send a report for this group */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   508            if (group->group_state == MLD6_GROUP_DELAYING_MEMBER) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   509              MLD6_STATS_INC(mld6.tx_report);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   510              mld6_send(netif, group, ICMP6_TYPE_MLR);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   511              group->group_state = MLD6_GROUP_IDLE_MEMBER;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   512            }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   513          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   514        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   515        group = group->next;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   516      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   517    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   518  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   519  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   520  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   521   * Schedule a delayed membership report for a group
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   522   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   523   * @param group the mld_group for which "delaying" membership report
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   524   *              should be sent
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   525   * @param maxresp_in the max resp delay provided in the query
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   526   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   527  static void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   528  mld6_delayed_report(struct mld_group *group, u16_t maxresp_in)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   529  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   530    /* Convert maxresp from milliseconds to tmr ticks */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   531    u16_t maxresp = maxresp_in / MLD6_TMR_INTERVAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   532    if (maxresp == 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   533      maxresp = 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   534    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   535  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   536  #ifdef LWIP_RAND
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   537    /* Randomize maxresp. (if LWIP_RAND is supported) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   538    maxresp = (u16_t)(LWIP_RAND() % maxresp);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   539    if (maxresp == 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   540      maxresp = 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   541    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   542  #endif /* LWIP_RAND */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   543  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   544    /* Apply timer value if no report has been scheduled already. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   545    if ((group->group_state == MLD6_GROUP_IDLE_MEMBER) ||
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   546       ((group->group_state == MLD6_GROUP_DELAYING_MEMBER) &&
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   547        ((group->timer == 0) || (maxresp < group->timer)))) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   548      group->timer = maxresp;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   549      group->group_state = MLD6_GROUP_DELAYING_MEMBER;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   550    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   551  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   552  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   553  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   554   * Send a MLD message (report or done).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   555   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   556   * An IPv6 hop-by-hop options header with a router alert option
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   557   * is prepended.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   558   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   559   * @param group the group to report or quit
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   560   * @param type ICMP6_TYPE_MLR (report) or ICMP6_TYPE_MLD (done)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   561   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   562  static void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   563  mld6_send(struct netif *netif, struct mld_group *group, u8_t type)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   564  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   565    struct mld_header *mld_hdr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   566    struct pbuf *p;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   567    const ip6_addr_t *src_addr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   568  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   569    /* Allocate a packet. Size is MLD header + IPv6 Hop-by-hop options header. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   570    p = pbuf_alloc(PBUF_IP, sizeof(struct mld_header) + MLD6_HBH_HLEN, PBUF_RAM);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   571    if (p == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   572      MLD6_STATS_INC(mld6.memerr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   573      return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   574    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   575  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   576    /* Move to make room for Hop-by-hop options header. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   577    if (pbuf_remove_header(p, MLD6_HBH_HLEN)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   578      pbuf_free(p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   579      MLD6_STATS_INC(mld6.lenerr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   580      return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   581    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   582  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   583    /* Select our source address. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   584    if (!ip6_addr_isvalid(netif_ip6_addr_state(netif, 0))) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   585      /* This is a special case, when we are performing duplicate address detection.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   586       * We must join the multicast group, but we don't have a valid address yet. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   587      src_addr = IP6_ADDR_ANY6;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   588    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   589      /* Use link-local address as source address. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   590      src_addr = netif_ip6_addr(netif, 0);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   591    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   592  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   593    /* MLD message header pointer. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   594    mld_hdr = (struct mld_header *)p->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   595  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   596    /* Set fields. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   597    mld_hdr->type = type;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   598    mld_hdr->code = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   599    mld_hdr->chksum = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   600    mld_hdr->max_resp_delay = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   601    mld_hdr->reserved = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   602    ip6_addr_copy_to_packed(mld_hdr->multicast_address, group->group_address);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   603  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   604  #if CHECKSUM_GEN_ICMP6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   605    IF__NETIF_CHECKSUM_ENABLED(netif, NETIF_CHECKSUM_GEN_ICMP6) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   606      mld_hdr->chksum = ip6_chksum_pseudo(p, IP6_NEXTH_ICMP6, p->len,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   607        src_addr, &(group->group_address));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   608    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   609  #endif /* CHECKSUM_GEN_ICMP6 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   610  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   611    /* Add hop-by-hop headers options: router alert with MLD value. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   612    ip6_options_add_hbh_ra(p, IP6_NEXTH_ICMP6, IP6_ROUTER_ALERT_VALUE_MLD);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   613  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   614    if (type == ICMP6_TYPE_MLR) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   615      /* Remember we were the last to report */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   616      group->last_reporter_flag = 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   617    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   618  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   619    /* Send the packet out. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   620    MLD6_STATS_INC(mld6.xmit);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   621    ip6_output_if(p, (ip6_addr_isany(src_addr)) ? NULL : src_addr, &(group->group_address),
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   622        MLD6_HL, 0, IP6_NEXTH_HOPBYHOP, netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   623    pbuf_free(p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   624  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   625  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv6\mld6.c	   626  #endif /* LWIP_IPV6 */

	; Module end
