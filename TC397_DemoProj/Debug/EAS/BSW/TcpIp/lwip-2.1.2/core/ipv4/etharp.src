	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 09003395"
	.compiler_invocation	"ctc -f cc8148a --dep-file=EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\.etharp.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --fp-model=+float -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Lib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\App_Func -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\demo -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Adc_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Gtm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\AscLin_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Can_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\EthV2_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Stm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Main -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\APP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\BswM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanSm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Com -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\ComM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Common -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Crc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Det -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\DoIP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EcuM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Eth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthSM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTrcv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FiM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FlsTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Nm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\PduR -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\RamTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\StbM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\arpa -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\net -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\sys -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\stdc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\apps -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\priv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\UdpNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Cal -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Daq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pag -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pgm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Std -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\XcpOnEth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Library\\Vfx_ComE2E -g2 --make-target=EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O1 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.src ..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c"
	.compiler_name		"ctc"
	;source	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c'

	
$TC162
	
	.sdecl	'.text.etharp.free_etharp_q',code,cluster('free_etharp_q')
	.sect	'.text.etharp.free_etharp_q'
	.align	2
	

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	     1  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	     2   * @file
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	     3   * Address Resolution Protocol module for IP over Ethernet
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	     4   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	     5   * Functionally, ARP is divided into two parts. The first maps an IP address
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	     6   * to a physical address when sending a packet, and the second part answers
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	     7   * requests from other machines for our physical address.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	     8   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	     9   * This implementation complies with RFC 826 (Ethernet ARP). It supports
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    10   * Gratuitious ARP from RFC3220 (IP Mobility Support for IPv4) section 4.6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    11   * if an interface calls etharp_gratuitous(our_netif) upon address change.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    12   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    13  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    14  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    15   * Copyright (c) 2001-2003 Swedish Institute of Computer Science.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    16   * Copyright (c) 2003-2004 Leon Woestenberg <leon.woestenberg@axon.tv>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    17   * Copyright (c) 2003-2004 Axon Digital Design B.V., The Netherlands.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    18   * All rights reserved.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    19   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    20   * Redistribution and use in source and binary forms, with or without modification,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    21   * are permitted provided that the following conditions are met:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    22   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    23   * 1. Redistributions of source code must retain the above copyright notice,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    24   *    this list of conditions and the following disclaimer.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    25   * 2. Redistributions in binary form must reproduce the above copyright notice,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    26   *    this list of conditions and the following disclaimer in the documentation
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    27   *    and/or other materials provided with the distribution.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    28   * 3. The name of the author may not be used to endorse or promote products
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    29   *    derived from this software without specific prior written permission.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    30   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    31   * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    32   * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    33   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    34   * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    35   * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    36   * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    37   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    38   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    39   * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    40   * OF SUCH DAMAGE.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    41   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    42   * This file is part of the lwIP TCP/IP stack.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    43   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    44   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    45  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    46  #include "lwip/opt.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    47  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    48  #if LWIP_IPV4 && LWIP_ARP /* don't build if not configured for use in lwipopts.h */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    49  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    50  #include "lwip/etharp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    51  #include "lwip/stats.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    52  #include "lwip/snmp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    53  #include "lwip/dhcp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    54  #include "lwip/autoip.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    55  #include "lwip/prot/iana.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    56  #include "netif/ethernet.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    57  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    58  #include <string.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    59  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    60  #ifdef LWIP_HOOK_FILENAME
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    61  #include LWIP_HOOK_FILENAME
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    62  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    63  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    64  /** Re-request a used ARP entry 1 minute before it would expire to prevent
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    65   *  breaking a steadily used connection because the ARP entry timed out. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    66  #define ARP_AGE_REREQUEST_USED_UNICAST   (ARP_MAXAGE - 30)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    67  #define ARP_AGE_REREQUEST_USED_BROADCAST (ARP_MAXAGE - 15)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    68  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    69  /** the time an ARP entry stays pending after first request,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    70   *  for ARP_TMR_INTERVAL = 1000, this is
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    71   *  10 seconds.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    72   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    73   *  @internal Keep this number at least 2, otherwise it might
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    74   *  run out instantly if the timeout occurs directly after a request.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    75   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    76  #define ARP_MAXPENDING 5
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    77  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    78  /** ARP states */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    79  enum etharp_state {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    80    ETHARP_STATE_EMPTY = 0,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    81    ETHARP_STATE_PENDING,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    82    ETHARP_STATE_STABLE,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    83    ETHARP_STATE_STABLE_REREQUESTING_1,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    84    ETHARP_STATE_STABLE_REREQUESTING_2
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    85  #if ETHARP_SUPPORT_STATIC_ENTRIES
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    86    , ETHARP_STATE_STATIC
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    87  #endif /* ETHARP_SUPPORT_STATIC_ENTRIES */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    88  };
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    89  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    90  struct etharp_entry {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    91  #if ARP_QUEUEING
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    92    /** Pointer to queue of pending outgoing packets on this ARP entry. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    93    struct etharp_q_entry *q;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    94  #else /* ARP_QUEUEING */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    95    /** Pointer to a single pending outgoing packet on this ARP entry. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    96    struct pbuf *q;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    97  #endif /* ARP_QUEUEING */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    98    ip4_addr_t ipaddr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	    99    struct netif *netif;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   100    struct eth_addr ethaddr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   101    u16_t ctime;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   102    u8_t state;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   103  };
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   104  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   105  static struct etharp_entry arp_table[ARP_TABLE_SIZE];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   106  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   107  #if !LWIP_NETIF_HWADDRHINT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   108  static netif_addr_idx_t etharp_cached_entry;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   109  #endif /* !LWIP_NETIF_HWADDRHINT */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   110  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   111  /** Try hard to create a new entry - we want the IP address to appear in
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   112      the cache (even if this means removing an active entry or so). */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   113  #define ETHARP_FLAG_TRY_HARD     1
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   114  #define ETHARP_FLAG_FIND_ONLY    2
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   115  #if ETHARP_SUPPORT_STATIC_ENTRIES
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   116  #define ETHARP_FLAG_STATIC_ENTRY 4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   117  #endif /* ETHARP_SUPPORT_STATIC_ENTRIES */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   118  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   119  #if LWIP_NETIF_HWADDRHINT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   120  #define ETHARP_SET_ADDRHINT(netif, addrhint)  do { if (((netif) != NULL) && ((netif)->hints != NULL)) { \ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   121                                                (netif)->hints->addr_hint = (addrhint); }} while(0)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   122  #else /* LWIP_NETIF_HWADDRHINT */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   123  #define ETHARP_SET_ADDRHINT(netif, addrhint)  (etharp_cached_entry = (addrhint))
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   124  #endif /* LWIP_NETIF_HWADDRHINT */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   125  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   126  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   127  /* Check for maximum ARP_TABLE_SIZE */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   128  #if (ARP_TABLE_SIZE > NETIF_ADDR_IDX_MAX)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   129  #error "ARP_TABLE_SIZE must fit in an s16_t, you have to reduce it in your lwipopts.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   130  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   131  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   132  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   133  static err_t etharp_request_dst(struct netif *netif, const ip4_addr_t *ipaddr, const struct eth_addr *hw_dst_addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   134  static err_t etharp_raw(struct netif *netif,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   135                          const struct eth_addr *ethsrc_addr, const struct eth_addr *ethdst_addr,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   136                          const struct eth_addr *hwsrc_addr, const ip4_addr_t *ipsrc_addr,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   137                          const struct eth_addr *hwdst_addr, const ip4_addr_t *ipdst_addr,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   138                          const u16_t opcode);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   139  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   140  #if ARP_QUEUEING
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   141  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   142   * Free a complete queue of etharp entries
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   143   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   144   * @param q a qeueue of etharp_q_entry's to free
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   145   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   146  static void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   147  free_etharp_q(struct etharp_q_entry *q)
; Function free_etharp_q
.L139:
free_etharp_q:	.type	func
	mov.aa	a12,a4
.L385:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   148  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   149    struct etharp_q_entry *r;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   150    LWIP_ASSERT("q != NULL", q != NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   151    while (q) {
	j	.L2
.L3:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   152      r = q;
	mov.aa	a15,a12
.L386:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   153      q = q->next;
	ld.a	a12,[a12]
.L840:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   154      LWIP_ASSERT("r->p != NULL", (r->p != NULL));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   155      pbuf_free(r->p);
	ld.a	a4,[a15]4
	call	pbuf_free
.L841:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   156      memp_free(MEMP_ARP_QUEUE, r);
	mov	d4,#4
.L842:
	mov.aa	a4,a15
.L387:
	call	memp_free
.L2:
	jnz.a	a12,.L3
.L843:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   157    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   158  }
	ret
.L350:
	
__free_etharp_q_function_end:
	.size	free_etharp_q,__free_etharp_q_function_end-free_etharp_q
.L226:
	; End of function
	
	.sdecl	'.text.etharp.etharp_free_entry',code,cluster('etharp_free_entry')
	.sect	'.text.etharp.etharp_free_entry'
	.align	2
	

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   159  #else /* ARP_QUEUEING */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   160  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   161  /** Compatibility define: free the queued pbuf */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   162  #define free_etharp_q(q) pbuf_free(q)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   163  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   164  #endif /* ARP_QUEUEING */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   165  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   166  /** Clean up ARP table entries */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   167  static void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   168  etharp_free_entry(int i)
; Function etharp_free_entry
.L141:
etharp_free_entry:	.type	func
	mov	d8,d4
.L389:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   169  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   170    /* remove from SNMP ARP index tree */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   171    mib2_remove_arp_entry(arp_table[i].netif, &arp_table[i].ipaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   172    /* and empty packet queue */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   173    if (arp_table[i].q != NULL) {
	mul	d15,d8,#24
.L848:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L849:
	addsc.a	a15,a15,d15,#0
.L850:
	ld.w	d0,[a15]
.L851:
	jeq	d0,#0,.L4
.L852:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   174      /* remove all queued packets */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   175      LWIP_DEBUGF(ETHARP_DEBUG, ("etharp_free_entry: freeing entry %"U16_F", packet queue %p.\n", (u16_t)i, (void *)(arp_table[i].q)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   176      free_etharp_q(arp_table[i].q);
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L853:
	addsc.a	a15,a15,d15,#0
.L854:
	ld.a	a4,[a15]
	call	free_etharp_q
.L388:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   177      arp_table[i].q = NULL;
	mul	d15,d8,#24
.L855:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L856:
	addsc.a	a15,a15,d15,#0
.L857:
	mov.a	a2,#0
.L858:
	st.a	[a15],a2
.L4:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   178    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   179    /* recycle entry for re-use */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   180    arp_table[i].state = ETHARP_STATE_EMPTY;
	mul	d15,d8,#24
.L859:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L860:
	addsc.a	a15,a15,d15,#0
.L861:
	mov	d15,#0
.L862:
	st.b	[a15]20,d15
.L863:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   181  #ifdef LWIP_DEBUG
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   182    /* for debugging, clean out the complete entry */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   183    arp_table[i].ctime = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   184    arp_table[i].netif = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   185    ip4_addr_set_zero(&arp_table[i].ipaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   186    arp_table[i].ethaddr = ethzero;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   187  #endif /* LWIP_DEBUG */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   188  }
	ret
.L353:
	
__etharp_free_entry_function_end:
	.size	etharp_free_entry,__etharp_free_entry_function_end-etharp_free_entry
.L231:
	; End of function
	
	.sdecl	'.text.etharp.etharp_tmr',code,cluster('etharp_tmr')
	.sect	'.text.etharp.etharp_tmr'
	.align	2
	
	.global	etharp_tmr

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   189  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   190  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   191   * Clears expired entries in the ARP table.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   192   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   193   * This function should be called every ARP_TMR_INTERVAL milliseconds (1 second),
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   194   * in order to expire entries in the ARP table.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   195   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   196  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   197  etharp_tmr(void)
; Function etharp_tmr
.L143:
etharp_tmr:	.type	func

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   198  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   199    int i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   200  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   201    LWIP_DEBUGF(ETHARP_DEBUG, ("etharp_timer\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   202    /* remove expired entries from the ARP table */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   203    for (i = 0; i < ARP_TABLE_SIZE; ++i) {
	mov	d8,#0
.L255:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   204      u8_t state = arp_table[i].state;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   205      if (state != ETHARP_STATE_EMPTY
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   206  #if ETHARP_SUPPORT_STATIC_ENTRIES
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   207          && (state != ETHARP_STATE_STATIC)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   208  #endif /* ETHARP_SUPPORT_STATIC_ENTRIES */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   209         ) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   210        arp_table[i].ctime++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   211        if ((arp_table[i].ctime >= ARP_MAXAGE) ||
	mov	d9,#120
.L563:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   212            ((arp_table[i].state == ETHARP_STATE_PENDING)  &&
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   213             (arp_table[i].ctime >= ARP_MAXPENDING))) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   214          /* pending or stable entry has become old! */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   215          LWIP_DEBUGF(ETHARP_DEBUG, ("etharp_timer: expired %s entry %d.\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   216                                     arp_table[i].state >= ETHARP_STATE_STABLE ? "stable" : "pending", i));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   217          /* clean up entries that have just been expired */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   218          etharp_free_entry(i);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   219        } else if (arp_table[i].state == ETHARP_STATE_STABLE_REREQUESTING_1) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   220          /* Don't send more than one request every 2 seconds. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   221          arp_table[i].state = ETHARP_STATE_STABLE_REREQUESTING_2;
	mov	d10,#4
.L564:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   222        } else if (arp_table[i].state == ETHARP_STATE_STABLE_REREQUESTING_2) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   223          /* Reset state to stable, so that the next transmitted packet will
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   224             re-send an ARP request. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   225          arp_table[i].state = ETHARP_STATE_STABLE;
	mov	d11,#2
.L256:
	mov	d12,#10
.L565:
	j	.L5
.L6:
	mul	d15,d8,#24
.L566:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L567:
	addsc.a	a15,a15,d15,#0
.L568:
	ld.bu	d0,[a15]20
.L390:
	jeq	d0,#0,.L7
.L569:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L570:
	addsc.a	a15,a15,d15,#0
.L571:
	movh.a	a2,#@his(arp_table)
	lea	a2,[a2]@los(arp_table)
.L572:
	addsc.a	a2,a2,d15,#0
.L573:
	ld.hu	d0,[a2]18
.L391:
	add	d0,#1
	st.h	[a15]18,d0
.L574:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L575:
	addsc.a	a15,a15,d15,#0
.L576:
	ld.hu	d0,[a15]18
.L577:
	jge.u	d0,d9,.L8
.L578:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L579:
	addsc.a	a15,a15,d15,#0
.L580:
	ld.bu	d0,[a15]20
.L581:
	jne	d0,#1,.L9
.L582:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L583:
	addsc.a	a15,a15,d15,#0
.L584:
	ld.hu	d15,[a15]18
.L585:
	jlt.u	d15,#5,.L10
.L8:
	mov	d4,d8
.L392:
	call	etharp_free_entry
.L393:
	j	.L11
.L10:
.L9:
	mul	d15,d8,#24
.L586:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L587:
	addsc.a	a15,a15,d15,#0
.L588:
	ld.bu	d0,[a15]20
.L589:
	jne	d0,#3,.L12
.L590:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L591:
	addsc.a	a15,a15,d15,#0
.L592:
	st.b	[a15]20,d10
.L593:
	j	.L13
.L12:
	mul	d15,d8,#24
.L594:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L595:
	addsc.a	a15,a15,d15,#0
.L596:
	ld.bu	d0,[a15]20
.L597:
	jne	d0,#4,.L14
.L598:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L599:
	addsc.a	a15,a15,d15,#0
.L600:
	st.b	[a15]20,d11
.L601:
	j	.L15
.L14:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   226        } else if (arp_table[i].state == ETHARP_STATE_PENDING) {
	mul	d15,d8,#24
.L602:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L603:
	addsc.a	a15,a15,d15,#0
.L604:
	ld.bu	d0,[a15]20
.L605:
	jne	d0,#1,.L16
.L606:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   227          /* still pending, resend an ARP query */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   228          etharp_request(arp_table[i].netif, &arp_table[i].ipaddr);
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L607:
	addsc.a	a15,a15,d15,#0
.L608:
	ld.a	a4,[a15]8
.L609:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L610:
	addsc.a	a5,a15,d15,#0
.L611:
	add.a	a5,#4
	call	etharp_request
.L16:
.L15:
.L13:
.L11:
.L7:
	add	d8,#1
.L5:
	jlt	d8,d12,.L6
.L612:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   229        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   230      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   231    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   232  }
	ret
.L251:
	
__etharp_tmr_function_end:
	.size	etharp_tmr,__etharp_tmr_function_end-etharp_tmr
.L176:
	; End of function
	
	.sdecl	'.text.etharp.etharp_find_entry',code,cluster('etharp_find_entry')
	.sect	'.text.etharp.etharp_find_entry'
	.align	2
	

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   233  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   234  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   235   * Search the ARP table for a matching or new entry.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   236   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   237   * If an IP address is given, return a pending or stable ARP entry that matches
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   238   * the address. If no match is found, create a new entry with this address set,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   239   * but in state ETHARP_EMPTY. The caller must check and possibly change the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   240   * state of the returned entry.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   241   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   242   * If ipaddr is NULL, return a initialized new entry in state ETHARP_EMPTY.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   243   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   244   * In all cases, attempt to create new entries from an empty entry. If no
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   245   * empty entries are available and ETHARP_FLAG_TRY_HARD flag is set, recycle
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   246   * old entries. Heuristic choose the least important entry for recycling.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   247   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   248   * @param ipaddr IP address to find in ARP cache, or to add if not found.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   249   * @param flags See @ref etharp_state
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   250   * @param netif netif related to this address (used for NETIF_HWADDRHINT)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   251   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   252   * @return The ARP entry index that matched or is created, ERR_MEM if no
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   253   * entry is found or could be recycled.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   254   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   255  static s16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   256  etharp_find_entry(const ip4_addr_t *ipaddr, u8_t flags, struct netif *netif)
; Function etharp_find_entry
.L145:
etharp_find_entry:	.type	func
	mov.aa	a12,a4
.L395:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   257  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   258    s16_t old_pending = ARP_TABLE_SIZE, old_stable = ARP_TABLE_SIZE;
	mov	d2,#10
.L396:
	mov	d3,d2
.L398:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   259    s16_t empty = ARP_TABLE_SIZE;
	mov	d5,d2
.L399:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   260    s16_t i = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   261    /* oldest entry with packets on queue */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   262    s16_t old_queue = ARP_TABLE_SIZE;
	mov	d6,d2
.L400:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   263    /* its age */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   264    u16_t age_queue = 0, age_pending = 0, age_stable = 0;
	mov	d7,#0
.L401:
	mov	d9,d7
.L402:
	mov	d10,d7
.L403:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   265  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   266    LWIP_UNUSED_ARG(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   267  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   268    /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   269     * a) do a search through the cache, remember candidates
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   270     * b) select candidate entry
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   271     * c) create new entry
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   272     */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   273  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   274    /* a) in a single search sweep, do all of this
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   275     * 1) remember the first empty entry (if any)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   276     * 2) remember the oldest stable entry (if any)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   277     * 3) remember the oldest pending entry without queued packets (if any)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   278     * 4) remember the oldest pending entry with queued packets (if any)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   279     * 5) search for a matching IP entry, either pending or stable
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   280     *    until 5 matches, or all entries are searched for.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   281     */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   282  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   283    for (i = 0; i < ARP_TABLE_SIZE; ++i) {
	mov	d8,d7
.L369:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   284      u8_t state = arp_table[i].state;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   285      /* no empty entry found yet and now we do find one? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   286      if ((empty == ARP_TABLE_SIZE) && (state == ETHARP_STATE_EMPTY)) {
	mov	d11,d2
.L370:
	mov	d12,d2
.L404:
	j	.L17
.L18:
	mul	d15,d8,#24
.L868:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L869:
	addsc.a	a15,a15,d15,#0
.L870:
	ld.bu	d15,[a15]20
.L405:
	jne	d5,d11,.L19
.L406:
	jne	d15,#0,.L20
.L871:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   287        LWIP_DEBUGF(ETHARP_DEBUG, ("etharp_find_entry: found empty entry %d\n", (int)i));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   288        /* remember first empty entry */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   289        empty = i;
	mov	d5,d8
.L872:
	j	.L21
.L20:
.L19:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   290      } else if (state != ETHARP_STATE_EMPTY) {
	jeq	d15,#0,.L22
.L873:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   291        LWIP_ASSERT("state == ETHARP_STATE_PENDING || state >= ETHARP_STATE_STABLE",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   292                    state == ETHARP_STATE_PENDING || state >= ETHARP_STATE_STABLE);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   293        /* if given, does IP address match IP address in ARP entry? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   294        if (ipaddr && ip4_addr_cmp(ipaddr, &arp_table[i].ipaddr)
	jz.a	a12,.L23
.L874:
	ld.w	d0,[a12]
	mul	d1,d8,#24
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
	addsc.a	a15,a15,d1,#0
	ld.w	d1,[a15]4
	jeq	d0,d1,.L24

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   295  #if ETHARP_TABLE_MATCH_NETIF
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   296            && ((netif == NULL) || (netif == arp_table[i].netif))
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   297  #endif /* ETHARP_TABLE_MATCH_NETIF */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   298           ) {
.L23:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   299          LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_find_entry: found matching entry %d\n", (int)i));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   300          /* found exact IP address match, simply bail out */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   301          return i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   302        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   303        /* pending entry? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   304        if (state == ETHARP_STATE_PENDING) {
	jne	d15,#1,.L25
.L875:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   305          /* pending with queued packets? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   306          if (arp_table[i].q != NULL) {
	mul	d15,d8,#24
.L407:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L876:
	addsc.a	a15,a15,d15,#0
.L877:
	ld.w	d0,[a15]
.L878:
	jeq	d0,#0,.L26
.L879:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   307            if (arp_table[i].ctime >= age_queue) {
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L880:
	addsc.a	a15,a15,d15,#0
.L881:
	ld.hu	d0,[a15]18
.L882:
	jlt.u	d0,d7,.L27
.L883:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   308              old_queue = i;
	mov	d6,d8
.L884:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   309              age_queue = arp_table[i].ctime;
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L885:
	addsc.a	a15,a15,d15,#0
.L886:
	ld.hu	d7,[a15]18
.L887:
	j	.L28
.L26:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   310            }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   311          } else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   312            /* pending without queued packets? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   313          {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   314            if (arp_table[i].ctime >= age_pending) {
	mul	d15,d8,#24
.L888:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L889:
	addsc.a	a15,a15,d15,#0
.L890:
	ld.hu	d0,[a15]18
.L891:
	jlt.u	d0,d9,.L29
.L892:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   315              old_pending = i;
	mov	d2,d8
.L893:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   316              age_pending = arp_table[i].ctime;
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L894:
	addsc.a	a15,a15,d15,#0
.L895:
	ld.hu	d9,[a15]18
.L896:
	j	.L30
.L25:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   317            }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   318          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   319          /* stable entry? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   320        } else if (state >= ETHARP_STATE_STABLE) {
	jlt.u	d15,#2,.L31
.L897:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   321  #if ETHARP_SUPPORT_STATIC_ENTRIES
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   322          /* don't record old_stable for static entries since they never expire */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   323          if (state < ETHARP_STATE_STATIC)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   324  #endif /* ETHARP_SUPPORT_STATIC_ENTRIES */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   325          {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   326            /* remember entry with oldest stable entry in oldest, its age in maxtime */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   327            if (arp_table[i].ctime >= age_stable) {
	mul	d15,d8,#24
.L408:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L898:
	addsc.a	a15,a15,d15,#0
.L899:
	ld.hu	d0,[a15]18
.L900:
	jlt.u	d0,d10,.L32
.L901:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   328              old_stable = i;
	mov	d3,d8
.L902:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   329              age_stable = arp_table[i].ctime;
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L903:
	addsc.a	a15,a15,d15,#0
.L904:
	ld.hu	d10,[a15]18
.L32:
.L31:
.L30:
.L29:
.L28:
.L27:
.L22:
.L21:
	add	d8,#1
.L17:
	jlt	d8,d12,.L18
.L409:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   330            }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   331          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   332        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   333      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   334    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   335    /* { we have no match } => try to create a new entry */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   336  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   337    /* don't create new entry, only search? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   338    if (((flags & ETHARP_FLAG_FIND_ONLY) != 0) ||
	jnz.t	d4:1,.L33
.L410:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   339        /* or no empty entry found and not allowed to recycle? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   340        ((empty == ARP_TABLE_SIZE) && ((flags & ETHARP_FLAG_TRY_HARD) == 0))) {
	jne	d5,d12,.L34
.L411:
	jz.t	d4:0,.L35
.L34:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   341      LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_find_entry: no empty entry found and not allowed to recycle\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   342      return (s16_t)ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   343    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   344  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   345    /* b) choose the least destructive entry to recycle:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   346     * 1) empty entry
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   347     * 2) oldest stable entry
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   348     * 3) oldest pending entry without queued packets
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   349     * 4) oldest pending entry with queued packets
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   350     *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   351     * { ETHARP_FLAG_TRY_HARD is set at this point }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   352     */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   353  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   354    /* 1) empty entry available? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   355    if (empty < ARP_TABLE_SIZE) {
	mov	d15,#10
.L905:
	jge	d5,d15,.L36
.L906:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   356      i = empty;
	mov	d8,d5
.L907:
	j	.L37
.L36:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   357      LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_find_entry: selecting empty entry %d\n", (int)i));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   358    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   359      /* 2) found recyclable stable entry? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   360      if (old_stable < ARP_TABLE_SIZE) {
	jge	d3,d15,.L38
.L908:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   361        /* recycle oldest stable*/
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   362        i = old_stable;
	mov	d8,d3
.L909:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   363        LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_find_entry: selecting oldest stable entry %d\n", (int)i));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   364        /* no queued packets should exist on stable entries */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   365        LWIP_ASSERT("arp_table[i].q == NULL", arp_table[i].q == NULL);
	j	.L39
.L38:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   366        /* 3) found recyclable pending entry without queued packets? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   367      } else if (old_pending < ARP_TABLE_SIZE) {
	jge	d2,d15,.L40
.L910:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   368        /* recycle oldest pending */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   369        i = old_pending;
	mov	d8,d2
.L911:
	j	.L41
.L40:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   370        LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_find_entry: selecting oldest pending entry %d (without queue)\n", (int)i));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   371        /* 4) found recyclable pending entry with queued packets? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   372      } else if (old_queue < ARP_TABLE_SIZE) {
	jge	d6,d15,.L42
.L912:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   373        /* recycle oldest pending (queued packets are free in etharp_free_entry) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   374        i = old_queue;
	mov	d8,d6
.L913:
	j	.L43
.L42:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   375        LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_find_entry: selecting oldest pending entry %d, freeing packet queue %p\n", (int)i, (void *)(arp_table[i].q)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   376        /* no empty or recyclable entries found */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   377      } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   378        LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_find_entry: no empty or recyclable entries found\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   379        return (s16_t)ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   380      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   381  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   382      /* { empty or recyclable entry found } */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   383      LWIP_ASSERT("i < ARP_TABLE_SIZE", i < ARP_TABLE_SIZE);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   384      etharp_free_entry(i);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   385    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   386  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   387    LWIP_ASSERT("i < ARP_TABLE_SIZE", i < ARP_TABLE_SIZE);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   388    LWIP_ASSERT("arp_table[i].state == ETHARP_STATE_EMPTY",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   389                arp_table[i].state == ETHARP_STATE_EMPTY);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   390  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   391    /* IP address given? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   392    if (ipaddr != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   393      /* set IP address */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   394      ip4_addr_copy(arp_table[i].ipaddr, *ipaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   395    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   396    arp_table[i].ctime = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   397  #if ETHARP_TABLE_MATCH_NETIF
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   398    arp_table[i].netif = netif;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   399  #endif /* ETHARP_TABLE_MATCH_NETIF */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   400    return (s16_t)i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   401  }
.L35:
.L33:
	mov	d2,#-1
.L397:
	ret
.L43:
.L41:
.L39:
	mov	d4,d8
.L394:
	call	etharp_free_entry
.L37:
	jz.a	a12,.L45
.L914:
	mul	d15,d8,#24
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a12]
	st.w	[a15]4,d15
.L45:
	mul	d15,d8,#24
.L915:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L916:
	addsc.a	a15,a15,d15,#0
.L917:
	mov	d15,#0
.L918:
	st.h	[a15]18,d15
.L24:
	mov	d2,d8
.L412:
	ret
.L355:
	
__etharp_find_entry_function_end:
	.size	etharp_find_entry,__etharp_find_entry_function_end-etharp_find_entry
.L236:
	; End of function
	
	.sdecl	'.text.etharp.etharp_update_arp_entry',code,cluster('etharp_update_arp_entry')
	.sect	'.text.etharp.etharp_update_arp_entry'
	.align	2
	

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   402  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   403  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   404   * Update (or insert) a IP/MAC address pair in the ARP cache.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   405   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   406   * If a pending entry is resolved, any queued packets will be sent
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   407   * at this point.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   408   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   409   * @param netif netif related to this entry (used for NETIF_ADDRHINT)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   410   * @param ipaddr IP address of the inserted ARP entry.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   411   * @param ethaddr Ethernet address of the inserted ARP entry.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   412   * @param flags See @ref etharp_state
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   413   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   414   * @return
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   415   * - ERR_OK Successfully updated ARP cache.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   416   * - ERR_MEM If we could not add a new ARP entry when ETHARP_FLAG_TRY_HARD was set.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   417   * - ERR_ARG Non-unicast address given, those will not appear in ARP cache.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   418   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   419   * @see pbuf_free()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   420   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   421  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   422  etharp_update_arp_entry(struct netif *netif, const ip4_addr_t *ipaddr, struct eth_addr *ethaddr, u8_t flags)
; Function etharp_update_arp_entry
.L147:
etharp_update_arp_entry:	.type	func
	mov.aa	a13,a4
.L415:
	mov.aa	a12,a5
.L416:
	mov.aa	a14,a6
.L417:
	mov	d8,d4
.L418:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   423  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   424    s16_t i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   425    LWIP_ASSERT("netif->hwaddr_len == ETH_HWADDR_LEN", netif->hwaddr_len == ETH_HWADDR_LEN);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   426    LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_update_arp_entry: %"U16_F".%"U16_F".%"U16_F".%"U16_F" - %02"X16_F":%02"X16_F":%02"X16_F":%02"X16_F":%02"X16_F":%02"X16_F"\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   427                ip4_addr1_16(ipaddr), ip4_addr2_16(ipaddr), ip4_addr3_16(ipaddr), ip4_addr4_16(ipaddr),
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   428                (u16_t)ethaddr->addr[0], (u16_t)ethaddr->addr[1], (u16_t)ethaddr->addr[2],
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   429                (u16_t)ethaddr->addr[3], (u16_t)ethaddr->addr[4], (u16_t)ethaddr->addr[5]));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   430    /* non-unicast address? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   431    if (ip4_addr_isany(ipaddr) ||
	jz.a	a12,.L47
.L923:
	ld.w	d4,[a12]
.L414:
	jeq	d4,#0,.L48
.L924:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   432        ip4_addr_isbroadcast(ipaddr, netif) ||
	call	ip4_addr_isbroadcast_u32
.L413:
	jne	d2,#0,.L49
.L925:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   433        ip4_addr_ismulticast(ipaddr)) {
	ld.w	d15,[a12]
	and	d15,#240
	mov	d0,#224
	jne	d15,d0,.L50
.L49:
.L48:
.L47:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   434      LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_update_arp_entry: will not add non-unicast IP address to ARP cache\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   435      return ERR_ARG;
	mov	d2,#-16
.L926:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   436    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   437    /* find or create ARP entry */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   438    i = etharp_find_entry(ipaddr, flags, netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   439    /* bail out if no entry could be found */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   440    if (i < 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   441      return (err_t)i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   442    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   443  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   444  #if ETHARP_SUPPORT_STATIC_ENTRIES
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   445    if (flags & ETHARP_FLAG_STATIC_ENTRY) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   446      /* record static type */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   447      arp_table[i].state = ETHARP_STATE_STATIC;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   448    } else if (arp_table[i].state == ETHARP_STATE_STATIC) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   449      /* found entry is a static type, don't overwrite it */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   450      return ERR_VAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   451    } else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   452  #endif /* ETHARP_SUPPORT_STATIC_ENTRIES */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   453    {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   454      /* mark it stable */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   455      arp_table[i].state = ETHARP_STATE_STABLE;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   456    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   457  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   458    /* record network interface */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   459    arp_table[i].netif = netif;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   460    /* insert in SNMP ARP index tree */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   461    mib2_add_arp_entry(netif, &arp_table[i].ipaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   462  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   463    LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_update_arp_entry: updating stable entry %"S16_F"\n", i));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   464    /* update address */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   465    SMEMCPY(&arp_table[i].ethaddr, ethaddr, ETH_HWADDR_LEN);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   466    /* reset time stamp */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   467    arp_table[i].ctime = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   468    /* this is where we will send out queued packets! */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   469  #if ARP_QUEUEING
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   470    while (arp_table[i].q != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   471      struct pbuf *p;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   472      /* remember remainder of queue */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   473      struct etharp_q_entry *q = arp_table[i].q;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   474      /* pop first item off the queue */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   475      arp_table[i].q = q->next;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   476      /* get the packet pointer */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   477      p = q->p;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   478      /* now queue entry can be freed */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   479      memp_free(MEMP_ARP_QUEUE, q);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   480  #else /* ARP_QUEUEING */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   481    if (arp_table[i].q != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   482      struct pbuf *p = arp_table[i].q;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   483      arp_table[i].q = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   484  #endif /* ARP_QUEUEING */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   485      /* send the queued IP packet */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   486      ethernet_output(netif, p, (struct eth_addr *)(netif->hwaddr), ethaddr, ETHTYPE_IP);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   487      /* free the queued IP packet */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   488      pbuf_free(p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   489    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   490    return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   491  }
	ret
.L50:
	mov.aa	a4,a12
.L420:
	mov	d4,d8
.L422:
	mov.aa	a5,a13
.L423:
	call	etharp_find_entry
.L421:
	mov	d8,d2
.L419:
	jge	d8,#0,.L52
.L927:
	extr	d2,d8,#0,#8
.L424:
	ret
.L52:
	mul	d15,d8,#24
.L928:
	movh.a	a2,#@his(arp_table)
	lea	a2,[a2]@los(arp_table)
.L929:
	addsc.a	a15,a2,d15,#0
.L930:
	mov	d0,#2
.L931:
	st.b	[a15]20,d0
.L932:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L933:
	addsc.a	a15,a15,d15,#0
.L934:
	st.a	[a15]8,a13
.L935:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
	addsc.a	a15,a15,d15,#0
	lea	a4,[a15]12
	mov	d4,#6
	mov.aa	a5,a14
.L426:
	call	memcpy
.L425:
	mul	d15,d8,#24
.L936:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L937:
	addsc.a	a15,a15,d15,#0
.L938:
	mov	d15,#0
.L939:
	st.h	[a15]18,d15
.L940:
	j	.L54
.L55:
	mul	d15,d8,#24
.L941:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L942:
	addsc.a	a15,a15,d15,#0
.L943:
	ld.a	a4,[a15]
.L427:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L944:
	addsc.a	a15,a15,d15,#0
.L945:
	ld.a	a2,[a4]
.L946:
	st.a	[a15],a2
.L947:
	ld.a	a15,[a4]4
.L429:
	mov	d4,#4
.L948:
	call	memp_free
.L428:
	lea	a6,[a13]38
.L949:
	mov	d4,#2048
	mov.aa	a4,a13
.L430:
	mov.aa	a5,a15
.L432:
	mov.aa	a7,a14
.L433:
	call	ethernet_output
.L431:
	mov.aa	a4,a15
.L434:
	call	pbuf_free
.L54:
	mul	d15,d8,#24
.L950:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L951:
	addsc.a	a15,a15,d15,#0
.L952:
	ld.w	d15,[a15]
.L953:
	jne	d15,#0,.L55
.L954:
	mov	d2,#0
.L955:
	ret
.L372:
	
__etharp_update_arp_entry_function_end:
	.size	etharp_update_arp_entry,__etharp_update_arp_entry_function_end-etharp_update_arp_entry
.L241:
	; End of function
	
	.sdecl	'.text.etharp.etharp_cleanup_netif',code,cluster('etharp_cleanup_netif')
	.sect	'.text.etharp.etharp_cleanup_netif'
	.align	2
	
	.global	etharp_cleanup_netif

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   492  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   493  #if ETHARP_SUPPORT_STATIC_ENTRIES
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   494  /** Add a new static entry to the ARP table. If an entry exists for the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   495   * specified IP address, this entry is overwritten.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   496   * If packets are queued for the specified IP address, they are sent out.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   497   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   498   * @param ipaddr IP address for the new static entry
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   499   * @param ethaddr ethernet address for the new static entry
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   500   * @return See return values of etharp_add_static_entry
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   501   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   502  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   503  etharp_add_static_entry(const ip4_addr_t *ipaddr, struct eth_addr *ethaddr)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   504  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   505    struct netif *netif;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   506    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   507    LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_add_static_entry: %"U16_F".%"U16_F".%"U16_F".%"U16_F" - %02"X16_F":%02"X16_F":%02"X16_F":%02"X16_F":%02"X16_F":%02"X16_F"\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   508                ip4_addr1_16(ipaddr), ip4_addr2_16(ipaddr), ip4_addr3_16(ipaddr), ip4_addr4_16(ipaddr),
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   509                (u16_t)ethaddr->addr[0], (u16_t)ethaddr->addr[1], (u16_t)ethaddr->addr[2],
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   510                (u16_t)ethaddr->addr[3], (u16_t)ethaddr->addr[4], (u16_t)ethaddr->addr[5]));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   511  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   512    netif = ip4_route(ipaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   513    if (netif == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   514      return ERR_RTE;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   515    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   516  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   517    return etharp_update_arp_entry(netif, ipaddr, ethaddr, ETHARP_FLAG_TRY_HARD | ETHARP_FLAG_STATIC_ENTRY);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   518  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   519  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   520  /** Remove a static entry from the ARP table previously added with a call to
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   521   * etharp_add_static_entry.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   522   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   523   * @param ipaddr IP address of the static entry to remove
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   524   * @return ERR_OK: entry removed
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   525   *         ERR_MEM: entry wasn't found
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   526   *         ERR_ARG: entry wasn't a static entry but a dynamic one
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   527   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   528  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   529  etharp_remove_static_entry(const ip4_addr_t *ipaddr)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   530  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   531    s16_t i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   532    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   533    LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_remove_static_entry: %"U16_F".%"U16_F".%"U16_F".%"U16_F"\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   534                ip4_addr1_16(ipaddr), ip4_addr2_16(ipaddr), ip4_addr3_16(ipaddr), ip4_addr4_16(ipaddr)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   535  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   536    /* find or create ARP entry */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   537    i = etharp_find_entry(ipaddr, ETHARP_FLAG_FIND_ONLY, NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   538    /* bail out if no entry could be found */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   539    if (i < 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   540      return (err_t)i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   541    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   542  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   543    if (arp_table[i].state != ETHARP_STATE_STATIC) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   544      /* entry wasn't a static entry, cannot remove it */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   545      return ERR_ARG;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   546    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   547    /* entry found, free it */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   548    etharp_free_entry(i);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   549    return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   550  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   551  #endif /* ETHARP_SUPPORT_STATIC_ENTRIES */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   552  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   553  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   554   * Remove all ARP table entries of the specified netif.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   555   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   556   * @param netif points to a network interface
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   557   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   558  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   559  etharp_cleanup_netif(struct netif *netif)
; Function etharp_cleanup_netif
.L149:
etharp_cleanup_netif:	.type	func
	mov.aa	a12,a4
.L435:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   560  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   561    int i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   562  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   563    for (i = 0; i < ARP_TABLE_SIZE; ++i) {
	mov	d8,#0
.L436:
	mov	d9,#10
.L771:
	j	.L57
.L58:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   564      u8_t state = arp_table[i].state;
	mul	d15,d8,#24
.L772:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L773:
	addsc.a	a15,a15,d15,#0
.L774:
	ld.bu	d0,[a15]20
.L437:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   565      if ((state != ETHARP_STATE_EMPTY) && (arp_table[i].netif == netif)) {
	jeq	d0,#0,.L59
.L775:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L776:
	addsc.a	a15,a15,d15,#0
.L777:
	ld.a	a15,[a15]8
.L778:
	jne.a	a15,a12,.L60
.L779:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   566        etharp_free_entry(i);
	mov	d4,d8
.L438:
	call	etharp_free_entry
.L60:
.L59:
	add	d8,#1
.L57:
	jlt	d8,d9,.L58
.L780:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   567      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   568    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   569  }
	ret
.L320:
	
__etharp_cleanup_netif_function_end:
	.size	etharp_cleanup_netif,__etharp_cleanup_netif_function_end-etharp_cleanup_netif
.L206:
	; End of function
	
	.sdecl	'.text.etharp.etharp_find_addr',code,cluster('etharp_find_addr')
	.sect	'.text.etharp.etharp_find_addr'
	.align	2
	
	.global	etharp_find_addr

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   570  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   571  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   572   * Finds (stable) ethernet/IP address pair from ARP table
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   573   * using interface and IP address index.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   574   * @note the addresses in the ARP table are in network order!
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   575   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   576   * @param netif points to interface index
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   577   * @param ipaddr points to the (network order) IP address index
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   578   * @param eth_ret points to return pointer
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   579   * @param ip_ret points to return pointer
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   580   * @return table index if found, -1 otherwise
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   581   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   582  ssize_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   583  etharp_find_addr(struct netif *netif, const ip4_addr_t *ipaddr,
; Function etharp_find_addr
.L151:
etharp_find_addr:	.type	func
	mov.aa	a15,a4
.L442:
	mov.aa	a12,a6
.L444:
	mov.aa	a13,a7
.L445:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   584                   struct eth_addr **eth_ret, const ip4_addr_t **ip_ret)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   585  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   586    s16_t i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   587  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   588    LWIP_ASSERT("eth_ret != NULL && ip_ret != NULL",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   589                eth_ret != NULL && ip_ret != NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   590  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   591    LWIP_UNUSED_ARG(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   592  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   593    i = etharp_find_entry(ipaddr, ETHARP_FLAG_FIND_ONLY, netif);
	mov	d4,#2
.L617:
	mov.aa	a4,a5
.L441:
	mov.aa	a5,a15
.L440:
	call	etharp_find_entry
.L439:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   594    if ((i >= 0) && (arp_table[i].state >= ETHARP_STATE_STABLE)) {
	jlt	d2,#0,.L61
.L618:
	mul	d15,d2,#24
.L619:
	movh.a	a15,#@his(arp_table)
.L443:
	lea	a15,[a15]@los(arp_table)
.L620:
	addsc.a	a15,a15,d15,#0
.L621:
	ld.bu	d0,[a15]20
.L622:
	jlt.u	d0,#2,.L62
.L623:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   595      *eth_ret = &arp_table[i].ethaddr;
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L624:
	addsc.a	a15,a15,d15,#0
.L625:
	lea	a15,[a15]12
.L626:
	st.a	[a12],a15
.L627:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   596      *ip_ret = &arp_table[i].ipaddr;
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L628:
	addsc.a	a15,a15,d15,#0
.L629:
	add.a	a15,#4
.L630:
	st.a	[a13],a15
.L631:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   597      return i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   598    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   599    return -1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   600  }
	ret
.L62:
.L61:
	mov	d2,#-1
.L446:
	ret
.L259:
	
__etharp_find_addr_function_end:
	.size	etharp_find_addr,__etharp_find_addr_function_end-etharp_find_addr
.L181:
	; End of function
	
	.sdecl	'.text.etharp.etharp_get_entry',code,cluster('etharp_get_entry')
	.sect	'.text.etharp.etharp_get_entry'
	.align	2
	
	.global	etharp_get_entry

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   601  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   602  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   603   * Possibility to iterate over stable ARP table entries
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   604   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   605   * @param i entry number, 0 to ARP_TABLE_SIZE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   606   * @param ipaddr return value: IP address
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   607   * @param netif return value: points to interface
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   608   * @param eth_ret return value: ETH address
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   609   * @return 1 on valid index, 0 otherwise
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   610   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   611  int
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   612  etharp_get_entry(size_t i, ip4_addr_t **ipaddr, struct netif **netif, struct eth_addr **eth_ret)
; Function etharp_get_entry
.L153:
etharp_get_entry:	.type	func

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   613  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   614    LWIP_ASSERT("ipaddr != NULL", ipaddr != NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   615    LWIP_ASSERT("netif != NULL", netif != NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   616    LWIP_ASSERT("eth_ret != NULL", eth_ret != NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   617  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   618    if ((i < ARP_TABLE_SIZE) && (arp_table[i].state >= ETHARP_STATE_STABLE)) {
	jge.u	d4,#10,.L65
.L636:
	mul	d15,d4,#24
.L637:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L638:
	addsc.a	a15,a15,d15,#0
.L639:
	ld.bu	d0,[a15]20
.L640:
	jlt.u	d0,#2,.L66
.L641:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   619      *ipaddr  = &arp_table[i].ipaddr;
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L642:
	addsc.a	a15,a15,d15,#0
.L643:
	add.a	a15,#4
.L644:
	st.a	[a4],a15
.L645:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   620      *netif   = arp_table[i].netif;
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L646:
	addsc.a	a15,a15,d15,#0
.L647:
	ld.a	a15,[a15]8
.L648:
	st.a	[a5],a15
.L649:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   621      *eth_ret = &arp_table[i].ethaddr;
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L650:
	addsc.a	a15,a15,d15,#0
.L651:
	lea	a15,[a15]12
.L652:
	st.a	[a6],a15
.L653:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   622      return 1;
	mov	d2,#1
.L654:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   623    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   624      return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   625    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   626  }
	ret
.L66:
.L65:
	mov	d2,#0
.L655:
	ret
.L270:
	
__etharp_get_entry_function_end:
	.size	etharp_get_entry,__etharp_get_entry_function_end-etharp_get_entry
.L186:
	; End of function
	
	.sdecl	'.text.etharp.etharp_input',code,cluster('etharp_input')
	.sect	'.text.etharp.etharp_input'
	.align	2
	
	.global	etharp_input

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   627  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   628  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   629   * Responds to ARP requests to us. Upon ARP replies to us, add entry to cache
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   630   * send out queued IP packets. Updates cache with snooped address pairs.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   631   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   632   * Should be called for incoming ARP packets. The pbuf in the argument
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   633   * is freed by this function.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   634   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   635   * @param p The ARP packet that arrived on netif. Is freed by this function.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   636   * @param netif The lwIP network interface on which the ARP packet pbuf arrived.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   637   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   638   * @see pbuf_free()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   639   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   640  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   641  etharp_input(struct pbuf *p, struct netif *netif)
; Function etharp_input
.L155:
etharp_input:	.type	func
	sub.a	a10,#24
.L447:
	mov.aa	a12,a4
.L450:
	mov.aa	a13,a5
.L451:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   642  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   643    struct etharp_hdr *hdr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   644    /* these are aligned properly, whereas the ARP header fields might not be */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   645    ip4_addr_t sipaddr, dipaddr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   646    u8_t for_us;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   647  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   648    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   649  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   650    LWIP_ERROR("netif != NULL", (netif != NULL), return;);
	jz.a	a13,.L69
.L785:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   651  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   652    hdr = (struct etharp_hdr *)p->payload;
	ld.a	a14,[a12]4
.L452:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   653  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   654    /* RFC 826 "Packet Reception": */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   655    if ((hdr->hwtype != PP_HTONS(LWIP_IANA_HWTYPE_ETHERNET)) ||
	ld.hu	d15,[a14]0
.L786:
	mov	d0,#256
.L787:
	jne	d15,d0,.L70
.L788:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   656        (hdr->hwlen != ETH_HWADDR_LEN) ||
	ld.bu	d15,[a14]4
.L789:
	jne	d15,#6,.L71
.L790:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   657        (hdr->protolen != sizeof(ip4_addr_t)) ||
	ld.bu	d15,[a14]5
.L791:
	jne	d15,#4,.L72
.L792:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   658        (hdr->proto != PP_HTONS(ETHTYPE_IP)))  {
	ld.hu	d0,[a14]2
.L793:
	mov	d15,#8
.L794:
	jne	d15,d0,.L73
.L795:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   659      LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_WARNING,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   660                  ("etharp_input: packet dropped, wrong hw type, hwlen, proto, protolen or ethernet type (%"U16_F"/%"U16_F"/%"U16_F"/%"U16_F")\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   661                   hdr->hwtype, (u16_t)hdr->hwlen, hdr->proto, (u16_t)hdr->protolen));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   662      ETHARP_STATS_INC(etharp.proterr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   663      ETHARP_STATS_INC(etharp.drop);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   664      pbuf_free(p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   665      return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   666    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   667    ETHARP_STATS_INC(etharp.recv);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   668  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   669  #if LWIP_AUTOIP
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   670    /* We have to check if a host already has configured our random
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   671     * created link local address and continuously check if there is
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   672     * a host with this IP-address so we can detect collisions */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   673    autoip_arp_reply(netif, hdr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   674  #endif /* LWIP_AUTOIP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   675  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   676    /* Copy struct ip4_addr_wordaligned to aligned ip4_addr, to support compilers without
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   677     * structure packing (not using structure copy which breaks strict-aliasing rules). */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   678    IPADDR_WORDALIGNED_COPY_TO_IP4_ADDR_T(&sipaddr, &hdr->sipaddr);
	lea	a4,[a10]12
.L449:
	lea	a5,[a14]14
.L448:
	mov	d4,#4
	call	memcpy
.L796:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   679    IPADDR_WORDALIGNED_COPY_TO_IP4_ADDR_T(&dipaddr, &hdr->dipaddr);
	lea	a4,[a10]16
	lea	a5,[a14]24
	mov	d4,#4
	call	memcpy
.L797:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   680  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   681    /* this interface is not configured? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   682    if (ip4_addr_isany_val(*netif_ip4_addr(netif))) {
	ld.w	d15,[a13]4
.L798:
	jne	d15,#0,.L74
.L799:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   683      for_us = 0;
	mov	d8,#0
.L453:
	j	.L75

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   684    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   685      /* ARP packet directed to us? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   686      for_us = (u8_t)ip4_addr_cmp(&dipaddr, netif_ip4_addr(netif));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   687    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   688  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   689    /* ARP message directed to us?
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   690        -> add IP address in ARP cache; assume requester wants to talk to us,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   691           can result in directly sending the queued packets for this host.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   692       ARP message not directed to us?
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   693        ->  update the source IP address in the cache, if present */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   694    etharp_update_arp_entry(netif, &sipaddr, &(hdr->shwaddr),
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   695                            for_us ? ETHARP_FLAG_TRY_HARD : ETHARP_FLAG_FIND_ONLY);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   696  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   697    /* now act on the message itself */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   698    switch (hdr->opcode) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   699      /* ARP request? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   700      case PP_HTONS(ARP_REQUEST):
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   701        /* ARP request. If it asked for our address, we send out a
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   702         * reply. In any case, we time-stamp any existing ARP entry,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   703         * and possibly send out an IP packet that was queued on it. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   704  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   705        LWIP_DEBUGF (ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_input: incoming ARP request\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   706        /* ARP request for our address? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   707        if (for_us) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   708          /* send ARP response */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   709          etharp_raw(netif,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   710                     (struct eth_addr *)netif->hwaddr, &hdr->shwaddr,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   711                     (struct eth_addr *)netif->hwaddr, netif_ip4_addr(netif),
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   712                     &hdr->shwaddr, &sipaddr,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   713                     ARP_REPLY);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   714          /* we are not configured? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   715        } else if (ip4_addr_isany_val(*netif_ip4_addr(netif))) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   716          /* { for_us == 0 and netif->ip_addr.addr == 0 } */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   717          LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_input: we are unconfigured, ARP request ignored.\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   718          /* request was not directed to us */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   719        } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   720          /* { for_us == 0 and netif->ip_addr.addr != 0 } */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   721          LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_input: ARP request was not for us.\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   722        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   723        break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   724      case PP_HTONS(ARP_REPLY):
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   725        /* ARP reply. We already updated the ARP cache earlier. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   726        LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_input: incoming ARP reply\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   727  #if (LWIP_DHCP && DHCP_DOES_ARP_CHECK)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   728        /* DHCP wants to know about ARP replies from any host with an
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   729         * IP address also offered to us by the DHCP server. We do not
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   730         * want to take a duplicate IP address on a single network.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   731         * @todo How should we handle redundant (fail-over) interfaces? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   732        dhcp_arp_reply(netif, &sipaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   733  #endif /* (LWIP_DHCP && DHCP_DOES_ARP_CHECK) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   734        break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   735      default:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   736        LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_input: ARP unknown opcode type %"S16_F"\n", lwip_htons(hdr->opcode)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   737        ETHARP_STATS_INC(etharp.err);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   738        break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   739    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   740    /* free ARP packet */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   741    pbuf_free(p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   742  }
.L69:
	ret
.L74:
	ld.w	d15,[a10]16
	ld.w	d0,[a13]4
	eq	d8,d15,d0
.L75:
	eq	d15,d8,#0
	add	d4,d15,#1
.L800:
	lea	a5,[a10]12
.L801:
	lea	a6,[a14]8
.L802:
	mov.aa	a4,a13
.L454:
	call	etharp_update_arp_entry
.L455:
	ld.hu	d0,[a14]6
.L803:
	mov	d15,#256
.L804:
	jne	d15,d0,.L76
.L805:
	jeq	d8,#0,.L77
.L806:
	lea	a2,[a13]4
	st.a	[a10],a2
.L807:
	lea	a15,[a14]8
	st.a	[a10]4,a15
.L808:
	lea	a15,[a10]12
	st.a	[a10]8,a15
.L809:
	lea	a5,[a13]38
.L810:
	lea	a6,[a14]8
.L811:
	mov.aa	a7,a5
.L812:
	mov	d4,#2
	mov.aa	a4,a13
.L456:
	call	etharp_raw
.L77:
.L76:
.L73:
.L72:
.L71:
.L70:
	mov.aa	a4,a12
.L457:
	j	pbuf_free
.L324:
	
__etharp_input_function_end:
	.size	etharp_input,__etharp_input_function_end-etharp_input
.L211:
	; End of function
	
	.sdecl	'.text.etharp.etharp_output_to_arp_index',code,cluster('etharp_output_to_arp_index')
	.sect	'.text.etharp.etharp_output_to_arp_index'
	.align	2
	

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   743  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   744  /** Just a small helper function that sends a pbuf to an ethernet address
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   745   * in the arp_table specified by the index 'arp_idx'.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   746   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   747  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   748  etharp_output_to_arp_index(struct netif *netif, struct pbuf *q, netif_addr_idx_t arp_idx)
; Function etharp_output_to_arp_index
.L157:
etharp_output_to_arp_index:	.type	func
	mov.aa	a12,a4
.L460:
	mov.aa	a13,a5
.L461:
	mov	d8,d4
.L462:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   749  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   750    LWIP_ASSERT("arp_table[arp_idx].state >= ETHARP_STATE_STABLE",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   751                arp_table[arp_idx].state >= ETHARP_STATE_STABLE);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   752    /* if arp table entry is about to expire: re-request it,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   753       but only if its state is ETHARP_STATE_STABLE to prevent flooding the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   754       network with ARP requests if this address is used frequently. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   755    if (arp_table[arp_idx].state == ETHARP_STATE_STABLE) {
	mul	d15,d8,#24
.L960:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L961:
	addsc.a	a15,a15,d15,#0
.L962:
	ld.bu	d0,[a15]20
.L963:
	jne	d0,#2,.L78
.L964:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   756      if (arp_table[arp_idx].ctime >= ARP_AGE_REREQUEST_USED_BROADCAST) {
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L965:
	addsc.a	a15,a15,d15,#0
.L966:
	ld.hu	d0,[a15]18
.L967:
	mov	d1,#105
.L968:
	jlt.u	d0,d1,.L79
.L969:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   757        /* issue a standard request using broadcast */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   758        if (etharp_request(netif, &arp_table[arp_idx].ipaddr) == ERR_OK) {
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L970:
	addsc.a	a5,a15,d15,#0
.L459:
	add.a	a5,#4
	call	etharp_request
.L458:
	jne	d2,#0,.L80
.L971:
	j	.L81
.L79:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   759          arp_table[arp_idx].state = ETHARP_STATE_STABLE_REREQUESTING_1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   760        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   761      } else if (arp_table[arp_idx].ctime >= ARP_AGE_REREQUEST_USED_UNICAST) {
	mul	d15,d8,#24
.L972:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L973:
	addsc.a	a15,a15,d15,#0
.L974:
	ld.hu	d0,[a15]18
.L975:
	mov	d1,#90
.L976:
	jlt.u	d0,d1,.L82
.L977:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   762        /* issue a unicast request (for 15 seconds) to prevent unnecessary broadcast */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   763        if (etharp_request_dst(netif, &arp_table[arp_idx].ipaddr, &arp_table[arp_idx].ethaddr) == ERR_OK) {
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L978:
	addsc.a	a5,a15,d15,#0
.L464:
	add.a	a5,#4
.L979:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L980:
	addsc.a	a15,a15,d15,#0
.L981:
	lea	a6,[a15]12
	call	etharp_request_dst
.L463:
	jne	d2,#0,.L83
.L81:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   764          arp_table[arp_idx].state = ETHARP_STATE_STABLE_REREQUESTING_1;
	mul	d15,d8,#24
.L982:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L983:
	addsc.a	a15,a15,d15,#0
.L984:
	mov	d15,#3
.L985:
	st.b	[a15]20,d15
.L83:
.L82:
.L80:
.L78:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   765        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   766      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   767    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   768  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   769    return ethernet_output(netif, q, (struct eth_addr *)(netif->hwaddr), &arp_table[arp_idx].ethaddr, ETHTYPE_IP);
	lea	a6,[a12]38
.L986:
	mul	d15,d8,#24
.L987:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L988:
	addsc.a	a15,a15,d15,#0
.L989:
	lea	a7,[a15]12
.L990:
	mov	d4,#2048
	mov.aa	a4,a12
.L465:
	mov.aa	a5,a13
.L466:
	j	ethernet_output
.L380:
	
__etharp_output_to_arp_index_function_end:
	.size	etharp_output_to_arp_index,__etharp_output_to_arp_index_function_end-etharp_output_to_arp_index
.L246:
	; End of function
	
	.sdecl	'.text.etharp.etharp_output',code,cluster('etharp_output')
	.sect	'.text.etharp.etharp_output'
	.align	2
	
	.global	etharp_output

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   770  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   771  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   772  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   773   * Resolve and fill-in Ethernet address header for outgoing IP packet.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   774   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   775   * For IP multicast and broadcast, corresponding Ethernet addresses
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   776   * are selected and the packet is transmitted on the link.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   777   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   778   * For unicast addresses, the packet is submitted to etharp_query(). In
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   779   * case the IP address is outside the local network, the IP address of
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   780   * the gateway is used.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   781   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   782   * @param netif The lwIP network interface which the IP packet will be sent on.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   783   * @param q The pbuf(s) containing the IP packet to be sent.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   784   * @param ipaddr The IP address of the packet destination.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   785   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   786   * @return
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   787   * - ERR_RTE No route to destination (no gateway to external networks),
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   788   * or the return type of either etharp_query() or ethernet_output().
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   789   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   790  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   791  etharp_output(struct netif *netif, struct pbuf *q, const ip4_addr_t *ipaddr)
; Function etharp_output
.L159:
etharp_output:	.type	func
	sub.a	a10,#8
.L467:
	mov.aa	a12,a4
.L469:
	mov.aa	a13,a5
.L470:
	mov.aa	a14,a6
.L471:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   792  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   793    const struct eth_addr *dest;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   794    struct eth_addr mcastaddr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   795    const ip4_addr_t *dst_addr = ipaddr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   796  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   797    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   798    LWIP_ASSERT("netif != NULL", netif != NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   799    LWIP_ASSERT("q != NULL", q != NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   800    LWIP_ASSERT("ipaddr != NULL", ipaddr != NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   801  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   802    /* Determine on destination hardware address. Broadcasts and multicasts
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   803     * are special, other IP addresses are looked up in the ARP table. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   804  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   805    /* broadcast destination IP address? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   806    if (ip4_addr_isbroadcast(ipaddr, netif)) {
	ld.w	d4,[a14]
	call	ip4_addr_isbroadcast_u32
.L468:
	jeq	d2,#0,.L85
.L660:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   807      /* broadcast on Ethernet also */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   808      dest = (const struct eth_addr *)&ethbroadcast;
	movh.a	a7,#@his(ethbroadcast)
.L472:
	lea	a7,[a7]@los(ethbroadcast)
.L661:
	j	.L86
.L85:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   809      /* multicast destination IP address? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   810    } else if (ip4_addr_ismulticast(ipaddr)) {
	ld.w	d15,[a14]
	and	d15,#240
	mov	d0,#224
.L662:
	jne	d15,d0,.L87
.L663:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   811      /* Hash IP multicast address to MAC address.*/
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   812      mcastaddr.addr[0] = LL_IP4_MULTICAST_ADDR_0;
	mov	d15,#1
.L664:
	st.b	[a10],d15
.L665:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   813      mcastaddr.addr[1] = LL_IP4_MULTICAST_ADDR_1;
	mov	d15,#0
.L666:
	st.b	[a10]1,d15
.L667:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   814      mcastaddr.addr[2] = LL_IP4_MULTICAST_ADDR_2;
	mov	d15,#94
.L668:
	st.b	[a10]2,d15
.L669:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   815      mcastaddr.addr[3] = ip4_addr2(ipaddr) & 0x7f;
	ld.bu	d15,[a14]1
.L670:
	and	d15,#127
.L671:
	st.b	[a10]3,d15
.L672:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   816      mcastaddr.addr[4] = ip4_addr3(ipaddr);
	ld.bu	d15,[a14]2
.L673:
	st.b	[a10]4,d15
.L674:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   817      mcastaddr.addr[5] = ip4_addr4(ipaddr);
	ld.bu	d15,[a14]3
.L675:
	st.b	[a10]5,d15
.L473:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   818      /* destination Ethernet address is multicast */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   819      dest = &mcastaddr;
	mov.aa	a7,a10
.L474:
	j	.L88
.L87:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   820      /* unicast destination IP address? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   821    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   822      netif_addr_idx_t i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   823      /* outside local network? if so, this can neither be a global broadcast nor
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   824         a subnet broadcast. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   825      if (!ip4_addr_netcmp(ipaddr, netif_ip4_addr(netif), netif_ip4_netmask(netif)) &&
	ld.w	d0,[a14]
	ld.w	d1,[a12]8
	and	d2,d0,d1
	ld.w	d15,[a12]4
	and	d15,d1
	jeq	d15,d2,.L89
.L676:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   826          !ip4_addr_islinklocal(ipaddr)) {
	insert	d15,d0,#0,#16,#16
	mov.u	d0,#65193
	jeq	d15,d0,.L90
.L677:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   827  #if LWIP_AUTOIP
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   828        struct ip_hdr *iphdr = LWIP_ALIGNMENT_CAST(struct ip_hdr *, q->payload);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   829        /* According to RFC 3297, chapter 2.6.2 (Forwarding Rules), a packet with
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   830           a link-local source address must always be "directly to its destination
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   831           on the same physical link. The host MUST NOT send the packet to any
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   832           router for forwarding". */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   833        if (!ip4_addr_islinklocal(&iphdr->src))
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   834  #endif /* LWIP_AUTOIP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   835        {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   836  #ifdef LWIP_HOOK_ETHARP_GET_GW
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   837          /* For advanced routing, a single default gateway might not be enough, so get
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   838             the IP address of the gateway to handle the current destination address. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   839          dst_addr = LWIP_HOOK_ETHARP_GET_GW(netif, ipaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   840          if (dst_addr == NULL)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   841  #endif /* LWIP_HOOK_ETHARP_GET_GW */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   842          {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   843            /* interface has default gateway? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   844            if (!ip4_addr_isany_val(*netif_ip4_gw(netif))) {
	ld.w	d15,[a12]12
	jeq	d15,#0,.L91
.L678:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   845              /* send to hardware address of default gateway IP address */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   846              dst_addr = netif_ip4_gw(netif);
	lea	a14,[a12]12
.L679:
	j	.L92
.L91:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   847              /* no default gateway available */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   848            } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   849              /* no route to destination error (default gateway missing) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   850              return ERR_RTE;
	mov	d2,#-4
.L290:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   851            }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   852          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   853        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   854      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   855  #if LWIP_NETIF_HWADDRHINT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   856      if (netif->hints != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   857        /* per-pcb cached entry was given */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   858        netif_addr_idx_t etharp_cached_entry = netif->hints->addr_hint;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   859        if (etharp_cached_entry < ARP_TABLE_SIZE) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   860  #endif /* LWIP_NETIF_HWADDRHINT */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   861          if ((arp_table[etharp_cached_entry].state >= ETHARP_STATE_STABLE) &&
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   862  #if ETHARP_TABLE_MATCH_NETIF
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   863              (arp_table[etharp_cached_entry].netif == netif) &&
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   864  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   865              (ip4_addr_cmp(dst_addr, &arp_table[etharp_cached_entry].ipaddr))) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   866            /* the per-pcb-cached entry is stable and the right one! */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   867            ETHARP_STATS_INC(etharp.cachehit);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   868            return etharp_output_to_arp_index(netif, q, etharp_cached_entry);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   869          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   870  #if LWIP_NETIF_HWADDRHINT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   871        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   872      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   873  #endif /* LWIP_NETIF_HWADDRHINT */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   874  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   875      /* find stable entry: do this here since this is a critical path for
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   876         throughput and etharp_find_entry() is kind of slow */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   877      for (i = 0; i < ARP_TABLE_SIZE; i++) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   878        if ((arp_table[i].state >= ETHARP_STATE_STABLE) &&
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   879  #if ETHARP_TABLE_MATCH_NETIF
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   880            (arp_table[i].netif == netif) &&
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   881  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   882            (ip4_addr_cmp(dst_addr, &arp_table[i].ipaddr))) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   883          /* found an existing, stable entry */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   884          ETHARP_SET_ADDRHINT(netif, i);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   885          return etharp_output_to_arp_index(netif, q, i);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   886        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   887      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   888      /* no stable entry found, use the (slower) query function:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   889         queue on destination Ethernet address belonging to ipaddr */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   890      return etharp_query(netif, dst_addr, q);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   891    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   892  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   893    /* continuation for multicast/broadcast destinations */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   894    /* obtain source Ethernet address of the given interface */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   895    /* send packet directly on the link */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   896    return ethernet_output(netif, q, (struct eth_addr *)(netif->hwaddr), dest, ETHTYPE_IP);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   897  }
	ret
.L92:
.L90:
.L89:
	movh.a	a2,#@his(etharp_cached_entry)
	ld.bu	d4,[a2]@los(etharp_cached_entry)
.L680:
	mul	d15,d4,#24
.L681:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L682:
	addsc.a	a15,a15,d15,#0
.L683:
	ld.bu	d0,[a15]20
.L684:
	jlt.u	d0,#2,.L94
.L685:
	ld.w	d0,[a14]
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]4
	jne	d15,d0,.L95
.L686:
	mov.aa	a4,a12
.L475:
	mov.aa	a5,a13
.L476:
	j	etharp_output_to_arp_index
.L95:
.L94:
	mov	d4,#0
.L477:
	j	.L97
.L98:
	mul	d15,d4,#24
.L687:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L688:
	addsc.a	a15,a15,d15,#0
.L689:
	ld.bu	d0,[a15]20
.L690:
	jlt.u	d0,#2,.L99
.L691:
	ld.w	d0,[a14]
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
	addsc.a	a15,a15,d15,#0
	ld.w	d15,[a15]4
	jne	d15,d0,.L100
.L692:
	movh.a	a15,#@his(etharp_cached_entry)
	st.b	[a15]@los(etharp_cached_entry),d4
.L693:
	mov.aa	a4,a12
.L478:
	mov.aa	a5,a13
.L479:
	j	etharp_output_to_arp_index
.L100:
.L99:
	add	d4,#1
.L97:
	jlt.u	d4,#10,.L98
.L694:
	mov.aa	a4,a12
.L480:
	mov.aa	a5,a14
.L481:
	mov.aa	a6,a13
.L482:
	j	etharp_query
.L88:
.L86:
	lea	a6,[a12]38
.L695:
	mov	d4,#2048
	mov.aa	a4,a12
.L483:
	mov.aa	a5,a13
.L484:
	j	ethernet_output
.L279:
	
__etharp_output_function_end:
	.size	etharp_output,__etharp_output_function_end-etharp_output
.L191:
	; End of function
	
	.sdecl	'.text.etharp.etharp_query',code,cluster('etharp_query')
	.sect	'.text.etharp.etharp_query'
	.align	2
	
	.global	etharp_query

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   898  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   899  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   900   * Send an ARP request for the given IP address and/or queue a packet.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   901   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   902   * If the IP address was not yet in the cache, a pending ARP cache entry
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   903   * is added and an ARP request is sent for the given address. The packet
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   904   * is queued on this entry.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   905   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   906   * If the IP address was already pending in the cache, a new ARP request
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   907   * is sent for the given address. The packet is queued on this entry.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   908   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   909   * If the IP address was already stable in the cache, and a packet is
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   910   * given, it is directly sent and no ARP request is sent out.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   911   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   912   * If the IP address was already stable in the cache, and no packet is
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   913   * given, an ARP request is sent out.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   914   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   915   * @param netif The lwIP network interface on which ipaddr
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   916   * must be queried for.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   917   * @param ipaddr The IP address to be resolved.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   918   * @param q If non-NULL, a pbuf that must be delivered to the IP address.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   919   * q is not freed by this function.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   920   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   921   * @note q must only be ONE packet, not a packet queue!
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   922   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   923   * @return
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   924   * - ERR_BUF Could not make room for Ethernet header.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   925   * - ERR_MEM Hardware address unknown, and no more ARP entries available
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   926   *   to query for address or queue the packet.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   927   * - ERR_MEM Could not queue packet due to memory shortage.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   928   * - ERR_RTE No route to destination (no gateway to external networks).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   929   * - ERR_ARG Non-unicast address given, those will not appear in ARP cache.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   930   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   931   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   932  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   933  etharp_query(struct netif *netif, const ip4_addr_t *ipaddr, struct pbuf *q)
; Function etharp_query
.L161:
etharp_query:	.type	func
	sub.a	a10,#8
.L485:
	mov.aa	a12,a4
.L487:
	mov.aa	a13,a5
.L488:
	mov.aa	a14,a6
.L489:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   934  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   935    struct eth_addr *srcaddr = (struct eth_addr *)netif->hwaddr;
	lea	a2,[a12]38
.L490:
	st.a	[a10],a2
.L491:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   936    err_t result = ERR_MEM;
	mov	d9,#-1
.L492:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   937    int is_new_entry = 0;
	mov	d8,#0
.L494:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   938    s16_t i_err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   939    netif_addr_idx_t i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   940  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   941    /* non-unicast address? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   942    if (ip4_addr_isbroadcast(ipaddr, netif) ||
	ld.w	d4,[a13]
	call	ip4_addr_isbroadcast_u32
.L486:
	jne	d2,#0,.L104
.L700:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   943        ip4_addr_ismulticast(ipaddr) ||
	ld.w	d0,[a13]
	and	d1,d0,#240
	mov	d15,#224
	jeq	d15,d1,.L105
.L701:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   944        ip4_addr_isany(ipaddr)) {
	jz.a	a13,.L106
.L702:
	jne	d0,#0,.L107
.L106:
.L105:
.L104:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   945      LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_query: will not add non-unicast IP address to ARP cache\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   946      return ERR_ARG;
	mov	d2,#-16
.L703:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   947    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   948  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   949    /* find entry in ARP cache, ask to create entry if queueing packet */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   950    i_err = etharp_find_entry(ipaddr, ETHARP_FLAG_TRY_HARD, netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   951  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   952    /* could not find or create entry? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   953    if (i_err < 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   954      LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_query: could not create ARP entry\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   955      if (q) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   956        LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_query: packet dropped\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   957        ETHARP_STATS_INC(etharp.memerr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   958      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   959      return (err_t)i_err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   960    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   961    LWIP_ASSERT("type overflow", (size_t)i_err < NETIF_ADDR_IDX_MAX);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   962    i = (netif_addr_idx_t)i_err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   963  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   964    /* mark a fresh entry as pending (we just sent a request) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   965    if (arp_table[i].state == ETHARP_STATE_EMPTY) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   966      is_new_entry = 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   967      arp_table[i].state = ETHARP_STATE_PENDING;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   968      /* record network interface for re-sending arp request in etharp_tmr */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   969      arp_table[i].netif = netif;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   970    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   971  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   972    /* { i is either a STABLE or (new or existing) PENDING entry } */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   973    LWIP_ASSERT("arp_table[i].state == PENDING or STABLE",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   974                ((arp_table[i].state == ETHARP_STATE_PENDING) ||
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   975                 (arp_table[i].state >= ETHARP_STATE_STABLE)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   976  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   977    /* do we have a new entry? or an implicit query request? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   978    if (is_new_entry || (q == NULL)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   979      /* try to resolve it; send out ARP request */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   980      result = etharp_request(netif, ipaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   981      if (result != ERR_OK) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   982        /* ARP request couldn't be sent */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   983        /* We don't re-send arp request in etharp_tmr, but we still queue packets,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   984           since this failure could be temporary, and the next packet calling
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   985           etharp_query again could lead to sending the queued packets. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   986      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   987      if (q == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   988        return result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   989      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   990    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   991  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   992    /* packet given? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   993    LWIP_ASSERT("q != NULL", q != NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   994    /* stable entry? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   995    if (arp_table[i].state >= ETHARP_STATE_STABLE) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   996      /* we have a valid IP->Ethernet address mapping */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   997      ETHARP_SET_ADDRHINT(netif, i);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   998      /* send the packet */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	   999      result = ethernet_output(netif, q, srcaddr, &(arp_table[i].ethaddr), ETHTYPE_IP);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1000      /* pending entry? (either just created or already pending */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1001    } else if (arp_table[i].state == ETHARP_STATE_PENDING) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1002      /* entry is still pending, queue the given packet 'q' */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1003      struct pbuf *p;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1004      int copy_needed = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1005      /* IF q includes a pbuf that must be copied, copy the whole chain into a
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1006       * new PBUF_RAM. See the definition of PBUF_NEEDS_COPY for details. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1007      p = q;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1008      while (p) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1009        LWIP_ASSERT("no packet queues allowed!", (p->len != p->tot_len) || (p->next == 0));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1010        if (PBUF_NEEDS_COPY(p)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1011          copy_needed = 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1012          break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1013        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1014        p = p->next;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1015      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1016      if (copy_needed) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1017        /* copy the whole packet into new pbufs */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1018        p = pbuf_clone(PBUF_LINK, PBUF_RAM, q);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1019      } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1020        /* referencing the old pbuf is enough */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1021        p = q;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1022        pbuf_ref(p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1023      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1024      /* packet could be taken over? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1025      if (p != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1026        /* queue packet ... */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1027  #if ARP_QUEUEING
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1028        struct etharp_q_entry *new_entry;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1029        /* allocate a new arp queue entry */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1030        new_entry = (struct etharp_q_entry *)memp_malloc(MEMP_ARP_QUEUE);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1031        if (new_entry != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1032          unsigned int qlen = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1033          new_entry->next = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1034          new_entry->p = p;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1035          if (arp_table[i].q != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1036            /* queue was already existent, append the new entry to the end */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1037            struct etharp_q_entry *r;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1038            r = arp_table[i].q;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1039            qlen++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1040            while (r->next != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1041              r = r->next;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1042              qlen++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1043            }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1044            r->next = new_entry;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1045          } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1046            /* queue did not exist, first item in queue */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1047            arp_table[i].q = new_entry;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1048          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1049  #if ARP_QUEUE_LEN
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1050          if (qlen >= ARP_QUEUE_LEN) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1051            struct etharp_q_entry *old;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1052            old = arp_table[i].q;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1053            arp_table[i].q = arp_table[i].q->next;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1054            pbuf_free(old->p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1055            memp_free(MEMP_ARP_QUEUE, old);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1056          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1057  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1058          LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_query: queued packet %p on ARP entry %"U16_F"\n", (void *)q, i));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1059          result = ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1060        } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1061          /* the pool MEMP_ARP_QUEUE is empty */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1062          pbuf_free(p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1063          LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_query: could not queue a copy of PBUF_REF packet %p (out of memory)\n", (void *)q));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1064          result = ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1065        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1066  #else /* ARP_QUEUEING */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1067        /* always queue one packet per ARP request only, freeing a previously queued packet */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1068        if (arp_table[i].q != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1069          LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_query: dropped previously queued packet %p for ARP entry %"U16_F"\n", (void *)q, (u16_t)i));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1070          pbuf_free(arp_table[i].q);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1071        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1072        arp_table[i].q = p;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1073        result = ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1074        LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_query: queued packet %p on ARP entry %"U16_F"\n", (void *)q, (u16_t)i));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1075  #endif /* ARP_QUEUEING */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1076      } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1077        ETHARP_STATS_INC(etharp.memerr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1078        LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_query: could not queue a copy of PBUF_REF packet %p (out of memory)\n", (void *)q));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1079        result = ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1080      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1081    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1082    return result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1083  }
	ret
.L107:
	mov	d4,#1
.L704:
	mov.aa	a4,a13
.L495:
	mov.aa	a5,a12
.L497:
	call	etharp_find_entry
.L496:
	mov	d10,d2
.L499:
	jge	d10,#0,.L109
.L705:
	extr	d2,d10,#0,#8
.L498:
	ret
.L109:
	mul	d15,d10,#24
.L706:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L707:
	addsc.a	a15,a15,d15,#0
.L708:
	ld.bu	d0,[a15]20
.L709:
	jne	d0,#0,.L111
.L710:
	mov	d8,#1
.L711:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L712:
	addsc.a	a15,a15,d15,#0
.L713:
	st.b	[a15]20,d8
.L714:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L715:
	addsc.a	a15,a15,d15,#0
.L716:
	st.a	[a15]8,a12
.L111:
	jne	d8,#0,.L112
.L717:
	jnz.a	a14,.L113
.L112:
	mov.aa	a4,a12
.L500:
	mov.aa	a5,a13
.L501:
	call	etharp_request
.L493:
	mov	d9,d2
.L502:
	jz.a	a14,.L114
.L113:
	mul	d15,d10,#24
.L718:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L719:
	addsc.a	a15,a15,d15,#0
.L720:
	ld.bu	d0,[a15]20
.L721:
	jlt.u	d0,#2,.L115
.L722:
	movh.a	a15,#@his(etharp_cached_entry)
	st.b	[a15]@los(etharp_cached_entry),d10
.L723:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L724:
	addsc.a	a15,a15,d15,#0
.L725:
	lea	a7,[a15]12
.L726:
	mov	d4,#2048
	mov.aa	a4,a12
.L504:
	mov.aa	a5,a14
.L505:
	ld.a	a6,[a10]
.L506:
	call	ethernet_output
.L503:
	mov	d9,d2
.L507:
	j	.L116
.L115:
	mul	d15,d10,#24
.L727:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L728:
	addsc.a	a15,a15,d15,#0
.L729:
	ld.bu	d15,[a15]20
.L730:
	jeq	d15,#0,.L117
.L302:
	mov	d0,#0
.L508:
	mov.aa	a15,a14
.L510:
	j	.L118
.L119:
	ld.bu	d15,[a15]12
.L731:
	jz.t	d15:6,.L120
.L732:
	mov	d0,#1
.L733:
	j	.L121
.L120:
	ld.a	a15,[a15]
.L118:
	jnz.a	a15,.L119
.L121:
	jeq	d0,#0,.L122
.L734:
	mov	d4,#16
.L735:
	mov	d5,#640
.L736:
	mov.aa	a4,a14
.L511:
	call	pbuf_clone
.L509:
	mov.aa	a15,a2
.L512:
	j	.L123
.L122:
	mov.aa	a15,a14
.L737:
	mov.aa	a4,a14
.L514:
	call	pbuf_ref
.L123:
	jz.a	a15,.L124
.L305:
	mov	d4,#4
	call	memp_malloc
.L515:
	jz.a	a2,.L125
.L308:
	mov	d0,#0
.L517:
	mov.a	a4,#0
.L738:
	st.a	[a2],a4
.L739:
	st.a	[a2]4,a15
.L740:
	mul	d15,d10,#24
.L741:
	movh.a	a15,#@his(arp_table)
.L513:
	lea	a15,[a15]@los(arp_table)
.L742:
	addsc.a	a15,a15,d15,#0
.L743:
	ld.w	d1,[a15]
.L744:
	jeq	d1,#0,.L126
.L312:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L745:
	addsc.a	a15,a15,d15,#0
.L128:
	ld.a	a15,[a15]
.L746:
	add	d0,#1
.L747:
	ld.w	d15,[a15]
.L748:
	jne	d15,#0,.L128
.L313:
	j	.L129
.L126:
	mul	d15,d10,#24
.L749:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L750:
	addsc.a	a15,a15,d15,#0
.L129:
	st.a	[a15],a2
.L751:
	jlt.u	d0,#3,.L130
.L315:
	mul	d15,d10,#24
.L752:
	movh.a	a15,#@his(arp_table)
	lea	a15,[a15]@los(arp_table)
.L753:
	addsc.a	a15,a15,d15,#0
.L754:
	ld.a	a15,[a15]
.L519:
	movh.a	a2,#@his(arp_table)
.L516:
	lea	a2,[a2]@los(arp_table)
.L755:
	addsc.a	a2,a2,d15,#0
.L756:
	movh.a	a4,#@his(arp_table)
	lea	a4,[a4]@los(arp_table)
.L757:
	addsc.a	a4,a4,d15,#0
.L758:
	ld.a	a4,[a4]
.L759:
	ld.a	a4,[a4]
.L760:
	st.a	[a2],a4
.L761:
	ld.a	a4,[a15]4
	call	pbuf_free
.L518:
	mov	d4,#4
.L762:
	mov.aa	a4,a15
.L520:
	call	memp_free
.L130:
	mov	d9,#0
.L309:
	j	.L131
.L125:
	mov.aa	a4,a15
.L521:
	call	pbuf_free
.L124:
	mov	d9,#-1
.L131:
.L117:
.L116:
.L114:
	mov	d2,d9
.L522:
	ret
.L292:
	
__etharp_query_function_end:
	.size	etharp_query,__etharp_query_function_end-etharp_query
.L196:
	; End of function
	
	.sdecl	'.text.etharp.etharp_raw',code,cluster('etharp_raw')
	.sect	'.text.etharp.etharp_raw'
	.align	2
	

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1084  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1085  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1086   * Send a raw ARP packet (opcode and all addresses can be modified)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1087   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1088   * @param netif the lwip network interface on which to send the ARP packet
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1089   * @param ethsrc_addr the source MAC address for the ethernet header
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1090   * @param ethdst_addr the destination MAC address for the ethernet header
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1091   * @param hwsrc_addr the source MAC address for the ARP protocol header
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1092   * @param ipsrc_addr the source IP address for the ARP protocol header
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1093   * @param hwdst_addr the destination MAC address for the ARP protocol header
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1094   * @param ipdst_addr the destination IP address for the ARP protocol header
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1095   * @param opcode the type of the ARP packet
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1096   * @return ERR_OK if the ARP packet has been sent
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1097   *         ERR_MEM if the ARP packet couldn't be allocated
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1098   *         any other err_t on failure
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1099   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1100  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1101  etharp_raw(struct netif *netif, const struct eth_addr *ethsrc_addr,
; Function etharp_raw
.L163:
etharp_raw:	.type	func
	sub.a	a10,#8
.L523:
	mov.aa	a12,a4
.L526:
	st.a	[a10]4,a5
.L527:
	st.a	[a10],a6
.L528:
	mov.aa	a13,a7
.L529:
	mov	d15,d4
.L530:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1102             const struct eth_addr *ethdst_addr,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1103             const struct eth_addr *hwsrc_addr, const ip4_addr_t *ipsrc_addr,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1104             const struct eth_addr *hwdst_addr, const ip4_addr_t *ipdst_addr,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1105             const u16_t opcode)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1106  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1107    struct pbuf *p;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1108    err_t result = ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1109    struct etharp_hdr *hdr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1110  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1111    LWIP_ASSERT("netif != NULL", netif != NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1112  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1113    /* allocate a pbuf for the outgoing ARP request packet */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1114    p = pbuf_alloc(PBUF_LINK, SIZEOF_ETHARP_HDR, PBUF_RAM);
	mov	d4,#16
.L525:
	mov	d5,#28
.L825:
	mov	d6,#640
	call	pbuf_alloc
.L524:
	mov.aa	a14,a2
.L533:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1115    /* could allocate a pbuf for an ARP request? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1116    if (p == NULL) {
	jnz.a	a14,.L133
.L826:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1117      LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_SERIOUS,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1118                  ("etharp_raw: could not allocate pbuf for ARP request.\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1119      ETHARP_STATS_INC(etharp.memerr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1120      return ERR_MEM;
	mov	d2,#-1
.L827:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1121    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1122    LWIP_ASSERT("check that first pbuf can hold struct etharp_hdr",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1123                (p->len >= SIZEOF_ETHARP_HDR));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1124  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1125    hdr = (struct etharp_hdr *)p->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1126    LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_raw: sending raw ARP packet.\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1127    hdr->opcode = lwip_htons(opcode);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1128  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1129    LWIP_ASSERT("netif->hwaddr_len must be the same as ETH_HWADDR_LEN for etharp!",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1130                (netif->hwaddr_len == ETH_HWADDR_LEN));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1131  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1132    /* Write the ARP MAC-Addresses */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1133    SMEMCPY(&hdr->shwaddr, hwsrc_addr, ETH_HWADDR_LEN);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1134    SMEMCPY(&hdr->dhwaddr, hwdst_addr, ETH_HWADDR_LEN);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1135    /* Copy struct ip4_addr_wordaligned to aligned ip4_addr, to support compilers without
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1136     * structure packing. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1137    IPADDR_WORDALIGNED_COPY_FROM_IP4_ADDR_T(&hdr->sipaddr, ipsrc_addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1138    IPADDR_WORDALIGNED_COPY_FROM_IP4_ADDR_T(&hdr->dipaddr, ipdst_addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1139  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1140    hdr->hwtype = PP_HTONS(LWIP_IANA_HWTYPE_ETHERNET);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1141    hdr->proto = PP_HTONS(ETHTYPE_IP);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1142    /* set hwlen and protolen */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1143    hdr->hwlen = ETH_HWADDR_LEN;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1144    hdr->protolen = sizeof(ip4_addr_t);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1145  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1146    /* send ARP query */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1147  #if LWIP_AUTOIP
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1148    /* If we are using Link-Local, all ARP packets that contain a Link-Local
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1149     * 'sender IP address' MUST be sent using link-layer broadcast instead of
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1150     * link-layer unicast. (See RFC3927 Section 2.5, last paragraph) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1151    if (ip4_addr_islinklocal(ipsrc_addr)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1152      ethernet_output(netif, p, ethsrc_addr, &ethbroadcast, ETHTYPE_ARP);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1153    } else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1154  #endif /* LWIP_AUTOIP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1155    {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1156      ethernet_output(netif, p, ethsrc_addr, ethdst_addr, ETHTYPE_ARP);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1157    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1158  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1159    ETHARP_STATS_INC(etharp.xmit);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1160    /* free ARP query packet */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1161    pbuf_free(p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1162    p = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1163    /* could not allocate pbuf for ARP request */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1164  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1165    return result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1166  }
	ret
.L133:
	ld.a	a15,[a14]4
.L534:
	mov	d4,d15
.L535:
	call	lwip_htons
.L532:
	st.h	[a15]6,d2
.L828:
	lea	a4,[a15]8
	mov	d4,#6
	mov.aa	a5,a13
.L536:
	call	memcpy
.L537:
	lea	a4,[a15]18
	mov	d4,#6
	ld.a	a5,[a10]12
.L538:
	call	memcpy
.L539:
	lea	a4,[a15]14
	mov	d4,#4
	ld.a	a5,[a10]8
.L540:
	call	memcpy
.L541:
	lea	a4,[a15]24
	mov	d4,#4
	ld.a	a5,[a10]16
.L542:
	call	memcpy
.L543:
	mov	d15,#256
.L531:
	st.h	[a15],d15
.L829:
	mov	d15,#8
.L830:
	st.h	[a15]2,d15
.L831:
	mov	d15,#6
.L832:
	st.b	[a15]4,d15
.L833:
	mov	d15,#4
.L834:
	st.b	[a15]5,d15
.L835:
	mov	d4,#2054
	mov.aa	a4,a12
.L544:
	mov.aa	a5,a14
.L546:
	ld.a	a6,[a10]4
.L547:
	ld.a	a7,[a10]
.L548:
	call	ethernet_output
.L545:
	mov.aa	a4,a14
.L549:
	call	pbuf_free
.L550:
	mov	d2,#0
.L551:
	ret
.L337:
	
__etharp_raw_function_end:
	.size	etharp_raw,__etharp_raw_function_end-etharp_raw
.L221:
	; End of function
	
	.sdecl	'.text.etharp.etharp_request_dst',code,cluster('etharp_request_dst')
	.sect	'.text.etharp.etharp_request_dst'
	.align	2
	

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1167  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1168  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1169   * Send an ARP request packet asking for ipaddr to a specific eth address.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1170   * Used to send unicast request to refresh the ARP table just before an entry
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1171   * times out
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1172   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1173   * @param netif the lwip network interface on which to send the request
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1174   * @param ipaddr the IP address for which to ask
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1175   * @param hw_dst_addr the ethernet address to send this packet to
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1176   * @return ERR_OK if the request has been sent
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1177   *         ERR_MEM if the ARP packet couldn't be allocated
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1178   *         any other err_t on failure
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1179   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1180  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1181  etharp_request_dst(struct netif *netif, const ip4_addr_t *ipaddr, const struct eth_addr *hw_dst_addr)
; Function etharp_request_dst
.L165:
etharp_request_dst:	.type	func
	sub.a	a10,#16
.L552:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1182  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1183    return etharp_raw(netif, (struct eth_addr *)netif->hwaddr, hw_dst_addr,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1184                      (struct eth_addr *)netif->hwaddr, netif_ip4_addr(netif), &ethzero,
	lea	a15,[a4]4
	st.a	[a10],a15
.L817:
	movh.a	a15,#@his(ethzero)
	lea	a15,[a15]@los(ethzero)
	st.a	[a10]4,a15
.L818:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1185                      ipaddr, ARP_REQUEST);
	st.a	[a10]8,a5
.L819:
	lea	a5,[a4]38
.L553:
	mov.aa	a7,a5
.L820:
	mov	d4,#1
	j	etharp_raw
.L333:
	
__etharp_request_dst_function_end:
	.size	etharp_request_dst,__etharp_request_dst_function_end-etharp_request_dst
.L216:
	; End of function
	
	.sdecl	'.text.etharp.etharp_request',code,cluster('etharp_request')
	.sect	'.text.etharp.etharp_request'
	.align	2
	
	.global	etharp_request

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1186  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1187  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1188  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1189   * Send an ARP request packet asking for ipaddr.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1190   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1191   * @param netif the lwip network interface on which to send the request
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1192   * @param ipaddr the IP address for which to ask
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1193   * @return ERR_OK if the request has been sent
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1194   *         ERR_MEM if the ARP packet couldn't be allocated
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1195   *         any other err_t on failure
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1196   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1197  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1198  etharp_request(struct netif *netif, const ip4_addr_t *ipaddr)
; Function etharp_request
.L167:
etharp_request:	.type	func

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1199  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1200    LWIP_DEBUGF(ETHARP_DEBUG | LWIP_DBG_TRACE, ("etharp_request: sending ARP request.\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1201    return etharp_request_dst(netif, ipaddr, &ethbroadcast);
	movh.a	a6,#@his(ethbroadcast)
	lea	a6,[a6]@los(ethbroadcast)
	j	etharp_request_dst
.L317:
	
__etharp_request_function_end:
	.size	etharp_request,__etharp_request_function_end-etharp_request
.L201:
	; End of function
	
	.sdecl	'.bss.etharp.arp_table',data,cluster('arp_table')
	.sect	'.bss.etharp.arp_table'
	.align	4
arp_table:	.type	object
	.size	arp_table,240
	.space	240
	.sdecl	'.bss.etharp.etharp_cached_entry',data,cluster('etharp_cached_entry')
	.sect	'.bss.etharp.etharp_cached_entry'
etharp_cached_entry:	.type	object
	.size	etharp_cached_entry,1
	.space	1
	.calls	'free_etharp_q','pbuf_free'
	.calls	'free_etharp_q','memp_free'
	.calls	'etharp_free_entry','free_etharp_q'
	.calls	'etharp_tmr','etharp_free_entry'
	.calls	'etharp_tmr','etharp_request'
	.calls	'etharp_find_entry','etharp_free_entry'
	.calls	'etharp_update_arp_entry','ip4_addr_isbroadcast_u32'
	.calls	'etharp_update_arp_entry','etharp_find_entry'
	.calls	'etharp_update_arp_entry','memcpy'
	.calls	'etharp_update_arp_entry','memp_free'
	.calls	'etharp_update_arp_entry','ethernet_output'
	.calls	'etharp_update_arp_entry','pbuf_free'
	.calls	'etharp_cleanup_netif','etharp_free_entry'
	.calls	'etharp_find_addr','etharp_find_entry'
	.calls	'etharp_input','memcpy'
	.calls	'etharp_input','etharp_update_arp_entry'
	.calls	'etharp_input','etharp_raw'
	.calls	'etharp_input','pbuf_free'
	.calls	'etharp_output_to_arp_index','etharp_request'
	.calls	'etharp_output_to_arp_index','etharp_request_dst'
	.calls	'etharp_output_to_arp_index','ethernet_output'
	.calls	'etharp_output','ip4_addr_isbroadcast_u32'
	.calls	'etharp_output','etharp_output_to_arp_index'
	.calls	'etharp_output','etharp_query'
	.calls	'etharp_output','ethernet_output'
	.calls	'etharp_query','ip4_addr_isbroadcast_u32'
	.calls	'etharp_query','etharp_find_entry'
	.calls	'etharp_query','etharp_request'
	.calls	'etharp_query','ethernet_output'
	.calls	'etharp_query','pbuf_clone'
	.calls	'etharp_query','pbuf_ref'
	.calls	'etharp_query','memp_malloc'
	.calls	'etharp_query','pbuf_free'
	.calls	'etharp_query','memp_free'
	.calls	'etharp_raw','pbuf_alloc'
	.calls	'etharp_raw','lwip_htons'
	.calls	'etharp_raw','memcpy'
	.calls	'etharp_raw','ethernet_output'
	.calls	'etharp_raw','pbuf_free'
	.calls	'etharp_request_dst','etharp_raw'
	.calls	'etharp_request','etharp_request_dst'
	.calls	'free_etharp_q','',0
	.calls	'etharp_free_entry','',0
	.calls	'etharp_tmr','',0
	.calls	'etharp_find_entry','',0
	.calls	'etharp_update_arp_entry','',0
	.calls	'etharp_cleanup_netif','',0
	.calls	'etharp_find_addr','',0
	.calls	'etharp_get_entry','',0
	.calls	'etharp_input','',24
	.calls	'etharp_output_to_arp_index','',0
	.calls	'etharp_output','',8
	.calls	'etharp_query','',8
	.calls	'etharp_raw','',8
	.calls	'etharp_request_dst','',16
	.extern	pbuf_alloc
	.extern	pbuf_ref
	.extern	pbuf_free
	.extern	pbuf_clone
	.extern	memcpy
	.extern	lwip_htons
	.extern	ip4_addr_isbroadcast_u32
	.extern	memp_malloc
	.extern	memp_free
	.extern	ethernet_output
	.extern	ethbroadcast
	.extern	ethzero
	.calls	'etharp_request','',0
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L169:
	.word	6935
	.half	3
	.word	.L170
	.byte	4
.L168:
	.byte	1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L171
	.byte	2
	.byte	'void',0,3
	.word	170
.L364:
	.byte	4
	.byte	'unsigned short int',0,2,7
.L257:
	.byte	4
	.byte	'unsigned char',0,1,8,5
	.byte	'pbuf',0,1,186,1,8,16,6
	.byte	'next',0
	.word	.L281-.L169
	.byte	4,2,35,0,6
	.byte	'payload',0
	.word	176
	.byte	4,2,35,4,6
	.byte	'tot_len',0
	.word	181
	.byte	2,2,35,8,6
	.byte	'len',0
	.word	181
	.byte	2,2,35,10,6
	.byte	'type_internal',0
	.word	203
	.byte	1,2,35,12,6
	.byte	'flags',0
	.word	203
	.byte	1,2,35,13,6
	.byte	'ref',0
	.word	203
	.byte	1,2,35,14,6
	.byte	'if_idx',0
	.word	203
	.byte	1,2,35,15,0
.L281:
	.byte	3
	.word	220
	.byte	7,1,89,9,1,8
	.byte	'PBUF_RAW',0,0,8
	.byte	'PBUF_RAW_TX',0,0,8
	.byte	'PBUF_LINK',0,16,8
	.byte	'PBUF_IP',0,36,8
	.byte	'PBUF_TRANSPORT',0,56,0,7,1,145,1,9,2,8
	.byte	'PBUF_ROM',0,1,8
	.byte	'PBUF_REF',0,193,0,8
	.byte	'PBUF_POOL',0,130,3,8
	.byte	'PBUF_RAM',0,128,5,0,9
	.byte	'pbuf_alloc',0,1,144,2,14
	.word	360
	.byte	1,1,1,1,10
	.byte	'l',0,1,144,2,36
	.word	365
	.byte	10
	.byte	'length',0,1,144,2,45
	.word	181
	.byte	10
	.byte	'type',0,1,144,2,63
	.word	435
	.byte	0,11
	.byte	'pbuf_ref',0,1,161,2,6,1,1,1,1,10
	.byte	'p',0,1,161,2,28
	.word	360
	.byte	0,9
	.byte	'pbuf_free',0,1,162,2,6
	.word	203
	.byte	1,1,1,1,10
	.byte	'p',0,1,162,2,29
	.word	360
	.byte	0,9
	.byte	'pbuf_clone',0,1,174,2,14
	.word	360
	.byte	1,1,1,1,10
	.byte	'l',0,1,174,2,36
	.word	365
	.byte	10
	.byte	'type',0,1,174,2,49
	.word	435
	.byte	10
	.byte	'p',0,1,174,2,68
	.word	360
	.byte	0,12
	.word	176
	.byte	13
	.word	170
	.byte	3
	.word	687
	.byte	12
	.word	692
.L271:
	.byte	4
	.byte	'unsigned long int',0,4,7,9
	.byte	'memcpy',0,2,53,17
	.word	176
	.byte	1,1,1,1,14,2,53,33
	.word	682
	.byte	14,2,53,56
	.word	697
	.byte	14,2,53,68
	.word	702
	.byte	0,9
	.byte	'lwip_htons',0,3,97,7
	.word	181
	.byte	1,1,1,1,10
	.byte	'x',0,3,97,24
	.word	181
	.byte	0
.L260:
	.byte	3
	.word	.L554-.L169
.L329:
	.byte	5
	.byte	'ip4_addr',0,4,51,8,4,6
	.byte	'addr',0
	.word	702
	.byte	4,2,35,0,0
.L278:
	.byte	4
	.byte	'char',0,1,6,15
	.word	835
	.byte	1,1,16
	.word	360
	.byte	16
	.word	801
	.byte	0,3
	.word	843
	.byte	17
	.byte	'netif_input_fn',0,5,178,1,17
	.word	861
	.byte	13
	.word	806
	.byte	3
	.word	890
	.byte	15
	.word	835
	.byte	1,1,16
	.word	801
	.byte	16
	.word	360
	.byte	16
	.word	895
	.byte	0,3
	.word	900
	.byte	17
	.byte	'netif_output_fn',0,5,189,1,17
	.word	923
	.byte	15
	.word	835
	.byte	1,1,16
	.word	801
	.byte	16
	.word	360
	.byte	0,3
	.word	953
	.byte	17
	.byte	'netif_linkoutput_fn',0,5,212,1,17
	.word	971
	.byte	18,1,1,16
	.word	801
	.byte	0,3
	.word	1005
	.byte	17
	.byte	'netif_status_callback_fn',0,5,214,1,16
	.word	1014
	.byte	19,6
	.word	203
	.byte	20,5,0,4
	.byte	'char',0,1,6,19,2
	.word	1062
	.byte	20,1,0
.L554:
	.byte	5
	.byte	'netif',0,5,132,2,8,52,6
	.byte	'next',0
	.word	801
	.byte	4,2,35,0,6
	.byte	'ip_addr',0
	.word	806
	.byte	4,2,35,4,6
	.byte	'netmask',0
	.word	806
	.byte	4,2,35,8,6
	.byte	'gw',0
	.word	806
	.byte	4,2,35,12,6
	.byte	'input',0
	.word	866
	.byte	4,2,35,16,6
	.byte	'output',0
	.word	928
	.byte	4,2,35,20,6
	.byte	'linkoutput',0
	.word	976
	.byte	4,2,35,24,6
	.byte	'status_callback',0
	.word	1019
	.byte	4,2,35,28,6
	.byte	'state',0
	.word	176
	.byte	4,2,35,32,6
	.byte	'mtu',0
	.word	181
	.byte	2,2,35,36,6
	.byte	'hwaddr',0
	.word	1053
	.byte	6,2,35,38,6
	.byte	'hwaddr_len',0
	.word	203
	.byte	1,2,35,44,6
	.byte	'flags',0
	.word	203
	.byte	1,2,35,45,6
	.byte	'name',0
	.word	1070
	.byte	2,2,35,46,6
	.byte	'num',0
	.word	203
	.byte	1,2,35,48,6
	.byte	'rs_count',0
	.word	203
	.byte	1,2,35,49,0,13
	.word	1079
	.byte	3
	.word	1352
	.byte	9
	.byte	'ip4_addr_isbroadcast_u32',0,4,151,1,6
	.word	203
	.byte	1,1,1,1,10
	.byte	'addr',0,4,151,1,37
	.word	702
	.byte	10
	.byte	'netif',0,4,151,1,63
	.word	1357
	.byte	0,3
	.word	843
	.byte	3
	.word	900
	.byte	3
	.word	953
	.byte	3
	.word	1005
	.byte	7,6,52,9,1,8
	.byte	'MEMP_UDP_PCB',0,0,8
	.byte	'MEMP_TCP_PCB',0,1,8
	.byte	'MEMP_TCP_PCB_LISTEN',0,2,8
	.byte	'MEMP_TCP_SEG',0,3,8
	.byte	'MEMP_ARP_QUEUE',0,4,8
	.byte	'MEMP_SYS_TIMEOUT',0,5,8
	.byte	'MEMP_PBUF',0,6,8
	.byte	'MEMP_PBUF_POOL',0,7,8
	.byte	'MEMP_MAX',0,8,0,9
	.byte	'memp_malloc',0,6,147,1,7
	.word	176
	.byte	1,1,1,1,10
	.byte	'type',0,6,147,1,26
	.word	1450
	.byte	0,11
	.byte	'memp_free',0,6,149,1,7,1,1,1,1,10
	.byte	'type',0,6,149,1,24
	.word	1450
	.byte	10
	.byte	'mem',0,6,149,1,36
	.word	176
	.byte	0
.L252:
	.byte	4
	.byte	'int',0,4,5,13
	.word	806
.L262:
	.byte	3
	.word	1693
.L286:
	.byte	5
	.byte	'eth_addr',0,7,60,8,6,6
	.byte	'addr',0
	.word	1053
	.byte	6,2,35,0,0
.L296:
	.byte	3
	.word	1703
.L264:
	.byte	3
	.word	1732
.L266:
	.byte	3
	.word	1698
.L268:
	.byte	4
	.byte	'short int',0,2,5,3
	.word	806
.L273:
	.byte	3
	.word	1760
.L275:
	.byte	3
	.word	801
	.byte	13
	.word	1703
.L284:
	.byte	3
	.word	1775
	.byte	5
	.byte	'etharp_q_entry',0,8,70,8,8,6
	.byte	'next',0
	.word	.L306-.L169
	.byte	4,2,35,0,6
	.byte	'p',0
	.word	360
	.byte	4,2,35,4,0
.L306:
	.byte	3
	.word	1785
.L310:
	.byte	4
	.byte	'unsigned int',0,4,7,19,4
	.word	181
	.byte	20,1,0,5
	.byte	'ip4_addr_wordaligned',0,9,59,8,4,6
	.byte	'addrw',0
	.word	1852
	.byte	4,2,35,0,0,5
	.byte	'etharp_hdr',0,9,86,8,28,6
	.byte	'hwtype',0
	.word	181
	.byte	2,2,35,0,6
	.byte	'proto',0
	.word	181
	.byte	2,2,35,2,6
	.byte	'hwlen',0
	.word	203
	.byte	1,2,35,4,6
	.byte	'protolen',0
	.word	203
	.byte	1,2,35,5,6
	.byte	'opcode',0
	.word	181
	.byte	2,2,35,6,6
	.byte	'shwaddr',0
	.word	1703
	.byte	6,2,35,8,6
	.byte	'sipaddr',0
	.word	1861
	.byte	4,2,35,14,6
	.byte	'dhwaddr',0
	.word	1703
	.byte	6,2,35,18,6
	.byte	'dipaddr',0
	.word	1861
	.byte	4,2,35,24,0
.L327:
	.byte	3
	.word	1903
	.byte	9
	.byte	'ethernet_output',0,10,67,7
	.word	835
	.byte	1,1,1,1,10
	.byte	'netif',0,10,67,37
	.word	801
	.byte	10
	.byte	'p',0,10,67,57
	.word	360
	.byte	10
	.byte	'src',0,10,67,83
	.word	1780
	.byte	10
	.byte	'dst',0,10,67,111
	.word	1780
	.byte	10
	.byte	'eth_type',0,10,67,122
	.word	181
	.byte	0
.L345:
	.byte	13
	.word	181
	.byte	21,1,3
	.word	2172
	.byte	17
	.byte	'__codeptr',0,11,1,1
	.word	2174
	.byte	17
	.byte	'boolean',0,12,102,29
	.word	203
	.byte	17
	.byte	'uint8',0,12,106,29
	.word	203
	.byte	17
	.byte	'uint16',0,12,110,29
	.word	181
	.byte	17
	.byte	'uint32',0,12,114,29
	.word	702
	.byte	17
	.byte	'Std_ReturnType',0,13,109,16
	.word	203
	.byte	17
	.byte	'PduIdType',0,14,37,21
	.word	203
	.byte	17
	.byte	'PduLengthType',0,14,41,22
	.word	181
	.byte	7,15,101,9,1,8
	.byte	'BUFREQ_OK',0,0,8
	.byte	'BUFREQ_E_NOT_OK',0,1,8
	.byte	'BUFREQ_E_BUSY',0,2,8
	.byte	'BUFREQ_E_OVFL',0,3,0,17
	.byte	'BufReq_ReturnType',0,15,107,3
	.word	2320
	.byte	3
	.word	203
	.byte	17
	.byte	'SduDataPtrType',0,15,189,1,40
	.word	2414
	.byte	7,15,204,1,9,1,8
	.byte	'TP_DATACONF',0,0,8
	.byte	'TP_DATARETRY',0,1,8
	.byte	'TP_CONFPENDING',0,2,0,17
	.byte	'TpDataStateType',0,15,216,1,3
	.word	2443
	.byte	17
	.byte	'TcpIp_SocketIdType',0,16,50,16
	.word	203
	.byte	19,4
	.word	702
	.byte	20,0,0,22,16,52,9,4,6
	.byte	'Addr',0
	.word	2548
	.byte	4,2,35,0,0,17
	.byte	'TcpIp_IpAddressType',0,16,55,3
	.word	2557
	.byte	17
	.byte	'TcpIp_DomainType',0,16,61,16
	.word	181
	.byte	22,16,68,9,8,6
	.byte	'Domain',0
	.word	181
	.byte	2,2,35,0,6
	.byte	'Port',0
	.word	181
	.byte	2,2,35,2,6
	.byte	'Addr',0
	.word	2548
	.byte	4,2,35,4,0,17
	.byte	'TcpIp_SockAddrInetType',0,16,73,3
	.word	2630
	.byte	17
	.byte	'TcpIp_AddressType',0,17,128,1,15
	.word	203
	.byte	17
	.byte	'TcpIp_CtrlIdType',0,17,142,1,15
	.word	203
	.byte	17
	.byte	'TcpIp_IpAddrStateType',0,17,144,1,15
	.word	203
	.byte	17
	.byte	'TcpIp_LocalAddrAssignmentConfigType',0,17,149,1,15
	.word	203
	.byte	17
	.byte	'TcpIp_StaticAddrIdType',0,17,151,1,15
	.word	203
	.byte	22,17,152,1,9,12,6
	.byte	'State',0
	.word	203
	.byte	1,2,35,0,6
	.byte	'Netmask',0
	.word	203
	.byte	1,2,35,1,6
	.byte	'Domain',0
	.word	181
	.byte	2,2,35,2,6
	.byte	'IpAddr',0
	.word	2557
	.byte	4,2,35,4,6
	.byte	'DefaultRouter',0
	.word	2557
	.byte	4,2,35,8,0,17
	.byte	'TcpIp_StaticIpAddrType',0,17,162,1,3
	.word	2872
	.byte	17
	.byte	'TcpIp_LocalAddrIdType',0,17,173,1,15
	.word	203
	.byte	19,3
	.word	203
	.byte	20,2,0,22,17,231,1,9,8,6
	.byte	'CtrlId',0
	.word	203
	.byte	1,2,35,0,6
	.byte	'Address',0
	.word	203
	.byte	1,2,35,1,6
	.byte	'Domain',0
	.word	181
	.byte	2,2,35,2,6
	.byte	'StaticAddrId',0
	.word	203
	.byte	1,2,35,4,6
	.byte	'Assignments',0
	.word	3029
	.byte	3,2,35,5,0,17
	.byte	'TcpIp_LocalAddrConfigType',0,17,243,1,3
	.word	3038
	.byte	22,17,245,1,9,4,6
	.byte	'ArpConfigId',0
	.word	203
	.byte	1,2,35,0,6
	.byte	'DHCPConfigId',0
	.word	203
	.byte	1,2,35,1,6
	.byte	'AutoIpInitTimeout',0
	.word	181
	.byte	2,2,35,2,0,17
	.byte	'TcpIp_IpV4CtrlConfigType',0,17,130,2,3
	.word	3172
	.byte	22,17,133,2,9,8,6
	.byte	'CtrlIdx',0
	.word	203
	.byte	1,2,35,0,6
	.byte	'FramePrio',0
	.word	203
	.byte	1,2,35,1,6
	.byte	'UnicastAddrId',0
	.word	203
	.byte	1,2,35,2,6
	.byte	'UnicastAddrLimit',0
	.word	203
	.byte	1,2,35,3,6
	.byte	'MulticastAddrId',0
	.word	203
	.byte	1,2,35,4,6
	.byte	'LocalAddrLimit',0
	.word	203
	.byte	1,2,35,5,6
	.byte	'IpV4CtrlId',0
	.word	203
	.byte	1,2,35,6,6
	.byte	'IpV6CtrlId',0
	.word	203
	.byte	1,2,35,7,0,17
	.byte	'TcpIp_NetIfCtrlConfigType',0,17,148,2,3
	.word	3283
	.byte	17
	.byte	'SoAd_RoutingGroupIdType',0,18,43,15
	.word	203
	.byte	17
	.byte	'SoAd_SoConIdType',0,18,44,15
	.word	203
	.byte	17
	.byte	'SoAd_SoConGroupIdType',0,18,45,15
	.word	203
	.byte	17
	.byte	'SoAd_PduRouteIdType',0,18,46,15
	.word	203
	.byte	17
	.byte	'SoAd_PduRouteDestIdType',0,18,47,15
	.word	203
	.byte	17
	.byte	'SoAd_SocketRouteIdType',0,18,48,15
	.word	203
	.byte	17
	.byte	'SoAd_IfTxUnconfirmedType',0,18,49,16
	.word	181
	.byte	17
	.byte	'SoAd_IfTxTimerType',0,18,51,16
	.word	181
	.byte	19,1
	.word	203
	.byte	20,0,0,22,18,53,9,2,6
	.byte	'Mask',0
	.word	3737
	.byte	1,2,35,0,6
	.byte	'RoutingState',0
	.word	3737
	.byte	1,2,35,1,0,17
	.byte	'SoAd_RoutingGroupCtrlType',0,18,57,3
	.word	3746
	.byte	7,18,63,9,1,8
	.byte	'SOAD_UL_DOIP',0,0,8
	.byte	'SOAD_UL_UDPNM',0,1,8
	.byte	'SOAD_UL_PDUR',0,2,8
	.byte	'SOAD_UL_XCP',0,3,8
	.byte	'SOAD_UL_MAX',0,4,0,17
	.byte	'SoAd_ULIndexType',0,18,71,3
	.word	3822
	.byte	17
	.byte	'SoAd_RemoteAddressType',0,19,113,32
	.word	2630
	.byte	7,19,115,9,1,8
	.byte	'SOAD_SOCON_UNINIT',0,0,8
	.byte	'SOAD_SOCON_OFFLINE',0,1,8
	.byte	'SOAD_SOCON_RECONN',0,2,8
	.byte	'SOAD_SOCON_ONLINE',0,3,0,17
	.byte	'SoAd_SoConModeType',0,19,121,3
	.word	3958
	.byte	13
	.word	203
	.byte	3
	.word	4072
	.byte	13
	.word	203
	.byte	3
	.word	4082
	.byte	13
	.word	203
	.byte	3
	.word	4092
	.byte	13
	.word	3822
	.byte	3
	.word	4102
	.byte	22,19,129,1,9,36,6
	.byte	'IfBufferLength',0
	.word	181
	.byte	2,2,35,0,6
	.byte	'IfBufferOffset',0
	.word	181
	.byte	2,2,35,2,6
	.byte	'TpBufferLength',0
	.word	181
	.byte	2,2,35,4,6
	.byte	'TpBufferOffset',0
	.word	181
	.byte	2,2,35,6,6
	.byte	'PduRouteNum',0
	.word	203
	.byte	1,2,35,8,6
	.byte	'SocketRouteNum',0
	.word	203
	.byte	1,2,35,9,6
	.byte	'PduRouteDestNum',0
	.word	203
	.byte	1,2,35,10,6
	.byte	'RemoteAddrState',0
	.word	203
	.byte	1,2,35,11,6
	.byte	'RemoteAddr',0
	.word	2630
	.byte	8,2,35,12,6
	.byte	'PduRouteDestList',0
	.word	4077
	.byte	4,2,35,20,6
	.byte	'PduRouteList',0
	.word	4087
	.byte	4,2,35,24,6
	.byte	'SocketRouteList',0
	.word	4097
	.byte	4,2,35,28,6
	.byte	'SoConModeChgList',0
	.word	4107
	.byte	4,2,35,32,0,17
	.byte	'SoAd_SocketConnectionType',0,19,146,1,3
	.word	4112
	.byte	22,19,148,1,9,16,6
	.byte	'CtrlFlag',0
	.word	203
	.byte	1,2,35,0,6
	.byte	'KeepAliveProbesMax',0
	.word	181
	.byte	2,2,35,2,6
	.byte	'KeepAliveInterval',0
	.word	702
	.byte	4,2,35,4,6
	.byte	'KeepAliveTime',0
	.word	702
	.byte	4,2,35,8,6
	.byte	'TxQuota',0
	.word	702
	.byte	4,2,35,12,0,17
	.byte	'SoAd_TcpProtocolType',0,19,155,1,3
	.word	4464
	.byte	22,19,157,1,9,12,6
	.byte	'CtrlFlag',0
	.word	203
	.byte	1,2,35,0,6
	.byte	'nPduTxBufferMin',0
	.word	181
	.byte	2,2,35,2,6
	.byte	'TriggerTimeout',0
	.word	181
	.byte	2,2,35,4,6
	.byte	'AliveSupervisionTimeout',0
	.word	702
	.byte	4,2,35,6,0,17
	.byte	'SoAd_UdpProtocolType',0,19,163,1,3
	.word	4614
	.byte	13
	.word	4464
	.byte	3
	.word	4751
	.byte	13
	.word	4614
	.byte	3
	.word	4761
	.byte	22,19,165,1,9,24,6
	.byte	'GroupId',0
	.word	203
	.byte	1,2,35,0,6
	.byte	'CtrlFlag',0
	.word	203
	.byte	1,2,35,1,6
	.byte	'FramePriority',0
	.word	203
	.byte	1,2,35,2,6
	.byte	'SoConNum',0
	.word	203
	.byte	1,2,35,3,6
	.byte	'SoConId',0
	.word	203
	.byte	1,2,35,4,6
	.byte	'IpAddrAssignChgNum',0
	.word	203
	.byte	1,2,35,5,6
	.byte	'LocalAddrId',0
	.word	203
	.byte	1,2,35,6,6
	.byte	'LocalPort',0
	.word	181
	.byte	2,2,35,8,6
	.byte	'IpAddrAssignChgList',0
	.word	4107
	.byte	4,2,35,12,6
	.byte	'TcpProtocolPtr',0
	.word	4756
	.byte	4,2,35,16,6
	.byte	'UdpProtocolPtr',0
	.word	4766
	.byte	4,2,35,20,0,17
	.byte	'SoAd_SocketConnectionGroupType',0,19,178,1,3
	.word	4771
	.byte	13
	.word	203
	.byte	3
	.word	5056
	.byte	22,19,180,1,9,12,6
	.byte	'CtrlFlag',0
	.word	203
	.byte	1,2,35,0,6
	.byte	'PduRouteDestNum',0
	.word	203
	.byte	1,2,35,1,6
	.byte	'SocketRouteDestNum',0
	.word	203
	.byte	1,2,35,2,6
	.byte	'PduRouteDestList',0
	.word	5061
	.byte	4,2,35,4,6
	.byte	'SocketRouteDestList',0
	.word	5061
	.byte	4,2,35,8,0,17
	.byte	'SoAd_RoutingGroupType',0,19,187,1,3
	.word	5066
	.byte	22,19,189,1,9,6,6
	.byte	'ULType',0
	.word	203
	.byte	1,2,35,0,6
	.byte	'ULIndex',0
	.word	3822
	.byte	1,2,35,1,6
	.byte	'CtrlFlag',0
	.word	203
	.byte	1,2,35,2,6
	.byte	'RouteDestNum',0
	.word	203
	.byte	1,2,35,3,6
	.byte	'RouteDestId',0
	.word	203
	.byte	1,2,35,4,6
	.byte	'TxPduId',0
	.word	203
	.byte	1,2,35,5,0,17
	.byte	'SoAd_PduRouteType',0,19,204,1,3
	.word	5230
	.byte	3
	.word	3746
	.byte	22,19,206,1,9,20,6
	.byte	'TxPduHeaderId',0
	.word	702
	.byte	4,2,35,0,6
	.byte	'SoConNum',0
	.word	203
	.byte	1,2,35,4,6
	.byte	'SoConId',0
	.word	203
	.byte	1,2,35,5,6
	.byte	'PduRouteId',0
	.word	203
	.byte	1,2,35,6,6
	.byte	'UdpTriggerMode',0
	.word	203
	.byte	1,2,35,7,6
	.byte	'UdpTriggerTimeout',0
	.word	181
	.byte	2,2,35,8,6
	.byte	'RoutingCtrlList',0
	.word	5375
	.byte	4,2,35,12,6
	.byte	'IfTriggerList',0
	.word	2414
	.byte	4,2,35,16,0,17
	.byte	'SoAd_PduRouteDestType',0,19,217,1,3
	.word	5380
	.byte	22,19,219,1,9,16,6
	.byte	'RxPduHeaderId',0
	.word	702
	.byte	4,2,35,0,6
	.byte	'ULType',0
	.word	203
	.byte	1,2,35,4,6
	.byte	'ULIndex',0
	.word	3822
	.byte	1,2,35,5,6
	.byte	'SoConNum',0
	.word	203
	.byte	1,2,35,6,6
	.byte	'SoConId',0
	.word	203
	.byte	1,2,35,7,6
	.byte	'RxPduId',0
	.word	203
	.byte	1,2,35,8,6
	.byte	'RoutingCtrlList',0
	.word	5375
	.byte	4,2,35,12,0,17
	.byte	'SoAd_SocketRouteType',0,19,236,1,3
	.word	5595
	.byte	13
	.word	5380
	.byte	3
	.word	5765
	.byte	22,19,155,2,9,24,6
	.byte	'State',0
	.word	203
	.byte	1,2,35,0,6
	.byte	'Timer',0
	.word	181
	.byte	2,2,35,2,6
	.byte	'BufferLength',0
	.word	181
	.byte	2,2,35,4,6
	.byte	'BufferOffset',0
	.word	181
	.byte	2,2,35,6,6
	.byte	'UdpTxBuffer',0
	.word	2414
	.byte	4,2,35,8,6
	.byte	'TotalTxLength',0
	.word	181
	.byte	2,2,35,12,6
	.byte	'UsedTxLength',0
	.word	181
	.byte	2,2,35,14,6
	.byte	'IfTxDataBuffer',0
	.word	5061
	.byte	4,2,35,16,6
	.byte	'PduRouteDestPtr',0
	.word	5770
	.byte	4,2,35,20,0,17
	.byte	'SoAd_TxSessionType',0,19,177,2,3
	.word	5775
	.byte	13
	.word	5595
	.byte	3
	.word	5999
	.byte	22,19,180,2,9,8,6
	.byte	'PduLength',0
	.word	181
	.byte	2,2,35,0,6
	.byte	'RemainLength',0
	.word	181
	.byte	2,2,35,2,6
	.byte	'SocketRoutePtr',0
	.word	6004
	.byte	4,2,35,4,0,17
	.byte	'SoAd_RxPduInfoType',0,19,185,2,3
	.word	6009
	.byte	22,19,187,2,9,12,6
	.byte	'TotalLength',0
	.word	181
	.byte	2,2,35,0,6
	.byte	'In',0
	.word	181
	.byte	2,2,35,2,6
	.byte	'Out',0
	.word	181
	.byte	2,2,35,4,6
	.byte	'BufferPtr',0
	.word	2414
	.byte	4,2,35,8,0,17
	.byte	'SoAd_RxFifoType',0,19,193,2,3
	.word	6109
	.byte	22,19,195,2,9,8,6
	.byte	'TotalLength',0
	.word	181
	.byte	2,2,35,0,6
	.byte	'UsedLength',0
	.word	181
	.byte	2,2,35,2,6
	.byte	'BufferPtr',0
	.word	2414
	.byte	4,2,35,4,0,17
	.byte	'SoAd_RxBufferType',0,19,200,2,3
	.word	6206
	.byte	19,8
	.word	203
	.byte	20,7,0,22,19,202,2,9,48,6
	.byte	'State',0
	.word	203
	.byte	1,2,35,0,6
	.byte	'ValidHeaderLen',0
	.word	203
	.byte	1,2,35,1,6
	.byte	'PduHeader',0
	.word	6300
	.byte	8,2,35,2,6
	.byte	'RxPduInfo',0
	.word	6009
	.byte	8,2,35,12,6
	.byte	'ProcessPduInfo',0
	.word	6009
	.byte	8,2,35,20,6
	.byte	'IfBuffer',0
	.word	6206
	.byte	8,2,35,28,6
	.byte	'TpBuffer',0
	.word	6109
	.byte	12,2,35,36,0,17
	.byte	'SoAd_RxSessionType',0,19,216,2,3
	.word	6309
	.byte	17
	.byte	'size_t',0,20,57,25
	.word	702
	.byte	17
	.byte	'u8_t',0,20,61,25
	.word	203
	.byte	17
	.byte	's8_t',0,20,62,25
	.word	835
	.byte	17
	.byte	'u16_t',0,20,63,25
	.word	181
	.byte	17
	.byte	's16_t',0,20,64,25
	.word	1747
	.byte	17
	.byte	'u32_t',0,20,65,25
	.word	702
	.byte	17
	.byte	'ssize_t',0,21,202,1,13
	.word	1686
	.byte	17
	.byte	'err_t',0,22,96,14
	.word	835
	.byte	17
	.byte	'pbuf_layer',0,1,112,3
	.word	365
	.byte	17
	.byte	'pbuf_type',0,1,168,1,3
	.word	435
	.byte	17
	.byte	'ip4_addr_t',0,4,57,25
	.word	806
	.byte	17
	.byte	'ip_addr_t',0,23,142,2,20
	.word	806
	.byte	17
	.byte	'memp_t',0,6,56,3
	.word	1450
	.byte	17
	.byte	'netif_addr_idx_t',0,5,244,1,14
	.word	203
	.byte	5
	.byte	'ip4_addr_packed',0,24,53,8,4,6
	.byte	'addr',0
	.word	702
	.byte	4,2,35,0,0,17
	.byte	'ip4_addr_p_t',0,24,61,32
	.word	6712
	.byte	13
	.word	1703
	.byte	23
	.byte	'ethbroadcast',0,10,69,30
	.word	6769
	.byte	1,1,13
	.word	1703
	.byte	23
	.byte	'ethzero',0,10,69,44
	.word	6797
	.byte	1,1,5
	.byte	'etharp_entry',0,11,90,8,24,6
	.byte	'q',0
	.word	1831
	.byte	4,2,35,0,6
	.byte	'ipaddr',0
	.word	806
	.byte	4,2,35,4,6
	.byte	'netif',0
	.word	801
	.byte	4,2,35,8,6
	.byte	'ethaddr',0
	.word	1703
	.byte	6,2,35,12,6
	.byte	'ctime',0
	.word	181
	.byte	2,2,35,18,6
	.byte	'state',0
	.word	203
	.byte	1,2,35,20,0
.L384:
	.byte	19,240,1
	.word	6820
	.byte	20,9,0,0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L170:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,59,0,3,8,0,0,3,15,0,73,19,0,0,4,36,0,3,8,11,15,62,15,0
	.byte	0,5,19,1,3,8,58,15,59,15,57,15,11,15,0,0,6,13,0,3,8,73,19,11,15,56,9,0,0,7,4,1,58,15,59,15,57,15,11,15
	.byte	0,0,8,40,0,3,8,28,13,0,0,9,46,1,3,8,58,15,59,15,57,15,73,19,54,15,39,12,63,12,60,12,0,0,10,5,0,3,8,58
	.byte	15,59,15,57,15,73,19,0,0,11,46,1,3,8,58,15,59,15,57,15,54,15,39,12,63,12,60,12,0,0,12,55,0,73,19,0,0,13
	.byte	38,0,73,19,0,0,14,5,0,58,15,59,15,57,15,73,19,0,0,15,21,1,73,19,54,15,39,12,0,0,16,5,0,73,19,0,0,17,22
	.byte	0,3,8,58,15,59,15,57,15,73,19,0,0,18,21,1,54,15,39,12,0,0,19,1,1,11,15,73,19,0,0,20,33,0,47,15,0,0,21
	.byte	21,0,54,15,0,0,22,19,1,58,15,59,15,57,15,11,15,0,0,23,52,0,3,8,58,15,59,15,57,15,73,19,63,12,60,12,0,0
	.byte	0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L171:
	.word	.L556-.L555
.L555:
	.half	3
	.word	.L558-.L557
.L557:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip',0
	.byte	'C:\\tasking\\ctc\\include\\',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch',0,0
	.byte	'pbuf.h',0,1,0,0
	.byte	'string.h',0,2,0,0
	.byte	'def.h',0,1,0,0
	.byte	'ip4_addr.h',0,1,0,0
	.byte	'netif.h',0,1,0,0
	.byte	'memp.h',0,1,0,0
	.byte	'ethernet.h',0,3,0,0
	.byte	'etharp.h',0,1,0,0
	.byte	'etharp.h',0,3,0,0
	.byte	'ethernet.h',0,4,0,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0,0,0,0
	.byte	'Platform_Types.h',0,5,0,0
	.byte	'Std_Types.h',0,5,0,0
	.byte	'ComStack_Types_Cfg.h',0,6,0,0
	.byte	'ComStack_Types.h',0,7,0,0
	.byte	'TcpIp_GeneratedTypes.h',0,6,0,0
	.byte	'TcpIp_Types.h',0,8,0,0
	.byte	'SoAd_GeneratedTypes.h',0,6,0,0
	.byte	'SoAd_Types.h',0,9,0,0
	.byte	'cc.h',0,10,0,0
	.byte	'arch.h',0,1,0,0
	.byte	'err.h',0,1,0,0
	.byte	'ip_addr.h',0,1,0,0
	.byte	'ip4.h',0,3,0,0,0
.L558:
.L556:
	.sdecl	'.debug_info',debug,cluster('etharp_tmr')
	.sect	'.debug_info'
.L172:
	.word	258
	.half	3
	.word	.L173
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L175,.L174
	.byte	2
	.word	.L168
	.byte	3
	.byte	'etharp_tmr',0,1,197,1,1,1,1,1
	.word	.L143,.L251,.L142
	.byte	4
	.word	.L143,.L251
	.byte	5
	.byte	'i',0,1,199,1,7
	.word	.L252,.L253
	.byte	6
	.word	.L254
	.byte	5
	.byte	'state',0,1,204,1,10
	.word	.L257,.L258
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('etharp_tmr')
	.sect	'.debug_abbrev'
.L173:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,11,1,17,1,18,1,0,0,5,52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,6,11,1
	.byte	85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('etharp_tmr')
	.sect	'.debug_line'
.L174:
	.word	.L560-.L559
.L559:
	.half	3
	.word	.L562-.L561
.L561:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0,0,0,0,0
.L562:
	.byte	5,10,7,0,5,2
	.word	.L143
	.byte	3,202,1,1,5,34,9
	.half	.L255-.L143
	.byte	3,8,1,5,30,9
	.half	.L563-.L255
	.byte	3,10,1,9
	.half	.L564-.L563
	.byte	3,4,1,5,19,9
	.half	.L256-.L564
	.byte	3,106,1,5,33,9
	.half	.L565-.L256
	.byte	1,5,27,9
	.half	.L6-.L565
	.byte	3,1,1,5,18,9
	.half	.L566-.L6
	.byte	1,5,27,9
	.half	.L567-.L566
	.byte	1,5,30,9
	.half	.L568-.L567
	.byte	1,5,5,9
	.half	.L390-.L568
	.byte	3,1,1,5,7,7,9
	.half	.L569-.L390
	.byte	3,5,1,5,16,9
	.half	.L570-.L569
	.byte	1,5,7,9
	.half	.L571-.L570
	.byte	1,5,16,9
	.half	.L572-.L571
	.byte	1,5,19,9
	.half	.L573-.L572
	.byte	1,5,25,9
	.half	.L391-.L573
	.byte	1,5,12,9
	.half	.L574-.L391
	.byte	3,1,1,5,21,9
	.half	.L575-.L574
	.byte	1,5,24,9
	.half	.L576-.L575
	.byte	1,5,11,9
	.half	.L577-.L576
	.byte	1,5,13,7,9
	.half	.L578-.L577
	.byte	3,1,1,5,22,9
	.half	.L579-.L578
	.byte	1,5,25,9
	.half	.L580-.L579
	.byte	1,5,12,9
	.half	.L581-.L580
	.byte	1,5,13,7,9
	.half	.L582-.L581
	.byte	3,1,1,5,22,9
	.half	.L583-.L582
	.byte	1,5,25,9
	.half	.L584-.L583
	.byte	1,5,32,9
	.half	.L585-.L584
	.byte	1,5,27,7,9
	.half	.L8-.L585
	.byte	3,5,1,5,29,9
	.half	.L393-.L8
	.byte	1,5,27,9
	.half	.L9-.L393
	.byte	3,1,1,5,18,9
	.half	.L586-.L9
	.byte	1,5,27,9
	.half	.L587-.L586
	.byte	1,5,30,9
	.half	.L588-.L587
	.byte	1,5,14,9
	.half	.L589-.L588
	.byte	1,5,9,7,9
	.half	.L590-.L589
	.byte	3,2,1,5,18,9
	.half	.L591-.L590
	.byte	1,5,28,9
	.half	.L592-.L591
	.byte	1,5,64,9
	.half	.L593-.L592
	.byte	1,5,27,9
	.half	.L12-.L593
	.byte	3,1,1,5,18,9
	.half	.L594-.L12
	.byte	1,5,27,9
	.half	.L595-.L594
	.byte	1,5,30,9
	.half	.L596-.L595
	.byte	1,5,14,9
	.half	.L597-.L596
	.byte	1,5,9,7,9
	.half	.L598-.L597
	.byte	3,3,1,5,18,9
	.half	.L599-.L598
	.byte	1,5,28,9
	.half	.L600-.L599
	.byte	1,5,49,9
	.half	.L601-.L600
	.byte	1,5,27,9
	.half	.L14-.L601
	.byte	3,1,1,5,18,9
	.half	.L602-.L14
	.byte	1,5,27,9
	.half	.L603-.L602
	.byte	1,5,30,9
	.half	.L604-.L603
	.byte	1,5,14,9
	.half	.L605-.L604
	.byte	1,5,24,7,9
	.half	.L606-.L605
	.byte	3,2,1,5,33,9
	.half	.L607-.L606
	.byte	1,5,36,9
	.half	.L608-.L607
	.byte	1,5,45,9
	.half	.L609-.L608
	.byte	1,5,54,9
	.half	.L610-.L609
	.byte	1,5,57,9
	.half	.L611-.L610
	.byte	1,5,35,9
	.half	.L7-.L611
	.byte	3,103,1,5,33,9
	.half	.L5-.L7
	.byte	1,5,1,7,9
	.half	.L612-.L5
	.byte	3,29,1,7,9
	.half	.L176-.L612
	.byte	0,1,1
.L560:
	.sdecl	'.debug_ranges',debug,cluster('etharp_tmr')
	.sect	'.debug_ranges'
.L175:
	.word	-1,.L143,0,.L176-.L143,0,0
.L254:
	.word	-1,.L143,.L255-.L143,.L256-.L143,.L6-.L143,.L7-.L143,0,0
	.sdecl	'.debug_info',debug,cluster('etharp_find_addr')
	.sect	'.debug_info'
.L177:
	.word	323
	.half	3
	.word	.L178
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L180,.L179
	.byte	2
	.word	.L168
	.byte	3
	.byte	'etharp_find_addr',0,1,199,4,1
	.word	.L252
	.byte	1,1,1
	.word	.L151,.L259,.L150
	.byte	4
	.byte	'netif',0,1,199,4,32
	.word	.L260,.L261
	.byte	4
	.byte	'ipaddr',0,1,199,4,57
	.word	.L262,.L263
	.byte	4
	.byte	'eth_ret',0,1,200,4,36
	.word	.L264,.L265
	.byte	4
	.byte	'ip_ret',0,1,200,4,64
	.word	.L266,.L267
	.byte	5
	.word	.L151,.L259
	.byte	6
	.byte	'i',0,1,202,4,9
	.word	.L268,.L269
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('etharp_find_addr')
	.sect	'.debug_abbrev'
.L178:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('etharp_find_addr')
	.sect	'.debug_line'
.L179:
	.word	.L614-.L613
.L613:
	.half	3
	.word	.L616-.L615
.L615:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0,0,0,0,0
.L616:
	.byte	5,1,7,0,5,2
	.word	.L151
	.byte	3,198,4,1,5,33,9
	.half	.L445-.L151
	.byte	3,10,1,5,56,9
	.half	.L617-.L445
	.byte	1,5,7,9
	.half	.L439-.L617
	.byte	3,1,1,5,29,7,9
	.half	.L618-.L439
	.byte	1,5,20,9
	.half	.L619-.L618
	.byte	1,5,29,9
	.half	.L620-.L619
	.byte	1,5,32,9
	.half	.L621-.L620
	.byte	1,5,39,9
	.half	.L622-.L621
	.byte	1,5,17,7,9
	.half	.L623-.L622
	.byte	3,1,1,5,26,9
	.half	.L624-.L623
	.byte	1,5,29,9
	.half	.L625-.L624
	.byte	1,5,14,9
	.half	.L626-.L625
	.byte	1,5,16,9
	.half	.L627-.L626
	.byte	3,1,1,5,25,9
	.half	.L628-.L627
	.byte	1,5,28,9
	.half	.L629-.L628
	.byte	1,5,13,9
	.half	.L630-.L629
	.byte	1,5,1,9
	.half	.L631-.L630
	.byte	3,4,1,5,10,7,9
	.half	.L61-.L631
	.byte	3,127,1,5,1,9
	.half	.L446-.L61
	.byte	3,1,1,7,9
	.half	.L181-.L446
	.byte	0,1,1
.L614:
	.sdecl	'.debug_ranges',debug,cluster('etharp_find_addr')
	.sect	'.debug_ranges'
.L180:
	.word	-1,.L151,0,.L181-.L151,0,0
	.sdecl	'.debug_info',debug,cluster('etharp_get_entry')
	.sect	'.debug_info'
.L182:
	.word	302
	.half	3
	.word	.L183
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L185,.L184
	.byte	2
	.word	.L168
	.byte	3
	.byte	'etharp_get_entry',0,1,228,4,1
	.word	.L252
	.byte	1,1,1
	.word	.L153,.L270,.L152
	.byte	4
	.byte	'i',0,1,228,4,25
	.word	.L271,.L272
	.byte	4
	.byte	'ipaddr',0,1,228,4,41
	.word	.L273,.L274
	.byte	4
	.byte	'netif',0,1,228,4,64
	.word	.L275,.L276
	.byte	4
	.byte	'eth_ret',0,1,228,4,89
	.word	.L264,.L277
	.byte	5
	.word	.L153,.L270
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('etharp_get_entry')
	.sect	'.debug_abbrev'
.L183:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('etharp_get_entry')
	.sect	'.debug_line'
.L184:
	.word	.L633-.L632
.L632:
	.half	3
	.word	.L635-.L634
.L634:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0,0,0,0,0
.L635:
	.byte	5,7,7,0,5,2
	.word	.L153
	.byte	3,233,4,1,5,41,7,9
	.half	.L636-.L153
	.byte	1,5,32,9
	.half	.L637-.L636
	.byte	1,5,41,9
	.half	.L638-.L637
	.byte	1,5,44,9
	.half	.L639-.L638
	.byte	1,5,51,9
	.half	.L640-.L639
	.byte	1,5,17,7,9
	.half	.L641-.L640
	.byte	3,1,1,5,26,9
	.half	.L642-.L641
	.byte	1,5,29,9
	.half	.L643-.L642
	.byte	1,5,14,9
	.half	.L644-.L643
	.byte	1,5,16,9
	.half	.L645-.L644
	.byte	3,1,1,5,25,9
	.half	.L646-.L645
	.byte	1,5,28,9
	.half	.L647-.L646
	.byte	1,5,14,9
	.half	.L648-.L647
	.byte	1,5,17,9
	.half	.L649-.L648
	.byte	3,1,1,5,26,9
	.half	.L650-.L649
	.byte	1,5,29,9
	.half	.L651-.L650
	.byte	1,5,14,9
	.half	.L652-.L651
	.byte	1,5,12,9
	.half	.L653-.L652
	.byte	3,1,1,5,1,9
	.half	.L654-.L653
	.byte	3,4,1,5,12,7,9
	.half	.L65-.L654
	.byte	3,126,1,5,1,9
	.half	.L655-.L65
	.byte	3,2,1,7,9
	.half	.L186-.L655
	.byte	0,1,1
.L633:
	.sdecl	'.debug_ranges',debug,cluster('etharp_get_entry')
	.sect	'.debug_ranges'
.L185:
	.word	-1,.L153,0,.L186-.L153,0,0
	.sdecl	'.debug_info',debug,cluster('etharp_output')
	.sect	'.debug_info'
.L187:
	.word	363
	.half	3
	.word	.L188
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L190,.L189
	.byte	2
	.word	.L168
	.byte	3
	.byte	'etharp_output',0,1,151,6,1
	.word	.L278
	.byte	1,1,1
	.word	.L159,.L279,.L158
	.byte	4
	.byte	'netif',0,1,151,6,29
	.word	.L260,.L280
	.byte	4
	.byte	'q',0,1,151,6,49
	.word	.L281,.L282
	.byte	4
	.byte	'ipaddr',0,1,151,6,70
	.word	.L262,.L283
	.byte	5
	.word	.L159,.L279
	.byte	6
	.byte	'dest',0,1,153,6,26
	.word	.L284,.L285
	.byte	6
	.byte	'mcastaddr',0,1,154,6,19
	.word	.L286,.L287
	.byte	6
	.byte	'dst_addr',0,1,155,6,21
	.word	.L262,.L288
	.byte	7
	.word	.L289
	.byte	6
	.byte	'i',0,1,182,6,22
	.word	.L257,.L291
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('etharp_output')
	.sect	'.debug_abbrev'
.L188:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('etharp_output')
	.sect	'.debug_line'
.L189:
	.word	.L657-.L656
.L656:
	.half	3
	.word	.L659-.L658
.L658:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0,0,0,0,0
.L659:
	.byte	5,1,7,0,5,2
	.word	.L159
	.byte	3,150,6,1,5,7,9
	.half	.L471-.L159
	.byte	3,15,1,5,3,9
	.half	.L468-.L471
	.byte	1,5,38,7,9
	.half	.L660-.L468
	.byte	3,2,1,5,50,9
	.half	.L661-.L660
	.byte	1,5,14,9
	.half	.L85-.L661
	.byte	3,2,1,5,10,9
	.half	.L662-.L85
	.byte	1,5,25,7,9
	.half	.L663-.L662
	.byte	3,2,1,5,23,9
	.half	.L664-.L663
	.byte	1,5,25,9
	.half	.L665-.L664
	.byte	3,1,1,5,23,9
	.half	.L666-.L665
	.byte	1,5,25,9
	.half	.L667-.L666
	.byte	3,1,1,5,23,9
	.half	.L668-.L667
	.byte	1,5,25,9
	.half	.L669-.L668
	.byte	3,1,1,5,43,9
	.half	.L670-.L669
	.byte	1,5,23,9
	.half	.L671-.L670
	.byte	1,5,25,9
	.half	.L672-.L671
	.byte	3,1,1,5,23,9
	.half	.L673-.L672
	.byte	1,5,25,9
	.half	.L674-.L673
	.byte	3,1,1,5,23,9
	.half	.L675-.L674
	.byte	1,5,13,9
	.half	.L473-.L675
	.byte	3,2,1,5,48,9
	.half	.L474-.L473
	.byte	3,121,1,5,10,9
	.half	.L87-.L474
	.byte	3,13,1,9
	.half	.L676-.L87
	.byte	3,1,1,5,16,9
	.half	.L677-.L676
	.byte	3,18,1,5,24,9
	.half	.L678-.L677
	.byte	3,2,1,5,43,9
	.half	.L679-.L678
	.byte	1,5,20,9
	.half	.L91-.L679
	.byte	3,4,1,5,1,9
	.half	.L290-.L91
	.byte	3,47,1,5,24,7,9
	.half	.L89-.L290
	.byte	3,92,1,5,23,9
	.half	.L680-.L89
	.byte	1,5,14,9
	.half	.L681-.L680
	.byte	1,5,23,9
	.half	.L682-.L681
	.byte	1,5,44,9
	.half	.L683-.L682
	.byte	1,5,13,9
	.half	.L684-.L683
	.byte	1,5,14,7,9
	.half	.L685-.L684
	.byte	3,4,1,5,55,9
	.half	.L686-.L685
	.byte	3,3,1,5,12,9
	.half	.L94-.L686
	.byte	3,9,1,5,35,9
	.half	.L477-.L94
	.byte	1,5,21,9
	.half	.L98-.L477
	.byte	3,1,1,5,12,9
	.half	.L687-.L98
	.byte	1,5,21,9
	.half	.L688-.L687
	.byte	1,5,24,9
	.half	.L689-.L688
	.byte	1,5,11,9
	.half	.L690-.L689
	.byte	1,5,12,7,9
	.half	.L691-.L690
	.byte	3,4,1,5,9,9
	.half	.L692-.L691
	.byte	3,2,1,5,53,9
	.half	.L693-.L692
	.byte	3,1,1,5,38,9
	.half	.L99-.L693
	.byte	3,120,1,5,35,9
	.half	.L97-.L99
	.byte	1,5,42,7,9
	.half	.L694-.L97
	.byte	3,13,1,5,61,9
	.half	.L86-.L694
	.byte	3,6,1,5,78,9
	.half	.L695-.L86
	.byte	1,5,1,9
	.half	.L191-.L695
	.byte	3,1,0,1,1
.L657:
	.sdecl	'.debug_ranges',debug,cluster('etharp_output')
	.sect	'.debug_ranges'
.L190:
	.word	-1,.L159,0,.L191-.L159,0,0
.L289:
	.word	-1,.L159,.L87-.L159,.L290-.L159,.L89-.L159,.L86-.L159,0,0
	.sdecl	'.debug_info',debug,cluster('etharp_query')
	.sect	'.debug_info'
.L192:
	.word	542
	.half	3
	.word	.L193
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L195,.L194
	.byte	2
	.word	.L168
	.byte	3
	.byte	'etharp_query',0,1,165,7,1
	.word	.L278
	.byte	1,1,1
	.word	.L161,.L292,.L160
	.byte	4
	.byte	'netif',0,1,165,7,28
	.word	.L260,.L293
	.byte	4
	.byte	'ipaddr',0,1,165,7,53
	.word	.L262,.L294
	.byte	4
	.byte	'q',0,1,165,7,74
	.word	.L281,.L295
	.byte	5
	.word	.L161,.L292
	.byte	6
	.byte	'srcaddr',0,1,167,7,20
	.word	.L296,.L297
	.byte	6
	.byte	'result',0,1,168,7,9
	.word	.L278,.L298
	.byte	6
	.byte	'is_new_entry',0,1,169,7,7
	.word	.L252,.L299
	.byte	6
	.byte	'i_err',0,1,170,7,9
	.word	.L268,.L300
	.byte	6
	.byte	'i',0,1,171,7,20
	.word	.L257,.L301
	.byte	5
	.word	.L302,.L114
	.byte	6
	.byte	'p',0,1,235,7,18
	.word	.L281,.L303
	.byte	6
	.byte	'copy_needed',0,1,236,7,9
	.word	.L252,.L304
	.byte	5
	.word	.L305,.L124
	.byte	6
	.byte	'new_entry',0,1,132,8,30
	.word	.L306,.L307
	.byte	5
	.word	.L308,.L309
	.byte	6
	.byte	'qlen',0,1,136,8,22
	.word	.L310,.L311
	.byte	5
	.word	.L312,.L313
	.byte	6
	.byte	'r',0,1,141,8,34
	.word	.L306,.L314
	.byte	0,5
	.word	.L315,.L130
	.byte	6
	.byte	'old',0,1,155,8,34
	.word	.L306,.L316
	.byte	0,0,0,0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('etharp_query')
	.sect	'.debug_abbrev'
.L193:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6
	.byte	52,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('etharp_query')
	.sect	'.debug_line'
.L194:
	.word	.L697-.L696
.L696:
	.half	3
	.word	.L699-.L698
.L698:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0,0,0,0,0
.L699:
	.byte	5,1,7,0,5,2
	.word	.L161
	.byte	3,164,7,1,5,54,9
	.half	.L489-.L161
	.byte	3,2,1,5,16,9
	.half	.L491-.L489
	.byte	3,1,1,5,20,9
	.half	.L492-.L491
	.byte	3,1,1,5,7,9
	.half	.L494-.L492
	.byte	3,5,1,9
	.half	.L700-.L494
	.byte	3,1,1,9
	.half	.L701-.L700
	.byte	3,1,1,7,9
	.half	.L702-.L701
	.byte	1,5,12,7,9
	.half	.L104-.L702
	.byte	3,2,1,5,1,9
	.half	.L703-.L104
	.byte	3,137,1,1,5,37,7,9
	.half	.L107-.L703
	.byte	3,251,126,1,5,59,9
	.half	.L704-.L107
	.byte	1,5,9,9
	.half	.L496-.L704
	.byte	1,5,3,9
	.half	.L499-.L496
	.byte	3,3,1,5,12,7,9
	.half	.L705-.L499
	.byte	3,6,1,5,1,9
	.half	.L498-.L705
	.byte	3,252,0,1,5,16,7,9
	.half	.L109-.L498
	.byte	3,138,127,1,5,7,9
	.half	.L706-.L109
	.byte	1,5,16,9
	.half	.L707-.L706
	.byte	1,5,19,9
	.half	.L708-.L707
	.byte	1,5,3,9
	.half	.L709-.L708
	.byte	1,5,18,7,9
	.half	.L710-.L709
	.byte	3,1,1,5,5,9
	.half	.L711-.L710
	.byte	3,1,1,5,14,9
	.half	.L712-.L711
	.byte	1,5,24,9
	.half	.L713-.L712
	.byte	1,5,5,9
	.half	.L714-.L713
	.byte	3,2,1,5,14,9
	.half	.L715-.L714
	.byte	1,5,24,9
	.half	.L716-.L715
	.byte	1,5,7,9
	.half	.L111-.L716
	.byte	3,9,1,5,26,7,9
	.half	.L717-.L111
	.byte	1,5,36,7,9
	.half	.L112-.L717
	.byte	3,2,1,5,12,9
	.half	.L493-.L112
	.byte	1,5,5,9
	.half	.L502-.L493
	.byte	3,7,1,5,16,7,9
	.half	.L113-.L502
	.byte	3,8,1,5,7,9
	.half	.L718-.L113
	.byte	1,5,16,9
	.half	.L719-.L718
	.byte	1,5,19,9
	.half	.L720-.L719
	.byte	1,5,3,9
	.half	.L721-.L720
	.byte	1,5,5,7,9
	.half	.L722-.L721
	.byte	3,2,1,5,51,9
	.half	.L723-.L722
	.byte	3,2,1,5,60,9
	.half	.L724-.L723
	.byte	1,5,63,9
	.half	.L725-.L724
	.byte	1,5,74,9
	.half	.L726-.L725
	.byte	1,5,12,9
	.half	.L503-.L726
	.byte	1,5,34,9
	.half	.L507-.L503
	.byte	3,126,1,5,23,9
	.half	.L115-.L507
	.byte	3,4,1,5,14,9
	.half	.L727-.L115
	.byte	1,5,23,9
	.half	.L728-.L727
	.byte	1,5,26,9
	.half	.L729-.L728
	.byte	1,5,10,9
	.half	.L730-.L729
	.byte	1,5,21,7,9
	.half	.L302-.L730
	.byte	3,3,1,5,7,9
	.half	.L508-.L302
	.byte	3,3,1,5,13,9
	.half	.L510-.L508
	.byte	3,1,1,5,11,9
	.half	.L119-.L510
	.byte	3,2,1,5,7,9
	.half	.L731-.L119
	.byte	1,5,21,7,9
	.half	.L732-.L731
	.byte	3,1,1,5,9,9
	.half	.L733-.L732
	.byte	3,1,1,5,12,9
	.half	.L120-.L733
	.byte	3,2,1,5,13,9
	.half	.L118-.L120
	.byte	3,122,1,5,5,7,9
	.half	.L121-.L118
	.byte	3,8,1,5,22,7,9
	.half	.L734-.L121
	.byte	3,2,1,5,33,9
	.half	.L735-.L734
	.byte	1,5,43,9
	.half	.L736-.L735
	.byte	1,5,9,9
	.half	.L509-.L736
	.byte	1,5,45,9
	.half	.L512-.L509
	.byte	1,5,9,9
	.half	.L122-.L512
	.byte	3,3,1,5,16,9
	.half	.L737-.L122
	.byte	3,1,1,5,5,9
	.half	.L123-.L737
	.byte	3,3,1,5,56,7,9
	.half	.L305-.L123
	.byte	3,5,1,5,7,9
	.half	.L515-.L305
	.byte	3,1,1,5,27,7,9
	.half	.L308-.L515
	.byte	3,1,1,9
	.half	.L517-.L308
	.byte	3,1,1,5,25,9
	.half	.L738-.L517
	.byte	1,5,22,9
	.half	.L739-.L738
	.byte	3,1,1,9
	.half	.L740-.L739
	.byte	3,1,1,5,13,9
	.half	.L741-.L740
	.byte	1,5,22,9
	.half	.L742-.L741
	.byte	1,5,25,9
	.half	.L743-.L742
	.byte	1,5,9,9
	.half	.L744-.L743
	.byte	1,5,15,7,9
	.half	.L312-.L744
	.byte	3,3,1,5,24,9
	.half	.L745-.L312
	.byte	1,5,18,9
	.half	.L128-.L745
	.byte	3,3,1,5,17,9
	.half	.L746-.L128
	.byte	3,1,1,5,19,9
	.half	.L747-.L746
	.byte	3,126,1,5,33,9
	.half	.L748-.L747
	.byte	1,5,30,7,9
	.half	.L313-.L748
	.byte	3,4,1,5,20,9
	.half	.L126-.L313
	.byte	3,3,1,5,11,9
	.half	.L749-.L126
	.byte	1,5,20,9
	.half	.L750-.L749
	.byte	1,5,26,9
	.half	.L129-.L750
	.byte	1,5,9,9
	.half	.L751-.L129
	.byte	3,3,1,5,26,7,9
	.half	.L315-.L751
	.byte	3,2,1,5,17,9
	.half	.L752-.L315
	.byte	1,5,26,9
	.half	.L753-.L752
	.byte	1,5,29,9
	.half	.L754-.L753
	.byte	1,5,11,9
	.half	.L519-.L754
	.byte	3,1,1,5,20,9
	.half	.L755-.L519
	.byte	1,5,28,9
	.half	.L756-.L755
	.byte	1,5,37,9
	.half	.L757-.L756
	.byte	1,5,40,9
	.half	.L758-.L757
	.byte	1,5,42,9
	.half	.L759-.L758
	.byte	1,5,26,9
	.half	.L760-.L759
	.byte	1,5,24,9
	.half	.L761-.L760
	.byte	3,1,1,5,21,9
	.half	.L518-.L761
	.byte	3,1,1,5,37,9
	.half	.L762-.L518
	.byte	1,5,16,9
	.half	.L130-.L762
	.byte	3,4,1,5,24,9
	.half	.L309-.L130
	.byte	1,5,19,9
	.half	.L125-.L309
	.byte	3,3,1,5,14,9
	.half	.L124-.L125
	.byte	3,17,1,5,3,9
	.half	.L114-.L124
	.byte	3,3,1,5,1,9
	.half	.L522-.L114
	.byte	3,1,1,7,9
	.half	.L196-.L522
	.byte	0,1,1
.L697:
	.sdecl	'.debug_ranges',debug,cluster('etharp_query')
	.sect	'.debug_ranges'
.L195:
	.word	-1,.L161,0,.L196-.L161,0,0
	.sdecl	'.debug_info',debug,cluster('etharp_request')
	.sect	'.debug_info'
.L197:
	.word	264
	.half	3
	.word	.L198
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L200,.L199
	.byte	2
	.word	.L168
	.byte	3
	.byte	'etharp_request',0,1,174,9,1
	.word	.L278
	.byte	1,1,1
	.word	.L167,.L317,.L166
	.byte	4
	.byte	'netif',0,1,174,9,30
	.word	.L260,.L318
	.byte	4
	.byte	'ipaddr',0,1,174,9,55
	.word	.L262,.L319
	.byte	5
	.word	.L167,.L317
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('etharp_request')
	.sect	'.debug_abbrev'
.L198:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('etharp_request')
	.sect	'.debug_line'
.L199:
	.word	.L764-.L763
.L763:
	.half	3
	.word	.L766-.L765
.L765:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0,0,0,0,0
.L766:
	.byte	5,45,7,0,5,2
	.word	.L167
	.byte	3,176,9,1,5,1,9
	.half	.L201-.L167
	.byte	3,1,0,1,1
.L764:
	.sdecl	'.debug_ranges',debug,cluster('etharp_request')
	.sect	'.debug_ranges'
.L200:
	.word	-1,.L167,0,.L201-.L167,0,0
	.sdecl	'.debug_info',debug,cluster('etharp_cleanup_netif')
	.sect	'.debug_info'
.L202:
	.word	291
	.half	3
	.word	.L203
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L205,.L204
	.byte	2
	.word	.L168
	.byte	3
	.byte	'etharp_cleanup_netif',0,1,175,4,1,1,1,1
	.word	.L149,.L320,.L148
	.byte	4
	.byte	'netif',0,1,175,4,36
	.word	.L260,.L321
	.byte	5
	.word	.L149,.L320
	.byte	6
	.byte	'i',0,1,177,4,7
	.word	.L252,.L322
	.byte	5
	.word	.L58,.L59
	.byte	6
	.byte	'state',0,1,180,4,10
	.word	.L257,.L323
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('etharp_cleanup_netif')
	.sect	'.debug_abbrev'
.L203:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('etharp_cleanup_netif')
	.sect	'.debug_line'
.L204:
	.word	.L768-.L767
.L767:
	.half	3
	.word	.L770-.L769
.L769:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0,0,0,0,0
.L770:
	.byte	5,1,7,0,5,2
	.word	.L149
	.byte	3,174,4,1,5,10,9
	.half	.L435-.L149
	.byte	3,4,1,5,19,9
	.half	.L436-.L435
	.byte	1,5,33,9
	.half	.L771-.L436
	.byte	1,5,27,9
	.half	.L58-.L771
	.byte	3,1,1,5,18,9
	.half	.L772-.L58
	.byte	1,5,27,9
	.half	.L773-.L772
	.byte	1,5,30,9
	.half	.L774-.L773
	.byte	1,5,9,9
	.half	.L437-.L774
	.byte	3,1,1,5,43,7,9
	.half	.L775-.L437
	.byte	1,5,52,9
	.half	.L776-.L775
	.byte	1,5,55,9
	.half	.L777-.L776
	.byte	1,5,62,9
	.half	.L778-.L777
	.byte	1,5,25,7,9
	.half	.L779-.L778
	.byte	3,1,1,5,35,9
	.half	.L59-.L779
	.byte	3,125,1,5,33,9
	.half	.L57-.L59
	.byte	1,5,1,7,9
	.half	.L780-.L57
	.byte	3,6,1,7,9
	.half	.L206-.L780
	.byte	0,1,1
.L768:
	.sdecl	'.debug_ranges',debug,cluster('etharp_cleanup_netif')
	.sect	'.debug_ranges'
.L205:
	.word	-1,.L149,0,.L206-.L149,0,0
	.sdecl	'.debug_info',debug,cluster('etharp_input')
	.sect	'.debug_info'
.L207:
	.word	333
	.half	3
	.word	.L208
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L210,.L209
	.byte	2
	.word	.L168
	.byte	3
	.byte	'etharp_input',0,1,129,5,1,1,1,1
	.word	.L155,.L324,.L154
	.byte	4
	.byte	'p',0,1,129,5,27
	.word	.L281,.L325
	.byte	4
	.byte	'netif',0,1,129,5,44
	.word	.L260,.L326
	.byte	5
	.word	.L155,.L324
	.byte	6
	.byte	'hdr',0,1,131,5,22
	.word	.L327,.L328
	.byte	6
	.byte	'sipaddr',0,1,133,5,14
	.word	.L329,.L330
	.byte	6
	.byte	'dipaddr',0,1,133,5,23
	.word	.L329,.L331
	.byte	6
	.byte	'for_us',0,1,134,5,8
	.word	.L257,.L332
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('etharp_input')
	.sect	'.debug_abbrev'
.L208:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,63,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('etharp_input')
	.sect	'.debug_line'
.L209:
	.word	.L782-.L781
.L781:
	.half	3
	.word	.L784-.L783
.L783:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0,0,0,0,0
.L784:
	.byte	5,1,7,0,5,2
	.word	.L155
	.byte	3,128,5,1,5,3,9
	.half	.L451-.L155
	.byte	3,9,1,5,31,7,9
	.half	.L785-.L451
	.byte	3,2,1,5,11,9
	.half	.L452-.L785
	.byte	3,3,1,5,23,9
	.half	.L786-.L452
	.byte	1,5,7,9
	.half	.L787-.L786
	.byte	1,5,11,7,9
	.half	.L788-.L787
	.byte	3,1,1,5,19,9
	.half	.L789-.L788
	.byte	1,5,11,7,9
	.half	.L790-.L789
	.byte	3,1,1,5,22,9
	.half	.L791-.L790
	.byte	1,5,11,7,9
	.half	.L792-.L791
	.byte	3,1,1,5,22,9
	.half	.L793-.L792
	.byte	1,5,19,9
	.half	.L794-.L793
	.byte	1,5,3,7,9
	.half	.L795-.L794
	.byte	3,20,1,9
	.half	.L796-.L795
	.byte	3,1,1,5,7,9
	.half	.L797-.L796
	.byte	3,3,1,5,3,9
	.half	.L798-.L797
	.byte	1,5,12,7,9
	.half	.L799-.L798
	.byte	3,1,1,5,15,9
	.half	.L453-.L799
	.byte	1,5,1,9
	.half	.L69-.L453
	.byte	3,59,1,5,20,7,9
	.half	.L74-.L69
	.byte	3,72,1,5,27,9
	.half	.L75-.L74
	.byte	3,9,1,5,35,9
	.half	.L800-.L75
	.byte	3,127,1,5,49,9
	.half	.L801-.L800
	.byte	1,5,34,9
	.half	.L802-.L801
	.byte	3,1,1,5,14,9
	.half	.L455-.L802
	.byte	3,3,1,5,10,9
	.half	.L803-.L455
	.byte	3,2,1,5,3,9
	.half	.L804-.L803
	.byte	3,126,1,5,7,7,9
	.half	.L805-.L804
	.byte	3,9,1,5,54,7,9
	.half	.L806-.L805
	.byte	3,4,1,5,24,9
	.half	.L807-.L806
	.byte	3,1,1,5,36,9
	.half	.L808-.L807
	.byte	1,5,44,9
	.half	.L809-.L808
	.byte	3,126,1,5,58,9
	.half	.L810-.L809
	.byte	1,5,44,9
	.half	.L811-.L810
	.byte	3,1,1,5,20,9
	.half	.L812-.L811
	.byte	3,2,1,5,13,9
	.half	.L70-.L812
	.byte	3,28,1,5,1,9
	.half	.L211-.L70
	.byte	3,1,0,1,1
.L782:
	.sdecl	'.debug_ranges',debug,cluster('etharp_input')
	.sect	'.debug_ranges'
.L210:
	.word	-1,.L155,0,.L211-.L155,0,0
	.sdecl	'.debug_info',debug,cluster('etharp_request_dst')
	.sect	'.debug_info'
.L212:
	.word	292
	.half	3
	.word	.L213
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L215,.L214
	.byte	2
	.word	.L168
	.byte	3
	.byte	'etharp_request_dst',0,1,157,9,1
	.word	.L278
	.byte	1,1
	.word	.L165,.L333,.L164
	.byte	4
	.byte	'netif',0,1,157,9,34
	.word	.L260,.L334
	.byte	4
	.byte	'ipaddr',0,1,157,9,59
	.word	.L262,.L335
	.byte	4
	.byte	'hw_dst_addr',0,1,157,9,90
	.word	.L284,.L336
	.byte	5
	.word	.L165,.L333
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('etharp_request_dst')
	.sect	'.debug_abbrev'
.L213:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('etharp_request_dst')
	.sect	'.debug_line'
.L214:
	.word	.L814-.L813
.L813:
	.half	3
	.word	.L816-.L815
.L815:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0,0,0,0,0
.L816:
	.byte	5,1,7,0,5,2
	.word	.L165
	.byte	3,156,9,1,5,55,9
	.half	.L552-.L165
	.byte	3,3,1,5,79,9
	.half	.L817-.L552
	.byte	1,5,21,9
	.half	.L818-.L817
	.byte	3,1,1,5,52,9
	.half	.L819-.L818
	.byte	3,126,1,5,45,9
	.half	.L553-.L819
	.byte	3,1,1,5,29,9
	.half	.L820-.L553
	.byte	3,1,1,5,1,9
	.half	.L216-.L820
	.byte	3,1,0,1,1
.L814:
	.sdecl	'.debug_ranges',debug,cluster('etharp_request_dst')
	.sect	'.debug_ranges'
.L215:
	.word	-1,.L165,0,.L216-.L165,0,0
	.sdecl	'.debug_info',debug,cluster('etharp_raw')
	.sect	'.debug_info'
.L217:
	.word	458
	.half	3
	.word	.L218
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L220,.L219
	.byte	2
	.word	.L168
	.byte	3
	.byte	'etharp_raw',0,1,205,8,1
	.word	.L278
	.byte	1,1
	.word	.L163,.L337,.L162
	.byte	4
	.byte	'netif',0,1,205,8,26
	.word	.L260,.L338
	.byte	4
	.byte	'ethsrc_addr',0,1,205,8,56
	.word	.L284,.L339
	.byte	4
	.byte	'ethdst_addr',0,1,206,8,35
	.word	.L284,.L340
	.byte	4
	.byte	'hwsrc_addr',0,1,207,8,35
	.word	.L284,.L341
	.byte	4
	.byte	'ipsrc_addr',0,1,207,8,65
	.word	.L262,.L342
	.byte	4
	.byte	'hwdst_addr',0,1,208,8,35
	.word	.L284,.L343
	.byte	4
	.byte	'ipdst_addr',0,1,208,8,65
	.word	.L262,.L344
	.byte	4
	.byte	'opcode',0,1,209,8,24
	.word	.L345,.L346
	.byte	5
	.word	.L163,.L337
	.byte	6
	.byte	'p',0,1,211,8,16
	.word	.L281,.L347
	.byte	6
	.byte	'result',0,1,212,8,9
	.word	.L278,.L348
	.byte	6
	.byte	'hdr',0,1,213,8,22
	.word	.L327,.L349
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('etharp_raw')
	.sect	'.debug_abbrev'
.L218:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('etharp_raw')
	.sect	'.debug_line'
.L219:
	.word	.L822-.L821
.L821:
	.half	3
	.word	.L824-.L823
.L823:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0,0,0,0,0
.L824:
	.byte	5,1,7,0,5,2
	.word	.L163
	.byte	3,204,8,1,5,18,9
	.half	.L530-.L163
	.byte	3,13,1,5,29,9
	.half	.L525-.L530
	.byte	1,5,48,9
	.half	.L825-.L525
	.byte	1,5,5,9
	.half	.L524-.L825
	.byte	1,5,3,9
	.half	.L533-.L524
	.byte	3,2,1,5,12,7,9
	.half	.L826-.L533
	.byte	3,4,1,5,1,9
	.half	.L827-.L826
	.byte	3,46,1,5,31,7,9
	.half	.L133-.L827
	.byte	3,87,1,5,28,9
	.half	.L534-.L133
	.byte	3,2,1,5,15,9
	.half	.L532-.L534
	.byte	1,5,3,9
	.half	.L828-.L532
	.byte	3,6,1,9
	.half	.L537-.L828
	.byte	3,1,1,9
	.half	.L539-.L537
	.byte	3,3,1,9
	.half	.L541-.L539
	.byte	3,1,1,5,17,9
	.half	.L543-.L541
	.byte	3,2,1,5,15,9
	.half	.L531-.L543
	.byte	1,5,16,9
	.half	.L829-.L531
	.byte	3,1,1,5,14,9
	.half	.L830-.L829
	.byte	1,5,16,9
	.half	.L831-.L830
	.byte	3,2,1,5,14,9
	.half	.L832-.L831
	.byte	1,5,19,9
	.half	.L833-.L832
	.byte	3,1,1,5,17,9
	.half	.L834-.L833
	.byte	1,5,57,9
	.half	.L835-.L834
	.byte	3,12,1,5,13,9
	.half	.L545-.L835
	.byte	3,5,1,5,16,9
	.half	.L550-.L545
	.byte	3,75,1,5,1,9
	.half	.L551-.L550
	.byte	3,58,1,7,9
	.half	.L221-.L551
	.byte	0,1,1
.L822:
	.sdecl	'.debug_ranges',debug,cluster('etharp_raw')
	.sect	'.debug_ranges'
.L220:
	.word	-1,.L163,0,.L221-.L163,0,0
	.sdecl	'.debug_info',debug,cluster('free_etharp_q')
	.sect	'.debug_info'
.L222:
	.word	250
	.half	3
	.word	.L223
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L225,.L224
	.byte	2
	.word	.L168
	.byte	3
	.byte	'free_etharp_q',0,1,147,1,1,1,1
	.word	.L139,.L350,.L138
	.byte	4
	.byte	'q',0,1,147,1,38
	.word	.L306,.L351
	.byte	5
	.word	.L139,.L350
	.byte	6
	.byte	'r',0,1,149,1,26
	.word	.L306,.L352
	.byte	0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('free_etharp_q')
	.sect	'.debug_abbrev'
.L223:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3,8,58
	.byte	15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('free_etharp_q')
	.sect	'.debug_line'
.L224:
	.word	.L837-.L836
.L836:
	.half	3
	.word	.L839-.L838
.L838:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0,0,0,0,0
.L839:
	.byte	5,1,7,0,5,2
	.word	.L139
	.byte	3,146,1,1,5,11,9
	.half	.L385-.L139
	.byte	3,4,1,5,7,9
	.half	.L3-.L385
	.byte	3,1,1,5,10,9
	.half	.L386-.L3
	.byte	3,1,1,5,16,9
	.half	.L840-.L386
	.byte	3,2,1,5,15,9
	.half	.L841-.L840
	.byte	3,1,1,5,31,9
	.half	.L842-.L841
	.byte	1,5,11,9
	.half	.L2-.L842
	.byte	3,123,1,5,1,7,9
	.half	.L843-.L2
	.byte	3,7,1,7,9
	.half	.L226-.L843
	.byte	0,1,1
.L837:
	.sdecl	'.debug_ranges',debug,cluster('free_etharp_q')
	.sect	'.debug_ranges'
.L225:
	.word	-1,.L139,0,.L226-.L139,0,0
	.sdecl	'.debug_info',debug,cluster('etharp_free_entry')
	.sect	'.debug_info'
.L227:
	.word	238
	.half	3
	.word	.L228
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L230,.L229
	.byte	2
	.word	.L168
	.byte	3
	.byte	'etharp_free_entry',0,1,168,1,1,1,1
	.word	.L141,.L353,.L140
	.byte	4
	.byte	'i',0,1,168,1,23
	.word	.L252,.L354
	.byte	5
	.word	.L141,.L353
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('etharp_free_entry')
	.sect	'.debug_abbrev'
.L228:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,54,15
	.byte	39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('etharp_free_entry')
	.sect	'.debug_line'
.L229:
	.word	.L845-.L844
.L844:
	.half	3
	.word	.L847-.L846
.L846:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0,0,0,0,0
.L847:
	.byte	5,1,7,0,5,2
	.word	.L141
	.byte	3,167,1,1,5,16,9
	.half	.L389-.L141
	.byte	3,5,1,5,7,9
	.half	.L848-.L389
	.byte	1,5,16,9
	.half	.L849-.L848
	.byte	1,5,19,9
	.half	.L850-.L849
	.byte	1,5,3,9
	.half	.L851-.L850
	.byte	1,5,19,7,9
	.half	.L852-.L851
	.byte	3,3,1,5,28,9
	.half	.L853-.L852
	.byte	1,5,31,9
	.half	.L854-.L853
	.byte	1,5,14,9
	.half	.L388-.L854
	.byte	3,1,1,5,5,9
	.half	.L855-.L388
	.byte	1,5,14,9
	.half	.L856-.L855
	.byte	1,5,22,9
	.half	.L857-.L856
	.byte	1,5,20,9
	.half	.L858-.L857
	.byte	1,5,12,9
	.half	.L4-.L858
	.byte	3,3,1,5,3,9
	.half	.L859-.L4
	.byte	1,5,12,9
	.half	.L860-.L859
	.byte	1,5,24,9
	.half	.L861-.L860
	.byte	1,5,22,9
	.half	.L862-.L861
	.byte	1,5,1,9
	.half	.L863-.L862
	.byte	3,8,1,7,9
	.half	.L231-.L863
	.byte	0,1,1
.L845:
	.sdecl	'.debug_ranges',debug,cluster('etharp_free_entry')
	.sect	'.debug_ranges'
.L230:
	.word	-1,.L141,0,.L231-.L141,0,0
	.sdecl	'.debug_info',debug,cluster('etharp_find_entry')
	.sect	'.debug_info'
.L232:
	.word	489
	.half	3
	.word	.L233
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L235,.L234
	.byte	2
	.word	.L168
	.byte	3
	.byte	'etharp_find_entry',0,1,128,2,1
	.word	.L268
	.byte	1,1
	.word	.L145,.L355,.L144
	.byte	4
	.byte	'ipaddr',0,1,128,2,37
	.word	.L262,.L356
	.byte	4
	.byte	'flags',0,1,128,2,50
	.word	.L257,.L357
	.byte	4
	.byte	'netif',0,1,128,2,71
	.word	.L260,.L358
	.byte	5
	.word	.L145,.L355
	.byte	6
	.byte	'old_pending',0,1,130,2,9
	.word	.L268,.L359
	.byte	6
	.byte	'old_stable',0,1,130,2,39
	.word	.L268,.L360
	.byte	6
	.byte	'empty',0,1,131,2,9
	.word	.L268,.L361
	.byte	6
	.byte	'i',0,1,132,2,9
	.word	.L268,.L362
	.byte	6
	.byte	'old_queue',0,1,134,2,9
	.word	.L268,.L363
	.byte	6
	.byte	'age_queue',0,1,136,2,9
	.word	.L364,.L365
	.byte	6
	.byte	'age_pending',0,1,136,2,24
	.word	.L364,.L366
	.byte	6
	.byte	'age_stable',0,1,136,2,41
	.word	.L364,.L367
	.byte	7
	.word	.L368
	.byte	6
	.byte	'state',0,1,156,2,10
	.word	.L257,.L371
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('etharp_find_entry')
	.sect	'.debug_abbrev'
.L233:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,7,11,1,85,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('etharp_find_entry')
	.sect	'.debug_line'
.L234:
	.word	.L865-.L864
.L864:
	.half	3
	.word	.L867-.L866
.L866:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0,0,0,0,0
.L867:
	.byte	5,1,7,0,5,2
	.word	.L145
	.byte	3,255,1,1,5,21,9
	.half	.L395-.L145
	.byte	3,2,1,5,50,9
	.half	.L396-.L395
	.byte	1,5,15,9
	.half	.L398-.L396
	.byte	3,1,1,5,19,9
	.half	.L399-.L398
	.byte	3,3,1,9
	.half	.L400-.L399
	.byte	3,2,1,5,36,9
	.half	.L401-.L400
	.byte	1,5,52,9
	.half	.L402-.L401
	.byte	1,5,10,9
	.half	.L403-.L402
	.byte	3,19,1,5,19,9
	.half	.L369-.L403
	.byte	3,3,1,9
	.half	.L370-.L369
	.byte	3,125,1,5,33,9
	.half	.L404-.L370
	.byte	1,5,27,9
	.half	.L18-.L404
	.byte	3,1,1,5,18,9
	.half	.L868-.L18
	.byte	1,5,27,9
	.half	.L869-.L868
	.byte	1,5,30,9
	.half	.L870-.L869
	.byte	1,5,9,9
	.half	.L405-.L870
	.byte	3,2,1,5,45,7,9
	.half	.L406-.L405
	.byte	1,5,13,7,9
	.half	.L871-.L406
	.byte	3,3,1,5,16,9
	.half	.L872-.L871
	.byte	1,5,12,9
	.half	.L19-.L872
	.byte	3,1,1,5,11,7,9
	.half	.L873-.L19
	.byte	3,4,1,5,21,7,9
	.half	.L874-.L873
	.byte	1,5,7,9
	.half	.L23-.L874
	.byte	3,10,1,5,22,7,9
	.half	.L875-.L23
	.byte	3,2,1,5,13,9
	.half	.L407-.L875
	.byte	1,5,22,9
	.half	.L876-.L407
	.byte	1,5,25,9
	.half	.L877-.L876
	.byte	1,5,9,9
	.half	.L878-.L877
	.byte	1,5,15,7,9
	.half	.L879-.L878
	.byte	3,1,1,5,24,9
	.half	.L880-.L879
	.byte	1,5,27,9
	.half	.L881-.L880
	.byte	1,5,11,9
	.half	.L882-.L881
	.byte	1,5,23,7,9
	.half	.L883-.L882
	.byte	3,1,1,5,25,9
	.half	.L884-.L883
	.byte	3,1,1,5,34,9
	.half	.L885-.L884
	.byte	1,5,37,9
	.half	.L886-.L885
	.byte	1,5,11,9
	.half	.L887-.L886
	.byte	3,126,1,5,24,9
	.half	.L26-.L887
	.byte	3,7,1,5,15,9
	.half	.L888-.L26
	.byte	1,5,24,9
	.half	.L889-.L888
	.byte	1,5,27,9
	.half	.L890-.L889
	.byte	1,5,11,9
	.half	.L891-.L890
	.byte	1,5,25,7,9
	.half	.L892-.L891
	.byte	3,1,1,5,27,9
	.half	.L893-.L892
	.byte	3,1,1,5,36,9
	.half	.L894-.L893
	.byte	1,5,39,9
	.half	.L895-.L894
	.byte	1,5,11,9
	.half	.L896-.L895
	.byte	3,123,1,5,14,9
	.half	.L25-.L896
	.byte	3,9,1,5,24,7,9
	.half	.L897-.L25
	.byte	3,7,1,5,15,9
	.half	.L408-.L897
	.byte	1,5,24,9
	.half	.L898-.L408
	.byte	1,5,27,9
	.half	.L899-.L898
	.byte	1,5,11,9
	.half	.L900-.L899
	.byte	1,5,24,7,9
	.half	.L901-.L900
	.byte	3,1,1,5,26,9
	.half	.L902-.L901
	.byte	3,1,1,5,35,9
	.half	.L903-.L902
	.byte	1,5,38,9
	.half	.L904-.L903
	.byte	1,5,35,9
	.half	.L21-.L904
	.byte	3,82,1,5,33,9
	.half	.L17-.L21
	.byte	1,5,7,7,9
	.half	.L409-.L17
	.byte	3,55,1,5,8,7,9
	.half	.L410-.L409
	.byte	3,2,1,5,69,7,9
	.half	.L411-.L410
	.byte	1,5,15,7,9
	.half	.L34-.L411
	.byte	3,15,1,5,3,9
	.half	.L905-.L34
	.byte	1,5,7,7,9
	.half	.L906-.L905
	.byte	3,1,1,5,14,9
	.half	.L907-.L906
	.byte	1,5,5,9
	.half	.L36-.L907
	.byte	3,4,1,5,9,7,9
	.half	.L908-.L36
	.byte	3,2,1,5,68,9
	.half	.L909-.L908
	.byte	3,3,1,5,12,9
	.half	.L38-.L909
	.byte	3,2,1,5,9,7,9
	.half	.L910-.L38
	.byte	3,2,1,5,22,9
	.half	.L911-.L910
	.byte	1,5,12,9
	.half	.L40-.L911
	.byte	3,3,1,5,9,7,9
	.half	.L912-.L40
	.byte	3,2,1,5,20,9
	.half	.L913-.L912
	.byte	1,5,14,9
	.half	.L33-.L913
	.byte	3,5,1,5,1,9
	.half	.L397-.L33
	.byte	3,22,1,5,23,7,9
	.half	.L39-.L397
	.byte	3,111,1,5,3,9
	.half	.L37-.L39
	.byte	3,8,1,5,5,7,9
	.half	.L914-.L37
	.byte	3,2,1,5,12,9
	.half	.L45-.L914
	.byte	3,2,1,5,3,9
	.half	.L915-.L45
	.byte	1,5,12,9
	.half	.L916-.L915
	.byte	1,5,24,9
	.half	.L917-.L916
	.byte	1,5,22,9
	.half	.L918-.L917
	.byte	1,5,3,9
	.half	.L24-.L918
	.byte	3,4,1,5,1,9
	.half	.L412-.L24
	.byte	3,1,1,7,9
	.half	.L236-.L412
	.byte	0,1,1
.L865:
	.sdecl	'.debug_ranges',debug,cluster('etharp_find_entry')
	.sect	'.debug_ranges'
.L235:
	.word	-1,.L145,0,.L236-.L145,0,0
.L368:
	.word	-1,.L145,.L369-.L145,.L370-.L145,.L18-.L145,.L21-.L145,0,0
	.sdecl	'.debug_info',debug,cluster('etharp_update_arp_entry')
	.sect	'.debug_info'
.L237:
	.word	368
	.half	3
	.word	.L238
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L240,.L239
	.byte	2
	.word	.L168
	.byte	3
	.byte	'etharp_update_arp_entry',0,1,166,3,1
	.word	.L278
	.byte	1,1
	.word	.L147,.L372,.L146
	.byte	4
	.byte	'netif',0,1,166,3,39
	.word	.L260,.L373
	.byte	4
	.byte	'ipaddr',0,1,166,3,64
	.word	.L262,.L374
	.byte	4
	.byte	'ethaddr',0,1,166,3,89
	.word	.L296,.L375
	.byte	4
	.byte	'flags',0,1,166,3,103
	.word	.L257,.L376
	.byte	5
	.word	.L147,.L372
	.byte	6
	.byte	'i',0,1,168,3,9
	.word	.L268,.L377
	.byte	5
	.word	.L55,.L54
	.byte	6
	.byte	'p',0,1,215,3,18
	.word	.L281,.L378
	.byte	6
	.byte	'q',0,1,217,3,28
	.word	.L306,.L379
	.byte	0,0,0,0
	.sdecl	'.debug_abbrev',debug,cluster('etharp_update_arp_entry')
	.sect	'.debug_abbrev'
.L238:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,1,17,1,18,1,0,0,6,52,0,3
	.byte	8,58,15,59,15,57,15,73,16,2,6,0,0,0
	.sdecl	'.debug_line',debug,cluster('etharp_update_arp_entry')
	.sect	'.debug_line'
.L239:
	.word	.L920-.L919
.L919:
	.half	3
	.word	.L922-.L921
.L921:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0,0,0,0,0
.L922:
	.byte	5,1,7,0,5,2
	.word	.L147
	.byte	3,165,3,1,5,7,9
	.half	.L418-.L147
	.byte	3,9,1,7,9
	.half	.L923-.L418
	.byte	1,9
	.half	.L924-.L923
	.byte	3,1,1,9
	.half	.L925-.L924
	.byte	3,1,1,5,12,9
	.half	.L47-.L925
	.byte	3,2,1,5,1,9
	.half	.L926-.L47
	.byte	3,56,1,5,40,7,9
	.half	.L50-.L926
	.byte	3,75,1,5,5,9
	.half	.L421-.L50
	.byte	1,5,3,9
	.half	.L419-.L421
	.byte	3,2,1,5,12,7,9
	.half	.L927-.L419
	.byte	3,1,1,5,1,9
	.half	.L424-.L927
	.byte	3,50,1,5,14,7,9
	.half	.L52-.L424
	.byte	3,92,1,5,5,9
	.half	.L928-.L52
	.byte	1,5,14,9
	.half	.L929-.L928
	.byte	1,5,26,9
	.half	.L930-.L929
	.byte	1,5,24,9
	.half	.L931-.L930
	.byte	1,5,3,9
	.half	.L932-.L931
	.byte	3,4,1,5,12,9
	.half	.L933-.L932
	.byte	1,5,22,9
	.half	.L934-.L933
	.byte	1,5,3,9
	.half	.L935-.L934
	.byte	3,6,1,5,12,9
	.half	.L425-.L935
	.byte	3,2,1,5,3,9
	.half	.L936-.L425
	.byte	1,5,12,9
	.half	.L937-.L936
	.byte	1,5,24,9
	.half	.L938-.L937
	.byte	1,5,22,9
	.half	.L939-.L938
	.byte	1,5,32,9
	.half	.L940-.L939
	.byte	3,3,1,5,41,9
	.half	.L55-.L940
	.byte	3,3,1,5,32,9
	.half	.L941-.L55
	.byte	1,5,41,9
	.half	.L942-.L941
	.byte	1,5,44,9
	.half	.L943-.L942
	.byte	1,5,5,9
	.half	.L427-.L943
	.byte	3,2,1,5,14,9
	.half	.L944-.L427
	.byte	1,5,23,9
	.half	.L945-.L944
	.byte	1,5,20,9
	.half	.L946-.L945
	.byte	1,5,10,9
	.half	.L947-.L946
	.byte	3,2,1,5,15,9
	.half	.L429-.L947
	.byte	3,2,1,5,31,9
	.half	.L948-.L429
	.byte	1,5,56,9
	.half	.L428-.L948
	.byte	3,7,1,5,76,9
	.half	.L949-.L428
	.byte	1,5,15,9
	.half	.L431-.L949
	.byte	3,2,1,5,19,9
	.half	.L54-.L431
	.byte	3,110,1,5,10,9
	.half	.L950-.L54
	.byte	1,5,19,9
	.half	.L951-.L950
	.byte	1,5,22,9
	.half	.L952-.L951
	.byte	1,5,32,9
	.half	.L953-.L952
	.byte	1,5,10,7,9
	.half	.L954-.L953
	.byte	3,20,1,5,1,9
	.half	.L955-.L954
	.byte	3,1,1,7,9
	.half	.L241-.L955
	.byte	0,1,1
.L920:
	.sdecl	'.debug_ranges',debug,cluster('etharp_update_arp_entry')
	.sect	'.debug_ranges'
.L240:
	.word	-1,.L147,0,.L241-.L147,0,0
	.sdecl	'.debug_info',debug,cluster('etharp_output_to_arp_index')
	.sect	'.debug_info'
.L242:
	.word	291
	.half	3
	.word	.L243
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L245,.L244
	.byte	2
	.word	.L168
	.byte	3
	.byte	'etharp_output_to_arp_index',0,1,236,5,1
	.word	.L278
	.byte	1,1
	.word	.L157,.L380,.L156
	.byte	4
	.byte	'netif',0,1,236,5,42
	.word	.L260,.L381
	.byte	4
	.byte	'q',0,1,236,5,62
	.word	.L281,.L382
	.byte	4
	.byte	'arp_idx',0,1,236,5,82
	.word	.L257,.L383
	.byte	5
	.word	.L157,.L380
	.byte	0,0
	.sdecl	'.debug_abbrev',debug,cluster('etharp_output_to_arp_index')
	.sect	'.debug_abbrev'
.L243:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,85,6,16,6,0,0,2,61,0,24,16,0,0,3,46,1,3,8,58,15,59,15,57,15,73,16
	.byte	54,15,39,12,17,1,18,1,64,6,0,0,4,5,0,3,8,58,15,59,15,57,15,73,16,2,6,0,0,5,11,0,17,1,18,1,0,0,0
	.sdecl	'.debug_line',debug,cluster('etharp_output_to_arp_index')
	.sect	'.debug_line'
.L244:
	.word	.L957-.L956
.L956:
	.half	3
	.word	.L959-.L958
.L958:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0,0,0,0,0
.L959:
	.byte	5,1,7,0,5,2
	.word	.L157
	.byte	3,235,5,1,5,16,9
	.half	.L462-.L157
	.byte	3,7,1,5,7,9
	.half	.L960-.L462
	.byte	1,5,16,9
	.half	.L961-.L960
	.byte	1,5,25,9
	.half	.L962-.L961
	.byte	1,5,3,9
	.half	.L963-.L962
	.byte	1,5,9,7,9
	.half	.L964-.L963
	.byte	3,1,1,5,18,9
	.half	.L965-.L964
	.byte	1,5,27,9
	.half	.L966-.L965
	.byte	1,5,37,9
	.half	.L967-.L966
	.byte	1,5,5,9
	.half	.L968-.L967
	.byte	1,5,34,7,9
	.half	.L969-.L968
	.byte	3,2,1,5,43,9
	.half	.L970-.L969
	.byte	1,5,52,9
	.half	.L459-.L970
	.byte	1,5,7,9
	.half	.L458-.L459
	.byte	1,7,9
	.half	.L971-.L458
	.byte	1,5,25,9
	.half	.L79-.L971
	.byte	3,3,1,5,16,9
	.half	.L972-.L79
	.byte	1,5,25,9
	.half	.L973-.L972
	.byte	1,5,34,9
	.half	.L974-.L973
	.byte	1,5,44,9
	.half	.L975-.L974
	.byte	1,5,12,9
	.half	.L976-.L975
	.byte	1,5,38,7,9
	.half	.L977-.L976
	.byte	3,2,1,5,47,9
	.half	.L978-.L977
	.byte	1,5,56,9
	.half	.L464-.L978
	.byte	1,5,66,9
	.half	.L979-.L464
	.byte	1,5,75,9
	.half	.L980-.L979
	.byte	1,5,84,9
	.half	.L981-.L980
	.byte	1,5,7,9
	.half	.L463-.L981
	.byte	1,5,18,7,9
	.half	.L81-.L463
	.byte	3,1,1,5,9,9
	.half	.L982-.L81
	.byte	1,5,18,9
	.half	.L983-.L982
	.byte	1,5,36,9
	.half	.L984-.L983
	.byte	1,5,34,9
	.half	.L985-.L984
	.byte	1,5,61,9
	.half	.L78-.L985
	.byte	3,5,1,5,82,9
	.half	.L986-.L78
	.byte	1,5,73,9
	.half	.L987-.L986
	.byte	1,5,82,9
	.half	.L988-.L987
	.byte	1,5,91,9
	.half	.L989-.L988
	.byte	1,5,101,9
	.half	.L990-.L989
	.byte	1,5,1,9
	.half	.L246-.L990
	.byte	3,1,0,1,1
.L957:
	.sdecl	'.debug_ranges',debug,cluster('etharp_output_to_arp_index')
	.sect	'.debug_ranges'
.L245:
	.word	-1,.L157,0,.L246-.L157,0,0
	.sdecl	'.debug_info',debug,cluster('arp_table')
	.sect	'.debug_info'
.L247:
	.word	192
	.half	3
	.word	.L248
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L168
	.byte	3
	.byte	'arp_table',0,11,105,28
	.word	.L384
	.byte	5,3
	.word	arp_table
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('arp_table')
	.sect	'.debug_abbrev'
.L248:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_info',debug,cluster('etharp_cached_entry')
	.sect	'.debug_info'
.L249:
	.word	202
	.half	3
	.word	.L250
	.byte	4,1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\etharp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1,2
	.word	.L168
	.byte	3
	.byte	'etharp_cached_entry',0,11,108,25
	.word	.L257
	.byte	5,3
	.word	etharp_cached_entry
	.byte	0
	.sdecl	'.debug_abbrev',debug,cluster('etharp_cached_entry')
	.sect	'.debug_abbrev'
.L250:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,0,0,2,61,0,24,16,0,0,3,52,0,3,8,58,15,59,15,57,15,73,16,2,9,0,0,0
	.sdecl	'.debug_loc',debug,cluster('etharp_cleanup_netif')
	.sect	'.debug_loc'
.L148:
	.word	-1,.L149,0,.L320-.L149
	.half	2
	.byte	138,0
	.word	0,0
.L322:
	.word	-1,.L149,.L436-.L149,.L320-.L149
	.half	1
	.byte	88
	.word	.L438-.L149,.L59-.L149
	.half	1
	.byte	84
	.word	0,0
.L321:
	.word	-1,.L149,0,.L58-.L149
	.half	1
	.byte	100
	.word	.L435-.L149,.L320-.L149
	.half	1
	.byte	108
	.word	0,0
.L323:
	.word	-1,.L149,.L437-.L149,.L59-.L149
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('etharp_find_addr')
	.sect	'.debug_loc'
.L265:
	.word	-1,.L151,0,.L439-.L151
	.half	1
	.byte	102
	.word	.L444-.L151,.L259-.L151
	.half	1
	.byte	108
	.word	0,0
.L150:
	.word	-1,.L151,0,.L259-.L151
	.half	2
	.byte	138,0
	.word	0,0
.L269:
	.word	-1,.L151,.L439-.L151,.L446-.L151
	.half	1
	.byte	82
	.word	0,0
.L267:
	.word	-1,.L151,0,.L439-.L151
	.half	1
	.byte	103
	.word	.L445-.L151,.L259-.L151
	.half	1
	.byte	109
	.word	0,0
.L263:
	.word	-1,.L151,0,.L440-.L151
	.half	1
	.byte	101
	.word	.L441-.L151,.L439-.L151
	.half	1
	.byte	100
	.word	0,0
.L261:
	.word	-1,.L151,0,.L441-.L151
	.half	1
	.byte	100
	.word	.L442-.L151,.L443-.L151
	.half	1
	.byte	111
	.word	.L440-.L151,.L439-.L151
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('etharp_find_entry')
	.sect	'.debug_loc'
.L366:
	.word	-1,.L145,.L402-.L145,.L355-.L145
	.half	1
	.byte	89
	.word	0,0
.L365:
	.word	-1,.L145,.L401-.L145,.L37-.L145
	.half	1
	.byte	87
	.word	0,0
.L367:
	.word	-1,.L145,.L403-.L145,.L355-.L145
	.half	1
	.byte	90
	.word	0,0
.L361:
	.word	-1,.L145,.L399-.L145,.L37-.L145
	.half	1
	.byte	85
	.word	0,0
.L144:
	.word	-1,.L145,0,.L355-.L145
	.half	2
	.byte	138,0
	.word	0,0
.L357:
	.word	-1,.L145,0,.L394-.L145
	.half	1
	.byte	84
	.word	0,0
.L362:
	.word	-1,.L145,.L369-.L145,.L355-.L145
	.half	1
	.byte	88
	.word	.L394-.L145,.L37-.L145
	.half	1
	.byte	84
	.word	.L412-.L145,.L355-.L145
	.half	1
	.byte	82
	.word	0,0
.L356:
	.word	-1,.L145,0,.L37-.L145
	.half	1
	.byte	100
	.word	.L395-.L145,.L355-.L145
	.half	1
	.byte	108
	.word	0,0
.L358:
	.word	-1,.L145,0,.L37-.L145
	.half	1
	.byte	101
	.word	0,0
.L359:
	.word	-1,.L145,.L396-.L145,.L397-.L145
	.half	1
	.byte	82
	.word	.L370-.L145,.L404-.L145
	.half	1
	.byte	91
	.word	.L404-.L145,.L18-.L145
	.half	1
	.byte	92
	.word	.L405-.L145,.L406-.L145
	.half	1
	.byte	91
	.word	.L17-.L145,.L409-.L145
	.half	1
	.byte	92
	.word	.L410-.L145,.L411-.L145
	.half	1
	.byte	92
	.word	.L39-.L145,.L37-.L145
	.half	1
	.byte	82
	.word	0,0
.L363:
	.word	-1,.L145,.L400-.L145,.L37-.L145
	.half	1
	.byte	86
	.word	0,0
.L360:
	.word	-1,.L145,.L398-.L145,.L37-.L145
	.half	1
	.byte	83
	.word	0,0
.L371:
	.word	-1,.L145,.L405-.L145,.L407-.L145
	.half	1
	.byte	95
	.word	.L25-.L145,.L408-.L145
	.half	1
	.byte	95
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('etharp_free_entry')
	.sect	'.debug_loc'
.L140:
	.word	-1,.L141,0,.L353-.L141
	.half	2
	.byte	138,0
	.word	0,0
.L354:
	.word	-1,.L141,0,.L388-.L141
	.half	1
	.byte	84
	.word	.L389-.L141,.L353-.L141
	.half	1
	.byte	88
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('etharp_get_entry')
	.sect	'.debug_loc'
.L277:
	.word	-1,.L153,0,.L270-.L153
	.half	1
	.byte	102
	.word	0,0
.L152:
	.word	-1,.L153,0,.L270-.L153
	.half	2
	.byte	138,0
	.word	0,0
.L272:
	.word	-1,.L153,0,.L270-.L153
	.half	1
	.byte	84
	.word	0,0
.L274:
	.word	-1,.L153,0,.L270-.L153
	.half	1
	.byte	100
	.word	0,0
.L276:
	.word	-1,.L153,0,.L270-.L153
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('etharp_input')
	.sect	'.debug_loc'
.L331:
	.word	-1,.L155,0,.L324-.L155
	.half	2
	.byte	145,120
	.word	0,0
.L154:
	.word	-1,.L155,0,.L447-.L155
	.half	2
	.byte	138,0
	.word	.L447-.L155,.L74-.L155
	.half	2
	.byte	138,24
	.word	.L74-.L155,.L74-.L155
	.half	2
	.byte	138,0
	.word	.L74-.L155,.L324-.L155
	.half	2
	.byte	138,24
	.word	.L324-.L155,.L324-.L155
	.half	2
	.byte	138,0
	.word	0,0
.L332:
	.word	-1,.L155,.L453-.L155,.L69-.L155
	.half	1
	.byte	88
	.word	.L75-.L155,.L70-.L155
	.half	1
	.byte	88
	.word	0,0
.L328:
	.word	-1,.L155,.L452-.L155,.L69-.L155
	.half	1
	.byte	110
	.word	.L74-.L155,.L324-.L155
	.half	1
	.byte	110
	.word	0,0
.L326:
	.word	-1,.L155,0,.L448-.L155
	.half	1
	.byte	101
	.word	.L451-.L155,.L324-.L155
	.half	1
	.byte	109
	.word	.L69-.L155,.L74-.L155
	.half	1
	.byte	101
	.word	.L454-.L155,.L455-.L155
	.half	1
	.byte	100
	.word	.L456-.L155,.L70-.L155
	.half	1
	.byte	100
	.word	0,0
.L325:
	.word	-1,.L155,0,.L449-.L155
	.half	1
	.byte	100
	.word	.L450-.L155,.L324-.L155
	.half	1
	.byte	108
	.word	.L69-.L155,.L74-.L155
	.half	1
	.byte	100
	.word	.L457-.L155,.L324-.L155
	.half	1
	.byte	100
	.word	0,0
.L330:
	.word	-1,.L155,0,.L324-.L155
	.half	2
	.byte	145,116
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('etharp_output')
	.sect	'.debug_loc'
.L285:
	.word	-1,.L159,.L472-.L159,.L85-.L159
	.half	1
	.byte	103
	.word	.L473-.L159,.L474-.L159
	.half	1
	.byte	106
	.word	.L474-.L159,.L87-.L159
	.half	1
	.byte	103
	.word	.L86-.L159,.L279-.L159
	.half	1
	.byte	103
	.word	0,0
.L288:
	.word	0,0
.L158:
	.word	-1,.L159,0,.L467-.L159
	.half	2
	.byte	138,0
	.word	.L467-.L159,.L92-.L159
	.half	2
	.byte	138,8
	.word	.L92-.L159,.L92-.L159
	.half	2
	.byte	138,0
	.word	.L92-.L159,.L95-.L159
	.half	2
	.byte	138,8
	.word	.L95-.L159,.L95-.L159
	.half	2
	.byte	138,0
	.word	.L95-.L159,.L100-.L159
	.half	2
	.byte	138,8
	.word	.L100-.L159,.L100-.L159
	.half	2
	.byte	138,0
	.word	.L100-.L159,.L88-.L159
	.half	2
	.byte	138,8
	.word	.L88-.L159,.L88-.L159
	.half	2
	.byte	138,0
	.word	.L88-.L159,.L279-.L159
	.half	2
	.byte	138,8
	.word	.L279-.L159,.L279-.L159
	.half	2
	.byte	138,0
	.word	0,0
.L291:
	.word	-1,.L159,.L477-.L159,.L86-.L159
	.half	1
	.byte	84
	.word	0,0
.L283:
	.word	-1,.L159,0,.L468-.L159
	.half	1
	.byte	102
	.word	.L471-.L159,.L279-.L159
	.half	1
	.byte	110
	.word	.L481-.L159,.L86-.L159
	.half	1
	.byte	101
	.word	0,0
.L287:
	.word	-1,.L159,0,.L279-.L159
	.half	2
	.byte	145,120
	.word	0,0
.L280:
	.word	-1,.L159,0,.L468-.L159
	.half	1
	.byte	100
	.word	.L469-.L159,.L279-.L159
	.half	1
	.byte	108
	.word	.L475-.L159,.L94-.L159
	.half	1
	.byte	100
	.word	.L478-.L159,.L99-.L159
	.half	1
	.byte	100
	.word	.L480-.L159,.L86-.L159
	.half	1
	.byte	100
	.word	.L483-.L159,.L279-.L159
	.half	1
	.byte	100
	.word	0,0
.L282:
	.word	-1,.L159,0,.L468-.L159
	.half	1
	.byte	101
	.word	.L470-.L159,.L279-.L159
	.half	1
	.byte	109
	.word	.L476-.L159,.L94-.L159
	.half	1
	.byte	101
	.word	.L479-.L159,.L99-.L159
	.half	1
	.byte	101
	.word	.L482-.L159,.L86-.L159
	.half	1
	.byte	102
	.word	.L484-.L159,.L279-.L159
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('etharp_output_to_arp_index')
	.sect	'.debug_loc'
.L383:
	.word	-1,.L157,0,.L458-.L157
	.half	1
	.byte	84
	.word	.L462-.L157,.L380-.L157
	.half	1
	.byte	88
	.word	.L79-.L157,.L463-.L157
	.half	1
	.byte	84
	.word	0,0
.L156:
	.word	-1,.L157,0,.L380-.L157
	.half	2
	.byte	138,0
	.word	0,0
.L381:
	.word	-1,.L157,0,.L458-.L157
	.half	1
	.byte	100
	.word	.L460-.L157,.L380-.L157
	.half	1
	.byte	108
	.word	.L79-.L157,.L463-.L157
	.half	1
	.byte	100
	.word	.L465-.L157,.L380-.L157
	.half	1
	.byte	100
	.word	0,0
.L382:
	.word	-1,.L157,0,.L459-.L157
	.half	1
	.byte	101
	.word	.L461-.L157,.L380-.L157
	.half	1
	.byte	109
	.word	.L79-.L157,.L464-.L157
	.half	1
	.byte	101
	.word	.L466-.L157,.L380-.L157
	.half	1
	.byte	101
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('etharp_query')
	.sect	'.debug_loc'
.L304:
	.word	-1,.L161,.L508-.L161,.L509-.L161
	.half	5
	.byte	144,32,157,32,0
	.word	.L122-.L161,.L123-.L161
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L160:
	.word	-1,.L161,0,.L485-.L161
	.half	2
	.byte	138,0
	.word	.L485-.L161,.L107-.L161
	.half	2
	.byte	138,8
	.word	.L107-.L161,.L107-.L161
	.half	2
	.byte	138,0
	.word	.L107-.L161,.L109-.L161
	.half	2
	.byte	138,8
	.word	.L109-.L161,.L109-.L161
	.half	2
	.byte	138,0
	.word	.L109-.L161,.L292-.L161
	.half	2
	.byte	138,8
	.word	.L292-.L161,.L292-.L161
	.half	2
	.byte	138,0
	.word	0,0
.L301:
	.word	0,0
.L300:
	.word	-1,.L161,.L496-.L161,.L498-.L161
	.half	1
	.byte	82
	.word	.L499-.L161,.L292-.L161
	.half	1
	.byte	90
	.word	.L109-.L161,.L493-.L161
	.half	1
	.byte	82
	.word	0,0
.L294:
	.word	-1,.L161,0,.L486-.L161
	.half	1
	.byte	101
	.word	.L488-.L161,.L292-.L161
	.half	1
	.byte	109
	.word	.L495-.L161,.L496-.L161
	.half	1
	.byte	100
	.word	.L501-.L161,.L493-.L161
	.half	1
	.byte	101
	.word	0,0
.L299:
	.word	-1,.L161,.L494-.L161,.L292-.L161
	.half	1
	.byte	88
	.word	0,0
.L293:
	.word	-1,.L161,0,.L486-.L161
	.half	1
	.byte	100
	.word	.L487-.L161,.L292-.L161
	.half	1
	.byte	108
	.word	.L497-.L161,.L496-.L161
	.half	1
	.byte	101
	.word	.L500-.L161,.L493-.L161
	.half	1
	.byte	100
	.word	.L504-.L161,.L503-.L161
	.half	1
	.byte	100
	.word	0,0
.L307:
	.word	-1,.L161,.L515-.L161,.L516-.L161
	.half	1
	.byte	98
	.word	.L125-.L161,.L124-.L161
	.half	1
	.byte	98
	.word	0,0
.L316:
	.word	-1,.L161,.L519-.L161,.L130-.L161
	.half	1
	.byte	111
	.word	.L520-.L161,.L130-.L161
	.half	1
	.byte	100
	.word	0,0
.L303:
	.word	-1,.L161,.L510-.L161,.L509-.L161
	.half	1
	.byte	111
	.word	.L509-.L161,.L122-.L161
	.half	1
	.byte	98
	.word	.L512-.L161,.L513-.L161
	.half	1
	.byte	111
	.word	.L125-.L161,.L114-.L161
	.half	1
	.byte	111
	.word	.L521-.L161,.L124-.L161
	.half	1
	.byte	100
	.word	0,0
.L295:
	.word	-1,.L161,0,.L486-.L161
	.half	1
	.byte	102
	.word	.L489-.L161,.L292-.L161
	.half	1
	.byte	110
	.word	.L505-.L161,.L503-.L161
	.half	1
	.byte	101
	.word	.L511-.L161,.L509-.L161
	.half	1
	.byte	100
	.word	.L514-.L161,.L123-.L161
	.half	1
	.byte	100
	.word	0,0
.L311:
	.word	-1,.L161,.L517-.L161,.L518-.L161
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
.L314:
	.word	-1,.L161,.L128-.L161,.L126-.L161
	.half	1
	.byte	111
	.word	0,0
.L298:
	.word	-1,.L161,.L492-.L161,.L493-.L161
	.half	1
	.byte	89
	.word	.L493-.L161,.L113-.L161
	.half	1
	.byte	82
	.word	.L502-.L161,.L503-.L161
	.half	1
	.byte	89
	.word	.L503-.L161,.L115-.L161
	.half	1
	.byte	82
	.word	.L507-.L161,.L292-.L161
	.half	1
	.byte	89
	.word	.L522-.L161,.L292-.L161
	.half	1
	.byte	82
	.word	0,0
.L297:
	.word	-1,.L161,.L490-.L161,.L486-.L161
	.half	1
	.byte	98
	.word	.L491-.L161,.L292-.L161
	.half	2
	.byte	145,120
	.word	.L506-.L161,.L503-.L161
	.half	1
	.byte	102
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('etharp_raw')
	.sect	'.debug_loc'
.L162:
	.word	-1,.L163,0,.L523-.L163
	.half	2
	.byte	138,0
	.word	.L523-.L163,.L133-.L163
	.half	2
	.byte	138,8
	.word	.L133-.L163,.L133-.L163
	.half	2
	.byte	138,0
	.word	.L133-.L163,.L337-.L163
	.half	2
	.byte	138,8
	.word	.L337-.L163,.L337-.L163
	.half	2
	.byte	138,0
	.word	0,0
.L340:
	.word	-1,.L163,0,.L524-.L163
	.half	1
	.byte	102
	.word	.L528-.L163,.L337-.L163
	.half	2
	.byte	145,120
	.word	.L548-.L163,.L545-.L163
	.half	1
	.byte	103
	.word	0,0
.L339:
	.word	-1,.L163,0,.L524-.L163
	.half	1
	.byte	101
	.word	.L527-.L163,.L337-.L163
	.half	2
	.byte	145,124
	.word	.L547-.L163,.L545-.L163
	.half	1
	.byte	102
	.word	0,0
.L349:
	.word	-1,.L163,.L534-.L163,.L337-.L163
	.half	1
	.byte	111
	.word	0,0
.L343:
	.word	-1,.L163,0,.L337-.L163
	.half	2
	.byte	145,4
	.word	.L538-.L163,.L539-.L163
	.half	1
	.byte	101
	.word	0,0
.L341:
	.word	-1,.L163,0,.L524-.L163
	.half	1
	.byte	103
	.word	.L529-.L163,.L337-.L163
	.half	1
	.byte	109
	.word	.L536-.L163,.L537-.L163
	.half	1
	.byte	101
	.word	0,0
.L344:
	.word	-1,.L163,0,.L337-.L163
	.half	2
	.byte	145,8
	.word	.L542-.L163,.L543-.L163
	.half	1
	.byte	101
	.word	0,0
.L342:
	.word	-1,.L163,0,.L337-.L163
	.half	2
	.byte	145,0
	.word	.L540-.L163,.L541-.L163
	.half	1
	.byte	101
	.word	0,0
.L338:
	.word	-1,.L163,0,.L524-.L163
	.half	1
	.byte	100
	.word	.L526-.L163,.L337-.L163
	.half	1
	.byte	108
	.word	.L544-.L163,.L545-.L163
	.half	1
	.byte	100
	.word	0,0
.L346:
	.word	-1,.L163,0,.L525-.L163
	.half	1
	.byte	84
	.word	.L530-.L163,.L531-.L163
	.half	1
	.byte	95
	.word	.L535-.L163,.L532-.L163
	.half	1
	.byte	84
	.word	0,0
.L347:
	.word	-1,.L163,.L524-.L163,.L532-.L163
	.half	1
	.byte	98
	.word	.L533-.L163,.L337-.L163
	.half	1
	.byte	110
	.word	.L546-.L163,.L545-.L163
	.half	1
	.byte	101
	.word	.L549-.L163,.L550-.L163
	.half	1
	.byte	100
	.word	0,0
.L348:
	.word	-1,.L163,.L551-.L163,.L337-.L163
	.half	1
	.byte	82
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('etharp_request')
	.sect	'.debug_loc'
.L166:
	.word	-1,.L167,0,.L317-.L167
	.half	2
	.byte	138,0
	.word	0,0
.L319:
	.word	-1,.L167,0,.L317-.L167
	.half	1
	.byte	101
	.word	0,0
.L318:
	.word	-1,.L167,0,.L317-.L167
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('etharp_request_dst')
	.sect	'.debug_loc'
.L164:
	.word	-1,.L165,0,.L552-.L165
	.half	2
	.byte	138,0
	.word	.L552-.L165,.L333-.L165
	.half	2
	.byte	138,16
	.word	.L333-.L165,.L333-.L165
	.half	2
	.byte	138,0
	.word	0,0
.L336:
	.word	-1,.L165,0,.L333-.L165
	.half	1
	.byte	102
	.word	0,0
.L335:
	.word	-1,.L165,0,.L553-.L165
	.half	1
	.byte	101
	.word	0,0
.L334:
	.word	-1,.L165,0,.L333-.L165
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('etharp_tmr')
	.sect	'.debug_loc'
.L142:
	.word	-1,.L143,0,.L251-.L143
	.half	2
	.byte	138,0
	.word	0,0
.L253:
	.word	-1,.L143,.L255-.L143,.L251-.L143
	.half	1
	.byte	88
	.word	.L392-.L143,.L393-.L143
	.half	1
	.byte	84
	.word	0,0
.L258:
	.word	-1,.L143,.L390-.L143,.L391-.L143
	.half	5
	.byte	144,32,157,32,0
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('etharp_update_arp_entry')
	.sect	'.debug_loc'
.L375:
	.word	-1,.L147,0,.L413-.L147
	.half	1
	.byte	102
	.word	.L417-.L147,.L372-.L147
	.half	1
	.byte	110
	.word	.L426-.L147,.L425-.L147
	.half	1
	.byte	101
	.word	.L433-.L147,.L431-.L147
	.half	1
	.byte	103
	.word	0,0
.L146:
	.word	-1,.L147,0,.L372-.L147
	.half	2
	.byte	138,0
	.word	0,0
.L376:
	.word	-1,.L147,0,.L414-.L147
	.half	1
	.byte	84
	.word	.L418-.L147,.L419-.L147
	.half	1
	.byte	88
	.word	.L422-.L147,.L421-.L147
	.half	1
	.byte	84
	.word	0,0
.L377:
	.word	-1,.L147,.L421-.L147,.L424-.L147
	.half	1
	.byte	82
	.word	.L419-.L147,.L372-.L147
	.half	1
	.byte	88
	.word	.L52-.L147,.L425-.L147
	.half	1
	.byte	82
	.word	0,0
.L374:
	.word	-1,.L147,0,.L413-.L147
	.half	1
	.byte	101
	.word	.L416-.L147,.L372-.L147
	.half	1
	.byte	108
	.word	.L420-.L147,.L421-.L147
	.half	1
	.byte	100
	.word	0,0
.L373:
	.word	-1,.L147,0,.L413-.L147
	.half	1
	.byte	100
	.word	.L415-.L147,.L372-.L147
	.half	1
	.byte	109
	.word	.L423-.L147,.L421-.L147
	.half	1
	.byte	101
	.word	.L430-.L147,.L431-.L147
	.half	1
	.byte	100
	.word	0,0
.L378:
	.word	-1,.L147,.L429-.L147,.L54-.L147
	.half	1
	.byte	111
	.word	.L432-.L147,.L431-.L147
	.half	1
	.byte	101
	.word	.L434-.L147,.L54-.L147
	.half	1
	.byte	100
	.word	0,0
.L379:
	.word	-1,.L147,.L427-.L147,.L428-.L147
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_loc',debug,cluster('free_etharp_q')
	.sect	'.debug_loc'
.L138:
	.word	-1,.L139,0,.L350-.L139
	.half	2
	.byte	138,0
	.word	0,0
.L351:
	.word	-1,.L139,0,.L3-.L139
	.half	1
	.byte	100
	.word	.L385-.L139,.L350-.L139
	.half	1
	.byte	108
	.word	0,0
.L352:
	.word	-1,.L139,.L386-.L139,.L2-.L139
	.half	1
	.byte	111
	.word	.L387-.L139,.L2-.L139
	.half	1
	.byte	100
	.word	0,0
	.sdecl	'.debug_frame',debug
	.sect	'.debug_frame'
.L991:
	.word	48
	.word	-1
	.byte	3,0,2,1,27,12,26,0,8,27,8,26,8,28,8,29,8,30,8,31,8,34,8,35,8,32,8,33,8,16,8,17,8,24,8,25,8,36,8,37,8,38
	.byte	8,39
	.sdecl	'.debug_frame',debug,cluster('free_etharp_q')
	.sect	'.debug_frame'
	.word	12
	.word	.L991,.L139,.L350-.L139
	.sdecl	'.debug_frame',debug,cluster('etharp_free_entry')
	.sect	'.debug_frame'
	.word	12
	.word	.L991,.L141,.L353-.L141
	.sdecl	'.debug_frame',debug,cluster('etharp_tmr')
	.sect	'.debug_frame'
	.word	12
	.word	.L991,.L143,.L251-.L143
	.sdecl	'.debug_frame',debug,cluster('etharp_find_entry')
	.sect	'.debug_frame'
	.word	12
	.word	.L991,.L145,.L355-.L145
	.sdecl	'.debug_frame',debug,cluster('etharp_update_arp_entry')
	.sect	'.debug_frame'
	.word	12
	.word	.L991,.L147,.L372-.L147
	.sdecl	'.debug_frame',debug,cluster('etharp_cleanup_netif')
	.sect	'.debug_frame'
	.word	12
	.word	.L991,.L149,.L320-.L149
	.sdecl	'.debug_frame',debug,cluster('etharp_find_addr')
	.sect	'.debug_frame'
	.word	12
	.word	.L991,.L151,.L259-.L151
	.sdecl	'.debug_frame',debug,cluster('etharp_get_entry')
	.sect	'.debug_frame'
	.word	20
	.word	.L991,.L153,.L270-.L153
	.byte	8,18,8,19,8,23,0,0
	.sdecl	'.debug_frame',debug,cluster('etharp_input')
	.sect	'.debug_frame'
	.word	52
	.word	.L991,.L155,.L324-.L155
	.byte	4
	.word	(.L447-.L155)/2
	.byte	19,24,22,26,3,19,138,24,4
	.word	(.L74-.L447)/2
	.byte	19,0,8,26,19,24,22,26,3,19,138,24,4
	.word	(.L324-.L74)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('etharp_output_to_arp_index')
	.sect	'.debug_frame'
	.word	12
	.word	.L991,.L157,.L380-.L157
	.sdecl	'.debug_frame',debug,cluster('etharp_output')
	.sect	'.debug_frame'
	.word	104
	.word	.L991,.L159,.L279-.L159
	.byte	4
	.word	(.L467-.L159)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L92-.L467)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L95-.L92)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L100-.L95)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L88-.L100)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L279-.L88)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('etharp_query')
	.sect	'.debug_frame'
	.word	68
	.word	.L991,.L161,.L292-.L161
	.byte	4
	.word	(.L485-.L161)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L107-.L485)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L109-.L107)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L292-.L109)/2
	.byte	19,0,8,26
	.sdecl	'.debug_frame',debug,cluster('etharp_raw')
	.sect	'.debug_frame'
	.word	52
	.word	.L991,.L163,.L337-.L163
	.byte	4
	.word	(.L523-.L163)/2
	.byte	19,8,22,26,3,19,138,8,4
	.word	(.L133-.L523)/2
	.byte	19,0,8,26,19,8,22,26,3,19,138,8,4
	.word	(.L337-.L133)/2
	.byte	19,0,8,26,0
	.sdecl	'.debug_frame',debug,cluster('etharp_request_dst')
	.sect	'.debug_frame'
	.word	36
	.word	.L991,.L165,.L333-.L165
	.byte	4
	.word	(.L552-.L165)/2
	.byte	19,16,22,26,3,19,138,16,4
	.word	(.L333-.L552)/2
	.byte	19,0,8,26,0,0
	.sdecl	'.debug_frame',debug,cluster('etharp_request')
	.sect	'.debug_frame'
	.word	12
	.word	.L991,.L167,.L317-.L167

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1202  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1203  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\etharp.c	  1204  #endif /* LWIP_IPV4 && LWIP_ARP */

	; Module end
