	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 09003395"
	.compiler_invocation	"ctc -f cc28236a --dep-file=EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\.dhcp.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --fp-model=+float -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Lib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\App_Func -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\demo -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Adc_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Gtm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\AscLin_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Can_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\EthV2_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Stm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Main -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\APP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\BswM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanSm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Com -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\ComM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Common -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Crc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Det -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\DoIP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EcuM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Eth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthSM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTrcv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FiM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FlsTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Nm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\PduR -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\RamTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\StbM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\arpa -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\net -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\sys -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\stdc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\apps -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\priv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\UdpNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Cal -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Daq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pag -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pgm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Std -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\XcpOnEth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Library\\Vfx_ComE2E -g2 --make-target=EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\dhcp.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O1 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\dhcp.src ..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\dhcp.c"
	.compiler_name		"ctc"
	;source	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\dhcp.c'

	
$TC162
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	4547
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\dhcp.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L5
	.byte	2,1,3
	.word	168
	.byte	4
	.byte	'__codeptr',0,1,1,1
	.word	170
	.byte	5
	.byte	'unsigned char',0,1,8,4
	.byte	'boolean',0,2,102,29
	.word	193
	.byte	4
	.byte	'uint8',0,2,106,29
	.word	193
	.byte	5
	.byte	'unsigned short int',0,2,7,4
	.byte	'uint16',0,2,110,29
	.word	240
	.byte	5
	.byte	'unsigned long int',0,4,7,4
	.byte	'uint32',0,2,114,29
	.word	277
	.byte	4
	.byte	'Std_ReturnType',0,3,109,16
	.word	193
	.byte	4
	.byte	'PduIdType',0,4,37,21
	.word	193
	.byte	4
	.byte	'PduLengthType',0,4,41,22
	.word	240
	.byte	6,5,101,9,1,7
	.byte	'BUFREQ_OK',0,0,7
	.byte	'BUFREQ_E_NOT_OK',0,1,7
	.byte	'BUFREQ_E_BUSY',0,2,7
	.byte	'BUFREQ_E_OVFL',0,3,0,4
	.byte	'BufReq_ReturnType',0,5,107,3
	.word	376
	.byte	3
	.word	193
	.byte	4
	.byte	'SduDataPtrType',0,5,189,1,40
	.word	470
	.byte	6,5,204,1,9,1,7
	.byte	'TP_DATACONF',0,0,7
	.byte	'TP_DATARETRY',0,1,7
	.byte	'TP_CONFPENDING',0,2,0,4
	.byte	'TpDataStateType',0,5,216,1,3
	.word	499
	.byte	4
	.byte	'TcpIp_SocketIdType',0,6,50,16
	.word	193
	.byte	8,4
	.word	277
	.byte	9,0,0,10,6,52,9,4,11
	.byte	'Addr',0
	.word	604
	.byte	4,2,35,0,0,4
	.byte	'TcpIp_IpAddressType',0,6,55,3
	.word	613
	.byte	4
	.byte	'TcpIp_DomainType',0,6,61,16
	.word	240
	.byte	10,6,68,9,8,11
	.byte	'Domain',0
	.word	240
	.byte	2,2,35,0,11
	.byte	'Port',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'Addr',0
	.word	604
	.byte	4,2,35,4,0,4
	.byte	'TcpIp_SockAddrInetType',0,6,73,3
	.word	686
	.byte	4
	.byte	'TcpIp_AddressType',0,7,128,1,15
	.word	193
	.byte	4
	.byte	'TcpIp_CtrlIdType',0,7,142,1,15
	.word	193
	.byte	4
	.byte	'TcpIp_IpAddrStateType',0,7,144,1,15
	.word	193
	.byte	4
	.byte	'TcpIp_LocalAddrAssignmentConfigType',0,7,149,1,15
	.word	193
	.byte	4
	.byte	'TcpIp_StaticAddrIdType',0,7,151,1,15
	.word	193
	.byte	10,7,152,1,9,12,11
	.byte	'State',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'Netmask',0
	.word	193
	.byte	1,2,35,1,11
	.byte	'Domain',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'IpAddr',0
	.word	613
	.byte	4,2,35,4,11
	.byte	'DefaultRouter',0
	.word	613
	.byte	4,2,35,8,0,4
	.byte	'TcpIp_StaticIpAddrType',0,7,162,1,3
	.word	928
	.byte	4
	.byte	'TcpIp_LocalAddrIdType',0,7,173,1,15
	.word	193
	.byte	8,3
	.word	193
	.byte	9,2,0,10,7,231,1,9,8,11
	.byte	'CtrlId',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'Address',0
	.word	193
	.byte	1,2,35,1,11
	.byte	'Domain',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'StaticAddrId',0
	.word	193
	.byte	1,2,35,4,11
	.byte	'Assignments',0
	.word	1085
	.byte	3,2,35,5,0,4
	.byte	'TcpIp_LocalAddrConfigType',0,7,243,1,3
	.word	1094
	.byte	10,7,245,1,9,4,11
	.byte	'ArpConfigId',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'DHCPConfigId',0
	.word	193
	.byte	1,2,35,1,11
	.byte	'AutoIpInitTimeout',0
	.word	240
	.byte	2,2,35,2,0,4
	.byte	'TcpIp_IpV4CtrlConfigType',0,7,130,2,3
	.word	1228
	.byte	10,7,133,2,9,8,11
	.byte	'CtrlIdx',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'FramePrio',0
	.word	193
	.byte	1,2,35,1,11
	.byte	'UnicastAddrId',0
	.word	193
	.byte	1,2,35,2,11
	.byte	'UnicastAddrLimit',0
	.word	193
	.byte	1,2,35,3,11
	.byte	'MulticastAddrId',0
	.word	193
	.byte	1,2,35,4,11
	.byte	'LocalAddrLimit',0
	.word	193
	.byte	1,2,35,5,11
	.byte	'IpV4CtrlId',0
	.word	193
	.byte	1,2,35,6,11
	.byte	'IpV6CtrlId',0
	.word	193
	.byte	1,2,35,7,0,4
	.byte	'TcpIp_NetIfCtrlConfigType',0,7,148,2,3
	.word	1339
	.byte	4
	.byte	'SoAd_RoutingGroupIdType',0,8,43,15
	.word	193
	.byte	4
	.byte	'SoAd_SoConIdType',0,8,44,15
	.word	193
	.byte	4
	.byte	'SoAd_SoConGroupIdType',0,8,45,15
	.word	193
	.byte	4
	.byte	'SoAd_PduRouteIdType',0,8,46,15
	.word	193
	.byte	4
	.byte	'SoAd_PduRouteDestIdType',0,8,47,15
	.word	193
	.byte	4
	.byte	'SoAd_SocketRouteIdType',0,8,48,15
	.word	193
	.byte	4
	.byte	'SoAd_IfTxUnconfirmedType',0,8,49,16
	.word	240
	.byte	4
	.byte	'SoAd_IfTxTimerType',0,8,51,16
	.word	240
	.byte	8,1
	.word	193
	.byte	9,0,0,10,8,53,9,2,11
	.byte	'Mask',0
	.word	1793
	.byte	1,2,35,0,11
	.byte	'RoutingState',0
	.word	1793
	.byte	1,2,35,1,0,4
	.byte	'SoAd_RoutingGroupCtrlType',0,8,57,3
	.word	1802
	.byte	6,8,63,9,1,7
	.byte	'SOAD_UL_DOIP',0,0,7
	.byte	'SOAD_UL_UDPNM',0,1,7
	.byte	'SOAD_UL_PDUR',0,2,7
	.byte	'SOAD_UL_XCP',0,3,7
	.byte	'SOAD_UL_MAX',0,4,0,4
	.byte	'SoAd_ULIndexType',0,8,71,3
	.word	1878
	.byte	4
	.byte	'SoAd_RemoteAddressType',0,9,113,32
	.word	686
	.byte	6,9,115,9,1,7
	.byte	'SOAD_SOCON_UNINIT',0,0,7
	.byte	'SOAD_SOCON_OFFLINE',0,1,7
	.byte	'SOAD_SOCON_RECONN',0,2,7
	.byte	'SOAD_SOCON_ONLINE',0,3,0,4
	.byte	'SoAd_SoConModeType',0,9,121,3
	.word	2014
	.byte	12
	.word	193
	.byte	3
	.word	2128
	.byte	12
	.word	193
	.byte	3
	.word	2138
	.byte	12
	.word	193
	.byte	3
	.word	2148
	.byte	12
	.word	1878
	.byte	3
	.word	2158
	.byte	10,9,129,1,9,36,11
	.byte	'IfBufferLength',0
	.word	240
	.byte	2,2,35,0,11
	.byte	'IfBufferOffset',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'TpBufferLength',0
	.word	240
	.byte	2,2,35,4,11
	.byte	'TpBufferOffset',0
	.word	240
	.byte	2,2,35,6,11
	.byte	'PduRouteNum',0
	.word	193
	.byte	1,2,35,8,11
	.byte	'SocketRouteNum',0
	.word	193
	.byte	1,2,35,9,11
	.byte	'PduRouteDestNum',0
	.word	193
	.byte	1,2,35,10,11
	.byte	'RemoteAddrState',0
	.word	193
	.byte	1,2,35,11,11
	.byte	'RemoteAddr',0
	.word	686
	.byte	8,2,35,12,11
	.byte	'PduRouteDestList',0
	.word	2133
	.byte	4,2,35,20,11
	.byte	'PduRouteList',0
	.word	2143
	.byte	4,2,35,24,11
	.byte	'SocketRouteList',0
	.word	2153
	.byte	4,2,35,28,11
	.byte	'SoConModeChgList',0
	.word	2163
	.byte	4,2,35,32,0,4
	.byte	'SoAd_SocketConnectionType',0,9,146,1,3
	.word	2168
	.byte	10,9,148,1,9,16,11
	.byte	'CtrlFlag',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'KeepAliveProbesMax',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'KeepAliveInterval',0
	.word	277
	.byte	4,2,35,4,11
	.byte	'KeepAliveTime',0
	.word	277
	.byte	4,2,35,8,11
	.byte	'TxQuota',0
	.word	277
	.byte	4,2,35,12,0,4
	.byte	'SoAd_TcpProtocolType',0,9,155,1,3
	.word	2520
	.byte	10,9,157,1,9,12,11
	.byte	'CtrlFlag',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'nPduTxBufferMin',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'TriggerTimeout',0
	.word	240
	.byte	2,2,35,4,11
	.byte	'AliveSupervisionTimeout',0
	.word	277
	.byte	4,2,35,6,0,4
	.byte	'SoAd_UdpProtocolType',0,9,163,1,3
	.word	2670
	.byte	12
	.word	2520
	.byte	3
	.word	2807
	.byte	12
	.word	2670
	.byte	3
	.word	2817
	.byte	10,9,165,1,9,24,11
	.byte	'GroupId',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'CtrlFlag',0
	.word	193
	.byte	1,2,35,1,11
	.byte	'FramePriority',0
	.word	193
	.byte	1,2,35,2,11
	.byte	'SoConNum',0
	.word	193
	.byte	1,2,35,3,11
	.byte	'SoConId',0
	.word	193
	.byte	1,2,35,4,11
	.byte	'IpAddrAssignChgNum',0
	.word	193
	.byte	1,2,35,5,11
	.byte	'LocalAddrId',0
	.word	193
	.byte	1,2,35,6,11
	.byte	'LocalPort',0
	.word	240
	.byte	2,2,35,8,11
	.byte	'IpAddrAssignChgList',0
	.word	2163
	.byte	4,2,35,12,11
	.byte	'TcpProtocolPtr',0
	.word	2812
	.byte	4,2,35,16,11
	.byte	'UdpProtocolPtr',0
	.word	2822
	.byte	4,2,35,20,0,4
	.byte	'SoAd_SocketConnectionGroupType',0,9,178,1,3
	.word	2827
	.byte	12
	.word	193
	.byte	3
	.word	3112
	.byte	10,9,180,1,9,12,11
	.byte	'CtrlFlag',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'PduRouteDestNum',0
	.word	193
	.byte	1,2,35,1,11
	.byte	'SocketRouteDestNum',0
	.word	193
	.byte	1,2,35,2,11
	.byte	'PduRouteDestList',0
	.word	3117
	.byte	4,2,35,4,11
	.byte	'SocketRouteDestList',0
	.word	3117
	.byte	4,2,35,8,0,4
	.byte	'SoAd_RoutingGroupType',0,9,187,1,3
	.word	3122
	.byte	10,9,189,1,9,6,11
	.byte	'ULType',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'ULIndex',0
	.word	1878
	.byte	1,2,35,1,11
	.byte	'CtrlFlag',0
	.word	193
	.byte	1,2,35,2,11
	.byte	'RouteDestNum',0
	.word	193
	.byte	1,2,35,3,11
	.byte	'RouteDestId',0
	.word	193
	.byte	1,2,35,4,11
	.byte	'TxPduId',0
	.word	193
	.byte	1,2,35,5,0,4
	.byte	'SoAd_PduRouteType',0,9,204,1,3
	.word	3286
	.byte	3
	.word	1802
	.byte	10,9,206,1,9,20,11
	.byte	'TxPduHeaderId',0
	.word	277
	.byte	4,2,35,0,11
	.byte	'SoConNum',0
	.word	193
	.byte	1,2,35,4,11
	.byte	'SoConId',0
	.word	193
	.byte	1,2,35,5,11
	.byte	'PduRouteId',0
	.word	193
	.byte	1,2,35,6,11
	.byte	'UdpTriggerMode',0
	.word	193
	.byte	1,2,35,7,11
	.byte	'UdpTriggerTimeout',0
	.word	240
	.byte	2,2,35,8,11
	.byte	'RoutingCtrlList',0
	.word	3431
	.byte	4,2,35,12,11
	.byte	'IfTriggerList',0
	.word	470
	.byte	4,2,35,16,0,4
	.byte	'SoAd_PduRouteDestType',0,9,217,1,3
	.word	3436
	.byte	10,9,219,1,9,16,11
	.byte	'RxPduHeaderId',0
	.word	277
	.byte	4,2,35,0,11
	.byte	'ULType',0
	.word	193
	.byte	1,2,35,4,11
	.byte	'ULIndex',0
	.word	1878
	.byte	1,2,35,5,11
	.byte	'SoConNum',0
	.word	193
	.byte	1,2,35,6,11
	.byte	'SoConId',0
	.word	193
	.byte	1,2,35,7,11
	.byte	'RxPduId',0
	.word	193
	.byte	1,2,35,8,11
	.byte	'RoutingCtrlList',0
	.word	3431
	.byte	4,2,35,12,0,4
	.byte	'SoAd_SocketRouteType',0,9,236,1,3
	.word	3651
	.byte	12
	.word	3436
	.byte	3
	.word	3821
	.byte	10,9,155,2,9,24,11
	.byte	'State',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'Timer',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'BufferLength',0
	.word	240
	.byte	2,2,35,4,11
	.byte	'BufferOffset',0
	.word	240
	.byte	2,2,35,6,11
	.byte	'UdpTxBuffer',0
	.word	470
	.byte	4,2,35,8,11
	.byte	'TotalTxLength',0
	.word	240
	.byte	2,2,35,12,11
	.byte	'UsedTxLength',0
	.word	240
	.byte	2,2,35,14,11
	.byte	'IfTxDataBuffer',0
	.word	3117
	.byte	4,2,35,16,11
	.byte	'PduRouteDestPtr',0
	.word	3826
	.byte	4,2,35,20,0,4
	.byte	'SoAd_TxSessionType',0,9,177,2,3
	.word	3831
	.byte	12
	.word	3651
	.byte	3
	.word	4055
	.byte	10,9,180,2,9,8,11
	.byte	'PduLength',0
	.word	240
	.byte	2,2,35,0,11
	.byte	'RemainLength',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'SocketRoutePtr',0
	.word	4060
	.byte	4,2,35,4,0,4
	.byte	'SoAd_RxPduInfoType',0,9,185,2,3
	.word	4065
	.byte	10,9,187,2,9,12,11
	.byte	'TotalLength',0
	.word	240
	.byte	2,2,35,0,11
	.byte	'In',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'Out',0
	.word	240
	.byte	2,2,35,4,11
	.byte	'BufferPtr',0
	.word	470
	.byte	4,2,35,8,0,4
	.byte	'SoAd_RxFifoType',0,9,193,2,3
	.word	4165
	.byte	10,9,195,2,9,8,11
	.byte	'TotalLength',0
	.word	240
	.byte	2,2,35,0,11
	.byte	'UsedLength',0
	.word	240
	.byte	2,2,35,2,11
	.byte	'BufferPtr',0
	.word	470
	.byte	4,2,35,4,0,4
	.byte	'SoAd_RxBufferType',0,9,200,2,3
	.word	4262
	.byte	8,8
	.word	193
	.byte	9,7,0,10,9,202,2,9,48,11
	.byte	'State',0
	.word	193
	.byte	1,2,35,0,11
	.byte	'ValidHeaderLen',0
	.word	193
	.byte	1,2,35,1,11
	.byte	'PduHeader',0
	.word	4356
	.byte	8,2,35,2,11
	.byte	'RxPduInfo',0
	.word	4065
	.byte	8,2,35,12,11
	.byte	'ProcessPduInfo',0
	.word	4065
	.byte	8,2,35,20,11
	.byte	'IfBuffer',0
	.word	4262
	.byte	8,2,35,28,11
	.byte	'TpBuffer',0
	.word	4165
	.byte	12,2,35,36,0,4
	.byte	'SoAd_RxSessionType',0,9,216,2,3
	.word	4365
	.byte	4
	.byte	'u8_t',0,10,61,25
	.word	193
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,0,0,3,15,0,73,19,0,0,4,22,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,5,36,0,3,8,11,15,62,15,0,0,6,4,1,58,15,59,15,57,15,11,15,0,0,7,40,0,3,8,28,13,0,0,8,1
	.byte	1,11,15,73,19,0,0,9,33,0,47,15,0,0,10,19,1,58,15,59,15,57,15,11,15,0,0,11,13,0,3,8,73,19,11,15,56,9,0
	.byte	0,12,38,0,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L7-.L6
.L6:
	.half	3
	.word	.L9-.L8
.L8:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch',0,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4\\dhcp.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Std_Types.h',0,1,0,0
	.byte	'ComStack_Types_Cfg.h',0,2,0,0
	.byte	'ComStack_Types.h',0,3,0,0
	.byte	'TcpIp_GeneratedTypes.h',0,2,0,0
	.byte	'TcpIp_Types.h',0,4,0,0
	.byte	'SoAd_GeneratedTypes.h',0,2,0,0
	.byte	'SoAd_Types.h',0,5,0,0
	.byte	'cc.h',0,6,0,0,0
.L9:
.L7:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	     1  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	     2   * @file
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	     3   * Dynamic Host Configuration Protocol client
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	     4   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	     5   * @defgroup dhcp4 DHCPv4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	     6   * @ingroup ip4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	     7   * DHCP (IPv4) related functions
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	     8   * This is a DHCP client for the lwIP TCP/IP stack. It aims to conform
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	     9   * with RFC 2131 and RFC 2132.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    10   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    11   * @todo:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    12   * - Support for interfaces other than Ethernet (SLIP, PPP, ...)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    13   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    14   * Options:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    15   * @ref DHCP_COARSE_TIMER_SECS (recommended 60 which is a minute)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    16   * @ref DHCP_FINE_TIMER_MSECS (recommended 500 which equals TCP coarse timer)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    17   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    18   * dhcp_start() starts a DHCP client instance which
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    19   * configures the interface by obtaining an IP address lease and maintaining it.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    20   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    21   * Use dhcp_release() to end the lease and use dhcp_stop()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    22   * to remove the DHCP client.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    23   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    24   * @see LWIP_HOOK_DHCP_APPEND_OPTIONS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    25   * @see LWIP_HOOK_DHCP_PARSE_OPTION
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    26   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    27   * @see netifapi_dhcp4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    28   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    29  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    30  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    31   * Copyright (c) 2001-2004 Leon Woestenberg <leon.woestenberg@gmx.net>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    32   * Copyright (c) 2001-2004 Axon Digital Design B.V., The Netherlands.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    33   * All rights reserved.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    34   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    35   * Redistribution and use in source and binary forms, with or without modification,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    36   * are permitted provided that the following conditions are met:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    37   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    38   * 1. Redistributions of source code must retain the above copyright notice,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    39   *    this list of conditions and the following disclaimer.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    40   * 2. Redistributions in binary form must reproduce the above copyright notice,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    41   *    this list of conditions and the following disclaimer in the documentation
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    42   *    and/or other materials provided with the distribution.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    43   * 3. The name of the author may not be used to endorse or promote products
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    44   *    derived from this software without specific prior written permission.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    45   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    46   * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    47   * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    48   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    49   * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    50   * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    51   * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    52   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    53   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    54   * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    55   * OF SUCH DAMAGE.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    56   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    57   * This file is part of the lwIP TCP/IP stack.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    58   * The Swedish Institute of Computer Science and Adam Dunkels
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    59   * are specifically granted permission to redistribute this
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    60   * source code.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    61   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    62   * Author: Leon Woestenberg <leon.woestenberg@gmx.net>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    63   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    64   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    65  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    66  #include "lwip/opt.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    67  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    68  #if LWIP_IPV4 && LWIP_DHCP /* don't build if not configured for use in lwipopts.h */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    69  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    70  #include "lwip/stats.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    71  #include "lwip/mem.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    72  #include "lwip/udp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    73  #include "lwip/ip_addr.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    74  #include "lwip/netif.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    75  #include "lwip/def.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    76  #include "lwip/dhcp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    77  #include "lwip/autoip.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    78  #include "lwip/dns.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    79  #include "lwip/etharp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    80  #include "lwip/prot/dhcp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    81  #include "lwip/prot/iana.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    82  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    83  #include <string.h>
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    84  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    85  #ifdef LWIP_HOOK_FILENAME
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    86  #include LWIP_HOOK_FILENAME
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    87  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    88  #ifndef LWIP_HOOK_DHCP_APPEND_OPTIONS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    89  #define LWIP_HOOK_DHCP_APPEND_OPTIONS(netif, dhcp, state, msg, msg_type, options_len_ptr)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    90  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    91  #ifndef LWIP_HOOK_DHCP_PARSE_OPTION
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    92  #define LWIP_HOOK_DHCP_PARSE_OPTION(netif, dhcp, state, msg, msg_type, option, len, pbuf, offset) do { LWIP_UNUSED_ARG(msg); } while(0)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    93  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    94  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    95  /** DHCP_CREATE_RAND_XID: if this is set to 1, the xid is created using
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    96   * LWIP_RAND() (this overrides DHCP_GLOBAL_XID)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    97   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    98  #ifndef DHCP_CREATE_RAND_XID
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	    99  #define DHCP_CREATE_RAND_XID        1
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   100  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   101  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   102  /** Default for DHCP_GLOBAL_XID is 0xABCD0000
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   103   * This can be changed by defining DHCP_GLOBAL_XID and DHCP_GLOBAL_XID_HEADER, e.g.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   104   *  \#define DHCP_GLOBAL_XID_HEADER "stdlib.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   105   *  \#define DHCP_GLOBAL_XID rand()
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   106   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   107  #ifdef DHCP_GLOBAL_XID_HEADER
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   108  #include DHCP_GLOBAL_XID_HEADER /* include optional starting XID generation prototypes */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   109  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   110  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   111  /** DHCP_OPTION_MAX_MSG_SIZE is set to the MTU
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   112   * MTU is checked to be big enough in dhcp_start */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   113  #define DHCP_MAX_MSG_LEN(netif)        (netif->mtu)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   114  #define DHCP_MAX_MSG_LEN_MIN_REQUIRED  576
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   115  /** Minimum length for reply before packet is parsed */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   116  #define DHCP_MIN_REPLY_LEN             44
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   117  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   118  #define REBOOT_TRIES                2
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   119  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   120  #if LWIP_DNS && LWIP_DHCP_MAX_DNS_SERVERS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   121  #if DNS_MAX_SERVERS > LWIP_DHCP_MAX_DNS_SERVERS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   122  #define LWIP_DHCP_PROVIDE_DNS_SERVERS LWIP_DHCP_MAX_DNS_SERVERS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   123  #else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   124  #define LWIP_DHCP_PROVIDE_DNS_SERVERS DNS_MAX_SERVERS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   125  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   126  #else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   127  #define LWIP_DHCP_PROVIDE_DNS_SERVERS 0
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   128  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   129  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   130  /** Option handling: options are parsed in dhcp_parse_reply
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   131   * and saved in an array where other functions can load them from.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   132   * This might be moved into the struct dhcp (not necessarily since
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   133   * lwIP is single-threaded and the array is only used while in recv
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   134   * callback). */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   135  enum dhcp_option_idx {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   136    DHCP_OPTION_IDX_OVERLOAD = 0,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   137    DHCP_OPTION_IDX_MSG_TYPE,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   138    DHCP_OPTION_IDX_SERVER_ID,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   139    DHCP_OPTION_IDX_LEASE_TIME,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   140    DHCP_OPTION_IDX_T1,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   141    DHCP_OPTION_IDX_T2,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   142    DHCP_OPTION_IDX_SUBNET_MASK,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   143    DHCP_OPTION_IDX_ROUTER,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   144  #if LWIP_DHCP_PROVIDE_DNS_SERVERS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   145    DHCP_OPTION_IDX_DNS_SERVER,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   146    DHCP_OPTION_IDX_DNS_SERVER_LAST = DHCP_OPTION_IDX_DNS_SERVER + LWIP_DHCP_PROVIDE_DNS_SERVERS - 1,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   147  #endif /* LWIP_DHCP_PROVIDE_DNS_SERVERS */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   148  #if LWIP_DHCP_GET_NTP_SRV
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   149    DHCP_OPTION_IDX_NTP_SERVER,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   150    DHCP_OPTION_IDX_NTP_SERVER_LAST = DHCP_OPTION_IDX_NTP_SERVER + LWIP_DHCP_MAX_NTP_SERVERS - 1,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   151  #endif /* LWIP_DHCP_GET_NTP_SRV */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   152    DHCP_OPTION_IDX_MAX
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   153  };
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   154  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   155  /** Holds the decoded option values, only valid while in dhcp_recv.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   156      @todo: move this into struct dhcp? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   157  u32_t dhcp_rx_options_val[DHCP_OPTION_IDX_MAX];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   158  /** Holds a flag which option was received and is contained in dhcp_rx_options_val,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   159      only valid while in dhcp_recv.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   160      @todo: move this into struct dhcp? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   161  u8_t  dhcp_rx_options_given[DHCP_OPTION_IDX_MAX];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   162  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   163  static u8_t dhcp_discover_request_options[] = {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   164    DHCP_OPTION_SUBNET_MASK,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   165    DHCP_OPTION_ROUTER,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   166    DHCP_OPTION_BROADCAST
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   167  #if LWIP_DHCP_PROVIDE_DNS_SERVERS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   168    , DHCP_OPTION_DNS_SERVER
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   169  #endif /* LWIP_DHCP_PROVIDE_DNS_SERVERS */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   170  #if LWIP_DHCP_GET_NTP_SRV
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   171    , DHCP_OPTION_NTP
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   172  #endif /* LWIP_DHCP_GET_NTP_SRV */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   173  };
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   174  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   175  #ifdef DHCP_GLOBAL_XID
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   176  static u32_t xid;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   177  static u8_t xid_initialised;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   178  #endif /* DHCP_GLOBAL_XID */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   179  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   180  #define dhcp_option_given(dhcp, idx)          (dhcp_rx_options_given[idx] != 0)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   181  #define dhcp_got_option(dhcp, idx)            (dhcp_rx_options_given[idx] = 1)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   182  #define dhcp_clear_option(dhcp, idx)          (dhcp_rx_options_given[idx] = 0)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   183  #define dhcp_clear_all_options(dhcp)          (memset(dhcp_rx_options_given, 0, sizeof(dhcp_rx_options_given)))
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   184  #define dhcp_get_option_value(dhcp, idx)      (dhcp_rx_options_val[idx])
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   185  #define dhcp_set_option_value(dhcp, idx, val) (dhcp_rx_options_val[idx] = (val))
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   186  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   187  static struct udp_pcb *dhcp_pcb;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   188  static u8_t dhcp_pcb_refcount;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   189  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   190  /* DHCP client state machine functions */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   191  static err_t dhcp_discover(struct netif *netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   192  static err_t dhcp_select(struct netif *netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   193  static void dhcp_bind(struct netif *netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   194  #if DHCP_DOES_ARP_CHECK
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   195  static err_t dhcp_decline(struct netif *netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   196  #endif /* DHCP_DOES_ARP_CHECK */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   197  static err_t dhcp_rebind(struct netif *netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   198  static err_t dhcp_reboot(struct netif *netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   199  static void dhcp_set_state(struct dhcp *dhcp, u8_t new_state);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   200  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   201  /* receive, unfold, parse and free incoming messages */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   202  static void dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, const ip_addr_t *addr, u16_t port);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   203  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   204  /* set the DHCP timers */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   205  static void dhcp_timeout(struct netif *netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   206  static void dhcp_t1_timeout(struct netif *netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   207  static void dhcp_t2_timeout(struct netif *netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   208  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   209  /* build outgoing messages */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   210  /* create a DHCP message, fill in common headers */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   211  static struct pbuf *dhcp_create_msg(struct netif *netif, struct dhcp *dhcp, u8_t message_type, u16_t *options_out_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   212  /* add a DHCP option (type, then length in bytes) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   213  static u16_t dhcp_option(u16_t options_out_len, u8_t *options, u8_t option_type, u8_t option_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   214  /* add option values */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   215  static u16_t dhcp_option_byte(u16_t options_out_len, u8_t *options, u8_t value);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   216  static u16_t dhcp_option_short(u16_t options_out_len, u8_t *options, u16_t value);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   217  static u16_t dhcp_option_long(u16_t options_out_len, u8_t *options, u32_t value);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   218  #if LWIP_NETIF_HOSTNAME
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   219  static u16_t dhcp_option_hostname(u16_t options_out_len, u8_t *options, struct netif *netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   220  #endif /* LWIP_NETIF_HOSTNAME */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   221  /* always add the DHCP options trailer to end and pad */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   222  static void dhcp_option_trailer(u16_t options_out_len, u8_t *options, struct pbuf *p_out);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   223  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   224  /** Ensure DHCP PCB is allocated and bound */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   225  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   226  dhcp_inc_pcb_refcount(void)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   227  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   228    if (dhcp_pcb_refcount == 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   229      LWIP_ASSERT("dhcp_inc_pcb_refcount(): memory leak", dhcp_pcb == NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   230  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   231      /* allocate UDP PCB */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   232      dhcp_pcb = udp_new();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   233  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   234      if (dhcp_pcb == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   235        return ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   236      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   237  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   238      ip_set_option(dhcp_pcb, SOF_BROADCAST);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   239  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   240      /* set up local and remote port for the pcb -> listen on all interfaces on all src/dest IPs */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   241      udp_bind(dhcp_pcb, IP4_ADDR_ANY, LWIP_IANA_PORT_DHCP_CLIENT);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   242      udp_connect(dhcp_pcb, IP4_ADDR_ANY, LWIP_IANA_PORT_DHCP_SERVER);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   243      udp_recv(dhcp_pcb, dhcp_recv, NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   244    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   245  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   246    dhcp_pcb_refcount++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   247  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   248    return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   249  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   250  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   251  /** Free DHCP PCB if the last netif stops using it */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   252  static void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   253  dhcp_dec_pcb_refcount(void)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   254  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   255    LWIP_ASSERT("dhcp_pcb_refcount(): refcount error", (dhcp_pcb_refcount > 0));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   256    dhcp_pcb_refcount--;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   257  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   258    if (dhcp_pcb_refcount == 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   259      udp_remove(dhcp_pcb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   260      dhcp_pcb = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   261    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   262  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   263  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   264  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   265   * Back-off the DHCP client (because of a received NAK response).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   266   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   267   * Back-off the DHCP client because of a received NAK. Receiving a
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   268   * NAK means the client asked for something non-sensible, for
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   269   * example when it tries to renew a lease obtained on another network.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   270   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   271   * We clear any existing set IP address and restart DHCP negotiation
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   272   * afresh (as per RFC2131 3.2.3).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   273   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   274   * @param netif the netif under DHCP control
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   275   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   276  static void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   277  dhcp_handle_nak(struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   278  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   279    struct dhcp *dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   280  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   281    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_handle_nak(netif=%p) %c%c%"U16_F"\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   282                (void *)netif, netif->name[0], netif->name[1], (u16_t)netif->num));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   283    /* Change to a defined state - set this before assigning the address
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   284       to ensure the callback can use dhcp_supplied_address() */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   285    dhcp_set_state(dhcp, DHCP_STATE_BACKING_OFF);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   286    /* remove IP address from interface (must no longer be used, as per RFC2131) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   287    netif_set_addr(netif, IP4_ADDR_ANY4, IP4_ADDR_ANY4, IP4_ADDR_ANY4);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   288    /* We can immediately restart discovery */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   289    dhcp_discover(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   290  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   291  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   292  #if DHCP_DOES_ARP_CHECK
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   293  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   294   * Checks if the offered IP address is already in use.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   295   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   296   * It does so by sending an ARP request for the offered address and
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   297   * entering CHECKING state. If no ARP reply is received within a small
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   298   * interval, the address is assumed to be free for use by us.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   299   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   300   * @param netif the netif under DHCP control
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   301   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   302  static void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   303  dhcp_check(struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   304  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   305    struct dhcp *dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   306    err_t result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   307    u16_t msecs;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   308    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_check(netif=%p) %c%c\n", (void *)netif, (s16_t)netif->name[0],
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   309                (s16_t)netif->name[1]));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   310    dhcp_set_state(dhcp, DHCP_STATE_CHECKING);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   311    /* create an ARP query for the offered IP address, expecting that no host
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   312       responds, as the IP address should not be in use. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   313    result = etharp_query(netif, &dhcp->offered_ip_addr, NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   314    if (result != ERR_OK) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   315      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_WARNING, ("dhcp_check: could not perform ARP query\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   316    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   317    if (dhcp->tries < 255) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   318      dhcp->tries++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   319    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   320    msecs = 500;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   321    dhcp->request_timeout = (u16_t)((msecs + DHCP_FINE_TIMER_MSECS - 1) / DHCP_FINE_TIMER_MSECS);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   322    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_check(): set request timeout %"U16_F" msecs\n", msecs));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   323  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   324  #endif /* DHCP_DOES_ARP_CHECK */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   325  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   326  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   327   * Remember the configuration offered by a DHCP server.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   328   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   329   * @param netif the netif under DHCP control
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   330   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   331  static void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   332  dhcp_handle_offer(struct netif *netif, struct dhcp_msg *msg_in)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   333  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   334    struct dhcp *dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   335  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   336    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_handle_offer(netif=%p) %c%c%"U16_F"\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   337                (void *)netif, netif->name[0], netif->name[1], (u16_t)netif->num));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   338    /* obtain the server address */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   339    if (dhcp_option_given(dhcp, DHCP_OPTION_IDX_SERVER_ID)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   340      dhcp->request_timeout = 0; /* stop timer */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   341  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   342      ip_addr_set_ip4_u32(&dhcp->server_ip_addr, lwip_htonl(dhcp_get_option_value(dhcp, DHCP_OPTION_IDX_SERVER_ID)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   343      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_STATE, ("dhcp_handle_offer(): server 0x%08"X32_F"\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   344                  ip4_addr_get_u32(ip_2_ip4(&dhcp->server_ip_addr))));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   345      /* remember offered address */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   346      ip4_addr_copy(dhcp->offered_ip_addr, msg_in->yiaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   347      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_STATE, ("dhcp_handle_offer(): offer for 0x%08"X32_F"\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   348                  ip4_addr_get_u32(&dhcp->offered_ip_addr)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   349  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   350      dhcp_select(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   351    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   352      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_SERIOUS,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   353                  ("dhcp_handle_offer(netif=%p) did not get server ID!\n", (void *)netif));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   354    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   355  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   356  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   357  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   358   * Select a DHCP server offer out of all offers.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   359   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   360   * Simply select the first offer received.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   361   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   362   * @param netif the netif under DHCP control
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   363   * @return lwIP specific error (see error.h)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   364   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   365  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   366  dhcp_select(struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   367  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   368    struct dhcp *dhcp;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   369    err_t result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   370    u16_t msecs;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   371    u8_t i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   372    struct pbuf *p_out;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   373    u16_t options_out_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   374  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   375    LWIP_ERROR("dhcp_select: netif != NULL", (netif != NULL), return ERR_ARG;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   376    dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   377    LWIP_ERROR("dhcp_select: dhcp != NULL", (dhcp != NULL), return ERR_VAL;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   378  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   379    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_select(netif=%p) %c%c%"U16_F"\n", (void *)netif, netif->name[0], netif->name[1], (u16_t)netif->num));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   380    dhcp_set_state(dhcp, DHCP_STATE_REQUESTING);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   381  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   382    /* create and initialize the DHCP message header */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   383    p_out = dhcp_create_msg(netif, dhcp, DHCP_REQUEST, &options_out_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   384    if (p_out != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   385      struct dhcp_msg *msg_out = (struct dhcp_msg *)p_out->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   386      options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_MAX_MSG_SIZE, DHCP_OPTION_MAX_MSG_SIZE_LEN);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   387      options_out_len = dhcp_option_short(options_out_len, msg_out->options, DHCP_MAX_MSG_LEN(netif));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   388  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   389      /* MUST request the offered IP address */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   390      options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_REQUESTED_IP, 4);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   391      options_out_len = dhcp_option_long(options_out_len, msg_out->options, lwip_ntohl(ip4_addr_get_u32(&dhcp->offered_ip_addr)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   392  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   393      options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_SERVER_ID, 4);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   394      options_out_len = dhcp_option_long(options_out_len, msg_out->options, lwip_ntohl(ip4_addr_get_u32(ip_2_ip4(&dhcp->server_ip_addr))));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   395  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   396      options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_PARAMETER_REQUEST_LIST, LWIP_ARRAYSIZE(dhcp_discover_request_options));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   397      for (i = 0; i < LWIP_ARRAYSIZE(dhcp_discover_request_options); i++) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   398        options_out_len = dhcp_option_byte(options_out_len, msg_out->options, dhcp_discover_request_options[i]);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   399      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   400  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   401  #if LWIP_NETIF_HOSTNAME
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   402      options_out_len = dhcp_option_hostname(options_out_len, msg_out->options, netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   403  #endif /* LWIP_NETIF_HOSTNAME */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   404  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   405      LWIP_HOOK_DHCP_APPEND_OPTIONS(netif, dhcp, DHCP_STATE_REQUESTING, msg_out, DHCP_REQUEST, &options_out_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   406      dhcp_option_trailer(options_out_len, msg_out->options, p_out);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   407  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   408      /* send broadcast to any DHCP server */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   409      result = udp_sendto_if_src(dhcp_pcb, p_out, IP_ADDR_BROADCAST, LWIP_IANA_PORT_DHCP_SERVER, netif, IP4_ADDR_ANY);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   410      pbuf_free(p_out);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   411      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_select: REQUESTING\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   412    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   413      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_WARNING, ("dhcp_select: could not allocate DHCP request\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   414      result = ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   415    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   416    if (dhcp->tries < 255) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   417      dhcp->tries++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   418    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   419    msecs = (u16_t)((dhcp->tries < 6 ? 1 << dhcp->tries : 60) * 1000);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   420    dhcp->request_timeout = (u16_t)((msecs + DHCP_FINE_TIMER_MSECS - 1) / DHCP_FINE_TIMER_MSECS);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   421    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_STATE, ("dhcp_select(): set request timeout %"U16_F" msecs\n", msecs));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   422    return result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   423  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   424  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   425  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   426   * The DHCP timer that checks for lease renewal/rebind timeouts.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   427   * Must be called once a minute (see @ref DHCP_COARSE_TIMER_SECS).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   428   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   429  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   430  dhcp_coarse_tmr(void)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   431  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   432    struct netif *netif;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   433    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_coarse_tmr()\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   434    /* iterate through all network interfaces */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   435    NETIF_FOREACH(netif) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   436      /* only act on DHCP configured interfaces */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   437      struct dhcp *dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   438      if ((dhcp != NULL) && (dhcp->state != DHCP_STATE_OFF)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   439        /* compare lease time to expire timeout */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   440        if (dhcp->t0_timeout && (++dhcp->lease_used == dhcp->t0_timeout)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   441          LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_coarse_tmr(): t0 timeout\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   442          /* this clients' lease time has expired */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   443          dhcp_release_and_stop(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   444          dhcp_start(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   445          /* timer is active (non zero), and triggers (zeroes) now? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   446        } else if (dhcp->t2_rebind_time && (dhcp->t2_rebind_time-- == 1)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   447          LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_coarse_tmr(): t2 timeout\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   448          /* this clients' rebind timeout triggered */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   449          dhcp_t2_timeout(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   450          /* timer is active (non zero), and triggers (zeroes) now */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   451        } else if (dhcp->t1_renew_time && (dhcp->t1_renew_time-- == 1)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   452          LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_coarse_tmr(): t1 timeout\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   453          /* this clients' renewal timeout triggered */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   454          dhcp_t1_timeout(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   455        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   456      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   457    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   458  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   459  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   460  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   461   * DHCP transaction timeout handling (this function must be called every 500ms,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   462   * see @ref DHCP_FINE_TIMER_MSECS).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   463   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   464   * A DHCP server is expected to respond within a short period of time.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   465   * This timer checks whether an outstanding DHCP request is timed out.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   466   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   467  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   468  dhcp_fine_tmr(void)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   469  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   470    struct netif *netif;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   471    /* loop through netif's */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   472    NETIF_FOREACH(netif) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   473      struct dhcp *dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   474      /* only act on DHCP configured interfaces */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   475      if (dhcp != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   476        /* timer is active (non zero), and is about to trigger now */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   477        if (dhcp->request_timeout > 1) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   478          dhcp->request_timeout--;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   479        } else if (dhcp->request_timeout == 1) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   480          dhcp->request_timeout--;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   481          /* { dhcp->request_timeout == 0 } */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   482          LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_fine_tmr(): request timeout\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   483          /* this client's request timeout triggered */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   484          dhcp_timeout(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   485        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   486      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   487    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   488  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   489  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   490  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   491   * A DHCP negotiation transaction, or ARP request, has timed out.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   492   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   493   * The timer that was started with the DHCP or ARP request has
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   494   * timed out, indicating no response was received in time.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   495   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   496   * @param netif the netif under DHCP control
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   497   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   498  static void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   499  dhcp_timeout(struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   500  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   501    struct dhcp *dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   502  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   503    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_timeout()\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   504    /* back-off period has passed, or server selection timed out */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   505    if ((dhcp->state == DHCP_STATE_BACKING_OFF) || (dhcp->state == DHCP_STATE_SELECTING)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   506      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_timeout(): restarting discovery\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   507      dhcp_discover(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   508      /* receiving the requested lease timed out */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   509    } else if (dhcp->state == DHCP_STATE_REQUESTING) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   510      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_timeout(): REQUESTING, DHCP request timed out\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   511      if (dhcp->tries <= 5) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   512        dhcp_select(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   513      } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   514        LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_timeout(): REQUESTING, releasing, restarting\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   515        dhcp_release_and_stop(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   516        dhcp_start(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   517      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   518  #if DHCP_DOES_ARP_CHECK
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   519      /* received no ARP reply for the offered address (which is good) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   520    } else if (dhcp->state == DHCP_STATE_CHECKING) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   521      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_timeout(): CHECKING, ARP request timed out\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   522      if (dhcp->tries <= 1) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   523        dhcp_check(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   524        /* no ARP replies on the offered address,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   525           looks like the IP address is indeed free */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   526      } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   527        /* bind the interface to the offered address */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   528        dhcp_bind(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   529      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   530  #endif /* DHCP_DOES_ARP_CHECK */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   531    } else if (dhcp->state == DHCP_STATE_REBOOTING) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   532      if (dhcp->tries < REBOOT_TRIES) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   533        dhcp_reboot(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   534      } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   535        dhcp_discover(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   536      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   537    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   538  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   539  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   540  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   541   * The renewal period has timed out.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   542   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   543   * @param netif the netif under DHCP control
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   544   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   545  static void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   546  dhcp_t1_timeout(struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   547  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   548    struct dhcp *dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   549  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   550    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_STATE, ("dhcp_t1_timeout()\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   551    if ((dhcp->state == DHCP_STATE_REQUESTING) || (dhcp->state == DHCP_STATE_BOUND) ||
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   552        (dhcp->state == DHCP_STATE_RENEWING)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   553      /* just retry to renew - note that the rebind timer (t2) will
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   554       * eventually time-out if renew tries fail. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   555      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   556                  ("dhcp_t1_timeout(): must renew\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   557      /* This slightly different to RFC2131: DHCPREQUEST will be sent from state
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   558         DHCP_STATE_RENEWING, not DHCP_STATE_BOUND */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   559      dhcp_renew(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   560      /* Calculate next timeout */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   561      if (((dhcp->t2_timeout - dhcp->lease_used) / 2) >= ((60 + DHCP_COARSE_TIMER_SECS / 2) / DHCP_COARSE_TIMER_SECS)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   562        dhcp->t1_renew_time = (u16_t)((dhcp->t2_timeout - dhcp->lease_used) / 2);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   563      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   564    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   565  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   566  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   567  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   568   * The rebind period has timed out.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   569   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   570   * @param netif the netif under DHCP control
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   571   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   572  static void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   573  dhcp_t2_timeout(struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   574  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   575    struct dhcp *dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   576  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   577    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_t2_timeout()\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   578    if ((dhcp->state == DHCP_STATE_REQUESTING) || (dhcp->state == DHCP_STATE_BOUND) ||
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   579        (dhcp->state == DHCP_STATE_RENEWING) || (dhcp->state == DHCP_STATE_REBINDING)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   580      /* just retry to rebind */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   581      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   582                  ("dhcp_t2_timeout(): must rebind\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   583      /* This slightly different to RFC2131: DHCPREQUEST will be sent from state
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   584         DHCP_STATE_REBINDING, not DHCP_STATE_BOUND */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   585      dhcp_rebind(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   586      /* Calculate next timeout */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   587      if (((dhcp->t0_timeout - dhcp->lease_used) / 2) >= ((60 + DHCP_COARSE_TIMER_SECS / 2) / DHCP_COARSE_TIMER_SECS)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   588        dhcp->t2_rebind_time = (u16_t)((dhcp->t0_timeout - dhcp->lease_used) / 2);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   589      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   590    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   591  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   592  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   593  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   594   * Handle a DHCP ACK packet
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   595   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   596   * @param netif the netif under DHCP control
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   597   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   598  static void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   599  dhcp_handle_ack(struct netif *netif, struct dhcp_msg *msg_in)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   600  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   601    struct dhcp *dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   602  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   603  #if LWIP_DHCP_PROVIDE_DNS_SERVERS || LWIP_DHCP_GET_NTP_SRV
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   604    u8_t n;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   605  #endif /* LWIP_DHCP_PROVIDE_DNS_SERVERS || LWIP_DHCP_GET_NTP_SRV */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   606  #if LWIP_DHCP_GET_NTP_SRV
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   607    ip4_addr_t ntp_server_addrs[LWIP_DHCP_MAX_NTP_SERVERS];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   608  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   609  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   610    /* clear options we might not get from the ACK */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   611    ip4_addr_set_zero(&dhcp->offered_sn_mask);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   612    ip4_addr_set_zero(&dhcp->offered_gw_addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   613  #if LWIP_DHCP_BOOTP_FILE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   614    ip4_addr_set_zero(&dhcp->offered_si_addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   615  #endif /* LWIP_DHCP_BOOTP_FILE */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   616  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   617    /* lease time given? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   618    if (dhcp_option_given(dhcp, DHCP_OPTION_IDX_LEASE_TIME)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   619      /* remember offered lease time */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   620      dhcp->offered_t0_lease = dhcp_get_option_value(dhcp, DHCP_OPTION_IDX_LEASE_TIME);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   621    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   622    /* renewal period given? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   623    if (dhcp_option_given(dhcp, DHCP_OPTION_IDX_T1)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   624      /* remember given renewal period */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   625      dhcp->offered_t1_renew = dhcp_get_option_value(dhcp, DHCP_OPTION_IDX_T1);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   626    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   627      /* calculate safe periods for renewal */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   628      dhcp->offered_t1_renew = dhcp->offered_t0_lease / 2;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   629    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   630  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   631    /* renewal period given? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   632    if (dhcp_option_given(dhcp, DHCP_OPTION_IDX_T2)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   633      /* remember given rebind period */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   634      dhcp->offered_t2_rebind = dhcp_get_option_value(dhcp, DHCP_OPTION_IDX_T2);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   635    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   636      /* calculate safe periods for rebinding (offered_t0_lease * 0.875 -> 87.5%)*/
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   637      dhcp->offered_t2_rebind = (dhcp->offered_t0_lease * 7U) / 8U;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   638    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   639  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   640    /* (y)our internet address */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   641    ip4_addr_copy(dhcp->offered_ip_addr, msg_in->yiaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   642  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   643  #if LWIP_DHCP_BOOTP_FILE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   644    /* copy boot server address,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   645       boot file name copied in dhcp_parse_reply if not overloaded */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   646    ip4_addr_copy(dhcp->offered_si_addr, msg_in->siaddr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   647  #endif /* LWIP_DHCP_BOOTP_FILE */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   648  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   649    /* subnet mask given? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   650    if (dhcp_option_given(dhcp, DHCP_OPTION_IDX_SUBNET_MASK)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   651      /* remember given subnet mask */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   652      ip4_addr_set_u32(&dhcp->offered_sn_mask, lwip_htonl(dhcp_get_option_value(dhcp, DHCP_OPTION_IDX_SUBNET_MASK)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   653      dhcp->subnet_mask_given = 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   654    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   655      dhcp->subnet_mask_given = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   656    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   657  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   658    /* gateway router */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   659    if (dhcp_option_given(dhcp, DHCP_OPTION_IDX_ROUTER)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   660      ip4_addr_set_u32(&dhcp->offered_gw_addr, lwip_htonl(dhcp_get_option_value(dhcp, DHCP_OPTION_IDX_ROUTER)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   661    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   662  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   663  #if LWIP_DHCP_GET_NTP_SRV
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   664    /* NTP servers */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   665    for (n = 0; (n < LWIP_DHCP_MAX_NTP_SERVERS) && dhcp_option_given(dhcp, DHCP_OPTION_IDX_NTP_SERVER + n); n++) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   666      ip4_addr_set_u32(&ntp_server_addrs[n], lwip_htonl(dhcp_get_option_value(dhcp, DHCP_OPTION_IDX_NTP_SERVER + n)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   667    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   668    dhcp_set_ntp_servers(n, ntp_server_addrs);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   669  #endif /* LWIP_DHCP_GET_NTP_SRV */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   670  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   671  #if LWIP_DHCP_PROVIDE_DNS_SERVERS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   672    /* DNS servers */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   673    for (n = 0; (n < LWIP_DHCP_PROVIDE_DNS_SERVERS) && dhcp_option_given(dhcp, DHCP_OPTION_IDX_DNS_SERVER + n); n++) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   674      ip_addr_t dns_addr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   675      ip_addr_set_ip4_u32_val(dns_addr, lwip_htonl(dhcp_get_option_value(dhcp, DHCP_OPTION_IDX_DNS_SERVER + n)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   676      dns_setserver(n, &dns_addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   677    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   678  #endif /* LWIP_DHCP_PROVIDE_DNS_SERVERS */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   679  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   680  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   681  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   682   * @ingroup dhcp4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   683   * Set a statically allocated struct dhcp to work with.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   684   * Using this prevents dhcp_start to allocate it using mem_malloc.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   685   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   686   * @param netif the netif for which to set the struct dhcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   687   * @param dhcp (uninitialised) dhcp struct allocated by the application
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   688   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   689  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   690  dhcp_set_struct(struct netif *netif, struct dhcp *dhcp)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   691  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   692    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   693    LWIP_ASSERT("netif != NULL", netif != NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   694    LWIP_ASSERT("dhcp != NULL", dhcp != NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   695    LWIP_ASSERT("netif already has a struct dhcp set", netif_dhcp_data(netif) == NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   696  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   697    /* clear data structure */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   698    memset(dhcp, 0, sizeof(struct dhcp));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   699    /* dhcp_set_state(&dhcp, DHCP_STATE_OFF); */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   700    netif_set_client_data(netif, LWIP_NETIF_CLIENT_DATA_INDEX_DHCP, dhcp);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   701  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   702  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   703  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   704   * @ingroup dhcp4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   705   * Removes a struct dhcp from a netif.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   706   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   707   * ATTENTION: Only use this when not using dhcp_set_struct() to allocate the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   708   *            struct dhcp since the memory is passed back to the heap.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   709   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   710   * @param netif the netif from which to remove the struct dhcp
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   711   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   712  void dhcp_cleanup(struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   713  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   714    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   715    LWIP_ASSERT("netif != NULL", netif != NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   716  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   717    if (netif_dhcp_data(netif) != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   718      mem_free(netif_dhcp_data(netif));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   719      netif_set_client_data(netif, LWIP_NETIF_CLIENT_DATA_INDEX_DHCP, NULL);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   720    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   721  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   722  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   723  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   724   * @ingroup dhcp4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   725   * Start DHCP negotiation for a network interface.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   726   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   727   * If no DHCP client instance was attached to this interface,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   728   * a new client is created first. If a DHCP client instance
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   729   * was already present, it restarts negotiation.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   730   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   731   * @param netif The lwIP network interface
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   732   * @return lwIP error code
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   733   * - ERR_OK - No error
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   734   * - ERR_MEM - Out of memory
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   735   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   736  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   737  dhcp_start(struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   738  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   739    struct dhcp *dhcp;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   740    err_t result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   741  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   742    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   743    LWIP_ERROR("netif != NULL", (netif != NULL), return ERR_ARG;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   744    LWIP_ERROR("netif is not up, old style port?", netif_is_up(netif), return ERR_ARG;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   745    dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   746    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_start(netif=%p) %c%c%"U16_F"\n", (void *)netif, netif->name[0], netif->name[1], (u16_t)netif->num));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   747  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   748    /* check MTU of the netif */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   749    if (netif->mtu < DHCP_MAX_MSG_LEN_MIN_REQUIRED) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   750      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_start(): Cannot use this netif with DHCP: MTU is too small\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   751      return ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   752    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   753  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   754    /* no DHCP client attached yet? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   755    if (dhcp == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   756      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_start(): mallocing new DHCP client\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   757      dhcp = (struct dhcp *)mem_malloc(sizeof(struct dhcp));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   758      if (dhcp == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   759        LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_start(): could not allocate dhcp\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   760        return ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   761      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   762  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   763      /* store this dhcp client in the netif */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   764      netif_set_client_data(netif, LWIP_NETIF_CLIENT_DATA_INDEX_DHCP, dhcp);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   765      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_start(): allocated dhcp"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   766      /* already has DHCP client attached */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   767    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   768      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_start(): restarting DHCP configuration\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   769  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   770      if (dhcp->pcb_allocated != 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   771        dhcp_dec_pcb_refcount(); /* free DHCP PCB if not needed any more */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   772      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   773      /* dhcp is cleared below, no need to reset flag*/
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   774    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   775  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   776    /* clear data structure */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   777    memset(dhcp, 0, sizeof(struct dhcp));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   778    /* dhcp_set_state(&dhcp, DHCP_STATE_OFF); */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   779  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   780    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_start(): starting DHCP configuration\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   781  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   782    if (dhcp_inc_pcb_refcount() != ERR_OK) { /* ensure DHCP PCB is allocated */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   783      return ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   784    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   785    dhcp->pcb_allocated = 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   786  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   787    if (!netif_is_link_up(netif)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   788      /* set state INIT and wait for dhcp_network_changed() to call dhcp_discover() */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   789      dhcp_set_state(dhcp, DHCP_STATE_INIT);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   790      return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   791    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   792  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   793    /* (re)start the DHCP negotiation */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   794    result = dhcp_discover(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   795    if (result != ERR_OK) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   796      /* free resources allocated above */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   797      dhcp_release_and_stop(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   798      return ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   799    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   800    return result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   801  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   802  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   803  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   804   * @ingroup dhcp4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   805   * Inform a DHCP server of our manual configuration.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   806   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   807   * This informs DHCP servers of our fixed IP address configuration
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   808   * by sending an INFORM message. It does not involve DHCP address
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   809   * configuration, it is just here to be nice to the network.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   810   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   811   * @param netif The lwIP network interface
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   812   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   813  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   814  dhcp_inform(struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   815  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   816    struct dhcp dhcp;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   817    struct pbuf *p_out;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   818    u16_t options_out_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   819  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   820    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   821    LWIP_ERROR("netif != NULL", (netif != NULL), return;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   822  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   823    if (dhcp_inc_pcb_refcount() != ERR_OK) { /* ensure DHCP PCB is allocated */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   824      return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   825    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   826  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   827    memset(&dhcp, 0, sizeof(struct dhcp));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   828    dhcp_set_state(&dhcp, DHCP_STATE_INFORMING);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   829  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   830    /* create and initialize the DHCP message header */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   831    p_out = dhcp_create_msg(netif, &dhcp, DHCP_INFORM, &options_out_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   832    if (p_out != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   833      struct dhcp_msg *msg_out = (struct dhcp_msg *)p_out->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   834      options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_MAX_MSG_SIZE, DHCP_OPTION_MAX_MSG_SIZE_LEN);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   835      options_out_len = dhcp_option_short(options_out_len, msg_out->options, DHCP_MAX_MSG_LEN(netif));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   836  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   837      LWIP_HOOK_DHCP_APPEND_OPTIONS(netif, &dhcp, DHCP_STATE_INFORMING, msg_out, DHCP_INFORM, &options_out_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   838      dhcp_option_trailer(options_out_len, msg_out->options, p_out);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   839  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   840      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_inform: INFORMING\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   841  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   842      udp_sendto_if(dhcp_pcb, p_out, IP_ADDR_BROADCAST, LWIP_IANA_PORT_DHCP_SERVER, netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   843  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   844      pbuf_free(p_out);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   845    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   846      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_SERIOUS, ("dhcp_inform: could not allocate DHCP request\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   847    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   848  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   849    dhcp_dec_pcb_refcount(); /* delete DHCP PCB if not needed any more */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   850  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   851  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   852  /** Handle a possible change in the network configuration.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   853   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   854   * This enters the REBOOTING state to verify that the currently bound
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   855   * address is still valid.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   856   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   857  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   858  dhcp_network_changed(struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   859  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   860    struct dhcp *dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   861  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   862    if (!dhcp) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   863      return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   864    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   865    switch (dhcp->state) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   866      case DHCP_STATE_REBINDING:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   867      case DHCP_STATE_RENEWING:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   868      case DHCP_STATE_BOUND:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   869      case DHCP_STATE_REBOOTING:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   870        dhcp->tries = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   871        dhcp_reboot(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   872        break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   873      case DHCP_STATE_OFF:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   874        /* stay off */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   875        break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   876      default:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   877        LWIP_ASSERT("invalid dhcp->state", dhcp->state <= DHCP_STATE_BACKING_OFF);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   878        /* INIT/REQUESTING/CHECKING/BACKING_OFF restart with new 'rid' because the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   879           state changes, SELECTING: continue with current 'rid' as we stay in the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   880           same state */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   881  #if LWIP_DHCP_AUTOIP_COOP
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   882        if (dhcp->autoip_coop_state == DHCP_AUTOIP_COOP_STATE_ON) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   883          autoip_stop(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   884          dhcp->autoip_coop_state = DHCP_AUTOIP_COOP_STATE_OFF;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   885        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   886  #endif /* LWIP_DHCP_AUTOIP_COOP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   887        /* ensure we start with short timeouts, even if already discovering */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   888        dhcp->tries = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   889        dhcp_discover(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   890        break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   891    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   892  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   893  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   894  #if DHCP_DOES_ARP_CHECK
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   895  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   896   * Match an ARP reply with the offered IP address:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   897   * check whether the offered IP address is not in use using ARP
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   898   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   899   * @param netif the network interface on which the reply was received
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   900   * @param addr The IP address we received a reply from
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   901   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   902  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   903  dhcp_arp_reply(struct netif *netif, const ip4_addr_t *addr)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   904  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   905    struct dhcp *dhcp;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   906  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   907    LWIP_ERROR("netif != NULL", (netif != NULL), return;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   908    dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   909    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_arp_reply()\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   910    /* is a DHCP client doing an ARP check? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   911    if ((dhcp != NULL) && (dhcp->state == DHCP_STATE_CHECKING)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   912      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_arp_reply(): CHECKING, arp reply for 0x%08"X32_F"\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   913                  ip4_addr_get_u32(addr)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   914      /* did a host respond with the address we
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   915         were offered by the DHCP server? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   916      if (ip4_addr_cmp(addr, &dhcp->offered_ip_addr)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   917        /* we will not accept the offered address */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   918        LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE | LWIP_DBG_LEVEL_WARNING,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   919                    ("dhcp_arp_reply(): arp reply matched with offered address, declining\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   920        dhcp_decline(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   921      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   922    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   923  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   924  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   925  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   926   * Decline an offered lease.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   927   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   928   * Tell the DHCP server we do not accept the offered address.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   929   * One reason to decline the lease is when we find out the address
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   930   * is already in use by another host (through ARP).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   931   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   932   * @param netif the netif under DHCP control
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   933   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   934  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   935  dhcp_decline(struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   936  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   937    struct dhcp *dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   938    err_t result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   939    u16_t msecs;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   940    struct pbuf *p_out;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   941    u16_t options_out_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   942  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   943    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_decline()\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   944    dhcp_set_state(dhcp, DHCP_STATE_BACKING_OFF);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   945    /* create and initialize the DHCP message header */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   946    p_out = dhcp_create_msg(netif, dhcp, DHCP_DECLINE, &options_out_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   947    if (p_out != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   948      struct dhcp_msg *msg_out = (struct dhcp_msg *)p_out->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   949      options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_REQUESTED_IP, 4);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   950      options_out_len = dhcp_option_long(options_out_len, msg_out->options, lwip_ntohl(ip4_addr_get_u32(&dhcp->offered_ip_addr)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   951  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   952      LWIP_HOOK_DHCP_APPEND_OPTIONS(netif, dhcp, DHCP_STATE_BACKING_OFF, msg_out, DHCP_DECLINE, &options_out_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   953      dhcp_option_trailer(options_out_len, msg_out->options, p_out);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   954  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   955      /* per section 4.4.4, broadcast DECLINE messages */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   956      result = udp_sendto_if_src(dhcp_pcb, p_out, IP_ADDR_BROADCAST, LWIP_IANA_PORT_DHCP_SERVER, netif, IP4_ADDR_ANY);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   957      pbuf_free(p_out);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   958      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_decline: BACKING OFF\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   959    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   960      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_SERIOUS,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   961                  ("dhcp_decline: could not allocate DHCP request\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   962      result = ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   963    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   964    if (dhcp->tries < 255) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   965      dhcp->tries++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   966    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   967    msecs = 10 * 1000;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   968    dhcp->request_timeout = (u16_t)((msecs + DHCP_FINE_TIMER_MSECS - 1) / DHCP_FINE_TIMER_MSECS);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   969    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_decline(): set request timeout %"U16_F" msecs\n", msecs));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   970    return result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   971  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   972  #endif /* DHCP_DOES_ARP_CHECK */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   973  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   974  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   975  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   976   * Start the DHCP process, discover a DHCP server.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   977   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   978   * @param netif the netif under DHCP control
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   979   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   980  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   981  dhcp_discover(struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   982  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   983    struct dhcp *dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   984    err_t result = ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   985    u16_t msecs;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   986    u8_t i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   987    struct pbuf *p_out;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   988    u16_t options_out_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   989  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   990    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_discover()\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   991  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   992    ip4_addr_set_any(&dhcp->offered_ip_addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   993    dhcp_set_state(dhcp, DHCP_STATE_SELECTING);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   994    /* create and initialize the DHCP message header */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   995    p_out = dhcp_create_msg(netif, dhcp, DHCP_DISCOVER, &options_out_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   996    if (p_out != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   997      struct dhcp_msg *msg_out = (struct dhcp_msg *)p_out->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   998      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_discover: making request\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	   999  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1000      options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_MAX_MSG_SIZE, DHCP_OPTION_MAX_MSG_SIZE_LEN);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1001      options_out_len = dhcp_option_short(options_out_len, msg_out->options, DHCP_MAX_MSG_LEN(netif));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1002  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1003      options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_PARAMETER_REQUEST_LIST, LWIP_ARRAYSIZE(dhcp_discover_request_options));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1004      for (i = 0; i < LWIP_ARRAYSIZE(dhcp_discover_request_options); i++) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1005        options_out_len = dhcp_option_byte(options_out_len, msg_out->options, dhcp_discover_request_options[i]);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1006      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1007      LWIP_HOOK_DHCP_APPEND_OPTIONS(netif, dhcp, DHCP_STATE_SELECTING, msg_out, DHCP_DISCOVER, &options_out_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1008      dhcp_option_trailer(options_out_len, msg_out->options, p_out);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1009  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1010      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_discover: sendto(DISCOVER, IP_ADDR_BROADCAST, LWIP_IANA_PORT_DHCP_SERVER)\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1011      udp_sendto_if_src(dhcp_pcb, p_out, IP_ADDR_BROADCAST, LWIP_IANA_PORT_DHCP_SERVER, netif, IP4_ADDR_ANY);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1012      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_discover: deleting()ing\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1013      pbuf_free(p_out);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1014      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_discover: SELECTING\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1015    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1016      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_SERIOUS, ("dhcp_discover: could not allocate DHCP request\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1017    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1018    if (dhcp->tries < 255) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1019      dhcp->tries++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1020    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1021  #if LWIP_DHCP_AUTOIP_COOP
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1022    if (dhcp->tries >= LWIP_DHCP_AUTOIP_COOP_TRIES && dhcp->autoip_coop_state == DHCP_AUTOIP_COOP_STATE_OFF) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1023      dhcp->autoip_coop_state = DHCP_AUTOIP_COOP_STATE_ON;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1024      autoip_start(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1025    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1026  #endif /* LWIP_DHCP_AUTOIP_COOP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1027    msecs = (u16_t)((dhcp->tries < 6 ? 1 << dhcp->tries : 60) * 1000);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1028    dhcp->request_timeout = (u16_t)((msecs + DHCP_FINE_TIMER_MSECS - 1) / DHCP_FINE_TIMER_MSECS);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1029    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_discover(): set request timeout %"U16_F" msecs\n", msecs));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1030    return result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1031  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1032  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1033  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1034  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1035   * Bind the interface to the offered IP address.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1036   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1037   * @param netif network interface to bind to the offered address
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1038   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1039  static void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1040  dhcp_bind(struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1041  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1042    u32_t timeout;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1043    struct dhcp *dhcp;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1044    ip4_addr_t sn_mask, gw_addr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1045    LWIP_ERROR("dhcp_bind: netif != NULL", (netif != NULL), return;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1046    dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1047    LWIP_ERROR("dhcp_bind: dhcp != NULL", (dhcp != NULL), return;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1048    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_bind(netif=%p) %c%c%"U16_F"\n", (void *)netif, netif->name[0], netif->name[1], (u16_t)netif->num));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1049  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1050    /* reset time used of lease */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1051    dhcp->lease_used = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1052  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1053    if (dhcp->offered_t0_lease != 0xffffffffUL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1054      /* set renewal period timer */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1055      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_bind(): t0 renewal timer %"U32_F" secs\n", dhcp->offered_t0_lease));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1056      timeout = (dhcp->offered_t0_lease + DHCP_COARSE_TIMER_SECS / 2) / DHCP_COARSE_TIMER_SECS;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1057      if (timeout > 0xffff) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1058        timeout = 0xffff;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1059      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1060      dhcp->t0_timeout = (u16_t)timeout;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1061      if (dhcp->t0_timeout == 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1062        dhcp->t0_timeout = 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1063      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1064      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_bind(): set request timeout %"U32_F" msecs\n", dhcp->offered_t0_lease * 1000));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1065    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1066  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1067    /* temporary DHCP lease? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1068    if (dhcp->offered_t1_renew != 0xffffffffUL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1069      /* set renewal period timer */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1070      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_bind(): t1 renewal timer %"U32_F" secs\n", dhcp->offered_t1_renew));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1071      timeout = (dhcp->offered_t1_renew + DHCP_COARSE_TIMER_SECS / 2) / DHCP_COARSE_TIMER_SECS;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1072      if (timeout > 0xffff) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1073        timeout = 0xffff;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1074      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1075      dhcp->t1_timeout = (u16_t)timeout;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1076      if (dhcp->t1_timeout == 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1077        dhcp->t1_timeout = 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1078      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1079      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_bind(): set request timeout %"U32_F" msecs\n", dhcp->offered_t1_renew * 1000));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1080      dhcp->t1_renew_time = dhcp->t1_timeout;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1081    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1082    /* set renewal period timer */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1083    if (dhcp->offered_t2_rebind != 0xffffffffUL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1084      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_bind(): t2 rebind timer %"U32_F" secs\n", dhcp->offered_t2_rebind));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1085      timeout = (dhcp->offered_t2_rebind + DHCP_COARSE_TIMER_SECS / 2) / DHCP_COARSE_TIMER_SECS;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1086      if (timeout > 0xffff) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1087        timeout = 0xffff;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1088      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1089      dhcp->t2_timeout = (u16_t)timeout;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1090      if (dhcp->t2_timeout == 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1091        dhcp->t2_timeout = 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1092      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1093      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_bind(): set request timeout %"U32_F" msecs\n", dhcp->offered_t2_rebind * 1000));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1094      dhcp->t2_rebind_time = dhcp->t2_timeout;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1095    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1096  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1097    /* If we have sub 1 minute lease, t2 and t1 will kick in at the same time. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1098    if ((dhcp->t1_timeout >= dhcp->t2_timeout) && (dhcp->t2_timeout > 0)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1099      dhcp->t1_timeout = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1100    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1101  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1102    if (dhcp->subnet_mask_given) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1103      /* copy offered network mask */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1104      ip4_addr_copy(sn_mask, dhcp->offered_sn_mask);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1105    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1106      /* subnet mask not given, choose a safe subnet mask given the network class */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1107      u8_t first_octet = ip4_addr1(&dhcp->offered_ip_addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1108      if (first_octet <= 127) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1109        ip4_addr_set_u32(&sn_mask, PP_HTONL(0xff000000UL));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1110      } else if (first_octet >= 192) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1111        ip4_addr_set_u32(&sn_mask, PP_HTONL(0xffffff00UL));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1112      } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1113        ip4_addr_set_u32(&sn_mask, PP_HTONL(0xffff0000UL));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1114      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1115    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1116  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1117    ip4_addr_copy(gw_addr, dhcp->offered_gw_addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1118    /* gateway address not given? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1119    if (ip4_addr_isany_val(gw_addr)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1120      /* copy network address */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1121      ip4_addr_get_network(&gw_addr, &dhcp->offered_ip_addr, &sn_mask);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1122      /* use first host address on network as gateway */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1123      ip4_addr_set_u32(&gw_addr, ip4_addr_get_u32(&gw_addr) | PP_HTONL(0x00000001UL));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1124    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1125  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1126  #if LWIP_DHCP_AUTOIP_COOP
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1127    if (dhcp->autoip_coop_state == DHCP_AUTOIP_COOP_STATE_ON) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1128      autoip_stop(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1129      dhcp->autoip_coop_state = DHCP_AUTOIP_COOP_STATE_OFF;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1130    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1131  #endif /* LWIP_DHCP_AUTOIP_COOP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1132  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1133    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_STATE, ("dhcp_bind(): IP: 0x%08"X32_F" SN: 0x%08"X32_F" GW: 0x%08"X32_F"\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1134                ip4_addr_get_u32(&dhcp->offered_ip_addr), ip4_addr_get_u32(&sn_mask), ip4_addr_get_u32(&gw_addr)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1135    /* netif is now bound to DHCP leased address - set this before assigning the address
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1136       to ensure the callback can use dhcp_supplied_address() */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1137    dhcp_set_state(dhcp, DHCP_STATE_BOUND);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1138  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1139    netif_set_addr(netif, &dhcp->offered_ip_addr, &sn_mask, &gw_addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1140    /* interface is used by routing now that an address is set */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1141  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1142  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1143  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1144   * @ingroup dhcp4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1145   * Renew an existing DHCP lease at the involved DHCP server.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1146   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1147   * @param netif network interface which must renew its lease
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1148   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1149  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1150  dhcp_renew(struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1151  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1152    struct dhcp *dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1153    err_t result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1154    u16_t msecs;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1155    u8_t i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1156    struct pbuf *p_out;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1157    u16_t options_out_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1158  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1159    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1160    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_renew()\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1161    dhcp_set_state(dhcp, DHCP_STATE_RENEWING);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1162  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1163    /* create and initialize the DHCP message header */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1164    p_out = dhcp_create_msg(netif, dhcp, DHCP_REQUEST, &options_out_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1165    if (p_out != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1166      struct dhcp_msg *msg_out = (struct dhcp_msg *)p_out->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1167      options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_MAX_MSG_SIZE, DHCP_OPTION_MAX_MSG_SIZE_LEN);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1168      options_out_len = dhcp_option_short(options_out_len, msg_out->options, DHCP_MAX_MSG_LEN(netif));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1169  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1170      options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_PARAMETER_REQUEST_LIST, LWIP_ARRAYSIZE(dhcp_discover_request_options));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1171      for (i = 0; i < LWIP_ARRAYSIZE(dhcp_discover_request_options); i++) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1172        options_out_len = dhcp_option_byte(options_out_len, msg_out->options, dhcp_discover_request_options[i]);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1173      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1174  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1175  #if LWIP_NETIF_HOSTNAME
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1176      options_out_len = dhcp_option_hostname(options_out_len, msg_out->options, netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1177  #endif /* LWIP_NETIF_HOSTNAME */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1178  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1179      LWIP_HOOK_DHCP_APPEND_OPTIONS(netif, dhcp, DHCP_STATE_RENEWING, msg_out, DHCP_REQUEST, &options_out_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1180      dhcp_option_trailer(options_out_len, msg_out->options, p_out);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1181  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1182      result = udp_sendto_if(dhcp_pcb, p_out, &dhcp->server_ip_addr, LWIP_IANA_PORT_DHCP_SERVER, netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1183      pbuf_free(p_out);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1184  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1185      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_renew: RENEWING\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1186    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1187      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_SERIOUS, ("dhcp_renew: could not allocate DHCP request\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1188      result = ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1189    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1190    if (dhcp->tries < 255) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1191      dhcp->tries++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1192    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1193    /* back-off on retries, but to a maximum of 20 seconds */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1194    msecs = (u16_t)(dhcp->tries < 10 ? dhcp->tries * 2000 : 20 * 1000);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1195    dhcp->request_timeout = (u16_t)((msecs + DHCP_FINE_TIMER_MSECS - 1) / DHCP_FINE_TIMER_MSECS);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1196    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_renew(): set request timeout %"U16_F" msecs\n", msecs));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1197    return result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1198  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1199  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1200  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1201   * Rebind with a DHCP server for an existing DHCP lease.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1202   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1203   * @param netif network interface which must rebind with a DHCP server
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1204   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1205  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1206  dhcp_rebind(struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1207  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1208    struct dhcp *dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1209    err_t result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1210    u16_t msecs;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1211    u8_t i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1212    struct pbuf *p_out;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1213    u16_t options_out_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1214  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1215    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_rebind()\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1216    dhcp_set_state(dhcp, DHCP_STATE_REBINDING);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1217  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1218    /* create and initialize the DHCP message header */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1219    p_out = dhcp_create_msg(netif, dhcp, DHCP_REQUEST, &options_out_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1220    if (p_out != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1221      struct dhcp_msg *msg_out = (struct dhcp_msg *)p_out->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1222      options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_MAX_MSG_SIZE, DHCP_OPTION_MAX_MSG_SIZE_LEN);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1223      options_out_len = dhcp_option_short(options_out_len, msg_out->options, DHCP_MAX_MSG_LEN(netif));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1224  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1225      options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_PARAMETER_REQUEST_LIST, LWIP_ARRAYSIZE(dhcp_discover_request_options));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1226      for (i = 0; i < LWIP_ARRAYSIZE(dhcp_discover_request_options); i++) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1227        options_out_len = dhcp_option_byte(options_out_len, msg_out->options, dhcp_discover_request_options[i]);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1228      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1229  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1230  #if LWIP_NETIF_HOSTNAME
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1231      options_out_len = dhcp_option_hostname(options_out_len, msg_out->options, netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1232  #endif /* LWIP_NETIF_HOSTNAME */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1233  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1234      LWIP_HOOK_DHCP_APPEND_OPTIONS(netif, dhcp, DHCP_STATE_REBINDING, msg_out, DHCP_DISCOVER, &options_out_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1235      dhcp_option_trailer(options_out_len, msg_out->options, p_out);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1236  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1237      /* broadcast to server */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1238      result = udp_sendto_if(dhcp_pcb, p_out, IP_ADDR_BROADCAST, LWIP_IANA_PORT_DHCP_SERVER, netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1239      pbuf_free(p_out);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1240      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_rebind: REBINDING\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1241    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1242      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_SERIOUS, ("dhcp_rebind: could not allocate DHCP request\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1243      result = ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1244    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1245    if (dhcp->tries < 255) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1246      dhcp->tries++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1247    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1248    msecs = (u16_t)(dhcp->tries < 10 ? dhcp->tries * 1000 : 10 * 1000);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1249    dhcp->request_timeout = (u16_t)((msecs + DHCP_FINE_TIMER_MSECS - 1) / DHCP_FINE_TIMER_MSECS);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1250    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_rebind(): set request timeout %"U16_F" msecs\n", msecs));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1251    return result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1252  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1253  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1254  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1255   * Enter REBOOTING state to verify an existing lease
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1256   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1257   * @param netif network interface which must reboot
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1258   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1259  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1260  dhcp_reboot(struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1261  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1262    struct dhcp *dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1263    err_t result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1264    u16_t msecs;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1265    u8_t i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1266    struct pbuf *p_out;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1267    u16_t options_out_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1268  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1269    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_reboot()\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1270    dhcp_set_state(dhcp, DHCP_STATE_REBOOTING);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1271  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1272    /* create and initialize the DHCP message header */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1273    p_out = dhcp_create_msg(netif, dhcp, DHCP_REQUEST, &options_out_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1274    if (p_out != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1275      struct dhcp_msg *msg_out = (struct dhcp_msg *)p_out->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1276      options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_MAX_MSG_SIZE, DHCP_OPTION_MAX_MSG_SIZE_LEN);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1277      options_out_len = dhcp_option_short(options_out_len, msg_out->options, DHCP_MAX_MSG_LEN_MIN_REQUIRED);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1278  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1279      options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_REQUESTED_IP, 4);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1280      options_out_len = dhcp_option_long(options_out_len, msg_out->options, lwip_ntohl(ip4_addr_get_u32(&dhcp->offered_ip_addr)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1281  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1282      options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_PARAMETER_REQUEST_LIST, LWIP_ARRAYSIZE(dhcp_discover_request_options));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1283      for (i = 0; i < LWIP_ARRAYSIZE(dhcp_discover_request_options); i++) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1284        options_out_len = dhcp_option_byte(options_out_len, msg_out->options, dhcp_discover_request_options[i]);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1285      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1286  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1287  #if LWIP_NETIF_HOSTNAME
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1288      options_out_len = dhcp_option_hostname(options_out_len, msg_out->options, netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1289  #endif /* LWIP_NETIF_HOSTNAME */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1290  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1291      LWIP_HOOK_DHCP_APPEND_OPTIONS(netif, dhcp, DHCP_STATE_REBOOTING, msg_out, DHCP_REQUEST, &options_out_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1292      dhcp_option_trailer(options_out_len, msg_out->options, p_out);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1293  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1294      /* broadcast to server */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1295      result = udp_sendto_if(dhcp_pcb, p_out, IP_ADDR_BROADCAST, LWIP_IANA_PORT_DHCP_SERVER, netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1296      pbuf_free(p_out);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1297      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_reboot: REBOOTING\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1298    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1299      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_SERIOUS, ("dhcp_reboot: could not allocate DHCP request\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1300      result = ERR_MEM;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1301    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1302    if (dhcp->tries < 255) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1303      dhcp->tries++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1304    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1305    msecs = (u16_t)(dhcp->tries < 10 ? dhcp->tries * 1000 : 10 * 1000);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1306    dhcp->request_timeout = (u16_t)((msecs + DHCP_FINE_TIMER_MSECS - 1) / DHCP_FINE_TIMER_MSECS);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1307    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_reboot(): set request timeout %"U16_F" msecs\n", msecs));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1308    return result;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1309  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1310  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1311  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1312   * @ingroup dhcp4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1313   * Release a DHCP lease and stop DHCP statemachine (and AUTOIP if LWIP_DHCP_AUTOIP_COOP).
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1314   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1315   * @param netif network interface
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1316   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1317  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1318  dhcp_release_and_stop(struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1319  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1320    struct dhcp *dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1321    ip_addr_t server_ip_addr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1322  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1323    LWIP_ASSERT_CORE_LOCKED();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1324    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_release_and_stop()\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1325    if (dhcp == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1326      return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1327    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1328  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1329    /* already off? -> nothing to do */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1330    if (dhcp->state == DHCP_STATE_OFF) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1331      return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1332    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1333  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1334    ip_addr_copy(server_ip_addr, dhcp->server_ip_addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1335  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1336    /* clean old DHCP offer */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1337    ip_addr_set_zero_ip4(&dhcp->server_ip_addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1338    ip4_addr_set_zero(&dhcp->offered_ip_addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1339    ip4_addr_set_zero(&dhcp->offered_sn_mask);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1340    ip4_addr_set_zero(&dhcp->offered_gw_addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1341  #if LWIP_DHCP_BOOTP_FILE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1342    ip4_addr_set_zero(&dhcp->offered_si_addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1343  #endif /* LWIP_DHCP_BOOTP_FILE */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1344    dhcp->offered_t0_lease = dhcp->offered_t1_renew = dhcp->offered_t2_rebind = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1345    dhcp->t1_renew_time = dhcp->t2_rebind_time = dhcp->lease_used = dhcp->t0_timeout = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1346  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1347    /* send release message when current IP was assigned via DHCP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1348    if (dhcp_supplied_address(netif)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1349      /* create and initialize the DHCP message header */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1350      struct pbuf *p_out;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1351      u16_t options_out_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1352      p_out = dhcp_create_msg(netif, dhcp, DHCP_RELEASE, &options_out_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1353      if (p_out != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1354        struct dhcp_msg *msg_out = (struct dhcp_msg *)p_out->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1355        options_out_len = dhcp_option(options_out_len, msg_out->options, DHCP_OPTION_SERVER_ID, 4);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1356        options_out_len = dhcp_option_long(options_out_len, msg_out->options, lwip_ntohl(ip4_addr_get_u32(ip_2_ip4(&server_ip_addr))));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1357  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1358        LWIP_HOOK_DHCP_APPEND_OPTIONS(netif, dhcp, dhcp->state, msg_out, DHCP_RELEASE, &options_out_len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1359        dhcp_option_trailer(options_out_len, msg_out->options, p_out);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1360  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1361        udp_sendto_if(dhcp_pcb, p_out, &server_ip_addr, LWIP_IANA_PORT_DHCP_SERVER, netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1362        pbuf_free(p_out);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1363        LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_STATE, ("dhcp_release: RELEASED, DHCP_STATE_OFF\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1364      } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1365        /* sending release failed, but that's not a problem since the correct behaviour of dhcp does not rely on release */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1366        LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_SERIOUS, ("dhcp_release: could not allocate DHCP request\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1367      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1368    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1369  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1370    /* remove IP address from interface (prevents routing from selecting this interface) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1371    netif_set_addr(netif, IP4_ADDR_ANY4, IP4_ADDR_ANY4, IP4_ADDR_ANY4);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1372  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1373  #if LWIP_DHCP_AUTOIP_COOP
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1374    if (dhcp->autoip_coop_state == DHCP_AUTOIP_COOP_STATE_ON) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1375      autoip_stop(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1376      dhcp->autoip_coop_state = DHCP_AUTOIP_COOP_STATE_OFF;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1377    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1378  #endif /* LWIP_DHCP_AUTOIP_COOP */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1379  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1380    dhcp_set_state(dhcp, DHCP_STATE_OFF);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1381  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1382    if (dhcp->pcb_allocated != 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1383      dhcp_dec_pcb_refcount(); /* free DHCP PCB if not needed any more */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1384      dhcp->pcb_allocated = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1385    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1386  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1387  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1388  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1389   * @ingroup dhcp4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1390   * This function calls dhcp_release_and_stop() internally.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1391   * @deprecated Use dhcp_release_and_stop() instead.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1392   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1393  err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1394  dhcp_release(struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1395  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1396    dhcp_release_and_stop(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1397    return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1398  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1399  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1400  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1401   * @ingroup dhcp4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1402   * This function calls dhcp_release_and_stop() internally.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1403   * @deprecated Use dhcp_release_and_stop() instead.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1404   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1405  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1406  dhcp_stop(struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1407  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1408    dhcp_release_and_stop(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1409  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1410  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1411  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1412   * Set the DHCP state of a DHCP client.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1413   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1414   * If the state changed, reset the number of tries.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1415   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1416  static void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1417  dhcp_set_state(struct dhcp *dhcp, u8_t new_state)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1418  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1419    if (new_state != dhcp->state) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1420      dhcp->state = new_state;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1421      dhcp->tries = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1422      dhcp->request_timeout = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1423    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1424  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1425  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1426  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1427   * Concatenate an option type and length field to the outgoing
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1428   * DHCP message.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1429   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1430   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1431  static u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1432  dhcp_option(u16_t options_out_len, u8_t *options, u8_t option_type, u8_t option_len)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1433  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1434    LWIP_ASSERT("dhcp_option: options_out_len + 2 + option_len <= DHCP_OPTIONS_LEN", options_out_len + 2U + option_len <= DHCP_OPTIONS_LEN);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1435    options[options_out_len++] = option_type;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1436    options[options_out_len++] = option_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1437    return options_out_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1438  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1439  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1440   * Concatenate a single byte to the outgoing DHCP message.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1441   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1442   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1443  static u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1444  dhcp_option_byte(u16_t options_out_len, u8_t *options, u8_t value)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1445  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1446    LWIP_ASSERT("dhcp_option_byte: options_out_len < DHCP_OPTIONS_LEN", options_out_len < DHCP_OPTIONS_LEN);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1447    options[options_out_len++] = value;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1448    return options_out_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1449  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1450  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1451  static u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1452  dhcp_option_short(u16_t options_out_len, u8_t *options, u16_t value)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1453  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1454    LWIP_ASSERT("dhcp_option_short: options_out_len + 2 <= DHCP_OPTIONS_LEN", options_out_len + 2U <= DHCP_OPTIONS_LEN);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1455    options[options_out_len++] = (u8_t)((value & 0xff00U) >> 8);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1456    options[options_out_len++] = (u8_t) (value & 0x00ffU);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1457    return options_out_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1458  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1459  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1460  static u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1461  dhcp_option_long(u16_t options_out_len, u8_t *options, u32_t value)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1462  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1463    LWIP_ASSERT("dhcp_option_long: options_out_len + 4 <= DHCP_OPTIONS_LEN", options_out_len + 4U <= DHCP_OPTIONS_LEN);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1464    options[options_out_len++] = (u8_t)((value & 0xff000000UL) >> 24);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1465    options[options_out_len++] = (u8_t)((value & 0x00ff0000UL) >> 16);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1466    options[options_out_len++] = (u8_t)((value & 0x0000ff00UL) >> 8);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1467    options[options_out_len++] = (u8_t)((value & 0x000000ffUL));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1468    return options_out_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1469  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1470  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1471  #if LWIP_NETIF_HOSTNAME
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1472  static u16_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1473  dhcp_option_hostname(u16_t options_out_len, u8_t *options, struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1474  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1475    if (netif->hostname != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1476      size_t namelen = strlen(netif->hostname);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1477      if (namelen > 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1478        size_t len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1479        const char *p = netif->hostname;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1480        /* Shrink len to available bytes (need 2 bytes for OPTION_HOSTNAME
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1481           and 1 byte for trailer) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1482        size_t available = DHCP_OPTIONS_LEN - options_out_len - 3;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1483        LWIP_ASSERT("DHCP: hostname is too long!", namelen <= available);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1484        len = LWIP_MIN(namelen, available);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1485        LWIP_ASSERT("DHCP: hostname is too long!", len <= 0xFF);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1486        options_out_len = dhcp_option(options_out_len, options, DHCP_OPTION_HOSTNAME, (u8_t)len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1487        while (len--) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1488          options_out_len = dhcp_option_byte(options_out_len, options, *p++);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1489        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1490      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1491    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1492    return options_out_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1493  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1494  #endif /* LWIP_NETIF_HOSTNAME */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1495  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1496  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1497   * Extract the DHCP message and the DHCP options.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1498   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1499   * Extract the DHCP message and the DHCP options, each into a contiguous
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1500   * piece of memory. As a DHCP message is variable sized by its options,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1501   * and also allows overriding some fields for options, the easy approach
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1502   * is to first unfold the options into a contiguous piece of memory, and
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1503   * use that further on.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1504   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1505   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1506  static err_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1507  dhcp_parse_reply(struct pbuf *p, struct dhcp *dhcp)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1508  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1509    u8_t *options;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1510    u16_t offset;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1511    u16_t offset_max;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1512    u16_t options_idx;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1513    u16_t options_idx_max;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1514    struct pbuf *q;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1515    int parse_file_as_options = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1516    int parse_sname_as_options = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1517    struct dhcp_msg *msg_in;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1518  #if LWIP_DHCP_BOOTP_FILE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1519    int file_overloaded = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1520  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1521  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1522    LWIP_UNUSED_ARG(dhcp);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1523  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1524    /* clear received options */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1525    dhcp_clear_all_options(dhcp);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1526    /* check that beginning of dhcp_msg (up to and including chaddr) is in first pbuf */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1527    if (p->len < DHCP_SNAME_OFS) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1528      return ERR_BUF;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1529    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1530    msg_in = (struct dhcp_msg *)p->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1531  #if LWIP_DHCP_BOOTP_FILE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1532    /* clear boot file name */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1533    dhcp->boot_file_name[0] = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1534  #endif /* LWIP_DHCP_BOOTP_FILE */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1535  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1536    /* parse options */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1537  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1538    /* start with options field */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1539    options_idx = DHCP_OPTIONS_OFS;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1540    /* parse options to the end of the received packet */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1541    options_idx_max = p->tot_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1542  again:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1543    q = p;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1544    while ((q != NULL) && (options_idx >= q->len)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1545      options_idx = (u16_t)(options_idx - q->len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1546      options_idx_max = (u16_t)(options_idx_max - q->len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1547      q = q->next;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1548    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1549    if (q == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1550      return ERR_BUF;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1551    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1552    offset = options_idx;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1553    offset_max = options_idx_max;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1554    options = (u8_t *)q->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1555    /* at least 1 byte to read and no end marker, then at least 3 bytes to read? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1556    while ((q != NULL) && (offset < offset_max) && (options[offset] != DHCP_OPTION_END)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1557      u8_t op = options[offset];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1558      u8_t len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1559      u8_t decode_len = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1560      int decode_idx = -1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1561      u16_t val_offset = (u16_t)(offset + 2);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1562      if (val_offset < offset) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1563        /* overflow */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1564        return ERR_BUF;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1565      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1566      /* len byte might be in the next pbuf */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1567      if ((offset + 1) < q->len) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1568        len = options[offset + 1];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1569      } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1570        len = (q->next != NULL ? ((u8_t *)q->next->payload)[0] : 0);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1571      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1572      /* LWIP_DEBUGF(DHCP_DEBUG, ("msg_offset=%"U16_F", q->len=%"U16_F, msg_offset, q->len)); */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1573      decode_len = len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1574      switch (op) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1575        /* case(DHCP_OPTION_END): handled above */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1576        case (DHCP_OPTION_PAD):
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1577          /* special option: no len encoded */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1578          decode_len = len = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1579          /* will be increased below */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1580          break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1581        case (DHCP_OPTION_SUBNET_MASK):
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1582          LWIP_ERROR("len == 4", len == 4, return ERR_VAL;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1583          decode_idx = DHCP_OPTION_IDX_SUBNET_MASK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1584          break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1585        case (DHCP_OPTION_ROUTER):
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1586          decode_len = 4; /* only copy the first given router */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1587          LWIP_ERROR("len >= decode_len", len >= decode_len, return ERR_VAL;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1588          decode_idx = DHCP_OPTION_IDX_ROUTER;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1589          break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1590  #if LWIP_DHCP_PROVIDE_DNS_SERVERS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1591        case (DHCP_OPTION_DNS_SERVER):
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1592          /* special case: there might be more than one server */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1593          LWIP_ERROR("len %% 4 == 0", len % 4 == 0, return ERR_VAL;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1594          /* limit number of DNS servers */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1595          decode_len = LWIP_MIN(len, 4 * DNS_MAX_SERVERS);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1596          LWIP_ERROR("len >= decode_len", len >= decode_len, return ERR_VAL;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1597          decode_idx = DHCP_OPTION_IDX_DNS_SERVER;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1598          break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1599  #endif /* LWIP_DHCP_PROVIDE_DNS_SERVERS */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1600        case (DHCP_OPTION_LEASE_TIME):
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1601          LWIP_ERROR("len == 4", len == 4, return ERR_VAL;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1602          decode_idx = DHCP_OPTION_IDX_LEASE_TIME;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1603          break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1604  #if LWIP_DHCP_GET_NTP_SRV
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1605        case (DHCP_OPTION_NTP):
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1606          /* special case: there might be more than one server */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1607          LWIP_ERROR("len %% 4 == 0", len % 4 == 0, return ERR_VAL;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1608          /* limit number of NTP servers */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1609          decode_len = LWIP_MIN(len, 4 * LWIP_DHCP_MAX_NTP_SERVERS);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1610          LWIP_ERROR("len >= decode_len", len >= decode_len, return ERR_VAL;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1611          decode_idx = DHCP_OPTION_IDX_NTP_SERVER;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1612          break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1613  #endif /* LWIP_DHCP_GET_NTP_SRV*/
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1614        case (DHCP_OPTION_OVERLOAD):
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1615          LWIP_ERROR("len == 1", len == 1, return ERR_VAL;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1616          /* decode overload only in options, not in file/sname: invalid packet */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1617          LWIP_ERROR("overload in file/sname", options_idx == DHCP_OPTIONS_OFS, return ERR_VAL;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1618          decode_idx = DHCP_OPTION_IDX_OVERLOAD;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1619          break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1620        case (DHCP_OPTION_MESSAGE_TYPE):
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1621          LWIP_ERROR("len == 1", len == 1, return ERR_VAL;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1622          decode_idx = DHCP_OPTION_IDX_MSG_TYPE;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1623          break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1624        case (DHCP_OPTION_SERVER_ID):
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1625          LWIP_ERROR("len == 4", len == 4, return ERR_VAL;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1626          decode_idx = DHCP_OPTION_IDX_SERVER_ID;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1627          break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1628        case (DHCP_OPTION_T1):
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1629          LWIP_ERROR("len == 4", len == 4, return ERR_VAL;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1630          decode_idx = DHCP_OPTION_IDX_T1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1631          break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1632        case (DHCP_OPTION_T2):
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1633          LWIP_ERROR("len == 4", len == 4, return ERR_VAL;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1634          decode_idx = DHCP_OPTION_IDX_T2;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1635          break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1636        default:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1637          decode_len = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1638          LWIP_DEBUGF(DHCP_DEBUG, ("skipping option %"U16_F" in options\n", (u16_t)op));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1639          LWIP_HOOK_DHCP_PARSE_OPTION(ip_current_netif(), dhcp, dhcp->state, msg_in,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1640                                      dhcp_option_given(dhcp, DHCP_OPTION_IDX_MSG_TYPE) ? (u8_t)dhcp_get_option_value(dhcp, DHCP_OPTION_IDX_MSG_TYPE) : 0,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1641                                      op, len, q, val_offset);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1642          break;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1643      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1644      if (op == DHCP_OPTION_PAD) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1645        offset++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1646      } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1647        if (offset + len + 2 > 0xFFFF) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1648          /* overflow */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1649          return ERR_BUF;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1650        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1651        offset = (u16_t)(offset + len + 2);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1652        if (decode_len > 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1653          u32_t value = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1654          u16_t copy_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1655  decode_next:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1656          LWIP_ASSERT("check decode_idx", decode_idx >= 0 && decode_idx < DHCP_OPTION_IDX_MAX);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1657          if (!dhcp_option_given(dhcp, decode_idx)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1658            copy_len = LWIP_MIN(decode_len, 4);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1659            if (pbuf_copy_partial(q, &value, copy_len, val_offset) != copy_len) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1660              return ERR_BUF;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1661            }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1662            if (decode_len > 4) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1663              /* decode more than one u32_t */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1664              u16_t next_val_offset;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1665              LWIP_ERROR("decode_len %% 4 == 0", decode_len % 4 == 0, return ERR_VAL;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1666              dhcp_got_option(dhcp, decode_idx);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1667              dhcp_set_option_value(dhcp, decode_idx, lwip_htonl(value));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1668              decode_len = (u8_t)(decode_len - 4);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1669              next_val_offset = (u16_t)(val_offset + 4);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1670              if (next_val_offset < val_offset) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1671                /* overflow */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1672                return ERR_BUF;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1673              }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1674              val_offset = next_val_offset;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1675              decode_idx++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1676              goto decode_next;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1677            } else if (decode_len == 4) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1678              value = lwip_ntohl(value);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1679            } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1680              LWIP_ERROR("invalid decode_len", decode_len == 1, return ERR_VAL;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1681              value = ((u8_t *)&value)[0];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1682            }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1683            dhcp_got_option(dhcp, decode_idx);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1684            dhcp_set_option_value(dhcp, decode_idx, value);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1685          }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1686        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1687      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1688      if (offset >= q->len) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1689        offset = (u16_t)(offset - q->len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1690        offset_max = (u16_t)(offset_max - q->len);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1691        if (offset < offset_max) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1692          q = q->next;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1693          LWIP_ERROR("next pbuf was null", q != NULL, return ERR_VAL;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1694          options = (u8_t *)q->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1695        } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1696          /* We've run out of bytes, probably no end marker. Don't proceed. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1697          return ERR_BUF;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1698        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1699      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1700    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1701    /* is this an overloaded message? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1702    if (dhcp_option_given(dhcp, DHCP_OPTION_IDX_OVERLOAD)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1703      u32_t overload = dhcp_get_option_value(dhcp, DHCP_OPTION_IDX_OVERLOAD);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1704      dhcp_clear_option(dhcp, DHCP_OPTION_IDX_OVERLOAD);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1705      if (overload == DHCP_OVERLOAD_FILE) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1706        parse_file_as_options = 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1707        LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("overloaded file field\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1708      } else if (overload == DHCP_OVERLOAD_SNAME) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1709        parse_sname_as_options = 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1710        LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("overloaded sname field\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1711      } else if (overload == DHCP_OVERLOAD_SNAME_FILE) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1712        parse_sname_as_options = 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1713        parse_file_as_options = 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1714        LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("overloaded sname and file field\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1715      } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1716        LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("invalid overload option: %d\n", (int)overload));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1717      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1718    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1719    if (parse_file_as_options) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1720      /* if both are overloaded, parse file first and then sname (RFC 2131 ch. 4.1) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1721      parse_file_as_options = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1722      options_idx = DHCP_FILE_OFS;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1723      options_idx_max = DHCP_FILE_OFS + DHCP_FILE_LEN;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1724  #if LWIP_DHCP_BOOTP_FILE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1725      file_overloaded = 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1726  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1727      goto again;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1728    } else if (parse_sname_as_options) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1729      parse_sname_as_options = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1730      options_idx = DHCP_SNAME_OFS;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1731      options_idx_max = DHCP_SNAME_OFS + DHCP_SNAME_LEN;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1732      goto again;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1733    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1734  #if LWIP_DHCP_BOOTP_FILE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1735    if (!file_overloaded) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1736      /* only do this for ACK messages */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1737      if (dhcp_option_given(dhcp, DHCP_OPTION_IDX_MSG_TYPE) &&
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1738        (dhcp_get_option_value(dhcp, DHCP_OPTION_IDX_MSG_TYPE) == DHCP_ACK))
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1739      /* copy bootp file name, don't care for sname (server hostname) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1740      if (pbuf_copy_partial(p, dhcp->boot_file_name, DHCP_FILE_LEN-1, DHCP_FILE_OFS) != (DHCP_FILE_LEN-1)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1741        return ERR_BUF;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1742      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1743      /* make sure the string is really NULL-terminated */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1744      dhcp->boot_file_name[DHCP_FILE_LEN-1] = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1745    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1746  #endif /* LWIP_DHCP_BOOTP_FILE */ 
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1747    return ERR_OK;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1748  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1749  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1750  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1751   * If an incoming DHCP message is in response to us, then trigger the state machine
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1752   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1753  static void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1754  dhcp_recv(void *arg, struct udp_pcb *pcb, struct pbuf *p, const ip_addr_t *addr, u16_t port)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1755  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1756    struct netif *netif = ip_current_input_netif();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1757    struct dhcp *dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1758    struct dhcp_msg *reply_msg = (struct dhcp_msg *)p->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1759    u8_t msg_type;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1760    u8_t i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1761    struct dhcp_msg *msg_in;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1762  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1763    LWIP_UNUSED_ARG(arg);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1764  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1765    /* Caught DHCP message from netif that does not have DHCP enabled? -> not interested */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1766    if ((dhcp == NULL) || (dhcp->pcb_allocated == 0)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1767      goto free_pbuf_and_return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1768    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1769  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1770    LWIP_ASSERT("invalid server address type", IP_IS_V4(addr));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1771  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1772    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("dhcp_recv(pbuf = %p) from DHCP server %"U16_F".%"U16_F".%"U16_F".%"U16_F" port %"U16_F"\n", (void *)p,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1773                ip4_addr1_16(ip_2_ip4(addr)), ip4_addr2_16(ip_2_ip4(addr)), ip4_addr3_16(ip_2_ip4(addr)), ip4_addr4_16(ip_2_ip4(addr)), port));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1774    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("pbuf->len = %"U16_F"\n", p->len));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1775    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("pbuf->tot_len = %"U16_F"\n", p->tot_len));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1776    /* prevent warnings about unused arguments */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1777    LWIP_UNUSED_ARG(pcb);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1778    LWIP_UNUSED_ARG(addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1779    LWIP_UNUSED_ARG(port);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1780  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1781    if (p->len < DHCP_MIN_REPLY_LEN) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1782      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_WARNING, ("DHCP reply message or pbuf too short\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1783      goto free_pbuf_and_return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1784    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1785  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1786    if (reply_msg->op != DHCP_BOOTREPLY) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1787      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_WARNING, ("not a DHCP reply message, but type %"U16_F"\n", (u16_t)reply_msg->op));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1788      goto free_pbuf_and_return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1789    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1790    /* iterate through hardware address and match against DHCP message */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1791    for (i = 0; i < netif->hwaddr_len && i < LWIP_MIN(DHCP_CHADDR_LEN, NETIF_MAX_HWADDR_LEN); i++) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1792      if (netif->hwaddr[i] != reply_msg->chaddr[i]) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1793        LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_WARNING,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1794                    ("netif->hwaddr[%"U16_F"]==%02"X16_F" != reply_msg->chaddr[%"U16_F"]==%02"X16_F"\n",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1795                     (u16_t)i, (u16_t)netif->hwaddr[i], (u16_t)i, (u16_t)reply_msg->chaddr[i]));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1796        goto free_pbuf_and_return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1797      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1798    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1799    /* match transaction ID against what we expected */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1800    if (lwip_ntohl(reply_msg->xid) != dhcp->xid) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1801      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_WARNING,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1802                  ("transaction id mismatch reply_msg->xid(%"X32_F")!=dhcp->xid(%"X32_F")\n", lwip_ntohl(reply_msg->xid), dhcp->xid));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1803      goto free_pbuf_and_return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1804    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1805    /* option fields could be unfold? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1806    if (dhcp_parse_reply(p, dhcp) != ERR_OK) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1807      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_SERIOUS,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1808                  ("problem unfolding DHCP message - too short on memory?\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1809      goto free_pbuf_and_return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1810    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1811  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1812    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("searching DHCP_OPTION_MESSAGE_TYPE\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1813    /* obtain pointer to DHCP message type */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1814    if (!dhcp_option_given(dhcp, DHCP_OPTION_IDX_MSG_TYPE)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1815      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_WARNING, ("DHCP_OPTION_MESSAGE_TYPE option not found\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1816      goto free_pbuf_and_return;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1817    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1818  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1819    msg_in = (struct dhcp_msg *)p->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1820    /* read DHCP message type */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1821    msg_type = (u8_t)dhcp_get_option_value(dhcp, DHCP_OPTION_IDX_MSG_TYPE);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1822    /* message type is DHCP ACK? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1823    if (msg_type == DHCP_ACK) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1824      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("DHCP_ACK received\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1825      /* in requesting state? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1826      if (dhcp->state == DHCP_STATE_REQUESTING) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1827        dhcp_handle_ack(netif, msg_in);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1828  #if DHCP_DOES_ARP_CHECK
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1829        if ((netif->flags & NETIF_FLAG_ETHARP) != 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1830          /* check if the acknowledged lease address is already in use */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1831          dhcp_check(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1832        } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1833          /* bind interface to the acknowledged lease address */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1834          dhcp_bind(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1835        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1836  #else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1837        /* bind interface to the acknowledged lease address */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1838        dhcp_bind(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1839  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1840      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1841      /* already bound to the given lease address? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1842      else if ((dhcp->state == DHCP_STATE_REBOOTING) || (dhcp->state == DHCP_STATE_REBINDING) ||
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1843               (dhcp->state == DHCP_STATE_RENEWING)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1844        dhcp_handle_ack(netif, msg_in);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1845        dhcp_bind(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1846      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1847    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1848    /* received a DHCP_NAK in appropriate state? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1849    else if ((msg_type == DHCP_NAK) &&
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1850             ((dhcp->state == DHCP_STATE_REBOOTING) || (dhcp->state == DHCP_STATE_REQUESTING) ||
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1851              (dhcp->state == DHCP_STATE_REBINDING) || (dhcp->state == DHCP_STATE_RENEWING  ))) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1852      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("DHCP_NAK received\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1853      dhcp_handle_nak(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1854    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1855    /* received a DHCP_OFFER in DHCP_STATE_SELECTING state? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1856    else if ((msg_type == DHCP_OFFER) && (dhcp->state == DHCP_STATE_SELECTING)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1857      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE, ("DHCP_OFFER received in DHCP_STATE_SELECTING state\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1858      /* remember offered lease */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1859      dhcp_handle_offer(netif, msg_in);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1860    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1861  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1862  free_pbuf_and_return:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1863    pbuf_free(p);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1864  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1865  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1866  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1867   * Create a DHCP request, fill in common headers
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1868   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1869   * @param netif the netif under DHCP control
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1870   * @param dhcp dhcp control struct
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1871   * @param message_type message type of the request
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1872   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1873  static struct pbuf *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1874  dhcp_create_msg(struct netif *netif, struct dhcp *dhcp, u8_t message_type, u16_t *options_out_len)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1875  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1876    u16_t i;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1877    struct pbuf *p_out;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1878    struct dhcp_msg *msg_out;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1879    u16_t options_out_len_loc;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1880  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1881  #ifndef DHCP_GLOBAL_XID
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1882    /** default global transaction identifier starting value (easy to match
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1883     *  with a packet analyser). We simply increment for each new request.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1884     *  Predefine DHCP_GLOBAL_XID to a better value or a function call to generate one
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1885     *  at runtime, any supporting function prototypes can be defined in DHCP_GLOBAL_XID_HEADER */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1886  #if DHCP_CREATE_RAND_XID && defined(LWIP_RAND)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1887    static u32_t xid;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1888  #else /* DHCP_CREATE_RAND_XID && defined(LWIP_RAND) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1889    static u32_t xid = 0xABCD0000;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1890  #endif /* DHCP_CREATE_RAND_XID && defined(LWIP_RAND) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1891  #else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1892    if (!xid_initialised) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1893      xid = DHCP_GLOBAL_XID;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1894      xid_initialised = !xid_initialised;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1895    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1896  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1897    LWIP_ERROR("dhcp_create_msg: netif != NULL", (netif != NULL), return NULL;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1898    LWIP_ERROR("dhcp_create_msg: dhcp != NULL", (dhcp != NULL), return NULL;);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1899    p_out = pbuf_alloc(PBUF_TRANSPORT, sizeof(struct dhcp_msg), PBUF_RAM);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1900    if (p_out == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1901      LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE | LWIP_DBG_LEVEL_SERIOUS,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1902                  ("dhcp_create_msg(): could not allocate pbuf\n"));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1903      return NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1904    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1905    LWIP_ASSERT("dhcp_create_msg: check that first pbuf can hold struct dhcp_msg",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1906                (p_out->len >= sizeof(struct dhcp_msg)));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1907  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1908    /* DHCP_REQUEST should reuse 'xid' from DHCPOFFER */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1909    if ((message_type != DHCP_REQUEST) || (dhcp->state == DHCP_STATE_REBOOTING)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1910      /* reuse transaction identifier in retransmissions */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1911      if (dhcp->tries == 0) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1912  #if DHCP_CREATE_RAND_XID && defined(LWIP_RAND)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1913        xid = LWIP_RAND();
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1914  #else /* DHCP_CREATE_RAND_XID && defined(LWIP_RAND) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1915        xid++;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1916  #endif /* DHCP_CREATE_RAND_XID && defined(LWIP_RAND) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1917      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1918      dhcp->xid = xid;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1919    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1920    LWIP_DEBUGF(DHCP_DEBUG | LWIP_DBG_TRACE,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1921                ("transaction id xid(%"X32_F")\n", xid));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1922  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1923    msg_out = (struct dhcp_msg *)p_out->payload;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1924    memset(msg_out, 0, sizeof(struct dhcp_msg));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1925  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1926    msg_out->op = DHCP_BOOTREQUEST;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1927    /* @todo: make link layer independent */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1928    msg_out->htype = LWIP_IANA_HWTYPE_ETHERNET;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1929    msg_out->hlen = netif->hwaddr_len;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1930    msg_out->xid = lwip_htonl(dhcp->xid);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1931    /* we don't need the broadcast flag since we can receive unicast traffic
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1932       before being fully configured! */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1933    /* set ciaddr to netif->ip_addr based on message_type and state */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1934    if ((message_type == DHCP_INFORM) || (message_type == DHCP_DECLINE) || (message_type == DHCP_RELEASE) ||
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1935        ((message_type == DHCP_REQUEST) && /* DHCP_STATE_BOUND not used for sending! */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1936         ((dhcp->state == DHCP_STATE_RENEWING) || dhcp->state == DHCP_STATE_REBINDING))) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1937      ip4_addr_copy(msg_out->ciaddr, *netif_ip4_addr(netif));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1938    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1939    for (i = 0; i < LWIP_MIN(DHCP_CHADDR_LEN, NETIF_MAX_HWADDR_LEN); i++) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1940      /* copy netif hardware address (padded with zeroes through memset already) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1941      msg_out->chaddr[i] = netif->hwaddr[i];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1942    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1943    msg_out->cookie = PP_HTONL(DHCP_MAGIC_COOKIE);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1944    /* Add option MESSAGE_TYPE */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1945    options_out_len_loc = dhcp_option(0, msg_out->options, DHCP_OPTION_MESSAGE_TYPE, DHCP_OPTION_MESSAGE_TYPE_LEN);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1946    options_out_len_loc = dhcp_option_byte(options_out_len_loc, msg_out->options, message_type);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1947    if (options_out_len) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1948      *options_out_len = options_out_len_loc;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1949    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1950    return p_out;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1951  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1952  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1953  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1954   * Add a DHCP message trailer
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1955   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1956   * Adds the END option to the DHCP message, and if
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1957   * necessary, up to three padding bytes.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1958   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1959  static void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1960  dhcp_option_trailer(u16_t options_out_len, u8_t *options, struct pbuf *p_out)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1961  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1962    options[options_out_len++] = DHCP_OPTION_END;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1963    /* packet is too small, or not 4 byte aligned? */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1964    while (((options_out_len < DHCP_MIN_OPTIONS_LEN) || (options_out_len & 3)) &&
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1965           (options_out_len < DHCP_OPTIONS_LEN)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1966      /* add a fill/padding byte */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1967      options[options_out_len++] = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1968    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1969    /* shrink the pbuf to the actual content length */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1970    pbuf_realloc(p_out, (u16_t)(sizeof(struct dhcp_msg) - DHCP_OPTIONS_LEN + options_out_len));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1971  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1972  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1973  /** check if DHCP supplied netif->ip_addr
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1974   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1975   * @param netif the netif to check
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1976   * @return 1 if DHCP supplied netif->ip_addr (states BOUND or RENEWING),
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1977   *         0 otherwise
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1978   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1979  u8_t
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1980  dhcp_supplied_address(const struct netif *netif)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1981  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1982    if ((netif != NULL) && (netif_dhcp_data(netif) != NULL)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1983      struct dhcp *dhcp = netif_dhcp_data(netif);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1984      return (dhcp->state == DHCP_STATE_BOUND) || (dhcp->state == DHCP_STATE_RENEWING) ||
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1985             (dhcp->state == DHCP_STATE_REBINDING);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1986    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1987    return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1988  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1989  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\core\ipv4\dhcp.c	  1990  #endif /* LWIP_IPV4 && LWIP_DHCP */

	; Module end
