	; Module start
	.compiler_version	"TASKING VX-toolset for TriCore: C compiler v6.2r2 Build 18041957 SN 09003395"
	.compiler_invocation	"ctc -f cc24004a --dep-file=EAS\\BSW\\TcpIp\\lwip-2.1.2\\api\\.netdb.o.d -c99 --fp-model=3cflnrSTz -D__CPU__=tc39x -D__CPU_TC39X__ --core=tc1.6.2 --fp-model=+float -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\EB_Cfg\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Cfg_Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Integration -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Irq\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Sfr\\TC39xB\\_Reg -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Ssw\\TC39B\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Adc\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Can_17_McmCan\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Dio\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Eth_17_GEthMacV2\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fee\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Fls_17_Dmu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Gpt\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\I2c\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Icu_17_TimerIp\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\inc\\AS440 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\McalLib\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Mcu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Ocu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Port\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Pwm_17_GtmCcu6\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Smu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Spi\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Stm\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Uart\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\inc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Tricore\\Wdg_17_Scu\\ssc\\src -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Lib -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\App_Func -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\demo -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Adc_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Gtm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\AscLin_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Can_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\EthV2_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Irq\\Stm_Irq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Srval\\Main -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\APP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\BswM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanSm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\CanTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Com -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\ComM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Common -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Crc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dcm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Dem -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Det -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\DoIP -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EcuM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Eth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthSM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTrcv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\EthTSyn -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FiM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\FlsTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\MemIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Nm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\NvM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Kernel -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\OS\\Portable -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\PduR -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\RamTst -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\StbM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv4 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\core\\ipv6 -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\arpa -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\net -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\posix\\sys -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\compat\\stdc -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\apps -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\priv -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\lwip\\prot -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\include\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\netif\\ppp\\polarssl -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\UdpNm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgIf -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\WdgM -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Cal -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Daq -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pag -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Pgm -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\Std -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\Xcp\\XcpOnEth -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Callout -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config -IF:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Library\\Vfx_ComE2E -g2 --make-target=EAS\\BSW\\TcpIp\\lwip-2.1.2\\api\\netdb.o -t2 --language=-gcc,-volatile,+strings,-kanji --default-near-size=0 -O1 --default-a1-size=0 --default-a0-size=0 --source --align=0 --switch=auto --error-limit=42 -o EAS\\BSW\\TcpIp\\lwip-2.1.2\\api\\netdb.src ..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api\\netdb.c"
	.compiler_name		"ctc"
	;source	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api\\netdb.c'

	
$TC162
	
	.sdecl	'.debug_info',debug
	.sect	'.debug_info'
.L3:
	.word	4542
	.half	3
	.word	.L4
	.byte	4
.L2:
	.byte	1
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api\\netdb.c',0
	.byte	'TASKING VX-toolset for TriCore: C compiler',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Debug\\',0,12,1
	.word	.L5
	.byte	2,1,3
	.word	163
	.byte	4
	.byte	'__codeptr',0,1,1,1
	.word	165
	.byte	5
	.byte	'unsigned char',0,1,8,4
	.byte	'boolean',0,2,102,29
	.word	188
	.byte	4
	.byte	'uint8',0,2,106,29
	.word	188
	.byte	5
	.byte	'unsigned short int',0,2,7,4
	.byte	'uint16',0,2,110,29
	.word	235
	.byte	5
	.byte	'unsigned long int',0,4,7,4
	.byte	'uint32',0,2,114,29
	.word	272
	.byte	4
	.byte	'Std_ReturnType',0,3,109,16
	.word	188
	.byte	4
	.byte	'PduIdType',0,4,37,21
	.word	188
	.byte	4
	.byte	'PduLengthType',0,4,41,22
	.word	235
	.byte	6,5,101,9,1,7
	.byte	'BUFREQ_OK',0,0,7
	.byte	'BUFREQ_E_NOT_OK',0,1,7
	.byte	'BUFREQ_E_BUSY',0,2,7
	.byte	'BUFREQ_E_OVFL',0,3,0,4
	.byte	'BufReq_ReturnType',0,5,107,3
	.word	371
	.byte	3
	.word	188
	.byte	4
	.byte	'SduDataPtrType',0,5,189,1,40
	.word	465
	.byte	6,5,204,1,9,1,7
	.byte	'TP_DATACONF',0,0,7
	.byte	'TP_DATARETRY',0,1,7
	.byte	'TP_CONFPENDING',0,2,0,4
	.byte	'TpDataStateType',0,5,216,1,3
	.word	494
	.byte	4
	.byte	'TcpIp_SocketIdType',0,6,50,16
	.word	188
	.byte	8,4
	.word	272
	.byte	9,0,0,10,6,52,9,4,11
	.byte	'Addr',0
	.word	599
	.byte	4,2,35,0,0,4
	.byte	'TcpIp_IpAddressType',0,6,55,3
	.word	608
	.byte	4
	.byte	'TcpIp_DomainType',0,6,61,16
	.word	235
	.byte	10,6,68,9,8,11
	.byte	'Domain',0
	.word	235
	.byte	2,2,35,0,11
	.byte	'Port',0
	.word	235
	.byte	2,2,35,2,11
	.byte	'Addr',0
	.word	599
	.byte	4,2,35,4,0,4
	.byte	'TcpIp_SockAddrInetType',0,6,73,3
	.word	681
	.byte	4
	.byte	'TcpIp_AddressType',0,7,128,1,15
	.word	188
	.byte	4
	.byte	'TcpIp_CtrlIdType',0,7,142,1,15
	.word	188
	.byte	4
	.byte	'TcpIp_IpAddrStateType',0,7,144,1,15
	.word	188
	.byte	4
	.byte	'TcpIp_LocalAddrAssignmentConfigType',0,7,149,1,15
	.word	188
	.byte	4
	.byte	'TcpIp_StaticAddrIdType',0,7,151,1,15
	.word	188
	.byte	10,7,152,1,9,12,11
	.byte	'State',0
	.word	188
	.byte	1,2,35,0,11
	.byte	'Netmask',0
	.word	188
	.byte	1,2,35,1,11
	.byte	'Domain',0
	.word	235
	.byte	2,2,35,2,11
	.byte	'IpAddr',0
	.word	608
	.byte	4,2,35,4,11
	.byte	'DefaultRouter',0
	.word	608
	.byte	4,2,35,8,0,4
	.byte	'TcpIp_StaticIpAddrType',0,7,162,1,3
	.word	923
	.byte	4
	.byte	'TcpIp_LocalAddrIdType',0,7,173,1,15
	.word	188
	.byte	8,3
	.word	188
	.byte	9,2,0,10,7,231,1,9,8,11
	.byte	'CtrlId',0
	.word	188
	.byte	1,2,35,0,11
	.byte	'Address',0
	.word	188
	.byte	1,2,35,1,11
	.byte	'Domain',0
	.word	235
	.byte	2,2,35,2,11
	.byte	'StaticAddrId',0
	.word	188
	.byte	1,2,35,4,11
	.byte	'Assignments',0
	.word	1080
	.byte	3,2,35,5,0,4
	.byte	'TcpIp_LocalAddrConfigType',0,7,243,1,3
	.word	1089
	.byte	10,7,245,1,9,4,11
	.byte	'ArpConfigId',0
	.word	188
	.byte	1,2,35,0,11
	.byte	'DHCPConfigId',0
	.word	188
	.byte	1,2,35,1,11
	.byte	'AutoIpInitTimeout',0
	.word	235
	.byte	2,2,35,2,0,4
	.byte	'TcpIp_IpV4CtrlConfigType',0,7,130,2,3
	.word	1223
	.byte	10,7,133,2,9,8,11
	.byte	'CtrlIdx',0
	.word	188
	.byte	1,2,35,0,11
	.byte	'FramePrio',0
	.word	188
	.byte	1,2,35,1,11
	.byte	'UnicastAddrId',0
	.word	188
	.byte	1,2,35,2,11
	.byte	'UnicastAddrLimit',0
	.word	188
	.byte	1,2,35,3,11
	.byte	'MulticastAddrId',0
	.word	188
	.byte	1,2,35,4,11
	.byte	'LocalAddrLimit',0
	.word	188
	.byte	1,2,35,5,11
	.byte	'IpV4CtrlId',0
	.word	188
	.byte	1,2,35,6,11
	.byte	'IpV6CtrlId',0
	.word	188
	.byte	1,2,35,7,0,4
	.byte	'TcpIp_NetIfCtrlConfigType',0,7,148,2,3
	.word	1334
	.byte	4
	.byte	'SoAd_RoutingGroupIdType',0,8,43,15
	.word	188
	.byte	4
	.byte	'SoAd_SoConIdType',0,8,44,15
	.word	188
	.byte	4
	.byte	'SoAd_SoConGroupIdType',0,8,45,15
	.word	188
	.byte	4
	.byte	'SoAd_PduRouteIdType',0,8,46,15
	.word	188
	.byte	4
	.byte	'SoAd_PduRouteDestIdType',0,8,47,15
	.word	188
	.byte	4
	.byte	'SoAd_SocketRouteIdType',0,8,48,15
	.word	188
	.byte	4
	.byte	'SoAd_IfTxUnconfirmedType',0,8,49,16
	.word	235
	.byte	4
	.byte	'SoAd_IfTxTimerType',0,8,51,16
	.word	235
	.byte	8,1
	.word	188
	.byte	9,0,0,10,8,53,9,2,11
	.byte	'Mask',0
	.word	1788
	.byte	1,2,35,0,11
	.byte	'RoutingState',0
	.word	1788
	.byte	1,2,35,1,0,4
	.byte	'SoAd_RoutingGroupCtrlType',0,8,57,3
	.word	1797
	.byte	6,8,63,9,1,7
	.byte	'SOAD_UL_DOIP',0,0,7
	.byte	'SOAD_UL_UDPNM',0,1,7
	.byte	'SOAD_UL_PDUR',0,2,7
	.byte	'SOAD_UL_XCP',0,3,7
	.byte	'SOAD_UL_MAX',0,4,0,4
	.byte	'SoAd_ULIndexType',0,8,71,3
	.word	1873
	.byte	4
	.byte	'SoAd_RemoteAddressType',0,9,113,32
	.word	681
	.byte	6,9,115,9,1,7
	.byte	'SOAD_SOCON_UNINIT',0,0,7
	.byte	'SOAD_SOCON_OFFLINE',0,1,7
	.byte	'SOAD_SOCON_RECONN',0,2,7
	.byte	'SOAD_SOCON_ONLINE',0,3,0,4
	.byte	'SoAd_SoConModeType',0,9,121,3
	.word	2009
	.byte	12
	.word	188
	.byte	3
	.word	2123
	.byte	12
	.word	188
	.byte	3
	.word	2133
	.byte	12
	.word	188
	.byte	3
	.word	2143
	.byte	12
	.word	1873
	.byte	3
	.word	2153
	.byte	10,9,129,1,9,36,11
	.byte	'IfBufferLength',0
	.word	235
	.byte	2,2,35,0,11
	.byte	'IfBufferOffset',0
	.word	235
	.byte	2,2,35,2,11
	.byte	'TpBufferLength',0
	.word	235
	.byte	2,2,35,4,11
	.byte	'TpBufferOffset',0
	.word	235
	.byte	2,2,35,6,11
	.byte	'PduRouteNum',0
	.word	188
	.byte	1,2,35,8,11
	.byte	'SocketRouteNum',0
	.word	188
	.byte	1,2,35,9,11
	.byte	'PduRouteDestNum',0
	.word	188
	.byte	1,2,35,10,11
	.byte	'RemoteAddrState',0
	.word	188
	.byte	1,2,35,11,11
	.byte	'RemoteAddr',0
	.word	681
	.byte	8,2,35,12,11
	.byte	'PduRouteDestList',0
	.word	2128
	.byte	4,2,35,20,11
	.byte	'PduRouteList',0
	.word	2138
	.byte	4,2,35,24,11
	.byte	'SocketRouteList',0
	.word	2148
	.byte	4,2,35,28,11
	.byte	'SoConModeChgList',0
	.word	2158
	.byte	4,2,35,32,0,4
	.byte	'SoAd_SocketConnectionType',0,9,146,1,3
	.word	2163
	.byte	10,9,148,1,9,16,11
	.byte	'CtrlFlag',0
	.word	188
	.byte	1,2,35,0,11
	.byte	'KeepAliveProbesMax',0
	.word	235
	.byte	2,2,35,2,11
	.byte	'KeepAliveInterval',0
	.word	272
	.byte	4,2,35,4,11
	.byte	'KeepAliveTime',0
	.word	272
	.byte	4,2,35,8,11
	.byte	'TxQuota',0
	.word	272
	.byte	4,2,35,12,0,4
	.byte	'SoAd_TcpProtocolType',0,9,155,1,3
	.word	2515
	.byte	10,9,157,1,9,12,11
	.byte	'CtrlFlag',0
	.word	188
	.byte	1,2,35,0,11
	.byte	'nPduTxBufferMin',0
	.word	235
	.byte	2,2,35,2,11
	.byte	'TriggerTimeout',0
	.word	235
	.byte	2,2,35,4,11
	.byte	'AliveSupervisionTimeout',0
	.word	272
	.byte	4,2,35,6,0,4
	.byte	'SoAd_UdpProtocolType',0,9,163,1,3
	.word	2665
	.byte	12
	.word	2515
	.byte	3
	.word	2802
	.byte	12
	.word	2665
	.byte	3
	.word	2812
	.byte	10,9,165,1,9,24,11
	.byte	'GroupId',0
	.word	188
	.byte	1,2,35,0,11
	.byte	'CtrlFlag',0
	.word	188
	.byte	1,2,35,1,11
	.byte	'FramePriority',0
	.word	188
	.byte	1,2,35,2,11
	.byte	'SoConNum',0
	.word	188
	.byte	1,2,35,3,11
	.byte	'SoConId',0
	.word	188
	.byte	1,2,35,4,11
	.byte	'IpAddrAssignChgNum',0
	.word	188
	.byte	1,2,35,5,11
	.byte	'LocalAddrId',0
	.word	188
	.byte	1,2,35,6,11
	.byte	'LocalPort',0
	.word	235
	.byte	2,2,35,8,11
	.byte	'IpAddrAssignChgList',0
	.word	2158
	.byte	4,2,35,12,11
	.byte	'TcpProtocolPtr',0
	.word	2807
	.byte	4,2,35,16,11
	.byte	'UdpProtocolPtr',0
	.word	2817
	.byte	4,2,35,20,0,4
	.byte	'SoAd_SocketConnectionGroupType',0,9,178,1,3
	.word	2822
	.byte	12
	.word	188
	.byte	3
	.word	3107
	.byte	10,9,180,1,9,12,11
	.byte	'CtrlFlag',0
	.word	188
	.byte	1,2,35,0,11
	.byte	'PduRouteDestNum',0
	.word	188
	.byte	1,2,35,1,11
	.byte	'SocketRouteDestNum',0
	.word	188
	.byte	1,2,35,2,11
	.byte	'PduRouteDestList',0
	.word	3112
	.byte	4,2,35,4,11
	.byte	'SocketRouteDestList',0
	.word	3112
	.byte	4,2,35,8,0,4
	.byte	'SoAd_RoutingGroupType',0,9,187,1,3
	.word	3117
	.byte	10,9,189,1,9,6,11
	.byte	'ULType',0
	.word	188
	.byte	1,2,35,0,11
	.byte	'ULIndex',0
	.word	1873
	.byte	1,2,35,1,11
	.byte	'CtrlFlag',0
	.word	188
	.byte	1,2,35,2,11
	.byte	'RouteDestNum',0
	.word	188
	.byte	1,2,35,3,11
	.byte	'RouteDestId',0
	.word	188
	.byte	1,2,35,4,11
	.byte	'TxPduId',0
	.word	188
	.byte	1,2,35,5,0,4
	.byte	'SoAd_PduRouteType',0,9,204,1,3
	.word	3281
	.byte	3
	.word	1797
	.byte	10,9,206,1,9,20,11
	.byte	'TxPduHeaderId',0
	.word	272
	.byte	4,2,35,0,11
	.byte	'SoConNum',0
	.word	188
	.byte	1,2,35,4,11
	.byte	'SoConId',0
	.word	188
	.byte	1,2,35,5,11
	.byte	'PduRouteId',0
	.word	188
	.byte	1,2,35,6,11
	.byte	'UdpTriggerMode',0
	.word	188
	.byte	1,2,35,7,11
	.byte	'UdpTriggerTimeout',0
	.word	235
	.byte	2,2,35,8,11
	.byte	'RoutingCtrlList',0
	.word	3426
	.byte	4,2,35,12,11
	.byte	'IfTriggerList',0
	.word	465
	.byte	4,2,35,16,0,4
	.byte	'SoAd_PduRouteDestType',0,9,217,1,3
	.word	3431
	.byte	10,9,219,1,9,16,11
	.byte	'RxPduHeaderId',0
	.word	272
	.byte	4,2,35,0,11
	.byte	'ULType',0
	.word	188
	.byte	1,2,35,4,11
	.byte	'ULIndex',0
	.word	1873
	.byte	1,2,35,5,11
	.byte	'SoConNum',0
	.word	188
	.byte	1,2,35,6,11
	.byte	'SoConId',0
	.word	188
	.byte	1,2,35,7,11
	.byte	'RxPduId',0
	.word	188
	.byte	1,2,35,8,11
	.byte	'RoutingCtrlList',0
	.word	3426
	.byte	4,2,35,12,0,4
	.byte	'SoAd_SocketRouteType',0,9,236,1,3
	.word	3646
	.byte	12
	.word	3431
	.byte	3
	.word	3816
	.byte	10,9,155,2,9,24,11
	.byte	'State',0
	.word	188
	.byte	1,2,35,0,11
	.byte	'Timer',0
	.word	235
	.byte	2,2,35,2,11
	.byte	'BufferLength',0
	.word	235
	.byte	2,2,35,4,11
	.byte	'BufferOffset',0
	.word	235
	.byte	2,2,35,6,11
	.byte	'UdpTxBuffer',0
	.word	465
	.byte	4,2,35,8,11
	.byte	'TotalTxLength',0
	.word	235
	.byte	2,2,35,12,11
	.byte	'UsedTxLength',0
	.word	235
	.byte	2,2,35,14,11
	.byte	'IfTxDataBuffer',0
	.word	3112
	.byte	4,2,35,16,11
	.byte	'PduRouteDestPtr',0
	.word	3821
	.byte	4,2,35,20,0,4
	.byte	'SoAd_TxSessionType',0,9,177,2,3
	.word	3826
	.byte	12
	.word	3646
	.byte	3
	.word	4050
	.byte	10,9,180,2,9,8,11
	.byte	'PduLength',0
	.word	235
	.byte	2,2,35,0,11
	.byte	'RemainLength',0
	.word	235
	.byte	2,2,35,2,11
	.byte	'SocketRoutePtr',0
	.word	4055
	.byte	4,2,35,4,0,4
	.byte	'SoAd_RxPduInfoType',0,9,185,2,3
	.word	4060
	.byte	10,9,187,2,9,12,11
	.byte	'TotalLength',0
	.word	235
	.byte	2,2,35,0,11
	.byte	'In',0
	.word	235
	.byte	2,2,35,2,11
	.byte	'Out',0
	.word	235
	.byte	2,2,35,4,11
	.byte	'BufferPtr',0
	.word	465
	.byte	4,2,35,8,0,4
	.byte	'SoAd_RxFifoType',0,9,193,2,3
	.word	4160
	.byte	10,9,195,2,9,8,11
	.byte	'TotalLength',0
	.word	235
	.byte	2,2,35,0,11
	.byte	'UsedLength',0
	.word	235
	.byte	2,2,35,2,11
	.byte	'BufferPtr',0
	.word	465
	.byte	4,2,35,4,0,4
	.byte	'SoAd_RxBufferType',0,9,200,2,3
	.word	4257
	.byte	8,8
	.word	188
	.byte	9,7,0,10,9,202,2,9,48,11
	.byte	'State',0
	.word	188
	.byte	1,2,35,0,11
	.byte	'ValidHeaderLen',0
	.word	188
	.byte	1,2,35,1,11
	.byte	'PduHeader',0
	.word	4351
	.byte	8,2,35,2,11
	.byte	'RxPduInfo',0
	.word	4060
	.byte	8,2,35,12,11
	.byte	'ProcessPduInfo',0
	.word	4060
	.byte	8,2,35,20,11
	.byte	'IfBuffer',0
	.word	4257
	.byte	8,2,35,28,11
	.byte	'TpBuffer',0
	.word	4160
	.byte	12,2,35,36,0,4
	.byte	'SoAd_RxSessionType',0,9,216,2,3
	.word	4360
	.byte	4
	.byte	'u8_t',0,10,61,25
	.word	188
	.byte	0
	.sdecl	'.debug_abbrev',debug
	.sect	'.debug_abbrev'
.L4:
	.byte	1,17,1,3,8,37,8,27,8,19,15,128,70,12,16,6,0,0,2,21,0,54,15,0,0,3,15,0,73,19,0,0,4,22,0,3,8,58,15,59,15
	.byte	57,15,73,19,0,0,5,36,0,3,8,11,15,62,15,0,0,6,4,1,58,15,59,15,57,15,11,15,0,0,7,40,0,3,8,28,13,0,0,8,1
	.byte	1,11,15,73,19,0,0,9,33,0,47,15,0,0,10,19,1,58,15,59,15,57,15,11,15,0,0,11,13,0,3,8,73,19,11,15,56,9,0
	.byte	0,12,38,0,73,19,0,0,0
	.sdecl	'.debug_line',debug
	.sect	'.debug_line'
.L5:
	.word	.L7-.L6
.L6:
	.half	3
	.word	.L9-.L8
.L8:
	.byte	2,1,-4,9,10,0,1,1,1,1,0,0,0,1
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Platform',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\Config',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\Mcal\\Infra_Prod\\Autosar_Srv',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\SoAd',0
	.byte	'F:\\LC_SWC_Projiectend\\TC397_PROJECT_NEW\\TC397_DemoProj\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\arch',0,0
	.byte	'..\\EAS\\BSW\\TcpIp\\lwip-2.1.2\\api\\netdb.c',0,0,0,0
	.byte	'Platform_Types.h',0,1,0,0
	.byte	'Std_Types.h',0,1,0,0
	.byte	'ComStack_Types_Cfg.h',0,2,0,0
	.byte	'ComStack_Types.h',0,3,0,0
	.byte	'TcpIp_GeneratedTypes.h',0,2,0,0
	.byte	'TcpIp_Types.h',0,4,0,0
	.byte	'SoAd_GeneratedTypes.h',0,2,0,0
	.byte	'SoAd_Types.h',0,5,0,0
	.byte	'cc.h',0,6,0,0,0
.L9:
.L7:

; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	     1  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	     2   * @file
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	     3   * API functions for name resolving
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	     4   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	     5   * @defgroup netdbapi NETDB API
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	     6   * @ingroup socket
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	     7   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	     8  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	     9  /*
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    10   * Redistribution and use in source and binary forms, with or without modification,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    11   * are permitted provided that the following conditions are met:
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    12   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    13   * 1. Redistributions of source code must retain the above copyright notice,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    14   *    this list of conditions and the following disclaimer.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    15   * 2. Redistributions in binary form must reproduce the above copyright notice,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    16   *    this list of conditions and the following disclaimer in the documentation
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    17   *    and/or other materials provided with the distribution.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    18   * 3. The name of the author may not be used to endorse or promote products
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    19   *    derived from this software without specific prior written permission.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    20   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    21   * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    22   * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    23   * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    24   * SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    25   * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    26   * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    27   * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    28   * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    29   * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    30   * OF SUCH DAMAGE.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    31   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    32   * This file is part of the lwIP TCP/IP stack.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    33   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    34   * Author: Simon Goldschmidt
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    35   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    36   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    37  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    38  #include "lwip/netdb.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    39  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    40  #if LWIP_DNS && LWIP_SOCKET
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    41  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    42  #include "lwip/err.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    43  #include "lwip/mem.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    44  #include "lwip/memp.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    45  #include "lwip/ip_addr.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    46  #include "lwip/api.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    47  #include "lwip/dns.h"
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    48  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    49  #include <string.h> /* memset */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    50  #include <stdlib.h> /* atoi */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    51  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    52  /** helper struct for gethostbyname_r to access the char* buffer */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    53  struct gethostbyname_r_helper {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    54    ip_addr_t *addr_list[2];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    55    ip_addr_t addr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    56    char *aliases;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    57  };
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    58  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    59  /** h_errno is exported in netdb.h for access by applications. */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    60  #if LWIP_DNS_API_DECLARE_H_ERRNO
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    61  int h_errno;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    62  #endif /* LWIP_DNS_API_DECLARE_H_ERRNO */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    63  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    64  /** define "hostent" variables storage: 0 if we use a static (but unprotected)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    65   * set of variables for lwip_gethostbyname, 1 if we use a local storage */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    66  #ifndef LWIP_DNS_API_HOSTENT_STORAGE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    67  #define LWIP_DNS_API_HOSTENT_STORAGE 0
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    68  #endif
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    69  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    70  /** define "hostent" variables storage */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    71  #if LWIP_DNS_API_HOSTENT_STORAGE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    72  #define HOSTENT_STORAGE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    73  #else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    74  #define HOSTENT_STORAGE static
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    75  #endif /* LWIP_DNS_API_STATIC_HOSTENT */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    76  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    77  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    78   * Returns an entry containing addresses of address family AF_INET
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    79   * for the host with name name.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    80   * Due to dns_gethostbyname limitations, only one address is returned.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    81   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    82   * @param name the hostname to resolve
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    83   * @return an entry containing addresses of address family AF_INET
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    84   *         for the host with name name
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    85   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    86  struct hostent *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    87  lwip_gethostbyname(const char *name)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    88  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    89    err_t err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    90    ip_addr_t addr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    91  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    92    /* buffer variables for lwip_gethostbyname() */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    93    HOSTENT_STORAGE struct hostent s_hostent;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    94    HOSTENT_STORAGE char *s_aliases;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    95    HOSTENT_STORAGE ip_addr_t s_hostent_addr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    96    HOSTENT_STORAGE ip_addr_t *s_phostent_addr[2];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    97    HOSTENT_STORAGE char s_hostname[DNS_MAX_NAME_LENGTH + 1];
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    98  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	    99    /* query host IP address */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   100    err = netconn_gethostbyname(name, &addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   101    if (err != ERR_OK) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   102      LWIP_DEBUGF(DNS_DEBUG, ("lwip_gethostbyname(%s) failed, err=%d\n", name, err));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   103      h_errno = HOST_NOT_FOUND;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   104      return NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   105    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   106  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   107    /* fill hostent */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   108    s_hostent_addr = addr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   109    s_phostent_addr[0] = &s_hostent_addr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   110    s_phostent_addr[1] = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   111    strncpy(s_hostname, name, DNS_MAX_NAME_LENGTH);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   112    s_hostname[DNS_MAX_NAME_LENGTH] = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   113    s_hostent.h_name = s_hostname;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   114    s_aliases = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   115    s_hostent.h_aliases = &s_aliases;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   116    s_hostent.h_addrtype = AF_INET;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   117    s_hostent.h_length = sizeof(ip_addr_t);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   118    s_hostent.h_addr_list = (char **)&s_phostent_addr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   119  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   120  #if DNS_DEBUG
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   121    /* dump hostent */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   122    LWIP_DEBUGF(DNS_DEBUG, ("hostent.h_name           == %s\n", s_hostent.h_name));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   123    LWIP_DEBUGF(DNS_DEBUG, ("hostent.h_aliases        == %p\n", (void *)s_hostent.h_aliases));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   124    /* h_aliases are always empty */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   125    LWIP_DEBUGF(DNS_DEBUG, ("hostent.h_addrtype       == %d\n", s_hostent.h_addrtype));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   126    LWIP_DEBUGF(DNS_DEBUG, ("hostent.h_length         == %d\n", s_hostent.h_length));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   127    LWIP_DEBUGF(DNS_DEBUG, ("hostent.h_addr_list      == %p\n", (void *)s_hostent.h_addr_list));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   128    if (s_hostent.h_addr_list != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   129      u8_t idx;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   130      for (idx = 0; s_hostent.h_addr_list[idx]; idx++) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   131        LWIP_DEBUGF(DNS_DEBUG, ("hostent.h_addr_list[%i]   == %p\n", idx, s_hostent.h_addr_list[idx]));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   132        LWIP_DEBUGF(DNS_DEBUG, ("hostent.h_addr_list[%i]-> == %s\n", idx, ipaddr_ntoa((ip_addr_t *)s_hostent.h_addr_list[idx])));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   133      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   134    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   135  #endif /* DNS_DEBUG */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   136  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   137  #if LWIP_DNS_API_HOSTENT_STORAGE
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   138    /* this function should return the "per-thread" hostent after copy from s_hostent */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   139    return sys_thread_hostent(&s_hostent);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   140  #else
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   141    return &s_hostent;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   142  #endif /* LWIP_DNS_API_HOSTENT_STORAGE */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   143  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   144  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   145  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   146   * Thread-safe variant of lwip_gethostbyname: instead of using a static
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   147   * buffer, this function takes buffer and errno pointers as arguments
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   148   * and uses these for the result.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   149   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   150   * @param name the hostname to resolve
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   151   * @param ret pre-allocated struct where to store the result
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   152   * @param buf pre-allocated buffer where to store additional data
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   153   * @param buflen the size of buf
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   154   * @param result pointer to a hostent pointer that is set to ret on success
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   155   *               and set to zero on error
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   156   * @param h_errnop pointer to an int where to store errors (instead of modifying
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   157   *                 the global h_errno)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   158   * @return 0 on success, non-zero on error, additional error information
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   159   *         is stored in *h_errnop instead of h_errno to be thread-safe
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   160   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   161  int
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   162  lwip_gethostbyname_r(const char *name, struct hostent *ret, char *buf,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   163                       size_t buflen, struct hostent **result, int *h_errnop)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   164  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   165    err_t err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   166    struct gethostbyname_r_helper *h;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   167    char *hostname;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   168    size_t namelen;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   169    int lh_errno;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   170  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   171    if (h_errnop == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   172      /* ensure h_errnop is never NULL */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   173      h_errnop = &lh_errno;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   174    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   175  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   176    if (result == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   177      /* not all arguments given */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   178      *h_errnop = EINVAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   179      return -1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   180    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   181    /* first thing to do: set *result to nothing */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   182    *result = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   183    if ((name == NULL) || (ret == NULL) || (buf == NULL)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   184      /* not all arguments given */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   185      *h_errnop = EINVAL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   186      return -1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   187    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   188  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   189    namelen = strlen(name);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   190    if (buflen < (sizeof(struct gethostbyname_r_helper) + LWIP_MEM_ALIGN_BUFFER(namelen + 1))) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   191      /* buf can't hold the data needed + a copy of name */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   192      *h_errnop = ERANGE;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   193      return -1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   194    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   195  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   196    h = (struct gethostbyname_r_helper *)LWIP_MEM_ALIGN(buf);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   197    hostname = ((char *)h) + sizeof(struct gethostbyname_r_helper);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   198  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   199    /* query host IP address */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   200    err = netconn_gethostbyname(name, &h->addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   201    if (err != ERR_OK) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   202      LWIP_DEBUGF(DNS_DEBUG, ("lwip_gethostbyname(%s) failed, err=%d\n", name, err));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   203      *h_errnop = HOST_NOT_FOUND;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   204      return -1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   205    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   206  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   207    /* copy the hostname into buf */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   208    MEMCPY(hostname, name, namelen);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   209    hostname[namelen] = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   210  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   211    /* fill hostent */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   212    h->addr_list[0] = &h->addr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   213    h->addr_list[1] = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   214    h->aliases = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   215    ret->h_name = hostname;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   216    ret->h_aliases = &h->aliases;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   217    ret->h_addrtype = AF_INET;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   218    ret->h_length = sizeof(ip_addr_t);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   219    ret->h_addr_list = (char **)&h->addr_list;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   220  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   221    /* set result != NULL */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   222    *result = ret;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   223  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   224    /* return success */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   225    return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   226  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   227  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   228  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   229   * Frees one or more addrinfo structures returned by getaddrinfo(), along with
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   230   * any additional storage associated with those structures. If the ai_next field
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   231   * of the structure is not null, the entire list of structures is freed.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   232   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   233   * @param ai struct addrinfo to free
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   234   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   235  void
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   236  lwip_freeaddrinfo(struct addrinfo *ai)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   237  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   238    struct addrinfo *next;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   239  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   240    while (ai != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   241      next = ai->ai_next;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   242      memp_free(MEMP_NETDB, ai);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   243      ai = next;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   244    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   245  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   246  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   247  /**
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   248   * Translates the name of a service location (for example, a host name) and/or
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   249   * a service name and returns a set of socket addresses and associated
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   250   * information to be used in creating a socket with which to address the
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   251   * specified service.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   252   * Memory for the result is allocated internally and must be freed by calling
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   253   * lwip_freeaddrinfo()!
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   254   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   255   * Due to a limitation in dns_gethostbyname, only the first address of a
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   256   * host is returned.
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   257   * Also, service names are not supported (only port numbers)!
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   258   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   259   * @param nodename descriptive name or address string of the host
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   260   *                 (may be NULL -> local address)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   261   * @param servname port number as string of NULL
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   262   * @param hints structure containing input values that set socktype and protocol
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   263   * @param res pointer to a pointer where to store the result (set to NULL on failure)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   264   * @return 0 on success, non-zero on failure
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   265   *
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   266   * @todo: implement AI_V4MAPPED, AI_ADDRCONFIG
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   267   */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   268  int
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   269  lwip_getaddrinfo(const char *nodename, const char *servname,
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   270                   const struct addrinfo *hints, struct addrinfo **res)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   271  {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   272    err_t err;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   273    ip_addr_t addr;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   274    struct addrinfo *ai;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   275    struct sockaddr_storage *sa = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   276    int port_nr = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   277    size_t total_size;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   278    size_t namelen = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   279    int ai_family;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   280  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   281    if (res == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   282      return EAI_FAIL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   283    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   284    *res = NULL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   285    if ((nodename == NULL) && (servname == NULL)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   286      return EAI_NONAME;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   287    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   288  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   289    if (hints != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   290      ai_family = hints->ai_family;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   291      if ((ai_family != AF_UNSPEC)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   292  #if LWIP_IPV4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   293          && (ai_family != AF_INET)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   294  #endif /* LWIP_IPV4 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   295  #if LWIP_IPV6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   296          && (ai_family != AF_INET6)
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   297  #endif /* LWIP_IPV6 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   298         ) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   299        return EAI_FAMILY;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   300      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   301    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   302      ai_family = AF_UNSPEC;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   303    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   304  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   305    if (servname != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   306      /* service name specified: convert to port number
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   307       * @todo?: currently, only ASCII integers (port numbers) are supported (AI_NUMERICSERV)! */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   308      port_nr = atoi(servname);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   309      if ((port_nr <= 0) || (port_nr > 0xffff)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   310        return EAI_SERVICE;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   311      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   312    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   313  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   314    if (nodename != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   315      /* service location specified, try to resolve */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   316      if ((hints != NULL) && (hints->ai_flags & AI_NUMERICHOST)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   317        /* no DNS lookup, just parse for an address string */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   318        if (!ipaddr_aton(nodename, &addr)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   319          return EAI_NONAME;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   320        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   321  #if LWIP_IPV4 && LWIP_IPV6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   322        if ((IP_IS_V6_VAL(addr) && ai_family == AF_INET) ||
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   323            (IP_IS_V4_VAL(addr) && ai_family == AF_INET6)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   324          return EAI_NONAME;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   325        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   326  #endif /* LWIP_IPV4 && LWIP_IPV6 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   327      } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   328  #if LWIP_IPV4 && LWIP_IPV6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   329        /* AF_UNSPEC: prefer IPv4 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   330        u8_t type = NETCONN_DNS_IPV4_IPV6;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   331        if (ai_family == AF_INET) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   332          type = NETCONN_DNS_IPV4;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   333        } else if (ai_family == AF_INET6) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   334          type = NETCONN_DNS_IPV6;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   335        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   336  #endif /* LWIP_IPV4 && LWIP_IPV6 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   337        err = netconn_gethostbyname_addrtype(nodename, &addr, type);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   338        if (err != ERR_OK) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   339          return EAI_FAIL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   340        }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   341      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   342    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   343      /* service location specified, use loopback address */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   344      if ((hints != NULL) && (hints->ai_flags & AI_PASSIVE)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   345        ip_addr_set_any_val(ai_family == AF_INET6, addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   346      } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   347        ip_addr_set_loopback_val(ai_family == AF_INET6, addr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   348      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   349    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   350  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   351    total_size = sizeof(struct addrinfo) + sizeof(struct sockaddr_storage);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   352    if (nodename != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   353      namelen = strlen(nodename);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   354      if (namelen > DNS_MAX_NAME_LENGTH) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   355        /* invalid name length */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   356        return EAI_FAIL;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   357      }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   358      LWIP_ASSERT("namelen is too long", total_size + namelen + 1 > total_size);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   359      total_size += namelen + 1;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   360    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   361    /* If this fails, please report to lwip-devel! :-) */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   362    LWIP_ASSERT("total_size <= NETDB_ELEM_SIZE: please report this!",
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   363                total_size <= NETDB_ELEM_SIZE);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   364    ai = (struct addrinfo *)memp_malloc(MEMP_NETDB);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   365    if (ai == NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   366      return EAI_MEMORY;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   367    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   368    memset(ai, 0, total_size);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   369    /* cast through void* to get rid of alignment warnings */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   370    sa = (struct sockaddr_storage *)(void *)((u8_t *)ai + sizeof(struct addrinfo));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   371    if (IP_IS_V6_VAL(addr)) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   372  #if LWIP_IPV6
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   373      struct sockaddr_in6 *sa6 = (struct sockaddr_in6 *)sa;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   374      /* set up sockaddr */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   375      inet6_addr_from_ip6addr(&sa6->sin6_addr, ip_2_ip6(&addr));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   376      sa6->sin6_family = AF_INET6;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   377      sa6->sin6_len = sizeof(struct sockaddr_in6);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   378      sa6->sin6_port = lwip_htons((u16_t)port_nr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   379      sa6->sin6_scope_id = ip6_addr_zone(ip_2_ip6(&addr));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   380      ai->ai_family = AF_INET6;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   381  #endif /* LWIP_IPV6 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   382    } else {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   383  #if LWIP_IPV4
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   384      struct sockaddr_in *sa4 = (struct sockaddr_in *)sa;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   385      /* set up sockaddr */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   386      inet_addr_from_ip4addr(&sa4->sin_addr, ip_2_ip4(&addr));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   387      sa4->sin_family = AF_INET;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   388      sa4->sin_len = sizeof(struct sockaddr_in);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   389      sa4->sin_port = lwip_htons((u16_t)port_nr);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   390      ai->ai_family = AF_INET;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   391  #endif /* LWIP_IPV4 */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   392    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   393  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   394    /* set up addrinfo */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   395    if (hints != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   396      /* copy socktype & protocol from hints if specified */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   397      ai->ai_socktype = hints->ai_socktype;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   398      ai->ai_protocol = hints->ai_protocol;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   399    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   400    if (nodename != NULL) {
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   401      /* copy nodename to canonname if specified */
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   402      ai->ai_canonname = ((char *)ai + sizeof(struct addrinfo) + sizeof(struct sockaddr_storage));
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   403      MEMCPY(ai->ai_canonname, nodename, namelen);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   404      ai->ai_canonname[namelen] = 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   405    }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   406    ai->ai_addrlen = sizeof(struct sockaddr_storage);
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   407    ai->ai_addr = (struct sockaddr *)sa;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   408  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   409    *res = ai;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   410  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   411    return 0;
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   412  }
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   413  
; ..\EAS\BSW\TcpIp\lwip-2.1.2\api\netdb.c	   414  #endif /* LWIP_DNS && LWIP_SOCKET */

	; Module end
